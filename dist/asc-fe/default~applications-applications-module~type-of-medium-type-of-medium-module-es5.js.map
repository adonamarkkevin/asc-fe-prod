{"version":3,"sources":["webpack:///src/app/modules/pages/maintenance/type-of-medium/type-of-medium.component.html","webpack:///src/app/modules/pages/maintenance/type-of-medium/type-of-medium.component.ts","webpack:///src/app/modules/pages/maintenance/type-of-medium/type-of-medium.component.scss"],"names":["TypeOfMediumComponent","apiService","formBuilder","sweetAlertService","displayedColumns","statusList","typeOfMedium","typeOfMediumList","typeOfMainDocumentList","typeOfClearanceList","warningMsg","getList","setFormValidator","initValue","executionEnable","languageEnable","lengthEnable","multimedia","multimediaMoving","multimediaStatic","othersEnable","singlemedia","sizeLengthEnable","widthEnable","findAll","subscribe","res","responseData","data","map","val","enabledFields","endsWith","substring","length","dataSource","paginator","formListComponent","sort","getTypeOfMainDocumentList","getTypeOfClearanceList","typeOfMainDocuments","typeOfClearance","console","log","validateInput","save","undefined","success","err","error","resetFormValidator","findById","idForUpdate","update","status","ACTIVE","typeOfMediumForm","group","typeOfMainDocument","required","medium","markAsUntouched","markAsPristine","value","selected","clearanceType","fire","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","deleteById","id","customSuccessMessage","selector","template"],"mappings":"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","file":"default~applications-applications-module~type-of-medium-type-of-medium-module-es5.js","sourcesContent":["export default \"<form>\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12 title\\\">\\r\\n        <mat-label>\\r\\n          <mat-icon>devices_other</mat-icon> Type of Medium\\r\\n        </mat-label>\\r\\n      </div>\\r\\n    </div>\\r\\n    <hr>\\r\\n\\r\\n    <form [formGroup]=\\\"typeOfMediumForm\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\">\\r\\n          <mat-label>Type Of Main Document <span class=\\\"required-field\\\">*</span></mat-label>\\r\\n          <mat-select [(ngModel)]=\\\"typeOfMedium.typeOfMainDocument\\\" name=\\\"typeOfMainDocument\\\"\\r\\n            formControlName=\\\"typeOfMainDocument\\\" [compareWith]=\\\"compareTypeOfMainDocument\\\">\\r\\n            <mat-option *ngFor=\\\"let i of typeOfMainDocumentList\\\" [value]=\\\"i\\\">\\r\\n              {{i.typeOfMainDocument}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n\\r\\n        <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\">\\r\\n          <mat-label>Type of Medium <span class=\\\"required-field\\\">*</span></mat-label>\\r\\n          <input matInput [(ngModel)]=\\\"typeOfMedium.description\\\" name=\\\"medium\\\" formControlName=\\\"medium\\\">\\r\\n        </mat-form-field>\\r\\n\\r\\n        <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\">\\r\\n          <mat-label>Type Of Clearance <span class=\\\"required-field\\\">*</span></mat-label>\\r\\n          <mat-select [(ngModel)]=\\\"typeOfMedium.typeOfClearance\\\" name=\\\"typeOfClearance\\\"\\r\\n            formControlName=\\\"typeOfClearance\\\" [compareWith]=\\\"compareTypeOfClearance\\\">\\r\\n            <mat-option *ngFor=\\\"let i of typeOfClearanceList\\\" [value]=\\\"i\\\">\\r\\n              {{i.clearanceType}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n\\r\\n        <mat-form-field class=\\\"col-md-4\\\" appearance=\\\"outline\\\" *ngIf=\\\"typeOfMedium.id\\\">\\r\\n          <mat-label>Status</mat-label>\\r\\n          <mat-select [(ngModel)]=\\\"typeOfMedium.status\\\" name=\\\"status\\\" formControlName=\\\"status\\\">\\r\\n            <mat-option *ngFor=\\\"let i of statusList\\\" [value]=\\\"i.status\\\">\\r\\n              {{i.status}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n\\r\\n      <b class=\\\"row warningMsg\\\" *ngIf=\\\"warningMsg\\\">\\r\\n        <span class=\\\"warning-msg\\\">\\r\\n        <b class=\\\"material-icons\\\">error_outline</b> {{warningMsg}}</span>\\r\\n      </b>\\r\\n\\r\\n      <hr>\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-3\\\"></div>\\r\\n        <mat-slide-toggle class=\\\"col-md-4\\\" [(ngModel)]=\\\"typeOfMedium.singlemedia\\\" [checked]=\\\"typeOfMedium.singlemedia\\\"\\r\\n          color=\\\"warn\\\" formControlName=\\\"singlemedia\\\"><b>Single Media</b>\\r\\n        </mat-slide-toggle>\\r\\n        <mat-slide-toggle class=\\\"col-md-4\\\" [(ngModel)]=\\\"typeOfMedium.multimedia\\\" [checked]=\\\"typeOfMedium.multimedia\\\"\\r\\n          color=\\\"warn\\\" formControlName=\\\"multimedia\\\"><b>Multimedia</b>\\r\\n        </mat-slide-toggle>\\r\\n      </div>\\r\\n\\r\\n      <hr>\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-3\\\"></div>\\r\\n        <mat-slide-toggle class=\\\"col-md-4\\\" [(ngModel)]=\\\"typeOfMedium.multimediaMoving\\\"\\r\\n        [checked]=\\\"typeOfMedium.multimediaMoving\\\" color=\\\"warn\\\" formControlName=\\\"multimediaMoving\\\"><b>Multimedia\\r\\n          Moving</b>\\r\\n        </mat-slide-toggle>\\r\\n        <mat-slide-toggle class=\\\"col-md-4\\\" [(ngModel)]=\\\"typeOfMedium.multimediaStatic\\\"\\r\\n        [checked]=\\\"typeOfMedium.multimediaStatic\\\" color=\\\"warn\\\" formControlName=\\\"multimediaStatic\\\"><b>Multimedia\\r\\n          Static</b>\\r\\n        </mat-slide-toggle>\\r\\n      </div>\\r\\n\\r\\n      <hr>\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-3\\\"></div>\\r\\n        <mat-slide-toggle class=\\\"col-md-4\\\" [(ngModel)]=\\\"typeOfMedium.executionEnable\\\"\\r\\n          [checked]=\\\"typeOfMedium.executionEnable\\\" color=\\\"warn\\\" formControlName=\\\"executionEnable\\\"><b>Execution\\r\\n            Enable</b>\\r\\n        </mat-slide-toggle>\\r\\n        <mat-slide-toggle class=\\\"col-md-4\\\" [(ngModel)]=\\\"typeOfMedium.languageEnable\\\"\\r\\n          [checked]=\\\"typeOfMedium.languageEnable\\\" color=\\\"warn\\\" formControlName=\\\"languageEnable\\\"><b>Language Enable</b>\\r\\n        </mat-slide-toggle>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-3\\\"></div>\\r\\n        <mat-slide-toggle class=\\\"col-md-4\\\" [(ngModel)]=\\\"typeOfMedium.lengthEnable\\\" [checked]=\\\"typeOfMedium.lengthEnable\\\"\\r\\n          color=\\\"warn\\\" formControlName=\\\"lengthEnable\\\"><b>Length Enable</b>\\r\\n        </mat-slide-toggle>\\r\\n        <mat-slide-toggle class=\\\"col-md-4\\\" [(ngModel)]=\\\"typeOfMedium.othersEnable\\\" [checked]=\\\"typeOfMedium.othersEnable\\\"\\r\\n          color=\\\"warn\\\" formControlName=\\\"othersEnable\\\"><b>Others Enable</b>\\r\\n        </mat-slide-toggle>\\r\\n      </div>\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-md-3\\\"></div>\\r\\n        <mat-slide-toggle class=\\\"col-md-4\\\" [(ngModel)]=\\\"typeOfMedium.sizeLengthEnable\\\"\\r\\n        [checked]=\\\"typeOfMedium.sizeLengthEnable\\\" color=\\\"warn\\\" formControlName=\\\"sizeLengthEnable\\\"><b>Size Length\\r\\n          Enable</b>\\r\\n        </mat-slide-toggle>\\r\\n        <mat-slide-toggle class=\\\"col-md-4\\\" [(ngModel)]=\\\"typeOfMedium.widthEnable\\\" [checked]=\\\"typeOfMedium.widthEnable\\\"\\r\\n          color=\\\"warn\\\" formControlName=\\\"widthEnable\\\"><b>Width Enable</b>\\r\\n        </mat-slide-toggle>\\r\\n      </div>\\r\\n    </form>\\r\\n\\r\\n    <app-form-action-buttons [childObject]=\\\"typeOfMedium\\\" [childForm]=\\\"typeOfMediumForm\\\" (saveFunction)=\\\"save()\\\"\\r\\n      (updateFunction)=\\\"update()\\\" (cancelFunction)=\\\"resetFormValidator()\\\" (deleteFunction)=\\\"delete()\\\"></app-form-action-buttons>\\r\\n    <br>\\r\\n    <app-form-list [dataSource]=\\\"dataSource\\\" [displayedColumns]=\\\"displayedColumns\\\"\\r\\n      (selectInListFunction)=\\\"getTypeOfMedium()\\\"></app-form-list>\\r\\n  </div>\\r\\n</form>\\r\\n\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ApiService, SweetAlertService } from '@services';\r\nimport { TypeOfMedium } from '@models';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { COMMON_FUNCTION, ENDPOINTS, STATUSES } from '@shared';\r\nimport { FormListComponent } from '@fragments';\r\nimport { TypeOfMainDocumentComponent } from '../type-of-main-document/type-of-main-document.component';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-type-of-medium',\r\n  templateUrl: './type-of-medium.component.html',\r\n  styleUrls: ['./type-of-medium.component.scss']\r\n})\r\nexport class TypeOfMediumComponent implements OnInit {\r\n\r\n  @ViewChild(FormListComponent) formListComponent: FormListComponent;\r\n  @ViewChild(TypeOfMainDocumentComponent) typeOfMainDocument: TypeOfMainDocumentComponent;\r\n  dataSource: MatTableDataSource<TypeOfMedium>;\r\n  displayedColumns: string[] = ['typeOfMainDocumentObject', 'description', 'enabledFields', 'status'];\r\n  statusList = [...STATUSES];\r\n\r\n  typeOfMedium = new TypeOfMedium();\r\n  typeOfMediumList = [];\r\n  typeOfMainDocumentList = [];\r\n  typeOfClearanceList = [];\r\n  warningMsg = '';\r\n\r\n  typeOfMediumForm: FormGroup;\r\n\r\n  constructor(\r\n    private apiService: ApiService,\r\n    private formBuilder: FormBuilder,\r\n    private sweetAlertService: SweetAlertService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getList();\r\n    this.setFormValidator();\r\n    this.initValue();\r\n  }\r\n\r\n  initValue() {\r\n    this.typeOfMedium.executionEnable = false;\r\n    this.typeOfMedium.languageEnable = false;\r\n    this.typeOfMedium.lengthEnable = false;\r\n    this.typeOfMedium.multimedia = false;\r\n    this.typeOfMedium.multimediaMoving = false;\r\n    this.typeOfMedium.multimediaStatic = false;\r\n    this.typeOfMedium.othersEnable = false;\r\n    this.typeOfMedium.singlemedia = false;\r\n    this.typeOfMedium.sizeLengthEnable = false;\r\n    this.typeOfMedium.widthEnable = false;\r\n  }\r\n\r\n  getList(): void {\r\n    this.apiService.findAll(ENDPOINTS.typeOfMedium).subscribe((res: any) => {\r\n      this.typeOfMediumList = res.responseData.data;\r\n      this.typeOfMediumList.map(val => {\r\n        val.enabledFields = '';\r\n        val.enabledFields = val.executionEnable ? val.enabledFields + 'Execution, ' : val.enabledFields;\r\n        val.enabledFields = val.languageEnable ? val.enabledFields + 'Language, ' : val.enabledFields;\r\n        val.enabledFields = val.lengthEnable ? val.enabledFields + 'Length, ' : val.enabledFields;\r\n        val.enabledFields = val.multimedia ? val.enabledFields + 'Multimedia, ' : val.enabledFields;\r\n        val.enabledFields = val.multimediaMoving ? val.enabledFields + 'Multimedia Moving, ' : val.enabledFields;\r\n        val.enabledFields = val.multimediaStatic ? val.enabledFields + 'Multimedia Static, ' : val.enabledFields;\r\n        val.enabledFields = val.singlemedia ? val.enabledFields + 'Single Media, ' : val.enabledFields;\r\n        val.enabledFields = val.sizeLengthEnable ? val.enabledFields + 'Size Length, ' : val.enabledFields;\r\n        val.enabledFields = val.widthEnable ? val.enabledFields + 'Width, ' : val.enabledFields;\r\n        val.enabledFields = val.othersEnable ? val.enabledFields + 'Others' : val.enabledFields;\r\n\r\n        // will remove excess comma and space\r\n        val.enabledFields = val.enabledFields.endsWith(' ')\r\n          ? val.enabledFields.substring(0, val.enabledFields.length - 2) : val.enabledFields;\r\n      });\r\n      this.dataSource = new MatTableDataSource<TypeOfMedium>(res.responseData.data);\r\n      this.dataSource.paginator = this.formListComponent.paginator;\r\n      this.dataSource.sort = this.formListComponent.sort;\r\n      this.getTypeOfMainDocumentList();\r\n      this.getTypeOfClearanceList();\r\n    });\r\n  }\r\n\r\n  getTypeOfMainDocumentList(): void {\r\n    this.apiService.findAll(ENDPOINTS.typeOfMainDocuments).subscribe((res: any) => {\r\n      this.typeOfMainDocumentList = res.responseData.data;\r\n    });\r\n  }\r\n\r\n  getTypeOfClearanceList(): void {\r\n    this.apiService.findAll(ENDPOINTS.typeOfClearance).subscribe((res: any) => {\r\n      this.typeOfClearanceList = res.responseData.data;\r\n      console.log(this.typeOfClearanceList);\r\n\r\n    });\r\n  }\r\n\r\n  validateInput() {\r\n    this.warningMsg = '';\r\n    if (!this.typeOfMedium.singlemedia && !this.typeOfMedium.multimedia) {\r\n      this.warningMsg = 'Please toggle Single Media and/or Multimedia';\r\n    } else if (this.typeOfMedium.multimedia && (!this.typeOfMedium.multimediaMoving && !this.typeOfMedium.multimediaStatic)) {\r\n      this.warningMsg = 'Please toggle Moving and/or Static';\r\n    } else if (this.typeOfMedium.singlemedia && !this.typeOfMedium.multimedia &&\r\n       (this.typeOfMedium.multimediaMoving || this.typeOfMedium.multimediaStatic)) {\r\n      this.warningMsg = 'Moving or Static is for Multimedia only';\r\n    }\r\n  }\r\n\r\n  save(): void {\r\n    this.validateInput();\r\n    if (!this.warningMsg) {\r\n      this.apiService.save(ENDPOINTS.typeOfMedium, this.typeOfMedium).subscribe(\r\n        (res: any) => {\r\n          if (res !== undefined) {\r\n            this.sweetAlertService.success(res);\r\n          }\r\n        }, (err: any) => {\r\n          console.log(err);\r\n          this.sweetAlertService.error(err);\r\n        }, () => {\r\n          // actions after subscription\r\n          this.resetFormValidator();\r\n          this.getList();\r\n        });\r\n    }\r\n  }\r\n\r\n  getTypeOfMedium(): void {\r\n    this.apiService.findById(ENDPOINTS.typeOfMedium, this.formListComponent.idForUpdate).subscribe((res: any) => {\r\n      if (res) {\r\n        this.typeOfMedium = res.responseData.data;\r\n      }\r\n    });\r\n  }\r\n\r\n  update(): void {\r\n    this.validateInput();\r\n    if (!this.warningMsg) {\r\n      this.apiService.update(ENDPOINTS.typeOfMedium, this.typeOfMedium).subscribe(\r\n        (res: any) => {\r\n          if (res !== undefined) {\r\n            this.sweetAlertService.success(res);\r\n          }\r\n        }, (err: any) => {\r\n          this.sweetAlertService.error(err);\r\n        }, () => {\r\n          // actions after subscription\r\n          this.resetFormValidator();\r\n          this.getList();\r\n        });\r\n    }\r\n  }\r\n\r\n  setFormValidator(): void {\r\n    this.typeOfMedium.status = COMMON_FUNCTION.ACTIVE;\r\n    this.typeOfMediumForm = this.formBuilder.group({\r\n      typeOfMainDocument: ['', Validators.required],\r\n      medium: ['', Validators.required],\r\n      status: [''],\r\n      executionEnable: [''],\r\n      languageEnable: [''],\r\n      lengthEnable: [''],\r\n      multimedia: [''],\r\n      multimediaMoving: [''],\r\n      multimediaStatic: [''],\r\n      othersEnable: [''],\r\n      singlemedia: [''],\r\n      sizeLengthEnable: [''],\r\n      widthEnable: [''],\r\n      typeOfClearance: ['', Validators.required],\r\n    });\r\n  }\r\n\r\n  resetFormValidator(): void {\r\n    this.typeOfMedium = new TypeOfMedium();\r\n    this.typeOfMedium.status = COMMON_FUNCTION.ACTIVE;\r\n    this.typeOfMediumForm.markAsUntouched();\r\n    this.typeOfMediumForm.markAsPristine();\r\n  }\r\n\r\n  compareTypeOfMainDocument(value: any, selected: any): boolean {\r\n    if (value && selected) {\r\n      return value.typeOfMainDocument === selected.typeOfMainDocument;\r\n    }\r\n  }\r\n\r\n  compareTypeOfClearance(value: any, selected: any): boolean {\r\n    if (value && selected) {\r\n      return value.clearanceType === selected.clearanceType;\r\n    }\r\n  }\r\n\r\n  delete() {\r\n    Swal.fire({\r\n      text: 'Are you sure you want to delete this type of medium?',\r\n      icon: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Confirm'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.apiService.deleteById(ENDPOINTS.typeOfMedium, this.typeOfMedium.id).subscribe(\r\n          () => {\r\n            this.sweetAlertService.customSuccessMessage('Type of medium successfully deleted.');\r\n            this.resetFormValidator();\r\n            this.getList();\r\n          }\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","export default \".warningMsg {\\n  color: red;\\n  text-align: center;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9wYWdlcy9tYWludGVuYW5jZS90eXBlLW9mLW1lZGl1bS90eXBlLW9mLW1lZGl1bS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFVBQUE7RUFDQSxrQkFBQTtBQUNGIiwiZmlsZSI6InNyYy9hcHAvbW9kdWxlcy9wYWdlcy9tYWludGVuYW5jZS90eXBlLW9mLW1lZGl1bS90eXBlLW9mLW1lZGl1bS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi53YXJuaW5nTXNne1xyXG4gIGNvbG9yOiByZWQ7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG59XHJcbiJdfQ== */\";"]}