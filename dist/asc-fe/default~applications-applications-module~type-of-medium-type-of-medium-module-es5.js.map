{"version":3,"sources":["webpack:///src/app/modules/pages/maintenance/type-of-medium/type-of-medium.component.ts","webpack:///src/app/modules/pages/maintenance/type-of-medium/type-of-medium.component.html"],"names":["TypeOfMediumComponent","apiService","formBuilder","sweetAlertService","displayedColumns","statusList","typeOfMedium","typeOfMediumList","typeOfMainDocumentList","typeOfClearanceList","warningMsg","getList","setFormValidator","initValue","executionEnable","languageEnable","lengthEnable","multimedia","multimediaMoving","multimediaStatic","othersEnable","singlemedia","sizeLengthEnable","widthEnable","findAll","subscribe","res","responseData","data","map","val","enabledFields","endsWith","substring","length","dataSource","paginator","formListComponent","sort","getTypeOfMainDocumentList","getTypeOfClearanceList","typeOfMainDocuments","typeOfClearance","console","log","validateInput","save","undefined","success","err","error","resetFormValidator","findById","idForUpdate","update","status","ACTIVE","typeOfMediumForm","group","typeOfMainDocument","required","medium","markAsUntouched","markAsPristine","value","selected","clearanceType","fire","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","deleteById","id","customSuccessMessage","getTypeOfMedium"],"mappings":"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","file":"default~applications-applications-module~type-of-medium-type-of-medium-module-es5.js","sourcesContent":["import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ApiService, SweetAlertService } from '@services';\r\nimport { TypeOfMedium } from '@models';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { COMMON_FUNCTION, ENDPOINTS, STATUSES } from '@shared';\r\nimport { FormListComponent } from '@fragments';\r\nimport { TypeOfMainDocumentComponent } from '../type-of-main-document/type-of-main-document.component';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-type-of-medium',\r\n  templateUrl: './type-of-medium.component.html',\r\n  styleUrls: ['./type-of-medium.component.scss']\r\n})\r\nexport class TypeOfMediumComponent implements OnInit {\r\n\r\n  @ViewChild(FormListComponent) formListComponent: FormListComponent;\r\n  @ViewChild(TypeOfMainDocumentComponent) typeOfMainDocument: TypeOfMainDocumentComponent;\r\n  dataSource: MatTableDataSource<TypeOfMedium>;\r\n  displayedColumns: string[] = ['typeOfMainDocumentObject', 'description', 'enabledFields', 'status'];\r\n  statusList = [...STATUSES];\r\n\r\n  typeOfMedium = new TypeOfMedium();\r\n  typeOfMediumList = [];\r\n  typeOfMainDocumentList = [];\r\n  typeOfClearanceList = [];\r\n  warningMsg = '';\r\n\r\n  typeOfMediumForm: FormGroup;\r\n\r\n  constructor(\r\n    private apiService: ApiService,\r\n    private formBuilder: FormBuilder,\r\n    private sweetAlertService: SweetAlertService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getList();\r\n    this.setFormValidator();\r\n    this.initValue();\r\n  }\r\n\r\n  initValue() {\r\n    this.typeOfMedium.executionEnable = false;\r\n    this.typeOfMedium.languageEnable = false;\r\n    this.typeOfMedium.lengthEnable = false;\r\n    this.typeOfMedium.multimedia = false;\r\n    this.typeOfMedium.multimediaMoving = false;\r\n    this.typeOfMedium.multimediaStatic = false;\r\n    this.typeOfMedium.othersEnable = false;\r\n    this.typeOfMedium.singlemedia = false;\r\n    this.typeOfMedium.sizeLengthEnable = false;\r\n    this.typeOfMedium.widthEnable = false;\r\n  }\r\n\r\n  getList(): void {\r\n    this.apiService.findAll(ENDPOINTS.typeOfMedium).subscribe((res: any) => {\r\n      this.typeOfMediumList = res.responseData.data;\r\n      this.typeOfMediumList.map(val => {\r\n        val.enabledFields = '';\r\n        val.enabledFields = val.executionEnable ? val.enabledFields + 'Execution, ' : val.enabledFields;\r\n        val.enabledFields = val.languageEnable ? val.enabledFields + 'Language, ' : val.enabledFields;\r\n        val.enabledFields = val.lengthEnable ? val.enabledFields + 'Length, ' : val.enabledFields;\r\n        val.enabledFields = val.multimedia ? val.enabledFields + 'Multimedia, ' : val.enabledFields;\r\n        val.enabledFields = val.multimediaMoving ? val.enabledFields + 'Multimedia Moving, ' : val.enabledFields;\r\n        val.enabledFields = val.multimediaStatic ? val.enabledFields + 'Multimedia Static, ' : val.enabledFields;\r\n        val.enabledFields = val.singlemedia ? val.enabledFields + 'Single Media, ' : val.enabledFields;\r\n        val.enabledFields = val.sizeLengthEnable ? val.enabledFields + 'Size Length, ' : val.enabledFields;\r\n        val.enabledFields = val.widthEnable ? val.enabledFields + 'Width, ' : val.enabledFields;\r\n        val.enabledFields = val.othersEnable ? val.enabledFields + 'Others' : val.enabledFields;\r\n\r\n        // will remove excess comma and space\r\n        val.enabledFields = val.enabledFields.endsWith(' ')\r\n          ? val.enabledFields.substring(0, val.enabledFields.length - 2) : val.enabledFields;\r\n      });\r\n      this.dataSource = new MatTableDataSource<TypeOfMedium>(res.responseData.data);\r\n      this.dataSource.paginator = this.formListComponent.paginator;\r\n      this.dataSource.sort = this.formListComponent.sort;\r\n      this.getTypeOfMainDocumentList();\r\n      this.getTypeOfClearanceList();\r\n    });\r\n  }\r\n\r\n  getTypeOfMainDocumentList(): void {\r\n    this.apiService.findAll(ENDPOINTS.typeOfMainDocuments).subscribe((res: any) => {\r\n      this.typeOfMainDocumentList = res.responseData.data;\r\n    });\r\n  }\r\n\r\n  getTypeOfClearanceList(): void {\r\n    this.apiService.findAll(ENDPOINTS.typeOfClearance).subscribe((res: any) => {\r\n      this.typeOfClearanceList = res.responseData.data;\r\n      console.log(this.typeOfClearanceList);\r\n\r\n    });\r\n  }\r\n\r\n  validateInput() {\r\n    this.warningMsg = '';\r\n    if (!this.typeOfMedium.singlemedia && !this.typeOfMedium.multimedia) {\r\n      this.warningMsg = 'Please toggle Single Media and/or Multimedia';\r\n    } else if (this.typeOfMedium.multimedia && (!this.typeOfMedium.multimediaMoving && !this.typeOfMedium.multimediaStatic)) {\r\n      this.warningMsg = 'Please toggle Moving and/or Static';\r\n    } else if (this.typeOfMedium.singlemedia && !this.typeOfMedium.multimedia &&\r\n       (this.typeOfMedium.multimediaMoving || this.typeOfMedium.multimediaStatic)) {\r\n      this.warningMsg = 'Moving or Static is for Multimedia only';\r\n    }\r\n  }\r\n\r\n  save(): void {\r\n    this.validateInput();\r\n    if (!this.warningMsg) {\r\n      this.apiService.save(ENDPOINTS.typeOfMedium, this.typeOfMedium).subscribe(\r\n        (res: any) => {\r\n          if (res !== undefined) {\r\n            this.sweetAlertService.success(res);\r\n          }\r\n        }, (err: any) => {\r\n          console.log(err);\r\n          this.sweetAlertService.error(err);\r\n        }, () => {\r\n          // actions after subscription\r\n          this.resetFormValidator();\r\n          this.getList();\r\n        });\r\n    }\r\n  }\r\n\r\n  getTypeOfMedium(): void {\r\n    this.apiService.findById(ENDPOINTS.typeOfMedium, this.formListComponent.idForUpdate).subscribe((res: any) => {\r\n      if (res) {\r\n        this.typeOfMedium = res.responseData.data;\r\n      }\r\n    });\r\n  }\r\n\r\n  update(): void {\r\n    this.validateInput();\r\n    if (!this.warningMsg) {\r\n      this.apiService.update(ENDPOINTS.typeOfMedium, this.typeOfMedium).subscribe(\r\n        (res: any) => {\r\n          if (res !== undefined) {\r\n            this.sweetAlertService.success(res);\r\n          }\r\n        }, (err: any) => {\r\n          this.sweetAlertService.error(err);\r\n        }, () => {\r\n          // actions after subscription\r\n          this.resetFormValidator();\r\n          this.getList();\r\n        });\r\n    }\r\n  }\r\n\r\n  setFormValidator(): void {\r\n    this.typeOfMedium.status = COMMON_FUNCTION.ACTIVE;\r\n    this.typeOfMediumForm = this.formBuilder.group({\r\n      typeOfMainDocument: ['', Validators.required],\r\n      medium: ['', Validators.required],\r\n      status: [''],\r\n      executionEnable: [''],\r\n      languageEnable: [''],\r\n      lengthEnable: [''],\r\n      multimedia: [''],\r\n      multimediaMoving: [''],\r\n      multimediaStatic: [''],\r\n      othersEnable: [''],\r\n      singlemedia: [''],\r\n      sizeLengthEnable: [''],\r\n      widthEnable: [''],\r\n      typeOfClearance: ['', Validators.required],\r\n    });\r\n  }\r\n\r\n  resetFormValidator(): void {\r\n    this.typeOfMedium = new TypeOfMedium();\r\n    this.typeOfMedium.status = COMMON_FUNCTION.ACTIVE;\r\n    this.typeOfMediumForm.markAsUntouched();\r\n    this.typeOfMediumForm.markAsPristine();\r\n  }\r\n\r\n  compareTypeOfMainDocument(value: any, selected: any): boolean {\r\n    if (value && selected) {\r\n      return value.typeOfMainDocument === selected.typeOfMainDocument;\r\n    }\r\n  }\r\n\r\n  compareTypeOfClearance(value: any, selected: any): boolean {\r\n    if (value && selected) {\r\n      return value.clearanceType === selected.clearanceType;\r\n    }\r\n  }\r\n\r\n  delete() {\r\n    Swal.fire({\r\n      text: 'Are you sure you want to delete this type of medium?',\r\n      icon: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Confirm'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.apiService.deleteById(ENDPOINTS.typeOfMedium, this.typeOfMedium.id).subscribe(\r\n          () => {\r\n            this.sweetAlertService.customSuccessMessage('Type of medium successfully deleted.');\r\n            this.resetFormValidator();\r\n            this.getList();\r\n          }\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<form>\r\n  <div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12 title\">\r\n        <mat-label>\r\n          <mat-icon>devices_other</mat-icon> Type of Medium\r\n        </mat-label>\r\n      </div>\r\n    </div>\r\n    <hr>\r\n\r\n    <form [formGroup]=\"typeOfMediumForm\">\r\n      <div class=\"row\">\r\n        <mat-form-field class=\"col-md-6\" appearance=\"outline\">\r\n          <mat-label>Type Of Main Document <span class=\"required-field\">*</span></mat-label>\r\n          <mat-select [(ngModel)]=\"typeOfMedium.typeOfMainDocument\" name=\"typeOfMainDocument\"\r\n            formControlName=\"typeOfMainDocument\" [compareWith]=\"compareTypeOfMainDocument\">\r\n            <mat-option *ngFor=\"let i of typeOfMainDocumentList\" [value]=\"i\">\r\n              {{i.typeOfMainDocument}}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field class=\"col-md-6\" appearance=\"outline\">\r\n          <mat-label>Type of Medium <span class=\"required-field\">*</span></mat-label>\r\n          <input matInput [(ngModel)]=\"typeOfMedium.description\" name=\"medium\" formControlName=\"medium\">\r\n        </mat-form-field>\r\n\r\n        <mat-form-field class=\"col-md-6\" appearance=\"outline\">\r\n          <mat-label>Type Of Clearance <span class=\"required-field\">*</span></mat-label>\r\n          <mat-select [(ngModel)]=\"typeOfMedium.typeOfClearance\" name=\"typeOfClearance\"\r\n            formControlName=\"typeOfClearance\" [compareWith]=\"compareTypeOfClearance\">\r\n            <mat-option *ngFor=\"let i of typeOfClearanceList\" [value]=\"i\">\r\n              {{i.clearanceType}}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field class=\"col-md-4\" appearance=\"outline\" *ngIf=\"typeOfMedium.id\">\r\n          <mat-label>Status</mat-label>\r\n          <mat-select [(ngModel)]=\"typeOfMedium.status\" name=\"status\" formControlName=\"status\">\r\n            <mat-option *ngFor=\"let i of statusList\" [value]=\"i.status\">\r\n              {{i.status}}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <b class=\"row warningMsg\" *ngIf=\"warningMsg\">\r\n        <span class=\"warning-msg\">\r\n        <b class=\"material-icons\">error_outline</b> {{warningMsg}}</span>\r\n      </b>\r\n\r\n      <hr>\r\n\r\n      <div class=\"row\">\r\n        <div class=\"col-md-3\"></div>\r\n        <mat-slide-toggle class=\"col-md-4\" [(ngModel)]=\"typeOfMedium.singlemedia\" [checked]=\"typeOfMedium.singlemedia\"\r\n          color=\"warn\" formControlName=\"singlemedia\"><b>Single Media</b>\r\n        </mat-slide-toggle>\r\n        <mat-slide-toggle class=\"col-md-4\" [(ngModel)]=\"typeOfMedium.multimedia\" [checked]=\"typeOfMedium.multimedia\"\r\n          color=\"warn\" formControlName=\"multimedia\"><b>Multimedia</b>\r\n        </mat-slide-toggle>\r\n      </div>\r\n\r\n      <hr>\r\n\r\n      <div class=\"row\">\r\n        <div class=\"col-md-3\"></div>\r\n        <mat-slide-toggle class=\"col-md-4\" [(ngModel)]=\"typeOfMedium.multimediaMoving\"\r\n        [checked]=\"typeOfMedium.multimediaMoving\" color=\"warn\" formControlName=\"multimediaMoving\"><b>Multimedia\r\n          Moving</b>\r\n        </mat-slide-toggle>\r\n        <mat-slide-toggle class=\"col-md-4\" [(ngModel)]=\"typeOfMedium.multimediaStatic\"\r\n        [checked]=\"typeOfMedium.multimediaStatic\" color=\"warn\" formControlName=\"multimediaStatic\"><b>Multimedia\r\n          Static</b>\r\n        </mat-slide-toggle>\r\n      </div>\r\n\r\n      <hr>\r\n\r\n      <div class=\"row\">\r\n        <div class=\"col-md-3\"></div>\r\n        <mat-slide-toggle class=\"col-md-4\" [(ngModel)]=\"typeOfMedium.executionEnable\"\r\n          [checked]=\"typeOfMedium.executionEnable\" color=\"warn\" formControlName=\"executionEnable\"><b>Execution\r\n            Enable</b>\r\n        </mat-slide-toggle>\r\n        <mat-slide-toggle class=\"col-md-4\" [(ngModel)]=\"typeOfMedium.languageEnable\"\r\n          [checked]=\"typeOfMedium.languageEnable\" color=\"warn\" formControlName=\"languageEnable\"><b>Language Enable</b>\r\n        </mat-slide-toggle>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-md-3\"></div>\r\n        <mat-slide-toggle class=\"col-md-4\" [(ngModel)]=\"typeOfMedium.lengthEnable\" [checked]=\"typeOfMedium.lengthEnable\"\r\n          color=\"warn\" formControlName=\"lengthEnable\"><b>Length Enable</b>\r\n        </mat-slide-toggle>\r\n        <mat-slide-toggle class=\"col-md-4\" [(ngModel)]=\"typeOfMedium.othersEnable\" [checked]=\"typeOfMedium.othersEnable\"\r\n          color=\"warn\" formControlName=\"othersEnable\"><b>Others Enable</b>\r\n        </mat-slide-toggle>\r\n      </div>\r\n        <div class=\"row\">\r\n          <div class=\"col-md-3\"></div>\r\n        <mat-slide-toggle class=\"col-md-4\" [(ngModel)]=\"typeOfMedium.sizeLengthEnable\"\r\n        [checked]=\"typeOfMedium.sizeLengthEnable\" color=\"warn\" formControlName=\"sizeLengthEnable\"><b>Size Length\r\n          Enable</b>\r\n        </mat-slide-toggle>\r\n        <mat-slide-toggle class=\"col-md-4\" [(ngModel)]=\"typeOfMedium.widthEnable\" [checked]=\"typeOfMedium.widthEnable\"\r\n          color=\"warn\" formControlName=\"widthEnable\"><b>Width Enable</b>\r\n        </mat-slide-toggle>\r\n      </div>\r\n    </form>\r\n\r\n    <app-form-action-buttons [childObject]=\"typeOfMedium\" [childForm]=\"typeOfMediumForm\" (saveFunction)=\"save()\"\r\n      (updateFunction)=\"update()\" (cancelFunction)=\"resetFormValidator()\" (deleteFunction)=\"delete()\"></app-form-action-buttons>\r\n    <br>\r\n    <app-form-list [dataSource]=\"dataSource\" [displayedColumns]=\"displayedColumns\"\r\n      (selectInListFunction)=\"getTypeOfMedium()\"></app-form-list>\r\n  </div>\r\n</form>\r\n"]}