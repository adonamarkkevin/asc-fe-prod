<<<<<<< HEAD
{"version":3,"sources":["webpack:///src/app/modules/fragments/index.ts","webpack:///src/app/modules/pages/maintenance/number-of-multiple-application-allowed/number-of-multiple-application-allowed-routing.module.ts","webpack:///src/app/modules/pages/maintenance/number-of-multiple-application-allowed/number-of-multiple-application-allowed.component.ts","webpack:///src/app/modules/pages/maintenance/number-of-multiple-application-allowed/number-of-multiple-application-allowed.component.html","webpack:///src/app/modules/pages/maintenance/number-of-multiple-application-allowed/number-of-multiple-application-allowed.module.ts"],"names":["routes","path","component","NumberOfMultipleApplicationAllowedRoutingModule","forChild","NumberOfMultipleApplicationAllowedComponent","apiService","formBuilder","sweetAlertService","validateFieldService","displayedColumns","numberOfMultipleApplicationAllowed","numberOfMultipleApplicationAllowedList","getList","setFormValidator","findAll","noOfMultipleApplicationAllowed","subscribe","res","responseData","data","dataSource","paginator","formListComponent","sort","save","undefined","success","err","error","message","resetFormValidator","update","findById","idForUpdate","numberOfMultipleApplicationAllowedForm","group","minimum","required","maximum","markAsUntouched","markAsPristine","getNumberOfMultipleApplicationAllowed","NumberOfMultipleApplicationAllowedModule"],"mappings":"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","file":"number-of-multiple-application-allowed-number-of-multiple-application-allowed-module-es5.js","sourcesContent":["export * from './form-action-buttons/form-action-buttons.component';\r\nexport * from './form-list/form-list.component';","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { NumberOfMultipleApplicationAllowedComponent } from './number-of-multiple-application-allowed.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: NumberOfMultipleApplicationAllowedComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class NumberOfMultipleApplicationAllowedRoutingModule { }\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { FormListComponent } from '@fragments';\r\nimport { ApiService, SweetAlertService } from '@services';\r\nimport { ENDPOINTS } from '@shared';\r\nimport { NumberOfMultipleApplicationAllowed } from 'app/core/models/numberOfMultipleApplicationAllowed.model';\r\nimport { ValidateFieldService } from 'app/core/services/validate-field.service';\r\n\r\n@Component({\r\n  selector: 'app-number-of-multiple-application-allowed',\r\n  templateUrl: './number-of-multiple-application-allowed.component.html',\r\n  styleUrls: ['./number-of-multiple-application-allowed.component.scss']\r\n})\r\nexport class NumberOfMultipleApplicationAllowedComponent implements OnInit {\r\n  @ViewChild(FormListComponent) formListComponent: FormListComponent;\r\n  dataSource: MatTableDataSource<NumberOfMultipleApplicationAllowed>;\r\n  displayedColumns: string[] = ['minimum', 'maximum'];\r\n\r\n  numberOfMultipleApplicationAllowed = new NumberOfMultipleApplicationAllowed();\r\n  numberOfMultipleApplicationAllowedList = [];\r\n  numberOfMultipleApplicationAllowedForm: FormGroup;\r\n\r\n  constructor(\r\n    private apiService: ApiService,\r\n    private formBuilder: FormBuilder,\r\n    private sweetAlertService: SweetAlertService,\r\n    public validateFieldService: ValidateFieldService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getList();\r\n    this.setFormValidator();\r\n  }\r\n\r\n  getList(): void {\r\n    this.apiService.findAll(ENDPOINTS.noOfMultipleApplicationAllowed).subscribe((res: any) => {\r\n      this.numberOfMultipleApplicationAllowed = res.responseData.data;\r\n      this.dataSource = new MatTableDataSource<NumberOfMultipleApplicationAllowed>(res.responseData.data);\r\n      this.dataSource.paginator = this.formListComponent.paginator;\r\n      this.dataSource.sort = this.formListComponent.sort;\r\n    });\r\n  }\r\n\r\n  save():void {\r\n    this.apiService.save(ENDPOINTS.noOfMultipleApplicationAllowed, this.numberOfMultipleApplicationAllowed).subscribe(\r\n      (res: any) => {\r\n        if (res !== undefined) {\r\n          this.sweetAlertService.success(res);\r\n        }\r\n      }, (err: any) => {\r\n        err.error.message = 'Please enter numeric values only';\r\n        this.sweetAlertService.error(err);\r\n      }, () => {\r\n        // actions after subscription\r\n        this.resetFormValidator();\r\n        this.getList();\r\n      });\r\n  }\r\n\r\n  update():void {\r\n    this.apiService.update(ENDPOINTS.noOfMultipleApplicationAllowed, this.numberOfMultipleApplicationAllowed).subscribe(\r\n      (res: any) => {\r\n        if (res !== undefined) {\r\n          this.sweetAlertService.success(res);\r\n        }\r\n      }, (err: any) => {\r\n        this.sweetAlertService.error(err);\r\n      }, () => {\r\n        // actions after subscription\r\n        this.resetFormValidator();\r\n        this.getList();\r\n      });\r\n  }\r\n\r\n  getNumberOfMultipleApplicationAllowed(){\r\n    this.apiService.findById(ENDPOINTS.noOfMultipleApplicationAllowed, this.formListComponent.idForUpdate).subscribe((res: any) => {\r\n      if (res) {\r\n        this.numberOfMultipleApplicationAllowed = res.responseData.data;\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  setFormValidator(): void {\r\n    this.numberOfMultipleApplicationAllowedForm = this.formBuilder.group({\r\n      minimum: ['', Validators.required],\r\n      maximum: ['', Validators.required],\r\n    });\r\n  }\r\n\r\n  resetFormValidator(): void {\r\n    this.numberOfMultipleApplicationAllowed = new NumberOfMultipleApplicationAllowed();\r\n    this.numberOfMultipleApplicationAllowedForm.markAsUntouched();\r\n    this.numberOfMultipleApplicationAllowedForm.markAsPristine();\r\n  }\r\n\r\n}\r\n","<form>\r\n    <div class=\"container-fluid\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-12 title\">\r\n                <mat-label>\r\n                    <span class=\"material-icons\">filter_9_plus</span> Number of Multiple Application Allowed\r\n                </mat-label>\r\n            </div>\r\n        </div>\r\n        <hr>\r\n\r\n        <div class=\"row\">\r\n            <form [formGroup]=\"numberOfMultipleApplicationAllowedForm\">\r\n                <div class=\"row\">\r\n                    <mat-form-field class=\"col-md-6\" appearance=\"outline\">\r\n                        <mat-label>MINIMUM: <span class=\"required-field\">*</span></mat-label>\r\n                        <input matInput [(ngModel)]=\"numberOfMultipleApplicationAllowed.minimum\" name=\"minimum\"\r\n                            (keydown)=\"validateFieldService.numbersOnly($event)\" formControlName=\"minimum\"\r\n                            maxlength=\"5\">\r\n                    </mat-form-field>\r\n                    <mat-form-field class=\"col-md-6\" appearance=\"outline\">\r\n                        <mat-label>MAXIMUM: <span class=\"required-field\">*</span></mat-label>\r\n                        <input matInput [(ngModel)]=\"numberOfMultipleApplicationAllowed.maximum\" name=\"maximum\"\r\n                            (keydown)=\"validateFieldService.numbersOnly($event)\" formControlName=\"maximum\"\r\n                            maxlength=\"5\">\r\n                    </mat-form-field>\r\n                </div>\r\n            </form>\r\n\r\n            <app-form-action-buttons [childObject]=\"numberOfMultipleApplicationAllowed\"\r\n                [childForm]=\"numberOfMultipleApplicationAllowedForm\" (saveFunction)=\"save()\" (updateFunction)=\"update()\"\r\n                (cancelFunction)=\"resetFormValidator()\">\r\n            </app-form-action-buttons>\r\n            <br><br><br>\r\n            <app-form-list [dataSource]=\"dataSource\" [displayedColumns]=\"displayedColumns\"\r\n                (selectInListFunction)=\"getNumberOfMultipleApplicationAllowed()\"></app-form-list>\r\n        </div>\r\n    </div>\r\n</form>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { NumberOfMultipleApplicationAllowedRoutingModule } from './number-of-multiple-application-allowed-routing.module';\r\nimport { NumberOfMultipleApplicationAllowedComponent } from './number-of-multiple-application-allowed.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { AngularMaterialModule } from '@shared';\r\nimport { FragmentsModule } from 'app/modules/fragments/fragments.module';\r\n\r\n\r\n@NgModule({\r\n  declarations: [NumberOfMultipleApplicationAllowedComponent],\r\n  imports: [\r\n    CommonModule,\r\n    NumberOfMultipleApplicationAllowedRoutingModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule,\r\n    AngularMaterialModule,\r\n    FragmentsModule,\r\n  ]\r\n})\r\nexport class NumberOfMultipleApplicationAllowedModule { }\r\n"]}
=======
{"version":3,"sources":["webpack:///src/app/modules/fragments/index.ts","webpack:///src/app/modules/pages/maintenance/number-of-multiple-application-allowed/number-of-multiple-application-allowed-routing.module.ts","webpack:///src/app/modules/pages/maintenance/number-of-multiple-application-allowed/number-of-multiple-application-allowed.component.ts","webpack:///src/app/modules/pages/maintenance/number-of-multiple-application-allowed/number-of-multiple-application-allowed.component.html","webpack:///src/app/modules/pages/maintenance/number-of-multiple-application-allowed/number-of-multiple-application-allowed.module.ts"],"names":["routes","path","component","NumberOfMultipleApplicationAllowedRoutingModule","forChild","NumberOfMultipleApplicationAllowedComponent","apiService","formBuilder","sweetAlertService","validateFieldService","displayedColumns","numberOfMultipleApplicationAllowed","numberOfMultipleApplicationAllowedList","getList","setFormValidator","findAll","noOfMultipleApplicationAllowed","subscribe","res","responseData","data","dataSource","paginator","formListComponent","sort","save","undefined","success","err","error","message","resetFormValidator","update","findById","idForUpdate","numberOfMultipleApplicationAllowedForm","group","minimum","required","maximum","markAsUntouched","markAsPristine","getNumberOfMultipleApplicationAllowed","NumberOfMultipleApplicationAllowedModule"],"mappings":"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","file":"number-of-multiple-application-allowed-number-of-multiple-application-allowed-module-es5.js","sourcesContent":["export * from './form-action-buttons/form-action-buttons.component';\r\nexport * from './form-list/form-list.component';","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { NumberOfMultipleApplicationAllowedComponent } from './number-of-multiple-application-allowed.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: NumberOfMultipleApplicationAllowedComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class NumberOfMultipleApplicationAllowedRoutingModule { }\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { FormListComponent } from '@fragments';\r\nimport { ApiService, SweetAlertService } from '@services';\r\nimport { ENDPOINTS } from '@shared';\r\nimport { NumberOfMultipleApplicationAllowed } from 'app/core/models/numberOfMultipleApplicationAllowed.model';\r\nimport { ValidateFieldService } from 'app/core/services/validate-field.service';\r\n\r\n@Component({\r\n  selector: 'app-number-of-multiple-application-allowed',\r\n  templateUrl: './number-of-multiple-application-allowed.component.html',\r\n  styleUrls: ['./number-of-multiple-application-allowed.component.scss']\r\n})\r\nexport class NumberOfMultipleApplicationAllowedComponent implements OnInit {\r\n  @ViewChild(FormListComponent) formListComponent: FormListComponent;\r\n  dataSource: MatTableDataSource<NumberOfMultipleApplicationAllowed>;\r\n  displayedColumns: string[] = ['minimum', 'maximum'];\r\n\r\n  numberOfMultipleApplicationAllowed = new NumberOfMultipleApplicationAllowed();\r\n  numberOfMultipleApplicationAllowedList = [];\r\n  numberOfMultipleApplicationAllowedForm: FormGroup;\r\n\r\n  constructor(\r\n    private apiService: ApiService,\r\n    private formBuilder: FormBuilder,\r\n    private sweetAlertService: SweetAlertService,\r\n    public validateFieldService: ValidateFieldService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getList();\r\n    this.setFormValidator();\r\n  }\r\n\r\n  getList(): void {\r\n    this.apiService.findAll(ENDPOINTS.noOfMultipleApplicationAllowed).subscribe((res: any) => {\r\n      this.numberOfMultipleApplicationAllowed = res.responseData.data;\r\n      this.dataSource = new MatTableDataSource<NumberOfMultipleApplicationAllowed>(res.responseData.data);\r\n      this.dataSource.paginator = this.formListComponent.paginator;\r\n      this.dataSource.sort = this.formListComponent.sort;\r\n    });\r\n  }\r\n\r\n  save():void {\r\n    this.apiService.save(ENDPOINTS.noOfMultipleApplicationAllowed, this.numberOfMultipleApplicationAllowed).subscribe(\r\n      (res: any) => {\r\n        if (res !== undefined) {\r\n          this.sweetAlertService.success(res);\r\n        }\r\n      }, (err: any) => {\r\n        err.error.message = 'Please enter numeric values only';\r\n        this.sweetAlertService.error(err);\r\n      }, () => {\r\n        // actions after subscription\r\n        this.resetFormValidator();\r\n        this.getList();\r\n      });\r\n  }\r\n\r\n  update():void {\r\n    this.apiService.update(ENDPOINTS.noOfMultipleApplicationAllowed, this.numberOfMultipleApplicationAllowed).subscribe(\r\n      (res: any) => {\r\n        if (res !== undefined) {\r\n          this.sweetAlertService.success(res);\r\n        }\r\n      }, (err: any) => {\r\n        this.sweetAlertService.error(err);\r\n      }, () => {\r\n        // actions after subscription\r\n        this.resetFormValidator();\r\n        this.getList();\r\n      });\r\n  }\r\n\r\n  getNumberOfMultipleApplicationAllowed(){\r\n    this.apiService.findById(ENDPOINTS.noOfMultipleApplicationAllowed, this.formListComponent.idForUpdate).subscribe((res: any) => {\r\n      if (res) {\r\n        this.numberOfMultipleApplicationAllowed = res.responseData.data;\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  setFormValidator(): void {\r\n    this.numberOfMultipleApplicationAllowedForm = this.formBuilder.group({\r\n      minimum: ['', Validators.required],\r\n      maximum: ['', Validators.required],\r\n    });\r\n  }\r\n\r\n  resetFormValidator(): void {\r\n    this.numberOfMultipleApplicationAllowed = new NumberOfMultipleApplicationAllowed();\r\n    this.numberOfMultipleApplicationAllowedForm.markAsUntouched();\r\n    this.numberOfMultipleApplicationAllowedForm.markAsPristine();\r\n  }\r\n\r\n}\r\n","<form>\r\n    <div class=\"container-fluid\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-12 title\">\r\n                <mat-label>\r\n                    <span class=\"material-icons\">filter_9_plus</span> Number of Multiple Application Allowed\r\n                </mat-label>\r\n            </div>\r\n        </div>\r\n        <hr>\r\n\r\n        <div class=\"row\">\r\n            <form [formGroup]=\"numberOfMultipleApplicationAllowedForm\">\r\n                <div class=\"row\">\r\n                    <mat-form-field class=\"col-md-6\" appearance=\"outline\">\r\n                        <mat-label>MINIMUM: <span class=\"required-field\">*</span></mat-label>\r\n                        <input matInput [(ngModel)]=\"numberOfMultipleApplicationAllowed.minimum\" name=\"minimum\"\r\n                            (keydown)=\"validateFieldService.numbersOnly($event)\" formControlName=\"minimum\"\r\n                            maxlength=\"5\">\r\n                    </mat-form-field>\r\n                    <mat-form-field class=\"col-md-6\" appearance=\"outline\">\r\n                        <mat-label>MAXIMUM: <span class=\"required-field\">*</span></mat-label>\r\n                        <input matInput [(ngModel)]=\"numberOfMultipleApplicationAllowed.maximum\" name=\"maximum\"\r\n                            (keydown)=\"validateFieldService.numbersOnly($event)\" formControlName=\"maximum\"\r\n                            maxlength=\"5\">\r\n                    </mat-form-field>\r\n                </div>\r\n            </form>\r\n\r\n            <app-form-action-buttons [childObject]=\"numberOfMultipleApplicationAllowed\"\r\n                [childForm]=\"numberOfMultipleApplicationAllowedForm\" (saveFunction)=\"save()\" (updateFunction)=\"update()\"\r\n                (cancelFunction)=\"resetFormValidator()\">\r\n            </app-form-action-buttons>\r\n            <br><br><br>\r\n            <app-form-list [dataSource]=\"dataSource\" [displayedColumns]=\"displayedColumns\"\r\n                (selectInListFunction)=\"getNumberOfMultipleApplicationAllowed()\"></app-form-list>\r\n        </div>\r\n    </div>\r\n</form>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { NumberOfMultipleApplicationAllowedRoutingModule } from './number-of-multiple-application-allowed-routing.module';\r\nimport { NumberOfMultipleApplicationAllowedComponent } from './number-of-multiple-application-allowed.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { AngularMaterialModule } from '@shared';\r\nimport { FragmentsModule } from 'app/modules/fragments/fragments.module';\r\n\r\n\r\n@NgModule({\r\n  declarations: [NumberOfMultipleApplicationAllowedComponent],\r\n  imports: [\r\n    CommonModule,\r\n    NumberOfMultipleApplicationAllowedRoutingModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule,\r\n    AngularMaterialModule,\r\n    FragmentsModule,\r\n  ]\r\n})\r\nexport class NumberOfMultipleApplicationAllowedModule { }\r\n"]}
>>>>>>> 53dc5baaa640736d2cc27f9eee7c34fe4a9274c2
