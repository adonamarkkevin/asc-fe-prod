{"version":3,"sources":["webpack:///src/app/modules/pages/maintenance/qr-and-bar-code-checker/qr-and-bar-code-checker.module.ts","webpack:///src/app/modules/pages/maintenance/qr-and-bar-code-checker/qr-and-bar-code-checker-routing.module.ts","webpack:///src/app/modules/pages/maintenance/qr-and-bar-code-checker/qr-and-bar-code-checker.component.ts","webpack:///src/app/modules/pages/maintenance/qr-and-bar-code-checker/qr-and-bar-code-checker.component.html","webpack:///src/app/modules/pages/maintenance/qr-and-bar-code-checker/qr-and-bar-code-checker.component.scss"],"names":["QrAndBarCodeCheckerModule","declarations","imports","routes","path","component","QrAndBarCodeCheckerRoutingModule","forChild","exports","QrAndBarCodeCheckerComponent","apiService","formBuilder","sweetAlertService","qrAndBarCodeChecker","qrAndBarCodeCheckerTypeList","qrAndBarCodeCheckerType","qrBarCodeValid","setFormValidator","endpoint","s1QrCheck","s2QrCheck","qrOrBarCode","save","subscribe","res","err","customErrorMessage","qrAndBarCodeCheckerForm","group","applicationType","required","markAsUntouched","markAsPristine","selector","template"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UAsBaA,yBAAyB;AAAA;AAAA,Q;;AAAzBA,+BAAyB,6DAXrC,+DAAS;AACRC,oBAAY,EAAE,CAAC,+FAAD,CADN;AAERC,eAAO,EAAE,CACP,4DADO,EAEP,wGAFO,EAGP,qEAHO,EAIP,kEAJO,EAKP,6DALO,EAMP,sFANO;AAFD,OAAT,CAWqC,GAAzBF,yBAAyB,CAAzB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClBb,UAAMG,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAE;AAFb,OADqB,CAAvB;;UAWaC,gCAAgC;AAAA;AAAA,Q;;AAAhCA,sCAAgC,6DAJ5C,+DAAS;AACRJ,eAAO,EAAE,CAAC,6DAAaK,QAAb,CAAsBJ,MAAtB,CAAD,CADD;AAERK,eAAO,EAAE,CAAC,4DAAD;AAFD,OAAT,CAI4C,GAAhCF,gCAAgC,CAAhC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCJAG,4BAA4B;AASvC,8CACUC,UADV,EAEUC,WAFV,EAGUC,iBAHV,EAG8C;AAAA;;AAFpC,eAAAF,UAAA,GAAAA,UAAA;AACA,eAAAC,WAAA,GAAAA,WAAA;AACA,eAAAC,iBAAA,GAAAA,iBAAA;AAVV,eAAAC,mBAAA,GAAsB,IAAI,6FAAJ,EAAtB;AAEA,eAAAC,2BAAA,GAA8B,CAAC,IAAD,EAAO,IAAP,CAA9B;AACA,eAAAC,uBAAA,GAA0B,EAA1B;AAEA,eAAAC,cAAA,GAA0B,KAA1B;AAMK;;AAbkC;AAAA;AAAA,iBAevC,oBAAQ;AACN,iBAAKC,gBAAL;AACD;AAjBsC;AAAA;AAAA,iBAmBvC,oBAAQ;AAAA;;AACN,gBAAIC,QAAQ,GAAG,KAAKH,uBAAL,KAAiC,IAAjC,GAAwC,kDAAUI,SAAlD,GAA8D,kDAAUC,SAAvF;AACAF,oBAAQ,IAAI,KAAKL,mBAAL,CAAyBQ,WAArC;AAEA,iBAAKX,UAAL,CAAgBY,IAAhB,CAAqBJ,QAArB,EAA+B,KAAKL,mBAApC,EAAyDU,SAAzD,CACE,UAAAC,GAAG,EAAI;AACL,mBAAI,CAACR,cAAL,GAAsB,IAAtB;AACD,aAHH,EAGK,UAAAS,GAAG,EAAI;AACR,mBAAI,CAACT,cAAL,GAAsB,KAAtB;;AACA,mBAAI,CAACJ,iBAAL,CAAuBc,kBAAvB,CAA0C,8CAA1C;AACD,aANH;AAQD;AA/BsC;AAAA;AAAA,iBAiCvC,4BAAgB;AACd,iBAAKC,uBAAL,GAA+B,KAAKhB,WAAL,CAAiBiB,KAAjB,CAAuB;AACpDC,6BAAe,EAAE,CAAC,EAAD,EAAK,0DAAWC,QAAhB,CADmC;AAEpDT,yBAAW,EAAE,CAAC,EAAD,EAAK,0DAAWS,QAAhB;AAFuC,aAAvB,CAA/B;AAID;AAtCsC;AAAA;AAAA,iBAwCvC,8BAAkB;AAChB,iBAAKjB,mBAAL,GAA2B,IAAI,6FAAJ,EAA3B;AACA,iBAAKc,uBAAL,CAA6BI,eAA7B;AACA,iBAAKJ,uBAAL,CAA6BK,cAA7B;AACD;AA5CsC;;AAAA;AAAA,S;;;;gBAThC;;gBADA;;gBACY;;;;AASRvB,kCAA4B,6DALxC,gEAAU;AACTwB,gBAAQ,EAAE,6BADD;AAETC,gBAAQ,EAAR,0FAFS;;AAAA,OAAV,CAKwC,GAA5BzB,4BAA4B,CAA5B;;;;;;;;;;;;;;;;ACXb;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA","file":"qr-and-bar-code-checker-qr-and-bar-code-checker-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { QrAndBarCodeCheckerRoutingModule } from './qr-and-bar-code-checker-routing.module';\r\nimport { QrAndBarCodeCheckerComponent } from './qr-and-bar-code-checker.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { AngularMaterialModule } from '@shared';\r\nimport { FragmentsModule } from 'app/modules/fragments/fragments.module';\r\n\r\n\r\n@NgModule({\r\n  declarations: [QrAndBarCodeCheckerComponent],\r\n  imports: [\r\n    CommonModule,\r\n    QrAndBarCodeCheckerRoutingModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule,\r\n    AngularMaterialModule,\r\n    FragmentsModule,\r\n  ]\r\n})\r\nexport class QrAndBarCodeCheckerModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { QrAndBarCodeCheckerComponent } from './qr-and-bar-code-checker.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: QrAndBarCodeCheckerComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class QrAndBarCodeCheckerRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ApiService, SweetAlertService } from '@services';\r\nimport { ENDPOINTS } from '@shared';\r\nimport { QrAndBarCodeChecker } from 'app/core/models/qrAndBarCodeChecker.model';\r\n\r\n@Component({\r\n  selector: 'app-qr-and-bar-code-checker',\r\n  templateUrl: './qr-and-bar-code-checker.component.html',\r\n  styleUrls: ['./qr-and-bar-code-checker.component.scss']\r\n})\r\nexport class QrAndBarCodeCheckerComponent implements OnInit {\r\n\r\n  qrAndBarCodeChecker = new QrAndBarCodeChecker();\r\n  qrAndBarCodeCheckerForm: FormGroup;\r\n  qrAndBarCodeCheckerTypeList = ['S1', 'S2'];\r\n  qrAndBarCodeCheckerType = '';\r\n\r\n  qrBarCodeValid: boolean = false;\r\n\r\n  constructor(\r\n    private apiService: ApiService,\r\n    private formBuilder: FormBuilder,\r\n    private sweetAlertService: SweetAlertService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.setFormValidator();\r\n  }\r\n\r\n  validate(): void {\r\n    let endpoint = this.qrAndBarCodeCheckerType === 'S1' ? ENDPOINTS.s1QrCheck : ENDPOINTS.s2QrCheck;\r\n    endpoint += this.qrAndBarCodeChecker.qrOrBarCode;\r\n\r\n    this.apiService.save(endpoint, this.qrAndBarCodeChecker).subscribe(\r\n      res => {\r\n        this.qrBarCodeValid = true;\r\n      }, err => {\r\n        this.qrBarCodeValid = false;\r\n        this.sweetAlertService.customErrorMessage('QR or Bar Code is Invalid. Please try again.');\r\n      }\r\n    );\r\n  }\r\n\r\n  setFormValidator(): void {\r\n    this.qrAndBarCodeCheckerForm = this.formBuilder.group({\r\n      applicationType: ['', Validators.required],\r\n      qrOrBarCode: ['', Validators.required],\r\n    });\r\n  }\r\n\r\n  resetFormValidator(): void {\r\n    this.qrAndBarCodeChecker = new QrAndBarCodeChecker();\r\n    this.qrAndBarCodeCheckerForm.markAsUntouched();\r\n    this.qrAndBarCodeCheckerForm.markAsPristine();\r\n  }\r\n\r\n}\r\n","export default \"<form>\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12 title\\\">\\r\\n                <mat-label>\\r\\n                    <span class=\\\"material-icons\\\">qr_code_scanner</span> QR and BAR CODE Checker\\r\\n                </mat-label>\\r\\n            </div>\\r\\n        </div>\\r\\n        <hr>\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-7 form-group\\\">\\r\\n                <form [formGroup]=\\\"qrAndBarCodeCheckerForm\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n\\r\\n                        <mat-form-field appearance=\\\"outline\\\">\\r\\n                          <mat-label>Application Type</mat-label>\\r\\n                          <mat-select [(ngModel)]=\\\"qrAndBarCodeCheckerType\\\" name=\\\"applicationType\\\" formControlName=\\\"applicationType\\\">\\r\\n                            <mat-option *ngFor=\\\"let i of qrAndBarCodeCheckerTypeList\\\" [value]=\\\"i\\\">\\r\\n                              {{i}} Application\\r\\n                            </mat-option>\\r\\n                          </mat-select>\\r\\n                        </mat-form-field>\\r\\n\\r\\n                        <mat-form-field appearance=\\\"outline\\\">\\r\\n                            <mat-label>QR/BAR CODE: <span class=\\\"required-field\\\">*</span></mat-label>\\r\\n                            <input matInput [(ngModel)]=\\\"qrAndBarCodeChecker.qrOrBarCode\\\" name=\\\"qrOrBarCode\\\"\\r\\n                                formControlName=\\\"qrOrBarCode\\\">\\r\\n                        </mat-form-field>\\r\\n\\r\\n                        <app-form-action-buttons [childObject]=\\\"qrAndBarCodeChecker\\\" [childForm]=\\\"qrAndBarCodeCheckerForm\\\"\\r\\n                            (validateFunction)=\\\"validate()\\\" (cancelFunction)=\\\"resetFormValidator()\\\">\\r\\n                        </app-form-action-buttons>\\r\\n                    </div>\\r\\n                </form>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-5 message-output\\\">\\r\\n                <span class=\\\"badge bg-success\\\" *ngIf=\\\"qrBarCodeValid\\\">VALID</span>\\r\\n                <span class=\\\"badge bg-danger\\\" *ngIf=\\\"!qrBarCodeValid\\\">INVALID</span>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\\r\\n\\r\\n\";","export default \".form-group {\\n  border-right: 4px solid #cccccc;\\n}\\n\\n.message-output {\\n  margin: auto;\\n  text-align: center;\\n}\\n\\n.message-output .badge {\\n  width: 100%;\\n}\\n\\n.message-output .bg-success, .message-output .bg-danger {\\n  padding: 20px 10px;\\n  font-size: 20px;\\n  text-align: justify;\\n  text-justify: inter-word;\\n  max-width: -webkit-fit-content;\\n  max-width: -moz-fit-content;\\n  max-width: fit-content;\\n  min-width: 100%;\\n  text-align: center;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9wYWdlcy9tYWludGVuYW5jZS9xci1hbmQtYmFyLWNvZGUtY2hlY2tlci9xci1hbmQtYmFyLWNvZGUtY2hlY2tlci5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLCtCQUFBO0FBQ0o7O0FBRUE7RUFDSSxZQUFBO0VBQ0Esa0JBQUE7QUFDSjs7QUFBSTtFQUNJLFdBQUE7QUFFUjs7QUFBSTtFQUNJLGtCQUFBO0VBQ0EsZUFBQTtFQUNBLG1CQUFBO0VBQ0Esd0JBQUE7RUFDQSw4QkFBQTtFQUFBLDJCQUFBO0VBQUEsc0JBQUE7RUFDQSxlQUFBO0VBQ0Esa0JBQUE7QUFFUiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcGFnZXMvbWFpbnRlbmFuY2UvcXItYW5kLWJhci1jb2RlLWNoZWNrZXIvcXItYW5kLWJhci1jb2RlLWNoZWNrZXIuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZm9ybS1ncm91cHtcclxuICAgIGJvcmRlci1yaWdodDogNHB4IHNvbGlkIHJnYigyMDQsIDIwNCwgMjA0KTtcclxufVxyXG5cclxuLm1lc3NhZ2Utb3V0cHV0e1xyXG4gICAgbWFyZ2luOiBhdXRvO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgLmJhZGdle1xyXG4gICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgfVxyXG4gICAgLmJnLXN1Y2Nlc3MsIC5iZy1kYW5nZXIge1xyXG4gICAgICAgIHBhZGRpbmc6IDIwcHggMTBweDtcclxuICAgICAgICBmb250LXNpemU6IDIwcHg7XHJcbiAgICAgICAgdGV4dC1hbGlnbjoganVzdGlmeTtcclxuICAgICAgICB0ZXh0LWp1c3RpZnk6IGludGVyLXdvcmQ7XHJcbiAgICAgICAgbWF4LXdpZHRoOiBmaXQtY29udGVudDtcclxuICAgICAgICBtaW4td2lkdGg6IDEwMCU7XHJcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgfVxyXG5cclxufVxyXG4iXX0= */\";"]}