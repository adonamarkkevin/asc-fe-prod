{"version":3,"sources":["./src/app/modules/fragments/index.ts","./src/app/modules/pages/maintenance/screener-reviewer-pair/screener-reviewer-pair.component.ts","./src/app/modules/pages/maintenance/screener-reviewer-pair/screener-reviewer-pair.module.ts","./src/app/modules/pages/maintenance/screener-reviewer-pair/screener-reviewer-pair-routing.module.ts","./src/app/modules/pages/maintenance/screener-reviewer-pair/screener-reviewer-pair.component.html","./src/app/modules/pages/maintenance/screener-reviewer-pair/screener-reviewer-pair.component.scss"],"names":[],"mappings":"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","file":"screener-reviewer-pair-screener-reviewer-pair-module-es2015.js","sourcesContent":["export * from './form-action-buttons/form-action-buttons.component';\r\nexport * from './form-list/form-list.component';","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { FormListComponent } from '@fragments';\r\nimport { ApiService, SweetAlertService } from '@services';\r\nimport { COMMON_FUNCTION, ENDPOINTS, STATUSES, USER_ROLES } from '@shared';\r\nimport { ScreenerReviewerPair } from 'app/core/models/screener-reviewer-pair.model';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-screener-reviewer-pair',\r\n  templateUrl: './screener-reviewer-pair.component.html',\r\n  styleUrls: ['./screener-reviewer-pair.component.scss']\r\n})\r\nexport class ScreenerReviewerPairComponent implements OnInit {\r\n\r\n  @ViewChild(FormListComponent) formListComponent: FormListComponent;\r\n  dataSource: MatTableDataSource<ScreenerReviewerPair>;\r\n  displayedColumns: string[] = ['screenerName', 'reviewerName'];\r\n  screenerList = [];\r\n  reviewerList = [];\r\n\r\n  screenerReviewerPair = new ScreenerReviewerPair();\r\n  screenerReviewerPairList = [];\r\n\r\n  screenerReviewerPairForm: FormGroup;\r\n\r\n\r\n  constructor(\r\n    private apiService: ApiService,\r\n    private formBuilder: FormBuilder,\r\n    private sweetAlertService: SweetAlertService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.getList();\r\n    this.setFormValidator();\r\n    this.getScreenerAndReviewerForList();\r\n  }\r\n\r\n  getList(): void {\r\n    this.apiService.findAll(ENDPOINTS.screenerReviewerPairs).subscribe((res: any) => {\r\n      this.screenerReviewerPairList = res.responseData.data;\r\n      this.dataSource = new MatTableDataSource<ScreenerReviewerPair>(res.responseData.data);\r\n      this.dataSource.paginator = this.formListComponent.paginator;\r\n      this.dataSource.sort = this.formListComponent.sort;\r\n    });\r\n\r\n    this.getScreenerAndReviewerForList();\r\n  }\r\n\r\n  save(): void {\r\n    this.apiService.save(ENDPOINTS.screenerReviewerPairs, this.screenerReviewerPair).subscribe(\r\n      (res: any) => {\r\n        if (res !== undefined) {\r\n          console.log(res);\r\n\r\n          this.sweetAlertService.success(res);\r\n        }\r\n      }, (err: any) => {\r\n        this.sweetAlertService.error(err);\r\n      }, () => {\r\n        this.resetFormValidator(),\r\n          this.getList();\r\n        this.getScreenerAndReviewerForList();\r\n      }\r\n    )\r\n  }\r\n\r\n  getScreenerReviewerPair(): void {\r\n    this.apiService.findById(ENDPOINTS.screenerReviewerPairs, this.formListComponent.idForUpdate).subscribe((res: any) => {\r\n      if (res) {\r\n        this.screenerReviewerPair = res.responseData.data;\r\n        console.log(this.screenerReviewerPair);\r\n\r\n        console.log(this.screenerList.filter((res1) => res1.username === this.screenerReviewerPair.screener.username)[0]);\r\n        console.log(this.screenerReviewerPair.screener);\r\n      }\r\n    });\r\n  }\r\n\r\n  update(): void {\r\n    this.apiService.update(ENDPOINTS.screenerReviewerPairs, this.screenerReviewerPair).subscribe(\r\n      (res: any) => {\r\n        if (res !== undefined) {\r\n          this.sweetAlertService.success(res);\r\n        }\r\n      }, (err: any) => {\r\n        this.sweetAlertService.error(err);\r\n      }, () => {\r\n        this.resetFormValidator()\r\n        this.getList();\r\n        this.getScreenerAndReviewerForList();\r\n      });\r\n  }\r\n\r\n  setFormValidator(): void {\r\n    this.screenerReviewerPairForm = this.formBuilder.group({\r\n      screenerName: ['', Validators.required],\r\n      reviewerName: ['', Validators.required],\r\n    });\r\n  }\r\n\r\n  resetFormValidator(): void {\r\n    this.screenerReviewerPair = new ScreenerReviewerPair();\r\n    this.screenerReviewerPairForm.markAsUntouched();\r\n    this.screenerReviewerPairForm.markAsPristine();\r\n  }\r\n\r\n  getScreenerAndReviewerForList() {\r\n    this.apiService.findAll(ENDPOINTS.userAccount).subscribe((res: any) => {\r\n      this.screenerList = res.responseData.data.filter(\r\n        (account: any) => account.userRole.name === USER_ROLES.ROLE_SCREENER && account.status === COMMON_FUNCTION.ACTIVE);\r\n      this.reviewerList = res.responseData.data.filter(\r\n        (account: any) => account.userRole.name === USER_ROLES.ROLE_REVIEWER && account.status === COMMON_FUNCTION.ACTIVE);\r\n    });\r\n  }\r\n\r\n  compareUser(value: any, selected: any): boolean {\r\n    if (value && selected) {\r\n      return value.username === selected.username;\r\n    }\r\n  }\r\n\r\n  delete() {\r\n    Swal.fire({\r\n      text: 'Are you sure you want to delete this screener reviewer pairing?',\r\n      icon: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Confirm'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.apiService.deleteById(ENDPOINTS.screenerReviewerPairs, this.screenerReviewerPair.id).subscribe(\r\n          () => {\r\n            this.sweetAlertService.customSuccessMessage('Screener reviewer pairing successfully deleted.');\r\n            this.resetFormValidator();\r\n            this.getList();\r\n          }\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { ScreenerReviewerPairRoutingModule } from './screener-reviewer-pair-routing.module';\r\nimport { ScreenerReviewerPairComponent } from './screener-reviewer-pair.component';\r\nimport { FragmentsModule } from 'app/modules/fragments/fragments.module';\r\nimport { AngularMaterialModule } from '@shared';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ScreenerReviewerPairComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ScreenerReviewerPairRoutingModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule,\r\n    AngularMaterialModule,\r\n    FragmentsModule,\r\n  ]\r\n})\r\nexport class ScreenerReviewerPairModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ScreenerReviewerPairComponent } from './screener-reviewer-pair.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ScreenerReviewerPairComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ScreenerReviewerPairRoutingModule { }\r\n","export default \"<form>\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12 title\\\">\\r\\n                <mat-label>\\r\\n                    Screener-Reviewer Pair\\r\\n                </mat-label>\\r\\n            </div>\\r\\n        </div>\\r\\n        <hr>\\r\\n\\r\\n        <form [formGroup]=\\\"screenerReviewerPairForm\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\">\\r\\n                    <mat-label>Screener Name</mat-label>\\r\\n                    <mat-select [(ngModel)]=\\\"screenerReviewerPair.screener\\\" name=\\\"screenerName\\\" formControlName=\\\"screenerName\\\"\\r\\n                    [compareWith]=\\\"compareUser\\\">\\r\\n                        <mat-option *ngFor=\\\"let i of screenerList\\\" [value]=\\\"i\\\">\\r\\n                            {{ i?.firstName }} {{ i?.lastName }}\\r\\n                        </mat-option>\\r\\n                    </mat-select>\\r\\n                </mat-form-field>\\r\\n\\r\\n                <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\">\\r\\n                    <mat-label>Reviewer Name</mat-label>\\r\\n                    <mat-select [(ngModel)]=\\\"screenerReviewerPair.reviewer\\\" name=\\\"reviewerName\\\" formControlName=\\\"reviewerName\\\"\\r\\n                    [compareWith]=\\\"compareUser\\\">\\r\\n                        <mat-option *ngFor=\\\"let i of reviewerList\\\" [value]=\\\"i\\\">\\r\\n                            {{ i?.firstName }} {{ i?.lastName }}\\r\\n                        </mat-option>\\r\\n                    </mat-select>\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n        </form>\\r\\n\\r\\n        <app-form-action-buttons [childObject]=\\\"screenerReviewerPair\\\" [childForm]=\\\"screenerReviewerPairForm\\\"\\r\\n            (saveFunction)=\\\"save()\\\" (updateFunction)=\\\"update()\\\" (cancelFunction)=\\\"resetFormValidator()\\\"\\r\\n            (deleteFunction)=\\\"delete()\\\">\\r\\n        </app-form-action-buttons>\\r\\n        <br>\\r\\n        <app-form-list [dataSource]=\\\"dataSource\\\" [displayedColumns]=\\\"displayedColumns\\\"\\r\\n            (selectInListFunction)=\\\"getScreenerReviewerPair()\\\"></app-form-list>\\r\\n\\r\\n    </div>\\r\\n</form>\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcGFnZXMvbWFpbnRlbmFuY2Uvc2NyZWVuZXItcmV2aWV3ZXItcGFpci9zY3JlZW5lci1yZXZpZXdlci1wYWlyLmNvbXBvbmVudC5zY3NzIn0= */\";"],"sourceRoot":"webpack:///"}