{"version":3,"sources":["./src/app/modules/fragments/index.ts","./src/app/modules/pages/maintenance/user-account/user-account-routing.module.ts","./src/app/core/models/eSignature.model.ts","./src/app/modules/pages/maintenance/user-account/user-account.component.html","./src/app/modules/pages/maintenance/user-account/user-account.component.ts","./src/app/modules/pages/maintenance/user-account/user-account.module.ts","./src/app/modules/pages/maintenance/user-account/user-account.component.scss"],"names":[],"mappings":"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","file":"default~modules-pages-landing-page-landing-page-module~user-account-user-account-module~user-profile~be01c79e-es2015.js","sourcesContent":["export * from './form-action-buttons/form-action-buttons.component';\r\nexport * from './form-list/form-list.component';","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { UserAccountComponent } from './user-account.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: UserAccountComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class UserAccountRoutingModule { }\r\n","export class ESignature {\r\n    id: number;\r\n    accountId: number;\r\n    originalFilename: string;\r\n    filename: string;\r\n    fileExtension: string;\r\n    fileURL: string;\r\n    documentFormat: string;\r\n    signatureAttachmentReference: string;\r\n}\r\n","export default \"<form>\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12 title\\\">\\r\\n        <mat-label>\\r\\n          <span class=\\\"material-icons\\\">badge</span> User Account\\r\\n        </mat-label>\\r\\n      </div>\\r\\n    </div>\\r\\n    <hr>\\r\\n\\r\\n    <mat-tab-group dynamicHeight *ngIf=\\\"isAscUser || userAccount.id\\\">\\r\\n      <!-- 1 -->\\r\\n      <mat-tab label=\\\"User Details\\\">\\r\\n        <form [formGroup]=\\\"userInfo\\\">\\r\\n          <div class=\\\"fields\\\">\\r\\n            <h4>\\r\\n              <mat-icon>label_important</mat-icon> Personal Information:\\r\\n            </h4>\\r\\n            <div class=\\\"row\\\">\\r\\n              <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label> Given name: <span class=\\\"required-field\\\">\\r\\n                    <mat-icon>notification_important</mat-icon>\\r\\n                  </span></mat-label>\\r\\n                <input matInput [(ngModel)]=\\\"userAccount.firstName\\\" name=\\\"firstName\\\" formControlName=\\\"firstName\\\">\\r\\n              </mat-form-field>\\r\\n              <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label> Middle name: </mat-label>\\r\\n                <input matInput [(ngModel)]=\\\"userAccount.middleName\\\" name=\\\"middleName\\\" formControlName=\\\"middleName\\\">\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n            <div class=\\\"row\\\">\\r\\n              <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label> Last name: <span class=\\\"required-field\\\">\\r\\n                    <mat-icon>notification_important</mat-icon>\\r\\n                  </span></mat-label>\\r\\n                <input matInput [(ngModel)]=\\\"userAccount.lastName\\\" name=\\\"lastName\\\" formControlName=\\\"lastName\\\">\\r\\n              </mat-form-field>\\r\\n              <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label> Mobile Number: <mat-icon>notification_important</mat-icon></mat-label>\\r\\n                <input matInput [(ngModel)]=\\\"userAccount.mobileNumber\\\" name=\\\"mobileNumber\\\" placeholder=\\\"09xxxxxxxxx\\\"\\r\\n                  formControlName=\\\"mobileNumber\\\" (keydown)=\\\"validateFieldService.numbersOnly($event)\\\" maxlength=\\\"11\\\">\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row\\\">\\r\\n              <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\"\\r\\n              *ngIf=\\\"currentUserRole==='ROLE_SUPER_ADMIN' || currentUserRole==='ROLE_ADMIN'\\\">\\r\\n                <mat-label> User Role <mat-icon>notification_important</mat-icon>\\r\\n                </mat-label>\\r\\n                <mat-select [(ngModel)]=\\\"userAccount.userRole\\\" name=\\\"userRole\\\" [compareWith]=\\\"compareUserRole\\\"\\r\\n                  formControlName=\\\"userRole\\\" matNativeControl [disabled]=\\\"userAccount?.userRole?.name=='ROLE_APPLICANT'\\\">\\r\\n                  <mat-option *ngFor=\\\"let i of userRoleList\\\" [value]=\\\"i\\\">\\r\\n                    {{ i?.name?.replaceAll('ROLE_', '')?.replace('_', ' ')?.replace('ENCODER', 'EVALUATOR') }}\\r\\n                  </mat-option>\\r\\n                </mat-select>\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n\\r\\n            <div>\\r\\n              <button class=\\\"col\\\" mat-raised-button color=\\\"warn\\\" *ngIf=\\\"userAccount?.firstName != undefined\\r\\n              && userAccount?.status === 'VERIFICATION_SENT' && userAccount?.accountType === 'APPLICANT'\\\" (click)=\\\"resendEmail()\\\">\\r\\n              <span class=\\\"material-icons\\\">mail</span> Resend Email Verification\\r\\n              </button>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"fields\\\" *ngIf=\\\"userAccount?.userRole?.name=='ROLE_APPLICANT' && !isAscUser\\\">\\r\\n            <h4>\\r\\n              <mat-icon>label_important</mat-icon> Company Information:\\r\\n            </h4>\\r\\n            <div class=\\\"row\\\">\\r\\n              <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label> Company <mat-icon>notification_important</mat-icon>\\r\\n                </mat-label>\\r\\n                <mat-select [(ngModel)]=\\\"userAccount.company\\\" name=\\\"company\\\" [compareWith]=\\\"compareCompany\\\"\\r\\n                  formControlName=\\\"company\\\" matNativeControl (selectionChange)=\\\"getSelectedCompany($event)\\\">\\r\\n                  <mat-option (click)=\\\"openCompanyComponent()\\\">\\r\\n                    <span class=\\\"badge bg-success dd\\\">Add New Company</span>\\r\\n                  </mat-option>\\r\\n                  <mat-option *ngFor=\\\"let i of companyList\\\" [value]=\\\"i\\\">\\r\\n                    {{i.companyName}}\\r\\n                  </mat-option>\\r\\n\\r\\n                </mat-select>\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n            <div class=\\\"row\\\">\\r\\n              <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label> Member Affiliation</mat-label>\\r\\n                <input matInput [value]=\\\"userAccount?.company?.membersAffiliation?.description\\\"\\r\\n                  name=\\\"membersAffiliation\\\" readonly>\\r\\n              </mat-form-field>\\r\\n              <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label> Company Number: <span class=\\\"required-field\\\">*</span></mat-label>\\r\\n                <input matInput [value]=\\\"userAccount?.company?.companyMobileNo\\\" name=\\\"companyMobileNo\\\" readonly>\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row\\\">\\r\\n              <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label> Telephone Number: </mat-label>\\r\\n                <input matInput [value]=\\\"userAccount?.company?.companyTelephoneNo\\\" name=\\\"companyTelephoneNo\\\" readonly>\\r\\n              </mat-form-field>\\r\\n              <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label> Alternative Telephone Number: </mat-label>\\r\\n                <input matInput [value]=\\\"userAccount?.company?.companyTelephoneNo2\\\" name=\\\"companyTelephoneNo2\\\" readonly>\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row\\\">\\r\\n              <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label> Contact Person: </mat-label>\\r\\n                <input matInput [value]=\\\"userAccount?.company?.contactPersonName\\\" name=\\\"contactPersonName\\\" readonly>\\r\\n              </mat-form-field>\\r\\n              <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label> Contact Person Email: </mat-label>\\r\\n                <input matInput [value]=\\\"userAccount?.company?.contactPersonEmail\\\" name=\\\"contactPersonEmail\\\" readonly>\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"col-md-12\\\" *ngIf=\\\"!userAccount?.id\\\">\\r\\n            <b><b class=\\\"material-icons\\\">error_outline</b> Note: Proceed to Account Information to complete adding of ASC user.</b>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"container\\\">\\r\\n            <button mat-raised-button color=\\\"primary\\\" (click)=\\\"insert(false)\\\" [disabled]=\\\"!userInfo?.valid\\\" *ngIf=\\\"userAccount?.id\\\"><i class=\\\"material-icons color__white\\\">offline_pin</i> UPDATE</button>\\r\\n              <br>\\r\\n          </div>\\r\\n        </form>\\r\\n      </mat-tab>\\r\\n\\r\\n      <!-- 2 -->\\r\\n      <mat-tab label=\\\"E-Signature\\\" *ngIf=\\\"userAccount?.userRole?.name !== 'ROLE_APPLICANT' && userAccount?.id\\\">\\r\\n        <form [formGroup]=\\\"eSignature\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n\\r\\n              <div class=\\\"row fields\\\">\\r\\n                <h4>\\r\\n                  <i class=\\\"material-icons\\\">upload</i> &nbsp;Upload e-Signature\\r\\n                </h4>\\r\\n                <br>\\r\\n\\r\\n                <div class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n                  <mat-label>Filename:  <mat-icon>notification_important</mat-icon></mat-label>\\r\\n                  <br>\\r\\n                  <br>\\r\\n                  <input #selectFileButton matInput [value]=\\\"eSign.originalFilename\\\" disabled\\r\\n                    *ngIf=\\\"eSign.originalFilename\\\">\\r\\n                  <input #selectFileButton class=\\\"file-upload\\\" type=\\\"file\\\" *ngIf=\\\"!eSign.originalFilename\\\" accept=\\\"image/*\\\"\\r\\n                    (change)=\\\"selectFile($event)\\\">\\r\\n                  <input type=\\\"hidden\\\" [(ngModel)]=\\\"eSign.signatureAttachmentReference\\\" formControlName=\\\"eSignature\\\">\\r\\n                  <br>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n\\r\\n                  <button mat-raised-button class=\\\"button-red button-right\\\" (click)=\\\"deleteESignature()\\\"\\r\\n                    *ngIf=\\\"eSign?.fileURL\\\">\\r\\n                    <i class=\\\"material-icons add-document color__white\\\">delete</i> DELETE E-SIGNATURE\\r\\n                  </button>\\r\\n\\r\\n                  <button mat-raised-button class=\\\"button-red button-right\\\" (click)=\\\"viewDocument()\\\"\\r\\n                    *ngIf=\\\"eSign?.signatureAttachmentReference\\\">\\r\\n                    <i class=\\\"material-icons add-document\\\">open_in_new</i> VIEW DOCUMENT\\r\\n                  </button>\\r\\n\\r\\n\\r\\n                  &nbsp; &nbsp;\\r\\n\\r\\n                  <button mat-raised-button class=\\\"button-red button-right\\\" (click)=\\\"uploadSignature()\\\"\\r\\n                    [disabled]=\\\"!safeURLSignature || !isShowUploadButton\\\" *ngIf=\\\"isShowUploadButton\\\">\\r\\n                    <i class=\\\"material-icons add-document color__white\\\">upload</i> UPLOAD\\r\\n                  </button>\\r\\n\\r\\n                  <br>\\r\\n                  <div class=\\\"row col-md-12\\\" appearance=\\\"outline\\\" *ngIf=\\\"previewDocument==true && (\\r\\n                          userAccount?.signatureAttachmentReference\\r\\n                        )\\\">\\r\\n                    <div class=\\\"file-upload\\\">\\r\\n                      <object [data]=\\\"safeURLSignature\\\" type=\\\"application/pdf\\\" width=\\\"100%\\\" height=\\\"400\\\">\\r\\n                        <iframe [src]=\\\"safeURLSignature\\\" width=\\\"100%\\\" height=\\\"400\\\">\\r\\n                          <p>This browser does not support PDF!</p>\\r\\n                        </iframe>\\r\\n                      </object>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"col-md-12\\\"><br></div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </mat-tab>\\r\\n\\r\\n      <!-- 3 -->\\r\\n      <mat-tab label=\\\"Account Information\\\">\\r\\n        <form [formGroup]=\\\"accountInfo\\\">\\r\\n          <ng-template matStepLabel>Account Information</ng-template>\\r\\n          <div class=\\\"row fields\\\">\\r\\n            <h4>\\r\\n              <mat-icon>label_important</mat-icon> Account Information:\\r\\n            </h4>\\r\\n            <div class=\\\"row\\\">\\r\\n              <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label> Email Address: <span class=\\\"required-field\\\">\\r\\n                    <mat-icon>notification_important</mat-icon>\\r\\n                  </span></mat-label>\\r\\n                <input matInput [(ngModel)]=\\\"userAccount.username\\\" name=\\\"userName\\\" formControlName=\\\"userName\\\"\\r\\n                  type=\\\"email\\\" [readonly]=\\\"userAccount?.id\\\">\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n            <div class=\\\"row col-md-6\\\">\\r\\n              <mat-form-field appearance=\\\"outline\\\">\\r\\n                <mat-label> Password:\\r\\n                  <span class=\\\"required-field\\\">\\r\\n                    <mat-icon>notification_important</mat-icon>\\r\\n                  </span>\\r\\n                </mat-label>\\r\\n                <input matInput [type]=\\\"hidePassword ? 'password' : 'text'\\\" [(ngModel)]=\\\"userAccount.password\\\"\\r\\n                  name=\\\"password\\\" formControlName=\\\"password\\\">\\r\\n                <button type=\\\"button\\\" mat-icon-button matSuffix (click)=\\\"hidePassword = !hidePassword\\\"\\r\\n                  [attr.aria-label]=\\\"'Hide password'\\\" [attr.aria-pressed]=\\\"hidePassword\\\">\\r\\n                  <mat-icon>{{hidePassword ? 'visibility_off' : 'visibility'}}</mat-icon>\\r\\n                </button>\\r\\n              </mat-form-field>\\r\\n              <p *ngIf=\\\"accountInfo.get('password').dirty && accountInfo.controls['password'].errors\\\" class=\\\"badge\\\">\\r\\n                <mat-icon>warning</mat-icon>\\r\\n                Password must contain lower,upper case letter and number.\\r\\n              </p>\\r\\n            </div>\\r\\n            <div class=\\\"row col-md-6\\\">\\r\\n              <mat-form-field appearance=\\\"outline\\\">\\r\\n                <mat-label> Confirm Password:\\r\\n                  <span class=\\\"required-field\\\">\\r\\n                    <mat-icon>notification_important</mat-icon>\\r\\n                  </span>\\r\\n                </mat-label>\\r\\n                <input matInput [type]=\\\"hideConfirmPassword ? 'password' : 'text'\\\" [(ngModel)]=\\\"confirmPasswords\\\"\\r\\n                  name=\\\"confirmPasswords\\\" formControlName=\\\"confirmPasswords\\\"\\r\\n                  (keyup)=\\\"confirmPassword(confirmPasswords)\\\">\\r\\n                <button type=\\\"button\\\" mat-icon-button matSuffix (click)=\\\"hideConfirmPassword = !hideConfirmPassword\\\"\\r\\n                  [attr.aria-label]=\\\"'Hide password'\\\" [attr.aria-pressed]=\\\"hideConfirmPassword\\\">\\r\\n                  <mat-icon>{{hideConfirmPassword ? 'visibility_off' : 'visibility'}}</mat-icon>\\r\\n                </button>\\r\\n              </mat-form-field>\\r\\n              <p *ngIf=\\\"accountInfo.get('confirmPasswords').dirty && !passwordMatch\\\" class=\\\"badge\\\">\\r\\n                <mat-icon>warning</mat-icon>\\r\\n                Password not match\\r\\n              </p>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-md-12\\\">\\r\\n            <button mat-raised-button color=\\\"primary\\\" (click)=\\\"insert(true)\\\" [disabled]=\\\"!userInfo?.valid || !accountInfo?.valid || !userAccount?.userRole || !userAccount?.password || !confirmPasswords\\\"\\r\\n            *ngIf=\\\"!userAccount?.id\\\"><i class=\\\"material-icons color__white\\\">offline_pin</i> SAVE</button>\\r\\n            <button mat-raised-button color=\\\"primary\\\" (click)=\\\"updateCredentials()\\\" [disabled]=\\\"!accountInfo?.valid\\\" [hidden]=\\\"!userAccount?.id\\\"><i class=\\\"material-icons color__white\\\">offline_pin</i> UPDATE</button>  \\r\\n          </div>\\r\\n        </div>\\r\\n      </mat-tab>\\r\\n    </mat-tab-group>\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n      <br>\\r\\n      <div class=\\\"container\\\">\\r\\n        <mat-tab-group mat-align-tabs=\\\"start\\\" (selectedTabChange)=\\\"changeTab($event)\\\" *ngIf=\\\"!isFromUserProfile\\\">\\r\\n          <!-- displayed columns will be changed in changeTab() -->\\r\\n          <mat-tab label=\\\"Non ASC users\\\">\\r\\n\\r\\n          </mat-tab>\\r\\n          <mat-tab label=\\\"ASC users\\\">\\r\\n\\r\\n          </mat-tab>\\r\\n        </mat-tab-group>\\r\\n        <br>\\r\\n        <span *ngIf=\\\"!isFromUserProfile && displayTable\\\">\\r\\n          <app-form-list [dataSource]=\\\"dataSource\\\"\\r\\n            [displayedColumns]=\\\"displayedColumns\\\" (selectInListFunction)=\\\"viewUserInformation()\\\">\\r\\n          </app-form-list>\\r\\n        </span>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\\r\\n\";","import { Component, ElementRef, Inject, OnInit, Optional, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatStepper } from '@angular/material/stepper';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { Router } from '@angular/router';\r\nimport { FormListComponent } from '@fragments';\r\nimport { Affiliation, Company, UserAccount, UserRole } from '@models';\r\nimport { ApiService, DataStorageService, SweetAlertService } from '@services';\r\nimport { ACCOUNT_TYPE, ENDPOINTS, USER_ROLES } from '@shared';\r\nimport { ESignature } from 'app/core/models/eSignature.model';\r\nimport { FileStorageService } from 'app/core/services/file.storage.service';\r\nimport { ValidateFieldService } from 'app/core/services/validate-field.service';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport Swal from 'sweetalert2';\r\nimport { AddCompanyComponent } from '../../company/add-company/add-company.component';\r\n\r\n@Component({\r\n  selector: 'app-user-account',\r\n  templateUrl: './user-account.component.html',\r\n  styleUrls: ['./user-account.component.scss']\r\n})\r\nexport class UserAccountComponent implements OnInit {\r\n  @ViewChild(FormListComponent) formListComponent: FormListComponent;\r\n  @ViewChild(MatPaginator, { static: false }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: false }) sort: MatSort;\r\n  @ViewChild('stepper') stepper: MatStepper;\r\n  @ViewChild('selectFileButton', { static: false }) selectFileButton: ElementRef;\r\n  dataSource: MatTableDataSource<UserAccount>;\r\n  displayedColumns: string[] = [\r\n    'firstName',\r\n    'lastName',\r\n    'companyDescription',\r\n    'emailAddress',\r\n    'mobileNumber',\r\n    'status'\r\n  ];\r\n  currentTab: string = \"NONASC\";\r\n  userAccount = new UserAccount();\r\n  company = new Company();\r\n  userRole = new UserRole();\r\n  affiliation = new Affiliation();\r\n  eSign = new ESignature();\r\n\r\n  userAccountForm: FormGroup;\r\n  userInfo: FormGroup;\r\n  companyInfo: FormGroup;\r\n  eSignature: FormGroup;\r\n  accountInfo: FormGroup;\r\n  userAccountList = [];\r\n  userRoleList = [];\r\n  companyList = [];\r\n  affiliationList = [];\r\n\r\n  displayTable = false;\r\n  isShowUploadButton = false;\r\n  previewDocument = false;\r\n  safeURLSignature: any;\r\n  selectedFile: File;\r\n  fileSize: number;\r\n  uploadedSignatureFile: any;\r\n\r\n  passwordMatch = false;\r\n  hidePassword = true;\r\n  hideConfirmPassword = true;\r\n  confirmPasswords: any;\r\n  isFromUserProfile = false;\r\n  currentUserRole: any;\r\n\r\n  isAscUser: boolean;\r\n  //isUpdateAscUser: boolean;\r\n\r\n  constructor(\r\n    private apiService: ApiService,\r\n    private formBuilder: FormBuilder,\r\n    private sweetAlertService: SweetAlertService,\r\n    private dataStorageService: DataStorageService,\r\n    public validateFieldService: ValidateFieldService,\r\n    private router: Router,\r\n    private fileStorageService: FileStorageService,\r\n    private spinner: NgxSpinnerService,\r\n    private sanitizer: DomSanitizer,\r\n    private dialog: MatDialog,\r\n    @Optional() public dialogRef: MatDialogRef<UserAccountComponent>,\r\n    @Optional() @Inject(MAT_DIALOG_DATA) public data: any) {\r\n    if (data) {\r\n      this.isFromUserProfile = data.isFromProfile;\r\n      this.userAccount = data.userAccount;\r\n      this.viewUserInformation();\r\n    }\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.setFormValidator();\r\n    this.getUserPerTypeList();\r\n    this.getMaintenanceList();\r\n    // alert(this.isFromUserProfile)\r\n    this.currentUserRole = this.dataStorageService.getUserRole();\r\n\r\n  }\r\n\r\n  save(): void {\r\n    this.userAccount.username = this.userAccount.username.toLowerCase();\r\n    if (this.currentUserRole === 'ROLE_SUPER_ADMIN' || this.currentUserRole === 'ROLE_ADMIN') {\r\n      this.userAccount.company = null;\r\n    }\r\n    // this.apiService.save(ENDPOINTS.addUserAccount, this.userAccount).subscribe(\r\n    this.apiService.save(ENDPOINTS.userAccount, this.userAccount).subscribe(\r\n      (res: any) => {\r\n        if (res !== undefined) {\r\n          this.sweetAlertService.customSuccessMessage('Account has been created successfully.');\r\n          const evt = { index: null };\r\n          if (this.userAccount.userRole.name === USER_ROLES.ROLE_APPLICANT) {\r\n            evt.index = 0;\r\n          } else {\r\n            evt.index = 1;\r\n          }\r\n          this.accountInfo.reset();\r\n          if (this.isFromUserProfile) {\r\n            this.dialog.closeAll();\r\n          }\r\n        }\r\n      }, (err: any) => {\r\n        this.sweetAlertService.customErrorMessage(err?.error?.message ? err.error.message : err.error);\r\n        console.log('ERROR:::', err);\r\n\r\n      }, () => {\r\n        this.resetFormValidator();\r\n        if(this.currentTab==\"NONASC\")this.getUserPerTypeList();\r\n        else if(this.currentTab==\"ASC\")this.getUserPerTypeList(ACCOUNT_TYPE.ASC_USER);\r\n        this.userAccount = new UserAccount();\r\n      });\r\n  }\r\n\r\n  update(): void {\r\n    console.log('update')\r\n    const endpoint = this.userAccount.userRole.name === USER_ROLES.ROLE_APPLICANT ? ENDPOINTS.userAccount : ENDPOINTS.updateUserAccount;\r\n    this.apiService.update(endpoint, this.userAccount).subscribe(\r\n      (res: any) => {\r\n        if (res !== undefined) {\r\n          // this.updateCredentials();\r\n          this.sweetAlertService.customSuccessMessage('Account was successfully updated');\r\n          const evt = { index: null };\r\n          console.log(this.userAccount);\r\n\r\n          if (this.userAccount.userRole.name === USER_ROLES.ROLE_APPLICANT) {\r\n            evt.index = 0;\r\n          } else {\r\n            evt.index = 1;\r\n          }\r\n          // this.changeTab(evt);\r\n          this.accountInfo.reset();\r\n          \r\n          if (this.isFromUserProfile) {\r\n            this.dialog.closeAll();\r\n          }\r\n        }\r\n      }, (err: any) => {\r\n        console.log(err);\r\n        this.sweetAlertService.error(err);\r\n      }, () => {\r\n        \r\n        if(this.currentTab==\"NONASC\")this.getUserPerTypeList();\r\n        else if(this.currentTab==\"ASC\")this.getUserPerTypeList(ACCOUNT_TYPE.ASC_USER);\r\n        this.userAccount = new UserAccount();\r\n        this.resetFormValidator();\r\n      });\r\n  }\r\n\r\n\r\n  insert(isNewEntry: boolean): void {\r\n    this.userAccount.username = this.userAccount.username.toLowerCase();\r\n    if (this.currentUserRole === 'ROLE_SUPER_ADMIN' || this.currentUserRole === 'ROLE_ADMIN') {\r\n      this.userAccount.company = null;\r\n    }\r\n    // this.apiService.save(ENDPOINTS.addUserAccount, this.userAccount).subscribe(\r\n    this.apiService.insert(ENDPOINTS.userAccount, this.userAccount, isNewEntry).subscribe(\r\n      (res: any) => {\r\n        if (res !== undefined) {\r\n          this.sweetAlertService.customSuccessMessage(\r\n            isNewEntry? 'Account has been created successfully.': 'Account was successfully updated'\r\n          );\r\n          const evt = { index: null };\r\n          if (this.userAccount.userRole.name === USER_ROLES.ROLE_APPLICANT) {\r\n            evt.index = 0;\r\n          } else {\r\n            evt.index = 1;\r\n          }\r\n          this.accountInfo.reset();\r\n          if (this.isFromUserProfile) {\r\n            this.dialog.closeAll();\r\n          }\r\n        }\r\n      }, (err: any) => {\r\n        this.sweetAlertService.customErrorMessage(err?.error?.message ? err.error.message : err.error);\r\n        console.log('ERROR:::', err);\r\n\r\n      }, () => {\r\n        this.resetFormValidator();\r\n        if(this.currentTab==\"NONASC\")this.getUserPerTypeList();\r\n        else if(this.currentTab==\"ASC\")this.getUserPerTypeList(ACCOUNT_TYPE.ASC_USER);\r\n        this.userAccount = new UserAccount();\r\n      });\r\n  }\r\n\r\n  updateCredentials() {\r\n    const updatedAccount = {\r\n      password: this.userAccount.password,\r\n      username: this.userAccount.username,\r\n      userRole: this.userAccount.userRole\r\n    }\r\n    this.apiService.update(ENDPOINTS.updatePassword, updatedAccount).subscribe((res: any) => {\r\n      if (res !== undefined) {\r\n        this.sweetAlertService.success(res);\r\n        const evt = { index: null };\r\n        if (this.userAccount.userRole.name === USER_ROLES.ROLE_APPLICANT) {\r\n          evt.index = 0;\r\n        } else {\r\n          evt.index = 1;\r\n        }\r\n        this.changeTab(evt);\r\n        this.accountInfo.reset();\r\n      }\r\n    });\r\n  }\r\n\r\n  delete(): void {\r\n\r\n  }\r\n\r\n  getSelectedCompany(i): void {\r\n    if (i) {\r\n      this.apiService.findById(ENDPOINTS.company, i.value.id).subscribe(\r\n        (res: any) => {\r\n          this.company = res.responseData.data;\r\n        });\r\n    }\r\n  }\r\n\r\n  getUserPerTypeList(type = 'APPLICANT'): void {\r\n    this.spinner.show();\r\n    this.displayTable = false;\r\n\r\n    this.isAscUser = type !== 'APPLICANT';\r\n\r\n    this.apiService.findAll(`${ENDPOINTS.userAccountType}/${type}`).subscribe(\r\n      (res: any) => {\r\n        this.userAccountList = res.responseData.data;\r\n        this.displayTable = true;\r\n        this.spinner.hide();\r\n        this.dataSource = new MatTableDataSource<UserAccount>(res.responseData.data);\r\n        // this.dataSource.paginator = this.formListComponent.paginator;\r\n        // this.dataSource.sort = this.formListComponent.sort;\r\n      }\r\n    )\r\n  }\r\n\r\n  getMaintenanceList(): void {\r\n    this.apiService.findAll(ENDPOINTS.activeCompanies).subscribe((res: any) => {\r\n      this.companyList = res.responseData.data;\r\n    }, (err: any) => {\r\n    });\r\n    this.apiService.findAll(ENDPOINTS.activeMembersAffiliation).subscribe((res: any) => {\r\n      this.affiliationList = res.responseData.data;\r\n    }, (err: any) => {\r\n    });\r\n    this.apiService.findAll(ENDPOINTS.roles).subscribe((res: any) => {\r\n      this.userRoleList = res.responseData.data;\r\n    }, (err: any) => {\r\n    });\r\n\r\n  }\r\n\r\n  compareMembersAffiliation(value: any, selected: any): boolean {\r\n    if (value && selected) {\r\n      return value.description === selected.description;\r\n    }\r\n  }\r\n\r\n  compareCompany(value: any, selected: any): boolean {\r\n    if (value && selected) {\r\n      return value.id === selected.id;\r\n    }\r\n  }\r\n\r\n  compareUserRole(value: any, selected: any): boolean {\r\n    if (value && selected) {\r\n      return value.id === selected.id;\r\n    }\r\n  }\r\n\r\n  confirmPassword(password): void {\r\n    if (this.userAccount.password === password) {\r\n      this.passwordMatch = true;\r\n    } else {\r\n      this.passwordMatch = false;\r\n    }\r\n  }\r\n\r\n  // get password() {\r\n  //   let password = this.accountInfo.controls[\"password\"].value;\r\n  //   if (password === null || password === '' || password === undefined) {\r\n  //     this.accountInfo.controls['password'].clearValidators();\r\n  //     this.accountInfo.controls[\"confirmPasswords\"].clearValidators();\r\n  //   } else {\r\n  //     this.accountInfo.controls['password'].setValidators([Validators.required, Validators.pattern('((?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z]).{8,30})'), Validators.minLength(8)]);\r\n  //     this.accountInfo.controls[\"confirmPasswords\"].setValidators([Validators.required]);\r\n  //   }\r\n  //   this.accountInfo.controls['password'].updateValueAndValidity();\r\n  //   this.accountInfo.controls['confirmPasswords'].updateValueAndValidity();\r\n  //   return this.accountInfo.controls[\"password\"].value\r\n  // }\r\n  viewUserInformation(): void {\r\n    // if (this.isAscUser || this.userAccount.id) {\r\n    //   this.stepper.selectedIndex = 0;\r\n    // }\r\n    const accountId = this.formListComponent?.idForUpdate ?\r\n    this.formListComponent.idForUpdate : this.userAccount.id;\r\n\r\n    this.eSign.signatureAttachmentReference = null;\r\n    this.eSign.fileURL = null;\r\n    this.eSign.originalFilename = null;\r\n    this.apiService.findById(ENDPOINTS.userAccount, accountId).subscribe(\r\n      (res: any) => {\r\n        this.userAccount = res.responseData.data;\r\n        this.company = res.responseData.data.company;\r\n        this.affiliation = this.userAccount.company.membersAffiliation;\r\n        this.userRole = this.userAccount.userRole;\r\n        if (this.userAccount.signatureAttachmentReference) {\r\n          this.getEsignature()\r\n        } else {\r\n          this.selectFileButton.nativeElement.value = '';\r\n        }\r\n      });\r\n  }\r\n\r\n  openCompanyComponent(): void {\r\n    const dialogRef = this.dialog.open(AddCompanyComponent, {\r\n      width: '80%',\r\n      height: '85%',\r\n      data: {\r\n        isFromModal: true,\r\n        isUserRegistration: true\r\n      }\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log('The dialog was closed', result);\r\n      if (result) {\r\n        this.company = result;\r\n      }\r\n      this.getUserPerTypeList();\r\n    });\r\n  }\r\n\r\n  setFormValidator(): void {\r\n    this.userInfo = this.formBuilder.group({\r\n      firstName: ['', Validators.required],\r\n      middleName: [''],\r\n      lastName: ['', Validators.required],\r\n      mobileNumber: ['', Validators.required],\r\n      userRole: [''],\r\n      company: [''],\r\n    });\r\n    this.eSignature = this.formBuilder.group({\r\n      eSignature: ['', Validators.required],\r\n    });\r\n\r\n    if (!this.isFromUserProfile) {\r\n      this.accountInfo = this.formBuilder.group({\r\n        userName: ['', [Validators.required, Validators.pattern('[a-zA-Z0-9.-_]{1,}@[a-zA-Z.-]{2,}[.]{1}[a-zA-Z]{2,}')]],\r\n        // userRole: ['', Validators.required],\r\n        userRole: [''],\r\n        password: ['', [Validators.required, Validators.pattern('((?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z]).{8,30})'), Validators.minLength(8)]],\r\n        confirmPasswords: ['', Validators.required],\r\n      });\r\n    } else {\r\n      this.accountInfo = this.formBuilder.group({\r\n        userName: ['', [Validators.required, Validators.pattern('[a-zA-Z0-9.-_]{1,}@[a-zA-Z.-]{2,}[.]{1}[a-zA-Z]{2,}')]],\r\n        password: ['', Validators.required],\r\n        confirmPasswords: ['', Validators.required],\r\n      });\r\n    }\r\n    this.userAccountForm = new FormGroup({\r\n      userInfo: new FormControl(),\r\n      companyInfo: new FormControl(),\r\n      eSignature: new FormControl(),\r\n      accountInfo: new FormControl(),\r\n    });\r\n  }\r\n\r\n  resetFormValidator(): void {\r\n    this.userAccount = new UserAccount();\r\n    this.company = new Company();\r\n    this.affiliation = new Affiliation();\r\n    this.previewDocument = false;\r\n    this.userAccountForm.markAsUntouched();\r\n    this.userAccountForm.markAsPristine();\r\n    this.dialog.closeAll();\r\n    if (this.isFromUserProfile) {\r\n      this.dialog.closeAll();\r\n    } else {\r\n      this.router.navigate(['asc/page/maintenance/accounts']);\r\n    }\r\n\r\n  }\r\n\r\n  changeTab(evt) {\r\n    this.userAccount = new UserAccount();\r\n    this.resetFormValidator();\r\n    if (evt.index === 0) {\r\n      this.currentTab=\"NONASC\";\r\n      //     this.isUpdateAscUser = false;\r\n      this.getUserPerTypeList();\r\n      this.displayedColumns = [\r\n        'firstName',\r\n        'lastName',\r\n        'companyDescription',\r\n        'emailAddress',\r\n        'mobileNumber',\r\n        'status'\r\n      ];\r\n    } else if (evt.index === 1) {\r\n      this.currentTab=\"ASC\";\r\n      //     this.isUpdateAscUser = true;\r\n      this.getUserPerTypeList(ACCOUNT_TYPE.ASC_USER);\r\n      this.displayedColumns = [\r\n        'firstName',\r\n        'lastName',\r\n        'userRole',\r\n        'emailAddress',\r\n        'status'\r\n      ];\r\n    }\r\n  }\r\n\r\n  selectFile(event) {\r\n    this.isShowUploadButton = false;\r\n\r\n    if (event.target.files[0]) {\r\n      this.fileSize = event.target.files[0].size;\r\n\r\n      if (this.fileSize > 15000000) {\r\n        this.sweetAlertService.customErrorMessage(`Attachments total file size should not exceed 15MB.`);\r\n        event.target.value = '';\r\n        return;\r\n\r\n      } else {\r\n        this.isShowUploadButton = true;\r\n        const fileURL = URL.createObjectURL(event.target.files[0]);\r\n        this.previewDocument = true;\r\n\r\n        this.safeURLSignature = this.sanitizer.bypassSecurityTrustResourceUrl(fileURL);\r\n\r\n        const reader = new FileReader();\r\n        const [file] = event.target.files;\r\n\r\n        reader.readAsDataURL(file);\r\n        reader.onload = () => {\r\n        };\r\n\r\n        this.selectedFile = event.target.files[0];\r\n      }\r\n    }\r\n  }\r\n\r\n  viewDocument() {\r\n    if (this.uploadedSignatureFile) {\r\n      window.open(this.uploadedSignatureFile.fileURL);\r\n    } else {\r\n      window.open(this.eSign.fileURL);\r\n    }\r\n  }\r\n\r\n  uploadSignature() {\r\n    Swal.fire({\r\n      text: 'Are you sure you want to upload this as e-Signature?',\r\n      icon: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Confirm'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.spinner.show();\r\n\r\n        // TODO: CHANGE ATTACHMENT TYPE WHEN SIGNATURE IS AVAILABLE IN BE\r\n        const accountId = this.formListComponent?.idForUpdate ?\r\n          this.formListComponent.idForUpdate : this.userAccount.id;\r\n        const params = `?accountId=${accountId}`;\r\n\r\n        this.fileStorageService.pushFileToStorage(ENDPOINTS.signature, this.selectedFile, params)\r\n          .subscribe((res: any) => {\r\n            this.uploadedSignatureFile = res.responseData.data;\r\n\r\n            this.addToESignature(this.uploadedSignatureFile);\r\n\r\n            this.userAccount.signatureAttachmentReference = this.uploadedSignatureFile.signatureAttachmentReference;\r\n            this.updateUserSignatureReference();\r\n            this.hideSpinner();\r\n            this.sweetAlertService.customSuccessMessage('Signature successfully uploaded.');\r\n            this.selectedFile = null;\r\n\r\n            this.getEsignature();\r\n            this.isShowUploadButton = false;\r\n\r\n          }, (err: any) => {\r\n            this.hideSpinner();\r\n            this.sweetAlertService.error(err);\r\n          }, () => {\r\n            this.hideSpinner();\r\n          });\r\n      } else {\r\n        this.selectedFile = null;\r\n      }\r\n    });\r\n  }\r\n\r\n  updateUserSignatureReference() {\r\n    const endpoint = this.isAscUser ? ENDPOINTS.userAccount : ENDPOINTS.updateUserAccount;\r\n    this.apiService.update(endpoint, this.userAccount).subscribe(\r\n      (res: any) => {\r\n        console.log(res);\r\n      });\r\n  }\r\n\r\n  addToESignature(obj: any) {\r\n    this.eSign.signatureAttachmentReference = obj.signatureAttachmentReference;\r\n    this.eSign.id = obj.id;\r\n    this.eSign.originalFilename = obj.originalFilename;\r\n    this.eSign.filename = obj.filename;\r\n    this.eSign.fileExtension = obj.fileExtension;\r\n    this.eSign.fileURL = obj.fileURL;\r\n    this.eSign.accountId = obj.accountId;\r\n    this.eSign.documentFormat = obj.documentFormat;\r\n  }\r\n\r\n  hideSpinner() {\r\n    setTimeout(() => {\r\n      this.spinner.hide();\r\n    }, 1);\r\n  }\r\n\r\n  getEsignature() {\r\n    const accountId = this.formListComponent?.idForUpdate ?\r\n      this.formListComponent.idForUpdate : this.userAccount.id;\r\n    this.spinner.show();\r\n\r\n    this.apiService.findByParam(`${ENDPOINTS.signature}/account-id`, accountId).subscribe(\r\n      (res: any) => {\r\n        if (res) {\r\n          this.eSign = res?.responseData?.data;\r\n        }\r\n        this.hideSpinner();\r\n      }, (err: any) => {\r\n        this.hideSpinner();\r\n        console.error(err);\r\n      });\r\n  }\r\n\r\n  resendEmail(): void {\r\n    this.apiService.save(ENDPOINTS.adminResendVerificationCode + `/${this.userAccount.username}`, this.userAccount).subscribe(\r\n      (res: any) => {\r\n        this.sweetAlertService.customSuccessMessage('Email verification has been sent');\r\n      }\r\n    )\r\n  }\r\n\r\n  deleteESignature(): void {\r\n    Swal.fire({\r\n      text: 'Are you sure you want to upload this as e-Signature?',\r\n      icon: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Confirm'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.spinner.show();\r\n        this.apiService.deleteById(ENDPOINTS.signature, this.eSign?.id).subscribe(\r\n          res => {\r\n            this.eSign = new ESignature();\r\n            this.previewDocument = false;\r\n            this.spinner.hide();\r\n          }, err => this.spinner.hide());\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { UserAccountRoutingModule } from './user-account-routing.module';\r\nimport { UserAccountComponent } from './user-account.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { AngularMaterialModule } from '@shared';\r\nimport { FragmentsModule } from 'app/modules/fragments/fragments.module';\r\n\r\n\r\n@NgModule({\r\n  declarations: [UserAccountComponent],\r\n  imports: [\r\n    CommonModule,\r\n    UserAccountRoutingModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule,\r\n    AngularMaterialModule,\r\n    FragmentsModule\r\n  ]\r\n})\r\nexport class UserAccountModule { }\r\n","export default \".container-fluid ::ng-deep .mat-step-header .mat-step-icon {\\n  background-color: #850000;\\n}\\n.container-fluid ::ng-deep .mat-step-header .mat-step-icon-selected {\\n  background-color: #348f00;\\n  zoom: 1.8;\\n}\\n.container-fluid .title {\\n  padding-left: 10px;\\n}\\n.container-fluid .title mat-label {\\n  font-size: 25px;\\n  font-weight: 600;\\n  color: #9c0000;\\n}\\n.container-fluid label {\\n  font-size: 12px;\\n  font-weight: 600;\\n}\\n.container-fluid p {\\n  font-weight: 400;\\n  color: gray;\\n  font-size: 12px;\\n}\\n.container-fluid .button-content {\\n  text-align: center;\\n}\\n.container-fluid .badge {\\n  margin-top: -15px;\\n  font-size: 15px;\\n  color: red;\\n}\\n.container-fluid .dd {\\n  float: left;\\n  font-size: 15px;\\n  margin: 10px 0px 0px 0px;\\n  font-weight: 500;\\n}\\n.requiredIcon ::ng-deep .ng-placeholder::after {\\n  font-family: \\\"Material Icons\\\";\\n  color: #850000;\\n  content: \\\"notification_important\\\";\\n}\\nbody {\\n  max-height: 150px;\\n  overflow-y: scroll;\\n  background-color: red;\\n}\\n::ng-deep .mat-tab-label .mat-tab-label-content {\\n  font-weight: bold;\\n}\\n.fields {\\n  padding: 0px 10px;\\n}\\nh4 {\\n  margin: 16px 0px 16px -10px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9wYWdlcy9tYWludGVuYW5jZS91c2VyLWFjY291bnQvdXNlci1hY2NvdW50LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUdFO0VBQ0UseUJBQUE7QUFGSjtBQU1FO0VBQ0UseUJBQUE7RUFDQSxTQUFBO0FBSko7QUFPRTtFQUNFLGtCQUFBO0FBTEo7QUFPSTtFQUNFLGVBQUE7RUFDQSxnQkFBQTtFQUNBLGNBQUE7QUFMTjtBQVNFO0VBQ0UsZUFBQTtFQUNBLGdCQUFBO0FBUEo7QUFVRTtFQUNFLGdCQUFBO0VBQ0EsV0FBQTtFQUNBLGVBQUE7QUFSSjtBQVdFO0VBQ0Usa0JBQUE7QUFUSjtBQVlFO0VBR0UsaUJBQUE7RUFDQSxlQUFBO0VBQ0EsVUFBQTtBQVpKO0FBZUU7RUFDRSxXQUFBO0VBQ0EsZUFBQTtFQUNBLHdCQUFBO0VBQ0EsZ0JBQUE7QUFiSjtBQW9CQTtFQUNFLDZCQUFBO0VBQ0EsY0FBQTtFQUNBLGlDQUFBO0FBakJGO0FBb0JBO0VBQ0UsaUJBQUE7RUFDQSxrQkFBQTtFQUNBLHFCQUFBO0FBakJGO0FBMkJFO0VBQ0UsaUJBQUE7QUF4Qko7QUE2QkE7RUFDRSxpQkFBQTtBQTFCRjtBQTZCQTtFQUNFLDJCQUFBO0FBMUJGIiwiZmlsZSI6InNyYy9hcHAvbW9kdWxlcy9wYWdlcy9tYWludGVuYW5jZS91c2VyLWFjY291bnQvdXNlci1hY2NvdW50LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRhaW5lci1mbHVpZCB7XHJcbiAgLy8gcGFkZGluZzogMTBweCA0MHB4O1xyXG5cclxuICA6Om5nLWRlZXAgLm1hdC1zdGVwLWhlYWRlciAubWF0LXN0ZXAtaWNvbiB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMTMzLCAwLCAwKTtcclxuXHJcbiAgfVxyXG5cclxuICA6Om5nLWRlZXAgLm1hdC1zdGVwLWhlYWRlciAubWF0LXN0ZXAtaWNvbi1zZWxlY3RlZCB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoNTIsIDE0MywgMCk7XHJcbiAgICB6b29tOiAxLjg7XHJcbiAgfVxyXG5cclxuICAudGl0bGUge1xyXG4gICAgcGFkZGluZy1sZWZ0OiAxMHB4O1xyXG5cclxuICAgIG1hdC1sYWJlbCB7XHJcbiAgICAgIGZvbnQtc2l6ZTogMjVweDtcclxuICAgICAgZm9udC13ZWlnaHQ6IDYwMDtcclxuICAgICAgY29sb3I6IHJnYigxNTYsIDAsIDApO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgbGFiZWwge1xyXG4gICAgZm9udC1zaXplOiAxMnB4O1xyXG4gICAgZm9udC13ZWlnaHQ6IDYwMDtcclxuICB9XHJcblxyXG4gIHAge1xyXG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcclxuICAgIGNvbG9yOiBncmF5O1xyXG4gICAgZm9udC1zaXplOiAxMnB4O1xyXG4gIH1cclxuXHJcbiAgLmJ1dHRvbi1jb250ZW50IHtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICB9XHJcblxyXG4gIC5iYWRnZSB7XHJcbiAgICAvLyAgZmxvYXQ6IHJpZ2h0O1xyXG4gICAgLy8gd2lkdGg6IGF1dG87XHJcbiAgICBtYXJnaW4tdG9wOiAtMTVweDtcclxuICAgIGZvbnQtc2l6ZTogMTVweDtcclxuICAgIGNvbG9yOiByZWQ7XHJcbiAgfVxyXG5cclxuICAuZGQge1xyXG4gICAgZmxvYXQ6IGxlZnQ7XHJcbiAgICBmb250LXNpemU6IDE1cHg7XHJcbiAgICBtYXJnaW46IDEwcHggMHB4IDBweCAwcHg7XHJcbiAgICBmb250LXdlaWdodDogNTAwO1xyXG4gIH1cclxuXHJcbn1cclxuXHJcbm5nLXNlbGVjdCB7fVxyXG5cclxuLnJlcXVpcmVkSWNvbiA6Om5nLWRlZXAgLm5nLXBsYWNlaG9sZGVyOjphZnRlciB7XHJcbiAgZm9udC1mYW1pbHk6IFwiTWF0ZXJpYWwgSWNvbnNcIjtcclxuICBjb2xvcjogIzg1MDAwMDtcclxuICBjb250ZW50OiBcIm5vdGlmaWNhdGlvbl9pbXBvcnRhbnRcIjtcclxufVxyXG5cclxuYm9keSB7XHJcbiAgbWF4LWhlaWdodDogMTUwcHg7XHJcbiAgb3ZlcmZsb3cteTogc2Nyb2xsO1xyXG4gIGJhY2tncm91bmQtY29sb3I6IHJlZDtcclxufVxyXG5cclxuOjpuZy1kZWVwIHtcclxuICBtYXQtdGFiLWdyb3VwIHtcclxuICAgIC8vIGJhY2tncm91bmQ6ICNmZmE2YTIgIWltcG9ydGFudDtcclxuICAgIC8vIGJvcmRlcjogMXB4IHNvbGlkIHJlZCAhaW1wb3J0YW50O1xyXG4gICAgLy8gYm9yZGVyLXJhZGl1czogMjBweCAyMHB4IDAgMDtcclxuICB9XHJcblxyXG4gIC5tYXQtdGFiLWxhYmVsIC5tYXQtdGFiLWxhYmVsLWNvbnRlbnQge1xyXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgfVxyXG59XHJcblxyXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuLmZpZWxkcyB7XHJcbiAgcGFkZGluZzogMHB4IDEwcHg7XHJcbn1cclxuXHJcbmg0IHtcclxuICBtYXJnaW46IDE2cHggMHB4IDE2cHggLTEwcHg7XHJcbn1cclxuIl19 */\";"],"sourceRoot":"webpack:///"}