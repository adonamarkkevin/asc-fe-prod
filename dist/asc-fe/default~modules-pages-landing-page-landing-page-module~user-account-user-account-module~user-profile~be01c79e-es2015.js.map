{"version":3,"sources":["./src/app/modules/fragments/index.ts","./src/app/modules/pages/maintenance/user-account/user-account-routing.module.ts","./src/app/core/models/eSignature.model.ts","./src/app/modules/pages/maintenance/user-account/user-account.component.ts","./src/app/modules/pages/maintenance/user-account/user-account.component.html","./src/app/modules/pages/maintenance/user-account/user-account.module.ts"],"names":[],"mappings":"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","file":"default~modules-pages-landing-page-landing-page-module~user-account-user-account-module~user-profile~be01c79e-es2015.js","sourcesContent":["export * from './form-action-buttons/form-action-buttons.component';\r\nexport * from './form-list/form-list.component';","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { UserAccountComponent } from './user-account.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: UserAccountComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class UserAccountRoutingModule { }\r\n","export class ESignature {\r\n    id: number;\r\n    accountId: number;\r\n    originalFilename: string;\r\n    filename: string;\r\n    fileExtension: string;\r\n    fileURL: string;\r\n    documentFormat: string;\r\n    signatureAttachmentReference: string;\r\n}\r\n","import { Component, ElementRef, Inject, OnInit, Optional, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatStepper } from '@angular/material/stepper';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { Router } from '@angular/router';\r\nimport { FormListComponent } from '@fragments';\r\nimport { Affiliation, Company, UserAccount, UserRole } from '@models';\r\nimport { ApiService, DataStorageService, SweetAlertService } from '@services';\r\nimport { ACCOUNT_TYPE, ENDPOINTS, USER_ROLES } from '@shared';\r\nimport { ESignature } from 'app/core/models/eSignature.model';\r\nimport { FileStorageService } from 'app/core/services/file.storage.service';\r\nimport { ValidateFieldService } from 'app/core/services/validate-field.service';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport Swal from 'sweetalert2';\r\nimport { AddCompanyComponent } from '../../company/add-company/add-company.component';\r\n\r\n@Component({\r\n  selector: 'app-user-account',\r\n  templateUrl: './user-account.component.html',\r\n  styleUrls: ['./user-account.component.scss']\r\n})\r\nexport class UserAccountComponent implements OnInit {\r\n  @ViewChild(FormListComponent) formListComponent: FormListComponent;\r\n  @ViewChild(MatPaginator, { static: false }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: false }) sort: MatSort;\r\n  @ViewChild('stepper') stepper: MatStepper;\r\n  @ViewChild('selectFileButton', { static: false }) selectFileButton: ElementRef;\r\n  dataSource: MatTableDataSource<UserAccount>;\r\n  displayedColumns: string[] = [\r\n    'firstName',\r\n    'lastName',\r\n    'companyDescription',\r\n    'emailAddress',\r\n    'mobileNumber',\r\n    'status'\r\n  ];\r\n  currentTab: string = \"NONASC\";\r\n  userAccount = new UserAccount();\r\n  company = new Company();\r\n  userRole = new UserRole();\r\n  affiliation = new Affiliation();\r\n  eSign = new ESignature();\r\n\r\n  userAccountForm: FormGroup;\r\n  userInfo: FormGroup;\r\n  companyInfo: FormGroup;\r\n  eSignature: FormGroup;\r\n  accountInfo: FormGroup;\r\n  userAccountList = [];\r\n  userRoleList = [];\r\n  companyList = [];\r\n  affiliationList = [];\r\n\r\n  displayTable = false;\r\n  isShowUploadButton = false;\r\n  previewDocument = false;\r\n  safeURLSignature: any;\r\n  selectedFile: File;\r\n  fileSize: number;\r\n  uploadedSignatureFile: any;\r\n\r\n  passwordMatch = false;\r\n  hidePassword = true;\r\n  hideConfirmPassword = true;\r\n  confirmPasswords: any;\r\n  isFromUserProfile = false;\r\n  currentUserRole: any;\r\n\r\n  isAscUser: boolean;\r\n  //isUpdateAscUser: boolean;\r\n\r\n  constructor(\r\n    private apiService: ApiService,\r\n    private formBuilder: FormBuilder,\r\n    private sweetAlertService: SweetAlertService,\r\n    private dataStorageService: DataStorageService,\r\n    public validateFieldService: ValidateFieldService,\r\n    private router: Router,\r\n    private fileStorageService: FileStorageService,\r\n    private spinner: NgxSpinnerService,\r\n    private sanitizer: DomSanitizer,\r\n    private dialog: MatDialog,\r\n    @Optional() public dialogRef: MatDialogRef<UserAccountComponent>,\r\n    @Optional() @Inject(MAT_DIALOG_DATA) public data: any) {\r\n    if (data) {\r\n      this.isFromUserProfile = data.isFromProfile;\r\n      this.userAccount = data.userAccount;\r\n      this.viewUserInformation();\r\n    }\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.setFormValidator();\r\n    this.getUserPerTypeList();\r\n    this.getMaintenanceList();\r\n    // alert(this.isFromUserProfile)\r\n    this.currentUserRole = this.dataStorageService.getUserRole();\r\n\r\n  }\r\n\r\n  save(): void {\r\n    this.userAccount.username = this.userAccount.username.toLowerCase();\r\n    if (this.currentUserRole === 'ROLE_SUPER_ADMIN' || this.currentUserRole === 'ROLE_ADMIN') {\r\n      this.userAccount.company = null;\r\n    }\r\n    // this.apiService.save(ENDPOINTS.addUserAccount, this.userAccount).subscribe(\r\n    this.apiService.save(ENDPOINTS.userAccount, this.userAccount).subscribe(\r\n      (res: any) => {\r\n        if (res !== undefined) {\r\n          this.sweetAlertService.customSuccessMessage('Account has been created successfully.');\r\n          const evt = { index: null };\r\n          if (this.userAccount.userRole.name === USER_ROLES.ROLE_APPLICANT) {\r\n            evt.index = 0;\r\n          } else {\r\n            evt.index = 1;\r\n          }\r\n          this.accountInfo.reset();\r\n          if (this.isFromUserProfile) {\r\n            this.dialog.closeAll();\r\n          }\r\n        }\r\n      }, (err: any) => {\r\n        this.sweetAlertService.customErrorMessage(err?.error?.message ? err.error.message : err.error);\r\n        console.log('ERROR:::', err);\r\n\r\n      }, () => {\r\n        this.resetFormValidator();\r\n        if(this.currentTab==\"NONASC\")this.getUserPerTypeList();\r\n        else if(this.currentTab==\"ASC\")this.getUserPerTypeList(ACCOUNT_TYPE.ASC_USER);\r\n        this.userAccount = new UserAccount();\r\n      });\r\n  }\r\n\r\n  update(): void {\r\n    console.log('update')\r\n    const endpoint = this.userAccount.userRole.name === USER_ROLES.ROLE_APPLICANT ? ENDPOINTS.userAccount : ENDPOINTS.updateUserAccount;\r\n    this.apiService.update(endpoint, this.userAccount).subscribe(\r\n      (res: any) => {\r\n        if (res !== undefined) {\r\n          // this.updateCredentials();\r\n          this.sweetAlertService.customSuccessMessage('Account was successfully updated');\r\n          const evt = { index: null };\r\n          console.log(this.userAccount);\r\n\r\n          if (this.userAccount.userRole.name === USER_ROLES.ROLE_APPLICANT) {\r\n            evt.index = 0;\r\n          } else {\r\n            evt.index = 1;\r\n          }\r\n          // this.changeTab(evt);\r\n          this.accountInfo.reset();\r\n          \r\n          if (this.isFromUserProfile) {\r\n            this.dialog.closeAll();\r\n          }\r\n        }\r\n      }, (err: any) => {\r\n        console.log(err);\r\n        this.sweetAlertService.error(err);\r\n      }, () => {\r\n        \r\n        if(this.currentTab==\"NONASC\")this.getUserPerTypeList();\r\n        else if(this.currentTab==\"ASC\")this.getUserPerTypeList(ACCOUNT_TYPE.ASC_USER);\r\n        this.userAccount = new UserAccount();\r\n        this.resetFormValidator();\r\n      });\r\n  }\r\n\r\n\r\n  insert(isNewEntry: boolean): void {\r\n    this.userAccount.username = this.userAccount.username.toLowerCase();\r\n    if (this.currentUserRole === 'ROLE_SUPER_ADMIN' || this.currentUserRole === 'ROLE_ADMIN') {\r\n      this.userAccount.company = null;\r\n    }\r\n    // this.apiService.save(ENDPOINTS.addUserAccount, this.userAccount).subscribe(\r\n    this.apiService.insert(ENDPOINTS.userAccount, this.userAccount, isNewEntry).subscribe(\r\n      (res: any) => {\r\n        if (res !== undefined) {\r\n          this.sweetAlertService.customSuccessMessage(\r\n            isNewEntry? 'Account has been created successfully.': 'Account was successfully updated'\r\n          );\r\n          const evt = { index: null };\r\n          if (this.userAccount.userRole.name === USER_ROLES.ROLE_APPLICANT) {\r\n            evt.index = 0;\r\n          } else {\r\n            evt.index = 1;\r\n          }\r\n          this.accountInfo.reset();\r\n          if (this.isFromUserProfile) {\r\n            this.dialog.closeAll();\r\n          }\r\n        }\r\n      }, (err: any) => {\r\n        this.sweetAlertService.customErrorMessage(err?.error?.message ? err.error.message : err.error);\r\n        console.log('ERROR:::', err);\r\n\r\n      }, () => {\r\n        this.resetFormValidator();\r\n        if(this.currentTab==\"NONASC\")this.getUserPerTypeList();\r\n        else if(this.currentTab==\"ASC\")this.getUserPerTypeList(ACCOUNT_TYPE.ASC_USER);\r\n        this.userAccount = new UserAccount();\r\n      });\r\n  }\r\n\r\n  updateCredentials() {\r\n    const updatedAccount = {\r\n      password: this.userAccount.password,\r\n      username: this.userAccount.username,\r\n      userRole: this.userAccount.userRole\r\n    }\r\n    this.apiService.update(ENDPOINTS.updatePassword, updatedAccount).subscribe((res: any) => {\r\n      if (res !== undefined) {\r\n        this.sweetAlertService.success(res);\r\n        const evt = { index: null };\r\n        if (this.userAccount.userRole.name === USER_ROLES.ROLE_APPLICANT) {\r\n          evt.index = 0;\r\n        } else {\r\n          evt.index = 1;\r\n        }\r\n        this.changeTab(evt);\r\n        this.accountInfo.reset();\r\n      }\r\n    });\r\n  }\r\n\r\n  delete(): void {\r\n\r\n  }\r\n\r\n  getSelectedCompany(i): void {\r\n    if (i) {\r\n      this.apiService.findById(ENDPOINTS.company, i.value.id).subscribe(\r\n        (res: any) => {\r\n          this.company = res.responseData.data;\r\n        });\r\n    }\r\n  }\r\n\r\n  getUserPerTypeList(type = 'APPLICANT'): void {\r\n    this.spinner.show();\r\n    this.displayTable = false;\r\n\r\n    this.isAscUser = type !== 'APPLICANT';\r\n\r\n    this.apiService.findAll(`${ENDPOINTS.userAccountType}/${type}`).subscribe(\r\n      (res: any) => {\r\n        this.userAccountList = res.responseData.data;\r\n        this.displayTable = true;\r\n        this.spinner.hide();\r\n        this.dataSource = new MatTableDataSource<UserAccount>(res.responseData.data);\r\n        // this.dataSource.paginator = this.formListComponent.paginator;\r\n        // this.dataSource.sort = this.formListComponent.sort;\r\n      }\r\n    )\r\n  }\r\n\r\n  getMaintenanceList(): void {\r\n    this.apiService.findAll(ENDPOINTS.activeCompanies).subscribe((res: any) => {\r\n      this.companyList = res.responseData.data;\r\n    }, (err: any) => {\r\n    });\r\n    this.apiService.findAll(ENDPOINTS.activeMembersAffiliation).subscribe((res: any) => {\r\n      this.affiliationList = res.responseData.data;\r\n    }, (err: any) => {\r\n    });\r\n    this.apiService.findAll(ENDPOINTS.roles).subscribe((res: any) => {\r\n      this.userRoleList = res.responseData.data;\r\n    }, (err: any) => {\r\n    });\r\n\r\n  }\r\n\r\n  compareMembersAffiliation(value: any, selected: any): boolean {\r\n    if (value && selected) {\r\n      return value.description === selected.description;\r\n    }\r\n  }\r\n\r\n  compareCompany(value: any, selected: any): boolean {\r\n    if (value && selected) {\r\n      return value.id === selected.id;\r\n    }\r\n  }\r\n\r\n  compareUserRole(value: any, selected: any): boolean {\r\n    if (value && selected) {\r\n      return value.id === selected.id;\r\n    }\r\n  }\r\n\r\n  confirmPassword(password): void {\r\n    if (this.userAccount.password === password) {\r\n      this.passwordMatch = true;\r\n    } else {\r\n      this.passwordMatch = false;\r\n    }\r\n  }\r\n\r\n  // get password() {\r\n  //   let password = this.accountInfo.controls[\"password\"].value;\r\n  //   if (password === null || password === '' || password === undefined) {\r\n  //     this.accountInfo.controls['password'].clearValidators();\r\n  //     this.accountInfo.controls[\"confirmPasswords\"].clearValidators();\r\n  //   } else {\r\n  //     this.accountInfo.controls['password'].setValidators([Validators.required, Validators.pattern('((?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z]).{8,30})'), Validators.minLength(8)]);\r\n  //     this.accountInfo.controls[\"confirmPasswords\"].setValidators([Validators.required]);\r\n  //   }\r\n  //   this.accountInfo.controls['password'].updateValueAndValidity();\r\n  //   this.accountInfo.controls['confirmPasswords'].updateValueAndValidity();\r\n  //   return this.accountInfo.controls[\"password\"].value\r\n  // }\r\n  viewUserInformation(): void {\r\n    // if (this.isAscUser || this.userAccount.id) {\r\n    //   this.stepper.selectedIndex = 0;\r\n    // }\r\n    const accountId = this.formListComponent?.idForUpdate ?\r\n    this.formListComponent.idForUpdate : this.userAccount.id;\r\n\r\n    this.eSign.signatureAttachmentReference = null;\r\n    this.eSign.fileURL = null;\r\n    this.eSign.originalFilename = null;\r\n    this.apiService.findById(ENDPOINTS.userAccount, accountId).subscribe(\r\n      (res: any) => {\r\n        this.userAccount = res.responseData.data;\r\n        this.company = res.responseData.data.company;\r\n        this.affiliation = this.userAccount.company.membersAffiliation;\r\n        this.userRole = this.userAccount.userRole;\r\n        if (this.userAccount.signatureAttachmentReference) {\r\n          this.getEsignature()\r\n        } else {\r\n          this.selectFileButton.nativeElement.value = '';\r\n        }\r\n      });\r\n  }\r\n\r\n  openCompanyComponent(): void {\r\n    const dialogRef = this.dialog.open(AddCompanyComponent, {\r\n      width: '80%',\r\n      height: '85%',\r\n      data: {\r\n        isFromModal: true,\r\n        isUserRegistration: true\r\n      }\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log('The dialog was closed', result);\r\n      if (result) {\r\n        this.company = result;\r\n      }\r\n      this.getUserPerTypeList();\r\n    });\r\n  }\r\n\r\n  setFormValidator(): void {\r\n    this.userInfo = this.formBuilder.group({\r\n      firstName: ['', Validators.required],\r\n      middleName: [''],\r\n      lastName: ['', Validators.required],\r\n      mobileNumber: ['', Validators.required],\r\n      userRole: [''],\r\n      company: [''],\r\n    });\r\n    this.eSignature = this.formBuilder.group({\r\n      eSignature: ['', Validators.required],\r\n    });\r\n\r\n    if (!this.isFromUserProfile) {\r\n      this.accountInfo = this.formBuilder.group({\r\n        userName: ['', [Validators.required, Validators.pattern('[a-zA-Z0-9.-_]{1,}@[a-zA-Z.-]{2,}[.]{1}[a-zA-Z]{2,}')]],\r\n        // userRole: ['', Validators.required],\r\n        userRole: [''],\r\n        password: ['', [Validators.required, Validators.pattern('((?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z]).{8,30})'), Validators.minLength(8)]],\r\n        confirmPasswords: ['', Validators.required],\r\n      });\r\n    } else {\r\n      this.accountInfo = this.formBuilder.group({\r\n        userName: ['', [Validators.required, Validators.pattern('[a-zA-Z0-9.-_]{1,}@[a-zA-Z.-]{2,}[.]{1}[a-zA-Z]{2,}')]],\r\n        password: ['', Validators.required],\r\n        confirmPasswords: ['', Validators.required],\r\n      });\r\n    }\r\n    this.userAccountForm = new FormGroup({\r\n      userInfo: new FormControl(),\r\n      companyInfo: new FormControl(),\r\n      eSignature: new FormControl(),\r\n      accountInfo: new FormControl(),\r\n    });\r\n  }\r\n\r\n  resetFormValidator(): void {\r\n    this.userAccount = new UserAccount();\r\n    this.company = new Company();\r\n    this.affiliation = new Affiliation();\r\n    this.previewDocument = false;\r\n    this.userAccountForm.markAsUntouched();\r\n    this.userAccountForm.markAsPristine();\r\n    this.dialog.closeAll();\r\n    if (this.isFromUserProfile) {\r\n      this.dialog.closeAll();\r\n    } else {\r\n      this.router.navigate(['asc/page/maintenance/accounts']);\r\n    }\r\n\r\n  }\r\n\r\n  changeTab(evt) {\r\n    this.userAccount = new UserAccount();\r\n    this.resetFormValidator();\r\n    if (evt.index === 0) {\r\n      this.currentTab=\"NONASC\";\r\n      //     this.isUpdateAscUser = false;\r\n      this.getUserPerTypeList();\r\n      this.displayedColumns = [\r\n        'firstName',\r\n        'lastName',\r\n        'companyDescription',\r\n        'emailAddress',\r\n        'mobileNumber',\r\n        'status'\r\n      ];\r\n    } else if (evt.index === 1) {\r\n      this.currentTab=\"ASC\";\r\n      //     this.isUpdateAscUser = true;\r\n      this.getUserPerTypeList(ACCOUNT_TYPE.ASC_USER);\r\n      this.displayedColumns = [\r\n        'firstName',\r\n        'lastName',\r\n        'userRole',\r\n        'emailAddress',\r\n        'status'\r\n      ];\r\n    }\r\n  }\r\n\r\n  selectFile(event) {\r\n    this.isShowUploadButton = false;\r\n\r\n    if (event.target.files[0]) {\r\n      this.fileSize = event.target.files[0].size;\r\n\r\n      if (this.fileSize > 15000000) {\r\n        this.sweetAlertService.customErrorMessage(`Attachments total file size should not exceed 15MB.`);\r\n        event.target.value = '';\r\n        return;\r\n\r\n      } else {\r\n        this.isShowUploadButton = true;\r\n        const fileURL = URL.createObjectURL(event.target.files[0]);\r\n        this.previewDocument = true;\r\n\r\n        this.safeURLSignature = this.sanitizer.bypassSecurityTrustResourceUrl(fileURL);\r\n\r\n        const reader = new FileReader();\r\n        const [file] = event.target.files;\r\n\r\n        reader.readAsDataURL(file);\r\n        reader.onload = () => {\r\n        };\r\n\r\n        this.selectedFile = event.target.files[0];\r\n      }\r\n    }\r\n  }\r\n\r\n  viewDocument() {\r\n    if (this.uploadedSignatureFile) {\r\n      window.open(this.uploadedSignatureFile.fileURL);\r\n    } else {\r\n      window.open(this.eSign.fileURL);\r\n    }\r\n  }\r\n\r\n  uploadSignature() {\r\n    Swal.fire({\r\n      text: 'Are you sure you want to upload this as e-Signature?',\r\n      icon: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Confirm'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.spinner.show();\r\n\r\n        // TODO: CHANGE ATTACHMENT TYPE WHEN SIGNATURE IS AVAILABLE IN BE\r\n        const accountId = this.formListComponent?.idForUpdate ?\r\n          this.formListComponent.idForUpdate : this.userAccount.id;\r\n        const params = `?accountId=${accountId}`;\r\n\r\n        this.fileStorageService.pushFileToStorage(ENDPOINTS.signature, this.selectedFile, params)\r\n          .subscribe((res: any) => {\r\n            this.uploadedSignatureFile = res.responseData.data;\r\n\r\n            this.addToESignature(this.uploadedSignatureFile);\r\n\r\n            this.userAccount.signatureAttachmentReference = this.uploadedSignatureFile.signatureAttachmentReference;\r\n            this.updateUserSignatureReference();\r\n            this.hideSpinner();\r\n            this.sweetAlertService.customSuccessMessage('Signature successfully uploaded.');\r\n            this.selectedFile = null;\r\n\r\n            this.getEsignature();\r\n            this.isShowUploadButton = false;\r\n\r\n          }, (err: any) => {\r\n            this.hideSpinner();\r\n            this.sweetAlertService.error(err);\r\n          }, () => {\r\n            this.hideSpinner();\r\n          });\r\n      } else {\r\n        this.selectedFile = null;\r\n      }\r\n    });\r\n  }\r\n\r\n  updateUserSignatureReference() {\r\n    const endpoint = this.isAscUser ? ENDPOINTS.userAccount : ENDPOINTS.updateUserAccount;\r\n    this.apiService.update(endpoint, this.userAccount).subscribe(\r\n      (res: any) => {\r\n        console.log(res);\r\n      });\r\n  }\r\n\r\n  addToESignature(obj: any) {\r\n    this.eSign.signatureAttachmentReference = obj.signatureAttachmentReference;\r\n    this.eSign.id = obj.id;\r\n    this.eSign.originalFilename = obj.originalFilename;\r\n    this.eSign.filename = obj.filename;\r\n    this.eSign.fileExtension = obj.fileExtension;\r\n    this.eSign.fileURL = obj.fileURL;\r\n    this.eSign.accountId = obj.accountId;\r\n    this.eSign.documentFormat = obj.documentFormat;\r\n  }\r\n\r\n  hideSpinner() {\r\n    setTimeout(() => {\r\n      this.spinner.hide();\r\n    }, 1);\r\n  }\r\n\r\n  getEsignature() {\r\n    const accountId = this.formListComponent?.idForUpdate ?\r\n      this.formListComponent.idForUpdate : this.userAccount.id;\r\n    this.spinner.show();\r\n\r\n    this.apiService.findByParam(`${ENDPOINTS.signature}/account-id`, accountId).subscribe(\r\n      (res: any) => {\r\n        if (res) {\r\n          this.eSign = res?.responseData?.data;\r\n        }\r\n        this.hideSpinner();\r\n      }, (err: any) => {\r\n        this.hideSpinner();\r\n        console.error(err);\r\n      });\r\n  }\r\n\r\n  resendEmail(): void {\r\n    this.apiService.save(ENDPOINTS.adminResendVerificationCode + `/${this.userAccount.username}`, this.userAccount).subscribe(\r\n      (res: any) => {\r\n        this.sweetAlertService.customSuccessMessage('Email verification has been sent');\r\n      }\r\n    )\r\n  }\r\n\r\n  deleteESignature(): void {\r\n    Swal.fire({\r\n      text: 'Are you sure you want to upload this as e-Signature?',\r\n      icon: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Confirm'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.spinner.show();\r\n        this.apiService.deleteById(ENDPOINTS.signature, this.eSign?.id).subscribe(\r\n          res => {\r\n            this.eSign = new ESignature();\r\n            this.previewDocument = false;\r\n            this.spinner.hide();\r\n          }, err => this.spinner.hide());\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<form>\r\n  <div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12 title\">\r\n        <mat-label>\r\n          <span class=\"material-icons\">badge</span> User Account\r\n        </mat-label>\r\n      </div>\r\n    </div>\r\n    <hr>\r\n\r\n    <mat-tab-group dynamicHeight *ngIf=\"isAscUser || userAccount.id\">\r\n      <!-- 1 -->\r\n      <mat-tab label=\"User Details\">\r\n        <form [formGroup]=\"userInfo\">\r\n          <div class=\"fields\">\r\n            <h4>\r\n              <mat-icon>label_important</mat-icon> Personal Information:\r\n            </h4>\r\n            <div class=\"row\">\r\n              <mat-form-field class=\"col-md-6\" appearance=\"outline\">\r\n                <mat-label> Given name: <span class=\"required-field\">\r\n                    <mat-icon>notification_important</mat-icon>\r\n                  </span></mat-label>\r\n                <input matInput [(ngModel)]=\"userAccount.firstName\" name=\"firstName\" formControlName=\"firstName\">\r\n              </mat-form-field>\r\n              <mat-form-field class=\"col-md-6\" appearance=\"outline\">\r\n                <mat-label> Middle name: </mat-label>\r\n                <input matInput [(ngModel)]=\"userAccount.middleName\" name=\"middleName\" formControlName=\"middleName\">\r\n              </mat-form-field>\r\n            </div>\r\n            <div class=\"row\">\r\n              <mat-form-field class=\"col-md-6\" appearance=\"outline\">\r\n                <mat-label> Last name: <span class=\"required-field\">\r\n                    <mat-icon>notification_important</mat-icon>\r\n                  </span></mat-label>\r\n                <input matInput [(ngModel)]=\"userAccount.lastName\" name=\"lastName\" formControlName=\"lastName\">\r\n              </mat-form-field>\r\n              <mat-form-field class=\"col-md-6\" appearance=\"outline\">\r\n                <mat-label> Mobile Number: <mat-icon>notification_important</mat-icon></mat-label>\r\n                <input matInput [(ngModel)]=\"userAccount.mobileNumber\" name=\"mobileNumber\" placeholder=\"09xxxxxxxxx\"\r\n                  formControlName=\"mobileNumber\" (keydown)=\"validateFieldService.numbersOnly($event)\" maxlength=\"11\">\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"row\">\r\n              <mat-form-field class=\"col-md-6\" appearance=\"outline\"\r\n              *ngIf=\"currentUserRole==='ROLE_SUPER_ADMIN' || currentUserRole==='ROLE_ADMIN'\">\r\n                <mat-label> User Role <mat-icon>notification_important</mat-icon>\r\n                </mat-label>\r\n                <mat-select [(ngModel)]=\"userAccount.userRole\" name=\"userRole\" [compareWith]=\"compareUserRole\"\r\n                  formControlName=\"userRole\" matNativeControl [disabled]=\"userAccount?.userRole?.name=='ROLE_APPLICANT'\">\r\n                  <mat-option *ngFor=\"let i of userRoleList\" [value]=\"i\">\r\n                    {{ i?.name?.replaceAll('ROLE_', '')?.replace('_', ' ')?.replace('ENCODER', 'EVALUATOR') }}\r\n                  </mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div>\r\n              <button class=\"col\" mat-raised-button color=\"warn\" *ngIf=\"userAccount?.firstName != undefined\r\n              && userAccount?.status === 'VERIFICATION_SENT' && userAccount?.accountType === 'APPLICANT'\" (click)=\"resendEmail()\">\r\n              <span class=\"material-icons\">mail</span> Resend Email Verification\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"fields\" *ngIf=\"userAccount?.userRole?.name=='ROLE_APPLICANT' && !isAscUser\">\r\n            <h4>\r\n              <mat-icon>label_important</mat-icon> Company Information:\r\n            </h4>\r\n            <div class=\"row\">\r\n              <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n                <mat-label> Company <mat-icon>notification_important</mat-icon>\r\n                </mat-label>\r\n                <mat-select [(ngModel)]=\"userAccount.company\" name=\"company\" [compareWith]=\"compareCompany\"\r\n                  formControlName=\"company\" matNativeControl (selectionChange)=\"getSelectedCompany($event)\">\r\n                  <mat-option (click)=\"openCompanyComponent()\">\r\n                    <span class=\"badge bg-success dd\">Add New Company</span>\r\n                  </mat-option>\r\n                  <mat-option *ngFor=\"let i of companyList\" [value]=\"i\">\r\n                    {{i.companyName}}\r\n                  </mat-option>\r\n\r\n                </mat-select>\r\n              </mat-form-field>\r\n            </div>\r\n            <div class=\"row\">\r\n              <mat-form-field class=\"col-md-6\" appearance=\"outline\">\r\n                <mat-label> Member Affiliation</mat-label>\r\n                <input matInput [value]=\"userAccount?.company?.membersAffiliation?.description\"\r\n                  name=\"membersAffiliation\" readonly>\r\n              </mat-form-field>\r\n              <mat-form-field class=\"col-md-6\" appearance=\"outline\">\r\n                <mat-label> Company Number: <span class=\"required-field\">*</span></mat-label>\r\n                <input matInput [value]=\"userAccount?.company?.companyMobileNo\" name=\"companyMobileNo\" readonly>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"row\">\r\n              <mat-form-field class=\"col-md-6\" appearance=\"outline\">\r\n                <mat-label> Telephone Number: </mat-label>\r\n                <input matInput [value]=\"userAccount?.company?.companyTelephoneNo\" name=\"companyTelephoneNo\" readonly>\r\n              </mat-form-field>\r\n              <mat-form-field class=\"col-md-6\" appearance=\"outline\">\r\n                <mat-label> Alternative Telephone Number: </mat-label>\r\n                <input matInput [value]=\"userAccount?.company?.companyTelephoneNo2\" name=\"companyTelephoneNo2\" readonly>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"row\">\r\n              <mat-form-field class=\"col-md-6\" appearance=\"outline\">\r\n                <mat-label> Contact Person: </mat-label>\r\n                <input matInput [value]=\"userAccount?.company?.contactPersonName\" name=\"contactPersonName\" readonly>\r\n              </mat-form-field>\r\n              <mat-form-field class=\"col-md-6\" appearance=\"outline\">\r\n                <mat-label> Contact Person Email: </mat-label>\r\n                <input matInput [value]=\"userAccount?.company?.contactPersonEmail\" name=\"contactPersonEmail\" readonly>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"col-md-12\" *ngIf=\"!userAccount?.id\">\r\n            <b><b class=\"material-icons\">error_outline</b> Note: Proceed to Account Information to complete adding of ASC user.</b>\r\n          </div>\r\n\r\n          <div class=\"container\">\r\n            <button mat-raised-button color=\"primary\" (click)=\"insert(false)\" [disabled]=\"!userInfo?.valid\" *ngIf=\"userAccount?.id\"><i class=\"material-icons color__white\">offline_pin</i> UPDATE</button>\r\n              <br>\r\n          </div>\r\n        </form>\r\n      </mat-tab>\r\n\r\n      <!-- 2 -->\r\n      <mat-tab label=\"E-Signature\" *ngIf=\"userAccount?.userRole?.name !== 'ROLE_APPLICANT' && userAccount?.id\">\r\n        <form [formGroup]=\"eSignature\">\r\n          <div class=\"row\">\r\n            <div class=\"col-md-12\" appearance=\"outline\">\r\n\r\n              <div class=\"row fields\">\r\n                <h4>\r\n                  <i class=\"material-icons\">upload</i> &nbsp;Upload e-Signature\r\n                </h4>\r\n                <br>\r\n\r\n                <div class=\"col-md-12\" appearance=\"outline\">\r\n                  <mat-label>Filename:  <mat-icon>notification_important</mat-icon></mat-label>\r\n                  <br>\r\n                  <br>\r\n                  <input #selectFileButton matInput [value]=\"eSign.originalFilename\" disabled\r\n                    *ngIf=\"eSign.originalFilename\">\r\n                  <input #selectFileButton class=\"file-upload\" type=\"file\" *ngIf=\"!eSign.originalFilename\" accept=\"image/*\"\r\n                    (change)=\"selectFile($event)\">\r\n                  <input type=\"hidden\" [(ngModel)]=\"eSign.signatureAttachmentReference\" formControlName=\"eSignature\">\r\n                  <br>\r\n                </div>\r\n                <div class=\"col-md-12\" appearance=\"outline\">\r\n\r\n                  <button mat-raised-button class=\"button-red button-right\" (click)=\"deleteESignature()\"\r\n                    *ngIf=\"eSign?.fileURL\">\r\n                    <i class=\"material-icons add-document color__white\">delete</i> DELETE E-SIGNATURE\r\n                  </button>\r\n\r\n                  <button mat-raised-button class=\"button-red button-right\" (click)=\"viewDocument()\"\r\n                    *ngIf=\"eSign?.signatureAttachmentReference\">\r\n                    <i class=\"material-icons add-document\">open_in_new</i> VIEW DOCUMENT\r\n                  </button>\r\n\r\n\r\n                  &nbsp; &nbsp;\r\n\r\n                  <button mat-raised-button class=\"button-red button-right\" (click)=\"uploadSignature()\"\r\n                    [disabled]=\"!safeURLSignature || !isShowUploadButton\" *ngIf=\"isShowUploadButton\">\r\n                    <i class=\"material-icons add-document color__white\">upload</i> UPLOAD\r\n                  </button>\r\n\r\n                  <br>\r\n                  <div class=\"row col-md-12\" appearance=\"outline\" *ngIf=\"previewDocument==true && (\r\n                          userAccount?.signatureAttachmentReference\r\n                        )\">\r\n                    <div class=\"file-upload\">\r\n                      <object [data]=\"safeURLSignature\" type=\"application/pdf\" width=\"100%\" height=\"400\">\r\n                        <iframe [src]=\"safeURLSignature\" width=\"100%\" height=\"400\">\r\n                          <p>This browser does not support PDF!</p>\r\n                        </iframe>\r\n                      </object>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"col-md-12\"><br></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </mat-tab>\r\n\r\n      <!-- 3 -->\r\n      <mat-tab label=\"Account Information\">\r\n        <form [formGroup]=\"accountInfo\">\r\n          <ng-template matStepLabel>Account Information</ng-template>\r\n          <div class=\"row fields\">\r\n            <h4>\r\n              <mat-icon>label_important</mat-icon> Account Information:\r\n            </h4>\r\n            <div class=\"row\">\r\n              <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n                <mat-label> Email Address: <span class=\"required-field\">\r\n                    <mat-icon>notification_important</mat-icon>\r\n                  </span></mat-label>\r\n                <input matInput [(ngModel)]=\"userAccount.username\" name=\"userName\" formControlName=\"userName\"\r\n                  type=\"email\" [readonly]=\"userAccount?.id\">\r\n              </mat-form-field>\r\n            </div>\r\n            <div class=\"row col-md-6\">\r\n              <mat-form-field appearance=\"outline\">\r\n                <mat-label> Password:\r\n                  <span class=\"required-field\">\r\n                    <mat-icon>notification_important</mat-icon>\r\n                  </span>\r\n                </mat-label>\r\n                <input matInput [type]=\"hidePassword ? 'password' : 'text'\" [(ngModel)]=\"userAccount.password\"\r\n                  name=\"password\" formControlName=\"password\">\r\n                <button type=\"button\" mat-icon-button matSuffix (click)=\"hidePassword = !hidePassword\"\r\n                  [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hidePassword\">\r\n                  <mat-icon>{{hidePassword ? 'visibility_off' : 'visibility'}}</mat-icon>\r\n                </button>\r\n              </mat-form-field>\r\n              <p *ngIf=\"accountInfo.get('password').dirty && accountInfo.controls['password'].errors\" class=\"badge\">\r\n                <mat-icon>warning</mat-icon>\r\n                Password must contain lower,upper case letter and number.\r\n              </p>\r\n            </div>\r\n            <div class=\"row col-md-6\">\r\n              <mat-form-field appearance=\"outline\">\r\n                <mat-label> Confirm Password:\r\n                  <span class=\"required-field\">\r\n                    <mat-icon>notification_important</mat-icon>\r\n                  </span>\r\n                </mat-label>\r\n                <input matInput [type]=\"hideConfirmPassword ? 'password' : 'text'\" [(ngModel)]=\"confirmPasswords\"\r\n                  name=\"confirmPasswords\" formControlName=\"confirmPasswords\"\r\n                  (keyup)=\"confirmPassword(confirmPasswords)\">\r\n                <button type=\"button\" mat-icon-button matSuffix (click)=\"hideConfirmPassword = !hideConfirmPassword\"\r\n                  [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hideConfirmPassword\">\r\n                  <mat-icon>{{hideConfirmPassword ? 'visibility_off' : 'visibility'}}</mat-icon>\r\n                </button>\r\n              </mat-form-field>\r\n              <p *ngIf=\"accountInfo.get('confirmPasswords').dirty && !passwordMatch\" class=\"badge\">\r\n                <mat-icon>warning</mat-icon>\r\n                Password not match\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </form>\r\n\r\n        <div class=\"row\">\r\n          <div class=\"col-md-12\">\r\n            <button mat-raised-button color=\"primary\" (click)=\"insert(true)\" [disabled]=\"!userInfo?.valid || !accountInfo?.valid || !userAccount?.userRole || !userAccount?.password || !confirmPasswords\"\r\n            *ngIf=\"!userAccount?.id\"><i class=\"material-icons color__white\">offline_pin</i> SAVE</button>\r\n            <button mat-raised-button color=\"primary\" (click)=\"updateCredentials()\" [disabled]=\"!accountInfo?.valid\" [hidden]=\"!userAccount?.id\"><i class=\"material-icons color__white\">offline_pin</i> UPDATE</button>  \r\n          </div>\r\n        </div>\r\n      </mat-tab>\r\n    </mat-tab-group>\r\n\r\n    <div class=\"row\">\r\n      <br>\r\n      <div class=\"container\">\r\n        <mat-tab-group mat-align-tabs=\"start\" (selectedTabChange)=\"changeTab($event)\" *ngIf=\"!isFromUserProfile\">\r\n          <!-- displayed columns will be changed in changeTab() -->\r\n          <mat-tab label=\"Non ASC users\">\r\n\r\n          </mat-tab>\r\n          <mat-tab label=\"ASC users\">\r\n\r\n          </mat-tab>\r\n        </mat-tab-group>\r\n        <br>\r\n        <span *ngIf=\"!isFromUserProfile && displayTable\">\r\n          <app-form-list [dataSource]=\"dataSource\"\r\n            [displayedColumns]=\"displayedColumns\" (selectInListFunction)=\"viewUserInformation()\">\r\n          </app-form-list>\r\n        </span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</form>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { UserAccountRoutingModule } from './user-account-routing.module';\r\nimport { UserAccountComponent } from './user-account.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { AngularMaterialModule } from '@shared';\r\nimport { FragmentsModule } from 'app/modules/fragments/fragments.module';\r\n\r\n\r\n@NgModule({\r\n  declarations: [UserAccountComponent],\r\n  imports: [\r\n    CommonModule,\r\n    UserAccountRoutingModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule,\r\n    AngularMaterialModule,\r\n    FragmentsModule\r\n  ]\r\n})\r\nexport class UserAccountModule { }\r\n"],"sourceRoot":"webpack:///"}