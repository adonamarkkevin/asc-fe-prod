{"version":3,"sources":["./src/app/modules/pages/account/user-registration/user-registration-routing.module.ts","./src/app/core/models/email.model.ts","./src/app/modules/pages/company/company-routing.module.ts","./src/app/modules/pages/company/add-company/add-company-routing.module.ts","./src/app/modules/pages/account/user-registration/user-registration.component.scss","./src/app/modules/pages/account/user-registration/user-registration.component.ts","./src/app/modules/pages/account/user-registration/user-registration.module.ts","./src/app/modules/pages/account/user-registration/user-registration.component.html","./src/app/modules/pages/company/add-company/add-company.module.ts","./src/app/modules/pages/company/company.module.ts","./src/app/modules/pages/company/index.ts"],"names":[],"mappings":"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","file":"default~modules-pages-landing-page-landing-page-module~user-profile-user-profile-module~user-registr~2e1d3186-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { UserRegistrationComponent } from './user-registration.component';\r\n\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: UserRegistrationComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class UserRegistrationRoutingModule { }\r\n","export class Email {\r\n    mailTo: String;\r\n    user: String;\r\n    verificationCode: Number;\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { URL_PATHS } from '@shared';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    children: [\r\n      {\r\n        path: URL_PATHS.LIST_COMPANY,\r\n        loadChildren: () => import('./list-company/list-company.module')\r\n          .then(m => m.ListCompanyModule)\r\n      },\r\n      {\r\n        path: URL_PATHS.ADD_COMPANY,\r\n        loadChildren: () => import('./add-company/add-company.module')\r\n          .then(m => m.AddCompanyModule)\r\n      },\r\n      {\r\n        path: URL_PATHS.UPDATE_COMPANY + '/:id',\r\n        loadChildren: () => import('./add-company/add-company.module')\r\n          .then(m => m.AddCompanyModule)\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class CompanyRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AddCompanyComponent } from './add-company.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AddCompanyComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AddCompanyRoutingModule { }\r\n","export default \".container-fluid {\\n  padding: 10px 40px;\\n}\\n.container-fluid ::ng-deep .mat-step-header .mat-step-icon {\\n  background-color: #850000;\\n}\\n.container-fluid ::ng-deep .mat-step-header .mat-step-icon-selected {\\n  background-color: #348f00;\\n  zoom: 1.8;\\n}\\n.container-fluid .title {\\n  padding-left: 10px;\\n}\\n.container-fluid .title mat-label {\\n  font-size: 25px;\\n  font-weight: 600;\\n  color: #9c0000;\\n}\\n.container-fluid label {\\n  font-size: 12px;\\n  font-weight: 600;\\n}\\n.container-fluid p {\\n  font-weight: 400;\\n  color: gray;\\n  font-size: 12px;\\n}\\n.container-fluid .button-content {\\n  text-align: center;\\n}\\n.container-fluid .badge {\\n  margin-top: -15px;\\n  font-size: 12px;\\n  color: red;\\n}\\n.container-fluid .dd {\\n  float: left;\\n  font-size: 15px;\\n  margin: 10px 0px 0px 0px;\\n  font-weight: 500;\\n}\\n.requiredIcon ::ng-deep .ng-placeholder::after {\\n  font-family: \\\"Material Icons\\\";\\n  color: #850000;\\n  content: \\\"notification_important\\\";\\n}\\nbody {\\n  max-height: 150px;\\n  overflow-y: scroll;\\n  background-color: red;\\n}\\n.message-body {\\n  padding: 20px 30px;\\n}\\n.form {\\n  background-color: red;\\n}\\nmat-hint {\\n  color: red;\\n  font-weight: 500;\\n  font-size: 1.25em;\\n}\\n.credential-creation {\\n  padding-bottom: 50px !important;\\n}\\n::ng-deep .mat-horizontal-stepper-header {\\n  pointer-events: none !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9wYWdlcy9hY2NvdW50L3VzZXItcmVnaXN0cmF0aW9uL3VzZXItcmVnaXN0cmF0aW9uLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksa0JBQUE7QUFDSjtBQUNJO0VBQ0kseUJBQUE7QUFDUjtBQUdJO0VBQ0kseUJBQUE7RUFDQSxTQUFBO0FBRFI7QUFJSTtFQUNJLGtCQUFBO0FBRlI7QUFHUTtFQUNJLGVBQUE7RUFDQSxnQkFBQTtFQUNBLGNBQUE7QUFEWjtBQUlJO0VBQ0ksZUFBQTtFQUNBLGdCQUFBO0FBRlI7QUFJSTtFQUNJLGdCQUFBO0VBQ0EsV0FBQTtFQUNBLGVBQUE7QUFGUjtBQUlJO0VBQ0ksa0JBQUE7QUFGUjtBQUlJO0VBR0ksaUJBQUE7RUFDQSxlQUFBO0VBQ0EsVUFBQTtBQUpSO0FBT0k7RUFDSSxXQUFBO0VBQ0EsZUFBQTtFQUNBLHdCQUFBO0VBQ0EsZ0JBQUE7QUFMUjtBQWNBO0VBQ0ksNkJBQUE7RUFDQSxjQUFBO0VBQ0EsaUNBQUE7QUFYSjtBQWNBO0VBQ0ksaUJBQUE7RUFDQSxrQkFBQTtFQUNBLHFCQUFBO0FBWEo7QUFjQTtFQUNJLGtCQUFBO0FBWEo7QUFjQTtFQUNJLHFCQUFBO0FBWEo7QUFrQkE7RUFDSSxVQUFBO0VBQ0EsZ0JBQUE7RUFDQSxpQkFBQTtBQWZKO0FBa0JBO0VBQ0ksK0JBQUE7QUFmSjtBQWtCQTtFQUNJLCtCQUFBO0FBZkoiLCJmaWxlIjoic3JjL2FwcC9tb2R1bGVzL3BhZ2VzL2FjY291bnQvdXNlci1yZWdpc3RyYXRpb24vdXNlci1yZWdpc3RyYXRpb24uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY29udGFpbmVyLWZsdWlke1xyXG4gICAgcGFkZGluZzogMTBweCA0MHB4O1xyXG5cclxuICAgIDo6bmctZGVlcCAubWF0LXN0ZXAtaGVhZGVyIC5tYXQtc3RlcC1pY29ue1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYigxMzMsIDAsIDApO1xyXG5cclxuICAgICB9XHJcblxyXG4gICAgOjpuZy1kZWVwIC5tYXQtc3RlcC1oZWFkZXIgLm1hdC1zdGVwLWljb24tc2VsZWN0ZWQge1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYig1MiwgMTQzLCAwKTtcclxuICAgICAgICB6b29tOiAxLjg7XHJcbiAgICAgfVxyXG5cclxuICAgIC50aXRsZXtcclxuICAgICAgICBwYWRkaW5nLWxlZnQ6IDEwcHg7XHJcbiAgICAgICAgbWF0LWxhYmVse1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDI1cHg7XHJcbiAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiA2MDA7XHJcbiAgICAgICAgICAgIGNvbG9yOiByZ2IoMTU2LCAwLCAwKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBsYWJlbHtcclxuICAgICAgICBmb250LXNpemU6IDEycHg7XHJcbiAgICAgICAgZm9udC13ZWlnaHQ6IDYwMDtcclxuICAgIH1cclxuICAgIHB7XHJcbiAgICAgICAgZm9udC13ZWlnaHQ6IDQwMDtcclxuICAgICAgICBjb2xvcjogZ3JheTtcclxuICAgICAgICBmb250LXNpemU6IDEycHg7XHJcbiAgICB9XHJcbiAgICAuYnV0dG9uLWNvbnRlbnR7XHJcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgfVxyXG4gICAgLmJhZGdle1xyXG4gICAgICAvLyAgZmxvYXQ6IHJpZ2h0O1xyXG4gICAgICAgIC8vIHdpZHRoOiBhdXRvO1xyXG4gICAgICAgIG1hcmdpbi10b3A6IC0xNXB4O1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMTJweDtcclxuICAgICAgICBjb2xvcjogcmVkO1xyXG4gICAgICAgIC8vIG1heC13aWR0aDogMTBweDtcclxuICAgIH1cclxuICAgIC5kZHtcclxuICAgICAgICBmbG9hdDogbGVmdDtcclxuICAgICAgICBmb250LXNpemU6IDE1cHg7XHJcbiAgICAgICAgbWFyZ2luOiAxMHB4IDBweCAwcHggMHB4O1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiA1MDA7XHJcbiAgICB9XHJcblxyXG59XHJcbi8vIG5nLXNlbGVjdHtcclxuXHJcblxyXG4vLyB9XHJcblxyXG4ucmVxdWlyZWRJY29uIDo6bmctZGVlcCAubmctcGxhY2Vob2xkZXI6OmFmdGVye1xyXG4gICAgZm9udC1mYW1pbHk6IFwiTWF0ZXJpYWwgSWNvbnNcIjtcclxuICAgIGNvbG9yOiAjODUwMDAwO1xyXG4gICAgY29udGVudDogXCJub3RpZmljYXRpb25faW1wb3J0YW50XCI7XHJcbn1cclxuXHJcbmJvZHl7XHJcbiAgICBtYXgtaGVpZ2h0OiAxNTBweDtcclxuICAgIG92ZXJmbG93LXk6IHNjcm9sbDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHJlZDtcclxufVxyXG5cclxuLm1lc3NhZ2UtYm9keXtcclxuICAgIHBhZGRpbmc6IDIwcHggMzBweDtcclxufVxyXG5cclxuLmZvcm17XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZWQ7XHJcbn1cclxuXHJcbi8vIDo6bmctZGVlcCAuY3VzdG9tLWRpYWxvZyA+IG1hdC1kaWFsb2ctY29udGFpbmVyIHtcclxuLy8gICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWJhY2tncm91bmQpO1xyXG4vLyAgIH1cclxuXHJcbm1hdC1oaW50IHtcclxuICAgIGNvbG9yOiByZWQ7XHJcbiAgICBmb250LXdlaWdodDogNTAwO1xyXG4gICAgZm9udC1zaXplOiAxLjI1ZW07XHJcbn1cclxuXHJcbi5jcmVkZW50aWFsLWNyZWF0aW9uIHtcclxuICAgIHBhZGRpbmctYm90dG9tOiA1MHB4ICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbjo6bmctZGVlcCAubWF0LWhvcml6b250YWwtc3RlcHBlci1oZWFkZXJ7XHJcbiAgICBwb2ludGVyLWV2ZW50czogbm9uZSAhaW1wb3J0YW50O1xyXG59Il19 */\";","import { Component, Inject, OnDestroy, OnInit, Optional, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTable, MatTableDataSource } from '@angular/material/table';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { AddCompanyComponent } from '@company';\r\nimport { Affiliation, Company, UserAccount, UserRole } from '@models';\r\nimport { ApiService, DataStorageService, SweetAlertService } from '@services';\r\nimport { ENDPOINTS, STATUSES } from '@shared';\r\nimport { ValidateFieldService } from 'app/core/services/validate-field.service';\r\nimport { Email } from '../../../../core/models/email.model';\r\n\r\n@Component({\r\n  selector: 'app-user-registration',\r\n  templateUrl: './user-registration.component.html',\r\n  styleUrls: ['./user-registration.component.scss']\r\n})\r\nexport class UserRegistrationComponent implements OnInit, OnDestroy {\r\n  @ViewChild(MatPaginator, { static: false }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: false }) sort: MatSort;\r\n  @ViewChild(MatTable, { static: false }) table: MatTable<UserAccount>;\r\n  dataSource: MatTableDataSource<UserAccount>;\r\n  // displayedColumns: string[] = ['name', 'status'];\r\n  statusList = [...STATUSES];\r\n\r\n  company = new Company();\r\n  userRole = new UserRole();\r\n  affiliation = new Affiliation();\r\n  userAccount = new UserAccount();\r\n  email = new Email();\r\n\r\n  userAccountList = [];\r\n  userRoleList = [];\r\n  companyList = [];\r\n  affiliationList = [];\r\n  dropDownDatasource: string[] = [];\r\n\r\n  userAccountForm: FormGroup;\r\n  acceptTerms: FormGroup;\r\n  userInfo: FormGroup;\r\n  companyInfo: FormGroup;\r\n  accountInfo: FormGroup;\r\n  firstFormGroup: FormGroup;\r\n  secondFormGroup: FormGroup;\r\n  passwordMatch = false;\r\n  process = 'SAVED';\r\n  hidePassword = true;\r\n  hideConfirmPassword = true;\r\n  isUpdate = false;\r\n  registerStatus = '';\r\n  confirmPasswords = '';\r\n  id: any;\r\n  isRegistration: boolean = false;\r\n\r\n  constructor(\r\n    private apiService: ApiService,\r\n    private formBuilder: FormBuilder,\r\n    private sweetAlertService: SweetAlertService,\r\n    private dataStorage: DataStorageService,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private dialog: MatDialog,\r\n    public validateFieldService: ValidateFieldService,\r\n    // @Inject(MAT_DIALOG_DATA) public data: any,\r\n    @Optional() public dialogRef: MatDialogRef<UserRegistrationComponent>,\r\n    @Optional() @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {\r\n    // Status for first time register\r\n    // this.registerStatus = data.status;\r\n    // this.registerStatus = 'Registered';\r\n    if(data.isRegister === true){\r\n      this.isRegistration = true;\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.registerStatus = this.data.status;\r\n    this.getList();\r\n    // this.checkProcessStatus();\r\n    this.setFormValidator2();\r\n    this.id = Number(this.route.snapshot.paramMap.get('id'));\r\n    if (this.id !== 0) {\r\n      this.isUpdate = true;\r\n      this.viewUserInformation();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    // this.dataStorage.saveUserAccountId(0);\r\n    this.userAccount = new UserAccount();\r\n    this.company = new Company();\r\n    this.registerStatus = '';\r\n  }\r\n\r\n  getList(): void {\r\n    this.apiService.findAll(ENDPOINTS.activeCompanies).subscribe((res: any) => {\r\n      this.companyList = res.responseData.data;\r\n      console.log(this.companyList);\r\n    });\r\n    this.apiService.findAll(ENDPOINTS.activeMembersAffiliation).subscribe(\r\n      (res: any) => {\r\n        this.affiliationList = res.responseData.data;\r\n      });\r\n\r\n  }\r\n\r\n  viewUserInformation(): void {\r\n    this.apiService.findById(ENDPOINTS.userAccount, this.id).subscribe(\r\n      (res: any) => {\r\n        this.userAccount = res.responseData.data;\r\n        this.company = res.responseData.data.company\r\n        // this.affiliation = this.company.membersAffiliation;\r\n        // console.log(this.userAccount);\r\n      });\r\n  }\r\n\r\n  getSelectedCompany(i): void {\r\n    if (i) {\r\n      this.apiService.findById(ENDPOINTS.company, i.value.id).subscribe(\r\n        (res: any) => {\r\n          this.company = res.responseData.data;\r\n          this.userAccount.company = res.responseData.data;\r\n        });\r\n    }\r\n  }\r\n\r\n  openCompanyComponent(): void {\r\n    const dialogRef = this.dialog.open(AddCompanyComponent, {\r\n      width: '80%',\r\n      height: '85%',\r\n      data: {\r\n        isFromModal: true,\r\n        isUserRegistration: true\r\n      }\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log('The dialog was closed', result);\r\n      this.getList();\r\n      if (result) {\r\n        this.company = result;\r\n        this.userAccount.company = result;\r\n      }\r\n    });\r\n  }\r\n\r\n  confirmPassword(password): void {\r\n    if (this.userAccount.password === password) {\r\n      this.passwordMatch = true;\r\n    } else {\r\n      this.passwordMatch = false;\r\n    }\r\n  }\r\n\r\n  save(): void {\r\n    this.userAccount.username = this.userAccount.username.toLowerCase();\r\n    this.apiService.save(ENDPOINTS.addUserAccount, this.userAccount).subscribe(\r\n      (res: any) => {\r\n        if (res !== undefined) {\r\n          // this.sweetAlertService.success(res);\r\n          this.sweetAlertService.customSuccessMessage('Your account was successfully created. Please check your email for verification.');\r\n          this.dialog.closeAll();\r\n        }\r\n      }, (err: any) => {\r\n        this.sweetAlertService.error(err);\r\n        console.log('ERROR:::', err);\r\n\r\n      }, () => {\r\n        // actions after subscription\r\n        this.resetFormValidator();\r\n        this.getList();\r\n        // this.dialogRef.close();\r\n      });\r\n  }\r\n\r\n  update(): void {\r\n    this.apiService.update(ENDPOINTS.updateUserAccount, this.userAccount).subscribe(\r\n      (res: any) => {\r\n        if (res !== undefined) {\r\n          this.sweetAlertService.success(res);\r\n          this.router.navigate(['/asc/page/account/user-list']);\r\n        }\r\n      }, (err: any) => {\r\n        console.log(err);\r\n\r\n        this.sweetAlertService.error(err);\r\n      }, () => {\r\n        // actions after subscription\r\n        this.resetFormValidator();\r\n        this.getList();\r\n      });\r\n  }\r\n\r\n  setFormValidator(): void {\r\n    this.userAccountForm = this.formBuilder.group({\r\n      firstName: ['', Validators.required],\r\n      lastName: ['', Validators.required],\r\n      userName: ['', Validators.required]\r\n    });\r\n  }\r\n\r\n  setFormValidator2(): void {\r\n    this.acceptTerms = this.formBuilder.group({\r\n      acceptTerms: ['', Validators.required]\r\n    });\r\n    this.userInfo = this.formBuilder.group({\r\n      firstName: ['', Validators.required],\r\n      middleName: [''],\r\n      lastName: ['', Validators.required],\r\n      mobileNumber: ['', Validators.required]\r\n    });\r\n    this.companyInfo = this.formBuilder.group({\r\n      company: ['', Validators.required],\r\n      companyAddress: [''],\r\n      companyMobileNo: [''],\r\n      companyTelephoneNo: [''],\r\n      companyTelephoneNo2: [''],\r\n      companyFaxNumber: [''],\r\n      contactPersonName:[''],\r\n      contactPersonEmail:[''],\r\n      membersAffiliation:[''],\r\n      // membershipAffiliation: ['',Validators.required],\r\n    });\r\n    this.accountInfo = this.formBuilder.group({\r\n      userName: ['', [Validators.required, Validators.email]],\r\n      password: ['', [Validators.required, Validators.pattern('((?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z]).{8,30})'), Validators.minLength(8)]],\r\n      confirmPasswords: ['', Validators.required],\r\n    });\r\n    this.userAccountForm = new FormGroup({\r\n      acceptTerms: new FormControl(),\r\n      userInfo: new FormControl(),\r\n      companyInfo: new FormControl(),\r\n      accountInfo: new FormControl()\r\n    });\r\n  }\r\n\r\n  checkProcessStatus(): void {\r\n    if (this.dataStorage.getUserAccount().id !== 0) {\r\n      this.process = 'UPDATE';\r\n      this.apiService.findById(ENDPOINTS.userAccount, this.dataStorage.getUserAccount().id).subscribe(\r\n        (res: any) => {\r\n          this.userAccount = res.responseData.data;\r\n          this.apiService.findById(ENDPOINTS.company, this.userAccount.company.id).subscribe(\r\n            (res1: any) => {\r\n              this.company = res1.responseData.data;\r\n            })\r\n        })\r\n    }\r\n  }\r\n\r\n  applyFilter(event: Event): void {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    // this.companyList.filter = filterValue.trim().toLowerCase();\r\n    // this.companyList = this.companyList.filter(cl => cl.companyName === event);\r\n  }\r\n\r\n  compareMembersAffiliation(value: any, selected: any): boolean {\r\n    // return value.description === selected.description;\r\n    if (value && selected) {\r\n      return value.description === selected.description;\r\n    }\r\n  }\r\n\r\n  compareCompany(value: any, selected: any): boolean {\r\n    if (value && selected) {\r\n      return value.id === selected.id;\r\n    }\r\n  }\r\n\r\n  resetFormValidator(): void {\r\n    this.userAccount = new UserAccount();\r\n    this.userAccountForm.markAsUntouched();\r\n    this.userAccountForm.markAsPristine();\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { AngularMaterialModule } from '@shared';\r\nimport { UserRegistrationRoutingModule } from './user-registration-routing.module';\r\nimport { UserRegistrationComponent } from './user-registration.component';\r\nimport { FragmentsModule } from '../../../fragments/fragments.module';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [UserRegistrationComponent],\r\n  imports: [\r\n    CommonModule,\r\n    UserRegistrationRoutingModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule,\r\n    AngularMaterialModule,\r\n    FragmentsModule\r\n  ],\r\n  exports: [\r\n    UserRegistrationComponent\r\n  ]\r\n})\r\nexport class UserRegistrationModule { }\r\n","export default \"<form>\\r\\n  <div class=\\\"container-fluid\\\"><br>\\r\\n    <div class=\\\"col-md-12 title\\\" *ngIf=\\\"!isUpdate\\\">\\r\\n      <mat-label>\\r\\n        Account Registration\\r\\n        <p> <i style=\\\"color: red;\\\"><i class=\\\"material-icons\\\" style=\\\"color: red;\\\">error_outline</i> All fields with\\r\\n          <span class=\\\"required-field\\\">*</span> are required,\\r\\n          </i> <i>Please provide all required\\r\\n            details to register.</i></p>\\r\\n        <p></p>\\r\\n      </mat-label>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-12 title\\\" *ngIf=\\\"isUpdate\\\">\\r\\n      <mat-label>\\r\\n        Update Account\\r\\n      </mat-label>\\r\\n      <button class=\\\"button-right button-red\\\" mat-raised-button [routerLink]=\\\"['/asc/page/account/user-list']\\\">\\r\\n        <mat-icon>list</mat-icon> VIEW USER LIST\\r\\n      </button>\\r\\n      <p>Please provide all required details.</p>\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <mat-horizontal-stepper linear #stepper>\\r\\n\\r\\n      <mat-step [stepControl]=\\\"acceptTerms\\\" *ngIf=\\\"isRegistration\\\">\\r\\n        <form [formGroup]=\\\"acceptTerms\\\">\\r\\n          <ng-template matStepLabel> Privacy Notice</ng-template>\\r\\n          <h4>\\r\\n            <mat-icon>label_important</mat-icon> Terms and Agreements\\r\\n          </h4>\\r\\n          <div class=\\\"row message-body\\\">\\r\\n            <p>Contrary to popular belief, Lorem Ipsum is not simply random text. It has roots in a piece of classical\\r\\n              Latin literature from 45 BC, making it over 2000 years old. Richard McClintock, a Latin professor at\\r\\n              Hampden-Sydney College in Virginia, looked up one of the more obscure Latin words, consectetur, from a\\r\\n              Lorem Ipsum passage, and going through the cites of the word in classical literature, discovered the\\r\\n              undoubtable source. Lorem Ipsum comes from sections 1.10.32 and 1.10.33 of \\\"de Finibus Bonorum et Malorum\\\"\\r\\n              (The Extremes of Good and Evil) by Cicero, written in 45 BC. This book is a treatise on the theory of\\r\\n              ethics, very popular during the Renaissance. The first line of Lorem Ipsum, \\\"Lorem ipsum dolor sit\\r\\n              amet..\\\", comes from a line in section 1.10.32.\\r\\n\\r\\n              The standard chunk of Lorem Ipsum used since the 1500s is reproduced below for those interested. Sections\\r\\n              1.10.32 and 1.10.33 from \\\"de Finibus Bonorum et Malorum\\\" by Cicero are also reproduced in their exact\\r\\n              original form, accompanied by English versions from the 1914 translation by H. Rackham.</p>\\r\\n          </div>\\r\\n          <div class=\\\"row\\\">\\r\\n            <section class=\\\"example-section\\\">\\r\\n              <mat-checkbox class=\\\"example-margin\\\" [(ngModel)]=\\\"userAccount.acceptTerms\\\" name=\\\"acceptTerms\\\"\\r\\n                formControlName=\\\"acceptTerms\\\">\\r\\n                Accept Terms and Agreement\\r\\n              </mat-checkbox>\\r\\n            </section>\\r\\n          </div><br>\\r\\n          <div>\\r\\n            <button mat-raised-button color=\\\"primary\\\" matStepperNext\\r\\n              *ngIf=\\\"userAccount.acceptTerms === true\\\">Next</button>\\r\\n          </div>\\r\\n        </form>\\r\\n      </mat-step>\\r\\n\\r\\n      <mat-step [stepControl]=\\\"userInfo\\\">\\r\\n        <form [formGroup]=\\\"userInfo\\\">\\r\\n          <ng-template matStepLabel>Personal Information</ng-template>\\r\\n          <div class=\\\"row fields\\\">\\r\\n            <h4>\\r\\n              <mat-icon>label_important</mat-icon> Personal Information:\\r\\n            </h4>\\r\\n            <div class=\\\"row\\\">\\r\\n              <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label> Given name:  <span class=\\\"required-field\\\">*</span></mat-label>\\r\\n                <input matInput [(ngModel)]=\\\"userAccount.firstName\\\" name=\\\"firstName\\\" formControlName=\\\"firstName\\\">\\r\\n              </mat-form-field>\\r\\n              <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label> Middle name: <span class=\\\"required-field\\\">\\r\\n                    <!-- <mat-icon>notification_important</mat-icon> -->\\r\\n                  </span></mat-label>\\r\\n                <input matInput [(ngModel)]=\\\"userAccount.middleName\\\" name=\\\"middleName\\\" formControlName=\\\"middleName\\\">\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n            <div class=\\\"row\\\">\\r\\n              <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label> Last name:  <span class=\\\"required-field\\\">*</span></mat-label>\\r\\n                <input matInput [(ngModel)]=\\\"userAccount.lastName\\\" name=\\\"lastName\\\" formControlName=\\\"lastName\\\">\\r\\n              </mat-form-field>\\r\\n              <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label> Mobile Number: <span class=\\\"required-field\\\">*</span></mat-label>\\r\\n                <input matInput [(ngModel)]=\\\"userAccount.mobileNumber\\\" name=\\\"mobileNumber\\\" placeholder=\\\"09xxxxxxxxx\\\"\\r\\n                  formControlName=\\\"mobileNumber\\\" (keydown)=\\\"validateFieldService.numbersOnly($event)\\\" maxlength=\\\"11\\\">\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n            <div class=\\\"row\\\">\\r\\n\\r\\n            </div>\\r\\n          </div>\\r\\n          <div>\\r\\n            <button mat-raised-button matStepperPrevious>Back</button>\\r\\n            <button mat-raised-button color=\\\"primary\\\" matStepperNext>Next</button>\\r\\n          </div>\\r\\n        </form>\\r\\n      </mat-step>\\r\\n\\r\\n      <mat-step [stepControl]=\\\"companyInfo\\\"\\r\\n        *ngIf=\\\"userAccount?.userRole?.name=='ROLE_APPLICANT'||registerStatus==='Register'\\\">\\r\\n        <form [formGroup]=\\\"companyInfo\\\">\\r\\n          <ng-template matStepLabel>Company Information</ng-template>\\r\\n          <div class=\\\"row fields\\\">\\r\\n            <h4>\\r\\n              <mat-icon>label_important</mat-icon> Company Information:\\r\\n            </h4>\\r\\n            <div class=\\\"row\\\">\\r\\n              <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label> Company  <span class=\\\"required-field\\\">*</span>\\r\\n                  <span class=\\\"badge rounded-pill bg-warning\\\" *ngIf=\\\"userAccount?.company?.status === 'FOR_APPROVAL'\\\">\\r\\n                    For Approval\\r\\n                  </span>\\r\\n                  <span class=\\\"badge rounded-pill bg-danger\\\" *ngIf=\\\"userAccount?.company?.delinquent \\\">\\r\\n                    With Penalty\\r\\n                  </span>\\r\\n                </mat-label>\\r\\n                <mat-select [(ngModel)]=\\\"userAccount.company\\\" name=\\\"company\\\" [compareWith]=\\\"compareCompany\\\"\\r\\n                  formControlName=\\\"company\\\" matNativeControl (selectionChange)=\\\"getSelectedCompany($event)\\\">\\r\\n                  <mat-option (click)=\\\"openCompanyComponent()\\\">\\r\\n                    <span class=\\\"badge bg-success dd\\\">Add New Company</span>\\r\\n                  </mat-option>\\r\\n                  <mat-option *ngFor=\\\"let i of companyList\\\" [value]=\\\"i\\\">\\r\\n                    {{i.companyName}}\\r\\n                  </mat-option>\\r\\n\\r\\n                </mat-select>\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n            <div class=\\\"row\\\">\\r\\n              <mat-form-field class=\\\"col-md-10\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label> Member Affiliation</mat-label>\\r\\n                <input matInput [value]=\\\"company?.membersAffiliation?.description\\\" name=\\\"membersAffiliation\\\"\\r\\n                  formControlName=\\\"membersAffiliation\\\" readonly>\\r\\n              </mat-form-field>\\r\\n              <!-- <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label> Company Number: </mat-label>\\r\\n                <input matInput [(ngModel)]=\\\"company.companyMobileNo\\\" name=\\\"companyMobileNo\\\"\\r\\n                  formControlName=\\\"companyMobileNo\\\" readonly>\\r\\n              </mat-form-field> -->\\r\\n\\r\\n              <!-- <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label> Telephone Number: </mat-label>\\r\\n                <input matInput [value]=\\\"company?.companyTelephoneNo\\\" name=\\\"companyTelephoneNo\\\"\\r\\n                  formControlName=\\\"companyTelephoneNo\\\" readonly>\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n            <div class=\\\"row\\\">\\r\\n              <mat-form-field class=\\\"col-md-4\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label> Alternate Telephone Number: </mat-label>\\r\\n                <input matInput [(ngModel)]=\\\"company.companyTelephoneNo2\\\" name=\\\"companyTelephoneNo2\\\"\\r\\n                  formControlName=\\\"companyTelephoneNo2\\\" readonly>\\r\\n              </mat-form-field>\\r\\n\\r\\n              <mat-form-field class=\\\"col-md-4\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label> Contact Person: </mat-label>\\r\\n                <input matInput [(ngModel)]=\\\"company.contactPersonName\\\" name=\\\"contactPersonName\\\"\\r\\n                  formControlName=\\\"contactPersonName\\\" readonly>\\r\\n              </mat-form-field>\\r\\n              <mat-form-field class=\\\"col-md-4\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label> Company Email Address: </mat-label>\\r\\n                <input matInput [(ngModel)]=\\\"company.contactPersonEmail\\\" name=\\\"contactPersonEmail\\\"\\r\\n                  formControlName=\\\"contactPersonEmail\\\" readonly>\\r\\n              </mat-form-field> -->\\r\\n            </div>\\r\\n          </div>\\r\\n          <div>\\r\\n            <button mat-raised-button matStepperPrevious>Back</button>\\r\\n            <button mat-raised-button color=\\\"primary\\\" matStepperNext>Next</button>\\r\\n          </div>\\r\\n        </form>\\r\\n      </mat-step>\\r\\n\\r\\n      <mat-step [stepControl]=\\\"accountInfo\\\">\\r\\n        <form [formGroup]=\\\"accountInfo\\\">\\r\\n          <ng-template matStepLabel>Account Information</ng-template>\\r\\n          <div class=\\\"row fields\\\">\\r\\n            <h4>\\r\\n              <mat-icon>label_important</mat-icon> Account Information:\\r\\n            </h4>\\r\\n            <div class=\\\"row\\\">\\r\\n              <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label> Email Address:  <span class=\\\"required-field\\\">*</span></mat-label>\\r\\n                <input matInput [(ngModel)]=\\\"userAccount.username\\\" name=\\\"userName\\\" formControlName=\\\"userName\\\"\\r\\n                  [readonly]=\\\"process === 'UPDATE'\\\" type=\\\"email\\\" pattern=\\\"[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\\">\\r\\n              </mat-form-field>\\r\\n              <p *ngIf=\\\"accountInfo.get('userName').dirty && accountInfo.controls['userName'].errors\\\" class=\\\"badge\\\">\\r\\n                <mat-icon>warning</mat-icon>\\r\\n                Please provide a valid email address.\\r\\n              </p>\\r\\n            </div>\\r\\n            <div\\r\\n              [ngClass]=\\\"accountInfo.get('password').dirty && accountInfo.controls['password'].errors ? 'row credential-creation' : 'row' \\\">\\r\\n              <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label> Password:  <span class=\\\"required-field\\\">*</span>\\r\\n                </mat-label>\\r\\n                <input matInput [type]=\\\"hidePassword ? 'password' : 'text'\\\" [(ngModel)]=\\\"userAccount.password\\\"\\r\\n                  name=\\\"password\\\" formControlName=\\\"password\\\" (keyup)=\\\"confirmPassword(confirmPasswords)\\\">\\r\\n                <button type=\\\"button\\\" mat-icon-button matSuffix (click)=\\\"hidePassword = !hidePassword\\\"\\r\\n                  [attr.aria-label]=\\\"'Hide password'\\\" [attr.aria-pressed]=\\\"hidePassword\\\">\\r\\n                  <mat-icon>{{hidePassword ? 'visibility_off' : 'visibility'}}</mat-icon>\\r\\n                </button>\\r\\n                <mat-hint *ngIf=\\\"accountInfo.get('password').dirty && accountInfo.controls['password'].errors\\\">\\r\\n                  <mat-icon>warning</mat-icon>\\r\\n                  Password must be at least 8 characters long and must contain a number, lower case and upper case\\r\\n                  characters.\\r\\n                </mat-hint>\\r\\n              </mat-form-field>\\r\\n              <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label> Confirm Password:\\r\\n                  <span class=\\\"required-field\\\">*</span>\\r\\n                </mat-label>\\r\\n                <input matInput [type]=\\\"hideConfirmPassword ? 'password' : 'text'\\\" [(ngModel)]=\\\"confirmPasswords\\\"\\r\\n                  name=\\\"confirmPasswords\\\" formControlName=\\\"confirmPasswords\\\"\\r\\n                  (keyup)=\\\"confirmPassword(confirmPasswords)\\\">\\r\\n                <button type=\\\"button\\\" mat-icon-button matSuffix (click)=\\\"hideConfirmPassword = !hideConfirmPassword\\\"\\r\\n                  [attr.aria-label]=\\\"'Hide password'\\\" [attr.aria-pressed]=\\\"hideConfirmPassword\\\">\\r\\n                  <mat-icon>{{hideConfirmPassword ? 'visibility_off' : 'visibility'}}</mat-icon>\\r\\n                </button>\\r\\n                <mat-hint *ngIf=\\\"accountInfo.get('confirmPasswords').dirty && !passwordMatch\\\">\\r\\n                  <mat-icon>warning</mat-icon>\\r\\n                  Password does not match\\r\\n                </mat-hint>\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div>\\r\\n            <mat-hint *ngIf=\\\"(accountInfo.valid || passwordMatch) && userAccount.acceptTerms===false\\\">\\r\\n             <p><i style=\\\"color: red;\\\"> <mat-icon>warning</mat-icon>Need to Accept Terms and Agreement!</i></p>\\r\\n            </mat-hint>\\r\\n            <button mat-raised-button color=\\\"primary\\\" *ngIf=\\\"!isUpdate\\\" (click)=\\\"save()\\\"\\r\\n              [disabled]=\\\"(!accountInfo.valid || !passwordMatch) || userAccount.acceptTerms===false\\\">Register</button>\\r\\n            <button mat-raised-button color=\\\"primary\\\" *ngIf=\\\"isUpdate\\\" (click)=\\\"update()\\\"\\r\\n              [disabled]=\\\"!accountInfo.valid || !passwordMatch\\\">Update</button>\\r\\n            <button mat-raised-button matStepperPrevious>Back</button>\\r\\n            <button mat-raised-button color=\\\"warn\\\" (click)=\\\"stepper.reset()\\\">Reset</button>\\r\\n          </div>\\r\\n        </form>\\r\\n      </mat-step>\\r\\n    </mat-horizontal-stepper>\\r\\n  </div>\\r\\n</form>\";","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { AddCompanyRoutingModule } from './add-company-routing.module';\r\nimport { AngularMaterialModule } from '@shared';\r\nimport { AddCompanyComponent } from './add-company.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\n\r\n@NgModule({\r\n  declarations: [ AddCompanyComponent ],\r\n  imports: [\r\n    CommonModule,\r\n    AddCompanyRoutingModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule,\r\n    AngularMaterialModule,\r\n  ]\r\n})\r\nexport class AddCompanyModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { CompanyRoutingModule } from './company-routing.module';;\r\n\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule,\r\n    CompanyRoutingModule,\r\n  ]\r\n})\r\nexport class CompanyModule { }\r\n","export * from './company.module';\r\nexport * from './add-company/add-company.component';\r\nexport * from './add-company/add-company.module';\r\nexport * from './list-company/list-company.component';\r\nexport * from './list-company/list-company.module';"],"sourceRoot":"webpack:///"}