<<<<<<< HEAD
{"version":3,"sources":["webpack:///src/app/modules/pages/dashboard/payment-status/payment-status.component.ts","webpack:///src/app/modules/pages/dashboard/payment-status/payment-status.component.html","webpack:///src/app/modules/pages/dashboard/dashboard.module.ts","webpack:///src/app/modules/pages/dashboard/dashboard-routing.module.ts","webpack:///src/app/modules/pages/dashboard/dashboard.component.ts","webpack:///src/app/modules/pages/dashboard/dashboard.component.html","webpack:///src/app/modules/pages/dashboard/no-of-application-status/no-of-application-status.component.ts","webpack:///src/app/modules/pages/dashboard/no-of-application-status/no-of-application-status.component.html","webpack:///src/app/modules/pages/dashboard/no-of-application/no-of-application.component.ts","webpack:///src/app/modules/pages/dashboard/no-of-application/no-of-application.component.html"],"names":["PaymentStatusComponent","animateDigitService","currentDate","Date","noOfPaidApplications","Math","floor","random","noOfUnpaidApplications","previousMonthValuePaid","previousMonthValueUnpaid","duration","noOfTotalApplications","animateCount","changes","counterFunc","animateCountPaid","animateCountUnpaid","animateCountTotal","DashboardModule","routes","path","component","DashboardRoutingModule","forChild","DashboardComponent","NoOfApplicationStatusComponent","runChart","NoOfApplicationComponent","noOfS1Applications","noOfS2Applications","previousMonthValueS1","ceil","round","previousMonthValueS2","steps","animateCountS1","animateCountS2"],"mappings":"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","file":"dashboard-dashboard-module-es5.js","sourcesContent":["import { Component, OnInit, OnChanges, AfterViewInit, ViewChild, ElementRef, SimpleChanges } from '@angular/core';\r\nimport { AnimateDigitService } from '@services';\r\n// import { ChartOptions } from '../no-of-application-status/no-of-application-status.component';\r\n// import { ChartComponent } from 'ng-apexcharts';\r\n\r\n@Component({\r\n  selector: 'app-payment-status',\r\n  templateUrl: './payment-status.component.html',\r\n  styleUrls: ['./payment-status.component.scss']\r\n})\r\nexport class PaymentStatusComponent implements OnInit, AfterViewInit, OnChanges {\r\n\r\n  currentDate = new Date();\r\n\r\n  // temporary static value start\r\n  noOfPaidApplications = Math.floor(Math.random() * 100000);\r\n  noOfUnpaidApplications = Math.floor(Math.random() * 100000);\r\n  noOfTotalApplications;\r\n  previousMonthValuePaid = -12;\r\n  previousMonthValueUnpaid = 17;\r\n  // temporary static value end\r\n\r\n  duration = 1000;\r\n  @ViewChild('noOfPaidApplications') animateCountPaid: ElementRef;\r\n  @ViewChild('noOfUnpaidApplications') animateCountUnpaid: ElementRef;\r\n  @ViewChild('noOfTotalApplications') animateCountTotal: ElementRef;\r\n\r\n  // @ViewChild('chart') chart: ChartComponent;\r\n  // public chartOptions: Partial<ChartOptions>;\r\n\r\n  constructor(private animateDigitService: AnimateDigitService) {\r\n\r\n    // this.chartOptions = {\r\n    //   series: [\r\n    //     {\r\n    //       name: 'Paid',\r\n    //       data: [this.noOfPaidApplications],\r\n    //       color: '#00e396'\r\n    //     },\r\n    //     {\r\n    //       name: 'Unpaid',\r\n    //       data: [this.noOfUnpaidApplications],\r\n    //       color: '#E91E63'\r\n    //     }\r\n    //   ],\r\n    //   chart: {\r\n    //     type: 'bar',\r\n    //     height: 110,\r\n    //     width: 100\r\n    //   },\r\n    //   plotOptions: {\r\n    //     bar: {\r\n    //       horizontal: false,\r\n    //       columnWidth: '50%',\r\n    //       // endingShape: 'rounded'\r\n    //     }\r\n    //   },\r\n    //   dataLabels: {\r\n    //     enabled: false\r\n    //   },\r\n    //   // stroke: {\r\n    //   //   show: true,\r\n    //   //   width: 2,\r\n    //   //   colors: ['transparent']\r\n    //   // },\r\n    //   xaxis: {\r\n    //     categories: [\r\n    //       ''\r\n    //     ],\r\n    //     labels: {\r\n    //       show: false\r\n    //     }\r\n    //   },\r\n    //   yaxis: {\r\n    //     title: {\r\n    //       text: ''\r\n    //     },\r\n    //     labels: {\r\n    //       show: false\r\n    //     }\r\n    //   },\r\n    //   fill: {\r\n    //     opacity: 1,\r\n    //     colors: ['#00e396', '#E91E63']\r\n    //   }\r\n    // };\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.noOfTotalApplications = this.noOfPaidApplications + this.noOfUnpaidApplications;\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.noOfPaidApplications || this.noOfUnpaidApplications) {\r\n      this.animateCount();\r\n    }\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes['noOfPaidApplications'] || changes['noOfUnpaidApplications']) {\r\n      this.animateCount();\r\n    }\r\n  }\r\n\r\n  animateCount() {\r\n    this.animateDigitService.counterFunc(this.noOfPaidApplications, this.duration, this.animateCountPaid);\r\n    this.animateDigitService.counterFunc(this.noOfUnpaidApplications, this.duration, this.animateCountUnpaid);\r\n    this.animateDigitService.counterFunc(this.noOfTotalApplications, this.duration, this.animateCountTotal);\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n  <div class=\"row\">\r\n    <div class=\"col-md-3\">\r\n      <mat-card class=\"mat-elevation-z5\">\r\n        <mat-card-content class=\"dashboard-card\">\r\n          <span class=\"dashboard-card-title\">\r\n            Paid Applications\r\n          </span>\r\n          <br><br>\r\n          <div #noOfPaidApplications class=\"dashboard-card-value\">\r\n            <span class=\"dashboard-card-value\">\r\n              {{ noOfPaidApplications }}\r\n            </span>\r\n          </div>\r\n          <br><br>\r\n          <span class=\"dashboard-card-remark\">\r\n            <!-- <span [ngClass]=\"previousMonthValuePaid >= 0 ? 'higher' : 'lower'\">{{ previousMonthValuePaid + '%' }} </span> -->\r\n            <!-- Since last month -->\r\n          </span>\r\n        </mat-card-content>\r\n      </mat-card>\r\n    </div>\r\n    <div class=\"col-md-3\">\r\n      <mat-card class=\"mat-elevation-z5\">\r\n        <mat-card-content class=\"dashboard-card\">\r\n          <span class=\"dashboard-card-title\">\r\n            Unpaid Applications\r\n          </span>\r\n          <br><br>\r\n          <div #noOfUnpaidApplications class=\"dashboard-card-value\">\r\n            <span>\r\n              {{ noOfUnpaidApplications }}\r\n            </span>\r\n          </div>\r\n          <br><br>\r\n          <span class=\"dashboard-card-remark\">\r\n            <!-- <span [ngClass]=\"previousMonthValueUnpaid >= 0 ? 'higher' : 'lower'\">{{ previousMonthValueUnpaid + '%' }} </span> -->\r\n            <!-- Since last month -->\r\n          </span>\r\n        </mat-card-content>\r\n      </mat-card>\r\n    </div>\r\n    <div class=\"col-md-6\">\r\n      <mat-card class=\"mat-elevation-z5 card-container\">\r\n        <div class=\"col-md-3 total\">\r\n          <mat-card-content class=\"dashboard-card\">\r\n            <span class=\"dashboard-card-title\">\r\n              Total Applications\r\n            </span>\r\n            <br><br>\r\n            <div #noOfTotalApplications class=\"dashboard-card-value\">\r\n              <span>\r\n                {{ noOfTotalApplications }}\r\n              </span>\r\n            </div>\r\n          </mat-card-content>\r\n        </div>\r\n        <div class=\"col-md-3 chart\">\r\n          <!-- <apx-chart [series]=\"chartOptions.series\" [chart]=\"chartOptions.chart\" [dataLabels]=\"chartOptions.dataLabels\"\r\n            [plotOptions]=\"chartOptions.plotOptions\" [yaxis]=\"chartOptions.yaxis\"\r\n            [fill]=\"chartOptions.fill\"\r\n            [xaxis]=\"chartOptions.xaxis\"></apx-chart> -->\r\n        </div>\r\n      </mat-card>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { DashboardRoutingModule } from './dashboard-routing.module';\r\nimport { DashboardComponent } from './dashboard.component';\r\nimport { AngularMaterialModule } from '@shared';\r\nimport { NoOfApplicationComponent } from './no-of-application/no-of-application.component';\r\nimport { NoOfApplicationStatusComponent } from './no-of-application-status/no-of-application-status.component';\r\nimport { PaymentStatusComponent } from './payment-status/payment-status.component';\r\nimport { SharedModule } from '../../../shared/shared.module';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    DashboardComponent,\r\n    NoOfApplicationComponent,\r\n    NoOfApplicationStatusComponent,\r\n    PaymentStatusComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    DashboardRoutingModule,\r\n    AngularMaterialModule,\r\n    SharedModule,\r\n  ]\r\n})\r\nexport class DashboardModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { DashboardComponent } from './dashboard.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: DashboardComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class DashboardRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.scss']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n  <div class=\"row\">\r\n    <div class=\"col-md-6\">\r\n      <app-no-of-application></app-no-of-application>\r\n    </div>\r\n    <div class=\"col-md-6 payment-status\">\r\n      <app-payment-status></app-payment-status>\r\n    </div>\r\n    <div class=\"col-md-12\">\r\n      <app-no-of-application-status></app-no-of-application-status>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { APPLICATION_STATUSES } from '@shared';\r\n\r\n// export type ChartOptions = {\r\n//   series: ApexAxisChartSeries;\r\n//   chart: ApexChart;\r\n//   dataLabels: ApexDataLabels;\r\n//   plotOptions: ApexPlotOptions;\r\n//   yaxis: ApexYAxis;\r\n//   xaxis: ApexXAxis;\r\n//   fill: ApexFill;\r\n//   title: ApexTitleSubtitle;\r\n// };\r\n\r\n@Component({\r\n  selector: 'app-no-of-application-status',\r\n  templateUrl: './no-of-application-status.component.html',\r\n  styleUrls: ['./no-of-application-status.component.scss']\r\n})\r\nexport class NoOfApplicationStatusComponent implements OnInit {\r\n  // @ViewChild('chart') chart: ChartComponent;\r\n  // public chartOptions: Partial<ChartOptions>;\r\n\r\n  constructor() {\r\n    this.runChart();\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  runChart() {\r\n  //   this.chartOptions = {\r\n  //     series: [\r\n  //       {\r\n  //         name: 'Applications',\r\n  //         data: [\r\n  //           // temporary data\r\n  //           Math.floor(Math.random() * 100000),\r\n  //           Math.floor(Math.random() * 100000),\r\n  //           Math.floor(Math.random() * 100000),\r\n  //           Math.floor(Math.random() * 100000),\r\n  //           Math.floor(Math.random() * 100000),\r\n  //           Math.floor(Math.random() * 100000),\r\n  //           Math.floor(Math.random() * 100000),\r\n  //           Math.floor(Math.random() * 100000),\r\n  //           Math.floor(Math.random() * 100000)\r\n  //         ]\r\n  //       }\r\n  //     ],\r\n  //     chart: {\r\n  //       height: 350,\r\n  //       type: 'bar'\r\n  //     },\r\n  //     plotOptions: {\r\n  //       bar: {\r\n  //         dataLabels: {\r\n  //           position: 'top' // top, center, bottom\r\n  //         }\r\n  //       }\r\n  //     },\r\n  //     dataLabels: {\r\n  //       enabled: true,\r\n  //       formatter: function (val) {\r\n  //         return val + '';\r\n  //       },\r\n  //       offsetY: -20,\r\n  //       style: {\r\n  //         fontSize: '12px',\r\n  //         colors: ['#304758']\r\n  //       }\r\n  //     },\r\n\r\n  //     xaxis: {\r\n  //       categories: [\r\n  //         ...APPLICATION_STATUSES.map((stat) => {\r\n  //           return stat.status.replace('_', ' ');\r\n  //         })\r\n  //       ],\r\n  //       position: 'top',\r\n  //       labels: {\r\n  //         offsetY: -18\r\n  //       },\r\n  //       axisBorder: {\r\n  //         show: false\r\n  //       },\r\n  //       axisTicks: {\r\n  //         show: false\r\n  //       },\r\n  //       crosshairs: {\r\n  //         fill: {\r\n  //           type: 'gradient',\r\n  //           gradient: {\r\n  //             colorFrom: '#D8E3F0',\r\n  //             colorTo: '#BED1E6',\r\n  //             stops: [0, 100],\r\n  //             opacityFrom: 0.4,\r\n  //             opacityTo: 0.5\r\n  //           }\r\n  //         }\r\n  //       },\r\n  //       tooltip: {\r\n  //         enabled: true,\r\n  //         offsetY: -35\r\n  //       }\r\n  //     },\r\n  //     fill: {\r\n  //       type: 'gradient',\r\n  //       gradient: {\r\n  //         shade: 'light',\r\n  //         type: 'horizontal',\r\n  //         shadeIntensity: 0.25,\r\n  //         gradientToColors: undefined,\r\n  //         inverseColors: true,\r\n  //         opacityFrom: 1,\r\n  //         opacityTo: 1,\r\n  //         stops: [0, 50, 75, 100]\r\n  //       }\r\n  //     },\r\n  //     yaxis: {\r\n  //       axisBorder: {\r\n  //         show: false\r\n  //       },\r\n  //       axisTicks: {\r\n  //         show: false\r\n  //       },\r\n  //       labels: {\r\n  //         show: false,\r\n  //         formatter: function (val) {\r\n  //           // return val;\r\n  //           return val + '';\r\n  //         }\r\n  //       }\r\n  //     },\r\n  //     title: {\r\n  //       text: '_',\r\n  //       offsetY: 320,\r\n  //       align: 'center',\r\n  //       style: {\r\n  //         color: '#FFF'\r\n  //       }\r\n  //     }\r\n  //   };\r\n  }\r\n}\r\n","<form>\r\n  <div class=\"container\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12 title\">\r\n        <mat-label>\r\n          <mat-icon>assessment</mat-icon> Application Status\r\n        </mat-label>\r\n        <hr>\r\n      </div>\r\n      <!-- <div class=\"col-md-12\">\r\n        <apx-chart [series]=\"chartOptions.series\" [chart]=\"chartOptions.chart\" [dataLabels]=\"chartOptions.dataLabels\"\r\n          [plotOptions]=\"chartOptions.plotOptions\" [yaxis]=\"chartOptions.yaxis\" [xaxis]=\"chartOptions.xaxis\"\r\n          [fill]=\"chartOptions.fill\" [title]=\"chartOptions.title\"></apx-chart>\r\n      </div> -->\r\n    </div>\r\n  </div>\r\n</form>\r\n","import { Component, OnInit, AfterViewInit, OnChanges, Input, ViewChild, ElementRef, SimpleChanges } from '@angular/core';\r\nimport { AnimateDigitService } from '@services';\r\n\r\n@Component({\r\n  selector: 'app-no-of-application',\r\n  templateUrl: './no-of-application.component.html',\r\n  styleUrls: ['./no-of-application.component.scss']\r\n})\r\nexport class NoOfApplicationComponent implements OnInit, AfterViewInit, OnChanges {\r\n\r\n  // temporary static value start\r\n  noOfS1Applications = Math.floor(Math.random() * 100000);\r\n  noOfS2Applications = Math.floor(Math.random() * 100000);\r\n  previousMonthValueS1: number = Math.ceil(Math.random() * 100) * (Math.round(Math.random()) ? 1 : -1);\r\n  previousMonthValueS2: number = Math.ceil(Math.random() * 100) * (Math.round(Math.random()) ? 1 : -1);\r\n  // temporary static value end\r\n\r\n  duration: number = 1000;\r\n  @Input() steps: number = 12;\r\n  @ViewChild(\"noOfS1Applications\") animateCountS1: ElementRef;\r\n  @ViewChild(\"noOfS2Applications\") animateCountS2: ElementRef;\r\n\r\n  constructor(private animateDigitService: AnimateDigitService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.noOfS1Applications || this.noOfS2Applications) {\r\n      this.animateCount();\r\n    }\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes[\"noOfS1Applications\"] || changes[\"noOfS2Applications\"]) {\r\n      this.animateCount();\r\n    }\r\n  }\r\n\r\n  animateCount() {\r\n    this.animateDigitService.counterFunc(this.noOfS1Applications, this.duration, this.animateCountS1);\r\n    this.animateDigitService.counterFunc(this.noOfS2Applications, this.duration, this.animateCountS2);\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n  <div class=\"row\">\r\n    <div class=\"col-md-6\">\r\n      <mat-card class=\"mat-elevation-z5\">\r\n        <mat-card-content class=\"dashboard-card\">\r\n          <span class=\"dashboard-card-title\">\r\n            S1 Applications\r\n          </span>\r\n          <br><br>\r\n          <div #noOfS1Applications class=\"dashboard-card-value\">\r\n            <span class=\"dashboard-card-value\">\r\n              {{ noOfS1Applications }}\r\n            </span>\r\n        </div>\r\n        <br><br>\r\n        <span class=\"dashboard-card-remark\">\r\n            <span [ngClass]=\"previousMonthValueS1 >= 0 ? 'higher' : 'lower'\">{{ previousMonthValueS1 + '%' }} </span>\r\n            Since last month\r\n          </span>\r\n        </mat-card-content>\r\n      </mat-card>\r\n    </div>\r\n    <div class=\"col-md-6\">\r\n      <mat-card class=\"mat-elevation-z5\">\r\n        <mat-card-content class=\"dashboard-card\">\r\n          <span class=\"dashboard-card-title\">\r\n            S2 Applications\r\n          </span>\r\n          <br><br>\r\n          <div #noOfS2Applications class=\"dashboard-card-value\">\r\n            <span>\r\n              {{ noOfS2Applications }}\r\n            </span>\r\n          </div>\r\n          <br><br>\r\n          <span class=\"dashboard-card-remark\">\r\n            <span [ngClass]=\"previousMonthValueS2 >= 0 ? 'higher' : 'lower'\">{{ previousMonthValueS2 + '%' }} </span>\r\n            Since last month\r\n          </span>\r\n        </mat-card-content>\r\n      </mat-card>\r\n    </div>\r\n  </div>\r\n</div>\r\n"]}
=======
{"version":3,"sources":["webpack:///src/app/modules/pages/dashboard/payment-status/payment-status.component.ts","webpack:///src/app/modules/pages/dashboard/payment-status/payment-status.component.html","webpack:///src/app/modules/pages/dashboard/dashboard.module.ts","webpack:///src/app/modules/pages/dashboard/dashboard-routing.module.ts","webpack:///src/app/modules/pages/dashboard/dashboard.component.ts","webpack:///src/app/modules/pages/dashboard/dashboard.component.html","webpack:///src/app/modules/pages/dashboard/no-of-application-status/no-of-application-status.component.ts","webpack:///src/app/modules/pages/dashboard/no-of-application-status/no-of-application-status.component.html","webpack:///src/app/modules/pages/dashboard/no-of-application/no-of-application.component.ts","webpack:///src/app/modules/pages/dashboard/no-of-application/no-of-application.component.html"],"names":["PaymentStatusComponent","animateDigitService","currentDate","Date","noOfPaidApplications","Math","floor","random","noOfUnpaidApplications","previousMonthValuePaid","previousMonthValueUnpaid","duration","noOfTotalApplications","animateCount","changes","counterFunc","animateCountPaid","animateCountUnpaid","animateCountTotal","DashboardModule","routes","path","component","DashboardRoutingModule","forChild","DashboardComponent","NoOfApplicationStatusComponent","runChart","NoOfApplicationComponent","noOfS1Applications","noOfS2Applications","previousMonthValueS1","ceil","round","previousMonthValueS2","steps","animateCountS1","animateCountS2"],"mappings":"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;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cAEA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;YACC;UA3HI;;UAAA;QAAA;;;2BAAMD,8B;QAA8B,C;;;gBAA9BA,8B;UAA8B,6C;UAAA,Q;UAAA,O;UAAA,iE;UAAA;YAAA;cCnB3C;;cACE;;cACE;;cACE;;cACE;;cACE;;cAAU;;cAAU;;cAAY;;cAClC;;cACA;;cACF;;cAMF;;cACF;;cACF;;;;;;;ODGO;;;;;;;;;;;;;;;;;MEnBP;MAAA;;;MAAA;QAAA;MAAA;MAAA;;;MAAA;MAAA;MAAA;MAAA;;;MAAA;MAAA;MAAA;MAAA;;;MAAA;MAAA;MAAA;MAAA;;;MAAA;MAAA;MAAA;;;;;MAQO;QAAA,IAAME,wBAAN;UAcL,kCAAoB3B,mBAApB,EAA8D;YAAA;;YAA1C,KAAAA,mBAAA,GAAAA,mBAAA,CAA0C,CAZ9D;;YACA,KAAA4B,kBAAA,GAAqBxB,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,MAA3B,CAArB;YACA,KAAAuB,kBAAA,GAAqBzB,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,MAA3B,CAArB;YACA,KAAAwB,oBAAA,GAA+B1B,IAAI,CAAC2B,IAAL,CAAU3B,IAAI,CAACE,MAAL,KAAgB,GAA1B,KAAkCF,IAAI,CAAC4B,KAAL,CAAW5B,IAAI,CAACE,MAAL,EAAX,IAA4B,CAA5B,GAAgC,CAAC,CAAnE,CAA/B;YACA,KAAA2B,oBAAA,GAA+B7B,IAAI,CAAC2B,IAAL,CAAU3B,IAAI,CAACE,MAAL,KAAgB,GAA1B,KAAkCF,IAAI,CAAC4B,KAAL,CAAW5B,IAAI,CAACE,MAAL,EAAX,IAA4B,CAA5B,GAAgC,CAAC,CAAnE,CAA/B,CAQ8D,CAP9D;;YAEA,KAAAI,QAAA,GAAmB,IAAnB;YACS,KAAAwB,KAAA,GAAgB,EAAhB;UAIwD;;UAd5D;YAAA;YAAA,OAgBL,oBAAQ,CACP;UAjBI;YAAA;YAAA,OAmBL,2BAAkB;cAChB,IAAI,KAAKN,kBAAL,IAA2B,KAAKC,kBAApC,EAAwD;gBACtD,KAAKjB,YAAL;cACD;YACF;UAvBI;YAAA;YAAA,OAyBL,qBAAYC,OAAZ,EAAoC;cAClC,IAAIA,OAAO,CAAC,oBAAD,CAAP,IAAiCA,OAAO,CAAC,oBAAD,CAA5C,EAAoE;gBAClE,KAAKD,YAAL;cACD;YACF;UA7BI;YAAA;YAAA,OA+BL,wBAAe;cACb,KAAKZ,mBAAL,CAAyBc,WAAzB,CAAqC,KAAKc,kBAA1C,EAA8D,KAAKlB,QAAnE,EAA6E,KAAKyB,cAAlF;cACA,KAAKnC,mBAAL,CAAyBc,WAAzB,CAAqC,KAAKe,kBAA1C,EAA8D,KAAKnB,QAAnE,EAA6E,KAAK0B,cAAlF;YACD;UAlCI;;UAAA;QAAA;;;2BAAMT,wB,EAAwB,8H;QAAA,C;;;gBAAxBA,wB;UAAwB,sC;UAAA;YAAA;;;;;;;;;;;;;;;;;;;;;;cCRrC;;cACE;;cACE;;cACE;;cACE;;cACE;;cACE;;cACF;;cACA;;cAAI;;cACJ;;cACE;;cACE;;cACF;;cACJ;;cACA;;cAAI;;cACJ;;cACI;;cAAiE;;cAAiC;;cAClG;;cACF;;cACF;;cACF;;cACF;;cACA;;cACE;;cACE;;cACE;;cACE;;cACF;;cACA;;cAAI;;cACJ;;cACE;;cACE;;cACF;;cACF;;cACA;;cAAI;;cACJ;;cACE;;cAAiE;;cAAiC;;cAClG;;cACF;;cACF;;cACF;;cACF;;cACF;;cACF;;;;;;;;cAhCc;;cAAA;;cAKI;;cAAA;;cAA2D;;cAAA;;cAe/D;;cAAA;;cAKI;;cAAA;;cAA2D;;cAAA;;;;;;;OD5BtE","file":"dashboard-dashboard-module-es5.js","sourcesContent":["import { Component, OnInit, OnChanges, AfterViewInit, ViewChild, ElementRef, SimpleChanges } from '@angular/core';\r\nimport { AnimateDigitService } from '@services';\r\n// import { ChartOptions } from '../no-of-application-status/no-of-application-status.component';\r\n// import { ChartComponent } from 'ng-apexcharts';\r\n\r\n@Component({\r\n  selector: 'app-payment-status',\r\n  templateUrl: './payment-status.component.html',\r\n  styleUrls: ['./payment-status.component.scss']\r\n})\r\nexport class PaymentStatusComponent implements OnInit, AfterViewInit, OnChanges {\r\n\r\n  currentDate = new Date();\r\n\r\n  // temporary static value start\r\n  noOfPaidApplications = Math.floor(Math.random() * 100000);\r\n  noOfUnpaidApplications = Math.floor(Math.random() * 100000);\r\n  noOfTotalApplications;\r\n  previousMonthValuePaid = -12;\r\n  previousMonthValueUnpaid = 17;\r\n  // temporary static value end\r\n\r\n  duration = 1000;\r\n  @ViewChild('noOfPaidApplications') animateCountPaid: ElementRef;\r\n  @ViewChild('noOfUnpaidApplications') animateCountUnpaid: ElementRef;\r\n  @ViewChild('noOfTotalApplications') animateCountTotal: ElementRef;\r\n\r\n  // @ViewChild('chart') chart: ChartComponent;\r\n  // public chartOptions: Partial<ChartOptions>;\r\n\r\n  constructor(private animateDigitService: AnimateDigitService) {\r\n\r\n    // this.chartOptions = {\r\n    //   series: [\r\n    //     {\r\n    //       name: 'Paid',\r\n    //       data: [this.noOfPaidApplications],\r\n    //       color: '#00e396'\r\n    //     },\r\n    //     {\r\n    //       name: 'Unpaid',\r\n    //       data: [this.noOfUnpaidApplications],\r\n    //       color: '#E91E63'\r\n    //     }\r\n    //   ],\r\n    //   chart: {\r\n    //     type: 'bar',\r\n    //     height: 110,\r\n    //     width: 100\r\n    //   },\r\n    //   plotOptions: {\r\n    //     bar: {\r\n    //       horizontal: false,\r\n    //       columnWidth: '50%',\r\n    //       // endingShape: 'rounded'\r\n    //     }\r\n    //   },\r\n    //   dataLabels: {\r\n    //     enabled: false\r\n    //   },\r\n    //   // stroke: {\r\n    //   //   show: true,\r\n    //   //   width: 2,\r\n    //   //   colors: ['transparent']\r\n    //   // },\r\n    //   xaxis: {\r\n    //     categories: [\r\n    //       ''\r\n    //     ],\r\n    //     labels: {\r\n    //       show: false\r\n    //     }\r\n    //   },\r\n    //   yaxis: {\r\n    //     title: {\r\n    //       text: ''\r\n    //     },\r\n    //     labels: {\r\n    //       show: false\r\n    //     }\r\n    //   },\r\n    //   fill: {\r\n    //     opacity: 1,\r\n    //     colors: ['#00e396', '#E91E63']\r\n    //   }\r\n    // };\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.noOfTotalApplications = this.noOfPaidApplications + this.noOfUnpaidApplications;\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.noOfPaidApplications || this.noOfUnpaidApplications) {\r\n      this.animateCount();\r\n    }\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes['noOfPaidApplications'] || changes['noOfUnpaidApplications']) {\r\n      this.animateCount();\r\n    }\r\n  }\r\n\r\n  animateCount() {\r\n    this.animateDigitService.counterFunc(this.noOfPaidApplications, this.duration, this.animateCountPaid);\r\n    this.animateDigitService.counterFunc(this.noOfUnpaidApplications, this.duration, this.animateCountUnpaid);\r\n    this.animateDigitService.counterFunc(this.noOfTotalApplications, this.duration, this.animateCountTotal);\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n  <div class=\"row\">\r\n    <div class=\"col-md-3\">\r\n      <mat-card class=\"mat-elevation-z5\">\r\n        <mat-card-content class=\"dashboard-card\">\r\n          <span class=\"dashboard-card-title\">\r\n            Paid Applications\r\n          </span>\r\n          <br><br>\r\n          <div #noOfPaidApplications class=\"dashboard-card-value\">\r\n            <span class=\"dashboard-card-value\">\r\n              {{ noOfPaidApplications }}\r\n            </span>\r\n          </div>\r\n          <br><br>\r\n          <span class=\"dashboard-card-remark\">\r\n            <!-- <span [ngClass]=\"previousMonthValuePaid >= 0 ? 'higher' : 'lower'\">{{ previousMonthValuePaid + '%' }} </span> -->\r\n            <!-- Since last month -->\r\n          </span>\r\n        </mat-card-content>\r\n      </mat-card>\r\n    </div>\r\n    <div class=\"col-md-3\">\r\n      <mat-card class=\"mat-elevation-z5\">\r\n        <mat-card-content class=\"dashboard-card\">\r\n          <span class=\"dashboard-card-title\">\r\n            Unpaid Applications\r\n          </span>\r\n          <br><br>\r\n          <div #noOfUnpaidApplications class=\"dashboard-card-value\">\r\n            <span>\r\n              {{ noOfUnpaidApplications }}\r\n            </span>\r\n          </div>\r\n          <br><br>\r\n          <span class=\"dashboard-card-remark\">\r\n            <!-- <span [ngClass]=\"previousMonthValueUnpaid >= 0 ? 'higher' : 'lower'\">{{ previousMonthValueUnpaid + '%' }} </span> -->\r\n            <!-- Since last month -->\r\n          </span>\r\n        </mat-card-content>\r\n      </mat-card>\r\n    </div>\r\n    <div class=\"col-md-6\">\r\n      <mat-card class=\"mat-elevation-z5 card-container\">\r\n        <div class=\"col-md-3 total\">\r\n          <mat-card-content class=\"dashboard-card\">\r\n            <span class=\"dashboard-card-title\">\r\n              Total Applications\r\n            </span>\r\n            <br><br>\r\n            <div #noOfTotalApplications class=\"dashboard-card-value\">\r\n              <span>\r\n                {{ noOfTotalApplications }}\r\n              </span>\r\n            </div>\r\n          </mat-card-content>\r\n        </div>\r\n        <div class=\"col-md-3 chart\">\r\n          <!-- <apx-chart [series]=\"chartOptions.series\" [chart]=\"chartOptions.chart\" [dataLabels]=\"chartOptions.dataLabels\"\r\n            [plotOptions]=\"chartOptions.plotOptions\" [yaxis]=\"chartOptions.yaxis\"\r\n            [fill]=\"chartOptions.fill\"\r\n            [xaxis]=\"chartOptions.xaxis\"></apx-chart> -->\r\n        </div>\r\n      </mat-card>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { DashboardRoutingModule } from './dashboard-routing.module';\r\nimport { DashboardComponent } from './dashboard.component';\r\nimport { AngularMaterialModule } from '@shared';\r\nimport { NoOfApplicationComponent } from './no-of-application/no-of-application.component';\r\nimport { NoOfApplicationStatusComponent } from './no-of-application-status/no-of-application-status.component';\r\nimport { PaymentStatusComponent } from './payment-status/payment-status.component';\r\nimport { SharedModule } from '../../../shared/shared.module';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    DashboardComponent,\r\n    NoOfApplicationComponent,\r\n    NoOfApplicationStatusComponent,\r\n    PaymentStatusComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    DashboardRoutingModule,\r\n    AngularMaterialModule,\r\n    SharedModule,\r\n  ]\r\n})\r\nexport class DashboardModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { DashboardComponent } from './dashboard.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: DashboardComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class DashboardRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.scss']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n  <div class=\"row\">\r\n    <div class=\"col-md-6\">\r\n      <app-no-of-application></app-no-of-application>\r\n    </div>\r\n    <div class=\"col-md-6 payment-status\">\r\n      <app-payment-status></app-payment-status>\r\n    </div>\r\n    <div class=\"col-md-12\">\r\n      <app-no-of-application-status></app-no-of-application-status>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { APPLICATION_STATUSES } from '@shared';\r\n\r\n// export type ChartOptions = {\r\n//   series: ApexAxisChartSeries;\r\n//   chart: ApexChart;\r\n//   dataLabels: ApexDataLabels;\r\n//   plotOptions: ApexPlotOptions;\r\n//   yaxis: ApexYAxis;\r\n//   xaxis: ApexXAxis;\r\n//   fill: ApexFill;\r\n//   title: ApexTitleSubtitle;\r\n// };\r\n\r\n@Component({\r\n  selector: 'app-no-of-application-status',\r\n  templateUrl: './no-of-application-status.component.html',\r\n  styleUrls: ['./no-of-application-status.component.scss']\r\n})\r\nexport class NoOfApplicationStatusComponent implements OnInit {\r\n  // @ViewChild('chart') chart: ChartComponent;\r\n  // public chartOptions: Partial<ChartOptions>;\r\n\r\n  constructor() {\r\n    this.runChart();\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  runChart() {\r\n  //   this.chartOptions = {\r\n  //     series: [\r\n  //       {\r\n  //         name: 'Applications',\r\n  //         data: [\r\n  //           // temporary data\r\n  //           Math.floor(Math.random() * 100000),\r\n  //           Math.floor(Math.random() * 100000),\r\n  //           Math.floor(Math.random() * 100000),\r\n  //           Math.floor(Math.random() * 100000),\r\n  //           Math.floor(Math.random() * 100000),\r\n  //           Math.floor(Math.random() * 100000),\r\n  //           Math.floor(Math.random() * 100000),\r\n  //           Math.floor(Math.random() * 100000),\r\n  //           Math.floor(Math.random() * 100000)\r\n  //         ]\r\n  //       }\r\n  //     ],\r\n  //     chart: {\r\n  //       height: 350,\r\n  //       type: 'bar'\r\n  //     },\r\n  //     plotOptions: {\r\n  //       bar: {\r\n  //         dataLabels: {\r\n  //           position: 'top' // top, center, bottom\r\n  //         }\r\n  //       }\r\n  //     },\r\n  //     dataLabels: {\r\n  //       enabled: true,\r\n  //       formatter: function (val) {\r\n  //         return val + '';\r\n  //       },\r\n  //       offsetY: -20,\r\n  //       style: {\r\n  //         fontSize: '12px',\r\n  //         colors: ['#304758']\r\n  //       }\r\n  //     },\r\n\r\n  //     xaxis: {\r\n  //       categories: [\r\n  //         ...APPLICATION_STATUSES.map((stat) => {\r\n  //           return stat.status.replace('_', ' ');\r\n  //         })\r\n  //       ],\r\n  //       position: 'top',\r\n  //       labels: {\r\n  //         offsetY: -18\r\n  //       },\r\n  //       axisBorder: {\r\n  //         show: false\r\n  //       },\r\n  //       axisTicks: {\r\n  //         show: false\r\n  //       },\r\n  //       crosshairs: {\r\n  //         fill: {\r\n  //           type: 'gradient',\r\n  //           gradient: {\r\n  //             colorFrom: '#D8E3F0',\r\n  //             colorTo: '#BED1E6',\r\n  //             stops: [0, 100],\r\n  //             opacityFrom: 0.4,\r\n  //             opacityTo: 0.5\r\n  //           }\r\n  //         }\r\n  //       },\r\n  //       tooltip: {\r\n  //         enabled: true,\r\n  //         offsetY: -35\r\n  //       }\r\n  //     },\r\n  //     fill: {\r\n  //       type: 'gradient',\r\n  //       gradient: {\r\n  //         shade: 'light',\r\n  //         type: 'horizontal',\r\n  //         shadeIntensity: 0.25,\r\n  //         gradientToColors: undefined,\r\n  //         inverseColors: true,\r\n  //         opacityFrom: 1,\r\n  //         opacityTo: 1,\r\n  //         stops: [0, 50, 75, 100]\r\n  //       }\r\n  //     },\r\n  //     yaxis: {\r\n  //       axisBorder: {\r\n  //         show: false\r\n  //       },\r\n  //       axisTicks: {\r\n  //         show: false\r\n  //       },\r\n  //       labels: {\r\n  //         show: false,\r\n  //         formatter: function (val) {\r\n  //           // return val;\r\n  //           return val + '';\r\n  //         }\r\n  //       }\r\n  //     },\r\n  //     title: {\r\n  //       text: '_',\r\n  //       offsetY: 320,\r\n  //       align: 'center',\r\n  //       style: {\r\n  //         color: '#FFF'\r\n  //       }\r\n  //     }\r\n  //   };\r\n  }\r\n}\r\n","<form>\r\n  <div class=\"container\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12 title\">\r\n        <mat-label>\r\n          <mat-icon>assessment</mat-icon> Application Status\r\n        </mat-label>\r\n        <hr>\r\n      </div>\r\n      <!-- <div class=\"col-md-12\">\r\n        <apx-chart [series]=\"chartOptions.series\" [chart]=\"chartOptions.chart\" [dataLabels]=\"chartOptions.dataLabels\"\r\n          [plotOptions]=\"chartOptions.plotOptions\" [yaxis]=\"chartOptions.yaxis\" [xaxis]=\"chartOptions.xaxis\"\r\n          [fill]=\"chartOptions.fill\" [title]=\"chartOptions.title\"></apx-chart>\r\n      </div> -->\r\n    </div>\r\n  </div>\r\n</form>\r\n","import { Component, OnInit, AfterViewInit, OnChanges, Input, ViewChild, ElementRef, SimpleChanges } from '@angular/core';\r\nimport { AnimateDigitService } from '@services';\r\n\r\n@Component({\r\n  selector: 'app-no-of-application',\r\n  templateUrl: './no-of-application.component.html',\r\n  styleUrls: ['./no-of-application.component.scss']\r\n})\r\nexport class NoOfApplicationComponent implements OnInit, AfterViewInit, OnChanges {\r\n\r\n  // temporary static value start\r\n  noOfS1Applications = Math.floor(Math.random() * 100000);\r\n  noOfS2Applications = Math.floor(Math.random() * 100000);\r\n  previousMonthValueS1: number = Math.ceil(Math.random() * 100) * (Math.round(Math.random()) ? 1 : -1);\r\n  previousMonthValueS2: number = Math.ceil(Math.random() * 100) * (Math.round(Math.random()) ? 1 : -1);\r\n  // temporary static value end\r\n\r\n  duration: number = 1000;\r\n  @Input() steps: number = 12;\r\n  @ViewChild(\"noOfS1Applications\") animateCountS1: ElementRef;\r\n  @ViewChild(\"noOfS2Applications\") animateCountS2: ElementRef;\r\n\r\n  constructor(private animateDigitService: AnimateDigitService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.noOfS1Applications || this.noOfS2Applications) {\r\n      this.animateCount();\r\n    }\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes[\"noOfS1Applications\"] || changes[\"noOfS2Applications\"]) {\r\n      this.animateCount();\r\n    }\r\n  }\r\n\r\n  animateCount() {\r\n    this.animateDigitService.counterFunc(this.noOfS1Applications, this.duration, this.animateCountS1);\r\n    this.animateDigitService.counterFunc(this.noOfS2Applications, this.duration, this.animateCountS2);\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n  <div class=\"row\">\r\n    <div class=\"col-md-6\">\r\n      <mat-card class=\"mat-elevation-z5\">\r\n        <mat-card-content class=\"dashboard-card\">\r\n          <span class=\"dashboard-card-title\">\r\n            S1 Applications\r\n          </span>\r\n          <br><br>\r\n          <div #noOfS1Applications class=\"dashboard-card-value\">\r\n            <span class=\"dashboard-card-value\">\r\n              {{ noOfS1Applications }}\r\n            </span>\r\n        </div>\r\n        <br><br>\r\n        <span class=\"dashboard-card-remark\">\r\n            <span [ngClass]=\"previousMonthValueS1 >= 0 ? 'higher' : 'lower'\">{{ previousMonthValueS1 + '%' }} </span>\r\n            Since last month\r\n          </span>\r\n        </mat-card-content>\r\n      </mat-card>\r\n    </div>\r\n    <div class=\"col-md-6\">\r\n      <mat-card class=\"mat-elevation-z5\">\r\n        <mat-card-content class=\"dashboard-card\">\r\n          <span class=\"dashboard-card-title\">\r\n            S2 Applications\r\n          </span>\r\n          <br><br>\r\n          <div #noOfS2Applications class=\"dashboard-card-value\">\r\n            <span>\r\n              {{ noOfS2Applications }}\r\n            </span>\r\n          </div>\r\n          <br><br>\r\n          <span class=\"dashboard-card-remark\">\r\n            <span [ngClass]=\"previousMonthValueS2 >= 0 ? 'higher' : 'lower'\">{{ previousMonthValueS2 + '%' }} </span>\r\n            Since last month\r\n          </span>\r\n        </mat-card-content>\r\n      </mat-card>\r\n    </div>\r\n  </div>\r\n</div>\r\n"]}
>>>>>>> 53dc5baaa640736d2cc27f9eee7c34fe4a9274c2
