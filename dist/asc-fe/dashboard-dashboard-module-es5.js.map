{"version":3,"sources":["webpack:///src/app/modules/pages/dashboard/payment-status/payment-status.component.ts","webpack:///src/app/modules/pages/dashboard/payment-status/payment-status.component.html","webpack:///src/app/modules/pages/dashboard/dashboard.module.ts","webpack:///src/app/modules/pages/dashboard/dashboard-routing.module.ts","webpack:///src/app/modules/pages/dashboard/dashboard.component.ts","webpack:///src/app/modules/pages/dashboard/dashboard.component.html","webpack:///src/app/modules/pages/dashboard/no-of-application-status/no-of-application-status.component.ts","webpack:///src/app/modules/pages/dashboard/no-of-application-status/no-of-application-status.component.html","webpack:///src/app/modules/pages/dashboard/no-of-application/no-of-application.component.ts","webpack:///src/app/modules/pages/dashboard/no-of-application/no-of-application.component.html"],"names":["PaymentStatusComponent","animateDigitService","currentDate","Date","noOfPaidApplications","Math","floor","random","noOfUnpaidApplications","previousMonthValuePaid","previousMonthValueUnpaid","duration","noOfTotalApplications","animateCount","changes","counterFunc","animateCountPaid","animateCountUnpaid","animateCountTotal","DashboardModule","routes","path","component","DashboardRoutingModule","forChild","DashboardComponent","NoOfApplicationStatusComponent","runChart","NoOfApplicationComponent","noOfS1Applications","noOfS2Applications","previousMonthValueS1","ceil","round","previousMonthValueS2","steps","animateCountS1","animateCountS2"],"mappings":"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","file":"dashboard-dashboard-module-es5.js","sourcesContent":["import { Component, OnInit, OnChanges, AfterViewInit, ViewChild, ElementRef, SimpleChanges } from '@angular/core';\nimport { AnimateDigitService } from '@services';\n// import { ChartOptions } from '../no-of-application-status/no-of-application-status.component';\n// import { ChartComponent } from 'ng-apexcharts';\n\n@Component({\n  selector: 'app-payment-status',\n  templateUrl: './payment-status.component.html',\n  styleUrls: ['./payment-status.component.scss']\n})\nexport class PaymentStatusComponent implements OnInit, AfterViewInit, OnChanges {\n\n  currentDate = new Date();\n\n  // temporary static value start\n  noOfPaidApplications = Math.floor(Math.random() * 100000);\n  noOfUnpaidApplications = Math.floor(Math.random() * 100000);\n  noOfTotalApplications;\n  previousMonthValuePaid = -12;\n  previousMonthValueUnpaid = 17;\n  // temporary static value end\n\n  duration = 1000;\n  @ViewChild('noOfPaidApplications') animateCountPaid: ElementRef;\n  @ViewChild('noOfUnpaidApplications') animateCountUnpaid: ElementRef;\n  @ViewChild('noOfTotalApplications') animateCountTotal: ElementRef;\n\n  // @ViewChild('chart') chart: ChartComponent;\n  // public chartOptions: Partial<ChartOptions>;\n\n  constructor(private animateDigitService: AnimateDigitService) {\n\n    // this.chartOptions = {\n    //   series: [\n    //     {\n    //       name: 'Paid',\n    //       data: [this.noOfPaidApplications],\n    //       color: '#00e396'\n    //     },\n    //     {\n    //       name: 'Unpaid',\n    //       data: [this.noOfUnpaidApplications],\n    //       color: '#E91E63'\n    //     }\n    //   ],\n    //   chart: {\n    //     type: 'bar',\n    //     height: 110,\n    //     width: 100\n    //   },\n    //   plotOptions: {\n    //     bar: {\n    //       horizontal: false,\n    //       columnWidth: '50%',\n    //       // endingShape: 'rounded'\n    //     }\n    //   },\n    //   dataLabels: {\n    //     enabled: false\n    //   },\n    //   // stroke: {\n    //   //   show: true,\n    //   //   width: 2,\n    //   //   colors: ['transparent']\n    //   // },\n    //   xaxis: {\n    //     categories: [\n    //       ''\n    //     ],\n    //     labels: {\n    //       show: false\n    //     }\n    //   },\n    //   yaxis: {\n    //     title: {\n    //       text: ''\n    //     },\n    //     labels: {\n    //       show: false\n    //     }\n    //   },\n    //   fill: {\n    //     opacity: 1,\n    //     colors: ['#00e396', '#E91E63']\n    //   }\n    // };\n  }\n\n  ngOnInit(): void {\n    this.noOfTotalApplications = this.noOfPaidApplications + this.noOfUnpaidApplications;\n  }\n\n  ngAfterViewInit() {\n    if (this.noOfPaidApplications || this.noOfUnpaidApplications) {\n      this.animateCount();\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['noOfPaidApplications'] || changes['noOfUnpaidApplications']) {\n      this.animateCount();\n    }\n  }\n\n  animateCount() {\n    this.animateDigitService.counterFunc(this.noOfPaidApplications, this.duration, this.animateCountPaid);\n    this.animateDigitService.counterFunc(this.noOfUnpaidApplications, this.duration, this.animateCountUnpaid);\n    this.animateDigitService.counterFunc(this.noOfTotalApplications, this.duration, this.animateCountTotal);\n  }\n\n}\n","<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-md-3\">\n      <mat-card class=\"mat-elevation-z5\">\n        <mat-card-content class=\"dashboard-card\">\n          <span class=\"dashboard-card-title\">\n            Paid Applications\n          </span>\n          <br><br>\n          <div #noOfPaidApplications class=\"dashboard-card-value\">\n            <span class=\"dashboard-card-value\">\n              {{ noOfPaidApplications }}\n            </span>\n          </div>\n          <br><br>\n          <span class=\"dashboard-card-remark\">\n            <!-- <span [ngClass]=\"previousMonthValuePaid >= 0 ? 'higher' : 'lower'\">{{ previousMonthValuePaid + '%' }} </span> -->\n            <!-- Since last month -->\n          </span>\n        </mat-card-content>\n      </mat-card>\n    </div>\n    <div class=\"col-md-3\">\n      <mat-card class=\"mat-elevation-z5\">\n        <mat-card-content class=\"dashboard-card\">\n          <span class=\"dashboard-card-title\">\n            Unpaid Applications\n          </span>\n          <br><br>\n          <div #noOfUnpaidApplications class=\"dashboard-card-value\">\n            <span>\n              {{ noOfUnpaidApplications }}\n            </span>\n          </div>\n          <br><br>\n          <span class=\"dashboard-card-remark\">\n            <!-- <span [ngClass]=\"previousMonthValueUnpaid >= 0 ? 'higher' : 'lower'\">{{ previousMonthValueUnpaid + '%' }} </span> -->\n            <!-- Since last month -->\n          </span>\n        </mat-card-content>\n      </mat-card>\n    </div>\n    <div class=\"col-md-6\">\n      <mat-card class=\"mat-elevation-z5 card-container\">\n        <div class=\"col-md-3 total\">\n          <mat-card-content class=\"dashboard-card\">\n            <span class=\"dashboard-card-title\">\n              Total Applications\n            </span>\n            <br><br>\n            <div #noOfTotalApplications class=\"dashboard-card-value\">\n              <span>\n                {{ noOfTotalApplications }}\n              </span>\n            </div>\n          </mat-card-content>\n        </div>\n        <div class=\"col-md-3 chart\">\n          <!-- <apx-chart [series]=\"chartOptions.series\" [chart]=\"chartOptions.chart\" [dataLabels]=\"chartOptions.dataLabels\"\n            [plotOptions]=\"chartOptions.plotOptions\" [yaxis]=\"chartOptions.yaxis\"\n            [fill]=\"chartOptions.fill\"\n            [xaxis]=\"chartOptions.xaxis\"></apx-chart> -->\n        </div>\n      </mat-card>\n    </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DashboardRoutingModule } from './dashboard-routing.module';\nimport { DashboardComponent } from './dashboard.component';\nimport { AngularMaterialModule } from '@shared';\nimport { NoOfApplicationComponent } from './no-of-application/no-of-application.component';\nimport { NoOfApplicationStatusComponent } from './no-of-application-status/no-of-application-status.component';\nimport { PaymentStatusComponent } from './payment-status/payment-status.component';\nimport { SharedModule } from '../../../shared/shared.module';\n\n\n@NgModule({\n  declarations: [\n    DashboardComponent,\n    NoOfApplicationComponent,\n    NoOfApplicationStatusComponent,\n    PaymentStatusComponent\n  ],\n  imports: [\n    CommonModule,\n    DashboardRoutingModule,\n    AngularMaterialModule,\n    SharedModule,\n  ]\n})\nexport class DashboardModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { DashboardComponent } from './dashboard.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DashboardComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class DashboardRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-md-6\">\n      <app-no-of-application></app-no-of-application>\n    </div>\n    <div class=\"col-md-6 payment-status\">\n      <app-payment-status></app-payment-status>\n    </div>\n    <div class=\"col-md-12\">\n      <app-no-of-application-status></app-no-of-application-status>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { APPLICATION_STATUSES } from '@shared';\n\n// export type ChartOptions = {\n//   series: ApexAxisChartSeries;\n//   chart: ApexChart;\n//   dataLabels: ApexDataLabels;\n//   plotOptions: ApexPlotOptions;\n//   yaxis: ApexYAxis;\n//   xaxis: ApexXAxis;\n//   fill: ApexFill;\n//   title: ApexTitleSubtitle;\n// };\n\n@Component({\n  selector: 'app-no-of-application-status',\n  templateUrl: './no-of-application-status.component.html',\n  styleUrls: ['./no-of-application-status.component.scss']\n})\nexport class NoOfApplicationStatusComponent implements OnInit {\n  // @ViewChild('chart') chart: ChartComponent;\n  // public chartOptions: Partial<ChartOptions>;\n\n  constructor() {\n    this.runChart();\n  }\n\n  ngOnInit() {\n  }\n\n  runChart() {\n  //   this.chartOptions = {\n  //     series: [\n  //       {\n  //         name: 'Applications',\n  //         data: [\n  //           // temporary data\n  //           Math.floor(Math.random() * 100000),\n  //           Math.floor(Math.random() * 100000),\n  //           Math.floor(Math.random() * 100000),\n  //           Math.floor(Math.random() * 100000),\n  //           Math.floor(Math.random() * 100000),\n  //           Math.floor(Math.random() * 100000),\n  //           Math.floor(Math.random() * 100000),\n  //           Math.floor(Math.random() * 100000),\n  //           Math.floor(Math.random() * 100000)\n  //         ]\n  //       }\n  //     ],\n  //     chart: {\n  //       height: 350,\n  //       type: 'bar'\n  //     },\n  //     plotOptions: {\n  //       bar: {\n  //         dataLabels: {\n  //           position: 'top' // top, center, bottom\n  //         }\n  //       }\n  //     },\n  //     dataLabels: {\n  //       enabled: true,\n  //       formatter: function (val) {\n  //         return val + '';\n  //       },\n  //       offsetY: -20,\n  //       style: {\n  //         fontSize: '12px',\n  //         colors: ['#304758']\n  //       }\n  //     },\n\n  //     xaxis: {\n  //       categories: [\n  //         ...APPLICATION_STATUSES.map((stat) => {\n  //           return stat.status.replace('_', ' ');\n  //         })\n  //       ],\n  //       position: 'top',\n  //       labels: {\n  //         offsetY: -18\n  //       },\n  //       axisBorder: {\n  //         show: false\n  //       },\n  //       axisTicks: {\n  //         show: false\n  //       },\n  //       crosshairs: {\n  //         fill: {\n  //           type: 'gradient',\n  //           gradient: {\n  //             colorFrom: '#D8E3F0',\n  //             colorTo: '#BED1E6',\n  //             stops: [0, 100],\n  //             opacityFrom: 0.4,\n  //             opacityTo: 0.5\n  //           }\n  //         }\n  //       },\n  //       tooltip: {\n  //         enabled: true,\n  //         offsetY: -35\n  //       }\n  //     },\n  //     fill: {\n  //       type: 'gradient',\n  //       gradient: {\n  //         shade: 'light',\n  //         type: 'horizontal',\n  //         shadeIntensity: 0.25,\n  //         gradientToColors: undefined,\n  //         inverseColors: true,\n  //         opacityFrom: 1,\n  //         opacityTo: 1,\n  //         stops: [0, 50, 75, 100]\n  //       }\n  //     },\n  //     yaxis: {\n  //       axisBorder: {\n  //         show: false\n  //       },\n  //       axisTicks: {\n  //         show: false\n  //       },\n  //       labels: {\n  //         show: false,\n  //         formatter: function (val) {\n  //           // return val;\n  //           return val + '';\n  //         }\n  //       }\n  //     },\n  //     title: {\n  //       text: '_',\n  //       offsetY: 320,\n  //       align: 'center',\n  //       style: {\n  //         color: '#FFF'\n  //       }\n  //     }\n  //   };\n  }\n}\n","<form>\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-md-12 title\">\n        <mat-label>\n          <mat-icon>assessment</mat-icon> Application Status\n        </mat-label>\n        <hr>\n      </div>\n      <!-- <div class=\"col-md-12\">\n        <apx-chart [series]=\"chartOptions.series\" [chart]=\"chartOptions.chart\" [dataLabels]=\"chartOptions.dataLabels\"\n          [plotOptions]=\"chartOptions.plotOptions\" [yaxis]=\"chartOptions.yaxis\" [xaxis]=\"chartOptions.xaxis\"\n          [fill]=\"chartOptions.fill\" [title]=\"chartOptions.title\"></apx-chart>\n      </div> -->\n    </div>\n  </div>\n</form>\n","import { Component, OnInit, AfterViewInit, OnChanges, Input, ViewChild, ElementRef, SimpleChanges } from '@angular/core';\nimport { AnimateDigitService } from '@services';\n\n@Component({\n  selector: 'app-no-of-application',\n  templateUrl: './no-of-application.component.html',\n  styleUrls: ['./no-of-application.component.scss']\n})\nexport class NoOfApplicationComponent implements OnInit, AfterViewInit, OnChanges {\n\n  // temporary static value start\n  noOfS1Applications = Math.floor(Math.random() * 100000);\n  noOfS2Applications = Math.floor(Math.random() * 100000);\n  previousMonthValueS1: number = Math.ceil(Math.random() * 100) * (Math.round(Math.random()) ? 1 : -1);\n  previousMonthValueS2: number = Math.ceil(Math.random() * 100) * (Math.round(Math.random()) ? 1 : -1);\n  // temporary static value end\n\n  duration: number = 1000;\n  @Input() steps: number = 12;\n  @ViewChild(\"noOfS1Applications\") animateCountS1: ElementRef;\n  @ViewChild(\"noOfS2Applications\") animateCountS2: ElementRef;\n\n  constructor(private animateDigitService: AnimateDigitService) { }\n\n  ngOnInit(): void {\n  }\n\n  ngAfterViewInit() {\n    if (this.noOfS1Applications || this.noOfS2Applications) {\n      this.animateCount();\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes[\"noOfS1Applications\"] || changes[\"noOfS2Applications\"]) {\n      this.animateCount();\n    }\n  }\n\n  animateCount() {\n    this.animateDigitService.counterFunc(this.noOfS1Applications, this.duration, this.animateCountS1);\n    this.animateDigitService.counterFunc(this.noOfS2Applications, this.duration, this.animateCountS2);\n  }\n\n}\n","<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-md-6\">\n      <mat-card class=\"mat-elevation-z5\">\n        <mat-card-content class=\"dashboard-card\">\n          <span class=\"dashboard-card-title\">\n            S1 Applications\n          </span>\n          <br><br>\n          <div #noOfS1Applications class=\"dashboard-card-value\">\n            <span class=\"dashboard-card-value\">\n              {{ noOfS1Applications }}\n            </span>\n        </div>\n        <br><br>\n        <span class=\"dashboard-card-remark\">\n            <span [ngClass]=\"previousMonthValueS1 >= 0 ? 'higher' : 'lower'\">{{ previousMonthValueS1 + '%' }} </span>\n            Since last month\n          </span>\n        </mat-card-content>\n      </mat-card>\n    </div>\n    <div class=\"col-md-6\">\n      <mat-card class=\"mat-elevation-z5\">\n        <mat-card-content class=\"dashboard-card\">\n          <span class=\"dashboard-card-title\">\n            S2 Applications\n          </span>\n          <br><br>\n          <div #noOfS2Applications class=\"dashboard-card-value\">\n            <span>\n              {{ noOfS2Applications }}\n            </span>\n          </div>\n          <br><br>\n          <span class=\"dashboard-card-remark\">\n            <span [ngClass]=\"previousMonthValueS2 >= 0 ? 'higher' : 'lower'\">{{ previousMonthValueS2 + '%' }} </span>\n            Since last month\n          </span>\n        </mat-card-content>\n      </mat-card>\n    </div>\n  </div>\n</div>\n"]}