{"version":3,"sources":["./src/app/modules/pages/maintenance/qr-and-bar-code-checker/qr-and-bar-code-checker.module.ts","./src/app/modules/pages/maintenance/qr-and-bar-code-checker/qr-and-bar-code-checker-routing.module.ts","./src/app/modules/pages/maintenance/qr-and-bar-code-checker/qr-and-bar-code-checker.component.ts","./src/app/modules/pages/maintenance/qr-and-bar-code-checker/qr-and-bar-code-checker.component.html"],"names":[],"mappings":"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","file":"qr-and-bar-code-checker-qr-and-bar-code-checker-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { QrAndBarCodeCheckerRoutingModule } from './qr-and-bar-code-checker-routing.module';\r\nimport { QrAndBarCodeCheckerComponent } from './qr-and-bar-code-checker.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { AngularMaterialModule } from '@shared';\r\nimport { FragmentsModule } from 'app/modules/fragments/fragments.module';\r\n\r\n\r\n@NgModule({\r\n  declarations: [QrAndBarCodeCheckerComponent],\r\n  imports: [\r\n    CommonModule,\r\n    QrAndBarCodeCheckerRoutingModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule,\r\n    AngularMaterialModule,\r\n    FragmentsModule,\r\n  ]\r\n})\r\nexport class QrAndBarCodeCheckerModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { QrAndBarCodeCheckerComponent } from './qr-and-bar-code-checker.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: QrAndBarCodeCheckerComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class QrAndBarCodeCheckerRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ApiService, SweetAlertService } from '@services';\r\nimport { ENDPOINTS } from '@shared';\r\nimport { QrAndBarCodeChecker } from 'app/core/models/qrAndBarCodeChecker.model';\r\n\r\n@Component({\r\n  selector: 'app-qr-and-bar-code-checker',\r\n  templateUrl: './qr-and-bar-code-checker.component.html',\r\n  styleUrls: ['./qr-and-bar-code-checker.component.scss']\r\n})\r\nexport class QrAndBarCodeCheckerComponent implements OnInit {\r\n\r\n  qrAndBarCodeChecker = new QrAndBarCodeChecker();\r\n  qrAndBarCodeCheckerForm: FormGroup;\r\n  qrAndBarCodeCheckerTypeList = ['S1', 'S2'];\r\n  qrAndBarCodeCheckerType = '';\r\n\r\n  qrBarCodeValid: boolean = false;\r\n\r\n  constructor(\r\n    private apiService: ApiService,\r\n    private formBuilder: FormBuilder,\r\n    private sweetAlertService: SweetAlertService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.setFormValidator();\r\n  }\r\n\r\n  validate(): void {\r\n    let endpoint = this.qrAndBarCodeCheckerType === 'S1' ? ENDPOINTS.s1QrCheck : ENDPOINTS.s2QrCheck;\r\n    endpoint += this.qrAndBarCodeChecker.qrOrBarCode;\r\n\r\n    this.apiService.save(endpoint, this.qrAndBarCodeChecker).subscribe(\r\n      res => {\r\n        this.qrBarCodeValid = true;\r\n      }, err => {\r\n        this.qrBarCodeValid = false;\r\n        this.sweetAlertService.customErrorMessage('QR or Bar Code is Invalid. Please try again.');\r\n      }\r\n    );\r\n  }\r\n\r\n  setFormValidator(): void {\r\n    this.qrAndBarCodeCheckerForm = this.formBuilder.group({\r\n      applicationType: ['', Validators.required],\r\n      qrOrBarCode: ['', Validators.required],\r\n    });\r\n  }\r\n\r\n  resetFormValidator(): void {\r\n    this.qrAndBarCodeChecker = new QrAndBarCodeChecker();\r\n    this.qrAndBarCodeCheckerForm.markAsUntouched();\r\n    this.qrAndBarCodeCheckerForm.markAsPristine();\r\n  }\r\n\r\n}\r\n","<form>\r\n    <div class=\"container-fluid\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-12 title\">\r\n                <mat-label>\r\n                    <span class=\"material-icons\">qr_code_scanner</span> QR and BAR CODE Checker\r\n                </mat-label>\r\n            </div>\r\n        </div>\r\n        <hr>\r\n\r\n        <div class=\"row\">\r\n            <div class=\"col-md-7 form-group\">\r\n                <form [formGroup]=\"qrAndBarCodeCheckerForm\">\r\n                    <div class=\"row\">\r\n\r\n                        <mat-form-field appearance=\"outline\">\r\n                          <mat-label>Application Type</mat-label>\r\n                          <mat-select [(ngModel)]=\"qrAndBarCodeCheckerType\" name=\"applicationType\" formControlName=\"applicationType\">\r\n                            <mat-option *ngFor=\"let i of qrAndBarCodeCheckerTypeList\" [value]=\"i\">\r\n                              {{i}} Application\r\n                            </mat-option>\r\n                          </mat-select>\r\n                        </mat-form-field>\r\n\r\n                        <mat-form-field appearance=\"outline\">\r\n                            <mat-label>QR/BAR CODE: <span class=\"required-field\">*</span></mat-label>\r\n                            <input matInput [(ngModel)]=\"qrAndBarCodeChecker.qrOrBarCode\" name=\"qrOrBarCode\"\r\n                                formControlName=\"qrOrBarCode\">\r\n                        </mat-form-field>\r\n\r\n                        <app-form-action-buttons [childObject]=\"qrAndBarCodeChecker\" [childForm]=\"qrAndBarCodeCheckerForm\"\r\n                            (validateFunction)=\"validate()\" (cancelFunction)=\"resetFormValidator()\">\r\n                        </app-form-action-buttons>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n            <div class=\"col-md-5 message-output\">\r\n                <span class=\"badge bg-success\" *ngIf=\"qrBarCodeValid\">VALID</span>\r\n                <span class=\"badge bg-danger\" *ngIf=\"!qrBarCodeValid\">INVALID</span>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</form>\r\n\r\n"],"sourceRoot":"webpack:///"}