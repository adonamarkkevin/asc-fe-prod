{"version":3,"sources":["./src/app/modules/fragments/index.ts","./src/app/modules/pages/maintenance/medium-execution-controller/medium-execution-controller.component.ts","./src/app/modules/pages/maintenance/medium-execution-controller/medium-execution-controller.component.html","./src/app/modules/pages/maintenance/medium-execution-controller/medium-execution-controller-routing.module.ts","./src/app/modules/pages/maintenance/medium-execution-controller/medium-execution-controller.component.scss","./src/app/modules/pages/maintenance/medium-execution-controller/medium-execution-controller.module.ts"],"names":[],"mappings":"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","file":"medium-execution-controller-medium-execution-controller-module-es2015.js","sourcesContent":["export * from './form-action-buttons/form-action-buttons.component';\r\nexport * from './form-list/form-list.component';","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { FormListComponent } from '@fragments';\r\nimport { TypeOfMedium } from '@models';\r\nimport { ApiService, SweetAlertService } from '@services';\r\nimport { ENDPOINTS } from '@shared';\r\nimport { MediumExecutionController } from 'app/core/models/medium-execution-controller.model';\r\nimport { TypeOfMediumExecution } from 'app/core/models/type-of-medium-execution.model';\r\nimport { ValidateFieldService } from 'app/core/services/validate-field.service';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-medium-execution-controller',\r\n  templateUrl: './medium-execution-controller.component.html',\r\n  styleUrls: ['./medium-execution-controller.component.scss']\r\n})\r\nexport class MediumExecutionControllerComponent implements OnInit {\r\n  @ViewChild(FormListComponent) formListComponent: FormListComponent;\r\n  @ViewChild(MatPaginator, { static: false }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: false }) sort: MatSort;\r\n  dataSource: MatTableDataSource<MediumExecutionController>;\r\n  displayedColumns: string[] = ['typeOfMediumController', 'typeOfExecutionController'];\r\n\r\n  mediumExecutionController = new MediumExecutionController();\r\n  typeOfMedium = new TypeOfMedium();\r\n  typeOfMediumExecution = new TypeOfMediumExecution();\r\n  typeOfMediumList = [];\r\n  typeOfMediumExecutionList = [];\r\n  mediumExecutionControllerList = [];\r\n  mediumExecutionControllerForm: FormGroup;\r\n\r\n\r\n  constructor(\r\n    private apiService: ApiService,\r\n    private formBuilder: FormBuilder,\r\n    private sweetAlertService: SweetAlertService,\r\n    public validateFieldService: ValidateFieldService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.setFormValidator();\r\n    this.getMaintenance();\r\n    this.getList();\r\n  }\r\n\r\n  getList(): void{\r\n    this.apiService.findAll(ENDPOINTS.mediumExecutionController).subscribe((res:any) => {\r\n      this.mediumExecutionControllerList = res.responseData.data;\r\n\r\n      this.dataSource = new MatTableDataSource<MediumExecutionController>(res.responseData.data);\r\n      this.dataSource.paginator = this.formListComponent.paginator;\r\n      this.dataSource.sort = this.formListComponent.sort;\r\n    })\r\n  }\r\n\r\n  getMediumExecution(): void {\r\n    this.apiService.findById(ENDPOINTS.mediumExecutionController, this.formListComponent.idForUpdate).subscribe((res: any) => {\r\n      if (res) {\r\n        this.mediumExecutionController = res.responseData.data;\r\n      }\r\n    });\r\n  }\r\n\r\n  save(): void {\r\n    this.apiService.save(ENDPOINTS.mediumExecutionController, this.mediumExecutionController).subscribe(\r\n      (res: any) => {\r\n        if (res !== undefined) {\r\n          this.sweetAlertService.success(res);\r\n        }\r\n      }, (err: any) => {\r\n        this.sweetAlertService.error(err);\r\n      }, () => {\r\n        this.resetFormValidator();\r\n        this.getList();\r\n        this.getMaintenance();\r\n      });\r\n  }\r\n\r\n  update(): void {\r\n    this.apiService.update(ENDPOINTS.mediumExecutionController, this.mediumExecutionController).subscribe(\r\n      (res: any) => {\r\n        if (res !== undefined){\r\n          this.sweetAlertService.success(res);\r\n        }\r\n      }, (err: any) => {\r\n        this.sweetAlertService.error(err);\r\n      }, () => {\r\n        this.resetFormValidator()\r\n        this.getList();\r\n        this.getMaintenance();\r\n      });\r\n  }\r\n\r\n\r\n  getMaintenance(): void {\r\n    this.apiService.findAll(ENDPOINTS.typeOfMedium).subscribe((res:any) => {\r\n      this.typeOfMediumList = res.responseData.data;\r\n    })\r\n    this.apiService.findAll(ENDPOINTS.typeOfExecutions).subscribe((res:any) => {\r\n      this.typeOfMediumExecutionList = res.responseData.data;\r\n    })\r\n  }\r\n\r\n  compareTypeOfMedium(value: any, selected: any): boolean {\r\n    if (value && selected) {\r\n      return value.description === selected.description;\r\n    }\r\n  }\r\n\r\n  compareTypeOfExecution(value: any, selected: any): boolean {\r\n    if (value && selected) {\r\n      return value.typeOfExecution === selected.typeOfExecution;\r\n    }\r\n  }\r\n\r\n  setFormValidator(): void {\r\n    this.mediumExecutionControllerForm = this.formBuilder.group({\r\n      typeOfExecution: ['', Validators.required],\r\n      typeOfMedium: ['', Validators.required],\r\n    });\r\n  }\r\n\r\n  resetFormValidator(): void {\r\n    this.mediumExecutionController = new MediumExecutionController();\r\n    this.typeOfMedium = new TypeOfMedium();\r\n    this.typeOfMediumExecution = new TypeOfMediumExecution();\r\n    this.mediumExecutionControllerForm.markAsUntouched();\r\n    this.mediumExecutionControllerForm.markAsPristine();\r\n  }\r\n\r\n  delete() {\r\n    Swal.fire({\r\n      text: 'Are you sure you want to delete this brand?',\r\n      icon: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Confirm'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.apiService.deleteById(ENDPOINTS.mediumExecutionController, this.mediumExecutionController.id).subscribe(\r\n          () => {\r\n            this.sweetAlertService.customSuccessMessage('Medium execution controller successfully deleted.');\r\n            this.resetFormValidator();\r\n            this.getList();\r\n          }\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","export default \"<form>\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12 title\\\">\\r\\n        <mat-label>\\r\\n          <span class=\\\"material-icons\\\">badge</span> Medium Execution Controller\\r\\n        </mat-label>\\r\\n      </div>\\r\\n    </div>\\r\\n    <hr>\\r\\n    <div class=\\\"row\\\">\\r\\n      <b><b class=\\\"material-icons\\\">error_outline</b> <i>&nbsp;Note: All type of medium must have Medium Execution, select \\\"NO EXECUTION\\\" if none.</i></b>\\r\\n    </div>\\r\\n    <form class=\\\"row\\\" [formGroup]=\\\"mediumExecutionControllerForm\\\">\\r\\n      <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\">\\r\\n        <mat-label> Type of Medium <mat-icon>notification_important</mat-icon>\\r\\n        </mat-label>\\r\\n        <mat-select [(ngModel)]=\\\"mediumExecutionController.typeOfMedium\\\" name=\\\"typeOfMedium\\\"\\r\\n          [compareWith]=\\\"compareTypeOfMedium\\\" formControlName=\\\"typeOfMedium\\\" matNativeControl>\\r\\n          <mat-option *ngFor=\\\"let i of typeOfMediumList\\\" [value]=\\\"i\\\">\\r\\n            {{i.description}}\\r\\n          </mat-option>\\r\\n        </mat-select>\\r\\n      </mat-form-field>\\r\\n\\r\\n      <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\">\\r\\n        <mat-label>Type of Execution <mat-icon>notification_important</mat-icon>\\r\\n        </mat-label>\\r\\n        <mat-select [(ngModel)]=\\\"mediumExecutionController.typeOfExecution\\\" name=\\\"typeOfExecution\\\"\\r\\n          [compareWith]=\\\"compareTypeOfExecution\\\" formControlName=\\\"typeOfExecution\\\" matNativeControl>\\r\\n          <mat-option *ngFor=\\\"let i of typeOfMediumExecutionList\\\" [value]=\\\"i\\\">\\r\\n            {{i.typeOfExecution}}\\r\\n          </mat-option>\\r\\n        </mat-select>\\r\\n      </mat-form-field>\\r\\n\\r\\n      <app-form-action-buttons [childObject]=\\\"mediumExecutionController\\\" [childForm]=\\\"mediumExecutionControllerForm\\\"\\r\\n        (saveFunction)=\\\"save()\\\" (updateFunction)=\\\"update()\\\" (cancelFunction)=\\\"resetFormValidator()\\\"\\r\\n        (deleteFunction)=\\\"delete()\\\"></app-form-action-buttons><br><br><br>\\r\\n\\r\\n      <app-form-list [dataSource]=\\\"dataSource\\\" [displayedColumns]=\\\"displayedColumns\\\"\\r\\n        (selectInListFunction)=\\\"getMediumExecution()\\\"></app-form-list>\\r\\n    </form>\\r\\n\\r\\n  </div>\\r\\n\\r\\n\\r\\n</form>\\r\\n\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { MediumExecutionControllerComponent } from './medium-execution-controller.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: \"\",\r\n    component: MediumExecutionControllerComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class MediumExecutionControllerRoutingModule { }\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcGFnZXMvbWFpbnRlbmFuY2UvbWVkaXVtLWV4ZWN1dGlvbi1jb250cm9sbGVyL21lZGl1bS1leGVjdXRpb24tY29udHJvbGxlci5jb21wb25lbnQuc2NzcyJ9 */\";","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { MediumExecutionControllerRoutingModule } from './medium-execution-controller-routing.module';\r\nimport { MediumExecutionControllerComponent } from './medium-execution-controller.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { AngularMaterialModule } from '@shared';\r\nimport { FragmentsModule } from 'app/modules/fragments/fragments.module';\r\n\r\n\r\n@NgModule({\r\n  declarations: [MediumExecutionControllerComponent],\r\n  imports: [\r\n    CommonModule,\r\n    MediumExecutionControllerRoutingModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule,\r\n    AngularMaterialModule,\r\n    FragmentsModule,\r\n  ]\r\n})\r\nexport class MediumExecutionControllerModule { }\r\n"],"sourceRoot":"webpack:///"}