{"version":3,"sources":["./src/app/modules/pages/dashboard/payment-status/payment-status.component.ts","./src/app/modules/pages/dashboard/payment-status/payment-status.component.html","./src/app/modules/pages/dashboard/dashboard.module.ts","./src/app/modules/pages/dashboard/dashboard-routing.module.ts","./src/app/modules/pages/dashboard/dashboard.component.ts","./src/app/modules/pages/dashboard/dashboard.component.html","./src/app/modules/pages/dashboard/no-of-application-status/no-of-application-status.component.ts","./src/app/modules/pages/dashboard/no-of-application-status/no-of-application-status.component.html","./src/app/modules/pages/dashboard/no-of-application/no-of-application.component.ts","./src/app/modules/pages/dashboard/no-of-application/no-of-application.component.html"],"names":[],"mappings":"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","file":"dashboard-dashboard-module-es2015.js","sourcesContent":["import { Component, OnInit, OnChanges, AfterViewInit, ViewChild, ElementRef, SimpleChanges } from '@angular/core';\r\nimport { AnimateDigitService } from '@services';\r\n// import { ChartOptions } from '../no-of-application-status/no-of-application-status.component';\r\n// import { ChartComponent } from 'ng-apexcharts';\r\n\r\n@Component({\r\n  selector: 'app-payment-status',\r\n  templateUrl: './payment-status.component.html',\r\n  styleUrls: ['./payment-status.component.scss']\r\n})\r\nexport class PaymentStatusComponent implements OnInit, AfterViewInit, OnChanges {\r\n\r\n  currentDate = new Date();\r\n\r\n  // temporary static value start\r\n  noOfPaidApplications = Math.floor(Math.random() * 100000);\r\n  noOfUnpaidApplications = Math.floor(Math.random() * 100000);\r\n  noOfTotalApplications;\r\n  previousMonthValuePaid = -12;\r\n  previousMonthValueUnpaid = 17;\r\n  // temporary static value end\r\n\r\n  duration = 1000;\r\n  @ViewChild('noOfPaidApplications') animateCountPaid: ElementRef;\r\n  @ViewChild('noOfUnpaidApplications') animateCountUnpaid: ElementRef;\r\n  @ViewChild('noOfTotalApplications') animateCountTotal: ElementRef;\r\n\r\n  // @ViewChild('chart') chart: ChartComponent;\r\n  // public chartOptions: Partial<ChartOptions>;\r\n\r\n  constructor(private animateDigitService: AnimateDigitService) {\r\n\r\n    // this.chartOptions = {\r\n    //   series: [\r\n    //     {\r\n    //       name: 'Paid',\r\n    //       data: [this.noOfPaidApplications],\r\n    //       color: '#00e396'\r\n    //     },\r\n    //     {\r\n    //       name: 'Unpaid',\r\n    //       data: [this.noOfUnpaidApplications],\r\n    //       color: '#E91E63'\r\n    //     }\r\n    //   ],\r\n    //   chart: {\r\n    //     type: 'bar',\r\n    //     height: 110,\r\n    //     width: 100\r\n    //   },\r\n    //   plotOptions: {\r\n    //     bar: {\r\n    //       horizontal: false,\r\n    //       columnWidth: '50%',\r\n    //       // endingShape: 'rounded'\r\n    //     }\r\n    //   },\r\n    //   dataLabels: {\r\n    //     enabled: false\r\n    //   },\r\n    //   // stroke: {\r\n    //   //   show: true,\r\n    //   //   width: 2,\r\n    //   //   colors: ['transparent']\r\n    //   // },\r\n    //   xaxis: {\r\n    //     categories: [\r\n    //       ''\r\n    //     ],\r\n    //     labels: {\r\n    //       show: false\r\n    //     }\r\n    //   },\r\n    //   yaxis: {\r\n    //     title: {\r\n    //       text: ''\r\n    //     },\r\n    //     labels: {\r\n    //       show: false\r\n    //     }\r\n    //   },\r\n    //   fill: {\r\n    //     opacity: 1,\r\n    //     colors: ['#00e396', '#E91E63']\r\n    //   }\r\n    // };\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.noOfTotalApplications = this.noOfPaidApplications + this.noOfUnpaidApplications;\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.noOfPaidApplications || this.noOfUnpaidApplications) {\r\n      this.animateCount();\r\n    }\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes['noOfPaidApplications'] || changes['noOfUnpaidApplications']) {\r\n      this.animateCount();\r\n    }\r\n  }\r\n\r\n  animateCount() {\r\n    this.animateDigitService.counterFunc(this.noOfPaidApplications, this.duration, this.animateCountPaid);\r\n    this.animateDigitService.counterFunc(this.noOfUnpaidApplications, this.duration, this.animateCountUnpaid);\r\n    this.animateDigitService.counterFunc(this.noOfTotalApplications, this.duration, this.animateCountTotal);\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n  <div class=\"row\">\r\n    <div class=\"col-md-3\">\r\n      <mat-card class=\"mat-elevation-z5\">\r\n        <mat-card-content class=\"dashboard-card\">\r\n          <span class=\"dashboard-card-title\">\r\n            Paid Applications\r\n          </span>\r\n          <br><br>\r\n          <div #noOfPaidApplications class=\"dashboard-card-value\">\r\n            <span class=\"dashboard-card-value\">\r\n              {{ noOfPaidApplications }}\r\n            </span>\r\n          </div>\r\n          <br><br>\r\n          <span class=\"dashboard-card-remark\">\r\n            <!-- <span [ngClass]=\"previousMonthValuePaid >= 0 ? 'higher' : 'lower'\">{{ previousMonthValuePaid + '%' }} </span> -->\r\n            <!-- Since last month -->\r\n          </span>\r\n        </mat-card-content>\r\n      </mat-card>\r\n    </div>\r\n    <div class=\"col-md-3\">\r\n      <mat-card class=\"mat-elevation-z5\">\r\n        <mat-card-content class=\"dashboard-card\">\r\n          <span class=\"dashboard-card-title\">\r\n            Unpaid Applications\r\n          </span>\r\n          <br><br>\r\n          <div #noOfUnpaidApplications class=\"dashboard-card-value\">\r\n            <span>\r\n              {{ noOfUnpaidApplications }}\r\n            </span>\r\n          </div>\r\n          <br><br>\r\n          <span class=\"dashboard-card-remark\">\r\n            <!-- <span [ngClass]=\"previousMonthValueUnpaid >= 0 ? 'higher' : 'lower'\">{{ previousMonthValueUnpaid + '%' }} </span> -->\r\n            <!-- Since last month -->\r\n          </span>\r\n        </mat-card-content>\r\n      </mat-card>\r\n    </div>\r\n    <div class=\"col-md-6\">\r\n      <mat-card class=\"mat-elevation-z5 card-container\">\r\n        <div class=\"col-md-3 total\">\r\n          <mat-card-content class=\"dashboard-card\">\r\n            <span class=\"dashboard-card-title\">\r\n              Total Applications\r\n            </span>\r\n            <br><br>\r\n            <div #noOfTotalApplications class=\"dashboard-card-value\">\r\n              <span>\r\n                {{ noOfTotalApplications }}\r\n              </span>\r\n            </div>\r\n          </mat-card-content>\r\n        </div>\r\n        <div class=\"col-md-3 chart\">\r\n          <!-- <apx-chart [series]=\"chartOptions.series\" [chart]=\"chartOptions.chart\" [dataLabels]=\"chartOptions.dataLabels\"\r\n            [plotOptions]=\"chartOptions.plotOptions\" [yaxis]=\"chartOptions.yaxis\"\r\n            [fill]=\"chartOptions.fill\"\r\n            [xaxis]=\"chartOptions.xaxis\"></apx-chart> -->\r\n        </div>\r\n      </mat-card>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { DashboardRoutingModule } from './dashboard-routing.module';\r\nimport { DashboardComponent } from './dashboard.component';\r\nimport { AngularMaterialModule } from '@shared';\r\nimport { NoOfApplicationComponent } from './no-of-application/no-of-application.component';\r\nimport { NoOfApplicationStatusComponent } from './no-of-application-status/no-of-application-status.component';\r\nimport { PaymentStatusComponent } from './payment-status/payment-status.component';\r\nimport { SharedModule } from '../../../shared/shared.module';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    DashboardComponent,\r\n    NoOfApplicationComponent,\r\n    NoOfApplicationStatusComponent,\r\n    PaymentStatusComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    DashboardRoutingModule,\r\n    AngularMaterialModule,\r\n    SharedModule,\r\n  ]\r\n})\r\nexport class DashboardModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { DashboardComponent } from './dashboard.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: DashboardComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class DashboardRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.scss']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n  <div class=\"row\">\r\n    <div class=\"col-md-6\">\r\n      <app-no-of-application></app-no-of-application>\r\n    </div>\r\n    <div class=\"col-md-6 payment-status\">\r\n      <app-payment-status></app-payment-status>\r\n    </div>\r\n    <div class=\"col-md-12\">\r\n      <app-no-of-application-status></app-no-of-application-status>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { APPLICATION_STATUSES } from '@shared';\r\n\r\n// export type ChartOptions = {\r\n//   series: ApexAxisChartSeries;\r\n//   chart: ApexChart;\r\n//   dataLabels: ApexDataLabels;\r\n//   plotOptions: ApexPlotOptions;\r\n//   yaxis: ApexYAxis;\r\n//   xaxis: ApexXAxis;\r\n//   fill: ApexFill;\r\n//   title: ApexTitleSubtitle;\r\n// };\r\n\r\n@Component({\r\n  selector: 'app-no-of-application-status',\r\n  templateUrl: './no-of-application-status.component.html',\r\n  styleUrls: ['./no-of-application-status.component.scss']\r\n})\r\nexport class NoOfApplicationStatusComponent implements OnInit {\r\n  // @ViewChild('chart') chart: ChartComponent;\r\n  // public chartOptions: Partial<ChartOptions>;\r\n\r\n  constructor() {\r\n    this.runChart();\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  runChart() {\r\n  //   this.chartOptions = {\r\n  //     series: [\r\n  //       {\r\n  //         name: 'Applications',\r\n  //         data: [\r\n  //           // temporary data\r\n  //           Math.floor(Math.random() * 100000),\r\n  //           Math.floor(Math.random() * 100000),\r\n  //           Math.floor(Math.random() * 100000),\r\n  //           Math.floor(Math.random() * 100000),\r\n  //           Math.floor(Math.random() * 100000),\r\n  //           Math.floor(Math.random() * 100000),\r\n  //           Math.floor(Math.random() * 100000),\r\n  //           Math.floor(Math.random() * 100000),\r\n  //           Math.floor(Math.random() * 100000)\r\n  //         ]\r\n  //       }\r\n  //     ],\r\n  //     chart: {\r\n  //       height: 350,\r\n  //       type: 'bar'\r\n  //     },\r\n  //     plotOptions: {\r\n  //       bar: {\r\n  //         dataLabels: {\r\n  //           position: 'top' // top, center, bottom\r\n  //         }\r\n  //       }\r\n  //     },\r\n  //     dataLabels: {\r\n  //       enabled: true,\r\n  //       formatter: function (val) {\r\n  //         return val + '';\r\n  //       },\r\n  //       offsetY: -20,\r\n  //       style: {\r\n  //         fontSize: '12px',\r\n  //         colors: ['#304758']\r\n  //       }\r\n  //     },\r\n\r\n  //     xaxis: {\r\n  //       categories: [\r\n  //         ...APPLICATION_STATUSES.map((stat) => {\r\n  //           return stat.status.replace('_', ' ');\r\n  //         })\r\n  //       ],\r\n  //       position: 'top',\r\n  //       labels: {\r\n  //         offsetY: -18\r\n  //       },\r\n  //       axisBorder: {\r\n  //         show: false\r\n  //       },\r\n  //       axisTicks: {\r\n  //         show: false\r\n  //       },\r\n  //       crosshairs: {\r\n  //         fill: {\r\n  //           type: 'gradient',\r\n  //           gradient: {\r\n  //             colorFrom: '#D8E3F0',\r\n  //             colorTo: '#BED1E6',\r\n  //             stops: [0, 100],\r\n  //             opacityFrom: 0.4,\r\n  //             opacityTo: 0.5\r\n  //           }\r\n  //         }\r\n  //       },\r\n  //       tooltip: {\r\n  //         enabled: true,\r\n  //         offsetY: -35\r\n  //       }\r\n  //     },\r\n  //     fill: {\r\n  //       type: 'gradient',\r\n  //       gradient: {\r\n  //         shade: 'light',\r\n  //         type: 'horizontal',\r\n  //         shadeIntensity: 0.25,\r\n  //         gradientToColors: undefined,\r\n  //         inverseColors: true,\r\n  //         opacityFrom: 1,\r\n  //         opacityTo: 1,\r\n  //         stops: [0, 50, 75, 100]\r\n  //       }\r\n  //     },\r\n  //     yaxis: {\r\n  //       axisBorder: {\r\n  //         show: false\r\n  //       },\r\n  //       axisTicks: {\r\n  //         show: false\r\n  //       },\r\n  //       labels: {\r\n  //         show: false,\r\n  //         formatter: function (val) {\r\n  //           // return val;\r\n  //           return val + '';\r\n  //         }\r\n  //       }\r\n  //     },\r\n  //     title: {\r\n  //       text: '_',\r\n  //       offsetY: 320,\r\n  //       align: 'center',\r\n  //       style: {\r\n  //         color: '#FFF'\r\n  //       }\r\n  //     }\r\n  //   };\r\n  }\r\n}\r\n","<form>\r\n  <div class=\"container\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12 title\">\r\n        <mat-label>\r\n          <mat-icon>assessment</mat-icon> Application Status\r\n        </mat-label>\r\n        <hr>\r\n      </div>\r\n      <!-- <div class=\"col-md-12\">\r\n        <apx-chart [series]=\"chartOptions.series\" [chart]=\"chartOptions.chart\" [dataLabels]=\"chartOptions.dataLabels\"\r\n          [plotOptions]=\"chartOptions.plotOptions\" [yaxis]=\"chartOptions.yaxis\" [xaxis]=\"chartOptions.xaxis\"\r\n          [fill]=\"chartOptions.fill\" [title]=\"chartOptions.title\"></apx-chart>\r\n      </div> -->\r\n    </div>\r\n  </div>\r\n</form>\r\n","import { Component, OnInit, AfterViewInit, OnChanges, Input, ViewChild, ElementRef, SimpleChanges } from '@angular/core';\r\nimport { AnimateDigitService } from '@services';\r\n\r\n@Component({\r\n  selector: 'app-no-of-application',\r\n  templateUrl: './no-of-application.component.html',\r\n  styleUrls: ['./no-of-application.component.scss']\r\n})\r\nexport class NoOfApplicationComponent implements OnInit, AfterViewInit, OnChanges {\r\n\r\n  // temporary static value start\r\n  noOfS1Applications = Math.floor(Math.random() * 100000);\r\n  noOfS2Applications = Math.floor(Math.random() * 100000);\r\n  previousMonthValueS1: number = Math.ceil(Math.random() * 100) * (Math.round(Math.random()) ? 1 : -1);\r\n  previousMonthValueS2: number = Math.ceil(Math.random() * 100) * (Math.round(Math.random()) ? 1 : -1);\r\n  // temporary static value end\r\n\r\n  duration: number = 1000;\r\n  @Input() steps: number = 12;\r\n  @ViewChild(\"noOfS1Applications\") animateCountS1: ElementRef;\r\n  @ViewChild(\"noOfS2Applications\") animateCountS2: ElementRef;\r\n\r\n  constructor(private animateDigitService: AnimateDigitService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.noOfS1Applications || this.noOfS2Applications) {\r\n      this.animateCount();\r\n    }\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes[\"noOfS1Applications\"] || changes[\"noOfS2Applications\"]) {\r\n      this.animateCount();\r\n    }\r\n  }\r\n\r\n  animateCount() {\r\n    this.animateDigitService.counterFunc(this.noOfS1Applications, this.duration, this.animateCountS1);\r\n    this.animateDigitService.counterFunc(this.noOfS2Applications, this.duration, this.animateCountS2);\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n  <div class=\"row\">\r\n    <div class=\"col-md-6\">\r\n      <mat-card class=\"mat-elevation-z5\">\r\n        <mat-card-content class=\"dashboard-card\">\r\n          <span class=\"dashboard-card-title\">\r\n            S1 Applications\r\n          </span>\r\n          <br><br>\r\n          <div #noOfS1Applications class=\"dashboard-card-value\">\r\n            <span class=\"dashboard-card-value\">\r\n              {{ noOfS1Applications }}\r\n            </span>\r\n        </div>\r\n        <br><br>\r\n        <span class=\"dashboard-card-remark\">\r\n            <span [ngClass]=\"previousMonthValueS1 >= 0 ? 'higher' : 'lower'\">{{ previousMonthValueS1 + '%' }} </span>\r\n            Since last month\r\n          </span>\r\n        </mat-card-content>\r\n      </mat-card>\r\n    </div>\r\n    <div class=\"col-md-6\">\r\n      <mat-card class=\"mat-elevation-z5\">\r\n        <mat-card-content class=\"dashboard-card\">\r\n          <span class=\"dashboard-card-title\">\r\n            S2 Applications\r\n          </span>\r\n          <br><br>\r\n          <div #noOfS2Applications class=\"dashboard-card-value\">\r\n            <span>\r\n              {{ noOfS2Applications }}\r\n            </span>\r\n          </div>\r\n          <br><br>\r\n          <span class=\"dashboard-card-remark\">\r\n            <span [ngClass]=\"previousMonthValueS2 >= 0 ? 'higher' : 'lower'\">{{ previousMonthValueS2 + '%' }} </span>\r\n            Since last month\r\n          </span>\r\n        </mat-card-content>\r\n      </mat-card>\r\n    </div>\r\n  </div>\r\n</div>\r\n"],"sourceRoot":"webpack:///"}