{"version":3,"sources":["./src/app/modules/fragments/index.ts","./src/app/modules/pages/maintenance/type-of-medium-execution/type-of-medium-execution.component.scss","./src/app/modules/pages/maintenance/type-of-medium-execution/type-of-medium-execution.component.ts","./src/app/modules/pages/maintenance/type-of-medium-execution/type-of-medium-execution.module.ts","./src/app/modules/pages/maintenance/type-of-medium-execution/type-of-medium-execution-routing.module.ts","./src/app/modules/pages/maintenance/type-of-medium-execution/type-of-medium-execution.component.html"],"names":[],"mappings":"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","file":"type-of-medium-execution-type-of-medium-execution-module-es2015.js","sourcesContent":["export * from './form-action-buttons/form-action-buttons.component';\r\nexport * from './form-list/form-list.component';","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcGFnZXMvbWFpbnRlbmFuY2UvdHlwZS1vZi1tZWRpdW0tZXhlY3V0aW9uL3R5cGUtb2YtbWVkaXVtLWV4ZWN1dGlvbi5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { FormListComponent } from '@fragments';\r\nimport { ApiService, SweetAlertService } from '@services';\r\nimport { COMMON_FUNCTION, ENDPOINTS, STATUSES } from '@shared';\r\nimport { TypeOfExecution } from 'app/core/models/type-of-execution.model';\r\nimport { TypeOfMediumExecution } from 'app/core/models/type-of-medium-execution.model';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-type-of-medium-execution',\r\n  templateUrl: './type-of-medium-execution.component.html',\r\n  styleUrls: ['./type-of-medium-execution.component.scss']\r\n})\r\nexport class TypeOfMediumExecutionComponent implements OnInit {\r\n\r\n  @ViewChild(FormListComponent) formListComponent: FormListComponent;\r\n  dataSource: MatTableDataSource<TypeOfExecution>;\r\n  displayedColumns: string[] = ['typeOfExecution', 'applyForTOA', 'applyForS2', 'status'];\r\n  statusList = [...STATUSES];\r\n\r\n  typeOfExecution = new TypeOfExecution();\r\n  typeOfExecutionList = [];\r\n\r\n  typeOfExecutionForm: FormGroup;\r\n\r\n  checked: boolean; // declared in HTML but not in component (feb 14 aot)\r\n\r\n  constructor(\r\n    private apiService: ApiService,\r\n    private formBuilder: FormBuilder,\r\n    private sweetAlertService: SweetAlertService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.getList();\r\n    this.setFormValidator();\r\n  }\r\n\r\n  getList(): void {\r\n    this.apiService.findAll(ENDPOINTS.typeOfExecutions).subscribe((res: any) => {\r\n      this.typeOfExecutionList = res.responseData.data;\r\n      this.dataSource = new MatTableDataSource<TypeOfExecution>(res.responseData.data);\r\n      this.dataSource.paginator = this.formListComponent.paginator;\r\n      this.dataSource.sort = this.formListComponent.sort;\r\n    });\r\n  }\r\n\r\n  save(): void{\r\n    this.apiService.save(ENDPOINTS.typeOfExecutions, this.typeOfExecution).subscribe(\r\n        (res: any) => {\r\n          if (res !== undefined){\r\n            this.sweetAlertService.success(res);\r\n          }\r\n        }, (err: any) => {\r\n          this.sweetAlertService.error(err);\r\n        }, () => {\r\n          this.resetFormValidator(),\r\n          this.getList();\r\n        }\r\n    )\r\n  }\r\n\r\n  getTypeOfExecution(): void {\r\n    this.apiService.findById(ENDPOINTS.typeOfExecutions, this.formListComponent.idForUpdate).subscribe((res: any) => {\r\n      if (res) {\r\n        this.typeOfExecution = res.responseData.data;\r\n        console.log(res.responseData.data);\r\n\r\n      }\r\n    });\r\n  }\r\n\r\n  update(): void {\r\n    this.apiService.update(ENDPOINTS.typeOfExecutions, this.typeOfExecution).subscribe(\r\n      (res: any) => {\r\n        if (res !== undefined){\r\n          this.sweetAlertService.success(res);\r\n        }\r\n      }, (err: any) => {\r\n        this.sweetAlertService.error(err);\r\n      }, () => {\r\n        this.resetFormValidator()\r\n        this.getList();\r\n      });\r\n  }\r\n\r\n  setFormValidator(): void {\r\n    this.typeOfExecution.status = COMMON_FUNCTION.ACTIVE;\r\n    this.typeOfExecutionForm = this.formBuilder.group({\r\n      typeOfExecution: ['', Validators.required],\r\n      status: [''],\r\n    });\r\n  }\r\n\r\n  resetFormValidator(): void {\r\n    this.typeOfExecution = new TypeOfExecution();\r\n    this.typeOfExecution.status = COMMON_FUNCTION.ACTIVE;\r\n    this.typeOfExecutionForm.markAsUntouched();\r\n    this.typeOfExecutionForm.markAsPristine();\r\n  }\r\n\r\n  delete() {\r\n    Swal.fire({\r\n      text: 'Are you sure you want to delete this type of execution?',\r\n      icon: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Confirm'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.apiService.deleteById(ENDPOINTS.typeOfExecutions, this.typeOfExecution.id).subscribe(\r\n          () => {\r\n            this.sweetAlertService.customSuccessMessage('Type of execution successfully deleted.');\r\n            this.resetFormValidator();\r\n            this.getList();\r\n          }\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { TypeOfMediumExecutionRoutingModule } from './type-of-medium-execution-routing.module';\r\nimport { TypeOfMediumExecutionComponent } from './type-of-medium-execution.component';\r\nimport { FragmentsModule } from 'app/modules/fragments/fragments.module';\r\nimport { AngularMaterialModule } from '@shared';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\n\r\n@NgModule({\r\n  declarations: [TypeOfMediumExecutionComponent],\r\n  imports: [\r\n    CommonModule,\r\n    TypeOfMediumExecutionRoutingModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule,\r\n    AngularMaterialModule,\r\n    FragmentsModule,\r\n  ]\r\n})\r\nexport class TypeOfMediumExecutionModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { TypeOfMediumExecutionComponent } from './type-of-medium-execution.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: TypeOfMediumExecutionComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class TypeOfMediumExecutionRoutingModule { }\r\n","export default \"<!--\\r\\n      THIS IS TYPE OF EXECUTION\\r\\n -->\\r\\n<form>\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12 title\\\">\\r\\n                <mat-label>\\r\\n                    Type Of Execution\\r\\n                </mat-label>\\r\\n            </div>\\r\\n        </div>\\r\\n        <hr>\\r\\n\\r\\n        <form [formGroup]=\\\"typeOfExecutionForm\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <mat-form-field class=\\\"col-md-8\\\" appearance=\\\"outline\\\">\\r\\n                    <mat-label>Type Of Execution <span class=\\\"required-field\\\">*</span></mat-label>\\r\\n                    <input matInput [(ngModel)]=\\\"typeOfExecution.typeOfExecution\\\" name=\\\"typeOfExecution\\\"\\r\\n                        formControlName=\\\"typeOfExecution\\\">\\r\\n                </mat-form-field>\\r\\n\\r\\n                <mat-form-field class=\\\"col-md-4\\\" appearance=\\\"outline\\\">\\r\\n                    <mat-label>Status</mat-label>\\r\\n                    <mat-select [(ngModel)]=\\\"typeOfExecution.status\\\" name=\\\"status\\\" formControlName=\\\"status\\\">\\r\\n                        <mat-option *ngFor=\\\"let i of statusList\\\" [value]=\\\"i.status\\\">\\r\\n                            {{i.status}}\\r\\n                        </mat-option>\\r\\n                    </mat-select>\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-md-2\\\"></div>\\r\\n                <div class=\\\"col-md-1\\\"><b>Live</b></div>\\r\\n                <div class=\\\"col-md-1\\\">\\r\\n                    <mat-slide-toggle [(ngModel)]=\\\"typeOfExecution.live\\\"\\r\\n                        [ngModelOptions]=\\\"{standalone: true}\\\" [checked]=\\\"typeOfExecution?.live\\\"\\r\\n                        name=\\\"live\\\" color=\\\"warn\\\">\\r\\n                    </mat-slide-toggle>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-5\\\">\\r\\n                  <b>True:</b> The application is for S1 only.<br>\\r\\n                  <b>False:</b> Can apply for Special Clearing Request/S2 Application.\\r\\n                </div>\\r\\n                <div class=\\\"col-md-2\\\"></div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row\\\"><br></div>\\r\\n\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-md-2\\\"></div>\\r\\n                <div class=\\\"col-md-1\\\"> <b>Apply for TOA</b></div>\\r\\n                <div class=\\\"col-md-1\\\">\\r\\n                  <mat-slide-toggle [(ngModel)]=\\\"typeOfExecution.applyForToa\\\"\\r\\n                      [ngModelOptions]=\\\"{standalone: true}\\\" [checked]=\\\"typeOfExecution?.applyForToa\\\"\\r\\n                      name=\\\"applyForToa\\\" color=\\\"warn\\\">\\r\\n                  </mat-slide-toggle>\\r\\n\\r\\n                </div>\\r\\n                <div class=\\\"col-md-5\\\">\\r\\n                  <b>True:</b> The application can only apply for TOA.<br>\\r\\n                  <b>False:</b> Unable to apply for TOA.\\r\\n                </div>\\r\\n                <div class=\\\"col-md-2\\\"></div>\\r\\n            </div>\\r\\n        </form>\\r\\n\\r\\n        <app-form-action-buttons [childObject]=\\\"typeOfExecution\\\" [childForm]=\\\"typeOfExecutionForm\\\"\\r\\n            (saveFunction)=\\\"save()\\\" (updateFunction)=\\\"update()\\\" (cancelFunction)=\\\"resetFormValidator()\\\" (deleteFunction)=\\\"delete()\\\">\\r\\n        </app-form-action-buttons>\\r\\n        <br>\\r\\n        <app-form-list [dataSource]=\\\"dataSource\\\" [displayedColumns]=\\\"displayedColumns\\\"\\r\\n            (selectInListFunction)=\\\"getTypeOfExecution()\\\"></app-form-list>\\r\\n\\r\\n    </div>\\r\\n</form>\\r\\n\";"],"sourceRoot":"webpack:///"}