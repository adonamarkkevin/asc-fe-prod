{"version":3,"sources":["./src/app/modules/pages/accounting/reports/reports.component.html","./src/app/modules/pages/accounting/reports/reports.component.scss","./src/app/modules/pages/accounting/reports/reports-routing.module.ts","./src/app/modules/pages/accounting/reports/reports.component.ts","./src/app/core/models/payment-method.model.ts","./src/app/modules/pages/accounting/reports/reports.module.ts"],"names":[],"mappings":"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","file":"reports-reports-module-es2015.js","sourcesContent":["export default \"<form>\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12 title\\\">\\r\\n        <mat-label>\\r\\n          Reports\\r\\n        </mat-label>\\r\\n      </div>\\r\\n    </div>\\r\\n    <hr>\\r\\n    <div *ngIf=\\\"currentUser.userRole.name === 'ROLE_ACCOUNTING'\\\">\\r\\n    <form [formGroup]=\\\"reportForm\\\" >\\r\\n      <div class=\\\"row\\\">\\r\\n        <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\">\\r\\n          <mat-label>Date Start:</mat-label>\\r\\n          <input matInput placeholder=\\\"Date\\\" [matDatepicker]=\\\"dateFrom\\\" readonly [(ngModel)]=\\\"dateFrome\\\"\\r\\n            name=\\\"dateFrom\\\" readonly formControlName=\\\"dateFrom\\\">\\r\\n          <mat-datepicker-toggle matSuffix [for]=\\\"dateFrom\\\"></mat-datepicker-toggle>\\r\\n          <mat-datepicker color=\\\"warn\\\" #dateFrom disabled=\\\"false\\\"></mat-datepicker>\\r\\n        </mat-form-field>\\r\\n        <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\">\\r\\n          <mat-label>Date End:</mat-label>\\r\\n          <input matInput placeholder=\\\"Date\\\" [matDatepicker]=\\\"Date\\\" readonly [(ngModel)]=\\\"dateTo\\\" name=\\\"dateTo\\\"\\r\\n            formControlName=\\\"dateTo\\\">\\r\\n          <mat-datepicker-toggle matSuffix [for]=\\\"Date\\\"></mat-datepicker-toggle>\\r\\n          <mat-datepicker color=\\\"warn\\\" #Date disabled=\\\"false\\\"></mat-datepicker>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\">\\r\\n        <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\">\\r\\n          <mat-label>Report Type: </mat-label>\\r\\n          <mat-select [(ngModel)]=\\\"reportType\\\" name=\\\"reportType\\\" formControlName=\\\"reportType\\\">\\r\\n            <mat-option *ngFor=\\\"let i of reportTypeList\\\" [value]=\\\"i\\\"  (click)=\\\"setReportType(i)\\\">\\r\\n              {{i.name}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n        <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\" *ngIf=\\\"selectedReportType !== reportTypes.VAT_SUMMARY && selectedReportType !== reportTypes.TAX_SUMMARY\\\">\\r\\n          <mat-label>Payment Type:</mat-label>\\r\\n          <mat-select name=\\\"paymentType\\\" formControlName=\\\"paymentType\\\">\\r\\n            <mat-option *ngFor=\\\"let i of paymentTypeList\\\" [value]=\\\"i.id\\\" (click)=\\\"setPaymentType(i.id)\\\">\\r\\n              {{i.paymentDescription}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n        <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\" *ngIf=\\\"selectedReportType === reportTypes.COLLECTION_REPORT || selectedReportType === reportTypes.REPORT_PER_COMPANY || selectedReportType === reportTypes.REPORT_PER_AGENCY\\\">\\r\\n          <mat-label>Company:</mat-label>\\r\\n          <mat-select   name=\\\"company\\\" formControlName=\\\"company\\\">\\r\\n            <mat-option *ngFor=\\\"let company of activeCompanyList\\\" [value]=\\\"company.id\\\" >\\r\\n              {{company.companyName}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n        <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\" *ngIf=\\\"selectedReportType === reportTypes.COLLECTION_REPORT || selectedReportType === reportTypes.REPORT_PER_APPLICANT\\\">\\r\\n          <mat-label>Applicant:</mat-label>\\r\\n          <mat-select   name=\\\"applicant\\\" formControlName=\\\"applicant\\\">\\r\\n            <mat-option *ngFor=\\\"let applicant of applicants\\\" [value]=\\\"applicant.id\\\" >\\r\\n              {{applicant.name}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n        <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\" *ngIf=\\\"selectedReportType === reportTypes.COLLECTION_REPORT || selectedReportType === reportTypes.REPORT_PER_SCREENER\\\">\\r\\n          <mat-label>Screener:</mat-label>\\r\\n          <mat-select   name=\\\"company\\\" formControlName=\\\"screener\\\">\\r\\n            <mat-option *ngFor=\\\"let screener of screeners\\\" [value]=\\\"screener.id\\\" >\\r\\n              {{screener.name}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n        <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\" *ngIf=\\\"selectedReportType === reportTypes.REPORT_PER_MEDIUM\\\">\\r\\n          <mat-label>Mediums:</mat-label>\\r\\n          <mat-select name=\\\"medium\\\" formControlName=\\\"medium\\\">\\r\\n            <mat-option *ngFor=\\\"let medium of typeOfMediums\\\" [value]=\\\"medium.id\\\" >\\r\\n              {{ medium?.description }}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n    </form>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-9\\\"></div>\\r\\n      <div class=\\\"col-md-3\\\">\\r\\n        <button mat-raised-button class=\\\"button-red\\\"  (click)=\\\"generateReport()\\\"\\r\\n          [disabled]=\\\"reportForm.controls['dateFrom']?.errors?.required || reportForm.controls['dateTo']?.errors?.required || reportForm.controls['reportType']?.errors?.required || !isPaymentTypeRequired\\\">\\r\\n          <i class=\\\"material-icons color__white\\\">task_alt</i> GENERATE\\r\\n        </button>\\r\\n        <br> <br>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div  *ngIf=\\\"currentUser.userRole.name === 'ROLE_SUPER_ADMIN' || currentUser.userRole.name === 'ROLE_ADMIN'\\\">\\r\\n    <form [formGroup]=\\\"newReportForm\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\">\\r\\n          <mat-label>Date Start:</mat-label>\\r\\n          <input matInput placeholder=\\\"Date\\\" [matDatepicker]=\\\"dateFrom\\\" readonly [(ngModel)]=\\\"dateFrome\\\"\\r\\n            name=\\\"dateFrom\\\" readonly formControlName=\\\"dateFrom\\\">\\r\\n          <mat-datepicker-toggle matSuffix [for]=\\\"dateFrom\\\"></mat-datepicker-toggle>\\r\\n          <mat-datepicker color=\\\"warn\\\" #dateFrom disabled=\\\"false\\\"></mat-datepicker>\\r\\n        </mat-form-field>\\r\\n        <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\">\\r\\n          <mat-label>Date End:</mat-label>\\r\\n          <input matInput placeholder=\\\"Date\\\" [matDatepicker]=\\\"Date\\\" readonly [(ngModel)]=\\\"dateTo\\\" name=\\\"dateTo\\\"\\r\\n            formControlName=\\\"dateTo\\\">\\r\\n          <mat-datepicker-toggle matSuffix [for]=\\\"Date\\\"></mat-datepicker-toggle>\\r\\n          <mat-datepicker color=\\\"warn\\\" #Date disabled=\\\"false\\\"></mat-datepicker>\\r\\n        </mat-form-field>\\r\\n        <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\">\\r\\n          <mat-label>Report Type: </mat-label>\\r\\n          <mat-select [(ngModel)]=\\\"reportType\\\" name=\\\"reportType\\\" formControlName=\\\"reportType\\\">\\r\\n            <mat-option *ngFor=\\\"let i of newReportTypeList\\\" [value]=\\\"i.filename\\\" (click)=\\\"setReportType(i.filename)\\\">\\r\\n              {{i.name}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n    </form>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-9\\\"></div>\\r\\n      <div class=\\\"col-md-3\\\">\\r\\n        <button mat-raised-button class=\\\"button-red\\\"  (click)=\\\"generateReport()\\\"\\r\\n          [disabled]=\\\"newReportForm.controls['dateFrom']?.errors?.required  || newReportForm.controls['reportType']?.errors?.required \\\">\\r\\n          <i class=\\\"material-icons color__white\\\">task_alt</i> GENERATE\\r\\n        </button>\\r\\n        <br> <br>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  </div>\\r\\n</form>\\r\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcGFnZXMvYWNjb3VudGluZy9yZXBvcnRzL3JlcG9ydHMuY29tcG9uZW50LnNjc3MifQ== */\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ReportsComponent } from './reports.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path:'',\r\n    component: ReportsComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ReportsRoutingModule { }\r\n","import { GenericResponse } from './../../../../core/models/generic-response-model/generic-response.model';\r\nimport { DatePipe } from '@angular/common';\r\nimport { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ApiService, DataStorageService, SweetAlertService } from '@services';\r\nimport { ENDPOINTS, REPORT_TYPE } from '@shared';\r\nimport { PaymentMethod } from 'app/core/models/payment-method.model';\r\nimport { Report } from 'app/core/models/report.model';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\n\r\n@Component({\r\n  selector: 'app-reports',\r\n  templateUrl: './reports.component.html',\r\n  styleUrls: ['./reports.component.scss']\r\n})\r\nexport class ReportsComponent implements OnInit, OnDestroy {\r\n\r\n  report = new Report();\r\n  reportForm: FormGroup;\r\n  newReportForm: FormGroup;\r\n  paymentMethod = new PaymentMethod();\r\n  reportTypes = REPORT_TYPE;\r\n  typeOfMediums: Array<any>;\r\n\r\n  reportTypeList = [\r\n    { name: REPORT_TYPE.COLLECTION_REPORT, filename: 'Collection_Report' },\r\n    { name: REPORT_TYPE.VAT_SUMMARY, filename: 'VAT_TAX_Summary' },\r\n    { name: REPORT_TYPE.TAX_SUMMARY, filename: 'VAT_TAX_Summary' },\r\n    { name: REPORT_TYPE.REPORT_PER_COMPANY, filename: 'Per_Company' },\r\n    { name: REPORT_TYPE.REPORT_PER_AGENCY, filename: 'Per_Agency' },\r\n    { name: REPORT_TYPE.REPORT_PER_SCREENER, filename: 'Per_Screener' },\r\n    { name: REPORT_TYPE.REPORT_PER_MEDIUM, filename: 'Per_Type_Of_Medium' },\r\n    { name: REPORT_TYPE.REPORT_PER_APPLICANT, filename: 'Per_Applicant' }\r\n\r\n  ];\r\n\r\n  applicants: Array<any> = [];\r\n\r\n  screeners: Array<any> = [];\r\n  newReportTypeList = [\r\n    { name: 'Application Per Decision', filename: 'Application_Per_Decision' },\r\n    { name: 'Screeners Productivity', filename: 'Screeners_Productivity' },\r\n    { name: 'Ad Specialists-Encoders', filename: 'Ad_Specialists-Encoders' },\r\n    { name: 'Top 20 Agencies', filename: 'Top_20_Agencies' },\r\n    { name: 'Top 20 Categories(by Decision)', filename: 'Top_20_Categories(by_Decision)' },\r\n    { name: 'Top 5 Categories Disapproval', filename: 'Top_5_Categories_Disapproval' },\r\n    { name: 'Top 5 Agencies Disapproval', filename: 'Top_5_Agencies_Disapproval' },\r\n    { name: 'Decision Per Type of medium', filename: 'Decision_per_type_of_medium' },\r\n    { name: 'Top 20 Clients(with Medium)', filename: 'Top_20_Clients(with_Medium)' },\r\n    { name: 'Top 20 Categories(with Medium)', filename: 'Top_20_Categories(with_Medium)' },\r\n    { name: 'Top 20 Clients', filename: 'Top_20_Clients' },\r\n    { name: 'Top 20 Agencies(with client)', filename: 'Top_20_Agencies(with_client)' }\r\n  ]\r\n  \r\n\r\n  paymentTypeList = [];\r\n\r\n  activeCompanyList:Array<any> = [\r\n\r\n  ];\r\n\r\n  selectedReportType: any;\r\n  selectedPaymentType: number;\r\n  isPaymentTypeRequired = true;\r\n  reportType: any;\r\n  dateTo: any;\r\n  dateFrome: any;\r\n  currentUser: any;\r\n  paymentTypeAll = {\r\n    \"id\": 0,\r\n    \"paymentDescription\": \"All\",\r\n  };\r\n\r\n  constructor(\r\n    private dataStorage: DataStorageService,\r\n    private apiService: ApiService,\r\n    private formBuilder: FormBuilder,\r\n    private sweetAlertService: SweetAlertService,\r\n    public datepipe: DatePipe,\r\n    private spinner: NgxSpinnerService,\r\n  ) { \r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.currentUser = this.dataStorage.getUserAccount();\r\n    this.setFormValidator();\r\n    this.getPaymentType();\r\n    this.getActiveCompanies();\r\n    console.log(this.currentUser.userRole.name);\r\n    this.getApplicants();\r\n    this.getScreeners();\r\n    this.getTypeOfMediums();\r\n\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n\r\n  }\r\n\r\n  getApplicants(){\r\n    this.apiService.findAll(ENDPOINTS.userAccountType + '/APPLICANT').subscribe( (res: GenericResponse<Array<any>>)=>{\r\n      // console.log('applicants', res.responseData.data);\r\n      this.applicants.push({name: 'ALL', id: 0});\r\n      if(res?.responseData?.data && res?.responseData?.data?.length){\r\n        res.responseData.data.filter( e=>{\r\n          this.applicants.push(\r\n            {name:`${e.firstName} ${e.middleName} ${e.lastName}` , id:e.id}\r\n          )\r\n        })\r\n      }\r\n    })\r\n  }\r\n  \r\n\r\n  setFormValidator(): void {\r\n\r\n    if (this.currentUser.userRole.name === 'ROLE_ACCOUNTING') {\r\n      this.reportForm = this.formBuilder.group({\r\n        reportType: ['', [Validators.required]],\r\n        paymentType: [0],\r\n        company: [0],\r\n        applicant: [0],\r\n        screener: [0],\r\n        medium: [0],\r\n        dateFrom: ['', [Validators.required]],\r\n        dateTo: ['', [Validators.required]],\r\n      })\r\n    } else {\r\n      this.newReportForm = this.formBuilder.group({\r\n        reportType: ['', [Validators.required]],\r\n        dateFrom: ['', [Validators.required]],\r\n        dateTo: ['', [Validators.required]]\r\n      })\r\n    }\r\n  }\r\n\r\n  getPaymentType() {\r\n    this.apiService.findAll(ENDPOINTS.paymentType).subscribe((res: any) => {\r\n      this.paymentTypeList = res.responseData.data;\r\n      this.paymentTypeList.unshift(this.paymentTypeAll);\r\n    })\r\n  }\r\n\r\n  getScreeners(){\r\n    this.apiService.findAll(`${ENDPOINTS.userPerRole}${8}`).subscribe(screener=>{\r\n      this.screeners.push({name: 'ALL', id: 0});\r\n      if(screener?.responseData?.data && screener?.responseData?.data?.length){\r\n        screener.responseData.data.filter( e=>{\r\n          this.screeners.push(\r\n            {name:`${e.firstName} ${e.middleName} ${e.lastName}` , id:e.id}\r\n          )\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  getTypeOfMediums(): void {\r\n    this.apiService.findAll(`${ENDPOINTS.typeOfMedium}`).subscribe(response=>{\r\n      this.typeOfMediums = response.responseData.data;\r\n      this.typeOfMediums.unshift({ description: 'ALL', id: 0 });\r\n    });\r\n  }\r\n\r\n  getActiveCompanies(){\r\n    this.apiService.findAll(ENDPOINTS.activeCompanies).subscribe( res=>{\r\n      \r\n      this.activeCompanyList = res.responseData.data;\r\n      this.activeCompanyList.push(\r\n        {\r\n          \"id\": 0,\r\n          \"companyName\": \"All\", \r\n        }\r\n      )\r\n      this.activeCompanyList.sort( (_a,_b)=>{\r\n        return (_a.id - _b.id)\r\n      });\r\n    })\r\n  }\r\n\r\n  setReportType(res) {\r\n    if (this.currentUser.userRole.name === 'ROLE_ACCOUNTING') {\r\n      this.selectedReportType = res.name;\r\n      if (this.selectedReportType === 'Collection Report') {\r\n        this.isPaymentTypeRequired = false;\r\n      } else {\r\n        this.reportForm.get('paymentType').patchValue(0);\r\n        this.isPaymentTypeRequired = true;\r\n        this.selectedPaymentType = 0;\r\n      }\r\n    } else {\r\n      this.selectedReportType = res;\r\n    }\r\n  }\r\n\r\n  setPaymentType(id) {\r\n    this.isPaymentTypeRequired = true;\r\n    this.selectedPaymentType = id;\r\n  }\r\n\r\n  generateReport() {\r\n     this.spinner.show();\r\n    this.report.format = 'xlsx';\r\n    console.log('selected ', this.selectedReportType)\r\n    if (this.currentUser.userRole.name === 'ROLE_ACCOUNTING') {\r\n      this.report.filename = 'VAT_TAX_Summary';\r\n\r\n      this.report.module = 'Report';\r\n      this.report.params = { 'dateFrom': `${this.datepipe.transform(this.reportForm.get('dateFrom').value, 'MM/dd/yyyy').toString()}`, 'dateTo': `${this.datepipe.transform(this.reportForm.get('dateTo').value, 'MM/dd/yyyy')}`, 'reportType': this.reportType.filename}\r\n      let valdationReportEndpoint = ENDPOINTS.validateReportsCollection + `/date-from/${this.datepipe.transform(this.reportForm.get('dateFrom').value, 'yyyy-MM-dd').toString()}/date-to/${this.datepipe.transform(this.reportForm.get('dateTo').value, 'yyyy-MM-dd').toString()}`;\r\n\r\n      if (this.selectedReportType === 'Collection Report') {\r\n        this.report.filename = 'Collection_Report';\r\n        valdationReportEndpoint = ENDPOINTS.validateReportsCollection + `/date-from/${this.datepipe.transform(this.reportForm.get('dateFrom').value, 'yyyy-MM-dd').toString()}/date-to/${this.datepipe.transform(this.reportForm.get('dateTo').value, 'yyyy-MM-dd').toString()}/payment-type-id/${this.selectedPaymentType}`;\r\n        this.report.params = { 'dateFrom': `${this.datepipe.transform(this.reportForm.get('dateFrom').value, 'MM/dd/yyyy').toString()}`, 'dateTo': `${this.datepipe.transform(this.reportForm.get('dateTo').value, 'MM/dd/yyyy')}`, 'paymentTypeId': this.selectedPaymentType }\r\n      } else if (this.selectedReportType === REPORT_TYPE.REPORT_PER_COMPANY){\r\n        this.report.filename = 'Per_Company';\r\n        valdationReportEndpoint = ENDPOINTS.validateReportsCollection + `/date-from/${this.datepipe.transform(this.reportForm.get('dateFrom').value, 'yyyy-MM-dd').toString()}/date-to/${this.datepipe.transform(this.reportForm.get('dateTo').value, 'yyyy-MM-dd').toString()}/payment-type-id/${this.selectedPaymentType}`;\r\n        this.report.params = { 'companyId': this.reportForm.get('company').value, 'dateFrom': `${this.datepipe.transform(this.reportForm.get('dateFrom').value, 'MM/dd/yyyy').toString()}`, 'dateTo': `${this.datepipe.transform(this.reportForm.get('dateTo').value, 'MM/dd/yyyy')}`, 'paymentTypeId': this.selectedPaymentType }\r\n      } else if(this.selectedReportType === REPORT_TYPE.REPORT_PER_AGENCY){\r\n        this.report.filename = 'Per_Agency';\r\n        valdationReportEndpoint = ENDPOINTS.validateReportsCollection + `/date-from/${this.datepipe.transform(this.reportForm.get('dateFrom').value, 'yyyy-MM-dd').toString()}/date-to/${this.datepipe.transform(this.reportForm.get('dateTo').value, 'yyyy-MM-dd').toString()}/payment-type-id/${this.selectedPaymentType}`;\r\n        this.report.params = { 'agencyId': this.reportForm.get('company').value, 'dateFrom': `${this.datepipe.transform(this.reportForm.get('dateFrom').value, 'MM/dd/yyyy').toString()}`, 'dateTo': `${this.datepipe.transform(this.reportForm.get('dateTo').value, 'MM/dd/yyyy')}`, 'paymentTypeId': this.selectedPaymentType }\r\n      } else if(this.selectedReportType === REPORT_TYPE.REPORT_PER_SCREENER){\r\n        this.report.filename = 'Per_Screener';\r\n        valdationReportEndpoint = ENDPOINTS.validateReportsCollection + `/date-from/${this.datepipe.transform(this.reportForm.get('dateFrom').value, 'yyyy-MM-dd').toString()}/date-to/${this.datepipe.transform(this.reportForm.get('dateTo').value, 'yyyy-MM-dd').toString()}/payment-type-id/${this.selectedPaymentType}`;\r\n        this.report.params = { 'screenerId': this.reportForm.get('screener').value, 'dateFrom': `${this.datepipe.transform(this.reportForm.get('dateFrom').value, 'MM/dd/yyyy').toString()}`, 'dateTo': `${this.datepipe.transform(this.reportForm.get('dateTo').value, 'MM/dd/yyyy')}`, 'paymentTypeId': this.selectedPaymentType }\r\n      } else if(this.selectedReportType === REPORT_TYPE.REPORT_PER_APPLICANT){\r\n        this.report.filename = 'Per_Applicant';\r\n        valdationReportEndpoint = ENDPOINTS.validateReportsCollection + `/date-from/${this.datepipe.transform(this.reportForm.get('dateFrom').value, 'yyyy-MM-dd').toString()}/date-to/${this.datepipe.transform(this.reportForm.get('dateTo').value, 'yyyy-MM-dd').toString()}/payment-type-id/${this.selectedPaymentType}`;\r\n        this.report.params = { 'applicantId': this.reportForm.get('applicant').value, 'dateFrom': `${this.datepipe.transform(this.reportForm.get('dateFrom').value, 'MM/dd/yyyy').toString()}`, 'dateTo': `${this.datepipe.transform(this.reportForm.get('dateTo').value, 'MM/dd/yyyy')}`, 'paymentTypeId': this.selectedPaymentType }\r\n      } else if(this.selectedReportType === REPORT_TYPE.REPORT_PER_MEDIUM){\r\n        this.report.filename = 'Per_Type_Of_Medium';\r\n        valdationReportEndpoint = ENDPOINTS.validateReportsCollection + `/date-from/${this.datepipe.transform(this.reportForm.get('dateFrom').value, 'yyyy-MM-dd').toString()}/date-to/${this.datepipe.transform(this.reportForm.get('dateTo').value, 'yyyy-MM-dd').toString()}/payment-type-id/${this.selectedPaymentType}`;\r\n        this.report.params = { 'typeOfMediumId': this.reportForm.get('medium').value, 'dateFrom': `${this.datepipe.transform(this.reportForm.get('dateFrom').value, 'MM/dd/yyyy').toString()}`, 'dateTo': `${this.datepipe.transform(this.reportForm.get('dateTo').value, 'MM/dd/yyyy')}`, 'paymentTypeId': this.selectedPaymentType }\r\n      } else if (this.selectedReportType === 'VAT Summary') {\r\n        this.report.params = { 'dateFrom': `${this.datepipe.transform(this.reportForm.get('dateFrom').value, 'MM/dd/yyyy').toString()}`, 'dateTo': `${this.datepipe.transform(this.reportForm.get('dateTo').value, 'MM/dd/yyyy')}`, 'reportType': 'vat' }\r\n      } else if (this.selectedReportType === 'TAX Summary') {\r\n        this.report.params = { 'dateFrom': `${this.datepipe.transform(this.reportForm.get('dateFrom').value, 'MM/dd/yyyy').toString()}`, 'dateTo': `${this.datepipe.transform(this.reportForm.get('dateTo').value, 'MM/dd/yyyy')}`, 'reportType': 'wtax' }\r\n      }\r\n\r\n      this.apiService.findAll(valdationReportEndpoint).subscribe((data: any) => {\r\n\r\n        if (data.length > 0) {\r\n          this.printReport(this.report);\r\n        } else {\r\n          this.sweetAlertService.customErrorMessage('No Record found on date ranged');\r\n          this.spinner.hide();\r\n        }\r\n      });\r\n\r\n    } else {\r\n     \r\n      this.report.filename = this.selectedReportType;\r\n      let dateFrom = `${this.datepipe.transform(this.newReportForm.get('dateFrom').value, 'MM/dd/yyyy').toString()}`;\r\n      let dateTo = `${this.datepipe.transform(this.newReportForm.get('dateTo').value, 'MM/dd/yyyy')}`;\r\n      this.report.module = 'AppData';\r\n      this.report.params = { 'dateFrom': dateFrom, 'dateTo': dateTo };\r\n      this.printReport(this.report);\r\n    }\r\n\r\n  }\r\n\r\n  printReport(report) {\r\n    this.apiService.printReport(ENDPOINTS.generateReports, report).subscribe((data: any) => {\r\n      const newBlob = new Blob([(data)], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });\r\n      const downloadURL = URL.createObjectURL(newBlob);\r\n      var anchor = document.createElement('a');\r\n      anchor.download = this.selectedReportType + '.xlsx';\r\n      anchor.href = downloadURL;\r\n      anchor.click();\r\n      if (this.currentUser.userRole.name === 'ROLE_ACCOUNTING') {\r\n        this.reportForm.reset();\r\n        this.reportForm.patchValue({\r\n          paymentType: 0,\r\n          company: 0,\r\n          applicant: 0,\r\n          screener: 0,\r\n          medium: 0,\r\n        });\r\n      } else {\r\n        this.newReportForm.reset();\r\n      }\r\n      this.selectedReportType = null;\r\n      this.sweetAlertService.customSuccessMessage('Successfully Generated!');\r\n      this.spinner.hide();\r\n    }, (err: any) => {\r\n      // console.log(err);\r\n        this.spinner.hide();\r\n      this.sweetAlertService.customErrorMessage('No Record found on date ranged');\r\n    });\r\n  }\r\n\r\n}\r\n","import { PaymentType } from \"./payment-type.model\";\r\n\r\nexport class PaymentMethod {\r\n    id: number;\r\n    paymentType: PaymentType;\r\n    referenceNo: string;\r\n    controlNo: string;\r\n    paymentDate: Date;\r\n    amount: number;\r\n    bankName: string\r\n    bankBranch: string;\r\n    promisorryDate: Date;\r\n    ccConfirmationCode: string;\r\n    checkNo: string;\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReportsRoutingModule } from './reports-routing.module';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { AngularMaterialModule } from '@shared';\r\nimport { BrowserModule } from '@angular/platform-browser'\r\nimport { ReportsComponent } from './reports.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [ReportsComponent],\r\n  imports: [\r\n    CommonModule,\r\n    ReportsRoutingModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule,\r\n    AngularMaterialModule,\r\n  ]\r\n})\r\nexport class ReportsModule { }\r\n"],"sourceRoot":"webpack:///"}