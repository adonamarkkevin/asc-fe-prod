{"version":3,"sources":["./src/app/modules/pages/accounting/reports/reports-routing.module.ts","./src/app/modules/pages/accounting/reports/reports.component.ts","./src/app/modules/pages/accounting/reports/reports.component.html","./src/app/core/models/payment-method.model.ts","./src/app/modules/pages/accounting/reports/reports.module.ts"],"names":[],"mappings":"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","file":"reports-reports-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ReportsComponent } from './reports.component';\n\nconst routes: Routes = [\n  {\n    path:'',\n    component: ReportsComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ReportsRoutingModule { }\n","import { GenericResponse } from './../../../../core/models/generic-response-model/generic-response.model';\nimport { DatePipe } from '@angular/common';\nimport { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ApiService, DataStorageService, SweetAlertService } from '@services';\nimport { ENDPOINTS, REPORT_TYPE } from '@shared';\nimport { PaymentMethod } from 'app/core/models/payment-method.model';\nimport { Report } from 'app/core/models/report.model';\nimport { NgxSpinnerService } from 'ngx-spinner';\n\n@Component({\n  selector: 'app-reports',\n  templateUrl: './reports.component.html',\n  styleUrls: ['./reports.component.scss']\n})\nexport class ReportsComponent implements OnInit, OnDestroy {\n\n  report = new Report();\n  reportForm: FormGroup;\n  newReportForm: FormGroup;\n  paymentMethod = new PaymentMethod();\n  reportTypes = REPORT_TYPE;\n  typeOfMediums: Array<any>;\n\n  reportTypeList = [\n    { name: REPORT_TYPE.COLLECTION_REPORT, filename: 'Collection_Report' },\n    { name: REPORT_TYPE.VAT_SUMMARY, filename: 'VAT_TAX_Summary' },\n    { name: REPORT_TYPE.TAX_SUMMARY, filename: 'VAT_TAX_Summary' },\n    { name: REPORT_TYPE.REPORT_PER_COMPANY, filename: 'Per_Company' },\n    { name: REPORT_TYPE.REPORT_PER_AGENCY, filename: 'Per_Agency' },\n    { name: REPORT_TYPE.REPORT_PER_SCREENER, filename: 'Per_Screener' },\n    { name: REPORT_TYPE.REPORT_PER_MEDIUM, filename: 'Per_Type_Of_Medium' },\n    { name: REPORT_TYPE.REPORT_PER_APPLICANT, filename: 'Per_Applicant' }\n\n  ];\n\n  applicants: Array<any> = [];\n\n  screeners: Array<any> = [];\n  newReportTypeList = [\n    { name: 'Application Per Decision', filename: 'Application_Per_Decision' },\n    { name: 'Screeners Productivity', filename: 'Screeners_Productivity' },\n    { name: 'Ad Specialists-Encoders', filename: 'Ad_Specialists-Encoders' },\n    { name: 'Top 20 Agencies', filename: 'Top_20_Agencies' },\n    { name: 'Top 20 Categories(by Decision)', filename: 'Top_20_Categories(by_Decision)' },\n    { name: 'Top 5 Categories Disapproval', filename: 'Top_5_Categories_Disapproval' },\n    { name: 'Top 5 Agencies Disapproval', filename: 'Top_5_Agencies_Disapproval' },\n    { name: 'Decision Per Type of medium', filename: 'Decision_per_type_of_medium' },\n    { name: 'Top 20 Clients(with Medium)', filename: 'Top_20_Clients(with_Medium)' },\n    { name: 'Top 20 Categories(with Medium)', filename: 'Top_20_Categories(with_Medium)' },\n    { name: 'Top 20 Clients', filename: 'Top_20_Clients' },\n    { name: 'Top 20 Agencies(with client)', filename: 'Top_20_Agencies(with_client)' }\n  ]\n  \n\n  paymentTypeList = [];\n\n  activeCompanyList:Array<any> = [\n\n  ];\n\n  selectedReportType: any;\n  selectedPaymentType: number;\n  isPaymentTypeRequired = true;\n  reportType: any;\n  dateTo: any;\n  dateFrome: any;\n  currentUser: any;\n  paymentTypeAll = {\n    \"id\": 0,\n    \"paymentDescription\": \"All\",\n  };\n\n  constructor(\n    private dataStorage: DataStorageService,\n    private apiService: ApiService,\n    private formBuilder: FormBuilder,\n    private sweetAlertService: SweetAlertService,\n    public datepipe: DatePipe,\n    private spinner: NgxSpinnerService,\n  ) { \n  }\n\n  ngOnInit(): void {\n    this.currentUser = this.dataStorage.getUserAccount();\n    this.setFormValidator();\n    this.getPaymentType();\n    this.getActiveCompanies();\n    console.log(this.currentUser.userRole.name);\n    this.getApplicants();\n    this.getScreeners();\n    this.getTypeOfMediums();\n\n  }\n\n  ngOnDestroy(): void {\n\n  }\n\n  getApplicants(){\n    this.apiService.findAll(ENDPOINTS.userAccountType + '/APPLICANT').subscribe( (res: GenericResponse<Array<any>>)=>{\n      // console.log('applicants', res.responseData.data);\n      this.applicants.push({name: 'ALL', id: 0});\n      if(res?.responseData?.data && res?.responseData?.data?.length){\n        res.responseData.data.filter( e=>{\n          this.applicants.push(\n            {name:`${e.firstName} ${e.middleName} ${e.lastName}` , id:e.id}\n          )\n        })\n      }\n    })\n  }\n  \n\n  setFormValidator(): void {\n\n    if (this.currentUser.userRole.name === 'ROLE_ACCOUNTING') {\n      this.reportForm = this.formBuilder.group({\n        reportType: ['', [Validators.required]],\n        paymentType: [0],\n        company: [0],\n        applicant: [0],\n        screener: [0],\n        medium: [0],\n        dateFrom: ['', [Validators.required]],\n        dateTo: ['', [Validators.required]],\n      })\n    } else {\n      this.newReportForm = this.formBuilder.group({\n        reportType: ['', [Validators.required]],\n        dateFrom: ['', [Validators.required]],\n        dateTo: ['', [Validators.required]]\n      })\n    }\n  }\n\n  getPaymentType() {\n    this.apiService.findAll(ENDPOINTS.paymentType).subscribe((res: any) => {\n      this.paymentTypeList = res.responseData.data;\n      this.paymentTypeList.unshift(this.paymentTypeAll);\n    })\n  }\n\n  getScreeners(){\n    this.apiService.findAll(`${ENDPOINTS.userPerRole}${8}`).subscribe(screener=>{\n      this.screeners.push({name: 'ALL', id: 0});\n      if(screener?.responseData?.data && screener?.responseData?.data?.length){\n        screener.responseData.data.filter( e=>{\n          this.screeners.push(\n            {name:`${e.firstName} ${e.middleName} ${e.lastName}` , id:e.id}\n          )\n        })\n      }\n    })\n  }\n\n  getTypeOfMediums(): void {\n    this.apiService.findAll(`${ENDPOINTS.typeOfMedium}`).subscribe(response=>{\n      this.typeOfMediums = response.responseData.data;\n      this.typeOfMediums.unshift({ description: 'ALL', id: 0 });\n    });\n  }\n\n  getActiveCompanies(){\n    this.apiService.findAll(ENDPOINTS.activeCompanies).subscribe( res=>{\n      \n      this.activeCompanyList = res.responseData.data;\n      this.activeCompanyList.push(\n        {\n          \"id\": 0,\n          \"companyName\": \"All\", \n        }\n      )\n      this.activeCompanyList.sort( (_a,_b)=>{\n        return (_a.id - _b.id)\n      });\n    })\n  }\n\n  setReportType(res) {\n    if (this.currentUser.userRole.name === 'ROLE_ACCOUNTING') {\n      this.selectedReportType = res.name;\n      if (this.selectedReportType === 'Collection Report') {\n        this.isPaymentTypeRequired = false;\n      } else {\n        this.reportForm.get('paymentType').patchValue(0);\n        this.isPaymentTypeRequired = true;\n        this.selectedPaymentType = 0;\n      }\n    } else {\n      this.selectedReportType = res;\n    }\n  }\n\n  setPaymentType(id) {\n    this.isPaymentTypeRequired = true;\n    this.selectedPaymentType = id;\n  }\n\n  generateReport() {\n     this.spinner.show();\n    this.report.format = 'xlsx';\n    console.log('selected ', this.selectedReportType)\n    if (this.currentUser.userRole.name === 'ROLE_ACCOUNTING') {\n      this.report.filename = 'VAT_TAX_Summary';\n\n      this.report.module = 'Report';\n      this.report.params = { 'dateFrom': `${this.datepipe.transform(this.reportForm.get('dateFrom').value, 'MM/dd/yyyy').toString()}`, 'dateTo': `${this.datepipe.transform(this.reportForm.get('dateTo').value, 'MM/dd/yyyy')}`, 'reportType': this.reportType.filename}\n      let valdationReportEndpoint = ENDPOINTS.validateReportsCollection + `/date-from/${this.datepipe.transform(this.reportForm.get('dateFrom').value, 'yyyy-MM-dd').toString()}/date-to/${this.datepipe.transform(this.reportForm.get('dateTo').value, 'yyyy-MM-dd').toString()}`;\n\n      if (this.selectedReportType === 'Collection Report') {\n        this.report.filename = 'Collection_Report';\n        valdationReportEndpoint = ENDPOINTS.validateReportsCollection + `/date-from/${this.datepipe.transform(this.reportForm.get('dateFrom').value, 'yyyy-MM-dd').toString()}/date-to/${this.datepipe.transform(this.reportForm.get('dateTo').value, 'yyyy-MM-dd').toString()}/payment-type-id/${this.selectedPaymentType}`;\n        this.report.params = { 'dateFrom': `${this.datepipe.transform(this.reportForm.get('dateFrom').value, 'MM/dd/yyyy').toString()}`, 'dateTo': `${this.datepipe.transform(this.reportForm.get('dateTo').value, 'MM/dd/yyyy')}`, 'paymentTypeId': this.selectedPaymentType }\n      } else if (this.selectedReportType === REPORT_TYPE.REPORT_PER_COMPANY){\n        this.report.filename = 'Per_Company';\n        valdationReportEndpoint = ENDPOINTS.validateReportsCollection + `/date-from/${this.datepipe.transform(this.reportForm.get('dateFrom').value, 'yyyy-MM-dd').toString()}/date-to/${this.datepipe.transform(this.reportForm.get('dateTo').value, 'yyyy-MM-dd').toString()}/payment-type-id/${this.selectedPaymentType}`;\n        this.report.params = { 'companyId': this.reportForm.get('company').value, 'dateFrom': `${this.datepipe.transform(this.reportForm.get('dateFrom').value, 'MM/dd/yyyy').toString()}`, 'dateTo': `${this.datepipe.transform(this.reportForm.get('dateTo').value, 'MM/dd/yyyy')}`, 'paymentTypeId': this.selectedPaymentType }\n      } else if(this.selectedReportType === REPORT_TYPE.REPORT_PER_AGENCY){\n        this.report.filename = 'Per_Agency';\n        valdationReportEndpoint = ENDPOINTS.validateReportsCollection + `/date-from/${this.datepipe.transform(this.reportForm.get('dateFrom').value, 'yyyy-MM-dd').toString()}/date-to/${this.datepipe.transform(this.reportForm.get('dateTo').value, 'yyyy-MM-dd').toString()}/payment-type-id/${this.selectedPaymentType}`;\n        this.report.params = { 'agencyId': this.reportForm.get('company').value, 'dateFrom': `${this.datepipe.transform(this.reportForm.get('dateFrom').value, 'MM/dd/yyyy').toString()}`, 'dateTo': `${this.datepipe.transform(this.reportForm.get('dateTo').value, 'MM/dd/yyyy')}`, 'paymentTypeId': this.selectedPaymentType }\n      } else if(this.selectedReportType === REPORT_TYPE.REPORT_PER_SCREENER){\n        this.report.filename = 'Per_Screener';\n        valdationReportEndpoint = ENDPOINTS.validateReportsCollection + `/date-from/${this.datepipe.transform(this.reportForm.get('dateFrom').value, 'yyyy-MM-dd').toString()}/date-to/${this.datepipe.transform(this.reportForm.get('dateTo').value, 'yyyy-MM-dd').toString()}/payment-type-id/${this.selectedPaymentType}`;\n        this.report.params = { 'screenerId': this.reportForm.get('screener').value, 'dateFrom': `${this.datepipe.transform(this.reportForm.get('dateFrom').value, 'MM/dd/yyyy').toString()}`, 'dateTo': `${this.datepipe.transform(this.reportForm.get('dateTo').value, 'MM/dd/yyyy')}`, 'paymentTypeId': this.selectedPaymentType }\n      } else if(this.selectedReportType === REPORT_TYPE.REPORT_PER_APPLICANT){\n        this.report.filename = 'Per_Applicant';\n        valdationReportEndpoint = ENDPOINTS.validateReportsCollection + `/date-from/${this.datepipe.transform(this.reportForm.get('dateFrom').value, 'yyyy-MM-dd').toString()}/date-to/${this.datepipe.transform(this.reportForm.get('dateTo').value, 'yyyy-MM-dd').toString()}/payment-type-id/${this.selectedPaymentType}`;\n        this.report.params = { 'applicantId': this.reportForm.get('applicant').value, 'dateFrom': `${this.datepipe.transform(this.reportForm.get('dateFrom').value, 'MM/dd/yyyy').toString()}`, 'dateTo': `${this.datepipe.transform(this.reportForm.get('dateTo').value, 'MM/dd/yyyy')}`, 'paymentTypeId': this.selectedPaymentType }\n      } else if(this.selectedReportType === REPORT_TYPE.REPORT_PER_MEDIUM){\n        this.report.filename = 'Per_Type_Of_Medium';\n        valdationReportEndpoint = ENDPOINTS.validateReportsCollection + `/date-from/${this.datepipe.transform(this.reportForm.get('dateFrom').value, 'yyyy-MM-dd').toString()}/date-to/${this.datepipe.transform(this.reportForm.get('dateTo').value, 'yyyy-MM-dd').toString()}/payment-type-id/${this.selectedPaymentType}`;\n        this.report.params = { 'typeOfMediumId': this.reportForm.get('medium').value, 'dateFrom': `${this.datepipe.transform(this.reportForm.get('dateFrom').value, 'MM/dd/yyyy').toString()}`, 'dateTo': `${this.datepipe.transform(this.reportForm.get('dateTo').value, 'MM/dd/yyyy')}`, 'paymentTypeId': this.selectedPaymentType }\n      } else if (this.selectedReportType === 'VAT Summary') {\n        this.report.params = { 'dateFrom': `${this.datepipe.transform(this.reportForm.get('dateFrom').value, 'MM/dd/yyyy').toString()}`, 'dateTo': `${this.datepipe.transform(this.reportForm.get('dateTo').value, 'MM/dd/yyyy')}`, 'reportType': 'vat' }\n      } else if (this.selectedReportType === 'TAX Summary') {\n        this.report.params = { 'dateFrom': `${this.datepipe.transform(this.reportForm.get('dateFrom').value, 'MM/dd/yyyy').toString()}`, 'dateTo': `${this.datepipe.transform(this.reportForm.get('dateTo').value, 'MM/dd/yyyy')}`, 'reportType': 'wtax' }\n      }\n\n      this.apiService.findAll(valdationReportEndpoint).subscribe((data: any) => {\n\n        if (data.length > 0) {\n          this.printReport(this.report);\n        } else {\n          this.sweetAlertService.customErrorMessage('No Record found on date ranged');\n          this.spinner.hide();\n        }\n      });\n\n    } else {\n     \n      this.report.filename = this.selectedReportType;\n      let dateFrom = `${this.datepipe.transform(this.newReportForm.get('dateFrom').value, 'MM/dd/yyyy').toString()}`;\n      let dateTo = `${this.datepipe.transform(this.newReportForm.get('dateTo').value, 'MM/dd/yyyy')}`;\n      this.report.module = 'AppData';\n      this.report.params = { 'dateFrom': dateFrom, 'dateTo': dateTo };\n      this.printReport(this.report);\n    }\n\n  }\n\n  printReport(report) {\n    this.apiService.printReport(ENDPOINTS.generateReports, report).subscribe((data: any) => {\n      const newBlob = new Blob([(data)], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });\n      const downloadURL = URL.createObjectURL(newBlob);\n      var anchor = document.createElement('a');\n      anchor.download = this.selectedReportType + '.xlsx';\n      anchor.href = downloadURL;\n      anchor.click();\n      if (this.currentUser.userRole.name === 'ROLE_ACCOUNTING') {\n        this.reportForm.reset();\n        this.reportForm.patchValue({\n          paymentType: 0,\n          company: 0,\n          applicant: 0,\n          screener: 0,\n          medium: 0,\n        });\n      } else {\n        this.newReportForm.reset();\n      }\n      this.selectedReportType = null;\n      this.sweetAlertService.customSuccessMessage('Successfully Generated!');\n      this.spinner.hide();\n    }, (err: any) => {\n      // console.log(err);\n        this.spinner.hide();\n      this.sweetAlertService.customErrorMessage('No Record found on date ranged');\n    });\n  }\n\n}\n","<form>\n  <div class=\"container-fluid\">\n    <div class=\"row\">\n      <div class=\"col-md-12 title\">\n        <mat-label>\n          Reports\n        </mat-label>\n      </div>\n    </div>\n    <hr>\n    <div *ngIf=\"currentUser.userRole.name === 'ROLE_ACCOUNTING'\">\n    <form [formGroup]=\"reportForm\" >\n      <div class=\"row\">\n        <mat-form-field class=\"col-md-6\" appearance=\"outline\">\n          <mat-label>Date Start:</mat-label>\n          <input matInput placeholder=\"Date\" [matDatepicker]=\"dateFrom\" readonly [(ngModel)]=\"dateFrome\"\n            name=\"dateFrom\" readonly formControlName=\"dateFrom\">\n          <mat-datepicker-toggle matSuffix [for]=\"dateFrom\"></mat-datepicker-toggle>\n          <mat-datepicker color=\"warn\" #dateFrom disabled=\"false\"></mat-datepicker>\n        </mat-form-field>\n        <mat-form-field class=\"col-md-6\" appearance=\"outline\">\n          <mat-label>Date End:</mat-label>\n          <input matInput placeholder=\"Date\" [matDatepicker]=\"Date\" readonly [(ngModel)]=\"dateTo\" name=\"dateTo\"\n            formControlName=\"dateTo\">\n          <mat-datepicker-toggle matSuffix [for]=\"Date\"></mat-datepicker-toggle>\n          <mat-datepicker color=\"warn\" #Date disabled=\"false\"></mat-datepicker>\n        </mat-form-field>\n      </div>\n      <div class=\"row\">\n        <mat-form-field class=\"col-md-6\" appearance=\"outline\">\n          <mat-label>Report Type: </mat-label>\n          <mat-select [(ngModel)]=\"reportType\" name=\"reportType\" formControlName=\"reportType\">\n            <mat-option *ngFor=\"let i of reportTypeList\" [value]=\"i\"  (click)=\"setReportType(i)\">\n              {{i.name}}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n        <mat-form-field class=\"col-md-6\" appearance=\"outline\" *ngIf=\"selectedReportType !== reportTypes.VAT_SUMMARY && selectedReportType !== reportTypes.TAX_SUMMARY\">\n          <mat-label>Payment Type:</mat-label>\n          <mat-select name=\"paymentType\" formControlName=\"paymentType\">\n            <mat-option *ngFor=\"let i of paymentTypeList\" [value]=\"i.id\" (click)=\"setPaymentType(i.id)\">\n              {{i.paymentDescription}}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n        <mat-form-field class=\"col-md-6\" appearance=\"outline\" *ngIf=\"selectedReportType === reportTypes.COLLECTION_REPORT || selectedReportType === reportTypes.REPORT_PER_COMPANY || selectedReportType === reportTypes.REPORT_PER_AGENCY\">\n          <mat-label>Company:</mat-label>\n          <mat-select   name=\"company\" formControlName=\"company\">\n            <mat-option *ngFor=\"let company of activeCompanyList\" [value]=\"company.id\" >\n              {{company.companyName}}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n        <mat-form-field class=\"col-md-6\" appearance=\"outline\" *ngIf=\"selectedReportType === reportTypes.COLLECTION_REPORT || selectedReportType === reportTypes.REPORT_PER_APPLICANT\">\n          <mat-label>Applicant:</mat-label>\n          <mat-select   name=\"applicant\" formControlName=\"applicant\">\n            <mat-option *ngFor=\"let applicant of applicants\" [value]=\"applicant.id\" >\n              {{applicant.name}}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n        <mat-form-field class=\"col-md-6\" appearance=\"outline\" *ngIf=\"selectedReportType === reportTypes.COLLECTION_REPORT || selectedReportType === reportTypes.REPORT_PER_SCREENER\">\n          <mat-label>Screener:</mat-label>\n          <mat-select   name=\"company\" formControlName=\"screener\">\n            <mat-option *ngFor=\"let screener of screeners\" [value]=\"screener.id\" >\n              {{screener.name}}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n        <mat-form-field class=\"col-md-6\" appearance=\"outline\" *ngIf=\"selectedReportType === reportTypes.REPORT_PER_MEDIUM\">\n          <mat-label>Mediums:</mat-label>\n          <mat-select name=\"medium\" formControlName=\"medium\">\n            <mat-option *ngFor=\"let medium of typeOfMediums\" [value]=\"medium.id\" >\n              {{ medium?.description }}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n      </div>\n    </form>\n    <div class=\"row\">\n      <div class=\"col-md-9\"></div>\n      <div class=\"col-md-3\">\n        <button mat-raised-button class=\"button-red\"  (click)=\"generateReport()\"\n          [disabled]=\"reportForm.controls['dateFrom']?.errors?.required || reportForm.controls['dateTo']?.errors?.required || reportForm.controls['reportType']?.errors?.required || !isPaymentTypeRequired\">\n          <i class=\"material-icons color__white\">task_alt</i> GENERATE\n        </button>\n        <br> <br>\n      </div>\n    </div>\n  </div>\n  <div  *ngIf=\"currentUser.userRole.name === 'ROLE_SUPER_ADMIN' || currentUser.userRole.name === 'ROLE_ADMIN'\">\n    <form [formGroup]=\"newReportForm\">\n      <div class=\"row\">\n        <mat-form-field class=\"col-md-6\" appearance=\"outline\">\n          <mat-label>Date Start:</mat-label>\n          <input matInput placeholder=\"Date\" [matDatepicker]=\"dateFrom\" readonly [(ngModel)]=\"dateFrome\"\n            name=\"dateFrom\" readonly formControlName=\"dateFrom\">\n          <mat-datepicker-toggle matSuffix [for]=\"dateFrom\"></mat-datepicker-toggle>\n          <mat-datepicker color=\"warn\" #dateFrom disabled=\"false\"></mat-datepicker>\n        </mat-form-field>\n        <mat-form-field class=\"col-md-6\" appearance=\"outline\">\n          <mat-label>Date End:</mat-label>\n          <input matInput placeholder=\"Date\" [matDatepicker]=\"Date\" readonly [(ngModel)]=\"dateTo\" name=\"dateTo\"\n            formControlName=\"dateTo\">\n          <mat-datepicker-toggle matSuffix [for]=\"Date\"></mat-datepicker-toggle>\n          <mat-datepicker color=\"warn\" #Date disabled=\"false\"></mat-datepicker>\n        </mat-form-field>\n        <mat-form-field class=\"col-md-6\" appearance=\"outline\">\n          <mat-label>Report Type: </mat-label>\n          <mat-select [(ngModel)]=\"reportType\" name=\"reportType\" formControlName=\"reportType\">\n            <mat-option *ngFor=\"let i of newReportTypeList\" [value]=\"i.filename\" (click)=\"setReportType(i.filename)\">\n              {{i.name}}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n      </div>\n    </form>\n    <div class=\"row\">\n      <div class=\"col-md-9\"></div>\n      <div class=\"col-md-3\">\n        <button mat-raised-button class=\"button-red\"  (click)=\"generateReport()\"\n          [disabled]=\"newReportForm.controls['dateFrom']?.errors?.required  || newReportForm.controls['reportType']?.errors?.required \">\n          <i class=\"material-icons color__white\">task_alt</i> GENERATE\n        </button>\n        <br> <br>\n      </div>\n    </div>\n  </div>\n  </div>\n</form>\n","import { PaymentType } from \"./payment-type.model\";\n\nexport class PaymentMethod {\n    id: number;\n    paymentType: PaymentType;\n    referenceNo: string;\n    controlNo: string;\n    paymentDate: Date;\n    amount: number;\n    bankName: string\n    bankBranch: string;\n    promisorryDate: Date;\n    ccConfirmationCode: string;\n    checkNo: string;\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReportsRoutingModule } from './reports-routing.module';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { AngularMaterialModule } from '@shared';\nimport { BrowserModule } from '@angular/platform-browser'\nimport { ReportsComponent } from './reports.component';\n\n\n@NgModule({\n  declarations: [ReportsComponent],\n  imports: [\n    CommonModule,\n    ReportsRoutingModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    AngularMaterialModule,\n  ]\n})\nexport class ReportsModule { }\n"],"sourceRoot":"webpack:///"}