{"version":3,"sources":["webpack:///src/app/modules/fragments/index.ts","webpack:///src/app/modules/pages/maintenance/promissory-note-period/promissory-note-period.component.ts","webpack:///src/app/modules/pages/maintenance/promissory-note-period/promissory-note-period.component.scss","webpack:///src/app/modules/pages/maintenance/promissory-note-period/promissory-note-period.component.html","webpack:///src/app/modules/pages/maintenance/promissory-note-period/promissory-note-period-routing.module.ts","webpack:///src/app/modules/pages/maintenance/promissory-note-period/promissory-note-period.module.ts"],"names":["PromissoryNotePeriodComponent","apiService","formBuilder","sweetAlertService","validateFieldService","displayedColumns","promissoryNotePeriod","promissoryNotePeriodList","getList","setFormValidator","findAll","promissoryNotePeriods","subscribe","res","responseData","data","dataSource","paginator","formListComponent","sort","save","undefined","success","err","Number","noOfDays","error","message","resetFormValidator","findById","idForUpdate","console","log","update","promissoryNotePeriodForm","group","required","markAsUntouched","markAsPristine","fire","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","value","deleteById","id","customSuccessMessage","selector","template","routes","path","component","PromissoryNotePeriodRoutingModule","imports","forChild","exports","PromissoryNotePeriodModule","declarations"],"mappings":"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","file":"promissory-note-period-promissory-note-period-module-es5.js","sourcesContent":["export * from './form-action-buttons/form-action-buttons.component';\r\nexport * from './form-list/form-list.component';","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { FormListComponent } from '@fragments';\r\nimport { ApiService, SweetAlertService } from '@services';\r\nimport { ENDPOINTS } from '@shared';\r\nimport { PromissoryNotePeriod } from 'app/core/models/promissory-note-period.model';\r\nimport { ValidateFieldService } from 'app/core/services/validate-field.service';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-promissory-note-period',\r\n  templateUrl: './promissory-note-period.component.html',\r\n  styleUrls: ['./promissory-note-period.component.scss']\r\n})\r\nexport class PromissoryNotePeriodComponent implements OnInit {\r\n\r\n  @ViewChild(FormListComponent) formListComponent: FormListComponent;\r\n  dataSource: MatTableDataSource<PromissoryNotePeriod>;\r\n  displayedColumns: string[] = ['noOfDays'];\r\n\r\n  promissoryNotePeriod = new PromissoryNotePeriod();\r\n  promissoryNotePeriodList = [];\r\n\r\n  promissoryNotePeriodForm: FormGroup;\r\n\r\n\r\n  constructor(\r\n    private apiService: ApiService,\r\n    private formBuilder: FormBuilder,\r\n    private sweetAlertService: SweetAlertService,\r\n    public validateFieldService: ValidateFieldService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.getList();\r\n    this.setFormValidator();\r\n  }\r\n\r\n  getList(): void {\r\n    this.apiService.findAll(ENDPOINTS.promissoryNotePeriods).subscribe((res: any) => {\r\n      this.promissoryNotePeriodList = res.responseData.data;\r\n      this.dataSource = new MatTableDataSource<PromissoryNotePeriod>(res.responseData.data);\r\n      this.dataSource.paginator = this.formListComponent.paginator;\r\n      this.dataSource.sort = this.formListComponent.sort;\r\n    });\r\n  }\r\n\r\n  save(): void {\r\n    this.apiService.save(ENDPOINTS.promissoryNotePeriods, this.promissoryNotePeriod).subscribe(\r\n      (res: any) => {\r\n        if (res !== undefined) {\r\n          this.sweetAlertService.success(res);\r\n        }\r\n      }, (err: any) => {\r\n        if (!Number(this.promissoryNotePeriod.noOfDays)) {\r\n          err.error.message = 'Please enter numeric values only';\r\n        } else {\r\n          err.error.message = 'Default Promissory Note Period have already been set. Select the entry to update the record';\r\n        }\r\n        this.sweetAlertService.error(err);\r\n      }, () => {\r\n        this.resetFormValidator(),\r\n          this.getList();\r\n      }\r\n    )\r\n  }\r\n\r\n  getPromissoryNotePeriod(): void {\r\n    this.apiService.findById(ENDPOINTS.promissoryNotePeriods, this.formListComponent.idForUpdate).subscribe((res: any) => {\r\n      if (res) {\r\n        this.promissoryNotePeriod = res.responseData.data;\r\n        console.log(res);\r\n\r\n      }\r\n    });\r\n  }\r\n\r\n  update(): void {\r\n    this.apiService.update(ENDPOINTS.promissoryNotePeriods, this.promissoryNotePeriod).subscribe(\r\n      (res: any) => {\r\n        if (res !== undefined) {\r\n          this.sweetAlertService.success(res);\r\n        }\r\n      }, (err: any) => {\r\n        this.sweetAlertService.error(err);\r\n      }, () => {\r\n        this.resetFormValidator()\r\n        this.getList();\r\n      });\r\n  }\r\n\r\n  setFormValidator(): void {\r\n    this.promissoryNotePeriodForm = this.formBuilder.group({\r\n      noOfDays: ['', Validators.required],\r\n    });\r\n  }\r\n\r\n  resetFormValidator(): void {\r\n    this.promissoryNotePeriod = new PromissoryNotePeriod();\r\n    this.promissoryNotePeriodForm.markAsUntouched();\r\n    this.promissoryNotePeriodForm.markAsPristine();\r\n  }\r\n\r\n  delete() {\r\n    Swal.fire({\r\n      text: 'Are you sure you want to delete this promissory note period?',\r\n      icon: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Confirm'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.apiService.deleteById(ENDPOINTS.promissoryNotePeriods, this.promissoryNotePeriod.id).subscribe(\r\n          () => {\r\n            this.sweetAlertService.customSuccessMessage('Promissory note period successfully deleted.');\r\n            this.resetFormValidator();\r\n            this.getList();\r\n          }\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcGFnZXMvbWFpbnRlbmFuY2UvcHJvbWlzc29yeS1ub3RlLXBlcmlvZC9wcm9taXNzb3J5LW5vdGUtcGVyaW9kLmNvbXBvbmVudC5zY3NzIn0= */\";","export default \"<form>\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12 title\\\">\\r\\n                <mat-label>\\r\\n                    Promissory Note Period\\r\\n                </mat-label>\\r\\n            </div>\\r\\n        </div>\\r\\n        <hr>\\r\\n\\r\\n        <form [formGroup]=\\\"promissoryNotePeriodForm\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <mat-form-field class=\\\"col-md-8\\\" appearance=\\\"outline\\\">\\r\\n                    <mat-label>Number of Days <span class=\\\"required-field\\\">*</span></mat-label>\\r\\n                    <input matInput [(ngModel)]=\\\"promissoryNotePeriod.noOfDays\\\" name=\\\"noOfDays\\\"\\r\\n                        (keydown)=\\\"validateFieldService.numbersOnly($event)\\\" formControlName=\\\"noOfDays\\\">\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n        </form>\\r\\n\\r\\n        <app-form-action-buttons [childObject]=\\\"promissoryNotePeriod\\\" [childForm]=\\\"promissoryNotePeriodForm\\\"\\r\\n            (saveFunction)=\\\"save()\\\" (updateFunction)=\\\"update()\\\" (cancelFunction)=\\\"resetFormValidator()\\\"\\r\\n            (deleteFunction)=\\\"delete()\\\">\\r\\n        </app-form-action-buttons>\\r\\n        <br>\\r\\n        <app-form-list [dataSource]=\\\"dataSource\\\" [displayedColumns]=\\\"displayedColumns\\\"\\r\\n            (selectInListFunction)=\\\"getPromissoryNotePeriod()\\\"></app-form-list>\\r\\n\\r\\n    </div>\\r\\n</form>\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { PromissoryNotePeriodComponent } from './promissory-note-period.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: PromissoryNotePeriodComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class PromissoryNotePeriodRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { PromissoryNotePeriodRoutingModule } from './promissory-note-period-routing.module';\r\nimport { PromissoryNotePeriodComponent } from './promissory-note-period.component';\r\nimport { FragmentsModule } from 'app/modules/fragments/fragments.module';\r\nimport { AngularMaterialModule } from '@shared';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    PromissoryNotePeriodComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    PromissoryNotePeriodRoutingModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule,\r\n    AngularMaterialModule,\r\n    FragmentsModule,\r\n  ]\r\n})\r\nexport class PromissoryNotePeriodModule { }\r\n"]}