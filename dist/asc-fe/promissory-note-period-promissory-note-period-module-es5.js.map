<<<<<<< HEAD
{"version":3,"sources":["webpack:///src/app/modules/fragments/index.ts","webpack:///src/app/modules/pages/maintenance/promissory-note-period/promissory-note-period.component.ts","webpack:///src/app/modules/pages/maintenance/promissory-note-period/promissory-note-period.component.html","webpack:///src/app/modules/pages/maintenance/promissory-note-period/promissory-note-period-routing.module.ts","webpack:///src/app/modules/pages/maintenance/promissory-note-period/promissory-note-period.module.ts"],"names":["PromissoryNotePeriodComponent","apiService","formBuilder","sweetAlertService","validateFieldService","displayedColumns","promissoryNotePeriod","promissoryNotePeriodList","getList","setFormValidator","findAll","promissoryNotePeriods","subscribe","res","responseData","data","dataSource","paginator","formListComponent","sort","save","undefined","success","err","Number","noOfDays","error","message","resetFormValidator","findById","idForUpdate","console","log","update","promissoryNotePeriodForm","group","required","markAsUntouched","markAsPristine","fire","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","value","deleteById","id","customSuccessMessage","getPromissoryNotePeriod","routes","path","component","PromissoryNotePeriodRoutingModule","forChild","PromissoryNotePeriodModule"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;ACAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAeO;AAAA,YAAMA,6BAAN;AAYL,iDACUC,UADV,EAEUC,WAFV,EAGUC,iBAHV,EAISC,oBAJT,EAImD;AAAA;;AAHzC,iBAAAH,UAAA,GAAAA,UAAA;AACA,iBAAAC,WAAA,GAAAA,WAAA;AACA,iBAAAC,iBAAA,GAAAA,iBAAA;AACD,iBAAAC,oBAAA,GAAAA,oBAAA;AAZT,iBAAAC,gBAAA,GAA6B,CAAC,UAAD,CAA7B;AAEA,iBAAAC,oBAAA,GAAuB,IAAI,iGAAJ,EAAvB;AACA,iBAAAC,wBAAA,GAA2B,EAA3B;AAUK;;AAjBA;AAAA;AAAA,mBAmBL,oBAAW;AACT,mBAAKC,OAAL;AACA,mBAAKC,gBAAL;AACD;AAtBI;AAAA;AAAA,mBAwBL,mBAAO;AAAA;;AACL,mBAAKR,UAAL,CAAgBS,OAAhB,CAAwB,kDAAUC,qBAAlC,EAAyDC,SAAzD,CAAmE,UAACC,GAAD,EAAc;AAC/E,qBAAI,CAACN,wBAAL,GAAgCM,GAAG,CAACC,YAAJ,CAAiBC,IAAjD;AACA,qBAAI,CAACC,UAAL,GAAkB,IAAI,0EAAJ,CAA6CH,GAAG,CAACC,YAAJ,CAAiBC,IAA9D,CAAlB;AACA,qBAAI,CAACC,UAAL,CAAgBC,SAAhB,GAA4B,KAAI,CAACC,iBAAL,CAAuBD,SAAnD;AACA,qBAAI,CAACD,UAAL,CAAgBG,IAAhB,GAAuB,KAAI,CAACD,iBAAL,CAAuBC,IAA9C;AACD,eALD;AAMD;AA/BI;AAAA;AAAA,mBAiCL,gBAAI;AAAA;;AACF,mBAAKlB,UAAL,CAAgBmB,IAAhB,CAAqB,kDAAUT,qBAA/B,EAAsD,KAAKL,oBAA3D,EAAiFM,SAAjF,CACE,UAACC,GAAD,EAAc;AACZ,oBAAIA,GAAG,KAAKQ,SAAZ,EAAuB;AACrB,wBAAI,CAAClB,iBAAL,CAAuBmB,OAAvB,CAA+BT,GAA/B;AACD;AACF,eALH,EAKK,UAACU,GAAD,EAAc;AACf,oBAAI,CAACC,MAAM,CAAC,MAAI,CAAClB,oBAAL,CAA0BmB,QAA3B,CAAX,EAAiD;AAC/CF,qBAAG,CAACG,KAAJ,CAAUC,OAAV,GAAoB,kCAApB;AACD,iBAFD,MAEO;AACLJ,qBAAG,CAACG,KAAJ,CAAUC,OAAV,GAAoB,6FAApB;AACD;;AACD,sBAAI,CAACxB,iBAAL,CAAuBuB,KAAvB,CAA6BH,GAA7B;AACD,eAZH,EAYK,YAAM;AACP,sBAAI,CAACK,kBAAL,IACE,MAAI,CAACpB,OAAL,EADF;AAED,eAfH;AAiBD;AAnDI;AAAA;AAAA,mBAqDL,mCAAuB;AAAA;;AACrB,mBAAKP,UAAL,CAAgB4B,QAAhB,CAAyB,kDAAUlB,qBAAnC,EAA0D,KAAKO,iBAAL,CAAuBY,WAAjF,EAA8FlB,SAA9F,CAAwG,UAACC,GAAD,EAAc;AACpH,oBAAIA,GAAJ,EAAS;AACP,wBAAI,CAACP,oBAAL,GAA4BO,GAAG,CAACC,YAAJ,CAAiBC,IAA7C;AACAgB,yBAAO,CAACC,GAAR,CAAYnB,GAAZ;AAED;AACF,eAND;AAOD;AA7DI;AAAA;AAAA,mBA+DL,kBAAM;AAAA;;AACJ,mBAAKZ,UAAL,CAAgBgC,MAAhB,CAAuB,kDAAUtB,qBAAjC,EAAwD,KAAKL,oBAA7D,EAAmFM,SAAnF,CACE,UAACC,GAAD,EAAc;AACZ,oBAAIA,GAAG,KAAKQ,SAAZ,EAAuB;AACrB,wBAAI,CAAClB,iBAAL,CAAuBmB,OAAvB,CAA+BT,GAA/B;AACD;AACF,eALH,EAKK,UAACU,GAAD,EAAc;AACf,sBAAI,CAACpB,iBAAL,CAAuBuB,KAAvB,CAA6BH,GAA7B;AACD,eAPH,EAOK,YAAM;AACP,sBAAI,CAACK,kBAAL;;AACA,sBAAI,CAACpB,OAAL;AACD,eAVH;AAWD;AA3EI;AAAA;AAAA,mBA6EL,4BAAgB;AACd,mBAAK0B,wBAAL,GAAgC,KAAKhC,WAAL,CAAiBiC,KAAjB,CAAuB;AACrDV,wBAAQ,EAAE,CAAC,EAAD,EAAK,0DAAWW,QAAhB;AAD2C,eAAvB,CAAhC;AAGD;AAjFI;AAAA;AAAA,mBAmFL,8BAAkB;AAChB,mBAAK9B,oBAAL,GAA4B,IAAI,iGAAJ,EAA5B;AACA,mBAAK4B,wBAAL,CAA8BG,eAA9B;AACA,mBAAKH,wBAAL,CAA8BI,cAA9B;AACD;AAvFI;AAAA;AAAA,mBAyFL,mBAAS;AAAA;;AACP,iEAAKC,IAAL,CAAU;AACRC,oBAAI,EAAE,8DADE;AAERC,oBAAI,EAAE,UAFE;AAGRC,gCAAgB,EAAE,IAHV;AAIRC,kCAAkB,EAAE,SAJZ;AAKRC,iCAAiB,EAAE,MALX;AAMRC,iCAAiB,EAAE;AANX,eAAV,EAOGC,IAPH,CAOQ,UAACC,MAAD,EAAY;AAClB,oBAAIA,MAAM,CAACC,KAAX,EAAkB;AAChB,wBAAI,CAAC/C,UAAL,CAAgBgD,UAAhB,CAA2B,kDAAUtC,qBAArC,EAA4D,MAAI,CAACL,oBAAL,CAA0B4C,EAAtF,EAA0FtC,SAA1F,CACE,YAAM;AACJ,0BAAI,CAACT,iBAAL,CAAuBgD,oBAAvB,CAA4C,8CAA5C;;AACA,0BAAI,CAACvB,kBAAL;;AACA,0BAAI,CAACpB,OAAL;AACD,mBALH;AAOD;AACF,eAjBD;AAkBD;AA5GI;;AAAA;AAAA;;;2BAAMR,6B,EAA6B,qH,EAAA,2H,EAAA,4H,EAAA,8J;AAAA,S;;;gBAA7BA,6B;AAA6B,qD;AAAA;AAAA;wEAE7B,4D,EAAiB,I;;;;;;;;;;;;;;ACjB9B;;AACI;;AACI;;AACI;;AACI;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AAEA;;AACI;;AACI;;AACI;;AAAW;;AAAe;;AAA6B;;AAAC;;AAAO;;AAC/D;;AAAgB;AAAA;AAAA,iBAA2C,SAA3C,EAA2C;AAAA,uBAC5C,IAAAI,oBAAA,oBAD4C;AACJ,eADvC;;AAAhB;;AAEJ;;AACJ;;AACJ;;AAEA;;AACI;AAAA,uBAAgB,IAAAgB,IAAA,EAAhB;AAAsB,eAAtB,EAAuB,gBAAvB,EAAuB;AAAA,uBAAmB,IAAAa,MAAA,EAAnB;AAA2B,eAAlD,EAAuB,gBAAvB,EAAuB;AAAA,uBAA+C,IAAAL,kBAAA,EAA/C;AAAmE,eAA1F,EAAuB,gBAAvB,EAAuB;AAAA,uBACL,eADK;AACG,eAD1B;;AAEJ;;AACA;;AACA;;AACI;AAAA,uBAAwB,IAAAwB,uBAAA,EAAxB;AAAiD,eAAjD;;AAAmD;;AAE3D;;AACJ;;;;AAnBc;;AAAA;;AAIsB;;AAAA;;AAMH;;AAAA,gHAAoC,WAApC,EAAoC,4BAApC;;AAKV;;AAAA,qGAAyB,kBAAzB,EAAyB,oBAAzB;;;;;;;ODXhB;;;;;;;;;;;;;;;;;AEfP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAIA,UAAMC,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAE;AAFb,OADqB,CAAvB;;AAWO;AAAA,YAAMC,iCAAN;AAAA;AAAA;;;gBAAMA;;;;6BAAAA,iC;AAAiC,W;AAAA,oBAHnC,CAAC,6DAAaC,QAAb,CAAsBJ,MAAtB,CAAD,CAGmC,EAFlC,4DAEkC;;;OAAvC;;;4HAAMG,iC,EAAiC;AAAA;AAAA,oBAFlC,4DAEkC;AAAA,S;AAFtB,O;;;;;;;;;;;;;;;;;ACbxB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAwBO;AAAA,YAAME,0BAAN;AAAA;AAAA;;;gBAAMA;;;;6BAAAA,0B;AAA0B,W;AAAA,oBAT5B,CACP,4DADO,EAEP,wGAFO,EAGP,qEAHO,EAIP,kEAJO,EAKP,6DALO,EAMP,sFANO,CAS4B;;;OAAhC;;;4HAAMA,0B,EAA0B;AAAA,yBAXnC,+FAWmC;AAXN,oBAG7B,4DAH6B,EAI7B,wGAJ6B,EAK7B,qEAL6B,EAM7B,kEAN6B,EAO7B,6DAP6B,EAQ7B,sFAR6B;AAWM,S;AAHpB,O","file":"promissory-note-period-promissory-note-period-module-es5.js","sourcesContent":["export * from './form-action-buttons/form-action-buttons.component';\r\nexport * from './form-list/form-list.component';","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { FormListComponent } from '@fragments';\r\nimport { ApiService, SweetAlertService } from '@services';\r\nimport { ENDPOINTS } from '@shared';\r\nimport { PromissoryNotePeriod } from 'app/core/models/promissory-note-period.model';\r\nimport { ValidateFieldService } from 'app/core/services/validate-field.service';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-promissory-note-period',\r\n  templateUrl: './promissory-note-period.component.html',\r\n  styleUrls: ['./promissory-note-period.component.scss']\r\n})\r\nexport class PromissoryNotePeriodComponent implements OnInit {\r\n\r\n  @ViewChild(FormListComponent) formListComponent: FormListComponent;\r\n  dataSource: MatTableDataSource<PromissoryNotePeriod>;\r\n  displayedColumns: string[] = ['noOfDays'];\r\n\r\n  promissoryNotePeriod = new PromissoryNotePeriod();\r\n  promissoryNotePeriodList = [];\r\n\r\n  promissoryNotePeriodForm: FormGroup;\r\n\r\n\r\n  constructor(\r\n    private apiService: ApiService,\r\n    private formBuilder: FormBuilder,\r\n    private sweetAlertService: SweetAlertService,\r\n    public validateFieldService: ValidateFieldService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.getList();\r\n    this.setFormValidator();\r\n  }\r\n\r\n  getList(): void {\r\n    this.apiService.findAll(ENDPOINTS.promissoryNotePeriods).subscribe((res: any) => {\r\n      this.promissoryNotePeriodList = res.responseData.data;\r\n      this.dataSource = new MatTableDataSource<PromissoryNotePeriod>(res.responseData.data);\r\n      this.dataSource.paginator = this.formListComponent.paginator;\r\n      this.dataSource.sort = this.formListComponent.sort;\r\n    });\r\n  }\r\n\r\n  save(): void {\r\n    this.apiService.save(ENDPOINTS.promissoryNotePeriods, this.promissoryNotePeriod).subscribe(\r\n      (res: any) => {\r\n        if (res !== undefined) {\r\n          this.sweetAlertService.success(res);\r\n        }\r\n      }, (err: any) => {\r\n        if (!Number(this.promissoryNotePeriod.noOfDays)) {\r\n          err.error.message = 'Please enter numeric values only';\r\n        } else {\r\n          err.error.message = 'Default Promissory Note Period have already been set. Select the entry to update the record';\r\n        }\r\n        this.sweetAlertService.error(err);\r\n      }, () => {\r\n        this.resetFormValidator(),\r\n          this.getList();\r\n      }\r\n    )\r\n  }\r\n\r\n  getPromissoryNotePeriod(): void {\r\n    this.apiService.findById(ENDPOINTS.promissoryNotePeriods, this.formListComponent.idForUpdate).subscribe((res: any) => {\r\n      if (res) {\r\n        this.promissoryNotePeriod = res.responseData.data;\r\n        console.log(res);\r\n\r\n      }\r\n    });\r\n  }\r\n\r\n  update(): void {\r\n    this.apiService.update(ENDPOINTS.promissoryNotePeriods, this.promissoryNotePeriod).subscribe(\r\n      (res: any) => {\r\n        if (res !== undefined) {\r\n          this.sweetAlertService.success(res);\r\n        }\r\n      }, (err: any) => {\r\n        this.sweetAlertService.error(err);\r\n      }, () => {\r\n        this.resetFormValidator()\r\n        this.getList();\r\n      });\r\n  }\r\n\r\n  setFormValidator(): void {\r\n    this.promissoryNotePeriodForm = this.formBuilder.group({\r\n      noOfDays: ['', Validators.required],\r\n    });\r\n  }\r\n\r\n  resetFormValidator(): void {\r\n    this.promissoryNotePeriod = new PromissoryNotePeriod();\r\n    this.promissoryNotePeriodForm.markAsUntouched();\r\n    this.promissoryNotePeriodForm.markAsPristine();\r\n  }\r\n\r\n  delete() {\r\n    Swal.fire({\r\n      text: 'Are you sure you want to delete this promissory note period?',\r\n      icon: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Confirm'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.apiService.deleteById(ENDPOINTS.promissoryNotePeriods, this.promissoryNotePeriod.id).subscribe(\r\n          () => {\r\n            this.sweetAlertService.customSuccessMessage('Promissory note period successfully deleted.');\r\n            this.resetFormValidator();\r\n            this.getList();\r\n          }\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<form>\r\n    <div class=\"container-fluid\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-12 title\">\r\n                <mat-label>\r\n                    Promissory Note Period\r\n                </mat-label>\r\n            </div>\r\n        </div>\r\n        <hr>\r\n\r\n        <form [formGroup]=\"promissoryNotePeriodForm\">\r\n            <div class=\"row\">\r\n                <mat-form-field class=\"col-md-8\" appearance=\"outline\">\r\n                    <mat-label>Number of Days <span class=\"required-field\">*</span></mat-label>\r\n                    <input matInput [(ngModel)]=\"promissoryNotePeriod.noOfDays\" name=\"noOfDays\"\r\n                        (keydown)=\"validateFieldService.numbersOnly($event)\" formControlName=\"noOfDays\">\r\n                </mat-form-field>\r\n            </div>\r\n        </form>\r\n\r\n        <app-form-action-buttons [childObject]=\"promissoryNotePeriod\" [childForm]=\"promissoryNotePeriodForm\"\r\n            (saveFunction)=\"save()\" (updateFunction)=\"update()\" (cancelFunction)=\"resetFormValidator()\"\r\n            (deleteFunction)=\"delete()\">\r\n        </app-form-action-buttons>\r\n        <br>\r\n        <app-form-list [dataSource]=\"dataSource\" [displayedColumns]=\"displayedColumns\"\r\n            (selectInListFunction)=\"getPromissoryNotePeriod()\"></app-form-list>\r\n\r\n    </div>\r\n</form>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { PromissoryNotePeriodComponent } from './promissory-note-period.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: PromissoryNotePeriodComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class PromissoryNotePeriodRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { PromissoryNotePeriodRoutingModule } from './promissory-note-period-routing.module';\r\nimport { PromissoryNotePeriodComponent } from './promissory-note-period.component';\r\nimport { FragmentsModule } from 'app/modules/fragments/fragments.module';\r\nimport { AngularMaterialModule } from '@shared';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    PromissoryNotePeriodComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    PromissoryNotePeriodRoutingModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule,\r\n    AngularMaterialModule,\r\n    FragmentsModule,\r\n  ]\r\n})\r\nexport class PromissoryNotePeriodModule { }\r\n"]}
=======
{"version":3,"sources":["webpack:///src/app/modules/fragments/index.ts","webpack:///src/app/modules/pages/maintenance/promissory-note-period/promissory-note-period.component.ts","webpack:///src/app/modules/pages/maintenance/promissory-note-period/promissory-note-period.component.html","webpack:///src/app/modules/pages/maintenance/promissory-note-period/promissory-note-period-routing.module.ts","webpack:///src/app/modules/pages/maintenance/promissory-note-period/promissory-note-period.module.ts"],"names":["PromissoryNotePeriodComponent","apiService","formBuilder","sweetAlertService","validateFieldService","displayedColumns","promissoryNotePeriod","promissoryNotePeriodList","getList","setFormValidator","findAll","promissoryNotePeriods","subscribe","res","responseData","data","dataSource","paginator","formListComponent","sort","save","undefined","success","err","Number","noOfDays","error","message","resetFormValidator","findById","idForUpdate","console","log","update","promissoryNotePeriodForm","group","required","markAsUntouched","markAsPristine","fire","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","value","deleteById","id","customSuccessMessage","getPromissoryNotePeriod","routes","path","component","PromissoryNotePeriodRoutingModule","forChild","PromissoryNotePeriodModule"],"mappings":"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","file":"promissory-note-period-promissory-note-period-module-es5.js","sourcesContent":["export * from './form-action-buttons/form-action-buttons.component';\r\nexport * from './form-list/form-list.component';","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { FormListComponent } from '@fragments';\r\nimport { ApiService, SweetAlertService } from '@services';\r\nimport { ENDPOINTS } from '@shared';\r\nimport { PromissoryNotePeriod } from 'app/core/models/promissory-note-period.model';\r\nimport { ValidateFieldService } from 'app/core/services/validate-field.service';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-promissory-note-period',\r\n  templateUrl: './promissory-note-period.component.html',\r\n  styleUrls: ['./promissory-note-period.component.scss']\r\n})\r\nexport class PromissoryNotePeriodComponent implements OnInit {\r\n\r\n  @ViewChild(FormListComponent) formListComponent: FormListComponent;\r\n  dataSource: MatTableDataSource<PromissoryNotePeriod>;\r\n  displayedColumns: string[] = ['noOfDays'];\r\n\r\n  promissoryNotePeriod = new PromissoryNotePeriod();\r\n  promissoryNotePeriodList = [];\r\n\r\n  promissoryNotePeriodForm: FormGroup;\r\n\r\n\r\n  constructor(\r\n    private apiService: ApiService,\r\n    private formBuilder: FormBuilder,\r\n    private sweetAlertService: SweetAlertService,\r\n    public validateFieldService: ValidateFieldService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.getList();\r\n    this.setFormValidator();\r\n  }\r\n\r\n  getList(): void {\r\n    this.apiService.findAll(ENDPOINTS.promissoryNotePeriods).subscribe((res: any) => {\r\n      this.promissoryNotePeriodList = res.responseData.data;\r\n      this.dataSource = new MatTableDataSource<PromissoryNotePeriod>(res.responseData.data);\r\n      this.dataSource.paginator = this.formListComponent.paginator;\r\n      this.dataSource.sort = this.formListComponent.sort;\r\n    });\r\n  }\r\n\r\n  save(): void {\r\n    this.apiService.save(ENDPOINTS.promissoryNotePeriods, this.promissoryNotePeriod).subscribe(\r\n      (res: any) => {\r\n        if (res !== undefined) {\r\n          this.sweetAlertService.success(res);\r\n        }\r\n      }, (err: any) => {\r\n        if (!Number(this.promissoryNotePeriod.noOfDays)) {\r\n          err.error.message = 'Please enter numeric values only';\r\n        } else {\r\n          err.error.message = 'Default Promissory Note Period have already been set. Select the entry to update the record';\r\n        }\r\n        this.sweetAlertService.error(err);\r\n      }, () => {\r\n        this.resetFormValidator(),\r\n          this.getList();\r\n      }\r\n    )\r\n  }\r\n\r\n  getPromissoryNotePeriod(): void {\r\n    this.apiService.findById(ENDPOINTS.promissoryNotePeriods, this.formListComponent.idForUpdate).subscribe((res: any) => {\r\n      if (res) {\r\n        this.promissoryNotePeriod = res.responseData.data;\r\n        console.log(res);\r\n\r\n      }\r\n    });\r\n  }\r\n\r\n  update(): void {\r\n    this.apiService.update(ENDPOINTS.promissoryNotePeriods, this.promissoryNotePeriod).subscribe(\r\n      (res: any) => {\r\n        if (res !== undefined) {\r\n          this.sweetAlertService.success(res);\r\n        }\r\n      }, (err: any) => {\r\n        this.sweetAlertService.error(err);\r\n      }, () => {\r\n        this.resetFormValidator()\r\n        this.getList();\r\n      });\r\n  }\r\n\r\n  setFormValidator(): void {\r\n    this.promissoryNotePeriodForm = this.formBuilder.group({\r\n      noOfDays: ['', Validators.required],\r\n    });\r\n  }\r\n\r\n  resetFormValidator(): void {\r\n    this.promissoryNotePeriod = new PromissoryNotePeriod();\r\n    this.promissoryNotePeriodForm.markAsUntouched();\r\n    this.promissoryNotePeriodForm.markAsPristine();\r\n  }\r\n\r\n  delete() {\r\n    Swal.fire({\r\n      text: 'Are you sure you want to delete this promissory note period?',\r\n      icon: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Confirm'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.apiService.deleteById(ENDPOINTS.promissoryNotePeriods, this.promissoryNotePeriod.id).subscribe(\r\n          () => {\r\n            this.sweetAlertService.customSuccessMessage('Promissory note period successfully deleted.');\r\n            this.resetFormValidator();\r\n            this.getList();\r\n          }\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<form>\r\n    <div class=\"container-fluid\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-12 title\">\r\n                <mat-label>\r\n                    Promissory Note Period\r\n                </mat-label>\r\n            </div>\r\n        </div>\r\n        <hr>\r\n\r\n        <form [formGroup]=\"promissoryNotePeriodForm\">\r\n            <div class=\"row\">\r\n                <mat-form-field class=\"col-md-8\" appearance=\"outline\">\r\n                    <mat-label>Number of Days <span class=\"required-field\">*</span></mat-label>\r\n                    <input matInput [(ngModel)]=\"promissoryNotePeriod.noOfDays\" name=\"noOfDays\"\r\n                        (keydown)=\"validateFieldService.numbersOnly($event)\" formControlName=\"noOfDays\">\r\n                </mat-form-field>\r\n            </div>\r\n        </form>\r\n\r\n        <app-form-action-buttons [childObject]=\"promissoryNotePeriod\" [childForm]=\"promissoryNotePeriodForm\"\r\n            (saveFunction)=\"save()\" (updateFunction)=\"update()\" (cancelFunction)=\"resetFormValidator()\"\r\n            (deleteFunction)=\"delete()\">\r\n        </app-form-action-buttons>\r\n        <br>\r\n        <app-form-list [dataSource]=\"dataSource\" [displayedColumns]=\"displayedColumns\"\r\n            (selectInListFunction)=\"getPromissoryNotePeriod()\"></app-form-list>\r\n\r\n    </div>\r\n</form>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { PromissoryNotePeriodComponent } from './promissory-note-period.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: PromissoryNotePeriodComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class PromissoryNotePeriodRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { PromissoryNotePeriodRoutingModule } from './promissory-note-period-routing.module';\r\nimport { PromissoryNotePeriodComponent } from './promissory-note-period.component';\r\nimport { FragmentsModule } from 'app/modules/fragments/fragments.module';\r\nimport { AngularMaterialModule } from '@shared';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    PromissoryNotePeriodComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    PromissoryNotePeriodRoutingModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule,\r\n    AngularMaterialModule,\r\n    FragmentsModule,\r\n  ]\r\n})\r\nexport class PromissoryNotePeriodModule { }\r\n"]}
>>>>>>> 53dc5baaa640736d2cc27f9eee7c34fe4a9274c2
