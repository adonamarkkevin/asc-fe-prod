{"version":3,"sources":["webpack:///src/app/modules/fragments/index.ts","webpack:///src/app/modules/pages/maintenance/promissory-note-period/promissory-note-period.component.ts","webpack:///src/app/modules/pages/maintenance/promissory-note-period/promissory-note-period.component.html","webpack:///src/app/modules/pages/maintenance/promissory-note-period/promissory-note-period-routing.module.ts","webpack:///src/app/modules/pages/maintenance/promissory-note-period/promissory-note-period.module.ts"],"names":["PromissoryNotePeriodComponent","apiService","formBuilder","sweetAlertService","validateFieldService","displayedColumns","promissoryNotePeriod","promissoryNotePeriodList","getList","setFormValidator","findAll","promissoryNotePeriods","subscribe","res","responseData","data","dataSource","paginator","formListComponent","sort","save","undefined","success","err","Number","noOfDays","error","message","resetFormValidator","findById","idForUpdate","console","log","update","promissoryNotePeriodForm","group","required","markAsUntouched","markAsPristine","fire","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","value","deleteById","id","customSuccessMessage","getPromissoryNotePeriod","routes","path","component","PromissoryNotePeriodRoutingModule","forChild","PromissoryNotePeriodModule"],"mappings":"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","file":"promissory-note-period-promissory-note-period-module-es5.js","sourcesContent":["export * from './form-action-buttons/form-action-buttons.component';\nexport * from './form-list/form-list.component';","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { FormListComponent } from '@fragments';\nimport { ApiService, SweetAlertService } from '@services';\nimport { ENDPOINTS } from '@shared';\nimport { PromissoryNotePeriod } from 'app/core/models/promissory-note-period.model';\nimport { ValidateFieldService } from 'app/core/services/validate-field.service';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-promissory-note-period',\n  templateUrl: './promissory-note-period.component.html',\n  styleUrls: ['./promissory-note-period.component.scss']\n})\nexport class PromissoryNotePeriodComponent implements OnInit {\n\n  @ViewChild(FormListComponent) formListComponent: FormListComponent;\n  dataSource: MatTableDataSource<PromissoryNotePeriod>;\n  displayedColumns: string[] = ['noOfDays'];\n\n  promissoryNotePeriod = new PromissoryNotePeriod();\n  promissoryNotePeriodList = [];\n\n  promissoryNotePeriodForm: FormGroup;\n\n\n  constructor(\n    private apiService: ApiService,\n    private formBuilder: FormBuilder,\n    private sweetAlertService: SweetAlertService,\n    public validateFieldService: ValidateFieldService,\n  ) { }\n\n  ngOnInit() {\n    this.getList();\n    this.setFormValidator();\n  }\n\n  getList(): void {\n    this.apiService.findAll(ENDPOINTS.promissoryNotePeriods).subscribe((res: any) => {\n      this.promissoryNotePeriodList = res.responseData.data;\n      this.dataSource = new MatTableDataSource<PromissoryNotePeriod>(res.responseData.data);\n      this.dataSource.paginator = this.formListComponent.paginator;\n      this.dataSource.sort = this.formListComponent.sort;\n    });\n  }\n\n  save(): void {\n    this.apiService.save(ENDPOINTS.promissoryNotePeriods, this.promissoryNotePeriod).subscribe(\n      (res: any) => {\n        if (res !== undefined) {\n          this.sweetAlertService.success(res);\n        }\n      }, (err: any) => {\n        if (!Number(this.promissoryNotePeriod.noOfDays)) {\n          err.error.message = 'Please enter numeric values only';\n        } else {\n          err.error.message = 'Default Promissory Note Period have already been set. Select the entry to update the record';\n        }\n        this.sweetAlertService.error(err);\n      }, () => {\n        this.resetFormValidator(),\n          this.getList();\n      }\n    )\n  }\n\n  getPromissoryNotePeriod(): void {\n    this.apiService.findById(ENDPOINTS.promissoryNotePeriods, this.formListComponent.idForUpdate).subscribe((res: any) => {\n      if (res) {\n        this.promissoryNotePeriod = res.responseData.data;\n        console.log(res);\n\n      }\n    });\n  }\n\n  update(): void {\n    this.apiService.update(ENDPOINTS.promissoryNotePeriods, this.promissoryNotePeriod).subscribe(\n      (res: any) => {\n        if (res !== undefined) {\n          this.sweetAlertService.success(res);\n        }\n      }, (err: any) => {\n        this.sweetAlertService.error(err);\n      }, () => {\n        this.resetFormValidator()\n        this.getList();\n      });\n  }\n\n  setFormValidator(): void {\n    this.promissoryNotePeriodForm = this.formBuilder.group({\n      noOfDays: ['', Validators.required],\n    });\n  }\n\n  resetFormValidator(): void {\n    this.promissoryNotePeriod = new PromissoryNotePeriod();\n    this.promissoryNotePeriodForm.markAsUntouched();\n    this.promissoryNotePeriodForm.markAsPristine();\n  }\n\n  delete() {\n    Swal.fire({\n      text: 'Are you sure you want to delete this promissory note period?',\n      icon: 'question',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Confirm'\n    }).then((result) => {\n      if (result.value) {\n        this.apiService.deleteById(ENDPOINTS.promissoryNotePeriods, this.promissoryNotePeriod.id).subscribe(\n          () => {\n            this.sweetAlertService.customSuccessMessage('Promissory note period successfully deleted.');\n            this.resetFormValidator();\n            this.getList();\n          }\n        );\n      }\n    });\n  }\n\n}\n","<form>\n    <div class=\"container-fluid\">\n        <div class=\"row\">\n            <div class=\"col-md-12 title\">\n                <mat-label>\n                    Promissory Note Period\n                </mat-label>\n            </div>\n        </div>\n        <hr>\n\n        <form [formGroup]=\"promissoryNotePeriodForm\">\n            <div class=\"row\">\n                <mat-form-field class=\"col-md-8\" appearance=\"outline\">\n                    <mat-label>Number of Days <span class=\"required-field\">*</span></mat-label>\n                    <input matInput [(ngModel)]=\"promissoryNotePeriod.noOfDays\" name=\"noOfDays\"\n                        (keydown)=\"validateFieldService.numbersOnly($event)\" formControlName=\"noOfDays\">\n                </mat-form-field>\n            </div>\n        </form>\n\n        <app-form-action-buttons [childObject]=\"promissoryNotePeriod\" [childForm]=\"promissoryNotePeriodForm\"\n            (saveFunction)=\"save()\" (updateFunction)=\"update()\" (cancelFunction)=\"resetFormValidator()\"\n            (deleteFunction)=\"delete()\">\n        </app-form-action-buttons>\n        <br>\n        <app-form-list [dataSource]=\"dataSource\" [displayedColumns]=\"displayedColumns\"\n            (selectInListFunction)=\"getPromissoryNotePeriod()\"></app-form-list>\n\n    </div>\n</form>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { PromissoryNotePeriodComponent } from './promissory-note-period.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PromissoryNotePeriodComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class PromissoryNotePeriodRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { PromissoryNotePeriodRoutingModule } from './promissory-note-period-routing.module';\nimport { PromissoryNotePeriodComponent } from './promissory-note-period.component';\nimport { FragmentsModule } from 'app/modules/fragments/fragments.module';\nimport { AngularMaterialModule } from '@shared';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\n\n@NgModule({\n  declarations: [\n    PromissoryNotePeriodComponent\n  ],\n  imports: [\n    CommonModule,\n    PromissoryNotePeriodRoutingModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    AngularMaterialModule,\n    FragmentsModule,\n  ]\n})\nexport class PromissoryNotePeriodModule { }\n"]}