{"version":3,"sources":["./src/app/modules/pages/account/user-list/user-list.module.ts","./src/app/modules/pages/account/user-list/user-list-routing.module.ts","./src/app/modules/pages/account/user-list/user-list.component.ts","./src/app/modules/pages/account/user-list/user-list.component.html","./src/app/modules/pages/account/user-list/user-list-dialog.html"],"names":[],"mappings":"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","file":"default~modules-pages-landing-page-landing-page-module~user-list-user-list-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { UserListRoutingModule } from './user-list-routing.module';\nimport { UserListComponent } from './user-list.component';\nimport { AngularMaterialModule } from '@shared';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FragmentsModule } from '../../../fragments/fragments.module';\n\n\n@NgModule({\n  declarations: [UserListComponent],\n  imports: [\n    CommonModule,\n    UserListRoutingModule,\n    HttpClientModule,\n    AngularMaterialModule,\n    FragmentsModule\n  ]\n})\nexport class UserListModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { UserListComponent } from './user-list.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UserListComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class UserListRoutingModule { }\n","import { Component, Inject, OnInit, ViewChild } from '@angular/core';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTable, MatTableDataSource } from '@angular/material/table';\nimport { Router } from '@angular/router';\nimport { UserAccount} from '@models';\nimport { ApiService, DataStorageService, SweetAlertService } from '@services';\nimport { ENDPOINTS } from '@shared';\nimport { Email } from '../../../../core/models/email.model';\nimport Swal from 'sweetalert2';\nimport { NgxSpinnerService } from 'ngx-spinner';\n\nexport interface DialogData {\n  userAccount: any;\n  // userAccount: '';\n}\n@Component({\n  selector: 'app-user-list',\n  templateUrl: './user-list.component.html',\n  styleUrls: ['./user-list.component.scss']\n})\nexport class UserListComponent implements OnInit {\n\n  @ViewChild(MatPaginator, { static: false }) paginator: MatPaginator;\n  @ViewChild(MatPaginator, { static: false }) paginator2: MatPaginator;\n  @ViewChild(MatSort, { static: false }) sort: MatSort;\n  @ViewChild(MatSort, { static: false }) sort2: MatSort;\n  @ViewChild(MatTable, { static: false }) table: MatTable<UserAccount>;\n  dataSource: MatTableDataSource<UserAccount>;\n  dataSource2: MatTableDataSource<UserAccount>;\n  displayedColumns: string[] = [\n    'userAvatar',\n    'fullName',\n    'companyName',\n    'status'\n    ];\n\n  email = new Email();\n  allUserLists = [];\n  pendingUserLists = [];\n\n  username: string;\n\n  constructor(\n    private apiService: ApiService,\n    private router: Router,\n    private dataStorage: DataStorageService,\n    public dialog: MatDialog,\n    private spinner: NgxSpinnerService\n  ) { }\n\n  ngOnInit(): void {\n    this.getList();\n    this.spinner.show();\n  }\n\n  getList(): void{\n    this.apiService.findAll(ENDPOINTS.userAccount).subscribe(\n      (res : any) => {\n        this.allUserLists = res.responseData.data;\n        // console.log(\"ALL\",this.allUserLists );\n        this.dataSource = new MatTableDataSource<UserAccount>(res.responseData.data);\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n        setTimeout(() => {\n          this.spinner.hide();\n        }, 1);\n      }\n    );\n\n    // this.apiService.findAll(ENDPOINTS.getPendingAccounts).subscribe(\n    //   (res:any) => {\n    //     this.pendingUserLists = res.responseData.data;\n    //     this.dataSource2 = new MatTableDataSource<UserAccount>(res.responseData.data);\n    //     this.dataSource2.paginator = this.paginator2;\n    //     this.dataSource2.sort = this.sort2;\n    //   }\n    // );\n  }\n\n  getUser(id): void{\n    this.router.navigate(['/asc/page/account/user-registration']);\n    this.dataStorage.saveUserAccountId(id);\n  }\n\n  applyFilter1(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n  applyFilter2(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource2.filter = filterValue.trim().toLowerCase();\n  }\n\n  openDialog(i:any): void {\n   \n    if(i.status === \"PENDING\"){\n      const dialogRef = this.dialog.open(UserListDialog, {\n        width: '40%',\n        height: '100%',\n        data: {\n          userAccount: i\n        }\n        // data: {\n        //   isFromModal: true,\n        //   isUserRegistration: true\n        // }\n      });\n      dialogRef.afterClosed().subscribe(result => {\n        console.log('The dialog was closed');\n        this.getList();\n      });\n    }else{\n      this.router.navigate(['asc/page/account/user-update/', i.id]);\n    }\n  }\n\n}\n\n\n@Component({\n  selector: 'app-user-list',\n  templateUrl: 'user-list-dialog.html',\n  styleUrls: ['./user-list.component.scss']\n})\nexport class UserListDialog {\n  \n  constructor(  private apiService: ApiService,\n                private sweetAlertService: SweetAlertService,\n                public dialogRef: MatDialogRef<UserListComponent>,\n                @Inject(MAT_DIALOG_DATA) public data: DialogData) {}\n\n  email = new Email();\n  userAccounts = new UserAccount();\n\n\n  ngOnInit(): void{\n    // console.log(this.data);\n    // this.userAccounts = this.data.userAccount;\n    \n  }\n\n    onApprove(): void{\n      // console.log(\"APPROVED\", this.data.userAccount.username);\n      this.email.mailTo = this.data.userAccount.username;\n      this.email.user = this.data.userAccount.firstName + ' ' + this.data.userAccount.lastName;\n          this.apiService.save(ENDPOINTS.emailApproved + '/' + this.data.userAccount.username, this.data.userAccount).subscribe(\n            (res:any) => {\n              if (res != undefined) {\n                // this.sweetAlertService.success(res);\n                this.sweetAlertService.customSuccessMessage('Email verification successfully sent.');\n                // this.apiService.save(ENDPOINTS.sendEmail, this.email).subscribe(\n                //   (res:any) => {\n                //     this.sweetAlertService.customSuccessMessage('Verification email has been sent!');\n                //   });\n              }\n            });\n    }\n    onNoClick(): void {\n      this.dialogRef.close();\n    }\n    onDisapprove(): void{\n      \n    }\n}","<!--\n\n  NOTE ! ! ! NOT IN USED. Go to User Account Component.\n\n --><form>\n  <div class=\"container-fluid\">\n    <!-- <app-form-list [dataSource]=\"dataSource\" [displayedColumns]=\"displayedColumns\"\n      (selectInListFunction)=\"getAllAccounts()\"></app-form-list> -->\n    <div class=\"row\">\n      <div class=\"col-md-12 title\">\n        <mat-label>\n          <mat-icon>group</mat-icon> Account List\n        </mat-label>\n      </div>\n    </div>\n\n    <form>\n      <mat-form-field class=\"col-md-6\" appearance=\"outline\">\n        <mat-label>Search Account</mat-label>\n        <input matInput (keyup)=\"applyFilter1($event)\" placeholder=\"Search\" #input>\n        <mat-icon matSuffix>search</mat-icon>\n      </mat-form-field>\n\n      <div class=\"mat-elevation-z8\">\n        <table mat-table [dataSource]=\"dataSource\" matSort>\n          <ng-container matColumnDef=\"userAvatar\">\n            <th mat-header-cell *matHeaderCellDef> Image </th>\n            <td mat-cell *matCellDef=\"let element\" (click)=\"openDialog(element)\"> <img\n                src=\"../../../../../assets/images/asc-icon.ico\" alt=\"\"> </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"fullName\">\n            <th mat-header-cell *matHeaderCellDef> Account name </th>\n            <td mat-cell *matCellDef=\"let element\" (click)=\"openDialog(element)\"> {{ element?.firstName }}\n              {{ element?.middleName }} {{ element?.lastName }} </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"companyName\">\n            <th mat-header-cell *matHeaderCellDef> Company </th>\n            <td mat-cell *matCellDef=\"let element\" (click)=\"openDialog(element)\">\n              {{ element?.company.companyName }} </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"status\">\n            <th mat-header-cell *matHeaderCellDef> Status </th>\n            <td mat-cell *matCellDef=\"let element\" (click)=\"openDialog(element)\">\n              <span class=\"badge rounded-pill\" [ngClass]=\"element?.status === 'ACTIVE' || element?.status === 'APPROVED' ? 'bg-success' :\n                 element?.status === 'PENDING' ? 'bg-danger' :\n                 element?.status === 'VERIFICATION_SENT' ? 'bg-warning' : 'no-status-match' \">\n                {{ element?.status }}\n              </span>\n            </td>\n          </ng-container>\n\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n          <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n        </table>\n        <div class=\"no-record\" [hidden]=\"dataSource && dataSource?.data?.length > 0\">\n          No record found.\n        </div>\n        <mat-paginator [pageSizeOptions]=\"[10, 20, 30]\" showFirstLastButtons></mat-paginator>\n\n      </div>\n    </form>\n\n    <!-- <mat-tab-group>\n      <mat-tab>\n        <ng-template mat-tab-label>\n          <i class=\"material-icons\">group</i>\n          All User Account\n        </ng-template>\n\n      </mat-tab>\n\n      <mat-tab>\n        <ng-template mat-tab-label>\n          <i class=\"material-icons\">person_add_alt</i>\n          Pending Accounts\n        </ng-template>\n        <form>\n          <mat-form-field class=\"col-md-6\" appearance=\"outline\">\n            <mat-label>Search Account</mat-label>\n            <input matInput (keyup)=\"applyFilter2($event)\" placeholder=\"Search\" #input>\n            <mat-icon matSuffix>search</mat-icon>\n          </mat-form-field>\n\n          <div class=\"mat-elevation-z8\">\n            <table mat-table [dataSource]=\"dataSource2\" matSort>\n              <ng-container matColumnDef=\"userAvatar\">\n                <th mat-header-cell *matHeaderCellDef> Image </th>\n                <td mat-cell *matCellDef=\"let element\"> <img\n                    src=\"../../../../../assets/images/asc-icon.ico\" alt=\"\"> </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"fullName\">\n                <th mat-header-cell *matHeaderCellDef> Account name </th>\n                <td mat-cell *matCellDef=\"let element\" (click)=\"openDialog(element)\"> {{ element?.firstName }}\n                  {{ element?.middleName }} {{ element?.lastName }} </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"companyName\">\n                <th mat-header-cell *matHeaderCellDef> Company </th>\n                <td mat-cell *matCellDef=\"let element\">\n                  {{ element?.company.companyName }} </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"status\">\n                <th mat-header-cell *matHeaderCellDef> Status </th>\n                <td mat-cell *matCellDef=\"let element\">\n                  <span class=\"badge rounded-pill\" [ngClass]=\"element?.status === 'ACTIVE' ? 'bg-success' :\n                   element?.status === 'PENDING' ? 'bg-danger' :\n                   element?.status === 'VERIFICATION_SENT' ? 'bg-warning' : 'no-status-match' \">\n                    {{ element?.status }}\n                  </span>\n                </td>\n              </ng-container>\n\n              <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n              <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n            </table>\n            <div class=\"no-record\" [hidden]=\"dataSource2 && dataSource2?.data?.length > 0\">\n              No record found.\n            </div>\n            <mat-paginator [pageSizeOptions]=\"[10, 20, 40]\" showFirstLastButtons></mat-paginator>\n\n          </div>\n        </form>\n      </mat-tab> -->\n\n      <!-- <mat-tab>\n        <ng-template mat-tab-label>\n          <mat-icon class=\"example-tab-icon\">thumb_up</mat-icon>\n          Third\n        </ng-template>\n\n        Content 3\n      </mat-tab> -->\n    <!-- </mat-tab-group> -->\n\n  </div>\n</form>\n","\n<!-- <div class=\"row\">\n    <div class=\"col-12 username\">\n        <p>{{data.username}}</p>\n    </div>\n</div>\n<div class=\"row fullname\">\n    <div class=\"col-12\">\n        <p>{{data.fullname}}</p>\n    </div>\n</div> -->\n<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-12 icon\">\n            <i class=\"material-icons\">contact_support</i>\n        </div>\n    </div>\n    <div class=\"row message\">\n        <div class=\"col-12\">\n            <p>Do you want to send verification email to <b class=\"fullname\">{{data.userAccount.username}}</b> ?</p>\n        </div>\n    </div>\n    <div class=\"details\">\n        <div class=\"row \">\n            <div class=\"col-md-12\">\n                <label><i class=\"material-icons\">contact_mail</i> User Information: </label>\n                <p><i class=\"material-icons\">arrow_right</i><b>Full name: </b> {{data.userAccount.firstName}} {{data.userAccount.lastName}}</p>\n                <p><i class=\"material-icons\">arrow_right</i><b>Username: </b> {{data.userAccount.username}}</p>\n                <p><i class=\"material-icons\">arrow_right</i><b>User Role: </b> {{data.userAccount.userRole.name}}</p>\n                <p><i class=\"material-icons\">arrow_right</i><b>Mobile Number: </b> {{data.userAccount.mobileNumber}}</p>\n                <p><i class=\"material-icons\">arrow_right</i><b>Status: </b>  <span class=\"badge rounded-pill bg-danger\" >{{data.userAccount.status}}</span></p>\n            </div>\n        </div><hr>\n        <div class=\"row \">\n            <div class=\"col-md-12\">\n                <label><i class=\"material-icons\">business</i> Company Information:</label>\n                <p><i class=\"material-icons\">arrow_right</i><b>Company Name: </b> {{data.userAccount.company.companyName}}</p>\n                <p><i class=\"material-icons\">arrow_right</i><b>Company Address: </b> {{data.userAccount.company.completeAddress}}</p>\n                <p><i class=\"material-icons\">arrow_right</i><b>Company Fax: </b> {{data.userAccount.company.companyFaxNo}}</p>\n                <p><i class=\"material-icons\">arrow_right</i><b>Company Telephone: </b> {{data.userAccount.company.companyTelephoneNo}}</p>\n                <p><i class=\"material-icons\">arrow_right</i><b>Company Tin: </b> {{data.userAccount.company.companyTin}}</p>\n                <p><i class=\"material-icons\">arrow_right</i><b>Members Affiliation: </b> {{data.userAccount.membersAffiliation.description}}</p>\n            </div>\n        </div>\n    </div>\n\n    <hr>\n\n    <div class=\"row\">\n        <div mat-dialog-actions>\n            <div class=\"dialog-button-content\" align=\"end\">\n                <button class=\"confirm\" (click)=\"onApprove()\"><i class=\"material-icons color__white\">thumb_up_alt</i>Approve</button>\n                <button class=\"warn\" (click)=\"onDisapprove()\"><i class=\"material-icons color__white\">thumb_down_alt</i>Disapprove</button>\n                <button class=\"caution\" (click)=\"onNoClick()\"><i class=\"material-icons color__white\">keyboard_return</i>Return</button>\n            </div>\n        </div>\n    </div>\n</div>\n\n"],"sourceRoot":"webpack:///"}