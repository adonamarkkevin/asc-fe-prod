{"version":3,"sources":["webpack:///src/app/modules/pages/company/list-company/list-company.component.html","webpack:///src/app/modules/pages/company/list-company/list-company-routing.module.ts","webpack:///src/app/modules/pages/company/list-company/list-company.component.scss","webpack:///src/app/modules/pages/company/list-company/list-company.component.ts","webpack:///src/app/modules/pages/company/list-company/list-company.module.ts"],"names":["routes","path","component","ListCompanyRoutingModule","imports","forChild","exports","ListCompanyComponent","apiService","addressService","sweetAlertService","router","displayedColumns","companyList","regionsList","provinceList","cityMunicipalityList","barangayList","doFilter","value","dataSource","filter","trim","toLocaleLowerCase","getList","findAll","company","subscribe","res","responseData","data","paginator","sort","navigate","id","companyParam","fire","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","deleteById","customSuccessMessage","selector","template","ListCompanyModule","declarations"],"mappings":"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","file":"default~applications-applications-module~list-company-list-company-module~modules-pages-landing-page~e873ff00-es5.js","sourcesContent":["export default \"<form>\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12 title\\\">\\r\\n        <mat-label>\\r\\n          <mat-icon>apartment</mat-icon> Company\\r\\n        </mat-label>\\r\\n\\r\\n        <button class=\\\"button-right\\\" mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/asc/page/company/add']\\\">\\r\\n          <mat-icon>add</mat-icon> ADD COMPANY\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n    <br>\\r\\n    <div class=\\\"col-md-5\\\" fxLayout fxLayoutAlign=\\\"center center\\\">\\r\\n      <mat-form-field>\\r\\n        <input matInput type=\\\"text\\\" (keyup)=\\\"doFilter($event.target.value)\\\" placeholder=\\\"Search\\\">\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n    <div class=\\\"mat-elevation-z8 fields\\\">\\r\\n      <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"companyName\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Company Name </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"viewCompany(element)\\\" [ngStyle]=\\\"{'background-color': element?.status === 'ACTIVE' ? 'white' : '#ffbebe' }\\\"> {{ element?.companyName }} </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"membersAffiliation\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef > Members Affiliation </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"viewCompany(element)\\\" [ngStyle]=\\\"{'background-color': element?.status === 'ACTIVE' ? 'white' : '#ffbebe' }\\\">\\r\\n            {{ element?.membersAffiliation?.description }}\\r\\n          </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"companyTelephoneNo\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef > Telephone Number </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"viewCompany(element)\\\" [ngStyle]=\\\"{'background-color': element?.status === 'ACTIVE' ? 'white' : '#ffbebe' }\\\">\\r\\n            {{ element?.companyTelephoneNo }} </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <!-- <ng-container matColumnDef=\\\"companyFaxNo\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef > Fax Number</th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\"\\r\\n          (click)=\\\"viewCompany(element)\\\">\\r\\n            {{ element?.companyFaxNo }}\\r\\n          </td>\\r\\n        </ng-container> -->\\r\\n\\r\\n        <ng-container matColumnDef=\\\"companyTin\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef > TIN </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"viewCompany(element)\\\" [ngStyle]=\\\"{'background-color': element?.status === 'ACTIVE' ? 'white' : '#ffbebe' }\\\">\\r\\n            {{ element?.companyTin }}\\r\\n          </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"country\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef > Country </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"viewCompany(element)\\\" [ngStyle]=\\\"{'background-color': element?.status === 'ACTIVE' ? 'white' : '#ffbebe' }\\\">\\r\\n            {{ element?.country?.name }}\\r\\n          </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"completeAddress\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef > Address </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"viewCompany(element)\\\" [ngStyle]=\\\"{'background-color': element?.status === 'ACTIVE' ? 'white' : '#ffbebe' }\\\">\\r\\n            {{ element?.completeAddress }}\\r\\n          </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"delinquent\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef> Delinquent </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"viewCompany(element)\\\" [ngStyle]=\\\"{'background-color': element?.status === 'ACTIVE' ? 'white' : '#ffbebe' }\\\">\\r\\n            {{ element?.delinquent ? 'Yes' : 'No' }}\\r\\n          </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"status\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef > Status </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"viewCompany(element)\\\" [ngStyle]=\\\"{'background-color': element?.status === 'ACTIVE' ? 'white' : '#ffbebe' }\\\">\\r\\n            {{ element?.status?.replaceAll('_', ' ') }}\\r\\n          </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"action\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef > Action </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"deleteCompany(element)\\\" [ngStyle]=\\\"{'background-color': element?.status === 'ACTIVE' ? 'white' : '#ffbebe' }\\\">\\r\\n            <span class=\\\"material-icons\\\" matTooltip=\\\"Delete\\\">delete</span>\\r\\n          </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n      </table>\\r\\n      <div class=\\\"no-record\\\" [hidden]=\\\"dataSource && dataSource?.data?.length > 0\\\">\\r\\n        No record found.\\r\\n      </div>\\r\\n      <mat-paginator [pageSizeOptions]=\\\"[10, 20, 30]\\\" showFirstLastButtons></mat-paginator>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ListCompanyComponent } from './list-company.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ListCompanyComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ListCompanyRoutingModule { }\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcGFnZXMvY29tcGFueS9saXN0LWNvbXBhbnkvbGlzdC1jb21wYW55LmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit, ViewChild, AfterViewInit } from '@angular/core';\r\nimport { ApiService, SweetAlertService } from '@services';\r\nimport { Company } from '@models';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource, MatTable } from '@angular/material/table';\r\nimport { ENDPOINTS } from '@shared';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { Router } from '@angular/router';\r\nimport { AddressService } from '../../../../core/services/address/address.service';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-list-company',\r\n  templateUrl: './list-company.component.html',\r\n  styleUrls: ['./list-company.component.scss']\r\n})\r\nexport class ListCompanyComponent implements OnInit, AfterViewInit {\r\n  @ViewChild(MatPaginator, { static: false }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: false }) sort: MatSort;\r\n  @ViewChild(MatTable, { static: false }) table: MatTable<Company>;\r\n  dataSource: MatTableDataSource<Company>;\r\n  displayedColumns: string[] = ['companyName', 'membersAffiliation', 'companyTelephoneNo', 'companyTin', 'country', 'completeAddress', 'delinquent', 'status', 'action'];\r\n\r\n  companyList = [];\r\n  regionsList = [];\r\n  provinceList = [];\r\n  cityMunicipalityList = [];\r\n  barangayList = [];\r\n\r\n  constructor(\r\n    private apiService: ApiService,\r\n    private addressService: AddressService,\r\n    private sweetAlertService: SweetAlertService,\r\n    private router: Router\r\n  ) {\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getList();\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n   // this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  getList(): void {\r\n    this.apiService.findAll(ENDPOINTS.company).subscribe((res: any) => {\r\n      // res.responseData.data.forEach(element => {\r\n      // this.addressService.getBarangay(element.barangay.barangayId).subscribe(\r\n      //   (res: any) => {\r\n      //     console.log(res.responseData.data);\r\n\r\n      //     element.address = res.responseData.data.cityMunicipality.province.region.regionName + \" - \" +\r\n      //       res.responseData.data.barangayName + \" \" +\r\n      //       res.responseData.data.cityMunicipality.cityMunicipalityName + \", \" +\r\n      //       res.responseData.data.cityMunicipality.province.provinceName;\r\n      //   });\r\n      // });\r\n\r\n      this.companyList = res.responseData.data;\r\n      this.dataSource = new MatTableDataSource<Company>(res.responseData.data);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    });\r\n  }\r\n\r\n  public doFilter = (value: string) => {\r\n    this.dataSource.filter = value.trim().toLocaleLowerCase();\r\n  }\r\n\r\n\r\n  viewCompany(data: any): void {\r\n    this.router.navigate(['asc/page/company/update/', data.id]);\r\n  }\r\n\r\n  deleteCompany(companyParam) {\r\n\r\n    Swal.fire({\r\n      text: 'Are you sure you want to delete this company?',\r\n      icon: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Confirm'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.apiService.deleteById(ENDPOINTS.company, companyParam.id).subscribe(\r\n          () => {\r\n            this.sweetAlertService.customSuccessMessage('Company successfully deleted.');\r\n            this.getList();\r\n          }\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { ListCompanyRoutingModule } from './list-company-routing.module';\r\nimport { ListCompanyComponent } from './list-company.component';\r\nimport { AngularMaterialModule } from '@shared';\r\n\r\n\r\n@NgModule({\r\n  declarations: [ ListCompanyComponent ],\r\n  imports: [\r\n    CommonModule,\r\n    ListCompanyRoutingModule,\r\n    AngularMaterialModule\r\n  ]\r\n})\r\nexport class ListCompanyModule { }\r\n"]}