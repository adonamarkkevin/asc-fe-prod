{"version":3,"sources":["webpack:///src/app/modules/pages/company/list-company/list-company-routing.module.ts","webpack:///src/app/modules/pages/company/list-company/list-company.component.ts","webpack:///src/app/modules/pages/company/list-company/list-company.component.html","webpack:///src/app/modules/pages/company/list-company/list-company.module.ts"],"names":["routes","path","component","ListCompanyRoutingModule","forChild","ListCompanyComponent","apiService","addressService","sweetAlertService","router","displayedColumns","companyList","regionsList","provinceList","cityMunicipalityList","barangayList","doFilter","value","dataSource","filter","trim","toLocaleLowerCase","getList","findAll","company","subscribe","res","responseData","data","paginator","sort","navigate","id","companyParam","fire","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","deleteById","customSuccessMessage","ListCompanyModule"],"mappings":"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","file":"default~applications-applications-module~list-company-list-company-module~modules-pages-landing-page~e873ff00-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ListCompanyComponent } from './list-company.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ListCompanyComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ListCompanyRoutingModule { }\n","import { Component, OnInit, ViewChild, AfterViewInit } from '@angular/core';\nimport { ApiService, SweetAlertService } from '@services';\nimport { Company } from '@models';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource, MatTable } from '@angular/material/table';\nimport { ENDPOINTS } from '@shared';\nimport { MatSort } from '@angular/material/sort';\nimport { Router } from '@angular/router';\nimport { AddressService } from '../../../../core/services/address/address.service';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-list-company',\n  templateUrl: './list-company.component.html',\n  styleUrls: ['./list-company.component.scss']\n})\nexport class ListCompanyComponent implements OnInit, AfterViewInit {\n  @ViewChild(MatPaginator, { static: false }) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: false }) sort: MatSort;\n  @ViewChild(MatTable, { static: false }) table: MatTable<Company>;\n  dataSource: MatTableDataSource<Company>;\n  displayedColumns: string[] = ['companyName', 'membersAffiliation', 'companyTelephoneNo', 'companyTin', 'country', 'completeAddress', 'delinquent', 'status', 'action'];\n\n  companyList = [];\n  regionsList = [];\n  provinceList = [];\n  cityMunicipalityList = [];\n  barangayList = [];\n\n  constructor(\n    private apiService: ApiService,\n    private addressService: AddressService,\n    private sweetAlertService: SweetAlertService,\n    private router: Router\n  ) {\n\n  }\n\n  ngOnInit(): void {\n    this.getList();\n  }\n\n  ngAfterViewInit(): void {\n   // this.dataSource.sort = this.sort;\n  }\n\n  getList(): void {\n    this.apiService.findAll(ENDPOINTS.company).subscribe((res: any) => {\n      // res.responseData.data.forEach(element => {\n      // this.addressService.getBarangay(element.barangay.barangayId).subscribe(\n      //   (res: any) => {\n      //     console.log(res.responseData.data);\n\n      //     element.address = res.responseData.data.cityMunicipality.province.region.regionName + \" - \" +\n      //       res.responseData.data.barangayName + \" \" +\n      //       res.responseData.data.cityMunicipality.cityMunicipalityName + \", \" +\n      //       res.responseData.data.cityMunicipality.province.provinceName;\n      //   });\n      // });\n\n      this.companyList = res.responseData.data;\n      this.dataSource = new MatTableDataSource<Company>(res.responseData.data);\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n    });\n  }\n\n  public doFilter = (value: string) => {\n    this.dataSource.filter = value.trim().toLocaleLowerCase();\n  }\n\n\n  viewCompany(data: any): void {\n    this.router.navigate(['asc/page/company/update/', data.id]);\n  }\n\n  deleteCompany(companyParam) {\n\n    Swal.fire({\n      text: 'Are you sure you want to delete this company?',\n      icon: 'question',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Confirm'\n    }).then((result) => {\n      if (result.value) {\n        this.apiService.deleteById(ENDPOINTS.company, companyParam.id).subscribe(\n          () => {\n            this.sweetAlertService.customSuccessMessage('Company successfully deleted.');\n            this.getList();\n          }\n        );\n      }\n    });\n  }\n\n}\n","<form>\n  <div class=\"container-fluid\">\n    <div class=\"row\">\n      <div class=\"col-md-12 title\">\n        <mat-label>\n          <mat-icon>apartment</mat-icon> Company\n        </mat-label>\n\n        <button class=\"button-right\" mat-raised-button color=\"primary\" [routerLink]=\"['/asc/page/company/add']\">\n          <mat-icon>add</mat-icon> ADD COMPANY\n        </button>\n      </div>\n    </div>\n    <br>\n    <div class=\"col-md-5\" fxLayout fxLayoutAlign=\"center center\">\n      <mat-form-field>\n        <input matInput type=\"text\" (keyup)=\"doFilter($event.target.value)\" placeholder=\"Search\">\n      </mat-form-field>\n    </div>\n    <div class=\"mat-elevation-z8 fields\">\n      <table mat-table [dataSource]=\"dataSource\" matSort>\n\n        <ng-container matColumnDef=\"companyName\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Company Name </th>\n          <td mat-cell *matCellDef=\"let element\" (click)=\"viewCompany(element)\" [ngStyle]=\"{'background-color': element?.status === 'ACTIVE' ? 'white' : '#ffbebe' }\"> {{ element?.companyName }} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"membersAffiliation\">\n          <th mat-header-cell *matHeaderCellDef > Members Affiliation </th>\n          <td mat-cell *matCellDef=\"let element\" (click)=\"viewCompany(element)\" [ngStyle]=\"{'background-color': element?.status === 'ACTIVE' ? 'white' : '#ffbebe' }\">\n            {{ element?.membersAffiliation?.description }}\n          </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"companyTelephoneNo\">\n          <th mat-header-cell *matHeaderCellDef > Telephone Number </th>\n          <td mat-cell *matCellDef=\"let element\" (click)=\"viewCompany(element)\" [ngStyle]=\"{'background-color': element?.status === 'ACTIVE' ? 'white' : '#ffbebe' }\">\n            {{ element?.companyTelephoneNo }} </td>\n        </ng-container>\n\n        <!-- <ng-container matColumnDef=\"companyFaxNo\">\n          <th mat-header-cell *matHeaderCellDef > Fax Number</th>\n          <td mat-cell *matCellDef=\"let element\"\n          (click)=\"viewCompany(element)\">\n            {{ element?.companyFaxNo }}\n          </td>\n        </ng-container> -->\n\n        <ng-container matColumnDef=\"companyTin\">\n          <th mat-header-cell *matHeaderCellDef > TIN </th>\n          <td mat-cell *matCellDef=\"let element\" (click)=\"viewCompany(element)\" [ngStyle]=\"{'background-color': element?.status === 'ACTIVE' ? 'white' : '#ffbebe' }\">\n            {{ element?.companyTin }}\n          </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"country\">\n          <th mat-header-cell *matHeaderCellDef > Country </th>\n          <td mat-cell *matCellDef=\"let element\" (click)=\"viewCompany(element)\" [ngStyle]=\"{'background-color': element?.status === 'ACTIVE' ? 'white' : '#ffbebe' }\">\n            {{ element?.country?.name }}\n          </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"completeAddress\">\n          <th mat-header-cell *matHeaderCellDef > Address </th>\n          <td mat-cell *matCellDef=\"let element\" (click)=\"viewCompany(element)\" [ngStyle]=\"{'background-color': element?.status === 'ACTIVE' ? 'white' : '#ffbebe' }\">\n            {{ element?.completeAddress }}\n          </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"delinquent\">\n          <th mat-header-cell *matHeaderCellDef> Delinquent </th>\n          <td mat-cell *matCellDef=\"let element\" (click)=\"viewCompany(element)\" [ngStyle]=\"{'background-color': element?.status === 'ACTIVE' ? 'white' : '#ffbebe' }\">\n            {{ element?.delinquent ? 'Yes' : 'No' }}\n          </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"status\">\n          <th mat-header-cell *matHeaderCellDef > Status </th>\n          <td mat-cell *matCellDef=\"let element\" (click)=\"viewCompany(element)\" [ngStyle]=\"{'background-color': element?.status === 'ACTIVE' ? 'white' : '#ffbebe' }\">\n            {{ element?.status?.replaceAll('_', ' ') }}\n          </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"action\">\n          <th mat-header-cell *matHeaderCellDef > Action </th>\n          <td mat-cell *matCellDef=\"let element\" (click)=\"deleteCompany(element)\" [ngStyle]=\"{'background-color': element?.status === 'ACTIVE' ? 'white' : '#ffbebe' }\">\n            <span class=\"material-icons\" matTooltip=\"Delete\">delete</span>\n          </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n      </table>\n      <div class=\"no-record\" [hidden]=\"dataSource && dataSource?.data?.length > 0\">\n        No record found.\n      </div>\n      <mat-paginator [pageSizeOptions]=\"[10, 20, 30]\" showFirstLastButtons></mat-paginator>\n\n    </div>\n  </div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ListCompanyRoutingModule } from './list-company-routing.module';\nimport { ListCompanyComponent } from './list-company.component';\nimport { AngularMaterialModule } from '@shared';\n\n\n@NgModule({\n  declarations: [ ListCompanyComponent ],\n  imports: [\n    CommonModule,\n    ListCompanyRoutingModule,\n    AngularMaterialModule\n  ]\n})\nexport class ListCompanyModule { }\n"]}