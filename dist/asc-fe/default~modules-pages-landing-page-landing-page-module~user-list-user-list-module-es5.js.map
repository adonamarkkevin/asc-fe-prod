{"version":3,"sources":["webpack:///src/app/modules/pages/account/user-list/user-list.module.ts","webpack:///src/app/modules/pages/account/user-list/user-list-routing.module.ts","webpack:///src/app/modules/pages/account/user-list/user-list.component.ts","webpack:///src/app/modules/pages/account/user-list/user-list.component.html","webpack:///src/app/modules/pages/account/user-list/user-list-dialog.html"],"names":["UserListModule","routes","path","component","UserListRoutingModule","forChild","UserListComponent","apiService","router","dataStorage","dialog","spinner","displayedColumns","email","allUserLists","pendingUserLists","getList","show","findAll","userAccount","subscribe","res","responseData","data","dataSource","paginator","sort","setTimeout","hide","id","navigate","saveUserAccountId","event","filterValue","target","value","filter","trim","toLowerCase","dataSource2","i","status","dialogRef","open","UserListDialog","width","height","afterClosed","result","console","log","applyFilter1","sweetAlertService","userAccounts","mailTo","username","user","firstName","lastName","save","emailApproved","undefined","customSuccessMessage","close","onApprove","onDisapprove","onNoClick"],"mappings":"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","file":"default~modules-pages-landing-page-landing-page-module~user-list-user-list-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { UserListRoutingModule } from './user-list-routing.module';\nimport { UserListComponent } from './user-list.component';\nimport { AngularMaterialModule } from '@shared';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FragmentsModule } from '../../../fragments/fragments.module';\n\n\n@NgModule({\n  declarations: [UserListComponent],\n  imports: [\n    CommonModule,\n    UserListRoutingModule,\n    HttpClientModule,\n    AngularMaterialModule,\n    FragmentsModule\n  ]\n})\nexport class UserListModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { UserListComponent } from './user-list.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UserListComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class UserListRoutingModule { }\n","import { Component, Inject, OnInit, ViewChild } from '@angular/core';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTable, MatTableDataSource } from '@angular/material/table';\nimport { Router } from '@angular/router';\nimport { UserAccount} from '@models';\nimport { ApiService, DataStorageService, SweetAlertService } from '@services';\nimport { ENDPOINTS } from '@shared';\nimport { Email } from '../../../../core/models/email.model';\nimport Swal from 'sweetalert2';\nimport { NgxSpinnerService } from 'ngx-spinner';\n\nexport interface DialogData {\n  userAccount: any;\n  // userAccount: '';\n}\n@Component({\n  selector: 'app-user-list',\n  templateUrl: './user-list.component.html',\n  styleUrls: ['./user-list.component.scss']\n})\nexport class UserListComponent implements OnInit {\n\n  @ViewChild(MatPaginator, { static: false }) paginator: MatPaginator;\n  @ViewChild(MatPaginator, { static: false }) paginator2: MatPaginator;\n  @ViewChild(MatSort, { static: false }) sort: MatSort;\n  @ViewChild(MatSort, { static: false }) sort2: MatSort;\n  @ViewChild(MatTable, { static: false }) table: MatTable<UserAccount>;\n  dataSource: MatTableDataSource<UserAccount>;\n  dataSource2: MatTableDataSource<UserAccount>;\n  displayedColumns: string[] = [\n    'userAvatar',\n    'fullName',\n    'companyName',\n    'status'\n    ];\n\n  email = new Email();\n  allUserLists = [];\n  pendingUserLists = [];\n\n  username: string;\n\n  constructor(\n    private apiService: ApiService,\n    private router: Router,\n    private dataStorage: DataStorageService,\n    public dialog: MatDialog,\n    private spinner: NgxSpinnerService\n  ) { }\n\n  ngOnInit(): void {\n    this.getList();\n    this.spinner.show();\n  }\n\n  getList(): void{\n    this.apiService.findAll(ENDPOINTS.userAccount).subscribe(\n      (res : any) => {\n        this.allUserLists = res.responseData.data;\n        // console.log(\"ALL\",this.allUserLists );\n        this.dataSource = new MatTableDataSource<UserAccount>(res.responseData.data);\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n        setTimeout(() => {\n          this.spinner.hide();\n        }, 1);\n      }\n    );\n\n    // this.apiService.findAll(ENDPOINTS.getPendingAccounts).subscribe(\n    //   (res:any) => {\n    //     this.pendingUserLists = res.responseData.data;\n    //     this.dataSource2 = new MatTableDataSource<UserAccount>(res.responseData.data);\n    //     this.dataSource2.paginator = this.paginator2;\n    //     this.dataSource2.sort = this.sort2;\n    //   }\n    // );\n  }\n\n  getUser(id): void{\n    this.router.navigate(['/asc/page/account/user-registration']);\n    this.dataStorage.saveUserAccountId(id);\n  }\n\n  applyFilter1(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n  applyFilter2(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource2.filter = filterValue.trim().toLowerCase();\n  }\n\n  openDialog(i:any): void {\n   \n    if(i.status === \"PENDING\"){\n      const dialogRef = this.dialog.open(UserListDialog, {\n        width: '40%',\n        height: '100%',\n        data: {\n          userAccount: i\n        }\n        // data: {\n        //   isFromModal: true,\n        //   isUserRegistration: true\n        // }\n      });\n      dialogRef.afterClosed().subscribe(result => {\n        console.log('The dialog was closed');\n        this.getList();\n      });\n    }else{\n      this.router.navigate(['asc/page/account/user-update/', i.id]);\n    }\n  }\n\n}\n\n\n@Component({\n  selector: 'app-user-list',\n  templateUrl: 'user-list-dialog.html',\n  styleUrls: ['./user-list.component.scss']\n})\nexport class UserListDialog {\n  \n  constructor(  private apiService: ApiService,\n                private sweetAlertService: SweetAlertService,\n                public dialogRef: MatDialogRef<UserListComponent>,\n                @Inject(MAT_DIALOG_DATA) public data: DialogData) {}\n\n  email = new Email();\n  userAccounts = new UserAccount();\n\n\n  ngOnInit(): void{\n    // console.log(this.data);\n    // this.userAccounts = this.data.userAccount;\n    \n  }\n\n    onApprove(): void{\n      // console.log(\"APPROVED\", this.data.userAccount.username);\n      this.email.mailTo = this.data.userAccount.username;\n      this.email.user = this.data.userAccount.firstName + ' ' + this.data.userAccount.lastName;\n          this.apiService.save(ENDPOINTS.emailApproved + '/' + this.data.userAccount.username, this.data.userAccount).subscribe(\n            (res:any) => {\n              if (res != undefined) {\n                // this.sweetAlertService.success(res);\n                this.sweetAlertService.customSuccessMessage('Email verification successfully sent.');\n                // this.apiService.save(ENDPOINTS.sendEmail, this.email).subscribe(\n                //   (res:any) => {\n                //     this.sweetAlertService.customSuccessMessage('Verification email has been sent!');\n                //   });\n              }\n            });\n    }\n    onNoClick(): void {\n      this.dialogRef.close();\n    }\n    onDisapprove(): void{\n      \n    }\n}","<!--\n\n  NOTE ! ! ! NOT IN USED. Go to User Account Component.\n\n --><form>\n  <div class=\"container-fluid\">\n    <!-- <app-form-list [dataSource]=\"dataSource\" [displayedColumns]=\"displayedColumns\"\n      (selectInListFunction)=\"getAllAccounts()\"></app-form-list> -->\n    <div class=\"row\">\n      <div class=\"col-md-12 title\">\n        <mat-label>\n          <mat-icon>group</mat-icon> Account List\n        </mat-label>\n      </div>\n    </div>\n\n    <form>\n      <mat-form-field class=\"col-md-6\" appearance=\"outline\">\n        <mat-label>Search Account</mat-label>\n        <input matInput (keyup)=\"applyFilter1($event)\" placeholder=\"Search\" #input>\n        <mat-icon matSuffix>search</mat-icon>\n      </mat-form-field>\n\n      <div class=\"mat-elevation-z8\">\n        <table mat-table [dataSource]=\"dataSource\" matSort>\n          <ng-container matColumnDef=\"userAvatar\">\n            <th mat-header-cell *matHeaderCellDef> Image </th>\n            <td mat-cell *matCellDef=\"let element\" (click)=\"openDialog(element)\"> <img\n                src=\"../../../../../assets/images/asc-icon.ico\" alt=\"\"> </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"fullName\">\n            <th mat-header-cell *matHeaderCellDef> Account name </th>\n            <td mat-cell *matCellDef=\"let element\" (click)=\"openDialog(element)\"> {{ element?.firstName }}\n              {{ element?.middleName }} {{ element?.lastName }} </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"companyName\">\n            <th mat-header-cell *matHeaderCellDef> Company </th>\n            <td mat-cell *matCellDef=\"let element\" (click)=\"openDialog(element)\">\n              {{ element?.company.companyName }} </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"status\">\n            <th mat-header-cell *matHeaderCellDef> Status </th>\n            <td mat-cell *matCellDef=\"let element\" (click)=\"openDialog(element)\">\n              <span class=\"badge rounded-pill\" [ngClass]=\"element?.status === 'ACTIVE' || element?.status === 'APPROVED' ? 'bg-success' :\n                 element?.status === 'PENDING' ? 'bg-danger' :\n                 element?.status === 'VERIFICATION_SENT' ? 'bg-warning' : 'no-status-match' \">\n                {{ element?.status }}\n              </span>\n            </td>\n          </ng-container>\n\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n          <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n        </table>\n        <div class=\"no-record\" [hidden]=\"dataSource && dataSource?.data?.length > 0\">\n          No record found.\n        </div>\n        <mat-paginator [pageSizeOptions]=\"[10, 20, 30]\" showFirstLastButtons></mat-paginator>\n\n      </div>\n    </form>\n\n    <!-- <mat-tab-group>\n      <mat-tab>\n        <ng-template mat-tab-label>\n          <i class=\"material-icons\">group</i>\n          All User Account\n        </ng-template>\n\n      </mat-tab>\n\n      <mat-tab>\n        <ng-template mat-tab-label>\n          <i class=\"material-icons\">person_add_alt</i>\n          Pending Accounts\n        </ng-template>\n        <form>\n          <mat-form-field class=\"col-md-6\" appearance=\"outline\">\n            <mat-label>Search Account</mat-label>\n            <input matInput (keyup)=\"applyFilter2($event)\" placeholder=\"Search\" #input>\n            <mat-icon matSuffix>search</mat-icon>\n          </mat-form-field>\n\n          <div class=\"mat-elevation-z8\">\n            <table mat-table [dataSource]=\"dataSource2\" matSort>\n              <ng-container matColumnDef=\"userAvatar\">\n                <th mat-header-cell *matHeaderCellDef> Image </th>\n                <td mat-cell *matCellDef=\"let element\"> <img\n                    src=\"../../../../../assets/images/asc-icon.ico\" alt=\"\"> </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"fullName\">\n                <th mat-header-cell *matHeaderCellDef> Account name </th>\n                <td mat-cell *matCellDef=\"let element\" (click)=\"openDialog(element)\"> {{ element?.firstName }}\n                  {{ element?.middleName }} {{ element?.lastName }} </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"companyName\">\n                <th mat-header-cell *matHeaderCellDef> Company </th>\n                <td mat-cell *matCellDef=\"let element\">\n                  {{ element?.company.companyName }} </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"status\">\n                <th mat-header-cell *matHeaderCellDef> Status </th>\n                <td mat-cell *matCellDef=\"let element\">\n                  <span class=\"badge rounded-pill\" [ngClass]=\"element?.status === 'ACTIVE' ? 'bg-success' :\n                   element?.status === 'PENDING' ? 'bg-danger' :\n                   element?.status === 'VERIFICATION_SENT' ? 'bg-warning' : 'no-status-match' \">\n                    {{ element?.status }}\n                  </span>\n                </td>\n              </ng-container>\n\n              <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n              <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n            </table>\n            <div class=\"no-record\" [hidden]=\"dataSource2 && dataSource2?.data?.length > 0\">\n              No record found.\n            </div>\n            <mat-paginator [pageSizeOptions]=\"[10, 20, 40]\" showFirstLastButtons></mat-paginator>\n\n          </div>\n        </form>\n      </mat-tab> -->\n\n      <!-- <mat-tab>\n        <ng-template mat-tab-label>\n          <mat-icon class=\"example-tab-icon\">thumb_up</mat-icon>\n          Third\n        </ng-template>\n\n        Content 3\n      </mat-tab> -->\n    <!-- </mat-tab-group> -->\n\n  </div>\n</form>\n","\n<!-- <div class=\"row\">\n    <div class=\"col-12 username\">\n        <p>{{data.username}}</p>\n    </div>\n</div>\n<div class=\"row fullname\">\n    <div class=\"col-12\">\n        <p>{{data.fullname}}</p>\n    </div>\n</div> -->\n<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-12 icon\">\n            <i class=\"material-icons\">contact_support</i>\n        </div>\n    </div>\n    <div class=\"row message\">\n        <div class=\"col-12\">\n            <p>Do you want to send verification email to <b class=\"fullname\">{{data.userAccount.username}}</b> ?</p>\n        </div>\n    </div>\n    <div class=\"details\">\n        <div class=\"row \">\n            <div class=\"col-md-12\">\n                <label><i class=\"material-icons\">contact_mail</i> User Information: </label>\n                <p><i class=\"material-icons\">arrow_right</i><b>Full name: </b> {{data.userAccount.firstName}} {{data.userAccount.lastName}}</p>\n                <p><i class=\"material-icons\">arrow_right</i><b>Username: </b> {{data.userAccount.username}}</p>\n                <p><i class=\"material-icons\">arrow_right</i><b>User Role: </b> {{data.userAccount.userRole.name}}</p>\n                <p><i class=\"material-icons\">arrow_right</i><b>Mobile Number: </b> {{data.userAccount.mobileNumber}}</p>\n                <p><i class=\"material-icons\">arrow_right</i><b>Status: </b>  <span class=\"badge rounded-pill bg-danger\" >{{data.userAccount.status}}</span></p>\n            </div>\n        </div><hr>\n        <div class=\"row \">\n            <div class=\"col-md-12\">\n                <label><i class=\"material-icons\">business</i> Company Information:</label>\n                <p><i class=\"material-icons\">arrow_right</i><b>Company Name: </b> {{data.userAccount.company.companyName}}</p>\n                <p><i class=\"material-icons\">arrow_right</i><b>Company Address: </b> {{data.userAccount.company.completeAddress}}</p>\n                <p><i class=\"material-icons\">arrow_right</i><b>Company Fax: </b> {{data.userAccount.company.companyFaxNo}}</p>\n                <p><i class=\"material-icons\">arrow_right</i><b>Company Telephone: </b> {{data.userAccount.company.companyTelephoneNo}}</p>\n                <p><i class=\"material-icons\">arrow_right</i><b>Company Tin: </b> {{data.userAccount.company.companyTin}}</p>\n                <p><i class=\"material-icons\">arrow_right</i><b>Members Affiliation: </b> {{data.userAccount.membersAffiliation.description}}</p>\n            </div>\n        </div>\n    </div>\n\n    <hr>\n\n    <div class=\"row\">\n        <div mat-dialog-actions>\n            <div class=\"dialog-button-content\" align=\"end\">\n                <button class=\"confirm\" (click)=\"onApprove()\"><i class=\"material-icons color__white\">thumb_up_alt</i>Approve</button>\n                <button class=\"warn\" (click)=\"onDisapprove()\"><i class=\"material-icons color__white\">thumb_down_alt</i>Disapprove</button>\n                <button class=\"caution\" (click)=\"onNoClick()\"><i class=\"material-icons color__white\">keyboard_return</i>Return</button>\n            </div>\n        </div>\n    </div>\n</div>\n\n"]}