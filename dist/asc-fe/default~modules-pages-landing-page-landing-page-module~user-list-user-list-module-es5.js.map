{"version":3,"sources":["webpack:///src/app/modules/pages/account/user-list/user-list.component.html","webpack:///src/app/modules/pages/account/user-list/user-list.module.ts","webpack:///src/app/modules/pages/account/user-list/user-list.component.scss","webpack:///src/app/modules/pages/account/user-list/user-list-dialog.html","webpack:///src/app/modules/pages/account/user-list/user-list-routing.module.ts","webpack:///src/app/modules/pages/account/user-list/user-list.component.ts"],"names":["UserListModule","declarations","imports","routes","path","component","UserListRoutingModule","forChild","exports","UserListComponent","apiService","router","dataStorage","dialog","spinner","displayedColumns","email","allUserLists","pendingUserLists","getList","show","findAll","userAccount","subscribe","res","responseData","data","dataSource","paginator","sort","setTimeout","hide","id","navigate","saveUserAccountId","event","filterValue","target","value","filter","trim","toLowerCase","dataSource2","i","status","dialogRef","open","UserListDialog","width","height","afterClosed","result","console","log","selector","template","sweetAlertService","userAccounts","mailTo","username","user","firstName","lastName","save","emailApproved","undefined","customSuccessMessage","close"],"mappings":"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","file":"default~modules-pages-landing-page-landing-page-module~user-list-user-list-module-es5.js","sourcesContent":["export default \"<!--\\r\\n\\r\\n  NOTE ! ! ! NOT IN USED. Go to User Account Component.\\r\\n\\r\\n --><form>\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <!-- <app-form-list [dataSource]=\\\"dataSource\\\" [displayedColumns]=\\\"displayedColumns\\\"\\r\\n      (selectInListFunction)=\\\"getAllAccounts()\\\"></app-form-list> -->\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12 title\\\">\\r\\n        <mat-label>\\r\\n          <mat-icon>group</mat-icon> Account List\\r\\n        </mat-label>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <form>\\r\\n      <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\">\\r\\n        <mat-label>Search Account</mat-label>\\r\\n        <input matInput (keyup)=\\\"applyFilter1($event)\\\" placeholder=\\\"Search\\\" #input>\\r\\n        <mat-icon matSuffix>search</mat-icon>\\r\\n      </mat-form-field>\\r\\n\\r\\n      <div class=\\\"mat-elevation-z8\\\">\\r\\n        <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\r\\n          <ng-container matColumnDef=\\\"userAvatar\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef> Image </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"openDialog(element)\\\"> <img\\r\\n                src=\\\"../../../../../assets/images/asc-icon.ico\\\" alt=\\\"\\\"> </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"fullName\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef> Account name </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"openDialog(element)\\\"> {{ element?.firstName }}\\r\\n              {{ element?.middleName }} {{ element?.lastName }} </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"companyName\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef> Company </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"openDialog(element)\\\">\\r\\n              {{ element?.company.companyName }} </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"status\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef> Status </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"openDialog(element)\\\">\\r\\n              <span class=\\\"badge rounded-pill\\\" [ngClass]=\\\"element?.status === 'ACTIVE' || element?.status === 'APPROVED' ? 'bg-success' :\\r\\n                 element?.status === 'PENDING' ? 'bg-danger' :\\r\\n                 element?.status === 'VERIFICATION_SENT' ? 'bg-warning' : 'no-status-match' \\\">\\r\\n                {{ element?.status }}\\r\\n              </span>\\r\\n            </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n          <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n        </table>\\r\\n        <div class=\\\"no-record\\\" [hidden]=\\\"dataSource && dataSource?.data?.length > 0\\\">\\r\\n          No record found.\\r\\n        </div>\\r\\n        <mat-paginator [pageSizeOptions]=\\\"[10, 20, 30]\\\" showFirstLastButtons></mat-paginator>\\r\\n\\r\\n      </div>\\r\\n    </form>\\r\\n\\r\\n    <!-- <mat-tab-group>\\r\\n      <mat-tab>\\r\\n        <ng-template mat-tab-label>\\r\\n          <i class=\\\"material-icons\\\">group</i>\\r\\n          All User Account\\r\\n        </ng-template>\\r\\n\\r\\n      </mat-tab>\\r\\n\\r\\n      <mat-tab>\\r\\n        <ng-template mat-tab-label>\\r\\n          <i class=\\\"material-icons\\\">person_add_alt</i>\\r\\n          Pending Accounts\\r\\n        </ng-template>\\r\\n        <form>\\r\\n          <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\">\\r\\n            <mat-label>Search Account</mat-label>\\r\\n            <input matInput (keyup)=\\\"applyFilter2($event)\\\" placeholder=\\\"Search\\\" #input>\\r\\n            <mat-icon matSuffix>search</mat-icon>\\r\\n          </mat-form-field>\\r\\n\\r\\n          <div class=\\\"mat-elevation-z8\\\">\\r\\n            <table mat-table [dataSource]=\\\"dataSource2\\\" matSort>\\r\\n              <ng-container matColumnDef=\\\"userAvatar\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef> Image </th>\\r\\n                <td mat-cell *matCellDef=\\\"let element\\\"> <img\\r\\n                    src=\\\"../../../../../assets/images/asc-icon.ico\\\" alt=\\\"\\\"> </td>\\r\\n              </ng-container>\\r\\n\\r\\n              <ng-container matColumnDef=\\\"fullName\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef> Account name </th>\\r\\n                <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"openDialog(element)\\\"> {{ element?.firstName }}\\r\\n                  {{ element?.middleName }} {{ element?.lastName }} </td>\\r\\n              </ng-container>\\r\\n\\r\\n              <ng-container matColumnDef=\\\"companyName\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef> Company </th>\\r\\n                <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n                  {{ element?.company.companyName }} </td>\\r\\n              </ng-container>\\r\\n\\r\\n              <ng-container matColumnDef=\\\"status\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef> Status </th>\\r\\n                <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n                  <span class=\\\"badge rounded-pill\\\" [ngClass]=\\\"element?.status === 'ACTIVE' ? 'bg-success' :\\r\\n                   element?.status === 'PENDING' ? 'bg-danger' :\\r\\n                   element?.status === 'VERIFICATION_SENT' ? 'bg-warning' : 'no-status-match' \\\">\\r\\n                    {{ element?.status }}\\r\\n                  </span>\\r\\n                </td>\\r\\n              </ng-container>\\r\\n\\r\\n              <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n              <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n            </table>\\r\\n            <div class=\\\"no-record\\\" [hidden]=\\\"dataSource2 && dataSource2?.data?.length > 0\\\">\\r\\n              No record found.\\r\\n            </div>\\r\\n            <mat-paginator [pageSizeOptions]=\\\"[10, 20, 40]\\\" showFirstLastButtons></mat-paginator>\\r\\n\\r\\n          </div>\\r\\n        </form>\\r\\n      </mat-tab> -->\\r\\n\\r\\n      <!-- <mat-tab>\\r\\n        <ng-template mat-tab-label>\\r\\n          <mat-icon class=\\\"example-tab-icon\\\">thumb_up</mat-icon>\\r\\n          Third\\r\\n        </ng-template>\\r\\n\\r\\n        Content 3\\r\\n      </mat-tab> -->\\r\\n    <!-- </mat-tab-group> -->\\r\\n\\r\\n  </div>\\r\\n</form>\\r\\n\";","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { UserListRoutingModule } from './user-list-routing.module';\r\nimport { UserListComponent } from './user-list.component';\r\nimport { AngularMaterialModule } from '@shared';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FragmentsModule } from '../../../fragments/fragments.module';\r\n\r\n\r\n@NgModule({\r\n  declarations: [UserListComponent],\r\n  imports: [\r\n    CommonModule,\r\n    UserListRoutingModule,\r\n    HttpClientModule,\r\n    AngularMaterialModule,\r\n    FragmentsModule\r\n  ]\r\n})\r\nexport class UserListModule { }\r\n","export default \"img {\\n  border-radius: 10%;\\n  height: 2.2em;\\n  width: 2.2em;\\n}\\n\\ni {\\n  margin: auto 10px;\\n}\\n\\n.icon {\\n  text-align: center;\\n  color: #810000;\\n  margin-bottom: 10px;\\n}\\n\\n.icon i {\\n  font-size: 8em;\\n}\\n\\n.message {\\n  text-align: center;\\n}\\n\\n.message .fullname {\\n  color: green;\\n  font-size: 20px;\\n}\\n\\n.details {\\n  text-align: left;\\n  background-color: rgba(240, 240, 240, 0.24);\\n  padding: 10px 5px;\\n  box-shadow: 10px 10px 9px -3px rgba(0, 0, 0, 0.13);\\n  -webkit-box-shadow: 10px 10px 9px -3px rgba(0, 0, 0, 0.13);\\n  -moz-box-shadow: 10px 10px 9px -3px rgba(0, 0, 0, 0.13);\\n}\\n\\nlabel {\\n  margin-bottom: 10px;\\n  font-weight: 600;\\n}\\n\\n.dialog-button-content {\\n  vertical-align: bottom;\\n  text-align: center;\\n}\\n\\n.dialog-button-content button {\\n  color: white;\\n  border: none;\\n  padding: 5px 10px 5px 0px;\\n  margin: 0px 5px;\\n  font-weight: 500;\\n  border-radius: 5px;\\n}\\n\\n.dialog-button-content .warn {\\n  background-color: red;\\n}\\n\\n.dialog-button-content .caution {\\n  background-color: #dfd000;\\n  color: black;\\n}\\n\\n.dialog-button-content .confirm {\\n  background-color: #449bff;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9wYWdlcy9hY2NvdW50L3VzZXItbGlzdC91c2VyLWxpc3QuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxrQkFBQTtFQUNBLGFBQUE7RUFDQSxZQUFBO0FBQ0o7O0FBRUE7RUFDSSxpQkFBQTtBQUNKOztBQVdBO0VBQ0ksa0JBQUE7RUFFQSxjQUFBO0VBQ0EsbUJBQUE7QUFUSjs7QUFVSTtFQUNJLGNBQUE7QUFSUjs7QUFZQTtFQUNJLGtCQUFBO0FBVEo7O0FBV0k7RUFDSSxZQUFBO0VBQ0EsZUFBQTtBQVRSOztBQVlBO0VBQ0ksZ0JBQUE7RUFDQSwyQ0FBQTtFQUNBLGlCQUFBO0VBQ0Esa0RBQUE7RUFDQSwwREFBQTtFQUNBLHVEQUFBO0FBVEo7O0FBWUE7RUFDSSxtQkFBQTtFQUNBLGdCQUFBO0FBVEo7O0FBWUE7RUFDSSxzQkFBQTtFQUNBLGtCQUFBO0FBVEo7O0FBV0k7RUFDSSxZQUFBO0VBQ0EsWUFBQTtFQUNBLHlCQUFBO0VBQ0EsZUFBQTtFQUNBLGdCQUFBO0VBQ0Esa0JBQUE7QUFUUjs7QUFXSTtFQUNJLHFCQUFBO0FBVFI7O0FBV0k7RUFDSSx5QkFBQTtFQUNBLFlBQUE7QUFUUjs7QUFXSTtFQUNJLHlCQUFBO0FBVFIiLCJmaWxlIjoic3JjL2FwcC9tb2R1bGVzL3BhZ2VzL2FjY291bnQvdXNlci1saXN0L3VzZXItbGlzdC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImltZ3tcclxuICAgIGJvcmRlci1yYWRpdXM6IDEwJTtcclxuICAgIGhlaWdodDogMi4yZW07XHJcbiAgICB3aWR0aDogMi4yZW07XHJcbn1cclxuXHJcbml7XHJcbiAgICBtYXJnaW46IGF1dG8gMTBweDtcclxuXHJcbn1cclxuXHJcbi8vIC5iYWRnZXtcclxuLy8gICAgIHBhZGRpbmc6IDVweCAyMHB4O1xyXG4vLyAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG4vLyAgICAgd2lkdGg6IDEwZW07XHJcbi8vIH1cclxuXHJcblxyXG4vL2Rlc2lnbnMgZm9yIGRpYWxvZ1xyXG4uaWNvbntcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIFxyXG4gICAgY29sb3I6IHJnYigxMjksIDAsIDApO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMTBweDtcclxuICAgIGl7XHJcbiAgICAgICAgZm9udC1zaXplOiA4ZW07XHJcbiAgICB9XHJcbn1cclxuXHJcbi5tZXNzYWdle1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgXHJcbiAgICAuZnVsbG5hbWV7XHJcbiAgICAgICAgY29sb3I6IGdyZWVuO1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMjBweDtcclxuICAgIH0gIFxyXG59XHJcbi5kZXRhaWxze1xyXG4gICAgdGV4dC1hbGlnbjogbGVmdDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjQwLCAyNDAsIDI0MCwgMC4yNCk7XHJcbiAgICBwYWRkaW5nOiAxMHB4IDVweDtcclxuICAgIGJveC1zaGFkb3c6IDEwcHggMTBweCA5cHggLTNweCByZ2JhKDAsMCwwLDAuMTMpO1xyXG4gICAgLXdlYmtpdC1ib3gtc2hhZG93OiAxMHB4IDEwcHggOXB4IC0zcHggcmdiYSgwLDAsMCwwLjEzKTtcclxuICAgIC1tb3otYm94LXNoYWRvdzogMTBweCAxMHB4IDlweCAtM3B4IHJnYmEoMCwwLDAsMC4xMyk7XHJcbn1cclxuXHJcbmxhYmVse1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMTBweDtcclxuICAgIGZvbnQtd2VpZ2h0OiA2MDA7XHJcbn1cclxuXHJcbi5kaWFsb2ctYnV0dG9uLWNvbnRlbnR7XHJcbiAgICB2ZXJ0aWNhbC1hbGlnbjogYm90dG9tO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICBcclxuICAgIGJ1dHRvbntcclxuICAgICAgICBjb2xvcjogd2hpdGU7XHJcbiAgICAgICAgYm9yZGVyOiBub25lO1xyXG4gICAgICAgIHBhZGRpbmc6IDVweCAxMHB4IDVweCAwcHg7IFxyXG4gICAgICAgIG1hcmdpbjogMHB4IDVweDtcclxuICAgICAgICBmb250LXdlaWdodDogNTAwO1xyXG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICAgIH1cclxuICAgIC53YXJue1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IHJlZDtcclxuICAgIH1cclxuICAgIC5jYXV0aW9ue1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYigyMjMsIDIwOCwgMCk7XHJcbiAgICAgICAgY29sb3I6IHJnYigwLCAwLCAwKTtcclxuICAgIH1cclxuICAgIC5jb25maXJte1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYig2OCwgMTU1LCAyNTUpO1xyXG4gICAgfVxyXG59Il19 */\";","export default \"\\r\\n<!-- <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-12 username\\\">\\r\\n        <p>{{data.username}}</p>\\r\\n    </div>\\r\\n</div>\\r\\n<div class=\\\"row fullname\\\">\\r\\n    <div class=\\\"col-12\\\">\\r\\n        <p>{{data.fullname}}</p>\\r\\n    </div>\\r\\n</div> -->\\r\\n<div class=\\\"container\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-12 icon\\\">\\r\\n            <i class=\\\"material-icons\\\">contact_support</i>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"row message\\\">\\r\\n        <div class=\\\"col-12\\\">\\r\\n            <p>Do you want to send verification email to <b class=\\\"fullname\\\">{{data.userAccount.username}}</b> ?</p>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"details\\\">\\r\\n        <div class=\\\"row \\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <label><i class=\\\"material-icons\\\">contact_mail</i> User Information: </label>\\r\\n                <p><i class=\\\"material-icons\\\">arrow_right</i><b>Full name: </b> {{data.userAccount.firstName}} {{data.userAccount.lastName}}</p>\\r\\n                <p><i class=\\\"material-icons\\\">arrow_right</i><b>Username: </b> {{data.userAccount.username}}</p>\\r\\n                <p><i class=\\\"material-icons\\\">arrow_right</i><b>User Role: </b> {{data.userAccount.userRole.name}}</p>\\r\\n                <p><i class=\\\"material-icons\\\">arrow_right</i><b>Mobile Number: </b> {{data.userAccount.mobileNumber}}</p>\\r\\n                <p><i class=\\\"material-icons\\\">arrow_right</i><b>Status: </b>  <span class=\\\"badge rounded-pill bg-danger\\\" >{{data.userAccount.status}}</span></p>\\r\\n            </div>\\r\\n        </div><hr>\\r\\n        <div class=\\\"row \\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <label><i class=\\\"material-icons\\\">business</i> Company Information:</label>\\r\\n                <p><i class=\\\"material-icons\\\">arrow_right</i><b>Company Name: </b> {{data.userAccount.company.companyName}}</p>\\r\\n                <p><i class=\\\"material-icons\\\">arrow_right</i><b>Company Address: </b> {{data.userAccount.company.completeAddress}}</p>\\r\\n                <p><i class=\\\"material-icons\\\">arrow_right</i><b>Company Fax: </b> {{data.userAccount.company.companyFaxNo}}</p>\\r\\n                <p><i class=\\\"material-icons\\\">arrow_right</i><b>Company Telephone: </b> {{data.userAccount.company.companyTelephoneNo}}</p>\\r\\n                <p><i class=\\\"material-icons\\\">arrow_right</i><b>Company Tin: </b> {{data.userAccount.company.companyTin}}</p>\\r\\n                <p><i class=\\\"material-icons\\\">arrow_right</i><b>Members Affiliation: </b> {{data.userAccount.membersAffiliation.description}}</p>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <hr>\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n        <div mat-dialog-actions>\\r\\n            <div class=\\\"dialog-button-content\\\" align=\\\"end\\\">\\r\\n                <button class=\\\"confirm\\\" (click)=\\\"onApprove()\\\"><i class=\\\"material-icons color__white\\\">thumb_up_alt</i>Approve</button>\\r\\n                <button class=\\\"warn\\\" (click)=\\\"onDisapprove()\\\"><i class=\\\"material-icons color__white\\\">thumb_down_alt</i>Disapprove</button>\\r\\n                <button class=\\\"caution\\\" (click)=\\\"onNoClick()\\\"><i class=\\\"material-icons color__white\\\">keyboard_return</i>Return</button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { UserListComponent } from './user-list.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: UserListComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class UserListRoutingModule { }\r\n","import { Component, Inject, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTable, MatTableDataSource } from '@angular/material/table';\r\nimport { Router } from '@angular/router';\r\nimport { UserAccount} from '@models';\r\nimport { ApiService, DataStorageService, SweetAlertService } from '@services';\r\nimport { ENDPOINTS } from '@shared';\r\nimport { Email } from '../../../../core/models/email.model';\r\nimport Swal from 'sweetalert2';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\n\r\nexport interface DialogData {\r\n  userAccount: any;\r\n  // userAccount: '';\r\n}\r\n@Component({\r\n  selector: 'app-user-list',\r\n  templateUrl: './user-list.component.html',\r\n  styleUrls: ['./user-list.component.scss']\r\n})\r\nexport class UserListComponent implements OnInit {\r\n\r\n  @ViewChild(MatPaginator, { static: false }) paginator: MatPaginator;\r\n  @ViewChild(MatPaginator, { static: false }) paginator2: MatPaginator;\r\n  @ViewChild(MatSort, { static: false }) sort: MatSort;\r\n  @ViewChild(MatSort, { static: false }) sort2: MatSort;\r\n  @ViewChild(MatTable, { static: false }) table: MatTable<UserAccount>;\r\n  dataSource: MatTableDataSource<UserAccount>;\r\n  dataSource2: MatTableDataSource<UserAccount>;\r\n  displayedColumns: string[] = [\r\n    'userAvatar',\r\n    'fullName',\r\n    'companyName',\r\n    'status'\r\n    ];\r\n\r\n  email = new Email();\r\n  allUserLists = [];\r\n  pendingUserLists = [];\r\n\r\n  username: string;\r\n\r\n  constructor(\r\n    private apiService: ApiService,\r\n    private router: Router,\r\n    private dataStorage: DataStorageService,\r\n    public dialog: MatDialog,\r\n    private spinner: NgxSpinnerService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getList();\r\n    this.spinner.show();\r\n  }\r\n\r\n  getList(): void{\r\n    this.apiService.findAll(ENDPOINTS.userAccount).subscribe(\r\n      (res : any) => {\r\n        this.allUserLists = res.responseData.data;\r\n        // console.log(\"ALL\",this.allUserLists );\r\n        this.dataSource = new MatTableDataSource<UserAccount>(res.responseData.data);\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n        setTimeout(() => {\r\n          this.spinner.hide();\r\n        }, 1);\r\n      }\r\n    );\r\n\r\n    // this.apiService.findAll(ENDPOINTS.getPendingAccounts).subscribe(\r\n    //   (res:any) => {\r\n    //     this.pendingUserLists = res.responseData.data;\r\n    //     this.dataSource2 = new MatTableDataSource<UserAccount>(res.responseData.data);\r\n    //     this.dataSource2.paginator = this.paginator2;\r\n    //     this.dataSource2.sort = this.sort2;\r\n    //   }\r\n    // );\r\n  }\r\n\r\n  getUser(id): void{\r\n    this.router.navigate(['/asc/page/account/user-registration']);\r\n    this.dataStorage.saveUserAccountId(id);\r\n  }\r\n\r\n  applyFilter1(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n  applyFilter2(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource2.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  openDialog(i:any): void {\r\n   \r\n    if(i.status === \"PENDING\"){\r\n      const dialogRef = this.dialog.open(UserListDialog, {\r\n        width: '40%',\r\n        height: '100%',\r\n        data: {\r\n          userAccount: i\r\n        }\r\n        // data: {\r\n        //   isFromModal: true,\r\n        //   isUserRegistration: true\r\n        // }\r\n      });\r\n      dialogRef.afterClosed().subscribe(result => {\r\n        console.log('The dialog was closed');\r\n        this.getList();\r\n      });\r\n    }else{\r\n      this.router.navigate(['asc/page/account/user-update/', i.id]);\r\n    }\r\n  }\r\n\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'app-user-list',\r\n  templateUrl: 'user-list-dialog.html',\r\n  styleUrls: ['./user-list.component.scss']\r\n})\r\nexport class UserListDialog {\r\n  \r\n  constructor(  private apiService: ApiService,\r\n                private sweetAlertService: SweetAlertService,\r\n                public dialogRef: MatDialogRef<UserListComponent>,\r\n                @Inject(MAT_DIALOG_DATA) public data: DialogData) {}\r\n\r\n  email = new Email();\r\n  userAccounts = new UserAccount();\r\n\r\n\r\n  ngOnInit(): void{\r\n    // console.log(this.data);\r\n    // this.userAccounts = this.data.userAccount;\r\n    \r\n  }\r\n\r\n    onApprove(): void{\r\n      // console.log(\"APPROVED\", this.data.userAccount.username);\r\n      this.email.mailTo = this.data.userAccount.username;\r\n      this.email.user = this.data.userAccount.firstName + ' ' + this.data.userAccount.lastName;\r\n          this.apiService.save(ENDPOINTS.emailApproved + '/' + this.data.userAccount.username, this.data.userAccount).subscribe(\r\n            (res:any) => {\r\n              if (res != undefined) {\r\n                // this.sweetAlertService.success(res);\r\n                this.sweetAlertService.customSuccessMessage('Email verification successfully sent.');\r\n                // this.apiService.save(ENDPOINTS.sendEmail, this.email).subscribe(\r\n                //   (res:any) => {\r\n                //     this.sweetAlertService.customSuccessMessage('Verification email has been sent!');\r\n                //   });\r\n              }\r\n            });\r\n    }\r\n    onNoClick(): void {\r\n      this.dialogRef.close();\r\n    }\r\n    onDisapprove(): void{\r\n      \r\n    }\r\n}"]}