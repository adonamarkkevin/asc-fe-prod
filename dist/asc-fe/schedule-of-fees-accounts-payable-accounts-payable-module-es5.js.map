{"version":3,"sources":["webpack:///src/app/modules/pages/applications/schedule-of-fees/accounts-payable/accounts-payable.module.ts","webpack:///src/app/modules/pages/applications/schedule-of-fees/accounts-payable/accounts-payable.component.html","webpack:///src/app/modules/pages/applications/schedule-of-fees/accounts-payable/accounts-payable.component.ts","webpack:///src/app/modules/pages/applications/schedule-of-fees/accounts-payable/accounts-payable.component.scss","webpack:///src/app/modules/pages/applications/schedule-of-fees/accounts-payable/accounts-payable-routing.module.ts"],"names":["AccountsPayableModule","declarations","imports","AccountsPayableComponent","apiService","spinner","displayedColumns","pageNo","pageSize","paymentTotalItems","getForPaymentList","event","pageIndex","length","show","findAll","getEndpoint","subscribe","res","dataSource","data","totalItems","hide","endpoint","scheduleOfFeesMonitoring","selector","template","routes","path","component","SingleApplicationRoutingModule","forChild","exports"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UAwBaA,qBAAqB;AAAA;AAAA,Q;;AAArBA,2BAAqB,6DAdjC,+DAAS;AACRC,oBAAY,EAAE,CACZ,oFADY,CADN;AAIRC,eAAO,EAAE,CACP,4DADO,EAEP,+FAFO,EAGP,qEAHO,EAIP,kEAJO,EAKP,0DALO,EAMP,6DANO,EAOP,sEAPO;AAJD,OAAT,CAciC,GAArBF,qBAAqB,CAArB;;;;;;;;;;;;;;;;ACxBb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCWFG,wBAAwB;AAQnC,0CACUC,UADV,EAEUC,OAFV,EAEoC;AAAA;;AAD1B,eAAAD,UAAA,GAAAA,UAAA;AACA,eAAAC,OAAA,GAAAA,OAAA;AAPV,eAAAC,gBAAA,GAA6B,CAAC,eAAD,EAAkB,mBAAlB,EAAuC,OAAvC,EAAgD,QAAhD,EAA0D,sBAA1D,EAAkF,eAAlF,CAA7B;AACA,eAAAC,MAAA,GAAiB,CAAjB;AACA,eAAAC,QAAA,GAAmB,EAAnB;AACA,eAAAC,iBAAA,GAA4B,CAA5B;AAKK;;AAX8B;AAAA;AAAA,iBAanC,oBAAQ;AACN,iBAAKC,iBAAL;AACD;AAfkC;AAAA;AAAA,iBAiBnC,mBAAUC,KAAV,EAAoB;AAClB,iBAAKH,QAAL,GAAgBG,KAAK,CAACH,QAAtB;AACAG,iBAAK,CAACC,SAAN,IAAmB,KAAKL,MAAxB,GACI,KAAKA,MAAL,EADJ,GAEI,KAAKA,MAAL,EAFJ;;AAIA,gBAAII,KAAK,CAACH,QAAN,GAAiBG,KAAK,CAACE,MAA3B,EAAmC;AACjC,mBAAKN,MAAL,GAAc,CAAd;AACD;;AAED,iBAAKG,iBAAL;AACD;AA5BkC;AAAA;AAAA,iBA8B3B,6BAAoB;AAAA;;AAC1B,iBAAKL,OAAL,CAAaS,IAAb;AACA,iBAAKV,UAAL,CAAgBW,OAAhB,CAAwB,KAAKC,WAAL,EAAxB,EACGC,SADH,CACa,UAACC,GAAD,EAAc;AACvB,mBAAI,CAACC,UAAL,GAAkB,IAAI,0EAAJ,CAA4BD,GAAG,CAACE,IAAhC,CAAlB;AACA,mBAAI,CAACX,iBAAL,GAAyBS,GAAG,CAACG,UAA7B;;AACA,mBAAI,CAAChB,OAAL,CAAaiB,IAAb;AACD,aALH;AAMD;AAtCkC;AAAA;AAAA,iBAwC3B,uBAAW;AACjB,gBAAIC,QAAQ,GAAG,kDAAUC,wBAAzB;AACA,6BAAUD,QAAV,0CAAkD,KAAKhB,MAAL,GAAc,CAAhE,mBAA0E,KAAKC,QAA/E;AACD;AA3CkC;;AAAA;AAAA,S;;;;gBAR5B;;gBADA;;;;AASIL,8BAAwB,6DALpC,gEAAU;AACTsB,gBAAQ,EAAE,sBADD;AAETC,gBAAQ,EAAR,mFAFS;;AAAA,OAAV,CAKoC,GAAxBvB,wBAAwB,CAAxB;;;;;;;;;;;;;;;;ACXb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACIf,UAAMwB,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAE;AAFb,OADqB,CAAvB;;UAWaC,8BAA8B;AAAA;AAAA,Q;;AAA9BA,oCAA8B,6DAJ1C,+DAAS;AACR5B,eAAO,EAAE,CAAC,6DAAa6B,QAAb,CAAsBJ,MAAtB,CAAD,CADD;AAERK,eAAO,EAAE,CAAC,4DAAD;AAFD,OAAT,CAI0C,GAA9BF,8BAA8B,CAA9B","file":"schedule-of-fees-accounts-payable-accounts-payable-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SingleApplicationRoutingModule } from './accounts-payable-routing.module';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { AngularMaterialModule } from '@shared';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { AccountsPayableComponent } from './accounts-payable.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AccountsPayableComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    SingleApplicationRoutingModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    AngularMaterialModule,\r\n    MatTableModule\r\n  ]\r\n})\r\nexport class AccountsPayableModule { }\r\n","export default \"<form>\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12 title\\\">\\r\\n        <mat-label>\\r\\n          <mat-icon>view_list</mat-icon> Accounts Payable\\r\\n        </mat-label>\\r\\n      </div>\\r\\n    </div>\\r\\n    <hr>\\r\\n    <br>\\r\\n\\r\\n    <div class=\\\"mat-elevation-z8 fields\\\">\\r\\n      <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\r\\n        <ng-container matColumnDef=\\\"referenceCode\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> REFERENCE CODE </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element; let i = index\\\"> {{element?.referenceCode | uppercase}}</td>\\r\\n        </ng-container>\\r\\n        <ng-container matColumnDef=\\\"typeOfApplication\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> TYPE OF APPLICATION</th>\\r\\n          <td mat-cell *matCellDef=\\\"let element; let i = index\\\">{{element?.applicationType.description | uppercase}} - {{element?.formType?.replaceAll('_',' ') | uppercase}}</td>\\r\\n        </ng-container>\\r\\n        <ng-container matColumnDef=\\\"brand\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> BRAND</th>\\r\\n          <td mat-cell *matCellDef=\\\"let element; let i = index\\\">{{element?.brand.description | uppercase}}</td>\\r\\n        </ng-container>\\r\\n        <ng-container matColumnDef=\\\"medium\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> MEDIUM</th>\\r\\n          <td mat-cell *matCellDef=\\\"let element; let i = index\\\">{{element?.typeOfMedium | uppercase}}</td>\\r\\n        </ng-container>\\r\\n        <ng-container matColumnDef=\\\"applicantCompanyName\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> APPLICANT COMPANY NAME</th>\\r\\n          <td mat-cell *matCellDef=\\\"let element; let i = index\\\">{{element?.company.companyName | uppercase}}</td>\\r\\n        </ng-container>\\r\\n        <ng-container matColumnDef=\\\"paymentStatus\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> PAYMENT STATUS</th>\\r\\n          <td mat-cell *matCellDef=\\\"let element; let i = index\\\">{{element?.paymentStatus?.replaceAll('_',' ') | uppercase}}</td>\\r\\n        </ng-container>\\r\\n\\r\\n\\r\\n\\r\\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n      </table>\\r\\n      <div class=\\\"no-record\\\" [hidden]=\\\"dataSource && dataSource?.data?.length > 0\\\">\\r\\n        No record found.\\r\\n      </div>\\r\\n      <mat-paginator\\r\\n        [pageSize]=\\\"pageSize\\\"\\r\\n        [pageIndex]=\\\"pageNo\\\"\\r\\n        [length]=\\\"paymentTotalItems\\\"\\r\\n        (page)=\\\"pageEvent($event)\\\"\\r\\n      ></mat-paginator>\\r\\n    </div>\\r\\n    <br>\\r\\n  </div>\\r\\n</form>\\r\\n\";","import { Component, OnInit } from '@angular/core';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { ApiService } from '@services';\r\nimport { ENDPOINTS } from '@shared';\r\n\r\n@Component({\r\n  selector: 'app-accounts-payable',\r\n  templateUrl: './accounts-payable.component.html',\r\n  styleUrls: ['./accounts-payable.component.scss']\r\n})\r\nexport class AccountsPayableComponent implements OnInit {\r\n\r\n  dataSource: MatTableDataSource<any>\r\n  displayedColumns: string[] = ['referenceCode', 'typeOfApplication', 'brand', 'medium', 'applicantCompanyName', 'paymentStatus'];\r\n  pageNo: number = 0;\r\n  pageSize: number = 10;\r\n  paymentTotalItems: number = 0;\r\n\r\n  constructor(\r\n    private apiService: ApiService,\r\n    private spinner: NgxSpinnerService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getForPaymentList();\r\n  }\r\n \r\n  pageEvent(event: any): void {\r\n    this.pageSize = event.pageSize;\r\n    event.pageIndex >= this.pageNo\r\n      ? this.pageNo++\r\n      : this.pageNo--;\r\n\r\n    if (event.pageSize > event.length) {\r\n      this.pageNo = 0;\r\n    }\r\n\r\n    this.getForPaymentList();\r\n  }\r\n\r\n  private getForPaymentList() {\r\n    this.spinner.show();\r\n    this.apiService.findAll(this.getEndpoint())\r\n      .subscribe((res: any) => {\r\n        this.dataSource = new MatTableDataSource<any>(res.data);\r\n        this.paymentTotalItems = res.totalItems;\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  private getEndpoint(): string {\r\n    let endpoint = ENDPOINTS.scheduleOfFeesMonitoring;\r\n    return `${endpoint}?hasPromissoryNote=true&page=${this.pageNo + 1}&size=${this.pageSize}`;\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcGFnZXMvYXBwbGljYXRpb25zL3NjaGVkdWxlLW9mLWZlZXMvYWNjb3VudHMtcGF5YWJsZS9hY2NvdW50cy1wYXlhYmxlLmNvbXBvbmVudC5zY3NzIn0= */\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AccountsPayableComponent } from './accounts-payable.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AccountsPayableComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class SingleApplicationRoutingModule { }\r\n"]}