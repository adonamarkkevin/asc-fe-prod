{"version":3,"sources":["webpack:///src/app/modules/pages/maintenance/brand-penalties/brand-penalties-routing.module.ts","webpack:///src/app/modules/fragments/index.ts","webpack:///src/app/modules/pages/maintenance/brand-penalties/brand-penalties.module.ts","webpack:///src/app/modules/pages/maintenance/brand-penalties/brand-penalties.component.ts","webpack:///src/app/modules/pages/maintenance/brand-penalties/brand-penalties.component.html"],"names":["routes","path","component","BrandPenaltiesRoutingModule","forChild","BrandPenaltiesModule","BrandPenaltiesComponent","router","apiService","formBuilder","sweetAlertService","datepipe","displayedColumns","brandPenalties","brand","brandPenaltiesList","brandList","setFormValidator","getBrandList","getBrandPenaltiesList","findAll","subscribe","res","responseData","data","dataSource","paginator","formListComponent","sort","penalty","withPenalty","filter","filteredPenalties","id","length","update","err","console","log","resetFormValidator","findById","idForUpdate","activeBrands","formatDate","save","success","navigate","error","brandPenaltiesForm","group","required","amount","markAsUntouched","markAsPristine","value","selected","description","transform","penaltyDate","alert","fire","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","deleteById","customSuccessMessage","getBrandPenalties"],"mappings":"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","file":"brand-penalties-brand-penalties-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { BrandPenaltiesComponent } from './brand-penalties.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: BrandPenaltiesComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class BrandPenaltiesRoutingModule { }\r\n","export * from './form-action-buttons/form-action-buttons.component';\r\nexport * from './form-list/form-list.component';","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { BrandPenaltiesRoutingModule } from './brand-penalties-routing.module';\r\nimport { BrandPenaltiesComponent } from './brand-penalties.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { AngularMaterialModule } from '@shared';\r\nimport { FragmentsModule } from 'app/modules/fragments/fragments.module';\r\n\r\n\r\n@NgModule({\r\n  declarations: [BrandPenaltiesComponent],\r\n  imports: [\r\n    CommonModule,\r\n    BrandPenaltiesRoutingModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule,\r\n    AngularMaterialModule,\r\n    FragmentsModule\r\n  ]\r\n})\r\nexport class BrandPenaltiesModule { }\r\n","import { DatePipe } from '@angular/common';\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { Router } from '@angular/router';\r\nimport { FormListComponent } from '@fragments';\r\nimport { Brand } from '@models';\r\nimport { ApiService, SweetAlertService } from '@services';\r\nimport { ENDPOINTS } from '@shared';\r\nimport { BrandPenalties } from 'app/core/models/brand-penalties.model';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-brand-penalties',\r\n  templateUrl: './brand-penalties.component.html',\r\n  styleUrls: ['./brand-penalties.component.scss']\r\n})\r\nexport class BrandPenaltiesComponent implements OnInit {\r\n  @ViewChild(FormListComponent) formListComponent: FormListComponent\r\n  dataSource: MatTableDataSource<BrandPenalties>;\r\n  // displayedColumns: string[] = ['brandDescription', 'brandPenaltyAmount', 'deleteIcon'];\r\n  displayedColumns: string[] = ['brandDescription', 'brandPenaltyAmount'];\r\n  brandPenalties = new BrandPenalties();\r\n  brand = new Brand();\r\n  brandPenaltiesList = [];\r\n  brandList = [];\r\n  brandPenaltiesForm: FormGroup;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private apiService: ApiService,\r\n    private formBuilder: FormBuilder,\r\n    private sweetAlertService: SweetAlertService,\r\n    public datepipe: DatePipe\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.setFormValidator();\r\n    this.getBrandList();\r\n    this.getBrandPenaltiesList();\r\n  }\r\n\r\n  getBrandPenaltiesList(): void {\r\n    this.apiService.findAll(ENDPOINTS.brandPenalties).subscribe(\r\n      (res: any) => {\r\n        if (res) {\r\n          this.brandPenaltiesList = res.responseData.data;\r\n          this.dataSource = new MatTableDataSource<BrandPenalties>(res.responseData.data);\r\n          this.dataSource.paginator = this.formListComponent.paginator;\r\n          this.dataSource.sort = this.formListComponent.sort;\r\n          this.brand = new Brand();\r\n          this.brand = this.brandPenalties.brand;\r\n          if (this.brand) {\r\n            this.brand.penalty = false\r\n            const withPenalty = this.brandPenaltiesList\r\n              .filter(filteredPenalties => filteredPenalties?.brand?.id === this.brand?.id).length === 0;\r\n            if (withPenalty) {\r\n              this.apiService.update(ENDPOINTS.brand, this.brand).subscribe();\r\n            }\r\n          }\r\n        }\r\n      }, err => {\r\n        console.log(err);\r\n      }, () => {\r\n        this.resetFormValidator();\r\n      });\r\n  }\r\n\r\n  getBrandPenalties(): void {\r\n    this.apiService.findById(ENDPOINTS.brandPenalties, this.formListComponent.idForUpdate).subscribe((res: any) => {\r\n      if (res) {\r\n        this.brandPenalties = res.responseData.data;\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  getBrandList(): void {\r\n    this.apiService.findAll(ENDPOINTS.activeBrands).subscribe(\r\n      (res: any) => {\r\n        if (res) {\r\n          this.brandList = res.responseData.data;\r\n        }\r\n      });\r\n  }\r\n\r\n  save(): void {\r\n    this.formatDate();\r\n    this.apiService.save(ENDPOINTS.brandPenalties, this.brandPenalties).subscribe(\r\n      (res: any) => {\r\n        if (res) {\r\n          this.sweetAlertService.success(res);\r\n          this.router.navigate(['asc/page/maintenance/brand-penalties']);\r\n        } else {\r\n          this.sweetAlertService.error(res);\r\n        }\r\n        this.getBrandPenaltiesList();\r\n      });\r\n  }\r\n\r\n  update(): void {\r\n    this.apiService.update(ENDPOINTS.brandPenalties, this.brandPenalties).subscribe(\r\n      (res: any) => {\r\n        if (res) {\r\n          this.sweetAlertService.success(res);\r\n          this.router.navigate(['asc/page/maintenance/brand-penalties']);\r\n        } else {\r\n          this.sweetAlertService.error(res);\r\n        }\r\n        this.getBrandPenaltiesList();\r\n      });\r\n  }\r\n\r\n  setFormValidator(): void {\r\n    this.brandPenaltiesForm = this.formBuilder.group({\r\n      brand: ['', Validators.required],\r\n      amount: ['', Validators.required],\r\n      // penaltyDate: ['', Validators.required],\r\n    });\r\n  }\r\n\r\n  resetFormValidator(): void {\r\n    this.brandPenalties = new BrandPenalties();\r\n    this.brandPenaltiesForm.markAsUntouched();\r\n    this.brandPenaltiesForm.markAsPristine();\r\n  }\r\n\r\n  compareBrandPenalties(value: any, selected: any): boolean {\r\n    if (value && selected) {\r\n      return value.description === selected.description;\r\n    }\r\n  }\r\n\r\n  formatDate(): void {\r\n    // this.brandPenalties.penaltyDate = this.datepipe.transform(new Date(), 'yyyy-MM-dd')\r\n    this.datepipe.transform(this.brandPenalties.penaltyDate, 'yyyy-MM-dd')\r\n  }\r\n\r\n  test() {\r\n    alert(this.brandPenalties.penaltyDate)\r\n  }\r\n\r\n  delete() {\r\n    Swal.fire({\r\n      text: 'Are you sure you want to delete this brand penalty?',\r\n      icon: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Confirm'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.apiService.deleteById(ENDPOINTS.brandPenalties, this.brandPenalties.id).subscribe(\r\n          () => {\r\n            this.sweetAlertService.customSuccessMessage('Brand penalty successfully deleted.');\r\n            this.getBrandList();\r\n            this.getBrandPenaltiesList();\r\n          }\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<form>\r\n    <div class=\"container-fluid\">\r\n      <div class=\"row\">\r\n        <div class=\"col-md-12 title\">\r\n          <mat-label>\r\n            <mat-icon>turned_in</mat-icon> Brand Penalties\r\n          </mat-label>\r\n        </div>\r\n      </div>\r\n      <hr>\r\n\r\n      <form [formGroup]=\"brandPenaltiesForm\">\r\n\r\n        <div class=\"row\">\r\n\r\n          <mat-form-field class=\"col-md-6\" appearance=\"outline\">\r\n            <mat-label>Brand <span class=\"required-field\">*</span></mat-label>\r\n            <mat-select [(ngModel)]=\"brandPenalties.brand\" name=\"brand\" formControlName=\"brand\" [compareWith]=\"compareBrandPenalties\">\r\n              <mat-option *ngFor=\"let i of brandList\" [value]=\"i\">\r\n                {{i.description}}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field class=\"col-md-6\" appearance=\"outline\">\r\n            <mat-label>Penalty Amount <span class=\"required-field\">*</span></mat-label>\r\n            <input matInput [(ngModel)]=\"brandPenalties.amount\" name=\"amount\" formControlName=\"amount\">\r\n        </mat-form-field>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n            <!-- <mat-form-field class=\"col-md-6\" appearance=\"outline\">\r\n            <mat-label>Choose date penalty</mat-label>\r\n            <input matInput [matDatepicker]=\"picker\" readonly [(ngModel)]=\"brandPenalties.penaltyDate\" name=\"penaltyDate\"\r\n              formControlName=\"penaltyDate\" (dateChange)=\"test()\">\r\n            <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n            <mat-datepicker #picker disabled=\"false\" color=\"warn\"></mat-datepicker>\r\n          </mat-form-field> -->\r\n        </div>\r\n\r\n      </form>\r\n\r\n      <app-form-action-buttons [childObject]=\"brandPenalties\" [childForm]=\"brandPenaltiesForm\" (saveFunction)=\"save()\" (updateFunction)=\"update()\"\r\n              (cancelFunction)=\"resetFormValidator()\" (deleteFunction)=\"delete()\">\r\n      </app-form-action-buttons>\r\n      <br>\r\n      <app-form-list [dataSource]=\"dataSource\" [displayedColumns]=\"displayedColumns\"\r\n          (selectInListFunction)=\"getBrandPenalties()\">\r\n      </app-form-list>\r\n\r\n    </div>\r\n  </form>\r\n"]}