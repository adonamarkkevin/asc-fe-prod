{"version":3,"sources":["webpack:///src/app/modules/pages/maintenance/brand-penalties/brand-penalties-routing.module.ts","webpack:///src/app/modules/fragments/index.ts","webpack:///src/app/modules/pages/maintenance/brand-penalties/brand-penalties.component.html","webpack:///src/app/modules/pages/maintenance/brand-penalties/brand-penalties.module.ts","webpack:///src/app/modules/pages/maintenance/brand-penalties/brand-penalties.component.ts","webpack:///src/app/modules/pages/maintenance/brand-penalties/brand-penalties.component.scss"],"names":["routes","path","component","BrandPenaltiesRoutingModule","imports","forChild","exports","BrandPenaltiesModule","declarations","BrandPenaltiesComponent","router","apiService","formBuilder","sweetAlertService","datepipe","displayedColumns","brandPenalties","brand","brandPenaltiesList","brandList","setFormValidator","getBrandList","getBrandPenaltiesList","findAll","subscribe","res","responseData","data","dataSource","paginator","formListComponent","sort","penalty","withPenalty","filter","filteredPenalties","id","length","update","err","console","log","resetFormValidator","findById","idForUpdate","activeBrands","formatDate","save","success","navigate","error","brandPenaltiesForm","group","required","amount","markAsUntouched","markAsPristine","value","selected","description","transform","penaltyDate","alert","fire","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","deleteById","customSuccessMessage","selector","template"],"mappings":"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","file":"brand-penalties-brand-penalties-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { BrandPenaltiesComponent } from './brand-penalties.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: BrandPenaltiesComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class BrandPenaltiesRoutingModule { }\r\n","export * from './form-action-buttons/form-action-buttons.component';\r\nexport * from './form-list/form-list.component';","export default \"<form>\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-12 title\\\">\\r\\n          <mat-label>\\r\\n            <mat-icon>turned_in</mat-icon> Brand Penalties\\r\\n          </mat-label>\\r\\n        </div>\\r\\n      </div>\\r\\n      <hr>\\r\\n\\r\\n      <form [formGroup]=\\\"brandPenaltiesForm\\\">\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n\\r\\n          <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\">\\r\\n            <mat-label>Brand <span class=\\\"required-field\\\">*</span></mat-label>\\r\\n            <mat-select [(ngModel)]=\\\"brandPenalties.brand\\\" name=\\\"brand\\\" formControlName=\\\"brand\\\" [compareWith]=\\\"compareBrandPenalties\\\">\\r\\n              <mat-option *ngFor=\\\"let i of brandList\\\" [value]=\\\"i\\\">\\r\\n                {{i.description}}\\r\\n              </mat-option>\\r\\n            </mat-select>\\r\\n          </mat-form-field>\\r\\n\\r\\n          <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\">\\r\\n            <mat-label>Penalty Amount <span class=\\\"required-field\\\">*</span></mat-label>\\r\\n            <input matInput [(ngModel)]=\\\"brandPenalties.amount\\\" name=\\\"amount\\\" formControlName=\\\"amount\\\">\\r\\n        </mat-form-field>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n            <!-- <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\">\\r\\n            <mat-label>Choose date penalty</mat-label>\\r\\n            <input matInput [matDatepicker]=\\\"picker\\\" readonly [(ngModel)]=\\\"brandPenalties.penaltyDate\\\" name=\\\"penaltyDate\\\"\\r\\n              formControlName=\\\"penaltyDate\\\" (dateChange)=\\\"test()\\\">\\r\\n            <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\r\\n            <mat-datepicker #picker disabled=\\\"false\\\" color=\\\"warn\\\"></mat-datepicker>\\r\\n          </mat-form-field> -->\\r\\n        </div>\\r\\n\\r\\n      </form>\\r\\n\\r\\n      <app-form-action-buttons [childObject]=\\\"brandPenalties\\\" [childForm]=\\\"brandPenaltiesForm\\\" (saveFunction)=\\\"save()\\\" (updateFunction)=\\\"update()\\\"\\r\\n              (cancelFunction)=\\\"resetFormValidator()\\\" (deleteFunction)=\\\"delete()\\\">\\r\\n      </app-form-action-buttons>\\r\\n      <br>\\r\\n      <app-form-list [dataSource]=\\\"dataSource\\\" [displayedColumns]=\\\"displayedColumns\\\"\\r\\n          (selectInListFunction)=\\\"getBrandPenalties()\\\">\\r\\n      </app-form-list>\\r\\n\\r\\n    </div>\\r\\n  </form>\\r\\n\";","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { BrandPenaltiesRoutingModule } from './brand-penalties-routing.module';\r\nimport { BrandPenaltiesComponent } from './brand-penalties.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { AngularMaterialModule } from '@shared';\r\nimport { FragmentsModule } from 'app/modules/fragments/fragments.module';\r\n\r\n\r\n@NgModule({\r\n  declarations: [BrandPenaltiesComponent],\r\n  imports: [\r\n    CommonModule,\r\n    BrandPenaltiesRoutingModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule,\r\n    AngularMaterialModule,\r\n    FragmentsModule\r\n  ]\r\n})\r\nexport class BrandPenaltiesModule { }\r\n","import { DatePipe } from '@angular/common';\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { Router } from '@angular/router';\r\nimport { FormListComponent } from '@fragments';\r\nimport { Brand } from '@models';\r\nimport { ApiService, SweetAlertService } from '@services';\r\nimport { ENDPOINTS } from '@shared';\r\nimport { BrandPenalties } from 'app/core/models/brand-penalties.model';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-brand-penalties',\r\n  templateUrl: './brand-penalties.component.html',\r\n  styleUrls: ['./brand-penalties.component.scss']\r\n})\r\nexport class BrandPenaltiesComponent implements OnInit {\r\n  @ViewChild(FormListComponent) formListComponent: FormListComponent\r\n  dataSource: MatTableDataSource<BrandPenalties>;\r\n  // displayedColumns: string[] = ['brandDescription', 'brandPenaltyAmount', 'deleteIcon'];\r\n  displayedColumns: string[] = ['brandDescription', 'brandPenaltyAmount'];\r\n  brandPenalties = new BrandPenalties();\r\n  brand = new Brand();\r\n  brandPenaltiesList = [];\r\n  brandList = [];\r\n  brandPenaltiesForm: FormGroup;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private apiService: ApiService,\r\n    private formBuilder: FormBuilder,\r\n    private sweetAlertService: SweetAlertService,\r\n    public datepipe: DatePipe\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.setFormValidator();\r\n    this.getBrandList();\r\n    this.getBrandPenaltiesList();\r\n  }\r\n\r\n  getBrandPenaltiesList(): void {\r\n    this.apiService.findAll(ENDPOINTS.brandPenalties).subscribe(\r\n      (res: any) => {\r\n        if (res) {\r\n          this.brandPenaltiesList = res.responseData.data;\r\n          this.dataSource = new MatTableDataSource<BrandPenalties>(res.responseData.data);\r\n          this.dataSource.paginator = this.formListComponent.paginator;\r\n          this.dataSource.sort = this.formListComponent.sort;\r\n          this.brand = new Brand();\r\n          this.brand = this.brandPenalties.brand;\r\n          if (this.brand) {\r\n            this.brand.penalty = false\r\n            const withPenalty = this.brandPenaltiesList\r\n              .filter(filteredPenalties => filteredPenalties?.brand?.id === this.brand?.id).length === 0;\r\n            if (withPenalty) {\r\n              this.apiService.update(ENDPOINTS.brand, this.brand).subscribe();\r\n            }\r\n          }\r\n        }\r\n      }, err => {\r\n        console.log(err);\r\n      }, () => {\r\n        this.resetFormValidator();\r\n      });\r\n  }\r\n\r\n  getBrandPenalties(): void {\r\n    this.apiService.findById(ENDPOINTS.brandPenalties, this.formListComponent.idForUpdate).subscribe((res: any) => {\r\n      if (res) {\r\n        this.brandPenalties = res.responseData.data;\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  getBrandList(): void {\r\n    this.apiService.findAll(ENDPOINTS.activeBrands).subscribe(\r\n      (res: any) => {\r\n        if (res) {\r\n          this.brandList = res.responseData.data;\r\n        }\r\n      });\r\n  }\r\n\r\n  save(): void {\r\n    this.formatDate();\r\n    this.apiService.save(ENDPOINTS.brandPenalties, this.brandPenalties).subscribe(\r\n      (res: any) => {\r\n        if (res) {\r\n          this.sweetAlertService.success(res);\r\n          this.router.navigate(['asc/page/maintenance/brand-penalties']);\r\n        } else {\r\n          this.sweetAlertService.error(res);\r\n        }\r\n        this.getBrandPenaltiesList();\r\n      });\r\n  }\r\n\r\n  update(): void {\r\n    this.apiService.update(ENDPOINTS.brandPenalties, this.brandPenalties).subscribe(\r\n      (res: any) => {\r\n        if (res) {\r\n          this.sweetAlertService.success(res);\r\n          this.router.navigate(['asc/page/maintenance/brand-penalties']);\r\n        } else {\r\n          this.sweetAlertService.error(res);\r\n        }\r\n        this.getBrandPenaltiesList();\r\n      });\r\n  }\r\n\r\n  setFormValidator(): void {\r\n    this.brandPenaltiesForm = this.formBuilder.group({\r\n      brand: ['', Validators.required],\r\n      amount: ['', Validators.required],\r\n      // penaltyDate: ['', Validators.required],\r\n    });\r\n  }\r\n\r\n  resetFormValidator(): void {\r\n    this.brandPenalties = new BrandPenalties();\r\n    this.brandPenaltiesForm.markAsUntouched();\r\n    this.brandPenaltiesForm.markAsPristine();\r\n  }\r\n\r\n  compareBrandPenalties(value: any, selected: any): boolean {\r\n    if (value && selected) {\r\n      return value.description === selected.description;\r\n    }\r\n  }\r\n\r\n  formatDate(): void {\r\n    // this.brandPenalties.penaltyDate = this.datepipe.transform(new Date(), 'yyyy-MM-dd')\r\n    this.datepipe.transform(this.brandPenalties.penaltyDate, 'yyyy-MM-dd')\r\n  }\r\n\r\n  test() {\r\n    alert(this.brandPenalties.penaltyDate)\r\n  }\r\n\r\n  delete() {\r\n    Swal.fire({\r\n      text: 'Are you sure you want to delete this brand penalty?',\r\n      icon: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Confirm'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.apiService.deleteById(ENDPOINTS.brandPenalties, this.brandPenalties.id).subscribe(\r\n          () => {\r\n            this.sweetAlertService.customSuccessMessage('Brand penalty successfully deleted.');\r\n            this.getBrandList();\r\n            this.getBrandPenaltiesList();\r\n          }\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcGFnZXMvbWFpbnRlbmFuY2UvYnJhbmQtcGVuYWx0aWVzL2JyYW5kLXBlbmFsdGllcy5jb21wb25lbnQuc2NzcyJ9 */\";"]}