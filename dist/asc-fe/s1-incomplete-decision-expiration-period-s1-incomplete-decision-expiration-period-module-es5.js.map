{"version":3,"sources":["webpack:///src/app/modules/fragments/index.ts","webpack:///src/app/modules/pages/maintenance/s1-incomplete-decision-expiration-period/s1-incomplete-decision-expiration-period.module.ts","webpack:///src/app/modules/pages/maintenance/s1-incomplete-decision-expiration-period/s1-incomplete-decision-expiration-period.component.scss","webpack:///src/app/modules/pages/maintenance/s1-incomplete-decision-expiration-period/s1-incomplete-decision-expiration-period.component.ts","webpack:///src/app/modules/pages/maintenance/s1-incomplete-decision-expiration-period/s1-incomplete-decision-expiration-period.component.html","webpack:///src/app/modules/pages/maintenance/s1-incomplete-decision-expiration-period/s1-incomplete-decision-expiration-period-routing.module.ts"],"names":["S1IncompleteDecisionExpirationPeriodModule","declarations","imports","S1IncompleteDecisionExpirationPeriodComponent","apiService","formBuilder","sweetAlertService","validateFieldService","displayedColumns","s1IncompleteDecisionExpirationPeriod","s1IncompleteDecisionExpirationPeriodList","getList","setFormValidator","findAll","subscribe","res","responseData","data","dataSource","paginator","formListComponent","sort","save","undefined","success","err","Number","noOfWorkingDays","error","message","resetFormValidator","findById","idForUpdate","console","log","update","s1IncompleteDecisionExpirationPeriodForm","group","required","markAsUntouched","markAsPristine","fire","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","value","deleteById","id","customSuccessMessage","selector","template","routes","path","component","S1IncompleteDecisionExpirationPeriodRoutingModule","forChild","exports"],"mappings":"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","file":"s1-incomplete-decision-expiration-period-s1-incomplete-decision-expiration-period-module-es5.js","sourcesContent":["export * from './form-action-buttons/form-action-buttons.component';\r\nexport * from './form-list/form-list.component';","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { S1IncompleteDecisionExpirationPeriodRoutingModule } from './s1-incomplete-decision-expiration-period-routing.module';\r\nimport { FragmentsModule } from 'app/modules/fragments/fragments.module';\r\nimport { AngularMaterialModule } from '@shared';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { S1IncompleteDecisionExpirationPeriodComponent } from './s1-incomplete-decision-expiration-period.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    S1IncompleteDecisionExpirationPeriodComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    S1IncompleteDecisionExpirationPeriodRoutingModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule,\r\n    AngularMaterialModule,\r\n    FragmentsModule,\r\n  ]\r\n})\r\nexport class S1IncompleteDecisionExpirationPeriodModule { }\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcGFnZXMvbWFpbnRlbmFuY2UvczEtaW5jb21wbGV0ZS1kZWNpc2lvbi1leHBpcmF0aW9uLXBlcmlvZC9zMS1pbmNvbXBsZXRlLWRlY2lzaW9uLWV4cGlyYXRpb24tcGVyaW9kLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { FormListComponent } from '@fragments';\r\nimport { ApiService, SweetAlertService } from '@services';\r\nimport { ENDPOINTS } from '@shared';\r\nimport { S1SettlementOrExpirationPeriod } from 'app/core/models/s1-settlement-or-expiration-period.model';\r\nimport { ValidateFieldService } from 'app/core/services/validate-field.service';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-s1-incomplete-decision-expiration-period',\r\n  templateUrl: './s1-incomplete-decision-expiration-period.component.html',\r\n  styleUrls: ['./s1-incomplete-decision-expiration-period.component.scss']\r\n})\r\nexport class S1IncompleteDecisionExpirationPeriodComponent implements OnInit {\r\n\r\n  @ViewChild(FormListComponent) formListComponent: FormListComponent;\r\n  dataSource: MatTableDataSource<S1SettlementOrExpirationPeriod>;\r\n  displayedColumns: string[] = ['noOfWorkingDays'];\r\n\r\n  s1IncompleteDecisionExpirationPeriod = new S1SettlementOrExpirationPeriod();\r\n  s1IncompleteDecisionExpirationPeriodList = [];\r\n\r\n  s1IncompleteDecisionExpirationPeriodForm: FormGroup;\r\n\r\n\r\n  constructor(\r\n    private apiService: ApiService,\r\n    private formBuilder: FormBuilder,\r\n    private sweetAlertService: SweetAlertService,\r\n    public validateFieldService: ValidateFieldService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.getList();\r\n    this.setFormValidator();\r\n  }\r\n\r\n  getList(): void {\r\n    this.apiService.findAll(ENDPOINTS.s1IncompleteDecisionExpirationPeriod).subscribe((res: any) => {\r\n      this.s1IncompleteDecisionExpirationPeriodList = res.responseData.data;\r\n      this.dataSource = new MatTableDataSource<S1SettlementOrExpirationPeriod>(res.responseData.data);\r\n      this.dataSource.paginator = this.formListComponent.paginator;\r\n      this.dataSource.sort = this.formListComponent.sort;\r\n    });\r\n  }\r\n\r\n  save(): void {\r\n    this.apiService.save(ENDPOINTS.s1IncompleteDecisionExpirationPeriod, this.s1IncompleteDecisionExpirationPeriod).subscribe(\r\n      (res: any) => {\r\n        if (res !== undefined) {\r\n          this.sweetAlertService.success(res);\r\n        }\r\n      }, (err: any) => {\r\n        if (!Number(this.s1IncompleteDecisionExpirationPeriod.noOfWorkingDays)) {\r\n          err.error.message = 'Please enter numeric values only';\r\n        } else {\r\n          err.error.message = 'Default Number of working days have already been set. Select the entry to update the record';\r\n        }\r\n        this.sweetAlertService.error(err);\r\n      }, () => {\r\n        this.resetFormValidator(),\r\n          this.getList();\r\n      }\r\n    )\r\n  }\r\n\r\n  getS1IncompleteDecisionExpirationPeriod(): void {\r\n    this.apiService.findById(ENDPOINTS.s1IncompleteDecisionExpirationPeriod, this.formListComponent.idForUpdate).subscribe((res: any) => {\r\n      if (res) {\r\n        this.s1IncompleteDecisionExpirationPeriod = res.responseData.data;\r\n        console.log(res);\r\n\r\n      }\r\n    });\r\n  }\r\n\r\n  update(): void {\r\n    this.apiService.update(ENDPOINTS.s1IncompleteDecisionExpirationPeriod, this.s1IncompleteDecisionExpirationPeriod).subscribe(\r\n      (res: any) => {\r\n        if (res !== undefined) {\r\n          this.sweetAlertService.success(res);\r\n        }\r\n      }, (err: any) => {\r\n        this.sweetAlertService.error(err);\r\n      }, () => {\r\n        this.resetFormValidator()\r\n        this.getList();\r\n      });\r\n  }\r\n\r\n  setFormValidator(): void {\r\n    this.s1IncompleteDecisionExpirationPeriodForm = this.formBuilder.group({\r\n      noOfWorkingDays: ['', Validators.required],\r\n    });\r\n  }\r\n\r\n  resetFormValidator(): void {\r\n    this.s1IncompleteDecisionExpirationPeriod = new S1SettlementOrExpirationPeriod();\r\n    this.s1IncompleteDecisionExpirationPeriodForm.markAsUntouched();\r\n    this.s1IncompleteDecisionExpirationPeriodForm.markAsPristine();\r\n  }\r\n\r\n  delete() {\r\n    Swal.fire({\r\n      text: 'Are you sure you want to delete this announcement?',\r\n      icon: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Confirm'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.apiService.deleteById(ENDPOINTS.s1IncompleteDecisionExpirationPeriod, this.s1IncompleteDecisionExpirationPeriod.id).subscribe(\r\n          () => {\r\n            this.sweetAlertService.customSuccessMessage('S1 incomplete decision expiration period successfully deleted.');\r\n            this.resetFormValidator();\r\n            this.getList();\r\n          }\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","export default \"<form>\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12 title\\\">\\r\\n                <mat-label>\\r\\n                    S1 Incomplete Decision Expiration Period\\r\\n                </mat-label>\\r\\n            </div>\\r\\n        </div>\\r\\n        <hr>\\r\\n\\r\\n        <form [formGroup]=\\\"s1IncompleteDecisionExpirationPeriodForm\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <mat-form-field class=\\\"col-md-8\\\" appearance=\\\"outline\\\">\\r\\n                    <mat-label>Number of Working Days <span class=\\\"required-field\\\">*</span></mat-label>\\r\\n                    <input matInput [(ngModel)]=\\\"s1IncompleteDecisionExpirationPeriod.noOfWorkingDays\\\"\\r\\n                        name=\\\"noOfWorkingDays\\\" (keydown)=\\\"validateFieldService.numbersOnly($event)\\\"\\r\\n                        formControlName=\\\"noOfWorkingDays\\\">\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n        </form>\\r\\n\\r\\n        <app-form-action-buttons [childObject]=\\\"s1IncompleteDecisionExpirationPeriod\\\"\\r\\n            [childForm]=\\\"s1IncompleteDecisionExpirationPeriodForm\\\" (saveFunction)=\\\"save()\\\" (updateFunction)=\\\"update()\\\"\\r\\n            (cancelFunction)=\\\"resetFormValidator()\\\" (deleteFunction)=\\\"delete()\\\">\\r\\n        </app-form-action-buttons>\\r\\n        <br>\\r\\n        <app-form-list [dataSource]=\\\"dataSource\\\" [displayedColumns]=\\\"displayedColumns\\\"\\r\\n            (selectInListFunction)=\\\"getS1IncompleteDecisionExpirationPeriod()\\\"></app-form-list>\\r\\n\\r\\n    </div>\\r\\n</form>\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { S1IncompleteDecisionExpirationPeriodComponent } from './s1-incomplete-decision-expiration-period.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: S1IncompleteDecisionExpirationPeriodComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class S1IncompleteDecisionExpirationPeriodRoutingModule { }\r\n"]}