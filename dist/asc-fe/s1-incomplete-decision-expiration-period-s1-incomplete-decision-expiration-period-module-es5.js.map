{"version":3,"sources":["webpack:///src/app/modules/fragments/index.ts","webpack:///src/app/modules/pages/maintenance/s1-incomplete-decision-expiration-period/s1-incomplete-decision-expiration-period.module.ts","webpack:///src/app/modules/pages/maintenance/s1-incomplete-decision-expiration-period/s1-incomplete-decision-expiration-period.component.ts","webpack:///src/app/modules/pages/maintenance/s1-incomplete-decision-expiration-period/s1-incomplete-decision-expiration-period.component.html","webpack:///src/app/modules/pages/maintenance/s1-incomplete-decision-expiration-period/s1-incomplete-decision-expiration-period-routing.module.ts"],"names":["S1IncompleteDecisionExpirationPeriodModule","S1IncompleteDecisionExpirationPeriodComponent","apiService","formBuilder","sweetAlertService","validateFieldService","displayedColumns","s1IncompleteDecisionExpirationPeriod","s1IncompleteDecisionExpirationPeriodList","getList","setFormValidator","findAll","subscribe","res","responseData","data","dataSource","paginator","formListComponent","sort","save","undefined","success","err","Number","noOfWorkingDays","error","message","resetFormValidator","findById","idForUpdate","console","log","update","s1IncompleteDecisionExpirationPeriodForm","group","required","markAsUntouched","markAsPristine","fire","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","value","deleteById","id","customSuccessMessage","getS1IncompleteDecisionExpirationPeriod","routes","path","component","S1IncompleteDecisionExpirationPeriodRoutingModule","forChild"],"mappings":"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","file":"s1-incomplete-decision-expiration-period-s1-incomplete-decision-expiration-period-module-es5.js","sourcesContent":["export * from './form-action-buttons/form-action-buttons.component';\nexport * from './form-list/form-list.component';","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { S1IncompleteDecisionExpirationPeriodRoutingModule } from './s1-incomplete-decision-expiration-period-routing.module';\nimport { FragmentsModule } from 'app/modules/fragments/fragments.module';\nimport { AngularMaterialModule } from '@shared';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { S1IncompleteDecisionExpirationPeriodComponent } from './s1-incomplete-decision-expiration-period.component';\n\n\n@NgModule({\n  declarations: [\n    S1IncompleteDecisionExpirationPeriodComponent\n  ],\n  imports: [\n    CommonModule,\n    S1IncompleteDecisionExpirationPeriodRoutingModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    AngularMaterialModule,\n    FragmentsModule,\n  ]\n})\nexport class S1IncompleteDecisionExpirationPeriodModule { }\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { FormListComponent } from '@fragments';\nimport { ApiService, SweetAlertService } from '@services';\nimport { ENDPOINTS } from '@shared';\nimport { S1SettlementOrExpirationPeriod } from 'app/core/models/s1-settlement-or-expiration-period.model';\nimport { ValidateFieldService } from 'app/core/services/validate-field.service';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-s1-incomplete-decision-expiration-period',\n  templateUrl: './s1-incomplete-decision-expiration-period.component.html',\n  styleUrls: ['./s1-incomplete-decision-expiration-period.component.scss']\n})\nexport class S1IncompleteDecisionExpirationPeriodComponent implements OnInit {\n\n  @ViewChild(FormListComponent) formListComponent: FormListComponent;\n  dataSource: MatTableDataSource<S1SettlementOrExpirationPeriod>;\n  displayedColumns: string[] = ['noOfWorkingDays'];\n\n  s1IncompleteDecisionExpirationPeriod = new S1SettlementOrExpirationPeriod();\n  s1IncompleteDecisionExpirationPeriodList = [];\n\n  s1IncompleteDecisionExpirationPeriodForm: FormGroup;\n\n\n  constructor(\n    private apiService: ApiService,\n    private formBuilder: FormBuilder,\n    private sweetAlertService: SweetAlertService,\n    public validateFieldService: ValidateFieldService,\n  ) { }\n\n  ngOnInit() {\n    this.getList();\n    this.setFormValidator();\n  }\n\n  getList(): void {\n    this.apiService.findAll(ENDPOINTS.s1IncompleteDecisionExpirationPeriod).subscribe((res: any) => {\n      this.s1IncompleteDecisionExpirationPeriodList = res.responseData.data;\n      this.dataSource = new MatTableDataSource<S1SettlementOrExpirationPeriod>(res.responseData.data);\n      this.dataSource.paginator = this.formListComponent.paginator;\n      this.dataSource.sort = this.formListComponent.sort;\n    });\n  }\n\n  save(): void {\n    this.apiService.save(ENDPOINTS.s1IncompleteDecisionExpirationPeriod, this.s1IncompleteDecisionExpirationPeriod).subscribe(\n      (res: any) => {\n        if (res !== undefined) {\n          this.sweetAlertService.success(res);\n        }\n      }, (err: any) => {\n        if (!Number(this.s1IncompleteDecisionExpirationPeriod.noOfWorkingDays)) {\n          err.error.message = 'Please enter numeric values only';\n        } else {\n          err.error.message = 'Default Number of working days have already been set. Select the entry to update the record';\n        }\n        this.sweetAlertService.error(err);\n      }, () => {\n        this.resetFormValidator(),\n          this.getList();\n      }\n    )\n  }\n\n  getS1IncompleteDecisionExpirationPeriod(): void {\n    this.apiService.findById(ENDPOINTS.s1IncompleteDecisionExpirationPeriod, this.formListComponent.idForUpdate).subscribe((res: any) => {\n      if (res) {\n        this.s1IncompleteDecisionExpirationPeriod = res.responseData.data;\n        console.log(res);\n\n      }\n    });\n  }\n\n  update(): void {\n    this.apiService.update(ENDPOINTS.s1IncompleteDecisionExpirationPeriod, this.s1IncompleteDecisionExpirationPeriod).subscribe(\n      (res: any) => {\n        if (res !== undefined) {\n          this.sweetAlertService.success(res);\n        }\n      }, (err: any) => {\n        this.sweetAlertService.error(err);\n      }, () => {\n        this.resetFormValidator()\n        this.getList();\n      });\n  }\n\n  setFormValidator(): void {\n    this.s1IncompleteDecisionExpirationPeriodForm = this.formBuilder.group({\n      noOfWorkingDays: ['', Validators.required],\n    });\n  }\n\n  resetFormValidator(): void {\n    this.s1IncompleteDecisionExpirationPeriod = new S1SettlementOrExpirationPeriod();\n    this.s1IncompleteDecisionExpirationPeriodForm.markAsUntouched();\n    this.s1IncompleteDecisionExpirationPeriodForm.markAsPristine();\n  }\n\n  delete() {\n    Swal.fire({\n      text: 'Are you sure you want to delete this announcement?',\n      icon: 'question',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Confirm'\n    }).then((result) => {\n      if (result.value) {\n        this.apiService.deleteById(ENDPOINTS.s1IncompleteDecisionExpirationPeriod, this.s1IncompleteDecisionExpirationPeriod.id).subscribe(\n          () => {\n            this.sweetAlertService.customSuccessMessage('S1 incomplete decision expiration period successfully deleted.');\n            this.resetFormValidator();\n            this.getList();\n          }\n        );\n      }\n    });\n  }\n\n}\n","<form>\n    <div class=\"container-fluid\">\n        <div class=\"row\">\n            <div class=\"col-md-12 title\">\n                <mat-label>\n                    S1 Incomplete Decision Expiration Period\n                </mat-label>\n            </div>\n        </div>\n        <hr>\n\n        <form [formGroup]=\"s1IncompleteDecisionExpirationPeriodForm\">\n            <div class=\"row\">\n                <mat-form-field class=\"col-md-8\" appearance=\"outline\">\n                    <mat-label>Number of Working Days <span class=\"required-field\">*</span></mat-label>\n                    <input matInput [(ngModel)]=\"s1IncompleteDecisionExpirationPeriod.noOfWorkingDays\"\n                        name=\"noOfWorkingDays\" (keydown)=\"validateFieldService.numbersOnly($event)\"\n                        formControlName=\"noOfWorkingDays\">\n                </mat-form-field>\n            </div>\n        </form>\n\n        <app-form-action-buttons [childObject]=\"s1IncompleteDecisionExpirationPeriod\"\n            [childForm]=\"s1IncompleteDecisionExpirationPeriodForm\" (saveFunction)=\"save()\" (updateFunction)=\"update()\"\n            (cancelFunction)=\"resetFormValidator()\" (deleteFunction)=\"delete()\">\n        </app-form-action-buttons>\n        <br>\n        <app-form-list [dataSource]=\"dataSource\" [displayedColumns]=\"displayedColumns\"\n            (selectInListFunction)=\"getS1IncompleteDecisionExpirationPeriod()\"></app-form-list>\n\n    </div>\n</form>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { S1IncompleteDecisionExpirationPeriodComponent } from './s1-incomplete-decision-expiration-period.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: S1IncompleteDecisionExpirationPeriodComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class S1IncompleteDecisionExpirationPeriodRoutingModule { }\n"]}