{"version":3,"sources":["webpack:///src/app/modules/fragments/index.ts","webpack:///src/app/modules/pages/maintenance/s1-incomplete-decision-expiration-period/s1-incomplete-decision-expiration-period.module.ts","webpack:///src/app/modules/pages/maintenance/s1-incomplete-decision-expiration-period/s1-incomplete-decision-expiration-period.component.ts","webpack:///src/app/modules/pages/maintenance/s1-incomplete-decision-expiration-period/s1-incomplete-decision-expiration-period.component.html","webpack:///src/app/modules/pages/maintenance/s1-incomplete-decision-expiration-period/s1-incomplete-decision-expiration-period-routing.module.ts"],"names":["S1IncompleteDecisionExpirationPeriodModule","S1IncompleteDecisionExpirationPeriodComponent","apiService","formBuilder","sweetAlertService","validateFieldService","displayedColumns","s1IncompleteDecisionExpirationPeriod","s1IncompleteDecisionExpirationPeriodList","getList","setFormValidator","findAll","subscribe","res","responseData","data","dataSource","paginator","formListComponent","sort","save","undefined","success","err","Number","noOfWorkingDays","error","message","resetFormValidator","findById","idForUpdate","console","log","update","s1IncompleteDecisionExpirationPeriodForm","group","required","markAsUntouched","markAsPristine","fire","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","value","deleteById","id","customSuccessMessage","getS1IncompleteDecisionExpirationPeriod","routes","path","component","S1IncompleteDecisionExpirationPeriodRoutingModule","forChild"],"mappings":"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","file":"s1-incomplete-decision-expiration-period-s1-incomplete-decision-expiration-period-module-es5.js","sourcesContent":["export * from './form-action-buttons/form-action-buttons.component';\r\nexport * from './form-list/form-list.component';","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { S1IncompleteDecisionExpirationPeriodRoutingModule } from './s1-incomplete-decision-expiration-period-routing.module';\r\nimport { FragmentsModule } from 'app/modules/fragments/fragments.module';\r\nimport { AngularMaterialModule } from '@shared';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { S1IncompleteDecisionExpirationPeriodComponent } from './s1-incomplete-decision-expiration-period.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    S1IncompleteDecisionExpirationPeriodComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    S1IncompleteDecisionExpirationPeriodRoutingModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule,\r\n    AngularMaterialModule,\r\n    FragmentsModule,\r\n  ]\r\n})\r\nexport class S1IncompleteDecisionExpirationPeriodModule { }\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { FormListComponent } from '@fragments';\r\nimport { ApiService, SweetAlertService } from '@services';\r\nimport { ENDPOINTS } from '@shared';\r\nimport { S1SettlementOrExpirationPeriod } from 'app/core/models/s1-settlement-or-expiration-period.model';\r\nimport { ValidateFieldService } from 'app/core/services/validate-field.service';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-s1-incomplete-decision-expiration-period',\r\n  templateUrl: './s1-incomplete-decision-expiration-period.component.html',\r\n  styleUrls: ['./s1-incomplete-decision-expiration-period.component.scss']\r\n})\r\nexport class S1IncompleteDecisionExpirationPeriodComponent implements OnInit {\r\n\r\n  @ViewChild(FormListComponent) formListComponent: FormListComponent;\r\n  dataSource: MatTableDataSource<S1SettlementOrExpirationPeriod>;\r\n  displayedColumns: string[] = ['noOfWorkingDays'];\r\n\r\n  s1IncompleteDecisionExpirationPeriod = new S1SettlementOrExpirationPeriod();\r\n  s1IncompleteDecisionExpirationPeriodList = [];\r\n\r\n  s1IncompleteDecisionExpirationPeriodForm: FormGroup;\r\n\r\n\r\n  constructor(\r\n    private apiService: ApiService,\r\n    private formBuilder: FormBuilder,\r\n    private sweetAlertService: SweetAlertService,\r\n    public validateFieldService: ValidateFieldService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.getList();\r\n    this.setFormValidator();\r\n  }\r\n\r\n  getList(): void {\r\n    this.apiService.findAll(ENDPOINTS.s1IncompleteDecisionExpirationPeriod).subscribe((res: any) => {\r\n      this.s1IncompleteDecisionExpirationPeriodList = res.responseData.data;\r\n      this.dataSource = new MatTableDataSource<S1SettlementOrExpirationPeriod>(res.responseData.data);\r\n      this.dataSource.paginator = this.formListComponent.paginator;\r\n      this.dataSource.sort = this.formListComponent.sort;\r\n    });\r\n  }\r\n\r\n  save(): void {\r\n    this.apiService.save(ENDPOINTS.s1IncompleteDecisionExpirationPeriod, this.s1IncompleteDecisionExpirationPeriod).subscribe(\r\n      (res: any) => {\r\n        if (res !== undefined) {\r\n          this.sweetAlertService.success(res);\r\n        }\r\n      }, (err: any) => {\r\n        if (!Number(this.s1IncompleteDecisionExpirationPeriod.noOfWorkingDays)) {\r\n          err.error.message = 'Please enter numeric values only';\r\n        } else {\r\n          err.error.message = 'Default Number of working days have already been set. Select the entry to update the record';\r\n        }\r\n        this.sweetAlertService.error(err);\r\n      }, () => {\r\n        this.resetFormValidator(),\r\n          this.getList();\r\n      }\r\n    )\r\n  }\r\n\r\n  getS1IncompleteDecisionExpirationPeriod(): void {\r\n    this.apiService.findById(ENDPOINTS.s1IncompleteDecisionExpirationPeriod, this.formListComponent.idForUpdate).subscribe((res: any) => {\r\n      if (res) {\r\n        this.s1IncompleteDecisionExpirationPeriod = res.responseData.data;\r\n        console.log(res);\r\n\r\n      }\r\n    });\r\n  }\r\n\r\n  update(): void {\r\n    this.apiService.update(ENDPOINTS.s1IncompleteDecisionExpirationPeriod, this.s1IncompleteDecisionExpirationPeriod).subscribe(\r\n      (res: any) => {\r\n        if (res !== undefined) {\r\n          this.sweetAlertService.success(res);\r\n        }\r\n      }, (err: any) => {\r\n        this.sweetAlertService.error(err);\r\n      }, () => {\r\n        this.resetFormValidator()\r\n        this.getList();\r\n      });\r\n  }\r\n\r\n  setFormValidator(): void {\r\n    this.s1IncompleteDecisionExpirationPeriodForm = this.formBuilder.group({\r\n      noOfWorkingDays: ['', Validators.required],\r\n    });\r\n  }\r\n\r\n  resetFormValidator(): void {\r\n    this.s1IncompleteDecisionExpirationPeriod = new S1SettlementOrExpirationPeriod();\r\n    this.s1IncompleteDecisionExpirationPeriodForm.markAsUntouched();\r\n    this.s1IncompleteDecisionExpirationPeriodForm.markAsPristine();\r\n  }\r\n\r\n  delete() {\r\n    Swal.fire({\r\n      text: 'Are you sure you want to delete this announcement?',\r\n      icon: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Confirm'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.apiService.deleteById(ENDPOINTS.s1IncompleteDecisionExpirationPeriod, this.s1IncompleteDecisionExpirationPeriod.id).subscribe(\r\n          () => {\r\n            this.sweetAlertService.customSuccessMessage('S1 incomplete decision expiration period successfully deleted.');\r\n            this.resetFormValidator();\r\n            this.getList();\r\n          }\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<form>\r\n    <div class=\"container-fluid\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-12 title\">\r\n                <mat-label>\r\n                    S1 Incomplete Decision Expiration Period\r\n                </mat-label>\r\n            </div>\r\n        </div>\r\n        <hr>\r\n\r\n        <form [formGroup]=\"s1IncompleteDecisionExpirationPeriodForm\">\r\n            <div class=\"row\">\r\n                <mat-form-field class=\"col-md-8\" appearance=\"outline\">\r\n                    <mat-label>Number of Working Days <span class=\"required-field\">*</span></mat-label>\r\n                    <input matInput [(ngModel)]=\"s1IncompleteDecisionExpirationPeriod.noOfWorkingDays\"\r\n                        name=\"noOfWorkingDays\" (keydown)=\"validateFieldService.numbersOnly($event)\"\r\n                        formControlName=\"noOfWorkingDays\">\r\n                </mat-form-field>\r\n            </div>\r\n        </form>\r\n\r\n        <app-form-action-buttons [childObject]=\"s1IncompleteDecisionExpirationPeriod\"\r\n            [childForm]=\"s1IncompleteDecisionExpirationPeriodForm\" (saveFunction)=\"save()\" (updateFunction)=\"update()\"\r\n            (cancelFunction)=\"resetFormValidator()\" (deleteFunction)=\"delete()\">\r\n        </app-form-action-buttons>\r\n        <br>\r\n        <app-form-list [dataSource]=\"dataSource\" [displayedColumns]=\"displayedColumns\"\r\n            (selectInListFunction)=\"getS1IncompleteDecisionExpirationPeriod()\"></app-form-list>\r\n\r\n    </div>\r\n</form>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { S1IncompleteDecisionExpirationPeriodComponent } from './s1-incomplete-decision-expiration-period.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: S1IncompleteDecisionExpirationPeriodComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class S1IncompleteDecisionExpirationPeriodRoutingModule { }\r\n"]}