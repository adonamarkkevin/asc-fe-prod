{"version":3,"sources":["./src/app/modules/fragments/index.ts","./src/app/modules/pages/maintenance/login-images/login-images.module.ts","./src/app/modules/pages/maintenance/login-images/login-images.component.html","./src/app/modules/pages/maintenance/login-images/login-images.component.ts","./src/app/modules/pages/maintenance/login-images/login-images-routing.module.ts","./src/app/modules/pages/maintenance/login-images/login-images.component.scss"],"names":[],"mappings":"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","file":"login-images-login-images-module-es2015.js","sourcesContent":["export * from './form-action-buttons/form-action-buttons.component';\r\nexport * from './form-list/form-list.component';","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { LoginImagesRoutingModule } from './login-images-routing.module';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { AngularMaterialModule } from '@shared';\r\nimport { FragmentsModule } from 'app/modules/fragments/fragments.module';\r\nimport { LoginImagesComponent } from './login-images.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [LoginImagesComponent],\r\n  imports: [\r\n    CommonModule,\r\n    LoginImagesRoutingModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule,\r\n    AngularMaterialModule,\r\n    FragmentsModule,\r\n  ]\r\n})\r\nexport class LoginImagesModule { }\r\n","export default \"<form>\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12 title\\\">\\r\\n        <mat-label>\\r\\n          Login Image\\r\\n        </mat-label>\\r\\n      </div>\\r\\n    </div>\\r\\n    <hr>\\r\\n    <form [formGroup]=\\\"loginImageForm\\\">\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-md-8\\\" appearance=\\\"outline\\\">\\r\\n            <mat-label>Filename:  </mat-label>\\r\\n            <br>\\r\\n            <input #docInput matInput [value]=\\\"loginImage?.originalFilename\\\" *ngIf=\\\"loginImage?.originalFilename\\\" disabled>\\r\\n\\r\\n            <input #docFile class=\\\"file-upload\\\" type=\\\"file\\\" accept=\\\"image/jpg, image/jpeg\\\" (change)=\\\"selectFile($event)\\\" [hidden]=\\\"loginImage?.originalFilename\\\"/>\\r\\n          </div>\\r\\n          <div class=\\\"col-md-12\\\"><br></div>\\r\\n          <div class=\\\"col-md-7\\\" appearance=\\\"outline\\\">\\r\\n            <button mat-raised-button\\r\\n              *ngIf=\\\"loginImage?.originalFilename\\\"\\r\\n              class=\\\"button-red button-right\\\" (click)=\\\"viewDocument(loginImage)\\\">\\r\\n              <i class=\\\"material-icons color__white\\\">open_in_new</i> VIEW IMAGE\\r\\n            </button>\\r\\n          </div>\\r\\n        </div><br>\\r\\n    </form>\\r\\n\\r\\n    <app-form-action-buttons [childObject]=\\\"loginImage\\\" [childForm]=\\\"loginImageForm\\\" (saveFunction)=\\\"save()\\\"\\r\\n      (cancelFunction)=\\\"resetFormValidator()\\\" (deleteFunction)=\\\"delete()\\\">\\r\\n    </app-form-action-buttons>\\r\\n\\r\\n    <div class=\\\"col-md-12\\\"><hr></div>\\r\\n    <div class=\\\"col-md-12\\\"><br></div>\\r\\n\\r\\n    <app-form-list [dataSource]=\\\"dataSource\\\" [displayedColumns]=\\\"displayedColumns\\\"\\r\\n      (selectInListFunction)=\\\"viewLoginImageList()\\\"></app-form-list>\\r\\n  </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n</form>\\r\\n\";","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { FormListComponent } from '@fragments';\r\nimport { ApiService, SweetAlertService } from '@services';\r\nimport { ENDPOINTS } from '@shared';\r\nimport { LoginImage } from 'app/core/models/login-image.model';\r\nimport { DateService } from 'app/core/services/date.service';\r\nimport { FileStorageService } from 'app/core/services/file.storage.service';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-login-images',\r\n  templateUrl: './login-images.component.html',\r\n  styleUrls: ['./login-images.component.scss']\r\n})\r\nexport class LoginImagesComponent implements OnInit {\r\n  @ViewChild(FormListComponent) formListComponent: FormListComponent;\r\n  dataSource: MatTableDataSource<LoginImage>;\r\n  displayedColumns: string[] = [\r\n    'originalFilename',\r\n    'fileURL',\r\n    'fileExtension',\r\n    // 'displayed'\r\n  ];\r\n\r\n  @ViewChild('docInput') myDocInput: ElementRef;\r\n  @ViewChild('docFile') myDocFile: ElementRef;\r\n\r\n  loginImage = new LoginImage();\r\n  loginImageForm: FormGroup;\r\n  loginImageList = [];\r\n  safeURL: any;\r\n  uploadedLoginImage: any;\r\n  fileSize: number;\r\n  selectedFile: File;\r\n  isShowUploadButton = false;\r\n\r\n  constructor(\r\n    private apiService: ApiService,\r\n    private formBuilder: FormBuilder,\r\n    private sweetAlertService: SweetAlertService,\r\n    private dateService: DateService,\r\n    private sanitizer: DomSanitizer,\r\n    private spinner: NgxSpinnerService,\r\n    private fileStorageService: FileStorageService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.setFormValidator();\r\n    this.getLoginImageList();\r\n  }\r\n\r\n  getLoginImageList(): void {\r\n    this.apiService.findAll(ENDPOINTS.loginImage).subscribe(\r\n      (res: any) => {\r\n        this.loginImageList = res.responseData.data;\r\n        this.dataSource = new MatTableDataSource<LoginImage>(res.responseData.data);\r\n      });\r\n\r\n  }\r\n\r\n  save(): void {\r\n    Swal.fire({\r\n      text: 'Are you sure you want to upload this image?',\r\n      icon: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Confirm'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.spinner.show();\r\n        this.fileStorageService.uploadImage(ENDPOINTS.loginImage + `?displayed=true`, this.selectedFile)\r\n          .subscribe((res: any) => {\r\n            this.uploadedLoginImage = res.responseData.data\r\n            this.hideSpinner();\r\n            this.selectedFile = null;\r\n            this.isShowUploadButton = false;\r\n            this.loginImage.originalFilename = null;\r\n            this.sweetAlertService.customSuccessMessage('Image successfully uploaded.');\r\n            this.getLoginImageList();\r\n            this.myDocInput.nativeElement.value = '';\r\n            this.myDocFile.nativeElement.value = '';\r\n            this.loginImage = new LoginImage();\r\n          }, (err: any) => {\r\n            this.hideSpinner();\r\n            this.sweetAlertService.error(err);\r\n          }, () => {\r\n            this.hideSpinner();\r\n          });\r\n      } else {\r\n        this.selectedFile = null;\r\n      }\r\n    });\r\n  }\r\n\r\n  viewLoginImageList(): void {\r\n    this.apiService.findById(ENDPOINTS.loginImage, this.formListComponent.idForUpdate).subscribe(\r\n      (res: any) => {\r\n        this.loginImage = res?.responseData?.data;\r\n      }\r\n    )\r\n  }\r\n\r\n  viewDocument(obj) {\r\n    window.open(obj.fileURL);\r\n  }\r\n\r\n  delete(): void {\r\n    Swal.fire({\r\n      text: 'Are you sure you want to delete this login image?',\r\n      icon: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Confirm'\r\n    }).then((result) => {\r\n\r\n      this.apiService.deleteById(ENDPOINTS.loginImage, this.formListComponent.idForUpdate).subscribe(\r\n        (res: any) => {\r\n          this.myDocInput.nativeElement.value = '';\r\n          this.myDocFile.nativeElement.value = '';\r\n          this.sweetAlertService.customSuccessMessage('Login image successfully deleted.');\r\n          this.getLoginImageList();\r\n          this.loginImage = new LoginImage();\r\n        }\r\n      )\r\n    });\r\n  }\r\n\r\n  selectFile(event) {\r\n    if (event.target.files[0]) {\r\n      this.fileSize = event.target.files[0].size;\r\n      const fileURL = URL.createObjectURL(event.target.files[0]);\r\n      this.safeURL = this.sanitizer.bypassSecurityTrustResourceUrl(fileURL);\r\n      const reader = new FileReader();\r\n      const [file] = event.target.files;\r\n      reader.readAsDataURL(file);\r\n      reader.onload = () => {\r\n      };\r\n      this.selectedFile = event.target.files[0];\r\n    }\r\n  }\r\n\r\n  compareImageLogin(value: any, selected: any): boolean {\r\n    if (value && selected) {\r\n      return value.id === selected.id;\r\n    }\r\n  }\r\n\r\n\r\n  setFormValidator(): void {\r\n    this.loginImageForm = this.formBuilder.group({\r\n      originalFileName: [''],\r\n      displayed: [''],\r\n    });\r\n  }\r\n\r\n  resetFormValidator(): void {\r\n    this.loginImage = new LoginImage();\r\n  }\r\n\r\n  hideSpinner() {\r\n    setTimeout(() => {\r\n      this.spinner.hide();\r\n    }, 1);\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LoginImagesComponent } from './login-images.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LoginImagesComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class LoginImagesRoutingModule { }\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcGFnZXMvbWFpbnRlbmFuY2UvbG9naW4taW1hZ2VzL2xvZ2luLWltYWdlcy5jb21wb25lbnQuc2NzcyJ9 */\";"],"sourceRoot":"webpack:///"}