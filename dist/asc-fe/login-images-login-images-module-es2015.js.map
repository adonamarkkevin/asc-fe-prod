{"version":3,"sources":["./src/app/modules/fragments/index.ts","./src/app/modules/pages/maintenance/login-images/login-images.module.ts","./src/app/modules/pages/maintenance/login-images/login-images.component.ts","./src/app/modules/pages/maintenance/login-images/login-images.component.html","./src/app/modules/pages/maintenance/login-images/login-images-routing.module.ts"],"names":[],"mappings":"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","file":"login-images-login-images-module-es2015.js","sourcesContent":["export * from './form-action-buttons/form-action-buttons.component';\r\nexport * from './form-list/form-list.component';","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { LoginImagesRoutingModule } from './login-images-routing.module';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { AngularMaterialModule } from '@shared';\r\nimport { FragmentsModule } from 'app/modules/fragments/fragments.module';\r\nimport { LoginImagesComponent } from './login-images.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [LoginImagesComponent],\r\n  imports: [\r\n    CommonModule,\r\n    LoginImagesRoutingModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule,\r\n    AngularMaterialModule,\r\n    FragmentsModule,\r\n  ]\r\n})\r\nexport class LoginImagesModule { }\r\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { FormListComponent } from '@fragments';\r\nimport { ApiService, SweetAlertService } from '@services';\r\nimport { ENDPOINTS } from '@shared';\r\nimport { LoginImage } from 'app/core/models/login-image.model';\r\nimport { DateService } from 'app/core/services/date.service';\r\nimport { FileStorageService } from 'app/core/services/file.storage.service';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-login-images',\r\n  templateUrl: './login-images.component.html',\r\n  styleUrls: ['./login-images.component.scss']\r\n})\r\nexport class LoginImagesComponent implements OnInit {\r\n  @ViewChild(FormListComponent) formListComponent: FormListComponent;\r\n  dataSource: MatTableDataSource<LoginImage>;\r\n  displayedColumns: string[] = [\r\n    'originalFilename',\r\n    'fileURL',\r\n    'fileExtension',\r\n    // 'displayed'\r\n  ];\r\n\r\n  @ViewChild('docInput') myDocInput: ElementRef;\r\n  @ViewChild('docFile') myDocFile: ElementRef;\r\n\r\n  loginImage = new LoginImage();\r\n  loginImageForm: FormGroup;\r\n  loginImageList = [];\r\n  safeURL: any;\r\n  uploadedLoginImage: any;\r\n  fileSize: number;\r\n  selectedFile: File;\r\n  isShowUploadButton = false;\r\n\r\n  constructor(\r\n    private apiService: ApiService,\r\n    private formBuilder: FormBuilder,\r\n    private sweetAlertService: SweetAlertService,\r\n    private dateService: DateService,\r\n    private sanitizer: DomSanitizer,\r\n    private spinner: NgxSpinnerService,\r\n    private fileStorageService: FileStorageService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.setFormValidator();\r\n    this.getLoginImageList();\r\n  }\r\n\r\n  getLoginImageList(): void {\r\n    this.apiService.findAll(ENDPOINTS.loginImage).subscribe(\r\n      (res: any) => {\r\n        this.loginImageList = res.responseData.data;\r\n        this.dataSource = new MatTableDataSource<LoginImage>(res.responseData.data);\r\n      });\r\n\r\n  }\r\n\r\n  save(): void {\r\n    Swal.fire({\r\n      text: 'Are you sure you want to upload this image?',\r\n      icon: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Confirm'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.spinner.show();\r\n        this.fileStorageService.uploadImage(ENDPOINTS.loginImage + `?displayed=true`, this.selectedFile)\r\n          .subscribe((res: any) => {\r\n            this.uploadedLoginImage = res.responseData.data\r\n            this.hideSpinner();\r\n            this.selectedFile = null;\r\n            this.isShowUploadButton = false;\r\n            this.loginImage.originalFilename = null;\r\n            this.sweetAlertService.customSuccessMessage('Image successfully uploaded.');\r\n            this.getLoginImageList();\r\n            this.myDocInput.nativeElement.value = '';\r\n            this.myDocFile.nativeElement.value = '';\r\n            this.loginImage = new LoginImage();\r\n          }, (err: any) => {\r\n            this.hideSpinner();\r\n            this.sweetAlertService.error(err);\r\n          }, () => {\r\n            this.hideSpinner();\r\n          });\r\n      } else {\r\n        this.selectedFile = null;\r\n      }\r\n    });\r\n  }\r\n\r\n  viewLoginImageList(): void {\r\n    this.apiService.findById(ENDPOINTS.loginImage, this.formListComponent.idForUpdate).subscribe(\r\n      (res: any) => {\r\n        this.loginImage = res?.responseData?.data;\r\n      }\r\n    )\r\n  }\r\n\r\n  viewDocument(obj) {\r\n    window.open(obj.fileURL);\r\n  }\r\n\r\n  delete(): void {\r\n    Swal.fire({\r\n      text: 'Are you sure you want to delete this login image?',\r\n      icon: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Confirm'\r\n    }).then((result) => {\r\n\r\n      this.apiService.deleteById(ENDPOINTS.loginImage, this.formListComponent.idForUpdate).subscribe(\r\n        (res: any) => {\r\n          this.myDocInput.nativeElement.value = '';\r\n          this.myDocFile.nativeElement.value = '';\r\n          this.sweetAlertService.customSuccessMessage('Login image successfully deleted.');\r\n          this.getLoginImageList();\r\n          this.loginImage = new LoginImage();\r\n        }\r\n      )\r\n    });\r\n  }\r\n\r\n  selectFile(event) {\r\n    if (event.target.files[0]) {\r\n      this.fileSize = event.target.files[0].size;\r\n      const fileURL = URL.createObjectURL(event.target.files[0]);\r\n      this.safeURL = this.sanitizer.bypassSecurityTrustResourceUrl(fileURL);\r\n      const reader = new FileReader();\r\n      const [file] = event.target.files;\r\n      reader.readAsDataURL(file);\r\n      reader.onload = () => {\r\n      };\r\n      this.selectedFile = event.target.files[0];\r\n    }\r\n  }\r\n\r\n  compareImageLogin(value: any, selected: any): boolean {\r\n    if (value && selected) {\r\n      return value.id === selected.id;\r\n    }\r\n  }\r\n\r\n\r\n  setFormValidator(): void {\r\n    this.loginImageForm = this.formBuilder.group({\r\n      originalFileName: [''],\r\n      displayed: [''],\r\n    });\r\n  }\r\n\r\n  resetFormValidator(): void {\r\n    this.loginImage = new LoginImage();\r\n  }\r\n\r\n  hideSpinner() {\r\n    setTimeout(() => {\r\n      this.spinner.hide();\r\n    }, 1);\r\n  }\r\n\r\n}\r\n","<form>\r\n  <div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12 title\">\r\n        <mat-label>\r\n          Login Image\r\n        </mat-label>\r\n      </div>\r\n    </div>\r\n    <hr>\r\n    <form [formGroup]=\"loginImageForm\">\r\n\r\n        <div class=\"row\">\r\n          <div class=\"col-md-8\" appearance=\"outline\">\r\n            <mat-label>Filename:  </mat-label>\r\n            <br>\r\n            <input #docInput matInput [value]=\"loginImage?.originalFilename\" *ngIf=\"loginImage?.originalFilename\" disabled>\r\n\r\n            <input #docFile class=\"file-upload\" type=\"file\" accept=\"image/jpg, image/jpeg\" (change)=\"selectFile($event)\" [hidden]=\"loginImage?.originalFilename\"/>\r\n          </div>\r\n          <div class=\"col-md-12\"><br></div>\r\n          <div class=\"col-md-7\" appearance=\"outline\">\r\n            <button mat-raised-button\r\n              *ngIf=\"loginImage?.originalFilename\"\r\n              class=\"button-red button-right\" (click)=\"viewDocument(loginImage)\">\r\n              <i class=\"material-icons color__white\">open_in_new</i> VIEW IMAGE\r\n            </button>\r\n          </div>\r\n        </div><br>\r\n    </form>\r\n\r\n    <app-form-action-buttons [childObject]=\"loginImage\" [childForm]=\"loginImageForm\" (saveFunction)=\"save()\"\r\n      (cancelFunction)=\"resetFormValidator()\" (deleteFunction)=\"delete()\">\r\n    </app-form-action-buttons>\r\n\r\n    <div class=\"col-md-12\"><hr></div>\r\n    <div class=\"col-md-12\"><br></div>\r\n\r\n    <app-form-list [dataSource]=\"dataSource\" [displayedColumns]=\"displayedColumns\"\r\n      (selectInListFunction)=\"viewLoginImageList()\"></app-form-list>\r\n  </div>\r\n\r\n\r\n\r\n\r\n</form>\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LoginImagesComponent } from './login-images.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LoginImagesComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class LoginImagesRoutingModule { }\r\n"],"sourceRoot":"webpack:///"}