{"version":3,"sources":["./src/app/modules/fragments/index.ts","./src/app/modules/pages/maintenance/login-images/login-images.module.ts","./src/app/modules/pages/maintenance/login-images/login-images.component.ts","./src/app/modules/pages/maintenance/login-images/login-images.component.html","./src/app/modules/pages/maintenance/login-images/login-images-routing.module.ts"],"names":[],"mappings":"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","file":"login-images-login-images-module-es2015.js","sourcesContent":["export * from './form-action-buttons/form-action-buttons.component';\nexport * from './form-list/form-list.component';","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { LoginImagesRoutingModule } from './login-images-routing.module';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { AngularMaterialModule } from '@shared';\nimport { FragmentsModule } from 'app/modules/fragments/fragments.module';\nimport { LoginImagesComponent } from './login-images.component';\n\n\n@NgModule({\n  declarations: [LoginImagesComponent],\n  imports: [\n    CommonModule,\n    LoginImagesRoutingModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    AngularMaterialModule,\n    FragmentsModule,\n  ]\n})\nexport class LoginImagesModule { }\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { FormListComponent } from '@fragments';\nimport { ApiService, SweetAlertService } from '@services';\nimport { ENDPOINTS } from '@shared';\nimport { LoginImage } from 'app/core/models/login-image.model';\nimport { DateService } from 'app/core/services/date.service';\nimport { FileStorageService } from 'app/core/services/file.storage.service';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-login-images',\n  templateUrl: './login-images.component.html',\n  styleUrls: ['./login-images.component.scss']\n})\nexport class LoginImagesComponent implements OnInit {\n  @ViewChild(FormListComponent) formListComponent: FormListComponent;\n  dataSource: MatTableDataSource<LoginImage>;\n  displayedColumns: string[] = [\n    'originalFilename',\n    'fileURL',\n    'fileExtension',\n    // 'displayed'\n  ];\n\n  @ViewChild('docInput') myDocInput: ElementRef;\n  @ViewChild('docFile') myDocFile: ElementRef;\n\n  loginImage = new LoginImage();\n  loginImageForm: FormGroup;\n  loginImageList = [];\n  safeURL: any;\n  uploadedLoginImage: any;\n  fileSize: number;\n  selectedFile: File;\n  isShowUploadButton = false;\n\n  constructor(\n    private apiService: ApiService,\n    private formBuilder: FormBuilder,\n    private sweetAlertService: SweetAlertService,\n    private dateService: DateService,\n    private sanitizer: DomSanitizer,\n    private spinner: NgxSpinnerService,\n    private fileStorageService: FileStorageService,\n  ) { }\n\n  ngOnInit(): void {\n    this.setFormValidator();\n    this.getLoginImageList();\n  }\n\n  getLoginImageList(): void {\n    this.apiService.findAll(ENDPOINTS.loginImage).subscribe(\n      (res: any) => {\n        this.loginImageList = res.responseData.data;\n        this.dataSource = new MatTableDataSource<LoginImage>(res.responseData.data);\n      });\n\n  }\n\n  save(): void {\n    Swal.fire({\n      text: 'Are you sure you want to upload this image?',\n      icon: 'question',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Confirm'\n    }).then((result) => {\n      if (result.value) {\n        this.spinner.show();\n        this.fileStorageService.uploadImage(ENDPOINTS.loginImage + `?displayed=true`, this.selectedFile)\n          .subscribe((res: any) => {\n            this.uploadedLoginImage = res.responseData.data\n            this.hideSpinner();\n            this.selectedFile = null;\n            this.isShowUploadButton = false;\n            this.loginImage.originalFilename = null;\n            this.sweetAlertService.customSuccessMessage('Image successfully uploaded.');\n            this.getLoginImageList();\n            this.myDocInput.nativeElement.value = '';\n            this.myDocFile.nativeElement.value = '';\n            this.loginImage = new LoginImage();\n          }, (err: any) => {\n            this.hideSpinner();\n            this.sweetAlertService.error(err);\n          }, () => {\n            this.hideSpinner();\n          });\n      } else {\n        this.selectedFile = null;\n      }\n    });\n  }\n\n  viewLoginImageList(): void {\n    this.apiService.findById(ENDPOINTS.loginImage, this.formListComponent.idForUpdate).subscribe(\n      (res: any) => {\n        this.loginImage = res?.responseData?.data;\n      }\n    )\n  }\n\n  viewDocument(obj) {\n    window.open(obj.fileURL);\n  }\n\n  delete(): void {\n    Swal.fire({\n      text: 'Are you sure you want to delete this login image?',\n      icon: 'question',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Confirm'\n    }).then((result) => {\n\n      this.apiService.deleteById(ENDPOINTS.loginImage, this.formListComponent.idForUpdate).subscribe(\n        (res: any) => {\n          this.myDocInput.nativeElement.value = '';\n          this.myDocFile.nativeElement.value = '';\n          this.sweetAlertService.customSuccessMessage('Login image successfully deleted.');\n          this.getLoginImageList();\n          this.loginImage = new LoginImage();\n        }\n      )\n    });\n  }\n\n  selectFile(event) {\n    if (event.target.files[0]) {\n      this.fileSize = event.target.files[0].size;\n      const fileURL = URL.createObjectURL(event.target.files[0]);\n      this.safeURL = this.sanitizer.bypassSecurityTrustResourceUrl(fileURL);\n      const reader = new FileReader();\n      const [file] = event.target.files;\n      reader.readAsDataURL(file);\n      reader.onload = () => {\n      };\n      this.selectedFile = event.target.files[0];\n    }\n  }\n\n  compareImageLogin(value: any, selected: any): boolean {\n    if (value && selected) {\n      return value.id === selected.id;\n    }\n  }\n\n\n  setFormValidator(): void {\n    this.loginImageForm = this.formBuilder.group({\n      originalFileName: [''],\n      displayed: [''],\n    });\n  }\n\n  resetFormValidator(): void {\n    this.loginImage = new LoginImage();\n  }\n\n  hideSpinner() {\n    setTimeout(() => {\n      this.spinner.hide();\n    }, 1);\n  }\n\n}\n","<form>\n  <div class=\"container-fluid\">\n    <div class=\"row\">\n      <div class=\"col-md-12 title\">\n        <mat-label>\n          Login Image\n        </mat-label>\n      </div>\n    </div>\n    <hr>\n    <form [formGroup]=\"loginImageForm\">\n\n        <div class=\"row\">\n          <div class=\"col-md-8\" appearance=\"outline\">\n            <mat-label>Filename:  </mat-label>\n            <br>\n            <input #docInput matInput [value]=\"loginImage?.originalFilename\" *ngIf=\"loginImage?.originalFilename\" disabled>\n\n            <input #docFile class=\"file-upload\" type=\"file\" accept=\"image/jpg, image/jpeg\" (change)=\"selectFile($event)\" [hidden]=\"loginImage?.originalFilename\"/>\n          </div>\n          <div class=\"col-md-12\"><br></div>\n          <div class=\"col-md-7\" appearance=\"outline\">\n            <button mat-raised-button\n              *ngIf=\"loginImage?.originalFilename\"\n              class=\"button-red button-right\" (click)=\"viewDocument(loginImage)\">\n              <i class=\"material-icons color__white\">open_in_new</i> VIEW IMAGE\n            </button>\n          </div>\n        </div><br>\n    </form>\n\n    <app-form-action-buttons [childObject]=\"loginImage\" [childForm]=\"loginImageForm\" (saveFunction)=\"save()\"\n      (cancelFunction)=\"resetFormValidator()\" (deleteFunction)=\"delete()\">\n    </app-form-action-buttons>\n\n    <div class=\"col-md-12\"><hr></div>\n    <div class=\"col-md-12\"><br></div>\n\n    <app-form-list [dataSource]=\"dataSource\" [displayedColumns]=\"displayedColumns\"\n      (selectInListFunction)=\"viewLoginImageList()\"></app-form-list>\n  </div>\n\n\n\n\n</form>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginImagesComponent } from './login-images.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginImagesComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class LoginImagesRoutingModule { }\n"],"sourceRoot":"webpack:///"}