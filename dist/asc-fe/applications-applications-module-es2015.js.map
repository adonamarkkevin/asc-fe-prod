{"version":3,"sources":["./src/app/modules/pages/applications/schedule-of-fees/special-applications/special-applications.component.ts","./src/app/modules/pages/applications/schedule-of-fees/special-applications/special-applications.component.html","./src/app/core/models/multiple-application.model.ts","./src/app/core/models/comment.model.ts","./src/app/modules/pages/applications/preview-attachments/preview-attachments.component.ts","./src/app/modules/pages/applications/preview-attachments/preview-attachments.component.html","./src/app/modules/pages/applications/preview-application/preview-application.component.ts","./src/app/modules/pages/applications/preview-application/preview-application.component.html","./src/app/modules/pages/applications/schedule-of-fees/multiple-applications/modal-multiple-applications/modal-multiple-applications.component.ts","./src/app/modules/pages/applications/schedule-of-fees/multiple-applications/modal-multiple-applications/modal-multiple-applications.component.html","./src/app/modules/pages/applications/reassignment/reassignment.component.ts","./src/app/modules/pages/applications/reassignment/reassignment.component.html","./src/app/modules/pages/applications/applications.module.ts","./src/app/modules/fragments/update-multiple-application/update-multiple-application.component.ts","./src/app/modules/fragments/update-multiple-application/update-multiple-application.component.html","./src/app/modules/pages/company/company-routing.module.ts","./src/app/modules/pages/company/add-company/add-company-routing.module.ts","./src/app/modules/pages/applications/schedule-of-fees/single-application/single-application.component.ts","./src/app/modules/pages/applications/schedule-of-fees/single-application/single-application.component.html","./src/app/modules/pages/applications/schedule-of-fees/multiple-applications/multiple-applications.component.ts","./src/app/modules/pages/applications/schedule-of-fees/multiple-applications/multiple-applications.component.html","./src/app/modules/pages/applications/schedule-of-fees/single-application/modal-single-application/modal-single-application.component.ts","./src/app/modules/pages/applications/schedule-of-fees/single-application/modal-single-application/modal-single-application.component.html","./src/app/modules/pages/applications/schedule-of-fees/special-applications/modal-special-applications/modal-special-applications.component.ts","./src/app/modules/pages/applications/schedule-of-fees/special-applications/modal-special-applications/modal-special-applications.component.html","./src/app/core/models/media-models/mulstimedia-static.const.ts","./src/app/modules/pages/accounting/index.ts","./src/app/modules/pages/applications/applications-routing.module.ts","./src/app/modules/pages/applications/s2-application/add-s2-application/add-s2-application.component.ts","./src/app/modules/pages/applications/s2-application/add-s2-application/add-s2-application.component.html","./src/app/modules/pages/applications/attachment-document/attachment-document.component.ts","./src/app/modules/pages/applications/attachment-document/attachment-document.component.html","./src/app/modules/pages/accounting/upload-payment/upload-payment.component.ts","./src/app/modules/pages/accounting/upload-payment/upload-payment.component.html","./src/app/modules/fragments/s1-form-type/s1-form-type.component.ts","./src/app/modules/fragments/s1-form-type/s1-form-type.component.html","./src/app/modules/pages/applications/reassignment/reassignment-routing.module.ts","./src/app/modules/pages/applications/comment/comment.component.ts","./src/app/modules/pages/applications/comment/comment.component.html","./src/app/core/models/comments.model.ts","./src/app/modules/pages/company/add-company/add-company.module.ts","./src/app/modules/pages/applications/s2-application/list-s2-application/list-s2-application.component.ts","./src/app/modules/pages/applications/s2-application/list-s2-application/list-s2-application.component.html","./src/app/modules/pages/applications/client-information/client-information.component.ts","./src/app/modules/pages/applications/client-information/client-information.component.html","./src/app/core/models/media-models/multimedia-moving.const.ts","./src/app/modules/pages/applications/index.ts","./src/app/modules/pages/applications/s1-application/add-s1-application/add-s1-application.component.ts","./src/app/modules/pages/applications/s1-application/add-s1-application/add-s1-application.component.html","./src/app/modules/fragments/update-special-application/update-special-application.component.ts","./src/app/modules/fragments/update-special-application/update-special-application.component.html","./src/app/modules/pages/applications/s1-application/list-s1-application/list-s1-application.component.ts","./src/app/modules/pages/applications/s1-application/list-s1-application/list-s1-application.component.html","./src/app/modules/pages/applications/s1-application/list-s1-application/list-s1-dialog.html","./src/app/modules/pages/maintenance/index.ts","./src/app/modules/pages/company/company.module.ts","./src/app/core/models/copy-claims.model.ts","./src/app/modules/pages/applications/material-information/material-information.component.ts","./src/app/modules/pages/applications/material-information/material-information.component.html","./src/app/modules/pages/applications/performance-metrics/performance-metrics.component.ts","./src/app/modules/pages/applications/performance-metrics/performance-metrics.component.html","./src/app/modules/pages/applications/reassignment/reassignment.module.ts","./src/app/modules/pages/company/index.ts"],"names":[],"mappings":"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","file":"applications-applications-module-es2015.js","sourcesContent":["import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTable, MatTableDataSource } from '@angular/material/table';\nimport { ApiService, DataStorageService, SweetAlertService } from '@services';\nimport { ENDPOINTS } from '@shared';\nimport { ModalSpecialApplicationsComponent } from './modal-special-applications/modal-special-applications.component';\n\n\n@Component({\n  selector: 'app-special-applications',\n  templateUrl: './special-applications.component.html',\n  styleUrls: ['./special-applications.component.scss']\n})\nexport class SpecialApplicationsComponent implements OnInit {\n\n  @ViewChild(MatPaginator, { static: false }) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: false }) sort: MatSort;\n  @ViewChild(MatTable, { static: false }) table: MatTable<Object>;\n\n  dataSource: MatTableDataSource<any>\n  displayedColumns: string[] = ['referenceCode', 'typeOfApplication', 'brand', 'medium', 'applicantCompanyName', 'paymentStatus'];\n  paymentList = [];\n\n  currentUser: any;\n  constructor(\n    private apiService: ApiService,\n    private dialog: MatDialog,\n    private dataStorage: DataStorageService,\n  ) { }\n\n  ngOnInit(): void {\n    this.currentUser = this.dataStorage.getUserAccount();\n    this.getS2PaymentList();\n  }\n\n  getS2PaymentList() {\n    this.apiService.findAll(ENDPOINTS.scheduleOfFeesS2Special).subscribe((res: any) => {\n      this.paymentList = res;\n\n      this.dataSource = new MatTableDataSource<any>(this.paymentList);\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n    });\n  }\n\n  openModal(res) {\n\n    const dialogRef = this.dialog.open(ModalSpecialApplicationsComponent, {\n      width: '60%',\n      height: '85%',\n      data: res\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      this.ngOnInit();\n    });\n\n  }\n}\n","<form>\n  <div class=\"container-fluid\">\n    <div class=\"row\">\n      <div class=\"col-md-12 title\">\n        <mat-label>\n          <mat-icon>view_list</mat-icon> Special Clearing - For Payment\n        </mat-label>\n      </div>\n    </div>\n    <hr>\n    <br>\n    <div class=\"col-md-12\" fxLayout fxLayoutAlign=\"center center\">\n      <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n        <input matInput type=\"text\" placeholder=\"Company Name\">\n      </mat-form-field>\n    </div>\n\n    <div class=\"mat-elevation-z8 fields\">\n      <table mat-table [dataSource]=\"dataSource\" matSort>\n        <ng-container matColumnDef=\"referenceCode\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> REFERENCE CODE </th>\n          <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"openModal(element)\"> {{element?.applicationForm?.referenceCode | uppercase}}</td>\n        </ng-container>\n        <ng-container matColumnDef=\"typeOfApplication\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> TYPE OF APPLICATION</th>\n          <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"openModal(element)\">{{element?.applicationForm?.applicationType.description | uppercase}}</td>\n        </ng-container>\n        <ng-container matColumnDef=\"brand\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> BRAND</th>\n          <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"openModal(element)\">{{element?.applicationForm?.brand.description | uppercase}}</td>\n        </ng-container>\n        <ng-container matColumnDef=\"medium\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> MEDIUM</th>\n          <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"openModal(element)\">{{element?.applicationForm?.typeOfMedium | uppercase}}</td>\n        </ng-container>\n        <ng-container matColumnDef=\"applicantCompanyName\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> APPLICANT COMPANY NAME</th>\n          <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"openModal(element)\">{{element?.applicationForm?.company.companyName | uppercase}}</td>\n        </ng-container>\n        <ng-container matColumnDef=\"paymentStatus\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> PAYMENT STATUS</th>\n          <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"openModal(element)\">{{element?.paymentStatus?.replaceAll('_',' ') | uppercase}}</td>\n        </ng-container>\n\n\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n      </table>\n      <div class=\"no-record\" [hidden]=\"dataSource && dataSource?.data?.length > 0\">\n        No record found.\n      </div>\n      <mat-paginator [pageSizeOptions]=\"[10, 20, 50]\" showFirstLastButtons></mat-paginator>\n    </div>\n    <br>\n  </div>\n</form>\n","import { Company } from './company.model';\nimport { Brand } from './brand.model';\nimport { ApplicationType } from './application-type.model';\nimport { UserAccount } from './user-account.model';\nimport { Product } from './product.model';\nimport { Category } from '@models';\n\nexport class MultipleApplication {\n    id: number;\n    actionBy: string;\n    actionDate: Date;\n    adTitle: string;\n    applicationOwner: UserAccount;\n    applicationType: ApplicationType;\n    brand: Brand;\n    company: Company;\n    dateOfSubmission: Date;\n    numberOfApplication: number;\n    status: string;\n    tagLine: string;\n\n    actionStatus: string;\n    submissionStatus: string;\n    assignedAdSpecialist: UserAccount;\n    assignedEncoder: UserAccount;\n    assignedScreener: UserAccount;\n    assignedReviewer: UserAccount;\n    actualNumberOfApplicationForm: number;\n    countVerifiedApplicationForm: number;\n\n    totalAmount: number;\n    paymentStatus: string;\n\n    product: Product;\n\n}\n\nexport class MultipleApplicationId {\n  id: number;\n}\n\n","import { S2Application } from './s2-application.model';\nimport { UserAccount } from './user-account.model';\n\nexport class Comment {\n    id: number;\n    comment: string;\n    revisionNo: number;\n    actionBy: UserAccount;\n    role: string;\n    actionDate: Date;\n    commentType: string; // INTERNAL, EXTERNAL, EMAIL, REJECT\n    applicationFormType: string; // S1, S2\n    appFormReference: string;\n    applicationFormS2: S2Application;\n    // modifiedBy: string;\n    // modifiedDate: Date;\n}\n","import { AfterViewInit, Component, Input, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTable, MatTableDataSource } from '@angular/material/table';\n\n@Component({\n  selector: 'app-preview-attachments',\n  templateUrl: './preview-attachments.component.html',\n  styleUrls: ['./preview-attachments.component.scss']\n})\nexport class PreviewAttachmentsComponent implements OnInit, AfterViewInit {\n\n  @ViewChild(MatPaginator, { static: false }) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: false }) sort: MatSort;\n  @ViewChild(MatTable, { static: false }) table: MatTable<object>;\n  @Input() previewAttachmentsList = [];\n  @Input() dataSource: MatTableDataSource<object>;\n  @Input() displayedColumns = '';\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  ngAfterViewInit(): void {\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n  viewFormOrMaterial(attachmentUrl) {\n    if (attachmentUrl) {\n      window.open(attachmentUrl);\n    }\n  }\n\n}\n","<div class=\"mat-elevation-z8\">\n    <table mat-table [dataSource]=\"dataSource\" matSort>\n\n        <ng-container matColumnDef=\"decisionFormFilename\">\n            <th mat-header-cell *matHeaderCellDef> Decision Form Filename </th>\n            <td mat-cell *matCellDef=\"let element\"> {{ element?.decisionFormFilename }} </td>\n        </ng-container>\n\n        <!-- VIEW ICON START -->\n        <ng-container matColumnDef=\"viewDecisionFormIcon\">\n            <th mat-header-cell *matHeaderCellDef> View Decision Form </th>\n            <td mat-cell *matCellDef=\"let element\">\n                <span class=\"material-icons\" *ngIf=\"element?.decisionFormFileURL\" matTooltip=\"View Decision Form\"\n                    (click)=\"viewFormOrMaterial(element?.decisionFormFileURL)\">open_in_new</span>\n            </td>\n        </ng-container>\n        <!-- VIEW ICON END -->\n\n        <ng-container matColumnDef=\"stampMaterialFilename\">\n            <th mat-header-cell *matHeaderCellDef> Stamp Material Filename </th>\n            <td mat-cell *matCellDef=\"let element\"> {{ element?.stampMaterialFilename }} </td>\n        </ng-container>\n\n        <!-- VIEW ICON START -->\n        <ng-container matColumnDef=\"viewStampMaterialIcon\">\n            <th mat-header-cell *matHeaderCellDef> View Stamp Material </th>\n            <td mat-cell *matCellDef=\"let element\">\n                <span class=\"material-icons\" *ngIf=\"element?.stampMaterialFileURL\" matTooltip=\"View Stamp Material\"\n                    (click)=\"viewFormOrMaterial(element?.stampMaterialFileURL)\">open_in_new</span>\n            </td>\n        </ng-container>\n        <!-- VIEW ICON END -->\n\n        <ng-container matColumnDef=\"clearanceToaFilename\">\n            <th mat-header-cell *matHeaderCellDef> Clearance TOA Filename </th>\n            <td mat-cell *matCellDef=\"let element\"> {{ element?.clearanceToaFilename }} </td>\n        </ng-container>\n\n        <!-- VIEW ICON START -->\n        <ng-container matColumnDef=\"viewClearanceToaIcon\">\n            <th mat-header-cell *matHeaderCellDef> View Clearance TOA </th>\n            <td mat-cell *matCellDef=\"let element\">\n                <span class=\"material-icons\" *ngIf=\"element?.clearanceToaFileUrl\" matTooltip=\"View Clearance TOA\"\n                    (click)=\"viewFormOrMaterial(element?.clearanceToaFileUrl)\">open_in_new</span>\n            </td>\n        </ng-container>\n        <!-- VIEW ICON END -->\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n    <div class=\"no-record\" [hidden]=\"dataSource && dataSource?.data?.length > 0\">\n        No record found.\n    </div>\n    <mat-paginator [pageSizeOptions]=\"[10, 20, 30]\" showFirstLastButtons></mat-paginator>\n\n</div>","import { Component, Input, OnInit, ViewChild } from '@angular/core';\nimport { S1Application } from '@models';\nimport { ApiService } from '@services';\nimport { APP_DECISION_STATUS, ATTACHMENT_TYPE, SUBMISSION_TYPE } from '@shared';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { ApplicationSingleMedia } from '../../../../core/models/application-single-media.model';\nimport { AttachmentDocumentComponent } from '../attachment-document/attachment-document.component';\n\n@Component({\n  selector: 'app-preview-application',\n  templateUrl: './preview-application.component.html',\n  styleUrls: ['./preview-application.component.scss']\n})\nexport class PreviewApplicationComponent implements OnInit {\n  @ViewChild(MatPaginator, { static: false }) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: false }) sort: MatSort;\n  dataSource: MatTableDataSource<any>;\n  displayedColumns: string[] = ['typeOfDocument', 'variant', 'expiresOn', 'basedOn', 'remarks'];\n  @ViewChild(AttachmentDocumentComponent, { static: false }) materialAttachmentDocument: AttachmentDocumentComponent\n    ;\n\n  @Input() previewS1Application: any;// = new S1Application();\n  attachmentDocuments = [];\n  @Input() originalAttachmentDocuments = [];\n  @Input() revisionAttachmentDocuments = [];\n  @Input() complianceAttachmentDocuments = [];\n  @Input() applicationSingleMedia = new ApplicationSingleMedia();\n  @Input() revisionLetterAttachment: any;\n  @Input() multimediaDTO: any = {};\n\n  supportiveDocumentList = [];\n  multimediaMovingList = [];\n  multimediaStaticList = [];\n\n  constructor(\n    private apiService: ApiService\n  ) { }\n\n  ngOnInit(): void {\n    // console.log('Preview..', this.previewS1Application);\n  }\n\n\n  viewDocument(typeOfDocument) {\n    if (this.previewS1Application.submissionType === SUBMISSION_TYPE.ORIGINAL) {\n      this.attachmentDocuments = this.originalAttachmentDocuments;\n    } else if (this.previewS1Application.submissionType === SUBMISSION_TYPE.REVISION) {\n      this.attachmentDocuments = this.revisionLetterAttachment;\n    } else if (this.previewS1Application.submissionType === SUBMISSION_TYPE.COMPLIANCE\n      || this.previewS1Application.decisionStatus === APP_DECISION_STATUS.INCOMPLETE) {\n      this.attachmentDocuments = this.complianceAttachmentDocuments;\n    }\n\n    if (typeOfDocument === ATTACHMENT_TYPE.MAIN) {\n      const mainDoc = this.attachmentDocuments.filter(res => res.attachmentType === ATTACHMENT_TYPE.MAIN)[0];\n      window.open(this.attachmentDocuments[0].fileURL);\n    } else if (typeOfDocument === ATTACHMENT_TYPE.SUPPORTIVE) {\n      const supportiveDoc = this.attachmentDocuments.filter(res => res.attachmentType === ATTACHMENT_TYPE.SUPPORTIVE)[0];\n      window.open(supportiveDoc.fileURL);\n    } else if (typeOfDocument === ATTACHMENT_TYPE.REVISION_LETTER) {\n      // this.attachmentDocuments.filter(res => res.attachmentType === ATTACHMENT_TYPE.REVISION_LETTER)[0];\n      const revisionLetterDoc = this.revisionLetterAttachment;\n      window.open(revisionLetterDoc.fileURL);\n    }\n  }\n\n}\n","<!--  -->\n<div class=\"row fields\">\n  <h4>\n    <i class=\"material-icons\">preview</i> &nbsp;<b>CLIENT'S INFORMATION</b>\n    <hr>\n  </h4>\n  <div class=\"row\">\n    <div class=\"col-md-4\" appearance=\"outline\">\n      <mat-label>Client Company Name</mat-label>\n      <input matInput [value]=\"previewS1Application?.company?.companyName\" disabled>\n    </div>\n    <div class=\"col-md-4\" appearance=\"outline\">\n      <mat-label>Client Membership Affiliation</mat-label>\n      <input matInput [value]=\"previewS1Application?.company?.membersAffiliation?.description\" disabled>\n    </div>\n    <div class=\"col-md-4\" appearance=\"outline\"></div>\n  </div>\n\n  <div class=\"row\"><br></div>\n\n  <div class=\"row\">\n    <div class=\"col-md-4\" appearance=\"outline\">\n      <mat-label>Brand</mat-label>\n      <input matInput [value]=\"previewS1Application?.brand?.description\" disabled>\n    </div>\n    <div class=\"col-md-4\" appearance=\"outline\">\n      <mat-label>Product</mat-label>\n      <input matInput [value]=\"previewS1Application?.product?.description\" disabled>\n    </div>\n    <div class=\"col-md-4\" appearance=\"outline\">\n      <mat-label>Category</mat-label>\n      <input matInput [value]=\"previewS1Application?.product?.category?.description\" disabled>\n    </div>\n  </div>\n\n  <br><br><br>\n</div>\n\n<!--  -->\n<div class=\"row fields\">\n  <h4>\n    <i class=\"material-icons\">preview</i> &nbsp;<b>MATERIAL INFORMATION</b>\n    <hr>\n  </h4>\n  <div class=\"row\">\n    <div class=\"col-md-12\" appearance=\"outline\">\n      <mat-label>Ad Title</mat-label>\n      <input matInput [value]=\"previewS1Application?.adTitle\" disabled>\n    </div>\n  </div>\n\n  <div class=\"row\"><br></div>\n\n  <div class=\"row\">\n    <div class=\"col-md-6\" appearance=\"outline\">\n      <mat-label>Reference Code of Previously-Approved Material</mat-label>\n      <input matInput [value]=\"previewS1Application?.previousRefCode\" disabled>\n    </div>\n    <div class=\"col-md-6\" appearance=\"outline\">\n      <mat-label>Tag line</mat-label>\n      <input matInput [value]=\"previewS1Application?.tagLine\" disabled>\n    </div>\n  </div>\n\n  <div class=\"row\" *ngIf=\"previewS1Application?.refTypeOfMedium\">\n    <div class=\"col-md-12\">\n      <hr>\n    </div>\n  </div>\n  <div class=\"row\" *ngIf=\"previewS1Application?.refTypeOfMedium\">\n    <div class=\"col-md-6\" appearance=\"outline\">\n      <mat-label>Media Type</mat-label>\n      <input matInput [value]=\"previewS1Application?.refTypeOfMedium\" disabled>\n    </div>\n  </div>\n  <div class=\"row\"><br></div>\n  <div class=\"row\" *ngIf=\"applicationSingleMedia\">\n    <div class=\"col-md-3\" appearance=\"outline\" *ngIf=\"applicationSingleMedia?.mediumExecution?.typeOfMedium?.description\">\n      <mat-label>Type of Medium</mat-label>\n      <input matInput [value]=\"applicationSingleMedia?.mediumExecution?.typeOfMedium?.description\" disabled>\n    </div>\n    <div class=\"col-md-3\" appearance=\"outline\" *ngIf=\"applicationSingleMedia?.mediumExecution\">\n      <mat-label>Execution</mat-label>\n      <input matInput [value]=\"applicationSingleMedia?.mediumExecution?.typeOfExecution?.typeOfExecution\" disabled>\n    </div>\n    <div class=\"col-md-3\" appearance=\"outline\" *ngIf=\"applicationSingleMedia?.dialect\">\n      <mat-label>Language/Dialect</mat-label>\n      <input matInput [value]=\"applicationSingleMedia?.dialect?.dialect\" disabled>\n    </div>\n    <div class=\"col-md-3\" appearance=\"outline\" *ngIf=\"applicationSingleMedia?.others\">\n      <mat-label>Others</mat-label>\n      <input matInput [value]=\"applicationSingleMedia?.others\" disabled>\n    </div>\n    <div class=\"col-md-3\" appearance=\"outline\" *ngIf=\"applicationSingleMedia?.sizeLength\">\n      <mat-label>Size Length</mat-label>\n      <input matInput [value]=\"applicationSingleMedia?.sizeLength\" disabled>\n    </div>\n    <div class=\"col-md-3\" appearance=\"outline\" *ngIf=\"applicationSingleMedia?.width\">\n      <mat-label>Width</mat-label>\n      <input matInput [value]=\"applicationSingleMedia?.width\" disabled>\n    </div>\n  </div>\n\n  <!-- TO BE DELETED ONCE VERIFIED -->\n  <!-- <div class=\"row\" *ngIf=\"multimediaMovingList?.length>0\">\n    <span *ngFor=\"let i of multimediaMovingList\">\n      <table>\n        <tr>\n          <td class=\"col-md-4\">\n            <mat-checkbox [checked]=\"true\" disabled>{{i?.typeOfMedium?.description}}</mat-checkbox>\n          </td>\n          <td class=\"col-md-1\">Length:</td>\n          <td class=\"col-md-2\">\n            <input matInput [value]=\"i?.multimediaSizeLength\" disabled>\n          </td>\n          <td class=\"col-md-5\"></td>\n        </tr>\n      </table>\n    </span>\n  </div>\n\n  <div class=\"row\" *ngIf=\"multimediaStaticList?.length>0\">\n    <span *ngFor=\"let i of multimediaStaticList\">\n      <table>\n        <tr>\n          <td class=\"col-md-4\">\n            <mat-checkbox [checked]=\"true\" disabled>{{i?.typeOfMedium?.description}}</mat-checkbox>\n          </td>\n          <td class=\"col-md-1\">Size</td>\n          <td class=\"col-md-2\">\n            <input matInput [value]=\"i?.multimediaSizeLength\" disabled>\n          </td>\n          <td class=\"col-md-5\"></td>\n        </tr>\n      </table>\n    </span>\n  </div> -->\n\n  <!-- New Multimedia List -->\n  <div class=\"row\" *ngIf=\"multimediaDTO\">\n    <table class=\"mx-3 mb-3\">\n      <ng-container *ngIf=\"previewS1Application?.refTypeOfMedium === 'MULTIMEDIA-STATIC'\">\n        <ng-container *ngFor=\"let i of multimediaDTO.applicationMultimediaStaticList\">\n          <tr *ngIf=\"i?.hasSelected\" style=\"height: 30px;\">\n            <td class=\"col-md-4\">\n              <mat-checkbox [checked]=\"i?.hasSelected\" disabled>\n                {{i?.multimediaStaticMedium | uppercase}}\n              </mat-checkbox>\n            </td>\n            <td class=\"col-md-1\" \n              *ngIf=\"previewS1Application?.refTypeOfMedium === 'MULTIMEDIA-STATIC' && i?.multimediaStaticMedium !== 'digital static'\">\n              Size\n            </td>\n            <td class=\"col-md-2\">\n              <input matInput \n                *ngIf=\"previewS1Application?.refTypeOfMedium === 'MULTIMEDIA-STATIC' && i?.multimediaStaticMedium !== 'digital static'\" \n                [value]=\"i?.sizeLength\" disabled>\n            </td>\n            <td class=\"col-md-5\"></td>\n          </tr>\n        </ng-container>\n      </ng-container>\n\n      <ng-container *ngIf=\"previewS1Application?.refTypeOfMedium === 'MULTIMEDIA-MOVING'\">\n        <ng-container *ngFor=\"let i of multimediaDTO.applicationMultimediaMovingList\" style=\"height: 30px;\">\n          <tr *ngIf=\"i?.hasSelected\">\n            <td class=\"col-md-4\">\n              <mat-checkbox [checked]=\"true\" disabled>\n                {{i?.multimediaMovingMedium | uppercase}}\n              </mat-checkbox>\n            </td>\n            <td class=\"col-md-1\" *ngIf=\"previewS1Application?.refTypeOfMedium === 'MULTIMEDIA-MOVING'\">Length</td>\n            <td class=\"col-md-2\">\n              <input matInput *ngIf=\"previewS1Application?.refTypeOfMedium === 'MULTIMEDIA-MOVING'\" [value]=\"multimediaDTO?.sizeLength\" disabled>\n            </td>\n            <td class=\"col-md-5\"></td>\n          </tr>\n        </ng-container>\n      </ng-container>\n    </table>\n  </div>\n\n  <app-attachment-document [s1Application]=\"previewS1Application\" [applicationStage]=\"'S1-Preview'\"\n  [isAscUser]=\"'true'\" [isDisableFieldOnUpdate]=\"'true'\"\n  [originalAttachmentDocuments]=\"originalAttachmentDocuments\" [revisionAttachmentDocuments]=\"revisionAttachmentDocuments\" [complianceAttachmentDocuments]=\"complianceAttachmentDocuments\"></app-attachment-document>\n\n  <div class=\"row\" *ngIf=\"supportiveDocumentList.length>0\">\n    <div class=\"col-md-12\" appearance=\"outline\">\n      <div class=\"mat-elevation-z8 fields\">\n        <table mat-table [dataSource]=\"dataSource||supportiveDocumentList\" matSort>\n\n          <ng-container matColumnDef=\"typeOfDocument\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> TYPE OF DOCUMENT </th>\n            <td mat-cell *matCellDef=\"let element\"> {{ element?.typeOfDocument?.description }} </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"variant\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> VARIANT </th>\n            <td mat-cell *matCellDef=\"let element\"> {{ element?.variant==undefined ? 'N/A' : element?.variant }} </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"expiresOn\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> EXPIRES ON </th>\n            <td mat-cell *matCellDef=\"let element\">\n              {{ element?.expiresOn==undefined ? 'N/A' : element?.expiresOn | date:'yyyy-MM-dd' }}\n            </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"basedOn\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> BASED ON </th>\n            <td mat-cell *matCellDef=\"let element\">\n              {{ element?.basedOn ==undefined ? 'N/A' : element?.basedOn | date:'yyyy-MM-dd' }}\n            </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"remarks\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> REMARKS </th>\n            <td mat-cell *matCellDef=\"let element\"> {{ element?.remarks==undefined ? 'N/A' : element?.remarks }} </td>\n          </ng-container>\n\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n          <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n        </table>\n        <div class=\"no-record\" [hidden]=\"dataSource && dataSource?.data?.length > 0\"\n          *ngIf=\"supportiveDocumentList.length==0\">\n          No supporting document found.\n        </div>\n        <!-- <mat-paginator [pageSizeOptions]=\"[10, 20, 50]\" showFirstLastButtons></mat-paginator> -->\n      </div>\n      <div class=\"row\"><br></div>\n    </div>\n  </div>\n</div>\n\n<!--  -->\n<div class=\"row fields\" *ngIf=\"previewS1Application.autoSubmit==true&&previewS1Application?.externalStatus!='SAVED'\">\n  <h4>\n    <i class=\"material-icons\">schedule_send</i> &nbsp;<b>AUTO-SUBMISSION DETAILS</b>\n    <hr>\n    <div class=\"row\">\n      <div class=\"col-md-6\" appearance=\"outline\">\n        <mat-label>Date</mat-label>\n        <input matInput [value]=\"previewS1Application.submissionDate\" disabled>\n      </div>\n      <!-- <div class=\"col-md-3\" appearance=\"outline\">\n        <mat-label>Time</mat-label>\n        <input matInput [value]=\"previewS1Application.autoSubmitTime+' AM'\" disabled>\n      </div> -->\n    </div>\n  </h4>\n</div>\n","import { Component, Inject, Input, OnDestroy, OnInit, Optional, ViewChild } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTable, MatTableDataSource } from '@angular/material/table';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { Router } from '@angular/router';\nimport { AttachmentDocument, Payment, S1Application } from '@models';\nimport { ApiService, DataStorageService, SweetAlertService } from '@services';\nimport { ATTACHMENT_TYPE, ENDPOINTS, ERROR_MESSAGES, PAYMENT_STATUS, SUBMISSION_TYPE, USER_ROLES } from '@shared';\nimport { ApplicationSingleMedia } from 'app/core/models/application-single-media.model';\nimport { MultipleApplication } from 'app/core/models/multiple-application.model';\nimport { FileStorageService } from 'app/core/services/file.storage.service';\nimport Swal from 'sweetalert2';\n\nexport interface companyDetails {\n  referenceCode: string;\n  amount: number;\n}\n\nconst ELEMENT_DATA: companyDetails[] = [\n  { referenceCode: 'Company one ', amount: 3000, },\n  { referenceCode: 'Company two ', amount: 4000, },\n  { referenceCode: 'Company three ', amount: 5000, },\n  { referenceCode: 'Company two ', amount: 6000, },\n  { referenceCode: 'Company three ', amount: 7000, },\n];\n\n@Component({\n  selector: 'app-modal-multiple-applications',\n  templateUrl: './modal-multiple-applications.component.html',\n  styleUrls: ['./modal-multiple-applications.component.scss']\n})\nexport class ModalMultipleApplicationsComponent implements OnInit, OnDestroy {\n\n  @ViewChild(MatPaginator, { static: false }) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: false }) sort: MatSort;\n  @ViewChild(MatTable, { static: false }) table: MatTable<ModalMultipleApplicationsComponent>;\n  dataSource: MatTableDataSource<any>\n  displayedColumns: string[] = ['referenceCode', 'adTitle', 'mediumAndLength', 'amount'];\n  multipleApplicationList = [];\n\n  @Input() s1Application = new S1Application();\n  payment = new Payment();\n  safeURLProofOfPayment: any;\n  selectedFiles: any;\n  previewDocument = false;\n  attachmentDocument = new AttachmentDocument();\n  applicationSingleMedia = new ApplicationSingleMedia();\n  currentUser: any;\n  attachmentDocuments = [];\n  isSubmitted = false;\n  paymentTypeList = [];\n  paymentType: any;\n  attachment: any;\n  multipleApplication = new MultipleApplication();\n  totalAmount: any;\n  paymentDetails: any;\n  isDisabled = false;\n  typeOfMediumDisplay = '';\n\n  constructor(\n    private sanitizer: DomSanitizer,\n    private apiService: ApiService,\n    public dataStorage: DataStorageService,\n    private fileStorageService: FileStorageService,\n    private sweetAlertService: SweetAlertService,\n    private router: Router,\n    @Optional() public dialogRef: MatDialogRef<ModalMultipleApplicationsComponent>,\n    @Optional() @Inject(MAT_DIALOG_DATA) public data: any\n  ) {\n    if (data) {\n      this.multipleApplication = data;\n      if (this.multipleApplication.paymentStatus !== PAYMENT_STATUS.FOR_PAYMENT) {\n        this.isDisabled = true;\n      }\n      this.getPaymentDetails();\n    }\n  }\n\n  ngOnInit(): void {\n    this.getMultipleApplicationList();\n    this.getPaymentList();\n  }\n\n  getPaymentDetails() {\n    this.apiService.findAll(ENDPOINTS.multiplePaymentDetails + this.multipleApplication.id).subscribe((res: any) => {\n      this.paymentDetails = res;\n    });\n  }\n\n\n  getMultipleApplicationList() {\n    this.apiService.findAll(ENDPOINTS.getMultipleAppFormsWithNoRejected + this.multipleApplication.id).subscribe((res: any) => {\n      this.multipleApplicationList = res.responseData.data;\n      console.log(this.multipleApplicationList);\n      // this.totalAmount = this.multipleApplicationList.map(mapped => mapped.amount).reduce((previousValue, currentValue) =>\n      //   previousValue + currentValue,\n      //   0);\n\n      this.multipleApplicationList.forEach((multipleApplication) => {\n        switch (multipleApplication?.refTypeOfMedium || multipleApplication?.applicationFormS2?.applicationForm?.refTypeOfMedium) {\n          case 'SINGLE MEDIA':\n            this.getApplicationSingleMedia(multipleApplication?.appFormReference);\n            break;\n          case 'MULTIMEDIA-MOVING':\n            this.getMultimediaMoving(multipleApplication?.appFormReference);\n            break;\n          case 'MULTIMEDIA-STATIC':\n            this.getMultimediaStatic(multipleApplication?.appFormReference);\n            break;\n          default:\n            break;\n        }\n      });\n\n\n      this.dataSource = new MatTableDataSource<any>(this.multipleApplicationList);\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n\n    }, (err: any) => {\n      err.error.message = ERROR_MESSAGES.under_maintenance;\n      this.sweetAlertService.error(err);\n    });\n  }\n\n  getPaymentList() {\n    this.apiService.findAll(ENDPOINTS.paymentType).subscribe((res: any) => {\n      if (this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT) {\n        const creditCardIndex = this.paymentTypeList\n          .findIndex((element) => element.paymentDescription === 'Credit Card');\n        this.paymentTypeList.splice(creditCardIndex, 1);\n      }\n      this.paymentTypeList = res.responseData.data;\n    });\n  }\n\n  selectFile(event) {\n    const attachmentSize = event.target.files[0].size;\n\n    if (event.target.files[0].type === 'application/pdf') {\n      if (attachmentSize > 15000000) { // 1MB = 1M\n        this.sweetAlertService.customErrorMessage(`Attachments' total file size should not exceed 15MB.`);\n        event.target.value = '';\n        return;\n      } else {\n        const pdfURL = URL.createObjectURL(event.target.files[0]);\n        this.safeURLProofOfPayment = this.sanitizer.bypassSecurityTrustResourceUrl(pdfURL);\n        this.previewDocument = true;\n\n        // env.showSpinner = true;\n        const reader = new FileReader();\n        const [file] = event.target.files;\n\n        reader.readAsDataURL(file);\n        reader.onload = () => {\n        };\n      }\n\n      this.selectedFiles = event.target.files;\n    } else {\n      this.sweetAlertService.customErrorMessage('Attachment should be in PDF format only.');\n      event.target.value = '';\n      return;\n    }\n  }\n\n  uploadDocument(multipleApplication) {\n    Swal.fire({\n      text: 'Are you sure you want to submit this PROOF OF PAYMENT?',\n      icon: 'question',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Confirm'\n    }).then((result) => {\n      if (result.value) {\n        this.dataStorage.setDisplayProgressbar(true);\n        let params = '';\n        params = '?&attachmentType=' + ATTACHMENT_TYPE.PAYMENT + '&submissionType=' + SUBMISSION_TYPE.ORIGINAL;\n        this.fileStorageService.pushFileToStorage(ENDPOINTS.attachmentDocument, this.selectedFiles.item(0), params)\n          .subscribe(res => {\n            const obj = res.responseData.data;\n            console.log(obj);\n            this.s1Application.paymentAttachmentReference = obj.paymentAttachmentReference;\n            this.payment.paymentAttachmentReference = obj.paymentAttachmentReference;\n            this.payment.amountDue = this.totalAmount;\n            this.payment.multipleApplication = multipleApplication;\n            this.payment.filename = obj.filename;\n            this.saveProofOfPayment();\n            this.selectedFiles = undefined;\n          }, (err: any) => {\n            this.sweetAlertService.error(err);\n          }, () => {\n            // actions after subscription\n            this.dataStorage.setDisplayProgressbar(false);\n          });\n      }\n    });\n  }\n\n  saveProofOfPayment() {\n    console.log('Saving payment...');\n    this.dataStorage.setDisplayProgressbar(true);\n    this.payment.paymentStatus = PAYMENT_STATUS.FOR_APPROVAL;\n    this.payment.id = 0;\n    this.payment.officialReceiptNo = '';\n    this.payment.paymentMethod = null;\n    this.payment.amountDue = this.multipleApplication.totalAmount;\n    console.log('PAYMENT : ', this.payment);\n    console.log(this.paymentType.id);\n\n\n    this.apiService.save(`${ENDPOINTS.applicationFormPresentor}payment-type-id/${this.paymentType.id}/payment-multiple/submit`, this.payment)\n      .subscribe((res: any) => {\n        console.log('SAVED STATUS: ', res.responseData.data);\n\n        this.safeURLProofOfPayment = this.sanitizer.bypassSecurityTrustResourceUrl(res.responseData.data.fileURL);\n        this.isSubmitted = true;\n        this.sweetAlertService.customSuccessMessage('Proof of payment successfully submitted.');\n        this.closeModal();\n      }, (err) => {\n        console.log(err);\n        this.sweetAlertService.error(err);\n        this.dataStorage.setDisplayProgressbar(false);\n      }, () => {\n        this.dataStorage.setDisplayProgressbar(false);\n      });\n  }\n\n  closeModal(): void {\n    this.dialogRef.close();\n    this.router.navigate(['asc/page/application/multiple-applications']);\n  }\n  ngOnDestroy(): void {\n    // this.s1Application = null;\n  }\n\n  getApplicationSingleMedia(appFormReference = this.payment?.applicationForm?.appFormReference) {\n    if (this.payment?.applicationFormS2?.applicationForm?.refTypeOfMedium) {\n      appFormReference = this.payment?.applicationFormS2?.applicationForm?.appFormReference;\n    }\n    this.apiService.findByParam(ENDPOINTS.applicationSingleMedia,\n      `app-form-reference/${appFormReference}`).subscribe(\n        (res: any) => {\n          if (res.responseData.data.length > 0) {\n            this.applicationSingleMedia = res.responseData.data[0];\n\n            this.typeOfMediumDisplay = `${this.applicationSingleMedia?.mediumExecution?.typeOfMedium?.description} (${this.applicationSingleMedia?.sizeLength})`;\n            console.log('view applicationSingleMedia: ', this.typeOfMediumDisplay);\n\n            this.multipleApplicationList.forEach((element, index) => {\n              if (element.appFormReference === appFormReference) {\n                this.multipleApplicationList[index] = {\n                  ...this.multipleApplicationList[index],\n                  typeOfMediumDisplay: this.typeOfMediumDisplay\n                };\n              }\n            });\n            this.dataSource = new MatTableDataSource<any>(this.multipleApplicationList);\n            this.dataSource.paginator = this.paginator;\n\n          } else {\n            this.applicationSingleMedia = new ApplicationSingleMedia();\n            this.typeOfMediumDisplay = '';\n          }\n        }, (err: any) => {\n          this.applicationSingleMedia = new ApplicationSingleMedia();\n          this.typeOfMediumDisplay = '';\n        });\n  }\n\n  getMultimediaStatic(appFormReference = this.payment?.applicationForm?.appFormReference) {\n    this.apiService.findByParam(ENDPOINTS.applicationMultimedia,\n      `app-form-reference/${appFormReference}`).subscribe(\n        (res: any) => {\n          if (res.responseData.data.length > 0) {\n            const multimediaList = new Set(res.responseData.data.map(mappedList => `${mappedList?.typeOfMedium?.description} (${mappedList?.multimediaSizeLength})`));\n\n            this.typeOfMediumDisplay = '';\n            let mediaCtrl = 1;\n            for (const media of multimediaList) {\n              if (mediaCtrl !== multimediaList.size) {\n                this.typeOfMediumDisplay += `${media}, `;\n                mediaCtrl++;\n              } else {\n                this.typeOfMediumDisplay += media;\n              }\n            }\n\n            this.multipleApplicationList.forEach((element, index) => {\n              console.log(element);\n              if (element.appFormReference === appFormReference) {\n                this.multipleApplicationList[index] = {\n                  ...this.multipleApplicationList[index],\n                  typeOfMediumDisplay: this.typeOfMediumDisplay\n                };\n              }\n            });\n            this.dataSource = new MatTableDataSource<any>(this.multipleApplicationList);\n            this.dataSource.paginator = this.paginator;\n\n          } else {\n            this.typeOfMediumDisplay = '';\n          }\n        }, (err: any) => {\n          this.typeOfMediumDisplay = '';\n        });\n  }\n\n  getMultimediaMoving(appFormReference = this.payment?.applicationForm?.appFormReference) {\n    this.apiService.findByParam(ENDPOINTS.applicationMultimedia,\n      `app-form-reference/${appFormReference}`).subscribe(\n        (res: any) => {\n          if (res.responseData.data.length > 0) {\n            const multimediaList = new Set(res.responseData.data.map(mappedList => `${mappedList?.typeOfMedium?.description} (${mappedList?.multimediaSizeLength})`));\n\n            this.typeOfMediumDisplay = '';\n            let mediaCtrl = 1;\n            for (const media of multimediaList) {\n              if (mediaCtrl !== multimediaList.size) {\n                this.typeOfMediumDisplay += `${media}, `;\n                mediaCtrl++;\n              } else {\n                this.typeOfMediumDisplay += media;\n              }\n            }\n\n            this.multipleApplicationList.forEach((element, index) => {\n              console.log(element);\n              if (element.appFormReference === appFormReference) {\n                this.multipleApplicationList[index] = {\n                  ...this.multipleApplicationList[index],\n                  typeOfMediumDisplay: this.typeOfMediumDisplay\n                };\n              }\n            });\n            this.dataSource = new MatTableDataSource<any>(this.multipleApplicationList);\n            this.dataSource.paginator = this.paginator;\n\n          } else {\n            this.typeOfMediumDisplay = '';\n          }\n        }, (err: any) => {\n          this.typeOfMediumDisplay = '';\n        });\n  }\n}\n","<div class=\"container-fluid\">\n    <div class=\"row\">\n        <div class=\"col-md-12 title\">\n            <mat-label>\n                <mat-icon>view_list</mat-icon> Schedule of Fees - Multiple Applications\n            </mat-label>\n        </div>\n    </div>\n    <hr>\n    <br>\n    <div class=\"row col-md-12\">\n        <div class=\"row col-md-6\">\n            <div>\n                <mat-label>Proof of Payment: &nbsp;&nbsp;&nbsp;<span>PDF file only!</span></mat-label><br>\n                <input class=\"file-upload\" type=\"file\" [(ngModel)]=\"attachment\" [ngModelOptions]=\"{standalone: true}\"\n                    accept=\".pdf\" (change)=\"selectFile($event)\" [disabled]=\"isDisabled\">\n            </div>\n            <div *ngIf=\"previewDocument===true && !isDisabled\">\n                <div class=\"file-upload\">\n                    <object [data]=\"safeURLProofOfPayment\" type=\"application/pdf\" width=\"100%\" height=\"500\">\n                        <iframe [src]=\"safeURLProofOfPayment\" width=\"100%\" height=\"500\">\n                            <p>This browser does not support PDF!</p>\n                        </iframe>\n                    </object>\n                </div>\n            </div>\n        </div>\n        <div class=\"row col-md-6\">\n\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n            <mat-label>Advertiser</mat-label>\n            <input matInput name=\"companyName\" [value]=\"multipleApplication?.company?.companyName\" readonly>\n        </mat-form-field>\n\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n            <mat-label>Vatable Sales</mat-label>\n            <input matInput class=\"numbers-input\" name=\"amount\" [value]=\"paymentDetails?.basicRate | number : '1.2-2'\" readonly>\n        </mat-form-field>\n\n\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n            <mat-label>VAT</mat-label>\n            <input matInput class=\"numbers-input\" name=\"amount\" [value]=\"paymentDetails?.vat | number : '1.2-2'\" readonly>\n        </mat-form-field>\n\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n            <mat-label>Total Sales (VAT Inclusive)</mat-label>\n            <input matInput class=\"numbers-input total\" name=\"amount\" [value]=\"paymentDetails?.amountDue | number : '1.2-2'\" readonly>\n        </mat-form-field>\n\n        <div>\n          <table mat-table [dataSource]=\"dataSource\" matSort>\n              <ng-container matColumnDef=\"referenceCode\">\n                  <th mat-header-cell *matHeaderCellDef> Reference Code </th>\n                  <td mat-cell *matCellDef=\"let element; let i = index\">{{element?.referenceCode}}</td>\n              </ng-container>\n              <ng-container matColumnDef=\"adTitle\">\n                  <th mat-header-cell *matHeaderCellDef> Ad Title </th>\n                  <td mat-cell *matCellDef=\"let element; let i = index\">{{element?.adTitle}}</td>\n              </ng-container>\n              <ng-container matColumnDef=\"mediumAndLength\">\n                <th mat-header-cell *matHeaderCellDef> Medium And Length</th>\n                <td mat-cell *matCellDef=\"let element; let i = index\">{{ element?.typeOfMediumDisplay }}</td>\n              </ng-container>\n              <ng-container matColumnDef=\"amount\">\n                  <th mat-header-cell *matHeaderCellDef> Amount</th>\n                  <td mat-cell *matCellDef=\"let element; let i = index\" class=\"numbers-input\">{{element?.amount | number : '1.2-2'}}</td>\n              </ng-container>\n              <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n              <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n          </table>\n          <div class=\"no-record\" [hidden]=\"dataSource && dataSource?.data?.length > 0\">\n              No record found.\n          </div>\n          <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons></mat-paginator>\n          <!-- <div class=\"grandTotal\">\n            <mat-label>TOTAL: &nbsp;&nbsp;&nbsp;<span>{{multipleApplication?.totalAmount | number : '1.2-2'}}</span></mat-label>\n          </div> -->\n        </div>\n\n        <div><br><hr><br></div>\n\n            <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n                <mat-label>Payment Mode</mat-label>\n                <mat-select [(ngModel)]=\"paymentType\" [ngModelOptions]=\"{standalone: true}\" [disabled]=\"multipleApplication?.paymentStatus !== 'FOR_PAYMENT'\">\n                    <mat-option *ngFor=\"let i of paymentTypeList\" [value]=\"i\" name=\"paymentType\">\n                        {{i?.paymentDescription | uppercase}}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n\n            <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n                <mat-label>Remarks</mat-label>\n                <textarea matInput name=\"remarks\" [(ngModel)]=\"payment.remarks\" [readonly]=\"multipleApplication?.paymentStatus !== 'FOR_PAYMENT'\"></textarea>\n            </mat-form-field>\n\n        </div>\n    </div>\n\n    <div class=\"row\" *ngIf=\"!isDisabled || multipleApplication?.paymentStatus === undefined || multipleApplication?.totalAmount === 0\">\n        <div class=\"col-md-10\"><span *ngIf=\"multipleApplication && multipleApplication?.totalAmount === 0\">\n          <i>Please contact ASC admin to check the Maintenance of Fees.</i></span></div>\n        <div class=\"col-md-2\">\n            <button mat-raised-button class=\"button-red\" [disabled]=\"!paymentType || !previewDocument || multipleApplication?.totalAmount === 0\" (click)=\"uploadDocument(multipleApplication)\">\n                <i class=\"material-icons color__white\">task_alt</i> SUBMIT\n            </button>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { FormListComponent } from '@fragments';\nimport { S1Application, S2Application } from '@models';\nimport { ApiService, SweetAlertService } from '@services';\nimport { ENDPOINTS, USER_ROLES } from '@shared';\nimport { NgxSpinnerService } from 'ngx-spinner';\n\n@Component({\n  selector: 'app-reassignment',\n  templateUrl: './reassignment.component.html',\n  styleUrls: ['./reassignment.component.scss']\n})\nexport class ReassignmentComponent implements OnInit {\n  @ViewChild(FormListComponent) formListComponent: FormListComponent;\n\n  // ojects\n  s1Application = new S1Application();\n  s2Application = new S2Application();\n\n  // lists\n  userList = [];\n\n  // for displayed list\n  // s1\n  s1ApplicationList = [];\n  s1ApplicationDataSource: MatTableDataSource<S1Application>;\n  s1ApplicationDisplayedColumns = [\n    'referenceCode',\n    'adTitle',\n    'applicationOwner',\n    'assignedEncoder',\n    'assignedAdSpecialist',\n    'assignedScreener',\n    'assignedReviewer',\n    'assignedUser',\n  ];\n\n  // s2\n  // TODO update when endpoint is available\n  s2ApplicationList = [];\n  s2ApplicationDataSource: MatTableDataSource<S2Application>;\n  s2ApplicationDisplayedColumns = [\n    'referenceCode',\n    'adTitle',\n    'applicationOwner',\n    'assignedEncoder',\n    'assignedAdSpecialist',\n    // 'assignedScreener',\n    // 'assignedReviewer',\n    'assignedUser',\n  ];\n\n  // form\n  s1ApplicationForm: FormGroup;\n\n  // others\n  applicationOwnerName = '';\n  displayedContent = 'S1';\n\n  constructor(\n    private apiService: ApiService,\n    private formBuilder: FormBuilder,\n    private sweetAlertService: SweetAlertService,\n    private spinner: NgxSpinnerService,\n  ) { }\n\n  ngOnInit() {\n    this.getS1ApplicationList();\n    this.setFormValidator();\n    this.getUserList();\n  }\n\n  getS1ApplicationList(applicationType = 'S1'): void {\n    this.spinner.show();\n    if (applicationType === 'S1') {\n      this.apiService.findAll(ENDPOINTS.admin).subscribe((res: any) => {\n        this.s1ApplicationList = res.responseData.data;\n        this.s1ApplicationList = this.s1ApplicationList.filter(filteredS1List => !filteredS1List.appliedS2);\n\n        this.s1ApplicationDataSource = new MatTableDataSource<S1Application>(this.s1ApplicationList);\n        this.s1ApplicationDataSource.paginator = this.formListComponent.paginator;\n        this.s1ApplicationDataSource.sort = this.formListComponent.sort;\n      }, (err) => {\n        console.error(err);\n        this.spinner.hide();\n      }, () => {\n        this.spinner.hide();\n      });\n    } else if (applicationType === 'S2') {\n      this.apiService.findAll(ENDPOINTS.s2Application).subscribe((res: any) => {\n        this.s2ApplicationList = res.responseData.data;\n\n        this.s2ApplicationDataSource = new MatTableDataSource<S2Application>(this.s2ApplicationList);\n        this.s2ApplicationDataSource.paginator = this.formListComponent.paginator;\n        this.s2ApplicationDataSource.sort = this.formListComponent.sort;\n      }, (err) => {\n        console.error(err);\n        this.spinner.hide();\n      }, () => {\n        this.spinner.hide();\n      });\n    }\n  }\n\n  getS1Application(): void {\n    this.apiService.findById(ENDPOINTS.applicationForm, this.formListComponent.idForUpdate).subscribe((res: any) => {\n      if (res) {\n        this.s1Application = res.responseData.data;\n        this.applicationOwnerName = this.s1Application.applicationOwner\n          ? this.s1Application.applicationOwner.lastName + ', ' + this.s1Application.applicationOwner.firstName\n          : '';\n        if (this.s1Application.assignedUser) {\n          this.getUserList(this.s1Application.assignedUser.userRole.name);\n        } else {\n          this.getUserList('N/A');\n        }\n\n      }\n    });\n  }\n\n  getS2Application(): void {\n    this.apiService.findById(ENDPOINTS.applicationFormS2, this.formListComponent.idForUpdate).subscribe((res: any) => {\n      if (res) {\n\n        this.s2Application = res.responseData.data;\n        if (this.s2Application.applicationForm) {\n          this.applicationOwnerName = this.s2Application.applicationForm.applicationOwner\n            ? this.s2Application.applicationForm.applicationOwner.lastName + ', '\n            + this.s2Application.applicationForm.applicationOwner.firstName\n            : '';\n        }\n        if (this.s2Application.assignedUser) {\n          this.getUserList(this.s2Application.assignedUser.userRole.name);\n        } else {\n          this.getUserList('N/A');\n        }\n\n      }\n    });\n  }\n\n  update(): void {\n    this.spinner.show();\n\n    let endpoint = '';\n    let currentObj: any;\n    if (this.displayedContent === 'S1') {\n      endpoint = ENDPOINTS.applicationReassignment\n      currentObj = this.s1Application;\n    } else if (this.displayedContent === 'S2') {\n      endpoint = ENDPOINTS.s2ApplicationReassignment;\n      // endpoint = ENDPOINTS.applicationFormS2;\n      if (this.s2Application.actionStatus === 'ASSIGN_TO_ENCODER') {\n        this.s2Application.assignedEncoder = this.s2Application.assignedUser;\n      } else if (this.s2Application.actionStatus === 'ASSIGN_TO_ADSPE') {\n        this.s2Application.assignedAdSpecialist = this.s2Application.assignedUser;\n      }\n\n      currentObj = this.s2Application;\n    }\n\n    this.apiService.save(endpoint, currentObj).subscribe(\n      (res: any) => {\n        if (res) {\n          this.spinner.hide();\n          this.sweetAlertService.success(res);\n        }\n      }, (err: any) => {\n        this.spinner.hide();\n        this.sweetAlertService.error(err);\n      }, () => {\n        // actions after subscription\n        this.spinner.hide();\n        this.getUserList();\n        this.resetFormValidator();\n        if (this.displayedContent === 'S1') {\n          this.getS1ApplicationList();\n        } else if (this.displayedContent === 'S2') {\n          this.getS1ApplicationList('S2');\n        }\n      });\n  }\n\n  setFormValidator(): void {\n    this.s1ApplicationForm = this.formBuilder.group({\n      referenceCode: [''],\n      adTitle: [''],\n      applicationOwner: [''],\n      assignedAdSpecialist: [''],\n      assignedEncoder: [''],\n      assignedReviewer: [''],\n      assignedScreener: [''],\n      assignedUser: [''],\n    });\n  }\n\n  resetFormValidator(): void {\n    this.s1Application = new S1Application();\n    this.s2Application = new S2Application();\n    this.s1ApplicationForm.markAsUntouched();\n    this.s1ApplicationForm.markAsPristine();\n  }\n\n\n  getUserList(userRole = '') {\n    this.apiService.findAll(ENDPOINTS.userAccount).subscribe(\n      (res: any) => {\n        this.userList = res.responseData.data;\n        this.userList = this.userList.filter(\n          filteredUsers => filteredUsers?.userRole?.name !== USER_ROLES.ROLE_APPLICANT);\n        if (userRole) {\n          this.userList = this.userList.filter(\n            filteredUsers => filteredUsers?.userRole?.name === userRole);\n        }\n      }\n    );\n  }\n\n  compareAssignedUser(value: any, selected: any): boolean {\n    if (value && selected) {\n      return value.id === selected.id;\n    }\n  }\n\n  changeTab(evt) {\n    if (evt.tab) {\n      this.displayedContent = evt.tab.textLabel;\n    }\n\n    if (evt.index === 0) {\n      this.getS1ApplicationList();\n    } else if (evt.index === 1) {\n      this.getS1ApplicationList('S2');\n    }\n  }\n\n}\n","<form>\n    <!-- <div class=\"spinner\">\n        <ngx-spinner bdColor=\"rgba(0, 0, 0, 0.8)\" size=\"large\" color=\"#fff\" type=\"line-spin-fade\" [fullScreen]=\"false\">\n            <p> Loading list of Applications </p>\n        </ngx-spinner>\n    </div> -->\n    <div class=\"container-fluid\">\n        <div class=\"row\">\n            <div class=\"col-md-12 title\">\n                <mat-label>\n                    <mat-icon>view_list</mat-icon> Application Reassignment\n                </mat-label>\n            </div>\n        </div>\n        <hr>\n        <mat-tab-group mat-align-tabs=\"start\" (selectedTabChange)=\"changeTab($event)\">\n            <mat-tab label=\"S1\">\n                <ng-container *ngTemplateOutlet=\"s1ApplicationFormDisplay\"></ng-container>\n            </mat-tab>\n            <mat-tab label=\"S2\">\n                <ng-container *ngTemplateOutlet=\"s2ApplicationFormDisplay\"></ng-container>\n            </mat-tab>\n        </mat-tab-group>\n\n        <span *ngIf=\"displayedContent === 'S1' \">\n            <ng-container *ngTemplateOutlet=\"s1ApplicationList\"></ng-container>\n        </span>\n        <span *ngIf=\"displayedContent === 'S2' \">\n            <ng-container *ngTemplateOutlet=\"s2ApplicationList\"></ng-container>\n        </span>\n\n    </div>\n</form>\n\n\n<!-- ****************************** FORM ****************************** -->\n\n<ng-template #s1ApplicationFormDisplay>\n    <form [formGroup]=\"s1ApplicationForm\" *ngIf=\"s1Application?.id\">\n        <div class=\"row\">\n            <mat-form-field class=\"col-md-6\" appearance=\"outline\">\n                <mat-label>Reference Code</mat-label>\n                <input matInput [(ngModel)]=\"s1Application.referenceCode\" name=\"referenceCode\"\n                    formControlName=\"referenceCode\" readonly\n                    *ngIf=\"s1Application?.internalStatus!=='S1_APPLICATION_REJECTED'\">\n                <input matInput [(ngModel)]=\"s1Application.referenceCodeRejected\" name=\"referenceCode\"\n                    formControlName=\"referenceCode\" readonly\n                    *ngIf=\"s1Application?.internalStatus==='S1_APPLICATION_REJECTED'\">\n            </mat-form-field>\n\n            <mat-form-field class=\"col-md-6\" appearance=\"outline\">\n                <mat-label>Application Owner</mat-label>\n                <input matInput [(ngModel)]=\"applicationOwnerName \" name=\"applicationOwner\"\n                    formControlName=\"applicationOwner\" readonly>\n            </mat-form-field>\n\n            <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n                <mat-label>AD Title</mat-label>\n                <input matInput [(ngModel)]=\"s1Application.adTitle\" name=\"adTitle\" formControlName=\"adTitle\" readonly>\n            </mat-form-field>\n\n            <mat-form-field class=\"col-md-6\" appearance=\"outline\">\n                <mat-label>Assigned User</mat-label>\n                <mat-select [(ngModel)]=\"s1Application.assignedUser\" name=\"assignedUser\" formControlName=\"assignedUser\"\n                    [compareWith]=\"compareAssignedUser\">\n                    <mat-option *ngFor=\"let i of userList\" [value]=\"i\">\n                        {{ i?.firstName }} {{ i?.lastName }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <app-form-action-buttons [childObject]=\"s1Application\" [childForm]=\"s1ApplicationForm\"\n            (updateFunction)=\"update()\" (cancelFunction)=\"resetFormValidator()\"></app-form-action-buttons>\n    </form>\n</ng-template>\n\n<ng-template #s2ApplicationFormDisplay>\n    <form [formGroup]=\"s1ApplicationForm\" *ngIf=\"s2Application?.id\">\n        <div class=\"row\">\n            <mat-form-field class=\"col-md-6\" appearance=\"outline\">\n                <mat-label>Reference Code</mat-label>\n                <input matInput [(ngModel)]=\"s2Application.applicationForm.referenceCode\" name=\"referenceCode\"\n                    formControlName=\"referenceCode\" readonly\n                    *ngIf=\"s2Application?.internalStatus!=='S1_APPLICATION_REJECTED'\">\n                <input matInput [(ngModel)]=\"s1Application.referenceCodeRejected\" name=\"referenceCode\"\n                    formControlName=\"referenceCode\" readonly\n                    *ngIf=\"s2Application?.internalStatus==='S1_APPLICATION_REJECTED'\">\n            </mat-form-field>\n\n            <mat-form-field class=\"col-md-6\" appearance=\"outline\">\n                <mat-label>Application Owner</mat-label>\n                <input matInput [(ngModel)]=\"applicationOwnerName\" name=\"applicationOwner\"\n                    formControlName=\"applicationOwner\" readonly>\n            </mat-form-field>\n\n            <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n                <mat-label>AD Title</mat-label>\n                <input matInput [(ngModel)]=\"s2Application.applicationForm.adTitle\" name=\"adTitle\" formControlName=\"adTitle\" readonly>\n            </mat-form-field>\n\n            <mat-form-field class=\"col-md-6\" appearance=\"outline\">\n                <mat-label>Assigned User</mat-label>\n                <mat-select [(ngModel)]=\"s2Application.assignedUser\" name=\"assignedUser\" formControlName=\"assignedUser\"\n                    [compareWith]=\"compareAssignedUser\">\n                    <mat-option *ngFor=\"let i of userList\" [value]=\"i\">\n                        {{ i?.firstName }} {{ i?.lastName }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <app-form-action-buttons [childObject]=\"s2Application\" [childForm]=\"s1ApplicationForm\"\n            (updateFunction)=\"update()\" (cancelFunction)=\"resetFormValidator()\"></app-form-action-buttons>\n    </form>\n</ng-template>\n\n\n\n\n<!-- ****************************** LISTING ****************************** -->\n\n<ng-template #s1ApplicationList>\n    <br>\n    <app-form-list [dataSource]=\"s1ApplicationDataSource\" [displayedColumns]=\"s1ApplicationDisplayedColumns\"\n        (selectInListFunction)=\"getS1Application()\"></app-form-list>\n</ng-template>\n\n<ng-template #s2ApplicationList>\n    <br>\n    <app-form-list [dataSource]=\"s2ApplicationDataSource\" [displayedColumns]=\"s2ApplicationDisplayedColumns\"\n        (selectInListFunction)=\"getS2Application()\"></app-form-list>\n</ng-template>\n","import { CustomAngularEditorModule } from './editor/lib/angular-editor.module';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApplicationsRoutingModule } from './applications-routing.module';\nimport { AngularMaterialModule } from '@shared';\nimport { CommentComponent } from './comment/comment.component';\nimport { ClientInformationComponent, MaterialInformationComponent, PreviewApplicationComponent } from '@applications';\nimport { UploadPaymentComponent } from '../accounting/upload-payment/upload-payment.component';\nimport { AddPaymentModule } from '@accounting';\nimport { SingleApplicationComponent } from './schedule-of-fees/single-application/single-application.component';\nimport { MultipleApplicationsComponent } from './schedule-of-fees/multiple-applications/multiple-applications.component';\nimport { ReassignmentModule } from './reassignment/reassignment.module';\nimport { PerformanceMetricsComponent } from './performance-metrics/performance-metrics.component';\nimport { SpecialApplicationsComponent } from './schedule-of-fees/special-applications/special-applications.component';\nimport { AttachmentDocumentComponent } from './attachment-document/attachment-document.component';\nimport { PreviewAttachmentsComponent } from './preview-attachments/preview-attachments.component';\n\n\n@NgModule({\n  declarations: [\n    PreviewApplicationComponent,\n    ClientInformationComponent,\n    MaterialInformationComponent,\n    CommentComponent,\n    UploadPaymentComponent,\n    SingleApplicationComponent,\n    MultipleApplicationsComponent,\n    PerformanceMetricsComponent,\n    SpecialApplicationsComponent,\n    AttachmentDocumentComponent,\n    PreviewAttachmentsComponent,\n  ],\n  imports: [\n    CommonModule,\n    ApplicationsRoutingModule,\n    AngularMaterialModule,\n    AddPaymentModule,\n    ReassignmentModule,\n    CustomAngularEditorModule\n  ],\n  exports: [\n    PreviewApplicationComponent,\n    ClientInformationComponent,\n    MaterialInformationComponent,\n    CommentComponent,\n    UploadPaymentComponent,\n    PerformanceMetricsComponent,\n    AttachmentDocumentComponent,\n    PreviewAttachmentsComponent,\n  ]\n})\nexport class ApplicationsModule { }\n","import { DatePipe } from \"@angular/common\";\nimport { Component, Inject, OnInit, Optional, ViewChild } from \"@angular/core\";\nimport { MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { Router } from \"@angular/router\";\nimport { Company, S1Application } from \"@models\";\nimport { ApiService, DataStorageService, SweetAlertService } from \"@services\";\nimport {\n  APPFORM_TYPE,\n  ENDPOINTS,\n  ERROR_MESSAGES,\n  FORM_TYPE,\n  ROLES,\n  USER_ROLES,\n} from \"@shared\";\nimport { ApplicationSingleMedia } from \"app/core/models/application-single-media.model\";\nimport { MultipleApplication } from \"app/core/models/multiple-application.model\";\nimport { NgxSpinnerService } from \"ngx-spinner\";\nimport Swal from \"sweetalert2\";\n\n@Component({\n  selector: \"app-update-multiple-application\",\n  templateUrl: \"./update-multiple-application.component.html\",\n  styleUrls: [\"./update-multiple-application.component.scss\"],\n})\nexport class UpdateMultipleApplicationComponent implements OnInit {\n  @ViewChild(MatPaginator, { static: false }) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: false }) sort: MatSort;\n\n  company = new Company();\n  s1Application = new S1Application();\n  multipleS1Application = new MultipleApplication();\n  applicationSingleMedia = new ApplicationSingleMedia();\n  multipleS1ApplicationList = [];\n  dataSource: MatTableDataSource<S1Application>;\n  displayedColumns: string[] = [\n    \"referenceCode\",\n    \"typeOfMediumDisplay\",\n    \"mainAttachmentReference\",\n    \"supportingAttachmentReference\",\n    \"brand\",\n    \"status\",\n    \"decisionStatus\",\n  ];\n\n  currentUser: any;\n  currentUserRole: any;\n\n  isAscUser = false;\n  isDisableFieldOnUpdate = true;\n  isDisabledSubmitButton = true;\n  canForwardMultipleApp = false;\n  isAllApplicationsHasMainDoc = false;\n  warningNote =\n    \"Note: To submit multiple application, please make sure that every application has complete details and has necessary attachments.\";\n  typeOfMediumDisplay = \"\";\n\n  formType = APPFORM_TYPE.MULTIPLE;\n\n  ascUserRoleList = [\n    ...ROLES.filter((role: any) => role.ascUser === true).map(\n      (role: any) => role.role\n    ),\n  ];\n\n  constructor(\n    private apiService: ApiService,\n    private sweetAlertService: SweetAlertService,\n    private dataStorage: DataStorageService,\n    private router: Router,\n    private spinner: NgxSpinnerService,\n    private datepipe: DatePipe,\n    @Optional()\n    public dialogRef: MatDialogRef<UpdateMultipleApplicationComponent>,\n    @Optional() @Inject(MAT_DIALOG_DATA) public data: any\n  ) {\n    if (data) {\n      this.multipleS1Application = data;\n      this.s1Application.formType = this.formType;\n\n      // Client Info\n      this.s1Application.company = this.multipleS1Application.company;\n      this.company = this.multipleS1Application.company;\n      // this.s1Application.membersAffiliation = this.multipleS1Application.membersAffiliation;\n      this.s1Application.brand = this.multipleS1Application.brand;\n      this.s1Application.product = this.multipleS1Application.product;\n      // this.s1Application.category = this.multipleS1Application.category;\n    }\n  }\n\n  ngOnInit(): void {\n    this.currentUser = this.dataStorage.getUserAccount();\n    this.currentUserRole = this.currentUser.userRole.name;\n    this.isAscUser = this.ascUserRoleList.includes(\n      this.dataStorage.getUserRole()\n    );\n    this.getS1FormsByMultipleApplication();\n    if (this.currentUserRole !== USER_ROLES.ROLE_APPLICANT) {\n      this.displayedColumns = [\n        \"referenceCode\",\n        \"typeOfMediumDisplay\",\n        \"mainAttachmentReference\",\n        \"supportingAttachmentReference\",\n        \"brand\",\n        \"status\",\n        \"ASCstatus\",\n        \"decisionStatus\",\n      ];\n    }\n  }\n\n  getS1FormsByMultipleApplication() {\n    let endpoint = \"\";\n    if (\n      this.currentUserRole === USER_ROLES.ROLE_APPLICANT ||\n      this.currentUserRole === USER_ROLES.ROLE_ADMIN ||\n      this.currentUserRole === USER_ROLES.ROLE_SUPER_ADMIN\n    ) {\n      endpoint = ENDPOINTS.getMultipleAppForms + this.multipleS1Application.id;\n    } else {\n      endpoint =\n        ENDPOINTS.getMultipleAppFormsWithNoRejected +\n        this.multipleS1Application.id;\n    }\n    // this.apiService.findAll(ENDPOINTS.applicationFormPresentor + `multiple-application/${this.multipleS1Application.id}/applications`)\n    this.apiService.findAll(endpoint).subscribe(\n      (res: any) => {\n        this.multipleS1ApplicationList = res.responseData.data;\n\n        this.isAllApplicationsHasMainDoc = this.multipleS1ApplicationList.filter(\n          (filteredList) => !filteredList.mainAttachmentReference\n        ).length\n          ? false\n          : true;\n\n        this.multipleS1ApplicationList.forEach((value, index) => {\n          this.s1Application = value;\n          this.multipleS1ApplicationList[index] = value;\n          switch (\n            value?.refTypeOfMedium ||\n            value?.applicationFormS2?.applicationForm?.refTypeOfMedium\n          ) {\n            case \"SINGLE MEDIA\":\n              this.getApplicationSingleMedia();\n              break;\n            case \"MULTIMEDIA-MOVING\":\n              this.getMultimediaMoving();\n              break;\n            case \"MULTIMEDIA-STATIC\":\n              this.getMultimediaStatic();\n              break;\n            default:\n              break;\n          }\n        });\n\n        this.dataSource = new MatTableDataSource<S1Application>(\n          this.multipleS1ApplicationList\n        );\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n\n        // will be disabled if there's an application without main doc uploaded\n        this.isDisabledSubmitButton = this.multipleS1ApplicationList.filter(\n          (filteredList) => !filteredList.mainAttachmentReference\n        ).length\n          ? true\n          : false;\n\n        this.isDisabledSubmitButton = this.multipleS1ApplicationList.filter(\n          (filteredList) =>\n            !filteredList.supportingAttachmentReference &&\n            !filteredList.hasNoSupportingDocs\n        ).length\n          ? true\n          : false;\n\n        // if earlier or later than the approved date\n\n        const today = this.datepipe.transform(new Date(), \"yyyy-MM-dd\");\n        const approvedDate = this.datepipe.transform(\n          this.multipleS1Application.dateOfSubmission,\n          \"yyyy-MM-dd\"\n        );\n\n        if (\n          this.multipleS1Application.submissionStatus !== \"PROCESSED\" &&\n          approvedDate !== today &&\n          this.multipleS1Application.status !== \"DISAPPROVED\"\n        ) {\n          this.isDisabledSubmitButton = true;\n          this.warningNote =\n            \"Note: Applicant can only submit multiple application on approved date.\";\n        }\n\n        this.checkForwardStatus();\n      },\n      (err: any) => {\n        err.error.message = ERROR_MESSAGES.under_maintenance;\n        this.sweetAlertService.error(err);\n      }\n    );\n  }\n\n  checkForwardStatus() {\n    if (\n      this.multipleS1Application.countVerifiedApplicationForm ===\n      this.multipleS1Application.actualNumberOfApplicationForm\n    ) {\n      this.canForwardMultipleApp = true;\n    }\n  }\n\n  viewApplication(data) {\n    this.dialogRef.close();\n    this.router.navigate([`asc/page/application/s1/update/${data.id}`]);\n  }\n\n  onApproveOrDisapprove(status = \"APPROVED\"): void {\n    const displayStatus = status === \"APPROVED\" ? \"approve\" : \"disapprove\";\n    Swal.fire({\n      text: `Are you sure you want to ${displayStatus} this application?`,\n      icon: \"question\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Confirm\",\n    }).then((result) => {\n      if (result.value) {\n        const endpointExtension =\n          status === \"APPROVED\" ? \"/approve\" : \"/disapprove\";\n        this.multipleS1Application.actionDate = new Date();\n        this.multipleS1Application.actionBy = this.currentUser.username;\n        this.apiService\n          .update(\n            `${ENDPOINTS.multipleApplication}${endpointExtension}`,\n            this.multipleS1Application\n          )\n          .subscribe(\n            (res: any) => {\n              this.sweetAlertService.customSuccessMessage(\n                \"Multiple application submission request has been \" +\n                  displayStatus +\n                  \"d.\"\n              );\n            },\n            (err: any) => {\n              err.error.message = ERROR_MESSAGES.under_maintenance;\n              this.sweetAlertService.error(err);\n            },\n            () => {\n              this.dialogRef.close(this.multipleS1Application);\n            }\n          );\n      }\n    });\n  }\n\n  updateMultipleApplications(multipleId): void {\n    // TO DO\n    // will only redirect to add new S1 application\n    // saving or updating is in add-s1-application.component.ts\n    const ctr =\n      this.multipleS1ApplicationList.length === 0\n        ? 1\n        : this.multipleS1ApplicationList.length + 1;\n\n    this.dialogRef.close();\n    this.router.navigate([\n      `asc/page/application/s1/add/multiple/${multipleId}/${ctr}`,\n    ]);\n  }\n\n  compareProduct(value: any, selected: any): boolean {\n    if (value && selected) {\n      return value.description === selected.description;\n    }\n  }\n\n  // compareCategory(value: any, selected: any): boolean {\n  //   if (value && selected) {\n  //     return value.description === selected.description;\n  //   }\n  // }\n\n  submitMultiple() {\n    Swal.fire({\n      text: `Are you sure you want to submit this multiple application?`,\n      icon: \"question\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Confirm\",\n    }).then((result) => {\n      if (result.value) {\n        if (\n          this.multipleS1Application.numberOfApplication >\n          this.multipleS1ApplicationList.length\n        ) {\n          Swal.fire({\n            text: `Are you sure you want to submit ${this.multipleS1ApplicationList.length} out ${this.multipleS1Application.numberOfApplication} applications only?`,\n            icon: \"question\",\n            showCancelButton: true,\n            confirmButtonColor: \"#3085d6\",\n            cancelButtonColor: \"#d33\",\n            confirmButtonText: \"Confirm\",\n          }).then((result2) => {\n            if (result2.value) {\n              const endpoint = `${ENDPOINTS.applicationFormPresentor}group-id/${this.multipleS1Application.id}/application-type-id/\n                ${this.multipleS1Application.applicationType.id}/batch-multiple-app-form/submit`;\n              this.apiService.save(endpoint, null).subscribe(\n                (res: any) => {\n                  this.sweetAlertService.customSuccessMessage(\n                    \"Multiple application successfully submitted.\"\n                  );\n                  this.getS1FormsByMultipleApplication();\n                },\n                (err: any) => {\n                  err.error.message = ERROR_MESSAGES.under_maintenance;\n                  this.sweetAlertService.error(err);\n                },\n                () => {\n                  this.dialogRef.close(this.multipleS1Application);\n                }\n              );\n            }\n          });\n        } else {\n          const endpoint = `${ENDPOINTS.applicationFormPresentor}group-id/${this.multipleS1Application.id}/application-type-id/\n        ${this.multipleS1Application.applicationType.id}/batch-multiple-app-form/submit`;\n          this.apiService.save(endpoint, null).subscribe(\n            (res: any) => {\n              this.sweetAlertService.customSuccessMessage(\n                \"Multiple application successfully submitted.\"\n              );\n              this.getS1FormsByMultipleApplication();\n            },\n            (err: any) => {\n              err.error.message = ERROR_MESSAGES.under_maintenance;\n              this.sweetAlertService.error(err);\n            },\n            () => {\n              this.dialogRef.close(this.multipleS1Application);\n            }\n          );\n        }\n      }\n    });\n  }\n\n  forwardMultipleAppsTo(user) {\n    Swal.fire({\n      text: `Are you sure you want to forward this multiple application?`,\n      icon: \"question\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Confirm\",\n    }).then((result) => {\n      if (result.value) {\n        this.spinner.show();\n        let endpoint = \"\";\n\n        if (user === \"encoder\") {\n          this.multipleS1Application.assignedEncoder = this.multipleS1ApplicationList[0].assignedEncoder;\n          // endpoint = ENDPOINTS.forwardMultipleAppFormToAdSpe;\n          endpoint = `${ENDPOINTS.s1ApplicationForm}encoder/group-id/${this.multipleS1Application.id}/forward-multiple-app-form`;\n        } else if (user === \"ad-specialist\") {\n          this.multipleS1Application.assignedAdSpecialist = this.multipleS1ApplicationList[0].assignedAdSpecialist;\n          this.multipleS1Application.assignedScreener = this.multipleS1ApplicationList[0].assignedScreener;\n          endpoint = ENDPOINTS.forwardMultipleAppFormToScreener;\n        } else if (user === \"screener\") {\n          this.multipleS1Application.assignedReviewer = this.multipleS1ApplicationList[0].assignedReviewer;\n          endpoint = ENDPOINTS.forwardMultipleAppFormToReviewer;\n        }\n\n        this.apiService.save(endpoint, this.multipleS1Application).subscribe(\n          (res: any) => {\n            console.log(res);\n            this.spinner.hide();\n            this.sweetAlertService.customSuccessMessage(\n              \"Multiple application successfully forwarded to the next user.\"\n            );\n          },\n          (err: any) => {\n            this.spinner.hide();\n            err.error.message = ERROR_MESSAGES.under_maintenance;\n            this.sweetAlertService.error(err);\n          },\n          () => {\n            this.spinner.hide();\n            this.dialogRef.close(this.multipleS1Application);\n          }\n        );\n      }\n    });\n  }\n\n  getApplicationSingleMedia(\n    appFormReference = this.s1Application?.appFormReference\n  ) {\n    this.apiService\n      .findByParam(\n        ENDPOINTS.applicationSingleMedia,\n        `app-form-reference/${appFormReference}`\n      )\n      .subscribe(\n        (res: any) => {\n          if (res.responseData.data.length > 0) {\n            this.applicationSingleMedia = res.responseData.data[0];\n\n            this.typeOfMediumDisplay = `${this.applicationSingleMedia?.mediumExecution?.typeOfMedium?.description} (${this.applicationSingleMedia?.sizeLength})`;\n\n            this.multipleS1ApplicationList.forEach((element, index) => {\n              if (element.appFormReference === appFormReference) {\n                this.multipleS1ApplicationList[index] = {\n                  ...this.multipleS1ApplicationList[index],\n                  typeOfMediumDisplay:\n                    this.typeOfMediumDisplay === \"undefined (0)\"\n                      ? \"\"\n                      : this.typeOfMediumDisplay,\n                };\n              }\n            });\n\n            this.isDisabledSubmitButton = this.multipleS1ApplicationList.filter(\n              (filteredS1App) => filteredS1App.typeOfMediumDisplay === \"\"\n            ).length\n              ? true\n              : false;\n\n            this.dataSource = new MatTableDataSource<any>(\n              this.multipleS1ApplicationList\n            );\n            this.dataSource.paginator = this.paginator;\n          } else {\n            this.applicationSingleMedia = new ApplicationSingleMedia();\n            this.typeOfMediumDisplay = \"\";\n          }\n        },\n        (err: any) => {\n          this.applicationSingleMedia = new ApplicationSingleMedia();\n          this.typeOfMediumDisplay = \"\";\n        }\n      );\n  }\n\n  getMultimediaStatic(appFormReference = this.s1Application?.appFormReference) {\n    this.apiService\n      .findByParam(\n        ENDPOINTS.applicationMultimedia,\n        `app-form-reference/${appFormReference}`\n      )\n      .subscribe(\n        (res: any) => {\n          if (res.responseData.data.length > 0) {\n            const multimediaList = new Set(\n              res.responseData.data.map(\n                (mappedList) =>\n                  `${mappedList?.typeOfMedium?.description} (${mappedList?.multimediaSizeLength})`\n              )\n            );\n\n            this.typeOfMediumDisplay = \"\";\n            let mediaCtrl = 1;\n            for (const media of multimediaList) {\n              if (mediaCtrl !== multimediaList.size) {\n                this.typeOfMediumDisplay += `${media}, `;\n                mediaCtrl++;\n              } else {\n                this.typeOfMediumDisplay += media;\n              }\n            }\n\n            this.multipleS1ApplicationList.forEach((element, index) => {\n              if (element.appFormReference === appFormReference) {\n                this.multipleS1ApplicationList[index] = {\n                  ...this.multipleS1ApplicationList[index],\n                  typeOfMediumDisplay: this.typeOfMediumDisplay,\n                };\n              }\n            });\n            this.dataSource = new MatTableDataSource<any>(\n              this.multipleS1ApplicationList\n            );\n            this.dataSource.paginator = this.paginator;\n\n            this.isDisabledSubmitButton = this.multipleS1ApplicationList.filter(\n              (filteredList) => !filteredList.typeOfMediumDisplay\n            ).length\n              ? true\n              : false;\n          } else {\n            this.typeOfMediumDisplay = \"\";\n          }\n        },\n        (err: any) => {\n          this.typeOfMediumDisplay = \"\";\n        }\n      );\n  }\n\n  getMultimediaMoving(appFormReference = this.s1Application?.appFormReference) {\n    this.apiService\n      .findByParam(\n        ENDPOINTS.applicationMultimedia,\n        `app-form-reference/${appFormReference}`\n      )\n      .subscribe(\n        (res: any) => {\n          if (res.responseData.data.length > 0) {\n            const multimediaList = new Set(\n              res.responseData.data.map(\n                (mappedList) =>\n                  `${mappedList?.typeOfMedium?.description} (${mappedList?.multimediaSizeLength})`\n              )\n            );\n\n            this.typeOfMediumDisplay = \"\";\n            let mediaCtrl = 1;\n            for (const media of multimediaList) {\n              if (mediaCtrl !== multimediaList.size) {\n                this.typeOfMediumDisplay += `${media}, `;\n                mediaCtrl++;\n              } else {\n                this.typeOfMediumDisplay += media;\n              }\n            }\n\n            this.multipleS1ApplicationList.forEach((element, index) => {\n              if (element.appFormReference === appFormReference) {\n                this.multipleS1ApplicationList[index] = {\n                  ...this.multipleS1ApplicationList[index],\n                  typeOfMediumDisplay: this.typeOfMediumDisplay,\n                };\n              }\n            });\n            this.dataSource = new MatTableDataSource<any>(\n              this.multipleS1ApplicationList\n            );\n            this.dataSource.paginator = this.paginator;\n\n            this.isDisabledSubmitButton = this.multipleS1ApplicationList.filter(\n              (filteredList) => !filteredList.typeOfMediumDisplay\n            ).length\n              ? true\n              : false;\n          } else {\n            this.typeOfMediumDisplay = \"\";\n          }\n        },\n        (err: any) => {\n          this.typeOfMediumDisplay = \"\";\n        }\n      );\n  }\n}\n","<form>\n  <div class=\"container-fluid\">\n    <div class=\"row title\">\n      <div class=\"col-md-12\">\n\n        <table class=\"application-details\">\n          <tr>\n            <td *ngIf=\"multipleS1Application?.status\">\n              <span>\n                Status:\n              </span>\n            </td>\n            <td *ngIf=\"multipleS1Application?.status\">\n              <span>\n                <b>{{multipleS1Application?.status?.replaceAll('_',' ') | uppercase}}</b>\n              </span>\n            </td>\n            <!-- <td class=\"no-border\">\n                        <button class=\"button-right button-red\" mat-raised-button\n                        (click)=\"dialogRef.close()\">\n                          <i class=\"material-icons color__white\">list</i> VIEW APPLICATIONS\n                        </button>\n                      </td> -->\n          <tr>\n            <td class=\"no-border\">\n            </td>\n          </tr>\n          <tr>\n            <td *ngIf=\"multipleS1Application?.numberOfApplication\">\n              <span>\n                Number of Applications:\n              </span>\n            </td>\n            <td>\n              <span>\n                <b *ngIf=\"(multipleS1Application?.status === 'FOR_APPROVAL' || multipleS1Application?.submissionStatus==='PROCESSED' || multipleS1Application?.status === 'DISAPPROVED') &&\n                (currentUser.userRole.name==='ROLE_ADMIN' || currentUser.userRole.name === 'ROLE_SUPER_ADMIN' || currentUser.userRole.name === 'ROLE_APPLICANT')\">\n                  {{multipleS1Application?.submissionStatus==='PROCESSED' && multipleS1Application?.status !== 'DISAPPROVED' && multipleS1Application?.status !== 'FOR_APPROVAL'\n                  ? multipleS1Application.actualNumberOfApplicationForm\n                  : multipleS1Application?.numberOfApplication}}</b>\n\n                  <b *ngIf=\"multipleS1Application?.submissionStatus==='PROCESSED'\">\n                    {{currentUser.userRole.name !== 'ROLE_APPLICANT' && currentUser.userRole.name!=='ROLE_ADMIN' && currentUser.userRole.name !== 'ROLE_SUPER_ADMIN' ? multipleS1Application?.countVerifiedApplicationForm : ''}}\n                     of {{multipleS1Application?.actualNumberOfApplicationForm}}</b>\n\n                <b *ngIf=\"multipleS1Application?.status === 'APPROVED' && (currentUser.userRole.name==='ROLE_ADMIN' || currentUser.userRole.name === 'ROLE_SUPER_ADMIN' || currentUser.userRole.name === 'ROLE_APPLICANT') && multipleS1Application?.submissionStatus!=='PROCESSED'\">\n                  {{multipleS1ApplicationList.length}} of {{multipleS1Application?.numberOfApplication}}</b>\n              </span>\n            </td>\n            <td class=\"no-border\"\n              *ngIf=\"multipleS1Application?.status==='APPROVED'&&currentUser.userRole.name==='ROLE_APPLICANT'\"\n              [hidden]=\"multipleS1Application?.submissionStatus==='PROCESSED'\">\n              <button class=\"button-right button-red\" mat-raised-button\n              [disabled]=\"multipleS1Application?.actualNumberOfApplicationForm === multipleS1Application?.numberOfApplication\"\n                (click)=\"updateMultipleApplications(multipleS1Application?.id)\">\n                <i class=\"material-icons color__white\">add</i> ADD APPLICATION\n              </button>\n            </td>\n          </tr>\n        </table>\n\n        <hr>\n      </div>\n    </div>\n\n    <div class=\"row\"><br></div>\n    <div class=\"row\">\n      <mat-form-field class=\"col-md-6\" appearance=\"outline\">\n        <mat-label>Form Type</mat-label>\n        <input matInput [value]=\"formType\" readonly>\n      </mat-form-field>\n\n      <mat-form-field class=\"col-md-6\" appearance=\"outline\">\n        <mat-label>Application Type</mat-label>\n        <input matInput [value]=\"multipleS1Application?.applicationType?.description\" readonly>\n      </mat-form-field>\n    </div>\n\n    <div class=\"row\">\n      <mat-accordion class=\"headers-align\" multi>\n        <mat-expansion-panel [expanded]=\"\n                  ((currentUser?.userRole?.name=='ROLE_APPLICANT'&&s1Application?.internalStatus!='SAVED')\n                  ||(s1Application?.internalStatus==undefined))\n                  &&((multipleS1Application?.status !== 'APPROVED')\n                  ||(multipleS1Application?.status === 'APPROVED' && multipleS1ApplicationList.length==0))\" *ngIf=\"\n                  (currentUser?.userRole?.name=='ROLE_APPLICANT'&&s1Application?.internalStatus=='SAVED')\n                  ||(currentUser?.userRole?.name!='ROLE_APPLICANT')\n                  ||(s1Application?.internalStatus==undefined)\">\n\n          <mat-expansion-panel-header>\n            <mat-panel-title>\n              <i class=\"material-icons\">label_important</i> &nbsp;Initial Information\n            </mat-panel-title>\n          </mat-expansion-panel-header>\n          <br>\n\n          <app-client-information [multipleApplication]=\"multipleS1Application\" [s1Application]=\"s1Application\" [isAscUser]=\"isAscUser\"\n            [isDisableFieldOnUpdate]=\"isDisableFieldOnUpdate\" [company]=\"company\"></app-client-information>\n\n          <div class=\"row\">\n            <mat-form-field class=\"col-md-6\" appearance=\"outline\">\n              <mat-label>Ad Title</mat-label>\n              <input matInput [value]=\"multipleS1Application?.adTitle\" readonly>\n            </mat-form-field>\n\n            <mat-form-field class=\"col-md-6\" appearance=\"outline\">\n              <mat-label>Tag Line</mat-label>\n              <input matInput [value]=\"multipleS1Application?.tagLine\" readonly>\n            </mat-form-field>\n          </div>\n\n          <div class=\"row\">\n            <mat-form-field appearance=\"outline\" class=\"col-md-6\">\n              <mat-label>Date of Submission</mat-label>\n                <input matInput placeholder=\"Date\" readonly\n                  [value]=\"multipleS1Application?.dateOfSubmission | date: 'MMMM d, y'\"\n                  name=\"dateOfSubmission\" *ngIf=\"multipleS1Application?.status !== 'DISAPPROVED'\"/>\n                <input matInput placeholder=\"Date\" readonly\n                  value=\"N/A - Request was disapproved\"\n                  name=\"dateOfSubmission\" *ngIf=\"multipleS1Application?.status === 'DISAPPROVED'\"/>\n            </mat-form-field>\n          </div>\n        </mat-expansion-panel>\n\n        <!-- FOR Admin Users only -->\n        <mat-expansion-panel *ngIf=\"currentUser?.userRole?.name === 'ROLE_ADMIN' || currentUser?.userRole?.name === 'ROLE_SUPER_ADMIN' \">\n          <mat-expansion-panel-header>\n            <mat-panel-title>\n              <i class=\"material-icons\">label_important</i> &nbsp;Presentor Information\n            </mat-panel-title>\n            <mat-panel-description>\n              Personal Details\n              <i class=\"material-icons\">person</i>\n            </mat-panel-description>\n          </mat-expansion-panel-header>\n\n          <br>\n          <div class=\"row\">\n            <div class=\"row\">\n              <mat-form-field class=\"col-md-7\" appearance=\"outline\">\n                <mat-label>Company Name</mat-label>\n                <input matInput [value]=\"multipleS1Application?.company?.companyName\" readonly>\n              </mat-form-field>\n            </div>\n\n            <div class=\"row\"><br></div>\n\n            <div class=\"row\">\n              <mat-form-field class=\"col-md-11\" appearance=\"outline\">\n                <mat-label>Address</mat-label>\n                <input matInput [value]=\"multipleS1Application?.company?.completeAddress\" readonly>\n              </mat-form-field>\n            </div>\n\n            <div class=\"row\"><br></div>\n\n            <div class=\"row\">\n              <mat-form-field class=\"col-md-8\" appearance=\"outline\" *ngIf=\"multipleS1Application.id!= null\">\n                <mat-label>Name of Applicant</mat-label>\n                <input matInput [value]=\"multipleS1Application?.applicationOwner?.firstName+' '+multipleS1Application?.applicationOwner?.lastName\" readonly>\n              </mat-form-field>\n            </div>\n\n            <div class=\"row\"><br></div>\n\n            <div class=\"row\">\n              <mat-form-field class=\"col-md-4\" appearance=\"outline\" *ngIf=\"multipleS1Application.id!= null\">\n                <mat-label>Mobile Number</mat-label>\n                <input matInput [value]=\"multipleS1Application?.applicationOwner?.mobileNumber\" readonly>\n              </mat-form-field>\n              <mat-form-field class=\"col-md-3\" appearance=\"outline\" *ngIf=\"multipleS1Application.id!= null\">\n                <mat-label>Telephone Number</mat-label>\n                <input matInput [value]=\"multipleS1Application?.company?.companyTelephoneNo\" readonly>\n              </mat-form-field>\n              <mat-form-field class=\"col-md-4\" appearance=\"outline\" *ngIf=\"multipleS1Application.id!= null\">\n                <mat-label>Email Address</mat-label>\n                <input matInput [value]=\"multipleS1Application?.applicationOwner?.username\" readonly>\n              </mat-form-field>\n            </div>\n\n          </div>\n        </mat-expansion-panel>\n\n      </mat-accordion>\n      <!-- </form> -->\n\n      <div class=\"row\"><br></div>\n      <!-- ADD TABLE HERE -->\n      <div class=\"mat-elevation-z8 fields\" *ngIf=\"multipleS1Application?.status==='APPROVED'\">\n        <table mat-table [dataSource]=\"dataSource||multipleS1ApplicationList\" matSort>\n\n          <ng-container matColumnDef=\"referenceCode\">\n            <th mat-header-cell class=\"center-table-text\" *matHeaderCellDef mat-sort-header> REFERENCE CODE </th>\n            <td mat-cell *matCellDef=\"let element\" (click)=\"viewApplication(element)\">\n              {{ element?.referenceCode ? element?.referenceCode : '-' | uppercase}} </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"typeOfMediumDisplay\">\n            <th mat-header-cell class=\"center-table-text\" *matHeaderCellDef> MEDIUM (Length) </th>\n            <td mat-cell *matCellDef=\"let element\" (click)=\"viewApplication(element)\"> {{ element?.typeOfMediumDisplay }} </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"mainAttachmentReference\">\n            <th mat-header-cell class=\"center-table-text\" *matHeaderCellDef> HAS MAIN DOC </th>\n            <td mat-cell *matCellDef=\"let element\" (click)=\"viewApplication(element)\">\n              <i *ngIf=\"element?.mainAttachmentReference\" class=\"material-icons\">check_circle</i>\n              <i *ngIf=\"!element?.mainAttachmentReference\" class=\"material-icons cancel\">cancel</i>\n            </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"supportingAttachmentReference\">\n            <th mat-header-cell class=\"center-table-text\" *matHeaderCellDef> HAS SUPPORT DOC </th>\n            <td mat-cell *matCellDef=\"let element\" (click)=\"viewApplication(element)\">\n              <i *ngIf=\"element?.supportingAttachmentReference\" class=\"material-icons\">check_circle</i>\n              <i *ngIf=\"!element?.supportingAttachmentReference && !element?.hasNoSupportingDocs\" class=\"material-icons cancel\">cancel</i>\n              <i *ngIf=\"element?.hasNoSupportingDocs\" class=\"material-icons\">cancel</i>\n            </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"brand\">\n            <th mat-header-cell class=\"center-table-text\" *matHeaderCellDef> BRAND </th>\n            <td mat-cell *matCellDef=\"let element\" (click)=\"viewApplication(element)\">\n              {{ element?.brand?.description | uppercase }}\n            </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"status\">\n            <th mat-header-cell class=\"center-table-text\" *matHeaderCellDef> APPLICATION STATUS </th>\n            <td mat-cell *matCellDef=\"let element\" (click)=\"viewApplication(element)\"\n            [ngStyle]=\"{'background-color': element?.internalStatus === 'S1_APPLICATION_REJECTED' ? 'lightpink' : '' }\">\n              {{ element?.externalStatus?.replaceAll('_',' ') | uppercase }}\n          </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"ASCstatus\">\n            <th mat-header-cell class=\"center-table-text\" *matHeaderCellDef> INTERNAL STATUS </th>\n            <td mat-cell *matCellDef=\"let element\" (click)=\"viewApplication(element)\"\n            [ngStyle]=\"{'background-color': element?.internalStatus === 'S1_APPLICATION_REJECTED' ? 'lightpink' : '' }\"> {{\n              element?.internalStatus?.replaceAll('_',' ') | uppercase }}</td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"decisionStatus\">\n            <th mat-header-cell class=\"center-table-text\" *matHeaderCellDef> DECISION STATUS </th>\n            <td mat-cell *matCellDef=\"let element\" (click)=\"viewApplication(element)\"\n            [ngStyle]=\"{'background-color': element?.internalStatus === 'S1_APPLICATION_REJECTED' ? 'lightpink' : '' }\">\n              {{ element?.decisionStatus ? element?.decisionStatus : '-' | uppercase }}\n          </td>\n          </ng-container>\n\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n          <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n        </table>\n        <div class=\"no-record\" [hidden]=\"dataSource && dataSource?.data?.length > 0\"\n          *ngIf=\"multipleS1ApplicationList.length==0\">\n          No results found.\n        </div>\n        <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons></mat-paginator>\n        <div class=\"row\"><br></div>\n      </div>\n      <hr>\n\n      <div class=\"row\"><br>\n      <b *ngIf=\"isDisabledSubmitButton && currentUser.userRole.name==='ROLE_APPLICANT'\"><b class=\"material-icons\">error_outline</b> {{warningNote}}</b>\n      </div>\n\n      <div class=\"row\"><br></div>\n      <div class=\"no-border\" [hidden]=\"multipleS1Application?.submissionStatus==='PROCESSED'\"\n      *ngIf=\"multipleS1ApplicationList.length>0 && currentUser.userRole.name==='ROLE_APPLICANT' &&\n            multipleS1Application?.status !== 'FOR_APPROVAL' && isAllApplicationsHasMainDoc\">\n        <button class=\"button-right button-red\" mat-raised-button [disabled]=\"isDisabledSubmitButton\"\n          (click)=\"submitMultiple()\">\n          <i class=\"material-icons color__white\">send</i> SUBMIT\n          <br>\n        </button>\n      </div>\n      <br>\n      <!-- //////////////////////////////////////// ACTION BUTTONS //////////////////////////////////////////////////////////// -->\n      <div class=\"row\" *ngIf=\"multipleS1Application?.status === 'FOR_APPROVAL' && isAscUser && !multipleS1Application?.assignedReviewer\">\n        <div mat-dialog-actions>\n          <div class=\"dialog-button-content\" align=\"end\">\n            <button class=\"confirm\" (click)=\"onApproveOrDisapprove()\"><i\n                class=\"material-icons\">thumb_up_alt</i>Approve</button>\n            <button class=\"warn\" (click)=\"onApproveOrDisapprove('DISAPPROVED')\"><i\n                class=\"material-icons\">thumb_down_alt</i>Disapprove</button>\n          </div>\n        </div>\n      </div>\n    <!-- //////////////////////////////////////// ASC USERS //////////////////////////////////////////////////////////// -->\n      <!-- <div class=\"no-border\"\n        *ngIf=\"currentUser.userRole.name==='ROLE_ENCODER'&&canForwardMultipleApp && !multipleS1Application?.assignedReviewer\">\n        <button class=\"button-right button-red\" mat-raised-button (click)=\"forwardMultipleAppsTo('encoder')\">\n          <i class=\"material-icons color__white\">verified</i> FORWARD TO AD SPECIALIST\n        </button>\n      </div>\n\n      <div class=\"no-border\"\n        *ngIf=\"currentUser.userRole.name==='ROLE_AD_SPECIALIST'&&canForwardMultipleApp && !multipleS1Application?.assignedReviewer\">\n        <button class=\"button-right button-red\" mat-raised-button (click)=\"forwardMultipleAppsTo('ad-specialist')\">\n          <i class=\"material-icons color__white\">verified</i> FORWARD TO SCREENER\n        </button>\n      </div>\n\n      <div class=\"no-border\"\n        *ngIf=\"currentUser.userRole.name==='ROLE_SCREENER'&&canForwardMultipleApp && !multipleS1Application?.assignedReviewer\">\n        <button class=\"button-right button-red\" mat-raised-button (click)=\"forwardMultipleAppsTo('screener')\">\n          <i class=\"material-icons color__white\">fact_check</i> SCREENED\n        </button>\n      </div> -->\n\n      <!-- <div class=\"no-border\"\n        *ngIf=\"currentUser.userRole.name==='ROLE_REVIEWER'&&canForwardMultipleApp\">\n        <button class=\"button-right button-red\" mat-raised-button (click)=\"forwardMultipleAppsTo('reviewer')\">\n          <i class=\"material-icons color__white\">assignment_turned_in</i> REVIEWED\n        </button>\n      </div> -->\n\n      <br>\n    </div>\n  </div>\n</form>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { URL_PATHS } from '@shared';\n\nconst routes: Routes = [\n  {\n    path: '',\n    children: [\n      {\n        path: URL_PATHS.LIST_COMPANY,\n        loadChildren: () => import('./list-company/list-company.module')\n          .then(m => m.ListCompanyModule)\n      },\n      {\n        path: URL_PATHS.ADD_COMPANY,\n        loadChildren: () => import('./add-company/add-company.module')\n          .then(m => m.AddCompanyModule)\n      },\n      {\n        path: URL_PATHS.UPDATE_COMPANY + '/:id',\n        loadChildren: () => import('./add-company/add-company.module')\n          .then(m => m.AddCompanyModule)\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class CompanyRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AddCompanyComponent } from './add-company.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AddCompanyComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AddCompanyRoutingModule { }\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTable, MatTableDataSource } from '@angular/material/table';\nimport { ApiService, DataStorageService, SweetAlertService } from '@services';\nimport { ENDPOINTS } from '@shared';\nimport { ModalSingleApplicationComponent } from './modal-single-application/modal-single-application.component';\n\n@Component({\n  selector: 'app-single-application',\n  templateUrl: './single-application.component.html',\n  styleUrls: ['./single-application.component.scss']\n})\nexport class SingleApplicationComponent implements OnInit {\n\n  @ViewChild(MatPaginator, { static: false }) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: false }) sort: MatSort;\n  @ViewChild(MatTable, { static: false }) table: MatTable<Object>;\n\n  dataSource: MatTableDataSource<any>\n  displayedColumns: string[] = ['referenceCode', 'typeOfApplication', 'brand', 'medium', 'applicantCompanyName', 'paymentStatus'];\n  paymentList = [];\n\n  currentUser: any;\n  constructor(\n    private apiService: ApiService,\n    private dialog: MatDialog,\n    private dataStorage: DataStorageService,\n  ) { }\n\n  ngOnInit(): void {\n    this.currentUser = this.dataStorage.getUserAccount();\n    this.getS1PaymentList();\n  }\n\n  getS1PaymentList() {\n    this.apiService.findByParam(ENDPOINTS.applicationFormPresentor + this.currentUser.id,\n      'payment-status/FOR_PAYMENT/schedule-of-fees').subscribe((res: any) => {\n        this.paymentList = res.responseData.data;\n        this.dataSource = new MatTableDataSource<any>(this.paymentList);\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n      });\n  }\n\n  openModal(res) {\n\n    const dialogRef = this.dialog.open(ModalSingleApplicationComponent, {\n      width: '80%',\n      height: 'fit-content',\n      maxHeight: '85vh',\n      data: res\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      this.ngOnInit();\n    });\n\n  }\n}\n","<form>\n    <div class=\"container-fluid\">\n      <div class=\"row\">\n        <div class=\"col-md-12 title\">\n          <mat-label>\n            <mat-icon>view_list</mat-icon> Individual Applications - For Payment\n          </mat-label>\n        </div>\n      </div>\n      <hr>\n      <br>\n      <div class=\"col-md-12\" fxLayout fxLayoutAlign=\"center center\">\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n          <input matInput type=\"text\" placeholder=\"Company Name\">\n        </mat-form-field>\n      </div>\n\n      <div class=\"mat-elevation-z8 fields\">\n        <table mat-table [dataSource]=\"dataSource\" matSort>\n          <ng-container matColumnDef=\"referenceCode\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> REFERENCE CODE </th>\n            <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"openModal(element)\"> {{element?.referenceCode | uppercase}}</td>\n          </ng-container>\n          <ng-container matColumnDef=\"typeOfApplication\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> TYPE OF APPLICATION</th>\n            <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"openModal(element)\">{{element?.applicationType.description | uppercase}} - {{element?.formType?.replaceAll('_',' ') | uppercase}}</td>\n          </ng-container>\n          <ng-container matColumnDef=\"brand\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> BRAND</th>\n            <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"openModal(element)\">{{element?.brand.description | uppercase}}</td>\n          </ng-container>\n          <ng-container matColumnDef=\"medium\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> MEDIUM</th>\n            <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"openModal(element)\">{{element?.typeOfMedium | uppercase}}</td>\n          </ng-container>\n          <ng-container matColumnDef=\"applicantCompanyName\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> APPLICANT COMPANY NAME</th>\n            <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"openModal(element)\">{{element?.company.companyName | uppercase}}</td>\n          </ng-container>\n          <ng-container matColumnDef=\"paymentStatus\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> PAYMENT STATUS</th>\n            <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"openModal(element)\">{{element?.paymentStatus?.replaceAll('_',' ') | uppercase}}</td>\n          </ng-container>\n\n\n\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n          <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n        </table>\n        <div class=\"no-record\" [hidden]=\"dataSource && dataSource?.data?.length > 0\">\n          No record found.\n        </div>\n        <mat-paginator [pageSizeOptions]=\"[10, 20, 50]\" showFirstLastButtons></mat-paginator>\n      </div>\n      <br>\n    </div>\n  </form>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTable, MatTableDataSource } from '@angular/material/table';\nimport { ApiService, DataStorageService } from '@services';\nimport { ENDPOINTS } from '@shared';\nimport { ModalMultipleApplicationsComponent } from './modal-multiple-applications/modal-multiple-applications.component';\n\n\nexport interface companyDetails {\n  referenceCode: string;\n  amount: number;\n}\n\nconst ELEMENT_DATA: companyDetails[] = [\n  { referenceCode: 'Company one ', amount: 3000, },\n  { referenceCode: 'Company two ', amount: 4000, },\n  { referenceCode: 'Company three ', amount: 5000, },\n  { referenceCode: 'Company two ', amount: 6000, },\n  { referenceCode: 'Company three ', amount: 7000, },\n];\n\n@Component({\n  selector: 'app-multiple-applications',\n  templateUrl: './multiple-applications.component.html',\n  styleUrls: ['./multiple-applications.component.scss']\n})\nexport class MultipleApplicationsComponent implements OnInit {\n\n  @ViewChild(MatPaginator, { static: false }) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: false }) sort: MatSort;\n  @ViewChild(MatTable, { static: false }) table: MatTable<Object>;\n\n  dataSource: MatTableDataSource<any>\n  displayedColumns: string[] = ['adTitle', 'typeOfApplication', 'brand', 'product', 'applicantCompanyName', 'paymentStatus'];\n  paymentList = [];\n  currentUser: any;\n\n\n  constructor(\n    private apiService: ApiService,\n    private dialog: MatDialog,\n    private dataStorage: DataStorageService,\n  ) { }\n\n  ngOnInit(): void {\n    this.currentUser = this.dataStorage.getUserAccount();\n    this.getS1MultiplePaymentList();\n  }\n\n  getS1MultiplePaymentList() {\n    this.apiService.findAll(ENDPOINTS.applicationFormPresentor + `${this.currentUser.id}/multiple-application?paymentStatus=FOR_PAYMENT`)\n    .subscribe((res: any) => {\n      this.paymentList = res.responseData.data;\n\n      this.dataSource = new MatTableDataSource<any>(this.paymentList);\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n    }, (err: any) => {\n    });\n  }\n\n  openModal(res) {\n    const dialogRef = this.dialog.open(ModalMultipleApplicationsComponent, {\n      width: '60%',\n      height: '85%',\n      data: res\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        console.log(result);\n        this.getS1MultiplePaymentList();\n      }\n    });\n\n  }\n\n\n}\n","<form>\n    <div class=\"container-fluid\">\n      <div class=\"row\">\n        <div class=\"col-md-12 title\">\n          <mat-label>\n            <mat-icon>view_list</mat-icon> Multiple Applications - For Payment\n          </mat-label>\n        </div>\n      </div>\n      <hr>\n      <br>\n      <div class=\"col-md-12\" fxLayout fxLayoutAlign=\"center center\">\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n          <input matInput type=\"text\" placeholder=\"Company Name\">\n        </mat-form-field>\n      </div>\n\n      <div class=\"mat-elevation-z8 fields\">\n        <table mat-table [dataSource]=\"dataSource\" matSort>\n          <ng-container matColumnDef=\"adTitle\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> REFERENCE CODE </th>\n            <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"openModal(element)\"> {{element?.adTitle | uppercase}}</td>\n          </ng-container>\n          <ng-container matColumnDef=\"typeOfApplication\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> TYPE OF APPLICATION</th>\n            <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"openModal(element)\">{{element?.applicationType?.description | uppercase}}</td>\n          </ng-container>\n          <ng-container matColumnDef=\"brand\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> BRAND</th>\n            <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"openModal(element)\">{{element?.brand?.description | uppercase}}</td>\n          </ng-container>\n          <ng-container matColumnDef=\"product\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> PRODUCT</th>\n            <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"openModal(element)\">{{element?.product?.description | uppercase}}</td>\n          </ng-container>\n          <ng-container matColumnDef=\"applicantCompanyName\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> APPLICANT COMPANY NAME</th>\n            <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"openModal(element)\">{{element?.company.companyName | uppercase}}</td>\n          </ng-container>\n          <!-- <ng-container matColumnDef=\"countVerifiedApplicationForm\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> NUMBER OF VERIFIED APPLICATIONS</th>\n            <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"openModal(element)\">{{element?.countVerifiedApplicationForm}}</td>\n          </ng-container> -->\n          <ng-container matColumnDef=\"paymentStatus\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> PAYMENT STATUS</th>\n            <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"openModal(element)\">{{element?.paymentStatus?.replaceAll('_',' ') | uppercase}}</td>\n          </ng-container>\n\n\n\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n          <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n        </table>\n        <div class=\"no-record\" [hidden]=\"dataSource && dataSource?.data?.length > 0\">\n          No record found.\n        </div>\n        <mat-paginator [pageSizeOptions]=\"[10, 20, 50]\" showFirstLastButtons></mat-paginator>\n      </div>\n      <br>\n    </div>\n  </form>\n","import { USER_ROLES } from './../../../../../../shared/utils/constants';\nimport { Component, Inject, Input, OnDestroy, OnInit, Optional } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { Router } from '@angular/router';\nimport { AttachmentDocument, Payment, S1Application } from '@models';\nimport { ApiService, DataStorageService, SweetAlertService } from '@services';\nimport { ATTACHMENT_TYPE, ENDPOINTS, PAYMENT_STATUS } from '@shared';\nimport { ApplicationSingleMedia } from 'app/core/models/application-single-media.model';\nimport { FileStorageService } from 'app/core/services/file.storage.service';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-modal-single-application',\n  templateUrl: './modal-single-application.component.html',\n  styleUrls: ['./modal-single-application.component.scss']\n})\nexport class ModalSingleApplicationComponent implements OnInit, OnDestroy {\n\n  @Input() s1Application = new S1Application();\n  attachmentDocument = new AttachmentDocument();\n  applicationSingleMedia = new ApplicationSingleMedia();\n  payment = new Payment();\n\n  paymentTypeList = [];\n  attachmentDocuments = [];\n\n\n  paymentType: any;\n  safeURLProofOfPayment: any;\n  selectedFiles: any;\n  currentUser: any;\n  attachment: any;\n  previewDocument = false;\n  isSubmitted = false;\n  paymentDetails: any;\n  typeOfMediumDisplay = '';\n\n  paymentForm: FormGroup;\n\n  constructor(\n    private sanitizer: DomSanitizer,\n    private apiService: ApiService,\n    public dataStorage: DataStorageService,\n    private fileStorageService: FileStorageService,\n    private sweetAlertService: SweetAlertService,\n    private router: Router,\n    private spinner: NgxSpinnerService,\n    @Optional() public dialogRef: MatDialogRef<ModalSingleApplicationComponent>,\n    @Optional() @Inject(MAT_DIALOG_DATA) public data: any\n  ) {\n    if (data) {\n      if (data) {\n        this.s1Application = data;\n        console.log('S1', this.s1Application);\n\n        switch (this.s1Application?.refTypeOfMedium || this.payment?.applicationFormS2?.applicationForm?.refTypeOfMedium) {\n          case 'SINGLE MEDIA':\n            this.getApplicationSingleMedia();\n            break;\n          case 'MULTIMEDIA-MOVING':\n            this.getMultimediaMoving();\n            break;\n          case 'MULTIMEDIA-STATIC':\n            this.getMultimediaStatic();\n            break;\n          default:\n            break;\n        }\n        this.getPaymentDetails();\n      }\n    }\n  }\n\n  ngOnInit(): void {\n    this.currentUser = this.dataStorage.getUserAccount();\n    this.getPaymentList();\n  }\n\n  getPaymentDetails() {\n    this.apiService.findAll(ENDPOINTS.paymentDetails + this.s1Application.id).subscribe((res: any) => {\n      this.paymentDetails = res;\n      this.paymentDetails.vat = this.paymentDetails.vat.toFixed(2);\n    });\n  }\n\n  getPaymentList() {\n    this.apiService.findAll(ENDPOINTS.paymentType).subscribe((res: any) => {\n      this.paymentTypeList = res.responseData.data;\n      if (this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT) {\n        const creditCardIndex = this.paymentTypeList\n          .findIndex((element) => element.paymentDescription === 'Credit Card');\n        this.paymentTypeList.splice(creditCardIndex, 1);\n      }\n    });\n  }\n\n  selectFile(event) {\n    const attachmentSize = event.target.files[0].size;\n\n    if (event.target.files[0].type === 'application/pdf') {\n      if (attachmentSize > 15000000) { // 1MB = 1M\n        this.sweetAlertService.customErrorMessage(`Attachments' total file size should not exceed 15MB.`);\n        event.target.value = '';\n        return;\n      } else {\n        const pdfURL = URL.createObjectURL(event.target.files[0]);\n        this.safeURLProofOfPayment = this.sanitizer.bypassSecurityTrustResourceUrl(pdfURL);\n        this.previewDocument = true;\n        // env.showSpinner = true;\n        const reader = new FileReader();\n        const [file] = event.target.files;\n\n        reader.readAsDataURL(file);\n        reader.onload = () => {\n        };\n      }\n\n      this.selectedFiles = event.target.files;\n    } else {\n      this.sweetAlertService.customErrorMessage('Attachment should be in PDF format only.');\n      event.target.value = '';\n      return;\n    }\n  }\n\n  uploadDocument(s1Application) {\n    Swal.fire({\n      text: 'Are you sure you want to submit this PROOF OF PAYMENT?',\n      icon: 'question',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Confirm'\n    }).then((result) => {\n      if (result.value) {\n        this.spinner.show();\n        let params = '';\n        params = '?&attachmentType=' + ATTACHMENT_TYPE.PAYMENT + '&submissionType=ORIGINAL';\n\n        this.fileStorageService.pushFileToStorage(ENDPOINTS.attachmentDocument, this.selectedFiles.item(0), params)\n          .subscribe(res => {\n            const obj = res.responseData.data;\n            console.log(obj);\n            this.s1Application.paymentAttachmentReference = obj.paymentAttachmentReference;\n            this.payment.paymentAttachmentReference = obj.paymentAttachmentReference;\n            this.payment.amountDue = s1Application.amount;\n            this.payment.applicationForm = s1Application;\n            this.payment.appFormReference = s1Application.appFormReference;\n            this.payment.filename = obj.filename;\n            this.saveProofOfPayment();\n          }, (err: any) => {\n            this.spinner.hide();\n            this.sweetAlertService.error(err);\n          }, () => {\n            // actions after subscription\n            this.spinner.hide();\n          });\n      }\n    });\n  }\n\n  saveProofOfPayment() {\n    this.spinner.show();\n    console.log('Saving payment...');\n    this.payment.id = 0;\n    this.payment.officialReceiptNo = '';\n    this.payment.paymentMethod = null;\n    console.log('PAYMENT : ', this.payment);\n    this.apiService.save(`${ENDPOINTS.applicationFormPresentor}payment-type-id/${this.paymentType.id}/payment/submit`, this.payment)\n      .subscribe((res: any) => {\n        console.log('SAVED STATUS: ', res);\n        if (res.responseData.data) {\n          this.safeURLProofOfPayment = this.sanitizer.bypassSecurityTrustResourceUrl(res.responseData.data.fileURL);\n          this.isSubmitted = true;\n          this.sweetAlertService.customSuccessMessage('Proof of payment successfully submitted.');\n          this.closeModal();\n        } else {\n          this.sweetAlertService.customErrorMessage('Error saving payment.');\n        }\n\n        this.spinner.hide();\n        // this.previewDocument = true;\n        this.selectedFiles = undefined;\n        this.router.navigateByUrl('asc/page/application/single-application');\n      }, (err) => {\n        console.log(err);\n        this.sweetAlertService.error(err);\n        this.spinner.hide();\n      }, () => {\n        this.spinner.hide();\n      });\n  }\n\n  closeModal(): void {\n    this.dialogRef.close();\n    this.router.navigate(['asc/page/application/single-application']);\n  }\n  ngOnDestroy(): void {\n    // this.s1Application = null;\n  }\n\n  getApplicationSingleMedia() {\n    this.apiService.findByParam(ENDPOINTS.applicationSingleMedia,\n      `app-form-reference/${this.s1Application?.appFormReference}`).subscribe(\n        (res: any) => {\n          if (res.responseData.data.length > 0) {\n            this.applicationSingleMedia = res.responseData.data[0];\n            this.typeOfMediumDisplay = `${this.applicationSingleMedia?.mediumExecution?.typeOfMedium?.description} (${this.applicationSingleMedia?.sizeLength})`;\n          } else {\n            this.typeOfMediumDisplay = '';\n          }\n        }, (err: any) => {\n          this.typeOfMediumDisplay = '';\n        });\n  }\n\n  getMultimediaStatic() {\n    this.apiService.findByParam(ENDPOINTS.applicationMultimedia,\n      `app-form-reference/${this.s1Application?.appFormReference}`).subscribe(\n        (res: any) => {\n          if (res.responseData.data.length > 0) {\n            const multimediaList = new Set(res.responseData.data.map(mappedList => `${mappedList?.typeOfMedium?.description} (${mappedList?.multimediaSizeLength})`));\n\n            this.typeOfMediumDisplay = '';\n            let mediaCtrl = 1;\n            for (const media of multimediaList) {\n              if (mediaCtrl !== multimediaList.size) {\n                this.typeOfMediumDisplay += `${media}, `;\n                mediaCtrl++;\n              } else {\n                this.typeOfMediumDisplay += media;\n              }\n            }\n          } else {\n            this.typeOfMediumDisplay = '';\n          }\n        }, (err: any) => {\n          this.typeOfMediumDisplay = '';\n        });\n  }\n\n  getMultimediaMoving() {\n    this.apiService.findByParam(ENDPOINTS.applicationMultimedia,\n      `app-form-reference/${this.s1Application?.appFormReference}`).subscribe(\n        (res: any) => {\n          if (res.responseData.data.length > 0) {\n            const multimediaList = new Set(res.responseData.data.map(mappedList => `${mappedList?.typeOfMedium?.description} (${mappedList?.multimediaSizeLength})`));\n\n            this.typeOfMediumDisplay = '';\n            let mediaCtrl = 1;\n            for (const media of multimediaList) {\n              if (mediaCtrl !== multimediaList.size) {\n                this.typeOfMediumDisplay += `${media}, `;\n                mediaCtrl++;\n              } else {\n                this.typeOfMediumDisplay += media;\n              }\n            }\n          } else {\n            this.typeOfMediumDisplay = '';\n          }\n        }, (err: any) => {\n          this.typeOfMediumDisplay = '';\n        });\n  }\n}\n","<div class=\"container-fluid\">\n    <div class=\"row\">\n        <div class=\"col-md-12 title\">\n            <mat-label>\n                <mat-icon>view_list</mat-icon>  <b>Schedule of Fees - Individual Application</b>\n            </mat-label>\n        </div>\n    </div>\n    <hr>\n    <div class=\"row col-md-12 mt-4\">\n        <div class=\"col-md-6\">\n            <div>\n                <mat-label>Proof of Payment: &nbsp;&nbsp;&nbsp;<span>PDF file only!</span></mat-label><br>\n                <input class=\"file-upload\" type=\"file\" [(ngModel)]=\"attachment\" [ngModelOptions]=\"{standalone: true}\"\n                    accept=\".pdf\" (change)=\"selectFile($event)\">\n            </div>\n            <div *ngIf=\"previewDocument===true\">\n                <div class=\"file-upload\">\n                    <object [data]=\"safeURLProofOfPayment\" type=\"application/pdf\" width=\"100%\" height=\"400\">\n                        <iframe [src]=\"safeURLProofOfPayment\" width=\"100%\" height=\"500\">\n                            <p>This browser does not support PDF!</p>\n                        </iframe>\n                    </object>\n                </div>\n            </div>\n        </div>\n        <div class=\"col-md-3\">\n            <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n                <mat-label>Reference Code</mat-label>\n                <input matInput [value]= \"s1Application?.referenceCode\" readonly>\n            </mat-form-field>\n\n            <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n                <mat-label>Advertiser</mat-label>\n                <input matInput name=\"companyName\" [value]=\"s1Application?.company?.companyName\" readonly>\n            </mat-form-field>\n\n            <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n                <mat-label>Ad Title - Medium (Length)</mat-label>\n                <textarea matInput name=\"refTypeOfMedium\"\n                  [value]=\"s1Application?.adTitle + ' - ' + typeOfMediumDisplay\"\n                  readonly></textarea>\n            </mat-form-field>\n        </div>\n\n        <div class=\"col-md-3\">\n            <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n                <mat-label>Vatable Sales</mat-label>\n                <input matInput class=\"numbers-input\" name=\"amount\" [value]=\"paymentDetails?.basicRate | number : '1.2-2'\" readonly>\n            </mat-form-field>\n\n            <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n                <mat-label>VAT</mat-label>\n                <input matInput class=\"numbers-input\" name=\"amount\" [value]=\"paymentDetails?.vat | number : '1.2-2'\" readonly>\n            </mat-form-field>\n\n            <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n                <mat-label>Total Sales (VAT Inclusive)</mat-label>\n                <input matInput class=\"numbers-input total\" name=\"amount\" [value]=\"paymentDetails?.amountDue | number : '1.2-2'\" readonly>\n            </mat-form-field>\n\n            <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n                <mat-label>Payment Mode <span class=\"required-field\">\n                  <mat-icon>notification_important</mat-icon>\n                </span></mat-label>\n                <mat-select [(ngModel)]=\"paymentType\" [ngModelOptions]=\"{standalone: true}\">\n                    <div *ngFor=\"let i of paymentTypeList\">\n                        <mat-option *ngIf=\"i?.status === 'ACTIVE'\" [value]=\"i\" name=\"paymentType\">\n                            {{i?.paymentDescription | uppercase}}\n                        </mat-option>\n                    </div>\n                </mat-select>\n            </mat-form-field>\n            <hr style=\"margin-top: 2px;\">\n            <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n                <mat-label>Remarks</mat-label>\n                <textarea matInput name=\"remarks\" [(ngModel)]=\"payment.remarks\"></textarea>\n            </mat-form-field>\n        </div>\n    </div>\n\n    <div class=\"row col-md-12\">\n        <div class=\"col-md-10\"><span *ngIf=\"paymentType && paymentDetails?.amountDue === 0\">\n          <i>Please contact ASC admin to check the Maintenance of Fees.</i></span></div>\n        <div class=\"col-md-2 text-end\">\n            <button mat-raised-button class=\"button-red m-0\" [disabled]=\"!paymentType || !previewDocument || paymentDetails?.amountDue === 0\" (click)=\"uploadDocument(s1Application)\">\n                <i class=\"material-icons color__white\" >task_alt</i> SUBMIT\n            </button>\n        </div>\n    </div>\n</div>\n","import { USER_ROLES } from './../../../../../../shared/utils/constants';\nimport { Component, Inject, Input, OnDestroy, OnInit, Optional } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { Router } from '@angular/router';\nimport { AttachmentDocument, Payment, S2Application } from '@models';\nimport { ApiService, DataStorageService, SweetAlertService } from '@services';\nimport { ATTACHMENT_TYPE, ENDPOINTS, PAYMENT_STATUS } from '@shared';\nimport { ApplicationSingleMedia } from 'app/core/models/application-single-media.model';\nimport { FileStorageService } from 'app/core/services/file.storage.service';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-modal-special-applications',\n  templateUrl: './modal-special-applications.component.html',\n  styleUrls: ['./modal-special-applications.component.scss']\n})\nexport class ModalSpecialApplicationsComponent implements OnInit, OnDestroy {\n\n  @Input() s2Application = new S2Application();\n  attachmentDocument = new AttachmentDocument();\n  payment = new Payment();\n  applicationSingleMedia = new ApplicationSingleMedia();\n\n\n  paymentTypeList = [];\n  attachmentDocuments = [];\n\n\n  paymentType: any;\n  safeURLProofOfPayment: any;\n  selectedFiles: any;\n  currentUser: any;\n  attachment: any;\n  previewDocument = false;\n  isSubmitted = false;\n  paymentDetails: any;\n  typeOfMediumDisplay = '';\n\n  paymentForm: FormGroup;\n\n  constructor(\n    private sanitizer: DomSanitizer,\n    private apiService: ApiService,\n    public dataStorage: DataStorageService,\n    private fileStorageService: FileStorageService,\n    private sweetAlertService: SweetAlertService,\n    private router: Router,\n    private spinner: NgxSpinnerService,\n    @Optional() public dialogRef: MatDialogRef<ModalSpecialApplicationsComponent>,\n    @Optional() @Inject(MAT_DIALOG_DATA) public data: any\n  ) {\n    if (data) {\n      if (data) {\n        this.s2Application = data;\n        console.log('S2', this.s2Application);\n        switch (this.s2Application?.applicationForm?.refTypeOfMedium || this.payment?.applicationFormS2?.applicationForm?.refTypeOfMedium) {\n          case 'SINGLE MEDIA':\n            this.getApplicationSingleMedia();\n            break;\n          case 'MULTIMEDIA-MOVING':\n            this.getMultimediaMoving();\n            break;\n          case 'MULTIMEDIA-STATIC':\n            this.getMultimediaStatic();\n            break;\n          default:\n            break;\n        }\n        this.getPaymentDetails();\n      }\n    }\n  }\n\n  ngOnInit(): void {\n    this.currentUser = this.dataStorage.getUserAccount();\n    this.getPaymentList();\n  }\n\n  getPaymentDetails() {\n    this.apiService.findAll(ENDPOINTS.specialPaymentDetails + this.s2Application.id).subscribe((res: any) => {\n      this.paymentDetails = res;\n      this.paymentDetails.vat = this.paymentDetails.vat.toFixed(2);\n    });\n  }\n\n  getPaymentList() {\n    this.apiService.findAll(ENDPOINTS.paymentType).subscribe((res: any) => {\n      this.paymentTypeList = res.responseData.data;\n      if (this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT) {\n        const creditCardIndex = this.paymentTypeList\n          .findIndex((element) => element.paymentDescription === 'Credit Card');\n        this.paymentTypeList.splice(creditCardIndex, 1);\n      }\n    });\n  }\n\n  selectFile(event) {\n    const attachmentSize = event.target.files[0].size;\n\n    if (event.target.files[0].type === 'application/pdf') {\n      if (attachmentSize > 15000000) { // 1MB = 1M\n        this.sweetAlertService.customErrorMessage(`Attachments' total file size should not exceed 15MB.`);\n        event.target.value = '';\n        return;\n      } else {\n        const pdfURL = URL.createObjectURL(event.target.files[0]);\n        this.safeURLProofOfPayment = this.sanitizer.bypassSecurityTrustResourceUrl(pdfURL);\n        this.previewDocument = true;\n        // env.showSpinner = true;\n        const reader = new FileReader();\n        const [file] = event.target.files;\n\n        reader.readAsDataURL(file);\n        reader.onload = () => {\n        };\n      }\n\n      this.selectedFiles = event.target.files;\n    } else {\n      this.sweetAlertService.customErrorMessage('Attachment should be in PDF format only.');\n      event.target.value = '';\n      return;\n    }\n  }\n\n  uploadDocument(s2Application) {\n    Swal.fire({\n      text: 'Are you sure you want to submit this PROOF OF PAYMENT?',\n      icon: 'question',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Confirm'\n    }).then((result) => {\n      if (result.value) {\n        this.spinner.show();\n        let params = '';\n        params = '?&attachmentType=' + ATTACHMENT_TYPE.PAYMENT + '&submissionType=' + s2Application.submissionType;\n        this.fileStorageService.pushFileToStorage(ENDPOINTS.attachmentDocument, this.selectedFiles.item(0), params)\n          .subscribe(res => {\n            const obj = res.responseData.data;\n            console.log(obj);\n            this.s2Application.paymentAttachmentReference = obj.paymentAttachmentReference;\n            this.payment.paymentAttachmentReference = obj.paymentAttachmentReference;\n            this.payment.amountDue = s2Application.amount;\n            this.payment.applicationFormS2 = s2Application;\n            this.payment.appFormReference = s2Application.appFormReference;\n            this.payment.filename = obj.filename;\n            this.saveProofOfPayment();\n            // this.previewDocument = true;\n            this.selectedFiles = undefined;\n            this.spinner.hide();\n            this.router.navigateByUrl('asc/page/application/special-applications');\n          }, (err: any) => {\n            this.spinner.hide();\n            this.sweetAlertService.error(err);\n          }, () => {\n            // actions after subscription\n            this.spinner.hide();\n          });\n      }\n    });\n  }\n\n  saveProofOfPayment() {\n    console.log('Saving payment...');\n    this.dataStorage.setDisplayProgressbar(true);\n    this.payment.paymentStatus = PAYMENT_STATUS.UNPAID;\n    this.payment.id = 0;\n    this.payment.officialReceiptNo = '';\n    this.payment.paymentMethod = null;\n    console.log('PAYMENT : ', this.payment);\n\n    this.apiService.save(`${ENDPOINTS.s2ApplicationFormPresentor}payment-type-id/${this.paymentType.id}\n    /payment-special-clearing/submit`, this.payment).subscribe((res: any) => {\n      console.log('SAVED STATUS: ', res.responseData.data);\n\n      this.safeURLProofOfPayment = this.sanitizer.bypassSecurityTrustResourceUrl(res.responseData.data.fileURL);\n      this.isSubmitted = true;\n      this.sweetAlertService.customSuccessMessage('Proof of payment successfully submitted.');\n      this.closeModal();\n    }, (err) => {\n      console.log(err);\n      this.sweetAlertService.error(err);\n      this.dataStorage.setDisplayProgressbar(false);\n    }, () => {\n      this.dataStorage.setDisplayProgressbar(false);\n    });\n  }\n\n  closeModal(): void {\n    this.dialogRef.close();\n    this.router.navigate(['asc/page/application/special-applications']);\n  }\n  ngOnDestroy(): void {\n    // this.s2Application = null;\n  }\n\n  getApplicationSingleMedia() {\n    this.apiService.findByParam(ENDPOINTS.applicationSingleMedia,\n      `app-form-reference/${this.s2Application?.applicationForm?.appFormReference}`).subscribe(\n        (res: any) => {\n          if (res.responseData.data.length > 0) {\n            this.applicationSingleMedia = res.responseData.data[0];\n            this.typeOfMediumDisplay = `${this.applicationSingleMedia?.mediumExecution?.typeOfMedium?.description} (${this.applicationSingleMedia?.sizeLength})`;\n          } else {\n            this.typeOfMediumDisplay = '';\n          }\n        }, (err: any) => {\n          this.typeOfMediumDisplay = '';\n        });\n  }\n\n  getMultimediaStatic() {\n    this.apiService.findByParam(ENDPOINTS.applicationMultimedia,\n      `app-form-reference/${this.s2Application?.applicationForm?.appFormReference}`).subscribe(\n        (res: any) => {\n          if (res.responseData.data.length > 0) {\n            const multimediaList = new Set(res.responseData.data.map(mappedList => `${mappedList?.typeOfMedium?.description} (${mappedList?.multimediaSizeLength})`));\n\n            this.typeOfMediumDisplay = '';\n            let mediaCtrl = 1;\n            for (const media of multimediaList) {\n              if (mediaCtrl !== multimediaList.size) {\n                this.typeOfMediumDisplay += `${media}, `;\n                mediaCtrl++;\n              } else {\n                this.typeOfMediumDisplay += media;\n              }\n            }\n          } else {\n            this.typeOfMediumDisplay = '';\n          }\n        }, (err: any) => {\n          this.typeOfMediumDisplay = '';\n        });\n  }\n\n  getMultimediaMoving() {\n    this.apiService.findByParam(ENDPOINTS.applicationMultimedia,\n      `app-form-reference/${this.s2Application?.applicationForm?.appFormReference}`).subscribe(\n        (res: any) => {\n          if (res.responseData.data.length > 0) {\n            const multimediaList = new Set(res.responseData.data.map(mappedList => `${mappedList?.typeOfMedium?.description} (${mappedList?.multimediaSizeLength})`));\n\n            this.typeOfMediumDisplay = '';\n            let mediaCtrl = 1;\n            for (const media of multimediaList) {\n              if (mediaCtrl !== multimediaList.size) {\n                this.typeOfMediumDisplay += `${media}, `;\n                mediaCtrl++;\n              } else {\n                this.typeOfMediumDisplay += media;\n              }\n            }\n          } else {\n            this.typeOfMediumDisplay = '';\n          }\n        }, (err: any) => {\n          this.typeOfMediumDisplay = '';\n        });\n  }\n\n}\n","<div class=\"container-fluid\">\n    <div class=\"row\">\n        <div class=\"col-md-12 title\">\n            <mat-label>\n                <mat-icon>view_list</mat-icon> <b>Schedule of Fees - Special Application</b>\n            </mat-label>\n        </div>\n    </div>\n    <hr>\n    <br>\n    <div class=\"row col-md-12\">\n        <div class=\"row col-md-6\">\n            <div>\n                <mat-label>Proof of Payment: &nbsp;&nbsp;&nbsp;<span>PDF file only!</span></mat-label><br>\n                <input class=\"file-upload\" type=\"file\" [(ngModel)]=\"attachment\" [ngModelOptions]=\"{standalone: true}\"\n                    accept=\".pdf\" (change)=\"selectFile($event)\">\n            </div>\n            <div *ngIf=\"previewDocument===true\">\n                <div class=\"file-upload\">\n                    <object [data]=\"safeURLProofOfPayment\" type=\"application/pdf\" width=\"100%\" height=\"500\">\n                        <iframe [src]=\"safeURLProofOfPayment\" width=\"100%\" height=\"500\">\n                            <p>This browser does not support PDF!</p>\n                        </iframe>\n                    </object>\n                </div>\n            </div>\n        </div>\n        <div class=\"row col-md-6\">\n\n            <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n                <mat-label>Reference Code</mat-label>\n                <input matInput [value]=\"s2Application?.applicationForm?.referenceCode\" readonly>\n            </mat-form-field>\n\n            <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n                <mat-label>Advertiser</mat-label>\n                <input matInput name=\"companyName\" [value]=\"s2Application?.applicationForm?.company?.companyName\"\n                    readonly>\n            </mat-form-field>\n\n            <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n                <mat-label>Ad Title - Medium (Length)</mat-label>\n                <input matInput name=\"refTypeOfMedium\"\n                    [value]=\"s2Application?.applicationForm?.adTitle + ' - ' + typeOfMediumDisplay\" readonly>\n            </mat-form-field>\n\n            <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n                <mat-label>Vatable Sales</mat-label>\n                <input matInput class=\"numbers-input\" name=\"amount\"\n                    [value]=\"paymentDetails?.basicRate | number : '1.2-2'\" readonly>\n            </mat-form-field>\n\n\n            <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n                <mat-label>VAT</mat-label>\n                <input matInput class=\"numbers-input\" name=\"amount\" [value]=\"paymentDetails?.vat | number : '1.2-2'\"\n                    readonly>\n            </mat-form-field>\n\n            <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n                <mat-label>Total Sales (VAT Inclusive)</mat-label>\n                <input matInput class=\"numbers-input total\" name=\"amount\"\n                    [value]=\"paymentDetails?.amountDue | number : '1.2-2'\" readonly>\n            </mat-form-field>\n\n            <hr>\n\n            <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n                <mat-label>Payment Mode <span class=\"required-field\">\n                        <mat-icon>notification_important</mat-icon>\n                    </span></mat-label>\n                <mat-select [(ngModel)]=\"paymentType\" [ngModelOptions]=\"{standalone: true}\">\n                    <mat-option *ngFor=\"let i of paymentTypeList\" [value]=\"i\" name=\"paymentType\">\n                        {{i?.paymentDescription | uppercase}}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n\n            <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n                <mat-label>Remarks</mat-label>\n                <textarea matInput name=\"remarks\" [(ngModel)]=\"payment.remarks\"></textarea>\n            </mat-form-field>\n\n        </div>\n    </div>\n\n    <div class=\"row\">\n        <div class=\"col-md-10\"><span *ngIf=\"paymentType && paymentDetails?.amountDue === 0\">\n                <i>Please contact ASC admin to check the Maintenance of Fees.</i></span></div>\n        <div class=\"col-md-2\">\n            <button mat-raised-button class=\"button-red\"\n                [disabled]=\"!paymentType || !previewDocument || paymentDetails?.amountDue === 0\"\n                (click)=\"uploadDocument(s2Application)\">\n                <i class=\"material-icons color__white\">task_alt</i> SUBMIT\n            </button>\n        </div>\n    </div>\n</div>\n","import { MultiMediaStatic } from './multimedia-static.model';\nexport class MultiMediaStaticConst{\n    data: Array<MultiMediaStatic> = new Array<MultiMediaStatic>();\n    constructor(){\n        this.data = [\n            {\n                id: 0,\n                multimediaStaticMedium: 'collaterals',\n                hasSelected: false,\n                sizeLength: 0\n              },\n              {\n                id: 1,\n                multimediaStaticMedium: 'digital static',\n                hasSelected: false,\n                sizeLength: 0\n              },\n              {\n                id: 2,\n                multimediaStaticMedium: 'ooh',\n                hasSelected: false,\n                sizeLength: 0\n              },\n              {\n                id: 3,\n                multimediaStaticMedium: 'print',\n                hasSelected: false,\n                sizeLength: 0\n              }\n        ]\n    }\n}","export * from './accounting.module';\nexport * from './add-payment/add-payment.component';\nexport * from './add-payment/add-payment.module';\nexport * from './list-payment/list-payment.component';\nexport * from './list-payment/list-payment.module';","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { URL_PATHS } from '@shared';\n\nconst routes: Routes = [\n  {\n    path: URL_PATHS.S1_APPLICATION,\n    loadChildren: () => import('./s1-application/s1-application.module')\n      .then(m => m.S1ApplicationModule)\n  },\n  {\n    path: URL_PATHS.S2_APPLICATION,\n    loadChildren: () => import('./s2-application/s2-application.module')\n      .then(m => m.S2ApplicationModule)\n  },\n  {\n    path: URL_PATHS.SCHEDULE_OF_FEES_SINGLE_APPLICATION,\n    loadChildren: () => import('./schedule-of-fees/single-application/single-application.module')\n      .then(m => m.SingleApplicationModule)\n  },\n  {\n    path: URL_PATHS.SCHEDULE_OF_FEES_SINGLE_APPLICATION + '/:id',\n    loadChildren: () => import('./schedule-of-fees/single-application/single-application.module')\n      .then(m => m.SingleApplicationModule)\n  },\n  {\n    path: URL_PATHS.SCHEDULE_OF_FEES_MULTIPLE_APPLICATIONS,\n    loadChildren: () => import('./schedule-of-fees/multiple-applications/multiple-applications.module')\n      .then(m => m.MultipleApplicationsModule)\n  },\n  {\n    path: URL_PATHS.SCHEDULE_OF_FEES_MULTIPLE_APPLICATIONS + '/:id',\n    loadChildren: () => import('./schedule-of-fees/multiple-applications/multiple-applications.module')\n      .then(m => m.MultipleApplicationsModule)\n  },\n  {\n    path: URL_PATHS.SCHEDULE_OF_FEES_SPECIAL_APPLICATIONS,\n    loadChildren: () => import('./schedule-of-fees/special-applications/special-applications.module')\n      .then(m => m.SpecialApplicationsModule)\n  },\n  {\n    path: URL_PATHS.ACCOUNTS_PAYABLE,\n    loadChildren: () => import('./schedule-of-fees/accounts-payable/accounts-payable.module')\n      .then(m => m.AccountsPayableModule)\n  },\n  {\n    path: URL_PATHS.SCHEDULE_OF_FEES_SPECIAL_APPLICATIONS + '/:id',\n    loadChildren: () => import('./schedule-of-fees/special-applications/special-applications.module')\n      .then(m => m.SpecialApplicationsModule)\n  },\n  {\n    path: URL_PATHS.APPLICATION_REASSIGNMENT,\n    loadChildren: () => import('./reassignment/reassignment.module')\n      .then(m => m.ReassignmentModule)\n  }\n];\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ApplicationsRoutingModule { }\n","import { Observable, Subject } from \"rxjs\";\nimport { AttachmentDocumentComponent } from \"./../../attachment-document/attachment-document.component\";\nimport { DatePipe } from \"@angular/common\";\nimport {\n  Component,\n  ElementRef,\n  EventEmitter,\n  OnInit,\n  Output,\n  ViewChild,\n} from \"@angular/core\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { MatAccordion } from \"@angular/material/expansion\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { DomSanitizer } from \"@angular/platform-browser\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport {\n  AttachmentDocument,\n  Company,\n  S1Application,\n  S2Application,\n} from \"@models\";\nimport { ApiService, DataStorageService, SweetAlertService } from \"@services\";\nimport {\n  APPLICATION_STAGE,\n  APPLICATION_STATUS_S2,\n  ENDPOINTS,\n  USER_ROLES,\n  ATTACHMENT_TYPE,\n  TYPE_OF_MEDIUM,\n  APPLICATION_STATUS,\n  APP_DECISION_STATUS,\n  APPLICATION_STATUS_FOR_COMPLIANCE,\n  SUBMISSION_TYPE,\n  ROLES,\n} from \"@shared\";\nimport { ApplicationSingleMedia } from \"app/core/models/application-single-media.model\";\nimport { RationaleS2 } from \"app/core/models/rationale-s2.model\";\nimport { Report } from \"app/core/models/report.model\";\nimport { CommonServices } from \"app/core/services/common-services.service\";\nimport { FileStorageService } from \"app/core/services/file.storage.service\";\nimport { IncompleteDisapprovedRationaleComponent } from \"app/modules/fragments/incomplete-disapproved-rationale/incomplete-disapproved-rationale.component\";\nimport { RejectDisapprovedReasonComponent } from \"app/modules/fragments/reject-disapproved-reason/reject-disapproved-reason.component\";\nimport { NgxSpinnerService } from \"ngx-spinner\";\nimport Swal from \"sweetalert2\";\nimport { ClientInformationComponent } from \"../../client-information/client-information.component\";\nimport { CommentComponent } from \"../../comment/comment.component\";\nimport { MaterialInformationComponent } from \"../../material-information/material-information.component\";\n\n@Component({\n  selector: \"app-add-s2-application\",\n  templateUrl: \"./add-s2-application.component.html\",\n  styleUrls: [\"./add-s2-application.component.scss\"],\n})\nexport class AddS2ApplicationComponent implements OnInit {\n  @ViewChild(MatAccordion) accordion: MatAccordion;\n  @ViewChild(ClientInformationComponent, { static: false })\n  clientInformation: ClientInformationComponent;\n  @ViewChild(MaterialInformationComponent, { static: false })\n  materialInformation: MaterialInformationComponent;\n  @ViewChild(CommentComponent, { static: false }) comment: CommentComponent;\n  // @ViewChild(LayoutComponent, { static: false }) layoutComponent: LayoutComponent;\n\n  @ViewChild(\"finalMaterialFileInput\") myFinalMaterialFileInput: ElementRef;\n  @ViewChild(\"finalMaterialFile\") myFinalMaterialFile: ElementRef;\n\n  @ViewChild(\"finalMaterialFileInputC\") myFinalMaterialFileInputC: ElementRef;\n  @ViewChild(\"finalMaterialFileC\") myFinalMaterialFileC: ElementRef;\n\n  @ViewChild(AttachmentDocumentComponent, { static: false })\n  attachmentComponent: AttachmentDocumentComponent;\n\n  @Output() spinnerMessageEmitter = new EventEmitter<string>();\n\n  title = \"ASC Online System\";\n  s2Application = new S2Application();\n  s1Application = new S1Application();\n  company = new Company();\n  rationaleS2 = new RationaleS2();\n  attachmentDocument = new AttachmentDocument();\n  applicationSingleMedia = new ApplicationSingleMedia();\n  report = new Report();\n  attachmentDocuments: any = {};\n  originalAttachmentDocuments = [];\n  revisionAttachmentDocuments = [];\n  complianceAttachmentDocuments = [];\n  s2OriginalAttachmentDocuments = [];\n  s2OriginalAttachmentObservable: Subject<any> = new Subject();\n  s2ComplianceAttachmentDocuments = [];\n  supportiveDocumentList = [];\n  affiliationList = [];\n  companyList = [];\n  multimediaStaticList = [];\n  multimediaMovingList = [];\n  selectedMultimediaList = [];\n  rationaleOthersList = [];\n  rationaleLists = [];\n  isNewCompany = false;\n  showCompanyAddress = false;\n  id: number;\n  spinnerMessage = \"\";\n  todayDate: Date = new Date();\n  s2ApplicationForm: FormGroup;\n  selectedFile: File;\n  tempCompliance = new AttachmentDocument();\n\n  selected: any; // in html but not existing in component -- encountered during 'ng serve --aot'\n  currentUser: any;\n  currentUserRole: any;\n  decisionStatus = \"\";\n  audioVideo = \"Video\";\n  isAudioVideo = false;\n  isShowUploadButton = false;\n  rationaleDisplay = false;\n  fileSize: number;\n  safeURLFile: any;\n  uploadedFinalMaterialFile: any;\n\n  isSuperAdmin = false;\n  isAdmin = false;\n  isAccounting = false;\n  isApplicant = false;\n  isEvaluator = false;\n  isAdSpecialist = false;\n  isScreener = false;\n  isReviewer = false;\n\n  previewAttachmentsList = [];\n  previewAttachmentsDisplayedColumns: string[] = [\n    \"clearanceToaFilename\",\n    \"viewClearanceToaIcon\",\n  ];\n  previewAttachmentsListDataSource: MatTableDataSource<object>;\n  isAscUser: boolean = false;\n  ascUserRoleList = [\n    ...ROLES.filter((role: any) => role.ascUser === true).map(\n      (role: any) => role.role\n    ),\n  ];\n  applicationStage: string = \"S2-APPLICATION\";\n  constructor(\n    private apiService: ApiService,\n    private formBuilder: FormBuilder,\n    private sweetAlertService: SweetAlertService,\n    private dataStorage: DataStorageService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private sanitizer: DomSanitizer,\n    public datepipe: DatePipe,\n    private spinner: NgxSpinnerService,\n    private fileStorageService: FileStorageService,\n    private dialog: MatDialog\n  ) {}\n\n  ngOnInit(): void {\n    this.setFormValidator();\n    this.currentUser = this.dataStorage.getUserAccount();\n    this.isAscUser = this.ascUserRoleList.includes(\n      this.dataStorage.getUserRole()\n    );\n    this.currentUserRole = this.currentUser.userRole.name;\n    this.id = Number(this.route.snapshot.paramMap.get(\"id\"));\n    this.initUserRole();\n    this.getAffiliationList();\n    this.getCompanyList();\n    if (this.id) {\n      this.viewS2Application();\n    }\n  }\n\n  initUserRole() {\n    if (this.currentUser.userRole.name === USER_ROLES.ROLE_SUPER_ADMIN) {\n      this.isSuperAdmin = true;\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_ADMIN) {\n      this.isAdmin = true;\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_ACCOUNTING) {\n      this.isAccounting = true;\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT) {\n      this.isApplicant = true;\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_SCREENER) {\n      this.isScreener = true;\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_REVIEWER) {\n      this.isReviewer = true;\n    } else if (\n      this.currentUser.userRole.name === USER_ROLES.ROLE_AD_SPECIALIST\n    ) {\n      this.isAdSpecialist = true;\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_ENCODER) {\n      this.isEvaluator = true;\n    }\n  }\n\n  viewS2Application(): void {\n    this.spinner.show();\n    this.spinnerMessage = \"Loading S2 Application\";\n    this.apiService.findById(ENDPOINTS.applicationFormS2, this.id).subscribe(\n      (res: any) => {\n        console.log(\"s2 = \");\n        this.s2Application = res.responseData.data;\n        console.log(\"S2 Form: \", this.s2Application);\n\n        this.s1Application = this.s2Application.applicationForm;\n        this.clientInformation.s1Application = this.s2Application.applicationForm;\n        this.materialInformation.s1Application = this.s2Application.applicationForm;\n\n        if (this.s2Application.finalMaterialAttachmentReference) {\n          this.isShowUploadButton = true;\n          this.getS2AttachmentDocument();\n        }\n\n        this.setApplicationStage(this.s2Application);\n        this.hideSpinner();\n        if (\n          this.s2Application.applicationForm.refTypeOfMedium ===\n          TYPE_OF_MEDIUM.SINGLE_MEDIA\n        ) {\n          this.getApplicationSingleMedia();\n        } else if (\n          this.s2Application.applicationForm.refTypeOfMedium ===\n          TYPE_OF_MEDIUM.MULTIMEDIA_MOVING\n        ) {\n          this.getMultimediaMoving();\n        } else if (\n          this.s2Application.applicationForm.refTypeOfMedium ===\n          TYPE_OF_MEDIUM.MULTIMEDIA_STATIC\n        ) {\n          this.getMultimediaStatic();\n        }\n        this.getAttachmentDocuments();\n        // this.getSupportiveDocuments();\n\n        if (\n          (this.s2Application.decisionStatus ===\n            APP_DECISION_STATUS.INCOMPLETE ||\n            this.s2Application.decisionStatus ===\n              APP_DECISION_STATUS.DISAPPROVED) &&\n          this.currentUserRole === USER_ROLES.ROLE_AD_SPECIALIST\n        ) {\n          if (\n            this.s2Application.internalStatus ===\n              \"RE_SUBMITTED_S2_APPLICATION_VERIFIED_BY_ENCODER\" &&\n            this.s2Application.decisionStatus === APP_DECISION_STATUS.INCOMPLETE\n          ) {\n            this.getRationaleList();\n          }\n        }\n\n        if (\n          this.isAdmin ||\n          this.isSuperAdmin ||\n          this.isApplicant ||\n          this.isAdSpecialist\n        ) {\n          console.log(\n            ENDPOINTS.clearanceAndToa + this.s2Application?.appFormReference\n          );\n          this.apiService\n            .findByParam(\n              ENDPOINTS.clearanceAndToa,\n              this.s2Application?.appFormReference\n            )\n            .subscribe((previewAttachmentsData) => {\n              console.log(previewAttachmentsData);\n\n              this.previewAttachmentsList =\n                previewAttachmentsData.responseData.data;\n              this.previewAttachmentsListDataSource = new MatTableDataSource<object>(\n                this.previewAttachmentsList\n              );\n            });\n        }\n      },\n      (err: any) => {\n        this.hideSpinner();\n      }\n    );\n  }\n\n  setApplicationStage(data): void {\n    this.clientInformation.applicationStage = APPLICATION_STAGE.S2_APPLICATION;\n    this.materialInformation.applicationStage =\n      APPLICATION_STAGE.S2_APPLICATION;\n    if (this.currentUserRole !== USER_ROLES.ROLE_APPLICANT) {\n      this.comment.applicationStage = APPLICATION_STAGE.S2_APPLICATION;\n      this.comment.getCommentsS2(data);\n    }\n  }\n\n  saveStatus(): void {\n    if (\n      this.s2Application.appFormReference &&\n      this.s2Application.appFormReference !== \"\" &&\n      this.s2Application.appFormReference !== undefined\n    ) {\n      let endpoint;\n      let swalMessage;\n\n      if (this.currentUserRole === USER_ROLES.ROLE_APPLICANT) {\n        endpoint = ENDPOINTS.s2ApplicationFormPresentorSubmit;\n        swalMessage = \"S2 application has been submitted.\";\n      } else if (this.currentUserRole === USER_ROLES.ROLE_ENCODER) {\n        endpoint = ENDPOINTS.s2ApplicationFormEncoderVerify;\n        swalMessage = \"S2 application has been verified.\";\n        this.s2Application.assignedUser = this.s2Application.applicationForm.assignedAdSpecialist;\n      } else if (this.currentUserRole === USER_ROLES.ROLE_AD_SPECIALIST) {\n        if (this.decisionStatus === APPLICATION_STATUS_S2.INCOMPLETE) {\n          endpoint = ENDPOINTS.s2ApplicationFormAdSpe + \"incomplete\";\n          swalMessage = \"S2 Application Incomplete\";\n        } else if (this.decisionStatus === APPLICATION_STATUS_S2.DISAPPROVED) {\n          endpoint = ENDPOINTS.s2ApplicationFormAdSpe + \"disapproved\";\n          swalMessage = \"S2 Application Disapproved\";\n        } else if (this.decisionStatus === APPLICATION_STATUS_S2.APPROVED) {\n          endpoint = ENDPOINTS.s2ApplicationFormAdSpe + \"approved\";\n          swalMessage = \"S2 Application Approved!\";\n        }\n      }\n\n      // this.s2Application.modifiedBy = this.currentUser;\n      // this.s2Application.modifiedDate = this.todayDate;\n\n      Swal.fire({\n        text: \"Are you sure you want to submit the application?\",\n        icon: \"question\",\n        showCancelButton: true,\n        confirmButtonColor: \"#3085d6\",\n        cancelButtonColor: \"#d33\",\n        confirmButtonText: \"Confirm\",\n      }).then((result) => {\n        if (result.value) {\n          this.spinner.show();\n          if (this.decisionStatus === APPLICATION_STATUS_S2.INCOMPLETE) {\n            this.s2Application.submissionType = SUBMISSION_TYPE.ORIGINAL;\n            this.s2Application.decisionStatus =\n              APPLICATION_STATUS_S2.INCOMPLETE;\n          } else if (this.decisionStatus === APPLICATION_STATUS_S2.APPROVED) {\n            this.s2Application.decisionStatus = APPLICATION_STATUS_S2.APPROVED;\n          } else if (\n            this.decisionStatus === APPLICATION_STATUS_S2.DISAPPROVED\n          ) {\n            this.s2Application.decisionStatus =\n              APPLICATION_STATUS_S2.DISAPPROVED;\n          }\n          this.apiService.save(endpoint, this.s2Application).subscribe(\n            (res: any) => {\n              this.spinner.hide();\n              this.sweetAlertService.customSuccessMessage(swalMessage);\n              this.navigateToS2List();\n            },\n            (err: any) => {\n              this.spinner.hide();\n            }\n          );\n        }\n      });\n    } else {\n      this.sweetAlertService.customErrorMessage(\n        \"Missing application form reference.\"\n      );\n    }\n  } // in html but not existing in component -- encountered during 'ng serve --aot'\n\n  saveStatusForCompliance(): void {\n    let endpoint;\n    let swalMessage;\n\n    if (this.currentUserRole === USER_ROLES.ROLE_APPLICANT) {\n      endpoint = ENDPOINTS.s2ApplicationForm + \"compliance/presentor/submit\";\n      swalMessage = \"S2 Application has been re-submitted successfully\";\n    } else if (this.currentUserRole === USER_ROLES.ROLE_ENCODER) {\n      endpoint = ENDPOINTS.s2ApplicationForm + \"compliance/encoder/verify\";\n      swalMessage =\n        \"S2 Application has been re-submitted successfully verified by ENCODER\";\n    } else if (this.currentUserRole === USER_ROLES.ROLE_AD_SPECIALIST) {\n      if (this.decisionStatus === APPLICATION_STATUS_S2.INCOMPLETE) {\n        endpoint = ENDPOINTS.s2ApplicationFormAdSpe + \"incomplete\";\n        swalMessage = \"S2 Application Incomplete\";\n      } else if (this.decisionStatus === APPLICATION_STATUS_S2.DISAPPROVED) {\n        endpoint = ENDPOINTS.s2ApplicationFormAdSpe + \"disapproved\";\n        swalMessage = \"S2 Application Disapproved\";\n      } else if (this.decisionStatus === APPLICATION_STATUS_S2.APPROVED) {\n        endpoint =\n          ENDPOINTS.s2ApplicationForm + \"compliance/ad-specialist/verify\";\n        swalMessage = \"S2 Application has been verified by AD-SPECIALIST\";\n        // this.s2Application.decisionStatus = APPLICATION_STATUS_S2.APPROVED;\n      }\n    }\n\n    Swal.fire({\n      text: \"Are you sure you want to re-submit this application?\",\n      icon: \"question\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Confirm\",\n    }).then((result) => {\n      if (result.value) {\n        this.spinner.show();\n        if (this.decisionStatus === APPLICATION_STATUS_S2.INCOMPLETE) {\n          this.s2Application.submissionType = SUBMISSION_TYPE.ORIGINAL;\n          this.s2Application.decisionStatus = APPLICATION_STATUS_S2.INCOMPLETE;\n        } else if (this.decisionStatus === APPLICATION_STATUS_S2.APPROVED) {\n          this.s2Application.decisionStatus = APPLICATION_STATUS_S2.APPROVED;\n        } else if (this.decisionStatus === APPLICATION_STATUS_S2.DISAPPROVED) {\n          this.s2Application.decisionStatus = APPLICATION_STATUS_S2.DISAPPROVED;\n        }\n        this.s2Application.submissionType = SUBMISSION_TYPE.ORIGINAL;\n        this.apiService.save(endpoint, this.s2Application).subscribe(\n          (res: any) => {\n            this.spinner.hide();\n            this.sweetAlertService.customSuccessMessage(swalMessage);\n            this.navigateToS2List();\n          },\n          (err: any) => {\n            this.spinner.hide();\n          }\n        );\n      }\n    });\n  }\n\n  saveStatusForClearance(): void {\n    let endpoint;\n    let swalMessage;\n\n    if (this.currentUserRole === USER_ROLES.ROLE_APPLICANT) {\n      endpoint = ENDPOINTS.s2ApplicationForm + \"clearance/presentor/submit\";\n      swalMessage = \"S2 Application clearance has been submitted successfully\";\n    } else if (this.currentUserRole === USER_ROLES.ROLE_ENCODER) {\n      endpoint = ENDPOINTS.s2ApplicationForm + \"clearance/encoder/verify\";\n      swalMessage =\n        \"S2 Application clearance has been verified successfully by ENCODER\";\n    } else if (this.currentUserRole === USER_ROLES.ROLE_AD_SPECIALIST) {\n      if (this.decisionStatus === APPLICATION_STATUS_S2.DISAPPROVED) {\n        endpoint = ENDPOINTS.s2ApplicationFormAdSpe + \"disapproved\";\n        swalMessage = \"S2 Application clearance Disapproved\";\n      } else if (this.decisionStatus === APPLICATION_STATUS_S2.APPROVED) {\n        endpoint =\n          ENDPOINTS.s2ApplicationForm + \"clearance/ad-specialist/verify\";\n        swalMessage =\n          \"S2 Application clearance has been approved by AD-SPECIALIST\";\n        this.s2Application.internalStatus = APPLICATION_STATUS_S2.APPROVED;\n        this.s2Application.externalStatus = APPLICATION_STATUS_S2.APPROVED;\n      }\n    }\n\n    Swal.fire({\n      text: \"Are you sure you want to submit this application clearance?\",\n      icon: \"question\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Confirm\",\n    }).then((result) => {\n      if (result.value) {\n        if (this.decisionStatus === APPLICATION_STATUS_S2.DISAPPROVED) {\n          this.s2Application.decisionStatus = APPLICATION_STATUS_S2.DISAPPROVED;\n        }\n        this.spinner.show();\n        this.apiService.save(endpoint, this.s2Application).subscribe(\n          (res: any) => {\n            this.hideSpinner();\n            this.sweetAlertService.customSuccessMessage(swalMessage);\n            this.navigateToS2List();\n          },\n          (err: any) => {\n            this.hideSpinner();\n          }\n        );\n      }\n    });\n  }\n\n  applyApplicationForClearance(): void {\n    Swal.fire({\n      text: \"Are you sure you want to apply this application to Clearance?\",\n      icon: \"question\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Confirm\",\n    }).then((result) => {\n      if (result.value) {\n        this.spinner.show();\n        this.apiService\n          .save(\n            ENDPOINTS.s2ApplicationForm + \"clearance/presentor/submit\",\n            this.s2Application\n          )\n          .subscribe(\n            (res: any) => {\n              this.hideSpinner();\n              this.sweetAlertService.customSuccessMessage(\n                this.sweetAlertService.customSuccessMessage(\n                  \"Application with reference no is applied for Clearance successfully.\"\n                )\n              );\n              this.navigateToS2List();\n            },\n            (err: any) => {\n              this.hideSpinner();\n            }\n          );\n      }\n    });\n  }\n\n  rejectDisapprovedModal(ascUser = \"\", action = \"\", status = \"\"): void {\n    // Swal.fire({\n    //   text: 'Are you sure you want to REJECT this application?',\n    //   icon: 'question',\n    //   showCancelButton: true,\n    //   confirmButtonColor: '#3085d6',\n    //   cancelButtonColor: '#d33',\n    //   confirmButtonText: 'Confirm'\n    // }).then((result) => {\n    //   if (result.value) {\n    //     this.apiService.save(ENDPOINTS.s2ApplicationFormEncoderReject, this.s2Application).subscribe(\n    //       (res: any) => {\n    //         this.sweetAlertService.customSuccessMessage('Application has been rejected successfully');\n    //         this.router.navigateByUrl('asc/page/application/s2/lists');\n    //       }\n    //     );\n    //   }\n    // })\n    const dialogRef = this.dialog.open(RejectDisapprovedReasonComponent, {\n      width: \"40%\",\n      height: \"45%\",\n      data: {\n        s2Application: this.s2Application,\n        ascUser: ascUser,\n        action: action,\n        status: status,\n        applicationStage: \"s2\",\n      },\n    });\n  }\n\n  incompleteDisapprovedRationale(ascUser = \"\", action = \"\", status = \"\"): void {\n    const dialogRef = this.dialog.open(\n      IncompleteDisapprovedRationaleComponent,\n      {\n        width: \"40%\",\n        height: \"65%\",\n        data: {\n          s2Application: this.s2Application,\n          ascUser: ascUser,\n          action: action,\n          status: status,\n          applicationStage: \"s2\",\n        },\n      }\n    );\n    dialogRef.afterClosed().subscribe((result) => {\n      console.log(\"The dialog was closed\", result);\n      if (result) {\n        this.getRationaleList();\n      }\n    });\n  }\n\n  getApplicationSingleMedia() {\n    this.spinner.show();\n    this.apiService\n      .findByParam(\n        ENDPOINTS.applicationSingleMedia,\n        `app-form-reference/${this.s2Application.applicationForm.appFormReference}`\n      )\n      .subscribe(\n        (res: any) => {\n          if (res.responseData.data.length > 0) {\n            this.applicationSingleMedia = res.responseData.data[0];\n          } else {\n            this.applicationSingleMedia = new ApplicationSingleMedia();\n          }\n          this.hideSpinner();\n        },\n        (err: any) => {\n          this.applicationSingleMedia = new ApplicationSingleMedia();\n          this.hideSpinner();\n        }\n      );\n  }\n\n  getAttachmentDocuments() {\n    console.log(\"apForm\", this.s2Application.applicationForm);\n    this.apiService\n      .findAll(\n        ENDPOINTS.attachmentDocumentByAppFormReference +\n          this.s2Application.applicationForm.appFormReference\n      )\n      .subscribe((res: any) => {\n        this.attachmentDocuments = res.responseData.data;\n\n        this.originalAttachmentDocuments = this.attachmentDocuments.originalAttachmentDocuments;\n        this.revisionAttachmentDocuments = this.attachmentDocuments.revisionAttachmentDocuments;\n        this.complianceAttachmentDocuments = this.attachmentDocuments.complianceAttachmentDocuments;\n\n        if (\n          this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT &&\n          this.s1Application.externalStatus === APPLICATION_STATUS.SAVED\n        ) {\n          this.materialInformation.originalAttachmentDocuments = this.attachmentDocuments.originalAttachmentDocuments;\n          this.materialInformation.revisionAttachmentDocuments = this.attachmentDocuments.revisionAttachmentDocuments;\n          this.materialInformation.complianceAttachmentDocuments = this.attachmentDocuments.complianceAttachmentDocuments;\n        }\n        console.log(\"view S2 attachmentDocuments: \", this.attachmentDocuments);\n        this.s2OriginalAttachmentObservable.next({\n          type: \"document\",\n          value: this.originalAttachmentDocuments,\n        });\n        this.s2OriginalAttachmentObservable.next({\n          type: \"application\",\n          value: this.s2Application,\n        });\n      });\n  }\n\n  getSupportiveDocuments() {\n    this.spinner.show();\n    this.apiService\n      .findByParam(\n        ENDPOINTS.supportiveDocument,\n        `application-form-id/${this.s2Application.applicationForm.id}`\n      )\n      .subscribe(\n        (res: any) => {\n          console.log(\"getSupportiveDocuments() \", res);\n          if (res.responseData.data.length > 0) {\n            this.supportiveDocumentList = res.responseData.data;\n          }\n          this.hideSpinner();\n        },\n        (err: any) => {\n          this.hideSpinner();\n          this.supportiveDocumentList = [];\n        }\n      );\n  }\n\n  getMultimediaStatic() {\n    this.apiService\n      .findByParam(\n        ENDPOINTS.applicationMultimedia,\n        `app-form-reference/${this.s2Application.applicationForm.appFormReference}`\n      )\n      .subscribe(\n        (res: any) => {\n          if (res.responseData.data.length > 0) {\n            this.multimediaStaticList = res.responseData.data;\n\n            if (\n              this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT &&\n              this.s2Application.applicationForm.externalStatus ===\n                APPLICATION_STATUS.SAVED\n            ) {\n              this.materialInformation.selectedMultimediaList = this.multimediaStaticList;\n            }\n\n            this.selectedMultimediaList = this.multimediaStaticList;\n          } else {\n            this.multimediaStaticList = [];\n          }\n        },\n        (err: any) => {\n          // this.multimediaStaticList = [];\n        }\n      );\n  }\n\n  getMultimediaMoving() {\n    this.apiService\n      .findByParam(\n        ENDPOINTS.applicationMultimedia,\n        `app-form-reference/${this.s2Application.applicationForm.appFormReference}`\n      )\n      .subscribe(\n        (res: any) => {\n          if (res.responseData.data.length > 0) {\n            this.multimediaMovingList = res.responseData.data;\n\n            if (\n              this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT &&\n              this.s2Application.applicationForm.externalStatus ===\n                APPLICATION_STATUS.SAVED\n            ) {\n              this.materialInformation.selectedMultimediaList = this.multimediaMovingList;\n            }\n            this.selectedMultimediaList = this.multimediaMovingList;\n          } else {\n            this.multimediaMovingList = [];\n          }\n        },\n        (err: any) => {\n          this.multimediaMovingList = [];\n        }\n      );\n  }\n\n  setDecisionStatus(i) {\n    this.decisionStatus = i;\n    // if (e === APPLICATION_STATUS_S2.DISAPPROVED) {\n    //   this.incompleteDisapprovedRationale('ad-specialist', 'disapproved', 'S2 APPLICATION DISAPPROVED');\n    // }else if(e === APPLICATION_STATUS_S2.INCOMPLETE) {\n    //   this.incompleteDisapprovedRationale('ad-specialist', 'incomplete', 'INCOMPLETE');\n    // }\n\n    if (\n      (i === APP_DECISION_STATUS.INCOMPLETE ||\n        i === APP_DECISION_STATUS.DISAPPROVED) &&\n      this.currentUserRole === USER_ROLES.ROLE_AD_SPECIALIST\n    ) {\n      if (\n        this.s2Application.internalStatus ===\n          \"RE_SUBMITTED_S2_APPLICATION_VERIFIED_BY_ENCODER\" &&\n        this.s2Application.decisionStatus === APP_DECISION_STATUS.INCOMPLETE\n      ) {\n        this.s2Application.validityDate = null;\n        // this.s2Application.decisionStatus = i;\n        this.incompleteDisapprovedRationale();\n      }\n    }\n  }\n\n  getAffiliationList() {\n    this.spinner.show();\n    this.apiService.findAll(ENDPOINTS.activeMembersAffiliation).subscribe(\n      (res: any) => {\n        this.affiliationList = res.responseData.data;\n        this.hideSpinner();\n      },\n      (err: any) => {\n        this.hideSpinner();\n      }\n    );\n  }\n\n  getCompanyList() {\n    this.spinner.show();\n    this.apiService.findAll(ENDPOINTS.activeCompanies).subscribe(\n      (res: any) => {\n        this.companyList = res.responseData.data;\n        this.hideSpinner();\n      },\n      (err: any) => {\n        this.hideSpinner();\n      }\n    );\n  }\n\n  getCompanyAddress(companyName) {\n    this.spinner.show();\n    this.showCompanyAddress = true;\n    this.isNewCompany = false;\n    this.apiService\n      .findByParam(\n        ENDPOINTS.company,\n        `/custom/search?companyName=` + companyName\n      )\n      .subscribe(\n        (res: any) => {\n          this.company = res.responseData.data;\n          this.hideSpinner();\n        },\n        (err: any) => {\n          this.hideSpinner();\n        }\n      );\n  }\n\n  clear(): void {\n    this.s2Application = new S2Application();\n    this.s1Application = new S1Application();\n  }\n\n  setFormValidator(): void {\n    this.s2ApplicationForm = this.formBuilder.group({\n      affiliation: [\"\", Validators.required],\n      validityDate: [\"\", Validators.required],\n      company: [\"\"],\n      decisionStatus: [\"\", Validators.required],\n    });\n  }\n\n  resetFormValidator(): void {\n    this.s2Application = new S2Application();\n    this.s1Application = new S1Application();\n    this.s2ApplicationForm.markAsUntouched();\n    this.s2ApplicationForm.markAsPristine();\n  }\n\n  showAudioVideo() {\n    this.isAudioVideo = !this.isAudioVideo;\n    this.audioVideo = this.isAudioVideo ? \"Audio\" : \"Video\";\n  }\n\n  selectFile(event, typeOfDocument) {\n    this.attachmentComponent.selectFile(event, typeOfDocument);\n  }\n\n  onAddFile(eventParam) {\n    const byteToMegaByte = 1000000; // 1 million byte = 1 mega byte\n\n    let finalMaterialType = \"\"; // temporary variable; TODO: remove\n    finalMaterialType = \"video\";\n    const maxFileSize =\n      finalMaterialType === \"video\"\n        ? 50\n        : finalMaterialType === \"audio\"\n        ? 20\n        : finalMaterialType === \"layout\"\n        ? 10\n        : 0;\n\n    if (eventParam.target.files) {\n      this.isShowUploadButton = false;\n      this.fileSize = eventParam.target.files[0].size;\n\n      // TODO validation of file size\n      if (\n        (this.fileSize > 50 * byteToMegaByte &&\n          finalMaterialType.toLowerCase() === \"video\") ||\n        (this.fileSize > 20 * byteToMegaByte &&\n          finalMaterialType.toLowerCase() === \"audio\") ||\n        (this.fileSize > 10 * byteToMegaByte &&\n          finalMaterialType.toLowerCase() === \"layout\")\n      ) {\n        this.sweetAlertService.customErrorMessage(\n          `Attachments total file size should not exceed ${maxFileSize}MB.`\n        );\n        eventParam.target.value = \"\";\n        return;\n      } else {\n        this.isShowUploadButton = true;\n        const fileURL = URL.createObjectURL(eventParam.target.files[0]);\n        this.safeURLFile = this.sanitizer.bypassSecurityTrustResourceUrl(\n          fileURL\n        );\n\n        const reader = new FileReader();\n        const [file] = eventParam.target.files;\n\n        reader.readAsDataURL(file);\n        reader.onload = () => {};\n\n        this.selectedFile = eventParam.target.files[0];\n      }\n    }\n  }\n\n  uploadAudioOrVideo() {\n    Swal.fire({\n      text: `Are you sure you want to upload this Final Material?`,\n      icon: \"question\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Confirm\",\n    }).then((result) => {\n      if (result.value) {\n        this.spinner.show();\n        let params = \"\";\n        let appFormRef = \"\";\n\n        if (this.s2Application.appFormReference) {\n          appFormRef = `&appFormReference=${this.s2Application.appFormReference}`;\n        }\n\n        if (\n          this.s2Application.internalStatus ===\n            APPLICATION_STATUS_FOR_COMPLIANCE.INCOMPLETE ||\n          this.s2Application.internalStatus === \"S2_APPLICATION_REJECTED\"\n        ) {\n          this.s2Application.submissionType = SUBMISSION_TYPE.COMPLIANCE;\n        }\n\n        params =\n          \"?&attachmentType=\" +\n          ATTACHMENT_TYPE.FINAL_MATERIAL +\n          \"&submissionType=\" +\n          this.s2Application.submissionType +\n          appFormRef;\n        this.fileStorageService\n          .pushFileToStorage(\n            ENDPOINTS.attachmentDocument,\n            this.selectedFile,\n            params\n          )\n          .subscribe(\n            (res: any) => {\n              console.log(res);\n\n              if (\n                !this.s2Application.appFormReference ||\n                this.s2Application.appFormReference === \"\"\n              ) {\n                this.s2Application.appFormReference =\n                  res.responseData.data.appFormReference;\n              }\n\n              if (\n                this.s2Application.submissionType === SUBMISSION_TYPE.COMPLIANCE\n              ) {\n                this.s2Application.submissionType = SUBMISSION_TYPE.ORIGINAL;\n                this.tempCompliance = res.responseData.data;\n                this.s2Application.finalMaterialAttachmentReference = this.tempCompliance?.finalMaterialAttachmentReference;\n              } else {\n                this.uploadedFinalMaterialFile = res.responseData.data;\n                this.addToAttachmentDocuments(this.uploadedFinalMaterialFile);\n                this.s2Application.finalMaterialAttachmentReference = this.uploadedFinalMaterialFile?.finalMaterialAttachmentReference;\n\n                if (this.s2Application.finalMaterialAttachmentReference) {\n                  this.getS2AttachmentDocument();\n                }\n              }\n              this.spinner.hide();\n              this.sweetAlertService.customSuccessMessage(\n                \"Attachment successfully uploaded.\"\n              );\n              this.selectedFile = null;\n            },\n            (err: any) => {\n              this.spinner.hide();\n              this.sweetAlertService.error(err);\n            },\n            () => {\n              // actions after subscription\n              this.spinner.hide();\n            }\n          );\n      } else {\n        this.selectedFile = null;\n      }\n    });\n  }\n\n  deleteUploadedFile2(obj) {\n    Swal.fire({\n      text: \"Are you sure you want to delete this document permanently?\",\n      icon: \"question\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Confirm\",\n    }).then((result) => {\n      if (result.value) {\n        this.spinner.show();\n        this.tempCompliance = null;\n        this.isShowUploadButton = false;\n        this.safeURLFile = null;\n        this.apiService\n          .save(ENDPOINTS.attachmentDocument + `/id/${obj.id}`, null)\n          .subscribe(\n            (res) => {\n              this.spinner.hide();\n              if (\n                obj.submissionType === SUBMISSION_TYPE.COMPLIANCE ||\n                obj.decisionStatus === APP_DECISION_STATUS.INCOMPLETE\n              ) {\n                this.s2ComplianceAttachmentDocuments = this.s2ComplianceAttachmentDocuments.filter(\n                  (data) => data?.id !== obj.id\n                );\n                this.myFinalMaterialFileInputC.nativeElement.value = \"\";\n                this.myFinalMaterialFileC.nativeElement.value = \"\";\n                this.tempCompliance = null;\n              } else {\n                this.s2OriginalAttachmentDocuments = this.s2OriginalAttachmentDocuments.filter(\n                  (data) => data?.id !== obj.id\n                );\n                this.myFinalMaterialFileInput.nativeElement.value = \"\";\n                this.myFinalMaterialFile.nativeElement.value = \"\";\n                console.log(\n                  \"s2 orig => \",\n                  this.s2ComplianceAttachmentDocuments\n                );\n              }\n              console.log(\"Attachment successfully deleted.\");\n\n              this.s2Application.finalMaterialAttachmentReference = null;\n              this.isShowUploadButton = false;\n              this.selectedFile = null;\n            },\n            (err: any) => {\n              this.spinner.hide();\n              this.sweetAlertService.error(err);\n            }\n          );\n      }\n    });\n  }\n\n  deleteUploadedFile() {\n    if (\n      this.s2Application.internalStatus === APPLICATION_STATUS.INCOMPLETE ||\n      this.s2Application.internalStatus === \"S2_APPLICATION_REJECTED\"\n    ) {\n      this.tempCompliance = null;\n      this.myFinalMaterialFileInputC.nativeElement.value = \"\";\n      this.myFinalMaterialFileC.nativeElement.value = \"\";\n    } else {\n      this.s2OriginalAttachmentDocuments[0] = null;\n      this.myFinalMaterialFileInput.nativeElement.value = \"\";\n      this.myFinalMaterialFile.nativeElement.value = \"\";\n    }\n    this.s2Application.finalMaterialAttachmentReference = null;\n    this.isShowUploadButton = false;\n    this.selectedFile = null;\n  }\n\n  addToAttachmentDocuments(obj: any) {\n    if (obj) {\n      this.attachmentDocument.finalMaterialAttachmentReference =\n        obj.finalMaterialAttachmentReference;\n      this.attachmentDocument.id = obj.id;\n      this.attachmentDocument.originalFilename = obj.originalFilename;\n      this.attachmentDocument.filename = obj.filename;\n      this.attachmentDocument.fileExtension = obj.fileExtension;\n      this.attachmentDocument.fileURL = obj.fileURL;\n      this.attachmentDocument.attachmentType = obj.attachmentType;\n      this.attachmentDocument.documentFormat = obj.documentFormat;\n      this.attachmentDocument.createdBy = this.currentUser.username;\n      this.attachmentDocument.createdDate = this.todayDate;\n\n      // if (this.s2Application.submissionType === SUBMISSION_TYPE.COMPLIANCE) {\n      //   this.tempCompliance = res.responseData.data;\n      //   this.addToAttachmentDocuments(this.tempCompliance);\n      // } else {\n      // }\n    } else {\n      this.spinner.hide();\n      console.log(\"Null attachment.\");\n      this.myFinalMaterialFile.nativeElement.value = \"\";\n      this.sweetAlertService.customErrorMessage(\n        \"Attachment cannot be uploaded.\"\n      );\n    }\n  }\n\n  getS2AttachmentDocument() {\n    this.spinner.show();\n    // TODO: Fetch list of existing compliance attachments\n    console.log(\n      ENDPOINTS.attachmentDocumentByS2AppFormReference +\n        this.s2Application.appFormReference\n    );\n    this.apiService\n      .findAll(\n        ENDPOINTS.attachmentDocumentByS2AppFormReference +\n          this.s2Application.appFormReference\n      )\n      .subscribe(\n        (res: any) => {\n          if (res.responseData.data) {\n            console.log(\n              \"S2 attachments: \",\n              res.responseData.data.originalAttachmentDocuments\n            );\n\n            this.attachmentDocuments = res.responseData.data;\n            this.s2OriginalAttachmentDocuments =\n              res.responseData.data.originalAttachmentDocuments;\n            // this.s2OriginalAttachmentObservable.next(this.s2OriginalAttachmentDocuments);\n            this.s2ComplianceAttachmentDocuments =\n              res.responseData.data.complianceAttachmentDocuments;\n            this.s2ComplianceAttachmentDocuments = this.s2ComplianceAttachmentDocuments?.filter(\n              (data) => data?.status !== \"UNPROCESSED\"\n            );\n            console.log(\"s2 Original => \", this.attachmentDocuments);\n            if (this.attachmentDocument.filename) {\n              this.isAudioVideo = this.attachmentDocument.documentFormat.includes(\n                \"audio\"\n              )\n                ? false\n                : true;\n            }\n          }\n          this.hideSpinner();\n        },\n        (err: any) => {\n          this.hideSpinner();\n          console.error(err);\n        }\n      );\n  }\n\n  viewFinalMedia(obj) {\n    window.open(obj.fileURL);\n  }\n\n  hideSpinner() {\n    setTimeout(() => {\n      this.spinner.hide();\n    }, 1);\n  }\n\n  navigateToS2List() {\n    setTimeout(() => {\n      this.router.navigateByUrl(\"asc/page/application/s2/lists\");\n    }, 2000);\n  }\n\n  getRationaleList(): void {\n    // Rationale Object\n    this.apiService\n      .findByParam(\n        ENDPOINTS.applicationRationaleS2,\n        `application-form-id/${this.s2Application.id}`\n      )\n      .subscribe((res: any) => {\n        this.rationaleOthersList = res.responseData.data;\n        this.rationaleOthersList = this.rationaleOthersList.filter(\n          (data) => data.others !== \"\"\n        );\n        console.log(\"RATIONALE LIST\", this.rationaleOthersList);\n      });\n    this.apiService\n      .findByParam(\n        ENDPOINTS.rationaleListS2,\n        `application-s2/${this.s2Application.id}`\n      )\n      .subscribe((res: any) => {\n        this.rationaleLists = res;\n        console.log(\"APPLICATION RATIONALE\", this.rationaleLists);\n      });\n  }\n\n  viewReport(id, filename) {\n    this.report.filename = filename;\n    this.report.format = \"pdf\";\n    (this.report.module = \"Form\"),\n      (this.report.params = { applicationFormS2Id: id });\n    console.log(this.report);\n    this.spinner.show();\n    this.apiService\n      .printReport(ENDPOINTS.generateReports, this.report)\n      .subscribe(\n        (data: any) => {\n          const newBlob = new Blob([data], { type: \"application/pdf\" });\n          const downloadURL = URL.createObjectURL(newBlob);\n          this.spinner.hide();\n          window.open(downloadURL);\n        },\n        (err: any) => {\n          this.spinner.hide();\n        }\n      );\n  }\n\n  submitAppeal() {\n    let endpoint;\n    if (this.isAdmin) {\n      endpoint = ENDPOINTS.admin + `/s2/verify/appeal`;\n    } else if (this.isAdSpecialist) {\n      endpoint = ENDPOINTS.s2ApplicationFormAdSpe + `verify/appeal`;\n    }\n\n    this.spinner.show();\n    this.apiService.save(endpoint, this.s2Application).subscribe(\n      (res: any) => {\n        this.spinner.hide();\n        this.sweetAlertService.success(res);\n        console.log(\"submitAppeal : \", res.responseData.data);\n        this.navigateToS2List();\n      },\n      (err: any) => {\n        this.spinner.hide();\n      }\n    );\n  }\n\n  sendDecisionOrStampMaterialManual(): void {\n    Swal.fire({\n      text: \"Are you sure you want to send this application form?\",\n      icon: \"question\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Confirm\",\n    }).then((result) => {\n      if (result.value) {\n        this.apiService\n          .save(\n            ENDPOINTS.s2ManualRelease + `/${this.s2Application.id}`,\n            this.s2Application\n          )\n          .subscribe((res: any) => {\n            this.sweetAlertService.customSuccessMessage(res.message);\n          });\n      }\n    });\n  }\n}\n","<form>\n  <div class=\"container-fluid\">\n    <!-- <div class=\"spinner\">\n      <ngx-spinner bdColor=\"rgba(0, 0, 0, 0.8)\" size=\"large\" color=\"#fff\" type=\"line-spin-fade\" [fullScreen]=\"false\">\n        <p> {{spinnerMessage}} </p>\n      </ngx-spinner>\n    </div> -->\n    <!-- <div class=\"row\">\n      <div class=\"col-md-12 title\">\n        <mat-label>\n          <mat-icon>list_alt</mat-icon> S2 APPLICATION\n        </mat-label>\n      </div>\n    </div> -->\n    <table>\n      <tr>\n        <td class=\"details-title\">\n          Reference Code:\n        </td>\n        <td class=\"details\">\n          <span>{{ s2Application?.externalStatus=='S2_APPLICATION_REJECTED' ? s2Application?.referenceCodeRejected :\n            s2Application?.applicationForm?.referenceCode | uppercase}}</span>\n        </td>\n        <td>\n          <div class=\"action-buttons\">\n            <button mat-button class=\"button-red\" (click)=\"accordion.openAll()\">\n              <mat-icon>open_in_full</mat-icon>\n            </button>\n            &nbsp;\n            <button mat-button class=\"button-red\" (click)=\"accordion.closeAll()\">\n              <mat-icon>close_fullscreen</mat-icon>\n            </button>\n          </div>\n          <button class=\"button-right button-red\" mat-raised-button [routerLink]=\"['/asc/page/application/s2/lists']\">\n            <mat-icon>list</mat-icon> VIEW APPLICATIONS\n          </button>\n        </td>\n      </tr>\n      <tr>\n        <td class=\"details-title\">\n          Status:\n        </td>\n        <td class=\"details\">\n          <span>{{s2Application?.externalStatus?.replaceAll('_',' ') | uppercase}}</span>\n        </td>\n        <!-- <td class=\"action-buttons\" *ngIf=\"s2Application?.internalStatus=='APPROVED' || s2Application?.internalStatus=='RE_SUBMITTED_S2_APPLICATION_VERIFIED_BY_AD_SPE' || s2Application?.internalStatus=='FOR_CLEARANCE_S2_APPLICATION' ||\n        s2Application?.internalStatus=='FOR_CLEARANCE_S2_APPLICATION_VERIFIED_BY_ENCODER'\"><span\n            class=\"badge bg-warning text-dark\">\n            <i class=\"material-icons\">domain_verification</i> APPLICATION FOR TOA/CLEARANCE</span></td> -->\n        <td class=\"action-buttons\" *ngIf=\"s2Application?.amount && s2Application?.submissionType === 'ORIGINAL'\">\n          <span class=\"badge bg-warning text-dark\">\n            <i class=\"material-icons\">paid</i> {{s2Application?.paymentStatus?.replaceAll('_',' ')}} : ₱ {{ s2Application?.amount }} </span>\n        </td>\n        <td class=\"action-buttons\" *ngIf=\"s2Application?.specialClearing\">\n          <span class=\"badge bg-warning text-dark\">\n            <i class=\"material-icons\">domain_verification</i> SPECIAL CLEARING</span>\n        </td>\n        <td class=\"action-buttons\" *ngIf=\"s2Application?.hasToa\">\n          <span class=\"badge bg-warning text-dark\">\n            <i class=\"material-icons\">domain_verification</i> Apply for TOA</span>\n        </td>\n        <td class=\"action-buttons\" *ngIf=\"s2Application?.decisionStatus==='APPROVED'\">\n          <span class=\"badge bg-warning text-dark\">\n            <i class=\"material-icons\">check</i> Valid Until: {{ s2Application?.validityDate | date:'MM/dd/yyyy'}}</span>\n        </td>\n      </tr>\n    </table>\n    <hr>\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <button mat-raised-button class=\"button-right button-red\"\n          *ngIf=\"(isAdmin || isSuperAdmin || isAdSpecialist) &&\n          s2Application?.internalStatus === 'APPROVED'\"\n          (click)=\"viewReport(s2Application.id, 'S2_Clearance')\"><i class=\"material-icons color__white\">open_in_new</i> CLEARANCE</button>\n\n        <button mat-raised-button class=\"button-right button-red\"\n          *ngIf=\"(isAdmin || isSuperAdmin || isAdSpecialist) &&\n          s2Application?.internalStatus === 'RE_SUBMITTED_S2_APPLICATION_VERIFIED_BY_ENCODER'\"\n          (click)=\"viewReport(s2Application.id, 'S2_Clearance')\"><i class=\"material-icons color__white\">open_in_new</i> PENDING FORM</button>\n        \n        <button mat-raised-button class=\"button-right button-red\" *ngIf=\"(currentUser?.userRole.name === 'ROLE_SUPER_ADMIN' || currentUser?.userRole.name === 'ROLE_ADMIN')\n        && (s2Application?.releaseStatus === 'FOR_RELEASE' || s2Application?.releaseStatus === 'RELEASED')\"\n          (click)=\"sendDecisionOrStampMaterialManual()\"><i class=\"material-icons color__white\">send</i>\n          SEND CLEARANCE OR TOA</button>\n      </div>\n    </div>\n    <form>\n      <mat-accordion class=\"headers-align\" multi>\n        <mat-expansion-panel>\n          <mat-expansion-panel-header>\n            <mat-panel-title>\n              <mat-icon>label_important</mat-icon> &nbsp;Client Information\n            </mat-panel-title>\n            <mat-panel-description>\n              Affiliation and Company details\n              <mat-icon>perm_contact_calendar</mat-icon>\n            </mat-panel-description>\n          </mat-expansion-panel-header>\n          <br>\n\n          <app-client-information [s2Application]=\"s2Application\">\n\n          </app-client-information>\n\n        </mat-expansion-panel>\n\n\n        <mat-expansion-panel>\n          <mat-expansion-panel-header>\n            <mat-panel-title>\n              <mat-icon>label_important</mat-icon> &nbsp;Material Information\n            </mat-panel-title>\n            <mat-panel-description>\n              Ads Details\n              <mat-icon>ads_click</mat-icon>\n            </mat-panel-description>\n          </mat-expansion-panel-header>\n          <br>\n          <app-material-information [s1Application]=\"s1Application\" [s2Application]=\"s2Application\"\n            [originalAttachmentDocuments]=\"originalAttachmentDocuments\" [revisionAttachmentDocuments]=\"revisionAttachmentDocuments\" [complianceAttachmentDocuments]=\"complianceAttachmentDocuments\"\n            [selectedMultimediaList]=\"selectedMultimediaList\" [applicationSingleMedia]=\"applicationSingleMedia\">\n          </app-material-information>\n\n        </mat-expansion-panel>\n\n        <!-- PREVIEW -->\n        <mat-expansion-panel [expanded]=\"true\">\n          <mat-expansion-panel-header>\n            <mat-panel-title>\n              <mat-icon>label_important</mat-icon> &nbsp;Final Material\n            </mat-panel-title>\n            <mat-panel-description>\n              Audio, Video, or Layout\n              <mat-icon>upload</mat-icon>\n            </mat-panel-description>\n          </mat-expansion-panel-header>\n          <br>\n\n          <div class=\"row\">\n            <div class=\"col-md-12\" appearance=\"outline\">\n              <div class=\"row fields\">\n                <h4>\n                  <i class=\"material-icons\">upload</i> &nbsp;Final Material\n                </h4>\n                <br>\n\n                <!-- FOR COMPLIANCE -->\n                <div *ngIf=\"s2Application?.internalStatus === 'INCOMPLETE' || s2Application?.internalStatus === 'S2_APPLICATION_REJECTED'\">\n                  <div class=\"col-md-12\" appearance=\"outline\">\n                    <b>FOR COMPLIANCE</b><br>\n                    <mat-label *ngIf=\"tempCompliance?.originalFilename\">Filename: </mat-label>\n\n                    <input #finalMaterialFileInputC matInput [value]=\"tempCompliance?.originalFilename\"\n                      *ngIf=\"tempCompliance?.originalFilename\" disabled>\n\n                    <input #finalMaterialFileC class=\"file-upload\"\n                      *ngIf=\"isApplicant && (s2Application?.decisionStatus === 'INCOMPLETE' || s2Application?.internalStatus === 'S2_APPLICATION_REJECTED')\"\n                      type=\"file\" accept=\"video/mp4, audio/mp3, image/jpg, image/jpeg, application/pdf, image/gif\"\n                      (change)=\"onAddFile($event)\" [hidden]=\"tempCompliance?.finalMaterialAttachmentReference\"/>\n\n                  </div>\n                  <div class=\"col-md-12\"><br></div>\n                  <div class=\"col-md-12\" appearance=\"outline\">\n\n                    <button mat-raised-button\n                      *ngIf=\"tempCompliance?.finalMaterialAttachmentReference\"\n                      class=\"button-red button-right\" (click)=\"viewFinalMedia(tempCompliance)\">\n                      <i class=\"material-icons color__white\">open_in_new</i> VIEW MATERIAL\n                    </button>\n                    &nbsp; &nbsp;\n                    <button mat-raised-button class=\"button-red button-right\" (click)=\"deleteUploadedFile2(tempCompliance)\"\n                      *ngIf=\"isApplicant &&\n                      (s2Application?.internalStatus === 'INCOMPLETE' || s2Application?.internalStatus === 'S2_APPLICATION_REJECTED') &&\n                      tempCompliance?.finalMaterialAttachmentReference\">\n                      <i class=\"material-icons color__white\">delete</i> DELETE ATTACHMENT\n                    </button>\n                    &nbsp; &nbsp;\n                    <button mat-raised-button class=\"button-red button-right\" (click)=\"uploadAudioOrVideo()\"\n                    *ngIf=\"isApplicant && safeURLFile\"\n                    [hidden]=\"tempCompliance?.finalMaterialAttachmentReference\">\n                      <i class=\"material-icons color__white\">upload</i> UPLOAD\n                    </button>\n                  </div>\n                  <div class=\"row\"><br><br></div>\n                  <div class=\"row\"><hr></div>\n                </div>\n                <!-- END OF FOR COMPLIANCE -->\n\n                <!-- FOR ORIGINAL ONLY -->\n                <div class=\"col-md-12\" appearance=\"outline\">\n                  <!-- <b>{{s2OriginalAttachmentDocuments[0]?.submissionType | uppercase}}</b><br> -->\n                  <mat-label *ngIf=\"s2OriginalAttachmentDocuments[0]?.originalFilename\">Filename: </mat-label>\n                  <input #finalMaterialFileInput matInput [value]=\"s2OriginalAttachmentDocuments[0]?.originalFilename\"\n                    *ngIf=\"s2OriginalAttachmentDocuments[0]?.originalFilename\" disabled>\n\n                  <input #finalMaterialFile class=\"file-upload\"\n                    *ngIf=\"isApplicant&&(s2Application?.internalStatus==='SAVED'||s2Application?.internalStatus==='INCOMPLETE'||s2Application?.internalStatus==='S2_APPLICATION_REJECTED')\"\n                    type=\"file\" accept=\"video/mp4, audio/mp3, image/jpg, image/jpeg, application/pdf, image/gif\"\n                    (change)=\"onAddFile($event)\" [hidden]=\"s2Application?.decisionStatus === 'INCOMPLETE' || s2Application?.finalMaterialAttachmentReference\"/>\n                </div>\n                <div class=\"col-md-12\"><br></div>\n                <div class=\"col-md-12\" appearance=\"outline\"\n                  *ngIf=\"isShowUploadButton||s2Application?.decisionStatus === 'INCOMPLETE'\">\n                  <button mat-raised-button\n                    *ngIf=\"s2Application?.finalMaterialAttachmentReference || s2Application?.internalStatus==='INCOMPLETE'||s2Application?.internalStatus==='S2_APPLICATION_REJECTED'\"\n                    class=\"button-red button-right\" (click)=\"viewFinalMedia(s2OriginalAttachmentDocuments[0])\">\n                    <i class=\"material-icons color__white\">open_in_new</i> VIEW MATERIAL\n                  </button>\n                  &nbsp; &nbsp;\n                  <button mat-raised-button class=\"button-red button-right\" (click)=\"deleteUploadedFile2(s2OriginalAttachmentDocuments[0])\"\n                    *ngIf=\"isApplicant &&\n                    (s2Application?.internalStatus==='SAVED' || s2Application?.internalStatus==='INCOMPLETE'||s2Application?.internalStatus==='S2_APPLICATION_REJECTED') &&\n                    s2Application?.finalMaterialAttachmentReference\"\n                    [hidden]=\"s2Application?.decisionStatus === 'INCOMPLETE'\">\n                    <i class=\"material-icons color__white\">delete</i> DELETE ATTACHMENT\n                  </button>\n                  &nbsp; &nbsp;\n                  <button mat-raised-button class=\"button-red button-right\" (click)=\"uploadAudioOrVideo()\" *ngIf=\"isApplicant &&\n                    (s2Application?.internalStatus==='SAVED' || s2Application?.internalStatus==='INCOMPLETE'||s2Application?.internalStatus==='S2_APPLICATION_REJECTED') &&\n                    !s2Application?.finalMaterialAttachmentReference\">\n                    <i class=\"material-icons color__white\">upload</i> UPLOAD\n                  </button>\n                </div>\n                <!-- END OF ORIGINAL ONLY -->\n\n                <div class=\"col-md-12\"><br></div>\n\n                <!---------- EXISTING COMPLIANCE ---------->\n                <div *ngIf=\"s2Application?.decisionStatus === 'INCOMPLETE'\">\n                  <div class=\"row\"><hr></div>\n                      <h4>\n                        <i class=\"material-icons\">bookmark</i> &nbsp;ATTACHMENTS FOR COMPLIANCE\n                      </h4>\n                      <br>\n                      <div class=\"row\" *ngFor=\"let i of s2ComplianceAttachmentDocuments; let index = index\">\n                        <div *ngIf=\"i !== null\">\n                          <div class=\"col-md-12\" appearance=\"outline\">\n                            <mat-label *ngIf=\"i?.originalFilename\">Filename: </mat-label>\n                            <input #mainInput matInput [value]=\"i?.originalFilename\" disabled *ngIf=\"i?.originalFilename\"><br>\n                          </div>\n\n                          <div class=\"row\"><br></div>\n                          <div class=\"col-md-12\" appearance=\"outline\">\n                            <button mat-raised-button class=\"button-red button-right\" (click)=\"viewFinalMedia(i)\">\n                              <i class=\"material-icons add-document\">open_in_new</i> VIEW DOCUMENT\n                            </button>\n                            &nbsp; &nbsp;\n                            <button mat-raised-button class=\"button-red button-right\" (click)=\"deleteUploadedFile2(i)\" *ngIf=\"i?.status === 'UNPROCESSED'\">\n                              <i class=\"material-icons add-document\">delete</i> DELETE ATTACHMENT\n                            </button>\n                            &nbsp; &nbsp;\n                          </div>\n                          <div class=\"col-md-12\"><br></div>\n                          <div class=\"col-md-12\">\n                            <hr>\n                          </div>\n                      </div>\n                    </div>\n                  <div class=\"no-record\" *ngIf=\"(s2ComplianceAttachmentDocuments?.length === 0 && s2ComplianceAttachmentDocuments[0]?.originalFilename === undefined) || s2ComplianceAttachmentDocuments?.length===null\">\n                    No existing attachments for compliance.\n                  </div>\n                </div>\n           </div>\n\n              <!-- /////////////////////////////// -->\n\n              <!-- FOR AD SPE - S2 APP -->\n              <!-- <mat-form-field class=\"col-md-6\" appearance=\"outline\">\n                <mat-label>Valid Until</mat-label>\n                <input type=\"tel\" matInput placeholder=\"Search\">\n                <mat-icon matSuffix>calendar_today</mat-icon>\n              </mat-form-field> -->\n            </div>\n          </div>\n\n        </mat-expansion-panel>\n\n\n        <!--\n\n          SUPPORT DOCUMENT\n          -->\n          <mat-expansion-panel [expanded]=\"true\">\n            <mat-expansion-panel-header>\n              <mat-panel-title>\n                <mat-icon>label_important</mat-icon> &nbsp;Support Document\n              </mat-panel-title>\n              <mat-panel-description>\n                PDF\n                <mat-icon>upload</mat-icon>\n              </mat-panel-description>\n            </mat-expansion-panel-header>\n            <br>\n\n          \n            <app-attachment-document [s1Application]=\"s1Application\" [labelMainDocument]=\"'Support Document'\"\n            [isAscUser]=\"isAscUser\"  [s2Appplication]=\"s2Application\" \n            [complianceAttachmentDocuments]=\"complianceAttachmentDocuments\" [s2SupportAttchmentDocuments]=\"originalAttachmentDocuments\" [s2DocObservable]=\"s2OriginalAttachmentObservable\"\n            [applicationStage]=\"applicationStage\" [S2SupportDoc]=\"true\"></app-attachment-document>\n \n                      <!-- \n    \n                        START UPLOAD SUPPORTING\n    \n    \n                       -->\n    \n\n        </mat-expansion-panel>\n          <!-- END SUPPORT -->\n\n        \n        <app-comment *ngIf=\"!isApplicant\" [commentS2Application]=\"s2Application\">\n        </app-comment>\n      </mat-accordion>\n\n      <!-- ATTACHMENTS FOR STAMPED MATERIAL AND DECISION FORM -->\n      <div *ngIf=\"(isAdmin || isSuperAdmin || isApplicant || isAdSpecialist) && previewAttachmentsList.length\">\n        <br>\n        <div class=\"row fields\">\n          <h4>\n            <i class=\"material-icons\">label_important</i> &nbsp;Clearance and TOA\n          </h4>\n          <br>\n          <app-preview-attachments [previewAttachmentsList]=\"previewAttachmentsList\"\n            [displayedColumns]=\"previewAttachmentsDisplayedColumns\"\n            [dataSource]=\"previewAttachmentsListDataSource\"></app-preview-attachments>\n          <div class=\"row\"><br></div>\n        </div>\n      </div>\n\n    </form>\n\n    <hr>\n\n    <!-- For adSpe only -->\n    <div class=\"row\" [hidden]=\"s2Application?.internalStatus === 'RE_SUBMITTED_S2_APPLICATION_VERIFIED_BY_AD_SPE' ||\n    s2Application?.internalStatus === 'S2_APPLICATION_VERIFIED_BY_AD_SPE'\" [formGroup]=\"s2ApplicationForm\">\n      <mat-form-field class=\"col-md-6\" appearance=\"outline\" *ngIf=\"isAdSpecialist || (isAdSpecialist && s2Application?.hasOngoingAppeal)\">\n        <mat-label>Decision:</mat-label>\n        <mat-select (selectionChange)=\"setDecisionStatus($event.value)\" name=\"decisionStatus\"\n          formControlName=\"decisionStatus\">\n          <mat-option value=\"APPROVED\">APPROVED</mat-option>\n          <mat-option *ngIf=\"s2Application?.internalStatus !='FOR_CLEARANCE_S2_APPLICATION_VERIFIED_BY_ENCODER'\"\n            value=\"INCOMPLETE\">INCOMPLETE</mat-option>\n          <mat-option value=\"DISAPPROVED\">DISAPPROVED</mat-option>\n        </mat-select>\n      </mat-form-field>\n      <mat-form-field class=\"col-md-6\" appearance=\"outline\"\n        *ngIf=\"isAdSpecialist &&\n        s2Application?.internalStatus != 'FOR_CLEARANCE_S2_APPLICATION_VERIFIED_BY_ENCODER' && decisionStatus === 'APPROVED'\">\n        <mat-label>Choose validity date</mat-label>\n        <input matInput placeholder=\"Date\" [matDatepicker]=\"validityDate\" readonly [min]=\"todayDate\"\n          [(ngModel)]=\"s2Application.validityDate\" name=\"expiresOn\" formControlName=\"validityDate\" [readonly]=\"true\">\n        <mat-datepicker-toggle matSuffix [for]=\"validityDate\">\n          <mat-datepicker color=\"warn\" #validityDate></mat-datepicker>\n        </mat-datepicker-toggle>\n      </mat-form-field>\n\n      <div class=\"row\" *ngIf=\"rationaleLists?.length > 0 || rationaleOthersList?.length > 0\" [hidden]=\"rationaleLists?.length === 0 && rationaleOthersList.length === 0\">\n        <div class=\"col-md-6 rationale\">\n          <label>RATIONALE</label>\n          <div class=\"rationale-list\" *ngIf=\"rationaleLists.length > 0\">\n            <label>Rationale List:</label>\n            <div *ngFor=\"let i of rationaleLists\">\n              <p><span class=\"material-icons\">help</span> {{i?.typeOfRationale?.rationale}}</p>\n            </div>\n          </div>\n\n          <div class=\"rational-other-comment\" *ngIf=\"rationaleOthersList?.length > 0\">\n            <label>Other comments:</label>\n            <div *ngFor=\"let i of rationaleOthersList\">\n              <p><span class=\"material-icons\">help</span> {{i?.others}}</p>\n            </div>\n\n          </div>\n        </div>\n      </div>\n\n    </div>\n\n    <br>\n    <div class=\"row\">\n      <b\n        *ngIf=\"isAdSpecialist && s2Application?.decisionStatus === 'APPROVED' && s2Application?.validityDate === null\"><b\n          class=\"material-icons\">error_outline</b> Note: To submit approve application, please add validity\n        date.</b><br>\n    </div>\n    <div class=\"row\">\n      <div class=\"col\">\n        <!-- ORIGINAL -->\n        <button *ngIf=\"s2Application?.decisionStatus !== 'INCOMPLETE' && s2Application?.internalStatus !== 'S2_APPLICATION_REJECTED'\"\n          mat-raised-button class=\"button-red\" (click)=\"saveStatus()\" [hidden]=\"\n          s2Application?.internalStatus === 'RE_SUBMITTED_S2_APPLICATION_VERIFIED_BY_AD_SPE' ||\n          s2Application?.internalStatus === 'S2_APPLICATION_VERIFIED_BY_AD_SPE' || s2Application?.internalStatus === 'APPROVED' ||\n          s2Application?.internalStatus == 'FOR_CLEARANCE_S2_APPLICATION' || s2Application?.internalStatus == 'FOR_CLEARANCE_S2_APPLICATION_VERIFIED_BY_ENCODER' ||\n          s2Application?.internalStatus == 'FOR_CLEARANCE_S2_APPLICATION_VERIFIED_BY_AD_SPE' ||\n          s2Application?.hasOngoingAppeal\"\n          [disabled]=\"s2Application?.finalMaterialAttachmentReference === null ||\n          (isAdSpecialist && s2Application?.decisionStatus === 'APPROVED' && s2Application?.validityDate === null)\">\n\n          <div\n            *ngIf=\"isApplicant&&(s2Application?.internalStatus==='SAVED')\">\n            <i class=\"material-icons\">verified</i> SUBMIT\n          </div>\n          <div *ngIf=\"isEvaluator\"><i class=\"material-icons\">verified</i> FORWARD TO\n            AD SPECIALIST</div>\n          <div *ngIf=\"isAdSpecialist\"><i class=\"material-icons\">check</i> SUBMIT\n          </div>\n        </button>\n\n        <!-- INCOMPLETE -->\n        <button mat-raised-button *ngIf=\"s2Application?.decisionStatus ==='INCOMPLETE' || s2Application?.decisionStatus === 'S2_APPLICATION_REJECTED'\" class=\"button-red\"\n          (click)=\"saveStatusForCompliance()\"\n          [disabled]=\"!s2Application?.decisionStatus ||\n          (isAdSpecialist && decisionStatus === '') ||\n          (isAdSpecialist && decisionStatus === 'APPROVED' && s2Application?.validityDate === null) ||\n          (isAdSpecialist && (decisionStatus === 'INCOMPLETE' || decisionStatus === 'DISAPPROVED') && rationaleLists.length === 0 && rationaleOthersList.length === 0)\">\n          <div *ngIf=\"isApplicant\"\n            [hidden]=\"s2Application?.decisionStatus !== 'INCOMPLETE' || s2Application?.internalStatus === 'RE_SUBMITTED_S2_APPLICATION' || s2Application?.internalStatus ==='RE_SUBMITTED_S2_APPLICATION_VERIFIED_BY_ENCODER'\">\n            <i class=\"material-icons\">fact_check</i> SUBMIT FOR COMPLIANCE\n          </div>\n          <div *ngIf=\"isEvaluator\"><i class=\"material-icons\">fact_check</i> FORWARD\n            TO AD SPECIALIST FOR COMPLIANCE</div>\n          <div *ngIf=\"isAdSpecialist\"><i class=\"material-icons\">fact_check</i>\n            SUBMIT COMPLIANCE</div>\n        </button>\n\n        <button mat-raised-button\n          *ngIf=\"isEvaluator && s2Application?.internalStatus != 'FOR_CLEARANCE_S2_APPLICATION'\"\n          class=\"button-red\" (click)=\"rejectDisapprovedModal('encoder', 'reject', 'S2 APPLICATION REJECTED')\">\n          <i class=\"material-icons color__white\">cancel</i> REJECT\n        </button>\n\n        <!-- ADMIN / SUPERADMIN - RELEASED -->\n        <button mat-raised-button class=\"button-red\" (click)=\"submitAppeal()\"  *ngIf=\"(isAdmin || isSuperAdmin) &&\n        s2Application?.externalStatus === 'APPROVED' && s1Application?.releaseStatus === 'RELEASED' &&\n        !s1Application?.hasOngoingCompliance && !s1Application?.hasOngoingAppeal\">\n          <i class=\"material-icons color__white\">report_gmailerrorred</i> &nbsp;RETURN TO ADSPE FOR APPEAL\n        </button>\n\n        <!-- APPEAL - ADSPE -->\n        <button mat-raised-button class=\"button-red\" (click)=\"submitAppeal()\"  *ngIf=\"isAdSpecialist && s2Application?.hasOngoingAppeal\">\n          <i class=\"material-icons color__white\">report_gmailerrorred</i> &nbsp;VERIFY APPEAL\n        </button>\n      </div>\n    </div>\n\n    <!-- <div class=\"row\">\n      <div class=\"col\">\n        <button mat-raised-button *ngIf=\"s2Application?.internalStatus == 'APPROVED' ||\n         s2Application?.internalStatus == 'RE_SUBMITTED_S2_APPLICATION_VERIFIED_BY_AD_SPE' ||\n         s2Application?.internalStatus == 'FOR_CLEARANCE_S2_APPLICATION' ||\n         s2Application?.internalStatus == 'FOR_CLEARANCE_S2_APPLICATION_VERIFIED_BY_ENCODER' \" class=\"button-red\"\n          (click)=\"saveStatusForClearance()\" [hidden]=\"\">\n          <div *ngIf=\"isApplicant\"><i class=\"material-icons\">fact_check</i> SUBMIT\n            APPLICATION FOR CLEARANCE</div>\n          <div *ngIf=\"isEvaluator\"><i class=\"material-icons\">fact_check</i> FORWARD\n            TO AD SPECIALIST FOR CLEARANCE</div>\n          <div *ngIf=\"isAdSpecialist\"><i class=\"material-icons\">fact_check</i>\n            SUBMIT CLEARANCE</div>\n        </button>\n        <button mat-raised-button\n          *ngIf=\"isEvaluator && s2Application?.internalStatus == 'FOR_CLEARANCE_S2_APPLICATION'\"\n          class=\"button-red\" (click)=\"rejectApplication()\">\n          <i class=\"material-icons color__white\">cancel</i> REJECT\n        </button>\n      </div>\n    </div> -->\n\n    <!-- <div class=\"row\">\n      <div class=\"col\">\n        <button mat-raised-button\n          *ngIf=\"isApplicant && s2Application?.internalStatus == 'APPROVED' || s2Application?.internalStatus == 'RE_SUBMITTED_S2_APPLICATION_VERIFIED_BY_AD_SPE'\"\n          [hidden]=\"isAdSpecialist\" class=\"button-red\"\n          (click)=\"applyApplicationForClearance()\">\n          <i class=\"material-icons color__white\">fact_check</i> APPLY FOR TOA\n        </button>\n      </div>\n    </div> -->\n\n  </div>\n</form>\n","import { Observable, Subject } from \"rxjs\";\nimport { DatePipe } from \"@angular/common\";\nimport {\n  Component,\n  ElementRef,\n  Inject,\n  Input,\n  OnInit,\n  ViewChild,\n  OnChanges,\n  SimpleChanges,\n} from \"@angular/core\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport {\n  ATTACHMENT_TYPE,\n  APP_DECISION_STATUS,\n  SUBMISSION_TYPE,\n  APPLICATION_STATUS,\n  APPLICATION_STATUS_REVISION,\n  APPLICATION_STATUS_FOR_COMPLIANCE,\n} from \"@shared\";\nimport {\n  AttachmentDocument,\n  S1Application,\n  S2Application,\n  UserAccount,\n} from \"@models\";\nimport { ApiService, DataStorageService, SweetAlertService } from \"@services\";\nimport { ENDPOINTS } from \"@shared\";\nimport Swal from \"sweetalert2\";\nimport { NgxSpinnerService } from \"ngx-spinner\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport {\n  MatDialog,\n  MatDialogRef,\n  MAT_DIALOG_DATA,\n} from \"@angular/material/dialog\";\nimport { DomSanitizer } from \"@angular/platform-browser\";\nimport { FileStorageService } from \"app/core/services/file.storage.service\";\n\n@Component({\n  selector: \"app-attachment-document\",\n  templateUrl: \"./attachment-document.component.html\",\n  styleUrls: [\"./attachment-document.component.scss\"],\n})\nexport class AttachmentDocumentComponent implements OnInit, OnChanges {\n  attachmentDocuments = [];\n  @Input() originalAttachmentDocuments = [];\n  @Input() revisionAttachmentDocuments = [];\n  @Input() complianceAttachmentDocuments = [];\n  @Input() s2SupportAttchmentDocuments;\n  @Input() s2DocObservable: Subject<any> = new Subject();\n  s2SupportDocument: any = {};\n  @Input() S2SupportDoc: Boolean = false;\n\n  tempRevisionAttachmentDocuments = [];\n  tempComplianceAttachmentDocuments = [];\n\n  @Input() s2Appplication = new S2Application();\n  @Input() s1Application = new S1Application();\n  @Input() labelMainDocument = \"\";\n  @Input() isAscUser = false;\n  @Input() isDisableFieldOnUpdate = false;\n  @Input() applicationStage = \"\";\n\n  showMainDocumentUploadButton = false;\n  showMainDocumentUploadButtonR = false;\n  showMainDocumentUploadButtonC = false;\n\n  showMainDocumentViewButton = false;\n  showMainDocumentViewButtonR = false;\n  showMainDocumentViewButtonC = false;\n\n  safeURLMainDoc: any;\n  safeURLMainDocR: any;\n  safeURLMainDocC: any;\n\n  uploadedFileMain: any;\n  @ViewChild(\"mainFile\")\n  myMainFile: ElementRef;\n  @ViewChild(\"mainInput\")\n  myMainInput: ElementRef;\n\n  showSupportDocumentFrame = false;\n  showSupportDocumentFrameR = false;\n  showSupportDocumentFrameC = false;\n\n  showSupportiveDocumentUploadButton = false;\n  showSupportiveDocumentUploadButtonR = false;\n  showSupportiveDocumentUploadButtonC = false;\n\n  showSupportiveDocumentViewButton = false;\n  showSupportiveDocumentViewButtonR = false;\n  showSupportiveDocumentViewButtonC = false;\n\n  safeURLSupportDoc: any;\n  safeURLSupportDocR: any;\n  safeURLSupportDocC: any;\n\n  uploadedFileSupportive: any;\n  @ViewChild(\"supportiveFile\")\n  mySupportiveFile: ElementRef;\n  @ViewChild(\"supportiveInput\")\n  mySupportiveInput: ElementRef;\n\n  revisionLetterAttachment: any;\n  showRevisionLetterViewButton = false;\n  showRevisionLetterUploadButton = false;\n  safeURLRevisionLetter: any;\n  uploadedFileRevision: any;\n\n  @ViewChild(\"revisionLetterFile\")\n  myRevisionLetterFile: ElementRef;\n  @ViewChild(\"revisionLetterInput\")\n  myRevisionLetterInput: ElementRef;\n\n  todayDate: Date = new Date();\n  attachmentType = ATTACHMENT_TYPE.MAIN;\n  submissionType = SUBMISSION_TYPE.ORIGINAL;\n  mainDocAttachmentSize = 0;\n  supportDocAttachmentSize = 0;\n  revisionDocAttachmentSize = 0;\n  attachmentSizeForUpload: number;\n  selectedFiles: FileList;\n  currentFileUpload: File;\n  progress: { percentage: number } = { percentage: 0 };\n\n  attachmentDocumentForm: FormGroup;\n  id: any;\n  currentUser: UserAccount;\n  attachmentDocument = new AttachmentDocument();\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private dataStorageService: DataStorageService,\n    private sweetAlertService: SweetAlertService,\n    private dataStorage: DataStorageService,\n    private apiService: ApiService,\n    public datepipe: DatePipe,\n    private spinner: NgxSpinnerService,\n    private route: ActivatedRoute,\n    private dialog: MatDialog,\n    private sanitizer: DomSanitizer,\n    private fileStorageService: FileStorageService,\n    private router: Router\n  ) {}\n  ngOnChanges(changes: SimpleChanges): void {}\n\n  ngOnInit(): void {\n    this.id = Number(this.route.snapshot.paramMap.get(\"id\"));\n    this.currentUser = this.dataStorage.getUserAccount();\n    this.setFormValidator();\n    console.log(\"----1 => \", this.s2Appplication);\n    this.s2DocObservable.subscribe((res) => {\n      if (res.type === \"application\") {\n        this.s2Appplication = res.value;\n      } else if (res.type === \"document\") {\n        console.log(\"s2 document\", res.value);\n        this.s2SupportDocument = res.value.filter(\n          (r) => r.attachmentType === ATTACHMENT_TYPE.SUPPORTIVE\n        )[this.s1Application.hasNoSupportingDocs ? 0 : 1];\n      }\n    });\n    console.log(\"S2222 => \", this.s2SupportAttchmentDocuments);\n  }\n\n  validateDeleteBtn(): boolean {\n    if (\n      this.currentUser.accountType === \"APPLICANT\" &&\n      this.s2Appplication.internalStatus &&\n      this.s2SupportDocument &&\n      this.s2SupportAttchmentDocuments.filter(\n        (r) => r.attachmentType === ATTACHMENT_TYPE.SUPPORTIVE\n      )[this.s1Application.hasNoSupportingDocs ? 0 : 1]\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  changeTab(evt) {\n    if (evt.tab) {\n      const label = evt.tab.textLabel;\n      if (label === \"REVISION\" || label === \"COMPLIANCE\") {\n        this.s1Application.hasNoSupportingDocs = false;\n      }\n    }\n  }\n  selectS2SupprtDoc(event) {\n    console.log(\"================= \", this.s2SupportAttchmentDocuments);\n    // checking of file type;\n    if (event.target.files[0].type !== \"application/pdf\") {\n      this.sweetAlertService.customErrorMessage(\n        \"Attachment should be in PDF format only.\"\n      );\n      event.target.value = \"\";\n      return;\n    }\n\n    // getting the file size.\n    this.attachmentType = ATTACHMENT_TYPE.SUPPORTIVE;\n    console.log(\"S2 Support Doc =>\", event.target.files);\n    this.supportDocAttachmentSize = event.target.files[0].size;\n\n    let attachmentSize =\n      this.mainDocAttachmentSize +\n      this.supportDocAttachmentSize +\n      this.revisionDocAttachmentSize;\n\n    // file size checking and validation\n    if (attachmentSize > 15000000) {\n      // 1MB = 1M : FOR INTEGRATION\n      this.sweetAlertService.customErrorMessage(\n        `Attachments' total file size should not exceed 15MB.`\n      );\n      event.target.value = \"\";\n      return;\n    } else {\n      // creating document object url\n      const pdfURL = URL.createObjectURL(event.target.files[0]);\n      this.attachmentSizeForUpload = event.target.files[0].size;\n      this.safeURLSupportDoc = this.sanitizer.bypassSecurityTrustResourceUrl(\n        pdfURL\n      );\n      this.showSupportiveDocumentUploadButton = true;\n\n      const reader = new FileReader();\n      const [file] = event.target.files;\n\n      reader.readAsDataURL(file);\n      reader.onload = () => {};\n    }\n    this.selectedFiles = event.target.files;\n  }\n  selectFile(event, typeOfDocument) {\n    this.attachmentType = typeOfDocument;\n    if (event.target.files[0].type === \"application/pdf\") {\n      if (this.attachmentType === ATTACHMENT_TYPE.MAIN) {\n        this.mainDocAttachmentSize = event.target.files[0].size;\n      } else if (this.attachmentType === ATTACHMENT_TYPE.SUPPORTIVE) {\n        this.supportDocAttachmentSize = event.target.files[0].size;\n      } else if (this.attachmentType === ATTACHMENT_TYPE.REVISION_LETTER) {\n        this.revisionDocAttachmentSize = event.target.files[0].size;\n      }\n      let attachmentSize =\n        this.mainDocAttachmentSize +\n        this.supportDocAttachmentSize +\n        this.revisionDocAttachmentSize;\n\n      if (attachmentSize > 15000000) {\n        // 1MB = 1M : FOR INTEGRATION\n        this.sweetAlertService.customErrorMessage(\n          `Attachments' total file size should not exceed 15MB.`\n        );\n        event.target.value = \"\";\n        return;\n      } else {\n        const pdfURL = URL.createObjectURL(event.target.files[0]);\n\n        this.attachmentSizeForUpload = event.target.files[0].size;\n\n        if (this.attachmentType === ATTACHMENT_TYPE.MAIN) {\n          this.safeURLMainDoc = this.sanitizer.bypassSecurityTrustResourceUrl(\n            pdfURL\n          );\n          this.showMainDocumentUploadButton = true;\n        } else if (this.attachmentType === ATTACHMENT_TYPE.SUPPORTIVE) {\n          this.safeURLSupportDoc = this.sanitizer.bypassSecurityTrustResourceUrl(\n            pdfURL\n          );\n          this.showSupportiveDocumentUploadButton = true;\n        } else if (this.attachmentType === ATTACHMENT_TYPE.REVISION_LETTER) {\n          this.safeURLRevisionLetter = this.sanitizer.bypassSecurityTrustResourceUrl(\n            pdfURL\n          );\n          this.showRevisionLetterUploadButton = true;\n        }\n\n        // original-approved - for revision\n        // revision\n        if (\n          (this.submissionType === SUBMISSION_TYPE.REVISION &&\n            this.s1Application.decisionStatus !==\n              APP_DECISION_STATUS.INCOMPLETE) ||\n          ((this.s1Application.internalStatus ===\n            APPLICATION_STATUS.S1_APPLICATION_REVIEWED ||\n            this.s1Application.internalStatus ===\n              APPLICATION_STATUS_FOR_COMPLIANCE.COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER) &&\n            (this.s1Application.decisionStatus ===\n              APPLICATION_STATUS.APPROVED ||\n              this.s1Application.decisionStatus === \"APPROVED W/ CAUTION\"))\n        ) {\n          this.safeURLMainDocR = this.safeURLMainDoc;\n          this.safeURLSupportDocR = this.safeURLSupportDoc;\n\n          this.showMainDocumentUploadButtonR = this.showMainDocumentUploadButton;\n          this.showSupportiveDocumentUploadButtonR = this.showSupportiveDocumentUploadButton;\n\n          if (this.tempRevisionAttachmentDocuments.length === 0) {\n            this.s1Application.mainAttachmentReference = null;\n            this.s1Application.supportingAttachmentReference = null;\n            this.s1Application.revisionLetterAttachmentReference = null;\n          }\n        }\n\n        // original-incomplete - original\n        // revision-incomplete\n        // for compliance\n        else if (\n          this.submissionType === SUBMISSION_TYPE.COMPLIANCE ||\n          (this.s1Application.internalStatus ===\n            APPLICATION_STATUS.S1_APPLICATION_REVIEWED &&\n            this.s1Application.decisionStatus ===\n              APPLICATION_STATUS.INCOMPLETE) ||\n          (this.submissionType === SUBMISSION_TYPE.REVISION &&\n            this.s1Application.decisionStatus ===\n              APP_DECISION_STATUS.INCOMPLETE)\n        ) {\n          this.safeURLMainDocC = this.safeURLMainDoc;\n          this.safeURLSupportDocC = this.safeURLSupportDoc;\n\n          this.showMainDocumentUploadButtonC = this.showMainDocumentUploadButton;\n          this.showSupportiveDocumentUploadButtonC = this.showSupportiveDocumentUploadButton;\n\n          if (this.tempComplianceAttachmentDocuments.length === 0) {\n            this.s1Application.mainAttachmentReference = null;\n            this.s1Application.supportingAttachmentReference = null;\n            this.s1Application.revisionLetterAttachmentReference = null;\n          }\n        }\n\n        const reader = new FileReader();\n        const [file] = event.target.files;\n\n        reader.readAsDataURL(file);\n        reader.onload = () => {};\n      }\n\n      this.selectedFiles = event.target.files;\n    } else {\n      this.sweetAlertService.customErrorMessage(\n        \"Attachment should be in PDF format only.\"\n      );\n      event.target.value = \"\";\n      return;\n    }\n  }\n\n  uploadS2SupportDoc() {\n    let attachmentType;\n    let appFormReference = \"\";\n    attachmentType = \"SUPPORTING\";\n    this.submissionType = SUBMISSION_TYPE.ORIGINAL;\n    Swal.fire({\n      text:\n        \"Are you sure you want to upload the \" +\n        attachmentType.replaceAll(\"_\", \" \") +\n        \" DOCUMENT?\",\n      icon: \"question\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Confirm\",\n    }).then((result) => {\n      if (result.value) {\n        this.spinner.show();\n\n        this.progress.percentage = 0;\n        this.currentFileUpload = this.selectedFiles.item(0);\n        let params = \"\";\n        let appFormRef = \"\";\n\n        // set appFormReference\n        if (this.s2Appplication.appFormReference) {\n          console.log(\"------------------------------\");\n          appFormRef = `&appFormReference=${this.s2Appplication.appFormReference}`;\n        }\n\n        params = `?&attachmentType=${this.attachmentType}&submissionType=${this.submissionType}${appFormReference}&fileSize=${this.attachmentSizeForUpload}${appFormRef}`;\n        this.fileStorageService\n          .pushFileToStorage(\n            ENDPOINTS.attachmentDocument,\n            this.currentFileUpload,\n            params\n          )\n          .subscribe(\n            (res) => {\n              console.log(this.attachmentType, \" \", res.responseData.data);\n\n              if (\n                !this.s2Appplication.appFormReference ||\n                this.s2Appplication.appFormReference === \"\"\n              ) {\n                this.s2Appplication.appFormReference =\n                  res.responseData.data.appFormReference;\n                console.log(\n                  \"SET APPFORMREF: \",\n                  this.s1Application.appFormReference\n                );\n              }\n\n              this.uploadedFileSupportive = res.responseData.data;\n              this.s2SupportDocAddToAttachmentDocument(\n                this.uploadedFileSupportive\n              );\n              this.showSupportiveDocumentUploadButton = false;\n              this.showSupportiveDocumentViewButton = true;\n              this.s2Appplication.supportingAttachmentReference = this.uploadedFileSupportive.supportingAttachmentReference;\n\n              this.spinner.hide();\n              this.sweetAlertService.customSuccessMessage(\n                \"Attachment successfully uploaded.\"\n              );\n              this.selectedFiles = undefined;\n            },\n            (err: any) => {\n              this.spinner.hide();\n              this.sweetAlertService.error(err);\n            },\n            () => {\n              // actions after subscription\n              this.spinner.hide();\n            }\n          );\n      } else {\n        this.currentFileUpload = null;\n      }\n    });\n    console.log(\"uploaded =======> \", this.s2SupportAttchmentDocuments);\n  }\n\n  uploadDocument() {\n    console.log(\"type: \", this.attachmentType);\n    let attachmentType;\n    let appFormReference = \"\";\n    if (\n      this.attachmentType === ATTACHMENT_TYPE.SUPPORTIVE ||\n      this.S2SupportDoc\n    ) {\n      attachmentType = \"SUPPORTING\";\n    } else {\n      attachmentType = this.attachmentType;\n    }\n\n    if (!this.S2SupportDoc) {\n      // set submission type and appFormReference\n      if (\n        attachmentType === ATTACHMENT_TYPE.REVISION_LETTER ||\n        (this.s1Application.submissionType === SUBMISSION_TYPE.ORIGINAL &&\n          (this.s1Application.decisionStatus === APPLICATION_STATUS.APPROVED ||\n            this.s1Application.decisionStatus === \"APPROVED W/ CAUTION\"))\n      ) {\n        this.submissionType = SUBMISSION_TYPE.REVISION;\n        // appFormReference = `&appFormReference=${this.s1Application.appFormReference}`;\n      } else if (\n        this.s1Application.decisionStatus === APP_DECISION_STATUS.INCOMPLETE\n      ) {\n        this.submissionType = SUBMISSION_TYPE.COMPLIANCE;\n        // appFormReference = `&appFormReference=${this.s1Application.appFormReference}&applicationFormId=${this.s1Application.id}`;\n        appFormReference = `&applicationFormId=${this.s1Application.id}`;\n      } else {\n        this.submissionType = SUBMISSION_TYPE.ORIGINAL;\n      }\n    } else {\n      this.submissionType = SUBMISSION_TYPE.ORIGINAL;\n    }\n\n    console.log(\"NEW SUTYPE: \", this.submissionType);\n\n    Swal.fire({\n      text:\n        \"Are you sure you want to upload the \" +\n        attachmentType.replaceAll(\"_\", \" \") +\n        \" DOCUMENT?\",\n      icon: \"question\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Confirm\",\n    }).then((result) => {\n      if (result.value) {\n        this.spinner.show();\n\n        this.progress.percentage = 0;\n        this.currentFileUpload = this.selectedFiles.item(0);\n        let params = \"\";\n        let appFormRef = \"\";\n\n        // set appFormReference\n        if (this.s1Application.appFormReference) {\n          appFormRef = `&appFormReference=${this.s1Application.appFormReference}`;\n        }\n        if (this.s2Appplication.appFormReference) {\n          appFormRef = `&appFormReference=${this.s2Appplication.appFormReference}`;\n        }\n\n        params = `?&attachmentType=${this.attachmentType}&submissionType=${this.submissionType}${appFormReference}&fileSize=${this.attachmentSizeForUpload}${appFormRef}`;\n        this.fileStorageService\n          .pushFileToStorage(\n            ENDPOINTS.attachmentDocument,\n            this.currentFileUpload,\n            params\n          )\n          .subscribe(\n            (res) => {\n              console.log(this.attachmentType, \" \", res.responseData.data);\n\n              if (\n                !this.s1Application.appFormReference ||\n                this.s1Application.appFormReference === \"\"\n              ) {\n                this.s1Application.appFormReference =\n                  res.responseData.data.appFormReference;\n                console.log(\n                  \"SET APPFORMREF: \",\n                  this.s1Application.appFormReference\n                );\n              }\n\n              if (!this.S2SupportDoc) {\n                if (this.attachmentType === ATTACHMENT_TYPE.MAIN) {\n                  this.uploadedFileMain = res.responseData.data;\n                  this.addToAttachmentDocuments(this.uploadedFileMain);\n                  this.showMainDocumentUploadButton = false;\n                  this.showMainDocumentViewButton = true;\n                  this.showSupportDocumentFrame = true;\n                  this.s1Application.mainAttachmentReference = this.uploadedFileMain.mainAttachmentReference;\n                } else if (this.attachmentType === ATTACHMENT_TYPE.SUPPORTIVE) {\n                  this.uploadedFileSupportive = res.responseData.data;\n                  this.addToAttachmentDocuments(this.uploadedFileSupportive);\n                  this.showSupportiveDocumentUploadButton = false;\n                  this.showSupportiveDocumentViewButton = true;\n                  this.s1Application.supportingAttachmentReference = this.uploadedFileSupportive.supportingAttachmentReference;\n                } else if (\n                  this.attachmentType === ATTACHMENT_TYPE.REVISION_LETTER\n                ) {\n                  this.uploadedFileRevision = res.responseData.data;\n                  this.addToAttachmentDocuments(this.uploadedFileRevision);\n                  this.showRevisionLetterViewButton = true;\n                  this.showRevisionLetterUploadButton = false;\n                  this.s1Application.revisionLetterAttachmentReference = this.uploadedFileRevision.revisionLetterAttachmentReference;\n                  this.revisionLetterAttachment = this.attachmentDocuments.filter(\n                    (data) =>\n                      data?.attachmentType === ATTACHMENT_TYPE.REVISION_LETTER\n                  )[0];\n                }\n              } else {\n                this.uploadedFileSupportive = res.responseData.data;\n                this.s2SupportDocAddToAttachmentDocument(\n                  this.uploadedFileSupportive\n                );\n                this.showSupportiveDocumentUploadButton = false;\n                this.showSupportiveDocumentViewButton = true;\n                this.s2Appplication.supportingAttachmentReference = this.uploadedFileSupportive.supportingAttachmentReference;\n              }\n\n              if (\n                (this.submissionType === SUBMISSION_TYPE.ORIGINAL &&\n                  (this.s1Application.decisionStatus ===\n                    APPLICATION_STATUS.APPROVED ||\n                    this.s1Application.decisionStatus ===\n                      \"APPROVED W/ CAUTION\")) ||\n                this.submissionType === SUBMISSION_TYPE.REVISION\n              ) {\n                if (this.attachmentType === ATTACHMENT_TYPE.MAIN) {\n                  this.showMainDocumentUploadButtonR = this.showMainDocumentUploadButton;\n                  this.showMainDocumentViewButtonR = this.showMainDocumentViewButton;\n                } else if (this.attachmentType === ATTACHMENT_TYPE.SUPPORTIVE) {\n                  this.showSupportDocumentFrameR = this.showSupportDocumentFrame;\n                  this.showSupportiveDocumentUploadButtonR = this.showSupportiveDocumentUploadButton;\n                  this.showSupportiveDocumentViewButtonR = this.showSupportiveDocumentViewButton;\n                }\n              } else if (\n                (this.submissionType === SUBMISSION_TYPE.ORIGINAL &&\n                  this.s1Application.decisionStatus ===\n                    APP_DECISION_STATUS.INCOMPLETE) ||\n                (this.submissionType === SUBMISSION_TYPE.REVISION &&\n                  this.s1Application.decisionStatus ===\n                    APP_DECISION_STATUS.INCOMPLETE) ||\n                this.submissionType === SUBMISSION_TYPE.COMPLIANCE\n              ) {\n                if (this.attachmentType === ATTACHMENT_TYPE.MAIN) {\n                  this.showMainDocumentUploadButtonC = this.showMainDocumentUploadButton;\n                  this.showMainDocumentViewButtonC = this.showMainDocumentViewButton;\n                } else if (this.attachmentType === ATTACHMENT_TYPE.SUPPORTIVE) {\n                  this.showSupportDocumentFrameC = this.showSupportDocumentFrame;\n                  this.showSupportiveDocumentUploadButtonC = this.showSupportiveDocumentUploadButton;\n                  this.showSupportiveDocumentViewButtonC = this.showSupportiveDocumentViewButton;\n                }\n              }\n\n              this.spinner.hide();\n              this.sweetAlertService.customSuccessMessage(\n                \"Attachment successfully uploaded.\"\n              );\n              this.selectedFiles = undefined;\n            },\n            (err: any) => {\n              this.spinner.hide();\n              this.sweetAlertService.error(err);\n            },\n            () => {\n              // actions after subscription\n              this.spinner.hide();\n            }\n          );\n      } else {\n        this.currentFileUpload = null;\n      }\n    });\n  }\n  s2SupportDocAddToAttachmentDocument(obj: any) {\n    if (obj.supportingAttachmentReference) {\n      this.attachmentDocument.mainAttachmentReference =\n        obj.mainAttachmentReference;\n      this.attachmentDocument.supportingAttachmentReference =\n        obj.supportingAttachmentReference;\n      this.attachmentDocument.revisionLetterAttachmentReference =\n        obj.revisionLetterAttachmentReference;\n      this.attachmentDocument.id = obj.id;\n      this.attachmentDocument.originalFilename = obj.originalFilename;\n      this.attachmentDocument.filename = obj.filename;\n      this.attachmentDocument.fileSize = obj.fileSize;\n      this.attachmentDocument.fileExtension = obj.fileExtension;\n      this.attachmentDocument.fileURL = obj.fileURL;\n      this.attachmentDocument.attachmentType = obj.attachmentType;\n      this.attachmentDocument.documentFormat = obj.documentFormat;\n      this.attachmentDocument.createdBy = this.currentUser.username;\n      this.attachmentDocument.createdDate = this.todayDate;\n      console.log(this.attachmentDocuments);\n      this.attachmentDocuments[0] = this.attachmentDocument;\n      this.s2SupportAttchmentDocuments = this.attachmentDocuments;\n      this.s2SupportDocument = obj;\n      this.s2SupportAttchmentDocuments.push(obj);\n      console.log(\"s2support => \", obj);\n\n      console.log(this.s2Appplication);\n      console.log(\"s2 app\", this.attachmentDocuments);\n    }\n  }\n\n  addToAttachmentDocuments(obj: any) {\n    if (obj) {\n      console.log(\"addToAttachmentDocuments\");\n\n      if (\n        this.s1Application.submissionType === SUBMISSION_TYPE.ORIGINAL &&\n        (this.s1Application.internalStatus === APPLICATION_STATUS.SAVED ||\n          this.s1Application.internalStatus === \"\" ||\n          this.s1Application.internalStatus === undefined)\n      ) {\n        this.attachmentDocuments = JSON.parse(\n          JSON.stringify(this.originalAttachmentDocuments)\n        );\n      }\n\n      this.attachmentDocument.mainAttachmentReference =\n        obj.mainAttachmentReference;\n      this.attachmentDocument.supportingAttachmentReference =\n        obj.supportingAttachmentReference;\n      this.attachmentDocument.revisionLetterAttachmentReference =\n        obj.revisionLetterAttachmentReference;\n      this.attachmentDocument.id = obj.id;\n      this.attachmentDocument.originalFilename = obj.originalFilename;\n      this.attachmentDocument.filename = obj.filename;\n      this.attachmentDocument.fileSize = obj.fileSize;\n      this.attachmentDocument.fileExtension = obj.fileExtension;\n      this.attachmentDocument.fileURL = obj.fileURL;\n      this.attachmentDocument.attachmentType = obj.attachmentType;\n      this.attachmentDocument.documentFormat = obj.documentFormat;\n      this.attachmentDocument.createdBy = this.currentUser.username;\n      this.attachmentDocument.createdDate = this.todayDate;\n      console.log(this.attachmentDocuments);\n\n      if (this.attachmentDocument.attachmentType === \"MAIN\") {\n        this.attachmentDocuments[0] = this.attachmentDocument;\n      } else if (this.attachmentDocument.attachmentType === \"SUPPORTIVE\") {\n        this.attachmentDocuments[1] = this.attachmentDocument;\n      } else if (this.attachmentDocument.attachmentType === \"REVISION_LETTER\") {\n        this.attachmentDocuments[2] = this.attachmentDocument;\n      }\n\n      if (\n        (this.s1Application.submissionType === SUBMISSION_TYPE.REVISION &&\n          this.s1Application.decisionStatus !==\n            APP_DECISION_STATUS.INCOMPLETE) ||\n        (this.s1Application.submissionType === SUBMISSION_TYPE.ORIGINAL &&\n          (this.s1Application.decisionStatus === APPLICATION_STATUS.APPROVED ||\n            this.s1Application.decisionStatus === \"APPROVED W/ CAUTION\"))\n      ) {\n        // this.revisionAttachmentDocuments = this.attachmentDocuments;\n        this.tempRevisionAttachmentDocuments = JSON.parse(\n          JSON.stringify(this.attachmentDocuments)\n        );\n      } else if (\n        this.s1Application.decisionStatus === APP_DECISION_STATUS.INCOMPLETE\n      ) {\n        // this.complianceAttachmentDocuments = this.attachmentDocuments;\n        this.tempComplianceAttachmentDocuments = JSON.parse(\n          JSON.stringify(this.attachmentDocuments)\n        );\n      } else {\n        this.originalAttachmentDocuments = JSON.parse(\n          JSON.stringify(this.attachmentDocuments)\n        );\n      }\n\n      console.log(this.attachmentDocuments);\n      this.attachmentDocument = new AttachmentDocument();\n    } else {\n      this.spinner.hide();\n      console.log(\"Null attachment.\");\n      this.myMainFile.nativeElement.value = null;\n      this.myMainInput.nativeElement.value = null;\n      this.sweetAlertService.customErrorMessage(\n        \"Attachment cannot be uploaded.\"\n      );\n    }\n  }\n\n  viewS2SupportDoc() {\n    console.log(\"uploaded\", this.uploadedFileSupportive);\n    console.log(\"uploaded\", this.attachmentDocuments);\n    console.log(\"s2Upport\", this.s2SupportAttchmentDocuments);\n    console.log(\"s2\", this.s2Appplication);\n    console.log(\"s1\", this.s1Application);\n    // console.log(\"S2 SUPPORTIVE\", );\n    console.log(\"S2 SUPPORTIVE!! \", this.s2SupportDocument);\n    let fileURL: string = this.s2SupportDocument.fileURL;\n    window.open(fileURL);\n  }\n\n  viewDocument(typeOfDocument, isOriginal = true) {\n    if (this.s1Application.submissionType === SUBMISSION_TYPE.ORIGINAL) {\n      this.attachmentDocuments = JSON.parse(\n        JSON.stringify(this.originalAttachmentDocuments)\n      );\n    } else if (\n      this.s1Application.submissionType === SUBMISSION_TYPE.REVISION &&\n      this.s1Application.decisionStatus !== APP_DECISION_STATUS.INCOMPLETE\n    ) {\n      this.attachmentDocuments = JSON.parse(\n        JSON.stringify(this.revisionAttachmentDocuments)\n      );\n    } else if (\n      this.s1Application.submissionType === SUBMISSION_TYPE.COMPLIANCE ||\n      this.s1Application.decisionStatus === APP_DECISION_STATUS.INCOMPLETE\n    ) {\n      this.attachmentDocuments = JSON.parse(\n        JSON.stringify(this.complianceAttachmentDocuments)\n      );\n    }\n\n    if (typeOfDocument === ATTACHMENT_TYPE.MAIN) {\n      console.log(isOriginal, this.uploadedFileMain);\n      if (this.uploadedFileMain && !isOriginal) {\n        window.open(this.uploadedFileMain.fileURL);\n      } else {\n        window.open(this.attachmentDocuments[0].fileURL);\n      }\n    } else if (typeOfDocument === ATTACHMENT_TYPE.SUPPORTIVE) {\n      if (this.uploadedFileSupportive && !isOriginal) {\n        window.open(this.uploadedFileSupportive.fileURL);\n      } else {\n        const supportiveDoc = this.attachmentDocuments.filter(\n          (res) => res.attachmentType === ATTACHMENT_TYPE.SUPPORTIVE\n        )[0];\n        window.open(supportiveDoc.fileURL);\n      }\n    } else if (typeOfDocument === ATTACHMENT_TYPE.REVISION_LETTER) {\n      if (this.uploadedFileRevision && !isOriginal) {\n        window.open(this.uploadedFileRevision.fileURL);\n      } else {\n        // const revisionLetterDoc = this.revisionLetterAttachment;\n        const revisionLetterDoc = this.attachmentDocuments.filter(\n          (res) => res.attachmentType === ATTACHMENT_TYPE.REVISION_LETTER\n        )[0];\n        window.open(revisionLetterDoc.fileURL);\n      }\n    }\n  }\n\n  viewDocument2(i) {\n    window.open(i?.fileURL);\n  }\n\n  deleteUploadedFile2(obj) {\n    Swal.fire({\n      text: \"Are you sure you want to delete this document permanently?\",\n      icon: \"question\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Confirm\",\n    }).then((result) => {\n      if (result.value) {\n        this.spinner.show();\n        if (\n          obj.submissionType === SUBMISSION_TYPE.REVISION &&\n          obj.decisionStatus !== APP_DECISION_STATUS.INCOMPLETE\n        ) {\n          this.revisionAttachmentDocuments = this.revisionAttachmentDocuments.filter(\n            (data) => data?.id !== obj.id\n          );\n        } else if (\n          obj.submissionType === SUBMISSION_TYPE.COMPLIANCE ||\n          obj.decisionStatus === APP_DECISION_STATUS.INCOMPLETE\n        ) {\n          this.complianceAttachmentDocuments = this.complianceAttachmentDocuments.filter(\n            (data) => data?.id !== obj.id\n          );\n        }\n        this.apiService\n          .save(ENDPOINTS.attachmentDocument + `/id/${obj.id}`, null)\n          .subscribe(\n            (res) => {\n              this.spinner.hide();\n              console.log(\"Attachment successfully deleted.\");\n            },\n            (err: any) => {\n              this.spinner.hide();\n              this.sweetAlertService.error(err);\n            }\n          );\n      }\n    });\n  }\n\n  deleteS2SupportDoc() {\n    Swal.fire({\n      text: \"Are you sure you want to delete this document permanently?\",\n      icon: \"question\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Confirm\",\n    }).then((result) => {\n      if (result.value) {\n        if (\n          this.s2Appplication.submissionType === SUBMISSION_TYPE.ORIGINAL &&\n          (this.s2Appplication.internalStatus === APPLICATION_STATUS.SAVED ||\n            this.s2Appplication.internalStatus === \"\" ||\n            this.s2Appplication.internalStatus === undefined)\n        ) {\n          this.attachmentDocuments = this.s2SupportAttchmentDocuments;\n        }\n        let id = this.attachmentDocuments.filter(\n          (r) => r.attachmentType === ATTACHMENT_TYPE.SUPPORTIVE\n        )[this.s1Application.hasNoSupportingDocs ? 0 : 1].id;\n        this.supportDocAttachmentSize = 0;\n        // this.attachmentDocuments[this.s1Application.hasNoSupportingDocs? 0 : 1] = null;\n        this.s2SupportDocument = {};\n        this.s2Appplication.supportingAttachmentReference = null;\n        // this.showSupportiveDocumentViewButton = false;\n        // this.showSupportiveDocumentUploadButton = false;\n        // this.mySupportiveFile.nativeElement.value = null;\n        // this.mySupportiveInput.nativeElement.value = null;\n        // this.s1Application.supportingAttachmentReference = null;\n        console.log(\"result\", result);\n\n        this.apiService\n          .save(ENDPOINTS.attachmentDocument + `/id/${id}`, null)\n          .subscribe(\n            (res) => {\n              this.spinner.hide();\n              console.log(\"Attachment successfully deleted.\");\n            },\n            (err: any) => {\n              this.spinner.hide();\n              this.sweetAlertService.error(err);\n            }\n          );\n      }\n    });\n  }\n\n  deleteUploadedFile(documentType) {\n    console.log(\"DELETE...\");\n\n    let currentSubType = SUBMISSION_TYPE.ORIGINAL;\n\n    Swal.fire({\n      text: \"Are you sure you want to delete this document permanently?\",\n      icon: \"question\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Confirm\",\n    }).then((result) => {\n      if (result.value) {\n        let id = \"\";\n        // this.spinner.show();\n\n        // new appform - original\n        if (\n          this.s1Application.submissionType === SUBMISSION_TYPE.ORIGINAL &&\n          (this.s1Application.internalStatus === APPLICATION_STATUS.SAVED ||\n            this.s1Application.internalStatus === \"\" ||\n            this.s1Application.internalStatus === undefined)\n        ) {\n          this.attachmentDocuments = this.originalAttachmentDocuments;\n        }\n\n        // approved - original = for revision\n        else if (\n          this.s1Application.submissionType === SUBMISSION_TYPE.ORIGINAL &&\n          (this.s1Application.internalStatus ===\n            APPLICATION_STATUS.S1_APPLICATION_REVIEWED ||\n            this.s1Application.internalStatus ===\n              APPLICATION_STATUS_FOR_COMPLIANCE.COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER) &&\n          (this.s1Application.decisionStatus === APPLICATION_STATUS.APPROVED ||\n            this.s1Application.decisionStatus === \"APPROVED W/ CAUTION\")\n        ) {\n          this.attachmentDocuments = this.tempRevisionAttachmentDocuments;\n          currentSubType = SUBMISSION_TYPE.REVISION;\n        }\n\n        // incomplete - original = for compliance\n        // incomplete - compliance = for compliance\n        // incomplete - revision = for compliance\n        else if (\n          this.s1Application.decisionStatus === APPLICATION_STATUS.INCOMPLETE &&\n          (this.s1Application.internalStatus ===\n            APPLICATION_STATUS.S1_APPLICATION_REVIEWED ||\n            this.s1Application.internalStatus ===\n              APPLICATION_STATUS_FOR_COMPLIANCE.COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER ||\n            this.s1Application.internalStatus ===\n              APPLICATION_STATUS_REVISION.REVISION_SCREENED ||\n            this.s1Application.internalStatus ===\n              APPLICATION_STATUS_FOR_COMPLIANCE.COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER ||\n            this.s1Application.internalStatus ===\n              APPLICATION_STATUS.S1_APPLICATION_REJECTED)\n        ) {\n          this.attachmentDocuments = this.tempComplianceAttachmentDocuments;\n          currentSubType = SUBMISSION_TYPE.COMPLIANCE;\n        }\n        console.log(this.attachmentDocuments);\n        console.log(\"currentSubType \", currentSubType);\n\n        if (documentType === ATTACHMENT_TYPE.MAIN) {\n          id = this.attachmentDocuments[0].id;\n          this.mainDocAttachmentSize = 0;\n          this.attachmentDocuments[0] = null;\n          this.s1Application.mainAttachmentReference = null;\n          this.showMainDocumentViewButton = false;\n          this.myMainFile.nativeElement.value = null;\n          this.myMainInput.nativeElement.value = null;\n          this.showSupportDocumentFrame = false;\n          this.showMainDocumentUploadButton = false;\n          this.s1Application.mainAttachmentReference = null;\n        } else if (documentType === ATTACHMENT_TYPE.SUPPORTIVE) {\n          id = this.attachmentDocuments[1].id;\n          this.supportDocAttachmentSize = 0;\n          this.attachmentDocuments[1] = null;\n          // this.attachmentDocuments[1].originalFilename = null;\n          this.s1Application.supportingAttachmentReference = null;\n          this.showSupportiveDocumentViewButton = false;\n          this.showSupportiveDocumentUploadButton = false;\n          this.mySupportiveFile.nativeElement.value = null;\n          this.mySupportiveInput.nativeElement.value = null;\n          this.s1Application.supportingAttachmentReference = null;\n        } else {\n          id = this.attachmentDocuments[2].id;\n          this.revisionDocAttachmentSize = 0;\n          this.attachmentDocuments[2] = null;\n          // this.attachmentDocuments[2].originalFilename = null;\n          this.revisionLetterAttachment = null;\n          this.s1Application.revisionLetterAttachmentReference = null;\n          this.showRevisionLetterViewButton = false;\n          this.showRevisionLetterUploadButton = false;\n          this.myRevisionLetterFile.nativeElement.value = null;\n          // this.myRevisionLetterInput.nativeElement.value = null;\n          // this.attachmentDocuments = this.attachmentDocuments.filter((doc) =>\n          //   !doc.attachmentType.includes(ATTACHMENT_TYPE.REVISION_LETTER));\n        }\n\n        console.log(this.attachmentDocuments);\n\n        if (currentSubType === SUBMISSION_TYPE.REVISION) {\n          this.tempRevisionAttachmentDocuments = this.attachmentDocuments;\n        } else if (currentSubType === SUBMISSION_TYPE.COMPLIANCE) {\n          this.tempComplianceAttachmentDocuments = this.attachmentDocuments;\n        } else {\n          this.originalAttachmentDocuments = this.attachmentDocuments;\n        }\n\n        if (\n          // new - original\n          this.s1Application.internalStatus === undefined ||\n          this.s1Application.internalStatus === APPLICATION_STATUS.SAVED ||\n          // reviewed - approved - for revision\n          ((this.s1Application.internalStatus ===\n            APPLICATION_STATUS.S1_APPLICATION_REVIEWED ||\n            this.s1Application.internalStatus ===\n              APPLICATION_STATUS_FOR_COMPLIANCE.COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER) &&\n            (this.s1Application.decisionStatus ===\n              APPLICATION_STATUS.APPROVED ||\n              this.s1Application.decisionStatus === \"APPROVED W/ CAUTION\")) ||\n          // reviewed - incomplete - for compliance\n          // incomplete - incomplete - for compliance\n          ((this.s1Application.internalStatus ===\n            APPLICATION_STATUS.S1_APPLICATION_REVIEWED ||\n            this.s1Application.internalStatus ===\n              APPLICATION_STATUS_FOR_COMPLIANCE.COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER) &&\n            this.s1Application.decisionStatus === APPLICATION_STATUS.INCOMPLETE)\n        ) {\n          console.log(\"Trigger delete...\");\n\n          this.apiService\n            .save(ENDPOINTS.attachmentDocument + `/id/${id}`, null)\n            .subscribe(\n              (res) => {\n                this.spinner.hide();\n                console.log(\"Attachment successfully deleted.\");\n              },\n              (err: any) => {\n                this.spinner.hide();\n                this.sweetAlertService.error(err);\n              }\n            );\n        }\n      }\n    });\n  }\n\n  verifyNoDocumentAttached() {\n    this.s1Application.supportingAttachmentReference =\n      this.s1Application.supportingAttachmentReference === null ? \"\" : null;\n    this.safeURLSupportDoc = null;\n  }\n\n  setFormValidator() {\n    this.attachmentDocumentForm = this.formBuilder.group({\n      attachmentReference: [\"\"],\n      hasNoSupportingDocs: [\"\"],\n      typeOfMedium: [\"\"],\n      mediumExecution: [\"\"],\n      language: [\"\"],\n      dialect: [\"\"],\n      others: [\"\"],\n      sizeLength: [\"\"],\n      width: [\"\"],\n\n      multimediaLength: [\"\"],\n      multimediaSize: [\"\"],\n      applicationSingleMedia: [\"\"],\n      applicationMultimediaStatic: [\"\"],\n      applicationMultimediaMoving: [\"\"],\n    });\n  }\n}\n","<div class=\"row\">\n  <b\n    *ngIf=\"\n      currentUser?.userRole?.name == 'ROLE_APPLICANT' &&\n      applicationStage === 'S1-APPLICATION'\n    \"\n    ><b class=\"material-icons\">error_outline</b> Attachments' total file size\n    should not exceed 15MB.</b\n  >\n\n  <form [formGroup]=\"attachmentDocumentForm\">\n    <mat-tab-group\n      mat-align-tabs=\"center\"\n      class=\"mat-tab-group\"\n      (selectedTabChange)=\"changeTab($event)\"\n    >\n      <mat-tab label=\"SUPPORT DOCUMENT\" *ngIf=\"S2SupportDoc\">\n        <div class=\"mat-tab\">\n          <div class=\"col comment\">\n            <label>SUPPORT DOCUMENT</label>\n            <div class=\"row\">\n              <!-- <h4>\n                <i class=\"material-icons\">bookmark</i> &nbsp;{{labelMainDocument}}\n              </h4> -->\n              <br />\n              <div class=\"col-md-12\" appearance=\"outline\">\n                <mat-label *ngIf=\"s2SupportDocument\">Filename: </mat-label>\n                <input\n                  #mainInput\n                  matInput\n                  [value]=\"s2SupportDocument?.originalFilename\"\n                  disabled\n                  *ngIf=\"s2SupportDocument\"\n                /><br />\n\n                <input\n                  #mainFile\n                  class=\"file-upload\"\n                  type=\"file\"\n                  accept=\".pdf\"\n                  (change)=\"selectS2SupprtDoc($event)\"\n                  [hidden]=\"\n                    (isAscUser && isDisableFieldOnUpdate) ||\n                    s2SupportDocument?.originalFilename != null\n                  \"\n                  *ngIf=\"\n                    s2SupportAttchmentDocuments?.length >= 0 ||\n                    (originalAttachmentDocuments?.length >= 1 &&\n                      originalAttachmentDocuments[0] === null) ||\n                    s1Application?.internalStatus == 'SAVED' ||\n                    originalAttachmentDocuments[0]?.originalFilename != null\n                  \"\n                />\n              </div>\n              <div class=\"row\"><br /></div>\n              <div class=\"col-md-12\" appearance=\"outline\">\n                <button\n                  mat-raised-button\n                  class=\"button-red button-right\"\n                  (click)=\"viewS2SupportDoc()\"\n                  *ngIf=\"validateDeleteBtn() || s2SupportDocument\"\n                >\n                  <i class=\"material-icons add-document\">open_in_new</i> VIEW\n                  DOCUMENT\n                </button>\n                &nbsp; &nbsp;\n                <button\n                  mat-raised-button\n                  class=\"button-red button-right\"\n                  (click)=\"deleteS2SupportDoc()\"\n                  *ngIf=\"validateDeleteBtn()\"\n                >\n                  <i class=\"material-icons add-document\">delete</i> DELETE\n                  ATTACHMENT\n                </button>\n                <!-- [hidden]=\"(!showMainDocumentViewButton) ||\n                  (currentUser?.userRole?.name!='ROLE_APPLICANT' && currentUser?.userRole?.name!='ROLE_ENCODER') ||\n                  (currentUser.userRole.name=='ROLE_ENCODER' && s1Application?.internalStatus !== undefined ) ||\n                  applicationStage === 'S2-APPLICATION' || applicationStage === 'S1-Preview' || s1Application?.decisionStatus=='APPROVED'||s1Application?.decisionStatus=='APPROVED W/ CAUTION'\" -->\n\n                &nbsp; &nbsp;\n                <button\n                  mat-raised-button\n                  class=\"button-red button-right\"\n                  (click)=\"uploadDocument()\"\n                  [disabled]=\"!safeURLSupportDoc\"\n                  [hidden]=\"isAscUser && isDisableFieldOnUpdate\"\n                  *ngIf=\"safeURLSupportDoc\"\n                >\n                  <i class=\"material-icons add-document\">upload</i> UPLOAD\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </mat-tab>\n\n      <!-- TAB FOR ORIGINAL -->\n      <mat-tab label=\"ORIGINAL\" *ngIf=\"!S2SupportDoc\">\n        <div class=\"mat-tab\">\n          <div class=\"col comment\">\n            <label>ORIGINAL</label>\n            <!-- MAIN DOCUMENT -->\n            <div class=\"row\">\n              <h4>\n                <i class=\"material-icons\">bookmark</i> &nbsp;{{\n                  labelMainDocument ? labelMainDocument : \"MAIN DOCUMENT\"\n                }}\n              </h4>\n              <br />\n              <div class=\"col-md-12\" appearance=\"outline\">\n                <mat-label\n                  *ngIf=\"originalAttachmentDocuments[0]?.originalFilename\"\n                  >Filename:\n                </mat-label>\n                <input\n                  #mainInput\n                  matInput\n                  [value]=\"originalAttachmentDocuments[0]?.originalFilename\"\n                  disabled\n                  *ngIf=\"originalAttachmentDocuments[0]?.originalFilename\"\n                /><br />\n\n                <input\n                  #mainFile\n                  class=\"file-upload\"\n                  type=\"file\"\n                  accept=\".pdf\"\n                  (change)=\"selectFile($event, 'MAIN')\"\n                  [hidden]=\"\n                    (isAscUser && isDisableFieldOnUpdate) ||\n                    originalAttachmentDocuments[0]?.originalFilename != null\n                  \"\n                  *ngIf=\"\n                    originalAttachmentDocuments?.length == 0 ||\n                    (originalAttachmentDocuments?.length >= 1 &&\n                      originalAttachmentDocuments[0] === null) ||\n                    s1Application?.internalStatus == 'SAVED' ||\n                    originalAttachmentDocuments[0]?.originalFilename != null\n                  \"\n                />\n              </div>\n\n              <div class=\"row\"><br /></div>\n              <div class=\"col-md-12\" appearance=\"outline\">\n                <button\n                  mat-raised-button\n                  class=\"button-red button-right\"\n                  (click)=\"viewDocument('MAIN')\"\n                  *ngIf=\"\n                    showMainDocumentViewButton ||\n                    originalAttachmentDocuments[0]?.originalFilename\n                  \"\n                >\n                  <i class=\"material-icons add-document\">open_in_new</i> VIEW\n                  DOCUMENT\n                </button>\n                &nbsp; &nbsp;\n                <button\n                  mat-raised-button\n                  class=\"button-red button-right\"\n                  (click)=\"deleteUploadedFile('MAIN')\"\n                  [hidden]=\"\n                    (currentUser?.userRole?.name != 'ROLE_APPLICANT' &&\n                      currentUser?.userRole?.name != 'ROLE_ENCODER') ||\n                    (currentUser.userRole.name == 'ROLE_ENCODER' &&\n                      s1Application?.internalStatus !== undefined) ||\n                    applicationStage === 'S2-APPLICATION' ||\n                    applicationStage === 'S1-Preview' ||\n                    s1Application?.decisionStatus == 'APPROVED' ||\n                    s1Application?.decisionStatus == 'APPROVED W/ CAUTION' ||\n                    s1Application?.decisionStatus == 'INCOMPLETE'\n                  \"\n                  *ngIf=\"\n                    showMainDocumentViewButton ||\n                    originalAttachmentDocuments[0]?.originalFilename\n                  \"\n                >\n                  <i class=\"material-icons add-document\">delete</i> DELETE\n                  ATTACHMENT\n                </button>\n                <!-- [hidden]=\"(!showMainDocumentViewButton) ||\n                  (currentUser?.userRole?.name!='ROLE_APPLICANT' && currentUser?.userRole?.name!='ROLE_ENCODER') ||\n                  (currentUser.userRole.name=='ROLE_ENCODER' && s1Application?.internalStatus !== undefined ) ||\n                  applicationStage === 'S2-APPLICATION' || applicationStage === 'S1-Preview' || s1Application?.decisionStatus=='APPROVED'||s1Application?.decisionStatus=='APPROVED W/ CAUTION'\" -->\n\n                &nbsp; &nbsp;\n                <button\n                  mat-raised-button\n                  class=\"button-red button-right\"\n                  (click)=\"uploadDocument()\"\n                  [disabled]=\"!safeURLMainDoc || !showMainDocumentUploadButton\"\n                  [hidden]=\"\n                    (isAscUser && isDisableFieldOnUpdate) ||\n                    (s1Application?.submissionType === 'ORIGINAL' &&\n                      (s1Application?.decisionStatus == 'APPROVED' ||\n                        s1Application?.decisionStatus ==\n                          'APPROVED W/ CAUTION' ||\n                        s1Application?.decisionStatus == 'INCOMPLETE'))\n                  \"\n                  *ngIf=\"\n                    originalAttachmentDocuments[0]?.originalFilename == null ||\n                    showMainDocumentUploadButton\n                  \"\n                >\n                  <i class=\"material-icons add-document\">upload</i> UPLOAD\n                </button>\n              </div>\n              <div class=\"col-md-12\">\n                <hr />\n              </div>\n            </div>\n\n            <!-- SUPPORTING DOC -->\n            <div\n              class=\"row\"\n              *ngIf=\"\n                showSupportDocumentFrame == true ||\n                originalAttachmentDocuments?.length > 0\n              \"\n            >\n              <h4>\n                <i class=\"material-icons\">bookmark</i> &nbsp;SUPPORT DOCUMENTS\n              </h4>\n\n              <!-- Display if no support document was attached -->\n              <div\n                class=\"col-md-12\"\n                appearance=\"outline\"\n                [hidden]=\"\n                  (isAscUser && isDisableFieldOnUpdate) ||\n                  applicationStage === 'S2-APPLICATION'\n                \"\n                *ngIf=\"\n                  ((s1Application?.internalStatus ===\n                    'S1_APPLICATION_REVIEWED' ||\n                    s1Application?.internalStatus ===\n                      'COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER') &&\n                    (s1Application?.decisionStatus == 'APPROVED' ||\n                      s1Application?.decisionStatus == 'APPROVED W/ CAUTION' ||\n                      s1Application?.decisionStatus === 'INCOMPLETE')) ||\n                  originalAttachmentDocuments?.length > 0\n                \"\n              >\n                <mat-checkbox\n                  (click)=\"verifyNoDocumentAttached()\"\n                  [(ngModel)]=\"s1Application.hasNoSupportingDocs\"\n                  (checked)=\"(s1Application.hasNoSupportingDocs)\"\n                  formControlName=\"hasNoSupportingDocs\"\n                  [hidden]=\"\n                    originalAttachmentDocuments[1]?.originalFilename ||\n                    s1Application?.internalStatus ===\n                      'S1_APPLICATION_REVIEWED' ||\n                    s1Application?.internalStatus ===\n                      'COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER' ||\n                    s1Application?.internalStatus === 'REVISION_SCREENED' ||\n                    (s1Application?.internalStatus ===\n                      'S1_APPLICATION_REJECTED' &&\n                      (s1Application?.decisionStatus == 'APPROVED' ||\n                        s1Application?.decisionStatus ==\n                          'APPROVED W/ CAUTION' ||\n                        s1Application?.decisionStatus == 'INCOMPLETE'))\n                  \"\n                  *ngIf=\"\n                    (currentUser.userRole.name == 'ROLE_APPLICANT' &&\n                      originalAttachmentDocuments?.length > 0) ||\n                    (currentUser.userRole.name == 'ROLE_ENCODER' &&\n                      s1Application?.internalStatus === undefined)\n                  \"\n                >\n                  I certify that no supporting document is attached to this S1\n                  application.</mat-checkbox\n                >\n                <br />\n              </div>\n\n              <p\n                [hidden]=\"\n                  originalAttachmentDocuments[1]?.originalFilename ||\n                  (currentUser.userRole.name == 'ROLE_ENCODER' &&\n                    s1Application?.internalStatus === undefined)\n                \"\n                *ngIf=\"\n                  isAscUser ||\n                  currentUser.userRole.name == 'ROLE_ADMIN' ||\n                  currentUser.userRole.name == 'ROLE_SUPER_ADMIN' ||\n                  applicationStage === 'S2-APPLICATION' ||\n                  applicationStage === 'S1-Preview' ||\n                  (s1Application?.internalStatus ===\n                    'S1_APPLICATION_REVIEWED' &&\n                    (s1Application?.decisionStatus == 'APPROVED' ||\n                      s1Application?.decisionStatus ==\n                        'APPROVED W/ CAUTION')) ||\n                  (s1Application?.internalStatus ===\n                    'COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER' &&\n                    s1Application?.decisionStatus === 'INCOMPLETE') ||\n                  (s1Application?.internalStatus === 'REVISION_SCREENED' &&\n                    s1Application?.decisionStatus === 'INCOMPLETE') ||\n                  (currentUser.userRole.name == 'ROLE_APPLICANT' &&\n                    s1Application?.hasNoSupportingDocs &&\n                    s1Application?.internalStatus !== 'SAVED' &&\n                    s1Application?.internalStatus !== undefined)\n                \"\n              >\n                Supporting Document was not submitted.\n              </p>\n              <div class=\"col-md-12\"><br /></div>\n\n              <div\n                *ngIf=\"\n                  !s1Application.hasNoSupportingDocs ||\n                  originalAttachmentDocuments[1]?.originalFilename === null\n                \"\n              >\n                <div class=\"col-md-12\" appearance=\"outline\">\n                  <mat-label\n                    *ngIf=\"originalAttachmentDocuments[1]?.originalFilename\"\n                    >Filename:\n                  </mat-label>\n                  <input\n                    #supportiveInput\n                    matInput\n                    [value]=\"originalAttachmentDocuments[1]?.originalFilename\"\n                    disabled\n                    *ngIf=\"originalAttachmentDocuments[1]?.originalFilename\"\n                  /><br />\n\n                  <input\n                    #supportiveFile\n                    class=\"file-upload\"\n                    type=\"file\"\n                    accept=\".pdf\"\n                    (change)=\"selectFile($event, 'SUPPORTIVE')\"\n                    [hidden]=\"\n                      (isAscUser && isDisableFieldOnUpdate) ||\n                      s1Application.hasNoSupportingDocs ||\n                      originalAttachmentDocuments[1]?.originalFilename !=\n                        null ||\n                      s1Application?.internalStatus ===\n                        'S1_APPLICATION_REVIEWED' ||\n                      (s1Application?.internalStatus ===\n                        'COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER' &&\n                        (s1Application?.decisionStatus === 'APPROVED' ||\n                          s1Application?.decisionStatus ===\n                            'APPROVED W/ CAUTION' ||\n                          s1Application?.decisionStatus === 'INCOMPLETE')) ||\n                      (currentUser.userRole.name == 'ROLE_ENCODER' &&\n                        s1Application?.internalStatus !== undefined) ||\n                      s1Application?.submissionType === 'REVISION' ||\n                      s1Application?.submissionType === 'COMPLIANCE'\n                    \"\n                    *ngIf=\"\n                      originalAttachmentDocuments?.length == 1 ||\n                      (originalAttachmentDocuments?.length > 1 &&\n                        originalAttachmentDocuments[1] === null) ||\n                      originalAttachmentDocuments[1]?.originalFilename !=\n                        null ||\n                      !safeURLSupportDoc ||\n                      !showSupportiveDocumentUploadButton\n                    \"\n                  />\n                </div>\n\n                <div class=\"row\"><br /></div>\n                <div class=\"col-md-12\" appearance=\"outline\">\n                  <button\n                    mat-raised-button\n                    class=\"button-red button-right\"\n                    (click)=\"viewDocument('SUPPORTIVE')\"\n                    *ngIf=\"\n                      showSupportiveDocumentViewButton ||\n                      originalAttachmentDocuments[1]?.originalFilename\n                    \"\n                  >\n                    <i class=\"material-icons add-document\">open_in_new</i> VIEW\n                    DOCUMENT\n                  </button>\n                  &nbsp; &nbsp;\n                  <button\n                    mat-raised-button\n                    class=\"button-red button-right\"\n                    (click)=\"deleteUploadedFile('SUPPORTIVE')\"\n                    [hidden]=\"\n                      (currentUser?.userRole?.name != 'ROLE_APPLICANT' &&\n                        currentUser?.userRole?.name != 'ROLE_ENCODER') ||\n                      (currentUser.userRole.name == 'ROLE_ENCODER' &&\n                        s1Application?.internalStatus !== undefined) ||\n                      applicationStage === 'S2-APPLICATION' ||\n                      applicationStage === 'S1-Preview' ||\n                      s1Application?.decisionStatus == 'APPROVED' ||\n                      s1Application?.decisionStatus == 'APPROVED W/ CAUTION' ||\n                      s1Application?.decisionStatus == 'INCOMPLETE'\n                    \"\n                    *ngIf=\"\n                      showSupportiveDocumentViewButton ||\n                      originalAttachmentDocuments[1]?.originalFilename\n                    \"\n                  >\n                    <i class=\"material-icons add-document\">delete</i> DELETE\n                    ATTACHMENT\n                  </button>\n                  &nbsp; &nbsp;\n                  <button\n                    mat-raised-button\n                    class=\"button-red button-right\"\n                    (click)=\"uploadDocument()\"\n                    [disabled]=\"\n                      !safeURLSupportDoc || !showSupportiveDocumentUploadButton\n                    \"\n                    [hidden]=\"\n                      (isAscUser && isDisableFieldOnUpdate) ||\n                      (s1Application?.submissionType === 'ORIGINAL' &&\n                        (s1Application?.decisionStatus == 'APPROVED' ||\n                          s1Application?.decisionStatus ==\n                            'APPROVED W/ CAUTION' ||\n                          s1Application?.decisionStatus == 'INCOMPLETE'))\n                    \"\n                    *ngIf=\"showSupportiveDocumentUploadButton\"\n                  >\n                    <i class=\"material-icons add-document\">upload</i> UPLOAD\n                  </button>\n                </div>\n                <div class=\"row\"><br /></div>\n                <br />\n              </div>\n            </div>\n\n            <div\n              class=\"no-record\"\n              *ngIf=\"\n                originalAttachmentDocuments?.length === 0 &&\n                originalAttachmentDocuments[0]?.originalFilename === undefined\n              \"\n            >\n              No results found.\n            </div>\n          </div>\n        </div>\n      </mat-tab>\n      <!-- END OF TAB FOR ORIGINAL -->\n\n      <!-- ////////////////////////////////////////// DYNAMIC ////////////////////////////////////////// -->\n\n      <!-- TAB FOR REVISION -->\n      <mat-tab\n        label=\"REVISION\"\n        *ngIf=\"\n          revisionAttachmentDocuments?.length > 0 ||\n          ((s1Application?.internalStatus === 'S1_APPLICATION_REVIEWED' ||\n            s1Application?.internalStatus ===\n              'COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER') &&\n            (s1Application?.decisionStatus == 'APPROVED' ||\n              s1Application?.decisionStatus === 'APPROVED W/ CAUTION') &&\n            applicationStage !== 'S2-APPLICATION')\n        \"\n      >\n        <div class=\"mat-tab\">\n          <div class=\"col comment\">\n            <label>REVISION</label>\n            <!---------- NEW ATTACHMENTS ---------->\n\n            <!-- MAIN DOCUMENT -->\n            <div\n              class=\"row\"\n              [hidden]=\"\n                (isAscUser && isDisableFieldOnUpdate) ||\n                applicationStage === 'S2-APPLICATION' ||\n                (currentUser.userRole.name == 'ROLE_ENCODER' &&\n                  s1Application?.internalStatus !== undefined)\n              \"\n              *ngIf=\"\n                showSupportDocumentFrameR ||\n                tempRevisionAttachmentDocuments?.length > 0 ||\n                ((s1Application?.internalStatus === 'S1_APPLICATION_REVIEWED' ||\n                  s1Application?.internalStatus ===\n                    'COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER') &&\n                  (s1Application?.decisionStatus === 'APPROVED' ||\n                    s1Application?.decisionStatus === 'APPROVED W/ CAUTION'))\n              \"\n            >\n              <h4>\n                <i class=\"material-icons\">bookmark</i> &nbsp;{{\n                  labelMainDocument ? labelMainDocument : \"MAIN DOCUMENT\"\n                }}\n              </h4>\n              <br />\n              <div class=\"col-md-12\" appearance=\"outline\">\n                <mat-label\n                  *ngIf=\"\n                    tempRevisionAttachmentDocuments?.length > 0 &&\n                    tempRevisionAttachmentDocuments[0]?.originalFilename\n                  \"\n                  >Filename:\n                </mat-label>\n                <input\n                  #mainInput\n                  matInput\n                  *ngIf=\"!s1Application?.hasOngoingRevision\"\n                  [value]=\"tempRevisionAttachmentDocuments[0]?.originalFilename\"\n                  disabled\n                /><br />\n\n                <input\n                  #mainFile\n                  class=\"file-upload\"\n                  type=\"file\"\n                  accept=\".pdf\"\n                  (change)=\"selectFile($event, 'MAIN')\"\n                  [hidden]=\"\n                    (isAscUser && isDisableFieldOnUpdate) ||\n                    tempRevisionAttachmentDocuments[0]?.originalFilename\n                  \"\n                  *ngIf=\"\n                    (s1Application?.internalStatus ===\n                      'S1_APPLICATION_REVIEWED' ||\n                      s1Application?.internalStatus ===\n                        'COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER') &&\n                    (s1Application?.decisionStatus === 'APPROVED' ||\n                      s1Application?.decisionStatus === 'APPROVED W/ CAUTION')\n                  \"\n                />\n              </div>\n\n              <div class=\"row\"><br /></div>\n              <div class=\"col-md-12\" appearance=\"outline\">\n                <button\n                  mat-raised-button\n                  class=\"button-red button-right\"\n                  (click)=\"viewDocument('MAIN', false)\"\n                  *ngIf=\"\n                    showMainDocumentViewButton ||\n                    tempRevisionAttachmentDocuments[0]?.originalFilename\n                  \"\n                >\n                  <i class=\"material-icons add-document\">open_in_new</i> VIEW\n                  DOCUMENT\n                </button>\n                &nbsp; &nbsp;\n                <button\n                  mat-raised-button\n                  class=\"button-red button-right\"\n                  (click)=\"deleteUploadedFile('MAIN')\"\n                  *ngIf=\"\n                    showMainDocumentViewButton ||\n                    tempRevisionAttachmentDocuments[0]?.originalFilename\n                  \"\n                >\n                  <i class=\"material-icons add-document\">delete</i> DELETE\n                  ATTACHMENT\n                </button>\n                &nbsp; &nbsp;\n\n                <button\n                  mat-raised-button\n                  class=\"button-red button-right\"\n                  (click)=\"uploadDocument()\"\n                  [disabled]=\"\n                    !safeURLMainDocR || !showMainDocumentUploadButtonR\n                  \"\n                  [hidden]=\"isAscUser && isDisableFieldOnUpdate\"\n                  *ngIf=\"showMainDocumentUploadButtonR\"\n                >\n                  <i class=\"material-icons add-document\">upload</i> UPLOAD\n                </button>\n              </div>\n              <div class=\"col-md-12\">\n                <hr />\n              </div>\n            </div>\n\n            <!-- SUPPORTING DOC -->\n            <div\n              class=\"row\"\n              [hidden]=\"\n                (isAscUser && isDisableFieldOnUpdate) ||\n                applicationStage === 'S2-APPLICATION' ||\n                (currentUser.userRole.name == 'ROLE_ENCODER' &&\n                  s1Application?.internalStatus !== undefined)\n              \"\n              *ngIf=\"\n                showSupportDocumentFrameR ||\n                tempRevisionAttachmentDocuments?.length > 0 ||\n                ((s1Application?.internalStatus === 'S1_APPLICATION_REVIEWED' ||\n                  s1Application?.internalStatus ===\n                    'COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER') &&\n                  (s1Application?.decisionStatus === 'APPROVED' ||\n                    s1Application?.decisionStatus === 'APPROVED W/ CAUTION'))\n              \"\n            >\n              <h4>\n                <i class=\"material-icons\">bookmark</i> &nbsp;SUPPORT DOCUMENTS\n              </h4>\n\n              <!-- Display if no support document was attached -->\n              <div\n                class=\"col-md-12\"\n                appearance=\"outline\"\n                [hidden]=\"\n                  (isAscUser && isDisableFieldOnUpdate) ||\n                  applicationStage === 'S2-APPLICATION'\n                \"\n                *ngIf=\"\n                  tempRevisionAttachmentDocuments?.length < 2 ||\n                  tempRevisionAttachmentDocuments?.length != 2 ||\n                  ((s1Application?.internalStatus ===\n                    'S1_APPLICATION_REVIEWED' ||\n                    s1Application?.internalStatus ===\n                      'COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER') &&\n                    s1Application?.decisionStatus === 'INCOMPLETE')\n                \"\n              >\n                <mat-checkbox\n                  (click)=\"verifyNoDocumentAttached()\"\n                  [(ngModel)]=\"s1Application.hasNoSupportingDocs\"\n                  (checked)=\"(s1Application.hasNoSupportingDocs)\"\n                  formControlName=\"hasNoSupportingDocs\"\n                  [hidden]=\"\n                    tempRevisionAttachmentDocuments[1]?.originalFilename\n                  \"\n                  *ngIf=\"\n                    currentUser.userRole.name == 'ROLE_APPLICANT' ||\n                    (currentUser.userRole.name == 'ROLE_ENCODER' &&\n                      s1Application?.internalStatus === undefined)\n                  \"\n                >\n                  I certify that no supporting document is attached to this S1\n                  application.</mat-checkbox\n                >\n                <br />\n              </div>\n\n              <p\n                *ngIf=\"\n                  (s1Application?.submissionType === 'REVISION' &&\n                    s1Application?.hasNoSupportingDocs &&\n                    s1Application?.internalStatus !== undefined &&\n                    s1Application?.internalStatus !==\n                      'S1_APPLICATION_REVIEWED' &&\n                    s1Application?.decisionStatus !== 'INCOMPLETE') ||\n                  (s1Application?.hasNoSupportingDocs &&\n                    applicationStage === 'S1-Preview')\n                \"\n              >\n                Supporting Document was not submitted.\n              </p>\n              <div class=\"col-md-12\"><br /></div>\n\n              <div *ngIf=\"!s1Application?.hasNoSupportingDocs\">\n                <div class=\"col-md-12\" appearance=\"outline\">\n                  <mat-label\n                    *ngIf=\"\n                      tempRevisionAttachmentDocuments?.length > 0 &&\n                      tempRevisionAttachmentDocuments[1]?.originalFilename\n                    \"\n                    >Filename:\n                  </mat-label>\n                  <input\n                    #supportiveInput\n                    matInput\n                    [value]=\"\n                      tempRevisionAttachmentDocuments[1]?.originalFilename\n                    \"\n                    disabled\n                    *ngIf=\"\n                      tempRevisionAttachmentDocuments?.length > 0 &&\n                      tempRevisionAttachmentDocuments[1]?.originalFilename\n                    \"\n                  /><br />\n\n                  <input\n                    #supportiveFile\n                    class=\"file-upload\"\n                    type=\"file\"\n                    accept=\".pdf\"\n                    (change)=\"selectFile($event, 'SUPPORTIVE')\"\n                    [hidden]=\"\n                      (isAscUser && isDisableFieldOnUpdate) ||\n                      tempRevisionAttachmentDocuments[1]?.originalFilename\n                    \"\n                    *ngIf=\"\n                      tempRevisionAttachmentDocuments?.length <= 2 ||\n                      (tempRevisionAttachmentDocuments?.length == 2 &&\n                        tempRevisionAttachmentDocuments[1] === null) ||\n                      s1Application?.internalStatus == 'SAVED' ||\n                      tempRevisionAttachmentDocuments[1]?.originalFilename !=\n                        null ||\n                      ((s1Application?.internalStatus ==\n                        'S1_APPLICATION_REVIEWED' ||\n                        s1Application?.internalStatus ==\n                          'COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER') &&\n                        (s1Application?.decisionStatus == 'INCOMPLETE' ||\n                          s1Application?.decisionStatus == 'APPROVED' ||\n                          s1Application?.decisionStatus ==\n                            'APPROVED W/ CAUTION'))\n                    \"\n                  />\n                </div>\n\n                <div class=\"row\"><br /></div>\n                <div class=\"col-md-12\" appearance=\"outline\">\n                  <button\n                    mat-raised-button\n                    class=\"button-red button-right\"\n                    (click)=\"viewDocument('SUPPORTIVE', false)\"\n                    *ngIf=\"\n                      showSupportiveDocumentViewButton ||\n                      tempRevisionAttachmentDocuments[1]?.originalFilename\n                    \"\n                  >\n                    <i class=\"material-icons add-document\">open_in_new</i> VIEW\n                    DOCUMENT\n                  </button>\n                  &nbsp; &nbsp;\n                  <button\n                    mat-raised-button\n                    class=\"button-red button-right\"\n                    (click)=\"deleteUploadedFile('SUPPORTIVE')\"\n                    *ngIf=\"\n                      showSupportiveDocumentViewButton ||\n                      tempRevisionAttachmentDocuments[1]?.originalFilename\n                    \"\n                  >\n                    <i class=\"material-icons add-document\">delete</i> DELETE\n                    ATTACHMENT\n                  </button>\n                  &nbsp; &nbsp;\n                  <button\n                    mat-raised-button\n                    class=\"button-red button-right\"\n                    (click)=\"uploadDocument()\"\n                    [hidden]=\"isAscUser && isDisableFieldOnUpdate\"\n                    *ngIf=\"showSupportiveDocumentUploadButton\"\n                  >\n                    <i class=\"material-icons add-document\">upload</i> UPLOAD\n                  </button>\n                  <!-- [disabled]=\"!safeURLSupportDocR||!showSupportiveDocumentUploadButtonR\" -->\n                </div>\n                <div class=\"row\"><br /></div>\n                <br />\n              </div>\n            </div>\n\n            <!-- FOR REVISION - REVISION LETTER -->\n            <div\n              class=\"row\"\n              [hidden]=\"\n                (isAscUser && isDisableFieldOnUpdate) ||\n                applicationStage === 'S2-APPLICATION' ||\n                (currentUser.userRole.name == 'ROLE_ENCODER' &&\n                  s1Application?.internalStatus !== undefined)\n              \"\n              *ngIf=\"\n                (s1Application?.internalStatus === 'S1_APPLICATION_REVIEWED' ||\n                  s1Application?.internalStatus ===\n                    'COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER') &&\n                (s1Application?.decisionStatus == 'APPROVED' ||\n                  s1Application?.decisionStatus == 'APPROVED W/ CAUTION')\n              \"\n              [hidden]=\"\n                s1Application?.appliedS2 || applicationStage === 'S1-Preview'\n              \"\n            >\n              <div class=\"col-md-12\">\n                <hr />\n              </div>\n              <h4>\n                <i class=\"material-icons\">bookmark</i> &nbsp;REVISION LETTER\n              </h4>\n              <br />\n              <div class=\"col-md-12\" appearance=\"outline\">\n                <mat-label\n                  *ngIf=\"\n                    revisionLetterAttachment?.originalFilename ||\n                    (tempRevisionAttachmentDocuments?.length > 0 &&\n                      tempRevisionAttachmentDocuments[1]\n                        ?.revisionLetterAttachmentReference)\n                  \"\n                >\n                  Filename:\n                </mat-label>\n                <input\n                  #revisionLetterInput\n                  matInput\n                  [value]=\"\n                    revisionLetterAttachment?.originalFilename ||\n                    tempRevisionAttachmentDocuments[1]\n                      ?.revisionLetterAttachmentReference ||\n                    tempRevisionAttachmentDocuments[2]\n                      ?.revisionLetterAttachmentReference\n                  \"\n                  disabled\n                  *ngIf=\"revisionLetterAttachment?.originalFilename\"\n                /><br />\n\n                <input\n                  #revisionLetterFile\n                  class=\"file-upload\"\n                  type=\"file\"\n                  accept=\".pdf\"\n                  (change)=\"selectFile($event, 'REVISION_LETTER')\"\n                  [hidden]=\"\n                    (isAscUser && isDisableFieldOnUpdate) ||\n                    revisionLetterAttachment?.originalFilename\n                  \"\n                  *ngIf=\"\n                    tempRevisionAttachmentDocuments?.length == 0 ||\n                    s1Application?.internalStatus == 'SAVED' ||\n                    ((s1Application?.internalStatus ==\n                      'S1_APPLICATION_REVIEWED' ||\n                      s1Application?.internalStatus ==\n                        'COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER') &&\n                      (s1Application?.decisionStatus == 'INCOMPLETE' ||\n                        s1Application?.decisionStatus == 'APPROVED' ||\n                        s1Application?.decisionStatus == 'APPROVED W/ CAUTION'))\n                  \"\n                />\n              </div>\n\n              <div class=\"row\"><br /></div>\n              <div class=\"col-md-12\" appearance=\"outline\">\n                <button\n                  mat-raised-button\n                  class=\"button-red button-right\"\n                  (click)=\"viewDocument('REVISION_LETTER', false)\"\n                  *ngIf=\"showRevisionLetterViewButton\"\n                >\n                  <i class=\"material-icons add-document\">open_in_new</i> VIEW\n                  DOCUMENT\n                </button>\n                &nbsp; &nbsp;\n                <button\n                  mat-raised-button\n                  class=\"button-red button-right\"\n                  (click)=\"deleteUploadedFile('REVISION_LETTER')\"\n                  [hidden]=\"\n                    (currentUser?.userRole?.name != 'ROLE_APPLICANT' &&\n                      currentUser?.userRole?.name != 'ROLE_ENCODER') ||\n                    (currentUser.userRole.name == 'ROLE_ENCODER' &&\n                      s1Application?.internalStatus !== undefined) ||\n                    applicationStage === 'S2-APPLICATION' ||\n                    applicationStage === 'S1-Preview'\n                  \"\n                  *ngIf=\"showRevisionLetterViewButton\"\n                >\n                  <i class=\"material-icons add-document\">delete</i> DELETE\n                  ATTACHMENT\n                </button>\n                &nbsp; &nbsp;\n\n                <button\n                  mat-raised-button\n                  class=\"button-red button-right\"\n                  (click)=\"uploadDocument()\"\n                  [disabled]=\"\n                    !safeURLRevisionLetter || !showRevisionLetterUploadButton\n                  \"\n                  [hidden]=\"isAscUser && isDisableFieldOnUpdate\"\n                  *ngIf=\"showRevisionLetterUploadButton\"\n                >\n                  <i class=\"material-icons add-document\">upload</i> UPLOAD\n                </button>\n              </div>\n              <div class=\"row\"><br /></div>\n              <br />\n              <br />\n            </div>\n\n            <div class=\"row\"><hr /></div>\n\n            <!---------- EXISTING ---------->\n            <div\n              class=\"row\"\n              *ngFor=\"let i of revisionAttachmentDocuments; let index = index\"\n            >\n              <div *ngIf=\"i !== null\">\n                <h4>\n                  <i class=\"material-icons\">bookmark</i> &nbsp;{{\n                    i?.attachmentType\n                      ?.replaceAll(\"SUPPORTIVE\", \"SUPPORTING\")\n                      ?.replaceAll(\"_\", \" \")\n                  }}\n                  DOCUMENT\n                </h4>\n                <br />\n                <div class=\"col-md-12\" appearance=\"outline\">\n                  <mat-label *ngIf=\"i?.originalFilename\">Filename: </mat-label>\n                  <input\n                    #mainInput\n                    matInput\n                    [value]=\"i?.originalFilename\"\n                    disabled\n                    *ngIf=\"i?.originalFilename\"\n                  /><br />\n                </div>\n\n                <div class=\"row\"><br /></div>\n                <div\n                  class=\"col-md-12\"\n                  appearance=\"outline\"\n                  *ngIf=\"\n                    showMainDocumentViewButton ||\n                    i?.mainAttachmentReference ||\n                    i?.supportingAttachmentReference ||\n                    i?.revisionLetterAttachmentReference\n                  \"\n                >\n                  <button\n                    mat-raised-button\n                    class=\"button-red button-right\"\n                    (click)=\"viewDocument2(i)\"\n                  >\n                    <i class=\"material-icons add-document\">open_in_new</i> VIEW\n                    DOCUMENT\n                  </button>\n                  &nbsp; &nbsp;\n                  <button\n                    mat-raised-button\n                    class=\"button-red button-right\"\n                    (click)=\"deleteUploadedFile2(i)\"\n                    *ngIf=\"i?.status === 'UNPROCESSED'\"\n                  >\n                    <i class=\"material-icons add-document\">delete</i> DELETE\n                    ATTACHMENT\n                  </button>\n                  &nbsp; &nbsp;\n                </div>\n                <div class=\"row\"><br /></div>\n                <div class=\"col-md-12\">\n                  <hr />\n                </div>\n              </div>\n            </div>\n\n            <div\n              class=\"no-record\"\n              *ngIf=\"\n                (revisionAttachmentDocuments?.length === 0 &&\n                  revisionAttachmentDocuments[0]?.originalFilename ===\n                    undefined) ||\n                revisionAttachmentDocuments?.length === null\n              \"\n            >\n              No existing attachments for revision.\n            </div>\n          </div>\n        </div>\n      </mat-tab>\n\n      <!-- TAB FOR COMPLIANCE -->\n      <mat-tab\n        label=\"COMPLIANCE\"\n        *ngIf=\"\n          complianceAttachmentDocuments?.length > 0 ||\n          ((s1Application?.internalStatus === 'S1_APPLICATION_REVIEWED' ||\n            s1Application?.internalStatus ===\n              'COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER' ||\n            s1Application?.internalStatus == 'REVISION_SCREENED' ||\n            s1Application?.internalStatus == 'S1_APPLICATION_REJECTED') &&\n            s1Application?.decisionStatus == 'INCOMPLETE' &&\n            applicationStage !== 'S2-APPLICATION')\n        \"\n      >\n        <div class=\"mat-tab\">\n          <div class=\"col comment\">\n            <label>COMPLIANCE</label>\n            <!---------- NEW ATTACHMENTS ---------->\n\n            <!-- MAIN DOCUMENT -->\n            <div\n              class=\"row\"\n              [hidden]=\"\n                (isAscUser && isDisableFieldOnUpdate) ||\n                applicationStage === 'S2-APPLICATION' ||\n                (currentUser.userRole.name == 'ROLE_ENCODER' &&\n                  s1Application?.internalStatus !== undefined)\n              \"\n              *ngIf=\"\n                (s1Application?.internalStatus === 'S1_APPLICATION_REVIEWED' ||\n                  s1Application?.internalStatus ===\n                    'COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER' ||\n                  s1Application?.internalStatus == 'REVISION_SCREENED' ||\n                  s1Application?.internalStatus == 'S1_APPLICATION_REJECTED') &&\n                s1Application?.decisionStatus == 'INCOMPLETE'\n              \"\n            >\n              <h4>\n                <i class=\"material-icons\">bookmark</i> &nbsp;{{\n                  labelMainDocument ? labelMainDocument : \"MAIN DOCUMENT\"\n                }}\n              </h4>\n              <br />\n              <div class=\"col-md-12\" appearance=\"outline\">\n                <mat-label\n                  *ngIf=\"\n                    tempComplianceAttachmentDocuments?.length > 0 &&\n                    tempComplianceAttachmentDocuments[0]?.originalFilename\n                  \"\n                  >Filename:\n                </mat-label>\n                <input\n                  #mainInput\n                  matInput\n                  *ngIf=\"\n                    !s1Application?.hasOngoingRevision ||\n                    tempComplianceAttachmentDocuments?.length == 0\n                  \"\n                  [value]=\"\n                    tempComplianceAttachmentDocuments[0]?.originalFilename\n                  \"\n                  disabled\n                /><br />\n\n                <input\n                  #mainFile\n                  class=\"file-upload\"\n                  type=\"file\"\n                  accept=\".pdf\"\n                  (change)=\"selectFile($event, 'MAIN')\"\n                  [hidden]=\"\n                    (isAscUser && isDisableFieldOnUpdate) ||\n                    tempComplianceAttachmentDocuments[0]?.originalFilename\n                  \"\n                  *ngIf=\"\n                    (s1Application?.internalStatus ===\n                      'S1_APPLICATION_REVIEWED' ||\n                      s1Application?.internalStatus ===\n                        'COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER' ||\n                      s1Application?.internalStatus == 'REVISION_SCREENED' ||\n                      s1Application?.internalStatus ==\n                        'S1_APPLICATION_REJECTED') &&\n                    s1Application?.decisionStatus === 'INCOMPLETE'\n                  \"\n                />\n              </div>\n\n              <div class=\"row\"><br /></div>\n              <div class=\"col-md-12\" appearance=\"outline\">\n                <button\n                  mat-raised-button\n                  class=\"button-red button-right\"\n                  (click)=\"viewDocument('MAIN', false)\"\n                  [hidden]=\"\n                    tempComplianceAttachmentDocuments[0]?.originalFilename ===\n                    null\n                  \"\n                  *ngIf=\"\n                    showMainDocumentViewButtonC ||\n                    tempComplianceAttachmentDocuments[0]?.originalFilename\n                  \"\n                >\n                  <i class=\"material-icons add-document\">open_in_new</i> VIEW\n                  DOCUMENT\n                </button>\n                &nbsp; &nbsp;\n                <button\n                  mat-raised-button\n                  class=\"button-red button-right\"\n                  (click)=\"deleteUploadedFile('MAIN')\"\n                  [hidden]=\"\n                    tempComplianceAttachmentDocuments[0]?.originalFilename ===\n                    null\n                  \"\n                  *ngIf=\"\n                    showMainDocumentViewButtonC ||\n                    tempComplianceAttachmentDocuments[0]?.originalFilename\n                  \"\n                >\n                  <i class=\"material-icons add-document\">delete</i> DELETE\n                  ATTACHMENT\n                </button>\n                &nbsp; &nbsp;\n\n                <button\n                  mat-raised-button\n                  class=\"button-red button-right\"\n                  (click)=\"uploadDocument()\"\n                  [disabled]=\"!safeURLMainDoc || !showMainDocumentUploadButton\"\n                  [hidden]=\"isAscUser && isDisableFieldOnUpdate\"\n                  *ngIf=\"showMainDocumentUploadButton\"\n                >\n                  <i class=\"material-icons add-document\">upload</i> UPLOAD\n                </button>\n              </div>\n              <div class=\"col-md-12\">\n                <hr />\n              </div>\n            </div>\n\n            <!-- SUPPORTING DOC -->\n            <div\n              class=\"row\"\n              [hidden]=\"\n                (isAscUser && isDisableFieldOnUpdate) ||\n                applicationStage === 'S2-APPLICATION' ||\n                (currentUser.userRole.name == 'ROLE_ENCODER' &&\n                  s1Application?.internalStatus !== undefined)\n              \"\n              *ngIf=\"\n                showSupportDocumentFrameC ||\n                tempComplianceAttachmentDocuments?.length > 0 ||\n                ((s1Application?.internalStatus === 'S1_APPLICATION_REVIEWED' ||\n                  s1Application?.internalStatus ===\n                    'COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER' ||\n                  s1Application?.internalStatus == 'REVISION_SCREENED' ||\n                  s1Application?.internalStatus == 'S1_APPLICATION_REJECTED') &&\n                  s1Application?.decisionStatus == 'INCOMPLETE')\n              \"\n            >\n              <h4>\n                <i class=\"material-icons\">bookmark</i> &nbsp;SUPPORT DOCUMENTS\n              </h4>\n\n              <!-- Display if no support document was attached -->\n              <div class=\"col-md-12\" appearance=\"outline\">\n                <mat-checkbox\n                  (click)=\"verifyNoDocumentAttached()\"\n                  [(ngModel)]=\"s1Application.hasNoSupportingDocs\"\n                  (checked)=\"(s1Application.hasNoSupportingDocs)\"\n                  formControlName=\"hasNoSupportingDocs\"\n                  [hidden]=\"\n                    tempComplianceAttachmentDocuments[1]?.originalFilename\n                  \"\n                  *ngIf=\"\n                    currentUser.userRole.name == 'ROLE_APPLICANT' ||\n                    (currentUser.userRole.name == 'ROLE_ENCODER' &&\n                      s1Application?.internalStatus === undefined)\n                  \"\n                >\n                  I certify that no supporting document is attached to this S1\n                  application.</mat-checkbox\n                >\n                <br />\n              </div>\n\n              <p\n                *ngIf=\"\n                  (s1Application?.submissionType === 'COMPLIANCE' &&\n                    s1Application?.hasNoSupportingDocs &&\n                    s1Application?.internalStatus !== undefined &&\n                    s1Application?.internalStatus !==\n                      'S1_APPLICATION_REVIEWED' &&\n                    s1Application?.decisionStatus !== 'INCOMPLETE') ||\n                  (s1Application?.hasNoSupportingDocs &&\n                    applicationStage === 'S1-Preview')\n                \"\n              >\n                Supporting Document was not submitted.\n              </p>\n              <div class=\"col-md-12\"><br /></div>\n\n              <div *ngIf=\"!s1Application?.hasNoSupportingDocs\">\n                <div class=\"col-md-12\" appearance=\"outline\">\n                  <mat-label\n                    *ngIf=\"\n                      tempComplianceAttachmentDocuments?.length > 0 &&\n                      tempComplianceAttachmentDocuments[1]?.originalFilename\n                    \"\n                    >Filename:\n                  </mat-label>\n                  <input\n                    #supportiveInput\n                    matInput\n                    [value]=\"\n                      tempComplianceAttachmentDocuments[1]?.originalFilename\n                    \"\n                    disabled\n                    *ngIf=\"\n                      tempComplianceAttachmentDocuments?.length > 0 &&\n                      tempComplianceAttachmentDocuments[1]?.originalFilename\n                    \"\n                  /><br />\n\n                  <input\n                    #supportiveFile\n                    class=\"file-upload\"\n                    type=\"file\"\n                    accept=\".pdf\"\n                    (change)=\"selectFile($event, 'SUPPORTIVE')\"\n                    [hidden]=\"\n                      (isAscUser && isDisableFieldOnUpdate) ||\n                      tempComplianceAttachmentDocuments[1]?.originalFilename\n                    \"\n                    *ngIf=\"\n                      tempComplianceAttachmentDocuments?.length <= 2 ||\n                      (tempComplianceAttachmentDocuments?.length == 2 &&\n                        tempComplianceAttachmentDocuments[1] === null) ||\n                      s1Application?.internalStatus == 'SAVED' ||\n                      tempComplianceAttachmentDocuments[1]?.originalFilename !=\n                        null ||\n                      ((s1Application?.internalStatus ==\n                        'S1_APPLICATION_REVIEWED' ||\n                        s1Application?.internalStatus ==\n                          'COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER' ||\n                        s1Application?.internalStatus == 'REVISION_SCREENED' ||\n                        s1Application?.internalStatus ==\n                          'S1_APPLICATION_REJECTED') &&\n                        s1Application?.decisionStatus == 'INCOMPLETE')\n                    \"\n                  />\n                </div>\n\n                <div class=\"row\"><br /></div>\n                <div class=\"col-md-12\" appearance=\"outline\">\n                  <button\n                    mat-raised-button\n                    class=\"button-red button-right\"\n                    (click)=\"viewDocument('SUPPORTIVE', false)\"\n                    [hidden]=\"\n                      tempComplianceAttachmentDocuments[1]?.originalFilename ===\n                      null\n                    \"\n                    *ngIf=\"\n                      showSupportiveDocumentViewButtonC ||\n                      tempComplianceAttachmentDocuments[1]?.originalFilename\n                    \"\n                  >\n                    <i class=\"material-icons add-document\">open_in_new</i> VIEW\n                    DOCUMENT\n                  </button>\n                  &nbsp; &nbsp;\n                  <button\n                    mat-raised-button\n                    class=\"button-red button-right\"\n                    (click)=\"deleteUploadedFile('SUPPORTIVE')\"\n                    [hidden]=\"\n                      tempComplianceAttachmentDocuments[1]?.originalFilename ===\n                      null\n                    \"\n                    *ngIf=\"\n                      showSupportiveDocumentViewButtonC ||\n                      tempComplianceAttachmentDocuments[1]?.originalFilename\n                    \"\n                  >\n                    <i class=\"material-icons add-document\">delete</i> DELETE\n                    ATTACHMENT\n                  </button>\n                  &nbsp; &nbsp;\n                  <button\n                    mat-raised-button\n                    class=\"button-red button-right\"\n                    (click)=\"uploadDocument()\"\n                    [hidden]=\"isAscUser && isDisableFieldOnUpdate\"\n                    *ngIf=\"showSupportiveDocumentUploadButton\"\n                  >\n                    <i class=\"material-icons add-document\">upload</i> UPLOAD\n                  </button>\n                </div>\n                <div class=\"row\"><br /></div>\n                <br />\n              </div>\n            </div>\n\n            <div class=\"row\"><hr /></div>\n\n            <!---------- EXISTING ---------->\n            <div\n              class=\"row\"\n              *ngFor=\"let i of complianceAttachmentDocuments; let index = index\"\n            >\n              <div *ngIf=\"i !== null\">\n                <h4>\n                  <i class=\"material-icons\">bookmark</i> &nbsp;{{\n                    i?.attachmentType\n                      ?.replaceAll(\"SUPPORTIVE\", \"SUPPORTING\")\n                      ?.replaceAll(\"_\", \" \")\n                  }}\n                  DOCUMENT\n                </h4>\n                <br />\n                <div class=\"col-md-12\" appearance=\"outline\">\n                  <mat-label *ngIf=\"i?.originalFilename\">Filename: </mat-label>\n                  <input\n                    #mainInput\n                    matInput\n                    [value]=\"i?.originalFilename\"\n                    disabled\n                    *ngIf=\"i?.originalFilename\"\n                  /><br />\n                </div>\n\n                <div class=\"row\"><br /></div>\n                <div\n                  class=\"col-md-12\"\n                  appearance=\"outline\"\n                  *ngIf=\"\n                    showMainDocumentViewButton ||\n                    i?.mainAttachmentReference ||\n                    i?.supportingAttachmentReference ||\n                    i?.revisionLetterAttachmentReference\n                  \"\n                >\n                  <button\n                    mat-raised-button\n                    class=\"button-red button-right\"\n                    (click)=\"viewDocument(i.attachmentType)\"\n                  >\n                    <i class=\"material-icons add-document\">open_in_new</i> VIEW\n                    DOCUMENT\n                  </button>\n                  &nbsp; &nbsp;\n                  <button\n                    mat-raised-button\n                    class=\"button-red button-right\"\n                    (click)=\"deleteUploadedFile2(i)\"\n                    *ngIf=\"i?.status === 'UNPROCESSED'\"\n                  >\n                    <i class=\"material-icons add-document\">delete</i> DELETE\n                    ATTACHMENT\n                  </button>\n                  &nbsp; &nbsp;\n                </div>\n                <div class=\"col-md-12\"><br /></div>\n                <div class=\"col-md-12\">\n                  <hr />\n                </div>\n              </div>\n            </div>\n\n            <div\n              class=\"no-record\"\n              *ngIf=\"\n                (complianceAttachmentDocuments?.length === 0 &&\n                  complianceAttachmentDocuments[0]?.originalFilename ===\n                    undefined) ||\n                complianceAttachmentDocuments?.length === null\n              \"\n            >\n              No existing attachments for compliance.\n            </div>\n          </div>\n        </div>\n      </mat-tab>\n      <!-- END OF TAB FOR COMPLIANCE -->\n    </mat-tab-group>\n  </form>\n</div>\n","import { USER_ROLES } from './../../../../shared/utils/constants';\nimport { Component, OnInit, Input } from '@angular/core';\nimport { S1Application, AttachmentDocument, Payment, PaymentType } from '@models';\nimport { ATTACHMENT_TYPE, ENDPOINTS, PAYMENT_STATUS, SUBMISSION_TYPE } from '@shared';\nimport { SweetAlertService, DataStorageService, ApiService } from '@services';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport Swal from 'sweetalert2';\nimport { FileStorageService } from '../../../../core/services/file.storage.service';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'app-upload-payment',\n  templateUrl: './upload-payment.component.html',\n  styleUrls: ['./upload-payment.component.scss']\n})\nexport class UploadPaymentComponent implements OnInit {\n  @Input() s1Application = new S1Application();\n  payment = new Payment();\n  safeURLProofOfPayment: any;\n  selectedFiles: any;\n  previewDocument = false;\n  attachmentDocument = new AttachmentDocument();\n  currentUser: any;\n  attachmentDocuments = [];\n  isSubmitted = false;\n  paymentTypeList = [];\n  paymentType : any;\n  paymentForm: FormGroup;\n\n  constructor(\n    private sanitizer: DomSanitizer,\n    private apiService: ApiService,\n    public dataStorage: DataStorageService,\n    private fileStorageService: FileStorageService,\n    private router: Router,\n    private formBuilder: FormBuilder,\n    private sweetAlertService: SweetAlertService\n  ) { }\n\n  ngOnInit(): void {\n    console.log('Upload Payment');\n    this.currentUser = this.dataStorage.getUserAccount();\n    this.getPaymentList();\n    this.setFormValidator();\n  }\n\n  setFormValidator(): void {\n    this.paymentForm = this.formBuilder.group({\n      remarks: ['']\n    });\n  }\n\n  selectFile(event) {\n    const attachmentSize = event.target.files[0].size;\n\n    if (event.target.files[0].type === 'application/pdf') {\n      if (attachmentSize > 15000000) { // 1MB = 1M\n        this.sweetAlertService.customErrorMessage(`Attachments' total file size should not exceed 15MB.`);\n        event.target.value = '';\n        return;\n      } else {\n        const pdfURL = URL.createObjectURL(event.target.files[0]);\n        this.safeURLProofOfPayment = this.sanitizer.bypassSecurityTrustResourceUrl(pdfURL);\n        this.previewDocument = true;\n\n        // env.showSpinner = true;\n        const reader = new FileReader();\n        const [file] = event.target.files;\n\n        reader.readAsDataURL(file);\n        reader.onload = () => {\n        };\n      }\n\n      this.selectedFiles = event.target.files;\n    } else {\n      this.sweetAlertService.customErrorMessage('Attachment should be in PDF format only.');\n      event.target.value = '';\n      return;\n    }\n  }\n\n  uploadDocument(s1Application) {\n    Swal.fire({\n      text: 'Are you sure you want to submit this PROOF OF PAYMENT?',\n      icon: 'question',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Confirm'\n    }).then((result) => {\n      if (result.value) {\n        this.dataStorage.setDisplayProgressbar(true);\n        let params = '';\n        params = '?&attachmentType=' + ATTACHMENT_TYPE.PAYMENT + '&submissionType=' + SUBMISSION_TYPE.ORIGINAL;\n        this.fileStorageService.pushFileToStorage(ENDPOINTS.attachmentDocument, this.selectedFiles.item(0), params)\n        .subscribe(res => {\n            const obj = res.responseData.data;\n            console.log(obj);\n            this.s1Application.paymentAttachmentReference = obj.paymentAttachmentReference;\n            this.payment.paymentAttachmentReference = obj.paymentAttachmentReference;\n            this.payment.amountDue = s1Application.amount;\n            this.payment.applicationForm = s1Application;\n            this.payment.appFormReference = s1Application.appFormReference;\n            this.payment.filename = obj.filename;\n            this.saveProofOfPayment();\n            // this.previewDocument = true;\n            this.selectedFiles = undefined;\n          }, (err: any) => {\n            this.sweetAlertService.error(err);\n          }, () => {\n            // actions after subscription\n            this.dataStorage.setDisplayProgressbar(false);\n          });\n      }\n    });\n  }\n\n  saveProofOfPayment() {\n    console.log('Saving payment...');\n    this.dataStorage.setDisplayProgressbar(true);\n    this.payment.paymentStatus = PAYMENT_STATUS.UNPAID;\n    this.s1Application.paymentStatus = PAYMENT_STATUS.UNPAID;\n    this.payment.id = 0;\n    this.payment.officialReceiptNo = '';\n    this.payment.paymentMethod = null;\n    console.log('PAYMENT : ', this.payment);\n    console.log('S1 ',this.s1Application);\n\nreturn false\n    this.apiService.save(`${ENDPOINTS.applicationFormPresentor}payment-type-id/${this.paymentType.id}/payment/submit`, this.payment)\n    .subscribe((res: any) => {\n        console.log('SAVED STATUS: ', res.responseData.data);\n\n      this.safeURLProofOfPayment = this.sanitizer.bypassSecurityTrustResourceUrl(res.responseData.data.fileURL);\n      this.router.navigate(['asc/page/application/s1/lists']);\n        this.isSubmitted = true;\n        this.sweetAlertService.customSuccessMessage('Proof of payment successfully submitted.');\n      }, (err) => {\n        console.log(err);\n        this.sweetAlertService.error(err);\n        this.dataStorage.setDisplayProgressbar(false);\n      }, () => {\n        this.dataStorage.setDisplayProgressbar(false);\n      });\n  }\n\n  getPaymentList() {\n    this.apiService.findAll(ENDPOINTS.paymentType).subscribe((res: any) => {\n      this.paymentTypeList = res.responseData.data;\n      if (this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT) {\n        const creditCardIndex = this.paymentTypeList\n          .findIndex((element) => element.paymentDescription === 'Credit Card');\n        this.paymentTypeList.splice(creditCardIndex, 1);\n      }\n    });\n  }\n  selectedPaymentType(res){\n    let pt = new PaymentType();\n    pt  = res;\n    this.paymentType = pt;\n  }\n\n}\n","\n  <div class=\"row fields\">\n    <h4>\n      <i class=\"material-icons\">label_important</i> &nbsp;Proof of Payment\n    </h4>\n    <br>\n    <div class=\"col-md-4\" appearance=\"outline\">\n      <mat-label>Filename: </mat-label><br>\n      <input class=\"file-upload\" type=\"file\" accept=\".pdf\" (change)=\"selectFile($event)\" [hidden]=\"isSubmitted==true\"><br><br>\n\n      <div class=\"col-md-10\">\n        <div class=\"col-md-5\" appearance=\"outline\">\n          <mat-label>Amount Due:</mat-label>\n            <input type=\"text\" [(ngModel)]=\"s1Application.amount\" class=\"form-control amountDue\" [disabled]=\"true\" name=\"amountDue\">\n        </div>\n        <br>\n        <mat-form-field class=\"col-md-8\" appearance=\"outline\">\n          <mat-label>Payment Mode<span class=\"required-field\"> <mat-icon>notification_important</mat-icon>\n          </span></mat-label>\n          <mat-select [(ngModel)]=\"payment.paymentMethod\" name=\"paymentMethod\">\n            <mat-option *ngFor=\"let i of paymentTypeList\" [value]=\"i\" (click)=\"selectedPaymentType(i)\">\n              {{i.paymentDescription}}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n        <br>\n        <form [formGroup]=\"paymentForm\">\n        <div class=\"col-md-12\" appearance=\"outline\">\n          <mat-label>Remarks:</mat-label>\n          <textarea width=\"20\"  height=\"20\" [(ngModel)]=\"payment.remarks\" class=\"form-control\" name=\"remarks\" formControlName=\"remarks\"></textarea>\n        </div>\n\n</form>\n\n      </div>\n      <br><br>\n      <!-- <button mat-raised-button class=\"button-red button-right\" (click)=\"uploadDocument()\" *ngIf=\"enableUploadButton==true\">\n        <i class=\"material-icons add-document\">upload</i> UPLOAD\n      </button> -->\n    </div>\n    <div class=\"col-md-8\" appearance=\"outline\" *ngIf=\"previewDocument==true\">\n      <div class=\"file-upload\">\n        <object [data]=\"safeURLProofOfPayment\" type=\"application/pdf\" width=\"100%\" height=\"400\">\n          <iframe [src]=\"safeURLProofOfPayment\" width=\"100%\" height=\"400\">\n            <p>This browser does not support PDF!</p>\n          </iframe>\n        </object>\n      </div>\n    </div>\n    <div class=\"row\"><br></div>\n    <div class=\"col-md-12\" appearance=\"outline\" [hidden]=\"isSubmitted==true\">\n        <button mat-raised-button class=\"button-red button-right\" (click)=\"uploadDocument(s1Application)\" *ngIf=\"previewDocument==true\" [disabled]=\"!paymentType\">\n            <i class=\"material-icons add-document\">save</i> SUBMIT\n        </button>\n    </div>\n    <div class=\"row\"><br></div>\n  </div>\n","import { Component, ElementRef, Inject, OnInit, Optional, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { S1Application } from '@models';\nimport { ApiService, DataStorageService } from '@services';\nimport { APPFORM_TYPE, ENDPOINTS, FORM_TYPE } from '@shared';\nimport { NumberOfMultipleApplicationAllowed } from 'app/core/models/numberOfMultipleApplicationAllowed.model';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-s1-form-type',\n  templateUrl: './s1-form-type.component.html',\n  styleUrls: ['./s1-form-type.component.scss']\n})\nexport class S1FormTypeComponent implements OnInit {\n\n  s1Application = new S1Application();\n  numberOfMultipleApplicationAllowed = new NumberOfMultipleApplicationAllowed();\n  applicationTypeList = [];\n  formTypeList = [...FORM_TYPE];\n\n  s1ApplicationForm: FormGroup;\n\n  numberOfApplications: number;\n  showNumberOfApplications = false;\n  isMultiple = false;\n  isSpecial = false;\n  isPresentation = false;\n\n  constructor(\n    private apiService: ApiService,\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private dataStorage: DataStorageService,\n    private dialog: MatDialog,\n    @Optional() public dialogRef: MatDialogRef<S1FormTypeComponent>,\n    @Optional() @Inject(MAT_DIALOG_DATA) public data: any\n  ) { }\n\n  ngOnInit(): void {\n    this.setFormValidator('');\n    this.getApplicationTypeList();\n    this.s1Application.formType = 'INDIVIDUAL';\n    this.getNoOfMultipleApplicationsAllowed();\n  }\n\n  getNoOfMultipleApplicationsAllowed(): void {\n    this.apiService.findAll(ENDPOINTS.noOfMultipleApplicationAllowed).subscribe((res: any) => {\n      this.numberOfMultipleApplicationAllowed = res.responseData.data[0];\n    });\n  }\n\n  getApplicationTypeList() {\n    this.s1Application.applicationType = null;\n    this.applicationTypeList = [];\n    this.apiService.findAll(ENDPOINTS.applicationType).subscribe((res: any) => {\n      this.applicationTypeList = res.responseData.data;\n    });\n  }\n\n  setAsMultiple() {\n    this.isMultiple = !this.isMultiple;\n    this.showNumberOfApplications = !this.showNumberOfApplications;\n    if (this.isMultiple) {\n      this.s1Application.formType = APPFORM_TYPE.MULTIPLE;\n      this.setFormValidator('multiple')\n    } else {\n      this.setFormValidator('');\n      this.s1Application.formType = APPFORM_TYPE.INDIVIDUAL;\n    }\n  }\n\n  checkType() {\n    if (this.s1Application.applicationType.description.toLocaleLowerCase().includes('special')) {\n      this.isSpecial = true;\n    } else {\n      this.isSpecial = false;\n    }\n\n    if (this.isMultiple) {\n      this.setFormValidator('multiple');\n    }\n\n  }\n\n  setFormValidator(apptype): void {\n    let formtype;\n    if (this.s1Application.formType) {\n      formtype = this.s1Application.formType;\n    }\n\n    if (apptype === 'multiple') {\n      this.s1ApplicationForm = this.formBuilder.group({\n        formType: [formtype, Validators.required],\n        applicationType: [this.s1Application.applicationType, Validators.required],\n        numberOfApplications: [\n          '', [\n            Validators.required,\n            Validators.min(parseInt(this.numberOfMultipleApplicationAllowed.minimum.toString(), null)),\n            Validators.max(parseInt(this.numberOfMultipleApplicationAllowed.maximum.toString(), null))\n          ]\n        ],\n      });\n    } else {\n      this.s1ApplicationForm = this.formBuilder.group({\n        applicationType: [this.s1Application.applicationType, Validators.required],\n      });\n      this.showNumberOfApplications = false;\n    }\n  }\n\n  proceedS1Application(): void {\n    if (!this.isMultiple) {\n      Swal.fire({\n        text: 'Note: The application to be created is an individual application',\n        icon: 'info',\n        showCancelButton: true,\n        confirmButtonColor: '#3085d6',\n        cancelButtonColor: '#d33',\n        confirmButtonText: 'PROCEED'\n      }).then((result) => {\n        if (result.value) {\n          this.navigateToS1Application();\n        }\n      });\n      return;\n    }\n\n    this.navigateToS1Application();\n  }\n\n  navigateToS1Application(): void {\n    this.router.navigate(['/asc/page/application/s1/add']);\n    const formAndAppType = {\n      formType: this.s1Application.formType,\n      appType: this.s1Application.applicationType\n    }\n\n    this.dataStorage.setS1FormAndAppType(formAndAppType);\n    this.dataStorage.setNumberOfApplications(this.numberOfApplications);\n    this.closeModal();\n  }\n\n  setAsForPresentation() {\n    this.isPresentation = !this.isPresentation;\n    if (this.isPresentation) {\n      Swal.fire({\n        text: 'Note: Please be present or available during presentation period.',\n        icon: 'info',\n        showCancelButton: true,\n        confirmButtonColor: '#3085d6',\n        cancelButtonColor: '#d33',\n        confirmButtonText: 'PROCEED'\n      }).then((result) => {\n        if (result.value) {\n          this.s1Application.formType = APPFORM_TYPE.FOR_PRESENTATION;\n          this.proceedS1Application();\n        }\n      });\n    }\n  }\n\n  closeModal(): void {\n    this.dialogRef.close();\n  }\n\n}\n","<div id=\"form-type-modal\" class=\"row\" [formGroup]=\"s1ApplicationForm\">\n    <h1>New S1 Application</h1>\n    <hr>\n    <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n        <mat-label>Application Type</mat-label>\n        <mat-select [(ngModel)]=\"s1Application.applicationType\" name=\"applicationType\" formControlName=\"applicationType\"\n            [disabled]=\"s1Application?.internalStatus!='SAVED'&&s1Application?.internalStatus!=undefined\" (selectionChange)=\"checkType()\">\n            <mat-option *ngFor=\"let i of applicationTypeList\" [value]=\"i\">\n                {{i?.description | uppercase}}\n            </mat-option>\n        </mat-select>\n    </mat-form-field>\n\n    <div class=\"col-md-6\">\n      <mat-checkbox (click)=\"setAsMultiple()\" [disabled]=\"isPresentation || s1Application.applicationType === null || s1Application.applicationType === undefined\"\n      [ngStyle]=\"{'pointer-events': (isPresentation || s1Application.applicationType === null || s1Application.applicationType === undefined) ? 'none' : ''}\">\n      Multiple Application</mat-checkbox>\n    </div>\n    <div class=\"col-md-6\">\n      <mat-checkbox  (click)=\"setAsForPresentation()\" [disabled]=\"isMultiple || (s1Application.applicationType === null || s1Application.applicationType === undefined)\"\n      [ngStyle]=\"{'pointer-events': (isMultiple || (s1Application.applicationType === null || s1Application.applicationType === undefined ) ) ? 'none' : ''}\"\n      >For Presentation</mat-checkbox>\n    </div>\n\n    <!-- <mat-form-field class=\"col-md-12\" appearance=\"outline\" *ngIf=\"isMultiple\">\n      <mat-label>Form Type</mat-label>\n      <mat-select [(ngModel)]=\"s1Application.formType\" name=\"formType\" formControlName=\"formType\"\n      [disabled]=\"s1Application?.internalStatus!='SAVED'&&s1Application?.internalStatus!=undefined\">\n      <mat-option *ngFor=\"let i of formTypeList\" [value]=\"i.description\" (click)=\"getApplicationTypeList()\">\n        {{i?.description | uppercase}}\n      </mat-option>\n    </mat-select>\n  </mat-form-field> -->\n\n  <mat-form-field class=\"col-md-12\" appearance=\"outline\" *ngIf=\"showNumberOfApplications && s1Application?.applicationType?.description\">\n    <mat-label>Number of Applications</mat-label>\n    <input matInput [(ngModel)]=\"numberOfApplications\" formControlName=\"numberOfApplications\">\n    <mat-hint>{{numberOfMultipleApplicationAllowed.minimum}} - {{numberOfMultipleApplicationAllowed.maximum}} only</mat-hint>\n  </mat-form-field>\n\n  <div class=\"col-md-12 mt-2\" *ngIf=\"isMultiple||isSpecial\">\n    <i>Note: This application type needs Request for Approval.</i>\n  </div>\n\n  <div class=\"col-md-12\"><br></div>\n\n  <div class=\"col-md-12 action_items\">\n    <button class=\"button-red col-md-5\" mat-raised-button\n            (click)=\"proceedS1Application()\" [disabled]=\"!s1ApplicationForm.valid||!s1Application.applicationType\">\n            <i class=\"material-icons color__white\">send</i> Proceed\n        </button>\n\n        <button class=\"button-red col-md-5\" mat-raised-button (click)=\"closeModal()\">\n            <i class=\"material-icons color__white\">cancel</i> Cancel\n        </button>\n    </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ReassignmentComponent } from './reassignment.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ReassignmentComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ReassignmentRoutingModule { }\n","import { AngularEditorConfig } from './../editor/lib/config';\nimport { CommentThread } from './../../../../core/models/comments.model';\nimport { DatePipe } from '@angular/common';\nimport { Component, Inject, Input, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { COMMENT_TYPE, APPFORM_TYPE, APPLICATION_STAGE, APPLICATION_STATUS_FOR_COMPLIANCE, APPLICATION_STATUS } from '@shared';\nimport { S1Application, S2Application } from '@models';\nimport { ApiService, DataStorageService, SweetAlertService } from '@services';\nimport { ENDPOINTS } from '@shared';\nimport Swal from 'sweetalert2';\nimport { Comment } from '../../../../core/models/comment.model';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CopyClaims } from 'app/core/models/copy-claims.model';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-comment',\n  templateUrl: './comment.component.html',\n  styleUrls: ['./comment.component.scss']\n})\nexport class CommentComponent implements OnInit {\n  @Input() commentS1Application = new S1Application();\n  @Input() commentS2Application = new S2Application();\n  @Input() sampleDataTransfer;\n\n\n  comment = new Comment();\n  internalComment:CommentThread = new CommentThread();\n  externalComment:CommentThread = new CommentThread();\n  copyClaims = new CopyClaims();\n  commentForm: FormGroup;\n  todayDate: Date = new Date();\n  commentList = [];\n  internalCommentList:Array<CommentThread> = new Array<CommentThread>();\n  externalCommentList:Array<CommentThread> = new Array<CommentThread>();\n  replyInternalComment:CommentThread = new CommentThread();\n  copyClaimsList = [];\n  commentId: number = 0;\n  commentTypeList = [...COMMENT_TYPE];\n  commentType = '';\n  applicationStage: string;\n  internalCommentProcess = 'Save';\n  externalCommentProcess = 'Save';\n  copyClaimesProcess = 'Save';\n  id: any;\n  commentHtmlOutput: string;\n  disabledComment = false;\n\n  currentUser: any;\n  editCopyClaimsComment = false;\n  editExternalComment = false;\n\n  replyEditorConfig: AngularEditorConfig = {\n    editable: true,\n    spellcheck: true,\n    height: '13m',\n    minHeight: '0',\n    maxHeight: 'auto',\n    width: 'auto',\n    minWidth: '0',\n    translate: 'no',\n    enableToolbar: true,\n    showToolbar: true,\n    placeholder: 'Enter reply here...',\n    defaultParagraphSeparator: 'p',\n    defaultFontName: 'Calibri',\n    defaultFontSize: '3',\n    fonts: [\n      { class: 'arial', name: 'Arial' },\n      { class: 'times-new-roman', name: 'Times New Roman' },\n      { class: 'calibri', name: 'Calibri' },\n      { class: 'comic-sans-ms', name: 'Comic Sans MS' }\n    ],\n\n    customClasses: [\n      {\n        name: 'quote',\n        class: 'quote',\n      },\n      {\n        name: 'redText',\n        class: 'redText'\n      },\n      {\n        name: 'titleText',\n        class: 'titleText',\n        tag: 'h1',\n      },\n    ],\n    uploadUrl: 'v1/image',\n    // upload: (file: File) => { ... }\n    uploadWithCredentials: false,\n    sanitize: true,\n    toolbarPosition: 'top',\n    toolbarHiddenButtons: [\n      ['link',\n        'unlink',\n        'insertImage',\n        'insertVideo',],\n    ]\n  }\n\n  editorConfig: AngularEditorConfig = {\n    editable: true,\n    spellcheck: true,\n    height: '15em',\n    minHeight: '0',\n    maxHeight: 'auto',\n    width: 'auto',\n    minWidth: '0',\n    translate: 'no',\n    enableToolbar: true,\n    showToolbar: true,\n    placeholder: 'Enter text here...',\n    defaultParagraphSeparator: 'p',\n    defaultFontName: 'Calibri',\n    defaultFontSize: '3',\n    fonts: [\n      { class: 'arial', name: 'Arial' },\n      { class: 'times-new-roman', name: 'Times New Roman' },\n      { class: 'calibri', name: 'Calibri' },\n      { class: 'comic-sans-ms', name: 'Comic Sans MS' }\n    ],\n\n    customClasses: [\n      {\n        name: 'quote',\n        class: 'quote',\n      },\n      {\n        name: 'redText',\n        class: 'redText'\n      },\n      {\n        name: 'titleText',\n        class: 'titleText',\n        tag: 'h1',\n      },\n    ],\n    uploadUrl: 'v1/image',\n    // upload: (file: File) => { ... }\n    uploadWithCredentials: false,\n    sanitize: true,\n    toolbarPosition: 'top',\n    toolbarHiddenButtons: [\n      ['link',\n        'unlink',\n        'insertImage',\n        'insertVideo',],\n    ]\n  };\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private dataStorageService: DataStorageService,\n    private sweetAlertService: SweetAlertService,\n    private dataStorage: DataStorageService,\n    private apiService: ApiService,\n    public datepipe: DatePipe,\n    private spinner: NgxSpinnerService,\n    private route: ActivatedRoute,\n    private dialog: MatDialog,\n  ) { }\n\n  ngOnInit(): void {\n\n    this.setFormValidator();\n    this.id = Number(this.route.snapshot.paramMap.get('id'));\n    this.currentUser = this.dataStorage.getUserAccount();\n    console.log(this.applicationStage);\n\n    if ((!this.commentS1Application.screenerDecisionComment && !this.commentS1Application.reviewerDecisionComment &&\n      (this.commentS1Application.releaseStatus === 'FOR_RELEASE' || this.commentS1Application.releaseStatus === 'RELEASED') &&\n      this.currentUser.userRole.name !== 'ROLE_REVIEWER')\n      || this.commentS1Application.internalStatus === APPLICATION_STATUS.S1_APPLICATION_REJECTED) {\n      this.disabledComment = true;\n    }\n\n\n    // if(this.applicationStage != APPLICATION_STAGE.S2_APPLICATION){\n    //     this.getComments('');\n    // }\n    this.getComments();\n    this.getCopyClaims();\n  }\n\n  addInternalComment(comment: CommentThread): void {\n    let endpoint;\n    if (this.applicationStage === APPLICATION_STAGE.S2_APPLICATION) {\n      endpoint = ENDPOINTS.commentS2\n      this.internalComment.applicationFormType = APPFORM_TYPE.S2;\n      this.internalComment.applicationFormS2 = this.commentS2Application;\n      console.log('S2 Comment Object', this.internalComment);\n    } else {\n      endpoint = ENDPOINTS.comment\n      this.internalComment.applicationFormType = APPFORM_TYPE.S1;\n      this.internalComment.appFormReference = this.commentS1Application.appFormReference;\n      console.log('S1 Comment Object', this.internalComment);\n    }\n\n    if (this.internalCommentProcess === 'Save') {\n      this.spinner.show();\n      comment.actionBy = this.currentUser;\n      comment.role = this.dataStorageService.getUserRole();\n      comment.actionDate = new Date();\n      comment.commentType = 'INTERNAL';\n      comment.comment = this.setHtml5Value(comment.comment);\n      this.internalCommentList.push(comment);\n\n      this.apiService.save(endpoint, comment).subscribe(\n        (res: any) => {\n          console.log('RES', res);\n          if (res !== undefined) {\n            this.spinner.hide();\n            this.sweetAlertService.customSuccessMessage('Internal Comment has been added!');\n            this.internalComment = new CommentThread();\n            this.getComments();\n            this.getCommentsS2(res.responseData.data.applicationFormS2);\n          }\n        }, (err: any) => {\n          this.spinner.hide();\n          console.log('errrrrrrrr:::', err);\n\n          this.sweetAlertService.error(err);\n        }, () => {\n          this.spinner.hide();\n          this.comment = new Comment();\n        })\n\n    } else {\n      let dateTransformed = this.datepipe.transform(new Date(), 'yyyy-MM-dd')\n\n      Swal.fire({\n        text: 'Are you sure you want to update this comment?',\n        icon: 'question',\n        showCancelButton: true,\n        confirmButtonColor: '#3085d6',\n        cancelButtonColor: '#d33',\n        confirmButtonText: 'Confirm'\n      }).then((result) => {\n        if (result.value) {\n          this.spinner.show();\n          // this.internalComment.modifiedBy = this.currentUser.username\n          // this.internalComment.modifiedDate = new Date();\n          this.internalComment.comment = this.setHtml5Value(this.internalComment.comment);\n          this.apiService.update(endpoint, this.internalComment).subscribe(\n            (res: any) => {\n              // this.internalCommentList = res.responseData.data;\n              this.spinner.hide();\n              this.sweetAlertService.customSuccessMessage('Internal Comment has been Updated!');\n              this.internalComment = new CommentThread();\n              this.internalCommentProcess = 'Save';\n              this.getComments();\n              this.getCommentsS2(res.responseData.data.applicationFormS2);\n            }, (err: any) => {\n              this.spinner.hide();\n            });\n        }\n\n      });\n    }\n\n  }\n\n  sendReply(comment: CommentThread){\n    \n    console.log(this.replyInternalComment)\n    // this.replyInternalComment.parent = comment;\n    this.replyInternalComment.isReply = true;\n    this.replyInternalComment.parentId = comment.id;\n    this.addInternalComment(this.replyInternalComment);\n\n  }\n  cancelReply(comment: CommentThread){\n    comment = new CommentThread();\n    comment.replyEditorIsEnabled = false;\n  }\n\n  addExternalComment(): void {\n    let endpoint;\n    if (this.applicationStage === APPLICATION_STAGE.S2_APPLICATION) {\n      endpoint = ENDPOINTS.commentS2\n      this.externalComment.applicationFormType = APPFORM_TYPE.S2;\n      this.externalComment.applicationFormS2 = this.commentS2Application;\n    } else {\n      endpoint = ENDPOINTS.comment\n      this.externalComment.applicationFormType = APPFORM_TYPE.S1;\n      this.externalComment.appFormReference = this.commentS1Application.appFormReference;\n    }\n\n    if (this.externalCommentProcess === 'Save') {\n      this.spinner.show();\n      this.externalComment.actionBy = this.currentUser;\n      this.externalComment.role = this.dataStorageService.getUserRole();\n      this.externalComment.actionDate = new Date();\n      this.externalComment.commentType = 'EXTERNAL';\n      this.externalComment.comment = this.setHtml5Value(this.externalComment.comment);\n      this.externalCommentList.push(this.externalComment);\n\n      this.apiService.save(endpoint, this.externalComment).subscribe(\n        (res: any) => {\n          if (res !== undefined) {\n            this.spinner.hide();\n            this.sweetAlertService.customSuccessMessage('External Comment has been added!');\n            this.externalComment = new CommentThread();\n            this.editExternalComment = false;\n            this.getComments();\n            this.getCommentsS2(res.responseData.data.applicationFormS2);\n          }\n        }, (err: any) => {\n          this.spinner.hide();\n          console.log('errrrrrrrr:::', err);\n\n          this.sweetAlertService.error(err);\n        }, () => {\n          this.spinner.hide();\n          this.comment = new Comment();\n        })\n\n    } else {\n      let dateTransformed = this.datepipe.transform(new Date(), 'yyyy-MM-dd')\n\n      Swal.fire({\n        text: 'Are you sure you want to update this comment?',\n        icon: 'question',\n        showCancelButton: true,\n        confirmButtonColor: '#3085d6',\n        cancelButtonColor: '#d33',\n        confirmButtonText: 'Confirm'\n      }).then((result) => {\n        if (result.value) {\n          this.spinner.show();\n          // this.externalComment.modifiedBy = this.currentUser.username;\n          // this.externalComment.modifiedDate = new Date();\n          this.externalComment.comment = this.setHtml5Value(this.externalComment.comment);\n          this.apiService.update(endpoint, this.externalComment).subscribe(\n            (res: any) => {\n              this.spinner.hide();\n              // this.externalCommentList = res.responseData.data;\n              this.sweetAlertService.customSuccessMessage('External Comment has been Updated!');\n              this.externalComment = new CommentThread();\n              this.externalCommentProcess = 'Save'\n              this.editExternalComment = false;\n              this.getComments();\n              this.getCommentsS2(res.responseData.data.applicationFormS2);\n            }, (err: any) => {\n              this.spinner.hide();\n            });\n        }\n\n      });\n    }\n  }\n\n  addCopyClaims(): void {\n    if (this.copyClaimesProcess === 'Save') {\n      this.spinner.show();\n      this.copyClaims.actionBy = this.currentUser;\n      this.copyClaims.role = this.dataStorageService.getUserRole();\n      this.copyClaims.actionDate = new Date();\n      this.copyClaims.appFormReference = this.commentS1Application.appFormReference;\n      this.copyClaims.description = this.setHtml5Value(this.copyClaims.description);\n\n      this.apiService.save(ENDPOINTS.copyClaims, this.copyClaims).subscribe(\n        (res: any) => {\n          if (res !== undefined) {\n            this.spinner.hide();\n            this.sweetAlertService.customSuccessMessage('Copy claims description has been added!');\n            this.copyClaims = new CopyClaims();\n            this.getCopyClaims();\n            this.editCopyClaimsComment = false;\n          }\n        }, (err: any) => {\n          this.spinner.hide();\n          // console.log('errrrrrrrr:::', err);\n\n          this.sweetAlertService.error(err);\n        }, () => {\n          this.spinner.hide();\n          this.copyClaims = new CopyClaims();\n        })\n    } else {\n      Swal.fire({\n        text: 'Are you sure you want to update copy claim?',\n        icon: 'question',\n        showCancelButton: true,\n        confirmButtonColor: '#3085d6',\n        cancelButtonColor: '#d33',\n        confirmButtonText: 'Confirm'\n      }).then((result) => {\n        if (result.value) {\n          this.spinner.show();\n          this.copyClaims.description = this.setHtml5Value(this.copyClaims.description);\n          this.apiService.update(ENDPOINTS.copyClaims, this.copyClaims).subscribe(\n            (res: any) => {\n              this.spinner.hide();\n              this.sweetAlertService.customSuccessMessage('Copy claims description has been Updated!');\n              this.copyClaims = new CopyClaims();\n              this.copyClaimesProcess = 'Save'\n              this.editCopyClaimsComment = false;\n              this.getCopyClaims();\n\n            }, (err: any) => {\n              this.spinner.hide();\n            });\n        }\n\n      });\n    }\n  }\n\n  getComments(): void { // comments for S1\n    if (this.commentS1Application) {\n      this.apiService.findByParam(ENDPOINTS.comment + '/app-form-reference', this.commentS1Application.appFormReference).subscribe(\n        (res: any) => {\n          this.commentList = res.responseData.data;\n          // get internal comments\n          this.internalCommentList = this.commentList.filter(internalComment => internalComment.commentType === 'INTERNAL');\n          console.log('INTERNAL', this.internalCommentList);\n          // get external comments\n          this.externalCommentList = this.commentList.filter(externalComment => externalComment.commentType === 'EXTERNAL');\n          console.log('EXTERNAL', this.externalCommentList);\n          this.spinner.hide();\n        }, (err: any) => {\n        });\n    }\n  }\n\n  getCommentsS2(data): void { // comments for S2\n    if (data) {\n      this.apiService.findByParam(ENDPOINTS.commentS2 + '/application-form-s2', data.id).subscribe(\n        (res: any) => {\n          this.commentList = res.responseData.data;\n          // get internal comments\n          this.internalCommentList = this.commentList.filter(internalComment => internalComment.commentType === 'INTERNAL');\n          // get external comments\n          this.externalCommentList = this.commentList.filter(externalComment => externalComment.commentType === 'EXTERNAL');\n        }, (err: any) => {\n        });\n    }\n  }\n\n  getCopyClaims(): void {\n    this.apiService.findByParam(ENDPOINTS.copyClaims + '/app-form-reference', this.commentS1Application.appFormReference).subscribe(\n      (res: any) => {\n        this.copyClaimsList = res.responseData.data;\n      }, (err: any) => {\n      });\n  }\n\n  modifyCopyClaims(data) {\n    this.copyClaimesProcess = 'Update';\n    this.copyClaims = data;\n    this.editCopyClaimsComment = true;\n    this.getCopyClaims();\n  }\n\n  modifyInternalComment(data): void {\n    this.internalCommentProcess = 'Update';\n    this.internalComment = data;\n    this.getComments();\n    this.getCommentsS2(data);\n  }\n\n  deleteComment(data): void {\n    let endpoint;\n    if (this.applicationStage === APPLICATION_STAGE.S2_APPLICATION) {\n      endpoint = ENDPOINTS.commentS2\n    } else {\n      endpoint = ENDPOINTS.comment\n    }\n    Swal.fire({\n      text: 'Are you sure you want to delete this comment?',\n      icon: 'question',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Confirm'\n    }).then((result) => {\n      if (result.value) {\n        this.spinner.show();\n        this.apiService.deleteById(endpoint, data.id).subscribe(\n          (res: any) => {\n            if (data?.applicationFormType === 'S1') {\n              this.getComments();\n            } else {\n              this.getCommentsS2(data);\n            }\n            this.sweetAlertService.customSuccessMessage('Comment has been Deleted!');\n          }, (err: any) => {\n            this.spinner.hide()\n          });\n      }\n    });\n  }\n\n  deleteCopyClaims(data): void {\n\n    Swal.fire({\n      text: 'Are you sure you want to delete this copy claims?',\n      icon: 'question',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Confirm'\n    }).then((result) => {\n      if (result.value) {\n        this.apiService.deleteById(ENDPOINTS.copyClaims, data.id).subscribe(\n          (res: any) => {\n            this.sweetAlertService.customSuccessMessage('Copy claim has been Deleted!');\n            this.getCopyClaims();\n          }, (err: any) => {\n          });\n      }\n    });\n  }\n\n  modifyExternalComment(data): void {\n    this.externalCommentProcess = 'Update';\n    this.externalComment = data;\n    this.editExternalComment = true;\n    this.getComments();\n    this.getCommentsS2(data);\n  }\n\n  cancel(): void {\n    this.internalComment = new CommentThread();\n    this.externalComment = new CommentThread();\n    this.copyClaims = new CopyClaims();\n    this.internalCommentProcess = 'Save';\n    this.externalCommentProcess = 'Save';\n    this.copyClaimesProcess = 'Save';\n    this.editCopyClaimsComment = false;\n    this.editExternalComment = false;\n    this.getComments();\n    this.getCopyClaims();\n\n  }\n\n  setFormValidator(): void {\n    this.commentForm = this.formBuilder.group({\n      internalComments: [''],\n      externalComments: [''],\n      commentType: [''],\n      description: [''],\n    });\n  }\n\n  setHtml5Value(commentBody: any) {\n    this.commentHtmlOutput = \"<!DOCTYPE html><html lang=\" + \"en\" + \"><meta charset=\" + \"utf-8\" + \"><body>\" + commentBody + \"</body></html>\"\n    return this.commentHtmlOutput;\n  }\n\n}\n","<form [formGroup]=\"commentForm\">\n  <mat-tab-group mat-align-tabs=\"center\" class=\"mat-tab-group\">\n    <!-- TAB FOR INTERNAL COMMENTS -->\n    <mat-tab label=\"Internal Comments Tab\">\n      <div class=\"mat-tab\">\n        <div class=\"col comment\">\n          <label>INTERNAL</label>\n          <angular-editor #editorToolBar [(ngModel)]=\"internalComment.comment\" [config]=\"editorConfig\" name=\"internalComments\"\n          formControlName=\"internalComments\"\n          [hidden]=\"disabledComment\"></angular-editor><br>\n\n          <div class=\"\">\n            <button mat-raised-button color=\"primary\" (click)=\"addInternalComment(internalComment)\" [disabled]=\"!internalComment.comment\"\n            [hidden]=\"disabledComment\">\n              <i class=\"material-icons color__white\">comment_bank</i> &nbsp;{{internalCommentProcess}}\n            </button>\n            <button mat-raised-button color=\"primary\" (click)=\"cancel()\" [disabled]=\"!internalComment.comment\"\n            [hidden]=\"disabledComment\">\n              <i class=\"material-icons color__white\">cancel</i> &nbsp;Cancel\n            </button>\n            <div >\n              <!-- CURRENT COMMENT -->\n              <div class=\"comment-list\">\n                <form class=\"comments\" *ngFor=\"let comment of internalCommentList\">\n                  <div class=\"row username-content\">\n                    <p> <i class=\"material-icons\">comment</i> {{comment?.actionBy?.firstName}}\n                      {{comment.actionBy.lastName}}<b> ({{comment.role.replaceAll('_', ' ').replaceAll('ROLE' , '')}}) |\n                        {{comment.actionDate | date:'fullDate'}} | {{comment.actionDate | date:'hh:mm:ss aa'}} </b>\n  \n                      <b *ngIf=\"comment?.modifiedBy != undefined && comment?.modifiedDate != undefined\"> | Modified by:\n                        {{comment.modifiedBy}} ({{comment.modifiedDate}}) </b>\n  \n                      <span class=\"a-icon\" *ngIf=\"comment?.actionBy?.id === currentUser?.id || currentUser?.userRole?.name === 'ROLE_REVIEWER'\"\n                      [hidden]=\"disabledComment\">\n                        <i class=\"material-icons\" (click)=\"deleteComment(comment)\" matTooltip=\"Delete\">delete</i>\n                      </span>\n                      <span class=\"a-icon\" *ngIf=\"comment?.actionBy?.id === currentUser?.id || currentUser?.userRole?.name === 'ROLE_REVIEWER'\"\n                        [hidden]=\"disabledComment\">\n                        <i class=\"material-icons\" style=\"color:blue\" (click)=\"modifyInternalComment(comment)\" matTooltip=\"Edit\">edit</i>\n                      </span>\n  \n                    </p>\n                  </div>\n                  <div class=\"comment-content\">\n                    <div [innerHTML]=\"comment.comment\"></div>\n                  </div>\n                </form>\n              </div>\n\n\n              <!-- CURRENT COMMENT END -->\n\n              <!-- NEW COMMENT IMPL -->\n              \n              <!-- NEW COMMENT IMPL END -->\n              <div class=\"no-record\" *ngIf=\"internalCommentList.length==0 && disabledComment\">\n                No results found.\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </mat-tab>\n    <!-- END OF TAB FOR INTERNAL COMMENTS -->\n\n    <!-- TAB FOR COPY CLAIMS -->\n    <mat-tab label=\"Copy Claims Tab\"\n      *ngIf=\"currentUser?.userRole?.name != 'ROLE_ENCODER' && commentS1Application.appliedS2 === false\">\n      <div class=\"col comment\">\n        <label>COPY/CLAIMS</label>\n        <div class=\"\">\n          <ng-container *ngIf=\"editCopyClaimsComment || (!editCopyClaimsComment && copyClaimsList?.length === 0)\">\n            <angular-editor [(ngModel)]=\"copyClaims.description\" [config]=\"editorConfig\" name=\"description\"\n              formControlName=\"description\"\n              [hidden]=\"disabledComment\">\n            </angular-editor><br>\n            <button mat-raised-button color=\"primary\" (click)=\"addCopyClaims()\" [disabled]=\"!copyClaims.description\"\n              [hidden]=\"disabledComment\">\n              <i class=\"material-icons color__white\">comment_bank</i> &nbsp;{{copyClaimesProcess}}\n            </button>\n            <button mat-raised-button color=\"primary\" (click)=\"cancel()\" [disabled]=\"!copyClaims.description\"\n              [hidden]=\"disabledComment\">\n              <i class=\"material-icons color__white\">cancel</i> &nbsp;Cancel\n            </button>\n          </ng-container>\n          <div class=\"comment-list\">\n            <form class=\"comments\" *ngFor=\"let copyClaims of copyClaimsList\">\n              <div class=\"row username-content\">\n                <p> <i class=\"material-icons color__white\">comment</i> {{copyClaims?.actionBy?.firstName}}\n                  {{copyClaims.actionBy.lastName}}<b> ({{copyClaims.role.replaceAll('_', ' ').replaceAll('ROLE', '')}})\n                    | {{copyClaims.actionDate | date:'fullDate'}} | {{copyClaims.actionDate | date:'hh:mm:ss aa'}} </b>\n\n                    <b *ngIf=\"copyClaims?.modifiedBy != undefined && copyClaims?.modifiedDate != undefined\"> | Modified by:\n                      {{copyClaims.modifiedBy}} ({{copyClaims.modifiedDate}}) </b>\n\n                    <!-- <span class=\"a-icon\" *ngIf=\"copyClaims?.actionBy?.id === currentUser?.id || currentUser?.userRole?.name === 'ROLE_REVIEWER'\"\n                    [hidden]=\"disabledComment\">\n                      <i class=\"material-icons\" (click)=\"deleteCopyClaims(copyClaims)\" matTooltip=\"Delete\">delete</i>\n                    </span> -->\n                    <span class=\"a-icon\" *ngIf=\"copyClaims?.actionBy?.id === currentUser?.id || currentUser?.userRole?.name === 'ROLE_REVIEWER'\"\n                      [hidden]=\"disabledComment\">\n                      <i class=\"material-icons\" style=\"color:blue\" (click)=\"modifyCopyClaims(copyClaims)\" matTooltip=\"Edit\">edit</i>\n                    </span>\n              </div>\n              <div class=\"comment-content\">\n                <div [innerHTML]=\"copyClaims.description\"></div>\n              </div>\n            </form>\n            <div class=\"no-record\"\n              *ngIf=\"copyClaimsList.length==0 && disabledComment\">\n              No results found.\n            </div>\n          </div>\n        </div>\n      </div>\n    </mat-tab>\n    <!-- END OF TAB FOR COPY CLAIMS -->\n\n    <!-- TAB FOR EXTERNAL COMMENTS -->\n    <mat-tab label=\"External Comments Tab\">\n      <div class=\"col comment\">\n        <label>EXTERNAL</label>\n        <div class=\"\">\n          <ng-container *ngIf=\"editExternalComment || (!editExternalComment && externalCommentList?.length === 0)\">\n            <angular-editor [(ngModel)]=\"externalComment.comment\" [config]=\"editorConfig\" name=\"externalComments\"\n              formControlName=\"externalComments\"\n              [hidden]=\"commentS2Application?.internalStatus === 'S1_APPLICATION_REVIEWED' ||\n              (disabledComment)\">\n            </angular-editor><br>\n            <button mat-raised-button color=\"primary\" (click)=\"addExternalComment()\" [disabled]=\"!externalComment.comment\"\n              [hidden]=\"commentS2Application?.internalStatus === 'S1_APPLICATION_REVIEWED' ||\n              (disabledComment)\">\n              <i class=\"material-icons\">comment_bank</i> &nbsp;{{externalCommentProcess}}\n            </button>\n            <button mat-raised-button color=\"primary\" (click)=\"cancel()\" [disabled]=\"!externalComment.comment\"\n              [hidden]=\"commentS2Application?.internalStatus === 'S1_APPLICATION_REVIEWED' ||\n              (disabledComment)\">\n              <i class=\"material-icons\">cancel</i> &nbsp;Cancel\n            </button>\n          </ng-container>\n          <div class=\"comment-list\">\n            <form class=\"comments\" *ngFor=\"let excomment of externalCommentList\">\n              <div class=\"row username-content\">\n                <p> <i class=\"material-icons\">comment</i> {{excomment?.actionBy?.firstName}}\n                  {{excomment.actionBy.lastName}}<b> ({{excomment.role.replaceAll('_', ' ').replaceAll('ROLE' , '')}}) |\n                    {{excomment.actionDate | date:'fullDate'}} | {{excomment.actionDate | date:'hh:mm:ss aa'}} </b>\n\n                    <b *ngIf=\"excomment?.modifiedBy != undefined && excomment?.modifiedDate != undefined\"> | Modified by:\n                      {{excomment.modifiedBy}} ({{excomment.modifiedDate}}) </b>\n\n                    <!-- <span class=\"a-icon\" *ngIf=\"excomment?.actionBy?.id === currentUser?.id || currentUser?.userRole?.name === 'ROLE_REVIEWER'\"\n                    [hidden]=\"disabledComment\">\n                      <i class=\"material-icons\" (click)=\"deleteComment(excomment)\" matTooltip=\"Delete\">delete</i>\n                    </span> -->\n                    <span class=\"a-icon\" *ngIf=\"excomment?.actionBy?.id === currentUser?.id || currentUser?.userRole?.name === 'ROLE_REVIEWER'\"\n                      [hidden]=\"disabledComment\">\n                      <i class=\"material-icons\" style=\"color:blue\" (click)=\"modifyExternalComment(excomment)\" matTooltip=\"Edit\">edit</i>\n                    </span>\n                  </p>\n              </div>\n              <div class=\"comment-content\">\n                <div class=\"inner-html\" [innerHTML]=\"excomment.comment\"></div>\n              </div>\n            </form>\n            <div class=\"no-record\"\n              *ngIf=\"externalCommentList.length==0 && disabledComment\">\n              No results found.\n            </div>\n          </div>\n        </div>\n      </div>\n    </mat-tab>\n    <!-- END OF TAB FOR EXTERNAL COMMENTS -->\n  </mat-tab-group>\n</form>\n","import { S2Application, UserAccount } from '@models';\nexport class CommentThread {\n    id:                  number;\n    appFormReference:    string;\n    applicationFormType: string;\n    comment:             string;\n    actionBy:            UserAccount;\n    commentType:         string;\n    role:                string;\n    actionDate:          Date;\n    isReply:             boolean;\n    replies:             Array<CommentThread>;\n    parentId:            number;\n    parent:              any;\n    replyEditorIsEnabled: boolean;\n    applicationFormS2: S2Application;\n    constructor(){\n        this.parent = {};\n        this.replyEditorIsEnabled = false;\n        this.isReply = false;\n    }\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AddCompanyRoutingModule } from './add-company-routing.module';\nimport { AngularMaterialModule } from '@shared';\nimport { AddCompanyComponent } from './add-company.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n\n@NgModule({\n  declarations: [ AddCompanyComponent ],\n  imports: [\n    CommonModule,\n    AddCompanyRoutingModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    AngularMaterialModule,\n  ]\n})\nexport class AddCompanyModule { }\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTable, MatTableDataSource } from '@angular/material/table';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { S2Application } from '@models';\nimport { ApiService, DataStorageService, SweetAlertService } from '@services';\nimport { APPLICATION_STATUS, ENDPOINTS, FORM_STATUS, ROLES, SUBMISSION_TYPE, USER_ROLES } from '@shared';\nimport { ApplicationRequest } from 'app/core/models/application-request.model';\nimport { ApplicationCountS2 } from 'app/core/models/applicationCountS2.model';\nimport { MultipleApplication } from 'app/core/models/multiple-application.model';\nimport { CommonServices } from 'app/core/services/common-services.service';\nimport { RequestForSpecialClearingComponent } from 'app/modules/fragments/request-for-special-clearing/request-for-special-clearing.component';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-list-s2-application',\n  templateUrl: './list-s2-application.component.html',\n  styleUrls: ['./list-s2-application.component.scss']\n})\nexport class ListS2ApplicationComponent implements OnInit {\n  @ViewChild(MatPaginator, { static: false }) paginatorFalse: MatPaginator;\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  pageSize = 10;\n  pageNo = 0;\n  pageSizeOptions: number[] = [10, 20, 50];\n  @ViewChild(MatSort, { static: false }) sort: MatSort;\n  @ViewChild(MatTable, { static: false }) table: MatTable<S2Application>;\n  dataSource: MatTableDataSource<S2Application>; // in html but not existing in component -- encountered during 'ng serve --aot'\n  displayedColumns = ['referenceCode', 'typeOfApplication', 'companyName', 'brand', 'typeOfMedium', 'status', 'internalStatus', 'icon'];\n  s2ApplicationList = [];\n  s2TotalItems = 0;\n  isAscUser: boolean = false\n\n  // For clearance list\n  forClearanceDataSource: MatTableDataSource<S2Application>;\n  s2ApplicationListForClearance = [];\n  forClearanceDisplayedColumns = ['referenceCode', 'typeOfApplication', 'companyName', 'brand', 'typeOfMedium', 'status', 'icon'];\n  s2SpecialTotalItems = 0;\n\n  s2SpecialApplicationDataSource: MatTableDataSource<MultipleApplication>;\n  s2SpecialApplicationList = []\n  s2SpecialApplicationDisplayedColumns = ['adTitle', 'typeOfApplication', 'companyName', 'brand', 'status'];\n\n  applicationRequest = new ApplicationRequest();\n\n  currentUser: any;\n  viewApplicationType: string;\n  applicationTypeTitle: string;\n  currentPage = 1;\n  // currentSize = 100;\n  originalTabDataCount = 0;\n  complianceTabDataCount = 0;\n  releasedAppealTabDataCount = 0;\n  toaTabDataCount = 0;\n  click = 0;\n  timeLeft: number = 60;\n  interval: any;\n  refreshButtonEnabled = true;\n  timerDisplay: any;\n  isTimerValueDisplay = false;\n  s2ApplicationCountList = [];\n\n  displayedContent = 'ORIGINAL';\n\n  s2Application = new S2Application();\n  applicationCountS2 = new ApplicationCountS2();\n\n  isSuperAdmin = false;\n  isAdmin = false;\n  isAccounting = false;\n  isApplicant = false;\n  isScreener = false;\n  isReviewer = false;\n  isAdSpecialist = false;\n  isEvaluator = false;\n  ascUserRoleList = [...ROLES.filter((role: any) => role.ascUser === true).map((role: any) => role.role)];\n  constructor(\n    private apiService: ApiService,\n    private dataStorage: DataStorageService,\n    private router: Router,\n    private sweetAlertService: SweetAlertService,\n    private dialog: MatDialog,\n    private spinner: NgxSpinnerService,\n    private route: ActivatedRoute,\n    private commonService: CommonServices\n  ) { }\n\n  ngOnInit(): void {\n    this.isAscUser = this.ascUserRoleList.includes(this.dataStorage.getUserRole());\n    this.currentUser = this.dataStorage.getUserAccount();\n    this.viewApplicationType = this.route.parent.snapshot.url[0].path;\n    this.getListCount();\n    if (this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT) {\n      this.displayedColumns = ['referenceCode', 'typeOfApplication', 'companyName', 'brand', 'typeOfMedium', 'status', 'icon'];\n    }\n\n    if (this.viewApplicationType === 'special') {\n      this.applicationTypeTitle = 'SPECIAL CLEARING';\n      this.getSpecialS2ApplicationList();\n    } else {\n      this.applicationTypeTitle = 'INDIVIDUAL';\n      this.getList();\n    }\n\n    this.initUserRole();\n  }\n\n\n  initUserRole() {\n    if (this.currentUser.userRole.name === USER_ROLES.ROLE_SUPER_ADMIN) {\n      this.isSuperAdmin = true;\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_ADMIN) {\n      this.isAdmin = true;\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_ACCOUNTING) {\n      this.isAccounting = true;\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT) {\n      this.isApplicant = true;\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_SCREENER) {\n      this.isScreener = true;\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_REVIEWER) {\n      this.isReviewer = true;\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_AD_SPECIALIST) {\n      this.isAdSpecialist = true;\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_ENCODER) {\n      this.isEvaluator = true;\n    }\n  }\n\n\n  getListCount(): void {\n    let endpoint;\n    if (this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT) {\n      endpoint = ENDPOINTS.badgeCountByApplicationOwnerS2;\n    } else {\n      endpoint = ENDPOINTS.badgeCountByAscUserS2;\n    }\n    this.apiService.findAll(endpoint + this.currentUser.id).subscribe(\n      (res: any) => {\n        this.applicationCountS2 = res;\n      })\n  }\n\n  getList(submissionType = 'ORIGINAL'): void {\n\n    this.currentPage = this.pageNo;\n    this.currentPage++;\n    if (this.currentPage === 0) this.currentPage++;\n    let param = submissionType.toUpperCase();\n\n    if (param === SUBMISSION_TYPE.COMPLIANCE && this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT) {\n      param = `&complianceForm=true`;\n    } else if (param === SUBMISSION_TYPE.COMPLIANCE && this.currentUser.userRole.name !== USER_ROLES.ROLE_APPLICANT) {\n      param = `&complianceForm=true`;\n    } else if (param === SUBMISSION_TYPE.TOA) {\n      param = `&hasToa=true`;\n    } else {\n      param = `&submissionType=${param}&complianceForm=false`;\n    }\n\n    this.spinner.show();\n    let endpoint = `custom/search?page=${this.currentPage}&size=${this.pageSize}${param}`;\n\n    if (this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT) {\n      endpoint = ENDPOINTS.s2ApplicationFormPresentor + endpoint + `&applicationOwnerId=${this.currentUser.id}`;\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_ENCODER) {\n      endpoint = ENDPOINTS.s2ApplicationFormEncoder + endpoint + `&assignedEncoderId=${this.currentUser.id}`;\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_AD_SPECIALIST) {\n      endpoint = ENDPOINTS.s2ApplicationFormAdSpe + endpoint + `&assignedAdSpecialistId=${this.currentUser.id}`;\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_ADMIN || this.currentUser.userRole.name === USER_ROLES.ROLE_SUPER_ADMIN) {\n      endpoint = ENDPOINTS.s2ApplicationFormAdmin + endpoint;\n    } else {\n      endpoint = ENDPOINTS.s2Application + endpoint + `&applicationOwnerId=${this.currentUser.id}`;\n    }\n\n    // console.log(endpoint);\n    this.apiService.findAll(endpoint).subscribe(\n      (res: any) => {\n        this.s2ApplicationList = res.data;\n\n        this.s2TotalItems = res.totalItems;\n        console.log('s2ApplicationList: ', res);\n        this.dataSource = new MatTableDataSource<S2Application>(this.s2ApplicationList);\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n        this.hideSpinner();\n      }, (err: any) => {\n        this.hideSpinner();\n      }\n    )\n  }\n\n  hideSpinner() {\n    setTimeout(() => {\n      this.spinner.hide();\n    }, 1);\n  }\n\n  getSpecialS2ApplicationList(): void {\n    let endpoint = ''; let obj;\n    if (this.currentUser.userRole.name === USER_ROLES.ROLE_ADMIN || this.currentUser.userRole.name === USER_ROLES.ROLE_SUPER_ADMIN) {\n      obj = {\n        statuses: ['FOR_APPROVAL', 'APPROVED', 'DISAPPROVED']\n      }\n      endpoint = ENDPOINTS.s2SpecialClearingApplicationRequestsAdmin;\n    } else {\n      obj = {\n        applicationOwnerId: this.currentUser.id,\n        statuses: ['FOR_APPROVAL', 'APPROVED', 'DISAPPROVED']\n      }\n      endpoint = ENDPOINTS.s2SpecialClearingApplicationRequests;\n    }\n\n    this.currentPage = this.pageNo;\n    this.currentPage++;\n    if (this.currentPage === 0) this.currentPage++;\n\n    this.apiService.save(`${endpoint}?page=${this.currentPage}&size=${this.pageSize}`, obj)\n      .subscribe((res: any) => {\n        this.s2SpecialApplicationList = res.data;\n\n        console.log('s2SpecialApplicationList: ', res);\n        this.s2SpecialTotalItems = res.totalItems;\n        this.s2SpecialApplicationDataSource = new MatTableDataSource<MultipleApplication>(this.s2SpecialApplicationList);\n        this.s2SpecialApplicationDataSource.paginator = this.paginator;\n        this.s2SpecialApplicationDataSource.sort = this.sort;\n        setTimeout(() => {\n          this.spinner.hide();\n        }, 1);\n      }, (err: any) => {\n        this.spinner.hide();\n      });\n  }\n\n\n  pageEvents(event: any) {\n    this.pageSize = event.pageSize;\n\n    if (event.pageIndex > this.pageNo) {\n      this.pageNo++;\n    } else {\n      this.pageNo--;\n    }\n\n    if (event.pageSize > event.length) {\n      this.pageNo = 0;\n    }\n\n    this.getList();\n  }\n\n  setPageSizeOptions(setPageSizeOptionsInput: string) {\n    if (setPageSizeOptionsInput) {\n      this.pageSizeOptions = setPageSizeOptionsInput.split(',').map(str => +str);\n    }\n  }\n\n  viewApplication(data: any): void {\n    this.s2Application = data;\n    console.log('S2 FORM: ', this.s2Application);\n\n    if (data.formStatus === FORM_STATUS.OPEN && this.s2Application.internalStatus !== APPLICATION_STATUS.S1_APPLICATION_REJECTED\n      && (this.currentUser.userRole.name !== USER_ROLES.ROLE_APPLICANT && this.currentUser.userRole.name !== USER_ROLES.ROLE_ADMIN\n        && this.currentUser.userRole.name !== USER_ROLES.ROLE_SUPER_ADMIN\n        && this.currentUser.userRole.name !== USER_ROLES.ROLE_AD_SPECIALIST) // s2form will be assigned to s1form adspe\n    ) {\n      Swal.fire({\n        text: 'Are you sure you want to open this application? This application will be LOCKED on your account.',\n        icon: 'question',\n        showCancelButton: true,\n        confirmButtonColor: '#3085d6',\n        cancelButtonColor: '#d33',\n        confirmButtonText: 'Confirm'\n      }).then((result) => {\n        if (result.value) {\n          this.spinner.show();\n          this.s2Application.assignedEncoder = this.currentUser;\n          // wait for BE\n          this.apiService.save(ENDPOINTS.s2ApplicationFormEncoder + ENDPOINTS.takeApplication, this.s2Application).subscribe(\n            (res: any) => {\n              this.spinner.hide();\n              this.sweetAlertService.customSuccessMessage('Application successfully assigned to you.', 3);\n              this.router.navigate(['asc/page/application/s2/update/', data.id]);\n            }, (err: any) => {\n              this.spinner.hide();\n            });\n        }\n      });\n    } else {\n      this.router.navigate(['asc/page/application/s2/update/', data.id]);\n    }\n\n  }\n\n  applyApplicationForToa(data: any): void {\n    Swal.fire({\n      text: 'Are you sure you want to apply this application to TOA?',\n      icon: 'question',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Confirm'\n    }).then((result) => {\n      if (result.value) {\n        this.spinner.show();\n        this.apiService.save(ENDPOINTS.s2ApplicationForm + 'clearance/presentor/submit', data).subscribe(\n          (res: any) => {\n            this.spinner.hide();\n            this.sweetAlertService.customSuccessMessage('Application is applied for TOA successfully');\n            this.router.navigateByUrl('asc/page/application/s2/lists');\n          }, (err: any) => {\n            this.spinner.hide();\n          });\n      }\n    })\n  }\n\n  viewSpecialApplication(data: any): void {\n    this.applicationRequest = data;\n    this.s2Application = new S2Application();\n    this.s2Application.specialClearing = true;\n    this.s2Application.applicationForm = data;\n\n    let dialogRef;\n    dialogRef = this.dialog.open(RequestForSpecialClearingComponent, {\n      width: '80%',\n      height: '85%',\n      data: {\n        applicationRequest: this.applicationRequest,\n        applicationType: 'Request for Special Clearing'\n      }\n    });\n  }\n\n  doFilterS1MultipleApplicationList(event) { } // in html but not existing in component -- encountered during 'ng serve --aot'\n\n  getCompany(elementId) { } // in html but not existing in component -- encountered during 'ng serve --aot'\n\n  doFilter(event) { } // in html but not existing in component -- encountered during 'ng serve --aot'\n\n  changeTab(evt) {\n    if (evt.tab) {\n      this.displayedContent = evt.tab.textLabel;\n      if (this.displayedContent === 'For Appeal') {\n        this.getForDecisionAndComment();\n      } else {\n        this.getList(this.displayedContent);\n      }\n    }\n  }\n\n\n  getForDecisionAndComment() {\n    let endpoint = '';\n\n    // APPEAL\n    if (this.isAdSpecialist) {\n      endpoint = ENDPOINTS.s2ApplicationFormAdSpe + `custom/search?assignedAdSpecialistId=${this.currentUser.id}&hasOngoingAppeal=true&page=${this.currentPage}&size=${this.pageSize}&submissionType=ORIGINAL`;\n    }\n    else if (this.isAdmin || this.isSuperAdmin) {\n      endpoint = ENDPOINTS.s2ApplicationFormAdmin + `custom/search?hasOngoingAppeal=true&page=${this.currentPage}&size=${this.pageSize}`;\n    }\n\n    this.apiService.findAll(endpoint)\n      .subscribe((res: any) => {\n        if (res) {\n          this.s2ApplicationList = res?.data;\n          console.log('Appeal: ', this.s2ApplicationList);\n\n          this.s2TotalItems = res.totalItems;\n          this.dataSource = new MatTableDataSource<S2Application>(this.s2ApplicationList);\n          this.dataSource.paginator = this.paginatorFalse;\n          this.dataSource.sort = this.sort;\n          setTimeout(() => {\n            this.spinner.hide();\n          }, 1);\n        } else {\n          this.s2ApplicationList = [];\n        }\n      }, (err) => {\n        setTimeout(() => {\n          this.spinner.hide();\n        }, 1);\n      });\n  }\n\n  sortEvent() {\n    this.click++;\n    if (this.click % 2 === 0) {\n      this.dataSource = new MatTableDataSource<S2Application>(this.s2ApplicationList);\n      this.dataSource.paginator = this.paginator;\n      return this.dataSource.data.sort((a, b) => a.id - b.id);\n    } else {\n      this.dataSource = new MatTableDataSource<S2Application>(this.s2ApplicationList);\n      this.dataSource.paginator = this.paginator;\n      return this.dataSource.data.reverse();\n    }\n    // for random sort\n    // this.dataSource.data.sort(() => Math.random() - 0.5)\n  }\n\n  refresh() {\n    this.commonService.sendClickEvent();\n    this.startTimer();\n  }\n\n  startTimer() {\n    this.interval = setInterval(() => {\n      this.timeLeft--;\n      if(this.timeLeft > 0){\n        this.refreshButtonEnabled = false;\n        this.isTimerValueDisplay = true;\n      }else{\n        this.refreshButtonEnabled = true;\n        this.isTimerValueDisplay = false;\n        this.timeLeft = 60;\n        clearInterval(this.interval)\n      }\n      this.timerDisplay=this.transform(this.timeLeft)\n    },1000)\n  }\n\n  transform(value: number): string {\n    const minutes: number = Math.floor(value / 60);\n    return minutes + ':' + (value - minutes * 60);\n  }\n\n}\n","<form>\n  <div class=\"container-fluid\">\n\n    <div class=\"row\">\n      <div class=\"col-md-12 title\">\n        <mat-label>\n          <i class=\"material-icons\">file_copy</i> S2 APPLICATION - <b>{{applicationTypeTitle}}</b>\n        </mat-label>\n        <button class=\"button-right\" type=\"submit\" mat-raised-button color=\"primary\" (click)=\"refresh()\" [disabled]=\"!refreshButtonEnabled\">\n          <span class=\"material-icons\">sync</span>\n          <label *ngIf=\"isTimerValueDisplay\"> &nbsp;{{timerDisplay}}</label>\n        </button>\n      </div>\n    </div>\n    <hr>\n\n    <div *ngIf=\"applicationTypeTitle === 'INDIVIDUAL'\">\n      <ng-container *ngTemplateOutlet=\"individualS2ApplicationList\"></ng-container>\n    </div>\n    <div\n      *ngIf=\"(currentUser.userRole.name === 'ROLE_APPLICANT' || currentUser.userRole.name === 'ROLE_ADMIN' || currentUser.userRole.name === 'ROLE_SUPER_ADMIN') && viewApplicationType === 'special'\">\n      <ng-container *ngTemplateOutlet=\"specialS1ApplicationList\"></ng-container>\n    </div>\n\n    <ng-template #individualS2ApplicationList>\n      <div class=\"row\">\n        <div class=\"col-lg-9\">\n          <div class=\" search\" fxLayout fxLayoutAlign=\"center center\">\n            <mat-form-field class=\"col-md-9\" appearance=\"outline\">\n              <input matInput type=\"text\" (keyup)=\"doFilter($event.target.value)\" placeholder=\"Search\">\n            </mat-form-field>\n          </div>\n        </div>\n\n        <!-- <div class=\"col\">\n          <div class=\"legend-content\">\n            <table class=\"legend-table\">\n              <tr>\n                <td><div class=\"legend-box legend-blue\"></div> ORIGINAL</td>\n              </tr>\n              <tr>\n                <td><div class=\"legend-box legend-green\"></div> REVISION</td>\n              </tr>\n              <tr>\n                <td><div class=\"legend-box legend-orange\"></div> FOR COMPLIANCE</td>\n              </tr>\n            </table>\n          </div>\n        </div> -->\n\n\n      </div><br>\n\n      <mat-tab-group mat-align-tabs=\"start\" (selectedTabChange)=\"changeTab($event)\">\n        <mat-tab label=\"Original\">\n          <ng-template mat-tab-label>\n            Original\n            <div matBadge={{applicationCountS2.countOriginal}} class=\"c-badge\" matBadgeColor=\"warn\"></div>\n          </ng-template>\n        </mat-tab>\n        <mat-tab label=\"Compliance\">\n          <ng-template mat-tab-label>\n            Compliance\n            <div matBadge={{applicationCountS2.countCompliance}} class=\"c-badge\" matBadgeColor=\"warn\"></div>\n          </ng-template>\n        </mat-tab>\n        <mat-tab label=\"TOA\">\n          <ng-template mat-tab-label>\n            TOA\n            <div matBadge={{applicationCountS2.countToa}} class=\"c-badge\" matBadgeColor=\"warn\"></div>\n          </ng-template>\n        </mat-tab>\n        <mat-tab label=\"For Appeal\" *ngIf=\"isAdSpecialist || isAdmin || isSuperAdmin\">\n          <ng-template mat-tab-label>\n            Released Appeal\n            <div matBadge={{releasedAppealTabDataCount}} class=\"c-badge\" matBadgeColor=\"warn\"></div>\n          </ng-template>\n        </mat-tab>\n      </mat-tab-group>\n\n      <div class=\"mat-elevation-z8 fields main-table \" fxLayout fxLayoutAlign=\"center center\">\n        <table mat-table [dataSource]=\"dataSource\" matSort>\n\n          <ng-container matColumnDef=\"referenceCode\">\n            <th mat-header-cell *matHeaderCellDef > REFERENCE CODE <mat-icon class=\"cursor\" (click)=\"sortEvent()\" style=\"color:black\">swap_vert</mat-icon></th>\n            <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"viewApplication(element)\"\n             [ngStyle]=\"{'pointer-events': ((i != 0 && currentUser.userRole.name === 'ROLE_ENCODER') ? 'none' : ''),\n                  'background-color':\n                  ((element?.submissionType=='ORIGINAL'&&element.decisionStatus!='INCOMPLETE') ? 'lightblue' :\n                  ((element?.submissionType=='FOR COMPLIANCE'||element.decisionStatus=='INCOMPLETE'||element.submissionType=='COMPLIANCE') ? '#ebd79b' :\n                  (element?.submissionType=='REVISION' ? '#8fcf8f' : '' )))}\">\n              {{ element?.submissionType === 'ORIGINAL' && element?.internalStatus=='S2_APPLICATION_REJECTED' ? element?.referenceCodeRejected : element?.applicationForm?.referenceCode | uppercase}}\n            </td>\n          </ng-container>\n          <ng-container matColumnDef=\"typeOfApplication\">\n            <th mat-header-cell *matHeaderCellDef > TYPE OF APPLICATION </th>\n            <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"viewApplication(element)\"\n              [ngStyle]=\"{'pointer-events': ((i != 0 && currentUser.userRole.name === 'ROLE_ENCODER') ? 'none' : ''),\n                  'background-color': ((currentUser.userRole.name  === 'ROLE_ENCODER' && i > 0 ? '#beb8b8' : ''))}\">\n              <!--  'background-color':\n                  ((element?.applicationForm?.applicationType.description=='Regular') ? 'lightblue' :\n                  (element?.applicationForm?.applicationType.description=='Batch') ? '#8fcf8f' :\n                  (element?.applicationForm?.applicationType.description=='Special Screening') ? '#fca402' :\n                  (element?.applicationForm?.applicationType.description=='Special Clearing') ? '#ff8a7b' :\n                  (element?.applicationForm?.applicationType.description=='Special Screening and Clearing') ? 'violet' :\n                  (element?.applicationForm?.applicationType.description=='For Presentation') ? 'yellow' :\n                  (currentUser.userRole.name === 'ROLE_ENCODER'&&i>0 ? '#beb8b8' : ''))}\"> -->\n              {{ element?.applicationForm?.applicationType.description.replaceAll('_',' ') | uppercase }}\n              {{ element?.specialClearing ? '- SPECIAL CLEARING' : '' }}\n              {{ element?.hasToa ? '- TOA' : '' }}\n            </td>\n          </ng-container>\n          <ng-container matColumnDef=\"companyName\">\n            <th mat-header-cell *matHeaderCellDef > COMPANY NAME </th>\n            <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"viewApplication(element)\"\n              [ngStyle]=\"{'pointer-events': ((i != 0 && currentUser.userRole.name === 'ROLE_ENCODER') ? 'none' : ''),\n                  'background-color': ((currentUser.userRole.name === 'ROLE_ENCODER' && i > 0? '#beb8b8' : ''))}\">\n              {{ element?.applicationForm?.company.companyName }} </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"brand\">\n            <th mat-header-cell *matHeaderCellDef > BRAND </th>\n            <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"viewApplication(element)\"\n              [ngStyle]=\"{'pointer-events': ((i != 0 && currentUser.userRole.name === 'ROLE_ENCODER') ? 'none' : ''),\n                  'background-color': ((currentUser.userRole.name === 'ROLE_ENCODER' && i > 0? '#beb8b8' : ''))}\">\n              {{ element?.applicationForm?.brand.description }} </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"typeOfMedium\">\n            <th mat-header-cell *matHeaderCellDef > TYPE OF MEDIUM </th>\n            <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"viewApplication(element)\"\n              [ngStyle]=\"{'pointer-events': ((i != 0 && currentUser.userRole.name === 'ROLE_ENCODER') ? 'none' : ''),\n                  'background-color': ((currentUser.userRole.name === 'ROLE_ENCODER' && i > 0? '#beb8b8' : ''))}\">\n              {{ element?.applicationForm?.typeOfMedium }} </td>\n          </ng-container>\n\n          <!-- [ngStyle]=\"{'pointer-events': ((i != 0 && (currentUser.userRole.name === 'ROLE_ENCODER')) ? 'none' : ''),\n                  'background-color': ((currentUser.userRole.name === 'ROLE_ENCODER'&&i>0 ? '#beb8b8' : ''))}\" -->\n          <ng-container matColumnDef=\"status\">\n            <th mat-header-cell *matHeaderCellDef > APPLICATION STATUS </th>\n            <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"viewApplication(element)\"\n              [ngStyle]=\"{'pointer-events': ((i != 0 && currentUser.userRole.name === 'ROLE_ENCODER') ? 'none' : ''),\n                  'background-color': ((currentUser.userRole.name === 'ROLE_ENCODER' && i > 0? '#beb8b8' : ''))}\">\n              {{ element?.externalStatus?.replaceAll('_',' ') | uppercase }} </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"internalStatus\">\n            <th mat-header-cell *matHeaderCellDef > INTERNAL STATUS </th>\n            <td mat-cell *matCellDef=\"let element; let i = index\" class=\"applicantStatus\"\n              [ngStyle]=\"{'pointer-events': ((i != 0 && currentUser.userRole.name === 'ROLE_ENCODER') ? 'none' : ''),\n                  'background-color': ((currentUser.userRole.name === 'ROLE_ENCODER' && i > 0? '#beb8b8' : ''))}\">\n              {{ element?.internalStatus?.replaceAll('_',' ') | uppercase }} </td>\n          </ng-container>\n          <!-- For ASC Users only -->\n          <!-- <ng-container matColumnDef=\"ascStatus\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> ASC STATUS </th>\n                  <td mat-cell *matCellDef=\"let element\" (click)=\"getCompany(element?.id)\"> {{ element?.ascStatus }} </td>\n                </ng-container> -->\n\n          <ng-container matColumnDef=\"icon\">\n            <th mat-header-cell *matHeaderCellDef > </th>\n            <td mat-cell *matCellDef=\"let element; let i = index\" class=\"icon\"\n              [hidden]=\"currentUser?.userRole?.name != 'ROLE_APPLICANT'\"\n              [ngStyle]=\"{'pointer-events': ((i != 0 && currentUser.userRole.name === 'ROLE_ENCODER') ? 'none' : ''),\n                  'background-color': ((currentUser.userRole.name != 'ROLE_APPLICANT'&&currentUser.userRole.name != 'ROLE_AD_SPECIALIST'&&i>0 ? '#beb8b8' : ''))}\">\n\n                  <!-- <button mat-raised-button class=\"button-red\" matTooltip=\"Submit S2 for Clearance \"\n                    (click)=\"applyApplicationForToa(element)\" *ngIf=\"currentUser?.userRole?.name=='ROLE_APPLICANT'&&element?.\n                        internalStatus=='APPROVED' || element?.internalStatus=='S2_APPLICATION_VERIFIED_BY_AD_SPE'\n                        || element?.internalStatus=='RE_SUBMITTED_S2_APPLICATION_VERIFIED_BY_AD_SPE'\">\n                    <i class=\"material-icons color__white\">queue_play_next</i>\n                  </button> -->\n\n                  <button mat-raised-button class=\"button-red\" matTooltip=\"Submit For Compliance\"\n                  (click)=\"viewApplication(element)\"\n                  *ngIf=\"(currentUser?.userRole?.name=='ROLE_APPLICANT' && element?.decisionStatus=='INCOMPLETE' &&\n                          (element?.internalStatus=='INCOMPLETE' || element?.internalStatus=='S2_APPLICATION_VERIFIED_BY_AD_SPE' || element?.internalStatus=='RE_SUBMITTED_S2_APPLICATION_VERIFIED_BY_AD_SPE' ||\n                          element?.internalStatus=='S2_APPLICATION_REJECTED'))\">\n                  <i class=\"material-icons\">warning_amber</i>\n                </button>\n\n              <!--  <button mat-raised-button class=\"button-red\" matTooltip=\"Submit For Compliance\" *ngIf=\"currentUser?.userRole?.name=='ROLE_APPLICANT'&&element?.\n                    internalStatus=='RE_SUBMITTED_S2_APPLICATION_VERIFIED_BY_AD_SPE' || element?.internalStatus=='S2_APPLICATION_VERIFIED_BY_AD_SPE'\n                    || element?.internalStatus=='APPROVED'\">\n                    <i class=\"material-icons color__white\">warning_amber</i>\n                    </button>-->\n            </td>\n          </ng-container>\n\n\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n          <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n        </table>\n        <div class=\"no-record\" [hidden]=\"dataSource && dataSource?.data?.length > 0\">\n          No record found.\n        </div>\n        <!-- <mat-paginator [pageSizeOptions]=\"[10, 20, 50]\" showFirstLastButtons></mat-paginator> -->\n        <mat-paginator [pageSize]=\"pageSize\" [pageIndex]=\"pageNo\" [length]=\"s2TotalItems\"\n          [pageSizeOptions]=\"pageSizeOptions\" (page)=\"pageEvents($event)\">\n        </mat-paginator>\n\n      </div>\n      <!-- </mat-tab> -->\n    </ng-template>\n\n\n\n\n\n    <ng-template #specialS1ApplicationList>\n        <b *ngIf=\"currentUser.userRole.name === 'ROLE_APPLICANT'\"><b class=\"material-icons info-msg\">error_outline</b> This\n          page contain list of Request for Approval and allows you to create S2 application from approved request only.</b>\n        <b *ngIf=\"currentUser.userRole.name === 'ROLE_ADMIN' || currentUser?.userRole.name === 'ROLE_SUPER_ADMIN' \"><b\n            class=\"material-icons info-msg\">error_outline</b> This page\n            contain list of Request for Approval and allows you to approve or disapprove request.</b>\n      <div class=\"row\" fxLayout fxLayoutAlign=\"center center\">\n        <mat-form-field class=\"col-md-8\" appearance=\"outline\">\n          <mat-label><i class=\"material-icons\">search</i> Search Applications</mat-label>\n          <input matInput type=\"text\" (keyup)=\"doFilterS1MultipleApplicationList($event.target.value)\">\n        </mat-form-field>\n\n        <div class=\"col\">\n          <div class=\"legend-content\">\n            <table class=\"legend-table\">\n              <tr>\n                <td>\n                  <div class=\"legend-box legend-orange\"></div> FOR APPROVAL\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <div class=\"legend-box legend-green\"></div> APPROVED\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <div class=\"legend-box legend-red\"></div> DISAPPROVED\n                </td>\n              </tr>\n              <!-- <tr>\n                    <td>\n                      <div class=\"legend-box legend-pink\"></div> REJECTED\n                    </td>\n                  </tr> -->\n            </table>\n          </div>\n        </div>\n      </div>\n\n      <!-- <div class=\"row\">\n\n            <div class=\"col-md-2\">LEGEND:</div>\n            <div class=\"col-md-1 legend legend-orange\">FOR APPROVAL</div>\n            <div class=\"col-md-1 legend legend-green\">APPROVED</div>\n            <div class=\"col-md-1 legend legend-red\">DISAPPROVED</div>\n            <div class=\"col-md-1\" style=\"background-color:lightpink;border-radius:8px;width:20%;\">Rejected</div>\n          </div> -->\n      <br>\n\n      <div class=\"mat-elevation-z8 fields\">\n        <table mat-table [dataSource]=\"s2SpecialApplicationDataSource\" matSort>\n\n          <ng-container matColumnDef=\"adTitle\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> AD TITLE </th>\n            <td mat-cell *matCellDef=\"let element\" (click)=\"viewSpecialApplication(element)\">\n              {{ element?.adTitle | uppercase }} </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"typeOfApplication\">\n            <th mat-header-cell *matHeaderCellDef > TYPE OF APPLICATION </th>\n            <td mat-cell *matCellDef=\"let element\" (click)=\"viewSpecialApplication(element)\">\n              {{ element?.applicationType?.description.replaceAll('_',' ') | uppercase }}\n              {{ element?.hasSpecialClearing ? '- SPECIAL CLEARING' : ''}}\n              {{ element?.hasToa ? '- TOA' : '' }} </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"companyName\">\n            <th mat-header-cell *matHeaderCellDef > COMPANY NAME </th>\n            <td mat-cell *matCellDef=\"let element\" (click)=\"viewSpecialApplication(element)\">\n              {{ element?.company?.companyName | uppercase }} </td>\n          </ng-container>\n\n          <!-- <ng-container matColumnDef=\"membersAffiliation\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> MEMBER'S AFFILIATION </th>\n                <td mat-cell *matCellDef=\"let element\" (click)=\"viewSpecialApplication(element)\">\n                  {{ element?.membersAffiliation?.description | uppercase }} </td>\n              </ng-container> -->\n\n          <ng-container matColumnDef=\"brand\">\n            <th mat-header-cell *matHeaderCellDef> BRAND </th>\n            <td mat-cell *matCellDef=\"let element\" (click)=\"viewSpecialApplication(element)\">\n              {{ element?.brand?.description | uppercase }} </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"status\">\n            <th mat-header-cell *matHeaderCellDef > APPLICATION STATUS </th>\n            <td mat-cell *matCellDef=\"let element\" class=\"applicantStatus\" [ngStyle]=\"{'background-color':\n                element?.status === 'FOR_APPROVAL' ? '#ebd79b' :\n                element?.status === 'APPROVED' ? '#8fcf8f' :\n                element?.status === 'DISAPPROVED' ? '#ebb89b' : '' }\" (click)=\"viewSpecialApplication(element)\">\n              {{ element?.status?.replaceAll('_',' ') | uppercase }} </td>\n          </ng-container>\n\n          <tr mat-header-row *matHeaderRowDef=\"s2SpecialApplicationDisplayedColumns\"></tr>\n          <tr mat-row *matRowDef=\"let row; columns: s2SpecialApplicationDisplayedColumns;\"></tr>\n        </table>\n        <div class=\"no-record\"\n          [hidden]=\"s2SpecialApplicationDataSource && s2SpecialApplicationDataSource?.data?.length > 0\">\n          No record found.\n        </div>\n        <!-- <mat-paginator [pageSizeOptions]=\"[10, 20, 50]\" showFirstLastButtons></mat-paginator> -->\n        <mat-paginator [pageSize]=\"pageSize\" [pageIndex]=\"pageNo\" [length]=\"s2SpecialTotalItems\"\n          [pageSizeOptions]=\"pageSizeOptions\" (page)=\"pageEvents($event)\">\n        </mat-paginator>\n      </div>\n    </ng-template>\n\n\n\n\n    <!-- FOR CLEARANCE TABLE -->\n    <!-- <mat-tab label=\"FOR CLEARANCE\">\n          <div class=\"mat-elevation-z8 fields toa-tab\">\n            <table mat-table [dataSource]=\"forClearanceDataSource\" matSort>\n\n                <ng-container matColumnDef=\"referenceCode\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> REFERENCE CODE </th>\n                  <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"viewApplication(element)\"\n                  [ngStyle]=\"{'pointer-events': ((i != 0 && (currentUser.userRole.name === 'ROLE_ENCODER')) ? 'none' : ''),\n                  'background-color': ((currentUser.userRole.name === 'ROLE_ENCODER'&&i>0 ? '#beb8b8' : ''))}\"> {{ element?.applicationForm?.referenceCode }} </td>\n                </ng-container>\n                <ng-container matColumnDef=\"typeOfApplication\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> TYPE OF APPLICATION </th>\n                  <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"viewApplication(element)\"\n                  [ngStyle]=\"{'pointer-events': ((i != 0 && (currentUser.userRole.name === 'ROLE_ENCODER')) ? 'none' : ''),\n                  'background-color': ((currentUser.userRole.name === 'ROLE_ENCODER'&&i>0 ? '#beb8b8' : ''))}\"> {{ element?.applicationForm?.applicationType.description }} </td>\n                </ng-container>\n                <ng-container matColumnDef=\"companyName\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> COMPANY NAME </th>\n                  <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"viewApplication(element)\"\n                  [ngStyle]=\"{'pointer-events': ((i != 0 && (currentUser.userRole.name === 'ROLE_ENCODER')) ? 'none' : ''),\n                  'background-color': ((currentUser.userRole.name === 'ROLE_ENCODER'&&i>0 ? '#beb8b8' : ''))}\"> {{ element?.applicationForm?.company.companyName }} </td>\n                </ng-container>\n\n                <ng-container matColumnDef=\"brand\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> BRAND </th>\n                  <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"viewApplication(element)\"\n                  [ngStyle]=\"{'pointer-events': ((i != 0 && (currentUser.userRole.name === 'ROLE_ENCODER')) ? 'none' : ''),\n                  'background-color': ((currentUser.userRole.name === 'ROLE_ENCODER'&&i>0 ? '#beb8b8' : ''))}\"> {{ element?.applicationForm?.brand.description }} </td>\n                </ng-container>\n\n                <ng-container matColumnDef=\"typeOfMedium\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> TYPE OF MEDIUM </th>\n                  <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"viewApplication(element)\"\n                  [ngStyle]=\"{'pointer-events': ((i != 0 && (currentUser.userRole.name === 'ROLE_ENCODER')) ? 'none' : ''),\n                  'background-color': ((currentUser.userRole.name === 'ROLE_ENCODER'&&i>0 ? '#beb8b8' : ''))}\"> {{ element?.applicationForm?.refTypeOfMedium }} </td>\n                </ng-container>\n\n                <ng-container matColumnDef=\"status\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> APPLICATION STATUS </th>\n                  <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"viewApplication(element)\"\n                  [ngStyle]=\"{'pointer-events': ((i != 0 && (currentUser.userRole.name === 'ROLE_ENCODER')) ? 'none' : ''),\n                  'background-color': ((currentUser.userRole.name === 'ROLE_ENCODER'&&i>0 ? '#beb8b8' : ''))}\"> {{ element?.internalStatus?.replaceAll('_',' ') | uppercase }} </td>\n                </ng-container> -->\n\n    <!-- For ASC Users only -->\n    <!-- <ng-container matColumnDef=\"ascStatus\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> ASC STATUS </th>\n                  <td mat-cell *matCellDef=\"let element\" (click)=\"getCompany(element?.id)\"> {{ element?.ascStatus }} </td>\n                </ng-container> -->\n\n    <!-- <ng-container matColumnDef=\"icon\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> </th>\n                  <td mat-cell *matCellDef=\"let element\" class=\"icon\">\n                    <button mat-raised-button class=\"button-red\" matTooltip=\"Submit S2 for Clearance\" (click)=\"applyApplicationForToa(element)\" *ngIf=\"currentUser?.userRole?.name=='ROLE_APPLICANT'&&element?.\n                    internalStatus=='RE_SUBMITTED_S2_APPLICATION_VERIFIED_BY_AD_SPE' || element?.internalStatus=='S2_APPLICATION_VERIFIED_BY_AD_SPE'\n                    || element?.internalStatus=='APPROVED'\">\n                      <i class=\"material-icons\">queue_play_next</i>\n                    </button> -->\n\n    <!-- <button mat-raised-button class=\"button-red\" matTooltip=\"Submit For Compliance\" (click)=\"viewApplication(element)\" *ngIf=\"currentUser?.userRole?.name=='ROLE_APPLICANT'&&element?.\n                    internalStatus=='RE_SUBMITTED_S2_APPLICATION_VERIFIED_BY_AD_SPE' || element?.internalStatus=='S2_APPLICATION_VERIFIED_BY_AD_SPE'\n                    || element?.internalStatus=='APPROVED'\"><i class=\"material-icons color__white\">warning_amber</i>\n                    </button> -->\n    <!-- </td>\n                </ng-container> -->\n\n\n    <!-- <tr mat-header-row *matHeaderRowDef=\"forClearanceDisplayedColumns\"></tr>\n                <tr mat-row *matRowDef=\"let row; columns: forClearanceDisplayedColumns;\"></tr>\n            </table>\n            <div class=\"no-record\" [hidden]=\"forClearanceDataSource && forClearanceDataSource?.data?.length > 0\">\n              No record found.\n            </div>\n            <mat-paginator [pageSizeOptions]=\"[10, 20, 50]\" showFirstLastButtons></mat-paginator>\n\n          </div>\n        </mat-tab> -->\n    <!-- </mat-tab-group> -->\n","import { Component, OnInit, Input, Output, EventEmitter, OnChanges, SimpleChanges, OnDestroy } from '@angular/core';\nimport { Company, S1Application, S2Application } from '@models';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { COMMON_FUNCTION, ENDPOINTS } from '@shared';\nimport { ApiService, DataStorageService, SweetAlertService } from '@services';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { AddCompanyComponent } from '@company';\nimport { ActivatedRoute } from '@angular/router';\nimport { BrandsComponent } from '@maintenance';\nimport { AddressService } from '../../../../core/services/address/address.service';\nimport { ProductComponent } from '../../maintenance/product/product.component';\nimport { MultipleApplication } from 'app/core/models/multiple-application.model';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-client-information',\n  templateUrl: './client-information.component.html',\n  styleUrls: ['./client-information.component.scss']\n})\nexport class ClientInformationComponent implements OnInit, OnChanges, OnDestroy {\n  @Input() s1Application = new S1Application();\n  @Input() s2Application = new S2Application();\n  @Input() multipleApplication = new MultipleApplication();\n  @Input() isAscUser = false;\n  @Input() isDisableFieldOnUpdate = false;\n  @Input() company = new Company();\n  @Output() checkInactiveAffiliation: EventEmitter<any> = new EventEmitter();\n  @Output() isInactiveAffiliation: boolean;\n  @Output() hasErrorFields: EventEmitter<any> = new EventEmitter();\n\n  memberAffiliationList = [];\n  companyList = [];\n  brandList = [];\n  productList = [];\n  // categoryList = [];\n  regionsList = [];\n  provinceList = [];\n  cityMunicipalityList = [];\n  barangayList = [];\n  countryList = [];\n\n  notInSelection = ['INACTIVE', 'DISAPPROVED'];\n\n  isNewCompany = false;\n  showCompanyAddress = false;\n  dataSource: MatTableDataSource<S1Application>;\n  clientInformationForm: FormGroup;\n\n  applicationStage: string;\n  fullAddress: string;\n  currentUser: any;\n  ngModelValue: any;\n  private ngUnsubscribe = new Subject();\n\n  constructor(\n    private apiService: ApiService,\n    private addressService: AddressService,\n    private dialog: MatDialog,\n    public dataStorage: DataStorageService,\n    private formBuilder: FormBuilder,\n    private sweetAlertService: SweetAlertService,\n    private route: ActivatedRoute,\n  ) { }\n\n  ngOnInit(): void {\n    // console.log('Clientinfo');\n    this.currentUser = this.dataStorage.getUserAccount();\n    this.setFormValidator();\n    this.getBrandList();\n    this.getCompanyList();\n    this.getAffiliationList();\n    this.getCountries();\n  }\n\n  ngOnChanges(): void {\n    if (this.s1Application.brand) {\n      this.setProductList();\n    }\n  }\n\n  setFormValidator(): void {\n    this.clientInformationForm = this.formBuilder.group({\n      brand: ['', Validators.required],\n      product: ['', Validators.required],\n      category: ['', Validators.required],\n      company: [''],\n      companyAddress: [''],\n      country: [''],\n      companyName: [''],\n      membersAffiliation: ['', Validators.required],\n    });\n\n    if (this.currentUser?.accountType === 'APPLICANT') {\n      this.clientInformationForm.valueChanges.pipe(takeUntil(this.ngUnsubscribe)).subscribe(value => {\n        this.checkInvalidFields(value);\n      });\n    }\n  }\n\n\n  getBrandList() {\n    this.apiService.findAll(ENDPOINTS.activeBrands).subscribe((res: any) => {\n      this.brandList = res.responseData.data; // .filter((brand) => !this.notInSelection.includes(brand.status));\n      this.productList = [];\n    }, (err: any) => {\n    });\n    if (this.s1Application.brand) {\n      this.setProductList();\n    }\n  }\n\n  setBrand() {\n    this.setProductList();\n    if (this.s1Application?.product?.status !== COMMON_FUNCTION.FOR_APPROVAL) {\n      this.s1Application.product = null;\n    }\n  }\n\n  setProductList() {\n    // const endpoint = this.s1Application.brand ? ENDPOINTS.productsByBrand + this.s1Application.brand.id : ENDPOINTS.product;\n    this.apiService.findAll(ENDPOINTS.productsByBrand + this.s1Application.brand.id).subscribe((res: any) => {\n      this.productList = res.responseData.data.filter((product) =>\n        product.status !== COMMON_FUNCTION.DISAPPROVED.toUpperCase()\n        && product.status !== COMMON_FUNCTION.INACTIVE.toUpperCase()\n      );\n    }, (err: any) => {\n    });\n  }\n\n  getCompanyList() {\n    this.apiService.findAll(ENDPOINTS.activeCompanies).subscribe((res: any) => {\n      this.companyList = res.responseData.data; // .filter((company) => !this.notInSelection.includes(company.status));\n    }, (err: any) => {\n    });\n  }\n\n  getAffiliationList(): void {\n    this.apiService.findAll(ENDPOINTS.activeMembersAffiliation).subscribe((res: any) => {\n      this.memberAffiliationList = res.responseData.data;\n    }, (err: any) => {\n    });\n  }\n\n  getCompanyAddress(companyName) {\n    this.showCompanyAddress = false;\n    this.isNewCompany = false;\n    this.apiService.findByParam(ENDPOINTS.company, `custom/search?companyName=${companyName}`).subscribe((res: any) => {\n      this.company = res.data[0];\n      if (this.company.membersAffiliation.status === 'INACTIVE') {\n        this.checkInactiveAffiliationFunction();\n        this.sweetAlertService.customErrorMessage(`Cannot proceed with the application. Company's membership affiliation is no longer active. Please contact ASC admin`);\n      }\n\n      if (this.company.status === 'FOR_APPROVAL') {\n        this.isNewCompany = true;\n      }\n\n    }, (err: any) => {\n    });\n  }\n\n  compareCompanyName(value: any, selected: any): boolean {\n    if (value && selected && value.id === selected.id) {\n      return value.companyName === selected.companyName;\n    }\n  }\n\n  compareBrand(value: any, selected: any): boolean {\n    if (value && selected) {\n      return value.description === selected.description;\n    }\n  }\n\n  compareMembersAffiliation(value: any, selected: any): boolean {\n    if (value && selected) {\n      return value.description === selected.description;\n    }\n  }\n\n  compareProduct(value: any, selected: any): boolean {\n    if (value && selected) {\n      return value.description === selected.description;\n    }\n  }\n\n  // compareCategory(value: any, selected: any): boolean {\n  //   if (value && selected) {\n  //     return value.description === selected.description;\n  //   }\n  // }\n\n  openNewCompanyModal(status = 'new') {\n    let dataForModal: any;\n    if (status === 'new') {\n      dataForModal = {\n        isFromModal: true,\n        isUpdate: false,\n        country: this.dataStorage.getDefaultCountry()\n      }\n    } else if (status === 'update' && this.s1Application.company) {\n      dataForModal = {\n        isFromModal: true,\n        isUpdate: true,\n        company: this.s1Application.company\n      }\n    }\n\n    const dialogRef = this.dialog.open(AddCompanyComponent, {\n      width: '80%',\n      height: '85%',\n      data: {\n        dataForModal\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      this.isNewCompany = result ? true : false;\n      if (result) {\n        this.getCompanyList();\n        this.company = result;\n        this.dataStorage.setS1NewCompany(this.company);\n        this.s1Application.company = this.dataStorage.getS1NewCompany();\n      }\n    });\n  }\n\n  openNewBrandModal(status = 'new') {\n    let dataForModal: any;\n    if (status === 'new') {\n      dataForModal = {\n        isFromModal: true,\n        isUpdate: false,\n      }\n    } else if (status === 'update') {\n      dataForModal = {\n        isFromModal: true,\n        isUpdate: true,\n        brand: this.s1Application.brand\n      }\n    }\n\n    const dialogRef = this.dialog.open(BrandsComponent, {\n      width: '80%',\n      height: '85%',\n      data: {\n        dataForModal\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.getBrandList();\n        this.s1Application.brand = this.dataStorage.getS1NewBrand();\n        this.s1Application.product = this.s1Application.product;\n      }\n    });\n  }\n\n  openNewProductModal(status = 'new') {\n    let dataForModal: any;\n    if (status === 'new') {\n      dataForModal = {\n        isFromModal: true,\n        isUpdate: false,\n        brand: this.s1Application?.brand,\n      }\n    } else if (status === 'update') {\n      dataForModal = {\n        isFromModal: true,\n        isUpdate: true,\n        product: this.s1Application?.product,\n        currentStatus: 'FOR_APPROVAL'\n      }\n    }\n\n    const dialogRef = this.dialog.open(ProductComponent, {\n      width: '80%',\n      height: '85%',\n      data: {\n        dataForModal\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        // this.getBrandList();\n        this.setProductList();\n        this.s1Application.product = this.dataStorage.getS1NewProduct();\n      }\n    });\n  }\n\n  compareCountry(value: any, selected: any): boolean {\n    if (value && selected) {\n      return value.code === selected.code;\n    }\n  }\n\n  getCountries() {\n    this.apiService.findAll(ENDPOINTS.countries).subscribe((res: any) => {\n      this.countryList = res.responseData.data;\n      this.dataStorage.setDefaultCountry(res.responseData.data[0]);\n    }, (err: any) => {\n    });\n  }\n\n  checkInactiveAffiliationFunction() {\n    this.isInactiveAffiliation = this.s1Application?.company?.membersAffiliation?.status === 'INACTIVE';\n    this.checkInactiveAffiliation.emit();\n  }\n  \n  checkInvalidFields(s1Application: any): void {\n    if (s1Application?.company && s1Application?.brand && s1Application?.product) {\n      this.hasErrorFields.emit(false)\n    } else {\n      this.hasErrorFields.emit(true);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.ngUnsubscribe.next();\n    this.ngUnsubscribe.complete();\n  }\n}\n","<form [formGroup]=\"clientInformationForm\"\n*ngIf=\"s1Application?.multipleApplication?.submissionStatus !== 'UNPROCESSED' &&\n        s1Application?.status !== 'DISAPPROVED' &&\n        s1Application?.status !== 'APPROVED' &&\n        s1Application?.status !== 'APPROVED' &&\n        multipleApplication?.status !== 'APPROVED' &&\n        s1Application?.applicationRequest?.status !== 'APPROVED'\">\n\n  <div class=\"row\">\n    <!-- <mat-form-field class=\"col-md-5\" appearance=\"outline\">\n      <mat-label>Client Membership Affiliation</mat-label>\n      <mat-select [(ngModel)]=\"s1Application.membersAffiliation\" name=\"membersAffiliation\" formControlName=\"membersAffiliation\"\n        [compareWith]=\"compareMembersAffiliation\" [disabled]=\"isAscUser && isDisableFieldOnUpdate\">\n        <mat-option *ngFor=\"let i of memberAffiliationList\" [value]=\"i\">\n          {{i.description}}\n        </mat-option>\n      </mat-select>\n    </mat-form-field> -->\n\n    <div class=\"col-md-12 float-right\" style=\"padding-bottom:10px;\" *ngIf=\"s1Application?.company?.status === 'FOR_APPROVAL' && isAscUser\">\n      <button mat-raised-button class=\"button-red\" (click)=\"openNewCompanyModal('update')\">\n        <i class=\"material-icons color__white\">error_outline</i> View/Approve Company\n      </button>\n      <br>\n    </div>\n\n    <mat-form-field class=\"col-md-7\" appearance=\"outline\">\n      <mat-label>Client Company Name\n        <span class=\"badge rounded-pill bg-warning\" *ngIf=\"s1Application?.company?.status === 'FOR_APPROVAL' \">\n          For Approval\n        </span>\n        <span class=\"badge rounded-pill bg-danger\" *ngIf=\"s1Application?.company?.delinquent \">\n          With Penalty\n        </span>\n        <span class=\"required\">*</span>\n      </mat-label>\n      <mat-select [(ngModel)]=\"s1Application.company\" name=\"company\" formControlName=\"company\"\n        [compareWith]=\"compareCompanyName\"\n        [disabled]=\"(isAscUser && isDisableFieldOnUpdate) || (s2Application?.applicationForm || s1Application?.status === 'FOR_APPROVAL')\">\n        <mat-option (click)=\"isNewCompany=true;showCompanyAddress=false\" value=\"\" (click)=\"openNewCompanyModal()\">\n          <span class=\"badge bg-success dropdown-badge\">Add New Company</span>\n        </mat-option>\n        <mat-option *ngFor=\"let i of companyList\" [value]=\"i\" (click)=\"getCompanyAddress(i.companyName)\">\n          {{i.companyName}}\n        </mat-option>\n        <!-- <mat-option >[New\n          Company]</mat-option> -->\n      </mat-select>\n    </mat-form-field>\n\n    <mat-form-field class=\"col-md-5\" appearance=\"outline\" *ngIf=\"s1Application.company\">\n      <mat-label>\n        Client Membership Affiliation\n        <span class=\"badge rounded-pill bg-danger\"\n          *ngIf=\"s1Application?.company?.membersAffiliation?.status === 'INACTIVE' \">\n          Inactive\n        </span>\n      </mat-label>\n      <input matInput readonly [value]=\"s1Application?.company?.membersAffiliation?.description\">\n    </mat-form-field>\n\n    <!-- <div class=\"col-md-4\" *ngIf=\"s1Application?.applicationForm?.company?.status === 'FOR_APPROVAL' \">\n      <span class=\"badge rounded-pill bg-warning\">\n        For Approval\n      </span>\n    </div> -->\n\n    <div class=\"row\" *ngIf=\"isNewCompany==true\" [hidden]=\"s1Application?.company?.status !== 'FOR_APPROVAL'\">\n      <!-- <mat-form-field class=\"col-md-4\" appearance=\"outline\">\n        <mat-label>Client Membership Affiliation</mat-label>\n        <mat-select [(ngModel)]=\"company.membersAffiliation\" name=\"membersAffiliation\" [compareWith]=\"compareMembersAffiliation\"\n          formControlName=\"membersAffiliation\" matNativeControl required>\n          <mat-option *ngFor=\"let i of memberAffiliationList\" [value]=\"i\">\n            {{i.description}}\n          </mat-option>\n        </mat-select>\n      </mat-form-field> -->\n\n      <mat-form-field class=\"col-md-4\" appearance=\"outline\" [hidden]=\" company?.country?.id > 1 && company?.country \">\n        <mat-label>Country</mat-label>\n        <!-- <input matInput disabled value=\"PHIL\"> -->\n        <!-- <input matInput disabled [(ngModel)]=\"company.country\" formControlName=\"country\"> -->\n        <mat-select [(ngModel)]=\"company.country\" name=\"country\" [compareWith]=\"compareCountry\"\n          formControlName=\"country\" matNativeControl required disabled>\n          <mat-option *ngFor=\"let i of countryList\" [value]=\"i\">\n            {{i.code}} - {{i.name}}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n\n      <mat-form-field class=\"col-md-8\" appearance=\"outline\" [hidden]=\"company?.country?.id > 1 && company?.country \">\n        <mat-label>Complete Address</mat-label>\n        <textarea matInput [(ngModel)]=\"company.completeAddress\" formControlName=\"companyAddress\" name=\"completeAddress\"\n          [readonly]=\"true\"></textarea>\n      </mat-form-field>\n    </div>\n\n    <div class=\"row\" *ngIf=\"showCompanyAddress==true\">\n      <!-- FOR S1 APPLICATION FORM -->\n      <mat-form-field class=\"col-md-8\" appearance=\"outline\">\n        <mat-label>Company Address</mat-label>\n        <textarea matInput readonly [value]=\"s1Application?.company?.completeAddress\"></textarea>\n      </mat-form-field>\n\n      <mat-form-field class=\"col-md-4\" appearance=\"outline\">\n        <mat-label>Country</mat-label>\n        <input matInput readonly [value]=\"s1Application?.company?.country?.name\">\n      </mat-form-field>\n    </div>\n\n  </div>\n\n  <div class=\"row\">\n    <mat-form-field class=\"col-md-4\" appearance=\"outline\">\n      <mat-label>\n        Brand\n        <span class=\"badge rounded-pill bg-warning\" *ngIf=\"s1Application?.brand?.status === 'FOR_APPROVAL'\">\n          For Approval\n        </span>\n        <span class=\"badge rounded-pill bg-danger\" *ngIf=\"s1Application?.brand?.penalty\">\n          With Penalty\n        </span>\n        <span class=\"required\">*</span>\n      </mat-label>\n      <mat-select [(ngModel)]=\"s1Application.brand\" name=\"brand\" formControlName=\"brand\" [compareWith]=\"compareBrand\"\n        [disabled]=\"(isAscUser && isDisableFieldOnUpdate) || (s2Application?.applicationForm || s1Application?.status === 'FOR_APPROVAL')\" matTooltip=\"Client's Brand\"\n        (selectionChange)=\"setBrand()\">\n        <mat-option value=\"\" (click)=\"openNewBrandModal()\"><span class=\"badge bg-success dropdown-badge\">Add New Brand</span></mat-option>\n        <mat-option *ngFor=\"let i of brandList\" [value]=\"i\">\n          {{i.description}}\n        </mat-option>\n      </mat-select>\n    </mat-form-field>\n\n    <mat-form-field class=\"col-md-4\" appearance=\"outline\">\n      <mat-label>\n        Product\n        <span class=\"badge rounded-pill bg-warning\" *ngIf=\"s1Application?.product?.status === 'FOR_APPROVAL'\">\n          For Approval\n        </span>\n        <span class=\"required\">*</span>\n      </mat-label>\n      <mat-select [(ngModel)]=\"s1Application.product\" name=\"product\" formControlName=\"product\"\n        [compareWith]=\"compareProduct\" (selectionChange)=\"setProductList()\"\n        [disabled]=\"(isAscUser && isDisableFieldOnUpdate || (s2Application?.applicationForm || s1Application?.status === 'FOR_APPROVAL')) || !s1Application.brand\">\n        <mat-option value=\"\" (click)=\"openNewProductModal()\"><span class=\"badge bg-success dropdown-badge\">Add New Product</span></mat-option>\n        <mat-option *ngFor=\"let i of productList\" [value]=\"i\">\n          {{i.description}}\n        </mat-option>\n      </mat-select>\n    </mat-form-field>\n\n    <mat-form-field class=\"col-md-4\" appearance=\"outline\">\n      <mat-label>Category</mat-label>\n      <input matInput readonly [value]=\"s1Application?.product?.category?.description\" />\n    </mat-form-field>\n\n    <!-- <mat-form-field *ngIf=\"s1Application.brand\" class=\"col-md-4\" appearance=\"outline\">\n      <mat-label>Product</mat-label>\n      <input matInput [(ngModel)]=\"s1Application.brand.product.description\" name=\"product\" formControlName=\"product\"\n        readonly>\n    </mat-form-field> -->\n\n    <!-- <mat-form-field *ngIf=\"s1Application.brand\" class=\"col-md-4\" appearance=\"outline\">\n      <mat-label>Category</mat-label>\n      <input matInput [(ngModel)]=\"s1Application.brand.category.description\" name=\"category\" formControlName=\"category\"\n        readonly>\n    </mat-form-field> -->\n    <!-- <div class=\"col-md-4\" *ngIf=\"s1Application?.brand?.status === 'FOR_APPROVAL' \">\n      <span class=\"badge rounded-pill bg-warning\">\n        For Approval\n      </span>\n    </div> -->\n    <div class=\"col-md-12 float-right\" style=\"padding-bottom:10px;\" *ngIf=\"s1Application?.brand?.status === 'FOR_APPROVAL' && isAscUser\">\n      <button mat-raised-button class=\"button-red\" (click)=\"openNewBrandModal('update')\">\n        <i class=\"material-icons color__white\">error_outline</i> View/Approve Brand\n      </button>\n    </div>\n    <div class=\"col-md-12 float-right\" style=\"padding-bottom:10px;\" *ngIf=\"s1Application?.product?.status === 'FOR_APPROVAL' && isAscUser\">\n      <button mat-raised-button class=\"button-red\" (click)=\"openNewProductModal('update')\">\n        <i class=\"material-icons color__white\">error_outline</i> View/Approve Product\n      </button>\n    </div>\n  </div>\n</form>\n\n<!-- FOR MULTIPLE/SPECIAL PREVIEW -->\n<div class=\"row\" *ngIf=\"multipleApplication?.status === 'APPROVED' || s1Application?.multipleApplication?.submissionStatus === 'UNPROCESSED' || s1Application?.status === 'APPROVED' || s1Application?.status === 'DISAPPROVED' || s1Application?.applicationRequest?.status === 'APPROVED'\">\n  <div class=\"row\">\n    <!-- <div class=\"col-md-4\" appearance=\"outline\">\n        <mat-label>Client Membership Affiliation</mat-label>\n        <input matInput [value]=\"previewS1Application?.membersAffiliation?.description\" disabled>\n      </div> -->\n    <mat-form-field class=\"col-md-4\" appearance=\"outline\">\n      <mat-label>Client Company Name</mat-label>\n      <input matInput [value]=\"s1Application?.company?.companyName\" readonly>\n    </mat-form-field>\n    <mat-form-field class=\"col-md-4\" appearance=\"outline\">\n      <mat-label>Client Membership Affiliation</mat-label>\n      <input matInput [value]=\"s1Application?.company?.membersAffiliation?.description\" readonly>\n    </mat-form-field>\n  </div>\n\n  <div class=\"row\">\n    <mat-form-field class=\"col-md-4\" appearance=\"outline\">\n      <mat-label>Brand</mat-label>\n      <input matInput [value]=\"s1Application?.brand?.description\" readonly>\n    </mat-form-field>\n    <mat-form-field class=\"col-md-4\" appearance=\"outline\">\n      <mat-label>Product</mat-label>\n      <input matInput [value]=\"s1Application?.product?.description\" readonly>\n    </mat-form-field>\n    <mat-form-field class=\"col-md-4\" appearance=\"outline\">\n      <mat-label>Category</mat-label>\n      <input matInput [value]=\"s1Application?.product?.category?.description\" readonly>\n    </mat-form-field>\n  </div>\n</div>\n","import { MultiMediaMoving } from './multimedia-moving.model';\nexport class MultiMediaMovingConstant {\n    data: Array<MultiMediaMoving> = new Array<MultiMediaMoving>();\n    constructor(){\n        this.data =   [{\n            id: 0,\n            multimediaMovingMedium: 'cinema',\n            hasSelected: false,\n          },\n          {\n            id: 1,\n            multimediaMovingMedium: 'collaterals',\n            hasSelected: false,\n          },\n          {\n            id: 2,\n            multimediaMovingMedium: 'digital video',\n            hasSelected: false,\n          },\n          {\n            id: 3,\n            multimediaMovingMedium: 'e-ooh',\n            hasSelected: false,\n          },\n          {\n            id: 4,\n            multimediaMovingMedium: 'television',\n            hasSelected: false,\n          }\n        ]\n    }\n}","export * from './client-information/client-information.component';\nexport * from './material-information/material-information.component';\nexport * from './preview-application/preview-application.component';\nexport * from './s1-application/add-s1-application/add-s1-application.component';\nexport * from './s1-application/list-s1-application/list-s1-application.component';\nexport * from './s2-application/add-s2-application/add-s2-application.component';\nexport * from './s2-application/list-s2-application/list-s2-application.component';","import { WebSocketService } from \"app/core/services/socket/websocket.service\";\nimport { BadgeCounnter } from \"app/core/models/counter\";\nimport {\n  AfterViewChecked,\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n} from \"@angular/core\";\nimport { Company, S1Application, UserAccount, Payment } from \"@models\";\nimport { FormGroup, FormControl } from \"@angular/forms\";\nimport Swal from \"sweetalert2\";\nimport {\n  ENDPOINTS,\n  FORM_TYPE,\n  ROLES,\n  TYPE_OF_MEDIUM,\n  APPLICATION_STATUS,\n  COMMON_FUNCTION,\n  SUBMISSION_TYPE,\n  APPLICATION_STATUS_FOR_COMPLIANCE,\n  SPECIAL_APPLICATION,\n  APPLICATION_STAGE,\n  OTHER_STATUS,\n  USER_ROLES,\n  APPFORM_TYPE,\n  APPLICATION_STATUS_REVISION,\n  APP_DECISION_STATUS,\n  ATTACHMENT_TYPE,\n  STATUSES,\n} from \"@shared\";\nimport { ApiService, SweetAlertService, DataStorageService } from \"@services\";\nimport { MatAccordion } from \"@angular/material/expansion\";\nimport { ClientInformationComponent } from \"../../client-information/client-information.component\";\nimport { MaterialInformationComponent } from \"../../material-information/material-information.component\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { DatePipe } from \"@angular/common\";\nimport { ApplicationSingleMedia } from \"../../../../../core/models/application-single-media.model\";\nimport { PreviewApplicationComponent } from \"../../preview-application/preview-application.component\";\nimport {\n  ApplicationMultimedia,\n  ApplicationMultimediaItemsDTO,\n} from \"../../../../../core/models/application-multimedia.model\";\nimport { DomSanitizer } from \"@angular/platform-browser\";\nimport { MultipleApplication } from \"app/core/models/multiple-application.model\";\nimport { NgxSpinnerService } from \"ngx-spinner\";\nimport { ApplicationRequest } from \"app/core/models/application-request.model\";\nimport { RejectDisapprovedReasonComponent } from \"app/modules/fragments/reject-disapproved-reason/reject-disapproved-reason.component\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { PerformanceMetricsComponent } from \"../../performance-metrics/performance-metrics.component\";\nimport { IncompleteDisapprovedRationaleComponent } from \"app/modules/fragments/incomplete-disapproved-rationale/incomplete-disapproved-rationale.component\";\nimport { Report } from \"app/core/models/report.model\";\nimport { Rationale } from \"app/core/models/rationale.model\";\nimport { CommonServices } from \"app/core/services/common-services.service\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\nimport { isEqual, format } from \"date-fns\";\n\n@Component({\n  selector: \"app-add-s1-application\",\n  templateUrl: \"./add-s1-application.component.html\",\n  styleUrls: [\"./add-s1-application.component.scss\"],\n})\nexport class AddS1ApplicationComponent\n  implements OnInit, AfterViewChecked, OnDestroy, AfterViewInit {\n  @ViewChild(MatAccordion) accordion: MatAccordion;\n  @ViewChild(ClientInformationComponent, { static: false })\n  clientInformation: ClientInformationComponent;\n  @ViewChild(MaterialInformationComponent, { static: false })\n  materialInformation: MaterialInformationComponent;\n  @ViewChild(PreviewApplicationComponent, { static: false })\n  previewApplication: PreviewApplicationComponent;\n  // @ViewChild(AttachmentDocumentComponent, { static: false }) materialAttachmentDocument: AttachmentDocumentComponent;\n  public exportTime = { hour: 0, minute: 0, meriden: \"AM\", format: 12 };\n\n  title = \"ASC Online System\";\n  s1Application = new S1Application();\n  multipleApplication = new MultipleApplication();\n  applicationRequest = new ApplicationRequest();\n  company = new Company();\n  applicationSingleMedia = new ApplicationSingleMedia();\n  presentorDetails = new UserAccount();\n  report = new Report();\n  rationale = new Rationale();\n  affiliationList = [];\n  companyList = [];\n  isNewCompany = false;\n  showCompanyAddress = false;\n  formTypeList = [...FORM_TYPE];\n  specialApplicationType = [...SPECIAL_APPLICATION];\n  applicationTypeList = [];\n  attachmentDocuments: any = {};\n  originalAttachmentDocuments = [];\n  revisionAttachmentDocuments = [];\n  complianceAttachmentDocuments = [];\n  paymentAttachment: any;\n  supportiveDocumentList = [];\n  multimediaStaticList = [];\n  selectedMultimediaList = [];\n  multimediaMovingList = [];\n  screenerList = [];\n  reviewerList = [];\n  applicantList = [];\n  mediaTypeListTemp = [];\n  rationaleOthersList = [];\n  rationaleLists = [];\n  adSpecialistList = [];\n  applicationSingleMediaTemp = new ApplicationSingleMedia();\n  payment = new Payment();\n  safeURL: any; // for payment\n  isScheduleSendIsEmpty: boolean;\n  selectedApplicationOwner: any;\n  applicationStage: string;\n  revisionLetterAttachment: any;\n  currentSizeLength: string;\n  currentSizeLengthMultimedia = [];\n  toDeleteMultimediaList = [];\n  hasMultimediaLengthChange: boolean;\n  hasMultimediaLengthToEnableSubmit = false;\n  disableSubmitButtonByMedia = false;\n  hasErrorsClient = false;\n  badgeCounter: BadgeCounnter = new BadgeCounnter();\n  hasErrorsMaterial;\n  currentUser: any;\n  currentUserRole: any;\n  id: number;\n  multipleId: number;\n  isChecked = false;\n  isAscUser = false;\n  isDisableFieldOnUpdate = false;\n  isInactiveAffiliation: boolean;\n  isSubmit = false;\n  noDocumentAttached = true;\n  accordionDisable = false;\n  accordionExpanded = false;\n  validationMessage = \"\";\n  buttonDisabled = true;\n  adSpecButtonDisabled = true;\n  rationaleDisplay = false;\n  submissionType = SUBMISSION_TYPE.ORIGINAL;\n  defaultReviewer: any;\n  maxSizeLength = 1000;\n\n  ascUserRoleList = [\n    ...ROLES.filter((role: any) => role.ascUser === true).map(\n      (role: any) => role.role\n    ),\n  ];\n\n  s1ApplicationForm: FormGroup;\n  todayDate = new Date();\n\n  isSuperAdmin = false;\n  isAdmin = false;\n  isAccounting = false;\n  isApplicant = false;\n  isEvaluator = false;\n  isAdSpecialist = false;\n  isScreener = false;\n  isReviewer = false;\n\n  previewAttachmentsList = [];\n  previewAttachmentsDisplayedColumns: string[] = [\n    \"decisionFormFilename\",\n    \"viewDecisionFormIcon\",\n    \"stampMaterialFilename\",\n    \"viewStampMaterialIcon\",\n  ];\n  previewAttachmentsListDataSource: MatTableDataSource<object>;\n\n  selected: any; // in html but not existing in component -- encountered during 'ng serve --aot'\n  multimediaDTO: any;\n\n  activeHolidayDates: Date[];\n  activeWeekendDates: Date[];\n\n  constructor(\n    private apiService: ApiService,\n    private sweetAlertService: SweetAlertService,\n    private dataStorage: DataStorageService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private sanitizer: DomSanitizer,\n    public datepipe: DatePipe,\n    private spinner: NgxSpinnerService,\n    private cd: ChangeDetectorRef,\n    private dialog: MatDialog,\n    private commonServices: CommonServices,\n    private _snackBar: MatSnackBar\n  ) {}\n\n  ngOnInit() {\n    if (this.dataStorage.getS1FormAndAppType()) {\n      this.s1Application.formType = this.dataStorage.getS1FormAndAppType().formType;\n      this.getApplicationTypeList(this.s1Application.formType);\n      this.s1Application.applicationType = this.dataStorage.getS1FormAndAppType().appType;\n    }\n\n    if (this.dataStorage.getS1Application()) {\n      this.s1Application = this.dataStorage.getS1Application();\n    }\n\n    if (this.dataStorage.getSpecialS1Application()) {\n      this.applicationRequest = this.dataStorage.getSpecialS1Application();\n      this.s1Application.formType = \"INDIVIDUAL\";\n      this.s1Application.submissionDate = this.applicationRequest.submissionDate;\n      if (this.s1Application.submissionDate) {\n        this.isChecked = true;\n        this.s1Application.autoSubmit = true;\n      }\n    }\n\n    this.setFormValidator();\n\n    this.currentUser = this.dataStorage.getUserAccount();\n    this.currentUserRole = this.currentUser.userRole.name;\n    this.initUserRole();\n    this.id = Number(this.route.snapshot.paramMap.get(\"id\"));\n    if (this.id !== 0) {\n      this.viewApplication();\n    }\n\n    this.multipleId = Number(this.route.snapshot.paramMap.get(\"multipleId\"));\n    const ctr = Number(this.route.snapshot.paramMap.get(\"nextSequence\"));\n\n    if (this.multipleId !== 0) {\n      this.spinner.show();\n      this.apiService\n        .findById(ENDPOINTS.multipleApplication, this.multipleId)\n        .subscribe(\n          (res: any) => {\n            this.s1Application.multipleApplication = res.responseData.data;\n            this.s1Application.applicationType = this.s1Application.multipleApplication.applicationType;\n            this.s1Application.adTitle = this.s1Application.multipleApplication.adTitle;\n            this.s1Application.brand = this.s1Application.multipleApplication.brand;\n            this.s1Application.product = this.s1Application.multipleApplication.product;\n            // this.s1Application.category = this.s1Application.multipleApplication.category;\n            this.s1Application.company = this.s1Application.multipleApplication.company;\n            this.s1Application.submissionDate = this.s1Application.multipleApplication.dateOfSubmission;\n            this.s1Application.autoSubmit = true;\n            // this.s1Application.membersAffiliation = this.s1Application.multipleApplication.membersAffiliation;\n            this.s1Application.tagLine = this.s1Application.multipleApplication.tagLine;\n            this.s1Application.formType = APPFORM_TYPE.MULTIPLE;\n            this.s1Application.sequenceOrder = ctr;\n            this.spinner.hide();\n          },\n          (err: any) => {\n            this.spinner.hide();\n          }\n        );\n    }\n\n    this.isAscUser = this.ascUserRoleList.includes(\n      this.dataStorage.getUserRole()\n    );\n    // this.s1Application.autoSubmit = false;\n    // this.s1Application.autoSubmitTime = 0;\n    // determines if the field will be enabled/disabled on update of s1 app\n    this.isDisableFieldOnUpdate =\n      ROLES.filter(\n        (res: any) =>\n          res.disableFieldOnUpdate === true && res.role === this.currentUserRole\n      ).length > 0 && this.id > 0\n        ? true\n        : false;\n\n    setTimeout(() => {\n      this.spinner.hide();\n    }, 1);\n    if (this.currentUserRole === USER_ROLES.ROLE_ENCODER) {\n      this.accordionDisable = false;\n      this.getUserTypeForList();\n    }\n    this.checkSingleMediaChanges();\n    this.getAllActiveHolidays();\n    this.getAllActiveWeekends();\n  }\n\n  matCalendarDateFilter(date: Date) {\n    return !this.isDateHoliday(date) && date.getDay() !== 7;\n  }\n\n  initUserRole() {\n    if (this.currentUser.userRole.name === USER_ROLES.ROLE_SUPER_ADMIN) {\n      this.isSuperAdmin = true;\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_ADMIN) {\n      this.isAdmin = true;\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_ACCOUNTING) {\n      this.isAccounting = true;\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT) {\n      this.isApplicant = true;\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_SCREENER) {\n      this.isScreener = true;\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_REVIEWER) {\n      this.isReviewer = true;\n    } else if (\n      this.currentUser.userRole.name === USER_ROLES.ROLE_AD_SPECIALIST\n    ) {\n      this.isAdSpecialist = true;\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_ENCODER) {\n      this.isEvaluator = true;\n    }\n  }\n\n  ngAfterViewInit(): void {\n    this.checkSingleMediaChanges();\n    // this.checkMultimediaChanges();\n  }\n\n  ngAfterViewChecked() {\n    if (this.applicationSingleMedia) {\n      this.checkSingleMediaChanges();\n    }\n    if (\n      this.materialInformation?.newMultimediaList.length ||\n      this.multimediaMovingList.length\n    ) {\n      // this.checkMultimediaChanges();\n    }\n    this.cd.detectChanges();\n  }\n\n  getScreenerAssignedAppCount(id: number) {\n    return 0;\n  }\n\n  ngOnDestroy(): void {\n    sessionStorage.removeItem(\"FORM_TYPE\");\n    sessionStorage.removeItem(\"APP_TYPE\");\n    sessionStorage.removeItem(\"NUMBER_OF_APPLICATIONS\");\n    sessionStorage.removeItem(\"S1_APPLICATION\");\n    sessionStorage.removeItem(\"MULTIPLE_S1_APPLICATION\");\n    sessionStorage.removeItem(\"SPECIAL_S1_APPLICATIONS\");\n    sessionStorage.removeItem(\"AMOUNT\");\n    // alert('destroy')\n    // const formAndAppType = {\n    //   formType: '',\n    //   appType: []\n    // }\n    // this.dataStorage.setRequestFormAndAppType(formAndAppType);\n  }\n\n  checkInactiveAffiliation() {\n    this.isInactiveAffiliation = this.clientInformation.isInactiveAffiliation;\n  }\n\n  viewApplication() {\n    this.spinner.show();\n    this.apiService.findById(ENDPOINTS.applicationForm, this.id).subscribe(\n      (res: any) => {\n        this.s1Application = res.responseData.data;\n        if (this.s1Application) {\n          console.log(\"View App: \", this.s1Application);\n\n          this.getApplicationTypeList(this.s1Application.formType);\n          this.setAppType(this.s1Application.applicationType);\n\n          this.clientInformation.s1Application = this.s1Application;\n          this.materialInformation.s1Application = this.s1Application;\n          this.setApplicationStage();\n          this.fetchMultimedia();\n\n          if (\n            this.s1Application.refTypeOfMedium === TYPE_OF_MEDIUM.SINGLE_MEDIA\n          ) {\n            this.getApplicationSingleMedia();\n          } else if (\n            this.s1Application.refTypeOfMedium ===\n            TYPE_OF_MEDIUM.MULTIMEDIA_MOVING\n          ) {\n            this.getMultimediaMoving();\n          } else if (\n            this.s1Application.refTypeOfMedium ===\n            TYPE_OF_MEDIUM.MULTIMEDIA_STATIC\n          ) {\n            this.getMultimediaStatic();\n          }\n\n          if (this.s1Application.autoSubmit) {\n            this.scheduleSubmission();\n            this.onChangeDate(this.s1Application.submissionDate);\n          }\n\n          if (this.currentUser.userRole.name !== USER_ROLES.ROLE_APPLICANT) {\n            this.getPresentorDetails();\n          }\n\n          if (\n            this.s1Application.mainAttachmentReference ||\n            this.s1Application.supportingAttachmentReference ||\n            this.s1Application.revisionLetterAttachmentReference\n          ) {\n            this.getAttachmentDocuments();\n          }\n\n          if (\n            this.currentUserRole === USER_ROLES.ROLE_AD_SPECIALIST ||\n            this.currentUserRole === USER_ROLES.ROLE_SCREENER ||\n            this.currentUserRole === USER_ROLES.ROLE_REVIEWER\n          ) {\n            this.getUserTypeForList();\n          }\n\n          if (\n            (this.s1Application.decisionStatus === \"INCOMPLETE\" ||\n              this.s1Application.decisionStatus === \"DISAPPROVED\" ||\n              this.s1Application.decisionStatus ===\n                APP_DECISION_STATUS.APPROVED ||\n              this.s1Application.decisionStatus ===\n                APP_DECISION_STATUS.APPROVED_WITH_CAUTION) &&\n            this.currentUserRole === USER_ROLES.ROLE_SCREENER\n          ) {\n            // if ((this.s1Application.internalStatus === APPLICATION_STATUS_FOR_COMPLIANCE.COMPLIANCE_DOCUMENT_VERIFIED_BY_AD_SPE ||\n            //   this.s1Application.internalStatus === APPLICATION_STATUS_FOR_COMPLIANCE.COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER)) {\n            //     // this.dataStorage.setDecisionStatus(this.s1Application.decisionStatus);\n            //     // if(this.rationaleLists.length <= 0){\n            //     //   this.s1Application.decisionStatus = \"\";\n            //     //   alert(\"BLANK\")\n            //     // }else{\n            //     //   this.s1Application.decisionStatus = this.dataStorage.getDecisionStatus();\n            //     // }\n            // }\n\n            if (\n              this.s1Application.internalStatus ===\n                APPLICATION_STATUS_FOR_COMPLIANCE.COMPLIANCE_DOCUMENT_VERIFIED_BY_AD_SPE ||\n              this.s1Application.internalStatus ===\n                APPLICATION_STATUS_REVISION.REVISION_VERIFIED_BY_AD_SPE\n            ) {\n              if (this.rationaleOthersList || this.rationaleLists) {\n                this.getRationaleList();\n              }\n              // alert(this.dataStorage.getDecisionStatus())\n              if (this.dataStorage.getDecisionStatus()) {\n                this.s1Application.decisionStatus = this.dataStorage.getDecisionStatus();\n              }\n              // if (this.s1Application.decisionStatus === APP_DECISION_STATUS.INCOMPLETE ||\n              //   this.s1Application.decisionStatus === APP_DECISION_STATUS.DISAPPROVED) {\n              // this.getRationaleList();\n              // alert('KHFDSKF')\n              // console.log(\"HIIAHIIHIFDIFS\", this.rationaleLists);\n              // }\n            }\n          }\n\n          if (\n            this.isAdmin ||\n            this.isSuperAdmin ||\n            this.isApplicant ||\n            this.isAdSpecialist\n          ) {\n            this.apiService\n              .findByParam(\n                ENDPOINTS.stampedMaterialAndDecisionForms,\n                this.s1Application?.appFormReference\n              )\n              .subscribe((previewAttachmentsData) => {\n                this.previewAttachmentsList =\n                  previewAttachmentsData.responseData.data;\n                this.previewAttachmentsListDataSource = new MatTableDataSource<object>(\n                  this.previewAttachmentsList\n                );\n              });\n          }\n\n          console.log(\"VIEW APP FORM: \", this.s1Application);\n          setTimeout(() => {\n            this.spinner.hide();\n          }, 1);\n\n          if (this.s1Application.externalStatus) {\n            this.accordionDisable = false;\n          }\n        }\n      },\n      (err: any) => {\n        this.spinner.hide();\n      }\n    );\n  }\n\n  setApplicationStage(): void {\n    this.clientInformation.applicationStage = APPLICATION_STAGE.S1_APPLICATION;\n    this.materialInformation.applicationStage =\n      APPLICATION_STAGE.S1_APPLICATION;\n  }\n\n  getPresentorDetails() {\n    this.apiService\n      .findByParam(\n        ENDPOINTS.userLogin,\n        this.s1Application.applicationOwner.username\n      )\n      .subscribe(\n        (res: any) => {\n          if (res.responseData.data) {\n            this.presentorDetails = res.responseData.data;\n          }\n        },\n        (err: any) => {}\n      );\n  }\n\n  getApplicationSingleMedia() {\n    this.apiService\n      .findByParam(\n        ENDPOINTS.applicationSingleMedia,\n        `app-form-reference/${this.s1Application.appFormReference}`\n      )\n      .subscribe(\n        (res: any) => {\n          if (res.responseData.data.length > 0) {\n            this.applicationSingleMedia = res.responseData.data[0];\n            if (\n              this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT &&\n              this.s1Application.externalStatus === APPLICATION_STATUS.SAVED\n            ) {\n              this.materialInformation.applicationSingleMedia = this.applicationSingleMedia;\n            }\n            if (this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT) {\n              this.previewApplication.applicationSingleMedia = this.applicationSingleMedia;\n            }\n            this.currentSizeLength = this.applicationSingleMedia.sizeLength;\n            console.log(\n              \"view applicationSingleMedia: \",\n              this.applicationSingleMedia\n            );\n          } else {\n            this.applicationSingleMedia = new ApplicationSingleMedia();\n          }\n        },\n        (err: any) => {\n          this.applicationSingleMedia = new ApplicationSingleMedia();\n        }\n      );\n  }\n\n  getMultimediaStatic() {\n    this.apiService\n      .findByParam(\n        ENDPOINTS.applicationMultimedia,\n        `app-form-reference/${this.s1Application.appFormReference}`\n      )\n      .subscribe(\n        (res: any) => {\n          if (res.responseData.data.length > 0) {\n            this.multimediaStaticList = res.responseData.data;\n\n            if (\n              this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT &&\n              this.s1Application.externalStatus === APPLICATION_STATUS.SAVED\n            ) {\n              this.materialInformation.selectedMultimediaList = this.multimediaStaticList;\n            }\n            if (this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT) {\n              this.previewApplication.multimediaStaticList = this.multimediaStaticList;\n            }\n\n            console.log(\n              \"view multimediaStaticList: \",\n              this.multimediaStaticList\n            );\n            this.selectedMultimediaList = this.multimediaStaticList;\n          } else {\n            this.multimediaStaticList = [];\n          }\n        },\n        (err: any) => {\n          // this.multimediaStaticList = [];\n        }\n      );\n  }\n\n  getMultimediaMoving() {\n    this.apiService\n      .findByParam(\n        ENDPOINTS.applicationMultimedia,\n        `app-form-reference/${this.s1Application.appFormReference}`\n      )\n      .subscribe(\n        (res: any) => {\n          if (res.responseData.data.length > 0) {\n            this.multimediaMovingList = res.responseData.data;\n            this.currentSizeLengthMultimedia = this.multimediaMovingList.map(\n              (mappedMultimedia) => ({\n                multimediaSizeLength: mappedMultimedia.multimediaSizeLength,\n                typeOfMedium: mappedMultimedia.typeOfMedium.description,\n              })\n            );\n\n            if (\n              this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT &&\n              this.s1Application.externalStatus === APPLICATION_STATUS.SAVED\n            ) {\n              this.materialInformation.selectedMultimediaList = this.multimediaMovingList;\n            }\n            if (this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT) {\n              this.previewApplication.multimediaMovingList = this.multimediaMovingList;\n            }\n            console.log(\n              \"view multimediaMovingList: \",\n              this.multimediaMovingList\n            );\n            this.selectedMultimediaList = this.multimediaMovingList;\n          } else {\n            this.multimediaMovingList = [];\n          }\n        },\n        (err: any) => {\n          this.multimediaMovingList = [];\n        }\n      );\n  }\n\n  getAttachmentDocuments() {\n    this.apiService\n      .findAll(\n        ENDPOINTS.attachmentDocumentByAppFormReference +\n          this.s1Application.appFormReference\n      )\n      .subscribe((res: any) => {\n        this.attachmentDocuments = res.responseData.data;\n\n        if (\n          this.attachmentDocuments &&\n          this.attachmentDocuments.originalAttachmentDocuments.length !== 0\n        ) {\n          if (\n            this.attachmentDocuments.originalAttachmentDocuments.length === 1 &&\n            this.attachmentDocuments.originalAttachmentDocuments[0].attachmentType.includes(\n              \"SUPPORTIVE\"\n            )\n          ) {\n            this.attachmentDocuments.originalAttachmentDocuments[0] = null;\n            this.attachmentDocuments.originalAttachmentDocuments[1] = this.attachmentDocuments[0];\n          }\n\n          if (\n            this.attachmentDocuments.originalAttachmentDocuments.length === 2\n          ) {\n            const mainDoc = this.attachmentDocuments.originalAttachmentDocuments.filter(\n              (data) => data?.attachmentType === ATTACHMENT_TYPE.MAIN\n            )[0];\n\n            const suppDoc = this.attachmentDocuments.originalAttachmentDocuments.filter(\n              (data) => data?.attachmentType === ATTACHMENT_TYPE.SUPPORTIVE\n            )[0];\n\n            this.attachmentDocuments.originalAttachmentDocuments[0] = mainDoc;\n            this.attachmentDocuments.originalAttachmentDocuments[1] = suppDoc;\n          }\n        }\n        // this.revisionLetterAttachment = this.attachmentDocuments.filter(data =>\n        //   data?.attachmentType === ATTACHMENT_TYPE.REVISION_LETTER)[0];\n\n        this.originalAttachmentDocuments = this.attachmentDocuments.originalAttachmentDocuments;\n        this.revisionAttachmentDocuments = this.attachmentDocuments.revisionAttachmentDocuments;\n        this.complianceAttachmentDocuments = this.attachmentDocuments.complianceAttachmentDocuments;\n\n        if (\n          this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT &&\n          this.s1Application.externalStatus === APPLICATION_STATUS.SAVED\n        ) {\n          this.materialInformation.originalAttachmentDocuments = this.attachmentDocuments.originalAttachmentDocuments;\n          this.materialInformation.revisionAttachmentDocuments = this.attachmentDocuments.revisionAttachmentDocuments;\n          this.materialInformation.complianceAttachmentDocuments = this.attachmentDocuments.complianceAttachmentDocuments;\n        }\n\n        if (this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT) {\n          this.previewApplication.originalAttachmentDocuments = this.attachmentDocuments.originalAttachmentDocuments;\n          this.previewApplication.revisionAttachmentDocuments = this.attachmentDocuments.revisionAttachmentDocuments;\n          this.previewApplication.complianceAttachmentDocuments = this.attachmentDocuments.complianceAttachmentDocuments;\n        }\n        console.log(\"view attachmentDocuments: \", this.attachmentDocuments);\n\n        // check if there's supporting doc\n        if (this.s1Application.supportingAttachmentReference) {\n          this.getSupportiveDocuments();\n        }\n      });\n\n    // Fetch payment details\n    if (this.s1Application.paymentAttachmentReference !== null) {\n      this.viewPayment();\n    }\n  }\n\n  viewPayment() {\n    this.apiService\n      .findByParam(\n        ENDPOINTS.payment,\n        `app-form-reference/${this.s1Application.appFormReference}`\n      )\n      .subscribe(\n        (res: any) => {\n          if (res.responseData.data) {\n            this.payment = res.responseData.data;\n            this.apiService\n              .findByParam(\n                ENDPOINTS.attachmentDocument,\n                `payment-attachment-reference/${this.s1Application.paymentAttachmentReference}`\n              )\n              .subscribe(\n                (res1: any) => {\n                  if (res1) {\n                    this.paymentAttachment = res1;\n                    this.safeURL = this.sanitizer.bypassSecurityTrustResourceUrl(\n                      this.paymentAttachment.fileURL\n                    );\n                    console.log(\n                      \"view paymentAttachment: \",\n                      this.paymentAttachment\n                    );\n                  }\n                },\n                (err: any) => {\n                  this.paymentAttachment = [];\n                }\n              );\n          }\n        },\n        (err: any) => {}\n      );\n  }\n\n  getSupportiveDocuments() {\n    this.apiService\n      .findByParam(\n        ENDPOINTS.supportiveDocument,\n        `application-form-id/${this.s1Application.id}`\n      )\n      .subscribe(\n        (res: any) => {\n          if (res.responseData.data.length > 0) {\n            this.supportiveDocumentList = res.responseData.data;\n            if (\n              this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT &&\n              this.s1Application.externalStatus === APPLICATION_STATUS.SAVED\n            ) {\n              this.materialInformation.supportiveDocumentList = this.supportiveDocumentList;\n            }\n            if (this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT) {\n              this.previewApplication.supportiveDocumentList = this.supportiveDocumentList;\n            }\n            console.log(\n              \"view supportiveDocumentList: \",\n              this.supportiveDocumentList\n            );\n          }\n        },\n        (err: any) => {\n          this.supportiveDocumentList = [];\n        }\n      );\n  }\n\n  scheduleSubmission() {\n    this.isChecked = !this.isChecked;\n    this.s1Application.autoSubmit = !this.s1Application.autoSubmit;\n    const submissionDateValue = \"submissionDate\";\n    this.s1ApplicationForm.controls[submissionDateValue].reset();\n    this.disableSaveAndSubmitButton();\n  }\n\n  /* setTime(time) {\n    this.s1Application.autoSubmitTime = time;\n  } */\n\n  // noDocumentAttachFunction(): void {\n  //   this.noDocumentAttached = !this.noDocumentAttached;\n  // }\n\n  setFormValidator(): void {\n    // this.s1ApplicationForm = this.formBuilder.group({\n    //   type: ['', Validators.required]\n    // });\n    this.s1ApplicationForm = new FormGroup({\n      formType: new FormControl(),\n      applicationType: new FormControl(),\n      decision: new FormControl(),\n      submissionDate: new FormControl(),\n      applicationRequest: new FormControl(),\n      actionStatus: new FormControl(),\n      assignedUser: new FormControl(),\n      decisionStatus: new FormControl(),\n    });\n  }\n\n  resetFormValidator(): void {\n    this.s1Application = new S1Application();\n    this.s1ApplicationForm.markAsUntouched();\n    this.s1ApplicationForm.markAsPristine();\n  }\n\n  clear(): void {\n    this.s1Application = new S1Application();\n  }\n\n  getApplicationTypeList(formType) {\n    this.s1Application.formType = formType;\n    this.applicationTypeList = [];\n    this.apiService.findAll(ENDPOINTS.applicationType).subscribe(\n      (res: any) => {\n        // if (formType !== 'MULTIPLE') {\n        this.applicationTypeList = res.responseData.data;\n        // } else {\n        //   this.applicationTypeList.push(res.responseData.data[0]);\n        //   this.applicationTypeList.push(res.responseData.data[1]);\n        // }\n      },\n      (err: any) => {}\n    );\n  }\n\n  getUserTypeForList() {\n    this.apiService.findAll(ENDPOINTS.userAccount).subscribe((res: any) => {\n      res.responseData.data.filter((account: any) => {\n        if (this.currentUserRole === USER_ROLES.ROLE_AD_SPECIALIST) {\n          if (\n            account.userRole.name.toUpperCase() === USER_ROLES.ROLE_SCREENER\n          ) {\n            this.apiService\n              .findAll(\n                ENDPOINTS.applicationFormScreener +\n                  `custom/search?assignedScreenerId=${account.id}&page=1&size=100`\n              )\n              .subscribe(\n                (result: any) => {\n                  account.ctr = result.data.length;\n                  console.log(\"counter ->\", account);\n                  this.screenerList.push(account);\n                },\n                (err: any) => {}\n              );\n          }\n\n          if (\n            account.userRole.name.toUpperCase() ===\n            USER_ROLES.ROLE_AD_SPECIALIST\n          ) {\n            this.adSpecialistList.push(account);\n          }\n        }\n        if (this.currentUserRole === USER_ROLES.ROLE_SCREENER) {\n          if (\n            account.userRole.name.toUpperCase() === USER_ROLES.ROLE_REVIEWER\n          ) {\n            // start set partner reviewer as default/first\n            this.defaultReviewer = res.responseData.data.filter(\n              (reviewer: any) =>\n                reviewer.userRole.name.toUpperCase() ===\n                  USER_ROLES.ROLE_REVIEWER && reviewer.ascDefault === true\n            );\n\n            this.reviewerList = this.defaultReviewer;\n            const otherReviewers = res.responseData.data.filter(\n              (reviewer: any) =>\n                reviewer.userRole.name.toUpperCase() ===\n                  USER_ROLES.ROLE_REVIEWER && reviewer.ascDefault === false\n            );\n            this.reviewerList.push(...otherReviewers);\n\n            // this.s1Application.assignedUser = this.reviewerList[0];\n            this.s1Application.assignedReviewer = this.reviewerList[0];\n            // end set partner reviewer as default/first\n          }\n        }\n        this.buttonValidation(\"\");\n      });\n\n      if (this.currentUserRole === USER_ROLES.ROLE_ENCODER) {\n        console.log(\"ITS WORKING \");\n\n        this.applicantList = res.responseData.data.filter(\n          (account: any) =>\n            account.userRole.name === USER_ROLES.ROLE_APPLICANT &&\n            account.status === COMMON_FUNCTION.ACTIVE\n        );\n      }\n    });\n  }\n\n  checkAscRateBeforeSaveOrSubmit(process = \"save\") {\n    const sizeLength = +this.applicationSingleMedia?.sizeLength;\n    if (sizeLength > this.maxSizeLength) {\n      this.sweetAlertService.customErrorMessage(\n        `Max input for size/length is ${this.maxSizeLength}`\n      );\n    } else if (\n      this.s1Application.formType === \"MULTIPLE\" &&\n      !this.specialApplicationType.includes(\n        this.s1Application.applicationType.description.toUpperCase()\n      )\n    ) {\n      this.saveOrUpdateApplication(\"SAVED\");\n    } else if (\n      this.s1Application?.refTypeOfMedium === \"SINGLE MEDIA\" &&\n      this.s1Application.formType !== \"MULTIPLE\"\n    ) {\n      this.validateAscRates(process);\n    } else {\n      if (process === \"save\") {\n        this.saveOrUpdateApplication(\"SAVED\");\n      } else if (process === \"submit\") {\n        this.saveStatus(\"presentor\", \"submit\", \"S1_APPLICATION_SUBMITTED\");\n      }\n    }\n  }\n\n  validateAscRates(process = \"save\") {\n    this.apiService\n      .save(ENDPOINTS.validateAscRates, this.applicationSingleMedia)\n      .subscribe(\n        (res) => {\n          if (process === \"save\") {\n            this.saveOrUpdateApplication(\"SAVED\");\n          } else if (process === \"submit\") {\n            this.saveStatus(\"presentor\", \"submit\", \"S1_APPLICATION_SUBMITTED\");\n          }\n        },\n        (err) => {\n          this.sweetAlertService.error(err);\n        }\n      );\n  }\n\n  saveOrUpdateApplication(status, process = \"save\") {\n    console.log(\"1\");\n    console.log(\n      \"this.s1Application.appFormReference: \",\n      this.s1Application.appFormReference\n    );\n\n    if (\n      this.s1Application.formType === \"MULTIPLE\" &&\n      !this.s1Application.multipleApplication\n    ) {\n      Swal.fire({\n        text: `Are you sure you want to ${\n          process === \"save\" ? \"save\" : \"submit\"\n        } this multiple application?`,\n        icon: \"question\",\n        showCancelButton: true,\n        confirmButtonColor: \"#3085d6\",\n        cancelButtonColor: \"#d33\",\n        confirmButtonText: \"Confirm\",\n      }).then((result) => {\n        if (result.value) {\n          this.spinner.show();\n\n          this.multipleApplication.numberOfApplication = this.dataStorage.getNumberOfApplications();\n          this.multipleApplication.applicationType = this.s1Application.applicationType;\n          this.multipleApplication.dateOfSubmission = new Date(\n            this.s1Application.submissionDate\n          );\n          this.multipleApplication.status = this.specialApplicationType.includes(\n            this.multipleApplication.applicationType.description.toUpperCase()\n          )\n            ? OTHER_STATUS.FOR_APPROVAL\n            : APPLICATION_STATUS.APPROVED;\n          this.multipleApplication.actionBy = this.currentUser.username;\n          this.multipleApplication.actionDate = new Date();\n          if (this.currentUser.userRole.name === USER_ROLES.ROLE_ENCODER) {\n            this.multipleApplication.applicationOwner = this.s1Application.applicationOwner;\n          } else {\n            this.multipleApplication.applicationOwner = this.currentUser;\n          }\n          this.multipleApplication.submissionStatus = \"UNPROCESSED\";\n          this.multipleApplication.assignedAdSpecialist = null;\n          this.multipleApplication.assignedEncoder = null;\n          this.multipleApplication.assignedScreener = null;\n          this.multipleApplication.assignedReviewer = null;\n\n          // From Client Info\n          // this.multipleApplication.membersAffiliation = this.clientInformation.s1Application.membersAffiliation;\n          this.multipleApplication.company = this.clientInformation.s1Application.company;\n          this.multipleApplication.brand = this.clientInformation.s1Application.brand;\n          this.multipleApplication.product = this.clientInformation.s1Application.product;\n          // this.multipleApplication.category = this.clientInformation.s1Application.category;\n\n          // From Material Info\n          this.multipleApplication.adTitle = this.materialInformation.s1Application.adTitle;\n          this.multipleApplication.tagLine = this.materialInformation.s1Application.tagLine;\n\n          this.save();\n        }\n      });\n    } else {\n      if (\n        this.s1Application.appFormReference &&\n        this.s1Application.appFormReference !== \"\" &&\n        this.s1Application.appFormReference !== undefined\n      ) {\n        if (status !== APPLICATION_STATUS.SAVED) {\n          this.isSubmit = true;\n        }\n        console.log(\"APPFORM: \", this.s1Application);\n        console.log(\"process :: \", process);\n        if (process === \"save\") {\n          Swal.fire({\n            text: `Are you sure you want to ${process} this application?`,\n            icon: \"question\",\n            showCancelButton: true,\n            confirmButtonColor: \"#3085d6\",\n            cancelButtonColor: \"#d33\",\n            confirmButtonText: \"Confirm\",\n          }).then((result) => {\n            if (result.value) {\n              this.spinner.show();\n              this.setAndSaveS1Data(status);\n            }\n          });\n        } else {\n          Swal.fire({\n            text: `Are you sure you want to ${process} this application?`,\n            icon: \"question\",\n            showCancelButton: true,\n            confirmButtonColor: \"#3085d6\",\n            cancelButtonColor: \"#d33\",\n            confirmButtonText: \"Confirm\",\n          }).then((result) => {\n            if (result.value) {\n              this.setAndSaveS1Data(status);\n            }\n          });\n        }\n      } else {\n        this.sweetAlertService.customErrorMessage(\n          \"Missing application form reference.\"\n        );\n      }\n    }\n  }\n\n  setAndSaveS1Data(status): void {\n    console.log(\"2\");\n\n    if (this.s1Application.id === undefined) {\n      this.s1Application.id = 0;\n      this.s1Application.applicationOwner = this.currentUser;\n      // this.s1Application.appFormReference = ''; // ETO PALAAAA!!!!\n      this.s1Application.referenceCode = \"\";\n    }\n\n    // From Client Info\n    // this.s1Application.membersAffiliation = this.clientInformation.s1Application.membersAffiliation;\n    this.s1Application.company = this.clientInformation.s1Application.company;\n    this.s1Application.brand = this.clientInformation.s1Application.brand;\n    this.s1Application.product = this.clientInformation.s1Application.product;\n    // this.s1Application.category = this.clientInformation.s1Application.category;\n\n    // From Material Info\n    this.s1Application.adTitle = this.materialInformation.s1Application.adTitle;\n    this.s1Application.referenceCode = this.materialInformation.s1Application.referenceCode;\n    this.s1Application.tagLine = this.materialInformation.s1Application.tagLine;\n\n    // SubmissionType (default: ORIGINAL)\n    this.s1Application.submissionType = this.submissionType;\n\n    // Delete auto submit details if autoSubmit is false\n    if (this.s1Application.autoSubmit === false) {\n      this.isScheduleSendIsEmpty = false;\n      this.s1Application.submissionDate = null;\n    }\n    console.log(\"Saving...\");\n    this.save();\n  }\n\n  save() {\n    console.log(\"3\");\n    if (\n      this.s1Application.formType === \"INDIVIDUAL\" ||\n      this.s1Application.formType === \"FOR_PRESENTATION\" ||\n      (this.s1Application.formType === \"MULTIPLE\" &&\n        this.s1Application.multipleApplication)\n    ) {\n      this.spinner.show();\n      // Save S1 Form\n      this.mediaTypeListTemp = this.materialInformation.newMultimediaList;\n      this.applicationSingleMediaTemp = this.materialInformation.applicationSingleMedia;\n\n      this.setTypeOfMediumDisplay();\n      //\n      if (this.s1Application.refTypeOfMedium === TYPE_OF_MEDIUM.SINGLE_MEDIA) {\n        this.saveUpdateApplicationSingleMedia(\"SAVE\", null, null);\n      } else {\n        this.saveUpdateMultimedia(\"SAVE\", null, null);\n      }\n    } else if (this.s1Application.formType === \"MULTIPLE\") {\n      this.spinner.show();\n      this.apiService\n        .save(ENDPOINTS.multipleApplication, this.multipleApplication)\n        .subscribe(\n          (res: any) => {\n            this.spinner.hide();\n            this.router.navigate([\"asc/page/application/s1/multiple\"]);\n            const message = this.specialApplicationType.includes(\n              this.multipleApplication.applicationType.description.toUpperCase()\n            )\n              ? \"Multiple application successfully submitted for approval\"\n              : \"Multiple application successfully saved\";\n            this.sweetAlertService.customSuccessMessage(message);\n            // this.navigateToS1List();\n          },\n          (err: any) => {\n            console.log(err);\n            this.spinner.hide();\n            this.sweetAlertService.error(err);\n          }\n        );\n    }\n  }\n\n  setTypeOfMediumDisplay() {\n    console.log(\"3a\");\n    if (this.s1Application.refTypeOfMedium === TYPE_OF_MEDIUM.SINGLE_MEDIA) {\n      this.s1Application.typeOfMedium = this.materialInformation?.typeOfMedium?.description;\n    } else {\n      let movingStatic = \"\";\n      if (this.s1Application.typeOfMedium) {\n        movingStatic = this.s1Application.typeOfMedium;\n      }\n\n      this.mediaTypeListTemp.forEach((element) => {\n        if (movingStatic === \"\") {\n          movingStatic = element.description;\n        } else if (!movingStatic.includes(element.description)) {\n          movingStatic = movingStatic + \"/\" + element.description;\n        }\n        this.s1Application.typeOfMedium = movingStatic;\n      });\n\n      // removed multimediaToDelete\n      if (this.materialInformation?.toDeleteMultimediaList.length > 0) {\n        let currentTOM = this.s1Application.typeOfMedium;\n        this.materialInformation?.toDeleteMultimediaList?.forEach(\n          (multimediaToDelete) => {\n            console.log(\n              \"REMOVE: \",\n              multimediaToDelete.typeOfMedium.description\n            );\n            currentTOM = currentTOM.replace(\n              multimediaToDelete.typeOfMedium.description + \"/\",\n              \"\"\n            );\n            currentTOM = currentTOM.replace(\n              \"/\" + multimediaToDelete.typeOfMedium.description,\n              \"\"\n            );\n          }\n        );\n        this.s1Application.typeOfMedium = currentTOM;\n      }\n    }\n  }\n\n  saveUpdateApplicationSingleMedia(status, ascUser, action) {\n    console.log(\"3b\");\n    this.applicationSingleMediaTemp.appFormReference = this.s1Application?.appFormReference;\n\n    // this.spinner.hide();\n    if (this.applicationSingleMediaTemp) {\n      // this.spinner.show();\n      this.apiService\n        .save(ENDPOINTS.applicationSingleMedia, this.applicationSingleMediaTemp)\n        .subscribe(\n          (res: any) => {\n            if (res !== undefined) {\n              console.log(\n                \"SAVED applicationSingleMedia: \",\n                res.responseData.data\n              );\n            }\n          },\n          (err: any) => {\n            // this.spinner.hide();\n            this.sweetAlertService.error(err);\n            return;\n          },\n          () => {\n            // this.spinner.hide();\n            if (status?.toUpperCase() === COMMON_FUNCTION.SAVE.toUpperCase()) {\n              this.saveAppForm();\n            } else if (\n              status?.toUpperCase() === COMMON_FUNCTION.SUBMIT.toUpperCase()\n            ) {\n              this.processAppForm(ascUser, action);\n            }\n          }\n        );\n    }\n  }\n\n  saveUpdateMultimedia(status, ascUser, action) {\n    let typeOfMultimedia = \"\";\n    this.multimediaDTO.appFormReference = this.s1Application.appFormReference;\n\n    if (\n      this.s1Application.refTypeOfMedium === TYPE_OF_MEDIUM.MULTIMEDIA_MOVING\n    ) {\n      typeOfMultimedia = \"moving\";\n    } else {\n      typeOfMultimedia = \"static\";\n    }\n\n    this.apiService\n      .save(\n        ENDPOINTS.applicationMultimedia + \"-\" + typeOfMultimedia,\n        this.multimediaDTO\n      )\n      .subscribe(\n        (res: any) => {},\n        (err: any) => {\n          // this.spinner.hide();\n          this.sweetAlertService.error(err);\n        },\n        () => {\n          // this.spinner.hide();\n          if (status?.toUpperCase() === COMMON_FUNCTION.SAVE.toUpperCase()) {\n            this.saveAppForm();\n          } else if (\n            status?.toUpperCase() === COMMON_FUNCTION.SUBMIT.toUpperCase()\n          ) {\n            this.processAppForm(ascUser, action);\n          } else {\n            this.spinner.hide();\n          }\n        }\n      );\n  }\n\n  // OLD IMPLEMENTATION - TO BE REMOVED ONCE VERIFIED\n  // saveUpdateMultimedia(status, ascUser, action) {\n  //   console.log('3c');\n  //   const asd = this.multimediaMovingList.concat(this.multimediaStaticList);\n\n  //   const multimediaList = [];\n  //   this.mediaTypeListTemp = this.materialInformation.newMultimediaList;\n\n  //   this.mediaTypeListTemp.forEach(element => {\n  //     if (element.sizeLength !== undefined) {\n\n  //       const obj = new ApplicationMultimedia();\n  //       obj.typeOfMedium = element;\n  //       obj.appFormReference = this.s1Application.appFormReference;\n  //       obj.multimediaSizeLength = element.sizeLength;\n\n  //       if (element.multimediaMoving) {\n  //         obj.mediaType = TYPE_OF_MEDIUM.MOVING;\n  //       }\n\n  //       if (element.multimediaStatic) {\n  //         obj.mediaType = TYPE_OF_MEDIUM.STATIC;\n  //       }\n\n  //       const existingValue = this.selectedMultimediaList.filter(filteredMedia => filteredMedia?.typeOfMedium?.id === obj.typeOfMedium.id);\n  //       if (existingValue.length) {\n  //         obj.id = existingValue[0].id;\n  //       }\n\n  //       delete element.sizeLength;\n  //       multimediaList.push(obj);\n  //     }\n  //   });\n\n  //   // this.spinner.show();\n  //   this.apiService.save(ENDPOINTS.applicationMultimedia + '/' + COMMON_FUNCTION.BATCH, multimediaList).subscribe(\n  //     (res: any) => {\n  //       // remove blank multimedia size/length\n  //       this.materialInformation?.toDeleteMultimediaList?.forEach(multimediaToDelete => {\n  //         this.apiService.deleteById(`${ENDPOINTS.applicationMultimedia}`, multimediaToDelete.id).subscribe();\n  //       });\n  //       // this.spinner.hide();\n  //     }, (err: any) => {\n  //       // this.spinner.hide();\n  //       this.sweetAlertService.error(err);\n  //     }, () => {\n  //       // this.spinner.hide();\n  //       if (status?.toUpperCase() === COMMON_FUNCTION.SAVE.toUpperCase()) {\n  //         this.saveAppForm();\n  //       } else if (status?.toUpperCase() === COMMON_FUNCTION.SUBMIT.toUpperCase()) {\n  //         this.processAppForm(ascUser, action);\n  //       } else {\n  //         this.spinner.hide();\n  //       }\n  //     });\n  // }\n\n  saveAppForm() {\n    console.log(\"4.0\");\n    console.log(\"TO SAVE: \", this.s1Application);\n    this.s1Application.actionBy = this.currentUser;\n    // ENDPOINTS.applicationFormEncoder + COMMON_FUNCTION.VERIFY;\n    this.apiService\n      .save(\n        ENDPOINTS.applicationFormPresentor + COMMON_FUNCTION.SAVE,\n        this.s1Application\n      )\n      .subscribe(\n        (res: any) => {\n          if (res !== undefined) {\n            this.id = res.responseData.data.id;\n            this.s1Application = res.responseData.data;\n            console.log(\"SAVED:\", this.s1Application);\n\n            // if (this.currentUserRole === USER_ROLES.ROLE_ENCODER) {\n            //   this.saveS1ApplicationByEncoder(this.s1Application);\n            // }\n\n            this.spinner.hide();\n          }\n        },\n        (err: any) => {\n          this.spinner.hide();\n          this.sweetAlertService.error(err);\n        },\n        () => {\n          // actions after subscription\n          // this.resetFormValidator();\n          if (this.s1Application.id !== undefined && this.isSubmit === false) {\n            // this.router.navigate(['asc/page/application/s1/update/', this.id]);\n            this.spinner.hide();\n            this.sweetAlertService.customSuccessMessage(\n              \"Application successfully saved.\"\n            );\n            if (this.s1Application.multipleApplication) {\n              this.router.navigate([\"asc/page/application/s1/multiple\"]);\n            } else {\n              this.navigateToS1List();\n            }\n          } else {\n            console.log(\"COMMENT OUT: S1_APPLICATION_SUBMITTED\");\n            // this.saveStatus('presentor', 'submit', 'S1_APPLICATION_SUBMITTED');\n          }\n        }\n      );\n  }\n\n  saveSupportingDocuments() {\n    this.spinner.show();\n    const supportingDocuments = [];\n\n    this.materialInformation.newSupportiveDocumentList = this.materialInformation.newSupportiveDocumentList.map(\n      (res: any) => {\n        res.applicationForm = this.s1Application;\n        supportingDocuments.push(res);\n      }\n    );\n    this.apiService\n      .save(\n        ENDPOINTS.supportiveDocument + \"/\" + COMMON_FUNCTION.BATCH,\n        supportingDocuments\n      )\n      .subscribe(\n        (res: any) => {\n          console.log(\"Saved suppoting docs successfully.\");\n          this.spinner.hide();\n        },\n        (err: any) => {\n          this.spinner.hide();\n          this.sweetAlertService.error(err);\n          return;\n        }\n      );\n  }\n\n  setAppType(type) {\n    this.s1Application.applicationType = type;\n  }\n\n  compareFormType(value: any, selected: any): boolean {\n    if (value && selected) {\n      return value.description === selected;\n    }\n  }\n\n  compareApplicationType(value: any, selected: any): boolean {\n    if (value && selected) {\n      return value.description === selected.description;\n    }\n  }\n\n  compareAssignedScreener(value: any, selected: any): boolean {\n    if (value && selected) {\n      return value.description === selected.description;\n    }\n  }\n\n  compareAssignedReviewer(value: any, selected: any): boolean {\n    if (value && selected) {\n      return value.description === selected.description;\n    }\n  }\n\n  compareAssignedAdSpec(value: any, selected: any): boolean {\n    if (value && selected) {\n      return value.description === selected.description;\n    }\n  }\n\n  // onChangeHour(event) {\n  //   let timeFetched;\n  //   timeFetched = event.hour + ':' + event.minute + event.meriden;\n  //   this.s1Application.autoSubmitTime = timeFetched;\n  // }\n\n  onChangeDate(value) {\n    if (value) {\n      const dateFetched = value;\n      const dateTransformed = this.datepipe.transform(\n        dateFetched,\n        \"yyyy-MM-dd\"\n      );\n      this.s1Application.submissionDate = new Date(dateTransformed);\n      this.s1Application.autoSubmit = true;\n      this.disableSaveAndSubmitButton();\n    }\n  }\n\n  resendDecision() {\n    Swal.fire({\n      text: \"Are you sure you want to resend decision form?\",\n      icon: \"question\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Confirm\",\n    }).then((result) => {\n      if (result.value) {\n        this.spinner.show();\n        this.apiService\n          .save(\n            ENDPOINTS.api +\n              `admin/application-form/id/${this.s1Application.id}/send/decision-form`,\n            this.s1Application\n          )\n          .subscribe(\n            (res: any) => {\n              if (res.code === 200) {\n                this.spinner.hide();\n                this.sweetAlertService.customSuccessMessage(\n                  \"Successfully resend decision form\"\n                );\n                this.navigateToS1List();\n              }\n            },\n            (err: any) => {\n              this.spinner.hide();\n            }\n          );\n      }\n    });\n  }\n\n  returnToScreener() {\n    Swal.fire({\n      text: \"Are you sure you want to return this application to Screener?\",\n      icon: \"question\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Confirm\",\n    }).then((result) => {\n      if (result.value) {\n        this.spinner.show();\n        let endpoint = \"\";\n        if (this.currentUser.userRole.name === USER_ROLES.ROLE_AD_SPECIALIST) {\n          endpoint =\n            ENDPOINTS.api +\n            `application-form/id/${this.s1Application.id}/s1/ad-specialist/forward-to-screener`;\n        } else if (\n          this.currentUser.userRole.name === USER_ROLES.ROLE_ADMIN ||\n          this.currentUser.userRole.name === USER_ROLES.ROLE_SUPER_ADMIN\n        ) {\n          endpoint =\n            ENDPOINTS.api +\n            `admin/application-form/id/${this.s1Application.id}/forward-to-screener`;\n        }\n\n        this.apiService.save(endpoint, this.s1Application).subscribe(\n          (res: any) => {\n            if (res.code === 200) {\n              console.log(\"RETURN: \", res.responseData.data);\n              this.spinner.hide();\n              this.sweetAlertService.customSuccessMessage(\n                \"Successfully return to Screener\"\n              );\n              this.navigateToS1List();\n            }\n          },\n          (err: any) => {\n            this.spinner.hide();\n          }\n        );\n      }\n    });\n  }\n\n  returnTo(ascUser, newStatus): void {\n    Swal.fire({\n      text:\n        \"Are you sure you want to return this application to \" + ascUser + \"?\",\n      icon: \"question\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Confirm\",\n    }).then((result) => {\n      if (result.value) {\n        this.spinner.show();\n        let endpoint = \"\";\n        this.s1Application.assignedUser = this.s1Application.actionBy;\n        this.s1Application.actionBy = this.currentUser;\n\n        if (this.currentUser.userRole.name === USER_ROLES.ROLE_SCREENER) {\n          if (\n            this.s1Application.multipleApplication &&\n            this.s1Application.submissionType === SUBMISSION_TYPE.ORIGINAL\n          ) {\n            endpoint = `${ENDPOINTS.multipleApplicationReturnToAdSpe}${this.s1Application.multipleApplication.id}/return`;\n          } else {\n            endpoint = `${ENDPOINTS.applicationFormScreener}return`;\n          }\n        } else if (\n          this.currentUser.userRole.name === USER_ROLES.ROLE_REVIEWER\n        ) {\n          if (\n            this.s1Application.multipleApplication &&\n            this.s1Application.submissionType === SUBMISSION_TYPE.ORIGINAL\n          ) {\n            endpoint = `${ENDPOINTS.multipleApplicationReturnToScreener}${this.s1Application.multipleApplication.id}/return`;\n          } else {\n            endpoint = `${ENDPOINTS.applicationFormReviewer}return`;\n          }\n        }\n\n        // console.log('TO SAVE: ', this.s1Application);\n        this.apiService.save(endpoint, this.s1Application).subscribe(\n          (res: any) => {\n            if (res.code === 200) {\n              // console.log('RETURN: ', res.responseData.data);\n              this.spinner.hide();\n              this.sweetAlertService.customSuccessMessage(\n                \"Successfully returned the application\"\n              );\n              this.navigateToS1List();\n            }\n          },\n          (err: any) => {\n            this.spinner.hide();\n          }\n        );\n      }\n    });\n  }\n\n  reassign(): void {\n    if (\n      this.s1Application.internalStatus ===\n      APPLICATION_STATUS.S1_APPLICATION_VERIFIED_BY_AD_SPE\n    ) {\n      if (this.s1Application.multipleApplication) {\n        this.s1Application.multipleApplication.assignedScreener = this.s1Application.assignedScreener;\n      } else {\n        this.s1Application.assignedUser = this.s1Application.assignedScreener;\n      }\n    } else if (\n      this.s1Application.internalStatus ===\n      APPLICATION_STATUS.S1_APPLICATION_SCREENED\n    ) {\n      if (this.s1Application.multipleApplication) {\n        this.s1Application.multipleApplication.assignedReviewer = this.s1Application.assignedReviewer;\n      } else {\n        this.s1Application.assignedUser = this.s1Application.assignedReviewer;\n      }\n    }\n\n    Swal.fire({\n      text: \"Are you sure you want to reassign this application?\",\n      icon: \"question\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Confirm\",\n    }).then((result) => {\n      if (result.value) {\n        this.spinner.show();\n        let endpoint = \"\";\n        let param = {};\n        this.s1Application.actionBy = this.currentUser;\n\n        if (this.currentUserRole === USER_ROLES.ROLE_AD_SPECIALIST) {\n          if (this.s1Application.multipleApplication) {\n            endpoint = ENDPOINTS.reAssignScreenerForMultipleApplication;\n            param = this.s1Application.multipleApplication;\n          } else {\n            endpoint = `${ENDPOINTS.applicationFormAdSpecialist}re-assign/screener`;\n            param = this.s1Application;\n          }\n        } else {\n          if (this.s1Application.multipleApplication) {\n            endpoint = ENDPOINTS.reAssignReviewerForMultipleApplication;\n            param = this.s1Application.multipleApplication;\n          } else {\n            endpoint = `${ENDPOINTS.applicationFormScreener}re-assign/reviewer`;\n            param = this.s1Application;\n          }\n        }\n\n        this.apiService.save(endpoint, param).subscribe(\n          (res: any) => {\n            console.log(\"SAVED: \", res.responseData.data);\n            if (res.code === 200) {\n              this.spinner.hide();\n              this.sweetAlertService.success(res);\n              this.navigateToS1List();\n            }\n          },\n          (err: any) => {\n            this.spinner.hide();\n          }\n        );\n      }\n    });\n  }\n\n  reassignAdSpecialist(): void {\n    Swal.fire({\n      text:\n        \"Are you sure you want to re-assign this application to \" +\n        this.s1Application.assignedAdSpecialist.firstName +\n        \" \" +\n        this.s1Application.assignedAdSpecialist.lastName,\n      icon: \"question\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Confirm\",\n    }).then((result) => {\n      if (result.value) {\n        this.spinner.show();\n        let endpoint = \"\";\n        this.s1Application.assignedUser = this.s1Application.assignedAdSpecialist;\n\n        endpoint = ENDPOINTS.applicationForm;\n\n        // console.log('TO SAVE: ', this.s1Application);\n        this.apiService.update(endpoint, this.s1Application).subscribe(\n          (res: any) => {\n            // console.log('RETURN: ', res.responseData.data);\n            if (res.code === 200) {\n              this.spinner.hide();\n              this.sweetAlertService.customSuccessMessage(\n                \"Application re-assigned successfully.\"\n              );\n              this.navigateToS1List();\n            }\n          },\n          (err: any) => {\n            this.spinner.hide();\n          }\n        );\n      }\n    });\n  }\n\n  validateSubmissionTime(status = \"\") {\n    const currentDate = new Date();\n    // start - for testing purposes only - uncomment lines below during dev (do not push uncomment)\n    // currentDate.setHours(11);\n    // currentDate.setMinutes(0);\n    // const currentHour = currentDate.getHours();\n    // const currentMinute = currentDate.getMinutes();\n\n    // if ((currentHour < 7 || (currentHour >= 11 && currentMinute > 0) || currentHour > 11) && status === 'S1_APPLICATION_SUBMITTED') {\n    //   const err = {\n    //     error: { message: 'Submission of application is between 7:00 AM to 11:00 AM only.' }\n    //   };\n    //   this.sweetAlertService.error(err);\n    //   return;\n    // }\n    // end\n  }\n\n  checkNullValues(str) {\n    return str ? str : \"\";\n  }\n\n  /////////////////////////// FOR ORIGINAL //////////////////////////////////\n  saveStatus(ascUser = \"\", action = \"\", status = \"\") {\n    let message: string = \"\";\n    if (action === \"submit\") {\n      message =\n        \"Once submitted and accepted, cancellation of application is not allowed.\" +\n        `Are you sure you want to ${action} this application?`;\n    } else message = `Are you sure you want to ${action} this application?`;\n    Swal.fire({\n      text: message,\n      icon: \"question\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Confirm\",\n    }).then((result) => {\n      if (result.value) {\n        let msg = \"\";\n        if (status === APPLICATION_STATUS.S1_APPLICATION_SUBMITTED) {\n          msg = COMMON_FUNCTION.SUBMIT;\n        } else if (status === APPLICATION_STATUS.S1_APPLICATION_CANCELLED) {\n          msg = COMMON_FUNCTION.CANCEL;\n        } else if (status === APPLICATION_STATUS.S1_APPLICATION_REJECTED) {\n          msg = COMMON_FUNCTION.REJECT;\n        } else if (\n          status === APPLICATION_STATUS.S1_APPLICATION_VERIFIED_BY_AD_SPE\n        ) {\n          msg = COMMON_FUNCTION.VERIFY;\n        } else if (status === APPLICATION_STATUS.S1_APPLICATION_SCREENED) {\n          msg = COMMON_FUNCTION.SCREEN;\n        } else {\n          msg = COMMON_FUNCTION.ACCEPT;\n        }\n\n        this.spinner.show();\n        this.dataStorage.setDisplayProgressbar(true);\n\n        // Check NULL values\n        this.s1Application.referenceCode = this.checkNullValues(\n          this.s1Application.referenceCode\n        );\n        this.s1Application.supportingAttachmentReference = this.checkNullValues(\n          this.s1Application.supportingAttachmentReference\n        );\n        this.s1Application.paymentAttachmentReference = this.checkNullValues(\n          this.s1Application.paymentAttachmentReference\n        );\n        this.s1Application.revisionLetterAttachmentReference = this.checkNullValues(\n          this.s1Application.revisionLetterAttachmentReference\n        );\n        this.s1Application.decisionStatus = this.checkNullValues(\n          this.s1Application.decisionStatus\n        );\n        this.s1Application.status = this.specialApplicationType.includes(\n          this.s1Application.applicationType.description.toUpperCase()\n        )\n          ? OTHER_STATUS.FOR_APPROVAL\n          : APPLICATION_STATUS.APPROVED;\n        // SUBMIT\n        if (status === APPLICATION_STATUS.S1_APPLICATION_SUBMITTED) {\n          if (this.currentUserRole === USER_ROLES.ROLE_ENCODER) {\n            this.s1Application.applicationOwner = this.selectedApplicationOwner;\n          } else {\n            this.s1Application.applicationOwner = this.dataStorage.getUserAccount();\n          }\n\n          this.s1Application.submissionDate = new Date();\n          // Delete auto submit details if autoSubmit was cancelled\n          this.s1Application.autoSubmit = false;\n        }\n\n        if (!this.s1Application.company) {\n          this.s1Application.company = this.dataStorage.getS1NewCompany();\n          sessionStorage.removeItem(\"NEW_COMPANY\");\n        }\n\n        this.s1Application.actionBy = this.dataStorage.getUserAccount();\n\n        if (status !== APPLICATION_STATUS.S1_APPLICATION_CANCELLED) {\n          // FOR ADSPE: Save Supporting Documents\n          if (\n            this.currentUserRole === USER_ROLES.ROLE_AD_SPECIALIST &&\n            this.materialInformation.newSupportiveDocumentList.length > 0\n          ) {\n            this.saveSupportingDocuments();\n          }\n\n          this.spinner.show();\n          if (\n            this.s1Application.formType !== APPFORM_TYPE.MULTIPLE ||\n            (this.s1Application.multipleApplication &&\n              this.s1Application.multipleApplication\n                .actualNumberOfApplicationForm ===\n                this.s1Application.multipleApplication\n                  .countVerifiedApplicationForm -\n                  1)\n          ) {\n            if (\n              ascUser === \"ad-specialist\" &&\n              action === \"verify\" &&\n              status === APPLICATION_STATUS.S1_APPLICATION_VERIFIED_BY_AD_SPE\n            ) {\n              // this.s1Application.assignedScreener = this.s1Application.assignedUser;\n              this.s1Application.assignedUser = this.s1Application.assignedScreener;\n            } else if (\n              ascUser === \"screener\" &&\n              action === \"verify\" &&\n              status === APPLICATION_STATUS.S1_APPLICATION_SCREENED\n            ) {\n              this.s1Application.assignedUser = this.s1Application.assignedReviewer;\n            }\n          }\n\n          this.mediaTypeListTemp = this.materialInformation.newMultimediaList;\n          this.applicationSingleMediaTemp = this.materialInformation.applicationSingleMedia;\n\n          console.log(\"mediaTypeListTemp: \", this.mediaTypeListTemp);\n          console.log(\n            \"applicationSingleMediaTemp: \",\n            this.applicationSingleMediaTemp\n          );\n\n          // Encoder: Update Medium details - working in single media\n          // Encoder: Encode appform - working in single media\n          if (this.currentUserRole === USER_ROLES.ROLE_ENCODER) {\n            this.setTypeOfMediumDisplay();\n            if (\n              this.s1Application.refTypeOfMedium === TYPE_OF_MEDIUM.SINGLE_MEDIA\n            ) {\n              this.applicationSingleMedia = this.applicationSingleMediaTemp;\n              this.applicationSingleMedia.appFormReference = this.s1Application.appFormReference;\n              this.saveUpdateApplicationSingleMedia(null, null, null);\n            } else {\n              this.saveUpdateMultimedia(null, null, null);\n            }\n          }\n\n          // working in Single Media\n          if (\n            msg === COMMON_FUNCTION.SUBMIT &&\n            this.currentUserRole === USER_ROLES.ROLE_APPLICANT\n          ) {\n            this.setTypeOfMediumDisplay();\n            if (\n              this.s1Application.refTypeOfMedium === TYPE_OF_MEDIUM.SINGLE_MEDIA\n            ) {\n              this.saveUpdateApplicationSingleMedia(msg, ascUser, action);\n            } else {\n              this.saveUpdateMultimedia(msg, ascUser, action);\n            }\n          } else {\n            this.processAppForm(ascUser, action);\n          }\n          // socket here\n        } else {\n          // CANCEL APPLICATION (PUT method)\n\n          this.spinner.show();\n          this.apiService\n            .update(\n              `${ENDPOINTS.applicationForm}/s1/${ascUser}/${action}`,\n              this.s1Application\n            )\n            .subscribe(\n              (res: any) => {\n                console.log(\"SAVED STATUS: \", res.responseData.data);\n                this.spinner.hide();\n                this.sweetAlertService.customSuccessMessage(\n                  \"Application successfully canceled.\"\n                );\n                this.navigateToS1List();\n              },\n              (err) => {\n                console.log(err);\n                this.spinner.hide();\n              },\n              () => {\n                this.dataStorage.setDisplayProgressbar(false);\n              }\n            );\n        }\n      }\n    });\n  }\n\n  processAppForm(ascUser, action) {\n    console.log(\"Process 2\");\n\n    const {\n      appFormReference,\n      revisionLetterAttachmentReference,\n      supportingAttachmentReference,\n    } = this.s1Application;\n    this.s1Application.appFormReference = appFormReference\n      ? appFormReference\n      : \"\";\n\n    if (revisionLetterAttachmentReference === \"\") {\n      delete this.s1Application.revisionLetterAttachmentReference;\n    }\n    if (supportingAttachmentReference === \"\") {\n      delete this.s1Application.supportingAttachmentReference;\n    }\n\n    this.s1Application.status = this.specialApplicationType.includes(\n      this.s1Application.applicationType.description.toUpperCase()\n    )\n      ? OTHER_STATUS.FOR_APPROVAL\n      : \"APPROVED\";\n    console.log(\"TO PROCESS: \", this.s1Application);\n\n    this.apiService\n      .save(\n        `${ENDPOINTS.applicationForm}/s1/${ascUser}/${action}`,\n        this.s1Application\n      )\n      .subscribe(\n        (res: any) => {\n          if (res) {\n            console.log(\"SAVED STATUS 1: \", res);\n            if (res.code === 400) {\n              this.sweetAlertService.customErrorMessage(res.responseMessage);\n            } else {\n              console.log(\"SAVED STATUS: \", res.responseData.data);\n              this.s1Application = res.responseData.data;\n              // saving of media\n              // if (this.s1Application.refTypeOfMedium === TYPE_OF_MEDIUM.SINGLE_MEDIA) {\n              //   this.saveUpdateApplicationSingleMedia();\n              // } else {\n              //   this.saveUpdateMultimedia();\n              // }\n\n              // Forward Multiple Application\n              if (\n                this.s1Application.multipleApplication &&\n                this.s1Application.multipleApplication\n                  .actualNumberOfApplicationForm ===\n                  this.s1Application.multipleApplication\n                    .countVerifiedApplicationForm\n              ) {\n                this.forwardMultipleAppsTo(ascUser);\n              } else {\n                console.log(\"SAVED STATUS: \", res.responseData.data);\n                this.s1Application = res.responseData.data;\n                // saving of media\n                // if (this.s1Application.refTypeOfMedium === TYPE_OF_MEDIUM.SINGLE_MEDIA) {\n                //   this.saveUpdateApplicationSingleMedia();\n                // } else {\n                //   this.saveUpdateMultimedia();\n                // }\n\n                // Forward Multiple Application\n                if (\n                  this.s1Application.multipleApplication &&\n                  this.s1Application.multipleApplication\n                    .actualNumberOfApplicationForm ===\n                    this.s1Application.multipleApplication\n                      .countVerifiedApplicationForm\n                ) {\n                  this.forwardMultipleAppsTo(ascUser);\n                } else {\n                  this.spinner.hide();\n                  this.sweetAlertService.success(res);\n                }\n              }\n            }\n          }\n        },\n        (err) => {\n          console.log(err);\n          this.spinner.hide();\n          this.sweetAlertService.error(err);\n          this.dataStorage.setDisplayProgressbar(false);\n        },\n        () => {\n          this.spinner.hide();\n          this.dataStorage.setDisplayProgressbar(false);\n          // if (this.s1Application.multipleApplication) {\n          //   this.router.navigate(['/asc/page/application/s1/multiple']);\n          // } else {\n          this.navigateToS1List();\n\n          //\n          if (\n            this.currentUserRole === USER_ROLES.ROLE_APPLICANT &&\n            this.checkCutOffTime()\n          ) {\n            this._snackBar.open(\n              \"Cutoff reached. Application will be processed the next day.\",\n              \"OK\",\n              {\n                horizontalPosition: \"right\",\n                verticalPosition: \"top\",\n                duration: 5000,\n              }\n            );\n          }\n          // }\n        }\n      );\n    // if (this.currentUserRole === USER_ROLES.ROLE_ENCODER && this.s1Application.externalStatus === APPLICATION_STATUS.SAVED) {\n    //   this.saveS1ApplicationByEncoder(this.s1Application);\n    // }\n  }\n\n  submitDecisionAndComment() {\n    Swal.fire({\n      text: \"Are you sure you want to save changes to this application?\",\n      icon: \"question\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Confirm\",\n    }).then((result) => {\n      if (result.value) {\n        let endpoint = \"\";\n        if (this.currentUser.userRole.name === USER_ROLES.ROLE_SCREENER) {\n          endpoint = ENDPOINTS.submitDecisionAndCommentScreener;\n        } else if (\n          this.currentUser.userRole.name === USER_ROLES.ROLE_REVIEWER\n        ) {\n          endpoint = ENDPOINTS.submitDecisionAndCommentReviewer;\n        }\n\n        this.apiService.save(endpoint, this.s1Application).subscribe(\n          (res: any) => {\n            console.log(res);\n            this.sweetAlertService.customSuccessMessage(\n              \"Decision and comment successfully submitted.\"\n            );\n            this.navigateToS1List();\n          },\n          (err: any) => {}\n        );\n      }\n    });\n  }\n\n  forwardMultipleAppsTo(user) {\n    console.log(\"forwardMultipleAppsTo\");\n    console.log(this.s1Application);\n\n    let endpoint = \"\";\n    if (user === \"encoder\") {\n      this.s1Application.multipleApplication.assignedEncoder = this.s1Application.assignedEncoder;\n      endpoint = ENDPOINTS.forwardMultipleAppFormToAdSpe;\n    } else if (user === \"ad-specialist\") {\n      this.s1Application.multipleApplication.assignedAdSpecialist = this.s1Application.assignedAdSpecialist;\n      this.s1Application.multipleApplication.assignedScreener = this.s1Application.assignedScreener;\n      endpoint = ENDPOINTS.forwardMultipleAppFormToScreener;\n    } else if (user === \"screener\") {\n      this.s1Application.multipleApplication.assignedReviewer = this.s1Application.assignedReviewer;\n      endpoint = ENDPOINTS.forwardMultipleAppFormToReviewer;\n    } else if (user === \"reviewer\") {\n      endpoint =\n        ENDPOINTS.releaseMultipleApplication +\n        this.s1Application.multipleApplication.id +\n        `/release`;\n    }\n\n    this.apiService\n      .save(endpoint, this.s1Application.multipleApplication)\n      .subscribe(\n        (res: any) => {\n          console.log(\"Forwarded: \", res);\n          this.spinner.hide();\n          this.sweetAlertService.customSuccessMessage(\n            \"Multiple application successfully forwarded to the next user.\"\n          );\n        },\n        (err: any) => {\n          this.spinner.hide();\n          this.sweetAlertService.error(err);\n        },\n        () => {\n          this.spinner.hide();\n        }\n      );\n  }\n\n  /////////////////////////// FOR COMPLIANCE //////////////////////////////////\n  saveStatusForCompliance(ascUser = \"\", action = \"\", status = \"\") {\n    console.log(\"Com > \", this.s1Application);\n    let msg;\n    if (\n      status ===\n      APPLICATION_STATUS_FOR_COMPLIANCE.SUBMITTED_DOCUMENT_FOR_COMPLIANCE\n    ) {\n      msg = COMMON_FUNCTION.SUBMIT;\n    } else {\n      msg = COMMON_FUNCTION.ACCEPT;\n    }\n\n    if (this.s1Application.submissionType === SUBMISSION_TYPE.REVISION) {\n      this.s1Application.submissionType = SUBMISSION_TYPE.REVISION;\n    } else {\n      this.s1Application.submissionType = SUBMISSION_TYPE.ORIGINAL;\n    }\n\n    Swal.fire({\n      text:\n        \"Are you sure you want to \" + msg + \" this application for compliance?\",\n      icon: \"question\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Confirm\",\n    }).then((result) => {\n      if (result.value) {\n        this.spinner.show();\n        this.dataStorage.setDisplayProgressbar(true);\n        console.log(\"TO SAVE: \", this.s1Application);\n\n        // FOR ADSPE: Save Supporting Documents\n        if (this.materialInformation.newSupportiveDocumentList.length > 0) {\n          this.saveSupportingDocuments();\n        }\n\n        this.spinner.show();\n        this.s1Application.actionBy = this.currentUser;\n\n        if (\n          ascUser === \"ad-specialist\" &&\n          action === \"verify\" &&\n          status ===\n            APPLICATION_STATUS_FOR_COMPLIANCE.COMPLIANCE_DOCUMENT_VERIFIED_BY_AD_SPE\n        ) {\n          // this.s1Application.assignedScreener = this.s1Application.assignedUser;\n          this.s1Application.assignedUser = this.s1Application.assignedScreener;\n          console.log(\"ASSINGED SCREENER\", this.s1Application.assignedUser);\n        }\n\n        if (\n          ascUser === \"screener\" &&\n          action === \"verify\" &&\n          status ===\n            APPLICATION_STATUS_FOR_COMPLIANCE.COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER\n        ) {\n          // this.s1Application.assignedScreener = this.s1Application.assignedUser;\n          this.s1Application.assignedUser = this.s1Application.assignedReviewer;\n          console.log(\"ASSINGED REVIEWER\", this.s1Application.assignedUser);\n        }\n\n        this.apiService\n          .save(\n            `${ENDPOINTS.applicationForm}/s1/compliance/${ascUser}/${action}`,\n            this.s1Application\n          )\n          .subscribe(\n            (res: any) => {\n              console.log(\"SAVED STATUS: \", res.responseData.data);\n              this.spinner.hide();\n              this.sweetAlertService.success(res);\n              this.navigateToS1List();\n            },\n            (err) => {\n              console.log(err);\n              this.spinner.hide();\n              this.sweetAlertService.error(err);\n              this.dataStorage.setDisplayProgressbar(false);\n            },\n            () => {\n              this.spinner.hide();\n              this.dataStorage.setDisplayProgressbar(false);\n            }\n          );\n      }\n    });\n  }\n\n  /////////////////////////// REVISION //////////////////////////////////\n  saveStatusRevision(ascUser = \"\", action = \"\", status = \"\") {\n    console.log(\"Rev > \", this.s1Application);\n    Swal.fire({\n      text: \"Are you sure you want to save changes for revision?\",\n      icon: \"question\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Confirm\",\n    }).then((result) => {\n      if (result.value) {\n        this.spinner.show();\n        this.dataStorage.setDisplayProgressbar(true);\n        if (\n          this.s1Application.revisionNo === 2 &&\n          this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT\n        ) {\n          this.spinner.hide();\n          this.sweetAlertService.customSuccessMessage(\n            \"Presentor can only submit revision no more than 2 times.\"\n          );\n        } else {\n          if (this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT) {\n            this.s1Application.submissionType = SUBMISSION_TYPE.REVISION;\n          }\n\n          // FOR ADSPE: Save Supporting Documents\n          console.log(\"Save supporting..\");\n          if (this.materialInformation.newSupportiveDocumentList.length > 0) {\n            this.saveSupportingDocuments();\n          }\n\n          this.s1Application.actionBy = this.dataStorage.getUserAccount();\n\n          if (\n            ascUser === \"ad-specialist\" &&\n            action === \"verify\" &&\n            status === APPLICATION_STATUS_REVISION.REVISION_VERIFIED_BY_AD_SPE\n          ) {\n            this.s1Application.assignedUser = this.s1Application.assignedScreener;\n          }\n\n          if (\n            ascUser === \"screener\" &&\n            action === \"verify\" &&\n            status === APPLICATION_STATUS_REVISION.REVISION_SCREENED\n          ) {\n            this.s1Application.assignedUser = this.s1Application.assignedReviewer;\n          }\n\n          console.log(\"TO SAVE: \", this.s1Application);\n\n          this.spinner.show();\n          this.apiService\n            .save(\n              `${ENDPOINTS.applicationForm}/s1/revision/${ascUser}/${action}`,\n              this.s1Application\n            )\n            .subscribe(\n              (res: any) => {\n                console.log(\"SAVED STATUS: \", res.responseData.data);\n                this.spinner.hide();\n                this.sweetAlertService.success(res);\n                this.navigateToS1List();\n              },\n              (err) => {\n                this.spinner.hide();\n                console.log(err);\n                this.sweetAlertService.error(err);\n                this.dataStorage.setDisplayProgressbar(false);\n              },\n              () => {\n                this.dataStorage.setDisplayProgressbar(false);\n              }\n            );\n        }\n      }\n    });\n  }\n\n  requestSpecialS1ApplicationApproval(): void {\n    this.applicationRequest = {\n      id: 0,\n      adTitle: this.s1Application.adTitle,\n      applicationOwner: this.s1Application.applicationOwner,\n      applicationType: this.s1Application.applicationType,\n      brand: this.s1Application.brand,\n      product: this.s1Application.product,\n      // category: this.s1Application.category,\n      company: this.s1Application.company,\n      formType: this.s1Application.formType,\n      // membersAffiliation: this.s1Application.membersAffiliation,\n      status: OTHER_STATUS.FOR_APPROVAL,\n      submissionDate: new Date(this.s1Application.submissionDate),\n      tagLine: this.s1Application.tagLine,\n      submitApplicationForm: false,\n      hasSpecialClearing: false,\n      applicationForm: null,\n    };\n    Swal.fire({\n      text: \"Are you sure you want to request this application for approval?\",\n      icon: \"question\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Confirm\",\n    }).then((result) => {\n      if (result.value) {\n        this.spinner.show();\n        this.dataStorage.setDisplayProgressbar(true);\n        console.log(\"TO SAVE: \", this.applicationRequest);\n\n        if (this.currentUser.userRole.name === USER_ROLES.ROLE_ENCODER) {\n          this.applicationRequest.applicationOwner = this.s1Application.applicationOwner;\n        } else {\n          this.applicationRequest.applicationOwner = this.currentUser;\n        }\n        this.apiService\n          .save(ENDPOINTS.applicationRequests, this.applicationRequest)\n          .subscribe(\n            (res: any) => {\n              console.log(\"SAVED STATUS: \", res.responseData.data);\n              this.spinner.hide();\n              this.sweetAlertService.success(res);\n              // this.navigateToS1List();\n              this.router.navigate([\"asc/page/application/s1/special\"]);\n            },\n            (err) => {\n              this.spinner.hide();\n              console.log(err);\n              this.sweetAlertService.error(err);\n              this.dataStorage.setDisplayProgressbar(false);\n            },\n            () => {\n              this.spinner.hide();\n              this.dataStorage.setDisplayProgressbar(false);\n            }\n          );\n      }\n    });\n  }\n\n  accordionDisablingFunction(): void {\n    if (this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT) {\n      // if (this.s1Application.membersAffiliation && this.company && this.s1Application.brand) {\n      // this.accordionDisable = !this.accordionDisable;\n      this.accordionExpanded = !this.accordionExpanded;\n      this.validationMessage = \"\";\n      // } else {\n      //   this.validationMessage = ' Please provide all the required information...'\n      // }\n    }\n  }\n\n  disabledWeekEnds = (d: Date | null): boolean => {\n    const day = (d || new Date()).getDay();\n    return (\n      ((day !== 0 && day !== 6) || this.isDateActiveWeekend(d)) &&\n      !this.isDateHoliday(d)\n    );\n  };\n\n  isDateHoliday(date: Date) {\n    return Boolean(\n      this.activeHolidayDates.find((holidayDate) => {\n        return format(date, \"yyyy-MM-dd\") === format(holidayDate, \"yyyy-MM-dd\");\n      })\n    );\n  }\n\n  isDateActiveWeekend(date: Date) {\n    return Boolean(\n      this.activeWeekendDates.find((weekendDate) => {\n        return format(date, \"yyyy-MM-dd\") === format(weekendDate, \"yyyy-MM-dd\");\n      })\n    );\n  }\n\n  disableSaveAndSubmitButton() {\n    if (this.s1Application.autoSubmit === false) {\n      this.isScheduleSendIsEmpty = false;\n    }\n    if (this.s1Application.autoSubmit === true) {\n      this.isScheduleSendIsEmpty = true;\n      if (\n        this.s1Application.submissionDate === null ||\n        this.s1Application.submissionDate === undefined\n      ) {\n        this.isScheduleSendIsEmpty = true;\n      } else {\n        this.isScheduleSendIsEmpty = false;\n      }\n    }\n  }\n\n  adSpecValidation(i: any): void {}\n\n  buttonValidation(i: any): void {\n    if (\n      this.currentUserRole === USER_ROLES.ROLE_AD_SPECIALIST &&\n      this.s1Application.assignedScreener\n    ) {\n      this.buttonDisabled = false;\n    } else if (\n      this.currentUserRole === USER_ROLES.ROLE_SCREENER &&\n      this.s1Application.assignedReviewer\n    ) {\n      // if ((i || this.s1Application.assignedUser.userRole.name === USER_ROLES.ROLE_REVIEWER) &&\n      //   (i || this.s1Application.assignedUser || this.s1Application.decisionStatus)) {\n      this.buttonDisabled = false;\n      // }\n    }\n\n    this.dataStorage.setDecisionStatus(i);\n\n    if (\n      (i === \"INCOMPLETE\" || i === \"DISAPPROVED\") &&\n      this.currentUserRole === USER_ROLES.ROLE_SCREENER\n    ) {\n      if (\n        this.s1Application.internalStatus ===\n          APPLICATION_STATUS_FOR_COMPLIANCE.COMPLIANCE_DOCUMENT_VERIFIED_BY_AD_SPE ||\n        this.s1Application.internalStatus ===\n          APPLICATION_STATUS_REVISION.REVISION_VERIFIED_BY_AD_SPE\n      ) {\n        if (\n          this.s1Application.decisionStatus ===\n            APP_DECISION_STATUS.INCOMPLETE ||\n          this.s1Application.decisionStatus === APP_DECISION_STATUS.DISAPPROVED\n        ) {\n          this.s1Application.decisionStatus = i;\n          // if (this.rationaleLists.length === 0) {\n          this.incompleteDisapprovedModal(i);\n          // }\n        }\n      }\n    }\n  }\n\n  selectApplicant(res) {\n    this.selectedApplicationOwner = res;\n    this.getPresentorDetails();\n  }\n\n  saveS1ApplicationByEncoder(data) {\n    this.spinner.show();\n    this.apiService\n      .save(ENDPOINTS.applicationFormEncoder + COMMON_FUNCTION.VERIFY, data)\n      .subscribe(\n        (res: any) => {\n          this.spinner.hide();\n          console.log(\"SAVED BY ENCODER : \", res.responseData.data);\n        },\n        (err: any) => {\n          this.spinner.hide();\n        }\n      );\n  }\n\n  rejectDisapprovedModal(): void {\n    const dialogRef = this.dialog.open(RejectDisapprovedReasonComponent, {\n      width: \"50%\",\n      height: \"65%\",\n      data: {\n        s1Application: this.s1Application,\n        applicationStage: \"s1\",\n      },\n    });\n  }\n\n  incompleteDisapprovedModal(decisionStatus): void {\n    const dialogRef = this.dialog.open(\n      IncompleteDisapprovedRationaleComponent,\n      {\n        width: \"50%\",\n        height: \"65%\",\n        data: {\n          s1Application: this.s1Application,\n          applicationStage: \"s1\",\n        },\n      }\n    );\n    dialogRef.afterClosed().subscribe((result) => {\n      this.getRationaleList();\n      if (\n        this.rationaleLists.length > 0 ||\n        this.rationaleOthersList.length > 0\n      ) {\n        this.s1Application.decisionStatus = decisionStatus;\n      }\n      if (result) {\n        this.buttonDisabled = false;\n      }\n    });\n  }\n\n  navigateToS1List() {\n    // setTimeout(() => {\n    this.router.navigate([\"asc/page/application/s1/lists\"]);\n    // }, 2000);\n  }\n\n  openPerformanceMetrics() {\n    const dialogRef = this.dialog.open(PerformanceMetricsComponent, {\n      data: {\n        appFormReference: this.s1Application.appFormReference,\n        referenceCode: this.s1Application.referenceCode,\n      },\n    });\n    dialogRef.afterClosed().subscribe((result) => {});\n  }\n\n  viewReport(id, filename) {\n    if (filename === \"S1_Decision_Form\" || filename === \"Stamp_Material\") {\n      const downloadURL =\n        filename === \"S1_Decision_Form\"\n          ? this.s1Application?.decisionFormFileURL\n          : filename === \"Stamp_Material\"\n          ? this.s1Application?.stampMaterialFileURL\n          : \"\";\n      window.open(downloadURL);\n    } else {\n      this.report.filename = filename;\n      this.report.format = \"pdf\";\n      (this.report.module = \"Form\"),\n        (this.report.params = { applicationFormId: id });\n      console.log(this.report);\n      this.spinner.show();\n      this.apiService\n        .printReport(ENDPOINTS.generateReports, this.report)\n        .subscribe(\n          (data: any) => {\n            const newBlob = new Blob([data], { type: \"application/pdf\" });\n            const downloadURL = URL.createObjectURL(newBlob);\n            this.spinner.hide();\n            window.open(downloadURL);\n          },\n          (err: any) => {\n            this.spinner.hide();\n          }\n        );\n    }\n  }\n\n  getRationaleList(): void {\n    // Rationale Object\n    this.apiService\n      .findByParam(\n        ENDPOINTS.applicationRationale,\n        `application-form-id/${this.s1Application.id}`\n      )\n      .subscribe((res: any) => {\n        this.rationaleOthersList = res.responseData.data;\n      });\n    // Rationale List\n    this.apiService\n      .findByParam(\n        ENDPOINTS.rationaleList,\n        `application/${this.s1Application.id}`\n      )\n      .subscribe((res: any) => {\n        this.rationaleLists = res;\n      });\n    this.rationaleDisplay = true;\n  }\n\n  resubmitApplication(id = this.s1Application?.id) {\n    this.spinner.show();\n    let endpoint = this.hasMultimediaLengthChange\n      ? ENDPOINTS.modifyApprovedS1ApplicationFormMultimedia\n      : ENDPOINTS.modifyApprovedS1ApplicationFormSingleMedia;\n\n    endpoint += `=${id}`;\n\n    const newMedia = this.materialInformation.newMultimediaList[0];\n\n    const obj = this.hasMultimediaLengthChange\n      ? {\n          appFormReference: this.s1Application.appFormReference,\n          typeOfMedium: newMedia,\n          mediaType: \"STATIC\",\n          multimediaSizeLength: newMedia.sizeLength,\n          amount: 0,\n        }\n      : this.applicationSingleMedia;\n\n    this.apiService.save(endpoint, obj).subscribe(\n      (res) => {\n        this.spinner.hide();\n\n        if (\n          this.s1Application.refTypeOfMedium === TYPE_OF_MEDIUM.SINGLE_MEDIA\n        ) {\n          this.saveUpdateApplicationSingleMedia(null, null, null);\n        } else {\n          this.saveUpdateMultimedia(null, null, null);\n        }\n        this.sweetAlertService.success(res);\n\n        if (this.s1Application.multipleApplication) {\n          this.router.navigate([\"asc/page/application/s1/multiple\"]);\n        } else {\n          this.navigateToS1List();\n        }\n      },\n      (err: any) => {\n        this.spinner.hide();\n      }\n    );\n  }\n\n  clearDecisionStatus(): void {\n    this.s1Application.decisionStatus = \"\";\n  }\n\n  checkSingleMediaChanges() {\n    this.applicationSingleMedia = this.materialInformation?.applicationSingleMedia;\n    this.disableSubmitButtonByMedia = this.materialInformation?.disableSubmitButtonByMedia;\n    this.hasMultimediaLengthToEnableSubmit = true;\n  }\n\n  checkMultimediaChanges() {\n    // this.hasMultimediaLengthToEnableSubmit = this.multimediaMovingList.length ? true : false;\n    this.disableSubmitButtonByMedia = false;\n    this.hasMultimediaLengthToEnableSubmit =\n      this.materialInformation?.newMultimediaList.length ||\n      this.multimediaMovingList.length ||\n      this.multimediaStaticList.length\n        ? true\n        : false;\n\n    const multimediaListChanges = this.materialInformation?.newMultimediaList?.map(\n      (mappedMultimedia) => ({\n        multimediaSizeLength: mappedMultimedia?.sizeLength,\n        typeOfMedium: mappedMultimedia?.description,\n      })\n    );\n\n    const hasSizeLengthChange = this.currentSizeLengthMultimedia\n      .map((media) => ({\n        multimediaSizeLength: media.multimediaSizeLength,\n        typeOfMedium: media.typeOfMedium,\n        multimediaSizeLengthNew: multimediaListChanges?.filter(\n          (filteredMedia) => filteredMedia.typeOfMedium === media.typeOfMedium\n        )[0]?.multimediaSizeLength,\n      }))\n      .filter(\n        (filteredRes) =>\n          +filteredRes.multimediaSizeLength !==\n            +filteredRes.multimediaSizeLengthNew &&\n          filteredRes.multimediaSizeLengthNew\n      );\n\n    const hasNewMultimediaType = multimediaListChanges\n      ?.map((multimedia) =>\n        this.currentSizeLengthMultimedia.some(\n          (currMedia) => currMedia.typeOfMedium === multimedia.typeOfMedium\n        )\n      )\n      .includes(false);\n\n    this.hasMultimediaLengthChange =\n      hasNewMultimediaType || hasSizeLengthChange.length ? true : false;\n  }\n\n  checkEmittedMultimedia(multimediaDTO): void {\n    this.multimediaDTO = multimediaDTO.data;\n\n    switch (multimediaDTO.type) {\n      case TYPE_OF_MEDIUM.MULTIMEDIA_MOVING:\n        if (multimediaDTO.data) {\n          this.hasMultimediaLengthToEnableSubmit =\n            multimediaDTO.data.sizeLength > 0 ? true : false;\n          this.disableSubmitButtonByMedia = multimediaDTO.data.applicationMultimediaMovingList.filter(\n            (medium: ApplicationMultimediaItemsDTO) =>\n              medium.hasSelected === true\n          )\n            ? false\n            : true;\n        }\n        break;\n      case TYPE_OF_MEDIUM.MULTIMEDIA_STATIC:\n        if (multimediaDTO.data) {\n          this.disableSubmitButtonByMedia = multimediaDTO.data.applicationMultimediaStaticList.filter(\n            (medium: ApplicationMultimediaItemsDTO) =>\n              medium.hasSelected === true\n          )\n            ? false\n            : true;\n\n          this.hasMultimediaLengthToEnableSubmit = multimediaDTO.data.applicationMultimediaStaticList.filter(\n            (medium: ApplicationMultimediaItemsDTO) =>\n              medium.multimediaStaticMedium === \"digital static\" ||\n              (medium.hasSelected === true && medium.sizeLength)\n          )\n            ? true\n            : false;\n        }\n        break;\n    }\n  }\n\n  fetchMultimedia(): void {\n    console.log(\"S1 APPP::: \", this.s1Application);\n    let typeofMedium =\n      this.s1Application.refTypeOfMedium === TYPE_OF_MEDIUM.MULTIMEDIA_MOVING\n        ? \"moving\"\n        : \"static\";\n    let endpoint =\n      ENDPOINTS.applicationMultimedia +\n      \"-\" +\n      typeofMedium +\n      \"/app-form-reference\";\n    this.apiService\n      .findByParam(endpoint, this.s1Application.appFormReference)\n      .subscribe((multimedia) => {\n        console.log(\"Multimedia Response: \", multimedia.responseData.data);\n        if (multimedia) this.multimediaDTO = multimedia.responseData.data;\n      });\n  }\n\n  submitAppeal() {\n    let endpoint;\n    if (this.isAdmin) {\n      endpoint = ENDPOINTS.admin + `/s1/verify/appeal`;\n    } else if (this.isAdSpecialist) {\n      endpoint = ENDPOINTS.applicationFormAdSpecialist + `verify/appeal`;\n    }\n\n    this.spinner.show();\n    this.apiService.save(endpoint, this.s1Application).subscribe(\n      (res: any) => {\n        this.spinner.hide();\n        this.sweetAlertService.success(res);\n        console.log(\"submitAppeal : \", res.responseData.data);\n        this.navigateToS1List();\n      },\n      (err: any) => {\n        this.spinner.hide();\n      }\n    );\n  }\n\n  sendDecisionOrStampMaterialManual(): void {\n    Swal.fire({\n      text: \"Are you sure you want to send this application form?\",\n      icon: \"question\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Confirm\",\n    }).then((result) => {\n      if (result.value) {\n        this.apiService\n          .save(\n            ENDPOINTS.s1ManualRelease + `/${this.s1Application.id}`,\n            this.s1Application\n          )\n          .subscribe((res: any) => {\n            this.sweetAlertService.customSuccessMessage(res.message);\n          });\n      }\n    });\n  }\n\n  checkCutOffTime(): boolean {\n    let regex = new RegExp(\":\", \"g\");\n    let startTime = \"11:00:00\";\n    let endTime = \"23:59:59\";\n    let currentTime = String(\n      new Date().getHours() +\n        \":\" +\n        new Date().getMinutes() +\n        \":\" +\n        new Date().getSeconds()\n    );\n\n    if (\n      parseInt(currentTime.replace(regex, \"\")) >=\n        parseInt(startTime.replace(regex, \"\")) &&\n      parseInt(currentTime.replace(regex, \"\")) <=\n        parseInt(endTime.replace(regex, \"\"))\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  checkMaterialFieldErrors(): boolean {\n    return (\n      (!this.s1Application?.adTitle ||\n        !this.s1Application?.refTypeOfMedium ||\n        !this.hasMultimediaLengthToEnableSubmit ||\n        this.disableSubmitButtonByMedia) &&\n      !this.s1Application.typeOfMedium\n    );\n  }\n\n  private getAllActiveHolidays() {\n    this.apiService.findAll(ENDPOINTS.holidays).subscribe((res: any) => {\n      this.activeHolidayDates = res.responseData.data\n        .filter(\n          (holidayDate) =>\n            holidayDate.status === \"ACTIVE\" &&\n            holidayDate.holidayType !== \"WEEKEND\"\n        )\n        .map((holidayDate) => new Date(holidayDate.holidayDate));\n    });\n  }\n\n  private getAllActiveWeekends() {\n    this.apiService.findAll(ENDPOINTS.holidays).subscribe((res: any) => {\n      this.activeWeekendDates = res.responseData.data\n        .filter(\n          (holidayDate) =>\n            holidayDate.status === \"ACTIVE\" &&\n            holidayDate.holidayType === \"WEEKEND\"\n        )\n        .map((holidayDate) => new Date(holidayDate.holidayDate));\n    });\n  }\n\n  isSingleRegularDisabled(): boolean {\n    return (\n      (!this.s1Application?.brand ||\n        !this.s1Application?.company ||\n        !this.s1Application?.adTitle ||\n        !this.s1Application?.refTypeOfMedium ||\n        !this.s1Application?.mainAttachmentReference ||\n        !this.s1Application?.refTypeOfMedium ||\n        (!this.s1Application?.hasNoSupportingDocs &&\n          !this.s1Application?.supportingAttachmentReference) ||\n        this.s1Application?.brand?.penalty ||\n        !this.s1Application?.product ||\n        this.s1Application?.company?.delinquent ||\n        this.isInactiveAffiliation ||\n        this.s1Application?.company?.status === \"INACTIVE\" ||\n        this.disableSubmitButtonByMedia ||\n        !this.hasMultimediaLengthToEnableSubmit) &&\n      !this.s1Application.typeOfMedium\n    );\n  }\n\n  isMultipleRegularDisabled(): boolean {\n    return (\n      !this.s1Application?.brand ||\n      !this.s1Application?.company ||\n      !this.s1Application?.adTitle ||\n      !this.s1Application?.refTypeOfMedium ||\n      this.s1Application?.brand?.penalty ||\n      !this.s1Application?.product ||\n      this.s1Application?.company?.delinquent ||\n      this.isInactiveAffiliation ||\n      this.s1Application?.company?.status === \"INACTIVE\" ||\n      !this.s1Application.submissionDate\n    );\n  }\n}\n","<form>\n  <div class=\"container-fluid\">\n    <!-- <div class=\"spinner\">\n      <ngx-spinner bdColor=\"rgba(0, 0, 0, 0.8)\" size=\"large\" color=\"#fff\" type=\"line-spin-fade\" [fullScreen]=\"false\">\n        <p *ngIf=\"s1Application.brand != undefined\"> Loading <b>{{s1Application.referenceCode}}</b> S1 Application. </p>\n        <p *ngIf=\"s1Application.brand === undefined && company.companyName === undefined\"> Creating new S1\n          Application... </p>\n      </ngx-spinner>\n    </div> -->\n    <div class=\"row title\">\n      <div class=\"col-md-12\">\n\n        <mat-label\n          *ngIf=\"isApplicant&&(s1Application?.externalStatus==undefined||s1Application?.externalStatus=='SAVED'||s1Application?.externalStatus=='S1_APPLICATION_SUBMITTED')\">\n          <i class=\"material-icons\">note_add</i> NEW S1 APPLICATION\n          <br><br>\n        </mat-label>\n\n        <mat-label\n          [hidden]=\"s1Application?.applicationType.description === 'Special Screening' || s1Application?.applicationType.description === 'Special Clearing' || s1Application?.applicationType.description === 'Special Screening and Clearing'\"\n          *ngIf=\"specialApplicationType.includes(s1Application?.applicationType?.description?.toUpperCase()) && (!applicationRequest?.status && s1Application.applicationRequest==null) && s1Application?.formType !== 'MULTIPLE'\">\n          <i class=\"material-icons\">note_add</i> REQUEST FOR APPROVAL\n        </mat-label>\n\n        <table>\n          <tr>\n            <td *ngIf=\"s1Application?.referenceCode||s1Application?.referenceCodeRejected\">\n              <span>\n                Reference Code:\n              </span>\n            </td>\n            <td *ngIf=\"s1Application?.referenceCode||s1Application?.referenceCodeRejected\">\n              <span>\n                <b>{{s1Application?.externalStatus=='S1_APPLICATION_REJECTED' ? s1Application?.referenceCodeRejected :\n                  s1Application?.referenceCode | uppercase}}</b>\n                <!-- <b *ngIf=\"s1Application?.revisionNo>0\"> (Revision Number {{s1Application?.revisionNo}})</b> -->\n              </span>\n            </td>\n            <td class=\"no-border\"></td>\n            <td class=\"no-border\"></td>\n            <td class=\"no-border\"></td>\n            <td class=\"no-border\">\n              <button class=\"button-right button-red\" mat-raised-button\n                [routerLink]=\"['/asc/page/application/s1/lists']\">\n                <i class=\"material-icons color__white\">list</i> VIEW APPLICATIONS\n              </button>\n              <!-- <button class=\"button-right button-red\" mat-raised-button *ngIf=\"s1Application?.formType==='MULTIPLE'\"\n              [routerLink]=\"['/asc/page/application/s1/multiple']\">\n              <i class=\"material-icons color__white\">list</i> VIEW APPLICATIONS\n            </button> -->\n            </td>\n          </tr>\n          <tr>\n            <td class=\"no-border\">\n            </td>\n          </tr>\n          <tr>\n            <td *ngIf=\"(s1Application?.externalStatus!=undefined&&!isAscUser)||isAscUser\">\n              <span>\n                Status:\n              </span>\n            </td>\n            <td *ngIf=\"(s1Application?.externalStatus!=undefined&&!isAscUser)||isAscUser\">\n              <span *ngIf=\"s1Application?.externalStatus!=undefined&&!isAscUser\">\n                <b>{{s1Application?.externalStatus?.replaceAll('_',' ') | uppercase}}</b>\n              </span>\n              <span *ngIf=\"isAscUser\">\n                <b>{{s1Application?.internalStatus?.replaceAll('_',' ') | uppercase}}</b>\n              </span>\n            </td>\n            <td class=\"no-border\"></td>\n            <td class=\"no-border\"></td>\n            <td\n              *ngIf=\"s1Application?.decisionStatus!=undefined&&s1Application?.internalStatus=='S1_APPLICATION_REVIEWED'\">\n              <span>\n                Decision:\n              </span>\n            </td>\n            <td\n              *ngIf=\"s1Application?.decisionStatus!=undefined&&s1Application?.internalStatus=='S1_APPLICATION_REVIEWED'\">\n              <span>\n                <b>{{s1Application?.decisionStatus | uppercase}}</b>\n              </span>\n            </td>\n          </tr>\n        </table>\n        <hr>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-md-6\">\n        <h3 *ngIf=\"s1Application?.submissionDate && applicationRequest?.status !== 'DISAPPROVED'\"><b\n            class=\"submission-date\">Submission Date:\n            {{s1Application?.submissionDate | date: 'MMMM d, yyyy'}}</b></h3>\n        <h3 *ngIf=\"s1Application?.submissionDate && applicationRequest?.status === 'DISAPPROVED'\"><b\n            class=\"submission-date\">Submission Date:\n            N/A - Request was disapproved</b></h3>\n      </div>\n\n      <div class=\"col-md-6\" *ngIf=\"s1Application?.amount && s1Application?.submissionType === 'ORIGINAL'\">\n        <span class=\"badge bg-warning text-dark button-right\">\n          {{s1Application?.paymentStatus?.replaceAll('_',' ')}} : ₱ {{\n          s1Application?.amount | number : '1.2-2'}} </span>\n      </div>\n    </div>\n\n    <div class=\"row\" [formGroup]=\"s1ApplicationForm\">\n      <mat-form-field class=\"col-md-4\" appearance=\"outline\" [hidden]=\"s1Application?.formType!=='MULTIPLE'\">\n        <mat-label>Form Type</mat-label>\n        <mat-select [(ngModel)]=\"s1Application.formType\" [compareWith]=\"compareFormType\" name=\"formType\"\n          formControlName=\"formType\" disabled>\n          <mat-option *ngFor=\"let i of formTypeList\" [value]=\"i\" (click)=\"getApplicationTypeList(i.description)\">\n            {{i?.description | uppercase}}\n            <span\n              *ngIf=\"s1Application?.multipleApplication&&s1Application?.multipleApplication?.submissionStatus!=='PROCESSED'\">({{s1Application?.sequenceOrder}}\n              of\n              {{s1Application?.multipleApplication?.numberOfApplication}})</span>\n            <span *ngIf=\"s1Application?.multipleApplication?.submissionStatus==='PROCESSED'\">\n              (Sequence Number: {{s1Application?.sequenceOrder}})</span>\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n\n      <mat-form-field class=\"col-md-4\" appearance=\"outline\">\n        <mat-label>Application Type</mat-label>\n        <mat-select [(ngModel)]=\"s1Application.applicationType\" [compareWith]=\"compareApplicationType\"\n          name=\"applicationType\" formControlName=\"applicationType\" disabled>\n          <!-- [disabled]=\"s1Application?.internalStatus!='SAVED'&&s1Application?.internalStatus!=undefined\" -->\n          <mat-option *ngFor=\"let i of applicationTypeList\" [value]=\"i\" (click)=\"setAppType(i)\">\n            {{i?.description | uppercase}}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n      <mat-form-field class=\"col-md-4\" appearance=\"outline\" *ngIf=\"s1Application?.submissionType\">\n        <mat-label>Submission Type</mat-label>\n        <input matInput [value]=\"s1Application?.submissionType\" readonly>\n      </mat-form-field>\n      <mat-form-field class=\"col-md-4\" appearance=\"outline\" *ngIf=\"s1Application.formType === 'FOR_PRESENTATION'\">\n        <mat-label>Form Type</mat-label>\n        <input matInput value=\"FOR PRESENTATION\" readonly>\n      </mat-form-field>\n    </div>\n    <hr>\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <button mat-raised-button class=\"button-right button-red\"\n          *ngIf=\"s1Application?.submissionType === 'ORIGINAL' && s1Application?.internalStatus === 's1 Reviewed' \"\n          (click)=\"viewReport(s1Application.id,'S1_Application_Form')\"><i\n            class=\"material-icons color__white\">open_in_new</i> VIEW APPLICATION REPORT </button>\n\n        <button mat-raised-button class=\"button-right button-red\" (click)=\"openPerformanceMetrics()\"\n          *ngIf=\"(currentUser?.userRole.name === 'ROLE_ADMIN' || currentUser?.userRole.name === 'ROLE_SUPER_ADMIN') && s1Application?.id\">\n          <i class=\"material-icons color__white\">trending_up</i> VIEW APPLICATION HISTORY </button>\n\n        <!-- <button mat-raised-button class=\"button-right button-red\" *ngIf=\"(currentUser?.userRole.name === 'ROLE_SUPER_ADMIN' || currentUser?.userRole.name === 'ROLE_ADMIN' || currentUser?.userRole.name === 'ROLE_AD_SPECIALIST')\n        && (s1Application?.releaseStatus === 'FOR_RELEASE' || s1Application?.releaseStatus === 'RELEASED') && s1Application?.paymentStatus === 'PAID'\"\n          (click)=\"viewReport(s1Application.id,'S1_Decision_Form')\"><i\n            class=\"material-icons color__white\">open_in_new</i> DECISION FORM</button> -->\n\n        <!-- <button mat-raised-button class=\"button-right button-red\" *ngIf=\"(currentUser?.userRole.name === 'ROLE_SUPER_ADMIN' || currentUser?.userRole.name === 'ROLE_ADMIN' || currentUser?.userRole.name === 'ROLE_AD_SPECIALIST')\n        && (s1Application?.releaseStatus === 'FOR_RELEASE' || s1Application?.releaseStatus === 'RELEASED') && s1Application?.paymentStatus === 'PAID'\"\n          (click)=\"viewReport(s1Application.id,'Stamp_Material')\"><i class=\"material-icons color__white\">open_in_new</i>\n          STAMPED MATERIAL</button> -->\n\n        <button mat-raised-button class=\"button-right button-red\"\n          *ngIf=\"s1Application?.submissionType === 'revision' && s1Application?.internalStatus === 'revision screened' \"\n          (click)=\"viewReport(s1Application.id, 'Revision_Form')\"><i class=\"material-icons color__white\">open_in_new</i>\n          REVISION FORM</button>\n\n        <button mat-raised-button class=\"button-right button-red\"\n          *ngIf=\"(currentUser?.userRole.name === 'ROLE_ADMIN' || currentUser?.userRole.name === 'ROLE_SUPER_ADMIN' || currentUser?.userRole.name === 'ROLE_AD_SPECIALIST')\n        && s1Application?.submissionType === 'COMPLIANCE' && s1Application?.decisionStatus === 'INCOMPLETE' && s1Application?.internalStatus === 'COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER'\"\n          (click)=\"viewReport(s1Application.id, 'S1_Pending_Form')\"><i\n            class=\"material-icons color__white\">open_in_new</i> PENDING FORM</button>\n            \n        <button mat-raised-button class=\"button-right button-red\" *ngIf=\"(currentUser?.userRole.name === 'ROLE_SUPER_ADMIN' || currentUser?.userRole.name === 'ROLE_ADMIN')\n        && (s1Application?.releaseStatus === 'FOR_RELEASE' || s1Application?.releaseStatus === 'RELEASED') && s1Application?.paymentStatus === 'PAID'\"\n          (click)=\"sendDecisionOrStampMaterialManual()\"><i class=\"material-icons color__white\">send</i>\n          SEND DECISION OR STAMPED MATERIAL</button>\n      </div>\n\n     \n\n      <!--   <div class=\"col-md-1\">\n        <button mat-raised-button class=\"button-right button-red\" (click)=\"viewReport(s1Application.id)\">Pending Form</button>\n      </div> -->\n    </div>\n    <br>\n    <div class=\"row\">\n      <mat-accordion class=\"headers-align\" multi>\n        <mat-expansion-panel [expanded]=\"\n        ((isApplicant&&s1Application?.internalStatus!='SAVED')\n        ||(s1Application?.internalStatus==undefined)) && !accordionExpanded\" *ngIf=\"\n        (isApplicant&&s1Application?.internalStatus=='SAVED')\n        ||(!isApplicant)\n        ||(s1Application?.internalStatus==undefined)\">\n\n          <mat-expansion-panel-header (click)=\"accordionDisablingFunction()\">\n            <mat-panel-title>\n              <i class=\"material-icons\">label_important</i> &nbsp;Client Information \n              <i class=\"material-icons error\" *ngIf=\"hasErrorsClient\">error</i>\n            </mat-panel-title>\n            <mat-panel-description>\n              Affiliation and Company details\n              <i class=\"material-icons\">perm_contact_calendar</i>\n            </mat-panel-description>\n          </mat-expansion-panel-header>\n          <br>\n\n          <app-client-information [s1Application]=\"s1Application\" [isAscUser]=\"isAscUser\"\n            (checkInactiveAffiliation)=\"checkInactiveAffiliation()\" [isDisableFieldOnUpdate]=\"isDisableFieldOnUpdate\"\n            [company]=\"company\" (hasErrorFields)=\"hasErrorsClient = $event\"></app-client-information>\n          <div *ngIf=\"!isDisableFieldOnUpdate\" class=\"required-fields-note\">Note: Fields with * are required</div>\n          <mat-action-row *ngIf=\"isApplicant\">\n            <p *ngIf=\"validationMessage\"><span class=\"badge bg-warning text-dark\"><i\n                  class=\"material-icons\">warning</i>{{validationMessage}}</span></p>\n            <button mat-raised-button color=\"warn\" (click)=\"accordionDisablingFunction()\">Next</button>\n          </mat-action-row>\n\n          <!-- <button mat-raised-button color=\"primary\" (click)=\"accordionDisablingFunction()\" [disabled]=\"!company?.companyName && !s1Application.brand\">Next</button> -->\n        </mat-expansion-panel>\n\n        <!-- FOR ASC Users only -->\n        <mat-expansion-panel *ngIf=\"!isApplicant\">\n          <mat-expansion-panel-header>\n            <mat-panel-title>\n              <i class=\"material-icons\">label_important</i> &nbsp;Presentor Information\n            </mat-panel-title>\n            <mat-panel-description>\n              Personal Details\n              <i class=\"material-icons\">person</i>\n            </mat-panel-description>\n          </mat-expansion-panel-header>\n\n          <br>\n          <div class=\"row\">\n\n            <div class=\"row\"><br></div>\n\n            <div class=\"row\">\n              <mat-form-field class=\"col-md-4\" appearance=\"outline\"\n                *ngIf=\"isEvaluator && s1Application?.externalStatus === undefined\">\n                <mat-label>Assign an Applicant<span class=\"required-field\">\n                    <mat-icon>notification_important</mat-icon>\n                  </span></mat-label>\n\n                <mat-select [(ngModel)]=\"s1Application.applicationOwner\" name=\"s1Application.applicationOwner\">\n                  <mat-option *ngFor=\"let i of applicantList\" [value]=\"i\" (click)=\"selectApplicant(i)\">\n                    {{i.firstName}} {{i.lastName}}\n                  </mat-option>\n                </mat-select>\n              </mat-form-field>\n\n              <mat-form-field class=\"col-md-8\" appearance=\"outline\" *ngIf=\"presentorDetails.id!= null\">\n                <mat-label>Name of Applicant</mat-label>\n                <input matInput [value]=\"presentorDetails?.firstName+' '+presentorDetails?.lastName\" readonly>\n              </mat-form-field>\n            </div>\n\n            <div class=\"row\">\n              <mat-form-field class=\"col-md-7\" appearance=\"outline\">\n                <mat-label>Company Name</mat-label>\n                <input matInput [value]=\"presentorDetails?.company?.companyName\" readonly>\n              </mat-form-field>\n            </div>\n\n            <div class=\"row\"><br></div>\n\n            <div class=\"row\">\n              <mat-form-field class=\"col-md-11\" appearance=\"outline\">\n                <mat-label>Address</mat-label>\n                <input matInput [value]=\"presentorDetails?.company?.completeAddress\" readonly>\n              </mat-form-field>\n            </div>\n\n            <div class=\"row\"><br></div>\n\n            <div class=\"row\" *ngIf=\"presentorDetails.id!= null\">\n              <mat-form-field class=\"col-md-5\" appearance=\"outline\">\n                <mat-label>Mobile Number</mat-label>\n                <input matInput [value]=\"presentorDetails?.mobileNumber\" readonly>\n              </mat-form-field>\n              <mat-form-field class=\"col-md-5\" appearance=\"outline\">\n                <mat-label>Email Address</mat-label>\n                <input matInput [value]=\"presentorDetails?.username\" readonly>\n              </mat-form-field>\n              <mat-form-field class=\"col-md-5\" appearance=\"outline\">\n                <mat-label>Telephone Number</mat-label>\n                <input matInput [value]=\"presentorDetails?.company?.companyTelephoneNo\" readonly>\n              </mat-form-field>\n              <mat-form-field class=\"col-md-5\" appearance=\"outline\">\n                <mat-label>Alternate Telephone Number</mat-label>\n                <input matInput [value]=\"presentorDetails?.company?.companyTelephoneNo2\" readonly>\n              </mat-form-field>\n            </div>\n\n          </div>\n        </mat-expansion-panel>\n\n        <mat-expansion-panel *ngIf=\"\n          (isApplicant && s1Application?.internalStatus=='SAVED')\n          ||(!isApplicant)\n          ||(s1Application?.internalStatus==undefined)\n          ||((s1Application?.internalStatus=='S1_APPLICATION_REVIEWED' || s1Application?.internalStatus=='COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER' || s1Application?.internalStatus=='REVISION_SCREENED' || s1Application?.internalStatus=='S1_APPLICATION_REJECTED')\n             && (s1Application?.decisionStatus=='APPROVED' || s1Application?.decisionStatus=='APPROVED W/ CAUTION' || s1Application?.decisionStatus=='INCOMPLETE')\n             && s1Application?.revisionNo < 2\n             && !s1Application?.appliedS2)\n          \" [disabled]=\"accordionDisable\"\n          [hidden]=\"(s1Application?.hasOngoingRevision || s1Application?.hasOngoingCompliance) && isApplicant\"\n          [expanded]=\"accordionExpanded || isAdSpecialist\">\n          <!-- s1Application?.membersAffiliation && s1Application?.company && s1Application?.brand -->\n          <mat-expansion-panel-header (click)=\"accordionDisablingFunction()\">\n            <mat-panel-title>\n              <i class=\"material-icons\">label_important</i> &nbsp;Material Information\n              <i class=\"material-icons error\" *ngIf=\"checkMaterialFieldErrors()\">error</i>\n            </mat-panel-title>\n            <mat-panel-description>\n              Ads Details\n              <i class=\"material-icons\">ads_click</i>\n            </mat-panel-description>\n          </mat-expansion-panel-header>\n          <br>\n\n          <app-material-information [s1Application]=\"s1Application\" [isAscUser]=\"isAscUser\"\n            [multimediaDTO]=\"multimediaDTO\" [applicationSingleMedia]=\"applicationSingleMedia\"\n            [originalAttachmentDocuments]=\"originalAttachmentDocuments\"\n            [revisionAttachmentDocuments]=\"revisionAttachmentDocuments\"\n            [complianceAttachmentDocuments]=\"complianceAttachmentDocuments\"\n            [isDisableFieldOnUpdate]=\"isDisableFieldOnUpdate\" [supportiveDocumentList]=\"supportiveDocumentList\"\n            (checkSingleMediaChangesFunction)=\"checkSingleMediaChanges()\"\n            (checkMultimediaChangesFunction)=\"checkEmittedMultimedia($event)\"\n            [toDeleteMultimediaList]=\"toDeleteMultimediaList\" [savedTypeOfMedium]=\"s1Application?.typeOfMedium\" \n            (hasErrorFields)=\"hasErrorsMaterial = $event\">\n          </app-material-information>\n          <div *ngIf=\"!isDisableFieldOnUpdate\" class=\"required-fields-note\">Note: Fields with * are required</div>\n          <!-- <mat-action-row>\n            <button mat-button color=\"primary\" (click)=\"accordionDisablingFunction()\">Next</button>\n          </mat-action-row> -->\n        </mat-expansion-panel>\n\n        <!-- PREVIEW FOR APPLICANT ONCE SUBMITTED -->\n        <mat-expansion-panel *ngIf=\"isApplicant&& s1Application?.internalStatus!=undefined\" [expanded]=\"isApplicant&&\n            (s1Application?.externalStatus=='S1_APPLICATION_SUBMITTED'\n            ||s1Application?.externalStatus=='S1_APPLICATION_IN_PROCESS'\n            ||s1Application?.externalStatus=='SUBMITTED_DOCUMENT_FOR_COMPLIANCE'\n            ||s1Application?.externalStatus=='COMPLIANCE_DOCUMENT_FOR_REVIEW'\n            ||s1Application?.externalStatus=='REVISION_REVIEW_IN_PROCESS'\n            ||s1Application?.externalStatus=='SUBMITTED_REVISION'\n            ||s1Application?.externalStatus=='S1_APPLICATION_CANCELLED'\n            ||s1Application?.externalStatus=='S1_APPLICATION_REJECTED'\n            ||s1Application?.internalStatus=='REVISION_SCREENED'\n            ||s1Application?.hasRevision\n            ||s1Application?.appliedS2)\">\n          <mat-expansion-panel-header>\n            <mat-panel-title>\n              <i class=\"material-icons\">label_important</i> &nbsp;Preview\n            </mat-panel-title>\n            <mat-panel-description>\n              S1 Application\n              <i class=\"material-icons\">visibility</i>\n            </mat-panel-description>\n          </mat-expansion-panel-header>\n          <br>\n          <app-preview-application [previewS1Application]=\"s1Application\" [multimediaDTO]=\"multimediaDTO\"></app-preview-application>\n        </mat-expansion-panel>\n\n      </mat-accordion>\n      <!-- </form> -->\n\n      <!-- COMMENTS FOR ASC Users -->\n      <div *ngIf=\"s1Application?.externalStatus != undefined && !isApplicant\">\n        <br>\n        <div class=\"row fields\">\n          <h4>\n            <i class=\"material-icons\">label_important</i> &nbsp;Comments\n          </h4>\n          <br>\n          <app-comment [commentS1Application]=\"s1Application\"></app-comment>\n          <div class=\"row\"><br></div>\n        </div>\n      </div>\n\n      <!-- ATTACHMENTS FOR STAMPED MATERIAL AND DECISION FORM -->\n      <div *ngIf=\"(isAdmin || isSuperAdmin || isApplicant || isAdSpecialist) && previewAttachmentsList.length\">\n        <br>\n        <div class=\"row fields\">\n          <h4>\n            <i class=\"material-icons\">label_important</i> &nbsp;Stamped Material and Decision Forms\n          </h4>\n          <br>\n          <app-preview-attachments [previewAttachmentsList]=\"previewAttachmentsList\"\n            [displayedColumns]=\"previewAttachmentsDisplayedColumns\"\n            [dataSource]=\"previewAttachmentsListDataSource\"></app-preview-attachments>\n          <div class=\"row\"><br></div>\n        </div>\n      </div>\n\n      <!-- DECISION OVERRIDE / APPEAL -->\n      <!-- <div *ngIf=\"(isAdmin || isSuperAdmin) &&\n      s1Application?.internalStatus === 'S1_APPLICATION_REVIEWED' && s1Application?.releaseStatus === 'RELEASED' &&\n      !s1Application?.appliedS2 && !s1Application?.hasOngoingCompliance && !s1Application?.hasOngoingRevision\">\n        <br>\n        <div class=\"row fields\">\n          <h4>\n            <i class=\"material-icons\">label_important</i> &nbsp;DECISION OVERRIDING\n          </h4>\n          <br>\n          <app-decision-override [s1Application]=\"s1Application\"></app-decision-override>\n          <div class=\"row\"><br></div>\n        </div>\n      </div> -->\n\n      <div class=\"row\"><br></div>\n\n      <div class=\"row\" [formGroup]=\"s1ApplicationForm\"\n        *ngIf=\"(s1Application.internalStatus==undefined || s1Application.internalStatus=='SAVED') ||\n      (s1Application?.formType === 'MULTIPLE' || specialApplicationType.includes(s1Application?.applicationType?.description?.toUpperCase()))\">\n\n        <div\n          *ngIf=\"(s1Application.internalStatus==undefined || s1Application.internalStatus=='SAVED') &&\n        (s1Application?.formType === 'MULTIPLE' || specialApplicationType.includes(s1Application?.applicationType?.description?.toUpperCase()))\">\n          <br>\n          <div class=\"row fields\">\n            <h4><i class=\"material-icons\">calendar_today</i> &nbsp; Submission Details</h4>\n            <div class=\"row\">\n              <p>\n                Date S1 Form(s) will be submitted:\n                <b>\n                  <span class=\"submission-date\" *ngIf=\"applicationRequest?.status !== 'DISAPPROVED'\">{{\n                    s1Application?.submissionDate | date: 'MMMM d, y' }}</span>\n                  <span class=\"submission-date\" *ngIf=\"applicationRequest?.status === 'DISAPPROVED'\">N/A - Request was\n                    disapproved</span>\n\n                  <input matInput [(ngModel)]=\"s1Application.submissionDate\" formControlName=\"submissionDate\"\n                    name=\"submissionDate\" [hidden]=\"true\">\n                  <input matInput [(ngModel)]=\"s1Application.applicationRequest\" formControlName=\"applicationRequest\"\n                    name=\"applicationRequest\" [hidden]=\"true\">\n                </b>\n              </p>\n              <div class=\"col-md-12\" *ngIf=\"!s1Application.applicationRequest\"\n                [hidden]=\"s1Application?.multipleApplication\">\n                <mat-card class=\"demo-inline-calendar-card\">\n                  <mat-calendar [(selected)]=\"s1Application.submissionDate\" [minDate]=\"todayDate\"\n                    [dateFilter]=\"matCalendarDateFilter\" (click)=\"onChangeDate(s1Application.submissionDate)\">\n                  </mat-calendar>\n                </mat-card>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div\n          *ngIf=\"(s1Application.internalStatus==undefined || s1Application.internalStatus=='SAVED') &&\n           (s1Application?.formType !== 'MULTIPLE' && !s1Application.multipleApplication && !(specialApplicationType.includes(s1Application?.applicationType?.description?.toUpperCase())))\">\n\n          <mat-slide-toggle color=\"warn\" checked (change)=\"scheduleSubmission()\" *ngIf=\"s1Application.autoSubmit==true\">\n            <b>SCHEDULE SUBMISSION</b>\n          </mat-slide-toggle>\n          <mat-slide-toggle color=\"warn\" (change)=\"scheduleSubmission()\" *ngIf=\"s1Application.autoSubmit!=true\">\n            <b>SCHEDULE SUBMISSION</b>\n          </mat-slide-toggle>\n          <div class=\"row\"><br></div>\n\n          <div class=\"row fields\" *ngIf=\"isChecked==true\">\n            <h4><i class=\"material-icons\">schedule_send</i> &nbsp; Submission Details:</h4>\n            <div class=\"row\">\n              <mat-form-field appearance=\"outline\" class=\"col-md-6\">\n                <mat-label>Date</mat-label>\n                <input matInput placeholder=\"Date\" [matDatepicker]=\"dp3\" [min]=\"todayDate\"\n                  (dateChange)=\"onChangeDate($event.value)\" [matDatepickerFilter]=\"disabledWeekEnds\" readonly\n                  [(ngModel)]=\"s1Application.submissionDate\" name=\"submissionDate\" formControlName=\"submissionDate\">\n                <mat-datepicker-toggle matSuffix [for]=\"dp3\"></mat-datepicker-toggle>\n                <mat-datepicker color=\"warn\" #dp3 disabled=\"false\"></mat-datepicker>\n              </mat-form-field>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"row\"><br></div>\n      <hr>\n\n\n      <!-- For screener/Reviewer only -->\n      <div class=\"row\" [formGroup]=\"s1ApplicationForm\"\n      *ngIf=\"isScreener &&\n              (s1Application?.internalStatus === 'S1_APPLICATION_VERIFIED_BY_AD_SPE'||\n              s1Application?.internalStatus === 'COMPLIANCE_DOCUMENT_VERIFIED_BY_AD_SPE'||\n              s1Application?.internalStatus === 'REVISION_VERIFIED_BY_AD_SPE'||\n              s1Application?.internalStatus === 'S1_APPLICATION_SCREENED'||\n              s1Application?.screenerDecisionComment)\n            || isReviewer &&\n              (s1Application.internalStatus === 'S1_APPLICATION_SCREENED'||\n              s1Application?.internalStatus === 'COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER'||\n              s1Application?.internalStatus === 'REVISION_SCREENED'||\n              s1Application?.internalStatus === 'S1_APPLICATION_REVIEWED'||\n              s1Application?.reviewerDecisionComment)\n            || isAdSpecialist && s1Application?.hasOngoingAppeal\n            \">\n        <mat-form-field class=\"col-md-6\" appearance=\"outline\">\n          <mat-label>Decision:</mat-label>\n          <mat-select [(ngModel)]=\"s1Application.decisionStatus\" name=\"decisionStatus\" formControlName=\"decisionStatus\"\n            (click)=\"clearDecisionStatus()\" (selectionChange)=\"buttonValidation($event.value)\">\n            <mat-option value=\"APPROVED\">APPROVED FOR PRODUCTION</mat-option>\n            <mat-option value=\"APPROVED W/ CAUTION\">APPROVED WITH CAUTION</mat-option>\n            <mat-option value=\"INCOMPLETE\">INCOMPLETE</mat-option>\n            <mat-option value=\"DISAPPROVED\">DISAPPROVED</mat-option>\n            <!-- <mat-option value=\"REFER TO PANEL\">REFER TO PANEL</mat-option> -->\n          </mat-select>\n        </mat-form-field>\n      </div>\n\n\n      <!-- For AdSpe only -->\n      <span *ngIf=\"isAdSpecialist && s1Application?.assignedUser?.userRole.name === 'ROLE_SCREENER' &&\n        (s1Application?.internalStatus === 'S1_APPLICATION_VERIFIED_BY_AD_SPE'\n        ||s1Application?.internalStatus === 'COMPLIANCE_DOCUMENT_VERIFIED_BY_AD_SPE'\n        ||s1Application?.internalStatus === 'REVISION_VERIFIED_BY_AD_SPE')\"><b\n          class=\"material-icons\">error_outline</b>&nbsp;\n        <b>Assigned Screener:</b> {{s1Application?.assignedScreener?.firstName}}\n        {{s1Application?.assignedScreener?.lastName}}\n        <br>\n        <br>\n      </span>\n\n      <b *ngIf=\"s1Application.submissionType === 'ORIGINAL' && isAdSpecialist && s1Application?.multipleApplication && s1Application?.multipleApplication?.countVerifiedApplicationForm !== s1Application?.multipleApplication?.actualNumberOfApplicationForm-1\"\n        [hidden]=\"s1Application?.internalStatus === 'S1_APPLICATION_VERIFIED_BY_AD_SPE' || s1Application?.decisionStatus === 'INCOMPLETE'\">\n        <b class=\"material-icons\">error_outline</b> Selection of Screener will be done in the last form of multiple\n        application.\n        <br>\n        <br>\n      </b>\n\n      <b [hidden]=\"s1Application.submissionType === 'ORIGINAL' && s1Application?.multipleApplication && s1Application?.multipleApplication?.countVerifiedApplicationForm !== s1Application?.multipleApplication?.actualNumberOfApplicationForm-1\"\n        *ngIf=\"isAdSpecialist &&\n      (s1Application.internalStatus=='S1_APPLICATION_VERIFIED_BY_ENCODER'||s1Application.internalStatus=='S1_APPLICATION_VERIFIED_BY_AD_SPE'||\n      s1Application.internalStatus=='COMPLIANCE_DOCUMENT_VERIFIED_BY_ENCODER'||s1Application.internalStatus=='COMPLIANCE_DOCUMENT_VERIFIED_BY_AD_SPE'||\n      s1Application.internalStatus=='REVISION_VERIFIED_BY_ENCODER'||s1Application.internalStatus=='REVISION_VERIFIED_BY_AD_SPE')\">\n        <b class=\"material-icons\">error_outline</b> [ x ] are the number of assigned S1 applications to the\n        Screener.\n        <br>\n      </b>\n      \n\n      <mat-form-field class=\"col-md-6\" appearance=\"outline\" [hidden]=\"s1Application.submissionType === 'ORIGINAL' && s1Application?.multipleApplication && s1Application?.decisionStatus !== 'INCOMPLETE' && s1Application?.multipleApplication?.countVerifiedApplicationForm !== s1Application?.multipleApplication?.actualNumberOfApplicationForm-1\n      && s1Application.internalStatus!=='S1_APPLICATION_VERIFIED_BY_AD_SPE'\"\n        *ngIf=\"isAdSpecialist &&\n      (s1Application.internalStatus=='S1_APPLICATION_VERIFIED_BY_ENCODER'||s1Application.internalStatus=='S1_APPLICATION_VERIFIED_BY_AD_SPE'||\n      s1Application.internalStatus=='COMPLIANCE_DOCUMENT_VERIFIED_BY_ENCODER'||s1Application.internalStatus=='COMPLIANCE_DOCUMENT_VERIFIED_BY_AD_SPE'||\n      s1Application.internalStatus=='REVISION_VERIFIED_BY_ENCODER'||s1Application.internalStatus=='REVISION_VERIFIED_BY_AD_SPE')\">\n        <mat-label>ASSIGN A SCREENER</mat-label>\n        <mat-select [(ngModel)]=\"s1Application.assignedScreener\" name=\"assignedScreener\"\n          (selectionChange)=\"buttonValidation($event.value)\" [compareWith]=\"compareAssignedScreener\">\n          <mat-option *ngFor=\"let i of screenerList\" [value]=\"i\">\n            {{i.firstName}} {{i.lastName}} <span style=\"float:right;\">[ {{i.ctr}} ]</span>\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n\n      <!-- For Screener only -->\n      <span\n        *ngIf=\"s1Application.submissionType === 'ORIGINAL' && isScreener && s1Application?.actionStatus === 'ASSIGN_TO_REVIEWER'\"><b\n          class=\"material-icons\">error_outline</b>&nbsp;\n        <b>Assigned Reviewer:</b>\n        {{s1Application?.multipleApplication ? s1Application?.multipleApplication?.assignedReviewer?.firstName :\n        s1Application?.assignedUser?.firstName}}\n        {{s1Application?.multipleApplication ? s1Application?.multipleApplication?.assignedReviewer?.lastName :\n        s1Application?.assignedUser?.lastName}}\n        <br>\n        <br>\n      </span>\n\n\n      <b *ngIf=\"s1Application.submissionType === 'ORIGINAL' && isScreener && s1Application?.multipleApplication && s1Application?.multipleApplication?.countVerifiedApplicationForm !== s1Application?.multipleApplication?.actualNumberOfApplicationForm-1\"\n        [hidden]=\"s1Application?.internalStatus === 'S1_APPLICATION_SCREENED' || s1Application?.screenerDecisionComment || s1Application?.reviewerDecisionComment || s1Application?.decisionStatus === 'INCOMPLETE'\">\n        <b class=\"material-icons\">error_outline</b> Selection of Reviewer will be done in the last form of multiple\n        application.\n        <br>\n        <br>\n      </b>\n\n      <mat-form-field class=\"col-md-6\" appearance=\"outline\" [hidden]=\"!s1Application?.screenerDecisionComment && s1Application.submissionType === 'ORIGINAL' && s1Application?.multipleApplication && s1Application?.multipleApplication?.countVerifiedApplicationForm !== s1Application?.multipleApplication?.actualNumberOfApplicationForm-1\n      && s1Application.internalStatus!=='S1_APPLICATION_SCREENED'\" *ngIf=\"isScreener &&\n        (s1Application?.internalStatus === 'S1_APPLICATION_VERIFIED_BY_AD_SPE' || s1Application?.internalStatus === 'S1_APPLICATION_SCREENED' ||\n        s1Application?.screenerDecisionComment || s1Application?.reviewerDecisionComment)\">\n        <mat-label>ASSIGN A REVIEWER</mat-label>\n        <mat-select name=\"assignedUserR\" [(ngModel)]=\"s1Application.assignedReviewer\"\n          (selectionChange)=\"buttonValidation('')\" [compareWith]=\"compareAssignedReviewer\">\n          <mat-option *ngFor=\"let i of reviewerList\" [value]=\"i\">\n            {{i.firstName}} {{i.lastName}}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n\n      <!-- For screener/Reviewer only -->\n      <div class=\"row\" [formGroup]=\"s1ApplicationForm\" *ngIf=\"isScreener&&\n              (s1Application?.internalStatus === 'S1_APPLICATION_VERIFIED_BY_AD_SPE'||\n              s1Application?.internalStatus === 'COMPLIANCE_DOCUMENT_VERIFIED_BY_AD_SPE'||\n              s1Application?.internalStatus === 'REVISION_VERIFIED_BY_AD_SPE'||\n              s1Application?.internalStatus === 'S1_APPLICATION_SCREENED'||\n              s1Application?.screenerDecisionComment)\n            ||isReviewer&&\n              (s1Application.internalStatus === 'S1_APPLICATION_SCREENED'||\n              s1Application?.internalStatus === 'COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER'||\n              s1Application?.internalStatus === 'REVISION_SCREENED'||\n              s1Application?.internalStatus === 'S1_APPLICATION_REVIEWED'||\n              s1Application?.reviewerDecisionComment)\n            \">\n\n        <div class=\"rational-other-comment\">\n          <div class=\"col-md-6 rationale\" *ngIf=\"rationaleDisplay\"\n            [hidden]=\"rationaleLists?.length === 0 && rationaleOthersList?.length === 0\">\n            <label>RATIONALE</label>\n            <div class=\"rationale-list\" [hidden]=\"rationaleLists?.length === 0\">\n              <label>Rationale List:</label>\n              <div *ngFor=\"let i of rationaleLists\">\n                <p><span class=\"material-icons\">help</span> {{i?.typeOfRationale?.rationale}}</p>\n              </div>\n            </div>\n\n            <div class=\"rational-other-comment\" [hidden]=\"rationaleOthersList?.length === 0\">\n              <label>Other comments:</label>\n              <p *ngFor=\"let i of rationaleOthersList\"><span class=\"material-icons\"\n                  [hidden]=\"i?.others === ''\">help</span> {{i?.others}}</p>\n            </div>\n          </div>\n          <br>\n        </div>\n\n        <mat-form-field class=\"col-md-6\" appearance=\"outline\"\n          [hidden]=\"s1Application.submissionType === 'ORIGINAL' && s1Application?.multipleApplication && s1Application?.multipleApplication?.countVerifiedApplicationForm !== s1Application?.multipleApplication?.actualNumberOfApplicationForm-1\"\n          *ngIf=\"!applicationSingleMedia?.mediumExecution?.typeOfExecution?.applyForToa && applicationSingleMedia?.mediumExecution?.typeOfExecution?.live\">\n          <mat-label>Choose validity date</mat-label>\n          <input matInput placeholder=\"Date\" [matDatepicker]=\"validityDate\" readonly [min]=\"todayDate\"\n            [(ngModel)]=\"s1Application.validUntil\" name=\"expiresOn\" formControlName=\"validityDate\" [readonly]=\"true\">\n          <mat-datepicker-toggle matSuffix [for]=\"validityDate\">\n            <mat-datepicker color=\"warn\" #validityDate></mat-datepicker>\n          </mat-datepicker-toggle>\n        </mat-form-field>\n      </div>\n\n\n      <div class=\"row\">\n        <div class=\"col-md-12\">\n          <!-- ADMIN / SUPERADMIN - RELEASED -->\n          <button mat-raised-button class=\"button-red\" (click)=\"resendDecision()\"\n            *ngIf=\"s1Application?.releaseStatus === 'RELEASED' && (isAdmin || isSuperAdmin)\">\n            <i class=\"material-icons color__white\">send</i> RESEND DECISION\n          </button>\n\n          <!-- ADMIN / SUPERADMIN -->\n          <!-- wala talaga function isa kasi pang mat tool tip lang - start -->\n          <button mat-raised-button class=\"button-red\"\n            *ngIf=\"(isAdmin || isSuperAdmin) && ((!applicationSingleMedia?.sizeLength || +applicationSingleMedia?.sizeLength === +currentSizeLength) && !hasMultimediaLengthChange) && (s1Application?.decisionStatus === 'APPROVED' || s1Application?.decisionStatus === 'APPROVED_WITH_CAUTION') \"\n            matTooltip=\"To enable this button, change the size/length of the application\">\n            <i class=\"material-icons color__white\">assignment_return</i> &nbsp;SUBMIT FOR MODIFICATION\n          </button>\n          <button mat-raised-button class=\"button-red\" (click)=\"resubmitApplication()\"\n            *ngIf=\"(isAdmin || isSuperAdmin) && ((applicationSingleMedia?.sizeLength && +applicationSingleMedia?.sizeLength !== +currentSizeLength) || hasMultimediaLengthChange) && (s1Application?.decisionStatus === 'APPROVED' || s1Application?.decisionStatus === 'APPROVED_WITH_CAUTION') \">\n            <i class=\"material-icons color__white\">assignment_return</i> &nbsp;SUBMIT FOR MODIFICATION\n          </button>\n          <!-- wala talaga function isa kasi pang mat tool tip lang - end -->\n\n          <!-- ADMIN / SUPERADMIN - RELEASED -->\n          <button mat-raised-button class=\"button-red\" (click)=\"submitAppeal()\" *ngIf=\"(isAdmin || isSuperAdmin) &&\n           s1Application?.internalStatus === 'S1_APPLICATION_REVIEWED' && s1Application?.releaseStatus === 'RELEASED' &&\n           !s1Application?.appliedS2 && !s1Application?.hasOngoingCompliance && !s1Application?.hasOngoingRevision && !s1Application?.hasOngoingAppeal\">\n             <i class=\"material-icons color__white\">report_gmailerrorred</i> &nbsp;RETURN TO ADSPE FOR APPEAL\n           </button>\n\n          <!-- APPEAL - ADSPE -->\n          <button mat-raised-button class=\"button-red\" (click)=\"submitAppeal()\"  *ngIf=\"isAdSpecialist && s1Application?.hasOngoingAppeal\">\n            <i class=\"material-icons color__white\">report_gmailerrorred</i> &nbsp;VERIFY APPEAL\n          </button>\n\n          <!-- ADSPE / ADMIN / SUPERADMIN - FOR RELEASE -->\n          <button mat-raised-button class=\"button-red\" (click)=\"returnToScreener()\"\n            *ngIf=\"(isAdSpecialist || isAdmin || isSuperAdmin) &&\n          s1Application?.internalStatus === 'S1_APPLICATION_REVIEWED' && s1Application?.releaseStatus === 'FOR_RELEASE'\">\n            <i class=\"material-icons color__white\">assignment_return</i> &nbsp;RETURN TO SCREENER\n          </button>\n\n          <!-- screenerDecisionComment -->\n          <button mat-raised-button class=\"button-red\" (click)=\"submitDecisionAndComment()\"\n            *ngIf=\"isScreener && s1Application?.screenerDecisionComment\">\n            <i class=\"material-icons color__white\">fact_check</i> SCREENED\n          </button>\n\n          <!-- reviewerDecisionComment -->\n          <button mat-raised-button class=\"button-red\" (click)=\"submitDecisionAndComment()\"\n            *ngIf=\"isReviewer && s1Application?.reviewerDecisionComment\">\n            <i class=\"material-icons color__white\">assignment_turned_in</i> REVIEWED\n          </button>\n\n        </div>\n      </div>\n\n\n      <!-- //////////////////////////////////////// ORIGINAL //////////////////////////////////////////////////////////// -->\n      <div class=\"row\"\n        *ngIf=\"s1Application?.internalStatus==undefined || s1Application?.internalStatus=='SAVED' || s1Application?.status=='APPROVED'\">\n        <div class=\"col-md-12\">\n\n          <!-- <button mat-raised-button color=\"primary\" (click)=\"saveOrUpdateApplication('SAVED')\" -->\n          <button mat-raised-button color=\"primary\" (click)=\"checkAscRateBeforeSaveOrSubmit()\" *ngIf=\"!isEvaluator\"\n            [disabled]=\"s1Application?.formType === 'MULTIPLE' ? isMultipleRegularDisabled() : isSingleRegularDisabled()\">\n            <i class=\"material-icons color__white\">offline_pin</i> SAVE\n          </button>\n          &nbsp;\n          <!-- (click)=\"saveStatus('presentor', 'submit', 'S1_APPLICATION_SUBMITTED')\" -->\n          <button mat-raised-button class=\"button-red\" (click)=\"checkAscRateBeforeSaveOrSubmit('submit')\"\n            [hidden]=\"specialApplicationType.includes(s1Application?.applicationType?.description?.toUpperCase())\" \n            [disabled]=\"s1Application?.formType === 'MULTIPLE' ? isMultipleRegularDisabled() : isSingleRegularDisabled()\"\n          >\n\n            <i class=\"material-icons color__white\">send</i> SUBMIT\n          </button>\n\n          \n          <button \n            *ngIf=\"specialApplicationType.includes(s1Application?.applicationType?.description?.toUpperCase()) \n              && (!applicationRequest?.status \n              && s1Application.applicationRequest==null)\"\n            mat-raised-button class=\"button-red\" \n            (click)=\"requestSpecialS1ApplicationApproval()\"\n            [disabled]=\"!s1Application?.adTitle || !s1Application.submissionDate\"\n          >\n            <i class=\"material-icons color__white\">send</i> REQUEST FOR APPROVAL\n          </button>\n        </div>\n\n        <!-- <div class=\"col-md-12\" *ngIf=\"(s1Application?.formType === 'MULTIPLE' && !s1Application.multipleApplication) \">\n          <button mat-raised-button class=\"button-red\" (click)=\"saveOrUpdateApplication('S1_APPLICATION_SUBMITTED')\"\n            [disabled]=\"!s1Application?.adTitle || !s1Application.submissionDate\">\n            <i class=\"material-icons color__white\">send</i> REQUEST FOR APPROVAL\n          </button>\n        </div> -->\n      </div>\n\n      <div class=\"row\" *ngIf=\"isApplicant&&s1Application?.internalStatus=='S1_APPLICATION_SUBMITTED'\">\n        <div class=\"col-md-12\">\n          <button mat-raised-button class=\"button-red\"\n            (click)=\"saveStatus('presentor','cancel', 'S1_APPLICATION_CANCELLED')\">\n            <i class=\"material-icons color__white\">cancel</i> CANCEL APPLICATION\n          </button>\n        </div>\n      </div>\n\n      <div class=\"row\" *ngIf=\"isEvaluator&&s1Application.internalStatus=='S1_APPLICATION_SUBMITTED'\">\n        <b class=\"warning-msg\"\n          *ngIf=\"s1Application?.company?.status === 'FOR_APPROVAL' || s1Application?.brand?.status === 'FOR_APPROVAL' || s1Application?.product?.status === 'FOR_APPROVAL' \">\n          <b class=\"material-icons\">error_outline</b> New Company / Brand / Product must be approved first before you\n          can forward the application.\n        </b>\n        <div class=\"col-md-12\">\n          <button mat-raised-button class=\"button-red\"\n            [disabled]=\"s1Application?.company?.status === 'FOR_APPROVAL' || s1Application?.brand?.status === 'FOR_APPROVAL' || s1Application?.product?.status === 'FOR_APPROVAL' \"\n            (click)=\"saveStatus('encoder','verify','S1_APPLICATION_VERIFIED_BY_ENCODER')\">\n            <i class=\"material-icons color__white\">verified</i> FORWARD TO AD SPECIALIST\n          </button>\n          &nbsp;\n          <button mat-raised-button class=\"button-red\" (click)=\"rejectDisapprovedModal()\">\n            <!-- (click)=\"rejectDisapprovedModal('encoder', 'reject', 'S1_APPLICATION_REJECTED')\" -->\n            <i class=\"material-icons color__white\">unpublished</i> REJECT\n          </button>\n        </div>\n      </div>\n\n      <!-- MULTIPLE -->\n      <div class=\"row\"\n        *ngIf=\"s1Application.submissionType === 'ORIGINAL' && s1Application?.formType==='MULTIPLE' && s1Application?.decisionStatus !== 'INCOMPLETE'\">\n        <div class=\"col-md-12\">\n          <button mat-raised-button class=\"button-red\"\n            *ngIf=\"isAdSpecialist&&s1Application?.actionStatus==='ASSIGN_TO_ADSPE'\"\n            (click)=\"saveStatus('ad-specialist','verify','S1_APPLICATION_VERIFIED_BY_AD_SPE')\">\n            <i class=\"material-icons color__white\">verified</i> FORWARD TO SCREENER\n          </button>\n        </div>\n      </div>\n\n\n      <div class=\"row\"\n        *ngIf=\"isAdSpecialist&&\n        (s1Application?.internalStatus=='S1_APPLICATION_VERIFIED_BY_ENCODER'||s1Application?.internalStatus=='S1_APPLICATION_VERIFIED_BY_AD_SPE')\">\n        <div class=\"col-md-12\">\n\n          <!-- NOT MULTIPLE -->\n          <button mat-raised-button class=\"button-red\"\n            *ngIf=\"isAdSpecialist&&s1Application?.actionStatus==='ASSIGN_TO_ADSPE'\"\n            (click)=\"saveStatus('ad-specialist','verify','S1_APPLICATION_VERIFIED_BY_AD_SPE')\"\n            [disabled]=\"buttonDisabled\" [hidden]=\"s1Application?.formType==='MULTIPLE'\">\n            <i class=\"material-icons color__white\">verified</i> FORWARD TO SCREENER\n          </button>\n\n          <button mat-raised-button class=\"button-red\" *ngIf=\"isAdSpecialist&&\n            (s1Application?.actionStatus==='ASSIGN_TO_SCREENER'||s1Application?.actionStatus==='ASSIGN_TO_HOLD')&&\n            s1Application?.internalStatus === 'S1_APPLICATION_VERIFIED_BY_AD_SPE'\" (click)=\"reassign()\"\n            [disabled]=\"buttonDisabled\">\n            <i class=\"material-icons color__white\">verified</i> RE-ASSIGN SCREENER\n          </button>\n          &nbsp;\n          <!-- <button mat-raised-button class=\"button-red\"\n            (click)=\"rejectDisapprovedModal('encoder', 'reject', 'S1_APPLICATION_REJECTED')\">\n            (click)=\"saveStatus('ad-specialist','reject','S1_APPLICATION_REJECTED')\">\n            <i class=\"material-icons color__white\">unpublished</i> REJECT\n          </button> -->\n        </div>\n      </div>\n\n      <!-- AD SPECIALIST ONLY-->\n      <div class=\"row mt-4\">\n        <mat-form-field class=\"col-md-6\" appearance=\"outline\" [hidden]=\"s1Application.submissionType === 'ORIGINAL' && s1Application?.multipleApplication && s1Application?.decisionStatus !== 'INCOMPLETE' && s1Application?.multipleApplication?.countVerifiedApplicationForm !== s1Application?.multipleApplication?.actualNumberOfApplicationForm-1\n        && s1Application.internalStatus!=='S1_APPLICATION_VERIFIED_BY_AD_SPE'\"\n          *ngIf=\"isAdSpecialist &&\n        (s1Application.internalStatus=='S1_APPLICATION_VERIFIED_BY_ENCODER'||s1Application.internalStatus=='S1_APPLICATION_VERIFIED_BY_AD_SPE'||\n        s1Application.internalStatus=='COMPLIANCE_DOCUMENT_VERIFIED_BY_ENCODER'||s1Application.internalStatus=='COMPLIANCE_DOCUMENT_VERIFIED_BY_AD_SPE'||\n        s1Application.internalStatus=='REVISION_VERIFIED_BY_ENCODER'||s1Application.internalStatus=='REVISION_VERIFIED_BY_AD_SPE')\">\n          <mat-label>REASSIGN AD SPECIALIST</mat-label>\n          <mat-select [(ngModel)]=\"s1Application.assignedAdSpecialist\" name=\"assignedAdSpecialist\"\n            (selectionChange)=\"buttonValidation($event.value)\" [compareWith]=\"compareAssignedAdSpec\">\n            <mat-option *ngFor=\"let i of adSpecialistList\" [value]=\"i\">\n              {{i.firstName}} {{i.lastName}} <span style=\"float:right;\">[ {{i.ctr}} ]</span>\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n\n        <div class=\"col-md-12\">\n          <button mat-raised-button class=\"button-red\" *ngIf=\"isAdSpecialist\" (click)=\"reassignAdSpecialist()\" \n          [disabled]=\"buttonDisabled\" [hidden]=\"s1Application?.formType==='MULTIPLE'\" >\n            <i class=\"material-icons color__white\">verified</i> RE-ASSIGN AD SPECIALIST\n          </button>\n        </div>\n      </div>\n\n      <!-- MULTIPLE -->\n      <div class=\"row\"\n        *ngIf=\"s1Application.submissionType === 'ORIGINAL' && s1Application?.formType==='MULTIPLE' && s1Application?.internalStatus === 'S1_APPLICATION_VERIFIED_BY_AD_SPE'\">\n        <div class=\"col-md-12\">\n          <button mat-raised-button class=\"button-red\"\n            *ngIf=\"isScreener&&s1Application?.actionStatus==='ASSIGN_TO_SCREENER'\"\n            (click)=\"saveStatus('screener','verify','S1_APPLICATION_SCREENED')\"\n            [disabled]=\"!s1Application.decisionStatus\">\n            <i class=\"material-icons color__white\">fact_check</i> SCREENED\n          </button>\n        </div>\n      </div>\n\n      <div class=\"row\"\n        *ngIf=\"isScreener&&\n        (s1Application.internalStatus=='S1_APPLICATION_VERIFIED_BY_AD_SPE'||s1Application.internalStatus=='S1_APPLICATION_SCREENED')\">\n        <div class=\"col-md-12\">\n          <button mat-raised-button class=\"button-red\"\n            *ngIf=\"isScreener&&s1Application?.actionStatus==='ASSIGN_TO_SCREENER'\"\n            (click)=\"saveStatus('screener','verify','S1_APPLICATION_SCREENED')\"\n            [disabled]=\"buttonDisabled || !s1Application.decisionStatus\"\n            [hidden]=\"s1Application?.formType==='MULTIPLE'\">\n            <i class=\"material-icons color__white\">fact_check</i> SCREENED\n          </button>\n          <button mat-raised-button class=\"button-red\"\n            *ngIf=\"isScreener&&s1Application?.actionStatus==='ASSIGN_TO_REVIEWER'\" (click)=\"reassign()\"\n            [disabled]=\"buttonDisabled\">\n            <i class=\"material-icons color__white\">fact_check</i> RE-ASSIGN REVIEWER\n          </button>\n          <button mat-raised-button class=\"button-red\" (click)=\"returnTo('ADSPE','S1_APPLICATION_VERIFIED_BY_ENCODER')\"\n            [disabled]=\"\" [hidden]=\"s1Application?.formType === 'MULTIPLE'\">\n            <i class=\"material-icons color__white\">assignment_return</i> &nbsp;RETURN TO AD SPECIALIST\n          </button>\n        </div>\n      </div>\n\n      <div class=\"row\" *ngIf=\"!s1Application?.reviewerDecisionComment && isReviewer && (s1Application?.internalStatus=='S1_APPLICATION_SCREENED'||\n        s1Application?.internalStatus === 'S1_APPLICATION_REVIEWED' ||\n        s1Application?.internalStatus === 'COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER')\">\n        <div class=\"col-md-12\">\n          <button mat-raised-button class=\"button-red\" [disabled]=\"!s1Application.decisionStatus\"\n            (click)=\"saveStatus('reviewer','verify', 'S1_APPLICATION_REVIEWED')\">\n            <i class=\"material-icons color__white\">assignment_turned_in</i> REVIEWED\n          </button>\n          <button mat-raised-button class=\"button-red\"\n            (click)=\"returnTo('SCREENER', 'S1_APPLICATION_VERIFIED_BY_AD_SPE')\" [disabled]=\"\"\n            [hidden]=\"s1Application?.formType === 'MULTIPLE'\">\n            <i class=\"material-icons color__white\">assignment_return</i> &nbsp;RETURN TO SCREENER\n          </button>\n        </div>\n      </div>\n\n\n      <!-- //////////////////////////////////////// FOR COMPLIANCE //////////////////////////////////////////////////////////// -->\n      <div class=\"row\"\n        *ngIf=\"(isApplicant && !s1Application?.hasOngoingRevision && !s1Application?.hasOngoingCompliance && s1Application?.decisionStatus=='INCOMPLETE'\n        && (s1Application?.internalStatus=='S1_APPLICATION_REVIEWED' || s1Application?.internalStatus=='COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER' || s1Application?.internalStatus=='REVISION_SCREENED' || s1Application?.internalStatus=='S1_APPLICATION_REJECTED'))\">\n        <b><b class=\"material-icons info-msg\">error_outline</b> Applicant can submit updated or additional supporting\n          documents for S1 Forms with Incomplete Decision.</b>\n        <div class=\"col-md-12\">\n          <br>\n          <button mat-raised-button class=\"button-red\"\n            (click)=\"saveStatusForCompliance('presentor','submit', 'SUBMITTED_DOCUMENT_FOR_COMPLIANCE')\">\n            <i class=\"material-icons color__white\">task_alt</i> SUBMIT FOR COMPLIANCE\n          </button>\n        </div>\n      </div>\n\n      <div class=\"row\" *ngIf=\"isEvaluator&&s1Application.internalStatus=='SUBMITTED_DOCUMENT_FOR_COMPLIANCE'\">\n        <div class=\"col-md-12\">\n          <button mat-raised-button class=\"button-red\"\n            [disabled]=\"s1Application?.company?.status === 'FOR_APPROVAL' || s1Application?.brand?.status === 'FOR_APPROVAL' || s1Application?.product?.status === 'FOR_APPROVAL'  \"\n            (click)=\"saveStatusForCompliance('encoder','verify','COMPLIANCE_DOCUMENT_VERIFIED_BY_ENCODER')\">\n            <i class=\"material-icons color__white\">verified</i> FORWARD TO AD SPECIALIST\n          </button>\n          &nbsp;\n          <button mat-raised-button class=\"button-red\" (click)=\"rejectDisapprovedModal()\">\n            <!-- (click)=\"rejectDisapprovedModal('encoder','reject','S1_APPLICATION_REJECTED')\" -->\n            <i class=\"material-icons color__white\">unpublished</i> REJECT\n          </button>\n        </div>\n      </div>\n\n      <div class=\"row\"\n        *ngIf=\"isAdSpecialist&&\n        (s1Application?.internalStatus=='COMPLIANCE_DOCUMENT_VERIFIED_BY_ENCODER'||s1Application?.internalStatus=='COMPLIANCE_DOCUMENT_VERIFIED_BY_AD_SPE')\">\n        <div class=\"col-md-12\">\n          <button mat-raised-button class=\"button-red\"\n            (click)=\"saveStatusForCompliance('ad-specialist','verify','COMPLIANCE_DOCUMENT_VERIFIED_BY_AD_SPE')\">\n            <i class=\"material-icons color__white\">verified</i> FORWARD TO SCREENER\n          </button>\n        </div>\n      </div>\n\n      <div class=\"row\" *ngIf=\"isScreener&&s1Application?.internalStatus=='COMPLIANCE_DOCUMENT_VERIFIED_BY_AD_SPE'\">\n        <div class=\"col-md-12\">\n          <button mat-raised-button class=\"button-red\"\n            (click)=\"saveStatusForCompliance('screener','verify','COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER')\">\n            <i class=\"material-icons color__white\">fact_check</i> SCREENED\n          </button>\n          <button mat-raised-button class=\"button-red\"\n            (click)=\"returnTo('ADSPE','COMPLIANCE_DOCUMENT_VERIFIED_BY_ENCODER')\" [disabled]=\"\">\n            <i class=\"material-icons color__white\">assignment_return</i> &nbsp;RETURN TO AD SPECIALIST\n          </button>\n        </div>\n      </div>\n\n\n      <!-- //////////////////////////////////////// REVISION //////////////////////////////////////////////////////////// -->\n      <div class=\"row\"\n        *ngIf=\"(s1Application?.revisionNo !== 2 && s1Application?.submissionType === 'ORIGINAL'\n                && !s1Application?.hasOngoingRevision && !s1Application?.hasOngoingCompliance && !s1Application?.appliedS2\n                && isApplicant\n                && (s1Application?.internalStatus === 'S1_APPLICATION_REVIEWED' || s1Application?.internalStatus=='COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER')\n                && (s1Application?.decisionStatus=='APPROVED' || s1Application?.decisionStatus=='APPROVED W/ CAUTION'))\">\n        <b>\n          <br>\n          <b class=\"material-icons info-msg\">error_outline</b> Applicant can submit Approved S1 Form for Revision\n          Request with revision letter, new main document, and new\n          supporting document (if needed).\n        </b>\n        <div class=\"col-md-12\">\n          <br>\n          <button mat-raised-button class=\"button-red\"\n            (click)=\"saveStatusRevision('presentor','submit', 'SUBMITTED_REVISION')\"\n            [disabled]=\"!s1Application?.revisionLetterAttachmentReference && !attachmentDocuments[2]?.revisionLetterAttachmentReference\">\n            <i class=\"material-icons color__white\">task_alt</i> SUBMIT REVISION\n          </button>\n        </div>\n      </div>\n\n      <div class=\"row\" *ngIf=\"isEvaluator&&s1Application.internalStatus=='SUBMITTED_REVISION'\">\n        <div class=\"col-md-12\">\n          <button mat-raised-button class=\"button-red\"\n            [disabled]=\"s1Application?.company?.status === 'FOR_APPROVAL' || s1Application?.brand?.status === 'FOR_APPROVAL' || s1Application?.product?.status === 'FOR_APPROVAL' \"\n            (click)=\"saveStatusRevision('encoder','verify','REVISION_VERIFIED_BY_ENCODER')\">\n            <i class=\"material-icons color__white\">verified</i> FORWARD TO AD SPECIALIST\n          </button>\n          &nbsp;\n          <button mat-raised-button class=\"button-red\" (click)=\"rejectDisapprovedModal()\">\n            <!-- (click)=\"rejectDisapprovedModal('encoder','reject','S1_APPLICATION_REJECTED')\" -->\n            <i class=\"material-icons color__white\">unpublished</i> REJECT\n          </button>\n        </div>\n      </div>\n\n\n      <div class=\"row\"\n        *ngIf=\"isAdSpecialist&&\n        (s1Application.internalStatus=='REVISION_VERIFIED_BY_ENCODER'||s1Application?.internalStatus=='REVISION_VERIFIED_BY_AD_SPE')\">\n        <div class=\"col-md-12\">\n          <button mat-raised-button class=\"button-red\"\n            (click)=\"saveStatusRevision('ad-specialist','verify','REVISION_VERIFIED_BY_AD_SPE')\">\n            <i class=\"material-icons color__white\">verified</i> FORWARD TO SCREENER\n          </button>\n          <!--  &nbsp;\n          <button mat-raised-button class=\"button-red\"\n            (click)=\"saveStatus('ad-specialist','reject','S1_APPLICATION_REJECTED')\">\n            <i class=\"material-icons color__white\">unpublished</i> REJECT\n          </button> -->\n        </div>\n      </div>\n\n      <div class=\"row\" *ngIf=\"isScreener&&s1Application.internalStatus=='REVISION_VERIFIED_BY_AD_SPE'\">\n        <div class=\"col-md-12\">\n          <button mat-raised-button class=\"button-red\"\n            (click)=\"saveStatusRevision('screener','verify','REVISION_SCREENED')\">\n            <i class=\"material-icons color__white\">fact_check</i> SCREENED\n          </button>\n        </div>\n      </div>\n\n    </div>\n  </div>\n</form>\n<!-- </form> -->\n","import { Component, Inject, OnInit, Optional } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { Company, S1Application } from '@models';\nimport { ApiService, DataStorageService, SweetAlertService } from '@services';\nimport { ENDPOINTS, ROLES } from '@shared';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-update-special-application',\n  templateUrl: './update-special-application.component.html',\n  styleUrls: ['./update-special-application.component.scss']\n})\nexport class UpdateSpecialApplicationComponent implements OnInit {\n\n  company = new Company();\n  s1Application = new S1Application();\n\n  currentUser: any;\n  currentUserRole: any;\n\n  isAscUser = false;\n  isDisableFieldOnUpdate = true;\n\n  formType = 'INDIVIDUAL';\n\n  ascUserRoleList = [...ROLES.filter((role: any) => role.ascUser === true).map((role: any) => role.role)];\n\n  constructor(\n    private apiService: ApiService,\n    private dataStorage: DataStorageService,\n    private sweetAlertService: SweetAlertService,\n    private router: Router,\n    @Optional() public dialogRef: MatDialogRef<UpdateSpecialApplicationComponent>,\n    @Optional() @Inject(MAT_DIALOG_DATA) public data: any,\n  ) {\n    if (data) {\n      this.s1Application = data;\n      this.s1Application.submissionDate = data.submissionDate;\n      this.s1Application.formType = this.formType;\n\n\n      // Client Info\n      // this.s1Application.company = this.multipleS1Application.company;\n      // this.company = this.multipleS1Application.company;\n      // this.s1Application.membersAffiliation = this.multipleS1Application.membersAffiliation;\n      // this.s1Application.brand = this.multipleS1Application.brand;\n    }\n\n\n\n\n  }\n\n  ngOnInit(): void {\n    this.currentUser = this.dataStorage.getUserAccount();\n    this.currentUserRole = this.currentUser.userRole.name;\n    this.isAscUser = this.ascUserRoleList.includes(this.dataStorage.getUserRole());\n  }\n\n  onApproveOrDisapprove(status = 'APPROVED'): void {\n    const displayStatus = status === 'APPROVED' ? 'approve' : 'disapprove';\n    Swal.fire({\n      text: `Are you sure you want to ${displayStatus} this application?`,\n      icon: 'question',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Confirm'\n    }).then((result) => {\n      if (result.value) {\n        const endpointExtension = status === 'APPROVED' ? '/approve' : '/disapprove';\n        // this.s1Application.actionDate = new Date();\n        this.s1Application.actionBy = this.currentUser.username;\n        this.apiService.save(`${ENDPOINTS.applicationRequests}${endpointExtension}/${this.s1Application.id}`, this.s1Application).subscribe(\n          (res: any) => {\n            this.sweetAlertService.customSuccessMessage(`Application successfully ${status.toLowerCase()}.`);\n          this.router.navigate(['asc/page/application/s1/special']);\n          }, (err: any) => {\n            console.log(err);\n          }, () => {\n            this.dialogRef.close(this.s1Application);\n          }\n        );\n      }\n    });\n  }\n\n  updateSpecialApplication(): void {\n    // TO DO\n    // will only redirect to add new S1 application\n    // saving or updating is in add-s1-application.component.ts\n    this.dialogRef.close();\n    this.router.navigate(['asc/page/application/s1/add']);\n  }\n\n}\n","<form>\n  <div class=\"container-fluid\">\n    <div class=\"row title\">\n      <div class=\"col-md-12\">\n        <table>\n          <tr>\n            <td *ngIf=\"(s1Application?.status!=undefined&&!isAscUser)||isAscUser\">\n              <span>\n                Status:\n              </span>\n            </td>\n            <td *ngIf=\"(s1Application?.status !== undefined && !isAscUser) || isAscUser\">\n              <span *ngIf=\"s1Application?.status !== undefined && !isAscUser\">\n                <b>{{s1Application?.status?.replaceAll('_',' ') | uppercase}}</b>\n              </span>\n              <span *ngIf=\"isAscUser\">\n                <b>{{s1Application?.status?.replaceAll('_',' ') | uppercase}}</b>\n              </span>\n            </td>\n            <td class=\"no-border\">\n              <button\n                class=\"button-right button-red\"\n                mat-raised-button\n                (click)=\"dialogRef.close()\"\n              >\n                <i class=\"material-icons color__white\">list</i> VIEW APPLICATIONS\n              </button>\n            </td>\n          </tr>\n          <tr>\n            <td class=\"no-border\"></td>\n          </tr>\n        </table>\n\n        <hr />\n      </div>\n    </div>\n\n    <div class=\"row\"><br /></div>\n    <div class=\"row\">\n      <mat-form-field class=\"col-md-6\" appearance=\"outline\">\n        <mat-label>Form Type</mat-label>\n        <input matInput [value]=\"formType\" readonly />\n      </mat-form-field>\n\n      <mat-form-field class=\"col-md-6\" appearance=\"outline\">\n        <mat-label>Application Type</mat-label>\n        <input matInput [value]=\"s1Application?.applicationType?.description\" readonly/>\n      </mat-form-field>\n    </div>\n\n    <div class=\"row\">\n      <mat-accordion class=\"headers-align\" multi>\n        <mat-expansion-panel\n          [expanded]=\"\n            (currentUser?.userRole?.name == 'ROLE_APPLICANT' &&\n              s1Application?.internalStatus != 'SAVED') ||\n            s1Application?.internalStatus == undefined\n              ? true\n              : false\n          \"\n          *ngIf=\"\n            (currentUser?.userRole?.name == 'ROLE_APPLICANT' &&\n              s1Application?.internalStatus == 'SAVED') ||\n            currentUser?.userRole?.name != 'ROLE_APPLICANT' ||\n            s1Application?.internalStatus == undefined\n          \"\n        >\n          <mat-expansion-panel-header>\n            <mat-panel-title>\n              <i class=\"material-icons\">label_important</i> &nbsp;Initial\n              Information\n            </mat-panel-title>\n          </mat-expansion-panel-header>\n          <br />\n\n          <app-client-information\n            [s1Application]=\"s1Application\"\n            [isAscUser]=\"isAscUser\"\n            [isDisableFieldOnUpdate]=\"isDisableFieldOnUpdate\"\n            [company]=\"company\"\n          ></app-client-information>\n\n\n          <div class=\"row\">\n            <mat-form-field class=\"col-md-6\" appearance=\"outline\">\n              <mat-label>Ad Title</mat-label>\n              <input matInput [value]=\"s1Application?.adTitle\" readonly />\n            </mat-form-field>\n\n            <mat-form-field class=\"col-md-6\" appearance=\"outline\">\n              <mat-label>Tag Line</mat-label>\n              <input matInput [value]=\"s1Application?.tagLine\" readonly />\n            </mat-form-field>\n\n            <mat-form-field appearance=\"outline\" class=\"col-md-6\">\n              <mat-label>Date of Submission</mat-label>\n              <input matInput placeholder=\"Date\" readonly\n                [value]=\"s1Application?.submissionDate | date: 'MMMM d, y'\"\n                name=\"submissionDate\" *ngIf=\"s1Application?.status !== 'DISAPPROVED'\"/>\n                <input matInput placeholder=\"Date\" readonly\n                  value=\"N/A - Request was disapproved\"\n                  name=\"submissionDate\" *ngIf=\"s1Application?.status === 'DISAPPROVED'\"/>\n            </mat-form-field>\n          </div>\n        </mat-expansion-panel>\n\n        <!-- FOR Admin Users only -->\n        <mat-expansion-panel *ngIf=\"currentUser?.userRole?.name === 'ROLE_ADMIN' || currentUser?.userRole?.name === 'ROLE_SUPER_ADMIN' \">\n          <mat-expansion-panel-header>\n            <mat-panel-title>\n              <i class=\"material-icons\">label_important</i> &nbsp;Presentor Information\n            </mat-panel-title>\n            <mat-panel-description>\n              Personal Details\n              <i class=\"material-icons\">person</i>\n            </mat-panel-description>\n          </mat-expansion-panel-header>\n\n          <br>\n          <div class=\"row\">\n            <div class=\"row\">\n              <!-- <mat-form-field class=\"col-md-4\" appearance=\"outline\">\n                <mat-label>Membership Affiliation</mat-label>\n                <input matInput [value]=\"s1Application?.company?.membersAffiliation?.description\" readonly>\n              </mat-form-field> -->\n              <mat-form-field class=\"col-md-7\" appearance=\"outline\">\n                <mat-label>Company Name</mat-label>\n                <input matInput [value]=\"s1Application?.company?.companyName\" readonly>\n              </mat-form-field>\n            </div>\n\n            <div class=\"row\"><br></div>\n\n            <div class=\"row\">\n              <mat-form-field class=\"col-md-11\" appearance=\"outline\">\n                <mat-label>Address</mat-label>\n                <input matInput [value]=\"s1Application?.company?.completeAddress\" readonly>\n              </mat-form-field>\n            </div>\n\n            <div class=\"row\"><br></div>\n\n            <div class=\"row\">\n              <mat-form-field class=\"col-md-8\" appearance=\"outline\" *ngIf=\"s1Application.id!= null\">\n                <mat-label>Name of Applicant</mat-label>\n                <input matInput [value]=\"s1Application?.applicationOwner?.firstName+' '+s1Application?.applicationOwner?.lastName\" readonly>\n              </mat-form-field>\n\n              <!-- <mat-form-field class=\"col-md-8\" appearance=\"outline\" *ngIf=\"currentUser?.userRole?.name =='ROLE_ENCODER' && s1Application.id!= null\">\n                <mat-label>Name of Applicant</mat-label>\n                <input matInput [value]=\"s1Application?.firstName+' '+s1Application?.lastName\" readonly>\n              </mat-form-field> -->\n\n            </div>\n\n            <div class=\"row\"><br></div>\n\n            <div class=\"row\">\n              <mat-form-field class=\"col-md-4\" appearance=\"outline\" *ngIf=\"s1Application.id!= null\">\n                <mat-label>Mobile Number</mat-label>\n                <input matInput [value]=\"s1Application?.applicationOwner?.mobileNumber\" readonly>\n              </mat-form-field>\n              <mat-form-field class=\"col-md-3\" appearance=\"outline\" *ngIf=\"s1Application.id!= null\">\n                <mat-label>Telephone Number</mat-label>\n                <input matInput [value]=\"s1Application?.company?.companyTelephoneNo\" readonly>\n              </mat-form-field>\n              <mat-form-field class=\"col-md-4\" appearance=\"outline\" *ngIf=\"s1Application.id!= null\">\n                <mat-label>Email Address</mat-label>\n                <input matInput [value]=\"s1Application?.applicationOwner?.username\" readonly>\n              </mat-form-field>\n            </div>\n\n          </div>\n        </mat-expansion-panel>\n      </mat-accordion>\n\n      <div class=\"row\"><br /></div>\n      <hr />\n\n      <br />\n      <!-- //////////////////////////////////////// ACTION BUTTONS //////////////////////////////////////////////////////////// -->\n      <div\n        class=\"row\"\n        *ngIf=\"s1Application?.status === 'FOR_APPROVAL' && isAscUser\"\n      >\n        <div mat-dialog-actions>\n          <div class=\"dialog-button-content\" align=\"end\">\n            <button class=\"confirm\" (click)=\"onApproveOrDisapprove()\">\n              <i class=\"material-icons color__white\">thumb_up_alt</i> Approve\n            </button>\n            <button class=\"warn\" (click)=\"onApproveOrDisapprove('DISAPPROVED')\">\n              <i class=\"material-icons color__white\">thumb_down_alt</i> Disapprove\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","\n// import { WebSocketService } from './../../../../../core/services/socket/websocket.service';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { BadgeCounnter } from './../../../../../core/models/counter';\nimport { Component, Inject, OnInit, ViewChild, OnDestroy } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTable, MatTableDataSource } from '@angular/material/table';\nimport { S1Application, S2Application } from '@models';\nimport { PAYMENT_STATUS, ENDPOINTS, APPLICATION_STATUS, FORM_STATUS, SUBMISSION_TYPE, USER_ROLES, TYPE_OF_MEDIUM, ACTION_STATUS } from '@shared';\nimport { ApiService, DataStorageService, SweetAlertService } from '@services';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport Swal from 'sweetalert2';\nimport { S1FormTypeComponent } from 'app/modules/fragments/s1-form-type/s1-form-type.component';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { MultipleApplication } from 'app/core/models/multiple-application.model';\nimport { UpdateMultipleApplicationComponent }\n  from 'app/modules/fragments/update-multiple-application/update-multiple-application.component';\nimport { UpdateSpecialApplicationComponent } from 'app/modules/fragments/update-special-application/update-special-application.component';\nimport { ApplicationRequest } from 'app/core/models/application-request.model';\nimport { RequestForSpecialClearingComponent } from 'app/modules/fragments/request-for-special-clearing/request-for-special-clearing.component';\nimport { TypeOfExecution } from 'app/core/models/type-of-execution.model';\nimport { CommonServices } from 'app/core/services/common-services.service';\n\nimport { Subscription, timer, merge } from 'rxjs';\nimport { mergeMap } from 'rxjs/operators';\nimport { WebSocketService } from 'app/core/services/socket/websocket.service';\n\n\n@Component({\n  selector: 'app-list-s1-application',\n  templateUrl: './list-s1-application.component.html',\n  styleUrls: ['./list-s1-application.component.scss']\n})\nexport class ListS1ApplicationComponent implements OnInit, OnDestroy {\n  @ViewChild(MatPaginator, { static: false }) paginatorFalse: MatPaginator;\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  pageSize = 10;\n  pageNo = 0;\n  pageSizeOptions: number[] = [10, 20, 50];\n  @ViewChild(MatSort, { static: false }) sort: MatSort;\n  @ViewChild(MatTable, { static: false }) table: MatTable<S1Application>;\n\n  // individual s1 application list\n  dataSource: MatTableDataSource<S1Application>;\n  displayedColumns = [];\n  totalItems = 0;\n  totalPages = 0;\n  currentPage = 1; // reuse\n  // currentSize = 100;\n\n  badgeCounter: BadgeCounnter = new BadgeCounnter();\n\n  returnedApps = [];\n  click = 0;\n  timeLeft: number = 60;\n  interval: any;\n  refreshButtonEnabled = true;\n  timerDisplay: any;\n  isTimerValueDisplay = false;\n  // , 'ascStatus', 'awaitingActionFrom'];\n\n  // multiple s1 application list variables\n  multipleApplicationList = [];\n  multipleApplicationDataSource: MatTableDataSource<MultipleApplication>;\n  multipleApplicationDisplayedColumns = ['adTitle', 'typeOfApplication', 'companyName', 'brand', 'product', 'status'];\n  multipleTotalItems = 0;\n\n  // end multiple application list variables\n\n  // special s1 application list variables\n  specialApplicationList = [];\n  specialApplicationDataSource: MatTableDataSource<S1Application>;\n  specialApplicationDisplayedColumns = ['adTitle', 'typeOfApplication', 'companyName', 'brand', 'status'];\n  specialTotalItems = 0;\n  // end special application list variables\n\n  // assigned s1 application list variables\n  assignedApplicationList = [];\n  assignedApplicationDataSource: MatTableDataSource<S1Application>;\n  assignedApplicationDisplayedColumns = ['referenceCode', 'adTitle', 'typeOfApplication', 'companyName', 'brand', 'product', 'status', 'internalStatus', 'icon'];  // end assigned application list variables\n\n  forReleaseApplicationsList = [];\n  forReleaseTotalItems = 0;\n  forReleaseApplicationDataSource: MatTableDataSource<S1Application>;\n  forReleaseApplicationDisplayedColumns = ['referenceCode', 'typeOfApplication', 'companyName', 'brand', 'product', 'typeOfMedium', 'status', 'internalStatus', 'decisionStatus']\n  applicationList = [];\n  currentUser: any;\n  viewApplicationType: string;\n  applicationTypeTitle: string;\n  submissionType = SUBMISSION_TYPE.ORIGINAL;\n  originalTabDataCount = 0;\n  revisionTabDataCount = 0;\n  complianceTabDataCount = 0;\n  decisionCommentTabDataCount = 0;\n  releasedAppealTabDataCount = 0;\n\n  isSuperAdmin = false;\n  isAdmin = false;\n  isAccounting = false;\n  isApplicant = false;\n  isScreener = false;\n  isReviewer = false;\n  isAdSpecialist = false;\n  isEvaluator = false;\n\n  s1Application = new S1Application();\n  s2Application = new S2Application();\n  multipleS1Application = new MultipleApplication();\n  applicationRequest = new ApplicationRequest();\n  s1ApplicationTitle = 'S1 APPLICATION';\n  displayedContent = 'ORIGINAL';\n  paymentStatus = PAYMENT_STATUS;\n\n  counterObservable: Subscription;\n\n  constructor(\n    private apiService: ApiService,\n    private dataStorage: DataStorageService,\n    private router: Router,\n    private sweetAlertService: SweetAlertService,\n    private dialog: MatDialog,\n    private spinner: NgxSpinnerService,\n    private route: ActivatedRoute,\n    private commonService: CommonServices,\n    private webSocketService: WebSocketService\n  ) { }\n  ngOnDestroy(): void {\n    // if(this.counterObservable){\n      // this.counterObservable.unsubscribe();\n    // }\n  }\n  ngOnInit(): void {\n    this.webSocketService.listen(\"broadcast\").subscribe( res =>{\n      console.log('test')\n      this.apiService.findAll(ENDPOINTS.badgeCountByAscUser + this.currentUser.id).subscribe(\n        (res: any) => {\n          this.badgeCounter = res;\n          console.log(this.badgeCounter);\n         }\n      )\n    })\n    // this.counterObservable = merge(timer(0, 5000))\n    // .pipe(mergeMap(_ => this.apiService.findAll(ENDPOINTS.badgeCountByAscUser + this.currentUser.id)))\n    // .subscribe(\n    //   (res: BadgeCounnter) => {\n    //     this.badgeCounter = res;\n    //   },\n    //   (err: HttpErrorResponse) => {\n    //     console.log('Error:', err);\n    //   }\n    // );\n    this.currentUser = this.dataStorage.getUserAccount();\n    this.viewApplicationType = this.route.parent.snapshot.url[0].path;\n    if (this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT) {\n      this.displayedColumns = ['referenceCode', 'typeOfApplication', 'companyName', 'brand', 'typeOfMedium', 'status', 'paymentStatus', 'icon'];\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_SCREENER || this.currentUser.userRole.name === USER_ROLES.ROLE_REVIEWER) {\n      this.displayedColumns = ['referenceCode', 'typeOfApplication', 'companyName', 'brand', 'typeOfMedium', 'status', 'paymentStatus', 'internalStatus', 'icon'];\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_SUPER_ADMIN || this.currentUser.userRole.name === USER_ROLES.ROLE_ADMIN\n      || this.currentUser.userRole.name === USER_ROLES.ROLE_ENCODER) {\n      this.displayedColumns = ['referenceCode', 'typeOfApplication', 'companyName', 'brand', 'typeOfMedium', 'status', 'paymentStatus', 'internalStatus'];\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_AD_SPECIALIST){\n      this.displayedColumns = ['referenceCode', 'typeOfApplication', 'companyName', 'brand', 'product', 'typeOfMedium', 'status', 'paymentStatus', 'internalStatus', 'icon'];\n    }\n    this.getList();\n    this.getListCounts();\n    this.initUserRole();\n    this.refreshApplicationBadgeCount();\n  }\n\n  parseInternalStatus(internalStatus: string, actionBy){\n    let user: string = `${actionBy.firstName} ${actionBy.lastName}`;\n    if(internalStatus.match(\"SUBMITTED\")){\n      return `SUBMITTED BY: ${user}`;\n    } else if(internalStatus.match(\"REVIEWED\")) return `REVIEWED BY: ${user}`;\n    else if(internalStatus.match(\"VERIFIED\")) return `VERIFIED BY: ${user}`;\n    else if(internalStatus.match(\"SCREENED\")) return `SCREENED BY: ${user}`;\n    else if(internalStatus.match(\"REJECTED\")) return `REJECTED BY: ${user}`;\n    // return internalStatus;\n  }\n\n\n  refreshApplicationBadgeCount(): void {\n    this.commonService.sendClickEvent();\n  }\n\n  formatTextPayment(status: string): string {\n    return status.replace(/_/g, ' ');\n  }\n\n\n  initUserRole() {\n    if (this.currentUser.userRole.name === USER_ROLES.ROLE_SUPER_ADMIN) {\n      this.isSuperAdmin = true;\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_ADMIN) {\n      this.isAdmin = true;\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_ACCOUNTING) {\n      this.isAccounting = true;\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT) {\n      this.isApplicant = true;\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_SCREENER) {\n      this.isScreener = true;\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_REVIEWER) {\n      this.isReviewer = true;\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_AD_SPECIALIST) {\n      this.isAdSpecialist = true;\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_ENCODER) {\n      this.isEvaluator = true;\n    }\n  }\n\n  getListCounts(): void {\n    let endpoint\n    let screenedCount: number = 0;\n    if (this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT) {\n      endpoint = ENDPOINTS.badgeCountByApplicationOwner;\n    } else {\n      endpoint = ENDPOINTS.badgeCountByAscUser;\n    }\n    this.apiService.findAll(ENDPOINTS.applicationForm + `/custom/search?assignedScreenerId=${this.currentUser.id}&page=${this.currentPage}&size=${this.pageSize}`)\n    .subscribe( response => {\n      screenedCount = response.totalItems;\n    })\n    this.apiService.findAll(endpoint + this.currentUser.id).subscribe(\n      (res: any) => {\n        this.badgeCounter = res;\n        this.apiService.findAll(ENDPOINTS.applicationForm + `/custom/search?assignedScreenerId=${this.currentUser.id}&page=${this.currentPage}&size=${this.pageSize}`)\n        .subscribe( response => {\n          this.badgeCounter.screenedApplications = response.totalItems;\n        })\n       }\n    )\n\n  }\n\n  getList(submissionType = 'ORIGINAL') {\n\n    this.currentPage = this.pageNo;\n    this.currentPage++;\n    if (this.currentPage === 0) this.currentPage++;\n\n    if (this.viewApplicationType === 'multiple') {\n      this.applicationTypeTitle = 'MULTIPLE';\n      this.getMultipleS1ApplicationList();\n    } else if (this.viewApplicationType === 'special') {\n      this.applicationTypeTitle = 'SPECIAL';\n      this.getSpecialS1ApplicationList();\n    } else if (this.viewApplicationType === 'assigned-applications') {\n      this.applicationTypeTitle = 'Assigned Applications';\n      this.getAssignAppFormBy();\n    } else if (this.viewApplicationType === 'for-release') {\n      this.applicationTypeTitle = 'For Release Applications';\n      this.getForReleaseApplicationList();\n    } else if (this.viewApplicationType === 'released') {\n      this.applicationTypeTitle = 'Released Applications';\n      this.getReleasedApplicationList();\n    } else {\n\n      this.applicationTypeTitle = 'INDIVIDUAL';\n      let param = submissionType.toUpperCase();\n\n      if (param === SUBMISSION_TYPE.COMPLIANCE && this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT) {\n        param = `&decisionStatus=INCOMPLETE&complianceForm=true`;\n      } else if (param === SUBMISSION_TYPE.COMPLIANCE && this.currentUser.userRole.name !== USER_ROLES.ROLE_APPLICANT) {\n        param = `&complianceForm=true`;\n      } else {\n        param = `&submissionType=${param}`;\n      }\n\n      let endpoint = `custom/search?page=${this.currentPage}&size=${this.pageSize}${param}`;\n\n      if (this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT) {\n        endpoint = ENDPOINTS.applicationFormPresentor + endpoint + `&applicationOwnerId=${this.currentUser.id}`;\n      } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_ENCODER) {\n        endpoint = ENDPOINTS.applicationFormEncoder + endpoint + `&assignedUserId=${this.currentUser.id}`;\n      } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_AD_SPECIALIST) {\n        endpoint = ENDPOINTS.applicationFormAdSpecialist + endpoint + `&assignedUserId=${this.currentUser.id}`;\n      } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_SCREENER) {\n        if (submissionType ===  'ORIGINAL')endpoint = ENDPOINTS.applicationFormScreener + endpoint + `&assignedScreenerId=${this.currentUser.id}`;\n        else if(submissionType === 'SCREENED APPLICATIONS') endpoint = ENDPOINTS.applicationForm + `/custom/search?assignedScreenerId=${this.currentUser.id}&page=${this.currentPage}&size=${this.pageSize}`;\n      } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_REVIEWER) {\n        endpoint = ENDPOINTS.applicationFormReviewer + endpoint + `&assignedReviewerId=${this.currentUser.id}`;\n      } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_ADMIN ||\n        this.currentUser.userRole.name === USER_ROLES.ROLE_SUPER_ADMIN) {\n        endpoint = ENDPOINTS.applicationFormAdmin + endpoint;\n      }\n\n      // console.log(endpoint);\n      this.spinner.show()\n      this.apiService.findAll(endpoint).subscribe((res: any) => {\n        this.applicationList = res.data;\n        this.totalItems = res.totalItems;\n        console.log('applicationList: ', this.applicationList);\n\n        this.dataSource = new MatTableDataSource<S1Application>(this.applicationList);\n        // this.dataSource.paginator = this.paginator;\n\n        setTimeout(() => {\n          this.spinner.hide();\n        }, 1);\n      }, (err) => {\n        setTimeout(() => {\n          this.spinner.hide();\n        }, 1);\n      });\n    }\n  }\n\n\n  getScreenedApps(){\n\n  }\n\n\n  showStatus(stats: any): string{\n    if(stats.paymentStatus !== PAYMENT_STATUS.PAID && stats.actionStatus === ACTION_STATUS.ASSIGN_TO_PRESENTOR) return \"ON PROCESS\";\n    else return stats.externalStatus.replace(\"_\", \" \").toUpperCase();\n  }\n\n  pageEvents(event: any) {\n    this.pageSize = event.pageSize;\n\n    if (event.pageIndex > this.pageNo) {\n      this.pageNo++;\n    } else {\n      this.pageNo--;\n    }\n\n    if (event.pageSize > event.length) {\n      this.pageNo = 0;\n    }\n\n    this.getList(this.displayedContent.toUpperCase());\n  }\n\n  setPageSizeOptions(setPageSizeOptionsInput: string) {\n    if (setPageSizeOptionsInput) {\n      this.pageSizeOptions = setPageSizeOptionsInput.split(',').map(str => +str);\n    }\n  }\n\n  getMultipleS1ApplicationList(): void {\n    let endpoint = ''; const ascEndpoint = `/custom/search?page=${this.currentPage}&size=${this.pageSize}`; let assignedASCUser = '';\n    if (this.currentUser.userRole.name === USER_ROLES.ROLE_ADMIN || this.currentUser.userRole.name === USER_ROLES.ROLE_SUPER_ADMIN) {\n      endpoint = ENDPOINTS.multipleApplication + ascEndpoint;\n    } else {\n      if (this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT) {\n        assignedASCUser = `&applicationOwnerId=${this.currentUser.id}`;\n      } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_ENCODER) {\n        assignedASCUser = `&assignedEvaluatorId=${this.currentUser.id}`;\n      } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_AD_SPECIALIST) {\n        assignedASCUser = `&assignedAdSpecialistId=${this.currentUser.id}`;\n      } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_SCREENER) {\n        assignedASCUser = `&assignedScreenerId=${this.currentUser.id}`;\n      } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_REVIEWER) {\n        assignedASCUser = `&assignedReviewerId=${this.currentUser.id}`;\n      }\n      endpoint = ENDPOINTS.multipleApplication + ascEndpoint + assignedASCUser;\n    }\n    console.log(endpoint);\n\n    this.apiService.findAll(endpoint).subscribe((res: any) => {\n      this.multipleApplicationList = res.data;\n      console.log('multipleApplicationList: ', res);\n      this.multipleTotalItems = res.totalItems;\n      this.refreshApplicationBadgeCount();\n\n      this.multipleApplicationDataSource = new MatTableDataSource<MultipleApplication>(this.multipleApplicationList);\n      this.multipleApplicationDataSource.paginator = this.paginator;\n      this.multipleApplicationDataSource.sort = this.sort;\n      setTimeout(() => {\n        this.spinner.hide();\n      }, 1);\n    }, (err) => {\n      setTimeout(() => {\n        this.spinner.hide();\n      }, 1);\n    });\n  }\n\n  getSpecialS1ApplicationList(): void {\n    if (this.currentUser.userRole.name === USER_ROLES.ROLE_ADMIN || this.currentUser.userRole.name === USER_ROLES.ROLE_SUPER_ADMIN) {\n      const obj = {\n        statuses: ['FOR_APPROVAL', 'APPROVED', 'DISAPPROVED']\n      }\n\n      this.apiService.save(`${ENDPOINTS.s1SpecialApplicationRequestsAdmin}?page=${this.currentPage}&size=${this.pageSize}`, obj)\n        .subscribe((res: any) => {\n          this.specialApplicationList = res.data;\n          this.specialTotalItems = res.totalItems;\n          console.log('specialApplicationList: ', res);\n          this.refreshApplicationBadgeCount();\n\n          this.specialApplicationDataSource = new MatTableDataSource<S1Application>(this.specialApplicationList);\n          this.specialApplicationDataSource.paginator = this.paginator;\n          this.specialApplicationDataSource.sort = this.sort;\n          setTimeout(() => {\n            this.spinner.hide();\n          }, 1);\n        }, (err) => {\n          setTimeout(() => {\n            this.spinner.hide();\n          }, 1);\n        });\n    } else {\n      const obj = {\n        applicationOwnerId: this.currentUser.id,\n        statuses: ['FOR_APPROVAL', 'APPROVED', 'DISAPPROVED']\n      }\n\n      this.apiService.save(`${ENDPOINTS.s1SpecialApplicationRequests}?page=${this.currentPage}&size=${this.pageSize}`, obj)\n        .subscribe((res: any) => {\n          this.specialApplicationList = res.data;\n          this.specialTotalItems = res.totalItems;\n          console.log('specialApplicationList: ', res);\n          this.refreshApplicationBadgeCount();\n\n          this.specialApplicationDataSource = new MatTableDataSource<S1Application>(this.specialApplicationList);\n          this.specialApplicationDataSource.paginator = this.paginator;\n          this.specialApplicationDataSource.sort = this.sort;\n          setTimeout(() => {\n            this.spinner.hide();\n          }, 1);\n        }, (err) => {\n          setTimeout(() => {\n            this.spinner.hide();\n          }, 1);\n        });\n    }\n  }\n\n  getAssignAppFormBy(): void {\n    let endpoint = '';\n\n    if (this.currentUser.userRole.name === USER_ROLES.ROLE_AD_SPECIALIST) {\n      endpoint = `${ENDPOINTS.applicationFormAdSpecialist}assigned/screener`;\n    } else {\n      endpoint = `${ENDPOINTS.applicationFormScreener}assigned/reviewer`;\n    }\n\n    this.apiService.findAll(endpoint).subscribe((res: any) => {\n      this.assignedApplicationList = res.responseData.data;\n      this.refreshApplicationBadgeCount();\n\n      this.assignedApplicationDataSource = new MatTableDataSource<S1Application>(this.assignedApplicationList);\n      this.assignedApplicationDataSource.paginator = this.paginatorFalse;\n      this.assignedApplicationDataSource.sort = this.sort;\n\n      setTimeout(() => {\n        this.spinner.hide();\n      }, 1);\n    }, (err) => {\n      setTimeout(() => {\n        this.spinner.hide();\n      }, 1);\n    });\n  }\n\n  getForReleaseApplicationList() {\n\n    let endpoint; const param = `&page=${this.currentPage}&size=${this.pageSize}`;\n    if (this.currentUser.userRole.name === USER_ROLES.ROLE_AD_SPECIALIST) {\n      endpoint = ENDPOINTS.getForReleaseApplicationAdSpe + `?releaseStatus=FOR_RELEASE&assignedAdSpecialistId=${this.currentUser.id}${param}`;\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_REVIEWER) {\n      endpoint = ENDPOINTS.getForReleaseApplicationsReviewer + `?releaseStatus=FOR_RELEASE&assignedReviewerId=${this.currentUser.id}${param}`;\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_ADMIN || USER_ROLES.ROLE_SUPER_ADMIN) {\n      endpoint = ENDPOINTS.getAdminSuperAdminForReleaseApplication + `/custom/search?releaseStatus=FOR_RELEASE${param}`;\n    }\n\n    this.apiService.findAll(endpoint).subscribe((res: any) => {\n      this.forReleaseApplicationsList = res.data;\n      this.forReleaseTotalItems = res.totalItems;\n      this.refreshApplicationBadgeCount();\n\n      console.log('getForReleaseApplicationList: ', this.forReleaseApplicationsList);\n\n      this.forReleaseApplicationDataSource = new MatTableDataSource<S1Application>(this.forReleaseApplicationsList);\n      this.forReleaseApplicationDataSource.paginator = this.paginatorFalse;\n      this.forReleaseApplicationDataSource.sort = this.sort;\n\n      setTimeout(() => {\n        this.spinner.hide();\n      }, 1);\n    }, (err) => {\n      setTimeout(() => {\n        this.spinner.hide();\n      }, 1);\n    });\n  }\n\n\n  getReleasedApplicationList() {\n    this.apiService.findAll(ENDPOINTS.getReleaseApplicationsAdSpe + `?page=${this.currentPage}&size=${this.pageSize}`)\n      .subscribe((res: any) => {\n\n        this.forReleaseApplicationsList = res.data;\n        console.log('getReleasedApplicationList: ', this.forReleaseApplicationsList);\n        this.forReleaseTotalItems = res.totalItems;\n        this.refreshApplicationBadgeCount();\n\n        this.forReleaseApplicationDataSource = new MatTableDataSource<S1Application>(this.forReleaseApplicationsList);\n        this.forReleaseApplicationDataSource.paginator = this.paginatorFalse;\n        this.forReleaseApplicationDataSource.sort = this.sort;\n        setTimeout(() => {\n          this.spinner.hide();\n        }, 1);\n      }, (err) => {\n        setTimeout(() => {\n          this.spinner.hide();\n        }, 1);\n      });\n  }\n\n\n  getForDecisionAndComment(displayedContent) {\n    let endpoint = '';\n\n    // APPEAL\n    if (this.isAdSpecialist) {\n      endpoint = ENDPOINTS.applicationFormAdSpecialist + `custom/search?assignedUserId=${this.currentUser.id}&hasOngoingAppeal=true&page=${this.currentPage}&size=${this.pageSize}&submissionType=ORIGINAL`;\n    }\n    // RETURN TO SCREENER\n    else if (this.isScreener) {\n      endpoint = ENDPOINTS.s1ApplicationForm + `screener/assigned-user-id/${this.currentUser.id}/forwarded-for-decision-and-comment`;\n    } else if (this.isReviewer) {\n      endpoint = ENDPOINTS.s1ApplicationForm + `reviewer/assigned-user-id/${this.currentUser.id}/forwarded-for-decision-and-comment`;\n    }\n\n    else if (this.isAdmin || this.isSuperAdmin) {\n      if (displayedContent === 'For Appeal') {\n        endpoint = ENDPOINTS.applicationFormAdmin + `custom/search?hasOngoingAppeal=true&page=${this.currentPage}&size=${this.pageSize}`;\n      } else {\n        endpoint = ENDPOINTS.admin + `/s1/for-decision-comment/reviewer-screener`;\n      }\n    }\n    this.spinner.show()\n    this.apiService.findAll(endpoint)\n      .subscribe((res: any) => {\n        if (res) {\n          if (res?.data) {\n            this.applicationList = res?.data;\n          } else {\n            this.applicationList = res?.responseData?.data;\n          }\n          console.log(displayedContent + ': ', this.applicationList);\n          this.refreshApplicationBadgeCount();\n\n          this.dataSource = new MatTableDataSource<S1Application>(this.applicationList);\n          this.dataSource.paginator = this.paginatorFalse;\n          this.dataSource.sort = this.sort;\n          setTimeout(() => {\n            this.spinner.hide();\n          }, 1);\n        } else {\n          this.applicationList = [];\n        }\n      }, (err) => {\n        setTimeout(() => {\n          this.spinner.hide();\n        }, 1);\n      });\n  }\n\n\n  public doFilter = (value: string) => {\n    this.dataSource.filter = value.trim().toLocaleLowerCase();\n  }\n\n  public doFilterS1MultipleApplicationList = (value: string) => {\n    this.multipleApplicationDataSource.filter = value.trim().toLocaleLowerCase();\n  }\n\n  public doFilterSpecialS1ApplicationList = (value: string) => {\n    this.specialApplicationDataSource.filter = value.trim().toLocaleLowerCase();\n  }\n\n  public doFilterAssignedS1ApplicationList = (value: string) => {\n    this.assignedApplicationDataSource.filter = value.trim().toLocaleLowerCase();\n  }\n\n  public doFilterForReleaseApplicationList = (value: string) => {\n    this.forReleaseApplicationDataSource.filter = value.trim().toLocaleLowerCase();\n  }\n\n  viewApplication(data: any): void {\n    this.s1Application = data;\n    console.log('S1 FORM: ', this.s1Application);\n    if (this.viewApplicationType === 'released' || this.viewApplicationType === 'for-release' || this.viewApplicationType === 'assigned-applications' ||\n      this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT || this.currentUser.userRole.name === USER_ROLES.ROLE_ADMIN ||\n      this.currentUser.userRole.name === USER_ROLES.ROLE_SUPER_ADMIN) {\n      this.router.navigate(['asc/page/application/s1/update/', data.id]);\n    }\n    else if (data.formStatus === FORM_STATUS.OPEN && this.s1Application.internalStatus !== APPLICATION_STATUS.S1_APPLICATION_REJECTED) {\n      Swal.fire({\n        text: 'Are you sure you want to open this application? This application will be LOCKED on your account.',\n        icon: 'question',\n        showCancelButton: true,\n        confirmButtonColor: '#3085d6',\n        cancelButtonColor: '#d33',\n        confirmButtonText: 'Confirm'\n      }).then((result) => {\n        if (result.value) {\n          if (this.currentUser.userRole.name === USER_ROLES.ROLE_ENCODER) {\n            this.s1Application.assignedEncoder = this.currentUser;\n          } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_AD_SPECIALIST) {\n            this.s1Application.assignedAdSpecialist = this.currentUser;\n          } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_SCREENER) {\n            this.s1Application.assignedScreener = this.currentUser;\n          } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_REVIEWER) {\n            this.s1Application.assignedReviewer = this.currentUser;\n          }\n          this.s1Application.currentAssignee = this.currentUser.userRole.name;\n\n          let endpoint = '';\n          if (this.currentUser.userRole.name === USER_ROLES.ROLE_ENCODER) {\n            endpoint = ENDPOINTS.applicationFormEncoder;\n          } else {\n            endpoint = ENDPOINTS.applicationFormAdSpecialist;\n          }\n\n          this.apiService.save(endpoint + ENDPOINTS.takeApplication, this.s1Application).subscribe(\n            (res: any) => {\n              this.sweetAlertService.customSuccessMessage('Application successfully assigned to you.', 3);\n              this.router.navigate(['asc/page/application/s1/update/', data.id]);\n              this.refreshApplicationBadgeCount();\n            }, (err: any) => {\n              console.log('error deep');\n              let lockedBy = '';\n              if (this.s1Application.assignedUser) {\n                lockedBy = ` by ${this.s1Application.assignedUser.firstName} ${this.s1Application.assignedUser.lastName} `;\n              }\n\n              err.error.message = `Application has been locked${lockedBy} for processing. Kindly select another application to process.`;\n              this.sweetAlertService.error(err, 5);\n              // location.reload();\n            });\n        }\n      });\n    } else {\n      if (this.s1Application.assignedUser) {\n        if (this.s1Application.assignedUser.username === this.currentUser.username) {\n          this.router.navigate(['asc/page/application/s1/update/', data.id]);\n          this.refreshApplicationBadgeCount();\n        } else {\n          console.log('error out');\n          let lockedBy = '';\n          if (this.s1Application.assignedUser) {\n            lockedBy = ` by ${this.s1Application.assignedUser.firstName} ${this.s1Application.assignedUser.lastName} `;\n          }\n          this.sweetAlertService.customErrorMessage(`Application has been locked${lockedBy} for processing.Kindly select another application to process.`, 5);\n          this.refreshApplicationBadgeCount();\n        }\n      }\n    }\n\n  }\n\n  viewMultipleApplication(data: any): void {\n    this.multipleS1Application = data;\n    console.log('multipleS1Application: ', this.multipleS1Application);\n\n    let dialogRef;\n\n    if (this.currentUser.userRole.name === USER_ROLES.ROLE_ADMIN || this.currentUser.userRole.name === USER_ROLES.ROLE_SUPER_ADMIN) {\n      dialogRef = this.dialog.open(UpdateMultipleApplicationComponent, {\n        width: '80%',\n        height: '85%',\n        data: this.multipleS1Application\n      });\n    } else {\n      dialogRef = this.dialog.open(UpdateMultipleApplicationComponent, {\n        width: '80%',\n        height: '85%',\n        data: this.multipleS1Application\n      });\n    }\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.getMultipleS1ApplicationList();\n      }\n    });\n  }\n\n  viewSpecialApplication(data: any): void {\n    this.applicationRequest = data;\n    this.s1Application = new S1Application();\n    this.s1Application.adTitle = data.adTitle;\n    this.s1Application.applicationOwner = data.applicationOwner;\n    this.s1Application.applicationType = data.applicationType;\n    this.s1Application.brand = data.brand;\n    this.s1Application.product = data.product;\n    // this.s1Application.category = data.category;\n    this.s1Application.company = data.company;\n    // this.s1Application.membersAffiliation = data.membersAffiliation;\n    this.s1Application.submissionDate = data.submissionDate;\n    this.s1Application.tagLine = data.tagLine;\n    this.s1Application.status = data.status;\n    this.s1Application.submissionType = SUBMISSION_TYPE.ORIGINAL;\n    this.s1Application.appFormReference = '';\n    this.s1Application.formType = data.formType;\n    this.s1Application.applicationRequest = data;\n    this.s1Application.id = 0;\n\n\n    let dialogRef;\n    if (this.currentUser.userRole.name === USER_ROLES.ROLE_ADMIN || this.currentUser.userRole.name === USER_ROLES.ROLE_SUPER_ADMIN\n      || this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT &&\n      this.applicationRequest.status === 'FOR_APPROVAL') {\n      dialogRef = this.dialog.open(UpdateSpecialApplicationComponent, {\n        width: '80%',\n        height: '85%',\n        data: this.applicationRequest\n      });\n    } else {\n      this.dataStorage.setS1Application(this.s1Application);\n      this.dataStorage.setSpecialS1Application(this.applicationRequest);\n      this.router.navigate(['asc/page/application/s1/add']);\n      // dialogRef = this.dialog.open(UpdateSpecialApplicationComponent, {\n      //   width: '80%',\n      //   height: '85%',\n      //   data: this.applicationRequest\n      // });\n    }\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.getSpecialS1ApplicationList();\n      }\n    });\n  }\n\n  getCompanyById(id): Promise<any> {\n    // updates company details in data storage\n    const promise = new Promise((resolve, reject) => {\n      this.apiService.findById(ENDPOINTS.company, id).subscribe((res: any) => {\n        if (res) {\n          this.currentUser.company = res.responseData.data;\n          this.dataStorage.saveUserAccount(this.currentUser);\n          resolve(this.currentUser);\n        }\n      }, err => {\n        reject(err);\n      });\n    });\n    return promise;\n  }\n\n  openFormTypeModal() {\n    this.getCompanyById(this.currentUser.company.id).then(\n      (res) => {\n        if (res.company.membersAffiliation.status === 'INACTIVE') {\n          this.sweetAlertService.customErrorMessage(`Your Company's membership affiliation is no longer active. Cannot proceed with new application. Please contact ASC admin`);\n        } else {\n          const dialogRef = this.dialog.open(S1FormTypeComponent, {\n            // width: '30%',\n            // height: '25%',\n          });\n\n          dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n              console.log(result);\n            }\n          });\n        }\n      }\n    );\n  }\n\n  applyForS2(data) {\n    let typeOfExecution;\n    if (data.refTypeOfMedium === TYPE_OF_MEDIUM.SINGLE_MEDIA) {\n      this.apiService.findByParam(ENDPOINTS.applicationSingleMedia, `app-form-reference/${data.appFormReference}`).subscribe(\n        (res: any) => {\n          if (res.responseData.data.length > 0) {\n            typeOfExecution = res.responseData.data[0].mediumExecution.typeOfExecution;\n            data.typeOfExecution = typeOfExecution;\n            const dialogRef = this.dialog.open(ListS1Dialog, {\n              data: {\n                s2Application: data\n              }\n            });\n          }\n        }, (err: any) => {\n        })\n    } else {\n      const dialogRef = this.dialog.open(ListS1Dialog, {\n        data: {\n          s2Application: data\n        }\n      });\n    }\n  }\n\n\n  returnTo(process, s1App): void {\n    this.s1Application = s1App;\n    Swal.fire({\n      text: 'Are you sure you want to ' + process + ' this application?',\n      icon: 'question',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Confirm'\n    }).then((result) => {\n      if (result.value) {\n        this.spinner.show();\n        let endpoint = '';\n        this.s1Application.actionBy = this.currentUser;\n\n        if (this.currentUser.userRole.name === USER_ROLES.ROLE_SCREENER) {\n          this.s1Application.currentAssignee = USER_ROLES.ROLE_AD_SPECIALIST;\n          if (this.s1Application.multipleApplication && this.s1Application.submissionType === SUBMISSION_TYPE.ORIGINAL) {\n            endpoint = `${ENDPOINTS.multipleApplicationReturnToAdSpe}${this.s1Application.multipleApplication.id}/return`;\n            \n          } else {\n            endpoint = `${ENDPOINTS.applicationFormScreener}return`;\n          }\n        } else {\n          if (this.s1Application.multipleApplication && this.s1Application.submissionType === SUBMISSION_TYPE.ORIGINAL) {\n            endpoint = `${ENDPOINTS.multipleApplicationReturnToScreener}${this.s1Application.multipleApplication.id}/return`;\n          } else {\n            endpoint = `${ENDPOINTS.applicationFormReviewer}return`;\n          }\n        }\n\n        // console.log('TO SAVE: ', this.s1Application);\n        this.apiService.save(endpoint, this.s1Application).subscribe(\n          (res: any) => {\n            // console.log('RETURN: ', res.responseData.data);\n            if (res.code === 200) {\n              this.spinner.hide();\n              this.getList();\n              this.sweetAlertService.customSuccessMessage('Successfully returned the application');\n              this.refreshApplicationBadgeCount();\n            }\n          }, (err: any) => {\n            this.spinner.hide();\n          })\n      }\n    });\n  }\n\n  saveStatus(ascUser = '', action = '', status = '', application: any) {\n    let fetchedData;\n    this.apiService.findAll(`${ENDPOINTS.applicationForm}/id/${application.id}`).subscribe(validateApp=>{\n      console.log('validate => ', validateApp)\n      fetchedData = validateApp.responseData.data;\n    })\n    Swal.fire({\n      text: 'Are you sure you want to cancel this application?',\n      icon: 'question',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Confirm'\n    }).then((result) => {\n      if (result.value) {\n        this.dataStorage.setDisplayProgressbar(true);\n        if(fetchedData.assignedUser && fetchedData.formStatus === FORM_STATUS.LOCKED) {\n          this.sweetAlertService.customErrorMessage(\"This form is already in process\");\n          return\n        }\n        this.apiService.update(`${ENDPOINTS.applicationForm}/s1/${ascUser}/${action}`, application).subscribe(\n          (res: any) => {\n            console.log('SAVED STATUS: ', res.responseData.data);\n            this.sweetAlertService.customSuccessMessage('Application successfully canceled.');\n            this.getList();\n            this.refreshApplicationBadgeCount();\n            // this.router.navigate(['asc/page/application/s1/lists']);\n          }, (err) => {\n            console.log(err);\n            this.sweetAlertService.error(err);\n            this.dataStorage.setDisplayProgressbar(false);\n          }, () => {\n            this.dataStorage.setDisplayProgressbar(false);\n          });\n\n      }\n    });\n  }\n\n  changeTab(evt) {\n    console.log('tab ---  ', evt);\n    if (evt.tab.textLabel !== 'For Decision and Comments') {\n      this.getListCounts();\n    }\n    if (evt.tab) {\n      this.displayedContent = evt.tab.textLabel;\n      if (this.displayedContent === 'For Decision and Comments' || this.displayedContent === 'For Appeal') {\n        this.getForDecisionAndComment(this.displayedContent);\n      }else if(this.displayedContent === 'Returned Application'){\n        console.log('returneeed')\n        const userType = this.isAdSpecialist ? 'adSpeId' : 'screenerId'\n        this.spinner.show()\n        this.apiService.findAll(`${this.isAdSpecialist ? ENDPOINTS.getAllAdSpeReturnedApps : ENDPOINTS.getAllScreenerReturnedApps}/?&${ userType }=${ this.currentUser.id }&page=${this.currentPage-1}&size=${this.pageSize}`)\n        .subscribe( respose =>{\n          this.applicationList = respose.data;\n          this.totalItems = respose.totalItems;\n          console.log('applicationList: ', this.applicationList);\n  \n          this.dataSource = new MatTableDataSource<S1Application>(this.applicationList);\n          this.dataSource.paginator = this.paginator;\n          this.assignedApplicationDisplayedColumns.splice(this.assignedApplicationDisplayedColumns.indexOf(\"icon\"),1);\n          setTimeout(() => {\n            this.spinner.hide();\n          }, 1);\n        }, err=>{\n          setTimeout(() => {\n            this.spinner.hide();\n          }, 1);\n        })\n      } else if(this.displayedContent === 'Screened Applications'){\n        this.getList(this.displayedContent.toUpperCase());\n      }\n      \n      else {\n        this.getList(this.displayedContent.toUpperCase());\n      }\n    }\n  }\n\n  sortEvent() {\n    this.click++;\n    if (this.click % 2 === 0) {\n      console.log('even', this.click);\n      this.dataSource = new MatTableDataSource<S1Application>(this.applicationList);\n      this.dataSource.paginator = this.paginator;\n      return this.dataSource.data.sort((a, b) => a.id - b.id);\n    } else {\n      console.log('odd', this.click);\n      this.dataSource = new MatTableDataSource<S1Application>(this.applicationList);\n      this.dataSource.paginator = this.paginator;\n      return this.dataSource.data.reverse();\n    }\n    // this.dataSource.data.sort(() => Math.random() - 0.5)\n  }\n\n  unlockApplication(process, s1App): void {\n    this.s1Application = s1App;\n    Swal.fire({\n      text: 'Are you sure you want to ' + process + ' this application?',\n      icon: 'question',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Confirm'\n    }).then((result) => {\n      if (result.value) {\n        this.spinner.show();\n        let endpoint = '';\n        this.s1Application.actionBy = this.currentUser;\n        this.s1Application.formStatus = FORM_STATUS.OPEN;\n\n        endpoint = ENDPOINTS.applicationForm;\n\n        // console.log('TO SAVE: ', this.s1Application);\n        this.apiService.update(endpoint, this.s1Application).subscribe(\n          (res: any) => {\n            // console.log('RETURN: ', res.responseData.data);\n            if (res.code === 200) {\n              this.spinner.hide();\n              this.getList();\n              this.sweetAlertService.customSuccessMessage('Successfully unlocked the application');\n              this.refreshApplicationBadgeCount();\n            }\n          }, (err: any) => {\n            this.spinner.hide();\n          })\n      }\n    });\n  }\n\n\n  refresh() {\n    this.commonService.sendClickEvent();\n    this.startTimer();\n  }\n\n  startTimer() {\n    this.interval = setInterval(() => {\n      this.timeLeft--;\n      if(this.timeLeft > 0){\n        this.refreshButtonEnabled = false;\n        this.isTimerValueDisplay = true;\n      }else{\n        this.refreshButtonEnabled = true;\n        this.isTimerValueDisplay = false;\n        this.timeLeft = 60;\n        clearInterval(this.interval)\n      }\n      this.timerDisplay=this.transform(this.timeLeft)\n    },1000)\n  }\n\n  transform(value: number): string {\n    const minutes: number = Math.floor(value / 60);\n    return minutes + ':' + (value - minutes * 60);\n  }\n\n}\n\n\n\n\n\n\n@Component({\n  selector: 'list-s1-dialog',\n  templateUrl: 'list-s1-dialog.html',\n  styleUrls: ['./list-s1-application.component.scss']\n})\nexport class ListS1Dialog implements OnInit {\n\n  s2Application = new S2Application();\n  s1Application = new S1Application();\n  applicationRequest = new ApplicationRequest();\n  typeOfExecution = new TypeOfExecution();\n\n\n  constructor(private apiService: ApiService,\n    private sweetAlertService: SweetAlertService,\n    private router: Router,\n    private dataStorage: DataStorageService,\n    public dialog: MatDialog,\n    public dialogRef: MatDialogRef<ListS1ApplicationComponent>,\n    private commonService: CommonServices,\n    @Inject(MAT_DIALOG_DATA) public data: any) { }\n\n  ngOnInit(): void {\n    this.typeOfExecution = this.data.s2Application.typeOfExecution;\n    this.s2Application.applicationForm = this.data.s2Application;\n    this.s1Application = this.data.s2Application;\n  }\n\n  // Used for S2 or TOA\n  proceedToS2(isS2) {\n    Swal.fire({\n      text: `Are you sure you want to apply for ${isS2 ? 'S2' : 'TOA'}?`,\n      icon: 'question',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Confirm'\n    }).then((result) => {\n      if (result.value) {\n        this.s2Application.submissionType = this.data.s2Application.submissionType;\n        this.s2Application.applicationForm = this.data.s2Application;\n        this.s2Application.submissionType = SUBMISSION_TYPE.ORIGINAL; // this.s2Application.applicationForm.submissionType;\n        if (!isS2) {\n          this.s2Application.hasToa = true;\n          // this.s2Application.submissionType = SUBMISSION_TYPE.TOA;\n        }\n        this.s2Application.internalStatus = 'SAVED';\n        this.s2Application.externalStatus = 'SAVED';\n        console.log('View S2:', this.data.s2Application);\n        this.apiService.save(ENDPOINTS.s2ApplicationFormPresentorSave, this.s2Application).subscribe(\n          (res: any) => {\n            console.log(res);\n            this.router.navigate(['asc/page/application/s2/update', res.responseData.data.id]);\n            this.commonService.sendClickEvent();\n            this.dialogRef.close();\n          }, (err: any) => {\n          })\n      }\n    })\n  }\n\n  requestForClearingAndClearance(): void {\n    Swal.fire({\n      text: 'Are you sure you want to request approval for special clearing?',\n      icon: 'question',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Confirm'\n    }).then((result) => {\n      if (result.value) {\n        this.dialogRef.close();\n        let dialogRef;\n        this.applicationRequest.hasSpecialClearing = true;\n        this.applicationRequest.applicationForm = this.s1Application;\n        dialogRef = this.dialog.open(RequestForSpecialClearingComponent, {\n          width: '80%',\n          height: '85%',\n          data: {\n            applicationRequest: this.applicationRequest,\n            applicationType: 'Request for Special Clearing'\n          }\n        });\n        this.commonService.sendClickEvent();\n      }\n    })\n  }\n\n\n}\n","<form (keydown.enter)=\"$event.preventDefault()\">\n  <div class=\"container-fluid\">\n    <div class=\"row\">\n      <div class=\"col-md-12 title\">\n        <mat-label>\n          <i class=\"material-icons icon-black\">view_list</i> <span\n            [hidden]=\"viewApplicationType === 'assigned-applications' || viewApplicationType === 'for-release' || viewApplicationType === 'released'\"> {{s1ApplicationTitle}} -</span> &nbsp;<span>{{\n            applicationTypeTitle?.replace('Assigned', 'Retrieve/Re-assign') | uppercase}}</span>\n        </mat-label>\n        <button class=\"button-right\" type=\"submit\" mat-raised-button color=\"primary\" (click)=\"refresh()\" [disabled]=\"!refreshButtonEnabled\">\n          <span class=\"material-icons\">sync</span>\n          <label *ngIf=\"isTimerValueDisplay\"> &nbsp;{{timerDisplay}}</label>\n        </button>\n        <button class=\"button-right button-red\" type=\"submit\" mat-raised-button\n          *ngIf=\"currentUser?.userRole?.name=='ROLE_APPLICANT' || currentUser?.userRole?.name=='ROLE_ENCODER'\"\n          [hidden]=\"viewApplicationType === 'multiple'\"\n          (click)=\"openFormTypeModal()\">\n          <i class=\"material-icons color__white\">add</i> NEW APPLICATION\n        </button>\n      </div>\n    </div>\n    <hr>\n    <!-- ADMIN - INCLUDES LIST FOR MULTIPLE APPLICATIONS -->\n    <!-- TEMP: SHOW multiple application tab for all roles -->\n    <!-- <mat-tab-group>\n      <mat-tab  >\n        <ng-container *ngTemplateOutlet=\"individualS1ApplicationList\"></ng-container>\n      </mat-tab>\n      <mat-tab>\n        <ng-container *ngTemplateOutlet=\"multipleS1ApplicationList\"></ng-container>\n      </mat-tab>\n      <mat-tab >\n        <ng-container *ngTemplateOutlet=\"specialS1ApplicationList\"></ng-container>\n      </mat-tab>\n      <mat-tab  >\n        <ng-container *ngTemplateOutlet=\"assignedToScreenerS1ApplicationList\"></ng-container>\n      </mat-tab>\n    </mat-tab-group> -->\n\n    <div *ngIf=\"applicationTypeTitle === 'INDIVIDUAL'\">\n      <ng-container *ngTemplateOutlet=\"individualS1ApplicationList\"></ng-container>\n    </div>\n    <div *ngIf=\"viewApplicationType === 'multiple'\">\n      <ng-container *ngTemplateOutlet=\"multipleS1ApplicationList\"></ng-container>\n    </div>\n    <div\n      *ngIf=\"(currentUser.userRole.name === 'ROLE_APPLICANT' || currentUser.userRole.name === 'ROLE_ENCODER' || currentUser.userRole.name === 'ROLE_ADMIN' || currentUser?.userRole.name === 'ROLE_SUPER_ADMIN') && viewApplicationType === 'special'\">\n      <ng-container *ngTemplateOutlet=\"specialS1ApplicationList\"></ng-container>\n    </div>\n    <div *ngIf=\"(currentUser.userRole.name=='ROLE_AD_SPECIALIST'||currentUser.userRole.name=='ROLE_SCREENER')\">\n      <ng-container *ngTemplateOutlet=\"assignedToScreenerS1ApplicationList\"></ng-container>\n    </div>\n    <div *ngIf=\"currentUser.userRole.name=='ROLE_AD_SPECIALIST' || currentUser.userRole.name=='ROLE_REVIEWER' || currentUser.userRole.name === 'ROLE_ADMIN' || currentUser?.userRole.name === 'ROLE_SUPER_ADMIN'\">\n      <ng-container *ngTemplateOutlet=\"forReleaseApplicationList\"></ng-container>\n    </div>\n\n    <!-- OTHER USERS - DISPLAY ONLY S1 APPLICATIONS -->\n    <!-- <ng-container *ngIf=\"!showMultipleS1Application\">\n      <ng-container *ngTemplateOutlet=\"individualS1ApplicationList\"></ng-container>\n    </ng-container> -->\n  </div>\n\n</form>\n\n<!-- TEMPLATE FOR INDIVIDUAL S1 APPLICATION LIST -->\n<ng-template #individualS1ApplicationList>\n  <br>\n  <div class=\"row\" fxLayout fxLayoutAlign=\"center center\">\n    <mat-form-field class=\"col-md-9\" appearance=\"outline\">\n      <mat-label><i class=\"material-icons\">search</i> Search Applications</mat-label>\n      <input matInput type=\"text\" (keyup)=\"doFilter($event.target.value)\">\n      <input type=\"hidden\">\n    </mat-form-field>\n\n\n    <!-- <div class=\"row\">\n    <div class=\"col-md-2\">LEGEND:</div>\n    <div class=\"col-md-1 legend legend-blue\">ORIGINAL</div>\n    <div class=\"col-md-1 legend legend-green\">REVISION</div>\n    <div class=\"col-md-1 legend legend-orange\">FOR COMPLIANCE</div>\n    <div class=\"col-md-1\" style=\"background-color:lightpink;border-radius:8px;width:20%;\">Rejected</div>\n  </div> -->\n\n    <div class=\"col\" *ngIf=\"currentUser.userRole.name==='ROLE_AD_SPECIALIST'\">\n      <div class=\"legend-content\">\n        <table class=\"legend-table\">\n          <tr>\n            <td>\n              LEGEND:\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <div class=\"legend-box legend-yellow\"></div> LOCKED\n            </td>\n          </tr>\n         <tr>\n            <td>\n              <div class=\"legend-box legend-white\"></div> OPEN\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <div class=\"legend-box legend-blue\"></div> ORIGINAL\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <div class=\"legend-box legend-orange\"></div> FOR COMPLIANCE\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <div class=\"legend-box legend-green\"></div> REVISION\n            </td>\n          </tr>\n       <!--     <tr>\n            <td>\n              <div class=\"legend-box legend-orange\"></div> FOR COMPLIANCE\n            </td>\n          </tr> -->\n        </table>\n      </div>\n    </div>\n\n    <div class=\"col\" *ngIf=\"currentUser.userRole.name !='ROLE_AD_SPECIALIST'\">\n      <div class=\"legend-content\">\n        <table class=\"legend-table\">\n          <tr>\n            <td>\n              LEGEND:\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <div class=\"legend-box legend-blue\"></div> ORIGINAL\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <div class=\"legend-box legend-orange\"></div> FOR COMPLIANCE\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <div class=\"legend-box legend-green\"></div> REVISION\n            </td>\n          </tr>\n        </table>\n      </div>\n    </div>\n  </div>\n\n\n  <br>\n<!--\n  <mat-tab-group mat-align-tabs=\"start\" (selectedTabChange)=\"changeTab($event)\">\n    <mat-tab label=\"\">\n      <ng-template mat-tab-label>\n        Original\n        <div matBadge={{dataSource?.data?.length}} class=\"c-badge\" matBadgeColor=\"warn\"></div>\n      </ng-template>\n    </mat-tab>\n    <mat-tab label=\"\">\n      <ng-template mat-tab-label>\n        Revision\n        <div matBadge={{dataSource?.data?.length}} class=\"c-badge\" matBadgeColor=\"warn\"></div>\n      </ng-template>\n    </mat-tab>\n    <mat-tab label=\"\">\n      <ng-template mat-tab-label>\n        Compliance\n        <div matBadge={{dataSource?.data?.length}} class=\"c-badge\" matBadgeColor=\"warn\"></div>\n      </ng-template>\n    </mat-tab>\n  </mat-tab-group> -->\n  <mat-tab-group mat-align-tabs=\"start\" (selectedTabChange)=\"changeTab($event)\">\n    <mat-tab label=\"Original\">\n      <ng-template mat-tab-label>\n        Original\n        <div matBadge={{badgeCounter.countOriginal}} class=\"c-badge\" matBadgeColor=\"warn\"></div>\n      </ng-template>\n    </mat-tab>\n    <mat-tab label=\"Revision\" *ngIf=\"!isReviewer\">\n      <ng-template mat-tab-label>\n        Revision\n        <div matBadge={{badgeCounter.countRevision}} class=\"c-badge\" matBadgeColor=\"warn\"></div>\n      </ng-template>\n    </mat-tab>\n    <mat-tab label=\"Compliance\" *ngIf=\"!isReviewer\">\n      <ng-template mat-tab-label>\n        Compliance\n        <div matBadge={{badgeCounter.countCompliance}} class=\"c-badge\" matBadgeColor=\"warn\"></div>\n      </ng-template>\n    </mat-tab>\n    <mat-tab label=\"For Appeal\" *ngIf=\"isAdSpecialist || isAdmin || isSuperAdmin\">\n      <ng-template mat-tab-label>\n        Released Appeal\n        <div matBadge={{badgeCounter.countTotalOngoingAppeal}} class=\"c-badge\" matBadgeColor=\"warn\"></div>\n      </ng-template>\n    </mat-tab>\n    <mat-tab label=\"Returned Application\" *ngIf=\"isAdSpecialist || isScreener\">\n      <ng-template mat-tab-label>\n        Returned Application\n        <div matBadge={{badgeCounter.returnedApplications}} class=\"c-badge\" matBadgeColor=\"warn\"></div>\n      </ng-template>\n    </mat-tab>\n      <mat-tab label=\"For Decision and Comments\" *ngIf=\"isScreener || isReviewer || isAdmin || isSuperAdmin\">\n        <ng-template mat-tab-label>\n          For Decision and Comments\n          <div matBadge={{badgeCounter.countTotalScreenerAndReviewerDecisionComment}} class=\"c-badge\" matBadgeColor=\"warn\"></div>\n        </ng-template>\n      </mat-tab>\n  \n      <mat-tab label=\"Screened Applications\" *ngIf=\"isScreener || isReviewer || isAdmin || isSuperAdmin\">\n        <ng-template mat-tab-label>\n          Screened Applications\n          <div matBadge={{badgeCounter.screenedApplications}} class=\"c-badge\" matBadgeColor=\"warn\"></div>\n        </ng-template>\n      </mat-tab>\n  </mat-tab-group>\n\n  <div class=\"mat-elevation-z8 fields\">\n\n\n    <table mat-table [dataSource]=\"dataSource\" matSort>\n      <ng-container matColumnDef=\"referenceCode\">\n        <th mat-header-cell *matHeaderCellDef>REFERENCE CODE <mat-icon class=\"cursor\" (click)=\"sortEvent()\" style=\"color:black\" [hidden]=\"currentUser.userRole.name === 'ROLE_ENCODER'\">swap_vert</mat-icon></th>\n        <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"viewApplication(element)\" [ngStyle]=\"{'pointer-events': ((i !== 0 && currentUser.userRole.name === 'ROLE_ENCODER') ? 'none' : ''),\n        'background-color': (\n          (currentUser.userRole.name === 'ROLE_ENCODER' && i > 0 ? '#beb8b8' :\n            (((element.submissionType === 'ORIGINAL' && element.decisionStatus !== 'INCOMPLETE') || element.decisionStatus === 'INCOMPLETE') ? 'lightblue' :\n            ((element.submissionType === 'FOR COMPLIANCE') ? '#fca402' :\n            (element.submissionType === 'REVISION' ? '#8fcf8f' : '' )))\n          )\n          )}\">\n          {{ element?.submissionType === 'ORIGINAL' && element?.internalStatus=='S1_APPLICATION_REJECTED' ? element?.referenceCodeRejected : element?.referenceCode | uppercase}}\n        </td>\n      </ng-container>\n      <ng-container matColumnDef=\"typeOfApplication\">\n        <th mat-header-cell *matHeaderCellDef > TYPE OF APPLICATION </th>\n        <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"viewApplication(element)\"\n          [ngStyle]=\"{'pointer-events': ((i !== 0 && currentUser.userRole.name === 'ROLE_ENCODER') ? 'none' : ''),\n          'background-color': ((currentUser.userRole.name === 'ROLE_ENCODER' && i > 0 ? '#beb8b8' : currentUser.userRole.name === 'ROLE_AD_SPECIALIST' && element?.formStatus==='LOCKED' ? 'yellow' : ''))}\">\n          {{element?.formType.replaceAll('_',' ') | uppercase}} - {{\n          element?.applicationType?.description | uppercase }}</td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"companyName\">\n        <th mat-header-cell *matHeaderCellDef > COMPANY NAME </th>\n        <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"viewApplication(element)\"\n        [ngStyle]=\"{'pointer-events': ((i !== 0 && currentUser.userRole.name === 'ROLE_ENCODER') ? 'none' : ''),\n          'background-color': ((currentUser.userRole.name === 'ROLE_ENCODER' && i > 0 ? '#beb8b8'\n          : currentUser.userRole.name === 'ROLE_AD_SPECIALIST' && element?.formStatus==='LOCKED' ? 'yellow' : ''))}\">\n          {{ element?.company?.companyName | uppercase }}</td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"brand\">\n        <th mat-header-cell *matHeaderCellDef > BRAND </th>\n        <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"viewApplication(element)\"\n        [ngStyle]=\"{'pointer-events': ((i !== 0 && currentUser.userRole.name === 'ROLE_ENCODER') ? 'none' : ''),\n          'background-color': ((currentUser.userRole.name === 'ROLE_ENCODER' && i > 0 ? '#beb8b8'\n          : currentUser.userRole.name === 'ROLE_AD_SPECIALIST' && element?.formStatus==='LOCKED' ? 'yellow' : ''))}\">\n          {{ element?.brand?.description | uppercase }} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"product\">\n        <th mat-header-cell *matHeaderCellDef > PRODUCT </th>\n        <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"viewApplication(element)\"\n        [ngStyle]=\"{'pointer-events': ((i !== 0 && currentUser.userRole.name === 'ROLE_ENCODER') ? 'none' : ''),\n          'background-color': ((currentUser.userRole.name === 'ROLE_ENCODER' && i > 0 ? '#beb8b8'\n          : currentUser.userRole.name === 'ROLE_AD_SPECIALIST' && element?.formStatus==='LOCKED' ? 'yellow' : ''))}\">\n          {{ element?.product?.description | uppercase }} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"typeOfMedium\">\n        <th mat-header-cell *matHeaderCellDef> TYPE OF MEDIUM</th>\n        <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"viewApplication(element)\"\n        [ngStyle]=\"{'pointer-events': ((i !== 0 && currentUser.userRole.name === 'ROLE_ENCODER') ? 'none' : ''),\n          'background-color': ((currentUser.userRole.name === 'ROLE_ENCODER' && i > 0 ? '#beb8b8'\n          : currentUser.userRole.name === 'ROLE_AD_SPECIALIST' && element?.formStatus==='LOCKED' ? 'yellow' : ''))}\">\n          {{ element?.typeOfMedium | uppercase }}</td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"status\">\n        <th mat-header-cell *matHeaderCellDef > APPLICATION STATUS </th>\n        <td mat-cell *matCellDef=\"let element; let i = index\" class=\"\" (click)=\"viewApplication(element)\"\n          [ngStyle]=\"{'pointer-events': ((i !== 0 && currentUser.userRole.name === 'ROLE_ENCODER') ? 'none' : ''),\n        'background-color': ((currentUser.userRole.name === 'ROLE_ENCODER' && i > 0\n        ? '#beb8b8' : element?.internalStatus === 'S1_APPLICATION_REJECTED' || element?.internalStatus === 'S1_APPLICATION_CANCELLED' ? 'lightpink' : currentUser.userRole.name === 'ROLE_AD_SPECIALIST' && element?.formStatus==='LOCKED' ? 'yellow' : ''))}\">\n          {{ showStatus({'paymentStatus': element?.paymentStatus, 'externalStatus': element?.externalStatus, 'actionStatus': element?.actionStatus}) }} </td>\n      </ng-container>\n\n      <ng-continer matColumnDef=\"paymentStatus\">\n        <th mat-header-cell *matHeaderCellDef>PAYMENT STATUS</th>\n        <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"viewApplication(element)\"\n          [ngStyle]=\"{\n            'pointer-events': ((i !== 0 && currentUser.userRole.name === 'ROLE_ENCODER') ? 'none' : ''),\n            'background-color': ((currentUser.userRole.name === 'ROLE_ENCODER' && i > 0 ? '#beb8b8' : currentUser.userRole.name === 'ROLE_AD_SPECIALIST' && element?.formStatus==='LOCKED' ? 'yellow' : ''))\n          }\"\n        >\n          <div\n            class=\"payment-status-chip\"\n            [ngClass]=\"{\n              'payment-status-chip--paid': element?.paymentStatus === paymentStatus.PAID,\n              'payment-status-chip--unpaid': element?.paymentStatus === paymentStatus.UNPAID,\n              'payment-status-chip--for-approval': element?.paymentStatus === paymentStatus.FOR_APPROVAL,\n              'payment-status-chip--for-payment': element?.paymentStatus === paymentStatus.FOR_PAYMENT\n            }\"\n          >\n            {{formatTextPayment(element?.paymentStatus)}}\n          </div>\n        </td>\n      </ng-continer>\n\n      <ng-container matColumnDef=\"internalStatus\">\n        <th mat-header-cell *matHeaderCellDef > INTERNAL STATUS </th>\n        <td mat-cell *matCellDef=\"let element; let i = index\" class=\"\"\n          [ngStyle]=\"{'pointer-events': ((i !== 0 && currentUser.userRole.name === 'ROLE_ENCODER') ? 'none' : ''),\n        'background-color': ((currentUser.userRole.name === 'ROLE_ENCODER' && i > 0 ? '#beb8b8' : currentUser.userRole.name === 'ROLE_AD_SPECIALIST' && element?.formStatus==='LOCKED' ? 'yellow' : ''))}\">\n          {{ parseInternalStatus(element?.internalStatus, element?.actionBy) }}</td>\n      </ng-container>\n\n      <!-- For ASC Users only 'background-color': ((currentUser.userRole.name === 'ROLE_AD_SPECIALIST' && i > 0 && element?.formStatus==='LOCKED' ? 'yellow' : ''))-->\n      <!-- <ng-container matColumnDef=\"status\" *ngIf=\"currentUser.userRole.name!='ROLE_APPLICANT'\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> APPLICATION STATUS </th>\n        <td mat-cell *matCellDef=\"let element; let i = index\" class=\"applicantStatus\"\n          [ngStyle]=\"{'background-color':\n          ((element.submissionType=='ORIGINAL'&&element.decisionStatus!='INCOMPLETE') ? 'lightblue' :\n          ((element.submissionType=='FOR COMPLIANCE'||element.decisionStatus=='INCOMPLETE'||element.submissionType=='COMPLIANCE') ? '#ebd79b' :\n          (element.submissionType=='REVISION' ? '#8fcf8f' : '' )))}\"\n          (click)=\"viewApplication(element)\"> {{\n          element?.internalStatus?.replaceAll('_',' ') | uppercase }}</td>\n      </ng-container> -->\n\n      <ng-container matColumnDef=\"icon\">\n        <th mat-header-cell *matHeaderCellDef > </th>\n        <td mat-cell *matCellDef=\"let element\" class=\"icon\">\n          <!-- FOR APPLICANT -------------------------------------------------- -->\n          <button mat-raised-button class=\"button-red\" matTooltip=\"Cancel Application\" [disabled]=\"element.formStatus === 'LOCKED'\"\n            (click)=\"saveStatus('presentor','cancel', 'S1_APPLICATION_CANCELLED', element)\"\n            *ngIf=\"currentUser?.userRole?.name=='ROLE_APPLICANT'&&element?.internalStatus=='S1_APPLICATION_SUBMITTED'\">\n            <i class=\"material-icons color__white\">cancel</i>\n          </button>\n\n          <button mat-raised-button class=\"button-red\" matTooltip=\"Submit For Compliance\"\n            (click)=\"viewApplication(element)\"\n            *ngIf=\"(!element?.appliedS2 && !element?.hasOngoingCompliance && !element?.hasOngoingRevision && element?.decisionStatus=='INCOMPLETE' &&\n            !s1Application?.hasOngoingAppeal && element?.paymentStatus === 'PAID' && element?.releaseStatus === 'RELEASED' &&\n                    (element?.internalStatus=='S1_APPLICATION_REVIEWED' || element?.internalStatus=='COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER' || element?.internalStatus=='REVISION_SCREENED' ||\n                    element?.internalStatus=='S1_APPLICATION_REJECTED'))\">\n            <i class=\"material-icons\">warning_amber</i>\n          </button>\n\n          <button mat-raised-button class=\"button-red\" matTooltip=\"Submit Revision\"\n            (click)=\"viewApplication(element)\"\n            *ngIf=\"(element?.revisionNo !== 2 && currentUser?.userRole?.name=='ROLE_APPLICANT' && !element?.appliedS2 &&\n            element?.paymentStatus === 'PAID' && element?.releaseStatus === 'RELEASED' && !element?.hasOngoingCompliance &&\n            !element?.hasOngoingRevision && element?.submissionType === 'ORIGINAL' && !s1Application?.hasOngoingAppeal &&\n                    (\n                      (element?.internalStatus=='S1_APPLICATION_REVIEWED' || element?.internalStatus=='COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER') &&\n                      (element?.decisionStatus=='APPROVED' || element?.decisionStatus=='APPROVED W/ CAUTION')\n                    )\n                  )\">\n            <i class=\"material-icons\">task_alt</i>\n          </button>\n\n          <button mat-raised-button class=\"button-red\" matTooltip=\"Apply for S2 Application\"\n            *ngIf=\"currentUser?.userRole?.name=='ROLE_APPLICANT' && !element?.appliedS2 && !element?.hasOngoingRevision&& !element?.hasOngoingCompliance &&\n            element?.paymentStatus === 'PAID' && element?.releaseStatus === 'RELEASED' && !s1Application?.hasOngoingAppeal &&\n            ((element?.internalStatus=='S1_APPLICATION_REVIEWED'|| element?.internalStatus=='COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER'|| element?.internalStatus=='REVISION_SCREENED') &&\n             (element?.decisionStatus=='APPROVED'||element?.decisionStatus=='APPROVED W/ CAUTION'))\"\n            (click)=\"applyForS2(element)\">\n              <i class=\"material-icons color__white\"> queue_play_next</i>\n          </button>\n\n          <!-- FOR ASC USERS -------------------------------------------------- -->\n          <button mat-raised-button class=\"button-red\" matTooltip=\"Return to Ad Specialist\"\n            (click)=\"returnTo('RETURN', element)\"\n            *ngIf=\"currentUser?.userRole?.name=='ROLE_SCREENER'&&element?.internalStatus=='S1_APPLICATION_VERIFIED_BY_AD_SPE'\">\n            <i class=\"material-icons color__white\">assignment_return</i>\n          </button>\n          <button mat-raised-button class=\"button-red\" matTooltip=\"Return to Ad Specialist\"\n            (click)=\"returnTo('RETURN', element)\"\n            *ngIf=\"currentUser?.userRole?.name=='ROLE_SCREENER'&&element?.internalStatus=='COMPLIANCE_DOCUMENT_VERIFIED_BY_AD_SPE'\">\n            <i class=\"material-icons color__white\">assignment_return</i>\n          </button>\n          <button mat-raised-button class=\"button-red\" matTooltip=\"Return to Ad Specialist\"\n            (click)=\"returnTo('RETURN', element)\"\n            *ngIf=\"currentUser?.userRole?.name=='ROLE_SCREENER'&&element?.internalStatus=='REVISION_VERIFIED_BY_AD_SPE'\">\n            <i class=\"material-icons color__white\">assignment_return</i>\n          </button>\n\n          <button mat-raised-button class=\"button-red\" matTooltip=\"Return to Screener\"\n            (click)=\"returnTo('RETURN', element)\"\n            *ngIf=\"currentUser?.userRole?.name=='ROLE_REVIEWER'&&element.internalStatus=='S1_APPLICATION_SCREENED'\">\n            <i class=\"material-icons color__white\">assignment_return</i>\n          </button>\n\n          <!-- FOR ADSPECIALIST USERS -------------------------------------------------- -->\n          <button mat-raised-button class=\"button-red\" matTooltip=\"Unlock\"\n            (click)=\"unlockApplication('UNLOCK', element)\"\n            *ngIf=\"currentUser?.userRole?.name=='ROLE_AD_SPECIALIST' && element.formStatus == 'LOCKED' && displayedContent !== 'Returned Application'\">\n            <i class=\"material-icons color__white\">lock</i>\n          </button>\n          \n\n        </td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n    <div class=\"no-record\" [hidden]=\"dataSource && dataSource?.data?.length > 0\">\n      No record found.\n    </div>\n    <!-- <div style=\"float:right\"\n      *ngIf=\"currentUser?.userRole?.name!=='ROLE_ADMIN'&&currentUser?.userRole?.name!=='ROLE_SUPER_ADMIN'\">\n      <button mat-stroked-button color=\"primary\">Total Items: {{totalItems}}</button>\n      <button mat-stroked-button color=\"primary\">{{currentPage}} of {{totalPages==0 ? '1' : totalPages}}</button>\n      <button mat-stroked-button color=\"warn\" (click)=\"prevPage()\"\n        [disabled]=\"dataSource && dataSource?.data?.length === 0\">\n        < Prev</button> <button mat-stroked-button color=\"warn\" (click)=\"nextPage()\"\n          [disabled]=\"dataSource && dataSource?.data?.length === 0\">Next >\n      </button>\n    </div> -->\n    <!-- <mat-paginator [length]=\"resultsLength\"></mat-paginator> -->\n    <!-- <mat-paginator [pageSizeOptions]=\"[10, 20, 50]\" showFirstLastButtons> -->\n    <!-- </mat-paginator> -->\n    <mat-paginator [pageSize]=\"pageSize\" [pageIndex]=\"pageNo\" [length]=\"totalItems\"\n      [pageSizeOptions]=\"pageSizeOptions\" (page)=\"pageEvents($event)\">\n  </mat-paginator>\n  </div>\n  <br>\n</ng-template>\n\n\n<!-- TEMPLATE FOR MULTIPLE S1 APPLICATION LIST -->\n<ng-template #multipleS1ApplicationList>\n  <br>\n  <div class=\"row\" fxLayout fxLayoutAlign=\"center center\">\n    <mat-form-field class=\"col-md-9\" appearance=\"outline\">\n      <mat-label><i class=\"material-icons\">search</i> Search Applications</mat-label>\n      <input matInput type=\"text\" (keyup)=\"doFilterS1MultipleApplicationList($event.target.value)\">\n    </mat-form-field>\n\n    <div class=\"col\">\n      <div class=\"legend-content\">\n        <table class=\"legend-table\">\n          <tr>\n            <td>\n              <div class=\"legend-box legend-orange\"></div> FOR APPROVAL\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <div class=\"legend-box legend-green\"></div> APPROVED\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <div class=\"legend-box legend-red\"></div> DISAPPROVED\n            </td>\n          </tr>\n        </table>\n      </div>\n    </div>\n  </div>\n\n  <!-- <div class=\"row\">\n\n    <div class=\"col-md-2\">LEGEND:</div>\n    <div class=\"col-md-1 legend legend-orange\">FOR APPROVAL</div>\n    <div class=\"col-md-1 legend legend-green\">APPROVED</div>\n    <div class=\"col-md-1 legend legend-red\">DISAPPROVED</div>\n    <div class=\"col-md-1\" style=\"background-color:lightpink;border-radius:8px;width:20%;\">Rejected</div>\n  </div> -->\n\n  <br>\n\n  <div class=\"mat-elevation-z8 fields\">\n    <table mat-table [dataSource]=\"multipleApplicationDataSource\" matSort>\n\n      <ng-container matColumnDef=\"adTitle\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> AD TITLE </th>\n        <td mat-cell *matCellDef=\"let element\" (click)=\"viewMultipleApplication(element)\">\n          {{ element?.adTitle | uppercase }} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"typeOfApplication\">\n        <th mat-header-cell *matHeaderCellDef > TYPE OF APPLICATION </th>\n        <td mat-cell *matCellDef=\"let element\" (click)=\"viewMultipleApplication(element)\">\n          {{element?.applicationType?.description.replaceAll('_',' ') | uppercase }}</td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"companyName\">\n        <th mat-header-cell *matHeaderCellDef > COMPANY NAME </th>\n        <td mat-cell *matCellDef=\"let element\" (click)=\"viewMultipleApplication(element)\">\n          {{ element?.company?.companyName | uppercase }} </td>\n      </ng-container>\n\n      <!-- <ng-container matColumnDef=\"membersAffiliation\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> MEMBER'S AFFILIATION </th>\n        <td mat-cell *matCellDef=\"let element\" (click)=\"viewMultipleApplication(element)\">\n          {{ element?.membersAffiliation?.description | uppercase }} </td>\n      </ng-container> -->\n\n      <ng-container matColumnDef=\"brand\">\n        <th mat-header-cell *matHeaderCellDef > BRAND </th>\n        <td mat-cell *matCellDef=\"let element\" (click)=\"viewMultipleApplication(element)\">\n          {{ element?.brand?.description | uppercase }} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"product\">\n        <th mat-header-cell *matHeaderCellDef [hidden]=\"currentUser.userRole.name !== 'ROLE_AD_SPECIALIST'\" > PRODUCT </th>\n        <td mat-cell [hidden]=\"currentUser.userRole.name !== 'ROLE_AD_SPECIALIST'\" *matCellDef=\"let element\">\n          {{ element?.product?.description | uppercase }} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"status\">\n        <th mat-header-cell *matHeaderCellDef > APPLICATION STATUS </th>\n        <td mat-cell *matCellDef=\"let element\" class=\"applicantStatus\" [ngStyle]=\"{'background-color':\n        element?.status === 'FOR_APPROVAL' ? '#fca402' :\n        element?.status === 'APPROVED' ? '#8fcf8f' :\n        element?.status === 'DISAPPROVED' ? '#ff8a7b' : '' }\" (click)=\"viewMultipleApplication(element)\">\n          {{ element?.status?.replaceAll('_',' ') | uppercase }} </td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"multipleApplicationDisplayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: multipleApplicationDisplayedColumns;\"></tr>\n    </table>\n    <div class=\"no-record\" [hidden]=\"multipleApplicationDataSource && multipleApplicationDataSource?.data?.length > 0\">\n      No record found.\n    </div>\n    <!-- <mat-paginator [pageSizeOptions]=\"[10, 20, 50]\" showFirstLastButtons></mat-paginator> -->\n    <mat-paginator [pageSize]=\"pageSize\" [pageIndex]=\"pageNo\" [length]=\"multipleTotalItems\"\n      [pageSizeOptions]=\"pageSizeOptions\" (page)=\"pageEvents($event)\">\n    </mat-paginator>\n  </div>\n</ng-template>\n\n<!-- TEMPLATE FOR SPECIAL S1 APPLICATION LIST -->\n<ng-template #specialS1ApplicationList>\n  <b *ngIf=\"currentUser.userRole.name === 'ROLE_APPLICANT' || currentUser.userRole.name === 'ROLE_ENCODER'\"><b class=\"material-icons info-msg\">error_outline</b> This\n    page contain list of Request for Approval and allows you to create S1 application from approved request only.</b>\n  <b *ngIf=\"currentUser.userRole.name === 'ROLE_ADMIN' || currentUser?.userRole.name === 'ROLE_SUPER_ADMIN' \"><b\n      class=\"material-icons info-msg\">error_outline</b> This page\n    contain list of Request for Approval and allows you to approve or disapprove request.</b>\n  <br>\n  <div class=\"row\" fxLayout fxLayoutAlign=\"center center\">\n    <mat-form-field class=\"col-md-8\" appearance=\"outline\">\n      <mat-label><i class=\"material-icons\">search</i> Search Applications</mat-label>\n      <input matInput type=\"text\" (keyup)=\"doFilterS1MultipleApplicationList($event.target.value)\">\n    </mat-form-field>\n\n    <div class=\"col\">\n      <div class=\"legend-content\">\n        <table class=\"legend-table\">\n          <tr>\n            <td>\n              <div class=\"legend-box legend-orange\"></div> FOR APPROVAL\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <div class=\"legend-box legend-green\"></div> APPROVED\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <div class=\"legend-box legend-red\"></div> DISAPPROVED\n            </td>\n          </tr>\n          <!-- <tr>\n            <td>\n              <div class=\"legend-box legend-pink\"></div> REJECTED\n            </td>\n          </tr> -->\n        </table>\n      </div>\n    </div>\n  </div>\n\n  <!-- <div class=\"row\">\n\n    <div class=\"col-md-2\">LEGEND:</div>\n    <div class=\"col-md-1 legend legend-orange\">FOR APPROVAL</div>\n    <div class=\"col-md-1 legend legend-green\">APPROVED</div>\n    <div class=\"col-md-1 legend legend-red\">DISAPPROVED</div>\n    <div class=\"col-md-1\" style=\"background-color:lightpink;border-radius:8px;width:20%;\">Rejected</div>\n  </div> -->\n  <br>\n\n  <div class=\"mat-elevation-z8 fields\">\n    <table mat-table [dataSource]=\"specialApplicationDataSource\" matSort>\n\n      <ng-container matColumnDef=\"adTitle\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> AD TITLE </th>\n        <td mat-cell *matCellDef=\"let element\" (click)=\"viewSpecialApplication(element)\">\n          {{ element?.adTitle | uppercase }} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"typeOfApplication\">\n        <th mat-header-cell *matHeaderCellDef > TYPE OF APPLICATION </th>\n        <td mat-cell *matCellDef=\"let element\" (click)=\"viewSpecialApplication(element)\">\n          {{ element?.applicationType?.description.replaceAll('_',' ') | uppercase }} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"companyName\">\n        <th mat-header-cell *matHeaderCellDef > COMPANY NAME </th>\n        <td mat-cell *matCellDef=\"let element\" (click)=\"viewSpecialApplication(element)\">\n          {{ element?.company?.companyName | uppercase }} </td>\n      </ng-container>\n\n      <!-- <ng-container matColumnDef=\"membersAffiliation\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> MEMBER'S AFFILIATION </th>\n        <td mat-cell *matCellDef=\"let element\" (click)=\"viewSpecialApplication(element)\">\n          {{ element?.membersAffiliation?.description | uppercase }} </td>\n      </ng-container> -->\n\n      <ng-container matColumnDef=\"brand\">\n        <th mat-header-cell *matHeaderCellDef > BRAND </th>\n        <td mat-cell *matCellDef=\"let element\" (click)=\"viewSpecialApplication(element)\">\n          {{ element?.brand?.description | uppercase }} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"status\">\n        <th mat-header-cell *matHeaderCellDef> APPLICATION STATUS </th>\n        <td mat-cell *matCellDef=\"let element\" class=\"applicantStatus\" [ngStyle]=\"{'background-color':\n        element?.status === 'FOR_APPROVAL' ? '#fca402' :\n        element?.status === 'APPROVED' ? '#8fcf8f' :\n        element?.status === 'DISAPPROVED' ? '#ff8a7b' : '' }\" (click)=\"viewSpecialApplication(element)\">\n          {{ element?.status?.replaceAll('_',' ') | uppercase }} </td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"specialApplicationDisplayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: specialApplicationDisplayedColumns;\"></tr>\n    </table>\n    <div class=\"no-record\" [hidden]=\"specialApplicationDataSource && specialApplicationDataSource?.data?.length > 0\">\n      No record found.\n    </div>\n    <!-- <mat-paginator [pageSizeOptions]=\"[10, 20, 50]\" showFirstLastButtons></mat-paginator> -->\n    <mat-paginator [pageSize]=\"pageSize\" [pageIndex]=\"pageNo\" [length]=\"specialTotalItems\"\n      [pageSizeOptions]=\"pageSizeOptions\" (page)=\"pageEvents($event)\">\n    </mat-paginator>\n  </div>\n</ng-template>\n\n<!-- TEMPLATE FOR ASSIGNED TO SCREENER S1 APPLICATION LIST -->\n<ng-template #assignedToScreenerS1ApplicationList>\n  <div *ngIf=\"viewApplicationType === 'assigned-applications'\">\n    <b><b class=\"material-icons info-msg\">error_outline</b> This page allows you to view or retrieve application to\n      re-assign only.</b>\n    <br>\n    <div class=\"row\" fxLayout fxLayoutAlign=\"center center\">\n      <mat-form-field class=\"col-md-8\" appearance=\"outline\">\n        <mat-label><i class=\"material-icons\">search</i> Search Applications</mat-label>\n        <input matInput type=\"text\" (keyup)=\"doFilterAssignedS1ApplicationList($event.target.value)\">\n      </mat-form-field>\n\n      <div class=\"col\">\n        <div class=\"legend-content\">\n          <table class=\"legend-table\">\n            <tr>\n              <td>\n                <div class=\"legend-box legend-blue\"></div> ORIGINAL\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <div class=\"legend-box legend-green\"></div> REVISION\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <div class=\"legend-box legend-orange\"></div> FOR COMPLIANCE\n              </td>\n            </tr>\n          </table>\n        </div>\n      </div>\n    </div>\n\n    <!-- <div class=\"row\">\n\n    <div class=\"col-md-2\">LEGEND:</div>\n    <div class=\"col-md-1 legend legend-blue\">ORIGINAL</div>\n    <div class=\"col-md-1 legend legend-green\">REVISION</div>\n    <div class=\"col-md-1 legend legend-orange\">FOR COMPLIANCE</div>\n    <div class=\"col-md-1\" style=\"background-color:lightpink;border-radius:8px;width:20%;\">Rejected</div>\n  </div> -->\n    <br>\n\n    <div class=\"mat-elevation-z8 fields\">\n      <table mat-table [dataSource]=\"assignedApplicationDataSource\" matSort>\n\n        <ng-container matColumnDef=\"referenceCode\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> REFERENCE CODE </th>\n          <td mat-cell *matCellDef=\"let element; let i = index\" [ngStyle]=\"{'background-color':\n        (((element.submissionType=='ORIGINAL'&&element.decisionStatus!='INCOMPLETE') || element.decisionStatus=='INCOMPLETE') ? 'lightblue' :\n        ((element.submissionType=='FOR COMPLIANCE'||element.submissionType=='COMPLIANCE') ? '#ebd79b' :\n        (element.submissionType=='REVISION' ? '#8fcf8f' : '' )))}\">\n            {{ element?.internalStatus=='S1_APPLICATION_REJECTED' ? element?.referenceCodeRejected :\n            element?.referenceCode | uppercase}}</td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"adTitle\">\n          <th mat-header-cell *matHeaderCellDef > AD TITLE </th>\n          <td mat-cell *matCellDef=\"let element\">\n            {{ element?.adTitle.replaceAll('_',' ') | uppercase }} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"typeOfApplication\">\n          <th mat-header-cell *matHeaderCellDef > TYPE OF APPLICATION </th>\n          <td mat-cell *matCellDef=\"let element\">\n            {{element?.formType.replaceAll('_',' ') | uppercase}} - {{\n            element?.applicationType?.description | uppercase }}</td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"companyName\">\n          <th mat-header-cell *matHeaderCellDef > COMPANY NAME </th>\n          <td mat-cell *matCellDef=\"let element\">\n            {{ element?.company?.companyName | uppercase }} </td>\n        </ng-container>\n\n        <!-- <ng-container matColumnDef=\"membersAffiliation\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> MEMBER'S AFFILIATION </th>\n          <td mat-cell *matCellDef=\"let element\">\n            {{ element?.membersAffiliation?.description | uppercase }} </td>\n        </ng-container> -->\n\n        <ng-container matColumnDef=\"brand\">\n          <th mat-header-cell *matHeaderCellDef > BRAND </th>\n          <td mat-cell *matCellDef=\"let element\">\n            {{ element?.brand?.description | uppercase }} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"product\">\n          <th mat-header-cell *matHeaderCellDef [hidden]=\"currentUser.userRole.name !== 'ROLE_AD_SPECIALIST'\" > PRODUCT </th>\n          <td mat-cell [hidden]=\"currentUser.userRole.name !== 'ROLE_AD_SPECIALIST'\" *matCellDef=\"let element\">\n            {{ element?.product?.description | uppercase }} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"status\">\n          <th mat-header-cell *matHeaderCellDef > APPLICATION STATUS </th>\n          <td mat-cell *matCellDef=\"let element; let i = index\" class=\"applicantStatus\"\n            [ngStyle]=\"{'background-color': element?.internalStatus === 'S1_APPLICATION_REJECTED' ? 'lightpink' : '' }\">\n            {{\n            element?.externalStatus?.replaceAll('_',' ') | uppercase }}</td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"internalStatus\" *ngIf=\"currentUser.userRole.name !== 'ROLE_APPLICANT'\">\n          <th mat-header-cell *matHeaderCellDef > INTERNAL STATUS </th>\n          <td mat-cell *matCellDef=\"let element; let i = index\" class=\"applicantStatus\" [ngStyle]=\"{'pointer-events': ((i !== 0 && (currentUser.userRole.name !== 'ROLE_ADMIN' && currentUser.userRole.name !== 'ROLE_AD_SPECIALIST' && currentUser.userRole.name !== 'ROLE_SUPER_ADMIN' && currentUser.userRole.name !== 'ROLE_APPLICANT')) ? 'none' : ''),\n            'background-color': element?.internalStatus === 'S1_APPLICATION_REJECTED' ? 'lightpink' : '' }\" >\n            {{ element?.internalStatus?.replaceAll('_',' ') | uppercase }} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"icon\">\n          <th mat-header-cell *matHeaderCellDef > </th>\n          <td mat-cell *matCellDef=\"let element\" class=\"icon\">\n            <button mat-raised-button class=\"button-red\" matTooltip=\"Re-assignment\" (click)=\"viewApplication(element)\"\n              *ngIf=\"\n          (currentUser?.userRole?.name=='ROLE_AD_SPECIALIST'&&element?.internalStatus=='S1_APPLICATION_VERIFIED_BY_AD_SPE')\n          ||(currentUser?.userRole?.name=='ROLE_AD_SPECIALIST'&&element?.internalStatus=='COMPLIANCE_DOCUMENT_VERIFIED_BY_AD_SPE')\n          ||(currentUser?.userRole?.name=='ROLE_AD_SPECIALIST'&&element?.internalStatus=='REVISION_VERIFIED_BY_AD_SPE')\n          ||(currentUser?.userRole?.name=='ROLE_SCREENER'&&element.internalStatus=='S1_APPLICATION_SCREENED')\">\n              <i class=\"material-icons color__white\">assignment_return</i><span> Re-assignment </span>\n            </button>\n\n          </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"assignedApplicationDisplayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: assignedApplicationDisplayedColumns;\"></tr>\n      </table>\n      <div class=\"no-record\"\n        [hidden]=\"assignedApplicationDataSource && assignedApplicationDataSource?.data?.length > 0\">\n        No record found.\n      </div>\n      <mat-paginator [pageSizeOptions]=\"[10, 20, 30]\" showFirstLastButtons></mat-paginator>\n    </div>\n  </div>\n</ng-template>\n\n<!-- TEMPLATE \"FOR RELEASE\" APPLICATION LIST -->\n<ng-template #forReleaseApplicationList>\n  <div *ngIf=\"viewApplicationType === 'for-release' || viewApplicationType === 'released'\">\n    <!-- <b><b class=\"material-icons info-msg\">error_outline</b> This page allows you to resend decision form.</b> -->\n    <br>\n    <div class=\"row\" fxLayout fxLayoutAlign=\"center center\">\n      <mat-form-field class=\"col-md-8\" appearance=\"outline\">\n        <mat-label><i class=\"material-icons\">search</i> Search Applications</mat-label>\n        <input matInput type=\"text\" (keyup)=\"doFilterForReleaseApplicationList($event.target.value)\">\n      </mat-form-field>\n      <br>\n\n      <div class=\"mat-elevation-z8 fields\">\n        <table mat-table [dataSource]=\"forReleaseApplicationDataSource\" matSort>\n\n          <ng-container matColumnDef=\"referenceCode\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> REFERENCE CODE </th>\n            <td mat-cell *matCellDef=\"let element; let i = index\" [ngStyle]=\"{'background-color':\n          (((element.submissionType=='ORIGINAL'&&element.decisionStatus!='INCOMPLETE') || element.decisionStatus=='INCOMPLETE') ? 'lightblue' :\n          ((element.submissionType=='FOR COMPLIANCE'||element.submissionType=='COMPLIANCE') ? '#ebd79b' :\n          (element.submissionType=='REVISION' ? '#8fcf8f' : '' )))}\"\n          (click)=\"viewApplication(element)\">\n              {{ element?.internalStatus=='S1_APPLICATION_REJECTED' ? element?.referenceCodeRejected :\n              element?.referenceCode | uppercase}}</td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"adTitle\">\n            <th mat-header-cell *matHeaderCellDef > AD TITLE </th>\n            <td mat-cell *matCellDef=\"let element\" (click)=\"viewApplication(element)\">\n              {{ element?.adTitle.replaceAll('_',' ') | uppercase }} </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"typeOfApplication\">\n            <th mat-header-cell *matHeaderCellDef > TYPE OF APPLICATION </th>\n            <td mat-cell *matCellDef=\"let element\" (click)=\"viewApplication(element)\">\n              {{element?.formType.replaceAll('_',' ') | uppercase}} - {{\n              element?.applicationType?.description | uppercase }}</td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"companyName\">\n            <th mat-header-cell *matHeaderCellDef > COMPANY NAME </th>\n            <td mat-cell *matCellDef=\"let element\" (click)=\"viewApplication(element)\">\n              {{ element?.company?.companyName | uppercase }} </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"brand\">\n            <th mat-header-cell *matHeaderCellDef > BRAND </th>\n            <td mat-cell *matCellDef=\"let element\" (click)=\"viewApplication(element)\">\n              {{ element?.brand?.description | uppercase }} </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"product\">\n            <th mat-header-cell *matHeaderCellDef [hidden]=\"currentUser.userRole.name !== 'ROLE_AD_SPECIALIST'\" > PRODUCT </th>\n            <td mat-cell [hidden]=\"currentUser.userRole.name !== 'ROLE_AD_SPECIALIST'\" *matCellDef=\"let element\">\n              {{ element?.product?.description | uppercase }} </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"typeOfMedium\">\n            <th mat-header-cell *matHeaderCellDef > TYPE OF MEDIUM</th>\n            <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"viewApplication(element)\">\n              {{ element?.typeOfMedium | uppercase }}</td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"status\">\n            <th mat-header-cell *matHeaderCellDef > APPLICATION STATUS </th>\n            <td mat-cell *matCellDef=\"let element; let i = index\" class=\"applicantStatus\" (click)=\"viewApplication(element)\"\n              [ngStyle]=\"{'background-color': element?.internalStatus === 'S1_APPLICATION_REJECTED' ? 'lightpink' : '' }\">\n              {{ element?.externalStatus?.replaceAll('_',' ') | uppercase }}</td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"internalStatus\" *ngIf=\"currentUser.userRole.name !== 'ROLE_APPLICANT'\">\n            <th mat-header-cell *matHeaderCellDef > INTERNAL STATUS </th>\n            <td mat-cell *matCellDef=\"let element; let i = index\" class=\"applicantStatus\" [ngStyle]=\"{'pointer-events': ((i !== 0 && (currentUser.userRole.name !== 'ROLE_ADMIN' && currentUser.userRole.name !== 'ROLE_AD_SPECIALIST' && currentUser.userRole.name !== 'ROLE_SUPER_ADMIN' && currentUser.userRole.name !== 'ROLE_APPLICANT')) ? 'none' : ''),\n              'background-color': element?.internalStatus === 'S1_APPLICATION_REJECTED' ? 'lightpink' : '' }\"\n              (click)=\"viewApplication(element)\">\n              {{ element?.internalStatus?.replaceAll('_',' ') | uppercase }} </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"decisionStatus\" *ngIf=\"currentUser.userRole.name !== 'ROLE_APPLICANT'\">\n            <th mat-header-cell *matHeaderCellDef > DECISION STATUS </th>\n            <td mat-cell *matCellDef=\"let element; let i = index\" class=\"applicantStatus\" [ngStyle]=\"{'pointer-events': ((i !== 0 && (currentUser.userRole.name !== 'ROLE_ADMIN' && currentUser.userRole.name !== 'ROLE_AD_SPECIALIST' && currentUser.userRole.name !== 'ROLE_SUPER_ADMIN' && currentUser.userRole.name !== 'ROLE_APPLICANT')) ? 'none' : ''),\n              'background-color': element?.internalStatus === 'S1_APPLICATION_REJECTED' ? 'lightpink' : '' }\"\n              (click)=\"viewApplication(element)\">\n              {{ element?.decisionStatus?.replaceAll('_',' ') | uppercase }} </td>\n          </ng-container>\n\n\n          <tr mat-header-row *matHeaderRowDef=\"forReleaseApplicationDisplayedColumns\"></tr>\n          <tr mat-row *matRowDef=\"let row; columns: forReleaseApplicationDisplayedColumns;\"></tr>\n        </table>\n        <div class=\"no-record\"\n          [hidden]=\"forReleaseApplicationDataSource && forReleaseApplicationDataSource?.data?.length > 0 \">\n          No record found.\n        </div>\n        <!-- <mat-paginator [pageSizeOptions]=\"[10, 20, 30]\" showFirstLastButtons></mat-paginator> -->\n        <mat-paginator [pageSize]=\"pageSize\" [pageIndex]=\"pageNo\" [length]=\"forReleaseTotalItems\"\n          [pageSizeOptions]=\"pageSizeOptions\" (page)=\"pageEvents($event)\">\n        </mat-paginator>\n      </div>\n    </div>\n  </div>\n\n</ng-template>\n","<div class=\"list-dialog-content\">\n    <div class=\"row head-icon\">\n      <i class=\"material-icons\">live_help</i>\n      <p>{{s2Application.applicationForm.referenceCode}}</p>\n      <p class=\"sub-title\">Reference Code</p>\n      <p class=\"warning-msg\" *ngIf=\"!typeOfExecution?.applyForToa && typeOfExecution?.live\">This application is valid for S1 only.</p>\n    </div>\n\n    <div class=\"row\">\n        <div class=\"col-md-4\">\n            <button mat-raised-button class=\"button-red action-button\" (click)=\"proceedToS2(true)\"\n            [disabled]=\"typeOfExecution?.live\">\n                <i class=\"material-icons color__white\">summarize</i> PROCEED TO S2 APPLICATION\n            </button>\n        </div>\n        <div class=\"col-md-4\">\n            <button mat-raised-button class=\"button-red action-button\" (click)=\"proceedToS2(false)\"\n            [disabled]=\"!typeOfExecution?.applyForToa\">\n                <i class=\"material-icons color__white\">done_all</i> APPLY FOR TOA\n            </button>\n        </div>\n        <div class=\"col-md-4\">\n            <button mat-raised-button class=\"button-red action-button\" (click)=\"requestForClearingAndClearance()\"\n            [disabled]=\"s1Application?.applicationType?.description == 'Special Screening and Clearing'||typeOfExecution?.live\">\n                <i class=\"material-icons color__white\">sticky_note_2</i> REQUEST FOR SPECIAL CLEARING APPROVAL\n            </button>\n        </div>\n    </div><br>\n    <!-- <div class=\"row\">\n        <div class=\" col-md-12 form-check\">\n            <input class=\"form-check-input\" type=\"checkbox\" (change)=\"hasToa($event.target.checked)\" value=\"\" id=\"flexCheckDefault\">\n            <label class=\"form-check-label\" for=\"flexCheckDefault\">\n              Apply for TOA\n            </label>\n          </div>\n    </div> -->\n</div>\n\n<!-- *ngIf=\"s2Application?.applicationForm?.applicationType?.description === 'SPECIAL SCREENING AND CLEARING'\" -->\n\n","export * from './affiliation/affiliation.component';\nexport * from './brands/brands.component';\nexport * from './payment-type/payment-type.component';\nexport * from './type-of-document/type-of-document.component';\nexport * from './type-of-medium/type-of-medium.component';\nexport * from './type-of-reason/type-of-reason.component';\nexport * from './category/category.component';\nexport * from './product/product.component';\nexport * from './asc-rates/asc-rates.component';\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { CompanyRoutingModule } from './company-routing.module';;\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    CompanyRoutingModule,\n  ]\n})\nexport class CompanyModule { }\n","import { UserAccount } from './user-account.model';\n\nexport class CopyClaims {\n    id: number;\n    description: string;\n    role: string;\n    appFormReference: string;\n    actionDate: Date;\n    actionBy: UserAccount;\n}\n","import { MultiMediaMovingConstant } from './../../../../core/models/media-models/multimedia-moving.const';\nimport { CommonServices } from 'app/core/services/common-services.service';\nimport { Component, OnInit, Input, ViewChild, OnChanges, AfterViewChecked, ChangeDetectorRef, Output, EventEmitter, ChangeDetectionStrategy, SimpleChanges } from '@angular/core';\nimport { ApiService, SweetAlertService, DataStorageService, FileStorageService, ValidateFieldService } from '@services';\nimport { ENDPOINTS, ATTACHMENT_TYPE, TYPE_OF_MEDIUM, SPECIAL_APPLICATION, APPLICATION_STATUSES, APPLICATION_STAGE, USER_ROLES, MULTIMEDIA_STATIC } from '@shared';\nimport { MatTableDataSource, MatTable } from '@angular/material/table';\nimport {\n  S1Application,\n  S2Application,\n  TypeOfDocument,\n  TypeOfMedium,\n  SupportingDocument,\n  ApplicationSingleMedia,\n  ApplicationRequest,\n  ApplicationMultimedia,\n  ApplicationMultimediaMovingDTO,\n  ApplicationMultimediaStaticDTO,\n} from '@models';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { MatSort } from '@angular/material/sort';\nimport { MatPaginator } from '@angular/material/paginator';\nimport Swal from 'sweetalert2';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { MultiMediaStaticConst } from 'app/core/models/media-models/mulstimedia-static.const';\n\n@Component({\n  selector: 'app-material-information',\n  templateUrl: './material-information.component.html',\n  styleUrls: ['./material-information.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MaterialInformationComponent implements OnInit, OnChanges, AfterViewChecked {\n  @ViewChild(MatPaginator, { static: false }) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: false }) sort: MatSort;\n  @ViewChild(MatTable, { static: false }) table: MatTable<S1Application>;\n  // @ViewChild(AttachmentDocumentComponent, { static: false }) materialAttachmentDocument: AttachmentDocumentComponent;\n\n  @Output() checkSingleMediaChangesFunction: EventEmitter<any> = new EventEmitter();\n  @Output() checkMultimediaChangesFunction: EventEmitter<any> = new EventEmitter();\n\n  // @ViewChild('mainFile')\n  // myMainFile: ElementRef;\n  // @ViewChild('mainInput')\n  // myMainInput: ElementRef;\n  // @ViewChild('supportiveFile')\n  // mySupportiveFile: ElementRef;\n  // @ViewChild('revisionLetterFile')\n  // myRevisionLetterFile: ElementRef;\n\n  @Input() s1Application = new S1Application();\n  @Input() s2Application = new S2Application();\n  @Input() originalAttachmentDocuments = [];\n  @Input() revisionAttachmentDocuments = [];\n  @Input() complianceAttachmentDocuments = [];\n  @Input() revisionLetterAttachment: any;\n  @Input() newMultimediaList = [];\n  @Input() typeOfMediumList = []; // single and multimedia\n  @Input() supportiveDocumentList = [];\n  @Input() applicationSingleMedia = new ApplicationSingleMedia();\n  @Input() isAscUser = false;\n  @Input() isDisableFieldOnUpdate = false;\n\n  dataSource: MatTableDataSource<S1Application>;\n  displayedColumns: string[];\n  todayDate: Date = new Date();\n  materialInformationForm: FormGroup;\n\n  executionList = [];\n  dialectList = [];\n  newSupportiveDocumentList = [];\n  typeOfDocumentList = [];\n  specialApplicationType = [...SPECIAL_APPLICATION];\n\n  setMultimediaList = [];\n  @Input() selectedMultimediaList = [];\n  selectedMultimediaStringList = [];\n  @Input() toDeleteMultimediaList = [];\n  // singleMedia = new SingleMedia();\n  typeOfMedium = new TypeOfMedium();\n  typeOfDocument = new TypeOfDocument();\n  // attachmentDocument = new AttachmentDocument();\n  supportingDocument = new SupportingDocument();\n  applicationMultimedia = new ApplicationMultimedia();\n  applicationRequest = new ApplicationRequest();\n  newApplicationSingleMedia = new ApplicationSingleMedia();\n\n  selectMultimedia = false;\n  // showMainDocumentUploadButton = false;\n  // showMainDocumentViewButton = false;\n  // showMainDocumentDownloadButton = false;\n  // showSupportDocumentFrame = false;\n  // showMainDocumentRemoveButton = false;\n  // showRevisionLetterViewButton = false;\n\n  previewMainDocument = false;\n  disableSubmitButtonByMedia = false;\n\n  showSupportiveDocumentUploadButton = false;\n  showSupportiveDocumentViewButton = false;\n  showSupportiveDocumentDownloadButton = false;\n  showRevisionLetterDownloadButton = false;\n  previewSupportiveDocument = false;\n\n  attachmentSize: number;\n  safeURLMainDoc: any;\n  safeURLSupportDoc: any;\n  currentUser: any;\n  applicationStage: string;\n  safeURLRevisionLetter: any;\n  supportingDocumentIndex: any;\n  showRevisionLetterUploadButton = false;\n  isDigitalStatic = false;\n  isUpdate = false;\n\n  // validations\n  hiddenValidation: string;\n  readonlyValidation: string;\n  disabledValidation: string;\n\n  attachmentType = ATTACHMENT_TYPE.MAIN;\n  selectedFiles: FileList;\n  currentFileUpload: File;\n  progress: { percentage: number } = { percentage: 0 };\n  uploadedFileMain: any;\n  uploadedFileSupportive: any;\n  uploadedFileRevision: any;\n  mediaType = '';\n  labelMainDocument = 'MAIN DOCUMENT';\n  @Input() savedTypeOfMedium = '';\n  private ngUnsubscribe = new Subject();\n  selectedTypeOfMedium = 'SINGLE MEDIA';\n  @Input() multimediaDTO: any = {};\n  multimediaMovingDTO = new ApplicationMultimediaMovingDTO();\n  multimediaStaticDTO = new ApplicationMultimediaStaticDTO();\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private apiService: ApiService,\n    private sweetAlertService: SweetAlertService,\n    private sanitizer: DomSanitizer,\n    public dataStorage: DataStorageService,\n    private fileStorageService: FileStorageService,\n    private cd: ChangeDetectorRef,\n    public validateFieldService: ValidateFieldService,\n    private spinner: NgxSpinnerService,\n    public util: CommonServices\n  ) { }\n\n  ngOnInit(): void {\n    this.currentUser = this.dataStorage.getUserAccount();\n    if (this.currentUser.userRole.name === USER_ROLES.ROLE_AD_SPECIALIST) {\n      this.displayedColumns = ['typeOfDocument', 'input', 'variant', 'expiresOn', 'basedOn', 'remarks', 'action'];\n    } else {\n      this.displayedColumns = ['typeOfDocument', 'input', 'variant', 'expiresOn', 'basedOn', 'remarks'];\n    }\n\n    this.setFormValidator();\n    this.getTypeOfDocumentList();\n\n    if (this.dataStorage.getSpecialS1Application()) {\n      this.applicationRequest = this.dataStorage.getSpecialS1Application();\n    }\n    this.emitSingleMediaChanges();\n    this.initializeMultimediaMovingObj();\n    this.initializeMultimediaStaticObj();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes) {\n      if (this.multimediaDTO) {\n        if (this.s1Application.refTypeOfMedium === TYPE_OF_MEDIUM.MULTIMEDIA_MOVING) this.multimediaMovingDTO = this.multimediaDTO;\n        if (this.s1Application.refTypeOfMedium === TYPE_OF_MEDIUM.MULTIMEDIA_STATIC) this.multimediaStaticDTO = this.multimediaDTO;\n      }\n    }\n    \n    if (this.s1Application.refTypeOfMedium === undefined) {\n      this.s1Application.refTypeOfMedium = TYPE_OF_MEDIUM.SINGLE_MEDIA;\n      this.getTypeOfMedium(TYPE_OF_MEDIUM.SINGLE_MEDIA);\n    } else if (!this.applicationSingleMedia || this.s1Application.refTypeOfMedium?.includes('MULTIMEDIA')) {\n      this.getTypeOfMedium(this.s1Application.refTypeOfMedium);\n    } else if (this.applicationSingleMedia) {\n      if (this.applicationSingleMedia.mediumExecution) {\n        this.typeOfMedium = this.applicationSingleMedia.mediumExecution.typeOfMedium;\n        if (this.typeOfMedium.id) {\n          this.getExecutionDialectList();\n        }\n      }\n    }\n  }\n\n  ngAfterViewChecked() {\n    this.cd.detectChanges();\n  }\n\n  setFormValidator() {\n    this.materialInformationForm = this.formBuilder.group({\n      adTitle: ['', Validators.required],\n      referenceCode: [''],\n      previousRefCode: [''],\n      tagLine: [''],\n      refTypeOfMedium: [''],\n      appFormReference: [''],\n\n      // this.attachmentDocumentForm = this.formBuilder.group({\n      attachmentReference: [''],\n      hasNoSupportingDocs: [''],\n      typeOfDocument: [''],\n      basedOn: [''],\n      variant: [''],\n      dateOfLaunch: [''],\n      expiresOn: [''],\n      remarks: [''],\n      input: [''],\n\n      typeOfMedium: [''],\n      mediumExecution: [''],\n      language: [''],\n      dialect: [''],\n      others: [''],\n      sizeLength: ['0'],\n      width: ['0'],\n\n      multimediaLength: [''],\n      multimediaSize: [''],\n      applicationSingleMedia: [''],\n      applicationMultimediaStatic: [''],\n      applicationMultimediaMoving: [''],\n\n    });\n  }\n\n  getTypeOfMedium(type) {\n    this.typeOfMediumList = [];\n    let endpoint = '';\n    if (type === TYPE_OF_MEDIUM.SINGLE_MEDIA) {\n      this.applicationSingleMedia = new ApplicationSingleMedia();\n      endpoint = ENDPOINTS.typeOfMediumSingleMedia;\n      this.selectMultimedia = false;\n      this.s1Application.refTypeOfMedium = TYPE_OF_MEDIUM.SINGLE_MEDIA;\n      this.selectedTypeOfMedium = TYPE_OF_MEDIUM.SINGLE_MEDIA;\n    } else if (type === TYPE_OF_MEDIUM.MULTIMEDIA_MOVING) {\n      endpoint = ENDPOINTS.typeOfMediumMultiMediaMoving;\n      this.selectMultimedia = true;\n      this.s1Application.refTypeOfMedium = TYPE_OF_MEDIUM.MULTIMEDIA_MOVING;\n      this.initializeMultimediaStaticObj();\n      this.selectedTypeOfMedium = TYPE_OF_MEDIUM.MULTIMEDIA;\n    } else {\n      endpoint = ENDPOINTS.typeOfMediumMultiMediaStatic;\n      this.selectMultimedia = true;\n      this.s1Application.refTypeOfMedium = TYPE_OF_MEDIUM.MULTIMEDIA_STATIC;\n      this.initializeMultimediaMovingObj();\n      this.selectedTypeOfMedium = TYPE_OF_MEDIUM.MULTIMEDIA;\n    }\n\n    // console.log('Selected: ', this.selectedTypeOfMedium)\n    this.apiService.findAll(endpoint).subscribe((res: any) => {\n      this.typeOfMediumList = res.responseData.data;\n      if (type === TYPE_OF_MEDIUM.SINGLE_MEDIA) {\n        this.typeOfMedium = this.typeOfMediumList.filter(medium => medium.description === this.savedTypeOfMedium)[0];\n      }\n\n      // if (this.selectedMultimediaList.length > 0) {\n      //   this.selectedMultimediaStringList = this.selectedMultimediaList.map(mappedList => mappedList?.typeOfMedium?.description);\n      //   this.emitMultimediaChanges();\n      // }\n      // this.typeOfMediumList = this.typeOfMediumList.map((medium, index) => {\n      //   const sampleList = this.selectedMultimediaList.filter(filteredMedium => filteredMedium.typeOfMedium.id === medium.id);\n      //   if (sampleList.length) {\n      //     medium.sizeLength = sampleList[0].multimediaSizeLength;\n      //   } else {\n      //     medium.sizeLength = null;\n      //   }\n      //   return medium;\n      // });\n    }, (err: any) => {\n    });\n  }\n\n  resetValues() {\n    this.applicationSingleMedia.dialect = null;\n    this.applicationSingleMedia.language = null;\n    this.applicationSingleMedia.others = '';\n    this.applicationSingleMedia.sizeLength = '0';\n    this.applicationSingleMedia.amount = 0;\n    this.applicationSingleMedia.mediumExecution = null;\n    this.applicationSingleMedia.width = '0';\n  }\n\n  setSingleMedia(typeofMedium: any) {\n    this.resetValues();\n    this.typeOfMedium = typeofMedium;\n    this.labelMainDocument = this.typeOfMedium.typeOfMainDocument.typeOfMainDocument;\n    this.getExecutionDialectList();\n    this.emitSingleMediaChanges();\n  }\n\n  emitSingleMediaChanges() {\n    if (\n      (this.typeOfMedium?.executionEnable && !this.applicationSingleMedia.mediumExecution) ||\n      (this.typeOfMedium?.lengthEnable && !this.applicationSingleMedia.sizeLength) ||\n      (this.typeOfMedium?.sizeLengthEnable && !this.applicationSingleMedia.sizeLength) ||\n      ((!this.typeOfMedium?.id && !this.applicationSingleMedia.id) && !this.savedTypeOfMedium)\n    ) {\n      this.disableSubmitButtonByMedia = true;\n    } else {\n      this.disableSubmitButtonByMedia = false;\n    }\n\n    this.checkSingleMediaChangesFunction.emit();\n  }\n\n  // addMultimedia(obj: any, evt) {\n  //   if (evt.target.value) {\n  //     obj.sizeLength = evt.target.value;\n  //     const existingValue = this.newMultimediaList.filter(filteredList => filteredList === obj);\n  //     if (existingValue.length) {\n  //       existingValue[0] = obj;\n  //     } else {\n  //       this.newMultimediaList.push(obj);\n  //       this.selectedMultimediaList.push(obj);\n  //     }\n  //     if (obj?.id) {\n  //       this.toDeleteMultimediaList = this.toDeleteMultimediaList.filter(filtered => filtered.id !== obj?.id);\n  //     }\n  //   } else {\n  //     const deleteExisting = this.selectedMultimediaList.filter(filteredMedia => filteredMedia?.typeOfMedium?.id === obj?.id);\n  //     if (deleteExisting.length) {\n  //       this.toDeleteMultimediaList.push(deleteExisting[0]);\n  //     }\n\n  //     this.newMultimediaList = this.newMultimediaList.filter(filteredMultimedia => filteredMultimedia.id !== obj.id);\n  //     this.selectedMultimediaList = this.selectedMultimediaList.filter(filteredMultimedia => filteredMultimedia.id !== obj.id);\n  //   }\n  //   const toDeleteMultimediaSet = this.toDeleteMultimediaList.filter((item, i, ar) => ar.indexOf(item) === i);\n  //   this.toDeleteMultimediaList = toDeleteMultimediaSet;\n  //   this.emitMultimediaChanges();\n  // }\n\n  emitMultimediaChanges() {\n    this.disableSubmitButtonByMedia = false;\n    let data = {\n      type: this.s1Application.refTypeOfMedium,\n      data: this.s1Application.refTypeOfMedium === TYPE_OF_MEDIUM.MULTIMEDIA_MOVING ? this.multimediaMovingDTO : this.multimediaStaticDTO\n    }\n    this.checkMultimediaChangesFunction.emit(data);\n  }\n\n  getTypeOfDocumentList() {\n    this.apiService.findAll(ENDPOINTS.typeOfDocument).subscribe((res: any) => {\n      this.typeOfDocumentList = res.responseData.data;\n    }, (err: any) => {\n    });\n  }\n\n  setTypeOfDocument(type) {\n    this.typeOfDocument = type;\n  }\n\n  compareSingleMedia(value: any, selected: any): boolean {\n    if (value && selected) {\n      return value.description === selected.description;\n    }\n  }\n\n  compareMediumExecution(value: any, selected: any): boolean {\n    if (value && selected) {\n      return value.typeOfExecution.typeOfExecution === selected.typeOfExecution.typeOfExecution;\n    }\n  }\n\n  compareDialect(value: any, selected: any): boolean {\n    if (value && selected) {\n      return value.dialect === selected.dialect;\n    }\n  }\n\n  getExecutionDialectList() {\n    if (this.typeOfMedium.id) {\n      this.apiService.findAll(`${ENDPOINTS.typeOfExecutionsByMedium}${this.typeOfMedium.id}`).subscribe((res: any) => {\n        if (this.typeOfMedium.executionEnable) {\n          this.executionList = res.responseData.data;\n        } else {\n          if (res.responseData.data.length === 0) {\n            this.sweetAlertService.customErrorMessage('The selected type of medium has no execution.');\n          } else {\n            this.applicationSingleMedia.mediumExecution = res.responseData.data[0];\n          }\n        }\n        this.emitSingleMediaChanges();\n      }, (err: any) => {\n      });\n    }\n\n    this.apiService.findAll(ENDPOINTS.dialects).subscribe((res: any) => {\n      this.dialectList = res.responseData.data;\n    }, (err: any) => {\n    });\n  }\n\n  removeTypeOfDocument(index) {\n    const keepValues = [];\n\n    Swal.fire({\n      text: 'Are you sure you want to delete this TYPE OF DOCUMENT?',\n      icon: 'question',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Confirm'\n    }).then((result) => {\n      if (result.value) {\n        this.supportiveDocumentList.forEach((element, key) => {\n          if (key !== index) {\n            keepValues.push(element);\n          }\n        });\n        this.supportiveDocumentList = keepValues;\n        this.dataSource.data = keepValues;\n      }\n    });\n\n  }\n\n  addSupportiveDocument(supportingDocument) {\n\n    const checkIfDocumentAlreadyExist = this.supportiveDocumentList.filter(data =>\n      data.typeOfDocument.id === supportingDocument.typeOfDocument.id);\n\n    // if (checkIfDocumentAlreadyExist.length === 1) {\n    //   this.sweetAlertService.customErrorMessage('Type of Document that is being added is already on the list.', 5);\n    // } else {\n    this.newSupportiveDocumentList.push(supportingDocument);\n    this.supportiveDocumentList.push(supportingDocument);\n    this.dataSource = new MatTableDataSource<S1Application>(this.supportiveDocumentList);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n    // }\n    this.supportingDocument = new SupportingDocument();\n    this.typeOfDocument = new TypeOfDocument();\n  }\n\n  getTypeOfDocument(res, index) {\n    this.isUpdate = true;\n    this.apiService.findById(ENDPOINTS.typeOfDocument, res.typeOfDocument.id).subscribe((data: any) => {\n      if (data) {\n        this.typeOfDocument = data.responseData.data;\n      }\n    });\n    this.supportingDocument.typeOfDocument = res.typeOfDocument;\n    if (res.typeOfDocument.description === 'DOH-FDA PERMIT') {\n      this.typeOfDocument.expiresOnEnable = true;\n      this.supportingDocument.expiresOn = res.expiresOn;\n      this.supportingDocumentIndex = index;\n    } else if (res.typeOfDocument.description === 'NMIS') {\n      this.typeOfDocument.expiresOnEnable = false;\n      this.supportingDocument.expiresOn = null;\n      this.supportingDocumentIndex = index;\n    } else if (res.typeOfDocument.description === 'DOLE PERMIT') {\n      this.typeOfDocument.expiresOnEnable = false;\n      this.supportingDocument.expiresOn = null;\n      this.supportingDocumentIndex = index;\n    }\n  }\n\n  modifyTypeOfDocument(res, id) {\n    const checkIfDocumentAlreadyExist = this.supportiveDocumentList.filter(data => data.typeOfDocument.id === res.typeOfDocument.id);\n    //  if(checkIfDocumentAlreadyExist.length === 1){\n    //   console.log(\"ALREADY EXIST\");\n    //  }else{\n    //   console.log(\"SUCCESSFULLY UPDATE\");\n    //   this.supportiveDocumentList.forEach((element, key) => {\n    //     if (key === id) {\n    //       this.supportiveDocumentList[key] = res;\n    //     }\n    //   });\n    //  }\n    // console.log(\"count\", checkIfDocumentAlreadyExist);\n    // if (checkIfDocumentAlreadyExist.length === 1) {\n    //   this.isUpdate = false;\n    //   this.supportiveDocumentList.forEach((element, key) => {\n    //     if (key === id) {\n    //       this.supportiveDocumentList.splice(key);\n    //     }\n    //   });\n    // } else {\n    //   this.sweetAlertService.customErrorMessage(`Type of Document already exist.`);\n    // }\n    this.isUpdate = false;\n    this.dataSource.data = this.supportiveDocumentList;\n    this.supportingDocument = new SupportingDocument();\n    this.supportingDocumentIndex = '';\n  }\n\n  initializeMultimediaMovingObj(): void {\n    this.multimediaMovingDTO = new ApplicationMultimediaMovingDTO();\n    let multimediaMovingList = new MultiMediaMovingConstant().data\n    this.multimediaMovingDTO = {\n      applicationMultimediaMovingList: multimediaMovingList,\n      appFormReference: '',\n      amount: 0,\n      id: 0,\n      sizeLength: 0,\n      typeOfMedium: null,\n    }\n  }\n  \n  initializeMultimediaStaticObj(): void {\n    this.multimediaStaticDTO = new ApplicationMultimediaStaticDTO();\n    let multimediaStaticList = new MultiMediaStaticConst().data\n    this.multimediaStaticDTO = {\n      applicationMultimediaStaticList: multimediaStaticList,\n      appFormReference: '',\n      amount: 0,\n      id: 0,\n      typeOfMedium: null,\n    }\n  }\n\n  isNumber(number): boolean {\n    if (number) return this.validateFieldService.numbersOnly(number);\n  }\n\n  ngOnDestroy(): void {\n    this.ngUnsubscribe.next();\n    this.ngUnsubscribe.complete();\n  }\n}\n","<!-- <form [formGroup]=\"materialInformationForm\"> -->\n<div class=\"row fields\"\n  [hidden]=\"currentUser?.userRole?.name=='ROLE_APPLICANT'&&(s1Application?.decisionStatus=='INCOMPLETE'||s1Application?.decisionStatus=='APPROVED'||s1Application?.decisionStatus=='APPROVED W/ CAUTION')\n    || (s1Application?.submissionType === 'REVISION' && s1Application?.internalStatus === 'S1_APPLICATION_REJECTED')\n    || (s1Application?.submissionType === 'COMPLIANCE' && s1Application?.internalStatus === 'S1_APPLICATION_REJECTED')\">\n  <div class=\"row\">\n    <!-- FOR S1 APPLICATION -->\n    <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n      <mat-label>Ad Title\n        <span class=\"required\">*</span>\n      </mat-label>\n      <input matInput [(ngModel)]=\"s1Application.adTitle\" name=\"adTitle\"\n        (ngModelChange)=\"util.toUpperCase(s1Application, 'adTitle', $event)\"\n        [readonly]=\"(isAscUser && isDisableFieldOnUpdate) || (s1Application?.applicationRequest?.status === 'APPROVED')\">\n    </mat-form-field>\n  </div>\n\n  <!-- FOR S1 APPLICATION -->\n  <div class=\"row\">\n    <mat-form-field class=\"col-md-6\" appearance=\"outline\"\n      *ngIf=\"(s1Application?.formType !== 'MULTIPLE' || (s1Application?.formType === 'MULTIPLE' && s1Application.multipleApplication))\"\n      [hidden]=\"specialApplicationType.includes(s1Application?.applicationType?.description?.toUpperCase()) && s1Application?.applicationRequest?.status !== 'APPROVED'\">\n      <mat-label>Reference Code of Previously-Approved Material</mat-label>\n      <input matInput [(ngModel)]=\"s1Application.previousRefCode\" name=\"previousRefCode\"\n        (ngModelChange)=\"util.toUpperCase(s1Application, 'previousRefCode', $event)\"\n        [readonly]=\"isAscUser && isDisableFieldOnUpdate\">\n    </mat-form-field>\n\n    <mat-form-field class=\"col-md-6\" appearance=\"outline\">\n      <mat-label>Tag Line (Optional)</mat-label>\n      <input matInput [(ngModel)]=\"s1Application.tagLine\" name=\"tagLine\"\n        (ngModelChange)=\"util.toUpperCase(s1Application, 'tagLine', $event)\"\n        [readonly]=\"(isAscUser && isDisableFieldOnUpdate) || (s1Application?.applicationRequest?.status === 'APPROVED')\">\n    </mat-form-field>\n  </div>\n</div>\n\n<!-- MULTIMEDIA SELECTION SECTION -->\n<!-- FOR S1 APPLICATION -->\n<div class=\"row fields\"\n  *ngIf=\"(\n    !specialApplicationType.includes(s1Application?.applicationType?.description?.toUpperCase())\n    ||(specialApplicationType.includes(s1Application?.applicationType?.description?.toUpperCase()) && s1Application?.applicationRequest?.status == 'APPROVED')\n    ||(s1Application?.formType === 'MULTIPLE' && s1Application?.multipleApplication)\n  )\n  &&\n    s1Application?.formType !== 'MULTIPLE'||(s1Application?.formType === 'MULTIPLE' && s1Application?.multipleApplication)\"\n  [hidden]=\"(s1Application?.formType === 'MULTIPLE' && !s1Application.multipleApplication)\n        || currentUser?.userRole?.name=='ROLE_APPLICANT'&&(s1Application?.decisionStatus=='INCOMPLETE'||s1Application?.decisionStatus=='APPROVED'||s1Application?.decisionStatus=='APPROVED W/ CAUTION')\n        || (s1Application?.submissionType === 'REVISION' && s1Application?.internalStatus === 'S1_APPLICATION_REJECTED')\n        || (s1Application?.submissionType === 'COMPLIANCE' && s1Application?.internalStatus === 'S1_APPLICATION_REJECTED')\">\n  <h4>\n    <mat-icon>bookmark</mat-icon> &nbsp;Type of Medium\n  </h4>\n\n  <mat-radio-group class=\"col-md-12\" aria-label=\"Select an option\" [(ngModel)]=\"selectedTypeOfMedium\"\n    [disabled]=\"isAscUser && isDisableFieldOnUpdate\" name=\"applicationTypeOfMedium\"\n    [hidden]=\"isAscUser && isDisableFieldOnUpdate\">\n    <mat-radio-button value=\"SINGLE MEDIA\" (click)=\"getTypeOfMedium('SINGLE MEDIA'); emitSingleMediaChanges()\">\n      SINGLE MEDIA\n    </mat-radio-button>\n    &nbsp;&nbsp;\n    <mat-radio-button value=\"MULTIMEDIA\" (click)=\"getTypeOfMedium('MULTIMEDIA-MOVING'); emitMultimediaChanges()\">\n      MULTIMEDIA\n    </mat-radio-button>\n    <br><br>\n  </mat-radio-group>\n\n  <mat-form-field class=\"col-md-11\" appearance=\"outline\" *ngIf=\"isAscUser && isDisableFieldOnUpdate\">\n    <mat-label>Media Type</mat-label>\n    <input matInput [(ngModel)]=\"s1Application.refTypeOfMedium\" name=\"refTypeOfMedium\"\n      readonly=\"isAscUser && isDisableFieldOnUpdate\">\n  </mat-form-field>\n\n  <!-- SELCETED: SINGLE MEDIA -->\n  <mat-form-field class=\"col-md-11\" appearance=\"outline\" *ngIf=\"s1Application?.refTypeOfMedium=='SINGLE MEDIA'\">\n    <mat-label>Single Media</mat-label>\n    <mat-select [(ngModel)]=\"typeOfMedium\" name=\"typeOfMedium\" [compareWith]=\"compareSingleMedia\"\n      [disabled]=\"isAscUser && isDisableFieldOnUpdate\" (selectionChange)=\"setSingleMedia(typeOfMedium)\">\n      <mat-option *ngFor=\"let i of typeOfMediumList\" [value]=\"i\">\n        {{i.description}}\n      </mat-option>\n    </mat-select>\n  </mat-form-field>\n\n  <!-- <section class=\"example-section\" *ngIf=\"isDigitalStatic\">\n      <mat-checkbox class=\"example-margin\" [(ngModel)]=\"checked\" [checked]=\"isDigitalStatic\">With landing page\n      </mat-checkbox>\n    </section> -->\n\n  <br><br>\n\n  <div *ngIf=\"s1Application.refTypeOfMedium=='SINGLE MEDIA'\">\n    <mat-form-field class=\"col-md-4 media-info\" appearance=\"outline\"\n      *ngIf=\"typeOfMedium?.executionEnable === true || (applicationSingleMedia?.mediumExecution && typeOfMedium?.executionEnable === undefined)\">\n      <mat-label>Execution</mat-label>\n      <mat-select [(ngModel)]=\"applicationSingleMedia.mediumExecution\" name=\"mediumExecution\"\n        [compareWith]=\"compareMediumExecution\" [disabled]=\"isAscUser && isDisableFieldOnUpdate\"\n        (selectionChange)=\"emitSingleMediaChanges()\">\n        <mat-option *ngFor=\"let i of executionList\" [value]=\"i\">\n          {{i.typeOfExecution.typeOfExecution}}\n        </mat-option>\n      </mat-select>\n    </mat-form-field>\n\n    <mat-form-field class=\"col-md-4 media-info\" appearance=\"outline\"\n      *ngIf=\"typeOfMedium?.languageEnable==true||(applicationSingleMedia?.dialect!=null&&typeOfMedium?.languageEnable==undefined)\">\n      <mat-label>Language/Dialect</mat-label>\n      <mat-select [(ngModel)]=\"applicationSingleMedia.dialect\" name=\"dialect\" [compareWith]=\"compareDialect\"\n        [disabled]=\"isAscUser && isDisableFieldOnUpdate\">\n        <mat-option *ngFor=\"let i of dialectList\" [value]=\"i\">\n          {{i.dialect}}\n        </mat-option>\n      </mat-select>\n    </mat-form-field>\n\n    <mat-form-field class=\"col-md-4 media-info\" appearance=\"outline\"\n      *ngIf=\"typeOfMedium?.othersEnable==true||(applicationSingleMedia?.others&&typeOfMedium?.othersEnable==undefined)\">\n      <mat-label>Others</mat-label>\n      <input matInput [(ngModel)]=\"applicationSingleMedia.others\" name=\"others\"\n        [readonly]=\"isAscUser && isDisableFieldOnUpdate\">\n    </mat-form-field>\n\n\n    <!-- <mat-form-field class=\"col-md-3 media-info\" appearance=\"outline\"\n        *ngIf=\"typeOfMedium.sizeLengthEnable==true||(applicationSingleMedia.sizeLength&&typeOfMedium.sizeLengthEnable==undefined)\">\n        <mat-label>Size Length</mat-label>\n        <input matInput [(ngModel)]=\"applicationSingleMedia.sizeLength\" formControlName=\"sizeLength\"\n          [readonly]=\"isAscUser && isDisableFieldOnUpdate\">\n      </mat-form-field> -->\n    <mat-form-field class=\"col-md-3 media-info\" appearance=\"outline\"\n      *ngIf=\"typeOfMedium?.lengthEnable==true||typeOfMedium?.sizeLengthEnable==true||(applicationSingleMedia?.sizeLength&&typeOfMedium?.sizeLengthEnable==undefined)\">\n      <mat-label>Size Length (in seconds)</mat-label>\n      <input matInput [(ngModel)]=\"applicationSingleMedia.sizeLength\" name=\"sizeLength\"\n        (keydown)=\"isNumber($event)\" (keyup)=\"emitSingleMediaChanges()\"\n        [readonly]=\"(isAscUser && isDisableFieldOnUpdate) && (currentUser?.userRole?.name !== 'ROLE_ADMIN' && currentUser?.userRole?.name !== 'ROLE_SUPER_ADMIN')\"\n        (blur)=\"emitSingleMediaChanges()\" maxlength=\"4\">\n    </mat-form-field>\n\n    <mat-form-field class=\"col-md-4 media-info\" appearance=\"outline\"\n      *ngIf=\"typeOfMedium?.widthEnable==true||(applicationSingleMedia?.width&&typeOfMedium?.othersEnable==undefined)\">\n      <mat-label>Width</mat-label>\n      <input matInput [(ngModel)]=\"applicationSingleMedia.width\" name=\"width\"\n        [readonly]=\"isAscUser && isDisableFieldOnUpdate\">\n    </mat-form-field>\n  </div>\n\n  <!-- SELCETED: MULTIMEDIA -->\n  <div *ngIf=\"s1Application.refTypeOfMedium=='MULTIMEDIA-MOVING'||s1Application.refTypeOfMedium=='MULTIMEDIA-STATIC'\">\n    <mat-radio-group class=\"col-md-12\" aria-label=\"Select an option\" \n      [(ngModel)]=\"s1Application.refTypeOfMedium\"\n      name=\"refTypeOfMedium\" \n      [disabled]=\"isAscUser && isDisableFieldOnUpdate\" \n      (change)=\"getTypeOfMedium(s1Application.refTypeOfMedium); emitMultimediaChanges()\"\n    >\n      <mat-radio-button value=\"MULTIMEDIA-MOVING\" [checked]=\"s1Application.refTypeOfMedium=='MULTIMEDIA-MOVING'\"\n        [disabled]=\"isAscUser && isDisableFieldOnUpdate\">\n        MULTIMEDIA-MOVING\n      </mat-radio-button>\n      &nbsp;&nbsp;\n      <mat-radio-button value=\"MULTIMEDIA-STATIC\" [checked]=\"s1Application.refTypeOfMedium=='MULTIMEDIA-STATIC'\"\n        [disabled]=\"isAscUser && isDisableFieldOnUpdate\">\n        MULTIMEDIA-STATIC(MAX OF 5 LAYOUT)</mat-radio-button>\n    </mat-radio-group>\n\n    <span *ngIf=\"!isAscUser && !isDisableFieldOnUpdate\">\n      <br><br>\n    </span>\n\n    <div class=\"row\"\n      *ngIf=\"selectMultimedia||s1Application.refTypeOfMedium=='MULTIMEDIA-MOVING'||s1Application.refTypeOfMedium=='MULTIMEDIA-STATIC'\">\n      <div class=\"col-md-12\" appearance=\"outline\">\n        <!-- <span  *ngFor=\"let s of selectedMultimediaList;\">\n              <table *ngIf=\"i?.description==s.typeOfMedium?.description\">\n                <tr>\n                  <td>\n                    <mat-checkbox [checked]=\"true\"\n                      [disabled]=\"isAscUser && isDisableFieldOnUpdate\">\n                      {{i?.description}}{{i?.sizeLength}}</mat-checkbox>\n                  </td>\n                  <td>{{s?.multimediaSizeLength}}\n                    <input type=\"text\" class=\"form-control\" [(ngModel)]=\"i.sizeLength\" (blur)=\"addMultimedia(i)\" formControlName=\"sizeLength\"\n                      name=\"sizeLength\" maxlength=\"200\" placeholder=\"Size/Length\">\n                  </td>\n                </tr>\n              </table>\n          </span> -->\n        <table>\n          <!-- <tr *ngFor=\"let i of typeOfMediumList; let index = index\">\n              <td>\n                <mat-checkbox [checked]=\"selectedMultimediaStringList.includes(i?.description)\"\n                  [disabled]=\"isAscUser && isDisableFieldOnUpdate\">\n                  {{i?.description}}</mat-checkbox>\n              </td>\n              <td>\n                  <input type=\"text\" class=\"form-control\" [value]=\"i?.sizeLength ? i?.sizeLength : 0\" (blur)=\"emitMultimediaChanges()\" (keyup)=\"addMultimedia(i, $event); emitMultimediaChanges()\"\n                    name=\"sizeLength\" maxlength=\"4\" placeholder=\"Size/Length (in seconds)\" (keydown)=\"validateFieldService.numbersOnly($event)\"\n                    [readonly]=\"((isAscUser && isDisableFieldOnUpdate) && (currentUser?.userRole?.name !== 'ROLE_ADMIN' && currentUser?.userRole?.name !== 'ROLE_SUPER_ADMIN')) && (s1Application?.decisionStatus !== 'APPROVED' || s1Application?.decisionStatus !== 'APPROVED_WITH_CAUTION') \">\n              </td>\n            </tr> -->\n\n          <ng-container *ngIf=\"s1Application.refTypeOfMedium=='MULTIMEDIA-MOVING'\">\n            <tr *ngFor=\"let item of multimediaMovingDTO.applicationMultimediaMovingList; let i = index\"\n              style=\"height: 40px;\">\n              <td>\n                <mat-checkbox [(ngModel)]=\"item.hasSelected\" [disabled]=\"isAscUser && isDisableFieldOnUpdate\" (click)=\"emitMultimediaChanges()\">\n                  {{item.multimediaMovingMedium | uppercase}}\n                </mat-checkbox>\n              </td>\n              <td *ngIf=\"i === 0\">\n                <input type=\"text\" class=\"form-control\" name=\"sizeLength\" maxlength=\"4\"\n                  placeholder=\"Size/Length (in seconds)\" (keydown)=\"isNumber($event)\"\n                  (blur)=\"emitMultimediaChanges()\" (keyup)=\"emitMultimediaChanges()\"\n                  [(ngModel)]=\"multimediaMovingDTO.sizeLength\" [readonly]=\"\n                    ((isAscUser && isDisableFieldOnUpdate) && \n                    (currentUser?.userRole?.name !== 'ROLE_ADMIN' && currentUser?.userRole?.name !== 'ROLE_SUPER_ADMIN')) && \n                    (s1Application?.decisionStatus !== 'APPROVED' || s1Application?.decisionStatus !== 'APPROVED_WITH_CAUTION')\n                  \">\n              </td>\n            </tr>\n          </ng-container>\n          <ng-container *ngIf=\"s1Application.refTypeOfMedium=='MULTIMEDIA-STATIC'\">\n            <tr *ngFor=\"let item of multimediaStaticDTO.applicationMultimediaStaticList; let i = index\"\n              style=\"height: 40px;\">\n              <td>\n                <mat-checkbox [(ngModel)]=\"item.hasSelected\" [disabled]=\"isAscUser && isDisableFieldOnUpdate\">\n                  {{item.multimediaStaticMedium | uppercase}}\n                </mat-checkbox>\n              </td>\n              <td *ngIf=\"item.multimediaStaticMedium !== 'digital static'\">\n                <input type=\"text\" class=\"form-control\" [name]=\"item.multimediaStaticMedium\" maxlength=\"4\"\n                  placeholder=\"Size/Length (in seconds)\" (keydown)=\"isNumber($event)\"\n                  (blur)=\"emitMultimediaChanges()\" (keyup)=\"emitMultimediaChanges()\"\n                  [(ngModel)]=\"item.sizeLength\" [readonly]=\"\n                      ((isAscUser && isDisableFieldOnUpdate) && \n                      (currentUser?.userRole?.name !== 'ROLE_ADMIN' && currentUser?.userRole?.name !== 'ROLE_SUPER_ADMIN')) && \n                      (s1Application?.decisionStatus !== 'APPROVED' || s1Application?.decisionStatus !== 'APPROVED_WITH_CAUTION')\n                    \">\n              </td>\n            </tr>\n          </ng-container>\n        </table>\n      </div>\n\n      <!-- <div class=\"col-md-5\" *ngIf=\"s1Application.refTypeOfMedium=='MULTIMEDIA-MOVING'\">\n            <mat-form-field class=\"col-md-4\" appearance=\"outline\">\n              <mat-label>Length-{{mt}}++{{i.id}}</mat-label>\n              <input matInput [(ngModel)]=\"multimediaLength\" (change)=\"updateSizeLength(mt,multimediaLength)\"\n                formControlName=\"multimediaLength\" [readonly]=\"isAscUser\">\n            </mat-form-field>\n          </div>\n          <div class=\"col-md-5\" *ngIf=\"s1Application.refTypeOfMedium=='MULTIMEDIA-STATIC'\">\n            <mat-form-field class=\"col-md-4\" appearance=\"outline\">\n              <mat-label>Size</mat-label>\n              <input matInput [(ngModel)]=\"applicationMultimediaStatic.multimediaSize\"  (change)=\"updateSizeLength(i)\"\n               formControlName=\"multimediaSize\" [readonly]=\"isAscUser\">\n            </mat-form-field>\n          </div> -->\n    </div>\n\n    <div class=\"row\"><br></div>\n\n\n  </div>\n  <br><br>\n</div>\n<!-- END OF FOR S1 APPLICATION -->\n\n<!-- ATTACHMENT SECTION -->\n<!-- FOR S1 APPLICATION -->\n<span class=\"row fields\" *ngIf=\"(\n    !specialApplicationType.includes(s1Application?.applicationType?.description?.toUpperCase())\n    ||(specialApplicationType.includes(s1Application?.applicationType?.description?.toUpperCase()) && s1Application?.applicationRequest?.status == 'APPROVED')\n    ||(s1Application?.formType === 'MULTIPLE' && s1Application?.multipleApplication)\n    ) && s1Application?.formType !== 'MULTIPLE'||(s1Application?.formType === 'MULTIPLE' && s1Application?.multipleApplication) &&\n    applicationStage !== 'S2-APPLICATION'\">\n\n  <app-attachment-document [s1Application]=\"s1Application\" [labelMainDocument]=\"labelMainDocument\"\n    [isAscUser]=\"isAscUser\" [isDisableFieldOnUpdate]=\"isDisableFieldOnUpdate\"\n    [originalAttachmentDocuments]=\"originalAttachmentDocuments\"\n    [revisionAttachmentDocuments]=\"revisionAttachmentDocuments\"\n    [complianceAttachmentDocuments]=\"complianceAttachmentDocuments\" [applicationStage]=\"applicationStage\">\n  </app-attachment-document>\n\n  <!--  [showMainDocumentUploadButton]=\"showMainDocumentUploadButton\" [showMainDocumentViewButton]=\"showMainDocumentViewButton\" [safeURLMainDoc]=\"safeURLMainDoc\"\n     [showSupportDocumentFrame]=\"showSupportDocumentFrame\" [showSupportiveDocumentUploadButton]=\"showSupportiveDocumentUploadButton\" [showSupportiveDocumentViewButton]=\"showSupportiveDocumentViewButton\" [safeURLSupportDoc]=\"safeURLSupportDoc\"\n      [revisionLetterAttachment]=\"revisionLetterAttachment\" [showRevisionLetterUploadButton]=\"showRevisionLetterUploadButton\" [showRevisionLetterViewButton]=\"showRevisionLetterViewButton\" [safeURLRevisionLetter]=\"safeURLRevisionLetter\" -->\n\n\n  <!-- FOR S1 APPLICATION -->\n  <div class=\"row\">\n    <!-- <b *ngIf=\"currentUser?.userRole?.name=='ROLE_APPLICANT'\"><b class=\"material-icons\">error_outline</b> Attachments' total file size should not exceed 15MB.</b> -->\n\n    <!-- MAIN DOCUMENT -->\n    <!-- <div class=\"row\">\n        <h4>\n          <i class=\"material-icons\">bookmark</i> &nbsp;{{labelMainDocument}}\n        </h4>\n        <br>\n        <div class=\"col-md-12\" appearance=\"outline\">\n          <mat-label *ngIf=\"attachmentDocuments[0]?.originalFilename\">Filename: </mat-label>\n          <input #mainInput matInput [value]=\"attachmentDocuments[0]?.originalFilename\" disabled\n            *ngIf=\"attachmentDocuments[0]?.originalFilename\"><br>\n          <input #mainFile class=\"file-upload\" type=\"file\" accept=\".pdf\" (change)=\"selectFile($event, 'MAIN')\"\n            [hidden]=\"(isAscUser && isDisableFieldOnUpdate) || attachmentDocuments[0]?.originalFilename != null\"\n            *ngIf=\"attachmentDocuments?.length==0 || (attachmentDocuments?.length>=1 && attachmentDocuments[0]===null) || s1Application?.internalStatus=='SAVED'|| attachmentDocuments[0]?.originalFilename != null ||\n            ((s1Application?.internalStatus=='S1_APPLICATION_REVIEWED' || s1Application?.internalStatus=='COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER')\n              &&(s1Application?.decisionStatus=='INCOMPLETE'||s1Application?.decisionStatus=='APPROVED'||s1Application?.decisionStatus=='APPROVED W/ CAUTION'))\" />\n        </div>\n\n        <div class=\"row\"><br></div>\n        <div class=\"col-md-12\" appearance=\"outline\"\n          *ngIf=\"showMainDocumentUploadButton==true||attachmentDocuments?.length>0\">\n          <button mat-raised-button class=\"button-red button-right\" (click)=\"viewDocument('MAIN')\"\n            *ngIf=\"showMainDocumentViewButton||s1Application?.mainAttachmentReference\">\n            <i class=\"material-icons add-document\">open_in_new</i> VIEW DOCUMENT\n          </button>\n          &nbsp; &nbsp;\n          <button mat-raised-button class=\"button-red button-right\" (click)=\"deleteUploadedFile('MAIN')\"\n            [hidden]=\"!showMainDocumentViewButton&&!s1Application?.mainAttachmentReference||(currentUser?.userRole?.name!='ROLE_APPLICANT'&&currentUser?.userRole?.name!='ROLE_ENCODER')\"\n            *ngIf=\"showMainDocumentViewButton||s1Application?.mainAttachmentReference||(s1Application?.internalStatus=='SAVED'||\n            ((s1Application?.internalStatus=='S1_APPLICATION_REVIEWED' || s1Application?.internalStatus=='COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER')\n              &&(s1Application?.decisionStatus=='INCOMPLETE'||s1Application?.decisionStatus=='APPROVED'||s1Application?.decisionStatus=='APPROVED W/ CAUTION')))\">\n            <i class=\"material-icons add-document\">delete</i> DELETE ATTACHMENT\n          </button>\n          &nbsp; &nbsp;\n          <button mat-raised-button class=\"button-red button-right\" (click)=\"uploadDocument()\"\n            [disabled]=\"!safeURLMainDoc||!showMainDocumentUploadButton\" [hidden]=\"(isAscUser && isDisableFieldOnUpdate)\"\n            *ngIf=\"attachmentDocuments[0]?.originalFilename == null\">\n            <i class=\"material-icons add-document\">upload</i> UPLOAD\n          </button>\n        </div>\n        <div class=\"col-md-12\">\n          <hr>\n        </div>\n      </div> -->\n\n    <!-- SUPPORTING DOC -->\n    <!-- <div class=\"row\" *ngIf=\"showSupportDocumentFrame==true || originalAttachmentDocuments?.length>0 || revisionAttachmentDocuments?.length>0 || complianceAttachmentDocuments?.length>0\"> -->\n    <!-- <h4>\n          <i class=\"material-icons\">bookmark</i> &nbsp;SUPPORT DOCUMENTS\n        </h4>\n\n        <div class=\"col-md-12\" appearance=\"outline\"\n          [hidden]=\"(isAscUser && isDisableFieldOnUpdate)||attachmentDocuments[1]?.originalFilename||s1Application?.supportingAttachmentReference\"\n          *ngIf=\"(attachmentDocuments?.length<2||attachmentDocuments?.length!=2)\">\n\n          <mat-checkbox (click)=\"verifyNoDocumentAttached()\" [(ngModel)]=\"s1Application.hasNoSupportingDocs\"\n            (checked)=\"s1Application.hasNoSupportingDocs\" formControlName=\"hasNoSupportingDocs\"\n            *ngIf=\"currentUser.userRole.name=='ROLE_APPLICANT' || (currentUser.userRole.name=='ROLE_ENCODER' && s1Application?.internalStatus === undefined )\">\n            I certify that no supporting document is attached to this S1 application.</mat-checkbox>\n          <br>\n        </div>\n\n        <p *ngIf=\"(currentUser.userRole.name!='ROLE_APPLICANT'&&s1Application.hasNoSupportingDocs)\n        ||(currentUser.userRole.name=='ROLE_AD_SPECIALIST'&&s1Application.hasNoSupportingDocs)\">\n          Supporting Document was not submitted.\n        </p>\n        <div class=\"col-md-12\"><br></div> -->\n\n    <!-- <div *ngIf=\"!s1Application.hasNoSupportingDocs\">\n          <div class=\"col-md-12\" appearance=\"outline\">\n            <mat-label *ngIf=\"attachmentDocuments[1]?.originalFilename\">Filename: </mat-label>\n            <input matInput [value]=\"attachmentDocuments[1]?.originalFilename\" disabled\n              *ngIf=\"attachmentDocuments[1]?.originalFilename\"><br>\n\n            <input #supportiveFile class=\"file-upload\" type=\"file\" accept=\".pdf\"\n              (change)=\"selectFile($event, 'SUPPORTIVE')\"\n              [hidden]=\"(isAscUser && isDisableFieldOnUpdate) || attachmentDocuments[1]?.originalFilename\"\n              *ngIf=\"attachmentDocuments?.length<2|| (attachmentDocuments?.length>=2 && attachmentDocuments[1]===null) ||s1Application?.internalStatus=='SAVED'|| attachmentDocuments[1]?.originalFilename != null ||\n              ((s1Application?.internalStatus=='S1_APPLICATION_REVIEWED' || s1Application?.internalStatus=='COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER')\n               &&(s1Application?.decisionStatus=='INCOMPLETE'||s1Application?.decisionStatus=='APPROVED'||s1Application?.decisionStatus=='APPROVED W/ CAUTION'))\" />\n          </div>\n\n          <div class=\"row\"><br></div>\n          <div class=\"col-md-12\" appearance=\"outline\"\n            *ngIf=\"showSupportiveDocumentUploadButton==true||attachmentDocuments?.length>1\">\n            <button mat-raised-button class=\"button-red button-right\" (click)=\"viewDocument('SUPPORTIVE')\"\n              *ngIf=\"showSupportiveDocumentViewButton||s1Application?.supportingAttachmentReference\">\n              <i class=\"material-icons add-document\">open_in_new</i> VIEW DOCUMENT\n            </button>\n            &nbsp; &nbsp;\n            <button mat-raised-button class=\"button-red button-right\" (click)=\"deleteUploadedFile('SUPPORTIVE')\"\n              [hidden]=\"!showSupportiveDocumentViewButton&&!s1Application?.supportingAttachmentReference||(currentUser?.userRole?.name!='ROLE_APPLICANT'&&currentUser?.userRole?.name!='ROLE_ENCODER')\"\n              *ngIf=\"showSupportiveDocumentViewButton||s1Application?.supportingAttachmentReference||(s1Application?.internalStatus=='SAVED'||\n              ((s1Application?.internalStatus=='S1_APPLICATION_REVIEWED' || s1Application?.internalStatus=='COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER')\n                &&(s1Application?.decisionStatus=='INCOMPLETE'||s1Application?.decisionStatus=='APPROVED'||s1Application?.decisionStatus=='APPROVED W/ CAUTION')))\">\n              <i class=\"material-icons add-document\">delete</i> DELETE ATTACHMENT\n            </button>\n            &nbsp; &nbsp;\n            <button mat-raised-button class=\"button-red button-right\" (click)=\"uploadDocument()\"\n              [disabled]=\"!safeURLSupportDoc||!showSupportiveDocumentUploadButton\"\n              [hidden]=\"(isAscUser && isDisableFieldOnUpdate)\"\n              *ngIf=\"s1Application?.supportingAttachmentReference==null||showSupportiveDocumentUploadButton||attachmentDocuments[1]?.originalFilename === null\">\n              <i class=\"material-icons add-document\">upload</i> UPLOAD\n            </button>\n          </div>\n          <div class=\"row\"><br></div>\n          <br>\n        </div> -->\n\n    <!-- FOR ADSPE / SCREENER / REVIEWER -->\n    <!-- <div class=\"row fields\"> -->\n    <div class=\"col-md-12\" appearance=\"outline\" *ngIf=\"currentUser.userRole.name=='ROLE_AD_SPECIALIST'\n          && (s1Application?.internalStatus === 'S1_APPLICATION_VERIFIED_BY_ENCODER' || s1Application?.internalStatus == 'COMPLIANCE_DOCUMENT_VERIFIED_BY_ENCODER' || s1Application?.internalStatus === 'REVISION_VERIFIED_BY_ENCODER')\n          && s1Application.supportingAttachmentReference !== null\">\n      <!-- *ngIf=\"showSupportiveDocumentDownloadButton==true||attachmentDocuments?.length>1\" -->\n      <div class=\"row\"><br></div>\n      <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n        <mat-label>Type of Document</mat-label>\n        <mat-select [(ngModel)]=\"supportingDocument.typeOfDocument\" name=\"typeOfDocument\">\n          <mat-option *ngFor=\"let i of typeOfDocumentList\" [value]=\"i\" (click)=\"setTypeOfDocument(i)\">\n            {{i.description}}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n\n      <mat-form-field class=\"col-md-6 hideIndex\" appearance=\"outline\" style=\"display: none;\">\n        <mat-label>index</mat-label>\n        <input matInput [value]=\"supportingDocumentIndex\">\n      </mat-form-field>\n\n      <mat-form-field class=\"col-md-6 document-form-margin\" appearance=\"outline\" *ngIf=\"typeOfDocument?.inputEnable\">\n        <input matInput [(ngModel)]=\"supportingDocument.input\" name=\"input\">\n      </mat-form-field>\n\n      <mat-form-field class=\"col-md-6 document-form-margin\" appearance=\"outline\" *ngIf=\"typeOfDocument?.variantEnable\">\n        <mat-label>Variant</mat-label>\n        <input matInput [(ngModel)]=\"supportingDocument.variant\" name=\"variant\">\n      </mat-form-field>\n\n      <mat-form-field class=\"col-md-6 document-form-margin\" appearance=\"outline\"\n        *ngIf=\"typeOfDocument?.expiresOnEnable\">\n        <mat-label>Expires on</mat-label>\n        <input matInput placeholder=\"Date\" [matDatepicker]=\"expiresOn\" readonly [min]=\"todayDate\"\n          [(ngModel)]=\"supportingDocument.expiresOn\" name=\"expiresOn\" [readonly]=\"true\">\n        <mat-datepicker-toggle matSuffix [for]=\"expiresOn\">\n          <mat-datepicker color=\"warn\" #expiresOn></mat-datepicker>\n        </mat-datepicker-toggle>\n      </mat-form-field>\n\n      <mat-form-field class=\"col-md-6 document-form-margin\" appearance=\"outline\" *ngIf=\"typeOfDocument?.basedOnEnable\">\n        <mat-label>Based on</mat-label>\n        <input matInput [(ngModel)]=\"supportingDocument.basedOn\" name=\"basedOn\" required>\n      </mat-form-field>\n\n      <mat-form-field class=\"col-md-6 document-form-margin\" appearance=\"outline\"\n        *ngIf=\"typeOfDocument?.dateOfLaunchEnable\">\n        <mat-label>Date of Launch</mat-label>\n        <input matInput placeholder=\"Date\" [matDatepicker]=\"dateOfLaunch\" readonly [min]=\"todayDate\"\n          [(ngModel)]=\"supportingDocument.dateOfLaunch\" name=\"dateOfLaunch\" [readonly]=\"true\">\n        <mat-datepicker-toggle matSuffix [for]=\"dateOfLaunch\">\n          <mat-datepicker color=\"warn\" #dateOfLaunch></mat-datepicker>\n        </mat-datepicker-toggle>\n        <!-- <input matInput [(ngModel)]=\"supportingDocument.dateOfLaunch\" formControlName=\"dateOfLaunch\" name=\"dateOfLaunch\"> -->\n      </mat-form-field>\n\n      <mat-form-field class=\"col-md-6 document-form-margin\" appearance=\"outline\" *ngIf=\"typeOfDocument?.remarksEnable\">\n        <mat-label>Remarks</mat-label>\n        <textarea matInput [(ngModel)]=\"supportingDocument.remarks\" name=\"remarks\"></textarea>\n      </mat-form-field>\n      <br>\n\n      <div class=\"col-md-12\" *ngIf=\"!isUpdate\">\n        <button mat-raised-button class=\"col-md-12 button-red\" [disabled]=\"supportingDocument.typeOfDocument === undefined ||\n              (typeOfDocument?.variantEnable && (supportingDocument.variant === undefined || supportingDocument.variant === '')) ||\n              (typeOfDocument?.expiresOnEnable && supportingDocument.expiresOn === undefined) ||\n              (typeOfDocument?.basedOnEnable && supportingDocument.basedOn === undefined) ||\n              (typeOfDocument?.dateOfLaunchEnable && supportingDocument.dateOfLaunch === undefined) ||\n              (typeOfDocument?.remarksEnable && supportingDocument.remarks === undefined)\n              \" (click)=\"addSupportiveDocument(supportingDocument)\">\n          <i class=\"material-icons add-document\">task_alt</i> ADD TO LIST\n        </button>\n      </div>\n      &nbsp;&nbsp;\n      <div class=\"col-md-12\" *ngIf=\"isUpdate\">\n        <button mat-raised-button class=\"col-md-12 button-red\"\n          (click)=\"modifyTypeOfDocument(supportingDocument,supportingDocumentIndex)\"\n          [disabled]=\"supportingDocument.typeOfDocument === undefined\">\n          <i class=\"material-icons add-document\">task_alt</i> Update\n        </button>\n      </div>\n      <div class=\"row\"><br></div>\n      <hr>\n    </div>\n\n    <div class=\"col-md-12\">\n      <div class=\"col-md-12 mat-elevation-z8 fields\" appearance=\"outline\" *ngIf=\"supportiveDocumentList?.length>0\">\n        <table mat-table [dataSource]=\"dataSource||supportiveDocumentList\" matSort>\n\n          <ng-container matColumnDef=\"id\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> TYPE OF DOCUMENT </th>\n            <td mat-cell *matCellDef=\"let element; let i = index\"> {{i}} </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"typeOfDocument\">\n            <th mat-header-cell *matHeaderCellDef> TYPE OF DOCUMENT </th>\n            <td mat-cell *matCellDef=\"let element\"> {{ element?.typeOfDocument?.description }} </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"input\">\n            <th mat-header-cell *matHeaderCellDef> INPUT </th>\n            <td mat-cell *matCellDef=\"let element\"> {{ element?.input==undefined ? 'N/A' : element?.input }}\n            </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"variant\">\n            <th mat-header-cell *matHeaderCellDef> VARIANT </th>\n            <td mat-cell *matCellDef=\"let element\"> {{ element?.variant==undefined ? 'N/A' : element?.variant }}\n            </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"expiresOn\">\n            <th mat-header-cell *matHeaderCellDef> EXPIRES ON </th>\n            <td mat-cell *matCellDef=\"let element\">\n              {{ element?.expiresOn==undefined ? 'N/A' : element?.expiresOn | date:'yyyy-MM-dd' }}\n            </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"basedOn\">\n            <th mat-header-cell *matHeaderCellDef> BASED ON </th>\n            <td mat-cell *matCellDef=\"let element\">\n              {{ element?.basedOn ==undefined ? 'N/A' : element?.basedOn | date:'yyyy-MM-dd' }}\n            </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"remarks\">\n            <th mat-header-cell *matHeaderCellDef> REMARKS </th>\n            <td mat-cell *matCellDef=\"let element\"> {{ element?.remarks==undefined ? 'N/A' : element?.remarks }}\n            </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"action\">\n            <th mat-header-cell *matHeaderCellDef> ACTIONS </th>\n            <td mat-cell *matCellDef=\"let element;let i = index\">\n\n              <!-- <span class=\"a-icon\">\n                    <i class=\"material-icons\" style=\"color:blue\" (click)=\"getTypeOfDocument(element, i)\">edit</i>\n                  </span> -->\n              <span class=\"a-icon\" [hidden]=\"s1Application?.hasOngoingAppeal\"\n                *ngIf=\"(s1Application?.internalStatus === 'S1_APPLICATION_VERIFIED_BY_ENCODER' || s1Application?.internalStatus == 'COMPLIANCE_DOCUMENT_VERIFIED_BY_ENCODER' || s1Application?.internalStatus === 'REVISION_VERIFIED_BY_ENCODER')\">\n                <i class=\"material-icons\" (click)=\"removeTypeOfDocument(i)\">delete</i>\n              </span>\n\n              <!-- <button >\n                      <i class=\"material-icons\" style=\"color:blue\">edit</i>\n                    </button> -->\n              <!-- <button (click)=\"removeTypeOfDocument(i)\">\n                      <i class=\"material-icons\">delete</i>\n                    </button> -->\n            </td>\n          </ng-container>\n\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n          <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n        </table>\n        <div class=\"no-record\" [hidden]=\"dataSource && dataSource?.data?.length > 0\"\n          *ngIf=\"supportiveDocumentList?.length==0\">\n          No supporting document found.\n        </div>\n        <!-- <mat-paginator [pageSizeOptions]=\"[10, 20, 50]\" showFirstLastButtons></mat-paginator> -->\n      </div>\n    </div>\n\n\n    <!-- </div> -->\n\n    <!-- FOR REVISION - REVISION LETTER -->\n    <!-- <div class=\"row\" *ngIf=\"(s1Application?.internalStatus==='S1_APPLICATION_REVIEWED'&&(s1Application?.decisionStatus=='APPROVED'||s1Application?.decisionStatus=='APPROVED W/ CAUTION'))\n      ||s1Application?.revisionLetterAttachmentReference\" [hidden]=\"s1Application?.appliedS2 && s1Application?.revisionLetterAttachmentReference === ''\">\n        <div class=\"col-md-12\">\n          <hr>\n        </div>\n        <h4>\n          <i class=\"material-icons\">bookmark</i> &nbsp;REVISION LETTER\n        </h4>\n        <br>\n        <div class=\"col-md-12\" appearance=\"outline\">\n          <mat-label\n            *ngIf=\"revisionLetterAttachment?.originalFilename||attachmentDocuments[1]?.revisionLetterAttachmentReference\">\n            Filename: </mat-label>\n          <input matInput\n            [value]=\"revisionLetterAttachment?.originalFilename||attachmentDocuments[1]?.revisionLetterAttachmentReference||attachmentDocuments[2]?.revisionLetterAttachmentReference\"\n            disabled *ngIf=\"revisionLetterAttachment?.originalFilename\"><br>\n\n          <input #revisionLetterFile class=\"file-upload\" type=\"file\" accept=\".pdf\"\n            (change)=\"selectFile($event, 'REVISION_LETTER')\"\n            [hidden]=\"(isAscUser && isDisableFieldOnUpdate)||revisionLetterAttachment?.originalFilename\"\n            *ngIf=\"attachmentDocuments?.length==0||s1Application?.internalStatus=='SAVED'||\n            ((s1Application?.internalStatus=='S1_APPLICATION_REVIEWED' || s1Application?.internalStatus=='COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER')\n              &&(s1Application?.decisionStatus=='INCOMPLETE'||s1Application?.decisionStatus=='APPROVED'||s1Application?.decisionStatus=='APPROVED W/ CAUTION'))\" />\n        </div>\n\n        <div class=\"row\"><br></div>\n        <div class=\"col-md-12\" appearance=\"outline\"\n          *ngIf=\"showRevisionLetterUploadButton==true||attachmentDocuments?.length>1||s1Application?.revisionLetterAttachmentReference\">\n          <button mat-raised-button class=\"button-red button-right\" (click)=\"viewDocument('REVISION_LETTER')\"\n            *ngIf=\"showRevisionLetterViewButton==true||s1Application?.revisionLetterAttachmentReference\">\n            <i class=\"material-icons add-document\">open_in_new</i> VIEW DOCUMENT\n          </button>\n          &nbsp; &nbsp;\n          <button mat-raised-button class=\"button-red button-right\" (click)=\"deleteUploadedFile('REVISION_LETTER')\"\n            [hidden]=\"!showRevisionLetterViewButton&&!s1Application?.revisionLetterAttachmentReference||(currentUser?.userRole?.name!='ROLE_APPLICANT'&&currentUser?.userRole?.name!='ROLE_ENCODER')\"\n            *ngIf=\"showRevisionLetterViewButton||s1Application?.revisionLetterAttachmentReference||(s1Application?.internalStatus=='SAVED'||\n            ((s1Application?.internalStatus=='S1_APPLICATION_REVIEWED' || s1Application?.internalStatus=='COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER')\n              &&(s1Application?.decisionStatus=='INCOMPLETE'||s1Application?.decisionStatus=='APPROVED'||s1Application?.decisionStatus=='APPROVED W/ CAUTION')))\">\n            <i class=\"material-icons add-document\">delete</i> DELETE ATTACHMENT\n          </button>\n          &nbsp; &nbsp;\n          <button mat-raised-button class=\"button-red button-right\" (click)=\"uploadDocument()\"\n            [disabled]=\"!safeURLRevisionLetter||!showRevisionLetterUploadButton\"\n            [hidden]=\"(isAscUser && isDisableFieldOnUpdate)\" *ngIf=\"showRevisionLetterUploadButton\">\n            <i class=\"material-icons add-document\">upload</i> UPLOAD\n          </button>\n        </div>\n        <div class=\"row\"><br></div>\n        <br>\n        <br>\n      </div> -->\n  </div>\n</span>\n\n\n<!--  //////////////////////////////////////// S2 APPLCIATION ///////////////////////////////////////////////////////////// -->\n\n<!-- FOR S2 APPLICATION -->\n<div class=\"row fields\" *ngIf=\"applicationStage === 'S2-APPLICATION'\">\n  <div class=\"row\">\n    <!-- FOR S1 APPLICATION -->\n    <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n      <mat-label>Ad Title</mat-label>\n      <input matInput [value]=\"s1Application.adTitle\" name=\"adTitle\"\n        [readonly]=\"isAscUser && isDisableFieldOnUpdate || applicationStage === 'S2-APPLICATION'\">\n    </mat-form-field>\n  </div>\n\n  <div class=\"row\">\n    <mat-form-field class=\"col-md-6\" appearance=\"outline\"\n      *ngIf=\"s1Application?.formType !== 'MULTIPLE'||(s1Application?.formType === 'MULTIPLE' && s1Application.multipleApplication)\">\n      <mat-label>Reference Code of Previously-Approved Material</mat-label>\n      <input matInput [value]=\"s1Application.previousRefCode\" name=\"previousRefCode\"\n        [readonly]=\"isAscUser && isDisableFieldOnUpdate || applicationStage === 'S2-APPLICATION'\">\n    </mat-form-field>\n\n    <mat-form-field class=\"col-md-6\" appearance=\"outline\">\n      <mat-label>Tag Line</mat-label>\n      <input matInput [value]=\"s1Application.tagLine\" name=\"tagLine\"\n        [readonly]=\"isAscUser && isDisableFieldOnUpdate || applicationStage === 'S2-APPLICATION'\">\n    </mat-form-field>\n  </div>\n</div>\n\n<!-- FOR S2 APPLICATION -->\n<div class=\"row fields\" *ngIf=\"applicationStage === 'S2-APPLICATION'\">\n  <h4>\n    <mat-icon>bookmark</mat-icon> &nbsp;TYPE OF MEDIUM\n  </h4>\n\n  <mat-radio-group class=\"col-md-12\" aria-label=\"Select an option\" [value]=\"s1Application.refTypeOfMedium\"\n    [disabled]=\"true\">\n    <mat-radio-button value=\"SINGLE MEDIA\" [checked]=\"s2Application?.applicationForm?.refTypeOfMedium=='SINGLE MEDIA'\">\n      SINGLE MEDIA\n    </mat-radio-button>\n    &nbsp;&nbsp;\n    <mat-radio-button value=\"MULTIMEDIA\"\n      [checked]=\"selectMultimedia||s1Application.refTypeOfMedium=='MULTIMEDIA'||s1Application.refTypeOfMedium=='MULTIMEDIA-STATIC'||s1Application.refTypeOfMedium=='MULTIMEDIA-MOVING'\">\n      MULTIMEDIA</mat-radio-button>\n    <br><br>\n  </mat-radio-group>\n  <mat-form-field class=\"col-md-11\" appearance=\"outline\" *ngIf=\"s1Application.refTypeOfMedium=='SINGLE MEDIA'\">\n    <mat-label>Single Media</mat-label>\n    <input matInput name=\"singleMedia\" [value]=\"applicationSingleMedia?.mediumExecution?.typeOfMedium?.description\"\n      [readonly]=\"true\">\n  </mat-form-field>\n\n  <div *ngIf=\"s1Application.refTypeOfMedium=='SINGLE MEDIA'\">\n    <mat-form-field class=\"col-md-4 media-info\" appearance=\"outline\"\n      *ngIf=\"typeOfMedium?.executionEnable==true || applicationSingleMedia?.mediumExecution || applicationSingleMedia?.mediumExecution?.typeOfExecution?.typeOfExecution === 'NO EXECUTION'\">\n      <mat-label>Execution</mat-label>\n      <input matInput name=\"execution\"\n        [value]=\"applicationSingleMedia?.mediumExecution?.typeOfExecution?.typeOfExecution\" [readonly]=\"true\">\n    </mat-form-field>\n\n    <mat-form-field class=\"col-md-4 media-info\" appearance=\"outline\"\n      *ngIf=\"typeOfMedium?.languageEnable==true||applicationSingleMedia?.dialect\">\n      <mat-label>Language/Dialect</mat-label>\n      <input matInput name=\"language\" [value]=\"applicationSingleMedia?.dialect?.dialect\"\n        [readonly]=\"isAscUser && isDisableFieldOnUpdate\">\n    </mat-form-field>\n\n    <mat-form-field class=\"col-md-4 media-info\" appearance=\"outline\"\n      *ngIf=\"typeOfMedium?.othersEnable==true||applicationSingleMedia?.others\">\n      <mat-label>Others</mat-label>\n      <input matInput name=\"others\" [value]=\"applicationSingleMedia?.others\"\n        [readonly]=\"isAscUser && isDisableFieldOnUpdate\">\n    </mat-form-field>\n\n    <mat-form-field class=\"col-md-3 media-info\" appearance=\"outline\"\n      *ngIf=\"typeOfMedium?.sizeLengthEnable==true||typeOfMedium?.lengthEnable==true||applicationSingleMedia?.sizeLength\">\n      <mat-label>Size Length (in seconds)</mat-label>\n      <input matInput name=\"sizeLength\"\n        [value]=\"applicationSingleMedia?.sizeLength ? applicationSingleMedia?.sizeLength : 0\" [readonly]=\"true\">\n    </mat-form-field>\n\n    <mat-form-field class=\"col-md-4 media-info\" appearance=\"outline\"\n      *ngIf=\"typeOfMedium?.widthEnable==true||applicationSingleMedia?.width\">\n      <mat-label>Width</mat-label>\n      <input matInput name=\"width\" [value]=\"applicationSingleMedia?.width ? applicationSingleMedia?.width : 0\"\n        [readonly]=\"isAscUser && isDisableFieldOnUpdate\">\n    </mat-form-field>\n  </div>\n\n  <div\n    *ngIf=\"selectMultimedia==true||s1Application.refTypeOfMedium=='MULTIMEDIA-MOVING'||s1Application.refTypeOfMedium=='MULTIMEDIA-STATIC'\">\n    <mat-radio-group class=\"col-md-12\" aria-label=\"Select an option\" [value]=\"s1Application.refTypeOfMedium\"\n      [disabled]=\"true\">\n      <mat-radio-button value=\"MULTIMEDIA-MOVING\" [checked]=\"s1Application.refTypeOfMedium=='MULTIMEDIA-MOVING'\">\n        MULTIMEDIA-MOVING\n      </mat-radio-button>\n      &nbsp;&nbsp;\n      <mat-radio-button value=\"MULTIMEDIA-STATIC\" [checked]=\"s1Application.refTypeOfMedium=='MULTIMEDIA-STATIC'\">\n        MULTIMEDIA-STATIC(MAX OF 5 LAYOUT)</mat-radio-button>\n    </mat-radio-group>\n\n    <br><br>\n    <div class=\"row\"\n      *ngIf=\"s1Application?.refTypeOfMedium=='MULTIMEDIA-MOVING'||s1Application?.refTypeOfMedium=='MULTIMEDIA-STATIC'||s1Application?.refTypeOfMedium=='MULTIMEDIA'\">\n      <!-- *ngIf=\"multimediaStaticList?.length==0&&multimediaMovingList?.length==0\"> -->\n      <div class=\"col-md-12\" appearance=\"outline\">\n        <span *ngFor=\"let i of typeOfMediumList; let mt = index\">\n          <table>\n            <tr>\n              <td>\n                <!-- <mat-checkbox [checked]=\"selectedMultimediaList.includes(i?.description)\"\n                    [disabled]=\"true\">\n                    {{i?.description}}</mat-checkbox> -->\n                <mat-checkbox [checked]=\"selectedMultimediaStringList.includes(i?.description)\" [disabled]=\"true\">\n                  {{i?.description}}\n                </mat-checkbox>\n              </td>\n              <td>\n                <!--  -->\n                <input type=\"text\" class=\"form-control\" [value]=\"i.sizeLength ? i.sizeLength : 0\" name=\"sizeLength\"\n                  maxlength=\"4\" placeholder=\"Size/Length (in seconds)\"\n                  *ngIf=\"s1Application?.id==undefined&&(s1Application?.refTypeOfMedium=='MULTIMEDIA-STATIC'|| s1Application?.refTypeOfMedium=='MULTIMEDIA-MOVING')\">\n\n                <!-- static -->\n                <!-- <input type=\"text\" class=\"form-control\" [value]=\" i.multimediaSize ? i.multimediaSize : '' \"\n                    name=\"sizeLength\" maxlength=\"200\" placeholder=\"Size\"\n                    *ngIf=\"s1Application?.id!=undefined&&s1Application?.refTypeOfMedium=='MULTIMEDIA-STATIC'\"\n                    [disabled]=\"true\"> -->\n\n                <!-- moving -->\n                <!-- <input type=\"text\" class=\"form-control\" [value]=\" i.multimediaLength ? i.multimediaLength : '' \"\n                    name=\"sizeLength\" maxlength=\"200\" placeholder=\"Length\"\n                    *ngIf=\"s1Application?.id!=undefined&&s1Application?.refTypeOfMedium=='MULTIMEDIA-MOVING'\"\n                    [disabled]=\"true\"> -->\n\n                <input type=\"text\" class=\"form-control\" [value]=\"i.sizeLength ? i.sizeLength : 0\"\n                  *ngIf=\"s1Application?.id!==undefined && (s1Application?.refTypeOfMedium === 'MULTIMEDIA-STATIC' || s1Application?.refTypeOfMedium === 'MULTIMEDIA-MOVING') \"\n                  name=\"sizeLength\" maxlength=\"4\" placeholder=\"Size/Length (in seconds)\" [disabled]=\"true\">\n              </td>\n            </tr>\n          </table><br>\n        </span>\n      </div>\n    </div>\n\n    <div class=\"row\"><br></div>\n\n\n  </div>\n  <br><br>\n</div>\n\n<!-- FOR S2 APPLICATION  MAIN DOC-->\n<div *ngIf=\"applicationStage === 'S2-APPLICATION'\">\n  <span class=\"row fields\">\n\n    <app-attachment-document [originalAttachmentDocuments]=\"originalAttachmentDocuments\"\n      [revisionAttachmentDocuments]=\"revisionAttachmentDocuments\"\n      [complianceAttachmentDocuments]=\"complianceAttachmentDocuments\" [s1Application]=\"s1Application\"\n      [labelMainDocument]=\"labelMainDocument\" [isAscUser]=\"isAscUser\" [isDisableFieldOnUpdate]=\"isDisableFieldOnUpdate\"\n      [applicationStage]=\"applicationStage\"></app-attachment-document>\n\n    <!-- [showMainDocumentUploadButton]=\"showMainDocumentUploadButton\" [showMainDocumentViewButton]=\"showMainDocumentViewButton\" [safeURLMainDoc]=\"safeURLMainDoc\"\n      [showSupportDocumentFrame]=\"showSupportDocumentFrame\" [showSupportiveDocumentUploadButton]=\"showSupportiveDocumentUploadButton\" [showSupportiveDocumentViewButton]=\"showSupportiveDocumentViewButton\" [safeURLSupportDoc]=\"safeURLSupportDoc\"\n      [revisionLetterAttachment]=\"revisionLetterAttachment\" [showRevisionLetterUploadButton]=\"showRevisionLetterUploadButton\" [showRevisionLetterViewButton]=\"showRevisionLetterViewButton\" [safeURLRevisionLetter]=\"safeURLRevisionLetter\" -->\n  </span>\n</div>\n\n<!-- </form> -->","import { Component, Inject, OnInit, Optional, ViewChild } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTable, MatTableDataSource } from '@angular/material/table';\nimport { PerformanceMetrics } from '@models';\nimport { ApiService } from '@services';\nimport { ENDPOINTS } from '@shared';\n\n@Component({\n  selector: 'app-performance-metrics',\n  templateUrl: './performance-metrics.component.html',\n  styleUrls: ['./performance-metrics.component.scss']\n})\nexport class PerformanceMetricsComponent implements OnInit {\n  @ViewChild(MatPaginator, { static: false }) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: false }) sort: MatSort;\n  @ViewChild(MatTable, { static: false }) table: MatTable<PerformanceMetrics>;\n\n  dataSource: MatTableDataSource<PerformanceMetrics>;\n  displayedColumns: string[] = [\n    // 'referenceCode',\n    // 'appFormReference',\n    'movement',\n    'lastUpdate',\n    'duration',\n    'actionBy'\n  ];\n\n  performanceMetricsList = [];\n  referenceCode: any;\n\n  constructor(\n    private apiService: ApiService,\n    @Optional() public dialogRef: MatDialogRef<PerformanceMetricsComponent>,\n    @Optional() @Inject(MAT_DIALOG_DATA) public data: any\n  ) {\n    if (data) {\n      this.getPerformanceMatricsList(data.appFormReference);\n      this.referenceCode = data.referenceCode;\n    }\n  }\n\n  ngOnInit(): void {\n  }\n\n  getPerformanceMatricsList(appFormReference) {\n    this.apiService.findByParam(ENDPOINTS.performanceMetrics, appFormReference).subscribe((res: any) => {\n      this.performanceMetricsList = res;\n      this.dataSource = new MatTableDataSource<PerformanceMetrics>(this.performanceMetricsList);\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n    });\n  }\n\n  closeDialog() {\n    this.dialogRef.close();\n  }\n\n}\n","<button mat-raised-button class=\"button-left button-red\">\n    <span class=\"material-icons\">new_releases</span> {{referenceCode}} </button>\n<button mat-raised-button class=\"button-right button-red\" (click)=\"closeDialog()\">\n    <i class=\"material-icons color__white\">close</i> CLOSE\n</button>\n<br>\n<div class=\"mat-elevation-z8\">\n    <table mat-table [dataSource]=\"dataSource\" matSort>\n\n        <!-- <ng-container matColumnDef=\"referenceCode\">\n            <th mat-header-cell *matHeaderCellDef> Reference Code </th>\n            <td mat-cell *matCellDef=\"let element\">\n                {{ element?.referenceCode }}\n            </td>\n        </ng-container> -->\n\n        <ng-container matColumnDef=\"appFormReference\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Application Form Reference </th>\n            <td mat-cell *matCellDef=\"let element\">\n                {{ element?.appFormReference }}\n            </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"movement\">\n            <th mat-header-cell *matHeaderCellDef> Movement </th>\n            <td mat-cell *matCellDef=\"let element\">\n                {{ element?.movement.replaceAll('_', ' ') }}\n            </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"lastUpdate\">\n            <th mat-header-cell *matHeaderCellDef> Date of Action </th>\n            <td mat-cell *matCellDef=\"let element\">\n                {{ element?.previousDateTime | date:'MM/dd/yyyy hh:mm a' }}\n            </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"duration\">\n            <th mat-header-cell *matHeaderCellDef> Duration </th>\n            <td mat-cell *matCellDef=\"let element\">\n                {{ element?.duration }}\n            </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"actionBy\">\n            <th mat-header-cell *matHeaderCellDef> Action By </th>\n            <td mat-cell *matCellDef=\"let element\">\n                {{ element?.actionBy }}\n            </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n    <div class=\"no-record\" [hidden]=\"dataSource && dataSource?.data?.length > 0\">\n        No record found.\n    </div>\n    <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons></mat-paginator>\n\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ReassignmentRoutingModule } from './reassignment-routing.module';\nimport { ReassignmentComponent } from './reassignment.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { AngularMaterialModule } from '@shared';\nimport { FragmentsModule } from 'app/modules/fragments/fragments.module';\n\n\n@NgModule({\n  declarations: [ReassignmentComponent],\n  imports: [\n    CommonModule,\n    ReassignmentRoutingModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    AngularMaterialModule,\n    FragmentsModule,\n  ]\n})\nexport class ReassignmentModule { }\n","export * from './company.module';\nexport * from './add-company/add-company.component';\nexport * from './add-company/add-company.module';\nexport * from './list-company/list-company.component';\nexport * from './list-company/list-company.module';"],"sourceRoot":"webpack:///"}