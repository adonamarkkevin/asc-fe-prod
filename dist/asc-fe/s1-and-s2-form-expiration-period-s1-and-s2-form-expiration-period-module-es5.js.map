{"version":3,"sources":["webpack:///src/app/modules/pages/maintenance/s1-and-s2-form-expiration-period/s1-and-s2-form-expiration-period.component.html","webpack:///src/app/modules/fragments/index.ts","webpack:///src/app/modules/pages/maintenance/s1-and-s2-form-expiration-period/s1-and-s2-form-expiration-period.module.ts","webpack:///src/app/modules/pages/maintenance/s1-and-s2-form-expiration-period/s1-and-s2-form-expiration-period.component.ts","webpack:///src/app/modules/pages/maintenance/s1-and-s2-form-expiration-period/s1-and-s2-form-expiration-period.component.scss","webpack:///src/app/modules/pages/maintenance/s1-and-s2-form-expiration-period/s1-and-s2-form-expiration-period-routing.module.ts"],"names":["S1AndS2FormExpirationPeriodModule","declarations","imports","S1AndS2FormExpirationPeriodComponent","apiService","formBuilder","sweetAlertService","validateFieldService","displayedColumns","statusList","s1AndS2FormExpirationPeriod","s1AndS2FormExpirationPeriodList","getList","setFormValidator","findAll","s1AndS2FormExpirationPeriods","subscribe","res","responseData","data","dataSource","paginator","formListComponent","sort","save","undefined","success","err","Number","s1ExpNoOfYears","s2ExpNoOfYears","error","message","resetFormValidator","findById","idForUpdate","console","log","update","s1AndS2FormExpirationPeriodForm","group","required","markAsUntouched","markAsPristine","fire","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","value","deleteById","id","customSuccessMessage","selector","template","routes","path","component","S1AndS2FormExpirationPeriodRoutingModule","forChild","exports"],"mappings":"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","file":"s1-and-s2-form-expiration-period-s1-and-s2-form-expiration-period-module-es5.js","sourcesContent":["export default \"<form>\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12 title\\\">\\r\\n                <mat-label>\\r\\n                    S1 and S2 Form Expiration Period\\r\\n                </mat-label>\\r\\n            </div>\\r\\n        </div>\\r\\n        <hr>\\r\\n\\r\\n        <form [formGroup]=\\\"s1AndS2FormExpirationPeriodForm\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\">\\r\\n                    <mat-label>S1 Expiration No Of Years <span class=\\\"required-field\\\">*</span></mat-label>\\r\\n                    <input matInput [(ngModel)]=\\\"s1AndS2FormExpirationPeriod.s1ExpNoOfYears\\\" name=\\\"s1ExpNoOfYears\\\"\\r\\n                        (keydown)=\\\"validateFieldService.numbersOnly($event)\\\" formControlName=\\\"s1ExpNoOfYears\\\">\\r\\n                </mat-form-field>\\r\\n\\r\\n                <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\">\\r\\n                    <mat-label>S2 Expiration No Of Years <span class=\\\"required-field\\\">*</span></mat-label>\\r\\n                    <input matInput [(ngModel)]=\\\"s1AndS2FormExpirationPeriod.s2ExpNoOfYears\\\" name=\\\"s2ExpNoOfYears\\\"\\r\\n                        (keydown)=\\\"validateFieldService.numbersOnly($event)\\\" formControlName=\\\"s2ExpNoOfYears\\\">\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n        </form>\\r\\n\\r\\n        <app-form-action-buttons [childObject]=\\\"s1AndS2FormExpirationPeriod\\\"\\r\\n            [childForm]=\\\"s1AndS2FormExpirationPeriodForm\\\" (saveFunction)=\\\"save()\\\" (updateFunction)=\\\"update()\\\"\\r\\n            (cancelFunction)=\\\"resetFormValidator()\\\" (deleteFunction)=\\\"delete()\\\"></app-form-action-buttons>\\r\\n        <br>\\r\\n        <app-form-list [dataSource]=\\\"dataSource\\\" [displayedColumns]=\\\"displayedColumns\\\"\\r\\n            (selectInListFunction)=\\\"getS1AndS2FormExpirationPeriod()\\\"></app-form-list>\\r\\n\\r\\n    </div>\\r\\n</form>\";","export * from './form-action-buttons/form-action-buttons.component';\r\nexport * from './form-list/form-list.component';","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { S1AndS2FormExpirationPeriodRoutingModule } from './s1-and-s2-form-expiration-period-routing.module';\r\nimport { S1AndS2FormExpirationPeriodComponent } from './s1-and-s2-form-expiration-period.component';\r\nimport { FragmentsModule } from 'app/modules/fragments/fragments.module';\r\nimport { AngularMaterialModule } from '@shared';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    S1AndS2FormExpirationPeriodComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    S1AndS2FormExpirationPeriodRoutingModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule,\r\n    AngularMaterialModule,\r\n    FragmentsModule,\r\n  ]\r\n})\r\nexport class S1AndS2FormExpirationPeriodModule { }\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { FormListComponent } from '@fragments';\r\nimport { ApiService, SweetAlertService } from '@services';\r\nimport { ENDPOINTS, STATUSES } from '@shared';\r\nimport { S1AndS2FormExpirationPeriod } from 'app/core/models/s1-and-s2-form-expiration-period.model';\r\nimport { ValidateFieldService } from 'app/core/services/validate-field.service';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-s1-and-s2-form-expiration-period',\r\n  templateUrl: './s1-and-s2-form-expiration-period.component.html',\r\n  styleUrls: ['./s1-and-s2-form-expiration-period.component.scss']\r\n})\r\nexport class S1AndS2FormExpirationPeriodComponent implements OnInit {\r\n\r\n  @ViewChild(FormListComponent) formListComponent: FormListComponent;\r\n  dataSource: MatTableDataSource<S1AndS2FormExpirationPeriod>;\r\n  displayedColumns: string[] = ['s1ExpNoOfYears', 's2ExpNoOfYears'];\r\n  statusList = [...STATUSES];\r\n\r\n  s1AndS2FormExpirationPeriod = new S1AndS2FormExpirationPeriod();\r\n  s1AndS2FormExpirationPeriodList = [];\r\n\r\n  s1AndS2FormExpirationPeriodForm: FormGroup;\r\n\r\n\r\n  constructor(\r\n    private apiService: ApiService,\r\n    private formBuilder: FormBuilder,\r\n    private sweetAlertService: SweetAlertService,\r\n    public validateFieldService: ValidateFieldService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.getList();\r\n    this.setFormValidator();\r\n  }\r\n\r\n  getList(): void {\r\n    this.apiService.findAll(ENDPOINTS.s1AndS2FormExpirationPeriods).subscribe((res: any) => {\r\n      this.s1AndS2FormExpirationPeriodList = res.responseData.data;\r\n      this.dataSource = new MatTableDataSource<S1AndS2FormExpirationPeriod>(res.responseData.data);\r\n      this.dataSource.paginator = this.formListComponent.paginator;\r\n      this.dataSource.sort = this.formListComponent.sort;\r\n    });\r\n  }\r\n\r\n  save(): void {\r\n    this.apiService.save(ENDPOINTS.s1AndS2FormExpirationPeriods, this.s1AndS2FormExpirationPeriod).subscribe(\r\n      (res: any) => {\r\n        if (res !== undefined) {\r\n          this.sweetAlertService.success(res);\r\n        }\r\n      }, (err: any) => {\r\n        if (!Number(this.s1AndS2FormExpirationPeriod.s1ExpNoOfYears)\r\n          || !Number(this.s1AndS2FormExpirationPeriod.s2ExpNoOfYears)) {\r\n          err.error.message = 'Please enter numeric values only';\r\n        } else {\r\n          err.error.message = 'Default expiration values have already been set. Select the entry to update the record';\r\n        }\r\n        this.sweetAlertService.error(err);\r\n      }, () => {\r\n        this.resetFormValidator(),\r\n          this.getList();\r\n      }\r\n    )\r\n  }\r\n\r\n  getS1AndS2FormExpirationPeriod(): void {\r\n    this.apiService.findById(ENDPOINTS.s1AndS2FormExpirationPeriods, this.formListComponent.idForUpdate).subscribe((res: any) => {\r\n      if (res) {\r\n        this.s1AndS2FormExpirationPeriod = res.responseData.data;\r\n        console.log(res);\r\n\r\n      }\r\n    });\r\n  }\r\n\r\n  update(): void {\r\n    this.apiService.update(ENDPOINTS.s1AndS2FormExpirationPeriods, this.s1AndS2FormExpirationPeriod).subscribe(\r\n      (res: any) => {\r\n        if (res !== undefined) {\r\n          this.sweetAlertService.success(res);\r\n        }\r\n      }, (err: any) => {\r\n        this.sweetAlertService.error(err);\r\n      }, () => {\r\n        this.resetFormValidator()\r\n        this.getList();\r\n      });\r\n  }\r\n\r\n  setFormValidator(): void {\r\n    this.s1AndS2FormExpirationPeriodForm = this.formBuilder.group({\r\n      s1ExpNoOfYears: ['', Validators.required],\r\n      s2ExpNoOfYears: ['', Validators.required],\r\n    });\r\n  }\r\n\r\n  resetFormValidator(): void {\r\n    this.s1AndS2FormExpirationPeriod = new S1AndS2FormExpirationPeriod();\r\n    this.s1AndS2FormExpirationPeriodForm.markAsUntouched();\r\n    this.s1AndS2FormExpirationPeriodForm.markAsPristine();\r\n  }\r\n\r\n  delete() {\r\n    Swal.fire({\r\n      text: 'Are you sure you want to delete this S1 and S2 form expiration period?',\r\n      icon: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Confirm'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.apiService.deleteById(ENDPOINTS.s1AndS2FormExpirationPeriods, this.s1AndS2FormExpirationPeriod.id).subscribe(\r\n          () => {\r\n            this.sweetAlertService.customSuccessMessage('S1 and S2 form expiration period successfully deleted.');\r\n            this.resetFormValidator();\r\n            this.getList();\r\n          }\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcGFnZXMvbWFpbnRlbmFuY2UvczEtYW5kLXMyLWZvcm0tZXhwaXJhdGlvbi1wZXJpb2QvczEtYW5kLXMyLWZvcm0tZXhwaXJhdGlvbi1wZXJpb2QuY29tcG9uZW50LnNjc3MifQ== */\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { S1AndS2FormExpirationPeriodComponent } from './s1-and-s2-form-expiration-period.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: S1AndS2FormExpirationPeriodComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class S1AndS2FormExpirationPeriodRoutingModule { }\r\n"]}