<<<<<<< HEAD
{"version":3,"sources":["webpack:///src/app/modules/fragments/index.ts","webpack:///src/app/modules/pages/maintenance/s1-and-s2-form-expiration-period/s1-and-s2-form-expiration-period.module.ts","webpack:///src/app/modules/pages/maintenance/s1-and-s2-form-expiration-period/s1-and-s2-form-expiration-period.component.ts","webpack:///src/app/modules/pages/maintenance/s1-and-s2-form-expiration-period/s1-and-s2-form-expiration-period.component.html","webpack:///src/app/modules/pages/maintenance/s1-and-s2-form-expiration-period/s1-and-s2-form-expiration-period-routing.module.ts"],"names":["S1AndS2FormExpirationPeriodModule","S1AndS2FormExpirationPeriodComponent","apiService","formBuilder","sweetAlertService","validateFieldService","displayedColumns","statusList","s1AndS2FormExpirationPeriod","s1AndS2FormExpirationPeriodList","getList","setFormValidator","findAll","s1AndS2FormExpirationPeriods","subscribe","res","responseData","data","dataSource","paginator","formListComponent","sort","save","undefined","success","err","Number","s1ExpNoOfYears","s2ExpNoOfYears","error","message","resetFormValidator","findById","idForUpdate","console","log","update","s1AndS2FormExpirationPeriodForm","group","required","markAsUntouched","markAsPristine","fire","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","value","deleteById","id","customSuccessMessage","getS1AndS2FormExpirationPeriod","routes","path","component","S1AndS2FormExpirationPeriodRoutingModule","forChild"],"mappings":"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","file":"s1-and-s2-form-expiration-period-s1-and-s2-form-expiration-period-module-es5.js","sourcesContent":["export * from './form-action-buttons/form-action-buttons.component';\r\nexport * from './form-list/form-list.component';","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { S1AndS2FormExpirationPeriodRoutingModule } from './s1-and-s2-form-expiration-period-routing.module';\r\nimport { S1AndS2FormExpirationPeriodComponent } from './s1-and-s2-form-expiration-period.component';\r\nimport { FragmentsModule } from 'app/modules/fragments/fragments.module';\r\nimport { AngularMaterialModule } from '@shared';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    S1AndS2FormExpirationPeriodComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    S1AndS2FormExpirationPeriodRoutingModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule,\r\n    AngularMaterialModule,\r\n    FragmentsModule,\r\n  ]\r\n})\r\nexport class S1AndS2FormExpirationPeriodModule { }\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { FormListComponent } from '@fragments';\r\nimport { ApiService, SweetAlertService } from '@services';\r\nimport { ENDPOINTS, STATUSES } from '@shared';\r\nimport { S1AndS2FormExpirationPeriod } from 'app/core/models/s1-and-s2-form-expiration-period.model';\r\nimport { ValidateFieldService } from 'app/core/services/validate-field.service';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-s1-and-s2-form-expiration-period',\r\n  templateUrl: './s1-and-s2-form-expiration-period.component.html',\r\n  styleUrls: ['./s1-and-s2-form-expiration-period.component.scss']\r\n})\r\nexport class S1AndS2FormExpirationPeriodComponent implements OnInit {\r\n\r\n  @ViewChild(FormListComponent) formListComponent: FormListComponent;\r\n  dataSource: MatTableDataSource<S1AndS2FormExpirationPeriod>;\r\n  displayedColumns: string[] = ['s1ExpNoOfYears', 's2ExpNoOfYears'];\r\n  statusList = [...STATUSES];\r\n\r\n  s1AndS2FormExpirationPeriod = new S1AndS2FormExpirationPeriod();\r\n  s1AndS2FormExpirationPeriodList = [];\r\n\r\n  s1AndS2FormExpirationPeriodForm: FormGroup;\r\n\r\n\r\n  constructor(\r\n    private apiService: ApiService,\r\n    private formBuilder: FormBuilder,\r\n    private sweetAlertService: SweetAlertService,\r\n    public validateFieldService: ValidateFieldService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.getList();\r\n    this.setFormValidator();\r\n  }\r\n\r\n  getList(): void {\r\n    this.apiService.findAll(ENDPOINTS.s1AndS2FormExpirationPeriods).subscribe((res: any) => {\r\n      this.s1AndS2FormExpirationPeriodList = res.responseData.data;\r\n      this.dataSource = new MatTableDataSource<S1AndS2FormExpirationPeriod>(res.responseData.data);\r\n      this.dataSource.paginator = this.formListComponent.paginator;\r\n      this.dataSource.sort = this.formListComponent.sort;\r\n    });\r\n  }\r\n\r\n  save(): void {\r\n    this.apiService.save(ENDPOINTS.s1AndS2FormExpirationPeriods, this.s1AndS2FormExpirationPeriod).subscribe(\r\n      (res: any) => {\r\n        if (res !== undefined) {\r\n          this.sweetAlertService.success(res);\r\n        }\r\n      }, (err: any) => {\r\n        if (!Number(this.s1AndS2FormExpirationPeriod.s1ExpNoOfYears)\r\n          || !Number(this.s1AndS2FormExpirationPeriod.s2ExpNoOfYears)) {\r\n          err.error.message = 'Please enter numeric values only';\r\n        } else {\r\n          err.error.message = 'Default expiration values have already been set. Select the entry to update the record';\r\n        }\r\n        this.sweetAlertService.error(err);\r\n      }, () => {\r\n        this.resetFormValidator(),\r\n          this.getList();\r\n      }\r\n    )\r\n  }\r\n\r\n  getS1AndS2FormExpirationPeriod(): void {\r\n    this.apiService.findById(ENDPOINTS.s1AndS2FormExpirationPeriods, this.formListComponent.idForUpdate).subscribe((res: any) => {\r\n      if (res) {\r\n        this.s1AndS2FormExpirationPeriod = res.responseData.data;\r\n        console.log(res);\r\n\r\n      }\r\n    });\r\n  }\r\n\r\n  update(): void {\r\n    this.apiService.update(ENDPOINTS.s1AndS2FormExpirationPeriods, this.s1AndS2FormExpirationPeriod).subscribe(\r\n      (res: any) => {\r\n        if (res !== undefined) {\r\n          this.sweetAlertService.success(res);\r\n        }\r\n      }, (err: any) => {\r\n        this.sweetAlertService.error(err);\r\n      }, () => {\r\n        this.resetFormValidator()\r\n        this.getList();\r\n      });\r\n  }\r\n\r\n  setFormValidator(): void {\r\n    this.s1AndS2FormExpirationPeriodForm = this.formBuilder.group({\r\n      s1ExpNoOfYears: ['', Validators.required],\r\n      s2ExpNoOfYears: ['', Validators.required],\r\n    });\r\n  }\r\n\r\n  resetFormValidator(): void {\r\n    this.s1AndS2FormExpirationPeriod = new S1AndS2FormExpirationPeriod();\r\n    this.s1AndS2FormExpirationPeriodForm.markAsUntouched();\r\n    this.s1AndS2FormExpirationPeriodForm.markAsPristine();\r\n  }\r\n\r\n  delete() {\r\n    Swal.fire({\r\n      text: 'Are you sure you want to delete this S1 and S2 form expiration period?',\r\n      icon: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Confirm'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.apiService.deleteById(ENDPOINTS.s1AndS2FormExpirationPeriods, this.s1AndS2FormExpirationPeriod.id).subscribe(\r\n          () => {\r\n            this.sweetAlertService.customSuccessMessage('S1 and S2 form expiration period successfully deleted.');\r\n            this.resetFormValidator();\r\n            this.getList();\r\n          }\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<form>\r\n    <div class=\"container-fluid\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-12 title\">\r\n                <mat-label>\r\n                    S1 and S2 Form Expiration Period\r\n                </mat-label>\r\n            </div>\r\n        </div>\r\n        <hr>\r\n\r\n        <form [formGroup]=\"s1AndS2FormExpirationPeriodForm\">\r\n            <div class=\"row\">\r\n                <mat-form-field class=\"col-md-6\" appearance=\"outline\">\r\n                    <mat-label>S1 Expiration No Of Years <span class=\"required-field\">*</span></mat-label>\r\n                    <input matInput [(ngModel)]=\"s1AndS2FormExpirationPeriod.s1ExpNoOfYears\" name=\"s1ExpNoOfYears\"\r\n                        (keydown)=\"validateFieldService.numbersOnly($event)\" formControlName=\"s1ExpNoOfYears\">\r\n                </mat-form-field>\r\n\r\n                <mat-form-field class=\"col-md-6\" appearance=\"outline\">\r\n                    <mat-label>S2 Expiration No Of Years <span class=\"required-field\">*</span></mat-label>\r\n                    <input matInput [(ngModel)]=\"s1AndS2FormExpirationPeriod.s2ExpNoOfYears\" name=\"s2ExpNoOfYears\"\r\n                        (keydown)=\"validateFieldService.numbersOnly($event)\" formControlName=\"s2ExpNoOfYears\">\r\n                </mat-form-field>\r\n            </div>\r\n        </form>\r\n\r\n        <app-form-action-buttons [childObject]=\"s1AndS2FormExpirationPeriod\"\r\n            [childForm]=\"s1AndS2FormExpirationPeriodForm\" (saveFunction)=\"save()\" (updateFunction)=\"update()\"\r\n            (cancelFunction)=\"resetFormValidator()\" (deleteFunction)=\"delete()\"></app-form-action-buttons>\r\n        <br>\r\n        <app-form-list [dataSource]=\"dataSource\" [displayedColumns]=\"displayedColumns\"\r\n            (selectInListFunction)=\"getS1AndS2FormExpirationPeriod()\"></app-form-list>\r\n\r\n    </div>\r\n</form>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { S1AndS2FormExpirationPeriodComponent } from './s1-and-s2-form-expiration-period.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: S1AndS2FormExpirationPeriodComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class S1AndS2FormExpirationPeriodRoutingModule { }\r\n"]}
=======
{"version":3,"sources":["webpack:///src/app/modules/fragments/index.ts","webpack:///src/app/modules/pages/maintenance/s1-and-s2-form-expiration-period/s1-and-s2-form-expiration-period.module.ts","webpack:///src/app/modules/pages/maintenance/s1-and-s2-form-expiration-period/s1-and-s2-form-expiration-period.component.ts","webpack:///src/app/modules/pages/maintenance/s1-and-s2-form-expiration-period/s1-and-s2-form-expiration-period.component.html","webpack:///src/app/modules/pages/maintenance/s1-and-s2-form-expiration-period/s1-and-s2-form-expiration-period-routing.module.ts"],"names":["S1AndS2FormExpirationPeriodModule","S1AndS2FormExpirationPeriodComponent","apiService","formBuilder","sweetAlertService","validateFieldService","displayedColumns","statusList","s1AndS2FormExpirationPeriod","s1AndS2FormExpirationPeriodList","getList","setFormValidator","findAll","s1AndS2FormExpirationPeriods","subscribe","res","responseData","data","dataSource","paginator","formListComponent","sort","save","undefined","success","err","Number","s1ExpNoOfYears","s2ExpNoOfYears","error","message","resetFormValidator","findById","idForUpdate","console","log","update","s1AndS2FormExpirationPeriodForm","group","required","markAsUntouched","markAsPristine","fire","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","value","deleteById","id","customSuccessMessage","getS1AndS2FormExpirationPeriod","routes","path","component","S1AndS2FormExpirationPeriodRoutingModule","forChild"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAAA;MAAA;;;MAAA;MAAA;MAAA;MAAA;;;MAAA;QAAA;MAAA;MAAA;;;MAAA;MAAA;MAAA;MAAA;;;MAAA;QAAA;MAAA;;;;;;;;;;;;;;;;;MCAA;MAAA;;;MAAA;QAAA;MAAA;MAAA;;;MAAA;MAAA;MAAA;MAAA;;;MAAA;MAAA;MAAA;MAAA;;;MAAA;MAAA;MAAA;MAAA;;;MAAA;MAAA;MAAA;MAAA;;;MAAA;MAAA;MAAA;MAAA;;;MAAA;MAAA;MAAA;MAAA;;;MAAA;MAAA;MAAA;MAAA;;;MAAA;MAAA;MAAA;;MAwBO;QAAA,IAAMA,iCAAN;UAAA;QAAA;;;gBAAMA;;;;6BAAAA,iC;UAAiC,C;UAAA,UATnC,CACP,4DADO,EAEP,yHAFO,EAGP,qEAHO,EAIP,kEAJO,EAKP,6DALO,EAMP,sFANO,CASmC;;;OAAvC;;;4HAAMA,iC,EAAiC;UAAA,eAX1C,gHAW0C;UAXN,UAGpC,4DAHoC,EAIpC,yHAJoC,EAKpC,qEALoC,EAMpC,kEANoC,EAOpC,6DAPoC,EAQpC,sFARoC;QAWM,C;MAH3B,C;;;;;;;;;;;;;;;;;MCrBnB;MAAA;;;MAAA;QAAA;MAAA;MAAA;;;MAAA;MAAA;MAAA;MAAA;;;MAAA;MAAA;MAAA;MAAA;;;MAAA;MAAA;MAAA;MAAA;;;MAAA;MAAA;MAAA;MAAA;;;MAAA;MAAA;MAAA;MAAA;;;MAAA;MAAA;MAAA;MAAA;;;MAAA;MAAA;MAAA;MAAA;;;MAAA;MAAA;;;MAAA;MAAA;MAAA;MAAA;;;MAAA;MAAA;MAAA;MAAA;;;MAAA;MAAA;MAAA;MAAA;;;MAAA;MAAA;MAAA;MAAA;;;MAAA;MAAA;MAAA;MAAA;;;MAAA;MAAA;MAAA;;MAeO;QAAA,IAAMC,oCAAN;UAaL,8CACUC,UADV,EAEUC,WAFV,EAGUC,iBAHV,EAISC,oBAJT,EAImD;YAAA;;YAHzC,KAAAH,UAAA,GAAAA,UAAA;YACA,KAAAC,WAAA,GAAAA,WAAA;YACA,KAAAC,iBAAA,GAAAA,iBAAA;YACD,KAAAC,oBAAA,GAAAA,oBAAA;YAbT,KAAAC,gBAAA,GAA6B,CAAC,gBAAD,EAAmB,gBAAnB,CAA7B;YACA,KAAAC,UAAA,sBAAiB,gDAAjB;YAEA,KAAAC,2BAAA,GAA8B,IAAI,kHAAJ,EAA9B;YACA,KAAAC,+BAAA,GAAkC,EAAlC;UAUK;;UAlBA;YAAA;YAAA,OAoBL,oBAAW;cACT,KAAKC,OAAL;cACA,KAAKC,gBAAL;YACD;UAvBI;YAAA;YAAA,OAyBL,mBAAO;cAAA;;cACL,KAAKT,UAAL,CAAgBU,OAAhB,CAAwB,kDAAUC,4BAAlC,EAAgEC,SAAhE,CAA0E,UAACC,GAAD,EAAc;gBACtF,KAAI,CAACN,+BAAL,GAAuCM,GAAG,CAACC,YAAJ,CAAiBC,IAAxD;gBACA,KAAI,CAACC,UAAL,GAAkB,IAAI,0EAAJ,CAAoDH,GAAG,CAACC,YAAJ,CAAiBC,IAArE,CAAlB;gBACA,KAAI,CAACC,UAAL,CAAgBC,SAAhB,GAA4B,KAAI,CAACC,iBAAL,CAAuBD,SAAnD;gBACA,KAAI,CAACD,UAAL,CAAgBG,IAAhB,GAAuB,KAAI,CAACD,iBAAL,CAAuBC,IAA9C;cACD,CALD;YAMD;UAhCI;YAAA;YAAA,OAkCL,gBAAI;cAAA;;cACF,KAAKnB,UAAL,CAAgBoB,IAAhB,CAAqB,kDAAUT,4BAA/B,EAA6D,KAAKL,2BAAlE,EAA+FM,SAA/F,CACE,UAACC,GAAD,EAAc;gBACZ,IAAIA,GAAG,KAAKQ,SAAZ,EAAuB;kBACrB,MAAI,CAACnB,iBAAL,CAAuBoB,OAAvB,CAA+BT,GAA/B;gBACD;cACF,CALH,EAKK,UAACU,GAAD,EAAc;gBACf,IAAI,CAACC,MAAM,CAAC,MAAI,CAAClB,2BAAL,CAAiCmB,cAAlC,CAAP,IACC,CAACD,MAAM,CAAC,MAAI,CAAClB,2BAAL,CAAiCoB,cAAlC,CADZ,EAC+D;kBAC7DH,GAAG,CAACI,KAAJ,CAAUC,OAAV,GAAoB,kCAApB;gBACD,CAHD,MAGO;kBACLL,GAAG,CAACI,KAAJ,CAAUC,OAAV,GAAoB,wFAApB;gBACD;;gBACD,MAAI,CAAC1B,iBAAL,CAAuByB,KAAvB,CAA6BJ,GAA7B;cACD,CAbH,EAaK,YAAM;gBACP,MAAI,CAACM,kBAAL,IACE,MAAI,CAACrB,OAAL,EADF;cAED,CAhBH;YAkBD;UArDI;YAAA;YAAA,OAuDL,0CAA8B;cAAA;;cAC5B,KAAKR,UAAL,CAAgB8B,QAAhB,CAAyB,kDAAUnB,4BAAnC,EAAiE,KAAKO,iBAAL,CAAuBa,WAAxF,EAAqGnB,SAArG,CAA+G,UAACC,GAAD,EAAc;gBAC3H,IAAIA,GAAJ,EAAS;kBACP,MAAI,CAACP,2BAAL,GAAmCO,GAAG,CAACC,YAAJ,CAAiBC,IAApD;kBACAiB,OAAO,CAACC,GAAR,CAAYpB,GAAZ;gBAED;cACF,CAND;YAOD;UA/DI;YAAA;YAAA,OAiEL,kBAAM;cAAA;;cACJ,KAAKb,UAAL,CAAgBkC,MAAhB,CAAuB,kDAAUvB,4BAAjC,EAA+D,KAAKL,2BAApE,EAAiGM,SAAjG,CACE,UAACC,GAAD,EAAc;gBACZ,IAAIA,GAAG,KAAKQ,SAAZ,EAAuB;kBACrB,MAAI,CAACnB,iBAAL,CAAuBoB,OAAvB,CAA+BT,GAA/B;gBACD;cACF,CALH,EAKK,UAACU,GAAD,EAAc;gBACf,MAAI,CAACrB,iBAAL,CAAuByB,KAAvB,CAA6BJ,GAA7B;cACD,CAPH,EAOK,YAAM;gBACP,MAAI,CAACM,kBAAL;;gBACA,MAAI,CAACrB,OAAL;cACD,CAVH;YAWD;UA7EI;YAAA;YAAA,OA+EL,4BAAgB;cACd,KAAK2B,+BAAL,GAAuC,KAAKlC,WAAL,CAAiBmC,KAAjB,CAAuB;gBAC5DX,cAAc,EAAE,CAAC,EAAD,EAAK,0DAAWY,QAAhB,CAD4C;gBAE5DX,cAAc,EAAE,CAAC,EAAD,EAAK,0DAAWW,QAAhB;cAF4C,CAAvB,CAAvC;YAID;UApFI;YAAA;YAAA,OAsFL,8BAAkB;cAChB,KAAK/B,2BAAL,GAAmC,IAAI,kHAAJ,EAAnC;cACA,KAAK6B,+BAAL,CAAqCG,eAArC;cACA,KAAKH,+BAAL,CAAqCI,cAArC;YACD;UA1FI;YAAA;YAAA,OA4FL,mBAAS;cAAA;;cACP,mDAAKC,IAAL,CAAU;gBACRC,IAAI,EAAE,wEADE;gBAERC,IAAI,EAAE,UAFE;gBAGRC,gBAAgB,EAAE,IAHV;gBAIRC,kBAAkB,EAAE,SAJZ;gBAKRC,iBAAiB,EAAE,MALX;gBAMRC,iBAAiB,EAAE;cANX,CAAV,EAOGC,IAPH,CAOQ,UAACC,MAAD,EAAY;gBAClB,IAAIA,MAAM,CAACC,KAAX,EAAkB;kBAChB,MAAI,CAACjD,UAAL,CAAgBkD,UAAhB,CAA2B,kDAAUvC,4BAArC,EAAmE,MAAI,CAACL,2BAAL,CAAiC6C,EAApG,EAAwGvC,SAAxG,CACE,YAAM;oBACJ,MAAI,CAACV,iBAAL,CAAuBkD,oBAAvB,CAA4C,wDAA5C;;oBACA,MAAI,CAACvB,kBAAL;;oBACA,MAAI,CAACrB,OAAL;kBACD,CALH;gBAOD;cACF,CAjBD;YAkBD;UA/GI;;UAAA;QAAA;;;2BAAMT,oC,EAAoC,qH,EAAA,2H,EAAA,4H,EAAA,8J;QAAA,C;;;gBAApCA,oC;UAAoC,qD;UAAA;YAAA;wEAEpC,4D,EAAiB,I;;;;;;;;;;;;;;cCjB9B;;cACI;;cACI;;cACI;;cACI;;cACI;;cACJ;;cACJ;;cACJ;;cACA;;cAEA;;cACI;;cACI;;cACI;;cAAW;;cAA0B;;cAA6B;;cAAC;;cAAO;;cAC1E;;cAAgB;gBAAA;cAAA,GAAwD,SAAxD,EAAwD;gBAAA,OACzD,IAAAI,oBAAA,oBADyD;cACjB,CADvC;;cAAhB;;cAEJ;;cAEA;;cACI;;cAAW;;cAA0B;;cAA6B;;cAAC;;cAAO;;cAC1E;;cAAgB;gBAAA;cAAA,GAAwD,SAAxD,EAAwD;gBAAA,OACzD,IAAAA,oBAAA,oBADyD;cACjB,CADvC;;cAAhB;;cAEJ;;cACJ;;cACJ;;cAEA;;cACkD;gBAAA,OAAgB,IAAAiB,IAAA,EAAhB;cAAsB,CAAtB,EAAuB,gBAAvB,EAAuB;gBAAA,OAAmB,IAAAc,MAAA,EAAnB;cAA2B,CAAlD,EAAuB,gBAAvB,EAAuB;gBAAA,OACnD,IAAAL,kBAAA,EADmD;cAC/B,CADQ,EAAuB,gBAAvB,EAAuB;gBAAA,OACX,eADW;cACH,CADpB;;cACsB;;cACxE;;cACA;;cACI;gBAAA,OAAwB,IAAAwB,8BAAA,EAAxB;cAAwD,CAAxD;;cAA0D;;cAElE;;cACJ;;;;cAxBc;;cAAA;;cAIsB;;cAAA;;cAMA;;cAAA;;cAMH;;cAAA,yGAA2C,WAA3C,EAA2C,mCAA3C;;cAIV;;cAAA,uFAAyB,kBAAzB,EAAyB,oBAAzB;;;;;;;ODhBhB;;;;;;;;;;;;;;;;;MEfP;MAAA;;;MAAA;QAAA;MAAA;MAAA;;;MAAA;MAAA;MAAA;MAAA;;;MAAA;MAAA;MAAA;MAAA;;;MAAA;MAAA;MAAA;;MAIA,IAAMC,MAAM,GAAW,CACrB;QACEC,IAAI,EAAE,EADR;QAEEC,SAAS,EAAE;MAFb,CADqB,CAAvB;;MAWO;QAAA,IAAMC,wCAAN;UAAA;QAAA;;;gBAAMA;;;;6BAAAA,wC;UAAwC,C;UAAA,UAH1C,CAAC,6DAAaC,QAAb,CAAsBJ,MAAtB,CAAD,CAG0C,EAFzC,4DAEyC;;;OAA9C;;;4HAAMG,wC,EAAwC;UAAA;UAAA,UAFzC,4DAEyC;QAAA,C;MAF7B,C","file":"s1-and-s2-form-expiration-period-s1-and-s2-form-expiration-period-module-es5.js","sourcesContent":["export * from './form-action-buttons/form-action-buttons.component';\r\nexport * from './form-list/form-list.component';","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { S1AndS2FormExpirationPeriodRoutingModule } from './s1-and-s2-form-expiration-period-routing.module';\r\nimport { S1AndS2FormExpirationPeriodComponent } from './s1-and-s2-form-expiration-period.component';\r\nimport { FragmentsModule } from 'app/modules/fragments/fragments.module';\r\nimport { AngularMaterialModule } from '@shared';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    S1AndS2FormExpirationPeriodComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    S1AndS2FormExpirationPeriodRoutingModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule,\r\n    AngularMaterialModule,\r\n    FragmentsModule,\r\n  ]\r\n})\r\nexport class S1AndS2FormExpirationPeriodModule { }\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { FormListComponent } from '@fragments';\r\nimport { ApiService, SweetAlertService } from '@services';\r\nimport { ENDPOINTS, STATUSES } from '@shared';\r\nimport { S1AndS2FormExpirationPeriod } from 'app/core/models/s1-and-s2-form-expiration-period.model';\r\nimport { ValidateFieldService } from 'app/core/services/validate-field.service';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-s1-and-s2-form-expiration-period',\r\n  templateUrl: './s1-and-s2-form-expiration-period.component.html',\r\n  styleUrls: ['./s1-and-s2-form-expiration-period.component.scss']\r\n})\r\nexport class S1AndS2FormExpirationPeriodComponent implements OnInit {\r\n\r\n  @ViewChild(FormListComponent) formListComponent: FormListComponent;\r\n  dataSource: MatTableDataSource<S1AndS2FormExpirationPeriod>;\r\n  displayedColumns: string[] = ['s1ExpNoOfYears', 's2ExpNoOfYears'];\r\n  statusList = [...STATUSES];\r\n\r\n  s1AndS2FormExpirationPeriod = new S1AndS2FormExpirationPeriod();\r\n  s1AndS2FormExpirationPeriodList = [];\r\n\r\n  s1AndS2FormExpirationPeriodForm: FormGroup;\r\n\r\n\r\n  constructor(\r\n    private apiService: ApiService,\r\n    private formBuilder: FormBuilder,\r\n    private sweetAlertService: SweetAlertService,\r\n    public validateFieldService: ValidateFieldService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.getList();\r\n    this.setFormValidator();\r\n  }\r\n\r\n  getList(): void {\r\n    this.apiService.findAll(ENDPOINTS.s1AndS2FormExpirationPeriods).subscribe((res: any) => {\r\n      this.s1AndS2FormExpirationPeriodList = res.responseData.data;\r\n      this.dataSource = new MatTableDataSource<S1AndS2FormExpirationPeriod>(res.responseData.data);\r\n      this.dataSource.paginator = this.formListComponent.paginator;\r\n      this.dataSource.sort = this.formListComponent.sort;\r\n    });\r\n  }\r\n\r\n  save(): void {\r\n    this.apiService.save(ENDPOINTS.s1AndS2FormExpirationPeriods, this.s1AndS2FormExpirationPeriod).subscribe(\r\n      (res: any) => {\r\n        if (res !== undefined) {\r\n          this.sweetAlertService.success(res);\r\n        }\r\n      }, (err: any) => {\r\n        if (!Number(this.s1AndS2FormExpirationPeriod.s1ExpNoOfYears)\r\n          || !Number(this.s1AndS2FormExpirationPeriod.s2ExpNoOfYears)) {\r\n          err.error.message = 'Please enter numeric values only';\r\n        } else {\r\n          err.error.message = 'Default expiration values have already been set. Select the entry to update the record';\r\n        }\r\n        this.sweetAlertService.error(err);\r\n      }, () => {\r\n        this.resetFormValidator(),\r\n          this.getList();\r\n      }\r\n    )\r\n  }\r\n\r\n  getS1AndS2FormExpirationPeriod(): void {\r\n    this.apiService.findById(ENDPOINTS.s1AndS2FormExpirationPeriods, this.formListComponent.idForUpdate).subscribe((res: any) => {\r\n      if (res) {\r\n        this.s1AndS2FormExpirationPeriod = res.responseData.data;\r\n        console.log(res);\r\n\r\n      }\r\n    });\r\n  }\r\n\r\n  update(): void {\r\n    this.apiService.update(ENDPOINTS.s1AndS2FormExpirationPeriods, this.s1AndS2FormExpirationPeriod).subscribe(\r\n      (res: any) => {\r\n        if (res !== undefined) {\r\n          this.sweetAlertService.success(res);\r\n        }\r\n      }, (err: any) => {\r\n        this.sweetAlertService.error(err);\r\n      }, () => {\r\n        this.resetFormValidator()\r\n        this.getList();\r\n      });\r\n  }\r\n\r\n  setFormValidator(): void {\r\n    this.s1AndS2FormExpirationPeriodForm = this.formBuilder.group({\r\n      s1ExpNoOfYears: ['', Validators.required],\r\n      s2ExpNoOfYears: ['', Validators.required],\r\n    });\r\n  }\r\n\r\n  resetFormValidator(): void {\r\n    this.s1AndS2FormExpirationPeriod = new S1AndS2FormExpirationPeriod();\r\n    this.s1AndS2FormExpirationPeriodForm.markAsUntouched();\r\n    this.s1AndS2FormExpirationPeriodForm.markAsPristine();\r\n  }\r\n\r\n  delete() {\r\n    Swal.fire({\r\n      text: 'Are you sure you want to delete this S1 and S2 form expiration period?',\r\n      icon: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Confirm'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.apiService.deleteById(ENDPOINTS.s1AndS2FormExpirationPeriods, this.s1AndS2FormExpirationPeriod.id).subscribe(\r\n          () => {\r\n            this.sweetAlertService.customSuccessMessage('S1 and S2 form expiration period successfully deleted.');\r\n            this.resetFormValidator();\r\n            this.getList();\r\n          }\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<form>\r\n    <div class=\"container-fluid\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-12 title\">\r\n                <mat-label>\r\n                    S1 and S2 Form Expiration Period\r\n                </mat-label>\r\n            </div>\r\n        </div>\r\n        <hr>\r\n\r\n        <form [formGroup]=\"s1AndS2FormExpirationPeriodForm\">\r\n            <div class=\"row\">\r\n                <mat-form-field class=\"col-md-6\" appearance=\"outline\">\r\n                    <mat-label>S1 Expiration No Of Years <span class=\"required-field\">*</span></mat-label>\r\n                    <input matInput [(ngModel)]=\"s1AndS2FormExpirationPeriod.s1ExpNoOfYears\" name=\"s1ExpNoOfYears\"\r\n                        (keydown)=\"validateFieldService.numbersOnly($event)\" formControlName=\"s1ExpNoOfYears\">\r\n                </mat-form-field>\r\n\r\n                <mat-form-field class=\"col-md-6\" appearance=\"outline\">\r\n                    <mat-label>S2 Expiration No Of Years <span class=\"required-field\">*</span></mat-label>\r\n                    <input matInput [(ngModel)]=\"s1AndS2FormExpirationPeriod.s2ExpNoOfYears\" name=\"s2ExpNoOfYears\"\r\n                        (keydown)=\"validateFieldService.numbersOnly($event)\" formControlName=\"s2ExpNoOfYears\">\r\n                </mat-form-field>\r\n            </div>\r\n        </form>\r\n\r\n        <app-form-action-buttons [childObject]=\"s1AndS2FormExpirationPeriod\"\r\n            [childForm]=\"s1AndS2FormExpirationPeriodForm\" (saveFunction)=\"save()\" (updateFunction)=\"update()\"\r\n            (cancelFunction)=\"resetFormValidator()\" (deleteFunction)=\"delete()\"></app-form-action-buttons>\r\n        <br>\r\n        <app-form-list [dataSource]=\"dataSource\" [displayedColumns]=\"displayedColumns\"\r\n            (selectInListFunction)=\"getS1AndS2FormExpirationPeriod()\"></app-form-list>\r\n\r\n    </div>\r\n</form>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { S1AndS2FormExpirationPeriodComponent } from './s1-and-s2-form-expiration-period.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: S1AndS2FormExpirationPeriodComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class S1AndS2FormExpirationPeriodRoutingModule { }\r\n"]}
>>>>>>> 53dc5baaa640736d2cc27f9eee7c34fe4a9274c2
