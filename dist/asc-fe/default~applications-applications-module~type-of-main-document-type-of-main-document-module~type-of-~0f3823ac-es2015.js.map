{"version":3,"sources":["./src/app/modules/fragments/index.ts","./src/app/modules/pages/maintenance/type-of-main-document/type-of-main-document.component.ts","./src/app/modules/pages/maintenance/type-of-main-document/type-of-main-document.component.html"],"names":[],"mappings":"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","file":"default~applications-applications-module~type-of-main-document-type-of-main-document-module~type-of-~0f3823ac-es2015.js","sourcesContent":["export * from './form-action-buttons/form-action-buttons.component';\r\nexport * from './form-list/form-list.component';","import { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\nimport { Form, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { FormListComponent } from '@fragments';\r\nimport { ApiService, SweetAlertService } from '@services';\r\nimport { COMMON_FUNCTION, ENDPOINTS, STATUSES } from '@shared';\r\nimport { TypeOfMainDocument } from 'app/core/models/type-of-main-document.model';\r\nimport { UploadingDocumentFileSize } from 'app/core/models/uploading-document-file-size-model';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-type-of-main-document',\r\n  templateUrl: './type-of-main-document.component.html',\r\n  styleUrls: ['./type-of-main-document.component.scss']\r\n})\r\nexport class TypeOfMainDocumentComponent implements OnInit, OnDestroy {\r\n\r\n  @ViewChild(FormListComponent) formListComponent: FormListComponent;\r\n  dataSource: MatTableDataSource<TypeOfMainDocument>;\r\n  dataSource1: MatTableDataSource<UploadingDocumentFileSize>;\r\n  displayedColumns: string[];\r\n  statusList = [...STATUSES];\r\n\r\n  typeOfMainDocument = new TypeOfMainDocument();\r\n  uploadingDocumentFileSize = new UploadingDocumentFileSize();\r\n\r\n  typeOfMainDocumentList = [];\r\n\r\n  typeOfMainDocumentForm: FormGroup;\r\n  uploadingDocumentFileSizeForm: FormGroup;\r\n\r\n  maintenanceType: any;\r\n\r\n  constructor(\r\n    private apiService: ApiService,\r\n    private formBuilder: FormBuilder,\r\n    private sweetAlertService: SweetAlertService,\r\n    private route: ActivatedRoute\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.maintenanceType = this.route.parent.snapshot.url[0].path;\r\n    if (this.maintenanceType === 'type-of-main-documents') {\r\n      this.displayedColumns = ['typeOfMainDocument', 'status'];\r\n      this.getList();\r\n    } else {\r\n      this.displayedColumns = ['size'];\r\n      this.getAllFileSize();\r\n    }\r\n    this.setFormValidator();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.maintenanceType = null;\r\n  }\r\n\r\n  getList(): void {\r\n    this.apiService.findAll(ENDPOINTS.typeOfMainDocuments).subscribe((res: any) => {\r\n      this.typeOfMainDocumentList = res.responseData.data;\r\n      this.dataSource = new MatTableDataSource<TypeOfMainDocument>(res.responseData.data);\r\n      this.dataSource.paginator = this.formListComponent.paginator;\r\n      this.dataSource.sort = this.formListComponent.sort;\r\n    });\r\n  }\r\n\r\n  save(): void {\r\n    this.apiService.save(ENDPOINTS.typeOfMainDocuments, this.typeOfMainDocument).subscribe(\r\n      (res: any) => {\r\n        if (res !== undefined) {\r\n          this.sweetAlertService.success(res);\r\n        }\r\n      }, (err: any) => {\r\n        this.sweetAlertService.error(err);\r\n      }, () => {\r\n        this.resetFormValidator(),\r\n          this.getList();\r\n      }\r\n    )\r\n  }\r\n\r\n  getTypeOfMainDocument(): void {\r\n    this.apiService.findById(ENDPOINTS.typeOfMainDocuments, this.formListComponent.idForUpdate).subscribe((res: any) => {\r\n      if (res) {\r\n        this.typeOfMainDocument = res.responseData.data;\r\n        console.log(res);\r\n\r\n      }\r\n    });\r\n  }\r\n\r\n  update(): void {\r\n    this.apiService.update(ENDPOINTS.typeOfMainDocuments, this.typeOfMainDocument).subscribe(\r\n      (res: any) => {\r\n        if (res !== undefined) {\r\n          this.sweetAlertService.success(res);\r\n        }\r\n      }, (err: any) => {\r\n        this.sweetAlertService.error(err);\r\n      }, () => {\r\n        this.resetFormValidator()\r\n        this.getList();\r\n      });\r\n  }\r\n\r\n  setFormValidator(): void {\r\n    if (this.maintenanceType === 'type-of-main-documents') {\r\n      this.typeOfMainDocument.status = COMMON_FUNCTION.ACTIVE;\r\n      this.typeOfMainDocumentForm = this.formBuilder.group({\r\n        typeOfMainDocument: ['', Validators.required],\r\n        status: [''],\r\n      });\r\n    } else {\r\n      this.uploadingDocumentFileSizeForm = this.formBuilder.group({\r\n        // id: ['',],\r\n        fileSize: ['', Validators.required],\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  resetFormValidator(): void {\r\n    if (this.maintenanceType === 'type-of-main-documents') {\r\n      this.typeOfMainDocument = new TypeOfMainDocument();\r\n      this.typeOfMainDocument.status = COMMON_FUNCTION.ACTIVE;\r\n      this.typeOfMainDocumentForm.markAsUntouched();\r\n      this.typeOfMainDocumentForm.markAsPristine();\r\n    } else {\r\n      this.uploadingDocumentFileSize = new UploadingDocumentFileSize();\r\n      this.uploadingDocumentFileSizeForm.markAsUntouched();\r\n      this.uploadingDocumentFileSizeForm.markAsPristine();\r\n    }\r\n\r\n  }\r\n\r\n\r\n  //START OF FILE SIZE CONTROLLER\r\n\r\n  getAllFileSize(): void {\r\n    this.apiService.findAll(ENDPOINTS.uploadingDocumentFileSize).subscribe((res: any) => {\r\n      this.uploadingDocumentFileSize = res.responseData.data;\r\n      this.dataSource1 = new MatTableDataSource<UploadingDocumentFileSize>(res.responseData.data);\r\n      this.dataSource1.paginator = this.formListComponent.paginator;\r\n      this.dataSource1.sort = this.formListComponent.sort;\r\n    });\r\n  }\r\n\r\n  getuploadingDocumentFileSize(): void {\r\n    this.apiService.findById(ENDPOINTS.uploadingDocumentFileSize, this.formListComponent.idForUpdate).subscribe((res: any) => {\r\n      if (res) {\r\n        this.uploadingDocumentFileSize = res.responseData.data;\r\n        console.log(this.uploadingDocumentFileSize);\r\n      }\r\n    });\r\n  }\r\n\r\n  updateUploadingDocumentFileSize() {\r\n    this.apiService.update(ENDPOINTS.uploadingDocumentFileSize, this.uploadingDocumentFileSize).subscribe(\r\n      (res: any) => {\r\n        if (res !== undefined) {\r\n          this.sweetAlertService.success(res);\r\n        }\r\n      }, (err: any) => {\r\n        this.sweetAlertService.error(err);\r\n      }, () => {\r\n        this.resetFormValidator(),\r\n          this.getAllFileSize();\r\n      });\r\n\r\n  }\r\n\r\n  delete() {\r\n    Swal.fire({\r\n      text: 'Are you sure you want to delete this type of main document?',\r\n      icon: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Confirm'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.apiService.deleteById(ENDPOINTS.typeOfMainDocuments, this.typeOfMainDocument.id).subscribe(\r\n          () => {\r\n            this.sweetAlertService.customSuccessMessage('Type of main document successfully deleted.');\r\n            this.resetFormValidator();\r\n            this.getList();\r\n          }\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<form>\r\n  <div class=\"container-fluid\" *ngIf=\"maintenanceType === 'type-of-main-documents'\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12 title\">\r\n        <mat-label>\r\n          Type Of Main Document\r\n        </mat-label>\r\n      </div>\r\n    </div>\r\n    <hr>\r\n\r\n    <form [formGroup]=\"typeOfMainDocumentForm\">\r\n      <div class=\"row\">\r\n        <mat-form-field class=\"col-md-8\" appearance=\"outline\">\r\n          <mat-label>Type Of Main Document <span class=\"required-field\">*</span></mat-label>\r\n          <input matInput [(ngModel)]=\"typeOfMainDocument.typeOfMainDocument\" name=\"typeOfMainDocument\"\r\n            formControlName=\"typeOfMainDocument\">\r\n        </mat-form-field>\r\n\r\n        <mat-form-field class=\"col-md-4\" appearance=\"outline\" *ngIf=\"typeOfMainDocument.id\">\r\n          <mat-label>Status</mat-label>\r\n          <mat-select [(ngModel)]=\"typeOfMainDocument.status\" name=\"status\" formControlName=\"status\">\r\n            <mat-option *ngFor=\"let i of statusList\" [value]=\"i.status\">\r\n              {{i.status}}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n    </form>\r\n\r\n    <app-form-action-buttons [childObject]=\"typeOfMainDocument\" [childForm]=\"typeOfMainDocumentForm\"\r\n      (saveFunction)=\"save()\" (updateFunction)=\"update()\" (cancelFunction)=\"resetFormValidator()\"\r\n      (deleteFunction)=\"delete()\">\r\n    </app-form-action-buttons>\r\n    <br>\r\n    <app-form-list [dataSource]=\"dataSource\" [displayedColumns]=\"displayedColumns\"\r\n      (selectInListFunction)=\"getTypeOfMainDocument()\"></app-form-list>\r\n\r\n  </div>\r\n\r\n\r\n  <div class=\"container-fluid\" *ngIf=\"maintenanceType === 'document-size'\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12 title\">\r\n        <mat-label>\r\n          Document File Size\r\n        </mat-label>\r\n      </div>\r\n    </div>\r\n    <hr>\r\n\r\n    <form [formGroup]=\"uploadingDocumentFileSizeForm\" *ngIf=\"uploadingDocumentFileSize.id\">\r\n      <div class=\"row\">\r\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n          <mat-label>Size <span class=\"required-field\">*</span></mat-label>\r\n          <input matInput [(ngModel)]=\"uploadingDocumentFileSize.fileSize\" type=\"number\" name=\"fileSize\"\r\n            formControlName=\"fileSize\" [disabled]=\"true\">\r\n        </mat-form-field>\r\n      </div>\r\n    </form>\r\n    <app-form-action-buttons [childObject]=\"uploadingDocumentFileSize\" [childForm]=\"uploadingDocumentFileSizeForm\"\r\n      (updateFunction)=\"updateUploadingDocumentFileSize()\" (cancelFunction)=\"resetFormValidator()\">\r\n    </app-form-action-buttons>\r\n    <br>\r\n\r\n    <app-form-list [dataSource]=\"dataSource1\" [displayedColumns]=\"displayedColumns\"\r\n      (selectInListFunction)=\"getuploadingDocumentFileSize()\"></app-form-list>\r\n  </div>\r\n</form>"],"sourceRoot":"webpack:///"}