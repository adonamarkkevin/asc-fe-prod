{"version":3,"sources":["webpack:///src/app/shared/layout/header/header.component.ts","webpack:///src/app/shared/layout/header/header.component.html","webpack:///src/app/shared/layout/layout-routing.module.ts","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/sidenav.js","webpack:///src/app/shared/layout/layout.module.ts","webpack:///src/app/shared/layout/footer/footer.component.ts","webpack:///src/app/shared/layout/footer/footer.component.html"],"names":["HeaderComponent","dataStorage","router","cd","userRole","userFirstName","countdown","isCountdownDisplayed","todayDate","Date","showProgressBar","getDisplayProgressbar","getUserRole","getUserFirstname","setDisplayProgressbar","setSystemTime","getIdleCountdown","getIsIdleCountdownDisplayed","detectChanges","setInterval","signOut","navigateByUrl","logout","routes","path","component","loadChildren","then","m","AccessDeniedModule","SuccessVerificationPageModule","PagesModule","LayoutRoutingModule","forChild","_c0","MatDrawerContainer_div_0_Template","rf","ctx","_r3","MatDrawerContainer_div_0_Template_div_click_0_listener","ctx_r2","_onBackdropClicked","ctx_r0","_isShowingBackdrop","MatDrawerContainer_mat_drawer_content_3_Template","_c1","_c2","MatSidenavContainer_div_0_Template","MatSidenavContainer_div_0_Template_div_click_0_listener","MatSidenavContainer_mat_sidenav_content_3_Template","_c3","_c4","_c5","matDrawerAnimations","transformDrawer","throwMatDuplicatedDrawerError","position","Error","MAT_DRAWER_DEFAULT_AUTOSIZE","providedIn","factory","MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY","MAT_DRAWER_CONTAINER","MatDrawerContent","_changeDetectorRef","_container","elementRef","scrollDispatcher","ngZone","_contentMarginChanges","subscribe","markForCheck","ɵfac","MatDrawerContent_Factory","t","MatDrawerContainer","ɵcmp","type","selectors","hostAttrs","hostVars","hostBindings","MatDrawerContent_HostBindings","_contentMargins","left","right","features","ngContentSelectors","decls","vars","template","MatDrawerContent_Template","encapsulation","changeDetection","MatDrawer","_elementRef","_focusTrapFactory","_focusMonitor","_platform","_ngZone","_doc","_elementFocusedBeforeDrawerWasOpened","_enableAnimations","_position","_mode","_disableClose","_opened","_animationStarted","_animationEnd","_animationState","openedChange","_openedStream","pipe","o","openedStart","e","fromState","toState","indexOf","undefined","_closedStream","closedStart","_destroyed","onPositionChanged","_modeChanged","opened","activeElement","_takeFocus","_isFocusWithinDrawer","_restoreFocus","runOutsideAngular","nativeElement","event","keyCode","disableClose","run","close","stopPropagation","preventDefault","x","y","emit","value","_updateFocusTrapState","next","_autoFocus","mode","toggle","autoFocus","_focusTrap","focusInitialElementWhenReady","hasMovedFocus","focus","focusVia","_openedVia","blur","_a","activeEl","contains","create","isBrowser","destroy","complete","openedVia","_setOpen","isOpen","restoreFocus","Promise","resolve","open","offsetWidth","enabled","MatDrawer_Factory","MatDrawer_HostBindings","MatDrawer_animation_transform_start_HostBindingHandler","$event","_animationStartListener","MatDrawer_animation_transform_done_HostBindingHandler","_animationDoneListener","inputs","outputs","exportAs","consts","MatDrawer_Template","data","animation","_dir","_element","viewportRuler","defaultAutosize","_animationMode","_drawers","backdropClick","_doCheckSubject","change","_validateDrawers","updateContentMargins","_autosize","_start","_end","_backdropOverride","_userContent","_content","_allDrawers","changes","drawer","reset","filter","item","notifyOnChanges","forEach","_watchDrawerToggle","_watchDrawerPosition","_watchDrawerMode","length","_isDrawerOpen","_left","_getWidth","width","_right","_isPushed","classList","add","_setContainerClass","onMicrotaskEmpty","isAdd","className","remove","ngDevMode","_closeModalDrawersViaBackdrop","_canHaveBackdrop","_closeViaBackdropClick","MatDrawerContainer_Factory","contentQueries","MatDrawerContainer_ContentQueries","dirIndex","_t","first","viewQuery","MatDrawerContainer_Query","MatDrawerContainer_HostBindings","autosize","hasBackdrop","provide","useExisting","MatDrawerContainer_Template","directives","styles","MatSidenavContent","changeDetectorRef","container","MatSidenavContent_Factory","MatSidenavContainer","MatSidenavContent_HostBindings","MatSidenavContent_Template","MatSidenav","arguments","_fixedInViewport","_fixedTopGap","_fixedBottomGap","MatSidenav_Factory","ɵMatSidenav_BaseFactory","MatSidenav_HostBindings","fixedInViewport","fixedTopGap","fixedBottomGap","MatSidenav_Template","MatSidenavContainer_Factory","ɵMatSidenavContainer_BaseFactory","MatSidenavContainer_ContentQueries","MatSidenavContainer_HostBindings","MatSidenavContainer_Template","MatSidenavModule","ɵmod","ɵinj","MatSidenavModule_Factory","imports","ngJitMode","declarations","exports","COMPONENTS","LayoutModule","FooterComponent"],"mappings":"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","file":"shared-layout-layout-module-es5.js","sourcesContent":["import { AfterViewChecked, ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { DataStorageService } from '@services';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit, AfterViewChecked {\n\n  userRole: string = '';\n  userFirstName: string = '';\n  countdown: string = '';\n  isCountdownDisplayed: boolean = false;\n\n  todayDate: Date = new Date();\n\n  showProgressBar = this.dataStorage.getDisplayProgressbar();\n\n  constructor(private dataStorage: DataStorageService,\n    private router: Router,\n    private cd: ChangeDetectorRef) {\n    this.userRole = this.dataStorage.getUserRole();\n    this.userFirstName = this.dataStorage.getUserFirstname();\n  }\n\n  ngOnInit() {\n    this.dataStorage.setDisplayProgressbar(false); // default\n    this.setSystemTime();\n  }\n\n  ngAfterViewChecked() {\n    this.showProgressBar = this.dataStorage.getDisplayProgressbar();\n    this.countdown = this.dataStorage.getIdleCountdown();\n    this.isCountdownDisplayed = this.dataStorage.getIsIdleCountdownDisplayed() === 'true';\n    this.cd.detectChanges();\n  }\n\n  setSystemTime() {\n    // updates displayed time every second\n    setInterval(() => {\n      this.todayDate = new Date();\n    }, 1000);\n  }\n\n  logout(): void {\n    this.dataStorage.signOut();\n    this.router.navigateByUrl('login');\n  }\n\n}\n","<div class=\"custom-container\">\n  <span *ngIf=\"showProgressBar==='true'\" class=\"progress-bar\">\n    <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\n  </span>\n  <div class=\"row header mx-0\">\n    <div class=\"col asc-logo\">\n      <img src=\"../../../../assets/images/asc-logo.jpg\" alt=\"\">\n    </div>\n    <div class=\"col search-bar px-0\" style=\"padding:0;\">\n      <p><b>{{todayDate | date:'hh:mm:ss aa'}}</b></p>\n      <p>{{todayDate | date:'fullDate'}}</p>\n      <span *ngIf=\"isCountdownDisplayed\" class=\"idle-message\">\n        <b>\n          You will be logged out in {{countdown}} seconds!\n        </b>\n      </span>\n      <!-- <mat-form-field class=\"header-search\" appearance=\"outline\">\n        <mat-label>Search Application Reference Code</mat-label>\n        <input type=\"tel\" matInput placeholder=\"Search\">\n        <mat-icon matSuffix>search</mat-icon>\n      </mat-form-field> -->\n    </div>\n\n    <div class=\"col user-badge\">\n\n      <span>\n        <button class=\"avatar\" [matMenuTriggerFor]=\"userProfile\">\n          <img src=\"../../../../assets/images/user-profile-default.png\" alt=\"\">\n        </button>\n        <br>\n        <label class=\"username\">Hi {{ userFirstName | titlecase }}!</label>\n        <mat-menu #userProfile=\"matMenu\">\n          <div class=\"mat-menu-content\">\n            <div class=\"avatar-content\">\n              <img src=\"../../../../assets/images/user-profile-default.png\" alt=\"\"><br><br>\n            </div>\n            <div class=\"avatar-details\">\n              <p class=\"company-name\"><b>Ad Standard Council</b></p>\n              <p>{{ userRole?.replace('_',' ').replaceAll('ROLE ', '')?.replace('ENCODER', 'EVALUATOR') | uppercase }}</p>\n              <hr>\n            </div>\n            <button mat-menu-item [routerLink]=\"['/asc/page/account/user-profile']\">\n              <mat-icon>arrow_right</mat-icon>View Profile\n            </button>\n            <button mat-menu-item (click)=\"logout()\">\n              <mat-icon>arrow_right</mat-icon>Logout\n            </button>\n          </div>\n\n        </mat-menu>\n      </span>\n\n    </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LayoutComponent } from './layout.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LayoutComponent\n  },\n  {\n    path: 'access-denied',\n    loadChildren: () => import('../access-denied/access-denied.module').then(m => m.AccessDeniedModule)\n  },\n  {\n    path: 'success-verification-page',\n    loadChildren: () => import('../success-verification-page/success-verification-page.module').then(m => m.SuccessVerificationPageModule)\n  },\n  {\n    path: 'page',\n    loadChildren: () => import('../../modules/pages/pages.module').then(m => m.PagesModule)\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class LayoutRoutingModule { }\n","import { Platform, PlatformModule } from '@angular/cdk/platform';\nimport { CdkScrollable, ScrollDispatcher, ViewportRuler, CdkScrollableModule } from '@angular/cdk/scrolling';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { InjectionToken, Component, ChangeDetectionStrategy, ViewEncapsulation, ChangeDetectorRef, Inject, forwardRef, ElementRef, NgZone, EventEmitter, Optional, Input, HostBinding, Output, HostListener, QueryList, ContentChildren, ContentChild, ViewChild, NgModule } from '@angular/core';\nimport { MatCommonModule } from '@angular/material/core';\nimport { FocusTrapFactory, FocusMonitor } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nimport { Subject, fromEvent, merge } from 'rxjs';\nimport { filter, map, mapTo, takeUntil, distinctUntilChanged, take, startWith, debounceTime } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by the Material drawers.\n * @docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/scrolling';\nimport * as ɵngcc2 from '@angular/cdk/a11y';\nimport * as ɵngcc3 from '@angular/cdk/platform';\nimport * as ɵngcc4 from '@angular/cdk/bidi';\nimport * as ɵngcc5 from '@angular/common';\n\nconst _c0 = [\"*\"];\nfunction MatDrawerContainer_div_0_Template(rf, ctx) { if (rf & 1) {\n    const _r3 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 2);\n    ɵngcc0.ɵɵlistener(\"click\", function MatDrawerContainer_div_0_Template_div_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r3); const ctx_r2 = ɵngcc0.ɵɵnextContext(); return ctx_r2._onBackdropClicked(); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-drawer-shown\", ctx_r0._isShowingBackdrop());\n} }\nfunction MatDrawerContainer_mat_drawer_content_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"mat-drawer-content\");\n    ɵngcc0.ɵɵprojection(1, 2);\n    ɵngcc0.ɵɵelementEnd();\n} }\nconst _c1 = [[[\"mat-drawer\"]], [[\"mat-drawer-content\"]], \"*\"];\nconst _c2 = [\"mat-drawer\", \"mat-drawer-content\", \"*\"];\nfunction MatSidenavContainer_div_0_Template(rf, ctx) { if (rf & 1) {\n    const _r3 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 2);\n    ɵngcc0.ɵɵlistener(\"click\", function MatSidenavContainer_div_0_Template_div_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r3); const ctx_r2 = ɵngcc0.ɵɵnextContext(); return ctx_r2._onBackdropClicked(); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-drawer-shown\", ctx_r0._isShowingBackdrop());\n} }\nfunction MatSidenavContainer_mat_sidenav_content_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"mat-sidenav-content\", 3);\n    ɵngcc0.ɵɵprojection(1, 2);\n    ɵngcc0.ɵɵelementEnd();\n} }\nconst _c3 = [[[\"mat-sidenav\"]], [[\"mat-sidenav-content\"]], \"*\"];\nconst _c4 = [\"mat-sidenav\", \"mat-sidenav-content\", \"*\"];\nconst _c5 = \".mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer{transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\\n\";\nconst matDrawerAnimations = {\n    /** Animation that slides a drawer in and out. */\n    transformDrawer: trigger('transform', [\n        // We remove the `transform` here completely, rather than setting it to zero, because:\n        // 1. Having a transform can cause elements with ripples or an animated\n        //    transform to shift around in Chrome with an RTL layout (see #10023).\n        // 2. 3d transforms causes text to appear blurry on IE and Edge.\n        state('open, open-instant', style({\n            'transform': 'none',\n            'visibility': 'visible',\n        })),\n        state('void', style({\n            // Avoids the shadow showing up when closed in SSR.\n            'box-shadow': 'none',\n            'visibility': 'hidden',\n        })),\n        transition('void => open-instant', animate('0ms')),\n        transition('void <=> open, open-instant => void', animate('400ms cubic-bezier(0.25, 0.8, 0.25, 1)'))\n    ])\n};\n\n/**\n * Throws an exception when two MatDrawer are matching the same position.\n * @docs-private\n */\nfunction throwMatDuplicatedDrawerError(position) {\n    throw Error(`A drawer was already declared for 'position=\"${position}\"'`);\n}\n/** Configures whether drawers should use auto sizing by default. */\nconst MAT_DRAWER_DEFAULT_AUTOSIZE = new InjectionToken('MAT_DRAWER_DEFAULT_AUTOSIZE', {\n    providedIn: 'root',\n    factory: MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY,\n});\n/**\n * Used to provide a drawer container to a drawer while avoiding circular references.\n * @docs-private\n */\nconst MAT_DRAWER_CONTAINER = new InjectionToken('MAT_DRAWER_CONTAINER');\n/** @docs-private */\nfunction MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY() {\n    return false;\n}\nclass MatDrawerContent extends CdkScrollable {\n    constructor(_changeDetectorRef, _container, elementRef, scrollDispatcher, ngZone) {\n        super(elementRef, scrollDispatcher, ngZone);\n        this._changeDetectorRef = _changeDetectorRef;\n        this._container = _container;\n    }\n    ngAfterContentInit() {\n        this._container._contentMarginChanges.subscribe(() => {\n            this._changeDetectorRef.markForCheck();\n        });\n    }\n}\nMatDrawerContent.ɵfac = function MatDrawerContent_Factory(t) { return new (t || MatDrawerContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(forwardRef(() => MatDrawerContainer)), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ScrollDispatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nMatDrawerContent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatDrawerContent, selectors: [[\"mat-drawer-content\"]], hostAttrs: [1, \"mat-drawer-content\"], hostVars: 4, hostBindings: function MatDrawerContent_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"margin-left\", ctx._container._contentMargins.left, \"px\")(\"margin-right\", ctx._container._contentMargins.right, \"px\");\n    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatDrawerContent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, encapsulation: 2, changeDetection: 0 });\nMatDrawerContent.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: MatDrawerContainer, decorators: [{ type: Inject, args: [forwardRef(() => MatDrawerContainer),] }] },\n    { type: ElementRef },\n    { type: ScrollDispatcher },\n    { type: NgZone }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDrawerContent, [{\n        type: Component,\n        args: [{\n                selector: 'mat-drawer-content',\n                template: '<ng-content></ng-content>',\n                host: {\n                    'class': 'mat-drawer-content',\n                    '[style.margin-left.px]': '_container._contentMargins.left',\n                    '[style.margin-right.px]': '_container._contentMargins.right'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: MatDrawerContainer, decorators: [{\n                type: Inject,\n                args: [forwardRef(() => MatDrawerContainer)]\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc1.ScrollDispatcher }, { type: ɵngcc0.NgZone }]; }, null); })();\n/**\n * This component corresponds to a drawer that can be opened on the drawer container.\n */\nclass MatDrawer {\n    constructor(_elementRef, _focusTrapFactory, _focusMonitor, _platform, _ngZone, _doc, _container) {\n        this._elementRef = _elementRef;\n        this._focusTrapFactory = _focusTrapFactory;\n        this._focusMonitor = _focusMonitor;\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        this._doc = _doc;\n        this._container = _container;\n        this._elementFocusedBeforeDrawerWasOpened = null;\n        /** Whether the drawer is initialized. Used for disabling the initial animation. */\n        this._enableAnimations = false;\n        this._position = 'start';\n        this._mode = 'over';\n        this._disableClose = false;\n        this._opened = false;\n        /** Emits whenever the drawer has started animating. */\n        this._animationStarted = new Subject();\n        /** Emits whenever the drawer is done animating. */\n        this._animationEnd = new Subject();\n        /** Current state of the sidenav animation. */\n        // @HostBinding is used in the class as it is expected to be extended.  Since @Component decorator\n        // metadata is not inherited by child classes, instead the host binding data is defined in a way\n        // that can be inherited.\n        // tslint:disable:no-host-decorator-in-concrete\n        this._animationState = 'void';\n        /** Event emitted when the drawer open state is changed. */\n        this.openedChange = \n        // Note this has to be async in order to avoid some issues with two-bindings (see #8872).\n        new EventEmitter(/* isAsync */ true);\n        /** Event emitted when the drawer has been opened. */\n        this._openedStream = this.openedChange.pipe(filter(o => o), map(() => { }));\n        /** Event emitted when the drawer has started opening. */\n        this.openedStart = this._animationStarted.pipe(filter(e => e.fromState !== e.toState && e.toState.indexOf('open') === 0), mapTo(undefined));\n        /** Event emitted when the drawer has been closed. */\n        this._closedStream = this.openedChange.pipe(filter(o => !o), map(() => { }));\n        /** Event emitted when the drawer has started closing. */\n        this.closedStart = this._animationStarted.pipe(filter(e => e.fromState !== e.toState && e.toState === 'void'), mapTo(undefined));\n        /** Emits when the component is destroyed. */\n        this._destroyed = new Subject();\n        /** Event emitted when the drawer's position changes. */\n        // tslint:disable-next-line:no-output-on-prefix\n        this.onPositionChanged = new EventEmitter();\n        /**\n         * An observable that emits when the drawer mode changes. This is used by the drawer container to\n         * to know when to when the mode changes so it can adapt the margins on the content.\n         */\n        this._modeChanged = new Subject();\n        this.openedChange.subscribe((opened) => {\n            if (opened) {\n                if (this._doc) {\n                    this._elementFocusedBeforeDrawerWasOpened = this._doc.activeElement;\n                }\n                this._takeFocus();\n            }\n            else if (this._isFocusWithinDrawer()) {\n                this._restoreFocus();\n            }\n        });\n        /**\n         * Listen to `keydown` events outside the zone so that change detection is not run every\n         * time a key is pressed. Instead we re-enter the zone only if the `ESC` key is pressed\n         * and we don't have close disabled.\n         */\n        this._ngZone.runOutsideAngular(() => {\n            fromEvent(this._elementRef.nativeElement, 'keydown').pipe(filter(event => {\n                return event.keyCode === ESCAPE && !this.disableClose && !hasModifierKey(event);\n            }), takeUntil(this._destroyed)).subscribe(event => this._ngZone.run(() => {\n                this.close();\n                event.stopPropagation();\n                event.preventDefault();\n            }));\n        });\n        // We need a Subject with distinctUntilChanged, because the `done` event\n        // fires twice on some browsers. See https://github.com/angular/angular/issues/24084\n        this._animationEnd.pipe(distinctUntilChanged((x, y) => {\n            return x.fromState === y.fromState && x.toState === y.toState;\n        })).subscribe((event) => {\n            const { fromState, toState } = event;\n            if ((toState.indexOf('open') === 0 && fromState === 'void') ||\n                (toState === 'void' && fromState.indexOf('open') === 0)) {\n                this.openedChange.emit(this._opened);\n            }\n        });\n    }\n    /** The side that the drawer is attached to. */\n    get position() { return this._position; }\n    set position(value) {\n        // Make sure we have a valid value.\n        value = value === 'end' ? 'end' : 'start';\n        if (value != this._position) {\n            this._position = value;\n            this.onPositionChanged.emit();\n        }\n    }\n    /** Mode of the drawer; one of 'over', 'push' or 'side'. */\n    get mode() { return this._mode; }\n    set mode(value) {\n        this._mode = value;\n        this._updateFocusTrapState();\n        this._modeChanged.next();\n    }\n    /** Whether the drawer can be closed with the escape key or by clicking on the backdrop. */\n    get disableClose() { return this._disableClose; }\n    set disableClose(value) { this._disableClose = coerceBooleanProperty(value); }\n    /**\n     * Whether the drawer should focus the first focusable element automatically when opened.\n     * Defaults to false in when `mode` is set to `side`, otherwise defaults to `true`. If explicitly\n     * enabled, focus will be moved into the sidenav in `side` mode as well.\n     */\n    get autoFocus() {\n        const value = this._autoFocus;\n        // Note that usually we disable auto focusing in `side` mode, because we don't know how the\n        // sidenav is being used, but in some cases it still makes sense to do it. If the consumer\n        // explicitly enabled `autoFocus`, we take it as them always wanting to enable it.\n        return value == null ? this.mode !== 'side' : value;\n    }\n    set autoFocus(value) { this._autoFocus = coerceBooleanProperty(value); }\n    /**\n     * Whether the drawer is opened. We overload this because we trigger an event when it\n     * starts or end.\n     */\n    get opened() { return this._opened; }\n    set opened(value) { this.toggle(coerceBooleanProperty(value)); }\n    /**\n     * Moves focus into the drawer. Note that this works even if\n     * the focus trap is disabled in `side` mode.\n     */\n    _takeFocus() {\n        if (!this.autoFocus || !this._focusTrap) {\n            return;\n        }\n        this._focusTrap.focusInitialElementWhenReady().then(hasMovedFocus => {\n            // If there were no focusable elements, focus the sidenav itself so the keyboard navigation\n            // still works. We need to check that `focus` is a function due to Universal.\n            if (!hasMovedFocus && typeof this._elementRef.nativeElement.focus === 'function') {\n                this._elementRef.nativeElement.focus();\n            }\n        });\n    }\n    /**\n     * Restores focus to the element that was originally focused when the drawer opened.\n     * If no element was focused at that time, the focus will be restored to the drawer.\n     */\n    _restoreFocus() {\n        if (!this.autoFocus) {\n            return;\n        }\n        // Note that we don't check via `instanceof HTMLElement` so that we can cover SVGs as well.\n        if (this._elementFocusedBeforeDrawerWasOpened) {\n            this._focusMonitor.focusVia(this._elementFocusedBeforeDrawerWasOpened, this._openedVia);\n        }\n        else {\n            this._elementRef.nativeElement.blur();\n        }\n        this._elementFocusedBeforeDrawerWasOpened = null;\n        this._openedVia = null;\n    }\n    /** Whether focus is currently within the drawer. */\n    _isFocusWithinDrawer() {\n        var _a;\n        const activeEl = (_a = this._doc) === null || _a === void 0 ? void 0 : _a.activeElement;\n        return !!activeEl && this._elementRef.nativeElement.contains(activeEl);\n    }\n    ngAfterContentInit() {\n        this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement);\n        this._updateFocusTrapState();\n    }\n    ngAfterContentChecked() {\n        // Enable the animations after the lifecycle hooks have run, in order to avoid animating\n        // drawers that are open by default. When we're on the server, we shouldn't enable the\n        // animations, because we don't want the drawer to animate the first time the user sees\n        // the page.\n        if (this._platform.isBrowser) {\n            this._enableAnimations = true;\n        }\n    }\n    ngOnDestroy() {\n        if (this._focusTrap) {\n            this._focusTrap.destroy();\n        }\n        this._animationStarted.complete();\n        this._animationEnd.complete();\n        this._modeChanged.complete();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Open the drawer.\n     * @param openedVia Whether the drawer was opened by a key press, mouse click or programmatically.\n     * Used for focus management after the sidenav is closed.\n     */\n    open(openedVia) {\n        return this.toggle(true, openedVia);\n    }\n    /** Close the drawer. */\n    close() {\n        return this.toggle(false);\n    }\n    /** Closes the drawer with context that the backdrop was clicked. */\n    _closeViaBackdropClick() {\n        // If the drawer is closed upon a backdrop click, we always want to restore focus. We\n        // don't need to check whether focus is currently in the drawer, as clicking on the\n        // backdrop causes blurring of the active element.\n        return this._setOpen(/* isOpen */ false, /* restoreFocus */ true);\n    }\n    /**\n     * Toggle this drawer.\n     * @param isOpen Whether the drawer should be open.\n     * @param openedVia Whether the drawer was opened by a key press, mouse click or programmatically.\n     * Used for focus management after the sidenav is closed.\n     */\n    toggle(isOpen = !this.opened, openedVia) {\n        // If the focus is currently inside the drawer content and we are closing the drawer,\n        // restore the focus to the initially focused element (when the drawer opened).\n        return this._setOpen(isOpen, /* restoreFocus */ !isOpen && this._isFocusWithinDrawer(), openedVia);\n    }\n    /**\n     * Toggles the opened state of the drawer.\n     * @param isOpen Whether the drawer should open or close.\n     * @param restoreFocus Whether focus should be restored on close.\n     * @param openedVia Focus origin that can be optionally set when opening a drawer. The\n     *   origin will be used later when focus is restored on drawer close.\n     */\n    _setOpen(isOpen, restoreFocus, openedVia = 'program') {\n        this._opened = isOpen;\n        if (isOpen) {\n            this._animationState = this._enableAnimations ? 'open' : 'open-instant';\n            this._openedVia = openedVia;\n        }\n        else {\n            this._animationState = 'void';\n            if (restoreFocus) {\n                this._restoreFocus();\n            }\n        }\n        this._updateFocusTrapState();\n        return new Promise(resolve => {\n            this.openedChange.pipe(take(1)).subscribe(open => resolve(open ? 'open' : 'close'));\n        });\n    }\n    _getWidth() {\n        return this._elementRef.nativeElement ? (this._elementRef.nativeElement.offsetWidth || 0) : 0;\n    }\n    /** Updates the enabled state of the focus trap. */\n    _updateFocusTrapState() {\n        if (this._focusTrap) {\n            // The focus trap is only enabled when the drawer is open in any mode other than side.\n            this._focusTrap.enabled = this.opened && this.mode !== 'side';\n        }\n    }\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _animationStartListener(event) {\n        this._animationStarted.next(event);\n    }\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _animationDoneListener(event) {\n        this._animationEnd.next(event);\n    }\n}\nMatDrawer.ɵfac = function MatDrawer_Factory(t) { return new (t || MatDrawer)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.FocusTrapFactory), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8), ɵngcc0.ɵɵdirectiveInject(MAT_DRAWER_CONTAINER, 8)); };\nMatDrawer.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatDrawer, selectors: [[\"mat-drawer\"]], hostAttrs: [\"tabIndex\", \"-1\", 1, \"mat-drawer\"], hostVars: 12, hostBindings: function MatDrawer_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵsyntheticHostListener(\"@transform.start\", function MatDrawer_animation_transform_start_HostBindingHandler($event) { return ctx._animationStartListener($event); })(\"@transform.done\", function MatDrawer_animation_transform_done_HostBindingHandler($event) { return ctx._animationDoneListener($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"align\", null);\n        ɵngcc0.ɵɵsyntheticHostProperty(\"@transform\", ctx._animationState);\n        ɵngcc0.ɵɵclassProp(\"mat-drawer-end\", ctx.position === \"end\")(\"mat-drawer-over\", ctx.mode === \"over\")(\"mat-drawer-push\", ctx.mode === \"push\")(\"mat-drawer-side\", ctx.mode === \"side\")(\"mat-drawer-opened\", ctx.opened);\n    } }, inputs: { position: \"position\", mode: \"mode\", disableClose: \"disableClose\", autoFocus: \"autoFocus\", opened: \"opened\" }, outputs: { openedChange: \"openedChange\", _openedStream: \"opened\", openedStart: \"openedStart\", _closedStream: \"closed\", closedStart: \"closedStart\", onPositionChanged: \"positionChanged\" }, exportAs: [\"matDrawer\"], ngContentSelectors: _c0, decls: 2, vars: 0, consts: [[1, \"mat-drawer-inner-container\"]], template: function MatDrawer_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n    } }, encapsulation: 2, data: { animation: [matDrawerAnimations.transformDrawer] }, changeDetection: 0 });\nMatDrawer.ctorParameters = () => [\n    { type: ElementRef },\n    { type: FocusTrapFactory },\n    { type: FocusMonitor },\n    { type: Platform },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n    { type: MatDrawerContainer, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DRAWER_CONTAINER,] }] }\n];\nMatDrawer.propDecorators = {\n    position: [{ type: Input }],\n    mode: [{ type: Input }],\n    disableClose: [{ type: Input }],\n    autoFocus: [{ type: Input }],\n    opened: [{ type: Input }],\n    _animationState: [{ type: HostBinding, args: ['@transform',] }],\n    openedChange: [{ type: Output }],\n    _openedStream: [{ type: Output, args: ['opened',] }],\n    openedStart: [{ type: Output }],\n    _closedStream: [{ type: Output, args: ['closed',] }],\n    closedStart: [{ type: Output }],\n    onPositionChanged: [{ type: Output, args: ['positionChanged',] }],\n    _animationStartListener: [{ type: HostListener, args: ['@transform.start', ['$event'],] }],\n    _animationDoneListener: [{ type: HostListener, args: ['@transform.done', ['$event'],] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDrawer, [{\n        type: Component,\n        args: [{\n                selector: 'mat-drawer',\n                exportAs: 'matDrawer',\n                template: \"<div class=\\\"mat-drawer-inner-container\\\">\\r\\n  <ng-content></ng-content>\\r\\n</div>\\r\\n\",\n                animations: [matDrawerAnimations.transformDrawer],\n                host: {\n                    'class': 'mat-drawer',\n                    // must prevent the browser from aligning text based on value\n                    '[attr.align]': 'null',\n                    '[class.mat-drawer-end]': 'position === \"end\"',\n                    '[class.mat-drawer-over]': 'mode === \"over\"',\n                    '[class.mat-drawer-push]': 'mode === \"push\"',\n                    '[class.mat-drawer-side]': 'mode === \"side\"',\n                    '[class.mat-drawer-opened]': 'opened',\n                    'tabIndex': '-1'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc2.FocusTrapFactory }, { type: ɵngcc2.FocusMonitor }, { type: ɵngcc3.Platform }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: MatDrawerContainer, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DRAWER_CONTAINER]\n            }] }]; }, { _animationState: [{\n            type: HostBinding,\n            args: ['@transform']\n        }], openedChange: [{\n            type: Output\n        }], _openedStream: [{\n            type: Output,\n            args: ['opened']\n        }], openedStart: [{\n            type: Output\n        }], _closedStream: [{\n            type: Output,\n            args: ['closed']\n        }], closedStart: [{\n            type: Output\n        }], onPositionChanged: [{\n            type: Output,\n            args: ['positionChanged']\n        }], position: [{\n            type: Input\n        }], mode: [{\n            type: Input\n        }], disableClose: [{\n            type: Input\n        }], autoFocus: [{\n            type: Input\n        }], opened: [{\n            type: Input\n        }], \n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _animationStartListener: [{\n            type: HostListener,\n            args: ['@transform.start', ['$event']]\n        }], \n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _animationDoneListener: [{\n            type: HostListener,\n            args: ['@transform.done', ['$event']]\n        }] }); })();\n/**\n * `<mat-drawer-container>` component.\n *\n * This is the parent component to one or two `<mat-drawer>`s that validates the state internally\n * and coordinates the backdrop and content styling.\n */\nclass MatDrawerContainer {\n    constructor(_dir, _element, _ngZone, _changeDetectorRef, viewportRuler, defaultAutosize = false, _animationMode) {\n        this._dir = _dir;\n        this._element = _element;\n        this._ngZone = _ngZone;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._animationMode = _animationMode;\n        /** Drawers that belong to this container. */\n        this._drawers = new QueryList();\n        /** Event emitted when the drawer backdrop is clicked. */\n        this.backdropClick = new EventEmitter();\n        /** Emits when the component is destroyed. */\n        this._destroyed = new Subject();\n        /** Emits on every ngDoCheck. Used for debouncing reflows. */\n        this._doCheckSubject = new Subject();\n        /**\n         * Margins to be applied to the content. These are used to push / shrink the drawer content when a\n         * drawer is open. We use margin rather than transform even for push mode because transform breaks\n         * fixed position elements inside of the transformed element.\n         */\n        this._contentMargins = { left: null, right: null };\n        this._contentMarginChanges = new Subject();\n        // If a `Dir` directive exists up the tree, listen direction changes\n        // and update the left/right properties to point to the proper start/end.\n        if (_dir) {\n            _dir.change.pipe(takeUntil(this._destroyed)).subscribe(() => {\n                this._validateDrawers();\n                this.updateContentMargins();\n            });\n        }\n        // Since the minimum width of the sidenav depends on the viewport width,\n        // we need to recompute the margins if the viewport changes.\n        viewportRuler.change()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => this.updateContentMargins());\n        this._autosize = defaultAutosize;\n    }\n    /** The drawer child with the `start` position. */\n    get start() { return this._start; }\n    /** The drawer child with the `end` position. */\n    get end() { return this._end; }\n    /**\n     * Whether to automatically resize the container whenever\n     * the size of any of its drawers changes.\n     *\n     * **Use at your own risk!** Enabling this option can cause layout thrashing by measuring\n     * the drawers on every change detection cycle. Can be configured globally via the\n     * `MAT_DRAWER_DEFAULT_AUTOSIZE` token.\n     */\n    get autosize() { return this._autosize; }\n    set autosize(value) { this._autosize = coerceBooleanProperty(value); }\n    /**\n     * Whether the drawer container should have a backdrop while one of the sidenavs is open.\n     * If explicitly set to `true`, the backdrop will be enabled for drawers in the `side`\n     * mode as well.\n     */\n    get hasBackdrop() {\n        if (this._backdropOverride == null) {\n            return !this._start || this._start.mode !== 'side' || !this._end || this._end.mode !== 'side';\n        }\n        return this._backdropOverride;\n    }\n    set hasBackdrop(value) {\n        this._backdropOverride = value == null ? null : coerceBooleanProperty(value);\n    }\n    /** Reference to the CdkScrollable instance that wraps the scrollable content. */\n    get scrollable() {\n        return this._userContent || this._content;\n    }\n    ngAfterContentInit() {\n        this._allDrawers.changes\n            .pipe(startWith(this._allDrawers), takeUntil(this._destroyed))\n            .subscribe((drawer) => {\n            this._drawers.reset(drawer.filter(item => !item._container || item._container === this));\n            this._drawers.notifyOnChanges();\n        });\n        this._drawers.changes.pipe(startWith(null)).subscribe(() => {\n            this._validateDrawers();\n            this._drawers.forEach((drawer) => {\n                this._watchDrawerToggle(drawer);\n                this._watchDrawerPosition(drawer);\n                this._watchDrawerMode(drawer);\n            });\n            if (!this._drawers.length ||\n                this._isDrawerOpen(this._start) ||\n                this._isDrawerOpen(this._end)) {\n                this.updateContentMargins();\n            }\n            this._changeDetectorRef.markForCheck();\n        });\n        // Avoid hitting the NgZone through the debounce timeout.\n        this._ngZone.runOutsideAngular(() => {\n            this._doCheckSubject.pipe(debounceTime(10), // Arbitrary debounce time, less than a frame at 60fps\n            takeUntil(this._destroyed)).subscribe(() => this.updateContentMargins());\n        });\n    }\n    ngOnDestroy() {\n        this._contentMarginChanges.complete();\n        this._doCheckSubject.complete();\n        this._drawers.destroy();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** Calls `open` of both start and end drawers */\n    open() {\n        this._drawers.forEach(drawer => drawer.open());\n    }\n    /** Calls `close` of both start and end drawers */\n    close() {\n        this._drawers.forEach(drawer => drawer.close());\n    }\n    /**\n     * Recalculates and updates the inline styles for the content. Note that this should be used\n     * sparingly, because it causes a reflow.\n     */\n    updateContentMargins() {\n        // 1. For drawers in `over` mode, they don't affect the content.\n        // 2. For drawers in `side` mode they should shrink the content. We do this by adding to the\n        //    left margin (for left drawer) or right margin (for right the drawer).\n        // 3. For drawers in `push` mode the should shift the content without resizing it. We do this by\n        //    adding to the left or right margin and simultaneously subtracting the same amount of\n        //    margin from the other side.\n        let left = 0;\n        let right = 0;\n        if (this._left && this._left.opened) {\n            if (this._left.mode == 'side') {\n                left += this._left._getWidth();\n            }\n            else if (this._left.mode == 'push') {\n                const width = this._left._getWidth();\n                left += width;\n                right -= width;\n            }\n        }\n        if (this._right && this._right.opened) {\n            if (this._right.mode == 'side') {\n                right += this._right._getWidth();\n            }\n            else if (this._right.mode == 'push') {\n                const width = this._right._getWidth();\n                right += width;\n                left -= width;\n            }\n        }\n        // If either `right` or `left` is zero, don't set a style to the element. This\n        // allows users to specify a custom size via CSS class in SSR scenarios where the\n        // measured widths will always be zero. Note that we reset to `null` here, rather\n        // than below, in order to ensure that the types in the `if` below are consistent.\n        left = left || null;\n        right = right || null;\n        if (left !== this._contentMargins.left || right !== this._contentMargins.right) {\n            this._contentMargins = { left, right };\n            // Pull back into the NgZone since in some cases we could be outside. We need to be careful\n            // to do it only when something changed, otherwise we can end up hitting the zone too often.\n            this._ngZone.run(() => this._contentMarginChanges.next(this._contentMargins));\n        }\n    }\n    ngDoCheck() {\n        // If users opted into autosizing, do a check every change detection cycle.\n        if (this._autosize && this._isPushed()) {\n            // Run outside the NgZone, otherwise the debouncer will throw us into an infinite loop.\n            this._ngZone.runOutsideAngular(() => this._doCheckSubject.next());\n        }\n    }\n    /**\n     * Subscribes to drawer events in order to set a class on the main container element when the\n     * drawer is open and the backdrop is visible. This ensures any overflow on the container element\n     * is properly hidden.\n     */\n    _watchDrawerToggle(drawer) {\n        drawer._animationStarted.pipe(filter((event) => event.fromState !== event.toState), takeUntil(this._drawers.changes))\n            .subscribe((event) => {\n            // Set the transition class on the container so that the animations occur. This should not\n            // be set initially because animations should only be triggered via a change in state.\n            if (event.toState !== 'open-instant' && this._animationMode !== 'NoopAnimations') {\n                this._element.nativeElement.classList.add('mat-drawer-transition');\n            }\n            this.updateContentMargins();\n            this._changeDetectorRef.markForCheck();\n        });\n        if (drawer.mode !== 'side') {\n            drawer.openedChange.pipe(takeUntil(this._drawers.changes)).subscribe(() => this._setContainerClass(drawer.opened));\n        }\n    }\n    /**\n     * Subscribes to drawer onPositionChanged event in order to\n     * re-validate drawers when the position changes.\n     */\n    _watchDrawerPosition(drawer) {\n        if (!drawer) {\n            return;\n        }\n        // NOTE: We need to wait for the microtask queue to be empty before validating,\n        // since both drawers may be swapping positions at the same time.\n        drawer.onPositionChanged.pipe(takeUntil(this._drawers.changes)).subscribe(() => {\n            this._ngZone.onMicrotaskEmpty.pipe(take(1)).subscribe(() => {\n                this._validateDrawers();\n            });\n        });\n    }\n    /** Subscribes to changes in drawer mode so we can run change detection. */\n    _watchDrawerMode(drawer) {\n        if (drawer) {\n            drawer._modeChanged.pipe(takeUntil(merge(this._drawers.changes, this._destroyed)))\n                .subscribe(() => {\n                this.updateContentMargins();\n                this._changeDetectorRef.markForCheck();\n            });\n        }\n    }\n    /** Toggles the 'mat-drawer-opened' class on the main 'mat-drawer-container' element. */\n    _setContainerClass(isAdd) {\n        const classList = this._element.nativeElement.classList;\n        const className = 'mat-drawer-container-has-open';\n        if (isAdd) {\n            classList.add(className);\n        }\n        else {\n            classList.remove(className);\n        }\n    }\n    /** Validate the state of the drawer children components. */\n    _validateDrawers() {\n        this._start = this._end = null;\n        // Ensure that we have at most one start and one end drawer.\n        this._drawers.forEach(drawer => {\n            if (drawer.position == 'end') {\n                if (this._end != null && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                    throwMatDuplicatedDrawerError('end');\n                }\n                this._end = drawer;\n            }\n            else {\n                if (this._start != null && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                    throwMatDuplicatedDrawerError('start');\n                }\n                this._start = drawer;\n            }\n        });\n        this._right = this._left = null;\n        // Detect if we're LTR or RTL.\n        if (this._dir && this._dir.value === 'rtl') {\n            this._left = this._end;\n            this._right = this._start;\n        }\n        else {\n            this._left = this._start;\n            this._right = this._end;\n        }\n    }\n    /** Whether the container is being pushed to the side by one of the drawers. */\n    _isPushed() {\n        return (this._isDrawerOpen(this._start) && this._start.mode != 'over') ||\n            (this._isDrawerOpen(this._end) && this._end.mode != 'over');\n    }\n    _onBackdropClicked() {\n        this.backdropClick.emit();\n        this._closeModalDrawersViaBackdrop();\n    }\n    _closeModalDrawersViaBackdrop() {\n        // Close all open drawers where closing is not disabled and the mode is not `side`.\n        [this._start, this._end]\n            .filter(drawer => drawer && !drawer.disableClose && this._canHaveBackdrop(drawer))\n            .forEach(drawer => drawer._closeViaBackdropClick());\n    }\n    _isShowingBackdrop() {\n        return (this._isDrawerOpen(this._start) && this._canHaveBackdrop(this._start)) ||\n            (this._isDrawerOpen(this._end) && this._canHaveBackdrop(this._end));\n    }\n    _canHaveBackdrop(drawer) {\n        return drawer.mode !== 'side' || !!this._backdropOverride;\n    }\n    _isDrawerOpen(drawer) {\n        return drawer != null && drawer.opened;\n    }\n}\nMatDrawerContainer.ɵfac = function MatDrawerContainer_Factory(t) { return new (t || MatDrawerContainer)(ɵngcc0.ɵɵdirectiveInject(ɵngcc4.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(MAT_DRAWER_DEFAULT_AUTOSIZE), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatDrawerContainer.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatDrawerContainer, selectors: [[\"mat-drawer-container\"]], contentQueries: function MatDrawerContainer_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatDrawerContent, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatDrawer, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._content = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._allDrawers = _t);\n    } }, viewQuery: function MatDrawerContainer_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatDrawerContent, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._userContent = _t.first);\n    } }, hostAttrs: [1, \"mat-drawer-container\"], hostVars: 2, hostBindings: function MatDrawerContainer_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-drawer-container-explicit-backdrop\", ctx._backdropOverride);\n    } }, inputs: { autosize: \"autosize\", hasBackdrop: \"hasBackdrop\" }, outputs: { backdropClick: \"backdropClick\" }, exportAs: [\"matDrawerContainer\"], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: MAT_DRAWER_CONTAINER,\n                useExisting: MatDrawerContainer\n            }])], ngContentSelectors: _c2, decls: 4, vars: 2, consts: [[\"class\", \"mat-drawer-backdrop\", 3, \"mat-drawer-shown\", \"click\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"mat-drawer-backdrop\", 3, \"click\"]], template: function MatDrawerContainer_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c1);\n        ɵngcc0.ɵɵtemplate(0, MatDrawerContainer_div_0_Template, 1, 2, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵtemplate(3, MatDrawerContainer_mat_drawer_content_3_Template, 2, 0, \"mat-drawer-content\", 1);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.hasBackdrop);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx._content);\n    } }, directives: [ɵngcc5.NgIf, MatDrawerContent], styles: [_c5], encapsulation: 2, changeDetection: 0 });\nMatDrawerContainer.ctorParameters = () => [\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: ElementRef },\n    { type: NgZone },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_DRAWER_DEFAULT_AUTOSIZE,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatDrawerContainer.propDecorators = {\n    _allDrawers: [{ type: ContentChildren, args: [MatDrawer, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                },] }],\n    _content: [{ type: ContentChild, args: [MatDrawerContent,] }],\n    _userContent: [{ type: ViewChild, args: [MatDrawerContent,] }],\n    autosize: [{ type: Input }],\n    hasBackdrop: [{ type: Input }],\n    backdropClick: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDrawerContainer, [{\n        type: Component,\n        args: [{\n                selector: 'mat-drawer-container',\n                exportAs: 'matDrawerContainer',\n                template: \"<div class=\\\"mat-drawer-backdrop\\\" (click)=\\\"_onBackdropClicked()\\\" *ngIf=\\\"hasBackdrop\\\"\\n     [class.mat-drawer-shown]=\\\"_isShowingBackdrop()\\\"></div>\\n\\n<ng-content select=\\\"mat-drawer\\\"></ng-content>\\n\\n<ng-content select=\\\"mat-drawer-content\\\">\\n</ng-content>\\n<mat-drawer-content *ngIf=\\\"!_content\\\">\\n  <ng-content></ng-content>\\n</mat-drawer-content>\\n\",\n                host: {\n                    'class': 'mat-drawer-container',\n                    '[class.mat-drawer-container-explicit-backdrop]': '_backdropOverride'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                providers: [{\n                        provide: MAT_DRAWER_CONTAINER,\n                        useExisting: MatDrawerContainer\n                    }],\n                styles: [\".mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer{transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc4.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.ViewportRuler }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_DRAWER_DEFAULT_AUTOSIZE]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { backdropClick: [{\n            type: Output\n        }], autosize: [{\n            type: Input\n        }], hasBackdrop: [{\n            type: Input\n        }], _allDrawers: [{\n            type: ContentChildren,\n            args: [MatDrawer, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                }]\n        }], _content: [{\n            type: ContentChild,\n            args: [MatDrawerContent]\n        }], _userContent: [{\n            type: ViewChild,\n            args: [MatDrawerContent]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatSidenavContent extends MatDrawerContent {\n    constructor(changeDetectorRef, container, elementRef, scrollDispatcher, ngZone) {\n        super(changeDetectorRef, container, elementRef, scrollDispatcher, ngZone);\n    }\n}\nMatSidenavContent.ɵfac = function MatSidenavContent_Factory(t) { return new (t || MatSidenavContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(forwardRef(() => MatSidenavContainer)), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ScrollDispatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nMatSidenavContent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSidenavContent, selectors: [[\"mat-sidenav-content\"]], hostAttrs: [1, \"mat-drawer-content\", \"mat-sidenav-content\"], hostVars: 4, hostBindings: function MatSidenavContent_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"margin-left\", ctx._container._contentMargins.left, \"px\")(\"margin-right\", ctx._container._contentMargins.right, \"px\");\n    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatSidenavContent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, encapsulation: 2, changeDetection: 0 });\nMatSidenavContent.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: MatSidenavContainer, decorators: [{ type: Inject, args: [forwardRef(() => MatSidenavContainer),] }] },\n    { type: ElementRef },\n    { type: ScrollDispatcher },\n    { type: NgZone }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSidenavContent, [{\n        type: Component,\n        args: [{\n                selector: 'mat-sidenav-content',\n                template: '<ng-content></ng-content>',\n                host: {\n                    'class': 'mat-drawer-content mat-sidenav-content',\n                    '[style.margin-left.px]': '_container._contentMargins.left',\n                    '[style.margin-right.px]': '_container._contentMargins.right'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: MatSidenavContainer, decorators: [{\n                type: Inject,\n                args: [forwardRef(() => MatSidenavContainer)]\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc1.ScrollDispatcher }, { type: ɵngcc0.NgZone }]; }, null); })();\nclass MatSidenav extends MatDrawer {\n    constructor() {\n        super(...arguments);\n        this._fixedInViewport = false;\n        this._fixedTopGap = 0;\n        this._fixedBottomGap = 0;\n    }\n    /** Whether the sidenav is fixed in the viewport. */\n    get fixedInViewport() { return this._fixedInViewport; }\n    set fixedInViewport(value) { this._fixedInViewport = coerceBooleanProperty(value); }\n    /**\n     * The gap between the top of the sidenav and the top of the viewport when the sidenav is in fixed\n     * mode.\n     */\n    get fixedTopGap() { return this._fixedTopGap; }\n    set fixedTopGap(value) { this._fixedTopGap = coerceNumberProperty(value); }\n    /**\n     * The gap between the bottom of the sidenav and the bottom of the viewport when the sidenav is in\n     * fixed mode.\n     */\n    get fixedBottomGap() { return this._fixedBottomGap; }\n    set fixedBottomGap(value) { this._fixedBottomGap = coerceNumberProperty(value); }\n}\nMatSidenav.ɵfac = function MatSidenav_Factory(t) { return ɵMatSidenav_BaseFactory(t || MatSidenav); };\nMatSidenav.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSidenav, selectors: [[\"mat-sidenav\"]], hostAttrs: [\"tabIndex\", \"-1\", 1, \"mat-drawer\", \"mat-sidenav\"], hostVars: 17, hostBindings: function MatSidenav_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"align\", null);\n        ɵngcc0.ɵɵstyleProp(\"top\", ctx.fixedInViewport ? ctx.fixedTopGap : null, \"px\")(\"bottom\", ctx.fixedInViewport ? ctx.fixedBottomGap : null, \"px\");\n        ɵngcc0.ɵɵclassProp(\"mat-drawer-end\", ctx.position === \"end\")(\"mat-drawer-over\", ctx.mode === \"over\")(\"mat-drawer-push\", ctx.mode === \"push\")(\"mat-drawer-side\", ctx.mode === \"side\")(\"mat-drawer-opened\", ctx.opened)(\"mat-sidenav-fixed\", ctx.fixedInViewport);\n    } }, inputs: { fixedInViewport: \"fixedInViewport\", fixedTopGap: \"fixedTopGap\", fixedBottomGap: \"fixedBottomGap\" }, exportAs: [\"matSidenav\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 2, vars: 0, consts: [[1, \"mat-drawer-inner-container\"]], template: function MatSidenav_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n    } }, encapsulation: 2, data: { animation: [matDrawerAnimations.transformDrawer] }, changeDetection: 0 });\nMatSidenav.propDecorators = {\n    fixedInViewport: [{ type: Input }],\n    fixedTopGap: [{ type: Input }],\n    fixedBottomGap: [{ type: Input }]\n};\nconst ɵMatSidenav_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatSidenav);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSidenav, [{\n        type: Component,\n        args: [{\n                selector: 'mat-sidenav',\n                exportAs: 'matSidenav',\n                template: \"<div class=\\\"mat-drawer-inner-container\\\">\\r\\n  <ng-content></ng-content>\\r\\n</div>\\r\\n\",\n                animations: [matDrawerAnimations.transformDrawer],\n                host: {\n                    'class': 'mat-drawer mat-sidenav',\n                    'tabIndex': '-1',\n                    // must prevent the browser from aligning text based on value\n                    '[attr.align]': 'null',\n                    '[class.mat-drawer-end]': 'position === \"end\"',\n                    '[class.mat-drawer-over]': 'mode === \"over\"',\n                    '[class.mat-drawer-push]': 'mode === \"push\"',\n                    '[class.mat-drawer-side]': 'mode === \"side\"',\n                    '[class.mat-drawer-opened]': 'opened',\n                    '[class.mat-sidenav-fixed]': 'fixedInViewport',\n                    '[style.top.px]': 'fixedInViewport ? fixedTopGap : null',\n                    '[style.bottom.px]': 'fixedInViewport ? fixedBottomGap : null'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], null, { fixedInViewport: [{\n            type: Input\n        }], fixedTopGap: [{\n            type: Input\n        }], fixedBottomGap: [{\n            type: Input\n        }] }); })();\nclass MatSidenavContainer extends MatDrawerContainer {\n}\nMatSidenavContainer.ɵfac = function MatSidenavContainer_Factory(t) { return ɵMatSidenavContainer_BaseFactory(t || MatSidenavContainer); };\nMatSidenavContainer.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSidenavContainer, selectors: [[\"mat-sidenav-container\"]], contentQueries: function MatSidenavContainer_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatSidenavContent, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatSidenav, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._content = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._allDrawers = _t);\n    } }, hostAttrs: [1, \"mat-drawer-container\", \"mat-sidenav-container\"], hostVars: 2, hostBindings: function MatSidenavContainer_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-drawer-container-explicit-backdrop\", ctx._backdropOverride);\n    } }, exportAs: [\"matSidenavContainer\"], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: MAT_DRAWER_CONTAINER,\n                useExisting: MatSidenavContainer\n            }]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c4, decls: 4, vars: 2, consts: [[\"class\", \"mat-drawer-backdrop\", 3, \"mat-drawer-shown\", \"click\", 4, \"ngIf\"], [\"cdkScrollable\", \"\", 4, \"ngIf\"], [1, \"mat-drawer-backdrop\", 3, \"click\"], [\"cdkScrollable\", \"\"]], template: function MatSidenavContainer_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c3);\n        ɵngcc0.ɵɵtemplate(0, MatSidenavContainer_div_0_Template, 1, 2, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵtemplate(3, MatSidenavContainer_mat_sidenav_content_3_Template, 2, 0, \"mat-sidenav-content\", 1);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.hasBackdrop);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx._content);\n    } }, directives: [ɵngcc5.NgIf, MatSidenavContent, ɵngcc1.CdkScrollable], styles: [_c5], encapsulation: 2, changeDetection: 0 });\nMatSidenavContainer.propDecorators = {\n    _allDrawers: [{ type: ContentChildren, args: [MatSidenav, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                },] }],\n    _content: [{ type: ContentChild, args: [MatSidenavContent,] }]\n};\nconst ɵMatSidenavContainer_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatSidenavContainer);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSidenavContainer, [{\n        type: Component,\n        args: [{\n                selector: 'mat-sidenav-container',\n                exportAs: 'matSidenavContainer',\n                template: \"<div class=\\\"mat-drawer-backdrop\\\" (click)=\\\"_onBackdropClicked()\\\" *ngIf=\\\"hasBackdrop\\\"\\n     [class.mat-drawer-shown]=\\\"_isShowingBackdrop()\\\"></div>\\n\\n<ng-content select=\\\"mat-sidenav\\\"></ng-content>\\n\\n<ng-content select=\\\"mat-sidenav-content\\\">\\n</ng-content>\\n<mat-sidenav-content *ngIf=\\\"!_content\\\" cdkScrollable>\\n  <ng-content></ng-content>\\n</mat-sidenav-content>\\n\",\n                host: {\n                    'class': 'mat-drawer-container mat-sidenav-container',\n                    '[class.mat-drawer-container-explicit-backdrop]': '_backdropOverride'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                providers: [{\n                        provide: MAT_DRAWER_CONTAINER,\n                        useExisting: MatSidenavContainer\n                    }],\n                styles: [\".mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer{transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\\n\"]\n            }]\n    }], null, { _allDrawers: [{\n            type: ContentChildren,\n            args: [MatSidenav, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                }]\n        }], _content: [{\n            type: ContentChild,\n            args: [MatSidenavContent]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatSidenavModule {\n}\nMatSidenavModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatSidenavModule });\nMatSidenavModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatSidenavModule_Factory(t) { return new (t || MatSidenavModule)(); }, imports: [[\n            CommonModule,\n            MatCommonModule,\n            PlatformModule,\n            CdkScrollableModule,\n        ], CdkScrollableModule,\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSidenavModule, { declarations: function () { return [MatDrawer, MatDrawerContainer, MatDrawerContent, MatSidenav, MatSidenavContainer, MatSidenavContent]; }, imports: function () { return [CommonModule,\n        MatCommonModule,\n        PlatformModule,\n        CdkScrollableModule]; }, exports: function () { return [CdkScrollableModule,\n        MatCommonModule, MatDrawer, MatDrawerContainer, MatDrawerContent, MatSidenav, MatSidenavContainer, MatSidenavContent]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSidenavModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    MatCommonModule,\n                    PlatformModule,\n                    CdkScrollableModule,\n                ],\n                exports: [\n                    CdkScrollableModule,\n                    MatCommonModule,\n                    MatDrawer,\n                    MatDrawerContainer,\n                    MatDrawerContent,\n                    MatSidenav,\n                    MatSidenavContainer,\n                    MatSidenavContent,\n                ],\n                declarations: [\n                    MatDrawer,\n                    MatDrawerContainer,\n                    MatDrawerContent,\n                    MatSidenav,\n                    MatSidenavContainer,\n                    MatSidenavContent,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_DRAWER_DEFAULT_AUTOSIZE, MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY, MatDrawer, MatDrawerContainer, MatDrawerContent, MatSidenav, MatSidenavContainer, MatSidenavContent, MatSidenavModule, matDrawerAnimations, throwMatDuplicatedDrawerError, MAT_DRAWER_CONTAINER as ɵangular_material_src_material_sidenav_sidenav_a };\n\n//# sourceMappingURL=sidenav.js.map","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { LayoutRoutingModule } from './layout-routing.module';\nimport { LayoutComponent } from './layout.component';\nimport { HeaderComponent } from './header/header.component';\nimport { FooterComponent } from './footer/footer.component';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport { AngularMaterialModule } from '../utils/angular-material.module';\n\nconst COMPONENTS = [\n  LayoutComponent,\n  HeaderComponent,\n  FooterComponent\n]\n\n@NgModule({\n  declarations: [\n    ...COMPONENTS\n  ],\n  imports: [\n    CommonModule,\n    LayoutRoutingModule,\n    MatSidenavModule,\n    AngularMaterialModule\n  ],\n  exports: [\n    ...COMPONENTS\n  ]\n\n})\nexport class LayoutModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"footerContainer\">\n    <span>Ad Standards Council - Screening System - v2.0<br>\n       &copy; 2022. Ad Standards Council</span>\n</div>\n"]}