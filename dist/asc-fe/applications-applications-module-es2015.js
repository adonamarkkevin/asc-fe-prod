(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["applications-applications-module"],{

/***/ "+jm7":
/*!******************************************************************************************************************!*\
  !*** ./src/app/modules/pages/applications/s1-application/list-s1-application/list-s1-application.component.scss ***!
  \******************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (".applicantStatus,\ntd.mat-cell:last-of-type {\n  padding-right: 0;\n}\n\nth {\n  background-color: rgba(202, 202, 202, 0.438);\n  font-weight: 500;\n  color: black;\n}\n\n.row {\n  align-items: center;\n}\n\n.material-icons {\n  color: white;\n}\n\n.icon-red {\n  color: red;\n}\n\n.legend-content {\n  padding: 5px 10px;\n  border: #dadada solid 2px;\n  border-radius: 5px;\n}\n\n.legend-table {\n  width: 100%;\n  font-size: 10px;\n  font-weight: 600;\n}\n\n.legend-table .legend-box {\n  padding: 5px;\n  display: inline-block;\n  margin-right: 4%;\n  vertical-align: sub;\n  border: solid 1px #8a8a8a;\n}\n\n.legend-table td {\n  margin: auto;\n}\n\n.legend-table td .legend-orange {\n  background-color: #fca402;\n}\n\n.legend-table td .legend-green {\n  background-color: #8fcf8f;\n}\n\n.legend-table td .legend-blue {\n  background-color: lightblue;\n}\n\n.legend-table td .legend-red {\n  background-color: #ff8a7b;\n}\n\n.legend-table td .legend-purple {\n  background-color: violet;\n}\n\n.legend-table td .legend-yellow {\n  background-color: yellow;\n}\n\n.legend-table td .legend-pink {\n  background-color: lightpink;\n}\n\n.icon-black, .info-msg {\n  color: black;\n}\n\n.list-dialog-content {\n  margin: auto;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n.list-dialog-content button {\n  width: 100%;\n  border: none;\n  height: 70px;\n  white-space: normal;\n}\n\n.list-dialog-content .head-icon {\n  text-align: center;\n  margin-bottom: 5px;\n}\n\n.list-dialog-content .head-icon p {\n  font-weight: 700;\n  font-size: 20px;\n}\n\n.list-dialog-content .head-icon .sub-title {\n  color: gray;\n  font-style: italic;\n  font-size: 12px;\n  font-weight: 400;\n  line-height: 2px;\n}\n\n.list-dialog-content .head-icon .material-icons {\n  color: #910000;\n  font-size: 4em;\n}\n\n.list-dialog-content .head-icon .warning-msg {\n  text-align: center;\n  font-size: 18px;\n  font-weight: 500;\n  padding-top: 15px;\n  color: #910000;\n}\n\n.form-check {\n  margin: 0px 10px;\n}\n\n.form-check label {\n  font-weight: 600;\n}\n\n.ng-template {\n  text-align: end;\n  background-color: red;\n}\n\nspan {\n  padding: 0;\n  width: auto;\n}\n\n.c-badge {\n  position: relative;\n  top: -10px;\n  padding-left: 20px;\n  z-index: 10;\n}\n\n.payment-status-chip {\n  text-align: center;\n  border-radius: 20px;\n  padding: 2px 10px;\n  color: #fff;\n  font-size: 9px;\n  white-space: nowrap;\n  max-width: 90px;\n  margin: 0 auto;\n}\n\n.payment-status-chip--paid {\n  background-color: #28a745;\n}\n\n.payment-status-chip--unpaid {\n  background-color: #dc3545;\n}\n\n.payment-status-chip--for-approval {\n  background-color: #17a2b8;\n}\n\n.payment-status-chip--for-payment {\n  background-color: #ffc107;\n}\n\n.mat-column-icon button {\n  margin: 3px !important;\n}\n\n.mat-column-paymentStatus {\n  text-align: center;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9wYWdlcy9hcHBsaWNhdGlvbnMvczEtYXBwbGljYXRpb24vbGlzdC1zMS1hcHBsaWNhdGlvbi9saXN0LXMxLWFwcGxpY2F0aW9uLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztFQUdFLGdCQUFBO0FBQUY7O0FBR0E7RUFDRSw0Q0FBQTtFQUNBLGdCQUFBO0VBQ0EsWUFBQTtBQUFGOztBQUdBO0VBQ0UsbUJBQUE7QUFBRjs7QUFHQTtFQUNFLFlBQUE7QUFBRjs7QUFHQTtFQUNFLFVBQUE7QUFBRjs7QUFHQTtFQUNFLGlCQUFBO0VBQ0EseUJBQUE7RUFDQSxrQkFBQTtBQUFGOztBQUVBO0VBQ0UsV0FBQTtFQUNBLGVBQUE7RUFDQSxnQkFBQTtBQUNGOztBQUFFO0VBQ0UsWUFBQTtFQUNBLHFCQUFBO0VBQ0EsZ0JBQUE7RUFDQSxtQkFBQTtFQUNBLHlCQUFBO0FBRUo7O0FBQUU7RUFDRSxZQUFBO0FBRUo7O0FBREk7RUFDRSx5QkFBQTtBQUdOOztBQURJO0VBQ0kseUJBQUE7QUFHUjs7QUFBSTtFQUNJLDJCQUFBO0FBRVI7O0FBQ0k7RUFDSSx5QkFBQTtBQUNSOztBQUVJO0VBQ0ksd0JBQUE7QUFBUjs7QUFHSTtFQUNJLHdCQUFBO0FBRFI7O0FBSUk7RUFDSSwyQkFBQTtBQUZSOztBQVNBO0VBQ0UsWUFBQTtBQU5GOztBQVNBO0VBQ0UsWUFBQTtFQUNBLHNCQUFBO0VBQ0Esa0JBQUE7QUFORjs7QUFRRTtFQUNFLFdBQUE7RUFDQSxZQUFBO0VBQ0EsWUFBQTtFQUNBLG1CQUFBO0FBTko7O0FBU0U7RUFDRSxrQkFBQTtFQUNBLGtCQUFBO0FBUEo7O0FBUUk7RUFDRSxnQkFBQTtFQUNBLGVBQUE7QUFOTjs7QUFTSTtFQUNFLFdBQUE7RUFDQSxrQkFBQTtFQUNBLGVBQUE7RUFDQSxnQkFBQTtFQUNBLGdCQUFBO0FBUE47O0FBU0k7RUFDRSxjQUFBO0VBQ0EsY0FBQTtBQVBOOztBQVNJO0VBQ0Usa0JBQUE7RUFDQSxlQUFBO0VBQ0EsZ0JBQUE7RUFDQSxpQkFBQTtFQUNBLGNBQUE7QUFQTjs7QUFZQTtFQUNFLGdCQUFBO0FBVEY7O0FBVUU7RUFDRSxnQkFBQTtBQVJKOztBQVlBO0VBQ0UsZUFBQTtFQUNBLHFCQUFBO0FBVEY7O0FBWUE7RUFDRSxVQUFBO0VBQ0EsV0FBQTtBQVRGOztBQWFBO0VBQ0Usa0JBQUE7RUFDRSxVQUFBO0VBRUEsa0JBQUE7RUFDQSxXQUFBO0FBWEo7O0FBY0E7RUFDRSxrQkFBQTtFQUNBLG1CQUFBO0VBQ0EsaUJBQUE7RUFDQSxXQUFBO0VBQ0EsY0FBQTtFQUNBLG1CQUFBO0VBQ0EsZUFBQTtFQUNBLGNBQUE7QUFYRjs7QUFhRTtFQUNFLHlCQUFBO0FBWEo7O0FBY0U7RUFDRSx5QkFBQTtBQVpKOztBQWVFO0VBQ0UseUJBQUE7QUFiSjs7QUFnQkU7RUFDRSx5QkFBQTtBQWRKOztBQWtCQTtFQUNFLHNCQUFBO0FBZkY7O0FBa0JBO0VBQ0Usa0JBQUE7QUFmRiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcGFnZXMvYXBwbGljYXRpb25zL3MxLWFwcGxpY2F0aW9uL2xpc3QtczEtYXBwbGljYXRpb24vbGlzdC1zMS1hcHBsaWNhdGlvbi5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5hcHBsaWNhbnRTdGF0dXMsXHJcbnRkLm1hdC1jZWxsOmxhc3Qtb2YtdHlwZSB7XHJcbiAgLy8gdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIHBhZGRpbmctcmlnaHQ6IDA7XHJcbn1cclxuXHJcbnRoIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDIwMiwgMjAyLCAyMDIsIDAuNDM4KTtcclxuICBmb250LXdlaWdodDogNTAwO1xyXG4gIGNvbG9yOiBibGFjaztcclxufVxyXG5cclxuLnJvdyB7XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxufVxyXG5cclxuLm1hdGVyaWFsLWljb25zIHtcclxuICBjb2xvcjogd2hpdGU7XHJcbn1cclxuXHJcbi5pY29uLXJlZCB7XHJcbiAgY29sb3I6IHJlZDtcclxufVxyXG5cclxuLmxlZ2VuZC1jb250ZW50e1xyXG4gIHBhZGRpbmc6IDVweCAxMHB4O1xyXG4gIGJvcmRlcjogcmdiKDIxOCwgMjE4LCAyMTgpIHNvbGlkIDJweDtcclxuICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbn1cclxuLmxlZ2VuZC10YWJsZXtcclxuICB3aWR0aDogMTAwJTtcclxuICBmb250LXNpemU6IDEwcHg7XHJcbiAgZm9udC13ZWlnaHQ6IDYwMDtcclxuICAubGVnZW5kLWJveHtcclxuICAgIHBhZGRpbmc6IDVweDtcclxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgIG1hcmdpbi1yaWdodDogNCU7XHJcbiAgICB2ZXJ0aWNhbC1hbGlnbjogc3ViO1xyXG4gICAgYm9yZGVyOiBzb2xpZCAxcHggcmdiKDEzOCwgMTM4LCAxMzgpO1xyXG4gIH1cclxuICB0ZHtcclxuICAgIG1hcmdpbjogYXV0bztcclxuICAgIC5sZWdlbmQtb3JhbmdlIHtcclxuICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZjYTQwMjtcclxuICAgIH1cclxuICAgIC5sZWdlbmQtZ3JlZW4ge1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICM4ZmNmOGY7XHJcbiAgICB9XHJcblxyXG4gICAgLmxlZ2VuZC1ibHVlIHtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiBsaWdodGJsdWU7XHJcbiAgICB9XHJcblxyXG4gICAgLmxlZ2VuZC1yZWQge1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmZjhhN2I7XHJcbiAgICB9XHJcblxyXG4gICAgLmxlZ2VuZC1wdXJwbGUge1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IHZpb2xldDtcclxuICAgIH1cclxuXHJcbiAgICAubGVnZW5kLXllbGxvdyB7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogeWVsbG93O1xyXG4gICAgfVxyXG5cclxuICAgIC5sZWdlbmQtcGluayB7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjpsaWdodHBpbms7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuXHJcbn1cclxuXHJcbi5pY29uLWJsYWNrLCAuaW5mby1tc2d7XHJcbiAgY29sb3I6IGJsYWNrO1xyXG59XHJcblxyXG4ubGlzdC1kaWFsb2ctY29udGVudHtcclxuICBtYXJnaW46IGF1dG87XHJcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcclxuICBvdmVyZmxvdy14OiBoaWRkZW47XHJcblxyXG4gIGJ1dHRvbntcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgYm9yZGVyOiBub25lO1xyXG4gICAgaGVpZ2h0OiA3MHB4O1xyXG4gICAgd2hpdGUtc3BhY2U6IG5vcm1hbDtcclxuICB9XHJcblxyXG4gIC5oZWFkLWljb257XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBtYXJnaW4tYm90dG9tOiA1cHg7XHJcbiAgICBwe1xyXG4gICAgICBmb250LXdlaWdodDogNzAwO1xyXG4gICAgICBmb250LXNpemU6IDIwcHg7XHJcblxyXG4gICAgfVxyXG4gICAgLnN1Yi10aXRsZXtcclxuICAgICAgY29sb3I6IGdyYXk7XHJcbiAgICAgIGZvbnQtc3R5bGU6IGl0YWxpYztcclxuICAgICAgZm9udC1zaXplOiAxMnB4O1xyXG4gICAgICBmb250LXdlaWdodDogNDAwO1xyXG4gICAgICBsaW5lLWhlaWdodDogMnB4O1xyXG4gICAgfVxyXG4gICAgLm1hdGVyaWFsLWljb25ze1xyXG4gICAgICBjb2xvcjogcmdiKDE0NSwgMCwgMCk7XHJcbiAgICAgIGZvbnQtc2l6ZTogNGVtO1xyXG4gICAgfVxyXG4gICAgLndhcm5pbmctbXNne1xyXG4gICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgIGZvbnQtc2l6ZTogMThweDtcclxuICAgICAgZm9udC13ZWlnaHQ6IDUwMDtcclxuICAgICAgcGFkZGluZy10b3A6IDE1cHg7XHJcbiAgICAgIGNvbG9yOiByZ2IoMTQ1LCAwLCAwKTtcclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcbi5mb3JtLWNoZWNre1xyXG4gIG1hcmdpbjogMHB4IDEwcHg7XHJcbiAgbGFiZWx7XHJcbiAgICBmb250LXdlaWdodDogNjAwO1xyXG4gIH1cclxufVxyXG5cclxuLm5nLXRlbXBsYXRle1xyXG4gIHRleHQtYWxpZ246IGVuZDtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZWQ7XHJcbn1cclxuXHJcbnNwYW57XHJcbiAgcGFkZGluZzogMDtcclxuICB3aWR0aDogYXV0bztcclxuXHJcbn1cclxuXHJcbi5jLWJhZGdle1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIHRvcDogLTEwcHg7XHJcbiAgICAvLyBsZWZ0OiAyMnB4O1xyXG4gICAgcGFkZGluZy1sZWZ0OiAyMHB4O1xyXG4gICAgei1pbmRleDogMTA7XHJcbn1cclxuXHJcbi5wYXltZW50LXN0YXR1cy1jaGlwIHtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgYm9yZGVyLXJhZGl1czogMjBweDtcclxuICBwYWRkaW5nOiAycHggMTBweDtcclxuICBjb2xvcjogI2ZmZjtcclxuICBmb250LXNpemU6IDlweDtcclxuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xyXG4gIG1heC13aWR0aDogOTBweDtcclxuICBtYXJnaW46IDAgYXV0bztcclxuXHJcbiAgJi0tcGFpZCB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjhhNzQ1O1xyXG4gIH1cclxuXHJcbiAgJi0tdW5wYWlkIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNkYzM1NDU7XHJcbiAgfVxyXG5cclxuICAmLS1mb3ItYXBwcm92YWwge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzE3YTJiODtcclxuICB9XHJcblxyXG4gICYtLWZvci1wYXltZW50IHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmMxMDc7XHJcbiAgfVxyXG59XHJcblxyXG4ubWF0LWNvbHVtbi1pY29uIGJ1dHRvbiB7XHJcbiAgbWFyZ2luOiAzcHggIWltcG9ydGFudDtcclxufVxyXG5cclxuLm1hdC1jb2x1bW4tcGF5bWVudFN0YXR1cyB7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG59XHJcbiJdfQ== */");

/***/ }),

/***/ "/s5X":
/*!********************************************************************************************************************!*\
  !*** ./src/app/modules/pages/applications/schedule-of-fees/special-applications/special-applications.component.ts ***!
  \********************************************************************************************************************/
/*! exports provided: SpecialApplicationsComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SpecialApplicationsComponent", function() { return SpecialApplicationsComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "mrSG");
/* harmony import */ var _raw_loader_special_applications_component_html__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! raw-loader!./special-applications.component.html */ "c427");
/* harmony import */ var _special_applications_component_scss__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./special-applications.component.scss */ "UMNn");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/material/dialog */ "0IaG");
/* harmony import */ var _angular_material_paginator__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/material/paginator */ "M9IT");
/* harmony import */ var _angular_material_sort__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/material/sort */ "Dh3D");
/* harmony import */ var _angular_material_table__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/material/table */ "+0xr");
/* harmony import */ var _services__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @services */ "dJ3e");
/* harmony import */ var _shared__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @shared */ "M0ag");
/* harmony import */ var _modal_special_applications_modal_special_applications_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./modal-special-applications/modal-special-applications.component */ "Sedh");











let SpecialApplicationsComponent = class SpecialApplicationsComponent {
    constructor(apiService, dialog, dataStorage) {
        this.apiService = apiService;
        this.dialog = dialog;
        this.dataStorage = dataStorage;
        this.displayedColumns = ['referenceCode', 'typeOfApplication', 'brand', 'medium', 'applicantCompanyName', 'paymentStatus'];
        this.paymentList = [];
    }
    ngOnInit() {
        this.currentUser = this.dataStorage.getUserAccount();
        this.getS2PaymentList();
    }
    getS2PaymentList() {
        this.apiService.findAll(_shared__WEBPACK_IMPORTED_MODULE_9__["ENDPOINTS"].scheduleOfFeesS2Special).subscribe((res) => {
            this.paymentList = res;
            this.dataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_7__["MatTableDataSource"](this.paymentList);
            this.dataSource.paginator = this.paginator;
            this.dataSource.sort = this.sort;
        });
    }
    openModal(res) {
        const dialogRef = this.dialog.open(_modal_special_applications_modal_special_applications_component__WEBPACK_IMPORTED_MODULE_10__["ModalSpecialApplicationsComponent"], {
            width: '60%',
            height: '85%',
            data: res
        });
        dialogRef.afterClosed().subscribe(result => {
            this.ngOnInit();
        });
    }
};
SpecialApplicationsComponent.ctorParameters = () => [
    { type: _services__WEBPACK_IMPORTED_MODULE_8__["ApiService"] },
    { type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_4__["MatDialog"] },
    { type: _services__WEBPACK_IMPORTED_MODULE_8__["DataStorageService"] }
];
SpecialApplicationsComponent.propDecorators = {
    paginator: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["ViewChild"], args: [_angular_material_paginator__WEBPACK_IMPORTED_MODULE_5__["MatPaginator"], { static: false },] }],
    sort: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["ViewChild"], args: [_angular_material_sort__WEBPACK_IMPORTED_MODULE_6__["MatSort"], { static: false },] }],
    table: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["ViewChild"], args: [_angular_material_table__WEBPACK_IMPORTED_MODULE_7__["MatTable"], { static: false },] }]
};
SpecialApplicationsComponent = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_3__["Component"])({
        selector: 'app-special-applications',
        template: _raw_loader_special_applications_component_html__WEBPACK_IMPORTED_MODULE_1__["default"],
        styles: [_special_applications_component_scss__WEBPACK_IMPORTED_MODULE_2__["default"]]
    })
], SpecialApplicationsComponent);



/***/ }),

/***/ "0NC8":
/*!*****************************************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/modules/pages/applications/attachment-document/attachment-document.component.html ***!
  \*****************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div class=\"row\">\r\n  <b\r\n    *ngIf=\"\r\n      currentUser?.userRole?.name == 'ROLE_APPLICANT' &&\r\n      applicationStage === 'S1-APPLICATION'\r\n    \"\r\n    ><b class=\"material-icons\">error_outline</b> Attachments' total file size\r\n    should not exceed 15MB.</b\r\n  >\r\n\r\n  <form [formGroup]=\"attachmentDocumentForm\">\r\n    <mat-tab-group\r\n      mat-align-tabs=\"center\"\r\n      class=\"mat-tab-group\"\r\n      (selectedTabChange)=\"changeTab($event)\"\r\n    >\r\n      <mat-tab label=\"SUPPORT DOCUMENT\" *ngIf=\"S2SupportDoc\">\r\n        <div class=\"mat-tab\">\r\n          <div class=\"col comment\">\r\n            <label>SUPPORT DOCUMENT</label>\r\n            <div class=\"row\">\r\n              <!-- <h4>\r\n                <i class=\"material-icons\">bookmark</i> &nbsp;{{labelMainDocument}}\r\n              </h4> -->\r\n              <br />\r\n              <div class=\"col-md-12\" appearance=\"outline\">\r\n                <mat-label *ngIf=\"s2SupportDocument\">Filename: </mat-label>\r\n                <input\r\n                  #mainInput\r\n                  matInput\r\n                  [value]=\"s2SupportDocument?.originalFilename\"\r\n                  disabled\r\n                  *ngIf=\"s2SupportDocument\"\r\n                /><br />\r\n\r\n                <input\r\n                  #mainFile\r\n                  class=\"file-upload\"\r\n                  type=\"file\"\r\n                  accept=\".pdf\"\r\n                  (change)=\"selectS2SupprtDoc($event)\"\r\n                  [hidden]=\"\r\n                    (isAscUser && isDisableFieldOnUpdate) ||\r\n                    s2SupportDocument?.originalFilename != null\r\n                  \"\r\n                  *ngIf=\"\r\n                    s2SupportAttchmentDocuments?.length >= 0 ||\r\n                    (originalAttachmentDocuments?.length >= 1 &&\r\n                      originalAttachmentDocuments[0] === null) ||\r\n                    s1Application?.internalStatus == 'SAVED' ||\r\n                    originalAttachmentDocuments[0]?.originalFilename != null\r\n                  \"\r\n                />\r\n              </div>\r\n              <div class=\"row\"><br /></div>\r\n              <div class=\"col-md-12\" appearance=\"outline\">\r\n                <button\r\n                  mat-raised-button\r\n                  class=\"button-red button-right\"\r\n                  (click)=\"viewS2SupportDoc()\"\r\n                  *ngIf=\"validateDeleteBtn() || s2SupportDocument\"\r\n                >\r\n                  <i class=\"material-icons add-document\">open_in_new</i> VIEW\r\n                  DOCUMENT\r\n                </button>\r\n                &nbsp; &nbsp;\r\n                <button\r\n                  mat-raised-button\r\n                  class=\"button-red button-right\"\r\n                  (click)=\"deleteS2SupportDoc()\"\r\n                  *ngIf=\"validateDeleteBtn()\"\r\n                >\r\n                  <i class=\"material-icons add-document\">delete</i> DELETE\r\n                  ATTACHMENT\r\n                </button>\r\n                <!-- [hidden]=\"(!showMainDocumentViewButton) ||\r\n                  (currentUser?.userRole?.name!='ROLE_APPLICANT' && currentUser?.userRole?.name!='ROLE_ENCODER') ||\r\n                  (currentUser.userRole.name=='ROLE_ENCODER' && s1Application?.internalStatus !== undefined ) ||\r\n                  applicationStage === 'S2-APPLICATION' || applicationStage === 'S1-Preview' || s1Application?.decisionStatus=='APPROVED'||s1Application?.decisionStatus=='APPROVED W/ CAUTION'\" -->\r\n\r\n                &nbsp; &nbsp;\r\n                <button\r\n                  mat-raised-button\r\n                  class=\"button-red button-right\"\r\n                  (click)=\"uploadDocument()\"\r\n                  [disabled]=\"!safeURLSupportDoc\"\r\n                  [hidden]=\"isAscUser && isDisableFieldOnUpdate\"\r\n                  *ngIf=\"safeURLSupportDoc\"\r\n                >\r\n                  <i class=\"material-icons add-document\">upload</i> UPLOAD\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </mat-tab>\r\n\r\n      <!-- TAB FOR ORIGINAL -->\r\n      <mat-tab label=\"ORIGINAL\" *ngIf=\"!S2SupportDoc\">\r\n        <div class=\"mat-tab\">\r\n          <div class=\"col comment\">\r\n            <label>ORIGINAL</label>\r\n            <!-- MAIN DOCUMENT -->\r\n            <div class=\"row\">\r\n              <h4>\r\n                <i class=\"material-icons\">bookmark</i> &nbsp;{{\r\n                  labelMainDocument ? labelMainDocument : \"MAIN DOCUMENT\"\r\n                }}\r\n              </h4>\r\n              <br />\r\n              <div class=\"col-md-12\" appearance=\"outline\">\r\n                <mat-label\r\n                  *ngIf=\"originalAttachmentDocuments[0]?.originalFilename\"\r\n                  >Filename:\r\n                </mat-label>\r\n                <input\r\n                  #mainInput\r\n                  matInput\r\n                  [value]=\"originalAttachmentDocuments[0]?.originalFilename\"\r\n                  disabled\r\n                  *ngIf=\"originalAttachmentDocuments[0]?.originalFilename\"\r\n                /><br />\r\n\r\n                <input\r\n                  #mainFile\r\n                  class=\"file-upload\"\r\n                  type=\"file\"\r\n                  accept=\".pdf\"\r\n                  (change)=\"selectFile($event, 'MAIN')\"\r\n                  [hidden]=\"\r\n                    (isAscUser && isDisableFieldOnUpdate) ||\r\n                    originalAttachmentDocuments[0]?.originalFilename != null\r\n                  \"\r\n                  *ngIf=\"\r\n                    originalAttachmentDocuments?.length == 0 ||\r\n                    (originalAttachmentDocuments?.length >= 1 &&\r\n                      originalAttachmentDocuments[0] === null) ||\r\n                    s1Application?.internalStatus == 'SAVED' ||\r\n                    originalAttachmentDocuments[0]?.originalFilename != null\r\n                  \"\r\n                />\r\n              </div>\r\n\r\n              <div class=\"row\"><br /></div>\r\n              <div class=\"col-md-12\" appearance=\"outline\">\r\n                <button\r\n                  mat-raised-button\r\n                  class=\"button-red button-right\"\r\n                  (click)=\"viewDocument('MAIN')\"\r\n                  *ngIf=\"\r\n                    showMainDocumentViewButton ||\r\n                    originalAttachmentDocuments[0]?.originalFilename\r\n                  \"\r\n                >\r\n                  <i class=\"material-icons add-document\">open_in_new</i> VIEW\r\n                  DOCUMENT\r\n                </button>\r\n                &nbsp; &nbsp;\r\n                <button\r\n                  mat-raised-button\r\n                  class=\"button-red button-right\"\r\n                  (click)=\"deleteUploadedFile('MAIN')\"\r\n                  [hidden]=\"\r\n                    (currentUser?.userRole?.name != 'ROLE_APPLICANT' &&\r\n                      currentUser?.userRole?.name != 'ROLE_ENCODER') ||\r\n                    (currentUser.userRole.name == 'ROLE_ENCODER' &&\r\n                      s1Application?.internalStatus !== undefined) ||\r\n                    applicationStage === 'S2-APPLICATION' ||\r\n                    applicationStage === 'S1-Preview' ||\r\n                    s1Application?.decisionStatus == 'APPROVED' ||\r\n                    s1Application?.decisionStatus == 'APPROVED W/ CAUTION' ||\r\n                    s1Application?.decisionStatus == 'INCOMPLETE'\r\n                  \"\r\n                  *ngIf=\"\r\n                    showMainDocumentViewButton ||\r\n                    originalAttachmentDocuments[0]?.originalFilename\r\n                  \"\r\n                >\r\n                  <i class=\"material-icons add-document\">delete</i> DELETE\r\n                  ATTACHMENT\r\n                </button>\r\n                <!-- [hidden]=\"(!showMainDocumentViewButton) ||\r\n                  (currentUser?.userRole?.name!='ROLE_APPLICANT' && currentUser?.userRole?.name!='ROLE_ENCODER') ||\r\n                  (currentUser.userRole.name=='ROLE_ENCODER' && s1Application?.internalStatus !== undefined ) ||\r\n                  applicationStage === 'S2-APPLICATION' || applicationStage === 'S1-Preview' || s1Application?.decisionStatus=='APPROVED'||s1Application?.decisionStatus=='APPROVED W/ CAUTION'\" -->\r\n\r\n                &nbsp; &nbsp;\r\n                <button\r\n                  mat-raised-button\r\n                  class=\"button-red button-right\"\r\n                  (click)=\"uploadDocument()\"\r\n                  [disabled]=\"!safeURLMainDoc || !showMainDocumentUploadButton\"\r\n                  [hidden]=\"\r\n                    (isAscUser && isDisableFieldOnUpdate) ||\r\n                    (s1Application?.submissionType === 'ORIGINAL' &&\r\n                      (s1Application?.decisionStatus == 'APPROVED' ||\r\n                        s1Application?.decisionStatus ==\r\n                          'APPROVED W/ CAUTION' ||\r\n                        s1Application?.decisionStatus == 'INCOMPLETE'))\r\n                  \"\r\n                  *ngIf=\"\r\n                    originalAttachmentDocuments[0]?.originalFilename == null ||\r\n                    showMainDocumentUploadButton\r\n                  \"\r\n                >\r\n                  <i class=\"material-icons add-document\">upload</i> UPLOAD\r\n                </button>\r\n              </div>\r\n              <div class=\"col-md-12\">\r\n                <hr />\r\n              </div>\r\n            </div>\r\n\r\n            <!-- SUPPORTING DOC -->\r\n            <div\r\n              class=\"row\"\r\n              *ngIf=\"\r\n                showSupportDocumentFrame == true ||\r\n                originalAttachmentDocuments?.length > 0\r\n              \"\r\n            >\r\n              <h4>\r\n                <i class=\"material-icons\">bookmark</i> &nbsp;SUPPORT DOCUMENTS\r\n              </h4>\r\n\r\n              <!-- Display if no support document was attached -->\r\n              <div\r\n                class=\"col-md-12\"\r\n                appearance=\"outline\"\r\n                [hidden]=\"\r\n                  (isAscUser && isDisableFieldOnUpdate) ||\r\n                  applicationStage === 'S2-APPLICATION'\r\n                \"\r\n                *ngIf=\"\r\n                  ((s1Application?.internalStatus ===\r\n                    'S1_APPLICATION_REVIEWED' ||\r\n                    s1Application?.internalStatus ===\r\n                      'COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER') &&\r\n                    (s1Application?.decisionStatus == 'APPROVED' ||\r\n                      s1Application?.decisionStatus == 'APPROVED W/ CAUTION' ||\r\n                      s1Application?.decisionStatus === 'INCOMPLETE')) ||\r\n                  originalAttachmentDocuments?.length > 0\r\n                \"\r\n              >\r\n                <mat-checkbox\r\n                  (click)=\"verifyNoDocumentAttached()\"\r\n                  [(ngModel)]=\"s1Application.hasNoSupportingDocs\"\r\n                  (checked)=\"(s1Application.hasNoSupportingDocs)\"\r\n                  formControlName=\"hasNoSupportingDocs\"\r\n                  [hidden]=\"\r\n                    originalAttachmentDocuments[1]?.originalFilename ||\r\n                    s1Application?.internalStatus ===\r\n                      'S1_APPLICATION_REVIEWED' ||\r\n                    s1Application?.internalStatus ===\r\n                      'COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER' ||\r\n                    s1Application?.internalStatus === 'REVISION_SCREENED' ||\r\n                    (s1Application?.internalStatus ===\r\n                      'S1_APPLICATION_REJECTED' &&\r\n                      (s1Application?.decisionStatus == 'APPROVED' ||\r\n                        s1Application?.decisionStatus ==\r\n                          'APPROVED W/ CAUTION' ||\r\n                        s1Application?.decisionStatus == 'INCOMPLETE'))\r\n                  \"\r\n                  *ngIf=\"\r\n                    (currentUser.userRole.name == 'ROLE_APPLICANT' &&\r\n                      originalAttachmentDocuments?.length > 0) ||\r\n                    (currentUser.userRole.name == 'ROLE_ENCODER' &&\r\n                      s1Application?.internalStatus === undefined)\r\n                  \"\r\n                >\r\n                  I certify that no supporting document is attached to this S1\r\n                  application.</mat-checkbox\r\n                >\r\n                <br />\r\n              </div>\r\n\r\n              <p\r\n                [hidden]=\"\r\n                  originalAttachmentDocuments[1]?.originalFilename ||\r\n                  (currentUser.userRole.name == 'ROLE_ENCODER' &&\r\n                    s1Application?.internalStatus === undefined)\r\n                \"\r\n                *ngIf=\"\r\n                  isAscUser ||\r\n                  currentUser.userRole.name == 'ROLE_ADMIN' ||\r\n                  currentUser.userRole.name == 'ROLE_SUPER_ADMIN' ||\r\n                  applicationStage === 'S2-APPLICATION' ||\r\n                  applicationStage === 'S1-Preview' ||\r\n                  (s1Application?.internalStatus ===\r\n                    'S1_APPLICATION_REVIEWED' &&\r\n                    (s1Application?.decisionStatus == 'APPROVED' ||\r\n                      s1Application?.decisionStatus ==\r\n                        'APPROVED W/ CAUTION')) ||\r\n                  (s1Application?.internalStatus ===\r\n                    'COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER' &&\r\n                    s1Application?.decisionStatus === 'INCOMPLETE') ||\r\n                  (s1Application?.internalStatus === 'REVISION_SCREENED' &&\r\n                    s1Application?.decisionStatus === 'INCOMPLETE') ||\r\n                  (currentUser.userRole.name == 'ROLE_APPLICANT' &&\r\n                    s1Application?.hasNoSupportingDocs &&\r\n                    s1Application?.internalStatus !== 'SAVED' &&\r\n                    s1Application?.internalStatus !== undefined)\r\n                \"\r\n              >\r\n                Supporting Document was not submitted.\r\n              </p>\r\n              <div class=\"col-md-12\"><br /></div>\r\n\r\n              <div\r\n                *ngIf=\"\r\n                  !s1Application.hasNoSupportingDocs ||\r\n                  originalAttachmentDocuments[1]?.originalFilename === null\r\n                \"\r\n              >\r\n                <div class=\"col-md-12\" appearance=\"outline\">\r\n                  <mat-label\r\n                    *ngIf=\"originalAttachmentDocuments[1]?.originalFilename\"\r\n                    >Filename:\r\n                  </mat-label>\r\n                  <input\r\n                    #supportiveInput\r\n                    matInput\r\n                    [value]=\"originalAttachmentDocuments[1]?.originalFilename\"\r\n                    disabled\r\n                    *ngIf=\"originalAttachmentDocuments[1]?.originalFilename\"\r\n                  /><br />\r\n\r\n                  <input\r\n                    #supportiveFile\r\n                    class=\"file-upload\"\r\n                    type=\"file\"\r\n                    accept=\".pdf\"\r\n                    (change)=\"selectFile($event, 'SUPPORTIVE')\"\r\n                    [hidden]=\"\r\n                      (isAscUser && isDisableFieldOnUpdate) ||\r\n                      s1Application.hasNoSupportingDocs ||\r\n                      originalAttachmentDocuments[1]?.originalFilename !=\r\n                        null ||\r\n                      s1Application?.internalStatus ===\r\n                        'S1_APPLICATION_REVIEWED' ||\r\n                      (s1Application?.internalStatus ===\r\n                        'COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER' &&\r\n                        (s1Application?.decisionStatus === 'APPROVED' ||\r\n                          s1Application?.decisionStatus ===\r\n                            'APPROVED W/ CAUTION' ||\r\n                          s1Application?.decisionStatus === 'INCOMPLETE')) ||\r\n                      (currentUser.userRole.name == 'ROLE_ENCODER' &&\r\n                        s1Application?.internalStatus !== undefined) ||\r\n                      s1Application?.submissionType === 'REVISION' ||\r\n                      s1Application?.submissionType === 'COMPLIANCE'\r\n                    \"\r\n                    *ngIf=\"\r\n                      originalAttachmentDocuments?.length == 1 ||\r\n                      (originalAttachmentDocuments?.length > 1 &&\r\n                        originalAttachmentDocuments[1] === null) ||\r\n                      originalAttachmentDocuments[1]?.originalFilename !=\r\n                        null ||\r\n                      !safeURLSupportDoc ||\r\n                      !showSupportiveDocumentUploadButton\r\n                    \"\r\n                  />\r\n                </div>\r\n\r\n                <div class=\"row\"><br /></div>\r\n                <div class=\"col-md-12\" appearance=\"outline\">\r\n                  <button\r\n                    mat-raised-button\r\n                    class=\"button-red button-right\"\r\n                    (click)=\"viewDocument('SUPPORTIVE')\"\r\n                    *ngIf=\"\r\n                      showSupportiveDocumentViewButton ||\r\n                      originalAttachmentDocuments[1]?.originalFilename\r\n                    \"\r\n                  >\r\n                    <i class=\"material-icons add-document\">open_in_new</i> VIEW\r\n                    DOCUMENT\r\n                  </button>\r\n                  &nbsp; &nbsp;\r\n                  <button\r\n                    mat-raised-button\r\n                    class=\"button-red button-right\"\r\n                    (click)=\"deleteUploadedFile('SUPPORTIVE')\"\r\n                    [hidden]=\"\r\n                      (currentUser?.userRole?.name != 'ROLE_APPLICANT' &&\r\n                        currentUser?.userRole?.name != 'ROLE_ENCODER') ||\r\n                      (currentUser.userRole.name == 'ROLE_ENCODER' &&\r\n                        s1Application?.internalStatus !== undefined) ||\r\n                      applicationStage === 'S2-APPLICATION' ||\r\n                      applicationStage === 'S1-Preview' ||\r\n                      s1Application?.decisionStatus == 'APPROVED' ||\r\n                      s1Application?.decisionStatus == 'APPROVED W/ CAUTION' ||\r\n                      s1Application?.decisionStatus == 'INCOMPLETE'\r\n                    \"\r\n                    *ngIf=\"\r\n                      showSupportiveDocumentViewButton ||\r\n                      originalAttachmentDocuments[1]?.originalFilename\r\n                    \"\r\n                  >\r\n                    <i class=\"material-icons add-document\">delete</i> DELETE\r\n                    ATTACHMENT\r\n                  </button>\r\n                  &nbsp; &nbsp;\r\n                  <button\r\n                    mat-raised-button\r\n                    class=\"button-red button-right\"\r\n                    (click)=\"uploadDocument()\"\r\n                    [disabled]=\"\r\n                      !safeURLSupportDoc || !showSupportiveDocumentUploadButton\r\n                    \"\r\n                    [hidden]=\"\r\n                      (isAscUser && isDisableFieldOnUpdate) ||\r\n                      (s1Application?.submissionType === 'ORIGINAL' &&\r\n                        (s1Application?.decisionStatus == 'APPROVED' ||\r\n                          s1Application?.decisionStatus ==\r\n                            'APPROVED W/ CAUTION' ||\r\n                          s1Application?.decisionStatus == 'INCOMPLETE'))\r\n                    \"\r\n                    *ngIf=\"showSupportiveDocumentUploadButton\"\r\n                  >\r\n                    <i class=\"material-icons add-document\">upload</i> UPLOAD\r\n                  </button>\r\n                </div>\r\n                <div class=\"row\"><br /></div>\r\n                <br />\r\n              </div>\r\n            </div>\r\n\r\n            <div\r\n              class=\"no-record\"\r\n              *ngIf=\"\r\n                originalAttachmentDocuments?.length === 0 &&\r\n                originalAttachmentDocuments[0]?.originalFilename === undefined\r\n              \"\r\n            >\r\n              No results found.\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </mat-tab>\r\n      <!-- END OF TAB FOR ORIGINAL -->\r\n\r\n      <!-- ////////////////////////////////////////// DYNAMIC ////////////////////////////////////////// -->\r\n\r\n      <!-- TAB FOR REVISION -->\r\n      <mat-tab\r\n        label=\"REVISION\"\r\n        *ngIf=\"\r\n          revisionAttachmentDocuments?.length > 0 ||\r\n          ((s1Application?.internalStatus === 'S1_APPLICATION_REVIEWED' ||\r\n            s1Application?.internalStatus ===\r\n              'COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER') &&\r\n            (s1Application?.decisionStatus == 'APPROVED' ||\r\n              s1Application?.decisionStatus === 'APPROVED W/ CAUTION') &&\r\n            applicationStage !== 'S2-APPLICATION')\r\n        \"\r\n      >\r\n        <div class=\"mat-tab\">\r\n          <div class=\"col comment\">\r\n            <label>REVISION</label>\r\n            <!---------- NEW ATTACHMENTS ---------->\r\n\r\n            <!-- MAIN DOCUMENT -->\r\n            <div\r\n              class=\"row\"\r\n              [hidden]=\"\r\n                (isAscUser && isDisableFieldOnUpdate) ||\r\n                applicationStage === 'S2-APPLICATION' ||\r\n                (currentUser.userRole.name == 'ROLE_ENCODER' &&\r\n                  s1Application?.internalStatus !== undefined)\r\n              \"\r\n              *ngIf=\"\r\n                showSupportDocumentFrameR ||\r\n                tempRevisionAttachmentDocuments?.length > 0 ||\r\n                ((s1Application?.internalStatus === 'S1_APPLICATION_REVIEWED' ||\r\n                  s1Application?.internalStatus ===\r\n                    'COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER') &&\r\n                  (s1Application?.decisionStatus === 'APPROVED' ||\r\n                    s1Application?.decisionStatus === 'APPROVED W/ CAUTION'))\r\n              \"\r\n            >\r\n              <h4>\r\n                <i class=\"material-icons\">bookmark</i> &nbsp;{{\r\n                  labelMainDocument ? labelMainDocument : \"MAIN DOCUMENT\"\r\n                }}\r\n              </h4>\r\n              <br />\r\n              <div class=\"col-md-12\" appearance=\"outline\">\r\n                <mat-label\r\n                  *ngIf=\"\r\n                    tempRevisionAttachmentDocuments?.length > 0 &&\r\n                    tempRevisionAttachmentDocuments[0]?.originalFilename\r\n                  \"\r\n                  >Filename:\r\n                </mat-label>\r\n                <input\r\n                  #mainInput\r\n                  matInput\r\n                  *ngIf=\"!s1Application?.hasOngoingRevision\"\r\n                  [value]=\"tempRevisionAttachmentDocuments[0]?.originalFilename\"\r\n                  disabled\r\n                /><br />\r\n\r\n                <input\r\n                  #mainFile\r\n                  class=\"file-upload\"\r\n                  type=\"file\"\r\n                  accept=\".pdf\"\r\n                  (change)=\"selectFile($event, 'MAIN')\"\r\n                  [hidden]=\"\r\n                    (isAscUser && isDisableFieldOnUpdate) ||\r\n                    tempRevisionAttachmentDocuments[0]?.originalFilename\r\n                  \"\r\n                  *ngIf=\"\r\n                    (s1Application?.internalStatus ===\r\n                      'S1_APPLICATION_REVIEWED' ||\r\n                      s1Application?.internalStatus ===\r\n                        'COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER') &&\r\n                    (s1Application?.decisionStatus === 'APPROVED' ||\r\n                      s1Application?.decisionStatus === 'APPROVED W/ CAUTION')\r\n                  \"\r\n                />\r\n              </div>\r\n\r\n              <div class=\"row\"><br /></div>\r\n              <div class=\"col-md-12\" appearance=\"outline\">\r\n                <button\r\n                  mat-raised-button\r\n                  class=\"button-red button-right\"\r\n                  (click)=\"viewDocument('MAIN', false)\"\r\n                  *ngIf=\"\r\n                    showMainDocumentViewButton ||\r\n                    tempRevisionAttachmentDocuments[0]?.originalFilename\r\n                  \"\r\n                >\r\n                  <i class=\"material-icons add-document\">open_in_new</i> VIEW\r\n                  DOCUMENT\r\n                </button>\r\n                &nbsp; &nbsp;\r\n                <button\r\n                  mat-raised-button\r\n                  class=\"button-red button-right\"\r\n                  (click)=\"deleteUploadedFile('MAIN')\"\r\n                  *ngIf=\"\r\n                    showMainDocumentViewButton ||\r\n                    tempRevisionAttachmentDocuments[0]?.originalFilename\r\n                  \"\r\n                >\r\n                  <i class=\"material-icons add-document\">delete</i> DELETE\r\n                  ATTACHMENT\r\n                </button>\r\n                &nbsp; &nbsp;\r\n\r\n                <button\r\n                  mat-raised-button\r\n                  class=\"button-red button-right\"\r\n                  (click)=\"uploadDocument()\"\r\n                  [disabled]=\"\r\n                    !safeURLMainDocR || !showMainDocumentUploadButtonR\r\n                  \"\r\n                  [hidden]=\"isAscUser && isDisableFieldOnUpdate\"\r\n                  *ngIf=\"showMainDocumentUploadButtonR\"\r\n                >\r\n                  <i class=\"material-icons add-document\">upload</i> UPLOAD\r\n                </button>\r\n              </div>\r\n              <div class=\"col-md-12\">\r\n                <hr />\r\n              </div>\r\n            </div>\r\n\r\n            <!-- SUPPORTING DOC -->\r\n            <div\r\n              class=\"row\"\r\n              [hidden]=\"\r\n                (isAscUser && isDisableFieldOnUpdate) ||\r\n                applicationStage === 'S2-APPLICATION' ||\r\n                (currentUser.userRole.name == 'ROLE_ENCODER' &&\r\n                  s1Application?.internalStatus !== undefined)\r\n              \"\r\n              *ngIf=\"\r\n                showSupportDocumentFrameR ||\r\n                tempRevisionAttachmentDocuments?.length > 0 ||\r\n                ((s1Application?.internalStatus === 'S1_APPLICATION_REVIEWED' ||\r\n                  s1Application?.internalStatus ===\r\n                    'COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER') &&\r\n                  (s1Application?.decisionStatus === 'APPROVED' ||\r\n                    s1Application?.decisionStatus === 'APPROVED W/ CAUTION'))\r\n              \"\r\n            >\r\n              <h4>\r\n                <i class=\"material-icons\">bookmark</i> &nbsp;SUPPORT DOCUMENTS\r\n              </h4>\r\n\r\n              <!-- Display if no support document was attached -->\r\n              <div\r\n                class=\"col-md-12\"\r\n                appearance=\"outline\"\r\n                [hidden]=\"\r\n                  (isAscUser && isDisableFieldOnUpdate) ||\r\n                  applicationStage === 'S2-APPLICATION'\r\n                \"\r\n                *ngIf=\"\r\n                  tempRevisionAttachmentDocuments?.length < 2 ||\r\n                  tempRevisionAttachmentDocuments?.length != 2 ||\r\n                  ((s1Application?.internalStatus ===\r\n                    'S1_APPLICATION_REVIEWED' ||\r\n                    s1Application?.internalStatus ===\r\n                      'COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER') &&\r\n                    s1Application?.decisionStatus === 'INCOMPLETE')\r\n                \"\r\n              >\r\n                <mat-checkbox\r\n                  (click)=\"verifyNoDocumentAttached()\"\r\n                  [(ngModel)]=\"s1Application.hasNoSupportingDocs\"\r\n                  (checked)=\"(s1Application.hasNoSupportingDocs)\"\r\n                  formControlName=\"hasNoSupportingDocs\"\r\n                  [hidden]=\"\r\n                    tempRevisionAttachmentDocuments[1]?.originalFilename\r\n                  \"\r\n                  *ngIf=\"\r\n                    currentUser.userRole.name == 'ROLE_APPLICANT' ||\r\n                    (currentUser.userRole.name == 'ROLE_ENCODER' &&\r\n                      s1Application?.internalStatus === undefined)\r\n                  \"\r\n                >\r\n                  I certify that no supporting document is attached to this S1\r\n                  application.</mat-checkbox\r\n                >\r\n                <br />\r\n              </div>\r\n\r\n              <p\r\n                *ngIf=\"\r\n                  (s1Application?.submissionType === 'REVISION' &&\r\n                    s1Application?.hasNoSupportingDocs &&\r\n                    s1Application?.internalStatus !== undefined &&\r\n                    s1Application?.internalStatus !==\r\n                      'S1_APPLICATION_REVIEWED' &&\r\n                    s1Application?.decisionStatus !== 'INCOMPLETE') ||\r\n                  (s1Application?.hasNoSupportingDocs &&\r\n                    applicationStage === 'S1-Preview')\r\n                \"\r\n              >\r\n                Supporting Document was not submitted.\r\n              </p>\r\n              <div class=\"col-md-12\"><br /></div>\r\n\r\n              <div *ngIf=\"!s1Application?.hasNoSupportingDocs\">\r\n                <div class=\"col-md-12\" appearance=\"outline\">\r\n                  <mat-label\r\n                    *ngIf=\"\r\n                      tempRevisionAttachmentDocuments?.length > 0 &&\r\n                      tempRevisionAttachmentDocuments[1]?.originalFilename\r\n                    \"\r\n                    >Filename:\r\n                  </mat-label>\r\n                  <input\r\n                    #supportiveInput\r\n                    matInput\r\n                    [value]=\"\r\n                      tempRevisionAttachmentDocuments[1]?.originalFilename\r\n                    \"\r\n                    disabled\r\n                    *ngIf=\"\r\n                      tempRevisionAttachmentDocuments?.length > 0 &&\r\n                      tempRevisionAttachmentDocuments[1]?.originalFilename\r\n                    \"\r\n                  /><br />\r\n\r\n                  <input\r\n                    #supportiveFile\r\n                    class=\"file-upload\"\r\n                    type=\"file\"\r\n                    accept=\".pdf\"\r\n                    (change)=\"selectFile($event, 'SUPPORTIVE')\"\r\n                    [hidden]=\"\r\n                      (isAscUser && isDisableFieldOnUpdate) ||\r\n                      tempRevisionAttachmentDocuments[1]?.originalFilename\r\n                    \"\r\n                    *ngIf=\"\r\n                      tempRevisionAttachmentDocuments?.length <= 2 ||\r\n                      (tempRevisionAttachmentDocuments?.length == 2 &&\r\n                        tempRevisionAttachmentDocuments[1] === null) ||\r\n                      s1Application?.internalStatus == 'SAVED' ||\r\n                      tempRevisionAttachmentDocuments[1]?.originalFilename !=\r\n                        null ||\r\n                      ((s1Application?.internalStatus ==\r\n                        'S1_APPLICATION_REVIEWED' ||\r\n                        s1Application?.internalStatus ==\r\n                          'COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER') &&\r\n                        (s1Application?.decisionStatus == 'INCOMPLETE' ||\r\n                          s1Application?.decisionStatus == 'APPROVED' ||\r\n                          s1Application?.decisionStatus ==\r\n                            'APPROVED W/ CAUTION'))\r\n                    \"\r\n                  />\r\n                </div>\r\n\r\n                <div class=\"row\"><br /></div>\r\n                <div class=\"col-md-12\" appearance=\"outline\">\r\n                  <button\r\n                    mat-raised-button\r\n                    class=\"button-red button-right\"\r\n                    (click)=\"viewDocument('SUPPORTIVE', false)\"\r\n                    *ngIf=\"\r\n                      showSupportiveDocumentViewButton ||\r\n                      tempRevisionAttachmentDocuments[1]?.originalFilename\r\n                    \"\r\n                  >\r\n                    <i class=\"material-icons add-document\">open_in_new</i> VIEW\r\n                    DOCUMENT\r\n                  </button>\r\n                  &nbsp; &nbsp;\r\n                  <button\r\n                    mat-raised-button\r\n                    class=\"button-red button-right\"\r\n                    (click)=\"deleteUploadedFile('SUPPORTIVE')\"\r\n                    *ngIf=\"\r\n                      showSupportiveDocumentViewButton ||\r\n                      tempRevisionAttachmentDocuments[1]?.originalFilename\r\n                    \"\r\n                  >\r\n                    <i class=\"material-icons add-document\">delete</i> DELETE\r\n                    ATTACHMENT\r\n                  </button>\r\n                  &nbsp; &nbsp;\r\n                  <button\r\n                    mat-raised-button\r\n                    class=\"button-red button-right\"\r\n                    (click)=\"uploadDocument()\"\r\n                    [hidden]=\"isAscUser && isDisableFieldOnUpdate\"\r\n                    *ngIf=\"showSupportiveDocumentUploadButton\"\r\n                  >\r\n                    <i class=\"material-icons add-document\">upload</i> UPLOAD\r\n                  </button>\r\n                  <!-- [disabled]=\"!safeURLSupportDocR||!showSupportiveDocumentUploadButtonR\" -->\r\n                </div>\r\n                <div class=\"row\"><br /></div>\r\n                <br />\r\n              </div>\r\n            </div>\r\n\r\n            <!-- FOR REVISION - REVISION LETTER -->\r\n            <div\r\n              class=\"row\"\r\n              [hidden]=\"\r\n                (isAscUser && isDisableFieldOnUpdate) ||\r\n                applicationStage === 'S2-APPLICATION' ||\r\n                (currentUser.userRole.name == 'ROLE_ENCODER' &&\r\n                  s1Application?.internalStatus !== undefined)\r\n              \"\r\n              *ngIf=\"\r\n                (s1Application?.internalStatus === 'S1_APPLICATION_REVIEWED' ||\r\n                  s1Application?.internalStatus ===\r\n                    'COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER') &&\r\n                (s1Application?.decisionStatus == 'APPROVED' ||\r\n                  s1Application?.decisionStatus == 'APPROVED W/ CAUTION')\r\n              \"\r\n              [hidden]=\"\r\n                s1Application?.appliedS2 || applicationStage === 'S1-Preview'\r\n              \"\r\n            >\r\n              <div class=\"col-md-12\">\r\n                <hr />\r\n              </div>\r\n              <h4>\r\n                <i class=\"material-icons\">bookmark</i> &nbsp;REVISION LETTER\r\n              </h4>\r\n              <br />\r\n              <div class=\"col-md-12\" appearance=\"outline\">\r\n                <mat-label\r\n                  *ngIf=\"\r\n                    revisionLetterAttachment?.originalFilename ||\r\n                    (tempRevisionAttachmentDocuments?.length > 0 &&\r\n                      tempRevisionAttachmentDocuments[1]\r\n                        ?.revisionLetterAttachmentReference)\r\n                  \"\r\n                >\r\n                  Filename:\r\n                </mat-label>\r\n                <input\r\n                  #revisionLetterInput\r\n                  matInput\r\n                  [value]=\"\r\n                    revisionLetterAttachment?.originalFilename ||\r\n                    tempRevisionAttachmentDocuments[1]\r\n                      ?.revisionLetterAttachmentReference ||\r\n                    tempRevisionAttachmentDocuments[2]\r\n                      ?.revisionLetterAttachmentReference\r\n                  \"\r\n                  disabled\r\n                  *ngIf=\"revisionLetterAttachment?.originalFilename\"\r\n                /><br />\r\n\r\n                <input\r\n                  #revisionLetterFile\r\n                  class=\"file-upload\"\r\n                  type=\"file\"\r\n                  accept=\".pdf\"\r\n                  (change)=\"selectFile($event, 'REVISION_LETTER')\"\r\n                  [hidden]=\"\r\n                    (isAscUser && isDisableFieldOnUpdate) ||\r\n                    revisionLetterAttachment?.originalFilename\r\n                  \"\r\n                  *ngIf=\"\r\n                    tempRevisionAttachmentDocuments?.length == 0 ||\r\n                    s1Application?.internalStatus == 'SAVED' ||\r\n                    ((s1Application?.internalStatus ==\r\n                      'S1_APPLICATION_REVIEWED' ||\r\n                      s1Application?.internalStatus ==\r\n                        'COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER') &&\r\n                      (s1Application?.decisionStatus == 'INCOMPLETE' ||\r\n                        s1Application?.decisionStatus == 'APPROVED' ||\r\n                        s1Application?.decisionStatus == 'APPROVED W/ CAUTION'))\r\n                  \"\r\n                />\r\n              </div>\r\n\r\n              <div class=\"row\"><br /></div>\r\n              <div class=\"col-md-12\" appearance=\"outline\">\r\n                <button\r\n                  mat-raised-button\r\n                  class=\"button-red button-right\"\r\n                  (click)=\"viewDocument('REVISION_LETTER', false)\"\r\n                  *ngIf=\"showRevisionLetterViewButton\"\r\n                >\r\n                  <i class=\"material-icons add-document\">open_in_new</i> VIEW\r\n                  DOCUMENT\r\n                </button>\r\n                &nbsp; &nbsp;\r\n                <button\r\n                  mat-raised-button\r\n                  class=\"button-red button-right\"\r\n                  (click)=\"deleteUploadedFile('REVISION_LETTER')\"\r\n                  [hidden]=\"\r\n                    (currentUser?.userRole?.name != 'ROLE_APPLICANT' &&\r\n                      currentUser?.userRole?.name != 'ROLE_ENCODER') ||\r\n                    (currentUser.userRole.name == 'ROLE_ENCODER' &&\r\n                      s1Application?.internalStatus !== undefined) ||\r\n                    applicationStage === 'S2-APPLICATION' ||\r\n                    applicationStage === 'S1-Preview'\r\n                  \"\r\n                  *ngIf=\"showRevisionLetterViewButton\"\r\n                >\r\n                  <i class=\"material-icons add-document\">delete</i> DELETE\r\n                  ATTACHMENT\r\n                </button>\r\n                &nbsp; &nbsp;\r\n\r\n                <button\r\n                  mat-raised-button\r\n                  class=\"button-red button-right\"\r\n                  (click)=\"uploadDocument()\"\r\n                  [disabled]=\"\r\n                    !safeURLRevisionLetter || !showRevisionLetterUploadButton\r\n                  \"\r\n                  [hidden]=\"isAscUser && isDisableFieldOnUpdate\"\r\n                  *ngIf=\"showRevisionLetterUploadButton\"\r\n                >\r\n                  <i class=\"material-icons add-document\">upload</i> UPLOAD\r\n                </button>\r\n              </div>\r\n              <div class=\"row\"><br /></div>\r\n              <br />\r\n              <br />\r\n            </div>\r\n\r\n            <div class=\"row\"><hr /></div>\r\n\r\n            <!---------- EXISTING ---------->\r\n            <div\r\n              class=\"row\"\r\n              *ngFor=\"let i of revisionAttachmentDocuments; let index = index\"\r\n            >\r\n              <div *ngIf=\"i !== null\">\r\n                <h4>\r\n                  <i class=\"material-icons\">bookmark</i> &nbsp;{{\r\n                    i?.attachmentType\r\n                      ?.replaceAll(\"SUPPORTIVE\", \"SUPPORTING\")\r\n                      ?.replaceAll(\"_\", \" \")\r\n                  }}\r\n                  DOCUMENT\r\n                </h4>\r\n                <br />\r\n                <div class=\"col-md-12\" appearance=\"outline\">\r\n                  <mat-label *ngIf=\"i?.originalFilename\">Filename: </mat-label>\r\n                  <input\r\n                    #mainInput\r\n                    matInput\r\n                    [value]=\"i?.originalFilename\"\r\n                    disabled\r\n                    *ngIf=\"i?.originalFilename\"\r\n                  /><br />\r\n                </div>\r\n\r\n                <div class=\"row\"><br /></div>\r\n                <div\r\n                  class=\"col-md-12\"\r\n                  appearance=\"outline\"\r\n                  *ngIf=\"\r\n                    showMainDocumentViewButton ||\r\n                    i?.mainAttachmentReference ||\r\n                    i?.supportingAttachmentReference ||\r\n                    i?.revisionLetterAttachmentReference\r\n                  \"\r\n                >\r\n                  <button\r\n                    mat-raised-button\r\n                    class=\"button-red button-right\"\r\n                    (click)=\"viewDocument2(i)\"\r\n                  >\r\n                    <i class=\"material-icons add-document\">open_in_new</i> VIEW\r\n                    DOCUMENT\r\n                  </button>\r\n                  &nbsp; &nbsp;\r\n                  <button\r\n                    mat-raised-button\r\n                    class=\"button-red button-right\"\r\n                    (click)=\"deleteUploadedFile2(i)\"\r\n                    *ngIf=\"i?.status === 'UNPROCESSED'\"\r\n                  >\r\n                    <i class=\"material-icons add-document\">delete</i> DELETE\r\n                    ATTACHMENT\r\n                  </button>\r\n                  &nbsp; &nbsp;\r\n                </div>\r\n                <div class=\"row\"><br /></div>\r\n                <div class=\"col-md-12\">\r\n                  <hr />\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div\r\n              class=\"no-record\"\r\n              *ngIf=\"\r\n                (revisionAttachmentDocuments?.length === 0 &&\r\n                  revisionAttachmentDocuments[0]?.originalFilename ===\r\n                    undefined) ||\r\n                revisionAttachmentDocuments?.length === null\r\n              \"\r\n            >\r\n              No existing attachments for revision.\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </mat-tab>\r\n\r\n      <!-- TAB FOR COMPLIANCE -->\r\n      <mat-tab\r\n        label=\"COMPLIANCE\"\r\n        *ngIf=\"\r\n          complianceAttachmentDocuments?.length > 0 ||\r\n          ((s1Application?.internalStatus === 'S1_APPLICATION_REVIEWED' ||\r\n            s1Application?.internalStatus ===\r\n              'COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER' ||\r\n            s1Application?.internalStatus == 'REVISION_SCREENED' ||\r\n            s1Application?.internalStatus == 'S1_APPLICATION_REJECTED') &&\r\n            s1Application?.decisionStatus == 'INCOMPLETE' &&\r\n            applicationStage !== 'S2-APPLICATION')\r\n        \"\r\n      >\r\n        <div class=\"mat-tab\">\r\n          <div class=\"col comment\">\r\n            <label>COMPLIANCE</label>\r\n            <!---------- NEW ATTACHMENTS ---------->\r\n\r\n            <!-- MAIN DOCUMENT -->\r\n            <div\r\n              class=\"row\"\r\n              [hidden]=\"\r\n                (isAscUser && isDisableFieldOnUpdate) ||\r\n                applicationStage === 'S2-APPLICATION' ||\r\n                (currentUser.userRole.name == 'ROLE_ENCODER' &&\r\n                  s1Application?.internalStatus !== undefined)\r\n              \"\r\n              *ngIf=\"\r\n                (s1Application?.internalStatus === 'S1_APPLICATION_REVIEWED' ||\r\n                  s1Application?.internalStatus ===\r\n                    'COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER' ||\r\n                  s1Application?.internalStatus == 'REVISION_SCREENED' ||\r\n                  s1Application?.internalStatus == 'S1_APPLICATION_REJECTED') &&\r\n                s1Application?.decisionStatus == 'INCOMPLETE'\r\n              \"\r\n            >\r\n              <h4>\r\n                <i class=\"material-icons\">bookmark</i> &nbsp;{{\r\n                  labelMainDocument ? labelMainDocument : \"MAIN DOCUMENT\"\r\n                }}\r\n              </h4>\r\n              <br />\r\n              <div class=\"col-md-12\" appearance=\"outline\">\r\n                <mat-label\r\n                  *ngIf=\"\r\n                    tempComplianceAttachmentDocuments?.length > 0 &&\r\n                    tempComplianceAttachmentDocuments[0]?.originalFilename\r\n                  \"\r\n                  >Filename:\r\n                </mat-label>\r\n                <input\r\n                  #mainInput\r\n                  matInput\r\n                  *ngIf=\"\r\n                    !s1Application?.hasOngoingRevision ||\r\n                    tempComplianceAttachmentDocuments?.length == 0\r\n                  \"\r\n                  [value]=\"\r\n                    tempComplianceAttachmentDocuments[0]?.originalFilename\r\n                  \"\r\n                  disabled\r\n                /><br />\r\n\r\n                <input\r\n                  #mainFile\r\n                  class=\"file-upload\"\r\n                  type=\"file\"\r\n                  accept=\".pdf\"\r\n                  (change)=\"selectFile($event, 'MAIN')\"\r\n                  [hidden]=\"\r\n                    (isAscUser && isDisableFieldOnUpdate) ||\r\n                    tempComplianceAttachmentDocuments[0]?.originalFilename\r\n                  \"\r\n                  *ngIf=\"\r\n                    (s1Application?.internalStatus ===\r\n                      'S1_APPLICATION_REVIEWED' ||\r\n                      s1Application?.internalStatus ===\r\n                        'COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER' ||\r\n                      s1Application?.internalStatus == 'REVISION_SCREENED' ||\r\n                      s1Application?.internalStatus ==\r\n                        'S1_APPLICATION_REJECTED') &&\r\n                    s1Application?.decisionStatus === 'INCOMPLETE'\r\n                  \"\r\n                />\r\n              </div>\r\n\r\n              <div class=\"row\"><br /></div>\r\n              <div class=\"col-md-12\" appearance=\"outline\">\r\n                <button\r\n                  mat-raised-button\r\n                  class=\"button-red button-right\"\r\n                  (click)=\"viewDocument('MAIN', false)\"\r\n                  [hidden]=\"\r\n                    tempComplianceAttachmentDocuments[0]?.originalFilename ===\r\n                    null\r\n                  \"\r\n                  *ngIf=\"\r\n                    showMainDocumentViewButtonC ||\r\n                    tempComplianceAttachmentDocuments[0]?.originalFilename\r\n                  \"\r\n                >\r\n                  <i class=\"material-icons add-document\">open_in_new</i> VIEW\r\n                  DOCUMENT\r\n                </button>\r\n                &nbsp; &nbsp;\r\n                <button\r\n                  mat-raised-button\r\n                  class=\"button-red button-right\"\r\n                  (click)=\"deleteUploadedFile('MAIN')\"\r\n                  [hidden]=\"\r\n                    tempComplianceAttachmentDocuments[0]?.originalFilename ===\r\n                    null\r\n                  \"\r\n                  *ngIf=\"\r\n                    showMainDocumentViewButtonC ||\r\n                    tempComplianceAttachmentDocuments[0]?.originalFilename\r\n                  \"\r\n                >\r\n                  <i class=\"material-icons add-document\">delete</i> DELETE\r\n                  ATTACHMENT\r\n                </button>\r\n                &nbsp; &nbsp;\r\n\r\n                <button\r\n                  mat-raised-button\r\n                  class=\"button-red button-right\"\r\n                  (click)=\"uploadDocument()\"\r\n                  [disabled]=\"!safeURLMainDoc || !showMainDocumentUploadButton\"\r\n                  [hidden]=\"isAscUser && isDisableFieldOnUpdate\"\r\n                  *ngIf=\"showMainDocumentUploadButton\"\r\n                >\r\n                  <i class=\"material-icons add-document\">upload</i> UPLOAD\r\n                </button>\r\n              </div>\r\n              <div class=\"col-md-12\">\r\n                <hr />\r\n              </div>\r\n            </div>\r\n\r\n            <!-- SUPPORTING DOC -->\r\n            <div\r\n              class=\"row\"\r\n              [hidden]=\"\r\n                (isAscUser && isDisableFieldOnUpdate) ||\r\n                applicationStage === 'S2-APPLICATION' ||\r\n                (currentUser.userRole.name == 'ROLE_ENCODER' &&\r\n                  s1Application?.internalStatus !== undefined)\r\n              \"\r\n              *ngIf=\"\r\n                showSupportDocumentFrameC ||\r\n                tempComplianceAttachmentDocuments?.length > 0 ||\r\n                ((s1Application?.internalStatus === 'S1_APPLICATION_REVIEWED' ||\r\n                  s1Application?.internalStatus ===\r\n                    'COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER' ||\r\n                  s1Application?.internalStatus == 'REVISION_SCREENED' ||\r\n                  s1Application?.internalStatus == 'S1_APPLICATION_REJECTED') &&\r\n                  s1Application?.decisionStatus == 'INCOMPLETE')\r\n              \"\r\n            >\r\n              <h4>\r\n                <i class=\"material-icons\">bookmark</i> &nbsp;SUPPORT DOCUMENTS\r\n              </h4>\r\n\r\n              <!-- Display if no support document was attached -->\r\n              <div class=\"col-md-12\" appearance=\"outline\">\r\n                <mat-checkbox\r\n                  (click)=\"verifyNoDocumentAttached()\"\r\n                  [(ngModel)]=\"s1Application.hasNoSupportingDocs\"\r\n                  (checked)=\"(s1Application.hasNoSupportingDocs)\"\r\n                  formControlName=\"hasNoSupportingDocs\"\r\n                  [hidden]=\"\r\n                    tempComplianceAttachmentDocuments[1]?.originalFilename\r\n                  \"\r\n                  *ngIf=\"\r\n                    currentUser.userRole.name == 'ROLE_APPLICANT' ||\r\n                    (currentUser.userRole.name == 'ROLE_ENCODER' &&\r\n                      s1Application?.internalStatus === undefined)\r\n                  \"\r\n                >\r\n                  I certify that no supporting document is attached to this S1\r\n                  application.</mat-checkbox\r\n                >\r\n                <br />\r\n              </div>\r\n\r\n              <p\r\n                *ngIf=\"\r\n                  (s1Application?.submissionType === 'COMPLIANCE' &&\r\n                    s1Application?.hasNoSupportingDocs &&\r\n                    s1Application?.internalStatus !== undefined &&\r\n                    s1Application?.internalStatus !==\r\n                      'S1_APPLICATION_REVIEWED' &&\r\n                    s1Application?.decisionStatus !== 'INCOMPLETE') ||\r\n                  (s1Application?.hasNoSupportingDocs &&\r\n                    applicationStage === 'S1-Preview')\r\n                \"\r\n              >\r\n                Supporting Document was not submitted.\r\n              </p>\r\n              <div class=\"col-md-12\"><br /></div>\r\n\r\n              <div *ngIf=\"!s1Application?.hasNoSupportingDocs\">\r\n                <div class=\"col-md-12\" appearance=\"outline\">\r\n                  <mat-label\r\n                    *ngIf=\"\r\n                      tempComplianceAttachmentDocuments?.length > 0 &&\r\n                      tempComplianceAttachmentDocuments[1]?.originalFilename\r\n                    \"\r\n                    >Filename:\r\n                  </mat-label>\r\n                  <input\r\n                    #supportiveInput\r\n                    matInput\r\n                    [value]=\"\r\n                      tempComplianceAttachmentDocuments[1]?.originalFilename\r\n                    \"\r\n                    disabled\r\n                    *ngIf=\"\r\n                      tempComplianceAttachmentDocuments?.length > 0 &&\r\n                      tempComplianceAttachmentDocuments[1]?.originalFilename\r\n                    \"\r\n                  /><br />\r\n\r\n                  <input\r\n                    #supportiveFile\r\n                    class=\"file-upload\"\r\n                    type=\"file\"\r\n                    accept=\".pdf\"\r\n                    (change)=\"selectFile($event, 'SUPPORTIVE')\"\r\n                    [hidden]=\"\r\n                      (isAscUser && isDisableFieldOnUpdate) ||\r\n                      tempComplianceAttachmentDocuments[1]?.originalFilename\r\n                    \"\r\n                    *ngIf=\"\r\n                      tempComplianceAttachmentDocuments?.length <= 2 ||\r\n                      (tempComplianceAttachmentDocuments?.length == 2 &&\r\n                        tempComplianceAttachmentDocuments[1] === null) ||\r\n                      s1Application?.internalStatus == 'SAVED' ||\r\n                      tempComplianceAttachmentDocuments[1]?.originalFilename !=\r\n                        null ||\r\n                      ((s1Application?.internalStatus ==\r\n                        'S1_APPLICATION_REVIEWED' ||\r\n                        s1Application?.internalStatus ==\r\n                          'COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER' ||\r\n                        s1Application?.internalStatus == 'REVISION_SCREENED' ||\r\n                        s1Application?.internalStatus ==\r\n                          'S1_APPLICATION_REJECTED') &&\r\n                        s1Application?.decisionStatus == 'INCOMPLETE')\r\n                    \"\r\n                  />\r\n                </div>\r\n\r\n                <div class=\"row\"><br /></div>\r\n                <div class=\"col-md-12\" appearance=\"outline\">\r\n                  <button\r\n                    mat-raised-button\r\n                    class=\"button-red button-right\"\r\n                    (click)=\"viewDocument('SUPPORTIVE', false)\"\r\n                    [hidden]=\"\r\n                      tempComplianceAttachmentDocuments[1]?.originalFilename ===\r\n                      null\r\n                    \"\r\n                    *ngIf=\"\r\n                      showSupportiveDocumentViewButtonC ||\r\n                      tempComplianceAttachmentDocuments[1]?.originalFilename\r\n                    \"\r\n                  >\r\n                    <i class=\"material-icons add-document\">open_in_new</i> VIEW\r\n                    DOCUMENT\r\n                  </button>\r\n                  &nbsp; &nbsp;\r\n                  <button\r\n                    mat-raised-button\r\n                    class=\"button-red button-right\"\r\n                    (click)=\"deleteUploadedFile('SUPPORTIVE')\"\r\n                    [hidden]=\"\r\n                      tempComplianceAttachmentDocuments[1]?.originalFilename ===\r\n                      null\r\n                    \"\r\n                    *ngIf=\"\r\n                      showSupportiveDocumentViewButtonC ||\r\n                      tempComplianceAttachmentDocuments[1]?.originalFilename\r\n                    \"\r\n                  >\r\n                    <i class=\"material-icons add-document\">delete</i> DELETE\r\n                    ATTACHMENT\r\n                  </button>\r\n                  &nbsp; &nbsp;\r\n                  <button\r\n                    mat-raised-button\r\n                    class=\"button-red button-right\"\r\n                    (click)=\"uploadDocument()\"\r\n                    [hidden]=\"isAscUser && isDisableFieldOnUpdate\"\r\n                    *ngIf=\"showSupportiveDocumentUploadButton\"\r\n                  >\r\n                    <i class=\"material-icons add-document\">upload</i> UPLOAD\r\n                  </button>\r\n                </div>\r\n                <div class=\"row\"><br /></div>\r\n                <br />\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"row\"><hr /></div>\r\n\r\n            <!---------- EXISTING ---------->\r\n            <div\r\n              class=\"row\"\r\n              *ngFor=\"let i of complianceAttachmentDocuments; let index = index\"\r\n            >\r\n              <div *ngIf=\"i !== null\">\r\n                <h4>\r\n                  <i class=\"material-icons\">bookmark</i> &nbsp;{{\r\n                    i?.attachmentType\r\n                      ?.replaceAll(\"SUPPORTIVE\", \"SUPPORTING\")\r\n                      ?.replaceAll(\"_\", \" \")\r\n                  }}\r\n                  DOCUMENT\r\n                </h4>\r\n                <br />\r\n                <div class=\"col-md-12\" appearance=\"outline\">\r\n                  <mat-label *ngIf=\"i?.originalFilename\">Filename: </mat-label>\r\n                  <input\r\n                    #mainInput\r\n                    matInput\r\n                    [value]=\"i?.originalFilename\"\r\n                    disabled\r\n                    *ngIf=\"i?.originalFilename\"\r\n                  /><br />\r\n                </div>\r\n\r\n                <div class=\"row\"><br /></div>\r\n                <div\r\n                  class=\"col-md-12\"\r\n                  appearance=\"outline\"\r\n                  *ngIf=\"\r\n                    showMainDocumentViewButton ||\r\n                    i?.mainAttachmentReference ||\r\n                    i?.supportingAttachmentReference ||\r\n                    i?.revisionLetterAttachmentReference\r\n                  \"\r\n                >\r\n                  <button\r\n                    mat-raised-button\r\n                    class=\"button-red button-right\"\r\n                    (click)=\"viewDocument(i.attachmentType)\"\r\n                  >\r\n                    <i class=\"material-icons add-document\">open_in_new</i> VIEW\r\n                    DOCUMENT\r\n                  </button>\r\n                  &nbsp; &nbsp;\r\n                  <button\r\n                    mat-raised-button\r\n                    class=\"button-red button-right\"\r\n                    (click)=\"deleteUploadedFile2(i)\"\r\n                    *ngIf=\"i?.status === 'UNPROCESSED'\"\r\n                  >\r\n                    <i class=\"material-icons add-document\">delete</i> DELETE\r\n                    ATTACHMENT\r\n                  </button>\r\n                  &nbsp; &nbsp;\r\n                </div>\r\n                <div class=\"col-md-12\"><br /></div>\r\n                <div class=\"col-md-12\">\r\n                  <hr />\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div\r\n              class=\"no-record\"\r\n              *ngIf=\"\r\n                (complianceAttachmentDocuments?.length === 0 &&\r\n                  complianceAttachmentDocuments[0]?.originalFilename ===\r\n                    undefined) ||\r\n                complianceAttachmentDocuments?.length === null\r\n              \"\r\n            >\r\n              No existing attachments for compliance.\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </mat-tab>\r\n      <!-- END OF TAB FOR COMPLIANCE -->\r\n    </mat-tab-group>\r\n  </form>\r\n</div>\r\n");

/***/ }),

/***/ "0jzb":
/*!***********************************************************!*\
  !*** ./src/app/core/models/multiple-application.model.ts ***!
  \***********************************************************/
/*! exports provided: MultipleApplication, MultipleApplicationId */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MultipleApplication", function() { return MultipleApplication; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MultipleApplicationId", function() { return MultipleApplicationId; });
class MultipleApplication {
}
class MultipleApplicationId {
}


/***/ }),

/***/ "0lwu":
/*!**********************************************!*\
  !*** ./src/app/core/models/comment.model.ts ***!
  \**********************************************/
/*! exports provided: Comment */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Comment", function() { return Comment; });
class Comment {
}


/***/ }),

/***/ "12BX":
/*!****************************************************************************************************************!*\
  !*** ./src/app/modules/pages/applications/s2-application/add-s2-application/add-s2-application.component.scss ***!
  \****************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("/* Accordion */\n.action-buttons {\n  float: right;\n}\n.headers-align .mat-expansion-panel-header-title,\n.headers-align .mat-expansion-panel-header-description {\n  flex-basis: 0;\n  font-size: 1.25em;\n  align-items: center;\n}\n.headers-align .mat-expansion-panel-header-description {\n  justify-content: space-between;\n  align-items: center;\n}\n.headers-align .mat-form-field + .mat-form-field {\n  margin-left: 8px;\n}\n.tooltip .tooltiptext {\n  width: 120px;\n  bottom: 100%;\n  left: 50%;\n  margin-left: -60px;\n  /* Use half of the width (120/2 = 60), to center the tooltip */\n}\n.mat-expansion-panel-header {\n  border: 1px solid #BFBFBF;\n}\n/* input[type=\"file\"] {\n  display: none;\n} */\n.custom-file-upload {\n  border: 1px solid #ccc;\n  display: inline-block;\n  padding: 6px 12px;\n  cursor: pointer;\n}\n.mat-expansion-panel-header.mat-expanded:hover,\n.mat-expansion-panel-header {\n  background: #bad9ff;\n}\n.mat-expansion-panel .mat-expansion-panel-header.cdk-keyboard-focused:not([aria-disabled=true]),\n.mat-expansion-panel .mat-expansion-panel-header.cdk-program-focused:not([aria-disabled=true]),\n.mat-expansion-panel:not(.mat-expanded) .mat-expansion-panel-header:hover:not([aria-disabled=true]) {\n  background: #cfe5ff;\n}\n.file-upload {\n  width: 100%;\n  background-color: #bad9ff;\n  border: 1px solid gray;\n}\n.pdf-border {\n  width: 100%;\n  height: 300px;\n  border: 2px solid gray;\n}\ntable {\n  width: 100%;\n  border-collapse: separate;\n  border-spacing: 0 5px;\n}\ntable td {\n  height: 40px;\n  font-weight: 500;\n  padding: 0px 15px;\n}\ntable .details-title {\n  background-color: #ff5252;\n  color: white;\n  border: 1px solid white;\n  border-radius: 5px;\n}\ntable .details {\n  color: #ff5252;\n  border: 1px solid #0000001f;\n  font-weight: 600;\n}\n.badge {\n  width: auto;\n}\n.color__white {\n  color: white;\n}\n.rationale {\n  border: solid gray 2px;\n  border-radius: 5px;\n  padding: 10px;\n  background-color: #eee1e1;\n}\n.rationale label {\n  font-size: 15px;\n  font-weight: 600;\n  color: #ac0000;\n  margin-bottom: 10px;\n}\n.rationale .rationale-list {\n  background-color: #f1eaea;\n  border: solid gray 1px;\n  height: auto;\n  max-height: 15em;\n  padding: 10px;\n  margin-bottom: 5px;\n}\n.rationale .rationale-list label {\n  font-size: 10px;\n}\n.rationale .rationale-list p {\n  font-size: 10px;\n  font-weight: 600;\n  line-height: 10px;\n}\n.rationale .rationale-list p span {\n  font-size: 7px;\n  color: #ac0000;\n  margin: auto;\n}\n.rationale .rational-other-comment {\n  background-color: #f1eaea;\n  border: solid gray 1px;\n  height: auto;\n  padding: 10px;\n}\n.rationale .rational-other-comment label {\n  font-size: 10px;\n}\n.rationale .rational-other-comment p {\n  font-size: 10px;\n  font-weight: 600;\n  line-height: 2px;\n}\n.rationale .rational-other-comment p span {\n  font-size: 7px;\n  color: #ac0000;\n  margin: auto;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9wYWdlcy9hcHBsaWNhdGlvbnMvczItYXBwbGljYXRpb24vYWRkLXMyLWFwcGxpY2F0aW9uL2FkZC1zMi1hcHBsaWNhdGlvbi5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxjQUFBO0FBQ0E7RUFFRSxZQUFBO0FBQUY7QUFHQTs7RUFFRSxhQUFBO0VBQ0EsaUJBQUE7RUFDQSxtQkFBQTtBQUFGO0FBR0E7RUFDRSw4QkFBQTtFQUNBLG1CQUFBO0FBQUY7QUFHQTtFQUNFLGdCQUFBO0FBQUY7QUFHQTtFQUNFLFlBQUE7RUFDQSxZQUFBO0VBQ0EsU0FBQTtFQUNBLGtCQUFBO0VBQ0EsOERBQUE7QUFBRjtBQUdBO0VBQ0UseUJBQUE7QUFBRjtBQUlBOztHQUFBO0FBSUE7RUFDRSxzQkFBQTtFQUNBLHFCQUFBO0VBQ0EsaUJBQUE7RUFDQSxlQUFBO0FBRkY7QUFLQTs7RUFFRSxtQkFBQTtBQUZGO0FBS0E7OztFQUdFLG1CQUFBO0FBRkY7QUFNQTtFQUNFLFdBQUE7RUFDQSx5QkFBQTtFQUNBLHNCQUFBO0FBSEY7QUFNQTtFQUNFLFdBQUE7RUFDQSxhQUFBO0VBQ0Esc0JBQUE7QUFIRjtBQU9BO0VBRUUsV0FBQTtFQUNBLHlCQUFBO0VBQ0EscUJBQUE7QUFMRjtBQVFFO0VBQ0UsWUFBQTtFQUNBLGdCQUFBO0VBQ0EsaUJBQUE7QUFOSjtBQVNFO0VBQ0UseUJBQUE7RUFDQSxZQUFBO0VBQ0EsdUJBQUE7RUFDQSxrQkFBQTtBQVBKO0FBVUU7RUFDRSxjQUFBO0VBQ0EsMkJBQUE7RUFDQSxnQkFBQTtBQVJKO0FBWUE7RUFDRSxXQUFBO0FBVEY7QUFZQTtFQUNFLFlBQUE7QUFURjtBQVlBO0VBQ0Usc0JBQUE7RUFDQSxrQkFBQTtFQUNBLGFBQUE7RUFDQSx5QkFBQTtBQVRGO0FBVUk7RUFDRSxlQUFBO0VBQ0EsZ0JBQUE7RUFDQSxjQUFBO0VBQ0EsbUJBQUE7QUFSTjtBQVVJO0VBQ0UseUJBQUE7RUFDQSxzQkFBQTtFQUNBLFlBQUE7RUFDQSxnQkFBQTtFQUNBLGFBQUE7RUFDQSxrQkFBQTtBQVJOO0FBU007RUFDRSxlQUFBO0FBUFI7QUFVTTtFQUNFLGVBQUE7RUFDQSxnQkFBQTtFQUNBLGlCQUFBO0FBUlI7QUFTUTtFQUNFLGNBQUE7RUFDQSxjQUFBO0VBQ0EsWUFBQTtBQVBWO0FBV0k7RUFDRSx5QkFBQTtFQUNBLHNCQUFBO0VBQ0EsWUFBQTtFQUNBLGFBQUE7QUFUTjtBQVVNO0VBQ0UsZUFBQTtBQVJSO0FBVU07RUFDRSxlQUFBO0VBQ0EsZ0JBQUE7RUFDQSxnQkFBQTtBQVJSO0FBU1E7RUFDRSxjQUFBO0VBQ0EsY0FBQTtFQUNBLFlBQUE7QUFQViIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcGFnZXMvYXBwbGljYXRpb25zL3MyLWFwcGxpY2F0aW9uL2FkZC1zMi1hcHBsaWNhdGlvbi9hZGQtczItYXBwbGljYXRpb24uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBBY2NvcmRpb24gKi9cclxuLmFjdGlvbi1idXR0b25zIHtcclxuICAvLyBwYWRkaW5nLWJvdHRvbTogMjBweDtcclxuICBmbG9hdDogcmlnaHQ7XHJcbn1cclxuXHJcbi5oZWFkZXJzLWFsaWduIC5tYXQtZXhwYW5zaW9uLXBhbmVsLWhlYWRlci10aXRsZSxcclxuLmhlYWRlcnMtYWxpZ24gLm1hdC1leHBhbnNpb24tcGFuZWwtaGVhZGVyLWRlc2NyaXB0aW9uIHtcclxuICBmbGV4LWJhc2lzOiAwO1xyXG4gIGZvbnQtc2l6ZTogMS4yNWVtO1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbn1cclxuXHJcbi5oZWFkZXJzLWFsaWduIC5tYXQtZXhwYW5zaW9uLXBhbmVsLWhlYWRlci1kZXNjcmlwdGlvbiB7XHJcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbn1cclxuXHJcbi5oZWFkZXJzLWFsaWduIC5tYXQtZm9ybS1maWVsZCsubWF0LWZvcm0tZmllbGQge1xyXG4gIG1hcmdpbi1sZWZ0OiA4cHg7XHJcbn1cclxuXHJcbi50b29sdGlwIC50b29sdGlwdGV4dCB7XHJcbiAgd2lkdGg6IDEyMHB4O1xyXG4gIGJvdHRvbTogMTAwJTtcclxuICBsZWZ0OiA1MCU7XHJcbiAgbWFyZ2luLWxlZnQ6IC02MHB4O1xyXG4gIC8qIFVzZSBoYWxmIG9mIHRoZSB3aWR0aCAoMTIwLzIgPSA2MCksIHRvIGNlbnRlciB0aGUgdG9vbHRpcCAqL1xyXG59XHJcblxyXG4ubWF0LWV4cGFuc2lvbi1wYW5lbC1oZWFkZXIge1xyXG4gIGJvcmRlcjogMXB4IHNvbGlkICNCRkJGQkY7XHJcbn1cclxuXHJcbi8vIHVwbG9hZCBidXR0b25cclxuLyogaW5wdXRbdHlwZT1cImZpbGVcIl0ge1xyXG4gIGRpc3BsYXk6IG5vbmU7XHJcbn0gKi9cclxuXHJcbi5jdXN0b20tZmlsZS11cGxvYWQge1xyXG4gIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7XHJcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gIHBhZGRpbmc6IDZweCAxMnB4O1xyXG4gIGN1cnNvcjogcG9pbnRlcjtcclxufVxyXG5cclxuLm1hdC1leHBhbnNpb24tcGFuZWwtaGVhZGVyLm1hdC1leHBhbmRlZDpob3ZlcixcclxuLm1hdC1leHBhbnNpb24tcGFuZWwtaGVhZGVyIHtcclxuICBiYWNrZ3JvdW5kOiAjYmFkOWZmO1xyXG59XHJcblxyXG4ubWF0LWV4cGFuc2lvbi1wYW5lbCAubWF0LWV4cGFuc2lvbi1wYW5lbC1oZWFkZXIuY2RrLWtleWJvYXJkLWZvY3VzZWQ6bm90KFthcmlhLWRpc2FibGVkPXRydWVdKSxcclxuLm1hdC1leHBhbnNpb24tcGFuZWwgLm1hdC1leHBhbnNpb24tcGFuZWwtaGVhZGVyLmNkay1wcm9ncmFtLWZvY3VzZWQ6bm90KFthcmlhLWRpc2FibGVkPXRydWVdKSxcclxuLm1hdC1leHBhbnNpb24tcGFuZWw6bm90KC5tYXQtZXhwYW5kZWQpIC5tYXQtZXhwYW5zaW9uLXBhbmVsLWhlYWRlcjpob3Zlcjpub3QoW2FyaWEtZGlzYWJsZWQ9dHJ1ZV0pIHtcclxuICBiYWNrZ3JvdW5kOiAjY2ZlNWZmO1xyXG59XHJcblxyXG4vLyBGb3IgdXBsb2FkIGJvcmRlclxyXG4uZmlsZS11cGxvYWQge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICNiYWQ5ZmY7XHJcbiAgYm9yZGVyOiAxcHggc29saWQgZ3JheTtcclxufVxyXG5cclxuLnBkZi1ib3JkZXIge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIGhlaWdodDogMzAwcHg7XHJcbiAgYm9yZGVyOiAycHggc29saWQgZ3JheTtcclxufVxyXG5cclxuXHJcbnRhYmxlIHtcclxuICAvLyBib3JkZXI6IHNvbGlkIGJsYWNrIDFweDtcclxuICB3aWR0aDogMTAwJTtcclxuICBib3JkZXItY29sbGFwc2U6IHNlcGFyYXRlO1xyXG4gIGJvcmRlci1zcGFjaW5nOiAwIDVweDtcclxuXHJcblxyXG4gIHRkIHtcclxuICAgIGhlaWdodDogNDBweDtcclxuICAgIGZvbnQtd2VpZ2h0OiA1MDA7XHJcbiAgICBwYWRkaW5nOiAwcHggMTVweDtcclxuICB9XHJcblxyXG4gIC5kZXRhaWxzLXRpdGxlIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZjUyNTI7XHJcbiAgICBjb2xvcjogd2hpdGU7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCB3aGl0ZTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICB9XHJcblxyXG4gIC5kZXRhaWxzIHtcclxuICAgIGNvbG9yOiAjZmY1MjUyO1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgIzAwMDAwMDFmO1xyXG4gICAgZm9udC13ZWlnaHQ6IDYwMDtcclxuICB9XHJcbn1cclxuXHJcbi5iYWRnZSB7XHJcbiAgd2lkdGg6IGF1dG87XHJcbn1cclxuXHJcbi5jb2xvcl9fd2hpdGUge1xyXG4gIGNvbG9yOiB3aGl0ZTtcclxufVxyXG5cclxuLnJhdGlvbmFsZXtcclxuICBib3JkZXI6IHNvbGlkIGdyYXkgMnB4O1xyXG4gIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICBwYWRkaW5nOiAxMHB4O1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICNlZWUxZTE7XHJcbiAgICBsYWJlbHtcclxuICAgICAgZm9udC1zaXplOiAxNXB4O1xyXG4gICAgICBmb250LXdlaWdodDogNjAwO1xyXG4gICAgICBjb2xvcjogcmdiKDE3MiwgMCwgMCk7XHJcbiAgICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XHJcbiAgICB9XHJcbiAgICAucmF0aW9uYWxlLWxpc3R7XHJcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmMWVhZWE7XHJcbiAgICAgIGJvcmRlcjogc29saWQgZ3JheSAxcHg7XHJcbiAgICAgIGhlaWdodDogYXV0bztcclxuICAgICAgbWF4LWhlaWdodDogMTVlbTtcclxuICAgICAgcGFkZGluZzogMTBweDtcclxuICAgICAgbWFyZ2luLWJvdHRvbTogNXB4O1xyXG4gICAgICBsYWJlbHtcclxuICAgICAgICBmb250LXNpemU6IDEwcHg7XHJcbiAgICAgICAgXHJcbiAgICAgIH1cclxuICAgICAgcHtcclxuICAgICAgICBmb250LXNpemU6IDEwcHg7XHJcbiAgICAgICAgZm9udC13ZWlnaHQ6IDYwMDsgXHJcbiAgICAgICAgbGluZS1oZWlnaHQ6IDEwcHg7XHJcbiAgICAgICAgc3BhbntcclxuICAgICAgICAgIGZvbnQtc2l6ZTogN3B4O1xyXG4gICAgICAgICAgY29sb3I6IHJnYigxNzIsIDAsIDApO1xyXG4gICAgICAgICAgbWFyZ2luOiBhdXRvO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgLnJhdGlvbmFsLW90aGVyLWNvbW1lbnR7XHJcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmMWVhZWE7XHJcbiAgICAgIGJvcmRlcjogc29saWQgZ3JheSAxcHg7XHJcbiAgICAgIGhlaWdodDogYXV0bztcclxuICAgICAgcGFkZGluZzogMTBweDtcclxuICAgICAgbGFiZWx7XHJcbiAgICAgICAgZm9udC1zaXplOiAxMHB4O1xyXG4gICAgICB9XHJcbiAgICAgIHB7XHJcbiAgICAgICAgZm9udC1zaXplOiAxMHB4O1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiA2MDA7XHJcbiAgICAgICAgbGluZS1oZWlnaHQ6IDJweDtcclxuICAgICAgICBzcGFue1xyXG4gICAgICAgICAgZm9udC1zaXplOiA3cHg7XHJcbiAgICAgICAgICBjb2xvcjogcmdiKDE3MiwgMCwgMCk7XHJcbiAgICAgICAgICBtYXJnaW46IGF1dG87XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICBcclxufSJdfQ== */");

/***/ }),

/***/ "1tSv":
/*!*************************************************************************************************!*\
  !*** ./src/app/modules/pages/applications/preview-attachments/preview-attachments.component.ts ***!
  \*************************************************************************************************/
/*! exports provided: PreviewAttachmentsComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PreviewAttachmentsComponent", function() { return PreviewAttachmentsComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "mrSG");
/* harmony import */ var _raw_loader_preview_attachments_component_html__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! raw-loader!./preview-attachments.component.html */ "aCpE");
/* harmony import */ var _preview_attachments_component_scss__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./preview-attachments.component.scss */ "3FfQ");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var _angular_material_paginator__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/material/paginator */ "M9IT");
/* harmony import */ var _angular_material_sort__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/material/sort */ "Dh3D");
/* harmony import */ var _angular_material_table__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/material/table */ "+0xr");







let PreviewAttachmentsComponent = class PreviewAttachmentsComponent {
    constructor() {
        this.previewAttachmentsList = [];
        this.displayedColumns = '';
    }
    ngOnInit() {
    }
    ngAfterViewInit() {
        this.dataSource.paginator = this.paginator;
        this.dataSource.sort = this.sort;
    }
    viewFormOrMaterial(attachmentUrl) {
        if (attachmentUrl) {
            window.open(attachmentUrl);
        }
    }
};
PreviewAttachmentsComponent.ctorParameters = () => [];
PreviewAttachmentsComponent.propDecorators = {
    paginator: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["ViewChild"], args: [_angular_material_paginator__WEBPACK_IMPORTED_MODULE_4__["MatPaginator"], { static: false },] }],
    sort: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["ViewChild"], args: [_angular_material_sort__WEBPACK_IMPORTED_MODULE_5__["MatSort"], { static: false },] }],
    table: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["ViewChild"], args: [_angular_material_table__WEBPACK_IMPORTED_MODULE_6__["MatTable"], { static: false },] }],
    previewAttachmentsList: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Input"] }],
    dataSource: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Input"] }],
    displayedColumns: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Input"] }]
};
PreviewAttachmentsComponent = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_3__["Component"])({
        selector: 'app-preview-attachments',
        template: _raw_loader_preview_attachments_component_html__WEBPACK_IMPORTED_MODULE_1__["default"],
        styles: [_preview_attachments_component_scss__WEBPACK_IMPORTED_MODULE_2__["default"]]
    })
], PreviewAttachmentsComponent);



/***/ }),

/***/ "3FfQ":
/*!***************************************************************************************************!*\
  !*** ./src/app/modules/pages/applications/preview-attachments/preview-attachments.component.scss ***!
  \***************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("table.mat-table {\n  width: 100%;\n}\ntable.mat-table tr.mat-row:hover {\n  background-color: #edf1f7;\n  cursor: auto;\n}\ntable.mat-table tr.mat-row span:hover {\n  background-color: #edf1f7;\n  cursor: pointer;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9wYWdlcy9hcHBsaWNhdGlvbnMvcHJldmlldy1hdHRhY2htZW50cy9wcmV2aWV3LWF0dGFjaG1lbnRzLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksV0FBQTtBQUNKO0FBQ0k7RUFDSSx5QkFBQTtFQUNBLFlBQUE7QUFDUjtBQUVJO0VBQ0EseUJBQUE7RUFDQSxlQUFBO0FBQUoiLCJmaWxlIjoic3JjL2FwcC9tb2R1bGVzL3BhZ2VzL2FwcGxpY2F0aW9ucy9wcmV2aWV3LWF0dGFjaG1lbnRzL3ByZXZpZXctYXR0YWNobWVudHMuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0YWJsZS5tYXQtdGFibGUge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcblxyXG4gICAgdHIubWF0LXJvdzpob3ZlciB7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2VkZjFmNztcclxuICAgICAgICBjdXJzb3I6IGF1dG87XHJcbiAgICB9XHJcblxyXG4gICAgdHIubWF0LXJvdyBzcGFuOmhvdmVyIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNlZGYxZjc7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICB9XHJcbiAgfSJdfQ== */");

/***/ }),

/***/ "3aNq":
/*!*************************************************************************************************!*\
  !*** ./src/app/modules/pages/applications/preview-application/preview-application.component.ts ***!
  \*************************************************************************************************/
/*! exports provided: PreviewApplicationComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PreviewApplicationComponent", function() { return PreviewApplicationComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "mrSG");
/* harmony import */ var _raw_loader_preview_application_component_html__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! raw-loader!./preview-application.component.html */ "buzF");
/* harmony import */ var _preview_application_component_scss__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./preview-application.component.scss */ "DBFx");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var _services__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @services */ "dJ3e");
/* harmony import */ var _shared__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @shared */ "M0ag");
/* harmony import */ var _angular_material_paginator__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/material/paginator */ "M9IT");
/* harmony import */ var _angular_material_sort__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/material/sort */ "Dh3D");
/* harmony import */ var _core_models_application_single_media_model__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../core/models/application-single-media.model */ "XLGj");
/* harmony import */ var _attachment_document_attachment_document_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../attachment-document/attachment-document.component */ "bOqb");










let PreviewApplicationComponent = class PreviewApplicationComponent {
    constructor(apiService) {
        this.apiService = apiService;
        this.displayedColumns = ['typeOfDocument', 'variant', 'expiresOn', 'basedOn', 'remarks'];
        this.attachmentDocuments = [];
        this.originalAttachmentDocuments = [];
        this.revisionAttachmentDocuments = [];
        this.complianceAttachmentDocuments = [];
        this.applicationSingleMedia = new _core_models_application_single_media_model__WEBPACK_IMPORTED_MODULE_8__["ApplicationSingleMedia"]();
        this.multimediaDTO = {};
        this.supportiveDocumentList = [];
        this.multimediaMovingList = [];
        this.multimediaStaticList = [];
    }
    ngOnInit() {
        // console.log('Preview..', this.previewS1Application);
    }
    viewDocument(typeOfDocument) {
        if (this.previewS1Application.submissionType === _shared__WEBPACK_IMPORTED_MODULE_5__["SUBMISSION_TYPE"].ORIGINAL) {
            this.attachmentDocuments = this.originalAttachmentDocuments;
        }
        else if (this.previewS1Application.submissionType === _shared__WEBPACK_IMPORTED_MODULE_5__["SUBMISSION_TYPE"].REVISION) {
            this.attachmentDocuments = this.revisionLetterAttachment;
        }
        else if (this.previewS1Application.submissionType === _shared__WEBPACK_IMPORTED_MODULE_5__["SUBMISSION_TYPE"].COMPLIANCE
            || this.previewS1Application.decisionStatus === _shared__WEBPACK_IMPORTED_MODULE_5__["APP_DECISION_STATUS"].INCOMPLETE) {
            this.attachmentDocuments = this.complianceAttachmentDocuments;
        }
        if (typeOfDocument === _shared__WEBPACK_IMPORTED_MODULE_5__["ATTACHMENT_TYPE"].MAIN) {
            const mainDoc = this.attachmentDocuments.filter(res => res.attachmentType === _shared__WEBPACK_IMPORTED_MODULE_5__["ATTACHMENT_TYPE"].MAIN)[0];
            window.open(this.attachmentDocuments[0].fileURL);
        }
        else if (typeOfDocument === _shared__WEBPACK_IMPORTED_MODULE_5__["ATTACHMENT_TYPE"].SUPPORTIVE) {
            const supportiveDoc = this.attachmentDocuments.filter(res => res.attachmentType === _shared__WEBPACK_IMPORTED_MODULE_5__["ATTACHMENT_TYPE"].SUPPORTIVE)[0];
            window.open(supportiveDoc.fileURL);
        }
        else if (typeOfDocument === _shared__WEBPACK_IMPORTED_MODULE_5__["ATTACHMENT_TYPE"].REVISION_LETTER) {
            // this.attachmentDocuments.filter(res => res.attachmentType === ATTACHMENT_TYPE.REVISION_LETTER)[0];
            const revisionLetterDoc = this.revisionLetterAttachment;
            window.open(revisionLetterDoc.fileURL);
        }
    }
};
PreviewApplicationComponent.ctorParameters = () => [
    { type: _services__WEBPACK_IMPORTED_MODULE_4__["ApiService"] }
];
PreviewApplicationComponent.propDecorators = {
    paginator: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["ViewChild"], args: [_angular_material_paginator__WEBPACK_IMPORTED_MODULE_6__["MatPaginator"], { static: false },] }],
    sort: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["ViewChild"], args: [_angular_material_sort__WEBPACK_IMPORTED_MODULE_7__["MatSort"], { static: false },] }],
    materialAttachmentDocument: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["ViewChild"], args: [_attachment_document_attachment_document_component__WEBPACK_IMPORTED_MODULE_9__["AttachmentDocumentComponent"], { static: false },] }],
    previewS1Application: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Input"] }],
    originalAttachmentDocuments: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Input"] }],
    revisionAttachmentDocuments: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Input"] }],
    complianceAttachmentDocuments: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Input"] }],
    applicationSingleMedia: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Input"] }],
    revisionLetterAttachment: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Input"] }],
    multimediaDTO: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Input"] }]
};
PreviewApplicationComponent = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_3__["Component"])({
        selector: 'app-preview-application',
        template: _raw_loader_preview_application_component_html__WEBPACK_IMPORTED_MODULE_1__["default"],
        styles: [_preview_application_component_scss__WEBPACK_IMPORTED_MODULE_2__["default"]]
    })
], PreviewApplicationComponent);



/***/ }),

/***/ "4gM3":
/*!*****************************************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/modules/pages/applications/s1-application/list-s1-application/list-s1-dialog.html ***!
  \*****************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div class=\"list-dialog-content\">\r\n    <div class=\"row head-icon\">\r\n      <i class=\"material-icons\">live_help</i>\r\n      <p>{{s2Application.applicationForm.referenceCode}}</p>\r\n      <p class=\"sub-title\">Reference Code</p>\r\n      <p class=\"warning-msg\" *ngIf=\"!typeOfExecution?.applyForToa && typeOfExecution?.live\">This application is valid for S1 only.</p>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n        <div class=\"col-md-4\">\r\n            <button mat-raised-button class=\"button-red action-button\" (click)=\"proceedToS2(true)\"\r\n            [disabled]=\"typeOfExecution?.live\">\r\n                <i class=\"material-icons color__white\">summarize</i> PROCEED TO S2 APPLICATION\r\n            </button>\r\n        </div>\r\n        <div class=\"col-md-4\">\r\n            <button mat-raised-button class=\"button-red action-button\" (click)=\"proceedToS2(false)\"\r\n            [disabled]=\"!typeOfExecution?.applyForToa\">\r\n                <i class=\"material-icons color__white\">done_all</i> APPLY FOR TOA\r\n            </button>\r\n        </div>\r\n        <div class=\"col-md-4\">\r\n            <button mat-raised-button class=\"button-red action-button\" (click)=\"requestForClearingAndClearance()\"\r\n            [disabled]=\"s1Application?.applicationType?.description == 'Special Screening and Clearing'||typeOfExecution?.live\">\r\n                <i class=\"material-icons color__white\">sticky_note_2</i> REQUEST FOR SPECIAL CLEARING APPROVAL\r\n            </button>\r\n        </div>\r\n    </div><br>\r\n    <!-- <div class=\"row\">\r\n        <div class=\" col-md-12 form-check\">\r\n            <input class=\"form-check-input\" type=\"checkbox\" (change)=\"hasToa($event.target.checked)\" value=\"\" id=\"flexCheckDefault\">\r\n            <label class=\"form-check-label\" for=\"flexCheckDefault\">\r\n              Apply for TOA\r\n            </label>\r\n          </div>\r\n    </div> -->\r\n</div>\r\n\r\n<!-- *ngIf=\"s2Application?.applicationForm?.applicationType?.description === 'SPECIAL SCREENING AND CLEARING'\" -->\r\n\r\n");

/***/ }),

/***/ "62Kr":
/*!***************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/modules/pages/applications/schedule-of-fees/single-application/modal-single-application/modal-single-application.component.html ***!
  \***************************************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12 title\">\r\n            <mat-label>\r\n                <mat-icon>view_list</mat-icon>  <b>Schedule of Fees - Individual Application</b>\r\n            </mat-label>\r\n        </div>\r\n    </div>\r\n    <hr>\r\n    <div class=\"row col-md-12 mt-4\">\r\n        <div class=\"col-md-6\">\r\n            <div>\r\n                <mat-label>Proof of Payment: &nbsp;&nbsp;&nbsp;<span>PDF file only!</span></mat-label><br>\r\n                <input class=\"file-upload\" type=\"file\" [(ngModel)]=\"attachment\" [ngModelOptions]=\"{standalone: true}\"\r\n                    accept=\".pdf\" (change)=\"selectFile($event)\">\r\n            </div>\r\n            <div *ngIf=\"previewDocument===true\">\r\n                <div class=\"file-upload\">\r\n                    <object [data]=\"safeURLProofOfPayment\" type=\"application/pdf\" width=\"100%\" height=\"400\">\r\n                        <iframe [src]=\"safeURLProofOfPayment\" width=\"100%\" height=\"500\">\r\n                            <p>This browser does not support PDF!</p>\r\n                        </iframe>\r\n                    </object>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-md-3\">\r\n            <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n                <mat-label>Reference Code</mat-label>\r\n                <input matInput [value]= \"s1Application?.referenceCode\" readonly>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n                <mat-label>Advertiser</mat-label>\r\n                <input matInput name=\"companyName\" [value]=\"s1Application?.company?.companyName\" readonly>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n                <mat-label>Ad Title - Medium (Length)</mat-label>\r\n                <textarea matInput name=\"refTypeOfMedium\"\r\n                  [value]=\"s1Application?.adTitle + ' - ' + typeOfMediumDisplay\"\r\n                  readonly></textarea>\r\n            </mat-form-field>\r\n        </div>\r\n\r\n        <div class=\"col-md-3\">\r\n            <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n                <mat-label>Vatable Sales</mat-label>\r\n                <input matInput class=\"numbers-input\" name=\"amount\" [value]=\"paymentDetails?.basicRate | number : '1.2-2'\" readonly>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n                <mat-label>VAT</mat-label>\r\n                <input matInput class=\"numbers-input\" name=\"amount\" [value]=\"paymentDetails?.vat | number : '1.2-2'\" readonly>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n                <mat-label>Total Sales (VAT Inclusive)</mat-label>\r\n                <input matInput class=\"numbers-input total\" name=\"amount\" [value]=\"paymentDetails?.amountDue | number : '1.2-2'\" readonly>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n                <mat-label>Payment Mode <span class=\"required-field\">\r\n                  <mat-icon>notification_important</mat-icon>\r\n                </span></mat-label>\r\n                <mat-select [(ngModel)]=\"paymentType\" [ngModelOptions]=\"{standalone: true}\">\r\n                    <div *ngFor=\"let i of paymentTypeList\">\r\n                        <mat-option *ngIf=\"i?.status === 'ACTIVE'\" [value]=\"i\" name=\"paymentType\">\r\n                            {{i?.paymentDescription | uppercase}}\r\n                        </mat-option>\r\n                    </div>\r\n                </mat-select>\r\n            </mat-form-field>\r\n            <hr style=\"margin-top: 2px;\">\r\n            <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n                <mat-label>Remarks</mat-label>\r\n                <textarea matInput name=\"remarks\" [(ngModel)]=\"payment.remarks\"></textarea>\r\n            </mat-form-field>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"row col-md-12\">\r\n        <div class=\"col-md-10\"><span *ngIf=\"paymentType && paymentDetails?.amountDue === 0\">\r\n          <i>Please contact ASC admin to check the Maintenance of Fees.</i></span></div>\r\n        <div class=\"col-md-2 text-end\">\r\n            <button mat-raised-button class=\"button-red m-0\" [disabled]=\"!paymentType || !previewDocument || paymentDetails?.amountDue === 0\" (click)=\"uploadDocument(s1Application)\">\r\n                <i class=\"material-icons color__white\" >task_alt</i> SUBMIT\r\n            </button>\r\n        </div>\r\n    </div>\r\n</div>\r\n");

/***/ }),

/***/ "6YtE":
/*!*******************************************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/modules/pages/applications/material-information/material-information.component.html ***!
  \*******************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<!-- <form [formGroup]=\"materialInformationForm\"> -->\r\n<div class=\"row fields\"\r\n  [hidden]=\"currentUser?.userRole?.name=='ROLE_APPLICANT'&&(s1Application?.decisionStatus=='INCOMPLETE'||s1Application?.decisionStatus=='APPROVED'||s1Application?.decisionStatus=='APPROVED W/ CAUTION')\r\n    || (s1Application?.submissionType === 'REVISION' && s1Application?.internalStatus === 'S1_APPLICATION_REJECTED')\r\n    || (s1Application?.submissionType === 'COMPLIANCE' && s1Application?.internalStatus === 'S1_APPLICATION_REJECTED')\">\r\n  <div class=\"row\">\r\n    <!-- FOR S1 APPLICATION -->\r\n    <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n      <mat-label>Ad Title\r\n        <span class=\"required\">*</span>\r\n      </mat-label>\r\n      <input matInput [(ngModel)]=\"s1Application.adTitle\" name=\"adTitle\"\r\n        (ngModelChange)=\"util.toUpperCase(s1Application, 'adTitle', $event)\"\r\n        [readonly]=\"(isAscUser && isDisableFieldOnUpdate) || (s1Application?.applicationRequest?.status === 'APPROVED')\">\r\n    </mat-form-field>\r\n  </div>\r\n\r\n  <!-- FOR S1 APPLICATION -->\r\n  <div class=\"row\">\r\n    <mat-form-field class=\"col-md-6\" appearance=\"outline\"\r\n      *ngIf=\"(s1Application?.formType !== 'MULTIPLE' || (s1Application?.formType === 'MULTIPLE' && s1Application.multipleApplication))\"\r\n      [hidden]=\"specialApplicationType.includes(s1Application?.applicationType?.description?.toUpperCase()) && s1Application?.applicationRequest?.status !== 'APPROVED'\">\r\n      <mat-label>Reference Code of Previously-Approved Material</mat-label>\r\n      <input matInput [(ngModel)]=\"s1Application.previousRefCode\" name=\"previousRefCode\"\r\n        (ngModelChange)=\"util.toUpperCase(s1Application, 'previousRefCode', $event)\"\r\n        [readonly]=\"isAscUser && isDisableFieldOnUpdate\">\r\n    </mat-form-field>\r\n\r\n    <mat-form-field class=\"col-md-6\" appearance=\"outline\">\r\n      <mat-label>Tag Line (Optional)</mat-label>\r\n      <input matInput [(ngModel)]=\"s1Application.tagLine\" name=\"tagLine\"\r\n        (ngModelChange)=\"util.toUpperCase(s1Application, 'tagLine', $event)\"\r\n        [readonly]=\"(isAscUser && isDisableFieldOnUpdate) || (s1Application?.applicationRequest?.status === 'APPROVED')\">\r\n    </mat-form-field>\r\n  </div>\r\n</div>\r\n\r\n<!-- MULTIMEDIA SELECTION SECTION -->\r\n<!-- FOR S1 APPLICATION -->\r\n<div class=\"row fields\"\r\n  *ngIf=\"(\r\n    !specialApplicationType.includes(s1Application?.applicationType?.description?.toUpperCase())\r\n    ||(specialApplicationType.includes(s1Application?.applicationType?.description?.toUpperCase()) && s1Application?.applicationRequest?.status == 'APPROVED')\r\n    ||(s1Application?.formType === 'MULTIPLE' && s1Application?.multipleApplication)\r\n  )\r\n  &&\r\n    s1Application?.formType !== 'MULTIPLE'||(s1Application?.formType === 'MULTIPLE' && s1Application?.multipleApplication)\"\r\n  [hidden]=\"(s1Application?.formType === 'MULTIPLE' && !s1Application.multipleApplication)\r\n        || currentUser?.userRole?.name=='ROLE_APPLICANT'&&(s1Application?.decisionStatus=='INCOMPLETE'||s1Application?.decisionStatus=='APPROVED'||s1Application?.decisionStatus=='APPROVED W/ CAUTION')\r\n        || (s1Application?.submissionType === 'REVISION' && s1Application?.internalStatus === 'S1_APPLICATION_REJECTED')\r\n        || (s1Application?.submissionType === 'COMPLIANCE' && s1Application?.internalStatus === 'S1_APPLICATION_REJECTED')\">\r\n  <h4>\r\n    <mat-icon>bookmark</mat-icon> &nbsp;Type of Medium\r\n  </h4>\r\n\r\n  <mat-radio-group class=\"col-md-12\" aria-label=\"Select an option\" [(ngModel)]=\"selectedTypeOfMedium\"\r\n    [disabled]=\"isAscUser && isDisableFieldOnUpdate\" name=\"applicationTypeOfMedium\"\r\n    [hidden]=\"isAscUser && isDisableFieldOnUpdate\">\r\n    <mat-radio-button value=\"SINGLE MEDIA\" (click)=\"getTypeOfMedium('SINGLE MEDIA'); emitSingleMediaChanges()\">\r\n      SINGLE MEDIA\r\n    </mat-radio-button>\r\n    &nbsp;&nbsp;\r\n    <mat-radio-button value=\"MULTIMEDIA\" (click)=\"getTypeOfMedium('MULTIMEDIA-MOVING'); emitMultimediaChanges()\">\r\n      MULTIMEDIA\r\n    </mat-radio-button>\r\n    <br><br>\r\n  </mat-radio-group>\r\n\r\n  <mat-form-field class=\"col-md-11\" appearance=\"outline\" *ngIf=\"isAscUser && isDisableFieldOnUpdate\">\r\n    <mat-label>Media Type</mat-label>\r\n    <input matInput [(ngModel)]=\"s1Application.refTypeOfMedium\" name=\"refTypeOfMedium\"\r\n      readonly=\"isAscUser && isDisableFieldOnUpdate\">\r\n  </mat-form-field>\r\n\r\n  <!-- SELCETED: SINGLE MEDIA -->\r\n  <mat-form-field class=\"col-md-11\" appearance=\"outline\" *ngIf=\"s1Application?.refTypeOfMedium=='SINGLE MEDIA'\">\r\n    <mat-label>Single Media <span class=\"required\">*</span></mat-label>\r\n    <mat-select [(ngModel)]=\"typeOfMedium\" name=\"typeOfMedium\" [compareWith]=\"compareSingleMedia\"\r\n      [disabled]=\"isAscUser && isDisableFieldOnUpdate\" (selectionChange)=\"setSingleMedia(typeOfMedium)\">\r\n      <mat-option *ngFor=\"let i of typeOfMediumList\" [value]=\"i\">\r\n        {{i.description}}\r\n      </mat-option>\r\n    </mat-select>\r\n  </mat-form-field>\r\n\r\n  <!-- <section class=\"example-section\" *ngIf=\"isDigitalStatic\">\r\n      <mat-checkbox class=\"example-margin\" [(ngModel)]=\"checked\" [checked]=\"isDigitalStatic\">With landing page\r\n      </mat-checkbox>\r\n    </section> -->\r\n\r\n  <br><br>\r\n\r\n  <div *ngIf=\"s1Application.refTypeOfMedium=='SINGLE MEDIA'\">\r\n    <mat-form-field class=\"col-md-4 media-info\" appearance=\"outline\"\r\n      *ngIf=\"typeOfMedium?.executionEnable === true || (applicationSingleMedia?.mediumExecution && typeOfMedium?.executionEnable === undefined)\">\r\n      <mat-label>Execution <span class=\"required\">*</span></mat-label>\r\n      <mat-select [(ngModel)]=\"applicationSingleMedia.mediumExecution\" name=\"mediumExecution\"\r\n        [compareWith]=\"compareMediumExecution\" [disabled]=\"isAscUser && isDisableFieldOnUpdate\"\r\n        (selectionChange)=\"emitSingleMediaChanges()\">\r\n        <mat-option *ngFor=\"let i of executionList\" [value]=\"i\">\r\n          {{i.typeOfExecution.typeOfExecution}}\r\n        </mat-option>\r\n      </mat-select>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field class=\"col-md-4 media-info\" appearance=\"outline\"\r\n      *ngIf=\"typeOfMedium?.languageEnable==true||(applicationSingleMedia?.dialect!=null&&typeOfMedium?.languageEnable==undefined)\">\r\n      <mat-label>Language/Dialect</mat-label>\r\n      <mat-select [(ngModel)]=\"applicationSingleMedia.dialect\" name=\"dialect\" [compareWith]=\"compareDialect\"\r\n        [disabled]=\"isAscUser && isDisableFieldOnUpdate\">\r\n        <mat-option *ngFor=\"let i of dialectList\" [value]=\"i\">\r\n          {{i.dialect}}\r\n        </mat-option>\r\n      </mat-select>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field class=\"col-md-4 media-info\" appearance=\"outline\"\r\n      *ngIf=\"typeOfMedium?.othersEnable==true||(applicationSingleMedia?.others&&typeOfMedium?.othersEnable==undefined)\">\r\n      <mat-label>Others</mat-label>\r\n      <input matInput [(ngModel)]=\"applicationSingleMedia.others\" name=\"others\"\r\n        [readonly]=\"isAscUser && isDisableFieldOnUpdate\">\r\n    </mat-form-field>\r\n\r\n\r\n    <!-- <mat-form-field class=\"col-md-3 media-info\" appearance=\"outline\"\r\n        *ngIf=\"typeOfMedium.sizeLengthEnable==true||(applicationSingleMedia.sizeLength&&typeOfMedium.sizeLengthEnable==undefined)\">\r\n        <mat-label>Size Length</mat-label>\r\n        <input matInput [(ngModel)]=\"applicationSingleMedia.sizeLength\" formControlName=\"sizeLength\"\r\n          [readonly]=\"isAscUser && isDisableFieldOnUpdate\">\r\n      </mat-form-field> -->\r\n    <mat-form-field class=\"col-md-3 media-info\" appearance=\"outline\"\r\n      *ngIf=\"typeOfMedium?.lengthEnable==true||typeOfMedium?.sizeLengthEnable==true||(applicationSingleMedia?.sizeLength&&typeOfMedium?.sizeLengthEnable==undefined)\">\r\n      <mat-label>Size Length (in seconds)</mat-label>\r\n      <input matInput [(ngModel)]=\"applicationSingleMedia.sizeLength\" name=\"sizeLength\"\r\n        (keydown)=\"isNumber($event)\" (keyup)=\"emitSingleMediaChanges()\"\r\n        [readonly]=\"(isAscUser && isDisableFieldOnUpdate) && (currentUser?.userRole?.name !== 'ROLE_ADMIN' && currentUser?.userRole?.name !== 'ROLE_SUPER_ADMIN')\"\r\n        (blur)=\"emitSingleMediaChanges()\" maxlength=\"4\">\r\n    </mat-form-field>\r\n\r\n    <mat-form-field class=\"col-md-4 media-info\" appearance=\"outline\"\r\n      *ngIf=\"typeOfMedium?.widthEnable==true||(applicationSingleMedia?.width&&typeOfMedium?.othersEnable==undefined)\">\r\n      <mat-label>Width</mat-label>\r\n      <input matInput [(ngModel)]=\"applicationSingleMedia.width\" name=\"width\"\r\n        [readonly]=\"isAscUser && isDisableFieldOnUpdate\">\r\n    </mat-form-field>\r\n  </div>\r\n\r\n  <!-- SELCETED: MULTIMEDIA -->\r\n  <div *ngIf=\"s1Application.refTypeOfMedium=='MULTIMEDIA-MOVING'||s1Application.refTypeOfMedium=='MULTIMEDIA-STATIC'\">\r\n    <mat-radio-group class=\"col-md-12\" aria-label=\"Select an option\" \r\n      [(ngModel)]=\"s1Application.refTypeOfMedium\"\r\n      name=\"refTypeOfMedium\" \r\n      [disabled]=\"isAscUser && isDisableFieldOnUpdate\" \r\n      (change)=\"getTypeOfMedium(s1Application.refTypeOfMedium); emitMultimediaChanges()\"\r\n    >\r\n      <mat-radio-button value=\"MULTIMEDIA-MOVING\" [checked]=\"s1Application.refTypeOfMedium=='MULTIMEDIA-MOVING'\"\r\n        [disabled]=\"isAscUser && isDisableFieldOnUpdate\">\r\n        MULTIMEDIA-MOVING\r\n      </mat-radio-button>\r\n      &nbsp;&nbsp;\r\n      <mat-radio-button value=\"MULTIMEDIA-STATIC\" [checked]=\"s1Application.refTypeOfMedium=='MULTIMEDIA-STATIC'\"\r\n        [disabled]=\"isAscUser && isDisableFieldOnUpdate\">\r\n        MULTIMEDIA-STATIC(MAX OF 5 LAYOUT)</mat-radio-button>\r\n    </mat-radio-group>\r\n\r\n    <span *ngIf=\"!isAscUser && !isDisableFieldOnUpdate\">\r\n      <br><br>\r\n    </span>\r\n\r\n    <div class=\"row\"\r\n      *ngIf=\"selectMultimedia||s1Application.refTypeOfMedium=='MULTIMEDIA-MOVING'||s1Application.refTypeOfMedium=='MULTIMEDIA-STATIC'\">\r\n      <div class=\"col-md-12\" appearance=\"outline\">\r\n        <!-- <span  *ngFor=\"let s of selectedMultimediaList;\">\r\n              <table *ngIf=\"i?.description==s.typeOfMedium?.description\">\r\n                <tr>\r\n                  <td>\r\n                    <mat-checkbox [checked]=\"true\"\r\n                      [disabled]=\"isAscUser && isDisableFieldOnUpdate\">\r\n                      {{i?.description}}{{i?.sizeLength}}</mat-checkbox>\r\n                  </td>\r\n                  <td>{{s?.multimediaSizeLength}}\r\n                    <input type=\"text\" class=\"form-control\" [(ngModel)]=\"i.sizeLength\" (blur)=\"addMultimedia(i)\" formControlName=\"sizeLength\"\r\n                      name=\"sizeLength\" maxlength=\"200\" placeholder=\"Size/Length\">\r\n                  </td>\r\n                </tr>\r\n              </table>\r\n          </span> -->\r\n        <table>\r\n          <!-- <tr *ngFor=\"let i of typeOfMediumList; let index = index\">\r\n              <td>\r\n                <mat-checkbox [checked]=\"selectedMultimediaStringList.includes(i?.description)\"\r\n                  [disabled]=\"isAscUser && isDisableFieldOnUpdate\">\r\n                  {{i?.description}}</mat-checkbox>\r\n              </td>\r\n              <td>\r\n                  <input type=\"text\" class=\"form-control\" [value]=\"i?.sizeLength ? i?.sizeLength : 0\" (blur)=\"emitMultimediaChanges()\" (keyup)=\"addMultimedia(i, $event); emitMultimediaChanges()\"\r\n                    name=\"sizeLength\" maxlength=\"4\" placeholder=\"Size/Length (in seconds)\" (keydown)=\"validateFieldService.numbersOnly($event)\"\r\n                    [readonly]=\"((isAscUser && isDisableFieldOnUpdate) && (currentUser?.userRole?.name !== 'ROLE_ADMIN' && currentUser?.userRole?.name !== 'ROLE_SUPER_ADMIN')) && (s1Application?.decisionStatus !== 'APPROVED' || s1Application?.decisionStatus !== 'APPROVED_WITH_CAUTION') \">\r\n              </td>\r\n            </tr> -->\r\n\r\n          <ng-container *ngIf=\"s1Application.refTypeOfMedium=='MULTIMEDIA-MOVING'\">\r\n            <tr *ngFor=\"let item of multimediaMovingDTO.applicationMultimediaMovingList; let i = index\"\r\n              style=\"height: 40px;\">\r\n              <td>\r\n                <mat-checkbox [(ngModel)]=\"item.hasSelected\" [disabled]=\"isAscUser && isDisableFieldOnUpdate\" (click)=\"emitMultimediaChanges()\">\r\n                  {{item.multimediaMovingMedium | uppercase}}\r\n                </mat-checkbox>\r\n              </td>\r\n              <td *ngIf=\"i === 0\">\r\n                <input type=\"text\" class=\"form-control\" name=\"sizeLength\" maxlength=\"4\"\r\n                  placeholder=\"Size/Length (in seconds)\" (keydown)=\"isNumber($event)\"\r\n                  (blur)=\"emitMultimediaChanges()\" (keyup)=\"emitMultimediaChanges()\"\r\n                  [(ngModel)]=\"multimediaMovingDTO.sizeLength\" [readonly]=\"\r\n                    ((isAscUser && isDisableFieldOnUpdate) && \r\n                    (currentUser?.userRole?.name !== 'ROLE_ADMIN' && currentUser?.userRole?.name !== 'ROLE_SUPER_ADMIN')) && \r\n                    (s1Application?.decisionStatus !== 'APPROVED' || s1Application?.decisionStatus !== 'APPROVED_WITH_CAUTION')\r\n                  \">\r\n              </td>\r\n            </tr>\r\n          </ng-container>\r\n          <ng-container *ngIf=\"s1Application.refTypeOfMedium=='MULTIMEDIA-STATIC'\">\r\n            <tr *ngFor=\"let item of multimediaStaticDTO.applicationMultimediaStaticList; let i = index\"\r\n              style=\"height: 40px;\">\r\n              <td>\r\n                <mat-checkbox [(ngModel)]=\"item.hasSelected\" [disabled]=\"isAscUser && isDisableFieldOnUpdate\">\r\n                  {{item.multimediaStaticMedium | uppercase}}\r\n                </mat-checkbox>\r\n              </td>\r\n              <td *ngIf=\"item.multimediaStaticMedium !== 'digital static'\">\r\n                <input type=\"text\" class=\"form-control\" [name]=\"item.multimediaStaticMedium\" maxlength=\"4\"\r\n                  placeholder=\"Size/Length (in seconds)\" (keydown)=\"isNumber($event)\"\r\n                  (blur)=\"emitMultimediaChanges()\" (keyup)=\"emitMultimediaChanges()\"\r\n                  [(ngModel)]=\"item.sizeLength\" [readonly]=\"\r\n                      ((isAscUser && isDisableFieldOnUpdate) && \r\n                      (currentUser?.userRole?.name !== 'ROLE_ADMIN' && currentUser?.userRole?.name !== 'ROLE_SUPER_ADMIN')) && \r\n                      (s1Application?.decisionStatus !== 'APPROVED' || s1Application?.decisionStatus !== 'APPROVED_WITH_CAUTION')\r\n                    \">\r\n              </td>\r\n            </tr>\r\n          </ng-container>\r\n        </table>\r\n      </div>\r\n\r\n      <!-- <div class=\"col-md-5\" *ngIf=\"s1Application.refTypeOfMedium=='MULTIMEDIA-MOVING'\">\r\n            <mat-form-field class=\"col-md-4\" appearance=\"outline\">\r\n              <mat-label>Length-{{mt}}++{{i.id}}</mat-label>\r\n              <input matInput [(ngModel)]=\"multimediaLength\" (change)=\"updateSizeLength(mt,multimediaLength)\"\r\n                formControlName=\"multimediaLength\" [readonly]=\"isAscUser\">\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"col-md-5\" *ngIf=\"s1Application.refTypeOfMedium=='MULTIMEDIA-STATIC'\">\r\n            <mat-form-field class=\"col-md-4\" appearance=\"outline\">\r\n              <mat-label>Size</mat-label>\r\n              <input matInput [(ngModel)]=\"applicationMultimediaStatic.multimediaSize\"  (change)=\"updateSizeLength(i)\"\r\n               formControlName=\"multimediaSize\" [readonly]=\"isAscUser\">\r\n            </mat-form-field>\r\n          </div> -->\r\n    </div>\r\n\r\n    <div class=\"row\"><br></div>\r\n\r\n\r\n  </div>\r\n  <br><br>\r\n</div>\r\n<!-- END OF FOR S1 APPLICATION -->\r\n\r\n<!-- ATTACHMENT SECTION -->\r\n<!-- FOR S1 APPLICATION -->\r\n<span class=\"row fields\" *ngIf=\"(\r\n    !specialApplicationType.includes(s1Application?.applicationType?.description?.toUpperCase())\r\n    ||(specialApplicationType.includes(s1Application?.applicationType?.description?.toUpperCase()) && s1Application?.applicationRequest?.status == 'APPROVED')\r\n    ||(s1Application?.formType === 'MULTIPLE' && s1Application?.multipleApplication)\r\n    ) && s1Application?.formType !== 'MULTIPLE'||(s1Application?.formType === 'MULTIPLE' && s1Application?.multipleApplication) &&\r\n    applicationStage !== 'S2-APPLICATION'\">\r\n\r\n  <app-attachment-document [s1Application]=\"s1Application\" [labelMainDocument]=\"labelMainDocument\"\r\n    [isAscUser]=\"isAscUser\" [isDisableFieldOnUpdate]=\"isDisableFieldOnUpdate\"\r\n    [originalAttachmentDocuments]=\"originalAttachmentDocuments\"\r\n    [revisionAttachmentDocuments]=\"revisionAttachmentDocuments\"\r\n    [complianceAttachmentDocuments]=\"complianceAttachmentDocuments\" [applicationStage]=\"applicationStage\">\r\n  </app-attachment-document>\r\n\r\n  <!--  [showMainDocumentUploadButton]=\"showMainDocumentUploadButton\" [showMainDocumentViewButton]=\"showMainDocumentViewButton\" [safeURLMainDoc]=\"safeURLMainDoc\"\r\n     [showSupportDocumentFrame]=\"showSupportDocumentFrame\" [showSupportiveDocumentUploadButton]=\"showSupportiveDocumentUploadButton\" [showSupportiveDocumentViewButton]=\"showSupportiveDocumentViewButton\" [safeURLSupportDoc]=\"safeURLSupportDoc\"\r\n      [revisionLetterAttachment]=\"revisionLetterAttachment\" [showRevisionLetterUploadButton]=\"showRevisionLetterUploadButton\" [showRevisionLetterViewButton]=\"showRevisionLetterViewButton\" [safeURLRevisionLetter]=\"safeURLRevisionLetter\" -->\r\n\r\n\r\n  <!-- FOR S1 APPLICATION -->\r\n  <div class=\"row\">\r\n    <!-- <b *ngIf=\"currentUser?.userRole?.name=='ROLE_APPLICANT'\"><b class=\"material-icons\">error_outline</b> Attachments' total file size should not exceed 15MB.</b> -->\r\n\r\n    <!-- MAIN DOCUMENT -->\r\n    <!-- <div class=\"row\">\r\n        <h4>\r\n          <i class=\"material-icons\">bookmark</i> &nbsp;{{labelMainDocument}}\r\n        </h4>\r\n        <br>\r\n        <div class=\"col-md-12\" appearance=\"outline\">\r\n          <mat-label *ngIf=\"attachmentDocuments[0]?.originalFilename\">Filename: </mat-label>\r\n          <input #mainInput matInput [value]=\"attachmentDocuments[0]?.originalFilename\" disabled\r\n            *ngIf=\"attachmentDocuments[0]?.originalFilename\"><br>\r\n          <input #mainFile class=\"file-upload\" type=\"file\" accept=\".pdf\" (change)=\"selectFile($event, 'MAIN')\"\r\n            [hidden]=\"(isAscUser && isDisableFieldOnUpdate) || attachmentDocuments[0]?.originalFilename != null\"\r\n            *ngIf=\"attachmentDocuments?.length==0 || (attachmentDocuments?.length>=1 && attachmentDocuments[0]===null) || s1Application?.internalStatus=='SAVED'|| attachmentDocuments[0]?.originalFilename != null ||\r\n            ((s1Application?.internalStatus=='S1_APPLICATION_REVIEWED' || s1Application?.internalStatus=='COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER')\r\n              &&(s1Application?.decisionStatus=='INCOMPLETE'||s1Application?.decisionStatus=='APPROVED'||s1Application?.decisionStatus=='APPROVED W/ CAUTION'))\" />\r\n        </div>\r\n\r\n        <div class=\"row\"><br></div>\r\n        <div class=\"col-md-12\" appearance=\"outline\"\r\n          *ngIf=\"showMainDocumentUploadButton==true||attachmentDocuments?.length>0\">\r\n          <button mat-raised-button class=\"button-red button-right\" (click)=\"viewDocument('MAIN')\"\r\n            *ngIf=\"showMainDocumentViewButton||s1Application?.mainAttachmentReference\">\r\n            <i class=\"material-icons add-document\">open_in_new</i> VIEW DOCUMENT\r\n          </button>\r\n          &nbsp; &nbsp;\r\n          <button mat-raised-button class=\"button-red button-right\" (click)=\"deleteUploadedFile('MAIN')\"\r\n            [hidden]=\"!showMainDocumentViewButton&&!s1Application?.mainAttachmentReference||(currentUser?.userRole?.name!='ROLE_APPLICANT'&&currentUser?.userRole?.name!='ROLE_ENCODER')\"\r\n            *ngIf=\"showMainDocumentViewButton||s1Application?.mainAttachmentReference||(s1Application?.internalStatus=='SAVED'||\r\n            ((s1Application?.internalStatus=='S1_APPLICATION_REVIEWED' || s1Application?.internalStatus=='COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER')\r\n              &&(s1Application?.decisionStatus=='INCOMPLETE'||s1Application?.decisionStatus=='APPROVED'||s1Application?.decisionStatus=='APPROVED W/ CAUTION')))\">\r\n            <i class=\"material-icons add-document\">delete</i> DELETE ATTACHMENT\r\n          </button>\r\n          &nbsp; &nbsp;\r\n          <button mat-raised-button class=\"button-red button-right\" (click)=\"uploadDocument()\"\r\n            [disabled]=\"!safeURLMainDoc||!showMainDocumentUploadButton\" [hidden]=\"(isAscUser && isDisableFieldOnUpdate)\"\r\n            *ngIf=\"attachmentDocuments[0]?.originalFilename == null\">\r\n            <i class=\"material-icons add-document\">upload</i> UPLOAD\r\n          </button>\r\n        </div>\r\n        <div class=\"col-md-12\">\r\n          <hr>\r\n        </div>\r\n      </div> -->\r\n\r\n    <!-- SUPPORTING DOC -->\r\n    <!-- <div class=\"row\" *ngIf=\"showSupportDocumentFrame==true || originalAttachmentDocuments?.length>0 || revisionAttachmentDocuments?.length>0 || complianceAttachmentDocuments?.length>0\"> -->\r\n    <!-- <h4>\r\n          <i class=\"material-icons\">bookmark</i> &nbsp;SUPPORT DOCUMENTS\r\n        </h4>\r\n\r\n        <div class=\"col-md-12\" appearance=\"outline\"\r\n          [hidden]=\"(isAscUser && isDisableFieldOnUpdate)||attachmentDocuments[1]?.originalFilename||s1Application?.supportingAttachmentReference\"\r\n          *ngIf=\"(attachmentDocuments?.length<2||attachmentDocuments?.length!=2)\">\r\n\r\n          <mat-checkbox (click)=\"verifyNoDocumentAttached()\" [(ngModel)]=\"s1Application.hasNoSupportingDocs\"\r\n            (checked)=\"s1Application.hasNoSupportingDocs\" formControlName=\"hasNoSupportingDocs\"\r\n            *ngIf=\"currentUser.userRole.name=='ROLE_APPLICANT' || (currentUser.userRole.name=='ROLE_ENCODER' && s1Application?.internalStatus === undefined )\">\r\n            I certify that no supporting document is attached to this S1 application.</mat-checkbox>\r\n          <br>\r\n        </div>\r\n\r\n        <p *ngIf=\"(currentUser.userRole.name!='ROLE_APPLICANT'&&s1Application.hasNoSupportingDocs)\r\n        ||(currentUser.userRole.name=='ROLE_AD_SPECIALIST'&&s1Application.hasNoSupportingDocs)\">\r\n          Supporting Document was not submitted.\r\n        </p>\r\n        <div class=\"col-md-12\"><br></div> -->\r\n\r\n    <!-- <div *ngIf=\"!s1Application.hasNoSupportingDocs\">\r\n          <div class=\"col-md-12\" appearance=\"outline\">\r\n            <mat-label *ngIf=\"attachmentDocuments[1]?.originalFilename\">Filename: </mat-label>\r\n            <input matInput [value]=\"attachmentDocuments[1]?.originalFilename\" disabled\r\n              *ngIf=\"attachmentDocuments[1]?.originalFilename\"><br>\r\n\r\n            <input #supportiveFile class=\"file-upload\" type=\"file\" accept=\".pdf\"\r\n              (change)=\"selectFile($event, 'SUPPORTIVE')\"\r\n              [hidden]=\"(isAscUser && isDisableFieldOnUpdate) || attachmentDocuments[1]?.originalFilename\"\r\n              *ngIf=\"attachmentDocuments?.length<2|| (attachmentDocuments?.length>=2 && attachmentDocuments[1]===null) ||s1Application?.internalStatus=='SAVED'|| attachmentDocuments[1]?.originalFilename != null ||\r\n              ((s1Application?.internalStatus=='S1_APPLICATION_REVIEWED' || s1Application?.internalStatus=='COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER')\r\n               &&(s1Application?.decisionStatus=='INCOMPLETE'||s1Application?.decisionStatus=='APPROVED'||s1Application?.decisionStatus=='APPROVED W/ CAUTION'))\" />\r\n          </div>\r\n\r\n          <div class=\"row\"><br></div>\r\n          <div class=\"col-md-12\" appearance=\"outline\"\r\n            *ngIf=\"showSupportiveDocumentUploadButton==true||attachmentDocuments?.length>1\">\r\n            <button mat-raised-button class=\"button-red button-right\" (click)=\"viewDocument('SUPPORTIVE')\"\r\n              *ngIf=\"showSupportiveDocumentViewButton||s1Application?.supportingAttachmentReference\">\r\n              <i class=\"material-icons add-document\">open_in_new</i> VIEW DOCUMENT\r\n            </button>\r\n            &nbsp; &nbsp;\r\n            <button mat-raised-button class=\"button-red button-right\" (click)=\"deleteUploadedFile('SUPPORTIVE')\"\r\n              [hidden]=\"!showSupportiveDocumentViewButton&&!s1Application?.supportingAttachmentReference||(currentUser?.userRole?.name!='ROLE_APPLICANT'&&currentUser?.userRole?.name!='ROLE_ENCODER')\"\r\n              *ngIf=\"showSupportiveDocumentViewButton||s1Application?.supportingAttachmentReference||(s1Application?.internalStatus=='SAVED'||\r\n              ((s1Application?.internalStatus=='S1_APPLICATION_REVIEWED' || s1Application?.internalStatus=='COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER')\r\n                &&(s1Application?.decisionStatus=='INCOMPLETE'||s1Application?.decisionStatus=='APPROVED'||s1Application?.decisionStatus=='APPROVED W/ CAUTION')))\">\r\n              <i class=\"material-icons add-document\">delete</i> DELETE ATTACHMENT\r\n            </button>\r\n            &nbsp; &nbsp;\r\n            <button mat-raised-button class=\"button-red button-right\" (click)=\"uploadDocument()\"\r\n              [disabled]=\"!safeURLSupportDoc||!showSupportiveDocumentUploadButton\"\r\n              [hidden]=\"(isAscUser && isDisableFieldOnUpdate)\"\r\n              *ngIf=\"s1Application?.supportingAttachmentReference==null||showSupportiveDocumentUploadButton||attachmentDocuments[1]?.originalFilename === null\">\r\n              <i class=\"material-icons add-document\">upload</i> UPLOAD\r\n            </button>\r\n          </div>\r\n          <div class=\"row\"><br></div>\r\n          <br>\r\n        </div> -->\r\n\r\n    <!-- FOR ADSPE / SCREENER / REVIEWER -->\r\n    <!-- <div class=\"row fields\"> -->\r\n    <div class=\"col-md-12\" appearance=\"outline\" *ngIf=\"currentUser.userRole.name=='ROLE_AD_SPECIALIST'\r\n          && (s1Application?.internalStatus === 'S1_APPLICATION_VERIFIED_BY_ENCODER' || s1Application?.internalStatus == 'COMPLIANCE_DOCUMENT_VERIFIED_BY_ENCODER' || s1Application?.internalStatus === 'REVISION_VERIFIED_BY_ENCODER')\r\n          && s1Application.supportingAttachmentReference !== null\">\r\n      <!-- *ngIf=\"showSupportiveDocumentDownloadButton==true||attachmentDocuments?.length>1\" -->\r\n      <div class=\"row\"><br></div>\r\n      <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n        <mat-label>Type of Document</mat-label>\r\n        <mat-select [(ngModel)]=\"supportingDocument.typeOfDocument\" name=\"typeOfDocument\">\r\n          <mat-option *ngFor=\"let i of typeOfDocumentList\" [value]=\"i\" (click)=\"setTypeOfDocument(i)\">\r\n            {{i.description}}\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field class=\"col-md-6 hideIndex\" appearance=\"outline\" style=\"display: none;\">\r\n        <mat-label>index</mat-label>\r\n        <input matInput [value]=\"supportingDocumentIndex\">\r\n      </mat-form-field>\r\n\r\n      <mat-form-field class=\"col-md-6 document-form-margin\" appearance=\"outline\" *ngIf=\"typeOfDocument?.inputEnable\">\r\n        <input matInput [(ngModel)]=\"supportingDocument.input\" name=\"input\">\r\n      </mat-form-field>\r\n\r\n      <mat-form-field class=\"col-md-6 document-form-margin\" appearance=\"outline\" *ngIf=\"typeOfDocument?.variantEnable\">\r\n        <mat-label>Variant</mat-label>\r\n        <input matInput [(ngModel)]=\"supportingDocument.variant\" name=\"variant\">\r\n      </mat-form-field>\r\n\r\n      <mat-form-field class=\"col-md-6 document-form-margin\" appearance=\"outline\"\r\n        *ngIf=\"typeOfDocument?.expiresOnEnable\">\r\n        <mat-label>Expires on</mat-label>\r\n        <input matInput placeholder=\"Date\" [matDatepicker]=\"expiresOn\" readonly [min]=\"todayDate\"\r\n          [(ngModel)]=\"supportingDocument.expiresOn\" name=\"expiresOn\" [readonly]=\"true\">\r\n        <mat-datepicker-toggle matSuffix [for]=\"expiresOn\">\r\n          <mat-datepicker color=\"warn\" #expiresOn></mat-datepicker>\r\n        </mat-datepicker-toggle>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field class=\"col-md-6 document-form-margin\" appearance=\"outline\" *ngIf=\"typeOfDocument?.basedOnEnable\">\r\n        <mat-label>Based on</mat-label>\r\n        <input matInput [(ngModel)]=\"supportingDocument.basedOn\" name=\"basedOn\" required>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field class=\"col-md-6 document-form-margin\" appearance=\"outline\"\r\n        *ngIf=\"typeOfDocument?.dateOfLaunchEnable\">\r\n        <mat-label>Date of Launch</mat-label>\r\n        <input matInput placeholder=\"Date\" [matDatepicker]=\"dateOfLaunch\" readonly [min]=\"todayDate\"\r\n          [(ngModel)]=\"supportingDocument.dateOfLaunch\" name=\"dateOfLaunch\" [readonly]=\"true\">\r\n        <mat-datepicker-toggle matSuffix [for]=\"dateOfLaunch\">\r\n          <mat-datepicker color=\"warn\" #dateOfLaunch></mat-datepicker>\r\n        </mat-datepicker-toggle>\r\n        <!-- <input matInput [(ngModel)]=\"supportingDocument.dateOfLaunch\" formControlName=\"dateOfLaunch\" name=\"dateOfLaunch\"> -->\r\n      </mat-form-field>\r\n\r\n      <mat-form-field class=\"col-md-6 document-form-margin\" appearance=\"outline\" *ngIf=\"typeOfDocument?.remarksEnable\">\r\n        <mat-label>Remarks</mat-label>\r\n        <textarea matInput [(ngModel)]=\"supportingDocument.remarks\" name=\"remarks\"></textarea>\r\n      </mat-form-field>\r\n      <br>\r\n\r\n      <div class=\"col-md-12\" *ngIf=\"!isUpdate\">\r\n        <button mat-raised-button class=\"col-md-12 button-red\" [disabled]=\"supportingDocument.typeOfDocument === undefined ||\r\n              (typeOfDocument?.variantEnable && (supportingDocument.variant === undefined || supportingDocument.variant === '')) ||\r\n              (typeOfDocument?.expiresOnEnable && supportingDocument.expiresOn === undefined) ||\r\n              (typeOfDocument?.basedOnEnable && supportingDocument.basedOn === undefined) ||\r\n              (typeOfDocument?.dateOfLaunchEnable && supportingDocument.dateOfLaunch === undefined) ||\r\n              (typeOfDocument?.remarksEnable && supportingDocument.remarks === undefined)\r\n              \" (click)=\"addSupportiveDocument(supportingDocument)\">\r\n          <i class=\"material-icons add-document\">task_alt</i> ADD TO LIST\r\n        </button>\r\n      </div>\r\n      &nbsp;&nbsp;\r\n      <div class=\"col-md-12\" *ngIf=\"isUpdate\">\r\n        <button mat-raised-button class=\"col-md-12 button-red\"\r\n          (click)=\"modifyTypeOfDocument(supportingDocument,supportingDocumentIndex)\"\r\n          [disabled]=\"supportingDocument.typeOfDocument === undefined\">\r\n          <i class=\"material-icons add-document\">task_alt</i> Update\r\n        </button>\r\n      </div>\r\n      <div class=\"row\"><br></div>\r\n      <hr>\r\n    </div>\r\n\r\n    <div class=\"col-md-12\">\r\n      <div class=\"col-md-12 mat-elevation-z8 fields\" appearance=\"outline\" *ngIf=\"supportiveDocumentList?.length>0\">\r\n        <table mat-table [dataSource]=\"dataSource||supportiveDocumentList\" matSort>\r\n\r\n          <ng-container matColumnDef=\"id\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> TYPE OF DOCUMENT </th>\r\n            <td mat-cell *matCellDef=\"let element; let i = index\"> {{i}} </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"typeOfDocument\">\r\n            <th mat-header-cell *matHeaderCellDef> TYPE OF DOCUMENT </th>\r\n            <td mat-cell *matCellDef=\"let element\"> {{ element?.typeOfDocument?.description }} </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"input\">\r\n            <th mat-header-cell *matHeaderCellDef> INPUT </th>\r\n            <td mat-cell *matCellDef=\"let element\"> {{ element?.input==undefined ? 'N/A' : element?.input }}\r\n            </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"variant\">\r\n            <th mat-header-cell *matHeaderCellDef> VARIANT </th>\r\n            <td mat-cell *matCellDef=\"let element\"> {{ element?.variant==undefined ? 'N/A' : element?.variant }}\r\n            </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"expiresOn\">\r\n            <th mat-header-cell *matHeaderCellDef> EXPIRES ON </th>\r\n            <td mat-cell *matCellDef=\"let element\">\r\n              {{ element?.expiresOn==undefined ? 'N/A' : element?.expiresOn | date:'yyyy-MM-dd' }}\r\n            </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"basedOn\">\r\n            <th mat-header-cell *matHeaderCellDef> BASED ON </th>\r\n            <td mat-cell *matCellDef=\"let element\">\r\n              {{ element?.basedOn ==undefined ? 'N/A' : element?.basedOn | date:'yyyy-MM-dd' }}\r\n            </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"remarks\">\r\n            <th mat-header-cell *matHeaderCellDef> REMARKS </th>\r\n            <td mat-cell *matCellDef=\"let element\"> {{ element?.remarks==undefined ? 'N/A' : element?.remarks }}\r\n            </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"action\">\r\n            <th mat-header-cell *matHeaderCellDef> ACTIONS </th>\r\n            <td mat-cell *matCellDef=\"let element;let i = index\">\r\n\r\n              <!-- <span class=\"a-icon\">\r\n                    <i class=\"material-icons\" style=\"color:blue\" (click)=\"getTypeOfDocument(element, i)\">edit</i>\r\n                  </span> -->\r\n              <span class=\"a-icon\" [hidden]=\"s1Application?.hasOngoingAppeal\"\r\n                *ngIf=\"(s1Application?.internalStatus === 'S1_APPLICATION_VERIFIED_BY_ENCODER' || s1Application?.internalStatus == 'COMPLIANCE_DOCUMENT_VERIFIED_BY_ENCODER' || s1Application?.internalStatus === 'REVISION_VERIFIED_BY_ENCODER')\">\r\n                <i class=\"material-icons\" (click)=\"removeTypeOfDocument(i)\">delete</i>\r\n              </span>\r\n\r\n              <!-- <button >\r\n                      <i class=\"material-icons\" style=\"color:blue\">edit</i>\r\n                    </button> -->\r\n              <!-- <button (click)=\"removeTypeOfDocument(i)\">\r\n                      <i class=\"material-icons\">delete</i>\r\n                    </button> -->\r\n            </td>\r\n          </ng-container>\r\n\r\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n          <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n        </table>\r\n        <div class=\"no-record\" [hidden]=\"dataSource && dataSource?.data?.length > 0\"\r\n          *ngIf=\"supportiveDocumentList?.length==0\">\r\n          No supporting document found.\r\n        </div>\r\n        <!-- <mat-paginator [pageSizeOptions]=\"[10, 20, 50]\" showFirstLastButtons></mat-paginator> -->\r\n      </div>\r\n    </div>\r\n\r\n\r\n    <!-- </div> -->\r\n\r\n    <!-- FOR REVISION - REVISION LETTER -->\r\n    <!-- <div class=\"row\" *ngIf=\"(s1Application?.internalStatus==='S1_APPLICATION_REVIEWED'&&(s1Application?.decisionStatus=='APPROVED'||s1Application?.decisionStatus=='APPROVED W/ CAUTION'))\r\n      ||s1Application?.revisionLetterAttachmentReference\" [hidden]=\"s1Application?.appliedS2 && s1Application?.revisionLetterAttachmentReference === ''\">\r\n        <div class=\"col-md-12\">\r\n          <hr>\r\n        </div>\r\n        <h4>\r\n          <i class=\"material-icons\">bookmark</i> &nbsp;REVISION LETTER\r\n        </h4>\r\n        <br>\r\n        <div class=\"col-md-12\" appearance=\"outline\">\r\n          <mat-label\r\n            *ngIf=\"revisionLetterAttachment?.originalFilename||attachmentDocuments[1]?.revisionLetterAttachmentReference\">\r\n            Filename: </mat-label>\r\n          <input matInput\r\n            [value]=\"revisionLetterAttachment?.originalFilename||attachmentDocuments[1]?.revisionLetterAttachmentReference||attachmentDocuments[2]?.revisionLetterAttachmentReference\"\r\n            disabled *ngIf=\"revisionLetterAttachment?.originalFilename\"><br>\r\n\r\n          <input #revisionLetterFile class=\"file-upload\" type=\"file\" accept=\".pdf\"\r\n            (change)=\"selectFile($event, 'REVISION_LETTER')\"\r\n            [hidden]=\"(isAscUser && isDisableFieldOnUpdate)||revisionLetterAttachment?.originalFilename\"\r\n            *ngIf=\"attachmentDocuments?.length==0||s1Application?.internalStatus=='SAVED'||\r\n            ((s1Application?.internalStatus=='S1_APPLICATION_REVIEWED' || s1Application?.internalStatus=='COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER')\r\n              &&(s1Application?.decisionStatus=='INCOMPLETE'||s1Application?.decisionStatus=='APPROVED'||s1Application?.decisionStatus=='APPROVED W/ CAUTION'))\" />\r\n        </div>\r\n\r\n        <div class=\"row\"><br></div>\r\n        <div class=\"col-md-12\" appearance=\"outline\"\r\n          *ngIf=\"showRevisionLetterUploadButton==true||attachmentDocuments?.length>1||s1Application?.revisionLetterAttachmentReference\">\r\n          <button mat-raised-button class=\"button-red button-right\" (click)=\"viewDocument('REVISION_LETTER')\"\r\n            *ngIf=\"showRevisionLetterViewButton==true||s1Application?.revisionLetterAttachmentReference\">\r\n            <i class=\"material-icons add-document\">open_in_new</i> VIEW DOCUMENT\r\n          </button>\r\n          &nbsp; &nbsp;\r\n          <button mat-raised-button class=\"button-red button-right\" (click)=\"deleteUploadedFile('REVISION_LETTER')\"\r\n            [hidden]=\"!showRevisionLetterViewButton&&!s1Application?.revisionLetterAttachmentReference||(currentUser?.userRole?.name!='ROLE_APPLICANT'&&currentUser?.userRole?.name!='ROLE_ENCODER')\"\r\n            *ngIf=\"showRevisionLetterViewButton||s1Application?.revisionLetterAttachmentReference||(s1Application?.internalStatus=='SAVED'||\r\n            ((s1Application?.internalStatus=='S1_APPLICATION_REVIEWED' || s1Application?.internalStatus=='COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER')\r\n              &&(s1Application?.decisionStatus=='INCOMPLETE'||s1Application?.decisionStatus=='APPROVED'||s1Application?.decisionStatus=='APPROVED W/ CAUTION')))\">\r\n            <i class=\"material-icons add-document\">delete</i> DELETE ATTACHMENT\r\n          </button>\r\n          &nbsp; &nbsp;\r\n          <button mat-raised-button class=\"button-red button-right\" (click)=\"uploadDocument()\"\r\n            [disabled]=\"!safeURLRevisionLetter||!showRevisionLetterUploadButton\"\r\n            [hidden]=\"(isAscUser && isDisableFieldOnUpdate)\" *ngIf=\"showRevisionLetterUploadButton\">\r\n            <i class=\"material-icons add-document\">upload</i> UPLOAD\r\n          </button>\r\n        </div>\r\n        <div class=\"row\"><br></div>\r\n        <br>\r\n        <br>\r\n      </div> -->\r\n  </div>\r\n</span>\r\n\r\n\r\n<!--  //////////////////////////////////////// S2 APPLCIATION ///////////////////////////////////////////////////////////// -->\r\n\r\n<!-- FOR S2 APPLICATION -->\r\n<div class=\"row fields\" *ngIf=\"applicationStage === 'S2-APPLICATION'\">\r\n  <div class=\"row\">\r\n    <!-- FOR S1 APPLICATION -->\r\n    <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n      <mat-label>Ad Title</mat-label>\r\n      <input matInput [value]=\"s1Application.adTitle\" name=\"adTitle\"\r\n        [readonly]=\"isAscUser && isDisableFieldOnUpdate || applicationStage === 'S2-APPLICATION'\">\r\n    </mat-form-field>\r\n  </div>\r\n\r\n  <div class=\"row\">\r\n    <mat-form-field class=\"col-md-6\" appearance=\"outline\"\r\n      *ngIf=\"s1Application?.formType !== 'MULTIPLE'||(s1Application?.formType === 'MULTIPLE' && s1Application.multipleApplication)\">\r\n      <mat-label>Reference Code of Previously-Approved Material</mat-label>\r\n      <input matInput [value]=\"s1Application.previousRefCode\" name=\"previousRefCode\"\r\n        [readonly]=\"isAscUser && isDisableFieldOnUpdate || applicationStage === 'S2-APPLICATION'\">\r\n    </mat-form-field>\r\n\r\n    <mat-form-field class=\"col-md-6\" appearance=\"outline\">\r\n      <mat-label>Tag Line</mat-label>\r\n      <input matInput [value]=\"s1Application.tagLine\" name=\"tagLine\"\r\n        [readonly]=\"isAscUser && isDisableFieldOnUpdate || applicationStage === 'S2-APPLICATION'\">\r\n    </mat-form-field>\r\n  </div>\r\n</div>\r\n\r\n<!-- FOR S2 APPLICATION -->\r\n<div class=\"row fields\" *ngIf=\"applicationStage === 'S2-APPLICATION'\">\r\n  <h4>\r\n    <mat-icon>bookmark</mat-icon> &nbsp;TYPE OF MEDIUM\r\n  </h4>\r\n\r\n  <mat-radio-group class=\"col-md-12\" aria-label=\"Select an option\" [value]=\"s1Application.refTypeOfMedium\"\r\n    [disabled]=\"true\">\r\n    <mat-radio-button value=\"SINGLE MEDIA\" [checked]=\"s2Application?.applicationForm?.refTypeOfMedium=='SINGLE MEDIA'\">\r\n      SINGLE MEDIA\r\n    </mat-radio-button>\r\n    &nbsp;&nbsp;\r\n    <mat-radio-button value=\"MULTIMEDIA\"\r\n      [checked]=\"selectMultimedia||s1Application.refTypeOfMedium=='MULTIMEDIA'||s1Application.refTypeOfMedium=='MULTIMEDIA-STATIC'||s1Application.refTypeOfMedium=='MULTIMEDIA-MOVING'\">\r\n      MULTIMEDIA</mat-radio-button>\r\n    <br><br>\r\n  </mat-radio-group>\r\n  <mat-form-field class=\"col-md-11\" appearance=\"outline\" *ngIf=\"s1Application.refTypeOfMedium=='SINGLE MEDIA'\">\r\n    <mat-label>Single Media <span class=\"required\">*</span></mat-label>\r\n    <input matInput name=\"singleMedia\" [value]=\"applicationSingleMedia?.mediumExecution?.typeOfMedium?.description\"\r\n      [readonly]=\"true\">\r\n  </mat-form-field>\r\n\r\n  <div *ngIf=\"s1Application.refTypeOfMedium=='SINGLE MEDIA'\">\r\n    <mat-form-field class=\"col-md-4 media-info\" appearance=\"outline\"\r\n      *ngIf=\"typeOfMedium?.executionEnable==true || applicationSingleMedia?.mediumExecution || applicationSingleMedia?.mediumExecution?.typeOfExecution?.typeOfExecution === 'NO EXECUTION'\">\r\n      <mat-label>Execution <span class=\"required\">*</span></mat-label>\r\n      <input matInput name=\"execution\"\r\n        [value]=\"applicationSingleMedia?.mediumExecution?.typeOfExecution?.typeOfExecution\" [readonly]=\"true\">\r\n    </mat-form-field>\r\n\r\n    <mat-form-field class=\"col-md-4 media-info\" appearance=\"outline\"\r\n      *ngIf=\"typeOfMedium?.languageEnable==true||applicationSingleMedia?.dialect\">\r\n      <mat-label>Language/Dialect</mat-label>\r\n      <input matInput name=\"language\" [value]=\"applicationSingleMedia?.dialect?.dialect\"\r\n        [readonly]=\"isAscUser && isDisableFieldOnUpdate\">\r\n    </mat-form-field>\r\n\r\n    <mat-form-field class=\"col-md-4 media-info\" appearance=\"outline\"\r\n      *ngIf=\"typeOfMedium?.othersEnable==true||applicationSingleMedia?.others\">\r\n      <mat-label>Others</mat-label>\r\n      <input matInput name=\"others\" [value]=\"applicationSingleMedia?.others\"\r\n        [readonly]=\"isAscUser && isDisableFieldOnUpdate\">\r\n    </mat-form-field>\r\n\r\n    <mat-form-field class=\"col-md-3 media-info\" appearance=\"outline\"\r\n      *ngIf=\"typeOfMedium?.sizeLengthEnable==true||typeOfMedium?.lengthEnable==true||applicationSingleMedia?.sizeLength\">\r\n      <mat-label>Size Length (in seconds)</mat-label>\r\n      <input matInput name=\"sizeLength\"\r\n        [value]=\"applicationSingleMedia?.sizeLength ? applicationSingleMedia?.sizeLength : 0\" [readonly]=\"true\">\r\n    </mat-form-field>\r\n\r\n    <mat-form-field class=\"col-md-4 media-info\" appearance=\"outline\"\r\n      *ngIf=\"typeOfMedium?.widthEnable==true||applicationSingleMedia?.width\">\r\n      <mat-label>Width</mat-label>\r\n      <input matInput name=\"width\" [value]=\"applicationSingleMedia?.width ? applicationSingleMedia?.width : 0\"\r\n        [readonly]=\"isAscUser && isDisableFieldOnUpdate\">\r\n    </mat-form-field>\r\n  </div>\r\n\r\n  <div\r\n    *ngIf=\"selectMultimedia==true||s1Application.refTypeOfMedium=='MULTIMEDIA-MOVING'||s1Application.refTypeOfMedium=='MULTIMEDIA-STATIC'\">\r\n    <mat-radio-group class=\"col-md-12\" aria-label=\"Select an option\" [value]=\"s1Application.refTypeOfMedium\"\r\n      [disabled]=\"true\">\r\n      <mat-radio-button value=\"MULTIMEDIA-MOVING\" [checked]=\"s1Application.refTypeOfMedium=='MULTIMEDIA-MOVING'\">\r\n        MULTIMEDIA-MOVING\r\n      </mat-radio-button>\r\n      &nbsp;&nbsp;\r\n      <mat-radio-button value=\"MULTIMEDIA-STATIC\" [checked]=\"s1Application.refTypeOfMedium=='MULTIMEDIA-STATIC'\">\r\n        MULTIMEDIA-STATIC(MAX OF 5 LAYOUT)</mat-radio-button>\r\n    </mat-radio-group>\r\n\r\n    <br><br>\r\n    <div class=\"row\"\r\n      *ngIf=\"s1Application?.refTypeOfMedium=='MULTIMEDIA-MOVING'||s1Application?.refTypeOfMedium=='MULTIMEDIA-STATIC'||s1Application?.refTypeOfMedium=='MULTIMEDIA'\">\r\n      <!-- *ngIf=\"multimediaStaticList?.length==0&&multimediaMovingList?.length==0\"> -->\r\n      <div class=\"col-md-12\" appearance=\"outline\">\r\n        <span *ngFor=\"let i of typeOfMediumList; let mt = index\">\r\n          <table>\r\n            <tr>\r\n              <td>\r\n                <!-- <mat-checkbox [checked]=\"selectedMultimediaList.includes(i?.description)\"\r\n                    [disabled]=\"true\">\r\n                    {{i?.description}}</mat-checkbox> -->\r\n                <mat-checkbox [checked]=\"selectedMultimediaStringList.includes(i?.description)\" [disabled]=\"true\">\r\n                  {{i?.description}}\r\n                </mat-checkbox>\r\n              </td>\r\n              <td>\r\n                <!--  -->\r\n                <input type=\"text\" class=\"form-control\" [value]=\"i.sizeLength ? i.sizeLength : 0\" name=\"sizeLength\"\r\n                  maxlength=\"4\" placeholder=\"Size/Length (in seconds)\"\r\n                  *ngIf=\"s1Application?.id==undefined&&(s1Application?.refTypeOfMedium=='MULTIMEDIA-STATIC'|| s1Application?.refTypeOfMedium=='MULTIMEDIA-MOVING')\">\r\n\r\n                <!-- static -->\r\n                <!-- <input type=\"text\" class=\"form-control\" [value]=\" i.multimediaSize ? i.multimediaSize : '' \"\r\n                    name=\"sizeLength\" maxlength=\"200\" placeholder=\"Size\"\r\n                    *ngIf=\"s1Application?.id!=undefined&&s1Application?.refTypeOfMedium=='MULTIMEDIA-STATIC'\"\r\n                    [disabled]=\"true\"> -->\r\n\r\n                <!-- moving -->\r\n                <!-- <input type=\"text\" class=\"form-control\" [value]=\" i.multimediaLength ? i.multimediaLength : '' \"\r\n                    name=\"sizeLength\" maxlength=\"200\" placeholder=\"Length\"\r\n                    *ngIf=\"s1Application?.id!=undefined&&s1Application?.refTypeOfMedium=='MULTIMEDIA-MOVING'\"\r\n                    [disabled]=\"true\"> -->\r\n\r\n                <input type=\"text\" class=\"form-control\" [value]=\"i.sizeLength ? i.sizeLength : 0\"\r\n                  *ngIf=\"s1Application?.id!==undefined && (s1Application?.refTypeOfMedium === 'MULTIMEDIA-STATIC' || s1Application?.refTypeOfMedium === 'MULTIMEDIA-MOVING') \"\r\n                  name=\"sizeLength\" maxlength=\"4\" placeholder=\"Size/Length (in seconds)\" [disabled]=\"true\">\r\n              </td>\r\n            </tr>\r\n          </table><br>\r\n        </span>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"row\"><br></div>\r\n\r\n\r\n  </div>\r\n  <br><br>\r\n</div>\r\n\r\n<!-- FOR S2 APPLICATION  MAIN DOC-->\r\n<div *ngIf=\"applicationStage === 'S2-APPLICATION'\">\r\n  <span class=\"row fields\">\r\n\r\n    <app-attachment-document [originalAttachmentDocuments]=\"originalAttachmentDocuments\"\r\n      [revisionAttachmentDocuments]=\"revisionAttachmentDocuments\"\r\n      [complianceAttachmentDocuments]=\"complianceAttachmentDocuments\" [s1Application]=\"s1Application\"\r\n      [labelMainDocument]=\"labelMainDocument\" [isAscUser]=\"isAscUser\" [isDisableFieldOnUpdate]=\"isDisableFieldOnUpdate\"\r\n      [applicationStage]=\"applicationStage\"></app-attachment-document>\r\n\r\n    <!-- [showMainDocumentUploadButton]=\"showMainDocumentUploadButton\" [showMainDocumentViewButton]=\"showMainDocumentViewButton\" [safeURLMainDoc]=\"safeURLMainDoc\"\r\n      [showSupportDocumentFrame]=\"showSupportDocumentFrame\" [showSupportiveDocumentUploadButton]=\"showSupportiveDocumentUploadButton\" [showSupportiveDocumentViewButton]=\"showSupportiveDocumentViewButton\" [safeURLSupportDoc]=\"safeURLSupportDoc\"\r\n      [revisionLetterAttachment]=\"revisionLetterAttachment\" [showRevisionLetterUploadButton]=\"showRevisionLetterUploadButton\" [showRevisionLetterViewButton]=\"showRevisionLetterViewButton\" [safeURLRevisionLetter]=\"safeURLRevisionLetter\" -->\r\n  </span>\r\n</div>\r\n\r\n<!-- </form> -->");

/***/ }),

/***/ "6wJU":
/*!********************************************************************************************************************************************************!*\
  !*** ./src/app/modules/pages/applications/schedule-of-fees/multiple-applications/modal-multiple-applications/modal-multiple-applications.component.ts ***!
  \********************************************************************************************************************************************************/
/*! exports provided: ModalMultipleApplicationsComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ModalMultipleApplicationsComponent", function() { return ModalMultipleApplicationsComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "mrSG");
/* harmony import */ var _raw_loader_modal_multiple_applications_component_html__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! raw-loader!./modal-multiple-applications.component.html */ "d1XC");
/* harmony import */ var _modal_multiple_applications_component_scss__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./modal-multiple-applications.component.scss */ "JXVE");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/material/dialog */ "0IaG");
/* harmony import */ var _angular_material_paginator__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/material/paginator */ "M9IT");
/* harmony import */ var _angular_material_sort__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/material/sort */ "Dh3D");
/* harmony import */ var _angular_material_table__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/material/table */ "+0xr");
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/platform-browser */ "jhN1");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/router */ "tyNb");
/* harmony import */ var _models__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @models */ "sKXY");
/* harmony import */ var _services__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @services */ "dJ3e");
/* harmony import */ var _shared__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @shared */ "M0ag");
/* harmony import */ var app_core_models_application_single_media_model__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! app/core/models/application-single-media.model */ "XLGj");
/* harmony import */ var app_core_models_multiple_application_model__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! app/core/models/multiple-application.model */ "0jzb");
/* harmony import */ var app_core_services_file_storage_service__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! app/core/services/file.storage.service */ "TMp0");
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! sweetalert2 */ "PSD3");
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_16___default = /*#__PURE__*/__webpack_require__.n(sweetalert2__WEBPACK_IMPORTED_MODULE_16__);

















const ELEMENT_DATA = [
    { referenceCode: 'Company one ', amount: 3000, },
    { referenceCode: 'Company two ', amount: 4000, },
    { referenceCode: 'Company three ', amount: 5000, },
    { referenceCode: 'Company two ', amount: 6000, },
    { referenceCode: 'Company three ', amount: 7000, },
];
let ModalMultipleApplicationsComponent = class ModalMultipleApplicationsComponent {
    constructor(sanitizer, apiService, dataStorage, fileStorageService, sweetAlertService, router, dialogRef, data) {
        this.sanitizer = sanitizer;
        this.apiService = apiService;
        this.dataStorage = dataStorage;
        this.fileStorageService = fileStorageService;
        this.sweetAlertService = sweetAlertService;
        this.router = router;
        this.dialogRef = dialogRef;
        this.data = data;
        this.displayedColumns = ['referenceCode', 'adTitle', 'mediumAndLength', 'amount'];
        this.multipleApplicationList = [];
        this.s1Application = new _models__WEBPACK_IMPORTED_MODULE_10__["S1Application"]();
        this.payment = new _models__WEBPACK_IMPORTED_MODULE_10__["Payment"]();
        this.previewDocument = false;
        this.attachmentDocument = new _models__WEBPACK_IMPORTED_MODULE_10__["AttachmentDocument"]();
        this.applicationSingleMedia = new app_core_models_application_single_media_model__WEBPACK_IMPORTED_MODULE_13__["ApplicationSingleMedia"]();
        this.attachmentDocuments = [];
        this.isSubmitted = false;
        this.paymentTypeList = [];
        this.multipleApplication = new app_core_models_multiple_application_model__WEBPACK_IMPORTED_MODULE_14__["MultipleApplication"]();
        this.isDisabled = false;
        this.typeOfMediumDisplay = '';
        if (data) {
            this.multipleApplication = data;
            if (this.multipleApplication.paymentStatus !== _shared__WEBPACK_IMPORTED_MODULE_12__["PAYMENT_STATUS"].FOR_PAYMENT) {
                this.isDisabled = true;
            }
            this.getPaymentDetails();
        }
    }
    ngOnInit() {
        this.getMultipleApplicationList();
        this.getPaymentList();
    }
    getPaymentDetails() {
        this.apiService.findAll(_shared__WEBPACK_IMPORTED_MODULE_12__["ENDPOINTS"].multiplePaymentDetails + this.multipleApplication.id).subscribe((res) => {
            this.paymentDetails = res;
        });
    }
    getMultipleApplicationList() {
        this.apiService.findAll(_shared__WEBPACK_IMPORTED_MODULE_12__["ENDPOINTS"].getMultipleAppFormsWithNoRejected + this.multipleApplication.id).subscribe((res) => {
            this.multipleApplicationList = res.responseData.data;
            console.log(this.multipleApplicationList);
            // this.totalAmount = this.multipleApplicationList.map(mapped => mapped.amount).reduce((previousValue, currentValue) =>
            //   previousValue + currentValue,
            //   0);
            this.multipleApplicationList.forEach((multipleApplication) => {
                var _a, _b;
                switch ((multipleApplication === null || multipleApplication === void 0 ? void 0 : multipleApplication.refTypeOfMedium) || ((_b = (_a = multipleApplication === null || multipleApplication === void 0 ? void 0 : multipleApplication.applicationFormS2) === null || _a === void 0 ? void 0 : _a.applicationForm) === null || _b === void 0 ? void 0 : _b.refTypeOfMedium)) {
                    case 'SINGLE MEDIA':
                        this.getApplicationSingleMedia(multipleApplication === null || multipleApplication === void 0 ? void 0 : multipleApplication.appFormReference);
                        break;
                    case 'MULTIMEDIA-MOVING':
                        this.getMultimediaMoving(multipleApplication === null || multipleApplication === void 0 ? void 0 : multipleApplication.appFormReference);
                        break;
                    case 'MULTIMEDIA-STATIC':
                        this.getMultimediaStatic(multipleApplication === null || multipleApplication === void 0 ? void 0 : multipleApplication.appFormReference);
                        break;
                    default:
                        break;
                }
            });
            this.dataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_7__["MatTableDataSource"](this.multipleApplicationList);
            this.dataSource.paginator = this.paginator;
            this.dataSource.sort = this.sort;
        }, (err) => {
            err.error.message = _shared__WEBPACK_IMPORTED_MODULE_12__["ERROR_MESSAGES"].under_maintenance;
            this.sweetAlertService.error(err);
        });
    }
    getPaymentList() {
        this.apiService.findAll(_shared__WEBPACK_IMPORTED_MODULE_12__["ENDPOINTS"].paymentType).subscribe((res) => {
            const currentUser = this.dataStorage.getUserAccount();
            if (currentUser.userRole.name === _shared__WEBPACK_IMPORTED_MODULE_12__["USER_ROLES"].ROLE_APPLICANT) {
                const creditCardIndex = this.paymentTypeList
                    .findIndex((element) => element.paymentDescription === 'Credit Card');
                this.paymentTypeList.splice(creditCardIndex, 1);
            }
            this.paymentTypeList = res.responseData.data;
        });
    }
    selectFile(event) {
        const attachmentSize = event.target.files[0].size;
        if (event.target.files[0].type === 'application/pdf') {
            if (attachmentSize > 15000000) { // 1MB = 1M
                this.sweetAlertService.customErrorMessage(`Attachments' total file size should not exceed 15MB.`);
                event.target.value = '';
                return;
            }
            else {
                const pdfURL = URL.createObjectURL(event.target.files[0]);
                this.safeURLProofOfPayment = this.sanitizer.bypassSecurityTrustResourceUrl(pdfURL);
                this.previewDocument = true;
                // env.showSpinner = true;
                const reader = new FileReader();
                const [file] = event.target.files;
                reader.readAsDataURL(file);
                reader.onload = () => {
                };
            }
            this.selectedFiles = event.target.files;
        }
        else {
            this.sweetAlertService.customErrorMessage('Attachment should be in PDF format only.');
            event.target.value = '';
            return;
        }
    }
    uploadDocument(multipleApplication) {
        sweetalert2__WEBPACK_IMPORTED_MODULE_16___default.a.fire({
            text: 'Are you sure you want to submit this PROOF OF PAYMENT?',
            icon: 'question',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Confirm'
        }).then((result) => {
            if (result.value) {
                this.dataStorage.setDisplayProgressbar(true);
                let params = '';
                params = '?&attachmentType=' + _shared__WEBPACK_IMPORTED_MODULE_12__["ATTACHMENT_TYPE"].PAYMENT + '&submissionType=' + _shared__WEBPACK_IMPORTED_MODULE_12__["SUBMISSION_TYPE"].ORIGINAL;
                this.fileStorageService.pushFileToStorage(_shared__WEBPACK_IMPORTED_MODULE_12__["ENDPOINTS"].attachmentDocument, this.selectedFiles.item(0), params)
                    .subscribe(res => {
                    const obj = res.responseData.data;
                    console.log(obj);
                    this.s1Application.paymentAttachmentReference = obj.paymentAttachmentReference;
                    this.payment.paymentAttachmentReference = obj.paymentAttachmentReference;
                    this.payment.amountDue = this.totalAmount;
                    this.payment.multipleApplication = multipleApplication;
                    this.payment.filename = obj.filename;
                    this.saveProofOfPayment();
                    this.selectedFiles = undefined;
                }, (err) => {
                    this.sweetAlertService.error(err);
                }, () => {
                    // actions after subscription
                    this.dataStorage.setDisplayProgressbar(false);
                });
            }
        });
    }
    saveProofOfPayment() {
        console.log('Saving payment...');
        this.dataStorage.setDisplayProgressbar(true);
        this.payment.paymentStatus = _shared__WEBPACK_IMPORTED_MODULE_12__["PAYMENT_STATUS"].FOR_APPROVAL;
        this.payment.id = 0;
        this.payment.officialReceiptNo = '';
        this.payment.paymentMethod = null;
        this.payment.amountDue = this.multipleApplication.totalAmount;
        console.log('PAYMENT : ', this.payment);
        console.log(this.paymentType.id);
        this.apiService.save(`${_shared__WEBPACK_IMPORTED_MODULE_12__["ENDPOINTS"].applicationFormPresentor}payment-type-id/${this.paymentType.id}/payment-multiple/submit`, this.payment)
            .subscribe((res) => {
            console.log('SAVED STATUS: ', res.responseData.data);
            this.safeURLProofOfPayment = this.sanitizer.bypassSecurityTrustResourceUrl(res.responseData.data.fileURL);
            this.isSubmitted = true;
            this.sweetAlertService.customSuccessMessage('Proof of payment successfully submitted.');
            this.closeModal();
        }, (err) => {
            console.log(err);
            this.sweetAlertService.error(err);
            this.dataStorage.setDisplayProgressbar(false);
        }, () => {
            this.dataStorage.setDisplayProgressbar(false);
        });
    }
    closeModal() {
        this.dialogRef.close();
        this.router.navigate(['asc/page/application/multiple-applications']);
    }
    ngOnDestroy() {
        // this.s1Application = null;
    }
    getApplicationSingleMedia(appFormReference) {
        var _a, _b, _c, _d, _e, _f, _g, _h;
        if (appFormReference === void 0) { appFormReference = (_b = (_a = this.payment) === null || _a === void 0 ? void 0 : _a.applicationForm) === null || _b === void 0 ? void 0 : _b.appFormReference; }
        if ((_e = (_d = (_c = this.payment) === null || _c === void 0 ? void 0 : _c.applicationFormS2) === null || _d === void 0 ? void 0 : _d.applicationForm) === null || _e === void 0 ? void 0 : _e.refTypeOfMedium) {
            appFormReference = (_h = (_g = (_f = this.payment) === null || _f === void 0 ? void 0 : _f.applicationFormS2) === null || _g === void 0 ? void 0 : _g.applicationForm) === null || _h === void 0 ? void 0 : _h.appFormReference;
        }
        this.apiService.findByParam(_shared__WEBPACK_IMPORTED_MODULE_12__["ENDPOINTS"].applicationSingleMedia, `app-form-reference/${appFormReference}`).subscribe((res) => {
            var _a, _b, _c, _d;
            if (res.responseData.data.length > 0) {
                this.applicationSingleMedia = res.responseData.data[0];
                this.typeOfMediumDisplay = `${(_c = (_b = (_a = this.applicationSingleMedia) === null || _a === void 0 ? void 0 : _a.mediumExecution) === null || _b === void 0 ? void 0 : _b.typeOfMedium) === null || _c === void 0 ? void 0 : _c.description} (${(_d = this.applicationSingleMedia) === null || _d === void 0 ? void 0 : _d.sizeLength})`;
                console.log('view applicationSingleMedia: ', this.typeOfMediumDisplay);
                this.multipleApplicationList.forEach((element, index) => {
                    if (element.appFormReference === appFormReference) {
                        this.multipleApplicationList[index] = Object.assign(Object.assign({}, this.multipleApplicationList[index]), { typeOfMediumDisplay: this.typeOfMediumDisplay });
                    }
                });
                this.dataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_7__["MatTableDataSource"](this.multipleApplicationList);
                this.dataSource.paginator = this.paginator;
            }
            else {
                this.applicationSingleMedia = new app_core_models_application_single_media_model__WEBPACK_IMPORTED_MODULE_13__["ApplicationSingleMedia"]();
                this.typeOfMediumDisplay = '';
            }
        }, (err) => {
            this.applicationSingleMedia = new app_core_models_application_single_media_model__WEBPACK_IMPORTED_MODULE_13__["ApplicationSingleMedia"]();
            this.typeOfMediumDisplay = '';
        });
    }
    getMultimediaStatic(appFormReference) {
        var _a, _b;
        if (appFormReference === void 0) { appFormReference = (_b = (_a = this.payment) === null || _a === void 0 ? void 0 : _a.applicationForm) === null || _b === void 0 ? void 0 : _b.appFormReference; }
        this.apiService.findByParam(_shared__WEBPACK_IMPORTED_MODULE_12__["ENDPOINTS"].applicationMultimedia, `app-form-reference/${appFormReference}`).subscribe((res) => {
            if (res.responseData.data.length > 0) {
                const multimediaList = new Set(res.responseData.data.map(mappedList => { var _a; return `${(_a = mappedList === null || mappedList === void 0 ? void 0 : mappedList.typeOfMedium) === null || _a === void 0 ? void 0 : _a.description} (${mappedList === null || mappedList === void 0 ? void 0 : mappedList.multimediaSizeLength})`; }));
                this.typeOfMediumDisplay = '';
                let mediaCtrl = 1;
                for (const media of multimediaList) {
                    if (mediaCtrl !== multimediaList.size) {
                        this.typeOfMediumDisplay += `${media}, `;
                        mediaCtrl++;
                    }
                    else {
                        this.typeOfMediumDisplay += media;
                    }
                }
                this.multipleApplicationList.forEach((element, index) => {
                    console.log(element);
                    if (element.appFormReference === appFormReference) {
                        this.multipleApplicationList[index] = Object.assign(Object.assign({}, this.multipleApplicationList[index]), { typeOfMediumDisplay: this.typeOfMediumDisplay });
                    }
                });
                this.dataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_7__["MatTableDataSource"](this.multipleApplicationList);
                this.dataSource.paginator = this.paginator;
            }
            else {
                this.typeOfMediumDisplay = '';
            }
        }, (err) => {
            this.typeOfMediumDisplay = '';
        });
    }
    getMultimediaMoving(appFormReference) {
        var _a, _b;
        if (appFormReference === void 0) { appFormReference = (_b = (_a = this.payment) === null || _a === void 0 ? void 0 : _a.applicationForm) === null || _b === void 0 ? void 0 : _b.appFormReference; }
        this.apiService.findByParam(_shared__WEBPACK_IMPORTED_MODULE_12__["ENDPOINTS"].applicationMultimedia, `app-form-reference/${appFormReference}`).subscribe((res) => {
            if (res.responseData.data.length > 0) {
                const multimediaList = new Set(res.responseData.data.map(mappedList => { var _a; return `${(_a = mappedList === null || mappedList === void 0 ? void 0 : mappedList.typeOfMedium) === null || _a === void 0 ? void 0 : _a.description} (${mappedList === null || mappedList === void 0 ? void 0 : mappedList.multimediaSizeLength})`; }));
                this.typeOfMediumDisplay = '';
                let mediaCtrl = 1;
                for (const media of multimediaList) {
                    if (mediaCtrl !== multimediaList.size) {
                        this.typeOfMediumDisplay += `${media}, `;
                        mediaCtrl++;
                    }
                    else {
                        this.typeOfMediumDisplay += media;
                    }
                }
                this.multipleApplicationList.forEach((element, index) => {
                    console.log(element);
                    if (element.appFormReference === appFormReference) {
                        this.multipleApplicationList[index] = Object.assign(Object.assign({}, this.multipleApplicationList[index]), { typeOfMediumDisplay: this.typeOfMediumDisplay });
                    }
                });
                this.dataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_7__["MatTableDataSource"](this.multipleApplicationList);
                this.dataSource.paginator = this.paginator;
            }
            else {
                this.typeOfMediumDisplay = '';
            }
        }, (err) => {
            this.typeOfMediumDisplay = '';
        });
    }
};
ModalMultipleApplicationsComponent.ctorParameters = () => [
    { type: _angular_platform_browser__WEBPACK_IMPORTED_MODULE_8__["DomSanitizer"] },
    { type: _services__WEBPACK_IMPORTED_MODULE_11__["ApiService"] },
    { type: _services__WEBPACK_IMPORTED_MODULE_11__["DataStorageService"] },
    { type: app_core_services_file_storage_service__WEBPACK_IMPORTED_MODULE_15__["FileStorageService"] },
    { type: _services__WEBPACK_IMPORTED_MODULE_11__["SweetAlertService"] },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_9__["Router"] },
    { type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_4__["MatDialogRef"], decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Optional"] }] },
    { type: undefined, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Optional"] }, { type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Inject"], args: [_angular_material_dialog__WEBPACK_IMPORTED_MODULE_4__["MAT_DIALOG_DATA"],] }] }
];
ModalMultipleApplicationsComponent.propDecorators = {
    paginator: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["ViewChild"], args: [_angular_material_paginator__WEBPACK_IMPORTED_MODULE_5__["MatPaginator"], { static: false },] }],
    sort: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["ViewChild"], args: [_angular_material_sort__WEBPACK_IMPORTED_MODULE_6__["MatSort"], { static: false },] }],
    table: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["ViewChild"], args: [_angular_material_table__WEBPACK_IMPORTED_MODULE_7__["MatTable"], { static: false },] }],
    s1Application: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Input"] }]
};
ModalMultipleApplicationsComponent = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_3__["Component"])({
        selector: 'app-modal-multiple-applications',
        template: _raw_loader_modal_multiple_applications_component_html__WEBPACK_IMPORTED_MODULE_1__["default"],
        styles: [_modal_multiple_applications_component_scss__WEBPACK_IMPORTED_MODULE_2__["default"]]
    })
], ModalMultipleApplicationsComponent);



/***/ }),

/***/ "8+R3":
/*!*************************************************************************************!*\
  !*** ./src/app/modules/pages/applications/reassignment/reassignment.component.scss ***!
  \*************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcGFnZXMvYXBwbGljYXRpb25zL3JlYXNzaWdubWVudC9yZWFzc2lnbm1lbnQuY29tcG9uZW50LnNjc3MifQ== */");

/***/ }),

/***/ "BUd1":
/*!***********************************************************************************!*\
  !*** ./src/app/modules/pages/applications/reassignment/reassignment.component.ts ***!
  \***********************************************************************************/
/*! exports provided: ReassignmentComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ReassignmentComponent", function() { return ReassignmentComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "mrSG");
/* harmony import */ var _raw_loader_reassignment_component_html__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! raw-loader!./reassignment.component.html */ "k01g");
/* harmony import */ var _reassignment_component_scss__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./reassignment.component.scss */ "8+R3");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/forms */ "3Pt+");
/* harmony import */ var _angular_material_table__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/material/table */ "+0xr");
/* harmony import */ var _fragments__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @fragments */ "3swC");
/* harmony import */ var _models__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @models */ "sKXY");
/* harmony import */ var _services__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @services */ "dJ3e");
/* harmony import */ var _shared__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @shared */ "M0ag");
/* harmony import */ var ngx_spinner__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ngx-spinner */ "JqCM");











let ReassignmentComponent = class ReassignmentComponent {
    constructor(apiService, formBuilder, sweetAlertService, spinner) {
        this.apiService = apiService;
        this.formBuilder = formBuilder;
        this.sweetAlertService = sweetAlertService;
        this.spinner = spinner;
        // ojects
        this.s1Application = new _models__WEBPACK_IMPORTED_MODULE_7__["S1Application"]();
        this.s2Application = new _models__WEBPACK_IMPORTED_MODULE_7__["S2Application"]();
        // lists
        this.userList = [];
        // for displayed list
        // s1
        this.s1ApplicationList = [];
        this.s1ApplicationDisplayedColumns = [
            'referenceCode',
            'adTitle',
            'applicationOwner',
            'assignedEncoder',
            'assignedAdSpecialist',
            'assignedScreener',
            'assignedReviewer',
            'assignedUser',
        ];
        // s2
        // TODO update when endpoint is available
        this.s2ApplicationList = [];
        this.s2ApplicationDisplayedColumns = [
            'referenceCode',
            'adTitle',
            'applicationOwner',
            'assignedEncoder',
            'assignedAdSpecialist',
            // 'assignedScreener',
            // 'assignedReviewer',
            'assignedUser',
        ];
        // others
        this.applicationOwnerName = '';
        this.displayedContent = 'S1';
    }
    ngOnInit() {
        this.getS1ApplicationList();
        this.setFormValidator();
        this.getUserList();
    }
    getS1ApplicationList(applicationType = 'S1') {
        this.spinner.show();
        if (applicationType === 'S1') {
            this.apiService.findAll(_shared__WEBPACK_IMPORTED_MODULE_9__["ENDPOINTS"].admin).subscribe((res) => {
                this.s1ApplicationList = res.responseData.data;
                this.s1ApplicationList = this.s1ApplicationList.filter(filteredS1List => !filteredS1List.appliedS2);
                this.s1ApplicationDataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_5__["MatTableDataSource"](this.s1ApplicationList);
                this.s1ApplicationDataSource.paginator = this.formListComponent.paginator;
                this.s1ApplicationDataSource.sort = this.formListComponent.sort;
            }, (err) => {
                console.error(err);
                this.spinner.hide();
            }, () => {
                this.spinner.hide();
            });
        }
        else if (applicationType === 'S2') {
            this.apiService.findAll(_shared__WEBPACK_IMPORTED_MODULE_9__["ENDPOINTS"].s2Application).subscribe((res) => {
                this.s2ApplicationList = res.responseData.data;
                this.s2ApplicationDataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_5__["MatTableDataSource"](this.s2ApplicationList);
                this.s2ApplicationDataSource.paginator = this.formListComponent.paginator;
                this.s2ApplicationDataSource.sort = this.formListComponent.sort;
            }, (err) => {
                console.error(err);
                this.spinner.hide();
            }, () => {
                this.spinner.hide();
            });
        }
    }
    getS1Application() {
        this.apiService.findById(_shared__WEBPACK_IMPORTED_MODULE_9__["ENDPOINTS"].applicationForm, this.formListComponent.idForUpdate).subscribe((res) => {
            if (res) {
                this.s1Application = res.responseData.data;
                this.applicationOwnerName = this.s1Application.applicationOwner
                    ? this.s1Application.applicationOwner.lastName + ', ' + this.s1Application.applicationOwner.firstName
                    : '';
                if (this.s1Application.assignedUser) {
                    this.getUserList(this.s1Application.assignedUser.userRole.name);
                }
                else {
                    this.getUserList('N/A');
                }
            }
        });
    }
    getS2Application() {
        this.apiService.findById(_shared__WEBPACK_IMPORTED_MODULE_9__["ENDPOINTS"].applicationFormS2, this.formListComponent.idForUpdate).subscribe((res) => {
            if (res) {
                this.s2Application = res.responseData.data;
                if (this.s2Application.applicationForm) {
                    this.applicationOwnerName = this.s2Application.applicationForm.applicationOwner
                        ? this.s2Application.applicationForm.applicationOwner.lastName + ', '
                            + this.s2Application.applicationForm.applicationOwner.firstName
                        : '';
                }
                if (this.s2Application.assignedUser) {
                    this.getUserList(this.s2Application.assignedUser.userRole.name);
                }
                else {
                    this.getUserList('N/A');
                }
            }
        });
    }
    update() {
        this.spinner.show();
        let endpoint = '';
        let currentObj;
        if (this.displayedContent === 'S1') {
            endpoint = _shared__WEBPACK_IMPORTED_MODULE_9__["ENDPOINTS"].applicationReassignment;
            currentObj = this.s1Application;
        }
        else if (this.displayedContent === 'S2') {
            endpoint = _shared__WEBPACK_IMPORTED_MODULE_9__["ENDPOINTS"].s2ApplicationReassignment;
            // endpoint = ENDPOINTS.applicationFormS2;
            if (this.s2Application.actionStatus === 'ASSIGN_TO_ENCODER') {
                this.s2Application.assignedEncoder = this.s2Application.assignedUser;
            }
            else if (this.s2Application.actionStatus === 'ASSIGN_TO_ADSPE') {
                this.s2Application.assignedAdSpecialist = this.s2Application.assignedUser;
            }
            currentObj = this.s2Application;
        }
        this.apiService.save(endpoint, currentObj).subscribe((res) => {
            if (res) {
                this.spinner.hide();
                this.sweetAlertService.success(res);
            }
        }, (err) => {
            this.spinner.hide();
            this.sweetAlertService.error(err);
        }, () => {
            // actions after subscription
            this.spinner.hide();
            this.getUserList();
            this.resetFormValidator();
            if (this.displayedContent === 'S1') {
                this.getS1ApplicationList();
            }
            else if (this.displayedContent === 'S2') {
                this.getS1ApplicationList('S2');
            }
        });
    }
    setFormValidator() {
        this.s1ApplicationForm = this.formBuilder.group({
            referenceCode: [''],
            adTitle: [''],
            applicationOwner: [''],
            assignedAdSpecialist: [''],
            assignedEncoder: [''],
            assignedReviewer: [''],
            assignedScreener: [''],
            assignedUser: [''],
        });
    }
    resetFormValidator() {
        this.s1Application = new _models__WEBPACK_IMPORTED_MODULE_7__["S1Application"]();
        this.s2Application = new _models__WEBPACK_IMPORTED_MODULE_7__["S2Application"]();
        this.s1ApplicationForm.markAsUntouched();
        this.s1ApplicationForm.markAsPristine();
    }
    getUserList(userRole = '') {
        this.apiService.findAll(_shared__WEBPACK_IMPORTED_MODULE_9__["ENDPOINTS"].userAccount).subscribe((res) => {
            this.userList = res.responseData.data;
            this.userList = this.userList.filter(filteredUsers => { var _a; return ((_a = filteredUsers === null || filteredUsers === void 0 ? void 0 : filteredUsers.userRole) === null || _a === void 0 ? void 0 : _a.name) !== _shared__WEBPACK_IMPORTED_MODULE_9__["USER_ROLES"].ROLE_APPLICANT; });
            if (userRole) {
                this.userList = this.userList.filter(filteredUsers => { var _a; return ((_a = filteredUsers === null || filteredUsers === void 0 ? void 0 : filteredUsers.userRole) === null || _a === void 0 ? void 0 : _a.name) === userRole; });
            }
        });
    }
    compareAssignedUser(value, selected) {
        if (value && selected) {
            return value.id === selected.id;
        }
    }
    changeTab(evt) {
        if (evt.tab) {
            this.displayedContent = evt.tab.textLabel;
        }
        if (evt.index === 0) {
            this.getS1ApplicationList();
        }
        else if (evt.index === 1) {
            this.getS1ApplicationList('S2');
        }
    }
};
ReassignmentComponent.ctorParameters = () => [
    { type: _services__WEBPACK_IMPORTED_MODULE_8__["ApiService"] },
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_4__["FormBuilder"] },
    { type: _services__WEBPACK_IMPORTED_MODULE_8__["SweetAlertService"] },
    { type: ngx_spinner__WEBPACK_IMPORTED_MODULE_10__["NgxSpinnerService"] }
];
ReassignmentComponent.propDecorators = {
    formListComponent: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["ViewChild"], args: [_fragments__WEBPACK_IMPORTED_MODULE_6__["FormListComponent"],] }]
};
ReassignmentComponent = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_3__["Component"])({
        selector: 'app-reassignment',
        template: _raw_loader_reassignment_component_html__WEBPACK_IMPORTED_MODULE_1__["default"],
        styles: [_reassignment_component_scss__WEBPACK_IMPORTED_MODULE_2__["default"]]
    })
], ReassignmentComponent);



/***/ }),

/***/ "C7lX":
/*!*******************************************************************!*\
  !*** ./src/app/modules/pages/applications/applications.module.ts ***!
  \*******************************************************************/
/*! exports provided: ApplicationsModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ApplicationsModule", function() { return ApplicationsModule; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "mrSG");
/* harmony import */ var _editor_lib_angular_editor_module__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./editor/lib/angular-editor.module */ "ylsH");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/common */ "ofXK");
/* harmony import */ var _applications_routing_module__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./applications-routing.module */ "XryR");
/* harmony import */ var _shared__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @shared */ "M0ag");
/* harmony import */ var _comment_comment_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./comment/comment.component */ "hbDB");
/* harmony import */ var _applications__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @applications */ "rNDJ");
/* harmony import */ var _accounting_upload_payment_upload_payment_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../accounting/upload-payment/upload-payment.component */ "dUsq");
/* harmony import */ var _accounting__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @accounting */ "Wf2x");
/* harmony import */ var _schedule_of_fees_single_application_single_application_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./schedule-of-fees/single-application/single-application.component */ "QAEE");
/* harmony import */ var _schedule_of_fees_multiple_applications_multiple_applications_component__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./schedule-of-fees/multiple-applications/multiple-applications.component */ "QuhR");
/* harmony import */ var _reassignment_reassignment_module__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./reassignment/reassignment.module */ "zdBp");
/* harmony import */ var _performance_metrics_performance_metrics_component__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./performance-metrics/performance-metrics.component */ "xq5V");
/* harmony import */ var _schedule_of_fees_special_applications_special_applications_component__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./schedule-of-fees/special-applications/special-applications.component */ "/s5X");
/* harmony import */ var _attachment_document_attachment_document_component__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./attachment-document/attachment-document.component */ "bOqb");
/* harmony import */ var _preview_attachments_preview_attachments_component__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./preview-attachments/preview-attachments.component */ "1tSv");

















let ApplicationsModule = class ApplicationsModule {
};
ApplicationsModule = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["NgModule"])({
        declarations: [
            _applications__WEBPACK_IMPORTED_MODULE_7__["PreviewApplicationComponent"],
            _applications__WEBPACK_IMPORTED_MODULE_7__["ClientInformationComponent"],
            _applications__WEBPACK_IMPORTED_MODULE_7__["MaterialInformationComponent"],
            _comment_comment_component__WEBPACK_IMPORTED_MODULE_6__["CommentComponent"],
            _accounting_upload_payment_upload_payment_component__WEBPACK_IMPORTED_MODULE_8__["UploadPaymentComponent"],
            _schedule_of_fees_single_application_single_application_component__WEBPACK_IMPORTED_MODULE_10__["SingleApplicationComponent"],
            _schedule_of_fees_multiple_applications_multiple_applications_component__WEBPACK_IMPORTED_MODULE_11__["MultipleApplicationsComponent"],
            _performance_metrics_performance_metrics_component__WEBPACK_IMPORTED_MODULE_13__["PerformanceMetricsComponent"],
            _schedule_of_fees_special_applications_special_applications_component__WEBPACK_IMPORTED_MODULE_14__["SpecialApplicationsComponent"],
            _attachment_document_attachment_document_component__WEBPACK_IMPORTED_MODULE_15__["AttachmentDocumentComponent"],
            _preview_attachments_preview_attachments_component__WEBPACK_IMPORTED_MODULE_16__["PreviewAttachmentsComponent"],
        ],
        imports: [
            _angular_common__WEBPACK_IMPORTED_MODULE_3__["CommonModule"],
            _applications_routing_module__WEBPACK_IMPORTED_MODULE_4__["ApplicationsRoutingModule"],
            _shared__WEBPACK_IMPORTED_MODULE_5__["AngularMaterialModule"],
            _accounting__WEBPACK_IMPORTED_MODULE_9__["AddPaymentModule"],
            _reassignment_reassignment_module__WEBPACK_IMPORTED_MODULE_12__["ReassignmentModule"],
            _editor_lib_angular_editor_module__WEBPACK_IMPORTED_MODULE_1__["CustomAngularEditorModule"]
        ],
        exports: [
            _applications__WEBPACK_IMPORTED_MODULE_7__["PreviewApplicationComponent"],
            _applications__WEBPACK_IMPORTED_MODULE_7__["ClientInformationComponent"],
            _applications__WEBPACK_IMPORTED_MODULE_7__["MaterialInformationComponent"],
            _comment_comment_component__WEBPACK_IMPORTED_MODULE_6__["CommentComponent"],
            _accounting_upload_payment_upload_payment_component__WEBPACK_IMPORTED_MODULE_8__["UploadPaymentComponent"],
            _performance_metrics_performance_metrics_component__WEBPACK_IMPORTED_MODULE_13__["PerformanceMetricsComponent"],
            _attachment_document_attachment_document_component__WEBPACK_IMPORTED_MODULE_15__["AttachmentDocumentComponent"],
            _preview_attachments_preview_attachments_component__WEBPACK_IMPORTED_MODULE_16__["PreviewAttachmentsComponent"],
        ]
    })
], ApplicationsModule);



/***/ }),

/***/ "Cdxb":
/*!****************************************************************************************************************!*\
  !*** ./src/app/modules/pages/applications/s1-application/add-s1-application/add-s1-application.component.scss ***!
  \****************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("/* Accordion */\n.action-buttons {\n  padding-bottom: 20px;\n  float: right;\n}\n.headers-align .mat-expansion-panel-header-title,\n.headers-align .mat-expansion-panel-header-description {\n  flex-basis: 0;\n  font-size: 1.25em;\n  align-items: center;\n}\n.headers-align .mat-expansion-panel-header-description {\n  justify-content: space-between;\n  align-items: center;\n}\n.headers-align .mat-form-field + .mat-form-field {\n  margin-left: 8px;\n}\n.tooltip .tooltiptext {\n  width: 120px;\n  bottom: 100%;\n  left: 50%;\n  margin-left: -60px;\n  /* Use half of the width (120/2 = 60), to center the tooltip */\n}\n.mat-expansion-panel-header {\n  border: 1px solid #bfbfbf;\n}\ninput[type=file] {\n  display: none;\n}\n.custom-file-upload {\n  border: 1px solid #ccc;\n  display: inline-block;\n  padding: 6px 12px;\n  cursor: pointer;\n}\n.mat-expansion-panel-header.mat-expanded:hover,\n.mat-expansion-panel-header {\n  background: #bad9ff;\n}\n.mat-expansion-panel .mat-expansion-panel-header.cdk-keyboard-focused:not([aria-disabled=true]),\n.mat-expansion-panel .mat-expansion-panel-header.cdk-program-focused:not([aria-disabled=true]),\n.mat-expansion-panel:not(.mat-expanded) .mat-expansion-panel-header:hover:not([aria-disabled=true]) {\n  background: #cfe5ff;\n}\n.field-value {\n  color: gray;\n  font-weight: 600;\n}\ntable tr td {\n  padding: 10px 16px;\n  border-radius: 7px;\n  font: 500 14px/20px Roboto, \"Helvetica Neue\", sans-serif;\n  width: 31%;\n}\ntable tr td:nth-child(odd) {\n  background-color: #ff5252;\n  color: white;\n  border: 1px solid white;\n}\ntable tr td:nth-child(even) {\n  color: #ff5252;\n  border: 1px solid #0000001f;\n}\n.no-border {\n  background-color: transparent !important;\n  border: 0px !important;\n  padding: 0px !important;\n  width: 5px;\n  height: 5px !important;\n}\nmat-action-row p {\n  color: red;\n  margin: auto;\n  font-weight: 400;\n}\nmat-action-row p i {\n  color: red;\n}\nmat-action-row p .badge {\n  width: auto;\n  padding: 5px 20px;\n  text-decoration: none;\n}\n.submission-date,\n.warning-msg {\n  color: #c5140c !important;\n}\n.text-right {\n  text-align: right;\n}\n.info-msg {\n  color: black;\n}\n.demo-inline-calendar-card {\n  width: 300px;\n  margin: 0 auto 2em auto;\n}\n.swal2-container.swal2-center > .swal2-popup {\n  z-index: 9999 !important;\n}\n.rationale {\n  border: solid gray 2px;\n  border-radius: 5px;\n  padding: 10px;\n  background-color: #eee1e1;\n}\n.rationale label {\n  font-size: 15px;\n  font-weight: 600;\n  color: #ac0000;\n  margin-bottom: 10px;\n}\n.rationale .rationale-list {\n  background-color: #f1eaea;\n  border: solid gray 1px;\n  height: auto;\n  max-height: 15em;\n  padding: 10px;\n  margin-bottom: 5px;\n  max-height: none;\n}\n.rationale .rationale-list label {\n  font-size: 10px;\n}\n.rationale .rationale-list p {\n  font-size: 10px;\n  font-weight: 600;\n  line-height: 10px;\n}\n.rationale .rationale-list p span {\n  font-size: 7px;\n  color: #ac0000;\n  margin: auto;\n}\n.rationale .rational-other-comment {\n  background-color: #f1eaea;\n  border: solid gray 1px;\n  height: auto;\n  padding: 10px;\n}\n.rationale .rational-other-comment label {\n  font-size: 10px;\n}\n.rationale .rational-other-comment p {\n  font-size: 10px;\n  font-weight: 600;\n  line-height: 2px;\n}\n.rationale .rational-other-comment p span {\n  font-size: 7px;\n  color: #ac0000;\n  margin: auto;\n}\n.badge {\n  text-align: center;\n  font-size: 12px;\n  padding: 5px 20px;\n  text-decoration: none;\n  width: auto;\n  cursor: context-menu;\n}\n.material-icons.error {\n  margin-left: 10px;\n  color: #c5140c;\n}\n.required-fields-note {\n  font-style: italic;\n  color: #c5140c;\n  font-weight: 500;\n}\n/*# sourceMappingURL=data:application/json;base64, */");

/***/ }),

/***/ "DBFx":
/*!***************************************************************************************************!*\
  !*** ./src/app/modules/pages/applications/preview-application/preview-application.component.scss ***!
  \***************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (".pdf-border {\n  width: 100%;\n  height: 300px;\n  border: 2px solid gray;\n}\n\n.add-document {\n  color: white;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9wYWdlcy9hcHBsaWNhdGlvbnMvcHJldmlldy1hcHBsaWNhdGlvbi9wcmV2aWV3LWFwcGxpY2F0aW9uLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksV0FBQTtFQUFXLGFBQUE7RUFBYSxzQkFBQTtBQUc1Qjs7QUFBQTtFQUNFLFlBQUE7QUFHRiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcGFnZXMvYXBwbGljYXRpb25zL3ByZXZpZXctYXBwbGljYXRpb24vcHJldmlldy1hcHBsaWNhdGlvbi5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5wZGYtYm9yZGVyIHtcclxuICAgIHdpZHRoOjEwMCU7aGVpZ2h0OjMwMHB4O2JvcmRlcjoycHggc29saWQgZ3JheTtcclxufVxyXG5cclxuLmFkZC1kb2N1bWVudCB7XHJcbiAgY29sb3I6IHdoaXRlO1xyXG59XHJcbiJdfQ== */");

/***/ }),

/***/ "FtXF":
/*!********************************************************************************************************!*\
  !*** ./src/app/modules/fragments/update-multiple-application/update-multiple-application.component.ts ***!
  \********************************************************************************************************/
/*! exports provided: UpdateMultipleApplicationComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UpdateMultipleApplicationComponent", function() { return UpdateMultipleApplicationComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "mrSG");
/* harmony import */ var _raw_loader_update_multiple_application_component_html__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! raw-loader!./update-multiple-application.component.html */ "xZhW");
/* harmony import */ var _update_multiple_application_component_scss__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./update-multiple-application.component.scss */ "Nitu");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/common */ "ofXK");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/material/dialog */ "0IaG");
/* harmony import */ var _angular_material_paginator__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/material/paginator */ "M9IT");
/* harmony import */ var _angular_material_sort__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/material/sort */ "Dh3D");
/* harmony import */ var _angular_material_table__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/material/table */ "+0xr");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/router */ "tyNb");
/* harmony import */ var _models__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @models */ "sKXY");
/* harmony import */ var _services__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @services */ "dJ3e");
/* harmony import */ var _shared__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @shared */ "M0ag");
/* harmony import */ var app_core_models_application_single_media_model__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! app/core/models/application-single-media.model */ "XLGj");
/* harmony import */ var app_core_models_multiple_application_model__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! app/core/models/multiple-application.model */ "0jzb");
/* harmony import */ var ngx_spinner__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ngx-spinner */ "JqCM");
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! sweetalert2 */ "PSD3");
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_16___default = /*#__PURE__*/__webpack_require__.n(sweetalert2__WEBPACK_IMPORTED_MODULE_16__);

















let UpdateMultipleApplicationComponent = class UpdateMultipleApplicationComponent {
    constructor(apiService, sweetAlertService, dataStorage, router, spinner, datepipe, dialogRef, data) {
        this.apiService = apiService;
        this.sweetAlertService = sweetAlertService;
        this.dataStorage = dataStorage;
        this.router = router;
        this.spinner = spinner;
        this.datepipe = datepipe;
        this.dialogRef = dialogRef;
        this.data = data;
        this.company = new _models__WEBPACK_IMPORTED_MODULE_10__["Company"]();
        this.s1Application = new _models__WEBPACK_IMPORTED_MODULE_10__["S1Application"]();
        this.multipleS1Application = new app_core_models_multiple_application_model__WEBPACK_IMPORTED_MODULE_14__["MultipleApplication"]();
        this.applicationSingleMedia = new app_core_models_application_single_media_model__WEBPACK_IMPORTED_MODULE_13__["ApplicationSingleMedia"]();
        this.multipleS1ApplicationList = [];
        this.displayedColumns = [
            "referenceCode",
            "typeOfMediumDisplay",
            "mainAttachmentReference",
            "supportingAttachmentReference",
            "brand",
            "status",
            "decisionStatus",
        ];
        this.isAscUser = false;
        this.isDisableFieldOnUpdate = true;
        this.isDisabledSubmitButton = true;
        this.canForwardMultipleApp = false;
        this.isAllApplicationsHasMainDoc = false;
        this.warningNote = "Note: To submit multiple application, please make sure that every application has complete details and has necessary attachments.";
        this.typeOfMediumDisplay = "";
        this.formType = _shared__WEBPACK_IMPORTED_MODULE_12__["APPFORM_TYPE"].MULTIPLE;
        this.ascUserRoleList = [
            ..._shared__WEBPACK_IMPORTED_MODULE_12__["ROLES"].filter((role) => role.ascUser === true).map((role) => role.role),
        ];
        if (data) {
            this.multipleS1Application = data;
            this.s1Application.formType = this.formType;
            // Client Info
            this.s1Application.company = this.multipleS1Application.company;
            this.company = this.multipleS1Application.company;
            // this.s1Application.membersAffiliation = this.multipleS1Application.membersAffiliation;
            this.s1Application.brand = this.multipleS1Application.brand;
            this.s1Application.product = this.multipleS1Application.product;
            // this.s1Application.category = this.multipleS1Application.category;
        }
    }
    ngOnInit() {
        this.currentUser = this.dataStorage.getUserAccount();
        this.currentUserRole = this.currentUser.userRole.name;
        this.isAscUser = this.ascUserRoleList.includes(this.dataStorage.getUserRole());
        this.getS1FormsByMultipleApplication();
        if (this.currentUserRole !== _shared__WEBPACK_IMPORTED_MODULE_12__["USER_ROLES"].ROLE_APPLICANT) {
            this.displayedColumns = [
                "referenceCode",
                "typeOfMediumDisplay",
                "mainAttachmentReference",
                "supportingAttachmentReference",
                "brand",
                "status",
                "ASCstatus",
                "decisionStatus",
            ];
        }
    }
    getS1FormsByMultipleApplication() {
        let endpoint = "";
        if (this.currentUserRole === _shared__WEBPACK_IMPORTED_MODULE_12__["USER_ROLES"].ROLE_APPLICANT ||
            this.currentUserRole === _shared__WEBPACK_IMPORTED_MODULE_12__["USER_ROLES"].ROLE_ADMIN ||
            this.currentUserRole === _shared__WEBPACK_IMPORTED_MODULE_12__["USER_ROLES"].ROLE_SUPER_ADMIN) {
            endpoint = _shared__WEBPACK_IMPORTED_MODULE_12__["ENDPOINTS"].getMultipleAppForms + this.multipleS1Application.id;
        }
        else {
            endpoint =
                _shared__WEBPACK_IMPORTED_MODULE_12__["ENDPOINTS"].getMultipleAppFormsWithNoRejected +
                    this.multipleS1Application.id;
        }
        // this.apiService.findAll(ENDPOINTS.applicationFormPresentor + `multiple-application/${this.multipleS1Application.id}/applications`)
        this.apiService.findAll(endpoint).subscribe((res) => {
            this.multipleS1ApplicationList = res.responseData.data;
            this.isAllApplicationsHasMainDoc = this.multipleS1ApplicationList.filter((filteredList) => !filteredList.mainAttachmentReference).length
                ? false
                : true;
            this.multipleS1ApplicationList.forEach((value, index) => {
                var _a, _b;
                this.s1Application = value;
                this.multipleS1ApplicationList[index] = value;
                switch ((value === null || value === void 0 ? void 0 : value.refTypeOfMedium) || ((_b = (_a = value === null || value === void 0 ? void 0 : value.applicationFormS2) === null || _a === void 0 ? void 0 : _a.applicationForm) === null || _b === void 0 ? void 0 : _b.refTypeOfMedium)) {
                    case "SINGLE MEDIA":
                        this.getApplicationSingleMedia();
                        break;
                    case "MULTIMEDIA-MOVING":
                        this.getMultimediaMoving();
                        break;
                    case "MULTIMEDIA-STATIC":
                        this.getMultimediaStatic();
                        break;
                    default:
                        break;
                }
            });
            this.dataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_8__["MatTableDataSource"](this.multipleS1ApplicationList);
            this.dataSource.paginator = this.paginator;
            this.dataSource.sort = this.sort;
            // will be disabled if there's an application without main doc uploaded
            this.isDisabledSubmitButton = this.multipleS1ApplicationList.filter((filteredList) => !filteredList.mainAttachmentReference).length
                ? true
                : false;
            this.isDisabledSubmitButton = this.multipleS1ApplicationList.filter((filteredList) => !filteredList.supportingAttachmentReference &&
                !filteredList.hasNoSupportingDocs).length
                ? true
                : false;
            // if earlier or later than the approved date
            const today = this.datepipe.transform(new Date(), "yyyy-MM-dd");
            const approvedDate = this.datepipe.transform(this.multipleS1Application.dateOfSubmission, "yyyy-MM-dd");
            if (this.multipleS1Application.submissionStatus !== "PROCESSED" &&
                approvedDate !== today &&
                this.multipleS1Application.status !== "DISAPPROVED") {
                this.isDisabledSubmitButton = true;
                this.warningNote =
                    "Note: Applicant can only submit multiple application on approved date.";
            }
            this.checkForwardStatus();
        }, (err) => {
            err.error.message = _shared__WEBPACK_IMPORTED_MODULE_12__["ERROR_MESSAGES"].under_maintenance;
            this.sweetAlertService.error(err);
        });
    }
    checkForwardStatus() {
        if (this.multipleS1Application.countVerifiedApplicationForm ===
            this.multipleS1Application.actualNumberOfApplicationForm) {
            this.canForwardMultipleApp = true;
        }
    }
    viewApplication(data) {
        this.dialogRef.close();
        this.router.navigate([`asc/page/application/s1/update/${data.id}`]);
    }
    onApproveOrDisapprove(status = "APPROVED") {
        const displayStatus = status === "APPROVED" ? "approve" : "disapprove";
        sweetalert2__WEBPACK_IMPORTED_MODULE_16___default.a.fire({
            text: `Are you sure you want to ${displayStatus} this application?`,
            icon: "question",
            showCancelButton: true,
            confirmButtonColor: "#3085d6",
            cancelButtonColor: "#d33",
            confirmButtonText: "Confirm",
        }).then((result) => {
            if (result.value) {
                const endpointExtension = status === "APPROVED" ? "/approve" : "/disapprove";
                this.multipleS1Application.actionDate = new Date();
                this.multipleS1Application.actionBy = this.currentUser.username;
                this.apiService
                    .update(`${_shared__WEBPACK_IMPORTED_MODULE_12__["ENDPOINTS"].multipleApplication}${endpointExtension}`, this.multipleS1Application)
                    .subscribe((res) => {
                    this.sweetAlertService.customSuccessMessage("Multiple application submission request has been " +
                        displayStatus +
                        "d.");
                }, (err) => {
                    err.error.message = _shared__WEBPACK_IMPORTED_MODULE_12__["ERROR_MESSAGES"].under_maintenance;
                    this.sweetAlertService.error(err);
                }, () => {
                    this.dialogRef.close(this.multipleS1Application);
                });
            }
        });
    }
    updateMultipleApplications(multipleId) {
        // TO DO
        // will only redirect to add new S1 application
        // saving or updating is in add-s1-application.component.ts
        const ctr = this.multipleS1ApplicationList.length === 0
            ? 1
            : this.multipleS1ApplicationList.length + 1;
        this.dialogRef.close();
        this.router.navigate([
            `asc/page/application/s1/add/multiple/${multipleId}/${ctr}`,
        ]);
    }
    compareProduct(value, selected) {
        if (value && selected) {
            return value.description === selected.description;
        }
    }
    // compareCategory(value: any, selected: any): boolean {
    //   if (value && selected) {
    //     return value.description === selected.description;
    //   }
    // }
    submitMultiple() {
        sweetalert2__WEBPACK_IMPORTED_MODULE_16___default.a.fire({
            text: `Are you sure you want to submit this multiple application?`,
            icon: "question",
            showCancelButton: true,
            confirmButtonColor: "#3085d6",
            cancelButtonColor: "#d33",
            confirmButtonText: "Confirm",
        }).then((result) => {
            if (result.value) {
                if (this.multipleS1Application.numberOfApplication >
                    this.multipleS1ApplicationList.length) {
                    sweetalert2__WEBPACK_IMPORTED_MODULE_16___default.a.fire({
                        text: `Are you sure you want to submit ${this.multipleS1ApplicationList.length} out ${this.multipleS1Application.numberOfApplication} applications only?`,
                        icon: "question",
                        showCancelButton: true,
                        confirmButtonColor: "#3085d6",
                        cancelButtonColor: "#d33",
                        confirmButtonText: "Confirm",
                    }).then((result2) => {
                        if (result2.value) {
                            const endpoint = `${_shared__WEBPACK_IMPORTED_MODULE_12__["ENDPOINTS"].applicationFormPresentor}group-id/${this.multipleS1Application.id}/application-type-id/
                ${this.multipleS1Application.applicationType.id}/batch-multiple-app-form/submit`;
                            this.apiService.save(endpoint, null).subscribe((res) => {
                                this.sweetAlertService.customSuccessMessage("Multiple application successfully submitted.");
                                this.getS1FormsByMultipleApplication();
                            }, (err) => {
                                err.error.message = _shared__WEBPACK_IMPORTED_MODULE_12__["ERROR_MESSAGES"].under_maintenance;
                                this.sweetAlertService.error(err);
                            }, () => {
                                this.dialogRef.close(this.multipleS1Application);
                            });
                        }
                    });
                }
                else {
                    const endpoint = `${_shared__WEBPACK_IMPORTED_MODULE_12__["ENDPOINTS"].applicationFormPresentor}group-id/${this.multipleS1Application.id}/application-type-id/
        ${this.multipleS1Application.applicationType.id}/batch-multiple-app-form/submit`;
                    this.apiService.save(endpoint, null).subscribe((res) => {
                        this.sweetAlertService.customSuccessMessage("Multiple application successfully submitted.");
                        this.getS1FormsByMultipleApplication();
                    }, (err) => {
                        err.error.message = _shared__WEBPACK_IMPORTED_MODULE_12__["ERROR_MESSAGES"].under_maintenance;
                        this.sweetAlertService.error(err);
                    }, () => {
                        this.dialogRef.close(this.multipleS1Application);
                    });
                }
            }
        });
    }
    forwardMultipleAppsTo(user) {
        sweetalert2__WEBPACK_IMPORTED_MODULE_16___default.a.fire({
            text: `Are you sure you want to forward this multiple application?`,
            icon: "question",
            showCancelButton: true,
            confirmButtonColor: "#3085d6",
            cancelButtonColor: "#d33",
            confirmButtonText: "Confirm",
        }).then((result) => {
            if (result.value) {
                this.spinner.show();
                let endpoint = "";
                if (user === "encoder") {
                    this.multipleS1Application.assignedEncoder = this.multipleS1ApplicationList[0].assignedEncoder;
                    // endpoint = ENDPOINTS.forwardMultipleAppFormToAdSpe;
                    endpoint = `${_shared__WEBPACK_IMPORTED_MODULE_12__["ENDPOINTS"].s1ApplicationForm}encoder/group-id/${this.multipleS1Application.id}/forward-multiple-app-form`;
                }
                else if (user === "ad-specialist") {
                    this.multipleS1Application.assignedAdSpecialist = this.multipleS1ApplicationList[0].assignedAdSpecialist;
                    this.multipleS1Application.assignedScreener = this.multipleS1ApplicationList[0].assignedScreener;
                    endpoint = _shared__WEBPACK_IMPORTED_MODULE_12__["ENDPOINTS"].forwardMultipleAppFormToScreener;
                }
                else if (user === "screener") {
                    this.multipleS1Application.assignedReviewer = this.multipleS1ApplicationList[0].assignedReviewer;
                    endpoint = _shared__WEBPACK_IMPORTED_MODULE_12__["ENDPOINTS"].forwardMultipleAppFormToReviewer;
                }
                this.apiService.save(endpoint, this.multipleS1Application).subscribe((res) => {
                    console.log(res);
                    this.spinner.hide();
                    this.sweetAlertService.customSuccessMessage("Multiple application successfully forwarded to the next user.");
                }, (err) => {
                    this.spinner.hide();
                    err.error.message = _shared__WEBPACK_IMPORTED_MODULE_12__["ERROR_MESSAGES"].under_maintenance;
                    this.sweetAlertService.error(err);
                }, () => {
                    this.spinner.hide();
                    this.dialogRef.close(this.multipleS1Application);
                });
            }
        });
    }
    getApplicationSingleMedia(appFormReference) {
        var _a;
        if (appFormReference === void 0) { appFormReference = (_a = this.s1Application) === null || _a === void 0 ? void 0 : _a.appFormReference; }
        this.apiService
            .findByParam(_shared__WEBPACK_IMPORTED_MODULE_12__["ENDPOINTS"].applicationSingleMedia, `app-form-reference/${appFormReference}`)
            .subscribe((res) => {
            var _a, _b, _c, _d;
            if (res.responseData.data.length > 0) {
                this.applicationSingleMedia = res.responseData.data[0];
                this.typeOfMediumDisplay = `${(_c = (_b = (_a = this.applicationSingleMedia) === null || _a === void 0 ? void 0 : _a.mediumExecution) === null || _b === void 0 ? void 0 : _b.typeOfMedium) === null || _c === void 0 ? void 0 : _c.description} (${(_d = this.applicationSingleMedia) === null || _d === void 0 ? void 0 : _d.sizeLength})`;
                this.multipleS1ApplicationList.forEach((element, index) => {
                    if (element.appFormReference === appFormReference) {
                        this.multipleS1ApplicationList[index] = Object.assign(Object.assign({}, this.multipleS1ApplicationList[index]), { typeOfMediumDisplay: this.typeOfMediumDisplay === "undefined (0)"
                                ? ""
                                : this.typeOfMediumDisplay });
                    }
                });
                this.isDisabledSubmitButton = this.multipleS1ApplicationList.filter((filteredS1App) => filteredS1App.typeOfMediumDisplay === "").length
                    ? true
                    : false;
                this.dataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_8__["MatTableDataSource"](this.multipleS1ApplicationList);
                this.dataSource.paginator = this.paginator;
            }
            else {
                this.applicationSingleMedia = new app_core_models_application_single_media_model__WEBPACK_IMPORTED_MODULE_13__["ApplicationSingleMedia"]();
                this.typeOfMediumDisplay = "";
            }
        }, (err) => {
            this.applicationSingleMedia = new app_core_models_application_single_media_model__WEBPACK_IMPORTED_MODULE_13__["ApplicationSingleMedia"]();
            this.typeOfMediumDisplay = "";
        });
    }
    getMultimediaStatic(appFormReference) {
        var _a;
        if (appFormReference === void 0) { appFormReference = (_a = this.s1Application) === null || _a === void 0 ? void 0 : _a.appFormReference; }
        this.apiService
            .findByParam(_shared__WEBPACK_IMPORTED_MODULE_12__["ENDPOINTS"].applicationMultimedia, `app-form-reference/${appFormReference}`)
            .subscribe((res) => {
            if (res.responseData.data.length > 0) {
                const multimediaList = new Set(res.responseData.data.map((mappedList) => { var _a; return `${(_a = mappedList === null || mappedList === void 0 ? void 0 : mappedList.typeOfMedium) === null || _a === void 0 ? void 0 : _a.description} (${mappedList === null || mappedList === void 0 ? void 0 : mappedList.multimediaSizeLength})`; }));
                this.typeOfMediumDisplay = "";
                let mediaCtrl = 1;
                for (const media of multimediaList) {
                    if (mediaCtrl !== multimediaList.size) {
                        this.typeOfMediumDisplay += `${media}, `;
                        mediaCtrl++;
                    }
                    else {
                        this.typeOfMediumDisplay += media;
                    }
                }
                this.multipleS1ApplicationList.forEach((element, index) => {
                    if (element.appFormReference === appFormReference) {
                        this.multipleS1ApplicationList[index] = Object.assign(Object.assign({}, this.multipleS1ApplicationList[index]), { typeOfMediumDisplay: this.typeOfMediumDisplay });
                    }
                });
                this.dataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_8__["MatTableDataSource"](this.multipleS1ApplicationList);
                this.dataSource.paginator = this.paginator;
                this.isDisabledSubmitButton = this.multipleS1ApplicationList.filter((filteredList) => !filteredList.typeOfMediumDisplay).length
                    ? true
                    : false;
            }
            else {
                this.typeOfMediumDisplay = "";
            }
        }, (err) => {
            this.typeOfMediumDisplay = "";
        });
    }
    getMultimediaMoving(appFormReference) {
        var _a;
        if (appFormReference === void 0) { appFormReference = (_a = this.s1Application) === null || _a === void 0 ? void 0 : _a.appFormReference; }
        this.apiService
            .findByParam(_shared__WEBPACK_IMPORTED_MODULE_12__["ENDPOINTS"].applicationMultimedia, `app-form-reference/${appFormReference}`)
            .subscribe((res) => {
            if (res.responseData.data.length > 0) {
                const multimediaList = new Set(res.responseData.data.map((mappedList) => { var _a; return `${(_a = mappedList === null || mappedList === void 0 ? void 0 : mappedList.typeOfMedium) === null || _a === void 0 ? void 0 : _a.description} (${mappedList === null || mappedList === void 0 ? void 0 : mappedList.multimediaSizeLength})`; }));
                this.typeOfMediumDisplay = "";
                let mediaCtrl = 1;
                for (const media of multimediaList) {
                    if (mediaCtrl !== multimediaList.size) {
                        this.typeOfMediumDisplay += `${media}, `;
                        mediaCtrl++;
                    }
                    else {
                        this.typeOfMediumDisplay += media;
                    }
                }
                this.multipleS1ApplicationList.forEach((element, index) => {
                    if (element.appFormReference === appFormReference) {
                        this.multipleS1ApplicationList[index] = Object.assign(Object.assign({}, this.multipleS1ApplicationList[index]), { typeOfMediumDisplay: this.typeOfMediumDisplay });
                    }
                });
                this.dataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_8__["MatTableDataSource"](this.multipleS1ApplicationList);
                this.dataSource.paginator = this.paginator;
                this.isDisabledSubmitButton = this.multipleS1ApplicationList.filter((filteredList) => !filteredList.typeOfMediumDisplay).length
                    ? true
                    : false;
            }
            else {
                this.typeOfMediumDisplay = "";
            }
        }, (err) => {
            this.typeOfMediumDisplay = "";
        });
    }
};
UpdateMultipleApplicationComponent.ctorParameters = () => [
    { type: _services__WEBPACK_IMPORTED_MODULE_11__["ApiService"] },
    { type: _services__WEBPACK_IMPORTED_MODULE_11__["SweetAlertService"] },
    { type: _services__WEBPACK_IMPORTED_MODULE_11__["DataStorageService"] },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_9__["Router"] },
    { type: ngx_spinner__WEBPACK_IMPORTED_MODULE_15__["NgxSpinnerService"] },
    { type: _angular_common__WEBPACK_IMPORTED_MODULE_3__["DatePipe"] },
    { type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_5__["MatDialogRef"], decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Optional"] }] },
    { type: undefined, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Optional"] }, { type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Inject"], args: [_angular_material_dialog__WEBPACK_IMPORTED_MODULE_5__["MAT_DIALOG_DATA"],] }] }
];
UpdateMultipleApplicationComponent.propDecorators = {
    paginator: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["ViewChild"], args: [_angular_material_paginator__WEBPACK_IMPORTED_MODULE_6__["MatPaginator"], { static: false },] }],
    sort: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["ViewChild"], args: [_angular_material_sort__WEBPACK_IMPORTED_MODULE_7__["MatSort"], { static: false },] }]
};
UpdateMultipleApplicationComponent = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_4__["Component"])({
        selector: "app-update-multiple-application",
        template: _raw_loader_update_multiple_application_component_html__WEBPACK_IMPORTED_MODULE_1__["default"],
        styles: [_update_multiple_application_component_scss__WEBPACK_IMPORTED_MODULE_2__["default"]]
    })
], UpdateMultipleApplicationComponent);



/***/ }),

/***/ "Fy8O":
/*!*****************************************************************!*\
  !*** ./src/app/modules/pages/company/company-routing.module.ts ***!
  \*****************************************************************/
/*! exports provided: CompanyRoutingModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CompanyRoutingModule", function() { return CompanyRoutingModule; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "mrSG");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "tyNb");
/* harmony import */ var _shared__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @shared */ "M0ag");




const routes = [
    {
        path: '',
        children: [
            {
                path: _shared__WEBPACK_IMPORTED_MODULE_3__["URL_PATHS"].LIST_COMPANY,
                loadChildren: () => Promise.all(/*! import() | list-company-list-company-module */[__webpack_require__.e("default~applications-applications-module~list-company-list-company-module~modules-pages-landing-page~e873ff00"), __webpack_require__.e("list-company-list-company-module")]).then(__webpack_require__.bind(null, /*! ./list-company/list-company.module */ "lsCb"))
                    .then(m => m.ListCompanyModule)
            },
            {
                path: _shared__WEBPACK_IMPORTED_MODULE_3__["URL_PATHS"].ADD_COMPANY,
                loadChildren: () => Promise.all(/*! import() | add-company-add-company-module */[__webpack_require__.e("default~add-company-add-company-module~applications-applications-module~modules-pages-landing-page-l~b924cdec"), __webpack_require__.e("add-company-add-company-module")]).then(__webpack_require__.bind(null, /*! ./add-company/add-company.module */ "mXdJ"))
                    .then(m => m.AddCompanyModule)
            },
            {
                path: _shared__WEBPACK_IMPORTED_MODULE_3__["URL_PATHS"].UPDATE_COMPANY + '/:id',
                loadChildren: () => Promise.all(/*! import() | add-company-add-company-module */[__webpack_require__.e("default~add-company-add-company-module~applications-applications-module~modules-pages-landing-page-l~b924cdec"), __webpack_require__.e("add-company-add-company-module")]).then(__webpack_require__.bind(null, /*! ./add-company/add-company.module */ "mXdJ"))
                    .then(m => m.AddCompanyModule)
            }
        ]
    }
];
let CompanyRoutingModule = class CompanyRoutingModule {
};
CompanyRoutingModule = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModule"])({
        imports: [_angular_router__WEBPACK_IMPORTED_MODULE_2__["RouterModule"].forChild(routes)],
        exports: [_angular_router__WEBPACK_IMPORTED_MODULE_2__["RouterModule"]]
    })
], CompanyRoutingModule);



/***/ }),

/***/ "H6Pz":
/*!*********************************************************************************!*\
  !*** ./src/app/modules/pages/company/add-company/add-company-routing.module.ts ***!
  \*********************************************************************************/
/*! exports provided: AddCompanyRoutingModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AddCompanyRoutingModule", function() { return AddCompanyRoutingModule; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "mrSG");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "tyNb");
/* harmony import */ var _add_company_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./add-company.component */ "9hFf");




const routes = [
    {
        path: '',
        component: _add_company_component__WEBPACK_IMPORTED_MODULE_3__["AddCompanyComponent"]
    }
];
let AddCompanyRoutingModule = class AddCompanyRoutingModule {
};
AddCompanyRoutingModule = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModule"])({
        imports: [_angular_router__WEBPACK_IMPORTED_MODULE_2__["RouterModule"].forChild(routes)],
        exports: [_angular_router__WEBPACK_IMPORTED_MODULE_2__["RouterModule"]]
    })
], AddCompanyRoutingModule);



/***/ }),

/***/ "ItcL":
/*!******************************************************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/modules/pages/applications/s1-application/add-s1-application/add-s1-application.component.html ***!
  \******************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<form>\r\n  <div class=\"container-fluid\">\r\n    <!-- <div class=\"spinner\">\r\n      <ngx-spinner bdColor=\"rgba(0, 0, 0, 0.8)\" size=\"large\" color=\"#fff\" type=\"line-spin-fade\" [fullScreen]=\"false\">\r\n        <p *ngIf=\"s1Application.brand != undefined\"> Loading <b>{{s1Application.referenceCode}}</b> S1 Application. </p>\r\n        <p *ngIf=\"s1Application.brand === undefined && company.companyName === undefined\"> Creating new S1\r\n          Application... </p>\r\n      </ngx-spinner>\r\n    </div> -->\r\n    <div class=\"row title\">\r\n      <div class=\"col-md-12\">\r\n        <mat-label\r\n          *ngIf=\"\r\n            isApplicant &&\r\n            (s1Application?.externalStatus == undefined ||\r\n              s1Application?.externalStatus == 'SAVED' ||\r\n              s1Application?.externalStatus == 'S1_APPLICATION_SUBMITTED')\r\n          \"\r\n        >\r\n          <i class=\"material-icons\">note_add</i> NEW S1 APPLICATION <br /><br />\r\n        </mat-label>\r\n\r\n        <mat-label\r\n          [hidden]=\"\r\n            s1Application?.applicationType.description ===\r\n              'Special Screening' ||\r\n            s1Application?.applicationType.description === 'Special Clearing' ||\r\n            s1Application?.applicationType.description ===\r\n              'Special Screening and Clearing'\r\n          \"\r\n          *ngIf=\"\r\n            specialApplicationType.includes(\r\n              s1Application?.applicationType?.description?.toUpperCase()\r\n            ) &&\r\n            !applicationRequest?.status &&\r\n            s1Application.applicationRequest == null &&\r\n            s1Application?.formType !== 'MULTIPLE'\r\n          \"\r\n        >\r\n          <i class=\"material-icons\">note_add</i> REQUEST FOR APPROVAL\r\n        </mat-label>\r\n\r\n        <table>\r\n          <tr>\r\n            <td\r\n              *ngIf=\"\r\n                s1Application?.referenceCode ||\r\n                s1Application?.referenceCodeRejected\r\n              \"\r\n            >\r\n              <span> Reference Code: </span>\r\n            </td>\r\n            <td\r\n              *ngIf=\"\r\n                s1Application?.referenceCode ||\r\n                s1Application?.referenceCodeRejected\r\n              \"\r\n            >\r\n              <span>\r\n                <b>{{\r\n                  s1Application?.externalStatus == \"S1_APPLICATION_REJECTED\"\r\n                    ? s1Application?.referenceCodeRejected\r\n                    : (s1Application?.referenceCode | uppercase)\r\n                }}</b>\r\n                <!-- <b *ngIf=\"s1Application?.revisionNo>0\"> (Revision Number {{s1Application?.revisionNo}})</b> -->\r\n              </span>\r\n            </td>\r\n            <td class=\"no-border\"></td>\r\n            <td class=\"no-border\"></td>\r\n            <td class=\"no-border\"></td>\r\n            <td class=\"no-border\">\r\n              <button\r\n                class=\"button-right button-red\"\r\n                mat-raised-button\r\n                [routerLink]=\"['/asc/page/application/s1/lists']\"\r\n              >\r\n                <i class=\"material-icons color__white\">list</i> VIEW\r\n                APPLICATIONS\r\n              </button>\r\n              <!-- <button class=\"button-right button-red\" mat-raised-button *ngIf=\"s1Application?.formType==='MULTIPLE'\"\r\n              [routerLink]=\"['/asc/page/application/s1/multiple']\">\r\n              <i class=\"material-icons color__white\">list</i> VIEW APPLICATIONS\r\n            </button> -->\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td class=\"no-border\"></td>\r\n          </tr>\r\n          <tr>\r\n            <td\r\n              *ngIf=\"\r\n                (s1Application?.externalStatus != undefined && !isAscUser) ||\r\n                isAscUser\r\n              \"\r\n            >\r\n              <span> Status: </span>\r\n            </td>\r\n            <td\r\n              *ngIf=\"\r\n                (s1Application?.externalStatus != undefined && !isAscUser) ||\r\n                isAscUser\r\n              \"\r\n            >\r\n              <span\r\n                *ngIf=\"s1Application?.externalStatus != undefined && !isAscUser\"\r\n              >\r\n                <b>{{\r\n                  s1Application?.externalStatus?.replaceAll(\"_\", \" \")\r\n                    | uppercase\r\n                }}</b>\r\n              </span>\r\n              <span *ngIf=\"isAscUser\">\r\n                <b>{{\r\n                  s1Application?.internalStatus?.replaceAll(\"_\", \" \")\r\n                    | uppercase\r\n                }}</b>\r\n              </span>\r\n            </td>\r\n            <td class=\"no-border\"></td>\r\n            <td class=\"no-border\"></td>\r\n            <td\r\n              *ngIf=\"\r\n                s1Application?.decisionStatus != undefined &&\r\n                s1Application?.internalStatus == 'S1_APPLICATION_REVIEWED'\r\n              \"\r\n            >\r\n              <span> Decision: </span>\r\n            </td>\r\n            <td\r\n              *ngIf=\"\r\n                s1Application?.decisionStatus != undefined &&\r\n                s1Application?.internalStatus == 'S1_APPLICATION_REVIEWED'\r\n              \"\r\n            >\r\n              <span>\r\n                <b>{{ s1Application?.decisionStatus | uppercase }}</b>\r\n              </span>\r\n            </td>\r\n          </tr>\r\n        </table>\r\n        <hr />\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n      <div class=\"col-md-6\">\r\n        <h3\r\n          *ngIf=\"\r\n            s1Application?.submissionDate &&\r\n            applicationRequest?.status !== 'DISAPPROVED'\r\n          \"\r\n        >\r\n          <b class=\"submission-date\"\r\n            >Submission Date:\r\n            {{ s1Application?.submissionDate | date: \"MMMM d, yyyy\" }}</b\r\n          >\r\n        </h3>\r\n        <h3\r\n          *ngIf=\"\r\n            s1Application?.submissionDate &&\r\n            applicationRequest?.status === 'DISAPPROVED'\r\n          \"\r\n        >\r\n          <b class=\"submission-date\"\r\n            >Submission Date: N/A - Request was disapproved</b\r\n          >\r\n        </h3>\r\n      </div>\r\n\r\n      <div\r\n        class=\"col-md-6\"\r\n        *ngIf=\"\r\n          s1Application?.amount && s1Application?.submissionType === 'ORIGINAL'\r\n        \"\r\n      >\r\n        <span class=\"badge bg-warning text-dark button-right\">\r\n          {{ s1Application?.paymentStatus?.replaceAll(\"_\", \" \") }} : ₱\r\n          {{ s1Application?.amount | number: \"1.2-2\" }}\r\n        </span>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"row\" [formGroup]=\"s1ApplicationForm\">\r\n      <mat-form-field\r\n        class=\"col-md-4\"\r\n        appearance=\"outline\"\r\n        [hidden]=\"s1Application?.formType !== 'MULTIPLE'\"\r\n      >\r\n        <mat-label>Form Type</mat-label>\r\n        <mat-select\r\n          [(ngModel)]=\"s1Application.formType\"\r\n          [compareWith]=\"compareFormType\"\r\n          name=\"formType\"\r\n          formControlName=\"formType\"\r\n          disabled\r\n        >\r\n          <mat-option\r\n            *ngFor=\"let i of formTypeList\"\r\n            [value]=\"i\"\r\n            (click)=\"getApplicationTypeList(i.description)\"\r\n          >\r\n            {{ i?.description | uppercase }}\r\n            <span\r\n              *ngIf=\"\r\n                s1Application?.multipleApplication &&\r\n                s1Application?.multipleApplication?.submissionStatus !==\r\n                  'PROCESSED'\r\n              \"\r\n              >({{ s1Application?.sequenceOrder }}\r\n              of\r\n              {{\r\n                s1Application?.multipleApplication?.numberOfApplication\r\n              }})</span\r\n            >\r\n            <span\r\n              *ngIf=\"\r\n                s1Application?.multipleApplication?.submissionStatus ===\r\n                'PROCESSED'\r\n              \"\r\n            >\r\n              (Sequence Number: {{ s1Application?.sequenceOrder }})</span\r\n            >\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field class=\"col-md-4\" appearance=\"outline\">\r\n        <mat-label>Application Type</mat-label>\r\n        <mat-select\r\n          [(ngModel)]=\"s1Application.applicationType\"\r\n          [compareWith]=\"compareApplicationType\"\r\n          name=\"applicationType\"\r\n          formControlName=\"applicationType\"\r\n          disabled\r\n        >\r\n          <!-- [disabled]=\"s1Application?.internalStatus!='SAVED'&&s1Application?.internalStatus!=undefined\" -->\r\n          <mat-option\r\n            *ngFor=\"let i of applicationTypeList\"\r\n            [value]=\"i\"\r\n            (click)=\"setAppType(i)\"\r\n          >\r\n            {{ i?.description | uppercase }}\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n      <mat-form-field\r\n        class=\"col-md-4\"\r\n        appearance=\"outline\"\r\n        *ngIf=\"s1Application?.submissionType\"\r\n      >\r\n        <mat-label>Submission Type</mat-label>\r\n        <input matInput [value]=\"s1Application?.submissionType\" readonly />\r\n      </mat-form-field>\r\n      <mat-form-field\r\n        class=\"col-md-4\"\r\n        appearance=\"outline\"\r\n        *ngIf=\"s1Application.formType === 'FOR_PRESENTATION'\"\r\n      >\r\n        <mat-label>Form Type</mat-label>\r\n        <input matInput value=\"FOR PRESENTATION\" readonly />\r\n      </mat-form-field>\r\n    </div>\r\n    <hr />\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12\">\r\n        <button\r\n          mat-raised-button\r\n          class=\"button-right button-red\"\r\n          *ngIf=\"\r\n            s1Application?.submissionType === 'ORIGINAL' &&\r\n            s1Application?.internalStatus === 's1 Reviewed'\r\n          \"\r\n          (click)=\"viewReport(s1Application.id, 'S1_Application_Form')\"\r\n        >\r\n          <i class=\"material-icons color__white\">open_in_new</i> VIEW\r\n          APPLICATION REPORT\r\n        </button>\r\n\r\n        <button\r\n          mat-raised-button\r\n          class=\"button-right button-red\"\r\n          (click)=\"openPerformanceMetrics()\"\r\n          *ngIf=\"\r\n            (currentUser?.userRole.name === 'ROLE_ADMIN' ||\r\n              currentUser?.userRole.name === 'ROLE_SUPER_ADMIN') &&\r\n            s1Application?.id\r\n          \"\r\n        >\r\n          <i class=\"material-icons color__white\">trending_up</i> VIEW\r\n          APPLICATION HISTORY\r\n        </button>\r\n\r\n        <!-- <button mat-raised-button class=\"button-right button-red\" *ngIf=\"(currentUser?.userRole.name === 'ROLE_SUPER_ADMIN' || currentUser?.userRole.name === 'ROLE_ADMIN' || currentUser?.userRole.name === 'ROLE_AD_SPECIALIST')\r\n        && (s1Application?.releaseStatus === 'FOR_RELEASE' || s1Application?.releaseStatus === 'RELEASED') && s1Application?.paymentStatus === 'PAID'\"\r\n          (click)=\"viewReport(s1Application.id,'S1_Decision_Form')\"><i\r\n            class=\"material-icons color__white\">open_in_new</i> DECISION FORM</button> -->\r\n\r\n        <!-- <button mat-raised-button class=\"button-right button-red\" *ngIf=\"(currentUser?.userRole.name === 'ROLE_SUPER_ADMIN' || currentUser?.userRole.name === 'ROLE_ADMIN' || currentUser?.userRole.name === 'ROLE_AD_SPECIALIST')\r\n        && (s1Application?.releaseStatus === 'FOR_RELEASE' || s1Application?.releaseStatus === 'RELEASED') && s1Application?.paymentStatus === 'PAID'\"\r\n          (click)=\"viewReport(s1Application.id,'Stamp_Material')\"><i class=\"material-icons color__white\">open_in_new</i>\r\n          STAMPED MATERIAL</button> -->\r\n\r\n        <button\r\n          mat-raised-button\r\n          class=\"button-right button-red\"\r\n          *ngIf=\"\r\n            s1Application?.submissionType === 'revision' &&\r\n            s1Application?.internalStatus === 'revision screened'\r\n          \"\r\n          (click)=\"viewReport(s1Application.id, 'Revision_Form')\"\r\n        >\r\n          <i class=\"material-icons color__white\">open_in_new</i> REVISION FORM\r\n        </button>\r\n\r\n        <button\r\n          mat-raised-button\r\n          class=\"button-right button-red\"\r\n          *ngIf=\"\r\n            (currentUser?.userRole.name === 'ROLE_ADMIN' ||\r\n              currentUser?.userRole.name === 'ROLE_SUPER_ADMIN' ||\r\n              currentUser?.userRole.name === 'ROLE_AD_SPECIALIST') &&\r\n            s1Application?.submissionType === 'COMPLIANCE' &&\r\n            s1Application?.decisionStatus === 'INCOMPLETE' &&\r\n            s1Application?.internalStatus ===\r\n              'COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER'\r\n          \"\r\n          (click)=\"viewReport(s1Application.id, 'S1_Pending_Form')\"\r\n        >\r\n          <i class=\"material-icons color__white\">open_in_new</i> PENDING FORM\r\n        </button>\r\n\r\n        <button\r\n          mat-raised-button\r\n          class=\"button-right button-red\"\r\n          *ngIf=\"\r\n            (currentUser?.userRole.name === 'ROLE_SUPER_ADMIN' ||\r\n              currentUser?.userRole.name === 'ROLE_ADMIN') &&\r\n            (s1Application?.releaseStatus === 'FOR_RELEASE' ||\r\n              s1Application?.releaseStatus === 'RELEASED') &&\r\n            s1Application?.paymentStatus === 'PAID'\r\n          \"\r\n          (click)=\"sendDecisionOrStampMaterialManual()\"\r\n        >\r\n          <i class=\"material-icons color__white\">send</i> SEND DECISION OR\r\n          STAMPED MATERIAL\r\n        </button>\r\n      </div>\r\n\r\n      <!--   <div class=\"col-md-1\">\r\n        <button mat-raised-button class=\"button-right button-red\" (click)=\"viewReport(s1Application.id)\">Pending Form</button>\r\n      </div> -->\r\n    </div>\r\n    <br />\r\n    <div class=\"row\">\r\n      <mat-accordion class=\"headers-align\" multi>\r\n        <mat-expansion-panel\r\n          [expanded]=\"\r\n            ((isApplicant && s1Application?.internalStatus != 'SAVED') ||\r\n              s1Application?.internalStatus == undefined) &&\r\n            !accordionExpanded\r\n          \"\r\n          *ngIf=\"\r\n            (isApplicant && s1Application?.internalStatus == 'SAVED') ||\r\n            !isApplicant ||\r\n            s1Application?.internalStatus == undefined\r\n          \"\r\n        >\r\n          <mat-expansion-panel-header (click)=\"accordionDisablingFunction()\">\r\n            <mat-panel-title>\r\n              <i class=\"material-icons\">label_important</i> &nbsp;Client\r\n              Information\r\n              <i class=\"material-icons error\" *ngIf=\"hasErrorsClient\">error</i>\r\n            </mat-panel-title>\r\n            <mat-panel-description>\r\n              Affiliation and Company details\r\n              <i class=\"material-icons\">perm_contact_calendar</i>\r\n            </mat-panel-description>\r\n          </mat-expansion-panel-header>\r\n          <br />\r\n\r\n          <app-client-information\r\n            [s1Application]=\"s1Application\"\r\n            [isAscUser]=\"isAscUser\"\r\n            (checkInactiveAffiliation)=\"checkInactiveAffiliation()\"\r\n            [isDisableFieldOnUpdate]=\"isDisableFieldOnUpdate\"\r\n            [company]=\"company\"\r\n            (hasErrorFields)=\"hasErrorsClient = $event\"\r\n          ></app-client-information>\r\n          <div *ngIf=\"!isDisableFieldOnUpdate\" class=\"required-fields-note\">\r\n            Note: Fields with * are required\r\n          </div>\r\n          <mat-action-row *ngIf=\"isApplicant\">\r\n            <p *ngIf=\"validationMessage\">\r\n              <span class=\"badge bg-warning text-dark\"\r\n                ><i class=\"material-icons\">warning</i\r\n                >{{ validationMessage }}</span\r\n              >\r\n            </p>\r\n            <button\r\n              mat-raised-button\r\n              color=\"warn\"\r\n              (click)=\"accordionDisablingFunction()\"\r\n            >\r\n              Next\r\n            </button>\r\n          </mat-action-row>\r\n\r\n          <!-- <button mat-raised-button color=\"primary\" (click)=\"accordionDisablingFunction()\" [disabled]=\"!company?.companyName && !s1Application.brand\">Next</button> -->\r\n        </mat-expansion-panel>\r\n\r\n        <!-- FOR ASC Users only -->\r\n        <mat-expansion-panel *ngIf=\"!isApplicant\">\r\n          <mat-expansion-panel-header>\r\n            <mat-panel-title>\r\n              <i class=\"material-icons\">label_important</i> &nbsp;Presentor\r\n              Information\r\n            </mat-panel-title>\r\n            <mat-panel-description>\r\n              Personal Details\r\n              <i class=\"material-icons\">person</i>\r\n            </mat-panel-description>\r\n          </mat-expansion-panel-header>\r\n\r\n          <br />\r\n          <div class=\"row\">\r\n            <div class=\"row\"><br /></div>\r\n\r\n            <div class=\"row\">\r\n              <mat-form-field\r\n                class=\"col-md-4\"\r\n                appearance=\"outline\"\r\n                *ngIf=\"\r\n                  isEvaluator && s1Application?.externalStatus === undefined\r\n                \"\r\n              >\r\n                <mat-label\r\n                  >Assign an Applicant<span class=\"required-field\">\r\n                    <mat-icon>notification_important</mat-icon>\r\n                  </span></mat-label\r\n                >\r\n\r\n                <mat-select\r\n                  [(ngModel)]=\"s1Application.applicationOwner\"\r\n                  name=\"s1Application.applicationOwner\"\r\n                >\r\n                  <mat-option\r\n                    *ngFor=\"let i of applicantList\"\r\n                    [value]=\"i\"\r\n                    (click)=\"selectApplicant(i)\"\r\n                  >\r\n                    {{ i.firstName }} {{ i.lastName }}\r\n                  </mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n\r\n              <mat-form-field\r\n                class=\"col-md-8\"\r\n                appearance=\"outline\"\r\n                *ngIf=\"presentorDetails.id != null\"\r\n              >\r\n                <mat-label>Name of Applicant</mat-label>\r\n                <input\r\n                  matInput\r\n                  [value]=\"\r\n                    presentorDetails?.firstName +\r\n                    ' ' +\r\n                    presentorDetails?.lastName\r\n                  \"\r\n                  readonly\r\n                />\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"row\">\r\n              <mat-form-field class=\"col-md-7\" appearance=\"outline\">\r\n                <mat-label>Company Name</mat-label>\r\n                <input\r\n                  matInput\r\n                  [value]=\"presentorDetails?.company?.companyName\"\r\n                  readonly\r\n                />\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"row\"><br /></div>\r\n\r\n            <div class=\"row\">\r\n              <mat-form-field class=\"col-md-11\" appearance=\"outline\">\r\n                <mat-label>Address</mat-label>\r\n                <input\r\n                  matInput\r\n                  [value]=\"presentorDetails?.company?.completeAddress\"\r\n                  readonly\r\n                />\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"row\"><br /></div>\r\n\r\n            <div class=\"row\" *ngIf=\"presentorDetails.id != null\">\r\n              <mat-form-field class=\"col-md-5\" appearance=\"outline\">\r\n                <mat-label>Mobile Number</mat-label>\r\n                <input\r\n                  matInput\r\n                  [value]=\"presentorDetails?.mobileNumber\"\r\n                  readonly\r\n                />\r\n              </mat-form-field>\r\n              <mat-form-field class=\"col-md-5\" appearance=\"outline\">\r\n                <mat-label>Email Address</mat-label>\r\n                <input matInput [value]=\"presentorDetails?.username\" readonly />\r\n              </mat-form-field>\r\n              <mat-form-field class=\"col-md-5\" appearance=\"outline\">\r\n                <mat-label>Telephone Number</mat-label>\r\n                <input\r\n                  matInput\r\n                  [value]=\"presentorDetails?.company?.companyTelephoneNo\"\r\n                  readonly\r\n                />\r\n              </mat-form-field>\r\n              <mat-form-field class=\"col-md-5\" appearance=\"outline\">\r\n                <mat-label>Alternate Telephone Number</mat-label>\r\n                <input\r\n                  matInput\r\n                  [value]=\"presentorDetails?.company?.companyTelephoneNo2\"\r\n                  readonly\r\n                />\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n        </mat-expansion-panel>\r\n\r\n        <mat-expansion-panel\r\n          *ngIf=\"\r\n            (isApplicant && s1Application?.internalStatus == 'SAVED') ||\r\n            !isApplicant ||\r\n            s1Application?.internalStatus == undefined ||\r\n            ((s1Application?.internalStatus == 'S1_APPLICATION_REVIEWED' ||\r\n              s1Application?.internalStatus ==\r\n                'COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER' ||\r\n              s1Application?.internalStatus == 'REVISION_SCREENED' ||\r\n              s1Application?.internalStatus == 'S1_APPLICATION_REJECTED') &&\r\n              (s1Application?.decisionStatus == 'APPROVED' ||\r\n                s1Application?.decisionStatus == 'APPROVED W/ CAUTION' ||\r\n                s1Application?.decisionStatus == 'INCOMPLETE') &&\r\n              s1Application?.revisionNo < 2 &&\r\n              !s1Application?.appliedS2)\r\n          \"\r\n          [disabled]=\"accordionDisable\"\r\n          [hidden]=\"\r\n            (s1Application?.hasOngoingRevision ||\r\n              s1Application?.hasOngoingCompliance) &&\r\n            isApplicant\r\n          \"\r\n          [expanded]=\"accordionExpanded || isAdSpecialist\"\r\n        >\r\n          <!-- s1Application?.membersAffiliation && s1Application?.company && s1Application?.brand -->\r\n          <mat-expansion-panel-header (click)=\"accordionDisablingFunction()\">\r\n            <mat-panel-title>\r\n              <i class=\"material-icons\">label_important</i> &nbsp;Material\r\n              Information\r\n              <i class=\"material-icons error\" *ngIf=\"checkMaterialFieldErrors()\"\r\n                >error</i\r\n              >\r\n            </mat-panel-title>\r\n            <mat-panel-description>\r\n              Ads Details\r\n              <i class=\"material-icons\">ads_click</i>\r\n            </mat-panel-description>\r\n          </mat-expansion-panel-header>\r\n          <br />\r\n\r\n          <app-material-information\r\n            [s1Application]=\"s1Application\"\r\n            [isAscUser]=\"isAscUser\"\r\n            [multimediaDTO]=\"multimediaDTO\"\r\n            [applicationSingleMedia]=\"applicationSingleMedia\"\r\n            [originalAttachmentDocuments]=\"originalAttachmentDocuments\"\r\n            [revisionAttachmentDocuments]=\"revisionAttachmentDocuments\"\r\n            [complianceAttachmentDocuments]=\"complianceAttachmentDocuments\"\r\n            [isDisableFieldOnUpdate]=\"isDisableFieldOnUpdate\"\r\n            [supportiveDocumentList]=\"supportiveDocumentList\"\r\n            (checkSingleMediaChangesFunction)=\"checkSingleMediaChanges()\"\r\n            (checkMultimediaChangesFunction)=\"checkEmittedMultimedia($event)\"\r\n            [toDeleteMultimediaList]=\"toDeleteMultimediaList\"\r\n            [savedTypeOfMedium]=\"s1Application?.typeOfMedium\"\r\n            (hasErrorFields)=\"hasErrorsMaterial = $event\"\r\n          >\r\n          </app-material-information>\r\n          <div *ngIf=\"!isDisableFieldOnUpdate\" class=\"required-fields-note\">\r\n            Note: Fields with * are required\r\n          </div>\r\n          <!-- <mat-action-row>\r\n            <button mat-button color=\"primary\" (click)=\"accordionDisablingFunction()\">Next</button>\r\n          </mat-action-row> -->\r\n        </mat-expansion-panel>\r\n\r\n        <!-- PREVIEW FOR APPLICANT ONCE SUBMITTED -->\r\n        <mat-expansion-panel\r\n          *ngIf=\"isApplicant && s1Application?.internalStatus != undefined\"\r\n          [expanded]=\"\r\n            isApplicant &&\r\n            (s1Application?.externalStatus == 'S1_APPLICATION_SUBMITTED' ||\r\n              s1Application?.externalStatus == 'S1_APPLICATION_IN_PROCESS' ||\r\n              s1Application?.externalStatus ==\r\n                'SUBMITTED_DOCUMENT_FOR_COMPLIANCE' ||\r\n              s1Application?.externalStatus ==\r\n                'COMPLIANCE_DOCUMENT_FOR_REVIEW' ||\r\n              s1Application?.externalStatus == 'REVISION_REVIEW_IN_PROCESS' ||\r\n              s1Application?.externalStatus == 'SUBMITTED_REVISION' ||\r\n              s1Application?.externalStatus == 'S1_APPLICATION_CANCELLED' ||\r\n              s1Application?.externalStatus == 'S1_APPLICATION_REJECTED' ||\r\n              s1Application?.internalStatus == 'REVISION_SCREENED' ||\r\n              s1Application?.hasRevision ||\r\n              s1Application?.appliedS2)\r\n          \"\r\n        >\r\n          <mat-expansion-panel-header>\r\n            <mat-panel-title>\r\n              <i class=\"material-icons\">label_important</i> &nbsp;Preview\r\n            </mat-panel-title>\r\n            <mat-panel-description>\r\n              S1 Application\r\n              <i class=\"material-icons\">visibility</i>\r\n            </mat-panel-description>\r\n          </mat-expansion-panel-header>\r\n          <br />\r\n          <app-preview-application\r\n            [previewS1Application]=\"s1Application\"\r\n            [multimediaDTO]=\"multimediaDTO\"\r\n          ></app-preview-application>\r\n        </mat-expansion-panel>\r\n      </mat-accordion>\r\n      <!-- </form> -->\r\n\r\n      <!-- COMMENTS FOR ASC Users -->\r\n      <div *ngIf=\"s1Application?.externalStatus != undefined && !isApplicant\">\r\n        <br />\r\n        <div class=\"row fields\">\r\n          <h4><i class=\"material-icons\">label_important</i> &nbsp;Comments</h4>\r\n          <br />\r\n          <app-comment [commentS1Application]=\"s1Application\"></app-comment>\r\n          <div class=\"row\"><br /></div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- ATTACHMENTS FOR STAMPED MATERIAL AND DECISION FORM -->\r\n      <div\r\n        *ngIf=\"\r\n          (isAdmin || isSuperAdmin || isApplicant || isAdSpecialist) &&\r\n          previewAttachmentsList.length\r\n        \"\r\n      >\r\n        <br />\r\n        <div class=\"row fields\">\r\n          <h4>\r\n            <i class=\"material-icons\">label_important</i> &nbsp;Stamped Material\r\n            and Decision Forms\r\n          </h4>\r\n          <br />\r\n          <app-preview-attachments\r\n            [previewAttachmentsList]=\"previewAttachmentsList\"\r\n            [displayedColumns]=\"previewAttachmentsDisplayedColumns\"\r\n            [dataSource]=\"previewAttachmentsListDataSource\"\r\n          ></app-preview-attachments>\r\n          <div class=\"row\"><br /></div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- DECISION OVERRIDE / APPEAL -->\r\n      <!-- <div *ngIf=\"(isAdmin || isSuperAdmin) &&\r\n      s1Application?.internalStatus === 'S1_APPLICATION_REVIEWED' && s1Application?.releaseStatus === 'RELEASED' &&\r\n      !s1Application?.appliedS2 && !s1Application?.hasOngoingCompliance && !s1Application?.hasOngoingRevision\">\r\n        <br>\r\n        <div class=\"row fields\">\r\n          <h4>\r\n            <i class=\"material-icons\">label_important</i> &nbsp;DECISION OVERRIDING\r\n          </h4>\r\n          <br>\r\n          <app-decision-override [s1Application]=\"s1Application\"></app-decision-override>\r\n          <div class=\"row\"><br></div>\r\n        </div>\r\n      </div> -->\r\n\r\n      <div class=\"row\"><br /></div>\r\n\r\n      <div\r\n        class=\"row\"\r\n        [formGroup]=\"s1ApplicationForm\"\r\n        *ngIf=\"\r\n          s1Application.internalStatus == undefined ||\r\n          s1Application.internalStatus == 'SAVED' ||\r\n          s1Application?.formType === 'MULTIPLE' ||\r\n          specialApplicationType.includes(\r\n            s1Application?.applicationType?.description?.toUpperCase()\r\n          )\r\n        \"\r\n      >\r\n        <div\r\n          *ngIf=\"\r\n            (s1Application.internalStatus == undefined ||\r\n              s1Application.internalStatus == 'SAVED') &&\r\n            (s1Application?.formType === 'MULTIPLE' ||\r\n              specialApplicationType.includes(\r\n                s1Application?.applicationType?.description?.toUpperCase()\r\n              ))\r\n          \"\r\n        >\r\n          <br />\r\n          <div class=\"row fields\">\r\n            <h4>\r\n              <i class=\"material-icons\">calendar_today</i> &nbsp; Submission\r\n              Details\r\n            </h4>\r\n            <div class=\"row\">\r\n              <p>\r\n                Date S1 Form(s) will be submitted:\r\n                <b>\r\n                  <span\r\n                    class=\"submission-date\"\r\n                    *ngIf=\"applicationRequest?.status !== 'DISAPPROVED'\"\r\n                    >{{\r\n                      s1Application?.submissionDate | date: \"MMMM d, y\"\r\n                    }}</span\r\n                  >\r\n                  <span\r\n                    class=\"submission-date\"\r\n                    *ngIf=\"applicationRequest?.status === 'DISAPPROVED'\"\r\n                    >N/A - Request was disapproved</span\r\n                  >\r\n\r\n                  <input\r\n                    matInput\r\n                    [(ngModel)]=\"s1Application.submissionDate\"\r\n                    formControlName=\"submissionDate\"\r\n                    name=\"submissionDate\"\r\n                    [hidden]=\"true\"\r\n                  />\r\n                  <input\r\n                    matInput\r\n                    [(ngModel)]=\"s1Application.applicationRequest\"\r\n                    formControlName=\"applicationRequest\"\r\n                    name=\"applicationRequest\"\r\n                    [hidden]=\"true\"\r\n                  />\r\n                </b>\r\n              </p>\r\n              <div\r\n                class=\"col-md-12\"\r\n                *ngIf=\"!s1Application.applicationRequest\"\r\n                [hidden]=\"s1Application?.multipleApplication\"\r\n              >\r\n                <mat-card class=\"demo-inline-calendar-card\">\r\n                  <mat-calendar\r\n                    [(selected)]=\"s1Application.submissionDate\"\r\n                    [minDate]=\"todayDate\"\r\n                    [dateFilter]=\"disabledWeekEnds\"\r\n                    (selectedChange)=\"\r\n                      onChangeDate(s1Application.submissionDate)\r\n                    \"\r\n                  >\r\n                  </mat-calendar>\r\n                </mat-card>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div\r\n          *ngIf=\"\r\n            (s1Application.internalStatus == undefined ||\r\n              s1Application.internalStatus == 'SAVED') &&\r\n            s1Application?.formType !== 'MULTIPLE' &&\r\n            !s1Application.multipleApplication &&\r\n            !specialApplicationType.includes(\r\n              s1Application?.applicationType?.description?.toUpperCase()\r\n            )\r\n          \"\r\n        >\r\n          <mat-slide-toggle\r\n            color=\"warn\"\r\n            checked\r\n            (change)=\"scheduleSubmission()\"\r\n            *ngIf=\"s1Application.autoSubmit == true\"\r\n          >\r\n            <b>SCHEDULE SUBMISSION</b>\r\n          </mat-slide-toggle>\r\n          <mat-slide-toggle\r\n            color=\"warn\"\r\n            (change)=\"scheduleSubmission()\"\r\n            *ngIf=\"s1Application.autoSubmit != true\"\r\n          >\r\n            <b>SCHEDULE SUBMISSION</b>\r\n          </mat-slide-toggle>\r\n          <div class=\"row\"><br /></div>\r\n\r\n          <div class=\"row fields\" *ngIf=\"isChecked == true\">\r\n            <h4>\r\n              <i class=\"material-icons\">schedule_send</i> &nbsp; Submission\r\n              Details:\r\n            </h4>\r\n            <div class=\"row\">\r\n              <mat-form-field appearance=\"outline\" class=\"col-md-6\">\r\n                <mat-label>Date</mat-label>\r\n                <input\r\n                  matInput\r\n                  placeholder=\"Date\"\r\n                  [matDatepicker]=\"dp3\"\r\n                  [min]=\"todayDate\"\r\n                  (dateChange)=\"onChangeDate($event.value)\"\r\n                  [matDatepickerFilter]=\"disabledWeekEnds\"\r\n                  readonly\r\n                  [(ngModel)]=\"s1Application.submissionDate\"\r\n                  name=\"submissionDate\"\r\n                  formControlName=\"submissionDate\"\r\n                />\r\n                <mat-datepicker-toggle\r\n                  matSuffix\r\n                  [for]=\"dp3\"\r\n                ></mat-datepicker-toggle>\r\n                <mat-datepicker\r\n                  color=\"warn\"\r\n                  #dp3\r\n                  disabled=\"false\"\r\n                ></mat-datepicker>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"row\"><br /></div>\r\n      <hr />\r\n\r\n      <!-- For screener/Reviewer only -->\r\n      <div\r\n        class=\"row\"\r\n        [formGroup]=\"s1ApplicationForm\"\r\n        *ngIf=\"\r\n          (isScreener &&\r\n            (s1Application?.internalStatus ===\r\n              'S1_APPLICATION_VERIFIED_BY_AD_SPE' ||\r\n              s1Application?.internalStatus ===\r\n                'COMPLIANCE_DOCUMENT_VERIFIED_BY_AD_SPE' ||\r\n              s1Application?.internalStatus === 'REVISION_VERIFIED_BY_AD_SPE' ||\r\n              s1Application?.internalStatus === 'S1_APPLICATION_SCREENED' ||\r\n              s1Application?.screenerDecisionComment)) ||\r\n          (isReviewer &&\r\n            (s1Application.internalStatus === 'S1_APPLICATION_SCREENED' ||\r\n              s1Application?.internalStatus ===\r\n                'COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER' ||\r\n              s1Application?.internalStatus === 'REVISION_SCREENED' ||\r\n              s1Application?.internalStatus === 'S1_APPLICATION_REVIEWED' ||\r\n              s1Application?.reviewerDecisionComment)) ||\r\n          (isAdSpecialist && s1Application?.hasOngoingAppeal)\r\n        \"\r\n      >\r\n        <mat-form-field class=\"col-md-6\" appearance=\"outline\">\r\n          <mat-label>Decision:</mat-label>\r\n          <mat-select\r\n            [(ngModel)]=\"s1Application.decisionStatus\"\r\n            name=\"decisionStatus\"\r\n            formControlName=\"decisionStatus\"\r\n            (click)=\"clearDecisionStatus()\"\r\n            (selectionChange)=\"buttonValidation($event.value)\"\r\n          >\r\n            <mat-option value=\"APPROVED\">APPROVED FOR PRODUCTION</mat-option>\r\n            <mat-option value=\"APPROVED W/ CAUTION\"\r\n              >APPROVED WITH CAUTION</mat-option\r\n            >\r\n            <mat-option value=\"INCOMPLETE\">INCOMPLETE</mat-option>\r\n            <mat-option value=\"DISAPPROVED\">DISAPPROVED</mat-option>\r\n            <!-- <mat-option value=\"REFER TO PANEL\">REFER TO PANEL</mat-option> -->\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <!-- For AdSpe only -->\r\n      <span\r\n        *ngIf=\"\r\n          isAdSpecialist &&\r\n          s1Application?.assignedUser?.userRole.name === 'ROLE_SCREENER' &&\r\n          (s1Application?.internalStatus ===\r\n            'S1_APPLICATION_VERIFIED_BY_AD_SPE' ||\r\n            s1Application?.internalStatus ===\r\n              'COMPLIANCE_DOCUMENT_VERIFIED_BY_AD_SPE' ||\r\n            s1Application?.internalStatus === 'REVISION_VERIFIED_BY_AD_SPE')\r\n        \"\r\n        ><b class=\"material-icons\">error_outline</b>&nbsp;\r\n        <b>Assigned Screener:</b>\r\n        {{ s1Application?.assignedScreener?.firstName }}\r\n        {{ s1Application?.assignedScreener?.lastName }}\r\n        <br />\r\n        <br />\r\n      </span>\r\n\r\n      <b\r\n        *ngIf=\"\r\n          s1Application.submissionType === 'ORIGINAL' &&\r\n          isAdSpecialist &&\r\n          s1Application?.multipleApplication &&\r\n          s1Application?.multipleApplication?.countVerifiedApplicationForm !==\r\n            s1Application?.multipleApplication?.actualNumberOfApplicationForm -\r\n              1\r\n        \"\r\n        [hidden]=\"\r\n          s1Application?.internalStatus ===\r\n            'S1_APPLICATION_VERIFIED_BY_AD_SPE' ||\r\n          s1Application?.decisionStatus === 'INCOMPLETE'\r\n        \"\r\n      >\r\n        <b class=\"material-icons\">error_outline</b> Selection of Screener will\r\n        be done in the last form of multiple application.\r\n        <br />\r\n        <br />\r\n      </b>\r\n\r\n      <b\r\n        [hidden]=\"\r\n          s1Application.submissionType === 'ORIGINAL' &&\r\n          s1Application?.multipleApplication &&\r\n          s1Application?.multipleApplication?.countVerifiedApplicationForm !==\r\n            s1Application?.multipleApplication?.actualNumberOfApplicationForm -\r\n              1\r\n        \"\r\n        *ngIf=\"\r\n          isAdSpecialist &&\r\n          (s1Application.internalStatus ==\r\n            'S1_APPLICATION_VERIFIED_BY_ENCODER' ||\r\n            s1Application.internalStatus ==\r\n              'S1_APPLICATION_VERIFIED_BY_AD_SPE' ||\r\n            s1Application.internalStatus ==\r\n              'COMPLIANCE_DOCUMENT_VERIFIED_BY_ENCODER' ||\r\n            s1Application.internalStatus ==\r\n              'COMPLIANCE_DOCUMENT_VERIFIED_BY_AD_SPE' ||\r\n            s1Application.internalStatus == 'REVISION_VERIFIED_BY_ENCODER' ||\r\n            s1Application.internalStatus == 'REVISION_VERIFIED_BY_AD_SPE')\r\n        \"\r\n      >\r\n        <b class=\"material-icons\">error_outline</b> [ x ] are the number of\r\n        assigned S1 applications to the Screener.\r\n        <br />\r\n      </b>\r\n\r\n      <mat-form-field\r\n        class=\"col-md-6\"\r\n        appearance=\"outline\"\r\n        [hidden]=\"\r\n          s1Application.submissionType === 'ORIGINAL' &&\r\n          s1Application?.multipleApplication &&\r\n          s1Application?.decisionStatus !== 'INCOMPLETE' &&\r\n          s1Application?.multipleApplication?.countVerifiedApplicationForm !==\r\n            s1Application?.multipleApplication?.actualNumberOfApplicationForm -\r\n              1 &&\r\n          s1Application.internalStatus !== 'S1_APPLICATION_VERIFIED_BY_AD_SPE'\r\n        \"\r\n        *ngIf=\"\r\n          isAdSpecialist &&\r\n          (s1Application.internalStatus ==\r\n            'S1_APPLICATION_VERIFIED_BY_ENCODER' ||\r\n            s1Application.internalStatus ==\r\n              'S1_APPLICATION_VERIFIED_BY_AD_SPE' ||\r\n            s1Application.internalStatus ==\r\n              'COMPLIANCE_DOCUMENT_VERIFIED_BY_ENCODER' ||\r\n            s1Application.internalStatus ==\r\n              'COMPLIANCE_DOCUMENT_VERIFIED_BY_AD_SPE' ||\r\n            s1Application.internalStatus == 'REVISION_VERIFIED_BY_ENCODER' ||\r\n            s1Application.internalStatus == 'REVISION_VERIFIED_BY_AD_SPE')\r\n        \"\r\n      >\r\n        <mat-label>ASSIGN A SCREENER</mat-label>\r\n        <mat-select\r\n          [(ngModel)]=\"s1Application.assignedScreener\"\r\n          name=\"assignedScreener\"\r\n          (selectionChange)=\"buttonValidation($event.value)\"\r\n          [compareWith]=\"compareAssignedScreener\"\r\n        >\r\n          <mat-option *ngFor=\"let i of screenerList\" [value]=\"i\">\r\n            {{ i.firstName }} {{ i.lastName }}\r\n            <span style=\"float: right\">[ {{ i.ctr }} ]</span>\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n\r\n      <!-- For Screener only -->\r\n      <span\r\n        *ngIf=\"\r\n          s1Application.submissionType === 'ORIGINAL' &&\r\n          isScreener &&\r\n          s1Application?.actionStatus === 'ASSIGN_TO_REVIEWER'\r\n        \"\r\n        ><b class=\"material-icons\">error_outline</b>&nbsp;\r\n        <b>Assigned Reviewer:</b>\r\n        {{\r\n          s1Application?.multipleApplication\r\n            ? s1Application?.multipleApplication?.assignedReviewer?.firstName\r\n            : s1Application?.assignedUser?.firstName\r\n        }}\r\n        {{\r\n          s1Application?.multipleApplication\r\n            ? s1Application?.multipleApplication?.assignedReviewer?.lastName\r\n            : s1Application?.assignedUser?.lastName\r\n        }}\r\n        <br />\r\n        <br />\r\n      </span>\r\n\r\n      <b\r\n        *ngIf=\"\r\n          s1Application.submissionType === 'ORIGINAL' &&\r\n          isScreener &&\r\n          s1Application?.multipleApplication &&\r\n          s1Application?.multipleApplication?.countVerifiedApplicationForm !==\r\n            s1Application?.multipleApplication?.actualNumberOfApplicationForm -\r\n              1\r\n        \"\r\n        [hidden]=\"\r\n          s1Application?.internalStatus === 'S1_APPLICATION_SCREENED' ||\r\n          s1Application?.screenerDecisionComment ||\r\n          s1Application?.reviewerDecisionComment ||\r\n          s1Application?.decisionStatus === 'INCOMPLETE'\r\n        \"\r\n      >\r\n        <b class=\"material-icons\">error_outline</b> Selection of Reviewer will\r\n        be done in the last form of multiple application.\r\n        <br />\r\n        <br />\r\n      </b>\r\n\r\n      <mat-form-field\r\n        class=\"col-md-6\"\r\n        appearance=\"outline\"\r\n        [hidden]=\"\r\n          !s1Application?.screenerDecisionComment &&\r\n          s1Application.submissionType === 'ORIGINAL' &&\r\n          s1Application?.multipleApplication &&\r\n          s1Application?.multipleApplication?.countVerifiedApplicationForm !==\r\n            s1Application?.multipleApplication?.actualNumberOfApplicationForm -\r\n              1 &&\r\n          s1Application.internalStatus !== 'S1_APPLICATION_SCREENED'\r\n        \"\r\n        *ngIf=\"\r\n          isScreener &&\r\n          (s1Application?.internalStatus ===\r\n            'S1_APPLICATION_VERIFIED_BY_AD_SPE' ||\r\n            s1Application?.internalStatus === 'S1_APPLICATION_SCREENED' ||\r\n            s1Application?.screenerDecisionComment ||\r\n            s1Application?.reviewerDecisionComment)\r\n        \"\r\n      >\r\n        <mat-label>ASSIGN A REVIEWER</mat-label>\r\n        <mat-select\r\n          name=\"assignedUserR\"\r\n          [(ngModel)]=\"s1Application.assignedReviewer\"\r\n          (selectionChange)=\"buttonValidation('')\"\r\n          [compareWith]=\"compareAssignedReviewer\"\r\n        >\r\n          <mat-option *ngFor=\"let i of reviewerList\" [value]=\"i\">\r\n            {{ i.firstName }} {{ i.lastName }}\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n\r\n      <!-- For screener/Reviewer only -->\r\n      <div\r\n        class=\"row\"\r\n        [formGroup]=\"s1ApplicationForm\"\r\n        *ngIf=\"\r\n          (isScreener &&\r\n            (s1Application?.internalStatus ===\r\n              'S1_APPLICATION_VERIFIED_BY_AD_SPE' ||\r\n              s1Application?.internalStatus ===\r\n                'COMPLIANCE_DOCUMENT_VERIFIED_BY_AD_SPE' ||\r\n              s1Application?.internalStatus === 'REVISION_VERIFIED_BY_AD_SPE' ||\r\n              s1Application?.internalStatus === 'S1_APPLICATION_SCREENED' ||\r\n              s1Application?.screenerDecisionComment)) ||\r\n          (isReviewer &&\r\n            (s1Application.internalStatus === 'S1_APPLICATION_SCREENED' ||\r\n              s1Application?.internalStatus ===\r\n                'COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER' ||\r\n              s1Application?.internalStatus === 'REVISION_SCREENED' ||\r\n              s1Application?.internalStatus === 'S1_APPLICATION_REVIEWED' ||\r\n              s1Application?.reviewerDecisionComment))\r\n        \"\r\n      >\r\n        <div class=\"rational-other-comment\">\r\n          <div\r\n            class=\"col-md-6 rationale\"\r\n            *ngIf=\"rationaleDisplay\"\r\n            [hidden]=\"\r\n              rationaleLists?.length === 0 && rationaleOthersList?.length === 0\r\n            \"\r\n          >\r\n            <label>RATIONALE</label>\r\n            <div class=\"rationale-list\" [hidden]=\"rationaleLists?.length === 0\">\r\n              <label>Rationale List:</label>\r\n              <div *ngFor=\"let i of rationaleLists\">\r\n                <p>\r\n                  <span class=\"material-icons\">help</span>\r\n                  {{ i?.typeOfRationale?.rationale }}\r\n                </p>\r\n              </div>\r\n            </div>\r\n\r\n            <div\r\n              class=\"rational-other-comment\"\r\n              [hidden]=\"rationaleOthersList?.length === 0\"\r\n            >\r\n              <label>Other comments:</label>\r\n              <p *ngFor=\"let i of rationaleOthersList\">\r\n                <span class=\"material-icons\" [hidden]=\"i?.others === ''\"\r\n                  >help</span\r\n                >\r\n                {{ i?.others }}\r\n              </p>\r\n            </div>\r\n          </div>\r\n          <br />\r\n        </div>\r\n\r\n        <mat-form-field\r\n          class=\"col-md-6\"\r\n          appearance=\"outline\"\r\n          [hidden]=\"\r\n            s1Application.submissionType === 'ORIGINAL' &&\r\n            s1Application?.multipleApplication &&\r\n            s1Application?.multipleApplication?.countVerifiedApplicationForm !==\r\n              s1Application?.multipleApplication\r\n                ?.actualNumberOfApplicationForm -\r\n                1\r\n          \"\r\n          *ngIf=\"\r\n            !applicationSingleMedia?.mediumExecution?.typeOfExecution\r\n              ?.applyForToa &&\r\n            applicationSingleMedia?.mediumExecution?.typeOfExecution?.live\r\n          \"\r\n        >\r\n          <mat-label>Choose validity date</mat-label>\r\n          <input\r\n            matInput\r\n            placeholder=\"Date\"\r\n            [matDatepicker]=\"validityDate\"\r\n            readonly\r\n            [min]=\"todayDate\"\r\n            [(ngModel)]=\"s1Application.validUntil\"\r\n            name=\"expiresOn\"\r\n            formControlName=\"validityDate\"\r\n            [readonly]=\"true\"\r\n          />\r\n          <mat-datepicker-toggle matSuffix [for]=\"validityDate\">\r\n            <mat-datepicker color=\"warn\" #validityDate></mat-datepicker>\r\n          </mat-datepicker-toggle>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n          <!-- ADMIN / SUPERADMIN - RELEASED -->\r\n          <button\r\n            mat-raised-button\r\n            class=\"button-red\"\r\n            (click)=\"resendDecision()\"\r\n            *ngIf=\"\r\n              s1Application?.releaseStatus === 'RELEASED' &&\r\n              (isAdmin || isSuperAdmin)\r\n            \"\r\n          >\r\n            <i class=\"material-icons color__white\">send</i> RESEND DECISION\r\n          </button>\r\n\r\n          <!-- ADMIN / SUPERADMIN -->\r\n          <!-- wala talaga function isa kasi pang mat tool tip lang - start -->\r\n          <button\r\n            mat-raised-button\r\n            class=\"button-red\"\r\n            *ngIf=\"\r\n              (isAdmin || isSuperAdmin) &&\r\n              (!applicationSingleMedia?.sizeLength ||\r\n                +applicationSingleMedia?.sizeLength === +currentSizeLength) &&\r\n              !hasMultimediaLengthChange &&\r\n              (s1Application?.decisionStatus === 'APPROVED' ||\r\n                s1Application?.decisionStatus === 'APPROVED_WITH_CAUTION')\r\n            \"\r\n            matTooltip=\"To enable this button, change the size/length of the application\"\r\n          >\r\n            <i class=\"material-icons color__white\">assignment_return</i>\r\n            &nbsp;SUBMIT FOR MODIFICATION\r\n          </button>\r\n          <button\r\n            mat-raised-button\r\n            class=\"button-red\"\r\n            (click)=\"resubmitApplication()\"\r\n            *ngIf=\"\r\n              (isAdmin || isSuperAdmin) &&\r\n              ((applicationSingleMedia?.sizeLength &&\r\n                +applicationSingleMedia?.sizeLength !== +currentSizeLength) ||\r\n                hasMultimediaLengthChange) &&\r\n              (s1Application?.decisionStatus === 'APPROVED' ||\r\n                s1Application?.decisionStatus === 'APPROVED_WITH_CAUTION')\r\n            \"\r\n          >\r\n            <i class=\"material-icons color__white\">assignment_return</i>\r\n            &nbsp;SUBMIT FOR MODIFICATION\r\n          </button>\r\n          <!-- wala talaga function isa kasi pang mat tool tip lang - end -->\r\n\r\n          <!-- ADMIN / SUPERADMIN - RELEASED -->\r\n          <button\r\n            mat-raised-button\r\n            class=\"button-red\"\r\n            (click)=\"submitAppeal()\"\r\n            *ngIf=\"\r\n              (isAdmin || isSuperAdmin) &&\r\n              s1Application?.internalStatus === 'S1_APPLICATION_REVIEWED' &&\r\n              s1Application?.releaseStatus === 'RELEASED' &&\r\n              !s1Application?.appliedS2 &&\r\n              !s1Application?.hasOngoingCompliance &&\r\n              !s1Application?.hasOngoingRevision &&\r\n              !s1Application?.hasOngoingAppeal\r\n            \"\r\n          >\r\n            <i class=\"material-icons color__white\">report_gmailerrorred</i>\r\n            &nbsp;RETURN TO ADSPE FOR APPEAL\r\n          </button>\r\n\r\n          <!-- APPEAL - ADSPE -->\r\n          <button\r\n            mat-raised-button\r\n            class=\"button-red\"\r\n            (click)=\"submitAppeal()\"\r\n            *ngIf=\"isAdSpecialist && s1Application?.hasOngoingAppeal\"\r\n          >\r\n            <i class=\"material-icons color__white\">report_gmailerrorred</i>\r\n            &nbsp;VERIFY APPEAL\r\n          </button>\r\n\r\n          <!-- ADSPE / ADMIN / SUPERADMIN - FOR RELEASE -->\r\n          <button\r\n            mat-raised-button\r\n            class=\"button-red\"\r\n            (click)=\"returnToScreener()\"\r\n            *ngIf=\"\r\n              (isAdSpecialist || isAdmin || isSuperAdmin) &&\r\n              s1Application?.internalStatus === 'S1_APPLICATION_REVIEWED' &&\r\n              s1Application?.releaseStatus === 'FOR_RELEASE'\r\n            \"\r\n          >\r\n            <i class=\"material-icons color__white\">assignment_return</i>\r\n            &nbsp;RETURN TO SCREENER\r\n          </button>\r\n\r\n          <!-- screenerDecisionComment -->\r\n          <button\r\n            mat-raised-button\r\n            class=\"button-red\"\r\n            (click)=\"submitDecisionAndComment()\"\r\n            *ngIf=\"isScreener && s1Application?.screenerDecisionComment\"\r\n          >\r\n            <i class=\"material-icons color__white\">fact_check</i> SCREENED\r\n          </button>\r\n\r\n          <!-- reviewerDecisionComment -->\r\n          <button\r\n            mat-raised-button\r\n            class=\"button-red\"\r\n            (click)=\"submitDecisionAndComment()\"\r\n            *ngIf=\"isReviewer && s1Application?.reviewerDecisionComment\"\r\n          >\r\n            <i class=\"material-icons color__white\">assignment_turned_in</i>\r\n            REVIEWED\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- //////////////////////////////////////// ORIGINAL //////////////////////////////////////////////////////////// -->\r\n      <div\r\n        class=\"row\"\r\n        *ngIf=\"\r\n          s1Application?.internalStatus == undefined ||\r\n          s1Application?.internalStatus == 'SAVED' ||\r\n          s1Application?.status == 'APPROVED'\r\n        \"\r\n      >\r\n        <div class=\"col-md-12\">\r\n          <!-- <button mat-raised-button color=\"primary\" (click)=\"saveOrUpdateApplication('SAVED')\" -->\r\n          <button\r\n            mat-raised-button\r\n            color=\"primary\"\r\n            (click)=\"checkAscRateBeforeSaveOrSubmit()\"\r\n            *ngIf=\"!isEvaluator\"\r\n            [disabled]=\"\r\n              s1Application?.formType === 'MULTIPLE'\r\n                ? isMultipleRegularDisabled()\r\n                : isSingleRegularDisabled()\r\n            \"\r\n          >\r\n            <i class=\"material-icons color__white\">offline_pin</i> SAVE\r\n          </button>\r\n          &nbsp;\r\n          <!-- (click)=\"saveStatus('presentor', 'submit', 'S1_APPLICATION_SUBMITTED')\" -->\r\n          <button\r\n            mat-raised-button\r\n            class=\"button-red\"\r\n            (click)=\"checkAscRateBeforeSaveOrSubmit('submit')\"\r\n            [hidden]=\"\r\n              specialApplicationType.includes(\r\n                s1Application?.applicationType?.description?.toUpperCase()\r\n              )\r\n            \"\r\n            [disabled]=\"\r\n              s1Application?.formType === 'MULTIPLE'\r\n                ? isMultipleRegularDisabled()\r\n                : isSingleRegularDisabled()\r\n            \"\r\n          >\r\n            <i class=\"material-icons color__white\">send</i> SUBMIT\r\n          </button>\r\n\r\n          <button\r\n            *ngIf=\"\r\n              specialApplicationType.includes(\r\n                s1Application?.applicationType?.description?.toUpperCase()\r\n              ) &&\r\n              !applicationRequest?.status &&\r\n              s1Application.applicationRequest == null\r\n            \"\r\n            mat-raised-button\r\n            class=\"button-red\"\r\n            (click)=\"requestSpecialS1ApplicationApproval()\"\r\n            [disabled]=\"isSaveAndRequestForApprovalDisabled() \"\r\n          >\r\n            <i class=\"material-icons color__white\">send</i> REQUEST FOR APPROVAL\r\n          </button>\r\n        </div>\r\n\r\n        <!-- <div class=\"col-md-12\" *ngIf=\"(s1Application?.formType === 'MULTIPLE' && !s1Application.multipleApplication) \">\r\n          <button mat-raised-button class=\"button-red\" (click)=\"saveOrUpdateApplication('S1_APPLICATION_SUBMITTED')\"\r\n            [disabled]=\"!s1Application?.adTitle || !s1Application.submissionDate\">\r\n            <i class=\"material-icons color__white\">send</i> REQUEST FOR APPROVAL\r\n          </button>\r\n        </div> -->\r\n      </div>\r\n\r\n      <div\r\n        class=\"row\"\r\n        *ngIf=\"\r\n          isApplicant &&\r\n          s1Application?.internalStatus == 'S1_APPLICATION_SUBMITTED'\r\n        \"\r\n      >\r\n        <div class=\"col-md-12\">\r\n          <button\r\n            mat-raised-button\r\n            class=\"button-red\"\r\n            (click)=\"\r\n              saveStatus('presentor', 'cancel', 'S1_APPLICATION_CANCELLED')\r\n            \"\r\n          >\r\n            <i class=\"material-icons color__white\">cancel</i> CANCEL APPLICATION\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div\r\n        class=\"row\"\r\n        *ngIf=\"\r\n          isEvaluator &&\r\n          s1Application.internalStatus == 'S1_APPLICATION_SUBMITTED'\r\n        \"\r\n      >\r\n        <b\r\n          class=\"warning-msg\"\r\n          *ngIf=\"\r\n            s1Application?.company?.status === 'FOR_APPROVAL' ||\r\n            s1Application?.brand?.status === 'FOR_APPROVAL' ||\r\n            s1Application?.product?.status === 'FOR_APPROVAL'\r\n          \"\r\n        >\r\n          <b class=\"material-icons\">error_outline</b> New Company / Brand /\r\n          Product must be approved first before you can forward the application.\r\n        </b>\r\n        <div class=\"col-md-12\">\r\n          <button\r\n            mat-raised-button\r\n            class=\"button-red\"\r\n            [disabled]=\"\r\n              s1Application?.company?.status === 'FOR_APPROVAL' ||\r\n              s1Application?.brand?.status === 'FOR_APPROVAL' ||\r\n              s1Application?.product?.status === 'FOR_APPROVAL'\r\n            \"\r\n            (click)=\"\r\n              saveStatus(\r\n                'encoder',\r\n                'verify',\r\n                'S1_APPLICATION_VERIFIED_BY_ENCODER'\r\n              )\r\n            \"\r\n          >\r\n            <i class=\"material-icons color__white\">verified</i> FORWARD TO AD\r\n            SPECIALIST\r\n          </button>\r\n          &nbsp;\r\n          <button\r\n            mat-raised-button\r\n            class=\"button-red\"\r\n            (click)=\"rejectDisapprovedModal()\"\r\n          >\r\n            <!-- (click)=\"rejectDisapprovedModal('encoder', 'reject', 'S1_APPLICATION_REJECTED')\" -->\r\n            <i class=\"material-icons color__white\">unpublished</i> REJECT\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- MULTIPLE -->\r\n      <div\r\n        class=\"row\"\r\n        *ngIf=\"\r\n          s1Application.submissionType === 'ORIGINAL' &&\r\n          s1Application?.formType === 'MULTIPLE' &&\r\n          s1Application?.decisionStatus !== 'INCOMPLETE'\r\n        \"\r\n      >\r\n        <div class=\"col-md-12\">\r\n          <ng-template [ngTemplateOutlet]=\"reAssignAdSpecialistTemp\"></ng-template>\r\n          <button\r\n            mat-raised-button\r\n            class=\"button-red\"\r\n            *ngIf=\"\r\n              isAdSpecialist &&\r\n              s1Application?.actionStatus === 'ASSIGN_TO_ADSPE'\r\n            \"\r\n            (click)=\"\r\n              saveStatus(\r\n                'ad-specialist',\r\n                'verify',\r\n                'S1_APPLICATION_VERIFIED_BY_AD_SPE'\r\n              )\r\n            \"\r\n          >\r\n            <i class=\"material-icons color__white\">verified</i> FORWARD TO\r\n            SCREENER\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div\r\n        class=\"row\"\r\n        *ngIf=\"\r\n          isAdSpecialist &&\r\n          (s1Application?.internalStatus ==\r\n            'S1_APPLICATION_VERIFIED_BY_ENCODER' ||\r\n            s1Application?.internalStatus ==\r\n              'S1_APPLICATION_VERIFIED_BY_AD_SPE')\r\n        \"\r\n      >\r\n        <div class=\"col-md-12\">\r\n          <!-- NOT MULTIPLE -->\r\n          <ng-template [ngTemplateOutlet]=\"reAssignAdSpecialistTemp\"></ng-template>\r\n          <button\r\n            mat-raised-button\r\n            class=\"button-red\"\r\n            *ngIf=\"\r\n              isAdSpecialist &&\r\n              s1Application?.actionStatus === 'ASSIGN_TO_ADSPE'\r\n            \"\r\n            (click)=\"\r\n              saveStatus(\r\n                'ad-specialist',\r\n                'verify',\r\n                'S1_APPLICATION_VERIFIED_BY_AD_SPE'\r\n              )\r\n            \"\r\n            [disabled]=\"buttonDisabled\"\r\n            [hidden]=\"s1Application?.formType === 'MULTIPLE'\"\r\n          >\r\n            <i class=\"material-icons color__white\">verified</i> FORWARD TO\r\n            SCREENER\r\n          </button>\r\n\r\n          <button\r\n            mat-raised-button\r\n            class=\"button-red\"\r\n            *ngIf=\"\r\n              isAdSpecialist &&\r\n              (s1Application?.actionStatus === 'ASSIGN_TO_SCREENER' ||\r\n                s1Application?.actionStatus === 'ASSIGN_TO_HOLD') &&\r\n              s1Application?.internalStatus ===\r\n                'S1_APPLICATION_VERIFIED_BY_AD_SPE'\r\n            \"\r\n            (click)=\"reassign()\"\r\n            [disabled]=\"buttonDisabled\"\r\n          >\r\n            <i class=\"material-icons color__white\">verified</i> RE-ASSIGN\r\n            SCREENER\r\n          </button>\r\n          &nbsp;\r\n          <!-- <button mat-raised-button class=\"button-red\"\r\n            (click)=\"rejectDisapprovedModal('encoder', 'reject', 'S1_APPLICATION_REJECTED')\">\r\n            (click)=\"saveStatus('ad-specialist','reject','S1_APPLICATION_REJECTED')\">\r\n            <i class=\"material-icons color__white\">unpublished</i> REJECT\r\n          </button> -->\r\n        </div>\r\n      </div>\r\n\r\n      <!-- AD SPECIALIST ONLY-->\r\n      <div class=\"row mt-4\">\r\n        <mat-form-field\r\n          class=\"col-md-6\"\r\n          appearance=\"outline\"\r\n          [hidden]=\"\r\n            s1Application.submissionType === 'ORIGINAL' &&\r\n            s1Application?.multipleApplication &&\r\n            s1Application?.decisionStatus !== 'INCOMPLETE' &&\r\n            s1Application?.multipleApplication?.countVerifiedApplicationForm !==\r\n              s1Application?.multipleApplication\r\n                ?.actualNumberOfApplicationForm -\r\n                1 &&\r\n            s1Application.internalStatus !== 'S1_APPLICATION_VERIFIED_BY_AD_SPE'\r\n          \"\r\n          *ngIf=\"\r\n            isAdSpecialist &&\r\n            (s1Application.internalStatus ==\r\n              'S1_APPLICATION_VERIFIED_BY_ENCODER' ||\r\n              s1Application.internalStatus ==\r\n                'S1_APPLICATION_VERIFIED_BY_AD_SPE' ||\r\n              s1Application.internalStatus ==\r\n                'COMPLIANCE_DOCUMENT_VERIFIED_BY_ENCODER' ||\r\n              s1Application.internalStatus ==\r\n                'COMPLIANCE_DOCUMENT_VERIFIED_BY_AD_SPE' ||\r\n              s1Application.internalStatus == 'REVISION_VERIFIED_BY_ENCODER' ||\r\n              s1Application.internalStatus == 'REVISION_VERIFIED_BY_AD_SPE')\r\n          \"\r\n        >\r\n          <mat-label>REASSIGN AD SPECIALIST</mat-label>\r\n          <mat-select\r\n            [(ngModel)]=\"s1Application.assignedAdSpecialist\"\r\n            name=\"assignedAdSpecialist\"\r\n            (selectionChange)=\"buttonValidation($event.value)\"\r\n            [compareWith]=\"compareAssignedAdSpec\"\r\n          >\r\n            <mat-option *ngFor=\"let i of adSpecialistList\" [value]=\"i\">\r\n              {{ i.firstName }} {{ i.lastName }}\r\n              <span style=\"float: right\">[ {{ i.ctr }} ]</span>\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <!-- MULTIPLE -->\r\n      <div\r\n        class=\"row\"\r\n        *ngIf=\"\r\n          s1Application.submissionType === 'ORIGINAL' &&\r\n          s1Application?.formType === 'MULTIPLE' &&\r\n          s1Application?.internalStatus === 'S1_APPLICATION_VERIFIED_BY_AD_SPE'\r\n        \"\r\n      >\r\n        <div class=\"col-md-12\">\r\n          <button\r\n            mat-raised-button\r\n            class=\"button-red\"\r\n            *ngIf=\"\r\n              isScreener && s1Application?.actionStatus === 'ASSIGN_TO_SCREENER'\r\n            \"\r\n            (click)=\"\r\n              saveStatus('screener', 'verify', 'S1_APPLICATION_SCREENED')\r\n            \"\r\n            [disabled]=\"!s1Application.decisionStatus\"\r\n          >\r\n            <i class=\"material-icons color__white\">fact_check</i> SCREENED\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div\r\n        class=\"row\"\r\n        *ngIf=\"\r\n          isScreener &&\r\n          (s1Application.internalStatus ==\r\n            'S1_APPLICATION_VERIFIED_BY_AD_SPE' ||\r\n            s1Application.internalStatus == 'S1_APPLICATION_SCREENED')\r\n        \"\r\n      >\r\n        <div class=\"col-md-12\">\r\n          <button\r\n            mat-raised-button\r\n            class=\"button-red\"\r\n            *ngIf=\"\r\n              isScreener && s1Application?.actionStatus === 'ASSIGN_TO_SCREENER'\r\n            \"\r\n            (click)=\"\r\n              saveStatus('screener', 'verify', 'S1_APPLICATION_SCREENED')\r\n            \"\r\n            [disabled]=\"buttonDisabled || !s1Application.decisionStatus\"\r\n            [hidden]=\"s1Application?.formType === 'MULTIPLE'\"\r\n          >\r\n            <i class=\"material-icons color__white\">fact_check</i> SCREENED\r\n          </button>\r\n          <button\r\n            mat-raised-button\r\n            class=\"button-red\"\r\n            *ngIf=\"\r\n              isScreener && s1Application?.actionStatus === 'ASSIGN_TO_REVIEWER'\r\n            \"\r\n            (click)=\"reassign()\"\r\n            [disabled]=\"buttonDisabled\"\r\n          >\r\n            <i class=\"material-icons color__white\">fact_check</i> RE-ASSIGN\r\n            REVIEWER\r\n          </button>\r\n          <button\r\n            mat-raised-button\r\n            class=\"button-red\"\r\n            (click)=\"returnTo('ADSPE', 'S1_APPLICATION_VERIFIED_BY_ENCODER')\"\r\n            [disabled]=\"\"\r\n            [hidden]=\"s1Application?.formType === 'MULTIPLE'\"\r\n          >\r\n            <i class=\"material-icons color__white\">assignment_return</i>\r\n            &nbsp;RETURN TO AD SPECIALIST\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div\r\n        class=\"row\"\r\n        *ngIf=\"\r\n          !s1Application?.reviewerDecisionComment &&\r\n          isReviewer &&\r\n          (s1Application?.internalStatus == 'S1_APPLICATION_SCREENED' ||\r\n            s1Application?.internalStatus === 'S1_APPLICATION_REVIEWED' ||\r\n            s1Application?.internalStatus ===\r\n              'COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER')\r\n        \"\r\n      >\r\n        <div class=\"col-md-12\">\r\n          <button\r\n            mat-raised-button\r\n            class=\"button-red\"\r\n            [disabled]=\"!s1Application.decisionStatus\"\r\n            (click)=\"\r\n              saveStatus('reviewer', 'verify', 'S1_APPLICATION_REVIEWED')\r\n            \"\r\n          >\r\n            <i class=\"material-icons color__white\">assignment_turned_in</i>\r\n            REVIEWED\r\n          </button>\r\n          <button\r\n            mat-raised-button\r\n            class=\"button-red\"\r\n            (click)=\"returnTo('SCREENER', 'S1_APPLICATION_VERIFIED_BY_AD_SPE')\"\r\n            [disabled]=\"\"\r\n            [hidden]=\"s1Application?.formType === 'MULTIPLE'\"\r\n          >\r\n            <i class=\"material-icons color__white\">assignment_return</i>\r\n            &nbsp;RETURN TO SCREENER\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- //////////////////////////////////////// FOR COMPLIANCE //////////////////////////////////////////////////////////// -->\r\n      <div\r\n        class=\"row\"\r\n        *ngIf=\"\r\n          isApplicant &&\r\n          !s1Application?.hasOngoingRevision &&\r\n          !s1Application?.hasOngoingCompliance &&\r\n          s1Application?.decisionStatus == 'INCOMPLETE' &&\r\n          (s1Application?.internalStatus == 'S1_APPLICATION_REVIEWED' ||\r\n            s1Application?.internalStatus ==\r\n              'COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER' ||\r\n            s1Application?.internalStatus == 'REVISION_SCREENED' ||\r\n            s1Application?.internalStatus == 'S1_APPLICATION_REJECTED')\r\n        \"\r\n      >\r\n        <b\r\n          ><b class=\"material-icons info-msg\">error_outline</b> Applicant can\r\n          submit updated or additional supporting documents for S1 Forms with\r\n          Incomplete Decision.</b\r\n        >\r\n        <div class=\"col-md-12\">\r\n          <br />\r\n          <button\r\n            mat-raised-button\r\n            class=\"button-red\"\r\n            (click)=\"\r\n              saveStatusForCompliance(\r\n                'presentor',\r\n                'submit',\r\n                'SUBMITTED_DOCUMENT_FOR_COMPLIANCE'\r\n              )\r\n            \"\r\n          >\r\n            <i class=\"material-icons color__white\">task_alt</i> SUBMIT FOR\r\n            COMPLIANCE\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div\r\n        class=\"row\"\r\n        *ngIf=\"\r\n          isEvaluator &&\r\n          s1Application.internalStatus == 'SUBMITTED_DOCUMENT_FOR_COMPLIANCE'\r\n        \"\r\n      >\r\n        <div class=\"col-md-12\">\r\n          <button\r\n            mat-raised-button\r\n            class=\"button-red\"\r\n            [disabled]=\"\r\n              s1Application?.company?.status === 'FOR_APPROVAL' ||\r\n              s1Application?.brand?.status === 'FOR_APPROVAL' ||\r\n              s1Application?.product?.status === 'FOR_APPROVAL'\r\n            \"\r\n            (click)=\"\r\n              saveStatusForCompliance(\r\n                'encoder',\r\n                'verify',\r\n                'COMPLIANCE_DOCUMENT_VERIFIED_BY_ENCODER'\r\n              )\r\n            \"\r\n          >\r\n            <i class=\"material-icons color__white\">verified</i> FORWARD TO AD\r\n            SPECIALIST\r\n          </button>\r\n          &nbsp;\r\n          <button\r\n            mat-raised-button\r\n            class=\"button-red\"\r\n            (click)=\"rejectDisapprovedModal()\"\r\n          >\r\n            <!-- (click)=\"rejectDisapprovedModal('encoder','reject','S1_APPLICATION_REJECTED')\" -->\r\n            <i class=\"material-icons color__white\">unpublished</i> REJECT\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div\r\n        class=\"row\"\r\n        *ngIf=\"\r\n          isAdSpecialist &&\r\n          (s1Application?.internalStatus ==\r\n            'COMPLIANCE_DOCUMENT_VERIFIED_BY_ENCODER' ||\r\n            s1Application?.internalStatus ==\r\n              'COMPLIANCE_DOCUMENT_VERIFIED_BY_AD_SPE')\r\n        \"\r\n      >\r\n        <div class=\"col-md-12\">\r\n          <ng-template [ngTemplateOutlet]=\"reAssignAdSpecialistTemp\"></ng-template>\r\n          <button\r\n            mat-raised-button\r\n            class=\"button-red\"\r\n            (click)=\"\r\n              saveStatusForCompliance(\r\n                'ad-specialist',\r\n                'verify',\r\n                'COMPLIANCE_DOCUMENT_VERIFIED_BY_AD_SPE'\r\n              )\r\n            \"\r\n          >\r\n            <i class=\"material-icons color__white\">verified</i> FORWARD TO\r\n            SCREENER\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div\r\n        class=\"row\"\r\n        *ngIf=\"\r\n          isScreener &&\r\n          s1Application?.internalStatus ==\r\n            'COMPLIANCE_DOCUMENT_VERIFIED_BY_AD_SPE'\r\n        \"\r\n      >\r\n        <div class=\"col-md-12\">\r\n          <button\r\n            mat-raised-button\r\n            class=\"button-red\"\r\n            (click)=\"\r\n              saveStatusForCompliance(\r\n                'screener',\r\n                'verify',\r\n                'COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER'\r\n              )\r\n            \"\r\n          >\r\n            <i class=\"material-icons color__white\">fact_check</i> SCREENED\r\n          </button>\r\n          <button\r\n            mat-raised-button\r\n            class=\"button-red\"\r\n            (click)=\"\r\n              returnTo('ADSPE', 'COMPLIANCE_DOCUMENT_VERIFIED_BY_ENCODER')\r\n            \"\r\n            [disabled]=\"\"\r\n          >\r\n            <i class=\"material-icons color__white\">assignment_return</i>\r\n            &nbsp;RETURN TO AD SPECIALIST\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- //////////////////////////////////////// REVISION //////////////////////////////////////////////////////////// -->\r\n      <div\r\n        class=\"row\"\r\n        *ngIf=\"\r\n          s1Application?.revisionNo !== 2 &&\r\n          s1Application?.submissionType === 'ORIGINAL' &&\r\n          !s1Application?.hasOngoingRevision &&\r\n          !s1Application?.hasOngoingCompliance &&\r\n          !s1Application?.appliedS2 &&\r\n          isApplicant &&\r\n          (s1Application?.internalStatus === 'S1_APPLICATION_REVIEWED' ||\r\n            s1Application?.internalStatus ==\r\n              'COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER') &&\r\n          (s1Application?.decisionStatus == 'APPROVED' ||\r\n            s1Application?.decisionStatus == 'APPROVED W/ CAUTION')\r\n        \"\r\n      >\r\n        <b>\r\n          <br />\r\n          <b class=\"material-icons info-msg\">error_outline</b> Applicant can\r\n          submit Approved S1 Form for Revision Request with revision letter, new\r\n          main document, and new supporting document (if needed).\r\n        </b>\r\n        <div class=\"col-md-12\">\r\n          <br />\r\n          <button\r\n            mat-raised-button\r\n            class=\"button-red\"\r\n            (click)=\"\r\n              saveStatusRevision('presentor', 'submit', 'SUBMITTED_REVISION')\r\n            \"\r\n            [disabled]=\"\r\n              !s1Application?.revisionLetterAttachmentReference &&\r\n              !attachmentDocuments[2]?.revisionLetterAttachmentReference\r\n            \"\r\n          >\r\n            <i class=\"material-icons color__white\">task_alt</i> SUBMIT REVISION\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div\r\n        class=\"row\"\r\n        *ngIf=\"\r\n          isEvaluator && s1Application.internalStatus == 'SUBMITTED_REVISION'\r\n        \"\r\n      >\r\n        <div class=\"col-md-12\">\r\n          <button\r\n            mat-raised-button\r\n            class=\"button-red\"\r\n            [disabled]=\"\r\n              s1Application?.company?.status === 'FOR_APPROVAL' ||\r\n              s1Application?.brand?.status === 'FOR_APPROVAL' ||\r\n              s1Application?.product?.status === 'FOR_APPROVAL'\r\n            \"\r\n            (click)=\"\r\n              saveStatusRevision(\r\n                'encoder',\r\n                'verify',\r\n                'REVISION_VERIFIED_BY_ENCODER'\r\n              )\r\n            \"\r\n          >\r\n            <i class=\"material-icons color__white\">verified</i> FORWARD TO AD\r\n            SPECIALIST\r\n          </button>\r\n          &nbsp;\r\n          <button\r\n            mat-raised-button\r\n            class=\"button-red\"\r\n            (click)=\"rejectDisapprovedModal()\"\r\n          >\r\n            <!-- (click)=\"rejectDisapprovedModal('encoder','reject','S1_APPLICATION_REJECTED')\" -->\r\n            <i class=\"material-icons color__white\">unpublished</i> REJECT\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div\r\n        class=\"row\"\r\n        *ngIf=\"\r\n          isAdSpecialist &&\r\n          (s1Application.internalStatus == 'REVISION_VERIFIED_BY_ENCODER' ||\r\n            s1Application?.internalStatus == 'REVISION_VERIFIED_BY_AD_SPE')\r\n        \"\r\n      >\r\n        <div class=\"col-md-12\">\r\n          <ng-template [ngTemplateOutlet]=\"reAssignAdSpecialistTemp\"></ng-template>\r\n          <button\r\n            mat-raised-button\r\n            class=\"button-red\"\r\n            (click)=\"\r\n              saveStatusRevision(\r\n                'ad-specialist',\r\n                'verify',\r\n                'REVISION_VERIFIED_BY_AD_SPE'\r\n              )\r\n            \"\r\n          >\r\n            <i class=\"material-icons color__white\">verified</i> FORWARD TO\r\n            SCREENER\r\n          </button>\r\n          <!--  &nbsp;\r\n          <button mat-raised-button class=\"button-red\"\r\n            (click)=\"saveStatus('ad-specialist','reject','S1_APPLICATION_REJECTED')\">\r\n            <i class=\"material-icons color__white\">unpublished</i> REJECT\r\n          </button> -->\r\n        </div>\r\n      </div>\r\n\r\n      <div\r\n        class=\"row\"\r\n        *ngIf=\"\r\n          isScreener &&\r\n          s1Application.internalStatus == 'REVISION_VERIFIED_BY_AD_SPE'\r\n        \"\r\n      >\r\n        <div class=\"col-md-12\">\r\n          <button\r\n            mat-raised-button\r\n            class=\"button-red\"\r\n            (click)=\"\r\n              saveStatusRevision('screener', 'verify', 'REVISION_SCREENED')\r\n            \"\r\n          >\r\n            <i class=\"material-icons color__white\">fact_check</i> SCREENED\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</form>\r\n<!-- </form> -->\r\n\r\n<ng-template #reAssignAdSpecialistTemp>\r\n  <button\r\n    mat-raised-button\r\n    class=\"button-red\"\r\n    *ngIf=\"isAdSpecialist\"\r\n    (click)=\"reassignAdSpecialist()\"\r\n    [disabled]=\"buttonDisabled\"\r\n    [hidden]=\"s1Application?.formType === 'MULTIPLE'\"\r\n  >\r\n    <i class=\"material-icons color__white\">verified</i> RE-ASSIGN AD\r\n    SPECIALIST\r\n  </button>\r\n</ng-template>\r\n");

/***/ }),

/***/ "JXVE":
/*!**********************************************************************************************************************************************************!*\
  !*** ./src/app/modules/pages/applications/schedule-of-fees/multiple-applications/modal-multiple-applications/modal-multiple-applications.component.scss ***!
  \**********************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("span {\n  color: red;\n}\n\n.grandTotal {\n  font-weight: 900;\n  float: right;\n  padding-right: 20%;\n}\n\n.numbers-input {\n  text-align: end;\n}\n\n.total {\n  font-weight: 900;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9wYWdlcy9hcHBsaWNhdGlvbnMvc2NoZWR1bGUtb2YtZmVlcy9tdWx0aXBsZS1hcHBsaWNhdGlvbnMvbW9kYWwtbXVsdGlwbGUtYXBwbGljYXRpb25zL21vZGFsLW11bHRpcGxlLWFwcGxpY2F0aW9ucy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLFVBQUE7QUFDSjs7QUFFQTtFQUNFLGdCQUFBO0VBQ0EsWUFBQTtFQUNBLGtCQUFBO0FBQ0Y7O0FBRUE7RUFDRSxlQUFBO0FBQ0Y7O0FBRUE7RUFDRSxnQkFBQTtBQUNGIiwiZmlsZSI6InNyYy9hcHAvbW9kdWxlcy9wYWdlcy9hcHBsaWNhdGlvbnMvc2NoZWR1bGUtb2YtZmVlcy9tdWx0aXBsZS1hcHBsaWNhdGlvbnMvbW9kYWwtbXVsdGlwbGUtYXBwbGljYXRpb25zL21vZGFsLW11bHRpcGxlLWFwcGxpY2F0aW9ucy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbInNwYW57XHJcbiAgICBjb2xvcjogcmVkO1xyXG59XHJcblxyXG4uZ3JhbmRUb3RhbCB7XHJcbiAgZm9udC13ZWlnaHQ6IDkwMDtcclxuICBmbG9hdDogcmlnaHQ7XHJcbiAgcGFkZGluZy1yaWdodDogMjAlO1xyXG59XHJcblxyXG4ubnVtYmVycy1pbnB1dHtcclxuICB0ZXh0LWFsaWduOiBlbmQ7XHJcbn1cclxuXHJcbi50b3RhbCB7XHJcbiAgZm9udC13ZWlnaHQ6IDkwMDtcclxufVxyXG4iXX0= */");

/***/ }),

/***/ "NcxZ":
/*!******************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/modules/fragments/s1-form-type/s1-form-type.component.html ***!
  \******************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div id=\"form-type-modal\" class=\"row\" [formGroup]=\"s1ApplicationForm\">\r\n    <h1>New S1 Application</h1>\r\n    <hr>\r\n    <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n        <mat-label>Application Type</mat-label>\r\n        <mat-select [(ngModel)]=\"s1Application.applicationType\" name=\"applicationType\" formControlName=\"applicationType\"\r\n            [disabled]=\"s1Application?.internalStatus!='SAVED'&&s1Application?.internalStatus!=undefined\" (selectionChange)=\"checkType()\">\r\n            <mat-option *ngFor=\"let i of applicationTypeList\" [value]=\"i\">\r\n                {{i?.description | uppercase}}\r\n            </mat-option>\r\n        </mat-select>\r\n    </mat-form-field>\r\n\r\n    <div class=\"col-md-6\">\r\n      <mat-checkbox (click)=\"setAsMultiple()\" [disabled]=\"isPresentation || s1Application.applicationType === null || s1Application.applicationType === undefined\"\r\n      [ngStyle]=\"{'pointer-events': (isPresentation || s1Application.applicationType === null || s1Application.applicationType === undefined) ? 'none' : ''}\">\r\n      Multiple Application</mat-checkbox>\r\n    </div>\r\n    <div class=\"col-md-6\">\r\n      <mat-checkbox  (click)=\"setAsForPresentation()\" [disabled]=\"isMultiple || (s1Application.applicationType === null || s1Application.applicationType === undefined)\"\r\n      [ngStyle]=\"{'pointer-events': (isMultiple || (s1Application.applicationType === null || s1Application.applicationType === undefined ) ) ? 'none' : ''}\"\r\n      >For Presentation</mat-checkbox>\r\n    </div>\r\n\r\n    <!-- <mat-form-field class=\"col-md-12\" appearance=\"outline\" *ngIf=\"isMultiple\">\r\n      <mat-label>Form Type</mat-label>\r\n      <mat-select [(ngModel)]=\"s1Application.formType\" name=\"formType\" formControlName=\"formType\"\r\n      [disabled]=\"s1Application?.internalStatus!='SAVED'&&s1Application?.internalStatus!=undefined\">\r\n      <mat-option *ngFor=\"let i of formTypeList\" [value]=\"i.description\" (click)=\"getApplicationTypeList()\">\r\n        {{i?.description | uppercase}}\r\n      </mat-option>\r\n    </mat-select>\r\n  </mat-form-field> -->\r\n\r\n  <mat-form-field class=\"col-md-12\" appearance=\"outline\" *ngIf=\"showNumberOfApplications && s1Application?.applicationType?.description\">\r\n    <mat-label>Number of Applications</mat-label>\r\n    <input matInput [(ngModel)]=\"numberOfApplications\" formControlName=\"numberOfApplications\">\r\n    <mat-hint>{{numberOfMultipleApplicationAllowed.minimum}} - {{numberOfMultipleApplicationAllowed.maximum}} only</mat-hint>\r\n  </mat-form-field>\r\n\r\n  <div class=\"col-md-12 mt-2\" *ngIf=\"isMultiple||isSpecial\">\r\n    <i>Note: This application type needs Request for Approval.</i>\r\n  </div>\r\n\r\n  <div class=\"col-md-12\"><br></div>\r\n\r\n  <div class=\"col-md-12 action_items\">\r\n    <button class=\"button-red col-md-5\" mat-raised-button\r\n            (click)=\"proceedS1Application()\" [disabled]=\"!s1ApplicationForm.valid||!s1Application.applicationType\">\r\n            <i class=\"material-icons color__white\">send</i> Proceed\r\n        </button>\r\n\r\n        <button class=\"button-red col-md-5\" mat-raised-button (click)=\"closeModal()\">\r\n            <i class=\"material-icons color__white\">cancel</i> Cancel\r\n        </button>\r\n    </div>\r\n</div>\r\n");

/***/ }),

/***/ "Nitu":
/*!**********************************************************************************************************!*\
  !*** ./src/app/modules/fragments/update-multiple-application/update-multiple-application.component.scss ***!
  \**********************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("/* Accordion */\n.action-buttons {\n  padding-bottom: 20px;\n  float: right;\n}\n.headers-align .mat-expansion-panel-header-title,\n.headers-align .mat-expansion-panel-header-description {\n  flex-basis: 0;\n  font-size: 1.25em;\n  align-items: center;\n}\n.headers-align .mat-expansion-panel-header-description {\n  justify-content: space-between;\n  align-items: center;\n}\n.tooltip .tooltiptext {\n  width: 120px;\n  bottom: 100%;\n  left: 50%;\n  margin-left: -60px;\n  /* Use half of the width (120/2 = 60), to center the tooltip */\n}\n.mat-expansion-panel-header {\n  border: 1px solid #BFBFBF;\n}\ninput[type=file] {\n  display: none;\n}\n.custom-file-upload {\n  border: 1px solid #ccc;\n  display: inline-block;\n  padding: 6px 12px;\n  cursor: pointer;\n}\n.mat-expansion-panel-header.mat-expanded:hover,\n.mat-expansion-panel-header {\n  background: #bad9ff;\n}\n.mat-expansion-panel .mat-expansion-panel-header.cdk-keyboard-focused:not([aria-disabled=true]),\n.mat-expansion-panel .mat-expansion-panel-header.cdk-program-focused:not([aria-disabled=true]),\n.mat-expansion-panel:not(.mat-expanded) .mat-expansion-panel-header:hover:not([aria-disabled=true]) {\n  background: #cfe5ff;\n}\n.field-value {\n  color: gray;\n  font-weight: 600;\n}\n/* table for status display */\ntable.application-details tr td {\n  padding: 10px 16px;\n  border-radius: 7px;\n  font: 500 14px/20px Roboto, \"Helvetica Neue\", sans-serif;\n  width: 31%;\n}\ntable.application-details tr td:nth-child(odd) {\n  background-color: #ff5252;\n  color: white;\n  border: 1px solid white;\n}\ntable.application-details tr td:nth-child(even) {\n  color: #ff5252;\n  border: 1px solid #0000001f;\n}\n.no-border {\n  background-color: transparent !important;\n  border: 0px !important;\n  padding: 0px !important;\n  width: 5px;\n  height: 5px !important;\n}\n.dialog-button-content {\n  vertical-align: bottom;\n  text-align: center;\n}\n.dialog-button-content button {\n  color: white;\n  border: none;\n  padding: 5px 10px 5px 5px;\n  margin: 0px 5px;\n  font-weight: 500;\n  border-radius: 5px;\n}\n.dialog-button-content .warn {\n  background-color: red;\n}\n.dialog-button-content .caution {\n  background-color: #dfd000;\n  color: black;\n}\n.dialog-button-content .confirm {\n  background-color: #449bff;\n}\ntable {\n  width: 100%;\n  text-align: center;\n}\n.cancel {\n  color: gray !important;\n}\n::ng-deep th.mat-header-cell.center-table-text .mat-sort-header-container {\n  justify-content: center !important;\n}\n.button-right {\n  position: relative;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9mcmFnbWVudHMvdXBkYXRlLW11bHRpcGxlLWFwcGxpY2F0aW9uL3VwZGF0ZS1tdWx0aXBsZS1hcHBsaWNhdGlvbi5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxjQUFBO0FBQ0E7RUFDSSxvQkFBQTtFQUNBLFlBQUE7QUFDSjtBQUVBOztFQUVJLGFBQUE7RUFDQSxpQkFBQTtFQUNBLG1CQUFBO0FBQ0o7QUFFQTtFQUNJLDhCQUFBO0VBQ0EsbUJBQUE7QUFDSjtBQUVBO0VBQ0ksWUFBQTtFQUNBLFlBQUE7RUFDQSxTQUFBO0VBQ0Esa0JBQUE7RUFDQSw4REFBQTtBQUNKO0FBRUE7RUFDSSx5QkFBQTtBQUNKO0FBR0E7RUFDSSxhQUFBO0FBQUo7QUFHQTtFQUNJLHNCQUFBO0VBQ0EscUJBQUE7RUFDQSxpQkFBQTtFQUNBLGVBQUE7QUFBSjtBQUdBOztFQUVJLG1CQUFBO0FBQUo7QUFJQTs7O0VBR0ksbUJBQUE7QUFESjtBQUlBO0VBQ0ksV0FBQTtFQUNBLGdCQUFBO0FBREo7QUFJQSw2QkFBQTtBQUVJO0VBQ0ksa0JBQUE7RUFDQSxrQkFBQTtFQUNBLHdEQUFBO0VBQ0EsVUFBQTtBQUZSO0FBS0k7RUFDSSx5QkFBQTtFQUNBLFlBQUE7RUFDQSx1QkFBQTtBQUhSO0FBTUk7RUFDSSxjQUFBO0VBQ0EsMkJBQUE7QUFKUjtBQVFBO0VBQ0ksd0NBQUE7RUFDQSxzQkFBQTtFQUNBLHVCQUFBO0VBQ0EsVUFBQTtFQUNBLHNCQUFBO0FBTEo7QUFTQTtFQUNJLHNCQUFBO0VBQ0Esa0JBQUE7QUFOSjtBQVFJO0VBQ0ksWUFBQTtFQUNBLFlBQUE7RUFDQSx5QkFBQTtFQUNBLGVBQUE7RUFDQSxnQkFBQTtFQUNBLGtCQUFBO0FBTlI7QUFTSTtFQUNJLHFCQUFBO0FBUFI7QUFVSTtFQUNJLHlCQUFBO0VBQ0EsWUFBQTtBQVJSO0FBV0k7RUFDSSx5QkFBQTtBQVRSO0FBYUE7RUFDSSxXQUFBO0VBQ0Esa0JBQUE7QUFWSjtBQWFBO0VBQ0Usc0JBQUE7QUFWRjtBQWVFO0VBQ0Usa0NBQUE7QUFaSjtBQWdCQTtFQUNFLGtCQUFBO0FBYkYiLCJmaWxlIjoic3JjL2FwcC9tb2R1bGVzL2ZyYWdtZW50cy91cGRhdGUtbXVsdGlwbGUtYXBwbGljYXRpb24vdXBkYXRlLW11bHRpcGxlLWFwcGxpY2F0aW9uLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLyogQWNjb3JkaW9uICovXHJcbi5hY3Rpb24tYnV0dG9ucyB7XHJcbiAgICBwYWRkaW5nLWJvdHRvbTogMjBweDtcclxuICAgIGZsb2F0OiByaWdodDtcclxufVxyXG5cclxuLmhlYWRlcnMtYWxpZ24gLm1hdC1leHBhbnNpb24tcGFuZWwtaGVhZGVyLXRpdGxlLFxyXG4uaGVhZGVycy1hbGlnbiAubWF0LWV4cGFuc2lvbi1wYW5lbC1oZWFkZXItZGVzY3JpcHRpb24ge1xyXG4gICAgZmxleC1iYXNpczogMDtcclxuICAgIGZvbnQtc2l6ZTogMS4yNWVtO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxufVxyXG5cclxuLmhlYWRlcnMtYWxpZ24gLm1hdC1leHBhbnNpb24tcGFuZWwtaGVhZGVyLWRlc2NyaXB0aW9uIHtcclxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbn1cclxuXHJcbi50b29sdGlwIC50b29sdGlwdGV4dCB7XHJcbiAgICB3aWR0aDogMTIwcHg7XHJcbiAgICBib3R0b206IDEwMCU7XHJcbiAgICBsZWZ0OiA1MCU7XHJcbiAgICBtYXJnaW4tbGVmdDogLTYwcHg7XHJcbiAgICAvKiBVc2UgaGFsZiBvZiB0aGUgd2lkdGggKDEyMC8yID0gNjApLCB0byBjZW50ZXIgdGhlIHRvb2x0aXAgKi9cclxufVxyXG5cclxuLm1hdC1leHBhbnNpb24tcGFuZWwtaGVhZGVyIHtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkICNCRkJGQkY7XHJcbn1cclxuXHJcbi8vIHVwbG9hZCBidXR0b25cclxuaW5wdXRbdHlwZT1cImZpbGVcIl0ge1xyXG4gICAgZGlzcGxheTogbm9uZTtcclxufVxyXG5cclxuLmN1c3RvbS1maWxlLXVwbG9hZCB7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjY2NjO1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgcGFkZGluZzogNnB4IDEycHg7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbn1cclxuXHJcbi5tYXQtZXhwYW5zaW9uLXBhbmVsLWhlYWRlci5tYXQtZXhwYW5kZWQ6aG92ZXIsXHJcbi5tYXQtZXhwYW5zaW9uLXBhbmVsLWhlYWRlciB7XHJcbiAgICBiYWNrZ3JvdW5kOiAjYmFkOWZmO1xyXG4gICAgLy8gYmFja2dyb3VuZDogI2Q1Nzg5MlxyXG59XHJcblxyXG4ubWF0LWV4cGFuc2lvbi1wYW5lbCAubWF0LWV4cGFuc2lvbi1wYW5lbC1oZWFkZXIuY2RrLWtleWJvYXJkLWZvY3VzZWQ6bm90KFthcmlhLWRpc2FibGVkPXRydWVdKSxcclxuLm1hdC1leHBhbnNpb24tcGFuZWwgLm1hdC1leHBhbnNpb24tcGFuZWwtaGVhZGVyLmNkay1wcm9ncmFtLWZvY3VzZWQ6bm90KFthcmlhLWRpc2FibGVkPXRydWVdKSxcclxuLm1hdC1leHBhbnNpb24tcGFuZWw6bm90KC5tYXQtZXhwYW5kZWQpIC5tYXQtZXhwYW5zaW9uLXBhbmVsLWhlYWRlcjpob3Zlcjpub3QoW2FyaWEtZGlzYWJsZWQ9dHJ1ZV0pIHtcclxuICAgIGJhY2tncm91bmQ6ICNjZmU1ZmY7XHJcbn1cclxuXHJcbi5maWVsZC12YWx1ZSB7XHJcbiAgICBjb2xvcjogZ3JheTtcclxuICAgIGZvbnQtd2VpZ2h0OiA2MDA7XHJcbn1cclxuXHJcbi8qIHRhYmxlIGZvciBzdGF0dXMgZGlzcGxheSAqL1xyXG50YWJsZS5hcHBsaWNhdGlvbi1kZXRhaWxzIHRyIHtcclxuICAgIHRkIHtcclxuICAgICAgICBwYWRkaW5nOiAxMHB4IDE2cHg7XHJcbiAgICAgICAgYm9yZGVyLXJhZGl1czogN3B4O1xyXG4gICAgICAgIGZvbnQ6IDUwMCAxNHB4LzIwcHggUm9ib3RvLCBcIkhlbHZldGljYSBOZXVlXCIsIHNhbnMtc2VyaWY7XHJcbiAgICAgICAgd2lkdGg6IDMxJTtcclxuICAgIH1cclxuXHJcbiAgICB0ZDpudGgtY2hpbGQob2RkKSB7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmNTI1MjtcclxuICAgICAgICBjb2xvcjogd2hpdGU7XHJcbiAgICAgICAgYm9yZGVyOiAxcHggc29saWQgd2hpdGU7XHJcbiAgICB9XHJcblxyXG4gICAgdGQ6bnRoLWNoaWxkKGV2ZW4pIHtcclxuICAgICAgICBjb2xvcjogI2ZmNTI1MjtcclxuICAgICAgICBib3JkZXI6IDFweCBzb2xpZCAjMDAwMDAwMWY7XHJcbiAgICB9XHJcbn1cclxuXHJcbi5uby1ib3JkZXIge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQgIWltcG9ydGFudDtcclxuICAgIGJvcmRlcjogMHB4ICFpbXBvcnRhbnQ7XHJcbiAgICBwYWRkaW5nOiAwcHggIWltcG9ydGFudDtcclxuICAgIHdpZHRoOiA1cHg7XHJcbiAgICBoZWlnaHQ6IDVweCAhaW1wb3J0YW50O1xyXG59XHJcblxyXG4vLyBidXR0b25cclxuLmRpYWxvZy1idXR0b24tY29udGVudCB7XHJcbiAgICB2ZXJ0aWNhbC1hbGlnbjogYm90dG9tO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG5cclxuICAgIGJ1dHRvbiB7XHJcbiAgICAgICAgY29sb3I6IHdoaXRlO1xyXG4gICAgICAgIGJvcmRlcjogbm9uZTtcclxuICAgICAgICBwYWRkaW5nOiA1cHggMTBweCA1cHggNXB4O1xyXG4gICAgICAgIG1hcmdpbjogMHB4IDVweDtcclxuICAgICAgICBmb250LXdlaWdodDogNTAwO1xyXG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICAgIH1cclxuXHJcbiAgICAud2FybiB7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogcmVkO1xyXG4gICAgfVxyXG5cclxuICAgIC5jYXV0aW9uIHtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjIzLCAyMDgsIDApO1xyXG4gICAgICAgIGNvbG9yOiByZ2IoMCwgMCwgMCk7XHJcbiAgICB9XHJcblxyXG4gICAgLmNvbmZpcm0ge1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYig2OCwgMTU1LCAyNTUpO1xyXG4gICAgfVxyXG59XHJcblxyXG50YWJsZSB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxufVxyXG5cclxuLmNhbmNlbHtcclxuICBjb2xvcjogZ3JheSAhaW1wb3J0YW50O1xyXG59XHJcblxyXG46Om5nLWRlZXAge1xyXG4gIC8vIHdpbGwgY2VudGVyIHRleHQgb24gbWF0ZXJpYWwgdGFibGUgaGVhZGVyXHJcbiAgdGgubWF0LWhlYWRlci1jZWxsLmNlbnRlci10YWJsZS10ZXh0IC5tYXQtc29ydC1oZWFkZXItY29udGFpbmVyIHtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyICFpbXBvcnRhbnQ7XHJcbiAgfVxyXG59XHJcblxyXG4uYnV0dG9uLXJpZ2h0IHtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbn1cclxuIl19 */");

/***/ }),

/***/ "Np2X":
/*!****************************************************************************!*\
  !*** ./src/app/modules/fragments/s1-form-type/s1-form-type.component.scss ***!
  \****************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("#form-type-modal {\n  max-width: 30vw;\n}\n\n.action_items {\n  text-align: center;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9mcmFnbWVudHMvczEtZm9ybS10eXBlL3MxLWZvcm0tdHlwZS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGVBQUE7QUFDSjs7QUFFQTtFQUNJLGtCQUFBO0FBQ0oiLCJmaWxlIjoic3JjL2FwcC9tb2R1bGVzL2ZyYWdtZW50cy9zMS1mb3JtLXR5cGUvczEtZm9ybS10eXBlLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiI2Zvcm0tdHlwZS1tb2RhbCB7XHJcbiAgICBtYXgtd2lkdGg6IDMwdnc7XHJcbn1cclxuXHJcbi5hY3Rpb25faXRlbXMge1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG59Il19 */");

/***/ }),

/***/ "QAEE":
/*!****************************************************************************************************************!*\
  !*** ./src/app/modules/pages/applications/schedule-of-fees/single-application/single-application.component.ts ***!
  \****************************************************************************************************************/
/*! exports provided: SingleApplicationComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SingleApplicationComponent", function() { return SingleApplicationComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "mrSG");
/* harmony import */ var _raw_loader_single_application_component_html__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! raw-loader!./single-application.component.html */ "X/+i");
/* harmony import */ var _single_application_component_scss__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./single-application.component.scss */ "zh2N");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/material/dialog */ "0IaG");
/* harmony import */ var _angular_material_paginator__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/material/paginator */ "M9IT");
/* harmony import */ var _angular_material_sort__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/material/sort */ "Dh3D");
/* harmony import */ var _angular_material_table__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/material/table */ "+0xr");
/* harmony import */ var _services__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @services */ "dJ3e");
/* harmony import */ var _shared__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @shared */ "M0ag");
/* harmony import */ var _modal_single_application_modal_single_application_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./modal-single-application/modal-single-application.component */ "RiBP");











let SingleApplicationComponent = class SingleApplicationComponent {
    constructor(apiService, dialog, dataStorage) {
        this.apiService = apiService;
        this.dialog = dialog;
        this.dataStorage = dataStorage;
        this.displayedColumns = ['referenceCode', 'typeOfApplication', 'brand', 'medium', 'applicantCompanyName', 'paymentStatus'];
        this.paymentList = [];
    }
    ngOnInit() {
        this.currentUser = this.dataStorage.getUserAccount();
        this.getS1PaymentList();
    }
    getS1PaymentList() {
        this.apiService.findByParam(_shared__WEBPACK_IMPORTED_MODULE_9__["ENDPOINTS"].applicationFormPresentor + this.currentUser.id, 'payment-status/FOR_PAYMENT/schedule-of-fees').subscribe((res) => {
            this.paymentList = res.responseData.data;
            this.dataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_7__["MatTableDataSource"](this.paymentList);
            this.dataSource.paginator = this.paginator;
            this.dataSource.sort = this.sort;
        });
    }
    openModal(res) {
        const dialogRef = this.dialog.open(_modal_single_application_modal_single_application_component__WEBPACK_IMPORTED_MODULE_10__["ModalSingleApplicationComponent"], {
            width: '80%',
            height: 'fit-content',
            maxHeight: '85vh',
            data: res
        });
        dialogRef.afterClosed().subscribe(result => {
            this.ngOnInit();
        });
    }
};
SingleApplicationComponent.ctorParameters = () => [
    { type: _services__WEBPACK_IMPORTED_MODULE_8__["ApiService"] },
    { type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_4__["MatDialog"] },
    { type: _services__WEBPACK_IMPORTED_MODULE_8__["DataStorageService"] }
];
SingleApplicationComponent.propDecorators = {
    paginator: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["ViewChild"], args: [_angular_material_paginator__WEBPACK_IMPORTED_MODULE_5__["MatPaginator"], { static: false },] }],
    sort: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["ViewChild"], args: [_angular_material_sort__WEBPACK_IMPORTED_MODULE_6__["MatSort"], { static: false },] }],
    table: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["ViewChild"], args: [_angular_material_table__WEBPACK_IMPORTED_MODULE_7__["MatTable"], { static: false },] }]
};
SingleApplicationComponent = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_3__["Component"])({
        selector: 'app-single-application',
        template: _raw_loader_single_application_component_html__WEBPACK_IMPORTED_MODULE_1__["default"],
        styles: [_single_application_component_scss__WEBPACK_IMPORTED_MODULE_2__["default"]]
    })
], SingleApplicationComponent);



/***/ }),

/***/ "QDMH":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/modules/pages/applications/comment/comment.component.html ***!
  \*****************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<form [formGroup]=\"commentForm\">\r\n  <mat-tab-group mat-align-tabs=\"center\" class=\"mat-tab-group\">\r\n    <!-- TAB FOR INTERNAL COMMENTS -->\r\n    <mat-tab label=\"Internal Comments Tab\">\r\n      <div class=\"mat-tab\">\r\n        <div class=\"col comment\">\r\n          <label>INTERNAL</label>\r\n          <angular-editor #editorToolBar [(ngModel)]=\"internalComment.comment\" [config]=\"editorConfig\" name=\"internalComments\"\r\n          formControlName=\"internalComments\"\r\n          [hidden]=\"disabledComment\"></angular-editor><br>\r\n\r\n          <div class=\"\">\r\n            <button mat-raised-button color=\"primary\" (click)=\"addInternalComment(internalComment)\" [disabled]=\"!internalComment.comment\"\r\n            [hidden]=\"disabledComment\">\r\n              <i class=\"material-icons color__white\">comment_bank</i> &nbsp;{{internalCommentProcess}}\r\n            </button>\r\n            <button mat-raised-button color=\"primary\" (click)=\"cancel()\" [disabled]=\"!internalComment.comment\"\r\n            [hidden]=\"disabledComment\">\r\n              <i class=\"material-icons color__white\">cancel</i> &nbsp;Cancel\r\n            </button>\r\n            <div >\r\n              <!-- CURRENT COMMENT -->\r\n              <div class=\"comment-list\">\r\n                <form class=\"comments\" *ngFor=\"let comment of internalCommentList\">\r\n                  <div class=\"row username-content\">\r\n                    <p> <i class=\"material-icons\">comment</i> {{comment?.actionBy?.firstName}}\r\n                      {{comment.actionBy.lastName}}<b> ({{comment.role.replaceAll('_', ' ').replaceAll('ROLE' , '')}}) |\r\n                        {{comment.actionDate | date:'fullDate'}} | {{comment.actionDate | date:'hh:mm:ss aa'}} </b>\r\n  \r\n                      <b *ngIf=\"comment?.modifiedBy != undefined && comment?.modifiedDate != undefined\"> | Modified by:\r\n                        {{comment.modifiedBy}} ({{comment.modifiedDate}}) </b>\r\n  \r\n                      <span class=\"a-icon\" *ngIf=\"comment?.actionBy?.id === currentUser?.id || currentUser?.userRole?.name === 'ROLE_REVIEWER'\"\r\n                      [hidden]=\"disabledComment\">\r\n                        <i class=\"material-icons\" (click)=\"deleteComment(comment)\" matTooltip=\"Delete\">delete</i>\r\n                      </span>\r\n                      <span class=\"a-icon\" *ngIf=\"comment?.actionBy?.id === currentUser?.id || currentUser?.userRole?.name === 'ROLE_REVIEWER'\"\r\n                        [hidden]=\"disabledComment\">\r\n                        <i class=\"material-icons\" style=\"color:blue\" (click)=\"modifyInternalComment(comment)\" matTooltip=\"Edit\">edit</i>\r\n                      </span>\r\n  \r\n                    </p>\r\n                  </div>\r\n                  <div class=\"comment-content\">\r\n                    <div [innerHTML]=\"comment.comment\"></div>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n\r\n\r\n              <!-- CURRENT COMMENT END -->\r\n\r\n              <!-- NEW COMMENT IMPL -->\r\n              \r\n              <!-- NEW COMMENT IMPL END -->\r\n              <div class=\"no-record\" *ngIf=\"internalCommentList.length==0 && disabledComment\">\r\n                No results found.\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </mat-tab>\r\n    <!-- END OF TAB FOR INTERNAL COMMENTS -->\r\n\r\n    <!-- TAB FOR COPY CLAIMS -->\r\n    <mat-tab label=\"Copy Claims Tab\"\r\n      *ngIf=\"currentUser?.userRole?.name != 'ROLE_ENCODER' && commentS1Application.appliedS2 === false\">\r\n      <div class=\"col comment\">\r\n        <label>COPY/CLAIMS</label>\r\n        <div class=\"\">\r\n          <ng-container *ngIf=\"editCopyClaimsComment || (!editCopyClaimsComment && copyClaimsList?.length === 0)\">\r\n            <angular-editor [(ngModel)]=\"copyClaims.description\" [config]=\"editorConfig\" name=\"description\"\r\n              formControlName=\"description\"\r\n              [hidden]=\"disabledComment\">\r\n            </angular-editor><br>\r\n            <button mat-raised-button color=\"primary\" (click)=\"addCopyClaims()\" [disabled]=\"!copyClaims.description\"\r\n              [hidden]=\"disabledComment\">\r\n              <i class=\"material-icons color__white\">comment_bank</i> &nbsp;{{copyClaimesProcess}}\r\n            </button>\r\n            <button mat-raised-button color=\"primary\" (click)=\"cancel()\" [disabled]=\"!copyClaims.description\"\r\n              [hidden]=\"disabledComment\">\r\n              <i class=\"material-icons color__white\">cancel</i> &nbsp;Cancel\r\n            </button>\r\n          </ng-container>\r\n          <div class=\"comment-list\">\r\n            <form class=\"comments\" *ngFor=\"let copyClaims of copyClaimsList\">\r\n              <div class=\"row username-content\">\r\n                <p> <i class=\"material-icons color__white\">comment</i> {{copyClaims?.actionBy?.firstName}}\r\n                  {{copyClaims.actionBy.lastName}}<b> ({{copyClaims.role.replaceAll('_', ' ').replaceAll('ROLE', '')}})\r\n                    | {{copyClaims.actionDate | date:'fullDate'}} | {{copyClaims.actionDate | date:'hh:mm:ss aa'}} </b>\r\n\r\n                    <b *ngIf=\"copyClaims?.modifiedBy != undefined && copyClaims?.modifiedDate != undefined\"> | Modified by:\r\n                      {{copyClaims.modifiedBy}} ({{copyClaims.modifiedDate}}) </b>\r\n\r\n                    <!-- <span class=\"a-icon\" *ngIf=\"copyClaims?.actionBy?.id === currentUser?.id || currentUser?.userRole?.name === 'ROLE_REVIEWER'\"\r\n                    [hidden]=\"disabledComment\">\r\n                      <i class=\"material-icons\" (click)=\"deleteCopyClaims(copyClaims)\" matTooltip=\"Delete\">delete</i>\r\n                    </span> -->\r\n                    <span class=\"a-icon\" *ngIf=\"copyClaims?.actionBy?.id === currentUser?.id || currentUser?.userRole?.name === 'ROLE_REVIEWER'\"\r\n                      [hidden]=\"disabledComment\">\r\n                      <i class=\"material-icons\" style=\"color:blue\" (click)=\"modifyCopyClaims(copyClaims)\" matTooltip=\"Edit\">edit</i>\r\n                    </span>\r\n              </div>\r\n              <div class=\"comment-content\">\r\n                <div [innerHTML]=\"copyClaims.description\"></div>\r\n              </div>\r\n            </form>\r\n            <div class=\"no-record\"\r\n              *ngIf=\"copyClaimsList.length==0 && disabledComment\">\r\n              No results found.\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </mat-tab>\r\n    <!-- END OF TAB FOR COPY CLAIMS -->\r\n\r\n    <!-- TAB FOR EXTERNAL COMMENTS -->\r\n    <mat-tab label=\"External Comments Tab\">\r\n      <div class=\"col comment\">\r\n        <label>EXTERNAL</label>\r\n        <div class=\"\">\r\n          <ng-container *ngIf=\"editExternalComment || (!editExternalComment && externalCommentList?.length === 0)\">\r\n            <angular-editor [(ngModel)]=\"externalComment.comment\" [config]=\"editorConfig\" name=\"externalComments\"\r\n              formControlName=\"externalComments\"\r\n              [hidden]=\"commentS2Application?.internalStatus === 'S1_APPLICATION_REVIEWED' ||\r\n              (disabledComment)\">\r\n            </angular-editor><br>\r\n            <button mat-raised-button color=\"primary\" (click)=\"addExternalComment()\" [disabled]=\"!externalComment.comment\"\r\n              [hidden]=\"commentS2Application?.internalStatus === 'S1_APPLICATION_REVIEWED' ||\r\n              (disabledComment)\">\r\n              <i class=\"material-icons\">comment_bank</i> &nbsp;{{externalCommentProcess}}\r\n            </button>\r\n            <button mat-raised-button color=\"primary\" (click)=\"cancel()\" [disabled]=\"!externalComment.comment\"\r\n              [hidden]=\"commentS2Application?.internalStatus === 'S1_APPLICATION_REVIEWED' ||\r\n              (disabledComment)\">\r\n              <i class=\"material-icons\">cancel</i> &nbsp;Cancel\r\n            </button>\r\n          </ng-container>\r\n          <div class=\"comment-list\">\r\n            <form class=\"comments\" *ngFor=\"let excomment of externalCommentList\">\r\n              <div class=\"row username-content\">\r\n                <p> <i class=\"material-icons\">comment</i> {{excomment?.actionBy?.firstName}}\r\n                  {{excomment.actionBy.lastName}}<b> ({{excomment.role.replaceAll('_', ' ').replaceAll('ROLE' , '')}}) |\r\n                    {{excomment.actionDate | date:'fullDate'}} | {{excomment.actionDate | date:'hh:mm:ss aa'}} </b>\r\n\r\n                    <b *ngIf=\"excomment?.modifiedBy != undefined && excomment?.modifiedDate != undefined\"> | Modified by:\r\n                      {{excomment.modifiedBy}} ({{excomment.modifiedDate}}) </b>\r\n\r\n                    <!-- <span class=\"a-icon\" *ngIf=\"excomment?.actionBy?.id === currentUser?.id || currentUser?.userRole?.name === 'ROLE_REVIEWER'\"\r\n                    [hidden]=\"disabledComment\">\r\n                      <i class=\"material-icons\" (click)=\"deleteComment(excomment)\" matTooltip=\"Delete\">delete</i>\r\n                    </span> -->\r\n                    <span class=\"a-icon\" *ngIf=\"excomment?.actionBy?.id === currentUser?.id || currentUser?.userRole?.name === 'ROLE_REVIEWER'\"\r\n                      [hidden]=\"disabledComment\">\r\n                      <i class=\"material-icons\" style=\"color:blue\" (click)=\"modifyExternalComment(excomment)\" matTooltip=\"Edit\">edit</i>\r\n                    </span>\r\n                  </p>\r\n              </div>\r\n              <div class=\"comment-content\">\r\n                <div class=\"inner-html\" [innerHTML]=\"excomment.comment\"></div>\r\n              </div>\r\n            </form>\r\n            <div class=\"no-record\"\r\n              *ngIf=\"externalCommentList.length==0 && disabledComment\">\r\n              No results found.\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </mat-tab>\r\n    <!-- END OF TAB FOR EXTERNAL COMMENTS -->\r\n  </mat-tab-group>\r\n</form>\r\n");

/***/ }),

/***/ "QFbT":
/*!*************************************************************************************************!*\
  !*** ./src/app/modules/pages/applications/client-information/client-information.component.scss ***!
  \*************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (".badge {\n  color: black;\n  width: auto;\n  font-size: medium;\n}\n\n.dropdown-badge {\n  color: white;\n  float: left;\n  font-size: 15px;\n  margin: 10px 0px 0px 0px;\n  font-weight: 500;\n}\n\n.float-right {\n  text-align: end;\n}\n\n.required {\n  color: #C5140C;\n  font-size: 16px;\n  margin-left: 4px;\n}\n\n::ng-deep .mat-tooltip {\n  font-size: large;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9wYWdlcy9hcHBsaWNhdGlvbnMvY2xpZW50LWluZm9ybWF0aW9uL2NsaWVudC1pbmZvcm1hdGlvbi5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLFlBQUE7RUFDQSxXQUFBO0VBQ0EsaUJBQUE7QUFDSjs7QUFHQTtFQUNFLFlBQUE7RUFDQSxXQUFBO0VBQ0EsZUFBQTtFQUNBLHdCQUFBO0VBQ0EsZ0JBQUE7QUFBRjs7QUFHQTtFQUNFLGVBQUE7QUFBRjs7QUFHQTtFQUNFLGNBQUE7RUFDQSxlQUFBO0VBQ0EsZ0JBQUE7QUFBRjs7QUFJRTtFQUNFLGdCQUFBO0FBREoiLCJmaWxlIjoic3JjL2FwcC9tb2R1bGVzL3BhZ2VzL2FwcGxpY2F0aW9ucy9jbGllbnQtaW5mb3JtYXRpb24vY2xpZW50LWluZm9ybWF0aW9uLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmJhZGdlIHtcclxuICAgIGNvbG9yOiBibGFjaztcclxuICAgIHdpZHRoOiBhdXRvO1xyXG4gICAgZm9udC1zaXplOiBtZWRpdW07XHJcbiAgICBcclxufVxyXG5cclxuLmRyb3Bkb3duLWJhZGdle1xyXG4gIGNvbG9yOiB3aGl0ZTtcclxuICBmbG9hdDogbGVmdDtcclxuICBmb250LXNpemU6IDE1cHg7XHJcbiAgbWFyZ2luOiAxMHB4IDBweCAwcHggMHB4O1xyXG4gIGZvbnQtd2VpZ2h0OiA1MDA7XHJcbn1cclxuXHJcbi5mbG9hdC1yaWdodCB7XHJcbiAgdGV4dC1hbGlnbjogZW5kO1xyXG59XHJcblxyXG4ucmVxdWlyZWQge1xyXG4gIGNvbG9yOiAjQzUxNDBDO1xyXG4gIGZvbnQtc2l6ZTogMTZweDtcclxuICBtYXJnaW4tbGVmdDogNHB4O1xyXG59XHJcblxyXG46Om5nLWRlZXAge1xyXG4gIC5tYXQtdG9vbHRpcCB7XHJcbiAgICBmb250LXNpemU6IGxhcmdlO1xyXG4gIH1cclxufSJdfQ== */");

/***/ }),

/***/ "QuhR":
/*!**********************************************************************************************************************!*\
  !*** ./src/app/modules/pages/applications/schedule-of-fees/multiple-applications/multiple-applications.component.ts ***!
  \**********************************************************************************************************************/
/*! exports provided: MultipleApplicationsComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MultipleApplicationsComponent", function() { return MultipleApplicationsComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "mrSG");
/* harmony import */ var _raw_loader_multiple_applications_component_html__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! raw-loader!./multiple-applications.component.html */ "mf8c");
/* harmony import */ var _multiple_applications_component_scss__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./multiple-applications.component.scss */ "cv+y");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/material/dialog */ "0IaG");
/* harmony import */ var _angular_material_paginator__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/material/paginator */ "M9IT");
/* harmony import */ var _angular_material_sort__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/material/sort */ "Dh3D");
/* harmony import */ var _angular_material_table__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/material/table */ "+0xr");
/* harmony import */ var _services__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @services */ "dJ3e");
/* harmony import */ var _shared__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @shared */ "M0ag");
/* harmony import */ var _modal_multiple_applications_modal_multiple_applications_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./modal-multiple-applications/modal-multiple-applications.component */ "6wJU");











const ELEMENT_DATA = [
    { referenceCode: 'Company one ', amount: 3000, },
    { referenceCode: 'Company two ', amount: 4000, },
    { referenceCode: 'Company three ', amount: 5000, },
    { referenceCode: 'Company two ', amount: 6000, },
    { referenceCode: 'Company three ', amount: 7000, },
];
let MultipleApplicationsComponent = class MultipleApplicationsComponent {
    constructor(apiService, dialog, dataStorage) {
        this.apiService = apiService;
        this.dialog = dialog;
        this.dataStorage = dataStorage;
        this.displayedColumns = ['adTitle', 'typeOfApplication', 'brand', 'product', 'applicantCompanyName', 'paymentStatus'];
        this.paymentList = [];
    }
    ngOnInit() {
        this.currentUser = this.dataStorage.getUserAccount();
        this.getS1MultiplePaymentList();
    }
    getS1MultiplePaymentList() {
        this.apiService.findAll(_shared__WEBPACK_IMPORTED_MODULE_9__["ENDPOINTS"].applicationFormPresentor + `${this.currentUser.id}/multiple-application?paymentStatus=FOR_PAYMENT`)
            .subscribe((res) => {
            this.paymentList = res.responseData.data;
            this.dataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_7__["MatTableDataSource"](this.paymentList);
            this.dataSource.paginator = this.paginator;
            this.dataSource.sort = this.sort;
        }, (err) => {
        });
    }
    openModal(res) {
        const dialogRef = this.dialog.open(_modal_multiple_applications_modal_multiple_applications_component__WEBPACK_IMPORTED_MODULE_10__["ModalMultipleApplicationsComponent"], {
            width: '60%',
            height: '85%',
            data: res
        });
        dialogRef.afterClosed().subscribe(result => {
            if (result) {
                console.log(result);
                this.getS1MultiplePaymentList();
            }
        });
    }
};
MultipleApplicationsComponent.ctorParameters = () => [
    { type: _services__WEBPACK_IMPORTED_MODULE_8__["ApiService"] },
    { type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_4__["MatDialog"] },
    { type: _services__WEBPACK_IMPORTED_MODULE_8__["DataStorageService"] }
];
MultipleApplicationsComponent.propDecorators = {
    paginator: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["ViewChild"], args: [_angular_material_paginator__WEBPACK_IMPORTED_MODULE_5__["MatPaginator"], { static: false },] }],
    sort: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["ViewChild"], args: [_angular_material_sort__WEBPACK_IMPORTED_MODULE_6__["MatSort"], { static: false },] }],
    table: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["ViewChild"], args: [_angular_material_table__WEBPACK_IMPORTED_MODULE_7__["MatTable"], { static: false },] }]
};
MultipleApplicationsComponent = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_3__["Component"])({
        selector: 'app-multiple-applications',
        template: _raw_loader_multiple_applications_component_html__WEBPACK_IMPORTED_MODULE_1__["default"],
        styles: [_multiple_applications_component_scss__WEBPACK_IMPORTED_MODULE_2__["default"]]
    })
], MultipleApplicationsComponent);



/***/ }),

/***/ "RiBP":
/*!***********************************************************************************************************************************************!*\
  !*** ./src/app/modules/pages/applications/schedule-of-fees/single-application/modal-single-application/modal-single-application.component.ts ***!
  \***********************************************************************************************************************************************/
/*! exports provided: ModalSingleApplicationComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ModalSingleApplicationComponent", function() { return ModalSingleApplicationComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "mrSG");
/* harmony import */ var _raw_loader_modal_single_application_component_html__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! raw-loader!./modal-single-application.component.html */ "62Kr");
/* harmony import */ var _modal_single_application_component_scss__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./modal-single-application.component.scss */ "mcQa");
/* harmony import */ var _shared_utils_constants__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./../../../../../../shared/utils/constants */ "9Vv1");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/material/dialog */ "0IaG");
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/platform-browser */ "jhN1");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/router */ "tyNb");
/* harmony import */ var _models__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @models */ "sKXY");
/* harmony import */ var _services__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @services */ "dJ3e");
/* harmony import */ var _shared__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @shared */ "M0ag");
/* harmony import */ var app_core_models_application_single_media_model__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! app/core/models/application-single-media.model */ "XLGj");
/* harmony import */ var app_core_services_file_storage_service__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! app/core/services/file.storage.service */ "TMp0");
/* harmony import */ var ngx_spinner__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ngx-spinner */ "JqCM");
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! sweetalert2 */ "PSD3");
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(sweetalert2__WEBPACK_IMPORTED_MODULE_14__);















let ModalSingleApplicationComponent = class ModalSingleApplicationComponent {
    constructor(sanitizer, apiService, dataStorage, fileStorageService, sweetAlertService, router, spinner, dialogRef, data) {
        var _a, _b, _c, _d;
        this.sanitizer = sanitizer;
        this.apiService = apiService;
        this.dataStorage = dataStorage;
        this.fileStorageService = fileStorageService;
        this.sweetAlertService = sweetAlertService;
        this.router = router;
        this.spinner = spinner;
        this.dialogRef = dialogRef;
        this.data = data;
        this.s1Application = new _models__WEBPACK_IMPORTED_MODULE_8__["S1Application"]();
        this.attachmentDocument = new _models__WEBPACK_IMPORTED_MODULE_8__["AttachmentDocument"]();
        this.applicationSingleMedia = new app_core_models_application_single_media_model__WEBPACK_IMPORTED_MODULE_11__["ApplicationSingleMedia"]();
        this.payment = new _models__WEBPACK_IMPORTED_MODULE_8__["Payment"]();
        this.paymentTypeList = [];
        this.attachmentDocuments = [];
        this.previewDocument = false;
        this.isSubmitted = false;
        this.typeOfMediumDisplay = '';
        if (data) {
            if (data) {
                this.s1Application = data;
                console.log('S1', this.s1Application);
                switch (((_a = this.s1Application) === null || _a === void 0 ? void 0 : _a.refTypeOfMedium) || ((_d = (_c = (_b = this.payment) === null || _b === void 0 ? void 0 : _b.applicationFormS2) === null || _c === void 0 ? void 0 : _c.applicationForm) === null || _d === void 0 ? void 0 : _d.refTypeOfMedium)) {
                    case 'SINGLE MEDIA':
                        this.getApplicationSingleMedia();
                        break;
                    case 'MULTIMEDIA-MOVING':
                        this.getMultimediaMoving();
                        break;
                    case 'MULTIMEDIA-STATIC':
                        this.getMultimediaStatic();
                        break;
                    default:
                        break;
                }
                this.getPaymentDetails();
            }
        }
    }
    ngOnInit() {
        this.currentUser = this.dataStorage.getUserAccount();
        this.getPaymentList();
    }
    getPaymentDetails() {
        this.apiService.findAll(_shared__WEBPACK_IMPORTED_MODULE_10__["ENDPOINTS"].paymentDetails + this.s1Application.id).subscribe((res) => {
            this.paymentDetails = res;
            this.paymentDetails.vat = this.paymentDetails.vat.toFixed(2);
        });
    }
    getPaymentList() {
        this.apiService.findAll(_shared__WEBPACK_IMPORTED_MODULE_10__["ENDPOINTS"].paymentType).subscribe((res) => {
            this.paymentTypeList = res.responseData.data;
            if (this.currentUser.userRole.name === _shared_utils_constants__WEBPACK_IMPORTED_MODULE_3__["USER_ROLES"].ROLE_APPLICANT) {
                const creditCardIndex = this.paymentTypeList
                    .findIndex((element) => element.paymentDescription === 'Credit Card');
                this.paymentTypeList.splice(creditCardIndex, 1);
            }
        });
    }
    selectFile(event) {
        const attachmentSize = event.target.files[0].size;
        if (event.target.files[0].type === 'application/pdf') {
            if (attachmentSize > 15000000) { // 1MB = 1M
                this.sweetAlertService.customErrorMessage(`Attachments' total file size should not exceed 15MB.`);
                event.target.value = '';
                return;
            }
            else {
                const pdfURL = URL.createObjectURL(event.target.files[0]);
                this.safeURLProofOfPayment = this.sanitizer.bypassSecurityTrustResourceUrl(pdfURL);
                this.previewDocument = true;
                // env.showSpinner = true;
                const reader = new FileReader();
                const [file] = event.target.files;
                reader.readAsDataURL(file);
                reader.onload = () => {
                };
            }
            this.selectedFiles = event.target.files;
        }
        else {
            this.sweetAlertService.customErrorMessage('Attachment should be in PDF format only.');
            event.target.value = '';
            return;
        }
    }
    uploadDocument(s1Application) {
        sweetalert2__WEBPACK_IMPORTED_MODULE_14___default.a.fire({
            text: 'Are you sure you want to submit this PROOF OF PAYMENT?',
            icon: 'question',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Confirm'
        }).then((result) => {
            if (result.value) {
                this.spinner.show();
                let params = '';
                params = '?&attachmentType=' + _shared__WEBPACK_IMPORTED_MODULE_10__["ATTACHMENT_TYPE"].PAYMENT + '&submissionType=ORIGINAL';
                this.fileStorageService.pushFileToStorage(_shared__WEBPACK_IMPORTED_MODULE_10__["ENDPOINTS"].attachmentDocument, this.selectedFiles.item(0), params)
                    .subscribe(res => {
                    const obj = res.responseData.data;
                    console.log(obj);
                    this.s1Application.paymentAttachmentReference = obj.paymentAttachmentReference;
                    this.payment.paymentAttachmentReference = obj.paymentAttachmentReference;
                    this.payment.amountDue = s1Application.amount;
                    this.payment.applicationForm = s1Application;
                    this.payment.appFormReference = s1Application.appFormReference;
                    this.payment.filename = obj.filename;
                    this.saveProofOfPayment();
                }, (err) => {
                    this.spinner.hide();
                    this.sweetAlertService.error(err);
                }, () => {
                    // actions after subscription
                    this.spinner.hide();
                });
            }
        });
    }
    saveProofOfPayment() {
        this.spinner.show();
        console.log('Saving payment...');
        this.payment.id = 0;
        this.payment.officialReceiptNo = '';
        this.payment.paymentMethod = null;
        console.log('PAYMENT : ', this.payment);
        this.apiService.save(`${_shared__WEBPACK_IMPORTED_MODULE_10__["ENDPOINTS"].applicationFormPresentor}payment-type-id/${this.paymentType.id}/payment/submit`, this.payment)
            .subscribe((res) => {
            console.log('SAVED STATUS: ', res);
            if (res.responseData.data) {
                this.safeURLProofOfPayment = this.sanitizer.bypassSecurityTrustResourceUrl(res.responseData.data.fileURL);
                this.isSubmitted = true;
                this.sweetAlertService.customSuccessMessage('Proof of payment successfully submitted.');
                this.closeModal();
            }
            else {
                this.sweetAlertService.customErrorMessage('Error saving payment.');
            }
            this.spinner.hide();
            // this.previewDocument = true;
            this.selectedFiles = undefined;
            this.router.navigateByUrl('asc/page/application/single-application');
        }, (err) => {
            console.log(err);
            this.sweetAlertService.error(err);
            this.spinner.hide();
        }, () => {
            this.spinner.hide();
        });
    }
    closeModal() {
        this.dialogRef.close();
        this.router.navigate(['asc/page/application/single-application']);
    }
    ngOnDestroy() {
        // this.s1Application = null;
    }
    getApplicationSingleMedia() {
        var _a;
        this.apiService.findByParam(_shared__WEBPACK_IMPORTED_MODULE_10__["ENDPOINTS"].applicationSingleMedia, `app-form-reference/${(_a = this.s1Application) === null || _a === void 0 ? void 0 : _a.appFormReference}`).subscribe((res) => {
            var _a, _b, _c, _d;
            if (res.responseData.data.length > 0) {
                this.applicationSingleMedia = res.responseData.data[0];
                this.typeOfMediumDisplay = `${(_c = (_b = (_a = this.applicationSingleMedia) === null || _a === void 0 ? void 0 : _a.mediumExecution) === null || _b === void 0 ? void 0 : _b.typeOfMedium) === null || _c === void 0 ? void 0 : _c.description} (${(_d = this.applicationSingleMedia) === null || _d === void 0 ? void 0 : _d.sizeLength})`;
            }
            else {
                this.typeOfMediumDisplay = '';
            }
        }, (err) => {
            this.typeOfMediumDisplay = '';
        });
    }
    getMultimediaStatic() {
        var _a;
        this.apiService.findByParam(_shared__WEBPACK_IMPORTED_MODULE_10__["ENDPOINTS"].applicationMultimedia, `app-form-reference/${(_a = this.s1Application) === null || _a === void 0 ? void 0 : _a.appFormReference}`).subscribe((res) => {
            if (res.responseData.data.length > 0) {
                const multimediaList = new Set(res.responseData.data.map(mappedList => { var _a; return `${(_a = mappedList === null || mappedList === void 0 ? void 0 : mappedList.typeOfMedium) === null || _a === void 0 ? void 0 : _a.description} (${mappedList === null || mappedList === void 0 ? void 0 : mappedList.multimediaSizeLength})`; }));
                this.typeOfMediumDisplay = '';
                let mediaCtrl = 1;
                for (const media of multimediaList) {
                    if (mediaCtrl !== multimediaList.size) {
                        this.typeOfMediumDisplay += `${media}, `;
                        mediaCtrl++;
                    }
                    else {
                        this.typeOfMediumDisplay += media;
                    }
                }
            }
            else {
                this.typeOfMediumDisplay = '';
            }
        }, (err) => {
            this.typeOfMediumDisplay = '';
        });
    }
    getMultimediaMoving() {
        var _a;
        this.apiService.findByParam(_shared__WEBPACK_IMPORTED_MODULE_10__["ENDPOINTS"].applicationMultimedia, `app-form-reference/${(_a = this.s1Application) === null || _a === void 0 ? void 0 : _a.appFormReference}`).subscribe((res) => {
            if (res.responseData.data.length > 0) {
                const multimediaList = new Set(res.responseData.data.map(mappedList => { var _a; return `${(_a = mappedList === null || mappedList === void 0 ? void 0 : mappedList.typeOfMedium) === null || _a === void 0 ? void 0 : _a.description} (${mappedList === null || mappedList === void 0 ? void 0 : mappedList.multimediaSizeLength})`; }));
                this.typeOfMediumDisplay = '';
                let mediaCtrl = 1;
                for (const media of multimediaList) {
                    if (mediaCtrl !== multimediaList.size) {
                        this.typeOfMediumDisplay += `${media}, `;
                        mediaCtrl++;
                    }
                    else {
                        this.typeOfMediumDisplay += media;
                    }
                }
            }
            else {
                this.typeOfMediumDisplay = '';
            }
        }, (err) => {
            this.typeOfMediumDisplay = '';
        });
    }
};
ModalSingleApplicationComponent.ctorParameters = () => [
    { type: _angular_platform_browser__WEBPACK_IMPORTED_MODULE_6__["DomSanitizer"] },
    { type: _services__WEBPACK_IMPORTED_MODULE_9__["ApiService"] },
    { type: _services__WEBPACK_IMPORTED_MODULE_9__["DataStorageService"] },
    { type: app_core_services_file_storage_service__WEBPACK_IMPORTED_MODULE_12__["FileStorageService"] },
    { type: _services__WEBPACK_IMPORTED_MODULE_9__["SweetAlertService"] },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_7__["Router"] },
    { type: ngx_spinner__WEBPACK_IMPORTED_MODULE_13__["NgxSpinnerService"] },
    { type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_5__["MatDialogRef"], decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Optional"] }] },
    { type: undefined, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Optional"] }, { type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Inject"], args: [_angular_material_dialog__WEBPACK_IMPORTED_MODULE_5__["MAT_DIALOG_DATA"],] }] }
];
ModalSingleApplicationComponent.propDecorators = {
    s1Application: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"] }]
};
ModalSingleApplicationComponent = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_4__["Component"])({
        selector: 'app-modal-single-application',
        template: _raw_loader_modal_single_application_component_html__WEBPACK_IMPORTED_MODULE_1__["default"],
        styles: [_modal_single_application_component_scss__WEBPACK_IMPORTED_MODULE_2__["default"]]
    })
], ModalSingleApplicationComponent);



/***/ }),

/***/ "Ro/G":
/*!*******************************************************************************************************************************************************!*\
  !*** ./src/app/modules/pages/applications/schedule-of-fees/special-applications/modal-special-applications/modal-special-applications.component.scss ***!
  \*******************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (".numbers-input {\n  text-align: end;\n}\n\n.total {\n  font-weight: 900;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9wYWdlcy9hcHBsaWNhdGlvbnMvc2NoZWR1bGUtb2YtZmVlcy9zcGVjaWFsLWFwcGxpY2F0aW9ucy9tb2RhbC1zcGVjaWFsLWFwcGxpY2F0aW9ucy9tb2RhbC1zcGVjaWFsLWFwcGxpY2F0aW9ucy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGVBQUE7QUFDRjs7QUFFQTtFQUNFLGdCQUFBO0FBQ0YiLCJmaWxlIjoic3JjL2FwcC9tb2R1bGVzL3BhZ2VzL2FwcGxpY2F0aW9ucy9zY2hlZHVsZS1vZi1mZWVzL3NwZWNpYWwtYXBwbGljYXRpb25zL21vZGFsLXNwZWNpYWwtYXBwbGljYXRpb25zL21vZGFsLXNwZWNpYWwtYXBwbGljYXRpb25zLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm51bWJlcnMtaW5wdXR7XHJcbiAgdGV4dC1hbGlnbjogZW5kO1xyXG59XHJcblxyXG4udG90YWx7XHJcbiAgZm9udC13ZWlnaHQ6IDkwMDtcclxufVxyXG4iXX0= */");

/***/ }),

/***/ "Sedh":
/*!*****************************************************************************************************************************************************!*\
  !*** ./src/app/modules/pages/applications/schedule-of-fees/special-applications/modal-special-applications/modal-special-applications.component.ts ***!
  \*****************************************************************************************************************************************************/
/*! exports provided: ModalSpecialApplicationsComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ModalSpecialApplicationsComponent", function() { return ModalSpecialApplicationsComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "mrSG");
/* harmony import */ var _raw_loader_modal_special_applications_component_html__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! raw-loader!./modal-special-applications.component.html */ "pvyd");
/* harmony import */ var _modal_special_applications_component_scss__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./modal-special-applications.component.scss */ "Ro/G");
/* harmony import */ var _shared_utils_constants__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./../../../../../../shared/utils/constants */ "9Vv1");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/material/dialog */ "0IaG");
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/platform-browser */ "jhN1");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/router */ "tyNb");
/* harmony import */ var _models__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @models */ "sKXY");
/* harmony import */ var _services__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @services */ "dJ3e");
/* harmony import */ var _shared__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @shared */ "M0ag");
/* harmony import */ var app_core_models_application_single_media_model__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! app/core/models/application-single-media.model */ "XLGj");
/* harmony import */ var app_core_services_file_storage_service__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! app/core/services/file.storage.service */ "TMp0");
/* harmony import */ var ngx_spinner__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ngx-spinner */ "JqCM");
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! sweetalert2 */ "PSD3");
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(sweetalert2__WEBPACK_IMPORTED_MODULE_14__);















let ModalSpecialApplicationsComponent = class ModalSpecialApplicationsComponent {
    constructor(sanitizer, apiService, dataStorage, fileStorageService, sweetAlertService, router, spinner, dialogRef, data) {
        var _a, _b, _c, _d, _e;
        this.sanitizer = sanitizer;
        this.apiService = apiService;
        this.dataStorage = dataStorage;
        this.fileStorageService = fileStorageService;
        this.sweetAlertService = sweetAlertService;
        this.router = router;
        this.spinner = spinner;
        this.dialogRef = dialogRef;
        this.data = data;
        this.s2Application = new _models__WEBPACK_IMPORTED_MODULE_8__["S2Application"]();
        this.attachmentDocument = new _models__WEBPACK_IMPORTED_MODULE_8__["AttachmentDocument"]();
        this.payment = new _models__WEBPACK_IMPORTED_MODULE_8__["Payment"]();
        this.applicationSingleMedia = new app_core_models_application_single_media_model__WEBPACK_IMPORTED_MODULE_11__["ApplicationSingleMedia"]();
        this.paymentTypeList = [];
        this.attachmentDocuments = [];
        this.previewDocument = false;
        this.isSubmitted = false;
        this.typeOfMediumDisplay = '';
        if (data) {
            if (data) {
                this.s2Application = data;
                console.log('S2', this.s2Application);
                switch (((_b = (_a = this.s2Application) === null || _a === void 0 ? void 0 : _a.applicationForm) === null || _b === void 0 ? void 0 : _b.refTypeOfMedium) || ((_e = (_d = (_c = this.payment) === null || _c === void 0 ? void 0 : _c.applicationFormS2) === null || _d === void 0 ? void 0 : _d.applicationForm) === null || _e === void 0 ? void 0 : _e.refTypeOfMedium)) {
                    case 'SINGLE MEDIA':
                        this.getApplicationSingleMedia();
                        break;
                    case 'MULTIMEDIA-MOVING':
                        this.getMultimediaMoving();
                        break;
                    case 'MULTIMEDIA-STATIC':
                        this.getMultimediaStatic();
                        break;
                    default:
                        break;
                }
                this.getPaymentDetails();
            }
        }
    }
    ngOnInit() {
        this.currentUser = this.dataStorage.getUserAccount();
        this.getPaymentList();
    }
    getPaymentDetails() {
        this.apiService.findAll(_shared__WEBPACK_IMPORTED_MODULE_10__["ENDPOINTS"].specialPaymentDetails + this.s2Application.id).subscribe((res) => {
            this.paymentDetails = res;
            this.paymentDetails.vat = this.paymentDetails.vat.toFixed(2);
        });
    }
    getPaymentList() {
        this.apiService.findAll(_shared__WEBPACK_IMPORTED_MODULE_10__["ENDPOINTS"].paymentType).subscribe((res) => {
            this.paymentTypeList = res.responseData.data;
            if (this.currentUser.userRole.name === _shared_utils_constants__WEBPACK_IMPORTED_MODULE_3__["USER_ROLES"].ROLE_APPLICANT) {
                const creditCardIndex = this.paymentTypeList
                    .findIndex((element) => element.paymentDescription === 'Credit Card');
                this.paymentTypeList.splice(creditCardIndex, 1);
            }
        });
    }
    selectFile(event) {
        const attachmentSize = event.target.files[0].size;
        if (event.target.files[0].type === 'application/pdf') {
            if (attachmentSize > 15000000) { // 1MB = 1M
                this.sweetAlertService.customErrorMessage(`Attachments' total file size should not exceed 15MB.`);
                event.target.value = '';
                return;
            }
            else {
                const pdfURL = URL.createObjectURL(event.target.files[0]);
                this.safeURLProofOfPayment = this.sanitizer.bypassSecurityTrustResourceUrl(pdfURL);
                this.previewDocument = true;
                // env.showSpinner = true;
                const reader = new FileReader();
                const [file] = event.target.files;
                reader.readAsDataURL(file);
                reader.onload = () => {
                };
            }
            this.selectedFiles = event.target.files;
        }
        else {
            this.sweetAlertService.customErrorMessage('Attachment should be in PDF format only.');
            event.target.value = '';
            return;
        }
    }
    uploadDocument(s2Application) {
        sweetalert2__WEBPACK_IMPORTED_MODULE_14___default.a.fire({
            text: 'Are you sure you want to submit this PROOF OF PAYMENT?',
            icon: 'question',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Confirm'
        }).then((result) => {
            if (result.value) {
                this.spinner.show();
                let params = '';
                params = '?&attachmentType=' + _shared__WEBPACK_IMPORTED_MODULE_10__["ATTACHMENT_TYPE"].PAYMENT + '&submissionType=' + s2Application.submissionType;
                this.fileStorageService.pushFileToStorage(_shared__WEBPACK_IMPORTED_MODULE_10__["ENDPOINTS"].attachmentDocument, this.selectedFiles.item(0), params)
                    .subscribe(res => {
                    const obj = res.responseData.data;
                    console.log(obj);
                    this.s2Application.paymentAttachmentReference = obj.paymentAttachmentReference;
                    this.payment.paymentAttachmentReference = obj.paymentAttachmentReference;
                    this.payment.amountDue = s2Application.amount;
                    this.payment.applicationFormS2 = s2Application;
                    this.payment.appFormReference = s2Application.appFormReference;
                    this.payment.filename = obj.filename;
                    this.saveProofOfPayment();
                    // this.previewDocument = true;
                    this.selectedFiles = undefined;
                    this.spinner.hide();
                    this.router.navigateByUrl('asc/page/application/special-applications');
                }, (err) => {
                    this.spinner.hide();
                    this.sweetAlertService.error(err);
                }, () => {
                    // actions after subscription
                    this.spinner.hide();
                });
            }
        });
    }
    saveProofOfPayment() {
        console.log('Saving payment...');
        this.dataStorage.setDisplayProgressbar(true);
        this.payment.paymentStatus = _shared__WEBPACK_IMPORTED_MODULE_10__["PAYMENT_STATUS"].UNPAID;
        this.payment.id = 0;
        this.payment.officialReceiptNo = '';
        this.payment.paymentMethod = null;
        console.log('PAYMENT : ', this.payment);
        this.apiService.save(`${_shared__WEBPACK_IMPORTED_MODULE_10__["ENDPOINTS"].s2ApplicationFormPresentor}payment-type-id/${this.paymentType.id}
    /payment-special-clearing/submit`, this.payment).subscribe((res) => {
            console.log('SAVED STATUS: ', res.responseData.data);
            this.safeURLProofOfPayment = this.sanitizer.bypassSecurityTrustResourceUrl(res.responseData.data.fileURL);
            this.isSubmitted = true;
            this.sweetAlertService.customSuccessMessage('Proof of payment successfully submitted.');
            this.closeModal();
        }, (err) => {
            console.log(err);
            this.sweetAlertService.error(err);
            this.dataStorage.setDisplayProgressbar(false);
        }, () => {
            this.dataStorage.setDisplayProgressbar(false);
        });
    }
    closeModal() {
        this.dialogRef.close();
        this.router.navigate(['asc/page/application/special-applications']);
    }
    ngOnDestroy() {
        // this.s2Application = null;
    }
    getApplicationSingleMedia() {
        var _a, _b;
        this.apiService.findByParam(_shared__WEBPACK_IMPORTED_MODULE_10__["ENDPOINTS"].applicationSingleMedia, `app-form-reference/${(_b = (_a = this.s2Application) === null || _a === void 0 ? void 0 : _a.applicationForm) === null || _b === void 0 ? void 0 : _b.appFormReference}`).subscribe((res) => {
            var _a, _b, _c, _d;
            if (res.responseData.data.length > 0) {
                this.applicationSingleMedia = res.responseData.data[0];
                this.typeOfMediumDisplay = `${(_c = (_b = (_a = this.applicationSingleMedia) === null || _a === void 0 ? void 0 : _a.mediumExecution) === null || _b === void 0 ? void 0 : _b.typeOfMedium) === null || _c === void 0 ? void 0 : _c.description} (${(_d = this.applicationSingleMedia) === null || _d === void 0 ? void 0 : _d.sizeLength})`;
            }
            else {
                this.typeOfMediumDisplay = '';
            }
        }, (err) => {
            this.typeOfMediumDisplay = '';
        });
    }
    getMultimediaStatic() {
        var _a, _b;
        this.apiService.findByParam(_shared__WEBPACK_IMPORTED_MODULE_10__["ENDPOINTS"].applicationMultimedia, `app-form-reference/${(_b = (_a = this.s2Application) === null || _a === void 0 ? void 0 : _a.applicationForm) === null || _b === void 0 ? void 0 : _b.appFormReference}`).subscribe((res) => {
            if (res.responseData.data.length > 0) {
                const multimediaList = new Set(res.responseData.data.map(mappedList => { var _a; return `${(_a = mappedList === null || mappedList === void 0 ? void 0 : mappedList.typeOfMedium) === null || _a === void 0 ? void 0 : _a.description} (${mappedList === null || mappedList === void 0 ? void 0 : mappedList.multimediaSizeLength})`; }));
                this.typeOfMediumDisplay = '';
                let mediaCtrl = 1;
                for (const media of multimediaList) {
                    if (mediaCtrl !== multimediaList.size) {
                        this.typeOfMediumDisplay += `${media}, `;
                        mediaCtrl++;
                    }
                    else {
                        this.typeOfMediumDisplay += media;
                    }
                }
            }
            else {
                this.typeOfMediumDisplay = '';
            }
        }, (err) => {
            this.typeOfMediumDisplay = '';
        });
    }
    getMultimediaMoving() {
        var _a, _b;
        this.apiService.findByParam(_shared__WEBPACK_IMPORTED_MODULE_10__["ENDPOINTS"].applicationMultimedia, `app-form-reference/${(_b = (_a = this.s2Application) === null || _a === void 0 ? void 0 : _a.applicationForm) === null || _b === void 0 ? void 0 : _b.appFormReference}`).subscribe((res) => {
            if (res.responseData.data.length > 0) {
                const multimediaList = new Set(res.responseData.data.map(mappedList => { var _a; return `${(_a = mappedList === null || mappedList === void 0 ? void 0 : mappedList.typeOfMedium) === null || _a === void 0 ? void 0 : _a.description} (${mappedList === null || mappedList === void 0 ? void 0 : mappedList.multimediaSizeLength})`; }));
                this.typeOfMediumDisplay = '';
                let mediaCtrl = 1;
                for (const media of multimediaList) {
                    if (mediaCtrl !== multimediaList.size) {
                        this.typeOfMediumDisplay += `${media}, `;
                        mediaCtrl++;
                    }
                    else {
                        this.typeOfMediumDisplay += media;
                    }
                }
            }
            else {
                this.typeOfMediumDisplay = '';
            }
        }, (err) => {
            this.typeOfMediumDisplay = '';
        });
    }
};
ModalSpecialApplicationsComponent.ctorParameters = () => [
    { type: _angular_platform_browser__WEBPACK_IMPORTED_MODULE_6__["DomSanitizer"] },
    { type: _services__WEBPACK_IMPORTED_MODULE_9__["ApiService"] },
    { type: _services__WEBPACK_IMPORTED_MODULE_9__["DataStorageService"] },
    { type: app_core_services_file_storage_service__WEBPACK_IMPORTED_MODULE_12__["FileStorageService"] },
    { type: _services__WEBPACK_IMPORTED_MODULE_9__["SweetAlertService"] },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_7__["Router"] },
    { type: ngx_spinner__WEBPACK_IMPORTED_MODULE_13__["NgxSpinnerService"] },
    { type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_5__["MatDialogRef"], decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Optional"] }] },
    { type: undefined, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Optional"] }, { type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Inject"], args: [_angular_material_dialog__WEBPACK_IMPORTED_MODULE_5__["MAT_DIALOG_DATA"],] }] }
];
ModalSpecialApplicationsComponent.propDecorators = {
    s2Application: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"] }]
};
ModalSpecialApplicationsComponent = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_4__["Component"])({
        selector: 'app-modal-special-applications',
        template: _raw_loader_modal_special_applications_component_html__WEBPACK_IMPORTED_MODULE_1__["default"],
        styles: [_modal_special_applications_component_scss__WEBPACK_IMPORTED_MODULE_2__["default"]]
    })
], ModalSpecialApplicationsComponent);



/***/ }),

/***/ "SgpT":
/*!***************************************************************************************************!*\
  !*** ./src/app/modules/pages/applications/performance-metrics/performance-metrics.component.scss ***!
  \***************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcGFnZXMvYXBwbGljYXRpb25zL3BlcmZvcm1hbmNlLW1ldHJpY3MvcGVyZm9ybWFuY2UtbWV0cmljcy5jb21wb25lbnQuc2NzcyJ9 */");

/***/ }),

/***/ "UMNn":
/*!**********************************************************************************************************************!*\
  !*** ./src/app/modules/pages/applications/schedule-of-fees/special-applications/special-applications.component.scss ***!
  \**********************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcGFnZXMvYXBwbGljYXRpb25zL3NjaGVkdWxlLW9mLWZlZXMvc3BlY2lhbC1hcHBsaWNhdGlvbnMvc3BlY2lhbC1hcHBsaWNhdGlvbnMuY29tcG9uZW50LnNjc3MifQ== */");

/***/ }),

/***/ "VE5Z":
/*!**********************************************************************!*\
  !*** ./src/app/core/models/media-models/mulstimedia-static.const.ts ***!
  \**********************************************************************/
/*! exports provided: MultiMediaStaticConst */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MultiMediaStaticConst", function() { return MultiMediaStaticConst; });
class MultiMediaStaticConst {
    constructor() {
        this.data = new Array();
        this.data = [
            {
                id: 0,
                multimediaStaticMedium: 'collaterals',
                hasSelected: false,
                sizeLength: 0
            },
            {
                id: 1,
                multimediaStaticMedium: 'digital static',
                hasSelected: false,
                sizeLength: 0
            },
            {
                id: 2,
                multimediaStaticMedium: 'ooh',
                hasSelected: false,
                sizeLength: 0
            },
            {
                id: 3,
                multimediaStaticMedium: 'print',
                hasSelected: false,
                sizeLength: 0
            }
        ];
    }
}


/***/ }),

/***/ "WQFk":
/*!***************************************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/modules/pages/applications/client-information/client-information.component.html ***!
  \***************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<form [formGroup]=\"clientInformationForm\"\r\n*ngIf=\"s1Application?.multipleApplication?.submissionStatus !== 'UNPROCESSED' &&\r\n        s1Application?.status !== 'DISAPPROVED' &&\r\n        s1Application?.status !== 'APPROVED' &&\r\n        s1Application?.status !== 'APPROVED' &&\r\n        multipleApplication?.status !== 'APPROVED' &&\r\n        s1Application?.applicationRequest?.status !== 'APPROVED'\">\r\n\r\n  <div class=\"row\">\r\n    <!-- <mat-form-field class=\"col-md-5\" appearance=\"outline\">\r\n      <mat-label>Client Membership Affiliation</mat-label>\r\n      <mat-select [(ngModel)]=\"s1Application.membersAffiliation\" name=\"membersAffiliation\" formControlName=\"membersAffiliation\"\r\n        [compareWith]=\"compareMembersAffiliation\" [disabled]=\"isAscUser && isDisableFieldOnUpdate\">\r\n        <mat-option *ngFor=\"let i of memberAffiliationList\" [value]=\"i\">\r\n          {{i.description}}\r\n        </mat-option>\r\n      </mat-select>\r\n    </mat-form-field> -->\r\n\r\n    <div class=\"col-md-12 float-right\" style=\"padding-bottom:10px;\" *ngIf=\"s1Application?.company?.status === 'FOR_APPROVAL' && isAscUser\">\r\n      <button mat-raised-button class=\"button-red\" (click)=\"openNewCompanyModal('update')\">\r\n        <i class=\"material-icons color__white\">error_outline</i> View/Approve Company\r\n      </button>\r\n      <br>\r\n    </div>\r\n\r\n    <mat-form-field class=\"col-md-7\" appearance=\"outline\">\r\n      <mat-label>Client Company Name\r\n        <span class=\"badge rounded-pill bg-warning\" *ngIf=\"s1Application?.company?.status === 'FOR_APPROVAL' \">\r\n          For Approval\r\n        </span>\r\n        <span class=\"badge rounded-pill bg-danger\" *ngIf=\"s1Application?.company?.delinquent \">\r\n          With Penalty\r\n        </span>\r\n        <span class=\"required\">*</span>\r\n      </mat-label>\r\n      <mat-select [(ngModel)]=\"s1Application.company\" name=\"company\" formControlName=\"company\"\r\n        [compareWith]=\"compareCompanyName\"\r\n        [disabled]=\"(isAscUser && isDisableFieldOnUpdate) || (s2Application?.applicationForm || s1Application?.status === 'FOR_APPROVAL')\">\r\n        <mat-option (click)=\"isNewCompany=true;showCompanyAddress=false\" value=\"\" (click)=\"openNewCompanyModal()\">\r\n          <span class=\"badge bg-success dropdown-badge\">Add New Company</span>\r\n        </mat-option>\r\n        <mat-option *ngFor=\"let i of companyList\" [value]=\"i\" (click)=\"getCompanyAddress(i.companyName)\">\r\n          {{i.companyName}}\r\n        </mat-option>\r\n        <!-- <mat-option >[New\r\n          Company]</mat-option> -->\r\n      </mat-select>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field class=\"col-md-5\" appearance=\"outline\" *ngIf=\"s1Application.company\">\r\n      <mat-label>\r\n        Client Membership Affiliation\r\n        <span class=\"badge rounded-pill bg-danger\"\r\n          *ngIf=\"s1Application?.company?.membersAffiliation?.status === 'INACTIVE' \">\r\n          Inactive\r\n        </span>\r\n      </mat-label>\r\n      <input matInput readonly [value]=\"s1Application?.company?.membersAffiliation?.description\">\r\n    </mat-form-field>\r\n\r\n    <!-- <div class=\"col-md-4\" *ngIf=\"s1Application?.applicationForm?.company?.status === 'FOR_APPROVAL' \">\r\n      <span class=\"badge rounded-pill bg-warning\">\r\n        For Approval\r\n      </span>\r\n    </div> -->\r\n\r\n    <div class=\"row\" *ngIf=\"isNewCompany==true\" [hidden]=\"s1Application?.company?.status !== 'FOR_APPROVAL'\">\r\n      <!-- <mat-form-field class=\"col-md-4\" appearance=\"outline\">\r\n        <mat-label>Client Membership Affiliation</mat-label>\r\n        <mat-select [(ngModel)]=\"company.membersAffiliation\" name=\"membersAffiliation\" [compareWith]=\"compareMembersAffiliation\"\r\n          formControlName=\"membersAffiliation\" matNativeControl required>\r\n          <mat-option *ngFor=\"let i of memberAffiliationList\" [value]=\"i\">\r\n            {{i.description}}\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field> -->\r\n\r\n      <mat-form-field class=\"col-md-4\" appearance=\"outline\" [hidden]=\" company?.country?.id > 1 && company?.country \">\r\n        <mat-label>Country</mat-label>\r\n        <!-- <input matInput disabled value=\"PHIL\"> -->\r\n        <!-- <input matInput disabled [(ngModel)]=\"company.country\" formControlName=\"country\"> -->\r\n        <mat-select [(ngModel)]=\"company.country\" name=\"country\" [compareWith]=\"compareCountry\"\r\n          formControlName=\"country\" matNativeControl required disabled>\r\n          <mat-option *ngFor=\"let i of countryList\" [value]=\"i\">\r\n            {{i.code}} - {{i.name}}\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field class=\"col-md-8\" appearance=\"outline\" [hidden]=\"company?.country?.id > 1 && company?.country \">\r\n        <mat-label>Complete Address</mat-label>\r\n        <textarea matInput [(ngModel)]=\"company.completeAddress\" formControlName=\"companyAddress\" name=\"completeAddress\"\r\n          [readonly]=\"true\"></textarea>\r\n      </mat-form-field>\r\n    </div>\r\n\r\n    <div class=\"row\" *ngIf=\"showCompanyAddress==true\">\r\n      <!-- FOR S1 APPLICATION FORM -->\r\n      <mat-form-field class=\"col-md-8\" appearance=\"outline\">\r\n        <mat-label>Company Address</mat-label>\r\n        <textarea matInput readonly [value]=\"s1Application?.company?.completeAddress\"></textarea>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field class=\"col-md-4\" appearance=\"outline\">\r\n        <mat-label>Country</mat-label>\r\n        <input matInput readonly [value]=\"s1Application?.company?.country?.name\">\r\n      </mat-form-field>\r\n    </div>\r\n\r\n  </div>\r\n\r\n  <div class=\"row\">\r\n    <mat-form-field class=\"col-md-4\" appearance=\"outline\">\r\n      <mat-label>\r\n        Brand\r\n        <span class=\"badge rounded-pill bg-warning\" *ngIf=\"s1Application?.brand?.status === 'FOR_APPROVAL'\">\r\n          For Approval\r\n        </span>\r\n        <span class=\"badge rounded-pill bg-danger\" *ngIf=\"s1Application?.brand?.penalty\">\r\n          With Penalty\r\n        </span>\r\n        <span class=\"required\">*</span>\r\n      </mat-label>\r\n      <mat-select [(ngModel)]=\"s1Application.brand\" name=\"brand\" formControlName=\"brand\" [compareWith]=\"compareBrand\"\r\n        [disabled]=\"(isAscUser && isDisableFieldOnUpdate) || (s2Application?.applicationForm || s1Application?.status === 'FOR_APPROVAL')\" matTooltip=\"Client's Brand\"\r\n        (selectionChange)=\"setBrand()\">\r\n        <mat-option value=\"\" (click)=\"openNewBrandModal()\"><span class=\"badge bg-success dropdown-badge\">Add New Brand</span></mat-option>\r\n        <mat-option *ngFor=\"let i of brandList\" [value]=\"i\">\r\n          {{i.description}}\r\n        </mat-option>\r\n      </mat-select>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field class=\"col-md-4\" appearance=\"outline\">\r\n      <mat-label>\r\n        Product\r\n        <span class=\"badge rounded-pill bg-warning\" *ngIf=\"s1Application?.product?.status === 'FOR_APPROVAL'\">\r\n          For Approval\r\n        </span>\r\n        <span class=\"required\">*</span>\r\n      </mat-label>\r\n      <mat-select [(ngModel)]=\"s1Application.product\" name=\"product\" formControlName=\"product\"\r\n        [compareWith]=\"compareProduct\" (selectionChange)=\"setProductList()\"\r\n        [disabled]=\"(isAscUser && isDisableFieldOnUpdate || (s2Application?.applicationForm || s1Application?.status === 'FOR_APPROVAL')) || !s1Application.brand\">\r\n        <mat-option value=\"\" (click)=\"openNewProductModal()\"><span class=\"badge bg-success dropdown-badge\">Add New Product</span></mat-option>\r\n        <mat-option *ngFor=\"let i of productList\" [value]=\"i\">\r\n          {{i.description}}\r\n        </mat-option>\r\n      </mat-select>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field class=\"col-md-4\" appearance=\"outline\">\r\n      <mat-label>Category</mat-label>\r\n      <input matInput readonly [value]=\"s1Application?.product?.category?.description\" />\r\n    </mat-form-field>\r\n\r\n    <!-- <mat-form-field *ngIf=\"s1Application.brand\" class=\"col-md-4\" appearance=\"outline\">\r\n      <mat-label>Product</mat-label>\r\n      <input matInput [(ngModel)]=\"s1Application.brand.product.description\" name=\"product\" formControlName=\"product\"\r\n        readonly>\r\n    </mat-form-field> -->\r\n\r\n    <!-- <mat-form-field *ngIf=\"s1Application.brand\" class=\"col-md-4\" appearance=\"outline\">\r\n      <mat-label>Category</mat-label>\r\n      <input matInput [(ngModel)]=\"s1Application.brand.category.description\" name=\"category\" formControlName=\"category\"\r\n        readonly>\r\n    </mat-form-field> -->\r\n    <!-- <div class=\"col-md-4\" *ngIf=\"s1Application?.brand?.status === 'FOR_APPROVAL' \">\r\n      <span class=\"badge rounded-pill bg-warning\">\r\n        For Approval\r\n      </span>\r\n    </div> -->\r\n    <div class=\"col-md-12 float-right\" style=\"padding-bottom:10px;\" *ngIf=\"s1Application?.brand?.status === 'FOR_APPROVAL' && isAscUser\">\r\n      <button mat-raised-button class=\"button-red\" (click)=\"openNewBrandModal('update')\">\r\n        <i class=\"material-icons color__white\">error_outline</i> View/Approve Brand\r\n      </button>\r\n    </div>\r\n    <div class=\"col-md-12 float-right\" style=\"padding-bottom:10px;\" *ngIf=\"s1Application?.product?.status === 'FOR_APPROVAL' && isAscUser\">\r\n      <button mat-raised-button class=\"button-red\" (click)=\"openNewProductModal('update')\">\r\n        <i class=\"material-icons color__white\">error_outline</i> View/Approve Product\r\n      </button>\r\n    </div>\r\n  </div>\r\n</form>\r\n\r\n<!-- FOR MULTIPLE/SPECIAL PREVIEW -->\r\n<div class=\"row\" *ngIf=\"multipleApplication?.status === 'APPROVED' || s1Application?.multipleApplication?.submissionStatus === 'UNPROCESSED' || s1Application?.status === 'APPROVED' || s1Application?.status === 'DISAPPROVED' || s1Application?.applicationRequest?.status === 'APPROVED'\">\r\n  <div class=\"row\">\r\n    <!-- <div class=\"col-md-4\" appearance=\"outline\">\r\n        <mat-label>Client Membership Affiliation</mat-label>\r\n        <input matInput [value]=\"previewS1Application?.membersAffiliation?.description\" disabled>\r\n      </div> -->\r\n    <mat-form-field class=\"col-md-4\" appearance=\"outline\">\r\n      <mat-label>Client Company Name</mat-label>\r\n      <input matInput [value]=\"s1Application?.company?.companyName\" readonly>\r\n    </mat-form-field>\r\n    <mat-form-field class=\"col-md-4\" appearance=\"outline\">\r\n      <mat-label>Client Membership Affiliation</mat-label>\r\n      <input matInput [value]=\"s1Application?.company?.membersAffiliation?.description\" readonly>\r\n    </mat-form-field>\r\n  </div>\r\n\r\n  <div class=\"row\">\r\n    <mat-form-field class=\"col-md-4\" appearance=\"outline\">\r\n      <mat-label>Brand</mat-label>\r\n      <input matInput [value]=\"s1Application?.brand?.description\" readonly>\r\n    </mat-form-field>\r\n    <mat-form-field class=\"col-md-4\" appearance=\"outline\">\r\n      <mat-label>Product</mat-label>\r\n      <input matInput [value]=\"s1Application?.product?.description\" readonly>\r\n    </mat-form-field>\r\n    <mat-form-field class=\"col-md-4\" appearance=\"outline\">\r\n      <mat-label>Category</mat-label>\r\n      <input matInput [value]=\"s1Application?.product?.category?.description\" readonly>\r\n    </mat-form-field>\r\n  </div>\r\n</div>\r\n");

/***/ }),

/***/ "Wf2x":
/*!***************************************************!*\
  !*** ./src/app/modules/pages/accounting/index.ts ***!
  \***************************************************/
/*! exports provided: AccountingModule, AddPaymentComponent, AddPaymentModule, ListPaymentComponent, ListPaymentModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _accounting_module__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./accounting.module */ "tlev");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AccountingModule", function() { return _accounting_module__WEBPACK_IMPORTED_MODULE_0__["AccountingModule"]; });

/* harmony import */ var _add_payment_add_payment_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./add-payment/add-payment.component */ "N5VM");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AddPaymentComponent", function() { return _add_payment_add_payment_component__WEBPACK_IMPORTED_MODULE_1__["AddPaymentComponent"]; });

/* harmony import */ var _add_payment_add_payment_module__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./add-payment/add-payment.module */ "9Ls8");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AddPaymentModule", function() { return _add_payment_add_payment_module__WEBPACK_IMPORTED_MODULE_2__["AddPaymentModule"]; });

/* harmony import */ var _list_payment_list_payment_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./list-payment/list-payment.component */ "5iOt");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ListPaymentComponent", function() { return _list_payment_list_payment_component__WEBPACK_IMPORTED_MODULE_3__["ListPaymentComponent"]; });

/* harmony import */ var _list_payment_list_payment_module__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./list-payment/list-payment.module */ "O1SJ");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ListPaymentModule", function() { return _list_payment_list_payment_module__WEBPACK_IMPORTED_MODULE_4__["ListPaymentModule"]; });








/***/ }),

/***/ "X/+i":
/*!********************************************************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/modules/pages/applications/schedule-of-fees/single-application/single-application.component.html ***!
  \********************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<form>\r\n    <div class=\"container-fluid\">\r\n      <div class=\"row\">\r\n        <div class=\"col-md-12 title\">\r\n          <mat-label>\r\n            <mat-icon>view_list</mat-icon> Individual Applications - For Payment\r\n          </mat-label>\r\n        </div>\r\n      </div>\r\n      <hr>\r\n      <br>\r\n      <div class=\"col-md-12\" fxLayout fxLayoutAlign=\"center center\">\r\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n          <input matInput type=\"text\" placeholder=\"Company Name\">\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div class=\"mat-elevation-z8 fields\">\r\n        <table mat-table [dataSource]=\"dataSource\" matSort>\r\n          <ng-container matColumnDef=\"referenceCode\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> REFERENCE CODE </th>\r\n            <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"openModal(element)\"> {{element?.referenceCode | uppercase}}</td>\r\n          </ng-container>\r\n          <ng-container matColumnDef=\"typeOfApplication\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> TYPE OF APPLICATION</th>\r\n            <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"openModal(element)\">{{element?.applicationType.description | uppercase}} - {{element?.formType?.replaceAll('_',' ') | uppercase}}</td>\r\n          </ng-container>\r\n          <ng-container matColumnDef=\"brand\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> BRAND</th>\r\n            <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"openModal(element)\">{{element?.brand.description | uppercase}}</td>\r\n          </ng-container>\r\n          <ng-container matColumnDef=\"medium\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> MEDIUM</th>\r\n            <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"openModal(element)\">{{element?.typeOfMedium | uppercase}}</td>\r\n          </ng-container>\r\n          <ng-container matColumnDef=\"applicantCompanyName\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> APPLICANT COMPANY NAME</th>\r\n            <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"openModal(element)\">{{element?.company.companyName | uppercase}}</td>\r\n          </ng-container>\r\n          <ng-container matColumnDef=\"paymentStatus\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> PAYMENT STATUS</th>\r\n            <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"openModal(element)\">{{element?.paymentStatus?.replaceAll('_',' ') | uppercase}}</td>\r\n          </ng-container>\r\n\r\n\r\n\r\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n          <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n        </table>\r\n        <div class=\"no-record\" [hidden]=\"dataSource && dataSource?.data?.length > 0\">\r\n          No record found.\r\n        </div>\r\n        <mat-paginator [pageSizeOptions]=\"[10, 20, 50]\" showFirstLastButtons></mat-paginator>\r\n      </div>\r\n      <br>\r\n    </div>\r\n  </form>\r\n");

/***/ }),

/***/ "XnC/":
/*!*****************************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/modules/pages/accounting/upload-payment/upload-payment.component.html ***!
  \*****************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\r\n  <div class=\"row fields\">\r\n    <h4>\r\n      <i class=\"material-icons\">label_important</i> &nbsp;Proof of Payment\r\n    </h4>\r\n    <br>\r\n    <div class=\"col-md-4\" appearance=\"outline\">\r\n      <mat-label>Filename: </mat-label><br>\r\n      <input class=\"file-upload\" type=\"file\" accept=\".pdf\" (change)=\"selectFile($event)\" [hidden]=\"isSubmitted==true\"><br><br>\r\n\r\n      <div class=\"col-md-10\">\r\n        <div class=\"col-md-5\" appearance=\"outline\">\r\n          <mat-label>Amount Due:</mat-label>\r\n            <input type=\"text\" [(ngModel)]=\"s1Application.amount\" class=\"form-control amountDue\" [disabled]=\"true\" name=\"amountDue\">\r\n        </div>\r\n        <br>\r\n        <mat-form-field class=\"col-md-8\" appearance=\"outline\">\r\n          <mat-label>Payment Mode<span class=\"required-field\"> <mat-icon>notification_important</mat-icon>\r\n          </span></mat-label>\r\n          <mat-select [(ngModel)]=\"payment.paymentMethod\" name=\"paymentMethod\">\r\n            <mat-option *ngFor=\"let i of paymentTypeList\" [value]=\"i\" (click)=\"selectedPaymentType(i)\">\r\n              {{i.paymentDescription}}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n        <br>\r\n        <form [formGroup]=\"paymentForm\">\r\n        <div class=\"col-md-12\" appearance=\"outline\">\r\n          <mat-label>Remarks:</mat-label>\r\n          <textarea width=\"20\"  height=\"20\" [(ngModel)]=\"payment.remarks\" class=\"form-control\" name=\"remarks\" formControlName=\"remarks\"></textarea>\r\n        </div>\r\n\r\n</form>\r\n\r\n      </div>\r\n      <br><br>\r\n      <!-- <button mat-raised-button class=\"button-red button-right\" (click)=\"uploadDocument()\" *ngIf=\"enableUploadButton==true\">\r\n        <i class=\"material-icons add-document\">upload</i> UPLOAD\r\n      </button> -->\r\n    </div>\r\n    <div class=\"col-md-8\" appearance=\"outline\" *ngIf=\"previewDocument==true\">\r\n      <div class=\"file-upload\">\r\n        <object [data]=\"safeURLProofOfPayment\" type=\"application/pdf\" width=\"100%\" height=\"400\">\r\n          <iframe [src]=\"safeURLProofOfPayment\" width=\"100%\" height=\"400\">\r\n            <p>This browser does not support PDF!</p>\r\n          </iframe>\r\n        </object>\r\n      </div>\r\n    </div>\r\n    <div class=\"row\"><br></div>\r\n    <div class=\"col-md-12\" appearance=\"outline\" [hidden]=\"isSubmitted==true\">\r\n        <button mat-raised-button class=\"button-red button-right\" (click)=\"uploadDocument(s1Application)\" *ngIf=\"previewDocument==true\" [disabled]=\"!paymentType\">\r\n            <i class=\"material-icons add-document\">save</i> SUBMIT\r\n        </button>\r\n    </div>\r\n    <div class=\"row\"><br></div>\r\n  </div>\r\n");

/***/ }),

/***/ "XryR":
/*!***************************************************************************!*\
  !*** ./src/app/modules/pages/applications/applications-routing.module.ts ***!
  \***************************************************************************/
/*! exports provided: ApplicationsRoutingModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ApplicationsRoutingModule", function() { return ApplicationsRoutingModule; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "mrSG");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "tyNb");
/* harmony import */ var _shared__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @shared */ "M0ag");




const routes = [
    {
        path: _shared__WEBPACK_IMPORTED_MODULE_3__["URL_PATHS"].S1_APPLICATION,
        loadChildren: () => Promise.all(/*! import() | s1-application-s1-application-module */[__webpack_require__.e("common"), __webpack_require__.e("s1-application-s1-application-module")]).then(__webpack_require__.bind(null, /*! ./s1-application/s1-application.module */ "J91h"))
            .then(m => m.S1ApplicationModule)
    },
    {
        path: _shared__WEBPACK_IMPORTED_MODULE_3__["URL_PATHS"].S2_APPLICATION,
        loadChildren: () => __webpack_require__.e(/*! import() | s2-application-s2-application-module */ "s2-application-s2-application-module").then(__webpack_require__.bind(null, /*! ./s2-application/s2-application.module */ "A0SB"))
            .then(m => m.S2ApplicationModule)
    },
    {
        path: _shared__WEBPACK_IMPORTED_MODULE_3__["URL_PATHS"].SCHEDULE_OF_FEES_SINGLE_APPLICATION,
        loadChildren: () => __webpack_require__.e(/*! import() | schedule-of-fees-single-application-single-application-module */ "schedule-of-fees-single-application-single-application-module").then(__webpack_require__.bind(null, /*! ./schedule-of-fees/single-application/single-application.module */ "T30m"))
            .then(m => m.SingleApplicationModule)
    },
    {
        path: _shared__WEBPACK_IMPORTED_MODULE_3__["URL_PATHS"].SCHEDULE_OF_FEES_SINGLE_APPLICATION + '/:id',
        loadChildren: () => __webpack_require__.e(/*! import() | schedule-of-fees-single-application-single-application-module */ "schedule-of-fees-single-application-single-application-module").then(__webpack_require__.bind(null, /*! ./schedule-of-fees/single-application/single-application.module */ "T30m"))
            .then(m => m.SingleApplicationModule)
    },
    {
        path: _shared__WEBPACK_IMPORTED_MODULE_3__["URL_PATHS"].SCHEDULE_OF_FEES_MULTIPLE_APPLICATIONS,
        loadChildren: () => __webpack_require__.e(/*! import() | schedule-of-fees-multiple-applications-multiple-applications-module */ "schedule-of-fees-multiple-applications-multiple-applications-module").then(__webpack_require__.bind(null, /*! ./schedule-of-fees/multiple-applications/multiple-applications.module */ "VOEw"))
            .then(m => m.MultipleApplicationsModule)
    },
    {
        path: _shared__WEBPACK_IMPORTED_MODULE_3__["URL_PATHS"].SCHEDULE_OF_FEES_MULTIPLE_APPLICATIONS + '/:id',
        loadChildren: () => __webpack_require__.e(/*! import() | schedule-of-fees-multiple-applications-multiple-applications-module */ "schedule-of-fees-multiple-applications-multiple-applications-module").then(__webpack_require__.bind(null, /*! ./schedule-of-fees/multiple-applications/multiple-applications.module */ "VOEw"))
            .then(m => m.MultipleApplicationsModule)
    },
    {
        path: _shared__WEBPACK_IMPORTED_MODULE_3__["URL_PATHS"].SCHEDULE_OF_FEES_SPECIAL_APPLICATIONS,
        loadChildren: () => __webpack_require__.e(/*! import() | schedule-of-fees-special-applications-special-applications-module */ "schedule-of-fees-special-applications-special-applications-module").then(__webpack_require__.bind(null, /*! ./schedule-of-fees/special-applications/special-applications.module */ "Bysl"))
            .then(m => m.SpecialApplicationsModule)
    },
    {
        path: _shared__WEBPACK_IMPORTED_MODULE_3__["URL_PATHS"].ACCOUNTS_PAYABLE,
        loadChildren: () => __webpack_require__.e(/*! import() | schedule-of-fees-accounts-payable-accounts-payable-module */ "schedule-of-fees-accounts-payable-accounts-payable-module").then(__webpack_require__.bind(null, /*! ./schedule-of-fees/accounts-payable/accounts-payable.module */ "UcjW"))
            .then(m => m.AccountsPayableModule)
    },
    {
        path: _shared__WEBPACK_IMPORTED_MODULE_3__["URL_PATHS"].SCHEDULE_OF_FEES_SPECIAL_APPLICATIONS + '/:id',
        loadChildren: () => __webpack_require__.e(/*! import() | schedule-of-fees-special-applications-special-applications-module */ "schedule-of-fees-special-applications-special-applications-module").then(__webpack_require__.bind(null, /*! ./schedule-of-fees/special-applications/special-applications.module */ "Bysl"))
            .then(m => m.SpecialApplicationsModule)
    },
    {
        path: _shared__WEBPACK_IMPORTED_MODULE_3__["URL_PATHS"].APPLICATION_REASSIGNMENT,
        loadChildren: () => Promise.resolve(/*! import() */).then(__webpack_require__.bind(null, /*! ./reassignment/reassignment.module */ "zdBp"))
            .then(m => m.ReassignmentModule)
    }
];
let ApplicationsRoutingModule = class ApplicationsRoutingModule {
};
ApplicationsRoutingModule = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModule"])({
        imports: [_angular_router__WEBPACK_IMPORTED_MODULE_2__["RouterModule"].forChild(routes)],
        exports: [_angular_router__WEBPACK_IMPORTED_MODULE_2__["RouterModule"]]
    })
], ApplicationsRoutingModule);



/***/ }),

/***/ "ZYcb":
/*!******************************************************************************************************************!*\
  !*** ./src/app/modules/pages/applications/s2-application/list-s2-application/list-s2-application.component.scss ***!
  \******************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("th {\n  background-color: rgba(202, 202, 202, 0.438);\n  font-weight: 500;\n  color: black;\n}\n\n.row {\n  align-items: center;\n}\n\n.tr-center {\n  text-align: center;\n}\n\n.main-table .material-icons {\n  color: white;\n}\n\n.toa-tab .material-icons {\n  color: white;\n}\n\n.icon {\n  text-align: end;\n}\n\n.legend-content {\n  padding: 5px 10px;\n  border: #dadada solid 2px;\n  border-radius: 5px;\n}\n\n.legend-table {\n  width: 100%;\n  font-size: 10px;\n  font-weight: 600;\n}\n\n.legend-table .legend-box {\n  padding: 5px;\n  display: inline-block;\n  margin-right: 4%;\n  vertical-align: sub;\n  border: solid 1px #8a8a8a;\n}\n\n.legend-table td {\n  margin: auto;\n}\n\n.legend-table td .legend-orange {\n  background-color: #fca402;\n}\n\n.legend-table td .legend-green {\n  background-color: #8fcf8f;\n}\n\n.legend-table td .legend-blue {\n  background-color: lightblue;\n}\n\n.legend-table td .legend-red {\n  background-color: #ff8a7b;\n}\n\n.legend-table td .legend-purple {\n  background-color: violet;\n}\n\n.legend-table td .legend-yellow {\n  background-color: yellow;\n}\n\n.c-badge {\n  position: relative;\n  top: -10px;\n  padding-left: 20px;\n  z-index: 10;\n}\n\n.button-right {\n  float: right;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9wYWdlcy9hcHBsaWNhdGlvbnMvczItYXBwbGljYXRpb24vbGlzdC1zMi1hcHBsaWNhdGlvbi9saXN0LXMyLWFwcGxpY2F0aW9uLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsNENBQUE7RUFDQSxnQkFBQTtFQUNBLFlBQUE7QUFDRjs7QUFFQTtFQUNFLG1CQUFBO0FBQ0Y7O0FBQ0E7RUFDRSxrQkFBQTtBQUVGOztBQUVFO0VBQ0UsWUFBQTtBQUNKOztBQUlFO0VBQ0UsWUFBQTtBQURKOztBQUtBO0VBQ0UsZUFBQTtBQUZGOztBQUtBO0VBQ0UsaUJBQUE7RUFDQSx5QkFBQTtFQUNBLGtCQUFBO0FBRkY7O0FBSUE7RUFDRSxXQUFBO0VBQ0EsZUFBQTtFQUNBLGdCQUFBO0FBREY7O0FBRUU7RUFDRSxZQUFBO0VBQ0EscUJBQUE7RUFDQSxnQkFBQTtFQUNBLG1CQUFBO0VBQ0EseUJBQUE7QUFBSjs7QUFFRTtFQUNFLFlBQUE7QUFBSjs7QUFDSTtFQUNFLHlCQUFBO0FBQ047O0FBQ0k7RUFDRSx5QkFBQTtBQUNOOztBQUVJO0VBQ0UsMkJBQUE7QUFBTjs7QUFHSTtFQUNFLHlCQUFBO0FBRE47O0FBSUk7RUFDRSx3QkFBQTtBQUZOOztBQUtJO0VBQ0Usd0JBQUE7QUFITjs7QUFRQTtFQUNFLGtCQUFBO0VBQ0UsVUFBQTtFQUVBLGtCQUFBO0VBQ0EsV0FBQTtBQU5KOztBQVNBO0VBQ0UsWUFBQTtBQU5GIiwiZmlsZSI6InNyYy9hcHAvbW9kdWxlcy9wYWdlcy9hcHBsaWNhdGlvbnMvczItYXBwbGljYXRpb24vbGlzdC1zMi1hcHBsaWNhdGlvbi9saXN0LXMyLWFwcGxpY2F0aW9uLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsidGgge1xyXG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjAyLCAyMDIsIDIwMiwgMC40MzgpO1xyXG4gIGZvbnQtd2VpZ2h0OiA1MDA7XHJcbiAgY29sb3I6IGJsYWNrO1xyXG59XHJcblxyXG4ucm93IHtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG59XHJcbi50ci1jZW50ZXIge1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxufVxyXG5cclxuLm1haW4tdGFibGUge1xyXG4gIC5tYXRlcmlhbC1pY29ucyB7XHJcbiAgICBjb2xvcjogd2hpdGU7XHJcbiAgfVxyXG59XHJcblxyXG4udG9hLXRhYiB7XHJcbiAgLm1hdGVyaWFsLWljb25zIHtcclxuICAgIGNvbG9yOiB3aGl0ZTtcclxuICB9XHJcbn1cclxuXHJcbi5pY29uIHtcclxuICB0ZXh0LWFsaWduOiBlbmQ7XHJcbn1cclxuXHJcbi5sZWdlbmQtY29udGVudCB7XHJcbiAgcGFkZGluZzogNXB4IDEwcHg7XHJcbiAgYm9yZGVyOiByZ2IoMjE4LCAyMTgsIDIxOCkgc29saWQgMnB4O1xyXG4gIGJvcmRlci1yYWRpdXM6IDVweDtcclxufVxyXG4ubGVnZW5kLXRhYmxlIHtcclxuICB3aWR0aDogMTAwJTtcclxuICBmb250LXNpemU6IDEwcHg7XHJcbiAgZm9udC13ZWlnaHQ6IDYwMDtcclxuICAubGVnZW5kLWJveCB7XHJcbiAgICBwYWRkaW5nOiA1cHg7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IDQlO1xyXG4gICAgdmVydGljYWwtYWxpZ246IHN1YjtcclxuICAgIGJvcmRlcjogc29saWQgMXB4IHJnYigxMzgsIDEzOCwgMTM4KTtcclxuICB9XHJcbiAgdGQge1xyXG4gICAgbWFyZ2luOiBhdXRvO1xyXG4gICAgLmxlZ2VuZC1vcmFuZ2Uge1xyXG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmNhNDAyO1xyXG4gICAgfVxyXG4gICAgLmxlZ2VuZC1ncmVlbiB7XHJcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICM4ZmNmOGY7XHJcbiAgICB9XHJcblxyXG4gICAgLmxlZ2VuZC1ibHVlIHtcclxuICAgICAgYmFja2dyb3VuZC1jb2xvcjogbGlnaHRibHVlO1xyXG4gICAgfVxyXG5cclxuICAgIC5sZWdlbmQtcmVkIHtcclxuICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmOGE3YjtcclxuICAgIH1cclxuXHJcbiAgICAubGVnZW5kLXB1cnBsZSB7XHJcbiAgICAgIGJhY2tncm91bmQtY29sb3I6IHZpb2xldDtcclxuICAgIH1cclxuXHJcbiAgICAubGVnZW5kLXllbGxvdyB7XHJcbiAgICAgIGJhY2tncm91bmQtY29sb3I6IHllbGxvdztcclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcbi5jLWJhZGdle1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIHRvcDogLTEwcHg7XHJcbiAgICAvLyBsZWZ0OiAyMnB4O1xyXG4gICAgcGFkZGluZy1sZWZ0OiAyMHB4O1xyXG4gICAgei1pbmRleDogMTA7XHJcbn1cclxuXHJcbi5idXR0b24tcmlnaHR7XHJcbiAgZmxvYXQ6IHJpZ2h0O1xyXG59Il19 */");

/***/ }),

/***/ "aBBN":
/*!********************************************************************************************************!*\
  !*** ./src/app/modules/fragments/update-special-application/update-special-application.component.scss ***!
  \********************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("/* Accordion */\n.action-buttons {\n  padding-bottom: 20px;\n  float: right;\n}\n.headers-align .mat-expansion-panel-header-title,\n.headers-align .mat-expansion-panel-header-description {\n  flex-basis: 0;\n  font-size: 1.25em;\n  align-items: center;\n}\n.headers-align .mat-expansion-panel-header-description {\n  justify-content: space-between;\n  align-items: center;\n}\n.tooltip .tooltiptext {\n  width: 120px;\n  bottom: 100%;\n  left: 50%;\n  margin-left: -60px;\n  /* Use half of the width (120/2 = 60), to center the tooltip */\n}\n.mat-expansion-panel-header {\n  border: 1px solid #BFBFBF;\n}\ninput[type=file] {\n  display: none;\n}\n.custom-file-upload {\n  border: 1px solid #ccc;\n  display: inline-block;\n  padding: 6px 12px;\n  cursor: pointer;\n}\n.mat-expansion-panel-header.mat-expanded:hover,\n.mat-expansion-panel-header {\n  background: #bad9ff;\n}\n.mat-expansion-panel .mat-expansion-panel-header.cdk-keyboard-focused:not([aria-disabled=true]),\n.mat-expansion-panel .mat-expansion-panel-header.cdk-program-focused:not([aria-disabled=true]),\n.mat-expansion-panel:not(.mat-expanded) .mat-expansion-panel-header:hover:not([aria-disabled=true]) {\n  background: #cfe5ff;\n}\n.field-value {\n  color: gray;\n  font-weight: 600;\n}\n/* table for status display */\ntable tr td {\n  padding: 10px 16px;\n  border-radius: 7px;\n  font: 500 14px/20px Roboto, \"Helvetica Neue\", sans-serif;\n  width: 31%;\n}\ntable tr td:nth-child(odd) {\n  background-color: #ff5252;\n  color: white;\n  border: 1px solid white;\n}\ntable tr td:nth-child(even) {\n  color: #ff5252;\n  border: 1px solid #0000001f;\n}\n.no-border {\n  background-color: transparent !important;\n  border: 0px !important;\n  padding: 0px !important;\n  width: 5px;\n  height: 5px !important;\n}\n.dialog-button-content {\n  vertical-align: bottom;\n  text-align: center;\n}\n.dialog-button-content button {\n  color: white;\n  border: none;\n  padding: 5px 10px 5px 5px;\n  margin: 0px 5px;\n  font-weight: 500;\n  border-radius: 5px;\n}\n.dialog-button-content .warn {\n  background-color: red;\n}\n.dialog-button-content .caution {\n  background-color: #dfd000;\n  color: black;\n}\n.dialog-button-content .confirm {\n  background-color: #449bff;\n}\ntable {\n  width: 100%;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9mcmFnbWVudHMvdXBkYXRlLXNwZWNpYWwtYXBwbGljYXRpb24vdXBkYXRlLXNwZWNpYWwtYXBwbGljYXRpb24uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsY0FBQTtBQUNBO0VBQ0ksb0JBQUE7RUFDQSxZQUFBO0FBQ0o7QUFFQTs7RUFFSSxhQUFBO0VBQ0EsaUJBQUE7RUFDQSxtQkFBQTtBQUNKO0FBRUE7RUFDSSw4QkFBQTtFQUNBLG1CQUFBO0FBQ0o7QUFFQTtFQUNJLFlBQUE7RUFDQSxZQUFBO0VBQ0EsU0FBQTtFQUNBLGtCQUFBO0VBQ0EsOERBQUE7QUFDSjtBQUVBO0VBQ0kseUJBQUE7QUFDSjtBQUdBO0VBQ0ksYUFBQTtBQUFKO0FBR0E7RUFDSSxzQkFBQTtFQUNBLHFCQUFBO0VBQ0EsaUJBQUE7RUFDQSxlQUFBO0FBQUo7QUFHQTs7RUFFSSxtQkFBQTtBQUFKO0FBSUE7OztFQUdJLG1CQUFBO0FBREo7QUFJQTtFQUNJLFdBQUE7RUFDQSxnQkFBQTtBQURKO0FBSUEsNkJBQUE7QUFFSTtFQUNJLGtCQUFBO0VBQ0Esa0JBQUE7RUFDQSx3REFBQTtFQUNBLFVBQUE7QUFGUjtBQUtJO0VBQ0kseUJBQUE7RUFDQSxZQUFBO0VBQ0EsdUJBQUE7QUFIUjtBQU1JO0VBQ0ksY0FBQTtFQUNBLDJCQUFBO0FBSlI7QUFRQTtFQUNJLHdDQUFBO0VBQ0Esc0JBQUE7RUFDQSx1QkFBQTtFQUNBLFVBQUE7RUFDQSxzQkFBQTtBQUxKO0FBU0E7RUFDSSxzQkFBQTtFQUNBLGtCQUFBO0FBTko7QUFRSTtFQUNJLFlBQUE7RUFDQSxZQUFBO0VBQ0EseUJBQUE7RUFDQSxlQUFBO0VBQ0EsZ0JBQUE7RUFDQSxrQkFBQTtBQU5SO0FBU0k7RUFDSSxxQkFBQTtBQVBSO0FBVUk7RUFDSSx5QkFBQTtFQUNBLFlBQUE7QUFSUjtBQVdJO0VBQ0kseUJBQUE7QUFUUjtBQWFBO0VBQ0ksV0FBQTtBQVZKIiwiZmlsZSI6InNyYy9hcHAvbW9kdWxlcy9mcmFnbWVudHMvdXBkYXRlLXNwZWNpYWwtYXBwbGljYXRpb24vdXBkYXRlLXNwZWNpYWwtYXBwbGljYXRpb24uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBBY2NvcmRpb24gKi9cclxuLmFjdGlvbi1idXR0b25zIHtcclxuICAgIHBhZGRpbmctYm90dG9tOiAyMHB4O1xyXG4gICAgZmxvYXQ6IHJpZ2h0O1xyXG59XHJcblxyXG4uaGVhZGVycy1hbGlnbiAubWF0LWV4cGFuc2lvbi1wYW5lbC1oZWFkZXItdGl0bGUsXHJcbi5oZWFkZXJzLWFsaWduIC5tYXQtZXhwYW5zaW9uLXBhbmVsLWhlYWRlci1kZXNjcmlwdGlvbiB7XHJcbiAgICBmbGV4LWJhc2lzOiAwO1xyXG4gICAgZm9udC1zaXplOiAxLjI1ZW07XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG59XHJcblxyXG4uaGVhZGVycy1hbGlnbiAubWF0LWV4cGFuc2lvbi1wYW5lbC1oZWFkZXItZGVzY3JpcHRpb24ge1xyXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxufVxyXG5cclxuLnRvb2x0aXAgLnRvb2x0aXB0ZXh0IHtcclxuICAgIHdpZHRoOiAxMjBweDtcclxuICAgIGJvdHRvbTogMTAwJTtcclxuICAgIGxlZnQ6IDUwJTtcclxuICAgIG1hcmdpbi1sZWZ0OiAtNjBweDtcclxuICAgIC8qIFVzZSBoYWxmIG9mIHRoZSB3aWR0aCAoMTIwLzIgPSA2MCksIHRvIGNlbnRlciB0aGUgdG9vbHRpcCAqL1xyXG59XHJcblxyXG4ubWF0LWV4cGFuc2lvbi1wYW5lbC1oZWFkZXIge1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgI0JGQkZCRjtcclxufVxyXG5cclxuLy8gdXBsb2FkIGJ1dHRvblxyXG5pbnB1dFt0eXBlPVwiZmlsZVwiXSB7XHJcbiAgICBkaXNwbGF5OiBub25lO1xyXG59XHJcblxyXG4uY3VzdG9tLWZpbGUtdXBsb2FkIHtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICBwYWRkaW5nOiA2cHggMTJweDtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxufVxyXG5cclxuLm1hdC1leHBhbnNpb24tcGFuZWwtaGVhZGVyLm1hdC1leHBhbmRlZDpob3ZlcixcclxuLm1hdC1leHBhbnNpb24tcGFuZWwtaGVhZGVyIHtcclxuICAgIGJhY2tncm91bmQ6ICNiYWQ5ZmY7XHJcbiAgICAvLyBiYWNrZ3JvdW5kOiAjZDU3ODkyXHJcbn1cclxuXHJcbi5tYXQtZXhwYW5zaW9uLXBhbmVsIC5tYXQtZXhwYW5zaW9uLXBhbmVsLWhlYWRlci5jZGsta2V5Ym9hcmQtZm9jdXNlZDpub3QoW2FyaWEtZGlzYWJsZWQ9dHJ1ZV0pLFxyXG4ubWF0LWV4cGFuc2lvbi1wYW5lbCAubWF0LWV4cGFuc2lvbi1wYW5lbC1oZWFkZXIuY2RrLXByb2dyYW0tZm9jdXNlZDpub3QoW2FyaWEtZGlzYWJsZWQ9dHJ1ZV0pLFxyXG4ubWF0LWV4cGFuc2lvbi1wYW5lbDpub3QoLm1hdC1leHBhbmRlZCkgLm1hdC1leHBhbnNpb24tcGFuZWwtaGVhZGVyOmhvdmVyOm5vdChbYXJpYS1kaXNhYmxlZD10cnVlXSkge1xyXG4gICAgYmFja2dyb3VuZDogI2NmZTVmZjtcclxufVxyXG5cclxuLmZpZWxkLXZhbHVlIHtcclxuICAgIGNvbG9yOiBncmF5O1xyXG4gICAgZm9udC13ZWlnaHQ6IDYwMDtcclxufVxyXG5cclxuLyogdGFibGUgZm9yIHN0YXR1cyBkaXNwbGF5ICovXHJcbnRhYmxlIHRyIHtcclxuICAgIHRkIHtcclxuICAgICAgICBwYWRkaW5nOiAxMHB4IDE2cHg7XHJcbiAgICAgICAgYm9yZGVyLXJhZGl1czogN3B4O1xyXG4gICAgICAgIGZvbnQ6IDUwMCAxNHB4LzIwcHggUm9ib3RvLCBcIkhlbHZldGljYSBOZXVlXCIsIHNhbnMtc2VyaWY7XHJcbiAgICAgICAgd2lkdGg6IDMxJTtcclxuICAgIH1cclxuXHJcbiAgICB0ZDpudGgtY2hpbGQob2RkKSB7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmNTI1MjtcclxuICAgICAgICBjb2xvcjogd2hpdGU7XHJcbiAgICAgICAgYm9yZGVyOiAxcHggc29saWQgd2hpdGU7XHJcbiAgICB9XHJcblxyXG4gICAgdGQ6bnRoLWNoaWxkKGV2ZW4pIHtcclxuICAgICAgICBjb2xvcjogI2ZmNTI1MjtcclxuICAgICAgICBib3JkZXI6IDFweCBzb2xpZCAjMDAwMDAwMWY7XHJcbiAgICB9XHJcbn1cclxuXHJcbi5uby1ib3JkZXIge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQgIWltcG9ydGFudDtcclxuICAgIGJvcmRlcjogMHB4ICFpbXBvcnRhbnQ7XHJcbiAgICBwYWRkaW5nOiAwcHggIWltcG9ydGFudDtcclxuICAgIHdpZHRoOiA1cHg7XHJcbiAgICBoZWlnaHQ6IDVweCAhaW1wb3J0YW50O1xyXG59XHJcblxyXG4vLyBidXR0b25cclxuLmRpYWxvZy1idXR0b24tY29udGVudCB7XHJcbiAgICB2ZXJ0aWNhbC1hbGlnbjogYm90dG9tO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG5cclxuICAgIGJ1dHRvbiB7XHJcbiAgICAgICAgY29sb3I6IHdoaXRlO1xyXG4gICAgICAgIGJvcmRlcjogbm9uZTtcclxuICAgICAgICBwYWRkaW5nOiA1cHggMTBweCA1cHggNXB4O1xyXG4gICAgICAgIG1hcmdpbjogMHB4IDVweDtcclxuICAgICAgICBmb250LXdlaWdodDogNTAwO1xyXG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICAgIH1cclxuXHJcbiAgICAud2FybiB7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogcmVkO1xyXG4gICAgfVxyXG5cclxuICAgIC5jYXV0aW9uIHtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjIzLCAyMDgsIDApO1xyXG4gICAgICAgIGNvbG9yOiByZ2IoMCwgMCwgMCk7XHJcbiAgICB9XHJcblxyXG4gICAgLmNvbmZpcm0ge1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYig2OCwgMTU1LCAyNTUpO1xyXG4gICAgfVxyXG59XHJcblxyXG50YWJsZSB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxufSJdfQ== */");

/***/ }),

/***/ "aCpE":
/*!*****************************************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/modules/pages/applications/preview-attachments/preview-attachments.component.html ***!
  \*****************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div class=\"mat-elevation-z8\">\r\n    <table mat-table [dataSource]=\"dataSource\" matSort>\r\n\r\n        <ng-container matColumnDef=\"decisionFormFilename\">\r\n            <th mat-header-cell *matHeaderCellDef> Decision Form Filename </th>\r\n            <td mat-cell *matCellDef=\"let element\"> {{ element?.decisionFormFilename }} </td>\r\n        </ng-container>\r\n\r\n        <!-- VIEW ICON START -->\r\n        <ng-container matColumnDef=\"viewDecisionFormIcon\">\r\n            <th mat-header-cell *matHeaderCellDef> View Decision Form </th>\r\n            <td mat-cell *matCellDef=\"let element\">\r\n                <span class=\"material-icons\" *ngIf=\"element?.decisionFormFileURL\" matTooltip=\"View Decision Form\"\r\n                    (click)=\"viewFormOrMaterial(element?.decisionFormFileURL)\">open_in_new</span>\r\n            </td>\r\n        </ng-container>\r\n        <!-- VIEW ICON END -->\r\n\r\n        <ng-container matColumnDef=\"stampMaterialFilename\">\r\n            <th mat-header-cell *matHeaderCellDef> Stamp Material Filename </th>\r\n            <td mat-cell *matCellDef=\"let element\"> {{ element?.stampMaterialFilename }} </td>\r\n        </ng-container>\r\n\r\n        <!-- VIEW ICON START -->\r\n        <ng-container matColumnDef=\"viewStampMaterialIcon\">\r\n            <th mat-header-cell *matHeaderCellDef> View Stamp Material </th>\r\n            <td mat-cell *matCellDef=\"let element\">\r\n                <span class=\"material-icons\" *ngIf=\"element?.stampMaterialFileURL\" matTooltip=\"View Stamp Material\"\r\n                    (click)=\"viewFormOrMaterial(element?.stampMaterialFileURL)\">open_in_new</span>\r\n            </td>\r\n        </ng-container>\r\n        <!-- VIEW ICON END -->\r\n\r\n        <ng-container matColumnDef=\"clearanceToaFilename\">\r\n            <th mat-header-cell *matHeaderCellDef> Clearance TOA Filename </th>\r\n            <td mat-cell *matCellDef=\"let element\"> {{ element?.clearanceToaFilename }} </td>\r\n        </ng-container>\r\n\r\n        <!-- VIEW ICON START -->\r\n        <ng-container matColumnDef=\"viewClearanceToaIcon\">\r\n            <th mat-header-cell *matHeaderCellDef> View Clearance TOA </th>\r\n            <td mat-cell *matCellDef=\"let element\">\r\n                <span class=\"material-icons\" *ngIf=\"element?.clearanceToaFileUrl\" matTooltip=\"View Clearance TOA\"\r\n                    (click)=\"viewFormOrMaterial(element?.clearanceToaFileUrl)\">open_in_new</span>\r\n            </td>\r\n        </ng-container>\r\n        <!-- VIEW ICON END -->\r\n\r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n    </table>\r\n    <div class=\"no-record\" [hidden]=\"dataSource && dataSource?.data?.length > 0\">\r\n        No record found.\r\n    </div>\r\n    <mat-paginator [pageSizeOptions]=\"[10, 20, 30]\" showFirstLastButtons></mat-paginator>\r\n\r\n</div>");

/***/ }),

/***/ "aVd4":
/*!**************************************************************************************************************!*\
  !*** ./src/app/modules/pages/applications/s2-application/add-s2-application/add-s2-application.component.ts ***!
  \**************************************************************************************************************/
/*! exports provided: AddS2ApplicationComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AddS2ApplicationComponent", function() { return AddS2ApplicationComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "mrSG");
/* harmony import */ var _raw_loader_add_s2_application_component_html__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! raw-loader!./add-s2-application.component.html */ "q9/5");
/* harmony import */ var _add_s2_application_component_scss__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./add-s2-application.component.scss */ "12BX");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs */ "qCKp");
/* harmony import */ var _attachment_document_attachment_document_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./../../attachment-document/attachment-document.component */ "bOqb");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/common */ "ofXK");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/forms */ "3Pt+");
/* harmony import */ var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/material/dialog */ "0IaG");
/* harmony import */ var _angular_material_expansion__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/material/expansion */ "7EHt");
/* harmony import */ var _angular_material_table__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular/material/table */ "+0xr");
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/platform-browser */ "jhN1");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @angular/router */ "tyNb");
/* harmony import */ var _models__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @models */ "sKXY");
/* harmony import */ var _services__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @services */ "dJ3e");
/* harmony import */ var _shared__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @shared */ "M0ag");
/* harmony import */ var app_core_models_application_single_media_model__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! app/core/models/application-single-media.model */ "XLGj");
/* harmony import */ var app_core_models_rationale_s2_model__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! app/core/models/rationale-s2.model */ "2yZ1");
/* harmony import */ var app_core_models_report_model__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! app/core/models/report.model */ "za27");
/* harmony import */ var app_core_services_file_storage_service__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! app/core/services/file.storage.service */ "TMp0");
/* harmony import */ var app_modules_fragments_incomplete_disapproved_rationale_incomplete_disapproved_rationale_component__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! app/modules/fragments/incomplete-disapproved-rationale/incomplete-disapproved-rationale.component */ "CDuV");
/* harmony import */ var app_modules_fragments_reject_disapproved_reason_reject_disapproved_reason_component__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! app/modules/fragments/reject-disapproved-reason/reject-disapproved-reason.component */ "2CCT");
/* harmony import */ var ngx_spinner__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ngx-spinner */ "JqCM");
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! sweetalert2 */ "PSD3");
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_23___default = /*#__PURE__*/__webpack_require__.n(sweetalert2__WEBPACK_IMPORTED_MODULE_23__);
/* harmony import */ var _client_information_client_information_component__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ../../client-information/client-information.component */ "p0Tr");
/* harmony import */ var _comment_comment_component__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ../../comment/comment.component */ "hbDB");
/* harmony import */ var _material_information_material_information_component__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ../../material-information/material-information.component */ "xetz");



























let AddS2ApplicationComponent = class AddS2ApplicationComponent {
    constructor(apiService, formBuilder, sweetAlertService, dataStorage, route, router, sanitizer, datepipe, spinner, fileStorageService, dialog) {
        this.apiService = apiService;
        this.formBuilder = formBuilder;
        this.sweetAlertService = sweetAlertService;
        this.dataStorage = dataStorage;
        this.route = route;
        this.router = router;
        this.sanitizer = sanitizer;
        this.datepipe = datepipe;
        this.spinner = spinner;
        this.fileStorageService = fileStorageService;
        this.dialog = dialog;
        this.spinnerMessageEmitter = new _angular_core__WEBPACK_IMPORTED_MODULE_6__["EventEmitter"]();
        this.title = "ASC Online System";
        this.s2Application = new _models__WEBPACK_IMPORTED_MODULE_13__["S2Application"]();
        this.s1Application = new _models__WEBPACK_IMPORTED_MODULE_13__["S1Application"]();
        this.company = new _models__WEBPACK_IMPORTED_MODULE_13__["Company"]();
        this.rationaleS2 = new app_core_models_rationale_s2_model__WEBPACK_IMPORTED_MODULE_17__["RationaleS2"]();
        this.attachmentDocument = new _models__WEBPACK_IMPORTED_MODULE_13__["AttachmentDocument"]();
        this.applicationSingleMedia = new app_core_models_application_single_media_model__WEBPACK_IMPORTED_MODULE_16__["ApplicationSingleMedia"]();
        this.report = new app_core_models_report_model__WEBPACK_IMPORTED_MODULE_18__["Report"]();
        this.attachmentDocuments = {};
        this.originalAttachmentDocuments = [];
        this.revisionAttachmentDocuments = [];
        this.complianceAttachmentDocuments = [];
        this.s2OriginalAttachmentDocuments = [];
        this.s2OriginalAttachmentObservable = new rxjs__WEBPACK_IMPORTED_MODULE_3__["Subject"]();
        this.s2ComplianceAttachmentDocuments = [];
        this.supportiveDocumentList = [];
        this.affiliationList = [];
        this.companyList = [];
        this.multimediaStaticList = [];
        this.multimediaMovingList = [];
        this.selectedMultimediaList = [];
        this.rationaleOthersList = [];
        this.rationaleLists = [];
        this.isNewCompany = false;
        this.showCompanyAddress = false;
        this.spinnerMessage = "";
        this.todayDate = new Date();
        this.tempCompliance = new _models__WEBPACK_IMPORTED_MODULE_13__["AttachmentDocument"]();
        this.decisionStatus = "";
        this.audioVideo = "Video";
        this.isAudioVideo = false;
        this.isShowUploadButton = false;
        this.rationaleDisplay = false;
        this.isSuperAdmin = false;
        this.isAdmin = false;
        this.isAccounting = false;
        this.isApplicant = false;
        this.isEvaluator = false;
        this.isAdSpecialist = false;
        this.isScreener = false;
        this.isReviewer = false;
        this.previewAttachmentsList = [];
        this.previewAttachmentsDisplayedColumns = [
            "clearanceToaFilename",
            "viewClearanceToaIcon",
        ];
        this.isAscUser = false;
        this.ascUserRoleList = [
            ..._shared__WEBPACK_IMPORTED_MODULE_15__["ROLES"].filter((role) => role.ascUser === true).map((role) => role.role),
        ];
        this.applicationStage = "S2-APPLICATION";
    }
    ngOnInit() {
        this.setFormValidator();
        this.currentUser = this.dataStorage.getUserAccount();
        this.isAscUser = this.ascUserRoleList.includes(this.dataStorage.getUserRole());
        this.currentUserRole = this.currentUser.userRole.name;
        this.id = Number(this.route.snapshot.paramMap.get("id"));
        this.initUserRole();
        this.getAffiliationList();
        this.getCompanyList();
        if (this.id) {
            this.viewS2Application();
        }
    }
    initUserRole() {
        if (this.currentUser.userRole.name === _shared__WEBPACK_IMPORTED_MODULE_15__["USER_ROLES"].ROLE_SUPER_ADMIN) {
            this.isSuperAdmin = true;
        }
        else if (this.currentUser.userRole.name === _shared__WEBPACK_IMPORTED_MODULE_15__["USER_ROLES"].ROLE_ADMIN) {
            this.isAdmin = true;
        }
        else if (this.currentUser.userRole.name === _shared__WEBPACK_IMPORTED_MODULE_15__["USER_ROLES"].ROLE_ACCOUNTING) {
            this.isAccounting = true;
        }
        else if (this.currentUser.userRole.name === _shared__WEBPACK_IMPORTED_MODULE_15__["USER_ROLES"].ROLE_APPLICANT) {
            this.isApplicant = true;
        }
        else if (this.currentUser.userRole.name === _shared__WEBPACK_IMPORTED_MODULE_15__["USER_ROLES"].ROLE_SCREENER) {
            this.isScreener = true;
        }
        else if (this.currentUser.userRole.name === _shared__WEBPACK_IMPORTED_MODULE_15__["USER_ROLES"].ROLE_REVIEWER) {
            this.isReviewer = true;
        }
        else if (this.currentUser.userRole.name === _shared__WEBPACK_IMPORTED_MODULE_15__["USER_ROLES"].ROLE_AD_SPECIALIST) {
            this.isAdSpecialist = true;
        }
        else if (this.currentUser.userRole.name === _shared__WEBPACK_IMPORTED_MODULE_15__["USER_ROLES"].ROLE_ENCODER) {
            this.isEvaluator = true;
        }
    }
    viewS2Application() {
        this.spinner.show();
        this.spinnerMessage = "Loading S2 Application";
        this.apiService.findById(_shared__WEBPACK_IMPORTED_MODULE_15__["ENDPOINTS"].applicationFormS2, this.id).subscribe((res) => {
            var _a, _b;
            console.log("s2 = ");
            this.s2Application = res.responseData.data;
            console.log("S2 Form: ", this.s2Application);
            this.s1Application = this.s2Application.applicationForm;
            this.clientInformation.s1Application = this.s2Application.applicationForm;
            this.materialInformation.s1Application = this.s2Application.applicationForm;
            if (this.s2Application.finalMaterialAttachmentReference) {
                this.isShowUploadButton = true;
                this.getS2AttachmentDocument();
            }
            this.setApplicationStage(this.s2Application);
            this.hideSpinner();
            if (this.s2Application.applicationForm.refTypeOfMedium ===
                _shared__WEBPACK_IMPORTED_MODULE_15__["TYPE_OF_MEDIUM"].SINGLE_MEDIA) {
                this.getApplicationSingleMedia();
            }
            else if (this.s2Application.applicationForm.refTypeOfMedium ===
                _shared__WEBPACK_IMPORTED_MODULE_15__["TYPE_OF_MEDIUM"].MULTIMEDIA_MOVING) {
                this.getMultimediaMoving();
            }
            else if (this.s2Application.applicationForm.refTypeOfMedium ===
                _shared__WEBPACK_IMPORTED_MODULE_15__["TYPE_OF_MEDIUM"].MULTIMEDIA_STATIC) {
                this.getMultimediaStatic();
            }
            this.getAttachmentDocuments();
            // this.getSupportiveDocuments();
            if ((this.s2Application.decisionStatus ===
                _shared__WEBPACK_IMPORTED_MODULE_15__["APP_DECISION_STATUS"].INCOMPLETE ||
                this.s2Application.decisionStatus ===
                    _shared__WEBPACK_IMPORTED_MODULE_15__["APP_DECISION_STATUS"].DISAPPROVED) &&
                this.currentUserRole === _shared__WEBPACK_IMPORTED_MODULE_15__["USER_ROLES"].ROLE_AD_SPECIALIST) {
                if (this.s2Application.internalStatus ===
                    "RE_SUBMITTED_S2_APPLICATION_VERIFIED_BY_ENCODER" &&
                    this.s2Application.decisionStatus === _shared__WEBPACK_IMPORTED_MODULE_15__["APP_DECISION_STATUS"].INCOMPLETE) {
                    this.getRationaleList();
                }
            }
            if (this.isAdmin ||
                this.isSuperAdmin ||
                this.isApplicant ||
                this.isAdSpecialist) {
                console.log(_shared__WEBPACK_IMPORTED_MODULE_15__["ENDPOINTS"].clearanceAndToa + ((_a = this.s2Application) === null || _a === void 0 ? void 0 : _a.appFormReference));
                this.apiService
                    .findByParam(_shared__WEBPACK_IMPORTED_MODULE_15__["ENDPOINTS"].clearanceAndToa, (_b = this.s2Application) === null || _b === void 0 ? void 0 : _b.appFormReference)
                    .subscribe((previewAttachmentsData) => {
                    console.log(previewAttachmentsData);
                    this.previewAttachmentsList =
                        previewAttachmentsData.responseData.data;
                    this.previewAttachmentsListDataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_10__["MatTableDataSource"](this.previewAttachmentsList);
                });
            }
        }, (err) => {
            this.hideSpinner();
        });
    }
    setApplicationStage(data) {
        this.clientInformation.applicationStage = _shared__WEBPACK_IMPORTED_MODULE_15__["APPLICATION_STAGE"].S2_APPLICATION;
        this.materialInformation.applicationStage =
            _shared__WEBPACK_IMPORTED_MODULE_15__["APPLICATION_STAGE"].S2_APPLICATION;
        if (this.currentUserRole !== _shared__WEBPACK_IMPORTED_MODULE_15__["USER_ROLES"].ROLE_APPLICANT) {
            this.comment.applicationStage = _shared__WEBPACK_IMPORTED_MODULE_15__["APPLICATION_STAGE"].S2_APPLICATION;
            this.comment.getCommentsS2(data);
        }
    }
    saveStatus() {
        if (this.s2Application.appFormReference &&
            this.s2Application.appFormReference !== "" &&
            this.s2Application.appFormReference !== undefined) {
            let endpoint;
            let swalMessage;
            if (this.currentUserRole === _shared__WEBPACK_IMPORTED_MODULE_15__["USER_ROLES"].ROLE_APPLICANT) {
                endpoint = _shared__WEBPACK_IMPORTED_MODULE_15__["ENDPOINTS"].s2ApplicationFormPresentorSubmit;
                swalMessage = "S2 application has been submitted.";
            }
            else if (this.currentUserRole === _shared__WEBPACK_IMPORTED_MODULE_15__["USER_ROLES"].ROLE_ENCODER) {
                endpoint = _shared__WEBPACK_IMPORTED_MODULE_15__["ENDPOINTS"].s2ApplicationFormEncoderVerify;
                swalMessage = "S2 application has been verified.";
                this.s2Application.assignedUser = this.s2Application.applicationForm.assignedAdSpecialist;
            }
            else if (this.currentUserRole === _shared__WEBPACK_IMPORTED_MODULE_15__["USER_ROLES"].ROLE_AD_SPECIALIST) {
                if (this.decisionStatus === _shared__WEBPACK_IMPORTED_MODULE_15__["APPLICATION_STATUS_S2"].INCOMPLETE) {
                    endpoint = _shared__WEBPACK_IMPORTED_MODULE_15__["ENDPOINTS"].s2ApplicationFormAdSpe + "incomplete";
                    swalMessage = "S2 Application Incomplete";
                }
                else if (this.decisionStatus === _shared__WEBPACK_IMPORTED_MODULE_15__["APPLICATION_STATUS_S2"].DISAPPROVED) {
                    endpoint = _shared__WEBPACK_IMPORTED_MODULE_15__["ENDPOINTS"].s2ApplicationFormAdSpe + "disapproved";
                    swalMessage = "S2 Application Disapproved";
                }
                else if (this.decisionStatus === _shared__WEBPACK_IMPORTED_MODULE_15__["APPLICATION_STATUS_S2"].APPROVED) {
                    endpoint = _shared__WEBPACK_IMPORTED_MODULE_15__["ENDPOINTS"].s2ApplicationFormAdSpe + "approved";
                    swalMessage = "S2 Application Approved!";
                }
            }
            // this.s2Application.modifiedBy = this.currentUser;
            // this.s2Application.modifiedDate = this.todayDate;
            sweetalert2__WEBPACK_IMPORTED_MODULE_23___default.a.fire({
                text: "Are you sure you want to submit the application?",
                icon: "question",
                showCancelButton: true,
                confirmButtonColor: "#3085d6",
                cancelButtonColor: "#d33",
                confirmButtonText: "Confirm",
            }).then((result) => {
                if (result.value) {
                    this.spinner.show();
                    if (this.decisionStatus === _shared__WEBPACK_IMPORTED_MODULE_15__["APPLICATION_STATUS_S2"].INCOMPLETE) {
                        this.s2Application.submissionType = _shared__WEBPACK_IMPORTED_MODULE_15__["SUBMISSION_TYPE"].ORIGINAL;
                        this.s2Application.decisionStatus =
                            _shared__WEBPACK_IMPORTED_MODULE_15__["APPLICATION_STATUS_S2"].INCOMPLETE;
                    }
                    else if (this.decisionStatus === _shared__WEBPACK_IMPORTED_MODULE_15__["APPLICATION_STATUS_S2"].APPROVED) {
                        this.s2Application.decisionStatus = _shared__WEBPACK_IMPORTED_MODULE_15__["APPLICATION_STATUS_S2"].APPROVED;
                    }
                    else if (this.decisionStatus === _shared__WEBPACK_IMPORTED_MODULE_15__["APPLICATION_STATUS_S2"].DISAPPROVED) {
                        this.s2Application.decisionStatus =
                            _shared__WEBPACK_IMPORTED_MODULE_15__["APPLICATION_STATUS_S2"].DISAPPROVED;
                    }
                    this.apiService.save(endpoint, this.s2Application).subscribe((res) => {
                        this.spinner.hide();
                        this.sweetAlertService.customSuccessMessage(swalMessage);
                        this.navigateToS2List();
                    }, (err) => {
                        this.spinner.hide();
                    });
                }
            });
        }
        else {
            this.sweetAlertService.customErrorMessage("Missing application form reference.");
        }
    } // in html but not existing in component -- encountered during 'ng serve --aot'
    saveStatusForCompliance() {
        let endpoint;
        let swalMessage;
        if (this.currentUserRole === _shared__WEBPACK_IMPORTED_MODULE_15__["USER_ROLES"].ROLE_APPLICANT) {
            endpoint = _shared__WEBPACK_IMPORTED_MODULE_15__["ENDPOINTS"].s2ApplicationForm + "compliance/presentor/submit";
            swalMessage = "S2 Application has been re-submitted successfully";
        }
        else if (this.currentUserRole === _shared__WEBPACK_IMPORTED_MODULE_15__["USER_ROLES"].ROLE_ENCODER) {
            endpoint = _shared__WEBPACK_IMPORTED_MODULE_15__["ENDPOINTS"].s2ApplicationForm + "compliance/encoder/verify";
            swalMessage =
                "S2 Application has been re-submitted successfully verified by ENCODER";
        }
        else if (this.currentUserRole === _shared__WEBPACK_IMPORTED_MODULE_15__["USER_ROLES"].ROLE_AD_SPECIALIST) {
            if (this.decisionStatus === _shared__WEBPACK_IMPORTED_MODULE_15__["APPLICATION_STATUS_S2"].INCOMPLETE) {
                endpoint = _shared__WEBPACK_IMPORTED_MODULE_15__["ENDPOINTS"].s2ApplicationFormAdSpe + "incomplete";
                swalMessage = "S2 Application Incomplete";
            }
            else if (this.decisionStatus === _shared__WEBPACK_IMPORTED_MODULE_15__["APPLICATION_STATUS_S2"].DISAPPROVED) {
                endpoint = _shared__WEBPACK_IMPORTED_MODULE_15__["ENDPOINTS"].s2ApplicationFormAdSpe + "disapproved";
                swalMessage = "S2 Application Disapproved";
            }
            else if (this.decisionStatus === _shared__WEBPACK_IMPORTED_MODULE_15__["APPLICATION_STATUS_S2"].APPROVED) {
                endpoint =
                    _shared__WEBPACK_IMPORTED_MODULE_15__["ENDPOINTS"].s2ApplicationForm + "compliance/ad-specialist/verify";
                swalMessage = "S2 Application has been verified by AD-SPECIALIST";
                // this.s2Application.decisionStatus = APPLICATION_STATUS_S2.APPROVED;
            }
        }
        sweetalert2__WEBPACK_IMPORTED_MODULE_23___default.a.fire({
            text: "Are you sure you want to re-submit this application?",
            icon: "question",
            showCancelButton: true,
            confirmButtonColor: "#3085d6",
            cancelButtonColor: "#d33",
            confirmButtonText: "Confirm",
        }).then((result) => {
            if (result.value) {
                this.spinner.show();
                if (this.decisionStatus === _shared__WEBPACK_IMPORTED_MODULE_15__["APPLICATION_STATUS_S2"].INCOMPLETE) {
                    this.s2Application.submissionType = _shared__WEBPACK_IMPORTED_MODULE_15__["SUBMISSION_TYPE"].ORIGINAL;
                    this.s2Application.decisionStatus = _shared__WEBPACK_IMPORTED_MODULE_15__["APPLICATION_STATUS_S2"].INCOMPLETE;
                }
                else if (this.decisionStatus === _shared__WEBPACK_IMPORTED_MODULE_15__["APPLICATION_STATUS_S2"].APPROVED) {
                    this.s2Application.decisionStatus = _shared__WEBPACK_IMPORTED_MODULE_15__["APPLICATION_STATUS_S2"].APPROVED;
                }
                else if (this.decisionStatus === _shared__WEBPACK_IMPORTED_MODULE_15__["APPLICATION_STATUS_S2"].DISAPPROVED) {
                    this.s2Application.decisionStatus = _shared__WEBPACK_IMPORTED_MODULE_15__["APPLICATION_STATUS_S2"].DISAPPROVED;
                }
                this.s2Application.submissionType = _shared__WEBPACK_IMPORTED_MODULE_15__["SUBMISSION_TYPE"].ORIGINAL;
                this.apiService.save(endpoint, this.s2Application).subscribe((res) => {
                    this.spinner.hide();
                    this.sweetAlertService.customSuccessMessage(swalMessage);
                    this.navigateToS2List();
                }, (err) => {
                    this.spinner.hide();
                });
            }
        });
    }
    saveStatusForClearance() {
        let endpoint;
        let swalMessage;
        if (this.currentUserRole === _shared__WEBPACK_IMPORTED_MODULE_15__["USER_ROLES"].ROLE_APPLICANT) {
            endpoint = _shared__WEBPACK_IMPORTED_MODULE_15__["ENDPOINTS"].s2ApplicationForm + "clearance/presentor/submit";
            swalMessage = "S2 Application clearance has been submitted successfully";
        }
        else if (this.currentUserRole === _shared__WEBPACK_IMPORTED_MODULE_15__["USER_ROLES"].ROLE_ENCODER) {
            endpoint = _shared__WEBPACK_IMPORTED_MODULE_15__["ENDPOINTS"].s2ApplicationForm + "clearance/encoder/verify";
            swalMessage =
                "S2 Application clearance has been verified successfully by ENCODER";
        }
        else if (this.currentUserRole === _shared__WEBPACK_IMPORTED_MODULE_15__["USER_ROLES"].ROLE_AD_SPECIALIST) {
            if (this.decisionStatus === _shared__WEBPACK_IMPORTED_MODULE_15__["APPLICATION_STATUS_S2"].DISAPPROVED) {
                endpoint = _shared__WEBPACK_IMPORTED_MODULE_15__["ENDPOINTS"].s2ApplicationFormAdSpe + "disapproved";
                swalMessage = "S2 Application clearance Disapproved";
            }
            else if (this.decisionStatus === _shared__WEBPACK_IMPORTED_MODULE_15__["APPLICATION_STATUS_S2"].APPROVED) {
                endpoint =
                    _shared__WEBPACK_IMPORTED_MODULE_15__["ENDPOINTS"].s2ApplicationForm + "clearance/ad-specialist/verify";
                swalMessage =
                    "S2 Application clearance has been approved by AD-SPECIALIST";
                this.s2Application.internalStatus = _shared__WEBPACK_IMPORTED_MODULE_15__["APPLICATION_STATUS_S2"].APPROVED;
                this.s2Application.externalStatus = _shared__WEBPACK_IMPORTED_MODULE_15__["APPLICATION_STATUS_S2"].APPROVED;
            }
        }
        sweetalert2__WEBPACK_IMPORTED_MODULE_23___default.a.fire({
            text: "Are you sure you want to submit this application clearance?",
            icon: "question",
            showCancelButton: true,
            confirmButtonColor: "#3085d6",
            cancelButtonColor: "#d33",
            confirmButtonText: "Confirm",
        }).then((result) => {
            if (result.value) {
                if (this.decisionStatus === _shared__WEBPACK_IMPORTED_MODULE_15__["APPLICATION_STATUS_S2"].DISAPPROVED) {
                    this.s2Application.decisionStatus = _shared__WEBPACK_IMPORTED_MODULE_15__["APPLICATION_STATUS_S2"].DISAPPROVED;
                }
                this.spinner.show();
                this.apiService.save(endpoint, this.s2Application).subscribe((res) => {
                    this.hideSpinner();
                    this.sweetAlertService.customSuccessMessage(swalMessage);
                    this.navigateToS2List();
                }, (err) => {
                    this.hideSpinner();
                });
            }
        });
    }
    applyApplicationForClearance() {
        sweetalert2__WEBPACK_IMPORTED_MODULE_23___default.a.fire({
            text: "Are you sure you want to apply this application to Clearance?",
            icon: "question",
            showCancelButton: true,
            confirmButtonColor: "#3085d6",
            cancelButtonColor: "#d33",
            confirmButtonText: "Confirm",
        }).then((result) => {
            if (result.value) {
                this.spinner.show();
                this.apiService
                    .save(_shared__WEBPACK_IMPORTED_MODULE_15__["ENDPOINTS"].s2ApplicationForm + "clearance/presentor/submit", this.s2Application)
                    .subscribe((res) => {
                    this.hideSpinner();
                    this.sweetAlertService.customSuccessMessage(this.sweetAlertService.customSuccessMessage("Application with reference no is applied for Clearance successfully."));
                    this.navigateToS2List();
                }, (err) => {
                    this.hideSpinner();
                });
            }
        });
    }
    rejectDisapprovedModal(ascUser = "", action = "", status = "") {
        // Swal.fire({
        //   text: 'Are you sure you want to REJECT this application?',
        //   icon: 'question',
        //   showCancelButton: true,
        //   confirmButtonColor: '#3085d6',
        //   cancelButtonColor: '#d33',
        //   confirmButtonText: 'Confirm'
        // }).then((result) => {
        //   if (result.value) {
        //     this.apiService.save(ENDPOINTS.s2ApplicationFormEncoderReject, this.s2Application).subscribe(
        //       (res: any) => {
        //         this.sweetAlertService.customSuccessMessage('Application has been rejected successfully');
        //         this.router.navigateByUrl('asc/page/application/s2/lists');
        //       }
        //     );
        //   }
        // })
        const dialogRef = this.dialog.open(app_modules_fragments_reject_disapproved_reason_reject_disapproved_reason_component__WEBPACK_IMPORTED_MODULE_21__["RejectDisapprovedReasonComponent"], {
            width: "40%",
            height: "45%",
            data: {
                s2Application: this.s2Application,
                ascUser: ascUser,
                action: action,
                status: status,
                applicationStage: "s2",
            },
        });
    }
    incompleteDisapprovedRationale(ascUser = "", action = "", status = "") {
        const dialogRef = this.dialog.open(app_modules_fragments_incomplete_disapproved_rationale_incomplete_disapproved_rationale_component__WEBPACK_IMPORTED_MODULE_20__["IncompleteDisapprovedRationaleComponent"], {
            width: "40%",
            height: "65%",
            data: {
                s2Application: this.s2Application,
                ascUser: ascUser,
                action: action,
                status: status,
                applicationStage: "s2",
            },
        });
        dialogRef.afterClosed().subscribe((result) => {
            console.log("The dialog was closed", result);
            if (result) {
                this.getRationaleList();
            }
        });
    }
    getApplicationSingleMedia() {
        this.spinner.show();
        this.apiService
            .findByParam(_shared__WEBPACK_IMPORTED_MODULE_15__["ENDPOINTS"].applicationSingleMedia, `app-form-reference/${this.s2Application.applicationForm.appFormReference}`)
            .subscribe((res) => {
            if (res.responseData.data.length > 0) {
                this.applicationSingleMedia = res.responseData.data[0];
            }
            else {
                this.applicationSingleMedia = new app_core_models_application_single_media_model__WEBPACK_IMPORTED_MODULE_16__["ApplicationSingleMedia"]();
            }
            this.hideSpinner();
        }, (err) => {
            this.applicationSingleMedia = new app_core_models_application_single_media_model__WEBPACK_IMPORTED_MODULE_16__["ApplicationSingleMedia"]();
            this.hideSpinner();
        });
    }
    getAttachmentDocuments() {
        console.log("apForm", this.s2Application.applicationForm);
        this.apiService
            .findAll(_shared__WEBPACK_IMPORTED_MODULE_15__["ENDPOINTS"].attachmentDocumentByAppFormReference +
            this.s2Application.applicationForm.appFormReference)
            .subscribe((res) => {
            this.attachmentDocuments = res.responseData.data;
            this.originalAttachmentDocuments = this.attachmentDocuments.originalAttachmentDocuments;
            this.revisionAttachmentDocuments = this.attachmentDocuments.revisionAttachmentDocuments;
            this.complianceAttachmentDocuments = this.attachmentDocuments.complianceAttachmentDocuments;
            if (this.currentUser.userRole.name === _shared__WEBPACK_IMPORTED_MODULE_15__["USER_ROLES"].ROLE_APPLICANT &&
                this.s1Application.externalStatus === _shared__WEBPACK_IMPORTED_MODULE_15__["APPLICATION_STATUS"].SAVED) {
                this.materialInformation.originalAttachmentDocuments = this.attachmentDocuments.originalAttachmentDocuments;
                this.materialInformation.revisionAttachmentDocuments = this.attachmentDocuments.revisionAttachmentDocuments;
                this.materialInformation.complianceAttachmentDocuments = this.attachmentDocuments.complianceAttachmentDocuments;
            }
            console.log("view S2 attachmentDocuments: ", this.attachmentDocuments);
            this.s2OriginalAttachmentObservable.next({
                type: "document",
                value: this.originalAttachmentDocuments,
            });
            this.s2OriginalAttachmentObservable.next({
                type: "application",
                value: this.s2Application,
            });
        });
    }
    getSupportiveDocuments() {
        this.spinner.show();
        this.apiService
            .findByParam(_shared__WEBPACK_IMPORTED_MODULE_15__["ENDPOINTS"].supportiveDocument, `application-form-id/${this.s2Application.applicationForm.id}`)
            .subscribe((res) => {
            console.log("getSupportiveDocuments() ", res);
            if (res.responseData.data.length > 0) {
                this.supportiveDocumentList = res.responseData.data;
            }
            this.hideSpinner();
        }, (err) => {
            this.hideSpinner();
            this.supportiveDocumentList = [];
        });
    }
    getMultimediaStatic() {
        this.apiService
            .findByParam(_shared__WEBPACK_IMPORTED_MODULE_15__["ENDPOINTS"].applicationMultimedia, `app-form-reference/${this.s2Application.applicationForm.appFormReference}`)
            .subscribe((res) => {
            if (res.responseData.data.length > 0) {
                this.multimediaStaticList = res.responseData.data;
                if (this.currentUser.userRole.name === _shared__WEBPACK_IMPORTED_MODULE_15__["USER_ROLES"].ROLE_APPLICANT &&
                    this.s2Application.applicationForm.externalStatus ===
                        _shared__WEBPACK_IMPORTED_MODULE_15__["APPLICATION_STATUS"].SAVED) {
                    this.materialInformation.selectedMultimediaList = this.multimediaStaticList;
                }
                this.selectedMultimediaList = this.multimediaStaticList;
            }
            else {
                this.multimediaStaticList = [];
            }
        }, (err) => {
            // this.multimediaStaticList = [];
        });
    }
    getMultimediaMoving() {
        this.apiService
            .findByParam(_shared__WEBPACK_IMPORTED_MODULE_15__["ENDPOINTS"].applicationMultimedia, `app-form-reference/${this.s2Application.applicationForm.appFormReference}`)
            .subscribe((res) => {
            if (res.responseData.data.length > 0) {
                this.multimediaMovingList = res.responseData.data;
                if (this.currentUser.userRole.name === _shared__WEBPACK_IMPORTED_MODULE_15__["USER_ROLES"].ROLE_APPLICANT &&
                    this.s2Application.applicationForm.externalStatus ===
                        _shared__WEBPACK_IMPORTED_MODULE_15__["APPLICATION_STATUS"].SAVED) {
                    this.materialInformation.selectedMultimediaList = this.multimediaMovingList;
                }
                this.selectedMultimediaList = this.multimediaMovingList;
            }
            else {
                this.multimediaMovingList = [];
            }
        }, (err) => {
            this.multimediaMovingList = [];
        });
    }
    setDecisionStatus(i) {
        this.decisionStatus = i;
        // if (e === APPLICATION_STATUS_S2.DISAPPROVED) {
        //   this.incompleteDisapprovedRationale('ad-specialist', 'disapproved', 'S2 APPLICATION DISAPPROVED');
        // }else if(e === APPLICATION_STATUS_S2.INCOMPLETE) {
        //   this.incompleteDisapprovedRationale('ad-specialist', 'incomplete', 'INCOMPLETE');
        // }
        if ((i === _shared__WEBPACK_IMPORTED_MODULE_15__["APP_DECISION_STATUS"].INCOMPLETE ||
            i === _shared__WEBPACK_IMPORTED_MODULE_15__["APP_DECISION_STATUS"].DISAPPROVED) &&
            this.currentUserRole === _shared__WEBPACK_IMPORTED_MODULE_15__["USER_ROLES"].ROLE_AD_SPECIALIST) {
            if (this.s2Application.internalStatus ===
                "RE_SUBMITTED_S2_APPLICATION_VERIFIED_BY_ENCODER" &&
                this.s2Application.decisionStatus === _shared__WEBPACK_IMPORTED_MODULE_15__["APP_DECISION_STATUS"].INCOMPLETE) {
                this.s2Application.validityDate = null;
                // this.s2Application.decisionStatus = i;
                this.incompleteDisapprovedRationale();
            }
        }
    }
    getAffiliationList() {
        this.spinner.show();
        this.apiService.findAll(_shared__WEBPACK_IMPORTED_MODULE_15__["ENDPOINTS"].activeMembersAffiliation).subscribe((res) => {
            this.affiliationList = res.responseData.data;
            this.hideSpinner();
        }, (err) => {
            this.hideSpinner();
        });
    }
    getCompanyList() {
        this.spinner.show();
        this.apiService.findAll(_shared__WEBPACK_IMPORTED_MODULE_15__["ENDPOINTS"].activeCompanies).subscribe((res) => {
            this.companyList = res.responseData.data;
            this.hideSpinner();
        }, (err) => {
            this.hideSpinner();
        });
    }
    getCompanyAddress(companyName) {
        this.spinner.show();
        this.showCompanyAddress = true;
        this.isNewCompany = false;
        this.apiService
            .findByParam(_shared__WEBPACK_IMPORTED_MODULE_15__["ENDPOINTS"].company, `/custom/search?companyName=` + companyName)
            .subscribe((res) => {
            this.company = res.responseData.data;
            this.hideSpinner();
        }, (err) => {
            this.hideSpinner();
        });
    }
    clear() {
        this.s2Application = new _models__WEBPACK_IMPORTED_MODULE_13__["S2Application"]();
        this.s1Application = new _models__WEBPACK_IMPORTED_MODULE_13__["S1Application"]();
    }
    setFormValidator() {
        this.s2ApplicationForm = this.formBuilder.group({
            affiliation: ["", _angular_forms__WEBPACK_IMPORTED_MODULE_7__["Validators"].required],
            validityDate: ["", _angular_forms__WEBPACK_IMPORTED_MODULE_7__["Validators"].required],
            company: [""],
            decisionStatus: ["", _angular_forms__WEBPACK_IMPORTED_MODULE_7__["Validators"].required],
        });
    }
    resetFormValidator() {
        this.s2Application = new _models__WEBPACK_IMPORTED_MODULE_13__["S2Application"]();
        this.s1Application = new _models__WEBPACK_IMPORTED_MODULE_13__["S1Application"]();
        this.s2ApplicationForm.markAsUntouched();
        this.s2ApplicationForm.markAsPristine();
    }
    showAudioVideo() {
        this.isAudioVideo = !this.isAudioVideo;
        this.audioVideo = this.isAudioVideo ? "Audio" : "Video";
    }
    selectFile(event, typeOfDocument) {
        this.attachmentComponent.selectFile(event, typeOfDocument);
    }
    onAddFile(eventParam) {
        const byteToMegaByte = 1000000; // 1 million byte = 1 mega byte
        let finalMaterialType = ""; // temporary variable; TODO: remove
        finalMaterialType = "video";
        const maxFileSize = finalMaterialType === "video"
            ? 50
            : finalMaterialType === "audio"
                ? 20
                : finalMaterialType === "layout"
                    ? 10
                    : 0;
        if (eventParam.target.files) {
            this.isShowUploadButton = false;
            this.fileSize = eventParam.target.files[0].size;
            // TODO validation of file size
            if ((this.fileSize > 50 * byteToMegaByte &&
                finalMaterialType.toLowerCase() === "video") ||
                (this.fileSize > 20 * byteToMegaByte &&
                    finalMaterialType.toLowerCase() === "audio") ||
                (this.fileSize > 10 * byteToMegaByte &&
                    finalMaterialType.toLowerCase() === "layout")) {
                this.sweetAlertService.customErrorMessage(`Attachments total file size should not exceed ${maxFileSize}MB.`);
                eventParam.target.value = "";
                return;
            }
            else {
                this.isShowUploadButton = true;
                const fileURL = URL.createObjectURL(eventParam.target.files[0]);
                this.safeURLFile = this.sanitizer.bypassSecurityTrustResourceUrl(fileURL);
                const reader = new FileReader();
                const [file] = eventParam.target.files;
                reader.readAsDataURL(file);
                reader.onload = () => { };
                this.selectedFile = eventParam.target.files[0];
            }
        }
    }
    uploadAudioOrVideo() {
        sweetalert2__WEBPACK_IMPORTED_MODULE_23___default.a.fire({
            text: `Are you sure you want to upload this Final Material?`,
            icon: "question",
            showCancelButton: true,
            confirmButtonColor: "#3085d6",
            cancelButtonColor: "#d33",
            confirmButtonText: "Confirm",
        }).then((result) => {
            if (result.value) {
                this.spinner.show();
                let params = "";
                let appFormRef = "";
                if (this.s2Application.appFormReference) {
                    appFormRef = `&appFormReference=${this.s2Application.appFormReference}`;
                }
                if (this.s2Application.internalStatus ===
                    _shared__WEBPACK_IMPORTED_MODULE_15__["APPLICATION_STATUS_FOR_COMPLIANCE"].INCOMPLETE ||
                    this.s2Application.internalStatus === "S2_APPLICATION_REJECTED") {
                    this.s2Application.submissionType = _shared__WEBPACK_IMPORTED_MODULE_15__["SUBMISSION_TYPE"].COMPLIANCE;
                }
                params =
                    "?&attachmentType=" +
                        _shared__WEBPACK_IMPORTED_MODULE_15__["ATTACHMENT_TYPE"].FINAL_MATERIAL +
                        "&submissionType=" +
                        this.s2Application.submissionType +
                        appFormRef;
                this.fileStorageService
                    .pushFileToStorage(_shared__WEBPACK_IMPORTED_MODULE_15__["ENDPOINTS"].attachmentDocument, this.selectedFile, params)
                    .subscribe((res) => {
                    var _a, _b;
                    console.log(res);
                    if (!this.s2Application.appFormReference ||
                        this.s2Application.appFormReference === "") {
                        this.s2Application.appFormReference =
                            res.responseData.data.appFormReference;
                    }
                    if (this.s2Application.submissionType === _shared__WEBPACK_IMPORTED_MODULE_15__["SUBMISSION_TYPE"].COMPLIANCE) {
                        this.s2Application.submissionType = _shared__WEBPACK_IMPORTED_MODULE_15__["SUBMISSION_TYPE"].ORIGINAL;
                        this.tempCompliance = res.responseData.data;
                        this.s2Application.finalMaterialAttachmentReference = (_a = this.tempCompliance) === null || _a === void 0 ? void 0 : _a.finalMaterialAttachmentReference;
                    }
                    else {
                        this.uploadedFinalMaterialFile = res.responseData.data;
                        this.addToAttachmentDocuments(this.uploadedFinalMaterialFile);
                        this.s2Application.finalMaterialAttachmentReference = (_b = this.uploadedFinalMaterialFile) === null || _b === void 0 ? void 0 : _b.finalMaterialAttachmentReference;
                        if (this.s2Application.finalMaterialAttachmentReference) {
                            this.getS2AttachmentDocument();
                        }
                    }
                    this.spinner.hide();
                    this.sweetAlertService.customSuccessMessage("Attachment successfully uploaded.");
                    this.selectedFile = null;
                }, (err) => {
                    this.spinner.hide();
                    this.sweetAlertService.error(err);
                }, () => {
                    // actions after subscription
                    this.spinner.hide();
                });
            }
            else {
                this.selectedFile = null;
            }
        });
    }
    deleteUploadedFile2(obj) {
        sweetalert2__WEBPACK_IMPORTED_MODULE_23___default.a.fire({
            text: "Are you sure you want to delete this document permanently?",
            icon: "question",
            showCancelButton: true,
            confirmButtonColor: "#3085d6",
            cancelButtonColor: "#d33",
            confirmButtonText: "Confirm",
        }).then((result) => {
            if (result.value) {
                this.spinner.show();
                this.tempCompliance = null;
                this.isShowUploadButton = false;
                this.safeURLFile = null;
                this.apiService
                    .save(_shared__WEBPACK_IMPORTED_MODULE_15__["ENDPOINTS"].attachmentDocument + `/id/${obj.id}`, null)
                    .subscribe((res) => {
                    this.spinner.hide();
                    if (obj.submissionType === _shared__WEBPACK_IMPORTED_MODULE_15__["SUBMISSION_TYPE"].COMPLIANCE ||
                        obj.decisionStatus === _shared__WEBPACK_IMPORTED_MODULE_15__["APP_DECISION_STATUS"].INCOMPLETE) {
                        this.s2ComplianceAttachmentDocuments = this.s2ComplianceAttachmentDocuments.filter((data) => (data === null || data === void 0 ? void 0 : data.id) !== obj.id);
                        this.myFinalMaterialFileInputC.nativeElement.value = "";
                        this.myFinalMaterialFileC.nativeElement.value = "";
                        this.tempCompliance = null;
                    }
                    else {
                        this.s2OriginalAttachmentDocuments = this.s2OriginalAttachmentDocuments.filter((data) => (data === null || data === void 0 ? void 0 : data.id) !== obj.id);
                        this.myFinalMaterialFileInput.nativeElement.value = "";
                        this.myFinalMaterialFile.nativeElement.value = "";
                        console.log("s2 orig => ", this.s2ComplianceAttachmentDocuments);
                    }
                    console.log("Attachment successfully deleted.");
                    this.s2Application.finalMaterialAttachmentReference = null;
                    this.isShowUploadButton = false;
                    this.selectedFile = null;
                }, (err) => {
                    this.spinner.hide();
                    this.sweetAlertService.error(err);
                });
            }
        });
    }
    deleteUploadedFile() {
        if (this.s2Application.internalStatus === _shared__WEBPACK_IMPORTED_MODULE_15__["APPLICATION_STATUS"].INCOMPLETE ||
            this.s2Application.internalStatus === "S2_APPLICATION_REJECTED") {
            this.tempCompliance = null;
            this.myFinalMaterialFileInputC.nativeElement.value = "";
            this.myFinalMaterialFileC.nativeElement.value = "";
        }
        else {
            this.s2OriginalAttachmentDocuments[0] = null;
            this.myFinalMaterialFileInput.nativeElement.value = "";
            this.myFinalMaterialFile.nativeElement.value = "";
        }
        this.s2Application.finalMaterialAttachmentReference = null;
        this.isShowUploadButton = false;
        this.selectedFile = null;
    }
    addToAttachmentDocuments(obj) {
        if (obj) {
            this.attachmentDocument.finalMaterialAttachmentReference =
                obj.finalMaterialAttachmentReference;
            this.attachmentDocument.id = obj.id;
            this.attachmentDocument.originalFilename = obj.originalFilename;
            this.attachmentDocument.filename = obj.filename;
            this.attachmentDocument.fileExtension = obj.fileExtension;
            this.attachmentDocument.fileURL = obj.fileURL;
            this.attachmentDocument.attachmentType = obj.attachmentType;
            this.attachmentDocument.documentFormat = obj.documentFormat;
            this.attachmentDocument.createdBy = this.currentUser.username;
            this.attachmentDocument.createdDate = this.todayDate;
            // if (this.s2Application.submissionType === SUBMISSION_TYPE.COMPLIANCE) {
            //   this.tempCompliance = res.responseData.data;
            //   this.addToAttachmentDocuments(this.tempCompliance);
            // } else {
            // }
        }
        else {
            this.spinner.hide();
            console.log("Null attachment.");
            this.myFinalMaterialFile.nativeElement.value = "";
            this.sweetAlertService.customErrorMessage("Attachment cannot be uploaded.");
        }
    }
    getS2AttachmentDocument() {
        this.spinner.show();
        // TODO: Fetch list of existing compliance attachments
        console.log(_shared__WEBPACK_IMPORTED_MODULE_15__["ENDPOINTS"].attachmentDocumentByS2AppFormReference +
            this.s2Application.appFormReference);
        this.apiService
            .findAll(_shared__WEBPACK_IMPORTED_MODULE_15__["ENDPOINTS"].attachmentDocumentByS2AppFormReference +
            this.s2Application.appFormReference)
            .subscribe((res) => {
            var _a;
            if (res.responseData.data) {
                console.log("S2 attachments: ", res.responseData.data.originalAttachmentDocuments);
                this.attachmentDocuments = res.responseData.data;
                this.s2OriginalAttachmentDocuments =
                    res.responseData.data.originalAttachmentDocuments;
                // this.s2OriginalAttachmentObservable.next(this.s2OriginalAttachmentDocuments);
                this.s2ComplianceAttachmentDocuments =
                    res.responseData.data.complianceAttachmentDocuments;
                this.s2ComplianceAttachmentDocuments = (_a = this.s2ComplianceAttachmentDocuments) === null || _a === void 0 ? void 0 : _a.filter((data) => (data === null || data === void 0 ? void 0 : data.status) !== "UNPROCESSED");
                console.log("s2 Original => ", this.attachmentDocuments);
                if (this.attachmentDocument.filename) {
                    this.isAudioVideo = this.attachmentDocument.documentFormat.includes("audio")
                        ? false
                        : true;
                }
            }
            this.hideSpinner();
        }, (err) => {
            this.hideSpinner();
            console.error(err);
        });
    }
    viewFinalMedia(obj) {
        window.open(obj.fileURL);
    }
    hideSpinner() {
        setTimeout(() => {
            this.spinner.hide();
        }, 1);
    }
    navigateToS2List() {
        setTimeout(() => {
            this.router.navigateByUrl("asc/page/application/s2/lists");
        }, 2000);
    }
    getRationaleList() {
        // Rationale Object
        this.apiService
            .findByParam(_shared__WEBPACK_IMPORTED_MODULE_15__["ENDPOINTS"].applicationRationaleS2, `application-form-id/${this.s2Application.id}`)
            .subscribe((res) => {
            this.rationaleOthersList = res.responseData.data;
            this.rationaleOthersList = this.rationaleOthersList.filter((data) => data.others !== "");
            console.log("RATIONALE LIST", this.rationaleOthersList);
        });
        this.apiService
            .findByParam(_shared__WEBPACK_IMPORTED_MODULE_15__["ENDPOINTS"].rationaleListS2, `application-s2/${this.s2Application.id}`)
            .subscribe((res) => {
            this.rationaleLists = res;
            console.log("APPLICATION RATIONALE", this.rationaleLists);
        });
    }
    viewReport(id, filename) {
        this.report.filename = filename;
        this.report.format = "pdf";
        (this.report.module = "Form"),
            (this.report.params = { applicationFormS2Id: id });
        console.log(this.report);
        this.spinner.show();
        this.apiService
            .printReport(_shared__WEBPACK_IMPORTED_MODULE_15__["ENDPOINTS"].generateReports, this.report)
            .subscribe((data) => {
            const newBlob = new Blob([data], { type: "application/pdf" });
            const downloadURL = URL.createObjectURL(newBlob);
            this.spinner.hide();
            window.open(downloadURL);
        }, (err) => {
            this.spinner.hide();
        });
    }
    submitAppeal() {
        let endpoint;
        if (this.isAdmin) {
            endpoint = _shared__WEBPACK_IMPORTED_MODULE_15__["ENDPOINTS"].admin + `/s2/verify/appeal`;
        }
        else if (this.isAdSpecialist) {
            endpoint = _shared__WEBPACK_IMPORTED_MODULE_15__["ENDPOINTS"].s2ApplicationFormAdSpe + `verify/appeal`;
        }
        this.spinner.show();
        this.apiService.save(endpoint, this.s2Application).subscribe((res) => {
            this.spinner.hide();
            this.sweetAlertService.success(res);
            console.log("submitAppeal : ", res.responseData.data);
            this.navigateToS2List();
        }, (err) => {
            this.spinner.hide();
        });
    }
    sendDecisionOrStampMaterialManual() {
        sweetalert2__WEBPACK_IMPORTED_MODULE_23___default.a.fire({
            text: "Are you sure you want to send this application form?",
            icon: "question",
            showCancelButton: true,
            confirmButtonColor: "#3085d6",
            cancelButtonColor: "#d33",
            confirmButtonText: "Confirm",
        }).then((result) => {
            if (result.value) {
                this.apiService
                    .save(_shared__WEBPACK_IMPORTED_MODULE_15__["ENDPOINTS"].s2ManualRelease + `/${this.s2Application.id}`, this.s2Application)
                    .subscribe((res) => {
                    this.sweetAlertService.customSuccessMessage(res.message);
                });
            }
        });
    }
};
AddS2ApplicationComponent.ctorParameters = () => [
    { type: _services__WEBPACK_IMPORTED_MODULE_14__["ApiService"] },
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_7__["FormBuilder"] },
    { type: _services__WEBPACK_IMPORTED_MODULE_14__["SweetAlertService"] },
    { type: _services__WEBPACK_IMPORTED_MODULE_14__["DataStorageService"] },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_12__["ActivatedRoute"] },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_12__["Router"] },
    { type: _angular_platform_browser__WEBPACK_IMPORTED_MODULE_11__["DomSanitizer"] },
    { type: _angular_common__WEBPACK_IMPORTED_MODULE_5__["DatePipe"] },
    { type: ngx_spinner__WEBPACK_IMPORTED_MODULE_22__["NgxSpinnerService"] },
    { type: app_core_services_file_storage_service__WEBPACK_IMPORTED_MODULE_19__["FileStorageService"] },
    { type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_8__["MatDialog"] }
];
AddS2ApplicationComponent.propDecorators = {
    accordion: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["ViewChild"], args: [_angular_material_expansion__WEBPACK_IMPORTED_MODULE_9__["MatAccordion"],] }],
    clientInformation: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["ViewChild"], args: [_client_information_client_information_component__WEBPACK_IMPORTED_MODULE_24__["ClientInformationComponent"], { static: false },] }],
    materialInformation: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["ViewChild"], args: [_material_information_material_information_component__WEBPACK_IMPORTED_MODULE_26__["MaterialInformationComponent"], { static: false },] }],
    comment: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["ViewChild"], args: [_comment_comment_component__WEBPACK_IMPORTED_MODULE_25__["CommentComponent"], { static: false },] }],
    myFinalMaterialFileInput: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["ViewChild"], args: ["finalMaterialFileInput",] }],
    myFinalMaterialFile: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["ViewChild"], args: ["finalMaterialFile",] }],
    myFinalMaterialFileInputC: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["ViewChild"], args: ["finalMaterialFileInputC",] }],
    myFinalMaterialFileC: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["ViewChild"], args: ["finalMaterialFileC",] }],
    attachmentComponent: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["ViewChild"], args: [_attachment_document_attachment_document_component__WEBPACK_IMPORTED_MODULE_4__["AttachmentDocumentComponent"], { static: false },] }],
    spinnerMessageEmitter: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Output"] }]
};
AddS2ApplicationComponent = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_6__["Component"])({
        selector: "app-add-s2-application",
        template: _raw_loader_add_s2_application_component_html__WEBPACK_IMPORTED_MODULE_1__["default"],
        styles: [_add_s2_application_component_scss__WEBPACK_IMPORTED_MODULE_2__["default"]]
    })
], AddS2ApplicationComponent);



/***/ }),

/***/ "bOqb":
/*!*************************************************************************************************!*\
  !*** ./src/app/modules/pages/applications/attachment-document/attachment-document.component.ts ***!
  \*************************************************************************************************/
/*! exports provided: AttachmentDocumentComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AttachmentDocumentComponent", function() { return AttachmentDocumentComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "mrSG");
/* harmony import */ var _raw_loader_attachment_document_component_html__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! raw-loader!./attachment-document.component.html */ "0NC8");
/* harmony import */ var _attachment_document_component_scss__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./attachment-document.component.scss */ "qF+f");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs */ "qCKp");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/common */ "ofXK");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/forms */ "3Pt+");
/* harmony import */ var _shared__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @shared */ "M0ag");
/* harmony import */ var _models__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @models */ "sKXY");
/* harmony import */ var _services__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @services */ "dJ3e");
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! sweetalert2 */ "PSD3");
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(sweetalert2__WEBPACK_IMPORTED_MODULE_10__);
/* harmony import */ var ngx_spinner__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ngx-spinner */ "JqCM");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @angular/router */ "tyNb");
/* harmony import */ var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @angular/material/dialog */ "0IaG");
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @angular/platform-browser */ "jhN1");
/* harmony import */ var app_core_services_file_storage_service__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! app/core/services/file.storage.service */ "TMp0");

















let AttachmentDocumentComponent = class AttachmentDocumentComponent {
    constructor(formBuilder, dataStorageService, sweetAlertService, dataStorage, apiService, datepipe, spinner, route, dialog, sanitizer, fileStorageService, router) {
        this.formBuilder = formBuilder;
        this.dataStorageService = dataStorageService;
        this.sweetAlertService = sweetAlertService;
        this.dataStorage = dataStorage;
        this.apiService = apiService;
        this.datepipe = datepipe;
        this.spinner = spinner;
        this.route = route;
        this.dialog = dialog;
        this.sanitizer = sanitizer;
        this.fileStorageService = fileStorageService;
        this.router = router;
        this.attachmentDocuments = [];
        this.originalAttachmentDocuments = [];
        this.revisionAttachmentDocuments = [];
        this.complianceAttachmentDocuments = [];
        this.s2DocObservable = new rxjs__WEBPACK_IMPORTED_MODULE_3__["Subject"]();
        this.s2SupportDocument = {};
        this.S2SupportDoc = false;
        this.tempRevisionAttachmentDocuments = [];
        this.tempComplianceAttachmentDocuments = [];
        this.s2Appplication = new _models__WEBPACK_IMPORTED_MODULE_8__["S2Application"]();
        this.s1Application = new _models__WEBPACK_IMPORTED_MODULE_8__["S1Application"]();
        this.labelMainDocument = "";
        this.isAscUser = false;
        this.isDisableFieldOnUpdate = false;
        this.applicationStage = "";
        this.showMainDocumentUploadButton = false;
        this.showMainDocumentUploadButtonR = false;
        this.showMainDocumentUploadButtonC = false;
        this.showMainDocumentViewButton = false;
        this.showMainDocumentViewButtonR = false;
        this.showMainDocumentViewButtonC = false;
        this.showSupportDocumentFrame = false;
        this.showSupportDocumentFrameR = false;
        this.showSupportDocumentFrameC = false;
        this.showSupportiveDocumentUploadButton = false;
        this.showSupportiveDocumentUploadButtonR = false;
        this.showSupportiveDocumentUploadButtonC = false;
        this.showSupportiveDocumentViewButton = false;
        this.showSupportiveDocumentViewButtonR = false;
        this.showSupportiveDocumentViewButtonC = false;
        this.showRevisionLetterViewButton = false;
        this.showRevisionLetterUploadButton = false;
        this.todayDate = new Date();
        this.attachmentType = _shared__WEBPACK_IMPORTED_MODULE_7__["ATTACHMENT_TYPE"].MAIN;
        this.submissionType = _shared__WEBPACK_IMPORTED_MODULE_7__["SUBMISSION_TYPE"].ORIGINAL;
        this.mainDocAttachmentSize = 0;
        this.supportDocAttachmentSize = 0;
        this.revisionDocAttachmentSize = 0;
        this.progress = { percentage: 0 };
        this.attachmentDocument = new _models__WEBPACK_IMPORTED_MODULE_8__["AttachmentDocument"]();
    }
    ngOnChanges(changes) { }
    ngOnInit() {
        this.id = Number(this.route.snapshot.paramMap.get("id"));
        this.currentUser = this.dataStorage.getUserAccount();
        this.setFormValidator();
        console.log("----1 => ", this.s2Appplication);
        this.s2DocObservable.subscribe((res) => {
            if (res.type === "application") {
                this.s2Appplication = res.value;
            }
            else if (res.type === "document") {
                console.log("s2 document", res.value);
                this.s2SupportDocument = res.value.filter((r) => r.attachmentType === _shared__WEBPACK_IMPORTED_MODULE_7__["ATTACHMENT_TYPE"].SUPPORTIVE)[this.s1Application.hasNoSupportingDocs ? 0 : 1];
            }
        });
        console.log("S2222 => ", this.s2SupportAttchmentDocuments);
    }
    validateDeleteBtn() {
        if (this.currentUser.accountType === "APPLICANT" &&
            this.s2Appplication.internalStatus &&
            this.s2SupportDocument &&
            this.s2SupportAttchmentDocuments.filter((r) => r.attachmentType === _shared__WEBPACK_IMPORTED_MODULE_7__["ATTACHMENT_TYPE"].SUPPORTIVE)[this.s1Application.hasNoSupportingDocs ? 0 : 1]) {
            return true;
        }
        return false;
    }
    changeTab(evt) {
        if (evt.tab) {
            const label = evt.tab.textLabel;
            if (label === "REVISION" || label === "COMPLIANCE") {
                this.s1Application.hasNoSupportingDocs = false;
            }
        }
    }
    selectS2SupprtDoc(event) {
        console.log("================= ", this.s2SupportAttchmentDocuments);
        // checking of file type;
        if (event.target.files[0].type !== "application/pdf") {
            this.sweetAlertService.customErrorMessage("Attachment should be in PDF format only.");
            event.target.value = "";
            return;
        }
        // getting the file size.
        this.attachmentType = _shared__WEBPACK_IMPORTED_MODULE_7__["ATTACHMENT_TYPE"].SUPPORTIVE;
        console.log("S2 Support Doc =>", event.target.files);
        this.supportDocAttachmentSize = event.target.files[0].size;
        let attachmentSize = this.mainDocAttachmentSize +
            this.supportDocAttachmentSize +
            this.revisionDocAttachmentSize;
        // file size checking and validation
        if (attachmentSize > 15000000) {
            // 1MB = 1M : FOR INTEGRATION
            this.sweetAlertService.customErrorMessage(`Attachments' total file size should not exceed 15MB.`);
            event.target.value = "";
            return;
        }
        else {
            // creating document object url
            const pdfURL = URL.createObjectURL(event.target.files[0]);
            this.attachmentSizeForUpload = event.target.files[0].size;
            this.safeURLSupportDoc = this.sanitizer.bypassSecurityTrustResourceUrl(pdfURL);
            this.showSupportiveDocumentUploadButton = true;
            const reader = new FileReader();
            const [file] = event.target.files;
            reader.readAsDataURL(file);
            reader.onload = () => { };
        }
        this.selectedFiles = event.target.files;
    }
    selectFile(event, typeOfDocument) {
        this.attachmentType = typeOfDocument;
        if (event.target.files[0].type === "application/pdf") {
            if (this.attachmentType === _shared__WEBPACK_IMPORTED_MODULE_7__["ATTACHMENT_TYPE"].MAIN) {
                this.mainDocAttachmentSize = event.target.files[0].size;
            }
            else if (this.attachmentType === _shared__WEBPACK_IMPORTED_MODULE_7__["ATTACHMENT_TYPE"].SUPPORTIVE) {
                this.supportDocAttachmentSize = event.target.files[0].size;
            }
            else if (this.attachmentType === _shared__WEBPACK_IMPORTED_MODULE_7__["ATTACHMENT_TYPE"].REVISION_LETTER) {
                this.revisionDocAttachmentSize = event.target.files[0].size;
            }
            let attachmentSize = this.mainDocAttachmentSize +
                this.supportDocAttachmentSize +
                this.revisionDocAttachmentSize;
            if (attachmentSize > 15000000) {
                // 1MB = 1M : FOR INTEGRATION
                this.sweetAlertService.customErrorMessage(`Attachments' total file size should not exceed 15MB.`);
                event.target.value = "";
                return;
            }
            else {
                const pdfURL = URL.createObjectURL(event.target.files[0]);
                this.attachmentSizeForUpload = event.target.files[0].size;
                if (this.attachmentType === _shared__WEBPACK_IMPORTED_MODULE_7__["ATTACHMENT_TYPE"].MAIN) {
                    this.safeURLMainDoc = this.sanitizer.bypassSecurityTrustResourceUrl(pdfURL);
                    this.showMainDocumentUploadButton = true;
                }
                else if (this.attachmentType === _shared__WEBPACK_IMPORTED_MODULE_7__["ATTACHMENT_TYPE"].SUPPORTIVE) {
                    this.safeURLSupportDoc = this.sanitizer.bypassSecurityTrustResourceUrl(pdfURL);
                    this.showSupportiveDocumentUploadButton = true;
                }
                else if (this.attachmentType === _shared__WEBPACK_IMPORTED_MODULE_7__["ATTACHMENT_TYPE"].REVISION_LETTER) {
                    this.safeURLRevisionLetter = this.sanitizer.bypassSecurityTrustResourceUrl(pdfURL);
                    this.showRevisionLetterUploadButton = true;
                }
                // original-approved - for revision
                // revision
                if ((this.submissionType === _shared__WEBPACK_IMPORTED_MODULE_7__["SUBMISSION_TYPE"].REVISION &&
                    this.s1Application.decisionStatus !==
                        _shared__WEBPACK_IMPORTED_MODULE_7__["APP_DECISION_STATUS"].INCOMPLETE) ||
                    ((this.s1Application.internalStatus ===
                        _shared__WEBPACK_IMPORTED_MODULE_7__["APPLICATION_STATUS"].S1_APPLICATION_REVIEWED ||
                        this.s1Application.internalStatus ===
                            _shared__WEBPACK_IMPORTED_MODULE_7__["APPLICATION_STATUS_FOR_COMPLIANCE"].COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER) &&
                        (this.s1Application.decisionStatus ===
                            _shared__WEBPACK_IMPORTED_MODULE_7__["APPLICATION_STATUS"].APPROVED ||
                            this.s1Application.decisionStatus === "APPROVED W/ CAUTION"))) {
                    this.safeURLMainDocR = this.safeURLMainDoc;
                    this.safeURLSupportDocR = this.safeURLSupportDoc;
                    this.showMainDocumentUploadButtonR = this.showMainDocumentUploadButton;
                    this.showSupportiveDocumentUploadButtonR = this.showSupportiveDocumentUploadButton;
                    if (this.tempRevisionAttachmentDocuments.length === 0) {
                        this.s1Application.mainAttachmentReference = null;
                        this.s1Application.supportingAttachmentReference = null;
                        this.s1Application.revisionLetterAttachmentReference = null;
                    }
                }
                // original-incomplete - original
                // revision-incomplete
                // for compliance
                else if (this.submissionType === _shared__WEBPACK_IMPORTED_MODULE_7__["SUBMISSION_TYPE"].COMPLIANCE ||
                    (this.s1Application.internalStatus ===
                        _shared__WEBPACK_IMPORTED_MODULE_7__["APPLICATION_STATUS"].S1_APPLICATION_REVIEWED &&
                        this.s1Application.decisionStatus ===
                            _shared__WEBPACK_IMPORTED_MODULE_7__["APPLICATION_STATUS"].INCOMPLETE) ||
                    (this.submissionType === _shared__WEBPACK_IMPORTED_MODULE_7__["SUBMISSION_TYPE"].REVISION &&
                        this.s1Application.decisionStatus ===
                            _shared__WEBPACK_IMPORTED_MODULE_7__["APP_DECISION_STATUS"].INCOMPLETE)) {
                    this.safeURLMainDocC = this.safeURLMainDoc;
                    this.safeURLSupportDocC = this.safeURLSupportDoc;
                    this.showMainDocumentUploadButtonC = this.showMainDocumentUploadButton;
                    this.showSupportiveDocumentUploadButtonC = this.showSupportiveDocumentUploadButton;
                    if (this.tempComplianceAttachmentDocuments.length === 0) {
                        this.s1Application.mainAttachmentReference = null;
                        this.s1Application.supportingAttachmentReference = null;
                        this.s1Application.revisionLetterAttachmentReference = null;
                    }
                }
                const reader = new FileReader();
                const [file] = event.target.files;
                reader.readAsDataURL(file);
                reader.onload = () => { };
            }
            this.selectedFiles = event.target.files;
        }
        else {
            this.sweetAlertService.customErrorMessage("Attachment should be in PDF format only.");
            event.target.value = "";
            return;
        }
    }
    uploadS2SupportDoc() {
        let attachmentType;
        let appFormReference = "";
        attachmentType = "SUPPORTING";
        this.submissionType = _shared__WEBPACK_IMPORTED_MODULE_7__["SUBMISSION_TYPE"].ORIGINAL;
        sweetalert2__WEBPACK_IMPORTED_MODULE_10___default.a.fire({
            text: "Are you sure you want to upload the " +
                attachmentType.replaceAll("_", " ") +
                " DOCUMENT?",
            icon: "question",
            showCancelButton: true,
            confirmButtonColor: "#3085d6",
            cancelButtonColor: "#d33",
            confirmButtonText: "Confirm",
        }).then((result) => {
            if (result.value) {
                this.spinner.show();
                this.progress.percentage = 0;
                this.currentFileUpload = this.selectedFiles.item(0);
                let params = "";
                let appFormRef = "";
                // set appFormReference
                if (this.s2Appplication.appFormReference) {
                    console.log("------------------------------");
                    appFormRef = `&appFormReference=${this.s2Appplication.appFormReference}`;
                }
                params = `?&attachmentType=${this.attachmentType}&submissionType=${this.submissionType}${appFormReference}&fileSize=${this.attachmentSizeForUpload}${appFormRef}`;
                this.fileStorageService
                    .pushFileToStorage(_shared__WEBPACK_IMPORTED_MODULE_7__["ENDPOINTS"].attachmentDocument, this.currentFileUpload, params)
                    .subscribe((res) => {
                    console.log(this.attachmentType, " ", res.responseData.data);
                    if (!this.s2Appplication.appFormReference ||
                        this.s2Appplication.appFormReference === "") {
                        this.s2Appplication.appFormReference =
                            res.responseData.data.appFormReference;
                        console.log("SET APPFORMREF: ", this.s1Application.appFormReference);
                    }
                    this.uploadedFileSupportive = res.responseData.data;
                    this.s2SupportDocAddToAttachmentDocument(this.uploadedFileSupportive);
                    this.showSupportiveDocumentUploadButton = false;
                    this.showSupportiveDocumentViewButton = true;
                    this.s2Appplication.supportingAttachmentReference = this.uploadedFileSupportive.supportingAttachmentReference;
                    this.spinner.hide();
                    this.sweetAlertService.customSuccessMessage("Attachment successfully uploaded.");
                    this.selectedFiles = undefined;
                }, (err) => {
                    this.spinner.hide();
                    this.sweetAlertService.error(err);
                }, () => {
                    // actions after subscription
                    this.spinner.hide();
                });
            }
            else {
                this.currentFileUpload = null;
            }
        });
        console.log("uploaded =======> ", this.s2SupportAttchmentDocuments);
    }
    uploadDocument() {
        console.log("type: ", this.attachmentType);
        let attachmentType;
        let appFormReference = "";
        if (this.attachmentType === _shared__WEBPACK_IMPORTED_MODULE_7__["ATTACHMENT_TYPE"].SUPPORTIVE ||
            this.S2SupportDoc) {
            attachmentType = "SUPPORTING";
        }
        else {
            attachmentType = this.attachmentType;
        }
        if (!this.S2SupportDoc) {
            // set submission type and appFormReference
            if (attachmentType === _shared__WEBPACK_IMPORTED_MODULE_7__["ATTACHMENT_TYPE"].REVISION_LETTER ||
                (this.s1Application.submissionType === _shared__WEBPACK_IMPORTED_MODULE_7__["SUBMISSION_TYPE"].ORIGINAL &&
                    (this.s1Application.decisionStatus === _shared__WEBPACK_IMPORTED_MODULE_7__["APPLICATION_STATUS"].APPROVED ||
                        this.s1Application.decisionStatus === "APPROVED W/ CAUTION"))) {
                this.submissionType = _shared__WEBPACK_IMPORTED_MODULE_7__["SUBMISSION_TYPE"].REVISION;
                // appFormReference = `&appFormReference=${this.s1Application.appFormReference}`;
            }
            else if (this.s1Application.decisionStatus === _shared__WEBPACK_IMPORTED_MODULE_7__["APP_DECISION_STATUS"].INCOMPLETE) {
                this.submissionType = _shared__WEBPACK_IMPORTED_MODULE_7__["SUBMISSION_TYPE"].COMPLIANCE;
                // appFormReference = `&appFormReference=${this.s1Application.appFormReference}&applicationFormId=${this.s1Application.id}`;
                appFormReference = `&applicationFormId=${this.s1Application.id}`;
            }
            else {
                this.submissionType = _shared__WEBPACK_IMPORTED_MODULE_7__["SUBMISSION_TYPE"].ORIGINAL;
            }
        }
        else {
            this.submissionType = _shared__WEBPACK_IMPORTED_MODULE_7__["SUBMISSION_TYPE"].ORIGINAL;
        }
        console.log("NEW SUTYPE: ", this.submissionType);
        sweetalert2__WEBPACK_IMPORTED_MODULE_10___default.a.fire({
            text: "Are you sure you want to upload the " +
                attachmentType.replaceAll("_", " ") +
                " DOCUMENT?",
            icon: "question",
            showCancelButton: true,
            confirmButtonColor: "#3085d6",
            cancelButtonColor: "#d33",
            confirmButtonText: "Confirm",
        }).then((result) => {
            if (result.value) {
                this.spinner.show();
                this.progress.percentage = 0;
                this.currentFileUpload = this.selectedFiles.item(0);
                let params = "";
                let appFormRef = "";
                // set appFormReference
                if (this.s1Application.appFormReference) {
                    appFormRef = `&appFormReference=${this.s1Application.appFormReference}`;
                }
                if (this.s2Appplication.appFormReference) {
                    appFormRef = `&appFormReference=${this.s2Appplication.appFormReference}`;
                }
                params = `?&attachmentType=${this.attachmentType}&submissionType=${this.submissionType}${appFormReference}&fileSize=${this.attachmentSizeForUpload}${appFormRef}`;
                this.fileStorageService
                    .pushFileToStorage(_shared__WEBPACK_IMPORTED_MODULE_7__["ENDPOINTS"].attachmentDocument, this.currentFileUpload, params)
                    .subscribe((res) => {
                    console.log(this.attachmentType, " ", res.responseData.data);
                    if (!this.s1Application.appFormReference ||
                        this.s1Application.appFormReference === "") {
                        this.s1Application.appFormReference =
                            res.responseData.data.appFormReference;
                        console.log("SET APPFORMREF: ", this.s1Application.appFormReference);
                    }
                    if (!this.S2SupportDoc) {
                        if (this.attachmentType === _shared__WEBPACK_IMPORTED_MODULE_7__["ATTACHMENT_TYPE"].MAIN) {
                            this.uploadedFileMain = res.responseData.data;
                            this.addToAttachmentDocuments(this.uploadedFileMain);
                            this.showMainDocumentUploadButton = false;
                            this.showMainDocumentViewButton = true;
                            this.showSupportDocumentFrame = true;
                            this.s1Application.mainAttachmentReference = this.uploadedFileMain.mainAttachmentReference;
                        }
                        else if (this.attachmentType === _shared__WEBPACK_IMPORTED_MODULE_7__["ATTACHMENT_TYPE"].SUPPORTIVE) {
                            this.uploadedFileSupportive = res.responseData.data;
                            this.addToAttachmentDocuments(this.uploadedFileSupportive);
                            this.showSupportiveDocumentUploadButton = false;
                            this.showSupportiveDocumentViewButton = true;
                            this.s1Application.supportingAttachmentReference = this.uploadedFileSupportive.supportingAttachmentReference;
                        }
                        else if (this.attachmentType === _shared__WEBPACK_IMPORTED_MODULE_7__["ATTACHMENT_TYPE"].REVISION_LETTER) {
                            this.uploadedFileRevision = res.responseData.data;
                            this.addToAttachmentDocuments(this.uploadedFileRevision);
                            this.showRevisionLetterViewButton = true;
                            this.showRevisionLetterUploadButton = false;
                            this.s1Application.revisionLetterAttachmentReference = this.uploadedFileRevision.revisionLetterAttachmentReference;
                            this.revisionLetterAttachment = this.attachmentDocuments.filter((data) => (data === null || data === void 0 ? void 0 : data.attachmentType) === _shared__WEBPACK_IMPORTED_MODULE_7__["ATTACHMENT_TYPE"].REVISION_LETTER)[0];
                        }
                    }
                    else {
                        this.uploadedFileSupportive = res.responseData.data;
                        this.s2SupportDocAddToAttachmentDocument(this.uploadedFileSupportive);
                        this.showSupportiveDocumentUploadButton = false;
                        this.showSupportiveDocumentViewButton = true;
                        this.s2Appplication.supportingAttachmentReference = this.uploadedFileSupportive.supportingAttachmentReference;
                    }
                    if ((this.submissionType === _shared__WEBPACK_IMPORTED_MODULE_7__["SUBMISSION_TYPE"].ORIGINAL &&
                        (this.s1Application.decisionStatus ===
                            _shared__WEBPACK_IMPORTED_MODULE_7__["APPLICATION_STATUS"].APPROVED ||
                            this.s1Application.decisionStatus ===
                                "APPROVED W/ CAUTION")) ||
                        this.submissionType === _shared__WEBPACK_IMPORTED_MODULE_7__["SUBMISSION_TYPE"].REVISION) {
                        if (this.attachmentType === _shared__WEBPACK_IMPORTED_MODULE_7__["ATTACHMENT_TYPE"].MAIN) {
                            this.showMainDocumentUploadButtonR = this.showMainDocumentUploadButton;
                            this.showMainDocumentViewButtonR = this.showMainDocumentViewButton;
                        }
                        else if (this.attachmentType === _shared__WEBPACK_IMPORTED_MODULE_7__["ATTACHMENT_TYPE"].SUPPORTIVE) {
                            this.showSupportDocumentFrameR = this.showSupportDocumentFrame;
                            this.showSupportiveDocumentUploadButtonR = this.showSupportiveDocumentUploadButton;
                            this.showSupportiveDocumentViewButtonR = this.showSupportiveDocumentViewButton;
                        }
                    }
                    else if ((this.submissionType === _shared__WEBPACK_IMPORTED_MODULE_7__["SUBMISSION_TYPE"].ORIGINAL &&
                        this.s1Application.decisionStatus ===
                            _shared__WEBPACK_IMPORTED_MODULE_7__["APP_DECISION_STATUS"].INCOMPLETE) ||
                        (this.submissionType === _shared__WEBPACK_IMPORTED_MODULE_7__["SUBMISSION_TYPE"].REVISION &&
                            this.s1Application.decisionStatus ===
                                _shared__WEBPACK_IMPORTED_MODULE_7__["APP_DECISION_STATUS"].INCOMPLETE) ||
                        this.submissionType === _shared__WEBPACK_IMPORTED_MODULE_7__["SUBMISSION_TYPE"].COMPLIANCE) {
                        if (this.attachmentType === _shared__WEBPACK_IMPORTED_MODULE_7__["ATTACHMENT_TYPE"].MAIN) {
                            this.showMainDocumentUploadButtonC = this.showMainDocumentUploadButton;
                            this.showMainDocumentViewButtonC = this.showMainDocumentViewButton;
                        }
                        else if (this.attachmentType === _shared__WEBPACK_IMPORTED_MODULE_7__["ATTACHMENT_TYPE"].SUPPORTIVE) {
                            this.showSupportDocumentFrameC = this.showSupportDocumentFrame;
                            this.showSupportiveDocumentUploadButtonC = this.showSupportiveDocumentUploadButton;
                            this.showSupportiveDocumentViewButtonC = this.showSupportiveDocumentViewButton;
                        }
                    }
                    this.spinner.hide();
                    this.sweetAlertService.customSuccessMessage("Attachment successfully uploaded.");
                    this.selectedFiles = undefined;
                }, (err) => {
                    this.spinner.hide();
                    this.sweetAlertService.error(err);
                }, () => {
                    // actions after subscription
                    this.spinner.hide();
                });
            }
            else {
                this.currentFileUpload = null;
            }
        });
    }
    s2SupportDocAddToAttachmentDocument(obj) {
        if (obj.supportingAttachmentReference) {
            this.attachmentDocument.mainAttachmentReference =
                obj.mainAttachmentReference;
            this.attachmentDocument.supportingAttachmentReference =
                obj.supportingAttachmentReference;
            this.attachmentDocument.revisionLetterAttachmentReference =
                obj.revisionLetterAttachmentReference;
            this.attachmentDocument.id = obj.id;
            this.attachmentDocument.originalFilename = obj.originalFilename;
            this.attachmentDocument.filename = obj.filename;
            this.attachmentDocument.fileSize = obj.fileSize;
            this.attachmentDocument.fileExtension = obj.fileExtension;
            this.attachmentDocument.fileURL = obj.fileURL;
            this.attachmentDocument.attachmentType = obj.attachmentType;
            this.attachmentDocument.documentFormat = obj.documentFormat;
            this.attachmentDocument.createdBy = this.currentUser.username;
            this.attachmentDocument.createdDate = this.todayDate;
            console.log(this.attachmentDocuments);
            this.attachmentDocuments[0] = this.attachmentDocument;
            this.s2SupportAttchmentDocuments = this.attachmentDocuments;
            this.s2SupportDocument = obj;
            this.s2SupportAttchmentDocuments.push(obj);
            console.log("s2support => ", obj);
            console.log(this.s2Appplication);
            console.log("s2 app", this.attachmentDocuments);
        }
    }
    addToAttachmentDocuments(obj) {
        if (obj) {
            console.log("addToAttachmentDocuments");
            if (this.s1Application.submissionType === _shared__WEBPACK_IMPORTED_MODULE_7__["SUBMISSION_TYPE"].ORIGINAL &&
                (this.s1Application.internalStatus === _shared__WEBPACK_IMPORTED_MODULE_7__["APPLICATION_STATUS"].SAVED ||
                    this.s1Application.internalStatus === "" ||
                    this.s1Application.internalStatus === undefined)) {
                this.attachmentDocuments = JSON.parse(JSON.stringify(this.originalAttachmentDocuments));
            }
            this.attachmentDocument.mainAttachmentReference =
                obj.mainAttachmentReference;
            this.attachmentDocument.supportingAttachmentReference =
                obj.supportingAttachmentReference;
            this.attachmentDocument.revisionLetterAttachmentReference =
                obj.revisionLetterAttachmentReference;
            this.attachmentDocument.id = obj.id;
            this.attachmentDocument.originalFilename = obj.originalFilename;
            this.attachmentDocument.filename = obj.filename;
            this.attachmentDocument.fileSize = obj.fileSize;
            this.attachmentDocument.fileExtension = obj.fileExtension;
            this.attachmentDocument.fileURL = obj.fileURL;
            this.attachmentDocument.attachmentType = obj.attachmentType;
            this.attachmentDocument.documentFormat = obj.documentFormat;
            this.attachmentDocument.createdBy = this.currentUser.username;
            this.attachmentDocument.createdDate = this.todayDate;
            console.log(this.attachmentDocuments);
            if (this.attachmentDocument.attachmentType === "MAIN") {
                this.attachmentDocuments[0] = this.attachmentDocument;
            }
            else if (this.attachmentDocument.attachmentType === "SUPPORTIVE") {
                this.attachmentDocuments[1] = this.attachmentDocument;
            }
            else if (this.attachmentDocument.attachmentType === "REVISION_LETTER") {
                this.attachmentDocuments[2] = this.attachmentDocument;
            }
            if ((this.s1Application.submissionType === _shared__WEBPACK_IMPORTED_MODULE_7__["SUBMISSION_TYPE"].REVISION &&
                this.s1Application.decisionStatus !==
                    _shared__WEBPACK_IMPORTED_MODULE_7__["APP_DECISION_STATUS"].INCOMPLETE) ||
                (this.s1Application.submissionType === _shared__WEBPACK_IMPORTED_MODULE_7__["SUBMISSION_TYPE"].ORIGINAL &&
                    (this.s1Application.decisionStatus === _shared__WEBPACK_IMPORTED_MODULE_7__["APPLICATION_STATUS"].APPROVED ||
                        this.s1Application.decisionStatus === "APPROVED W/ CAUTION"))) {
                // this.revisionAttachmentDocuments = this.attachmentDocuments;
                this.tempRevisionAttachmentDocuments = JSON.parse(JSON.stringify(this.attachmentDocuments));
            }
            else if (this.s1Application.decisionStatus === _shared__WEBPACK_IMPORTED_MODULE_7__["APP_DECISION_STATUS"].INCOMPLETE) {
                // this.complianceAttachmentDocuments = this.attachmentDocuments;
                this.tempComplianceAttachmentDocuments = JSON.parse(JSON.stringify(this.attachmentDocuments));
            }
            else {
                this.originalAttachmentDocuments = JSON.parse(JSON.stringify(this.attachmentDocuments));
            }
            console.log(this.attachmentDocuments);
            this.attachmentDocument = new _models__WEBPACK_IMPORTED_MODULE_8__["AttachmentDocument"]();
        }
        else {
            this.spinner.hide();
            console.log("Null attachment.");
            this.myMainFile.nativeElement.value = null;
            this.myMainInput.nativeElement.value = null;
            this.sweetAlertService.customErrorMessage("Attachment cannot be uploaded.");
        }
    }
    viewS2SupportDoc() {
        console.log("uploaded", this.uploadedFileSupportive);
        console.log("uploaded", this.attachmentDocuments);
        console.log("s2Upport", this.s2SupportAttchmentDocuments);
        console.log("s2", this.s2Appplication);
        console.log("s1", this.s1Application);
        // console.log("S2 SUPPORTIVE", );
        console.log("S2 SUPPORTIVE!! ", this.s2SupportDocument);
        let fileURL = this.s2SupportDocument.fileURL;
        window.open(fileURL);
    }
    viewDocument(typeOfDocument, isOriginal = true) {
        if (this.s1Application.submissionType === _shared__WEBPACK_IMPORTED_MODULE_7__["SUBMISSION_TYPE"].ORIGINAL) {
            this.attachmentDocuments = JSON.parse(JSON.stringify(this.originalAttachmentDocuments));
        }
        else if (this.s1Application.submissionType === _shared__WEBPACK_IMPORTED_MODULE_7__["SUBMISSION_TYPE"].REVISION &&
            this.s1Application.decisionStatus !== _shared__WEBPACK_IMPORTED_MODULE_7__["APP_DECISION_STATUS"].INCOMPLETE) {
            this.attachmentDocuments = JSON.parse(JSON.stringify(this.revisionAttachmentDocuments));
        }
        else if (this.s1Application.submissionType === _shared__WEBPACK_IMPORTED_MODULE_7__["SUBMISSION_TYPE"].COMPLIANCE ||
            this.s1Application.decisionStatus === _shared__WEBPACK_IMPORTED_MODULE_7__["APP_DECISION_STATUS"].INCOMPLETE) {
            this.attachmentDocuments = JSON.parse(JSON.stringify(this.complianceAttachmentDocuments));
        }
        if (typeOfDocument === _shared__WEBPACK_IMPORTED_MODULE_7__["ATTACHMENT_TYPE"].MAIN) {
            console.log(isOriginal, this.uploadedFileMain);
            if (this.uploadedFileMain && !isOriginal) {
                window.open(this.uploadedFileMain.fileURL);
            }
            else {
                window.open(this.attachmentDocuments[0].fileURL);
            }
        }
        else if (typeOfDocument === _shared__WEBPACK_IMPORTED_MODULE_7__["ATTACHMENT_TYPE"].SUPPORTIVE) {
            if (this.uploadedFileSupportive && !isOriginal) {
                window.open(this.uploadedFileSupportive.fileURL);
            }
            else {
                const supportiveDoc = this.attachmentDocuments.filter((res) => res.attachmentType === _shared__WEBPACK_IMPORTED_MODULE_7__["ATTACHMENT_TYPE"].SUPPORTIVE)[0];
                window.open(supportiveDoc.fileURL);
            }
        }
        else if (typeOfDocument === _shared__WEBPACK_IMPORTED_MODULE_7__["ATTACHMENT_TYPE"].REVISION_LETTER) {
            if (this.uploadedFileRevision && !isOriginal) {
                window.open(this.uploadedFileRevision.fileURL);
            }
            else {
                // const revisionLetterDoc = this.revisionLetterAttachment;
                const revisionLetterDoc = this.attachmentDocuments.filter((res) => res.attachmentType === _shared__WEBPACK_IMPORTED_MODULE_7__["ATTACHMENT_TYPE"].REVISION_LETTER)[0];
                window.open(revisionLetterDoc.fileURL);
            }
        }
    }
    viewDocument2(i) {
        window.open(i === null || i === void 0 ? void 0 : i.fileURL);
    }
    deleteUploadedFile2(obj) {
        sweetalert2__WEBPACK_IMPORTED_MODULE_10___default.a.fire({
            text: "Are you sure you want to delete this document permanently?",
            icon: "question",
            showCancelButton: true,
            confirmButtonColor: "#3085d6",
            cancelButtonColor: "#d33",
            confirmButtonText: "Confirm",
        }).then((result) => {
            if (result.value) {
                this.spinner.show();
                if (obj.submissionType === _shared__WEBPACK_IMPORTED_MODULE_7__["SUBMISSION_TYPE"].REVISION &&
                    obj.decisionStatus !== _shared__WEBPACK_IMPORTED_MODULE_7__["APP_DECISION_STATUS"].INCOMPLETE) {
                    this.revisionAttachmentDocuments = this.revisionAttachmentDocuments.filter((data) => (data === null || data === void 0 ? void 0 : data.id) !== obj.id);
                }
                else if (obj.submissionType === _shared__WEBPACK_IMPORTED_MODULE_7__["SUBMISSION_TYPE"].COMPLIANCE ||
                    obj.decisionStatus === _shared__WEBPACK_IMPORTED_MODULE_7__["APP_DECISION_STATUS"].INCOMPLETE) {
                    this.complianceAttachmentDocuments = this.complianceAttachmentDocuments.filter((data) => (data === null || data === void 0 ? void 0 : data.id) !== obj.id);
                }
                this.apiService
                    .save(_shared__WEBPACK_IMPORTED_MODULE_7__["ENDPOINTS"].attachmentDocument + `/id/${obj.id}`, null)
                    .subscribe((res) => {
                    this.spinner.hide();
                    console.log("Attachment successfully deleted.");
                }, (err) => {
                    this.spinner.hide();
                    this.sweetAlertService.error(err);
                });
            }
        });
    }
    deleteS2SupportDoc() {
        sweetalert2__WEBPACK_IMPORTED_MODULE_10___default.a.fire({
            text: "Are you sure you want to delete this document permanently?",
            icon: "question",
            showCancelButton: true,
            confirmButtonColor: "#3085d6",
            cancelButtonColor: "#d33",
            confirmButtonText: "Confirm",
        }).then((result) => {
            if (result.value) {
                if (this.s2Appplication.submissionType === _shared__WEBPACK_IMPORTED_MODULE_7__["SUBMISSION_TYPE"].ORIGINAL &&
                    (this.s2Appplication.internalStatus === _shared__WEBPACK_IMPORTED_MODULE_7__["APPLICATION_STATUS"].SAVED ||
                        this.s2Appplication.internalStatus === "" ||
                        this.s2Appplication.internalStatus === undefined)) {
                    this.attachmentDocuments = this.s2SupportAttchmentDocuments;
                }
                let id = this.attachmentDocuments.filter((r) => r.attachmentType === _shared__WEBPACK_IMPORTED_MODULE_7__["ATTACHMENT_TYPE"].SUPPORTIVE)[this.s1Application.hasNoSupportingDocs ? 0 : 1].id;
                this.supportDocAttachmentSize = 0;
                // this.attachmentDocuments[this.s1Application.hasNoSupportingDocs? 0 : 1] = null;
                this.s2SupportDocument = {};
                this.s2Appplication.supportingAttachmentReference = null;
                // this.showSupportiveDocumentViewButton = false;
                // this.showSupportiveDocumentUploadButton = false;
                // this.mySupportiveFile.nativeElement.value = null;
                // this.mySupportiveInput.nativeElement.value = null;
                // this.s1Application.supportingAttachmentReference = null;
                console.log("result", result);
                this.apiService
                    .save(_shared__WEBPACK_IMPORTED_MODULE_7__["ENDPOINTS"].attachmentDocument + `/id/${id}`, null)
                    .subscribe((res) => {
                    this.spinner.hide();
                    console.log("Attachment successfully deleted.");
                }, (err) => {
                    this.spinner.hide();
                    this.sweetAlertService.error(err);
                });
            }
        });
    }
    deleteUploadedFile(documentType) {
        console.log("DELETE...");
        let currentSubType = _shared__WEBPACK_IMPORTED_MODULE_7__["SUBMISSION_TYPE"].ORIGINAL;
        sweetalert2__WEBPACK_IMPORTED_MODULE_10___default.a.fire({
            text: "Are you sure you want to delete this document permanently?",
            icon: "question",
            showCancelButton: true,
            confirmButtonColor: "#3085d6",
            cancelButtonColor: "#d33",
            confirmButtonText: "Confirm",
        }).then((result) => {
            if (result.value) {
                let id = "";
                // this.spinner.show();
                // new appform - original
                if (this.s1Application.submissionType === _shared__WEBPACK_IMPORTED_MODULE_7__["SUBMISSION_TYPE"].ORIGINAL &&
                    (this.s1Application.internalStatus === _shared__WEBPACK_IMPORTED_MODULE_7__["APPLICATION_STATUS"].SAVED ||
                        this.s1Application.internalStatus === "" ||
                        this.s1Application.internalStatus === undefined)) {
                    this.attachmentDocuments = this.originalAttachmentDocuments;
                }
                // approved - original = for revision
                else if (this.s1Application.submissionType === _shared__WEBPACK_IMPORTED_MODULE_7__["SUBMISSION_TYPE"].ORIGINAL &&
                    (this.s1Application.internalStatus ===
                        _shared__WEBPACK_IMPORTED_MODULE_7__["APPLICATION_STATUS"].S1_APPLICATION_REVIEWED ||
                        this.s1Application.internalStatus ===
                            _shared__WEBPACK_IMPORTED_MODULE_7__["APPLICATION_STATUS_FOR_COMPLIANCE"].COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER) &&
                    (this.s1Application.decisionStatus === _shared__WEBPACK_IMPORTED_MODULE_7__["APPLICATION_STATUS"].APPROVED ||
                        this.s1Application.decisionStatus === "APPROVED W/ CAUTION")) {
                    this.attachmentDocuments = this.tempRevisionAttachmentDocuments;
                    currentSubType = _shared__WEBPACK_IMPORTED_MODULE_7__["SUBMISSION_TYPE"].REVISION;
                }
                // incomplete - original = for compliance
                // incomplete - compliance = for compliance
                // incomplete - revision = for compliance
                else if (this.s1Application.decisionStatus === _shared__WEBPACK_IMPORTED_MODULE_7__["APPLICATION_STATUS"].INCOMPLETE &&
                    (this.s1Application.internalStatus ===
                        _shared__WEBPACK_IMPORTED_MODULE_7__["APPLICATION_STATUS"].S1_APPLICATION_REVIEWED ||
                        this.s1Application.internalStatus ===
                            _shared__WEBPACK_IMPORTED_MODULE_7__["APPLICATION_STATUS_FOR_COMPLIANCE"].COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER ||
                        this.s1Application.internalStatus ===
                            _shared__WEBPACK_IMPORTED_MODULE_7__["APPLICATION_STATUS_REVISION"].REVISION_SCREENED ||
                        this.s1Application.internalStatus ===
                            _shared__WEBPACK_IMPORTED_MODULE_7__["APPLICATION_STATUS_FOR_COMPLIANCE"].COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER ||
                        this.s1Application.internalStatus ===
                            _shared__WEBPACK_IMPORTED_MODULE_7__["APPLICATION_STATUS"].S1_APPLICATION_REJECTED)) {
                    this.attachmentDocuments = this.tempComplianceAttachmentDocuments;
                    currentSubType = _shared__WEBPACK_IMPORTED_MODULE_7__["SUBMISSION_TYPE"].COMPLIANCE;
                }
                console.log(this.attachmentDocuments);
                console.log("currentSubType ", currentSubType);
                if (documentType === _shared__WEBPACK_IMPORTED_MODULE_7__["ATTACHMENT_TYPE"].MAIN) {
                    id = this.attachmentDocuments[0].id;
                    this.mainDocAttachmentSize = 0;
                    this.attachmentDocuments[0] = null;
                    this.s1Application.mainAttachmentReference = null;
                    this.showMainDocumentViewButton = false;
                    this.myMainFile.nativeElement.value = null;
                    this.myMainInput.nativeElement.value = null;
                    this.showSupportDocumentFrame = false;
                    this.showMainDocumentUploadButton = false;
                    this.s1Application.mainAttachmentReference = null;
                }
                else if (documentType === _shared__WEBPACK_IMPORTED_MODULE_7__["ATTACHMENT_TYPE"].SUPPORTIVE) {
                    id = this.attachmentDocuments[1].id;
                    this.supportDocAttachmentSize = 0;
                    this.attachmentDocuments[1] = null;
                    // this.attachmentDocuments[1].originalFilename = null;
                    this.s1Application.supportingAttachmentReference = null;
                    this.showSupportiveDocumentViewButton = false;
                    this.showSupportiveDocumentUploadButton = false;
                    this.mySupportiveFile.nativeElement.value = null;
                    this.mySupportiveInput.nativeElement.value = null;
                    this.s1Application.supportingAttachmentReference = null;
                }
                else {
                    id = this.attachmentDocuments[2].id;
                    this.revisionDocAttachmentSize = 0;
                    this.attachmentDocuments[2] = null;
                    // this.attachmentDocuments[2].originalFilename = null;
                    this.revisionLetterAttachment = null;
                    this.s1Application.revisionLetterAttachmentReference = null;
                    this.showRevisionLetterViewButton = false;
                    this.showRevisionLetterUploadButton = false;
                    this.myRevisionLetterFile.nativeElement.value = null;
                    // this.myRevisionLetterInput.nativeElement.value = null;
                    // this.attachmentDocuments = this.attachmentDocuments.filter((doc) =>
                    //   !doc.attachmentType.includes(ATTACHMENT_TYPE.REVISION_LETTER));
                }
                console.log(this.attachmentDocuments);
                if (currentSubType === _shared__WEBPACK_IMPORTED_MODULE_7__["SUBMISSION_TYPE"].REVISION) {
                    this.tempRevisionAttachmentDocuments = this.attachmentDocuments;
                }
                else if (currentSubType === _shared__WEBPACK_IMPORTED_MODULE_7__["SUBMISSION_TYPE"].COMPLIANCE) {
                    this.tempComplianceAttachmentDocuments = this.attachmentDocuments;
                }
                else {
                    this.originalAttachmentDocuments = this.attachmentDocuments;
                }
                if (
                // new - original
                this.s1Application.internalStatus === undefined ||
                    this.s1Application.internalStatus === _shared__WEBPACK_IMPORTED_MODULE_7__["APPLICATION_STATUS"].SAVED ||
                    // reviewed - approved - for revision
                    ((this.s1Application.internalStatus ===
                        _shared__WEBPACK_IMPORTED_MODULE_7__["APPLICATION_STATUS"].S1_APPLICATION_REVIEWED ||
                        this.s1Application.internalStatus ===
                            _shared__WEBPACK_IMPORTED_MODULE_7__["APPLICATION_STATUS_FOR_COMPLIANCE"].COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER) &&
                        (this.s1Application.decisionStatus ===
                            _shared__WEBPACK_IMPORTED_MODULE_7__["APPLICATION_STATUS"].APPROVED ||
                            this.s1Application.decisionStatus === "APPROVED W/ CAUTION")) ||
                    // reviewed - incomplete - for compliance
                    // incomplete - incomplete - for compliance
                    ((this.s1Application.internalStatus ===
                        _shared__WEBPACK_IMPORTED_MODULE_7__["APPLICATION_STATUS"].S1_APPLICATION_REVIEWED ||
                        this.s1Application.internalStatus ===
                            _shared__WEBPACK_IMPORTED_MODULE_7__["APPLICATION_STATUS_FOR_COMPLIANCE"].COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER) &&
                        this.s1Application.decisionStatus === _shared__WEBPACK_IMPORTED_MODULE_7__["APPLICATION_STATUS"].INCOMPLETE)) {
                    console.log("Trigger delete...");
                    this.apiService
                        .save(_shared__WEBPACK_IMPORTED_MODULE_7__["ENDPOINTS"].attachmentDocument + `/id/${id}`, null)
                        .subscribe((res) => {
                        this.spinner.hide();
                        console.log("Attachment successfully deleted.");
                    }, (err) => {
                        this.spinner.hide();
                        this.sweetAlertService.error(err);
                    });
                }
            }
        });
    }
    verifyNoDocumentAttached() {
        this.s1Application.supportingAttachmentReference =
            this.s1Application.supportingAttachmentReference === null ? "" : null;
        this.safeURLSupportDoc = null;
    }
    setFormValidator() {
        this.attachmentDocumentForm = this.formBuilder.group({
            attachmentReference: [""],
            hasNoSupportingDocs: [""],
            typeOfMedium: [""],
            mediumExecution: [""],
            language: [""],
            dialect: [""],
            others: [""],
            sizeLength: [""],
            width: [""],
            multimediaLength: [""],
            multimediaSize: [""],
            applicationSingleMedia: [""],
            applicationMultimediaStatic: [""],
            applicationMultimediaMoving: [""],
        });
    }
};
AttachmentDocumentComponent.ctorParameters = () => [
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_6__["FormBuilder"] },
    { type: _services__WEBPACK_IMPORTED_MODULE_9__["DataStorageService"] },
    { type: _services__WEBPACK_IMPORTED_MODULE_9__["SweetAlertService"] },
    { type: _services__WEBPACK_IMPORTED_MODULE_9__["DataStorageService"] },
    { type: _services__WEBPACK_IMPORTED_MODULE_9__["ApiService"] },
    { type: _angular_common__WEBPACK_IMPORTED_MODULE_4__["DatePipe"] },
    { type: ngx_spinner__WEBPACK_IMPORTED_MODULE_11__["NgxSpinnerService"] },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_12__["ActivatedRoute"] },
    { type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_13__["MatDialog"] },
    { type: _angular_platform_browser__WEBPACK_IMPORTED_MODULE_14__["DomSanitizer"] },
    { type: app_core_services_file_storage_service__WEBPACK_IMPORTED_MODULE_15__["FileStorageService"] },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_12__["Router"] }
];
AttachmentDocumentComponent.propDecorators = {
    originalAttachmentDocuments: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"] }],
    revisionAttachmentDocuments: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"] }],
    complianceAttachmentDocuments: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"] }],
    s2SupportAttchmentDocuments: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"] }],
    s2DocObservable: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"] }],
    S2SupportDoc: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"] }],
    s2Appplication: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"] }],
    s1Application: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"] }],
    labelMainDocument: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"] }],
    isAscUser: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"] }],
    isDisableFieldOnUpdate: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"] }],
    applicationStage: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"] }],
    myMainFile: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["ViewChild"], args: ["mainFile",] }],
    myMainInput: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["ViewChild"], args: ["mainInput",] }],
    mySupportiveFile: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["ViewChild"], args: ["supportiveFile",] }],
    mySupportiveInput: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["ViewChild"], args: ["supportiveInput",] }],
    myRevisionLetterFile: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["ViewChild"], args: ["revisionLetterFile",] }],
    myRevisionLetterInput: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["ViewChild"], args: ["revisionLetterInput",] }]
};
AttachmentDocumentComponent = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_5__["Component"])({
        selector: "app-attachment-document",
        template: _raw_loader_attachment_document_component_html__WEBPACK_IMPORTED_MODULE_1__["default"],
        styles: [_attachment_document_component_scss__WEBPACK_IMPORTED_MODULE_2__["default"]]
    })
], AttachmentDocumentComponent);



/***/ }),

/***/ "buzF":
/*!*****************************************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/modules/pages/applications/preview-application/preview-application.component.html ***!
  \*****************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<!--  -->\r\n<div class=\"row fields\">\r\n  <h4>\r\n    <i class=\"material-icons\">preview</i> &nbsp;<b>CLIENT'S INFORMATION</b>\r\n    <hr>\r\n  </h4>\r\n  <div class=\"row\">\r\n    <div class=\"col-md-4\" appearance=\"outline\">\r\n      <mat-label>Client Company Name</mat-label>\r\n      <input matInput [value]=\"previewS1Application?.company?.companyName\" disabled>\r\n    </div>\r\n    <div class=\"col-md-4\" appearance=\"outline\">\r\n      <mat-label>Client Membership Affiliation</mat-label>\r\n      <input matInput [value]=\"previewS1Application?.company?.membersAffiliation?.description\" disabled>\r\n    </div>\r\n    <div class=\"col-md-4\" appearance=\"outline\"></div>\r\n  </div>\r\n\r\n  <div class=\"row\"><br></div>\r\n\r\n  <div class=\"row\">\r\n    <div class=\"col-md-4\" appearance=\"outline\">\r\n      <mat-label>Brand</mat-label>\r\n      <input matInput [value]=\"previewS1Application?.brand?.description\" disabled>\r\n    </div>\r\n    <div class=\"col-md-4\" appearance=\"outline\">\r\n      <mat-label>Product</mat-label>\r\n      <input matInput [value]=\"previewS1Application?.product?.description\" disabled>\r\n    </div>\r\n    <div class=\"col-md-4\" appearance=\"outline\">\r\n      <mat-label>Category</mat-label>\r\n      <input matInput [value]=\"previewS1Application?.product?.category?.description\" disabled>\r\n    </div>\r\n  </div>\r\n\r\n  <br><br><br>\r\n</div>\r\n\r\n<!--  -->\r\n<div class=\"row fields\">\r\n  <h4>\r\n    <i class=\"material-icons\">preview</i> &nbsp;<b>MATERIAL INFORMATION</b>\r\n    <hr>\r\n  </h4>\r\n  <div class=\"row\">\r\n    <div class=\"col-md-12\" appearance=\"outline\">\r\n      <mat-label>Ad Title</mat-label>\r\n      <input matInput [value]=\"previewS1Application?.adTitle\" disabled>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"row\"><br></div>\r\n\r\n  <div class=\"row\">\r\n    <div class=\"col-md-6\" appearance=\"outline\">\r\n      <mat-label>Reference Code of Previously-Approved Material</mat-label>\r\n      <input matInput [value]=\"previewS1Application?.previousRefCode\" disabled>\r\n    </div>\r\n    <div class=\"col-md-6\" appearance=\"outline\">\r\n      <mat-label>Tag line</mat-label>\r\n      <input matInput [value]=\"previewS1Application?.tagLine\" disabled>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"row\" *ngIf=\"previewS1Application?.refTypeOfMedium\">\r\n    <div class=\"col-md-12\">\r\n      <hr>\r\n    </div>\r\n  </div>\r\n  <div class=\"row\" *ngIf=\"previewS1Application?.refTypeOfMedium\">\r\n    <div class=\"col-md-6\" appearance=\"outline\">\r\n      <mat-label>Media Type</mat-label>\r\n      <input matInput [value]=\"previewS1Application?.refTypeOfMedium\" disabled>\r\n    </div>\r\n  </div>\r\n  <div class=\"row\"><br></div>\r\n  <div class=\"row\" *ngIf=\"applicationSingleMedia\">\r\n    <div class=\"col-md-3\" appearance=\"outline\" *ngIf=\"applicationSingleMedia?.mediumExecution?.typeOfMedium?.description\">\r\n      <mat-label>Type of Medium</mat-label>\r\n      <input matInput [value]=\"applicationSingleMedia?.mediumExecution?.typeOfMedium?.description\" disabled>\r\n    </div>\r\n    <div class=\"col-md-3\" appearance=\"outline\" *ngIf=\"applicationSingleMedia?.mediumExecution\">\r\n      <mat-label>Execution</mat-label>\r\n      <input matInput [value]=\"applicationSingleMedia?.mediumExecution?.typeOfExecution?.typeOfExecution\" disabled>\r\n    </div>\r\n    <div class=\"col-md-3\" appearance=\"outline\" *ngIf=\"applicationSingleMedia?.dialect\">\r\n      <mat-label>Language/Dialect</mat-label>\r\n      <input matInput [value]=\"applicationSingleMedia?.dialect?.dialect\" disabled>\r\n    </div>\r\n    <div class=\"col-md-3\" appearance=\"outline\" *ngIf=\"applicationSingleMedia?.others\">\r\n      <mat-label>Others</mat-label>\r\n      <input matInput [value]=\"applicationSingleMedia?.others\" disabled>\r\n    </div>\r\n    <div class=\"col-md-3\" appearance=\"outline\" *ngIf=\"applicationSingleMedia?.sizeLength\">\r\n      <mat-label>Size Length</mat-label>\r\n      <input matInput [value]=\"applicationSingleMedia?.sizeLength\" disabled>\r\n    </div>\r\n    <div class=\"col-md-3\" appearance=\"outline\" *ngIf=\"applicationSingleMedia?.width\">\r\n      <mat-label>Width</mat-label>\r\n      <input matInput [value]=\"applicationSingleMedia?.width\" disabled>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- TO BE DELETED ONCE VERIFIED -->\r\n  <!-- <div class=\"row\" *ngIf=\"multimediaMovingList?.length>0\">\r\n    <span *ngFor=\"let i of multimediaMovingList\">\r\n      <table>\r\n        <tr>\r\n          <td class=\"col-md-4\">\r\n            <mat-checkbox [checked]=\"true\" disabled>{{i?.typeOfMedium?.description}}</mat-checkbox>\r\n          </td>\r\n          <td class=\"col-md-1\">Length:</td>\r\n          <td class=\"col-md-2\">\r\n            <input matInput [value]=\"i?.multimediaSizeLength\" disabled>\r\n          </td>\r\n          <td class=\"col-md-5\"></td>\r\n        </tr>\r\n      </table>\r\n    </span>\r\n  </div>\r\n\r\n  <div class=\"row\" *ngIf=\"multimediaStaticList?.length>0\">\r\n    <span *ngFor=\"let i of multimediaStaticList\">\r\n      <table>\r\n        <tr>\r\n          <td class=\"col-md-4\">\r\n            <mat-checkbox [checked]=\"true\" disabled>{{i?.typeOfMedium?.description}}</mat-checkbox>\r\n          </td>\r\n          <td class=\"col-md-1\">Size</td>\r\n          <td class=\"col-md-2\">\r\n            <input matInput [value]=\"i?.multimediaSizeLength\" disabled>\r\n          </td>\r\n          <td class=\"col-md-5\"></td>\r\n        </tr>\r\n      </table>\r\n    </span>\r\n  </div> -->\r\n\r\n  <!-- New Multimedia List -->\r\n  <div class=\"row\" *ngIf=\"multimediaDTO\">\r\n    <table class=\"mx-3 mb-3\">\r\n      <ng-container *ngIf=\"previewS1Application?.refTypeOfMedium === 'MULTIMEDIA-STATIC'\">\r\n        <ng-container *ngFor=\"let i of multimediaDTO.applicationMultimediaStaticList\">\r\n          <tr *ngIf=\"i?.hasSelected\" style=\"height: 30px;\">\r\n            <td class=\"col-md-4\">\r\n              <mat-checkbox [checked]=\"i?.hasSelected\" disabled>\r\n                {{i?.multimediaStaticMedium | uppercase}}\r\n              </mat-checkbox>\r\n            </td>\r\n            <td class=\"col-md-1\" \r\n              *ngIf=\"previewS1Application?.refTypeOfMedium === 'MULTIMEDIA-STATIC' && i?.multimediaStaticMedium !== 'digital static'\">\r\n              Size\r\n            </td>\r\n            <td class=\"col-md-2\">\r\n              <input matInput \r\n                *ngIf=\"previewS1Application?.refTypeOfMedium === 'MULTIMEDIA-STATIC' && i?.multimediaStaticMedium !== 'digital static'\" \r\n                [value]=\"i?.sizeLength\" disabled>\r\n            </td>\r\n            <td class=\"col-md-5\"></td>\r\n          </tr>\r\n        </ng-container>\r\n      </ng-container>\r\n\r\n      <ng-container *ngIf=\"previewS1Application?.refTypeOfMedium === 'MULTIMEDIA-MOVING'\">\r\n        <ng-container *ngFor=\"let i of multimediaDTO.applicationMultimediaMovingList\" style=\"height: 30px;\">\r\n          <tr *ngIf=\"i?.hasSelected\">\r\n            <td class=\"col-md-4\">\r\n              <mat-checkbox [checked]=\"true\" disabled>\r\n                {{i?.multimediaMovingMedium | uppercase}}\r\n              </mat-checkbox>\r\n            </td>\r\n            <td class=\"col-md-1\" *ngIf=\"previewS1Application?.refTypeOfMedium === 'MULTIMEDIA-MOVING'\">Length</td>\r\n            <td class=\"col-md-2\">\r\n              <input matInput *ngIf=\"previewS1Application?.refTypeOfMedium === 'MULTIMEDIA-MOVING'\" [value]=\"multimediaDTO?.sizeLength\" disabled>\r\n            </td>\r\n            <td class=\"col-md-5\"></td>\r\n          </tr>\r\n        </ng-container>\r\n      </ng-container>\r\n    </table>\r\n  </div>\r\n\r\n  <app-attachment-document [s1Application]=\"previewS1Application\" [applicationStage]=\"'S1-Preview'\"\r\n  [isAscUser]=\"'true'\" [isDisableFieldOnUpdate]=\"'true'\"\r\n  [originalAttachmentDocuments]=\"originalAttachmentDocuments\" [revisionAttachmentDocuments]=\"revisionAttachmentDocuments\" [complianceAttachmentDocuments]=\"complianceAttachmentDocuments\"></app-attachment-document>\r\n\r\n  <div class=\"row\" *ngIf=\"supportiveDocumentList.length>0\">\r\n    <div class=\"col-md-12\" appearance=\"outline\">\r\n      <div class=\"mat-elevation-z8 fields\">\r\n        <table mat-table [dataSource]=\"dataSource||supportiveDocumentList\" matSort>\r\n\r\n          <ng-container matColumnDef=\"typeOfDocument\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> TYPE OF DOCUMENT </th>\r\n            <td mat-cell *matCellDef=\"let element\"> {{ element?.typeOfDocument?.description }} </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"variant\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> VARIANT </th>\r\n            <td mat-cell *matCellDef=\"let element\"> {{ element?.variant==undefined ? 'N/A' : element?.variant }} </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"expiresOn\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> EXPIRES ON </th>\r\n            <td mat-cell *matCellDef=\"let element\">\r\n              {{ element?.expiresOn==undefined ? 'N/A' : element?.expiresOn | date:'yyyy-MM-dd' }}\r\n            </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"basedOn\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> BASED ON </th>\r\n            <td mat-cell *matCellDef=\"let element\">\r\n              {{ element?.basedOn ==undefined ? 'N/A' : element?.basedOn | date:'yyyy-MM-dd' }}\r\n            </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"remarks\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> REMARKS </th>\r\n            <td mat-cell *matCellDef=\"let element\"> {{ element?.remarks==undefined ? 'N/A' : element?.remarks }} </td>\r\n          </ng-container>\r\n\r\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n          <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n        </table>\r\n        <div class=\"no-record\" [hidden]=\"dataSource && dataSource?.data?.length > 0\"\r\n          *ngIf=\"supportiveDocumentList.length==0\">\r\n          No supporting document found.\r\n        </div>\r\n        <!-- <mat-paginator [pageSizeOptions]=\"[10, 20, 50]\" showFirstLastButtons></mat-paginator> -->\r\n      </div>\r\n      <div class=\"row\"><br></div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!--  -->\r\n<div class=\"row fields\" *ngIf=\"previewS1Application.autoSubmit==true&&previewS1Application?.externalStatus!='SAVED'\">\r\n  <h4>\r\n    <i class=\"material-icons\">schedule_send</i> &nbsp;<b>AUTO-SUBMISSION DETAILS</b>\r\n    <hr>\r\n    <div class=\"row\">\r\n      <div class=\"col-md-6\" appearance=\"outline\">\r\n        <mat-label>Date</mat-label>\r\n        <input matInput [value]=\"previewS1Application.submissionDate\" disabled>\r\n      </div>\r\n      <!-- <div class=\"col-md-3\" appearance=\"outline\">\r\n        <mat-label>Time</mat-label>\r\n        <input matInput [value]=\"previewS1Application.autoSubmitTime+' AM'\" disabled>\r\n      </div> -->\r\n    </div>\r\n  </h4>\r\n</div>\r\n");

/***/ }),

/***/ "c427":
/*!************************************************************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/modules/pages/applications/schedule-of-fees/special-applications/special-applications.component.html ***!
  \************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<form>\r\n  <div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12 title\">\r\n        <mat-label>\r\n          <mat-icon>view_list</mat-icon> Special Clearing - For Payment\r\n        </mat-label>\r\n      </div>\r\n    </div>\r\n    <hr>\r\n    <br>\r\n    <div class=\"col-md-12\" fxLayout fxLayoutAlign=\"center center\">\r\n      <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n        <input matInput type=\"text\" placeholder=\"Company Name\">\r\n      </mat-form-field>\r\n    </div>\r\n\r\n    <div class=\"mat-elevation-z8 fields\">\r\n      <table mat-table [dataSource]=\"dataSource\" matSort>\r\n        <ng-container matColumnDef=\"referenceCode\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> REFERENCE CODE </th>\r\n          <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"openModal(element)\"> {{element?.applicationForm?.referenceCode | uppercase}}</td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"typeOfApplication\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> TYPE OF APPLICATION</th>\r\n          <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"openModal(element)\">{{element?.applicationForm?.applicationType.description | uppercase}}</td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"brand\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> BRAND</th>\r\n          <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"openModal(element)\">{{element?.applicationForm?.brand.description | uppercase}}</td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"medium\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> MEDIUM</th>\r\n          <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"openModal(element)\">{{element?.applicationForm?.typeOfMedium | uppercase}}</td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"applicantCompanyName\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> APPLICANT COMPANY NAME</th>\r\n          <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"openModal(element)\">{{element?.applicationForm?.company.companyName | uppercase}}</td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"paymentStatus\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> PAYMENT STATUS</th>\r\n          <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"openModal(element)\">{{element?.paymentStatus?.replaceAll('_',' ') | uppercase}}</td>\r\n        </ng-container>\r\n\r\n\r\n\r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n      </table>\r\n      <div class=\"no-record\" [hidden]=\"dataSource && dataSource?.data?.length > 0\">\r\n        No record found.\r\n      </div>\r\n      <mat-paginator [pageSizeOptions]=\"[10, 20, 50]\" showFirstLastButtons></mat-paginator>\r\n    </div>\r\n    <br>\r\n  </div>\r\n</form>\r\n");

/***/ }),

/***/ "cv+y":
/*!************************************************************************************************************************!*\
  !*** ./src/app/modules/pages/applications/schedule-of-fees/multiple-applications/multiple-applications.component.scss ***!
  \************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcGFnZXMvYXBwbGljYXRpb25zL3NjaGVkdWxlLW9mLWZlZXMvbXVsdGlwbGUtYXBwbGljYXRpb25zL211bHRpcGxlLWFwcGxpY2F0aW9ucy5jb21wb25lbnQuc2NzcyJ9 */");

/***/ }),

/***/ "d1XC":
/*!************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/modules/pages/applications/schedule-of-fees/multiple-applications/modal-multiple-applications/modal-multiple-applications.component.html ***!
  \************************************************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12 title\">\r\n            <mat-label>\r\n                <mat-icon>view_list</mat-icon> Schedule of Fees - Multiple Applications\r\n            </mat-label>\r\n        </div>\r\n    </div>\r\n    <hr>\r\n    <br>\r\n    <div class=\"row col-md-12\">\r\n        <div class=\"row col-md-6\">\r\n            <div>\r\n                <mat-label>Proof of Payment: &nbsp;&nbsp;&nbsp;<span>PDF file only!</span></mat-label><br>\r\n                <input class=\"file-upload\" type=\"file\" [(ngModel)]=\"attachment\" [ngModelOptions]=\"{standalone: true}\"\r\n                    accept=\".pdf\" (change)=\"selectFile($event)\" [disabled]=\"isDisabled\">\r\n            </div>\r\n            <div *ngIf=\"previewDocument===true && !isDisabled\">\r\n                <div class=\"file-upload\">\r\n                    <object [data]=\"safeURLProofOfPayment\" type=\"application/pdf\" width=\"100%\" height=\"500\">\r\n                        <iframe [src]=\"safeURLProofOfPayment\" width=\"100%\" height=\"500\">\r\n                            <p>This browser does not support PDF!</p>\r\n                        </iframe>\r\n                    </object>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row col-md-6\">\r\n\r\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n            <mat-label>Advertiser</mat-label>\r\n            <input matInput name=\"companyName\" [value]=\"multipleApplication?.company?.companyName\" readonly>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n            <mat-label>Vatable Sales</mat-label>\r\n            <input matInput class=\"numbers-input\" name=\"amount\" [value]=\"paymentDetails?.basicRate | number : '1.2-2'\" readonly>\r\n        </mat-form-field>\r\n\r\n\r\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n            <mat-label>VAT</mat-label>\r\n            <input matInput class=\"numbers-input\" name=\"amount\" [value]=\"paymentDetails?.vat | number : '1.2-2'\" readonly>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n            <mat-label>Total Sales (VAT Inclusive)</mat-label>\r\n            <input matInput class=\"numbers-input total\" name=\"amount\" [value]=\"paymentDetails?.amountDue | number : '1.2-2'\" readonly>\r\n        </mat-form-field>\r\n\r\n        <div>\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n              <ng-container matColumnDef=\"referenceCode\">\r\n                  <th mat-header-cell *matHeaderCellDef> Reference Code </th>\r\n                  <td mat-cell *matCellDef=\"let element; let i = index\">{{element?.referenceCode}}</td>\r\n              </ng-container>\r\n              <ng-container matColumnDef=\"adTitle\">\r\n                  <th mat-header-cell *matHeaderCellDef> Ad Title </th>\r\n                  <td mat-cell *matCellDef=\"let element; let i = index\">{{element?.adTitle}}</td>\r\n              </ng-container>\r\n              <ng-container matColumnDef=\"mediumAndLength\">\r\n                <th mat-header-cell *matHeaderCellDef> Medium And Length</th>\r\n                <td mat-cell *matCellDef=\"let element; let i = index\">{{ element?.typeOfMediumDisplay }}</td>\r\n              </ng-container>\r\n              <ng-container matColumnDef=\"amount\">\r\n                  <th mat-header-cell *matHeaderCellDef> Amount</th>\r\n                  <td mat-cell *matCellDef=\"let element; let i = index\" class=\"numbers-input\">{{element?.amount | number : '1.2-2'}}</td>\r\n              </ng-container>\r\n              <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n              <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n          </table>\r\n          <div class=\"no-record\" [hidden]=\"dataSource && dataSource?.data?.length > 0\">\r\n              No record found.\r\n          </div>\r\n          <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons></mat-paginator>\r\n          <!-- <div class=\"grandTotal\">\r\n            <mat-label>TOTAL: &nbsp;&nbsp;&nbsp;<span>{{multipleApplication?.totalAmount | number : '1.2-2'}}</span></mat-label>\r\n          </div> -->\r\n        </div>\r\n\r\n        <div><br><hr><br></div>\r\n\r\n            <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n                <mat-label>Payment Mode</mat-label>\r\n                <mat-select [(ngModel)]=\"paymentType\" [ngModelOptions]=\"{standalone: true}\" [disabled]=\"multipleApplication?.paymentStatus !== 'FOR_PAYMENT'\">\r\n                    <mat-option *ngFor=\"let i of paymentTypeList\" [value]=\"i\" name=\"paymentType\">\r\n                        {{i?.paymentDescription | uppercase}}\r\n                    </mat-option>\r\n                </mat-select>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n                <mat-label>Remarks</mat-label>\r\n                <textarea matInput name=\"remarks\" [(ngModel)]=\"payment.remarks\" [readonly]=\"multipleApplication?.paymentStatus !== 'FOR_PAYMENT'\"></textarea>\r\n            </mat-form-field>\r\n\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"row\" *ngIf=\"!isDisabled || multipleApplication?.paymentStatus === undefined || multipleApplication?.totalAmount === 0\">\r\n        <div class=\"col-md-10\"><span *ngIf=\"multipleApplication && multipleApplication?.totalAmount === 0\">\r\n          <i>Please contact ASC admin to check the Maintenance of Fees.</i></span></div>\r\n        <div class=\"col-md-2\">\r\n            <button mat-raised-button class=\"button-red\" [disabled]=\"!paymentType || !previewDocument || multipleApplication?.totalAmount === 0\" (click)=\"uploadDocument(multipleApplication)\">\r\n                <i class=\"material-icons color__white\">task_alt</i> SUBMIT\r\n            </button>\r\n        </div>\r\n    </div>\r\n</div>\r\n");

/***/ }),

/***/ "dUsq":
/*!*************************************************************************************!*\
  !*** ./src/app/modules/pages/accounting/upload-payment/upload-payment.component.ts ***!
  \*************************************************************************************/
/*! exports provided: UploadPaymentComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UploadPaymentComponent", function() { return UploadPaymentComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "mrSG");
/* harmony import */ var _raw_loader_upload_payment_component_html__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! raw-loader!./upload-payment.component.html */ "XnC/");
/* harmony import */ var _upload_payment_component_scss__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./upload-payment.component.scss */ "hINR");
/* harmony import */ var _shared_utils_constants__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./../../../../shared/utils/constants */ "9Vv1");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var _models__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @models */ "sKXY");
/* harmony import */ var _shared__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @shared */ "M0ag");
/* harmony import */ var _services__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @services */ "dJ3e");
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/platform-browser */ "jhN1");
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! sweetalert2 */ "PSD3");
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(sweetalert2__WEBPACK_IMPORTED_MODULE_9__);
/* harmony import */ var _core_services_file_storage_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../../core/services/file.storage.service */ "TMp0");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/router */ "tyNb");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @angular/forms */ "3Pt+");













let UploadPaymentComponent = class UploadPaymentComponent {
    constructor(sanitizer, apiService, dataStorage, fileStorageService, router, formBuilder, sweetAlertService) {
        this.sanitizer = sanitizer;
        this.apiService = apiService;
        this.dataStorage = dataStorage;
        this.fileStorageService = fileStorageService;
        this.router = router;
        this.formBuilder = formBuilder;
        this.sweetAlertService = sweetAlertService;
        this.s1Application = new _models__WEBPACK_IMPORTED_MODULE_5__["S1Application"]();
        this.payment = new _models__WEBPACK_IMPORTED_MODULE_5__["Payment"]();
        this.previewDocument = false;
        this.attachmentDocument = new _models__WEBPACK_IMPORTED_MODULE_5__["AttachmentDocument"]();
        this.attachmentDocuments = [];
        this.isSubmitted = false;
        this.paymentTypeList = [];
    }
    ngOnInit() {
        console.log('Upload Payment');
        this.currentUser = this.dataStorage.getUserAccount();
        this.getPaymentList();
        this.setFormValidator();
    }
    setFormValidator() {
        this.paymentForm = this.formBuilder.group({
            remarks: ['']
        });
    }
    selectFile(event) {
        const attachmentSize = event.target.files[0].size;
        if (event.target.files[0].type === 'application/pdf') {
            if (attachmentSize > 15000000) { // 1MB = 1M
                this.sweetAlertService.customErrorMessage(`Attachments' total file size should not exceed 15MB.`);
                event.target.value = '';
                return;
            }
            else {
                const pdfURL = URL.createObjectURL(event.target.files[0]);
                this.safeURLProofOfPayment = this.sanitizer.bypassSecurityTrustResourceUrl(pdfURL);
                this.previewDocument = true;
                // env.showSpinner = true;
                const reader = new FileReader();
                const [file] = event.target.files;
                reader.readAsDataURL(file);
                reader.onload = () => {
                };
            }
            this.selectedFiles = event.target.files;
        }
        else {
            this.sweetAlertService.customErrorMessage('Attachment should be in PDF format only.');
            event.target.value = '';
            return;
        }
    }
    uploadDocument(s1Application) {
        sweetalert2__WEBPACK_IMPORTED_MODULE_9___default.a.fire({
            text: 'Are you sure you want to submit this PROOF OF PAYMENT?',
            icon: 'question',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Confirm'
        }).then((result) => {
            if (result.value) {
                this.dataStorage.setDisplayProgressbar(true);
                let params = '';
                params = '?&attachmentType=' + _shared__WEBPACK_IMPORTED_MODULE_6__["ATTACHMENT_TYPE"].PAYMENT + '&submissionType=' + _shared__WEBPACK_IMPORTED_MODULE_6__["SUBMISSION_TYPE"].ORIGINAL;
                this.fileStorageService.pushFileToStorage(_shared__WEBPACK_IMPORTED_MODULE_6__["ENDPOINTS"].attachmentDocument, this.selectedFiles.item(0), params)
                    .subscribe(res => {
                    const obj = res.responseData.data;
                    console.log(obj);
                    this.s1Application.paymentAttachmentReference = obj.paymentAttachmentReference;
                    this.payment.paymentAttachmentReference = obj.paymentAttachmentReference;
                    this.payment.amountDue = s1Application.amount;
                    this.payment.applicationForm = s1Application;
                    this.payment.appFormReference = s1Application.appFormReference;
                    this.payment.filename = obj.filename;
                    this.saveProofOfPayment();
                    // this.previewDocument = true;
                    this.selectedFiles = undefined;
                }, (err) => {
                    this.sweetAlertService.error(err);
                }, () => {
                    // actions after subscription
                    this.dataStorage.setDisplayProgressbar(false);
                });
            }
        });
    }
    saveProofOfPayment() {
        console.log('Saving payment...');
        this.dataStorage.setDisplayProgressbar(true);
        this.payment.paymentStatus = _shared__WEBPACK_IMPORTED_MODULE_6__["PAYMENT_STATUS"].UNPAID;
        this.s1Application.paymentStatus = _shared__WEBPACK_IMPORTED_MODULE_6__["PAYMENT_STATUS"].UNPAID;
        this.payment.id = 0;
        this.payment.officialReceiptNo = '';
        this.payment.paymentMethod = null;
        console.log('PAYMENT : ', this.payment);
        console.log('S1 ', this.s1Application);
        return false;
        this.apiService.save(`${_shared__WEBPACK_IMPORTED_MODULE_6__["ENDPOINTS"].applicationFormPresentor}payment-type-id/${this.paymentType.id}/payment/submit`, this.payment)
            .subscribe((res) => {
            console.log('SAVED STATUS: ', res.responseData.data);
            this.safeURLProofOfPayment = this.sanitizer.bypassSecurityTrustResourceUrl(res.responseData.data.fileURL);
            this.router.navigate(['asc/page/application/s1/lists']);
            this.isSubmitted = true;
            this.sweetAlertService.customSuccessMessage('Proof of payment successfully submitted.');
        }, (err) => {
            console.log(err);
            this.sweetAlertService.error(err);
            this.dataStorage.setDisplayProgressbar(false);
        }, () => {
            this.dataStorage.setDisplayProgressbar(false);
        });
    }
    getPaymentList() {
        this.apiService.findAll(_shared__WEBPACK_IMPORTED_MODULE_6__["ENDPOINTS"].paymentType).subscribe((res) => {
            this.paymentTypeList = res.responseData.data;
            if (this.currentUser.userRole.name === _shared_utils_constants__WEBPACK_IMPORTED_MODULE_3__["USER_ROLES"].ROLE_APPLICANT) {
                const creditCardIndex = this.paymentTypeList
                    .findIndex((element) => element.paymentDescription === 'Credit Card');
                this.paymentTypeList.splice(creditCardIndex, 1);
            }
        });
    }
    selectedPaymentType(res) {
        let pt = new _models__WEBPACK_IMPORTED_MODULE_5__["PaymentType"]();
        pt = res;
        this.paymentType = pt;
    }
};
UploadPaymentComponent.ctorParameters = () => [
    { type: _angular_platform_browser__WEBPACK_IMPORTED_MODULE_8__["DomSanitizer"] },
    { type: _services__WEBPACK_IMPORTED_MODULE_7__["ApiService"] },
    { type: _services__WEBPACK_IMPORTED_MODULE_7__["DataStorageService"] },
    { type: _core_services_file_storage_service__WEBPACK_IMPORTED_MODULE_10__["FileStorageService"] },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_11__["Router"] },
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_12__["FormBuilder"] },
    { type: _services__WEBPACK_IMPORTED_MODULE_7__["SweetAlertService"] }
];
UploadPaymentComponent.propDecorators = {
    s1Application: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"] }]
};
UploadPaymentComponent = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_4__["Component"])({
        selector: 'app-upload-payment',
        template: _raw_loader_upload_payment_component_html__WEBPACK_IMPORTED_MODULE_1__["default"],
        styles: [_upload_payment_component_scss__WEBPACK_IMPORTED_MODULE_2__["default"]]
    })
], UploadPaymentComponent);



/***/ }),

/***/ "eWDB":
/*!*****************************************************************************************************!*\
  !*** ./src/app/modules/pages/applications/material-information/material-information.component.scss ***!
  \*****************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (".file-upload {\n  width: 100%;\n  background-color: #bad9ff;\n  border: 1px solid gray;\n}\n\n.pdf-border {\n  width: 100%;\n  height: 500px;\n  border: 2px solid gray;\n}\n\n.add-document {\n  color: white;\n}\n\n.pdf-viewer-wrap {\n  display: flex;\n  height: 95vh;\n  border: 5px solid #cccccc;\n}\n\n.pdf-viewer-controls-wrap {\n  border: 5px solid #cccccc;\n  width: 20%;\n  text-align: center;\n}\n\n.pdfv-control {\n  background: #f3f3f3;\n  padding: 10px;\n  border-bottom: 1px solid #cccc;\n}\n\n.pdfv-control button {\n  background: #9dff00;\n  border: none;\n  padding: 5px 10px;\n  border-radius: 5px;\n  font-weight: bold;\n  cursor: pointer;\n}\n\n.pdf-viewer-controls {\n  overflow: auto;\n}\n\n.pdf-viewer-viewer-window {\n  border: 5px solid #cccccc;\n  width: 80%;\n  overflow: auto;\n}\n\n.document-form-margin {\n  margin-right: 10px;\n}\n\n::ng-deep .mat-form-field.media-info {\n  margin-right: 1em;\n}\n\ntable {\n  width: 100%;\n}\n\ntable tr td:first-child {\n  width: 30%;\n}\n\n.submission-type {\n  font-size: 16px;\n  position: absolute;\n}\n\n.required {\n  color: #C5140C;\n  font-size: 16px;\n  margin-left: 4px;\n}\n\n.required-fields-note {\n  font-style: italic;\n  color: #c5140c;\n  font-weight: 500;\n  margin-bottom: 20px;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9wYWdlcy9hcHBsaWNhdGlvbnMvbWF0ZXJpYWwtaW5mb3JtYXRpb24vbWF0ZXJpYWwtaW5mb3JtYXRpb24uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFBO0VBQ0EseUJBQUE7RUFDQSxzQkFBQTtBQUNGOztBQUVBO0VBQ0UsV0FBQTtFQUNBLGFBQUE7RUFDQSxzQkFBQTtBQUNGOztBQU1BO0VBQ0UsWUFBQTtBQUhGOztBQU1BO0VBQ0UsYUFBQTtFQUNBLFlBQUE7RUFDQSx5QkFBQTtBQUhGOztBQU1BO0VBQ0UseUJBQUE7RUFDQSxVQUFBO0VBQ0Esa0JBQUE7QUFIRjs7QUFNQTtFQUNFLG1CQUFBO0VBQ0EsYUFBQTtFQUNBLDhCQUFBO0FBSEY7O0FBTUE7RUFDRSxtQkFBQTtFQUNBLFlBQUE7RUFDQSxpQkFBQTtFQUNBLGtCQUFBO0VBQ0EsaUJBQUE7RUFDQSxlQUFBO0FBSEY7O0FBTUE7RUFDRSxjQUFBO0FBSEY7O0FBTUE7RUFDRSx5QkFBQTtFQUNBLFVBQUE7RUFDQSxjQUFBO0FBSEY7O0FBTUE7RUFDRSxrQkFBQTtBQUhGOztBQU9FO0VBQ0UsaUJBQUE7QUFKSjs7QUFTQTtFQUNFLFdBQUE7QUFORjs7QUFRRTtFQUNFLFVBQUE7QUFOSjs7QUFXQTtFQUVFLGVBQUE7RUFDQSxrQkFBQTtBQVRGOztBQVlBO0VBQ0UsY0FBQTtFQUNBLGVBQUE7RUFDQSxnQkFBQTtBQVRGOztBQVlBO0VBQ0Usa0JBQUE7RUFDQSxjQUFBO0VBQ0EsZ0JBQUE7RUFDQSxtQkFBQTtBQVRGIiwiZmlsZSI6InNyYy9hcHAvbW9kdWxlcy9wYWdlcy9hcHBsaWNhdGlvbnMvbWF0ZXJpYWwtaW5mb3JtYXRpb24vbWF0ZXJpYWwtaW5mb3JtYXRpb24uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZmlsZS11cGxvYWQge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICNiYWQ5ZmY7XHJcbiAgYm9yZGVyOiAxcHggc29saWQgZ3JheTtcclxufVxyXG5cclxuLnBkZi1ib3JkZXIge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIGhlaWdodDogNTAwcHg7XHJcbiAgYm9yZGVyOiAycHggc29saWQgZ3JheTtcclxufVxyXG5cclxuLy8gLmhpZGVJbmRleCB7XHJcbi8vICAgZGlzcGxheTogbm9uZTtcclxuLy8gfVxyXG5cclxuLmFkZC1kb2N1bWVudCB7XHJcbiAgY29sb3I6IHdoaXRlO1xyXG59XHJcblxyXG4ucGRmLXZpZXdlci13cmFwIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGhlaWdodDogOTV2aDtcclxuICBib3JkZXI6IDVweCBzb2xpZCAjY2NjY2NjO1xyXG59XHJcblxyXG4ucGRmLXZpZXdlci1jb250cm9scy13cmFwIHtcclxuICBib3JkZXI6IDVweCBzb2xpZCAjY2NjY2NjO1xyXG4gIHdpZHRoOiAyMCU7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG59XHJcblxyXG4ucGRmdi1jb250cm9sIHtcclxuICBiYWNrZ3JvdW5kOiAjZjNmM2YzO1xyXG4gIHBhZGRpbmc6IDEwcHg7XHJcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNjY2NjO1xyXG59XHJcblxyXG4ucGRmdi1jb250cm9sIGJ1dHRvbiB7XHJcbiAgYmFja2dyb3VuZDogIzlkZmYwMDtcclxuICBib3JkZXI6IG5vbmU7XHJcbiAgcGFkZGluZzogNXB4IDEwcHg7XHJcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gIGN1cnNvcjogcG9pbnRlcjtcclxufVxyXG5cclxuLnBkZi12aWV3ZXItY29udHJvbHMge1xyXG4gIG92ZXJmbG93OiBhdXRvO1xyXG59XHJcblxyXG4ucGRmLXZpZXdlci12aWV3ZXItd2luZG93IHtcclxuICBib3JkZXI6IDVweCBzb2xpZCAjY2NjY2NjO1xyXG4gIHdpZHRoOiA4MCU7XHJcbiAgb3ZlcmZsb3c6IGF1dG87XHJcbn1cclxuXHJcbi5kb2N1bWVudC1mb3JtLW1hcmdpbiB7XHJcbiAgbWFyZ2luLXJpZ2h0OiAxMHB4O1xyXG59XHJcblxyXG46Om5nLWRlZXAge1xyXG4gIC5tYXQtZm9ybS1maWVsZC5tZWRpYS1pbmZvIHtcclxuICAgIG1hcmdpbi1yaWdodDogMWVtO1xyXG4gIH1cclxufVxyXG5cclxuLy8gZm9yIHN0YXRpYyBhbmQgbW92aW5nIG11bHRpbWVkaWEncyBjaGVja2JveCBhbmQgZmllbGQgLSBzdGFydFxyXG50YWJsZSB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcblxyXG4gIHRyIHRkOmZpcnN0LWNoaWxkIHtcclxuICAgIHdpZHRoOiAzMCU7XHJcbiAgfVxyXG59XHJcbi8vIGZvciBzdGF0aWMgYW5kIG1vdmluZyBtdWx0aW1lZGlhJ3MgY2hlY2tib3ggYW5kIGZpZWxkIC0gZW5kXHJcblxyXG4uc3VibWlzc2lvbi10eXBlIHtcclxuICAvLyBtYXJnaW46IDE0cHggMHB4ICFpbXBvcnRhbnQ7XHJcbiAgZm9udC1zaXplOiAxNnB4O1xyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxufVxyXG5cclxuLnJlcXVpcmVkIHtcclxuICBjb2xvcjogI0M1MTQwQztcclxuICBmb250LXNpemU6IDE2cHg7XHJcbiAgbWFyZ2luLWxlZnQ6IDRweDtcclxufVxyXG5cclxuLnJlcXVpcmVkLWZpZWxkcy1ub3RlIHtcclxuICBmb250LXN0eWxlOiBpdGFsaWM7XHJcbiAgY29sb3I6ICNjNTE0MGM7XHJcbiAgZm9udC13ZWlnaHQ6IDUwMDtcclxuICBtYXJnaW4tYm90dG9tOiAyMHB4O1xyXG59XHJcbiJdfQ== */");

/***/ }),

/***/ "fmC0":
/*!**************************************************************************!*\
  !*** ./src/app/modules/fragments/s1-form-type/s1-form-type.component.ts ***!
  \**************************************************************************/
/*! exports provided: S1FormTypeComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "S1FormTypeComponent", function() { return S1FormTypeComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "mrSG");
/* harmony import */ var _raw_loader_s1_form_type_component_html__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! raw-loader!./s1-form-type.component.html */ "NcxZ");
/* harmony import */ var _s1_form_type_component_scss__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./s1-form-type.component.scss */ "Np2X");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/forms */ "3Pt+");
/* harmony import */ var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/material/dialog */ "0IaG");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/router */ "tyNb");
/* harmony import */ var _models__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @models */ "sKXY");
/* harmony import */ var _services__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @services */ "dJ3e");
/* harmony import */ var _shared__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @shared */ "M0ag");
/* harmony import */ var app_core_models_numberOfMultipleApplicationAllowed_model__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! app/core/models/numberOfMultipleApplicationAllowed.model */ "/RNn");
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! sweetalert2 */ "PSD3");
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(sweetalert2__WEBPACK_IMPORTED_MODULE_11__);












let S1FormTypeComponent = class S1FormTypeComponent {
    constructor(apiService, formBuilder, router, dataStorage, dialog, dialogRef, data) {
        this.apiService = apiService;
        this.formBuilder = formBuilder;
        this.router = router;
        this.dataStorage = dataStorage;
        this.dialog = dialog;
        this.dialogRef = dialogRef;
        this.data = data;
        this.s1Application = new _models__WEBPACK_IMPORTED_MODULE_7__["S1Application"]();
        this.numberOfMultipleApplicationAllowed = new app_core_models_numberOfMultipleApplicationAllowed_model__WEBPACK_IMPORTED_MODULE_10__["NumberOfMultipleApplicationAllowed"]();
        this.applicationTypeList = [];
        this.formTypeList = [..._shared__WEBPACK_IMPORTED_MODULE_9__["FORM_TYPE"]];
        this.showNumberOfApplications = false;
        this.isMultiple = false;
        this.isSpecial = false;
        this.isPresentation = false;
    }
    ngOnInit() {
        this.setFormValidator('');
        this.getApplicationTypeList();
        this.s1Application.formType = 'INDIVIDUAL';
        this.getNoOfMultipleApplicationsAllowed();
    }
    getNoOfMultipleApplicationsAllowed() {
        this.apiService.findAll(_shared__WEBPACK_IMPORTED_MODULE_9__["ENDPOINTS"].noOfMultipleApplicationAllowed).subscribe((res) => {
            this.numberOfMultipleApplicationAllowed = res.responseData.data[0];
        });
    }
    getApplicationTypeList() {
        this.s1Application.applicationType = null;
        this.applicationTypeList = [];
        this.apiService.findAll(_shared__WEBPACK_IMPORTED_MODULE_9__["ENDPOINTS"].applicationType).subscribe((res) => {
            this.applicationTypeList = res.responseData.data;
        });
    }
    setAsMultiple() {
        this.isMultiple = !this.isMultiple;
        this.showNumberOfApplications = !this.showNumberOfApplications;
        if (this.isMultiple) {
            this.s1Application.formType = _shared__WEBPACK_IMPORTED_MODULE_9__["APPFORM_TYPE"].MULTIPLE;
            this.setFormValidator('multiple');
        }
        else {
            this.setFormValidator('');
            this.s1Application.formType = _shared__WEBPACK_IMPORTED_MODULE_9__["APPFORM_TYPE"].INDIVIDUAL;
        }
    }
    checkType() {
        if (this.s1Application.applicationType.description.toLocaleLowerCase().includes('special')) {
            this.isSpecial = true;
        }
        else {
            this.isSpecial = false;
        }
        if (this.isMultiple) {
            this.setFormValidator('multiple');
        }
    }
    setFormValidator(apptype) {
        let formtype;
        if (this.s1Application.formType) {
            formtype = this.s1Application.formType;
        }
        if (apptype === 'multiple') {
            this.s1ApplicationForm = this.formBuilder.group({
                formType: [formtype, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                applicationType: [this.s1Application.applicationType, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                numberOfApplications: [
                    '', [
                        _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required,
                        _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].min(parseInt(this.numberOfMultipleApplicationAllowed.minimum.toString(), null)),
                        _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].max(parseInt(this.numberOfMultipleApplicationAllowed.maximum.toString(), null))
                    ]
                ],
            });
        }
        else {
            this.s1ApplicationForm = this.formBuilder.group({
                applicationType: [this.s1Application.applicationType, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            });
            this.showNumberOfApplications = false;
        }
    }
    proceedS1Application() {
        if (!this.isMultiple) {
            sweetalert2__WEBPACK_IMPORTED_MODULE_11___default.a.fire({
                text: 'Note: The application to be created is an individual application',
                icon: 'info',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'PROCEED'
            }).then((result) => {
                if (result.value) {
                    this.navigateToS1Application();
                }
            });
            return;
        }
        this.navigateToS1Application();
    }
    navigateToS1Application() {
        this.router.navigate(['/asc/page/application/s1/add']);
        const formAndAppType = {
            formType: this.s1Application.formType,
            appType: this.s1Application.applicationType
        };
        this.dataStorage.setS1FormAndAppType(formAndAppType);
        this.dataStorage.setNumberOfApplications(this.numberOfApplications);
        this.closeModal();
    }
    setAsForPresentation() {
        this.isPresentation = !this.isPresentation;
        if (this.isPresentation) {
            sweetalert2__WEBPACK_IMPORTED_MODULE_11___default.a.fire({
                text: 'Note: Please be present or available during presentation period.',
                icon: 'info',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'PROCEED'
            }).then((result) => {
                if (result.value) {
                    this.s1Application.formType = _shared__WEBPACK_IMPORTED_MODULE_9__["APPFORM_TYPE"].FOR_PRESENTATION;
                    this.proceedS1Application();
                }
            });
        }
    }
    closeModal() {
        this.dialogRef.close();
    }
};
S1FormTypeComponent.ctorParameters = () => [
    { type: _services__WEBPACK_IMPORTED_MODULE_8__["ApiService"] },
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_4__["FormBuilder"] },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_6__["Router"] },
    { type: _services__WEBPACK_IMPORTED_MODULE_8__["DataStorageService"] },
    { type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_5__["MatDialog"] },
    { type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_5__["MatDialogRef"], decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Optional"] }] },
    { type: undefined, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Optional"] }, { type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Inject"], args: [_angular_material_dialog__WEBPACK_IMPORTED_MODULE_5__["MAT_DIALOG_DATA"],] }] }
];
S1FormTypeComponent = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_3__["Component"])({
        selector: 'app-s1-form-type',
        template: _raw_loader_s1_form_type_component_html__WEBPACK_IMPORTED_MODULE_1__["default"],
        styles: [_s1_form_type_component_scss__WEBPACK_IMPORTED_MODULE_2__["default"]]
    })
], S1FormTypeComponent);



/***/ }),

/***/ "fshk":
/*!***************************************************************************!*\
  !*** ./src/app/modules/pages/applications/comment/comment.component.scss ***!
  \***************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (".reply_btns {\n  -moz-text-align-last: right;\n       text-align-last: right;\n}\n\n.comment-thread {\n  width: 700px;\n  max-width: 100%;\n  margin: auto;\n  padding: 0 30px;\n  background-color: #fff;\n  border: 1px solid transparent;\n  /* Removes margin collapse */\n}\n\n.m-0 {\n  margin: 0;\n}\n\n.sr-only {\n  position: absolute;\n  left: -10000px;\n  top: auto;\n  width: 1px;\n  height: 1px;\n  overflow: hidden;\n}\n\n/* Comment */\n\n.comment {\n  position: relative;\n  margin: 20px auto;\n}\n\n.comment-heading {\n  display: flex;\n  align-items: center;\n  height: 50px;\n  font-size: 14px;\n}\n\n.comment-voting {\n  width: 20px;\n  height: 32px;\n  border: 1px solid rgba(0, 0, 0, 0.2);\n  border-radius: 4px;\n}\n\n.comment-voting button {\n  display: block;\n  width: 100%;\n  height: 50%;\n  padding: 0;\n  border: 0;\n  font-size: 10px;\n}\n\n.comment-info {\n  color: rgba(0, 0, 0, 0.5);\n  margin-left: 10px;\n}\n\n.comment-author {\n  color: rgba(0, 0, 0, 0.85);\n  font-weight: bold;\n  text-decoration: none;\n}\n\n.comment-author:hover {\n  text-decoration: underline;\n}\n\n.replies {\n  margin-left: 20px;\n}\n\nform textarea {\n  height: 5em;\n  padding-left: 10px;\n}\n\nform mat-icon {\n  margin: auto;\n}\n\nform .badge {\n  font-size: 15px;\n  margin-bottom: 10px;\n}\n\nform label {\n  font-weight: 600;\n  padding-left: 5px;\n  margin-bottom: 5px;\n}\n\nform .comment {\n  border: 1px solid rgba(128, 128, 128, 0.521);\n  border-radius: 10px;\n  padding: 10px;\n  box-shadow: 10px 10px 11px -7px rgba(0, 0, 0, 0.31);\n  -webkit-box-shadow: 10px 10px 11px -7px rgba(0, 0, 0, 0.31);\n  -moz-box-shadow: 10px 10px 11px -7px rgba(0, 0, 0, 0.31);\n  margin: 2px;\n  padding-bottom: 10px;\n}\n\nform .comment-list {\n  border-radius: 10px;\n  height: auto;\n  overflow-x: hidden;\n  min-height: 10vh;\n  max-height: 60vh;\n}\n\nform .comment-list .comments {\n  border: 1px solid rgba(128, 128, 128, 0.473);\n  padding: 10px 10px;\n  border-radius: 10px;\n}\n\nform .comment-list .username-content {\n  color: #006cfa;\n  font-weight: 500;\n  padding-left: 10px;\n}\n\nform .comment-list .username-content b {\n  color: gray;\n  font-weight: 500;\n  line-height: 0px;\n}\n\nform .comment-list .username-content .modified-action {\n  color: #006cfa;\n  font-size: 12px;\n  font-weight: 400;\n  margin-left: 2px;\n}\n\nform .comment-list .comment-content {\n  padding: 0px 10px;\n}\n\nform .comment-list .comment-content .inner-html {\n  height: auto;\n}\n\nform .comment-list .time-content {\n  padding-left: 10px;\n  color: gray;\n  padding-bottom: 0px;\n}\n\nform .comment-list .a-icon {\n  display: flex;\n  flex-direction: row;\n  float: right;\n  padding-right: 10px;\n  cursor: pointer;\n}\n\nform .comment-list .action-icon {\n  display: flex;\n  flex-direction: row;\n}\n\nform .comment-list .action-icon .a-icon {\n  width: 7%;\n}\n\nform .comment-list .action-icon .a-icon i {\n  font-size: 20px;\n}\n\nform .comment-list .action-icon .a-icon {\n  cursor: pointer;\n}\n\nhr {\n  color: rgba(128, 128, 128, 0.753);\n  opacity: 1;\n}\n\n.header {\n  margin-top: 100px;\n  text-align: center;\n  margin-bottom: 40px;\n}\n\n.html-header {\n  margin: 15px 0 5px;\n}\n\n.mat-tab {\n  padding: 20px;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9wYWdlcy9hcHBsaWNhdGlvbnMvY29tbWVudC9jb21tZW50LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsMkJBQUE7T0FBQSxzQkFBQTtBQUNGOztBQVFBO0VBQ0UsWUFBQTtFQUNBLGVBQUE7RUFDQSxZQUFBO0VBQ0EsZUFBQTtFQUNBLHNCQUFBO0VBQ0EsNkJBQUE7RUFBK0IsNEJBQUE7QUFKakM7O0FBTUE7RUFDRSxTQUFBO0FBSEY7O0FBS0E7RUFDRSxrQkFBQTtFQUNBLGNBQUE7RUFDQSxTQUFBO0VBQ0EsVUFBQTtFQUNBLFdBQUE7RUFDQSxnQkFBQTtBQUZGOztBQUtBLFlBQUE7O0FBRUE7RUFDRSxrQkFBQTtFQUNBLGlCQUFBO0FBSEY7O0FBS0E7RUFDRSxhQUFBO0VBQ0EsbUJBQUE7RUFDQSxZQUFBO0VBQ0EsZUFBQTtBQUZGOztBQUlBO0VBQ0UsV0FBQTtFQUNBLFlBQUE7RUFDQSxvQ0FBQTtFQUNBLGtCQUFBO0FBREY7O0FBR0E7RUFDRSxjQUFBO0VBQ0EsV0FBQTtFQUNBLFdBQUE7RUFDQSxVQUFBO0VBQ0EsU0FBQTtFQUNBLGVBQUE7QUFBRjs7QUFFQTtFQUNFLHlCQUFBO0VBQ0EsaUJBQUE7QUFDRjs7QUFDQTtFQUNFLDBCQUFBO0VBQ0EsaUJBQUE7RUFDQSxxQkFBQTtBQUVGOztBQUFBO0VBQ0UsMEJBQUE7QUFHRjs7QUFEQTtFQUNFLGlCQUFBO0FBSUY7O0FBQUU7RUFDRSxXQUFBO0VBQ0Esa0JBQUE7QUFHSjs7QUFERTtFQUNFLFlBQUE7QUFHSjs7QUFERTtFQUNFLGVBQUE7RUFDQSxtQkFBQTtBQUdKOztBQURFO0VBQ0UsZ0JBQUE7RUFDQSxpQkFBQTtFQUNBLGtCQUFBO0FBR0o7O0FBQUU7RUFDRSw0Q0FBQTtFQUNBLG1CQUFBO0VBRUEsYUFBQTtFQUNBLG1EQUFBO0VBQ0EsMkRBQUE7RUFDQSx3REFBQTtFQUNBLFdBQUE7RUFDQSxvQkFBQTtBQUNKOztBQUNFO0VBRUUsbUJBQUE7RUFHQSxZQUFBO0VBQ0Esa0JBQUE7RUFDQSxnQkFBQTtFQUNBLGdCQUFBO0FBRko7O0FBR0k7RUFDRSw0Q0FBQTtFQUNBLGtCQUFBO0VBQ0EsbUJBQUE7QUFETjs7QUFJSTtFQUNFLGNBQUE7RUFDQSxnQkFBQTtFQUNBLGtCQUFBO0FBRk47O0FBSU07RUFDRSxXQUFBO0VBQ0EsZ0JBQUE7RUFDQSxnQkFBQTtBQUZSOztBQUlNO0VBR0UsY0FBQTtFQUNBLGVBQUE7RUFDQSxnQkFBQTtFQUNBLGdCQUFBO0FBSlI7O0FBT0k7RUFDRSxpQkFBQTtBQUxOOztBQU1NO0VBQ0UsWUFBQTtBQUpSOztBQVVJO0VBQ0Usa0JBQUE7RUFDQSxXQUFBO0VBQ0EsbUJBQUE7QUFSTjs7QUFXSTtFQUNFLGFBQUE7RUFDQSxtQkFBQTtFQUNBLFlBQUE7RUFDQSxtQkFBQTtFQUNBLGVBQUE7QUFUTjs7QUFZSTtFQUNFLGFBQUE7RUFDQSxtQkFBQTtBQVZOOztBQVdNO0VBRUUsU0FBQTtBQVZSOztBQVdRO0VBQ0UsZUFBQTtBQVRWOztBQVlNO0VBQ0UsZUFBQTtBQVZSOztBQWdCQTtFQUNFLGlDQUFBO0VBQ0EsVUFBQTtBQWJGOztBQWdCQTtFQUNFLGlCQUFBO0VBQ0Esa0JBQUE7RUFDQSxtQkFBQTtBQWJGOztBQWVBO0VBQ0Usa0JBQUE7QUFaRjs7QUFlQTtFQUNFLGFBQUE7QUFaRiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcGFnZXMvYXBwbGljYXRpb25zL2NvbW1lbnQvY29tbWVudC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5yZXBseV9idG5zIHtcclxuICB0ZXh0LWFsaWduLWxhc3Q6IHJpZ2h0O1xyXG4gIC8vIGJ1dHRvbntcclxuICAvLyAgIGZvbnQtc2l6ZTogMTBweDtcclxuICAvLyAgIHdpZHRoOiAxNXB4O1xyXG4gIC8vICAgaGVpZ2h0OiAzcHg7XHJcbiAgLy8gICBwYWRkaW5nOiAxcHg7XHJcbiAgLy8gICBtYXJnaW46IDFweDtcclxuICAvLyB9XHJcbn1cclxuLmNvbW1lbnQtdGhyZWFkIHtcclxuICB3aWR0aDogNzAwcHg7XHJcbiAgbWF4LXdpZHRoOiAxMDAlO1xyXG4gIG1hcmdpbjogYXV0bztcclxuICBwYWRkaW5nOiAwIDMwcHg7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcclxuICBib3JkZXI6IDFweCBzb2xpZCB0cmFuc3BhcmVudDsgLyogUmVtb3ZlcyBtYXJnaW4gY29sbGFwc2UgKi9cclxufVxyXG4ubS0wIHtcclxuICBtYXJnaW46IDA7XHJcbn1cclxuLnNyLW9ubHkge1xyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICBsZWZ0OiAtMTAwMDBweDtcclxuICB0b3A6IGF1dG87XHJcbiAgd2lkdGg6IDFweDtcclxuICBoZWlnaHQ6IDFweDtcclxuICBvdmVyZmxvdzogaGlkZGVuO1xyXG59XHJcblxyXG4vKiBDb21tZW50ICovXHJcblxyXG4uY29tbWVudCB7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIG1hcmdpbjogMjBweCBhdXRvO1xyXG59XHJcbi5jb21tZW50LWhlYWRpbmcge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICBoZWlnaHQ6IDUwcHg7XHJcbiAgZm9udC1zaXplOiAxNHB4O1xyXG59XHJcbi5jb21tZW50LXZvdGluZyB7XHJcbiAgd2lkdGg6IDIwcHg7XHJcbiAgaGVpZ2h0OiAzMnB4O1xyXG4gIGJvcmRlcjogMXB4IHNvbGlkIHJnYmEoMCwgMCwgMCwgMC4yKTtcclxuICBib3JkZXItcmFkaXVzOiA0cHg7XHJcbn1cclxuLmNvbW1lbnQtdm90aW5nIGJ1dHRvbiB7XHJcbiAgZGlzcGxheTogYmxvY2s7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgaGVpZ2h0OiA1MCU7XHJcbiAgcGFkZGluZzogMDtcclxuICBib3JkZXI6IDA7XHJcbiAgZm9udC1zaXplOiAxMHB4O1xyXG59XHJcbi5jb21tZW50LWluZm8ge1xyXG4gIGNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNSk7XHJcbiAgbWFyZ2luLWxlZnQ6IDEwcHg7XHJcbn1cclxuLmNvbW1lbnQtYXV0aG9yIHtcclxuICBjb2xvcjogcmdiYSgwLCAwLCAwLCAwLjg1KTtcclxuICBmb250LXdlaWdodDogYm9sZDtcclxuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbn1cclxuLmNvbW1lbnQtYXV0aG9yOmhvdmVyIHtcclxuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcclxufVxyXG4ucmVwbGllcyB7XHJcbiAgbWFyZ2luLWxlZnQ6IDIwcHg7XHJcbn1cclxuXHJcbmZvcm0ge1xyXG4gIHRleHRhcmVhIHtcclxuICAgIGhlaWdodDogNWVtO1xyXG4gICAgcGFkZGluZy1sZWZ0OiAxMHB4O1xyXG4gIH1cclxuICBtYXQtaWNvbiB7XHJcbiAgICBtYXJnaW46IGF1dG87XHJcbiAgfVxyXG4gIC5iYWRnZSB7XHJcbiAgICBmb250LXNpemU6IDE1cHg7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xyXG4gIH1cclxuICBsYWJlbCB7XHJcbiAgICBmb250LXdlaWdodDogNjAwO1xyXG4gICAgcGFkZGluZy1sZWZ0OiA1cHg7XHJcbiAgICBtYXJnaW4tYm90dG9tOiA1cHg7XHJcbiAgfVxyXG5cclxuICAuY29tbWVudCB7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCByZ2JhKDEyOCwgMTI4LCAxMjgsIDAuNTIxKTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XHJcbiAgICAvLyBwYWRkaW5nLXRvcDogMTBweDtcclxuICAgIHBhZGRpbmc6IDEwcHg7XHJcbiAgICBib3gtc2hhZG93OiAxMHB4IDEwcHggMTFweCAtN3B4IHJnYmEoMCwgMCwgMCwgMC4zMSk7XHJcbiAgICAtd2Via2l0LWJveC1zaGFkb3c6IDEwcHggMTBweCAxMXB4IC03cHggcmdiYSgwLCAwLCAwLCAwLjMxKTtcclxuICAgIC1tb3otYm94LXNoYWRvdzogMTBweCAxMHB4IDExcHggLTdweCByZ2JhKDAsIDAsIDAsIDAuMzEpO1xyXG4gICAgbWFyZ2luOiAycHg7XHJcbiAgICBwYWRkaW5nLWJvdHRvbTogMTBweDtcclxuICB9XHJcbiAgLmNvbW1lbnQtbGlzdCB7XHJcbiAgICAvLyBib3JkZXI6IDJweCBzb2xpZCByZ2JhKDEyOCwgMTI4LCAxMjgsIDAuMzk3KTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XHJcbiAgICAvLyBwYWRkaW5nOiAxZW0gMWVtO1xyXG4gICAgLy8gb3ZlcmZsb3c6IHNjcm9sbDtcclxuICAgIGhlaWdodDogYXV0bztcclxuICAgIG92ZXJmbG93LXg6IGhpZGRlbjtcclxuICAgIG1pbi1oZWlnaHQ6IDEwdmg7XHJcbiAgICBtYXgtaGVpZ2h0OiA2MHZoO1xyXG4gICAgLmNvbW1lbnRzIHtcclxuICAgICAgYm9yZGVyOiAxcHggc29saWQgcmdiYSgxMjgsIDEyOCwgMTI4LCAwLjQ3Myk7XHJcbiAgICAgIHBhZGRpbmc6IDEwcHggMTBweDtcclxuICAgICAgYm9yZGVyLXJhZGl1czogMTBweDtcclxuICAgIH1cclxuXHJcbiAgICAudXNlcm5hbWUtY29udGVudCB7XHJcbiAgICAgIGNvbG9yOiByZ2IoMCwgMTA4LCAyNTApO1xyXG4gICAgICBmb250LXdlaWdodDogNTAwO1xyXG4gICAgICBwYWRkaW5nLWxlZnQ6IDEwcHg7XHJcbiAgICAgIC8vIGxpbmUtaGVpZ2h0OiAycHg7XHJcbiAgICAgIGIge1xyXG4gICAgICAgIGNvbG9yOiBncmF5O1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiA1MDA7XHJcbiAgICAgICAgbGluZS1oZWlnaHQ6IDBweDtcclxuICAgICAgfVxyXG4gICAgICAubW9kaWZpZWQtYWN0aW9uIHtcclxuICAgICAgICAvLyB0ZXh0LWFsaWduOiBlbmQ7XHJcbiAgICAgICAgLy8gcGFkZGluZy1sZWZ0OiAycHg7XHJcbiAgICAgICAgY29sb3I6IHJnYigwLCAxMDgsIDI1MCk7XHJcbiAgICAgICAgZm9udC1zaXplOiAxMnB4O1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiA0MDA7XHJcbiAgICAgICAgbWFyZ2luLWxlZnQ6IDJweDtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgLmNvbW1lbnQtY29udGVudCB7XHJcbiAgICAgIHBhZGRpbmc6IDBweCAxMHB4O1xyXG4gICAgICAuaW5uZXItaHRtbCB7XHJcbiAgICAgICAgaGVpZ2h0OiBhdXRvO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICAuY29tbWVudC1jb250ZW50OmhvdmVyIHtcclxuICAgICAgLy8gY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgfVxyXG4gICAgLnRpbWUtY29udGVudCB7XHJcbiAgICAgIHBhZGRpbmctbGVmdDogMTBweDtcclxuICAgICAgY29sb3I6IGdyYXk7XHJcbiAgICAgIHBhZGRpbmctYm90dG9tOiAwcHg7XHJcbiAgICB9XHJcblxyXG4gICAgLmEtaWNvbiB7XHJcbiAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XHJcbiAgICAgIGZsb2F0OiByaWdodDtcclxuICAgICAgcGFkZGluZy1yaWdodDogMTBweDtcclxuICAgICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgfVxyXG5cclxuICAgIC5hY3Rpb24taWNvbiB7XHJcbiAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XHJcbiAgICAgIC5hLWljb24ge1xyXG4gICAgICAgIC8vIGRpc3BsYXk6IGlubGluZTsgLyogdGhlIGRlZmF1bHQgZm9yIHNwYW4gKi9cclxuICAgICAgICB3aWR0aDogNyU7XHJcbiAgICAgICAgaSB7XHJcbiAgICAgICAgICBmb250LXNpemU6IDIwcHg7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICAgIC5hLWljb24ge1xyXG4gICAgICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxufVxyXG5cclxuaHIge1xyXG4gIGNvbG9yOiByZ2JhKDEyOCwgMTI4LCAxMjgsIDAuNzUzKTtcclxuICBvcGFjaXR5OiAxO1xyXG59XHJcblxyXG4uaGVhZGVyIHtcclxuICBtYXJnaW4tdG9wOiAxMDBweDtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgbWFyZ2luLWJvdHRvbTogNDBweDtcclxufVxyXG4uaHRtbC1oZWFkZXIge1xyXG4gIG1hcmdpbjogMTVweCAwIDVweDtcclxufVxyXG5cclxuLm1hdC10YWIge1xyXG4gIHBhZGRpbmc6IDIwcHg7XHJcbn1cclxuIl19 */");

/***/ }),

/***/ "gVhs":
/*!****************************************************************************************!*\
  !*** ./src/app/modules/pages/applications/reassignment/reassignment-routing.module.ts ***!
  \****************************************************************************************/
/*! exports provided: ReassignmentRoutingModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ReassignmentRoutingModule", function() { return ReassignmentRoutingModule; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "mrSG");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "tyNb");
/* harmony import */ var _reassignment_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./reassignment.component */ "BUd1");




const routes = [
    {
        path: '',
        component: _reassignment_component__WEBPACK_IMPORTED_MODULE_3__["ReassignmentComponent"]
    }
];
let ReassignmentRoutingModule = class ReassignmentRoutingModule {
};
ReassignmentRoutingModule = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModule"])({
        imports: [_angular_router__WEBPACK_IMPORTED_MODULE_2__["RouterModule"].forChild(routes)],
        exports: [_angular_router__WEBPACK_IMPORTED_MODULE_2__["RouterModule"]]
    })
], ReassignmentRoutingModule);



/***/ }),

/***/ "hINR":
/*!***************************************************************************************!*\
  !*** ./src/app/modules/pages/accounting/upload-payment/upload-payment.component.scss ***!
  \***************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (".amountDue {\n  color: #c5140c;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9wYWdlcy9hY2NvdW50aW5nL3VwbG9hZC1wYXltZW50L3VwbG9hZC1wYXltZW50LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsY0FBQTtBQUNGIiwiZmlsZSI6InNyYy9hcHAvbW9kdWxlcy9wYWdlcy9hY2NvdW50aW5nL3VwbG9hZC1wYXltZW50L3VwbG9hZC1wYXltZW50LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmFtb3VudER1ZSB7XHJcbiAgY29sb3I6ICNjNTE0MGM7XHJcbn1cclxuIl19 */");

/***/ }),

/***/ "hbDB":
/*!*************************************************************************!*\
  !*** ./src/app/modules/pages/applications/comment/comment.component.ts ***!
  \*************************************************************************/
/*! exports provided: CommentComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CommentComponent", function() { return CommentComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "mrSG");
/* harmony import */ var _raw_loader_comment_component_html__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! raw-loader!./comment.component.html */ "QDMH");
/* harmony import */ var _comment_component_scss__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./comment.component.scss */ "fshk");
/* harmony import */ var _core_models_comments_model__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./../../../../core/models/comments.model */ "j9f2");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/common */ "ofXK");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/forms */ "3Pt+");
/* harmony import */ var _shared__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @shared */ "M0ag");
/* harmony import */ var _models__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @models */ "sKXY");
/* harmony import */ var _services__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @services */ "dJ3e");
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! sweetalert2 */ "PSD3");
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(sweetalert2__WEBPACK_IMPORTED_MODULE_10__);
/* harmony import */ var _core_models_comment_model__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../../../core/models/comment.model */ "0lwu");
/* harmony import */ var ngx_spinner__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ngx-spinner */ "JqCM");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @angular/router */ "tyNb");
/* harmony import */ var app_core_models_copy_claims_model__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! app/core/models/copy-claims.model */ "xat4");
/* harmony import */ var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @angular/material/dialog */ "0IaG");

















let CommentComponent = class CommentComponent {
    constructor(formBuilder, dataStorageService, sweetAlertService, dataStorage, apiService, datepipe, spinner, route, dialog) {
        this.formBuilder = formBuilder;
        this.dataStorageService = dataStorageService;
        this.sweetAlertService = sweetAlertService;
        this.dataStorage = dataStorage;
        this.apiService = apiService;
        this.datepipe = datepipe;
        this.spinner = spinner;
        this.route = route;
        this.dialog = dialog;
        this.commentS1Application = new _models__WEBPACK_IMPORTED_MODULE_8__["S1Application"]();
        this.commentS2Application = new _models__WEBPACK_IMPORTED_MODULE_8__["S2Application"]();
        this.comment = new _core_models_comment_model__WEBPACK_IMPORTED_MODULE_11__["Comment"]();
        this.internalComment = new _core_models_comments_model__WEBPACK_IMPORTED_MODULE_3__["CommentThread"]();
        this.externalComment = new _core_models_comments_model__WEBPACK_IMPORTED_MODULE_3__["CommentThread"]();
        this.copyClaims = new app_core_models_copy_claims_model__WEBPACK_IMPORTED_MODULE_14__["CopyClaims"]();
        this.todayDate = new Date();
        this.commentList = [];
        this.internalCommentList = new Array();
        this.externalCommentList = new Array();
        this.replyInternalComment = new _core_models_comments_model__WEBPACK_IMPORTED_MODULE_3__["CommentThread"]();
        this.copyClaimsList = [];
        this.commentId = 0;
        this.commentTypeList = [..._shared__WEBPACK_IMPORTED_MODULE_7__["COMMENT_TYPE"]];
        this.commentType = '';
        this.internalCommentProcess = 'Save';
        this.externalCommentProcess = 'Save';
        this.copyClaimesProcess = 'Save';
        this.disabledComment = false;
        this.editCopyClaimsComment = false;
        this.editExternalComment = false;
        this.replyEditorConfig = {
            editable: true,
            spellcheck: true,
            height: '13m',
            minHeight: '0',
            maxHeight: 'auto',
            width: 'auto',
            minWidth: '0',
            translate: 'no',
            enableToolbar: true,
            showToolbar: true,
            placeholder: 'Enter reply here...',
            defaultParagraphSeparator: 'p',
            defaultFontName: 'Calibri',
            defaultFontSize: '3',
            fonts: [
                { class: 'arial', name: 'Arial' },
                { class: 'times-new-roman', name: 'Times New Roman' },
                { class: 'calibri', name: 'Calibri' },
                { class: 'comic-sans-ms', name: 'Comic Sans MS' }
            ],
            customClasses: [
                {
                    name: 'quote',
                    class: 'quote',
                },
                {
                    name: 'redText',
                    class: 'redText'
                },
                {
                    name: 'titleText',
                    class: 'titleText',
                    tag: 'h1',
                },
            ],
            uploadUrl: 'v1/image',
            // upload: (file: File) => { ... }
            uploadWithCredentials: false,
            sanitize: true,
            toolbarPosition: 'top',
            toolbarHiddenButtons: [
                ['link',
                    'unlink',
                    'insertImage',
                    'insertVideo',],
            ]
        };
        this.editorConfig = {
            editable: true,
            spellcheck: true,
            height: '15em',
            minHeight: '0',
            maxHeight: 'auto',
            width: 'auto',
            minWidth: '0',
            translate: 'no',
            enableToolbar: true,
            showToolbar: true,
            placeholder: 'Enter text here...',
            defaultParagraphSeparator: 'p',
            defaultFontName: 'Calibri',
            defaultFontSize: '3',
            fonts: [
                { class: 'arial', name: 'Arial' },
                { class: 'times-new-roman', name: 'Times New Roman' },
                { class: 'calibri', name: 'Calibri' },
                { class: 'comic-sans-ms', name: 'Comic Sans MS' }
            ],
            customClasses: [
                {
                    name: 'quote',
                    class: 'quote',
                },
                {
                    name: 'redText',
                    class: 'redText'
                },
                {
                    name: 'titleText',
                    class: 'titleText',
                    tag: 'h1',
                },
            ],
            uploadUrl: 'v1/image',
            // upload: (file: File) => { ... }
            uploadWithCredentials: false,
            sanitize: true,
            toolbarPosition: 'top',
            toolbarHiddenButtons: [
                ['link',
                    'unlink',
                    'insertImage',
                    'insertVideo',],
            ]
        };
    }
    ngOnInit() {
        this.setFormValidator();
        this.id = Number(this.route.snapshot.paramMap.get('id'));
        this.currentUser = this.dataStorage.getUserAccount();
        console.log(this.applicationStage);
        if ((!this.commentS1Application.screenerDecisionComment && !this.commentS1Application.reviewerDecisionComment &&
            (this.commentS1Application.releaseStatus === 'FOR_RELEASE' || this.commentS1Application.releaseStatus === 'RELEASED') &&
            this.currentUser.userRole.name !== 'ROLE_REVIEWER')
            || this.commentS1Application.internalStatus === _shared__WEBPACK_IMPORTED_MODULE_7__["APPLICATION_STATUS"].S1_APPLICATION_REJECTED) {
            this.disabledComment = true;
        }
        // if(this.applicationStage != APPLICATION_STAGE.S2_APPLICATION){
        //     this.getComments('');
        // }
        this.getComments();
        this.getCopyClaims();
    }
    addInternalComment(comment) {
        let endpoint;
        if (this.applicationStage === _shared__WEBPACK_IMPORTED_MODULE_7__["APPLICATION_STAGE"].S2_APPLICATION) {
            endpoint = _shared__WEBPACK_IMPORTED_MODULE_7__["ENDPOINTS"].commentS2;
            this.internalComment.applicationFormType = _shared__WEBPACK_IMPORTED_MODULE_7__["APPFORM_TYPE"].S2;
            this.internalComment.applicationFormS2 = this.commentS2Application;
            console.log('S2 Comment Object', this.internalComment);
        }
        else {
            endpoint = _shared__WEBPACK_IMPORTED_MODULE_7__["ENDPOINTS"].comment;
            this.internalComment.applicationFormType = _shared__WEBPACK_IMPORTED_MODULE_7__["APPFORM_TYPE"].S1;
            this.internalComment.appFormReference = this.commentS1Application.appFormReference;
            console.log('S1 Comment Object', this.internalComment);
        }
        if (this.internalCommentProcess === 'Save') {
            this.spinner.show();
            comment.actionBy = this.currentUser;
            comment.role = this.dataStorageService.getUserRole();
            comment.actionDate = new Date();
            comment.commentType = 'INTERNAL';
            comment.comment = this.setHtml5Value(comment.comment);
            this.internalCommentList.push(comment);
            this.apiService.save(endpoint, comment).subscribe((res) => {
                console.log('RES', res);
                if (res !== undefined) {
                    this.spinner.hide();
                    this.sweetAlertService.customSuccessMessage('Internal Comment has been added!');
                    this.internalComment = new _core_models_comments_model__WEBPACK_IMPORTED_MODULE_3__["CommentThread"]();
                    this.getComments();
                    this.getCommentsS2(res.responseData.data.applicationFormS2);
                }
            }, (err) => {
                this.spinner.hide();
                console.log('errrrrrrrr:::', err);
                this.sweetAlertService.error(err);
            }, () => {
                this.spinner.hide();
                this.comment = new _core_models_comment_model__WEBPACK_IMPORTED_MODULE_11__["Comment"]();
            });
        }
        else {
            let dateTransformed = this.datepipe.transform(new Date(), 'yyyy-MM-dd');
            sweetalert2__WEBPACK_IMPORTED_MODULE_10___default.a.fire({
                text: 'Are you sure you want to update this comment?',
                icon: 'question',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Confirm'
            }).then((result) => {
                if (result.value) {
                    this.spinner.show();
                    // this.internalComment.modifiedBy = this.currentUser.username
                    // this.internalComment.modifiedDate = new Date();
                    this.internalComment.comment = this.setHtml5Value(this.internalComment.comment);
                    this.apiService.update(endpoint, this.internalComment).subscribe((res) => {
                        // this.internalCommentList = res.responseData.data;
                        this.spinner.hide();
                        this.sweetAlertService.customSuccessMessage('Internal Comment has been Updated!');
                        this.internalComment = new _core_models_comments_model__WEBPACK_IMPORTED_MODULE_3__["CommentThread"]();
                        this.internalCommentProcess = 'Save';
                        this.getComments();
                        this.getCommentsS2(res.responseData.data.applicationFormS2);
                    }, (err) => {
                        this.spinner.hide();
                    });
                }
            });
        }
    }
    sendReply(comment) {
        console.log(this.replyInternalComment);
        // this.replyInternalComment.parent = comment;
        this.replyInternalComment.isReply = true;
        this.replyInternalComment.parentId = comment.id;
        this.addInternalComment(this.replyInternalComment);
    }
    cancelReply(comment) {
        comment = new _core_models_comments_model__WEBPACK_IMPORTED_MODULE_3__["CommentThread"]();
        comment.replyEditorIsEnabled = false;
    }
    addExternalComment() {
        let endpoint;
        if (this.applicationStage === _shared__WEBPACK_IMPORTED_MODULE_7__["APPLICATION_STAGE"].S2_APPLICATION) {
            endpoint = _shared__WEBPACK_IMPORTED_MODULE_7__["ENDPOINTS"].commentS2;
            this.externalComment.applicationFormType = _shared__WEBPACK_IMPORTED_MODULE_7__["APPFORM_TYPE"].S2;
            this.externalComment.applicationFormS2 = this.commentS2Application;
        }
        else {
            endpoint = _shared__WEBPACK_IMPORTED_MODULE_7__["ENDPOINTS"].comment;
            this.externalComment.applicationFormType = _shared__WEBPACK_IMPORTED_MODULE_7__["APPFORM_TYPE"].S1;
            this.externalComment.appFormReference = this.commentS1Application.appFormReference;
        }
        if (this.externalCommentProcess === 'Save') {
            this.spinner.show();
            this.externalComment.actionBy = this.currentUser;
            this.externalComment.role = this.dataStorageService.getUserRole();
            this.externalComment.actionDate = new Date();
            this.externalComment.commentType = 'EXTERNAL';
            this.externalComment.comment = this.setHtml5Value(this.externalComment.comment);
            this.externalCommentList.push(this.externalComment);
            this.apiService.save(endpoint, this.externalComment).subscribe((res) => {
                if (res !== undefined) {
                    this.spinner.hide();
                    this.sweetAlertService.customSuccessMessage('External Comment has been added!');
                    this.externalComment = new _core_models_comments_model__WEBPACK_IMPORTED_MODULE_3__["CommentThread"]();
                    this.editExternalComment = false;
                    this.getComments();
                    this.getCommentsS2(res.responseData.data.applicationFormS2);
                }
            }, (err) => {
                this.spinner.hide();
                console.log('errrrrrrrr:::', err);
                this.sweetAlertService.error(err);
            }, () => {
                this.spinner.hide();
                this.comment = new _core_models_comment_model__WEBPACK_IMPORTED_MODULE_11__["Comment"]();
            });
        }
        else {
            let dateTransformed = this.datepipe.transform(new Date(), 'yyyy-MM-dd');
            sweetalert2__WEBPACK_IMPORTED_MODULE_10___default.a.fire({
                text: 'Are you sure you want to update this comment?',
                icon: 'question',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Confirm'
            }).then((result) => {
                if (result.value) {
                    this.spinner.show();
                    // this.externalComment.modifiedBy = this.currentUser.username;
                    // this.externalComment.modifiedDate = new Date();
                    this.externalComment.comment = this.setHtml5Value(this.externalComment.comment);
                    this.apiService.update(endpoint, this.externalComment).subscribe((res) => {
                        this.spinner.hide();
                        // this.externalCommentList = res.responseData.data;
                        this.sweetAlertService.customSuccessMessage('External Comment has been Updated!');
                        this.externalComment = new _core_models_comments_model__WEBPACK_IMPORTED_MODULE_3__["CommentThread"]();
                        this.externalCommentProcess = 'Save';
                        this.editExternalComment = false;
                        this.getComments();
                        this.getCommentsS2(res.responseData.data.applicationFormS2);
                    }, (err) => {
                        this.spinner.hide();
                    });
                }
            });
        }
    }
    addCopyClaims() {
        if (this.copyClaimesProcess === 'Save') {
            this.spinner.show();
            this.copyClaims.actionBy = this.currentUser;
            this.copyClaims.role = this.dataStorageService.getUserRole();
            this.copyClaims.actionDate = new Date();
            this.copyClaims.appFormReference = this.commentS1Application.appFormReference;
            this.copyClaims.description = this.setHtml5Value(this.copyClaims.description);
            this.apiService.save(_shared__WEBPACK_IMPORTED_MODULE_7__["ENDPOINTS"].copyClaims, this.copyClaims).subscribe((res) => {
                if (res !== undefined) {
                    this.spinner.hide();
                    this.sweetAlertService.customSuccessMessage('Copy claims description has been added!');
                    this.copyClaims = new app_core_models_copy_claims_model__WEBPACK_IMPORTED_MODULE_14__["CopyClaims"]();
                    this.getCopyClaims();
                    this.editCopyClaimsComment = false;
                }
            }, (err) => {
                this.spinner.hide();
                // console.log('errrrrrrrr:::', err);
                this.sweetAlertService.error(err);
            }, () => {
                this.spinner.hide();
                this.copyClaims = new app_core_models_copy_claims_model__WEBPACK_IMPORTED_MODULE_14__["CopyClaims"]();
            });
        }
        else {
            sweetalert2__WEBPACK_IMPORTED_MODULE_10___default.a.fire({
                text: 'Are you sure you want to update copy claim?',
                icon: 'question',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Confirm'
            }).then((result) => {
                if (result.value) {
                    this.spinner.show();
                    this.copyClaims.description = this.setHtml5Value(this.copyClaims.description);
                    this.apiService.update(_shared__WEBPACK_IMPORTED_MODULE_7__["ENDPOINTS"].copyClaims, this.copyClaims).subscribe((res) => {
                        this.spinner.hide();
                        this.sweetAlertService.customSuccessMessage('Copy claims description has been Updated!');
                        this.copyClaims = new app_core_models_copy_claims_model__WEBPACK_IMPORTED_MODULE_14__["CopyClaims"]();
                        this.copyClaimesProcess = 'Save';
                        this.editCopyClaimsComment = false;
                        this.getCopyClaims();
                    }, (err) => {
                        this.spinner.hide();
                    });
                }
            });
        }
    }
    getComments() {
        if (this.commentS1Application) {
            this.apiService.findByParam(_shared__WEBPACK_IMPORTED_MODULE_7__["ENDPOINTS"].comment + '/app-form-reference', this.commentS1Application.appFormReference).subscribe((res) => {
                this.commentList = res.responseData.data;
                // get internal comments
                this.internalCommentList = this.commentList.filter(internalComment => internalComment.commentType === 'INTERNAL');
                console.log('INTERNAL', this.internalCommentList);
                // get external comments
                this.externalCommentList = this.commentList.filter(externalComment => externalComment.commentType === 'EXTERNAL');
                console.log('EXTERNAL', this.externalCommentList);
                this.spinner.hide();
            }, (err) => {
            });
        }
    }
    getCommentsS2(data) {
        if (data) {
            this.apiService.findByParam(_shared__WEBPACK_IMPORTED_MODULE_7__["ENDPOINTS"].commentS2 + '/application-form-s2', data.id).subscribe((res) => {
                this.commentList = res.responseData.data;
                // get internal comments
                this.internalCommentList = this.commentList.filter(internalComment => internalComment.commentType === 'INTERNAL');
                // get external comments
                this.externalCommentList = this.commentList.filter(externalComment => externalComment.commentType === 'EXTERNAL');
            }, (err) => {
            });
        }
    }
    getCopyClaims() {
        this.apiService.findByParam(_shared__WEBPACK_IMPORTED_MODULE_7__["ENDPOINTS"].copyClaims + '/app-form-reference', this.commentS1Application.appFormReference).subscribe((res) => {
            this.copyClaimsList = res.responseData.data;
        }, (err) => {
        });
    }
    modifyCopyClaims(data) {
        this.copyClaimesProcess = 'Update';
        this.copyClaims = data;
        this.editCopyClaimsComment = true;
        this.getCopyClaims();
    }
    modifyInternalComment(data) {
        this.internalCommentProcess = 'Update';
        this.internalComment = data;
        this.getComments();
        this.getCommentsS2(data);
    }
    deleteComment(data) {
        let endpoint;
        if (this.applicationStage === _shared__WEBPACK_IMPORTED_MODULE_7__["APPLICATION_STAGE"].S2_APPLICATION) {
            endpoint = _shared__WEBPACK_IMPORTED_MODULE_7__["ENDPOINTS"].commentS2;
        }
        else {
            endpoint = _shared__WEBPACK_IMPORTED_MODULE_7__["ENDPOINTS"].comment;
        }
        sweetalert2__WEBPACK_IMPORTED_MODULE_10___default.a.fire({
            text: 'Are you sure you want to delete this comment?',
            icon: 'question',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Confirm'
        }).then((result) => {
            if (result.value) {
                this.spinner.show();
                this.apiService.deleteById(endpoint, data.id).subscribe((res) => {
                    if ((data === null || data === void 0 ? void 0 : data.applicationFormType) === 'S1') {
                        this.getComments();
                    }
                    else {
                        this.getCommentsS2(data);
                    }
                    this.sweetAlertService.customSuccessMessage('Comment has been Deleted!');
                }, (err) => {
                    this.spinner.hide();
                });
            }
        });
    }
    deleteCopyClaims(data) {
        sweetalert2__WEBPACK_IMPORTED_MODULE_10___default.a.fire({
            text: 'Are you sure you want to delete this copy claims?',
            icon: 'question',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Confirm'
        }).then((result) => {
            if (result.value) {
                this.apiService.deleteById(_shared__WEBPACK_IMPORTED_MODULE_7__["ENDPOINTS"].copyClaims, data.id).subscribe((res) => {
                    this.sweetAlertService.customSuccessMessage('Copy claim has been Deleted!');
                    this.getCopyClaims();
                }, (err) => {
                });
            }
        });
    }
    modifyExternalComment(data) {
        this.externalCommentProcess = 'Update';
        this.externalComment = data;
        this.editExternalComment = true;
        this.getComments();
        this.getCommentsS2(data);
    }
    cancel() {
        this.internalComment = new _core_models_comments_model__WEBPACK_IMPORTED_MODULE_3__["CommentThread"]();
        this.externalComment = new _core_models_comments_model__WEBPACK_IMPORTED_MODULE_3__["CommentThread"]();
        this.copyClaims = new app_core_models_copy_claims_model__WEBPACK_IMPORTED_MODULE_14__["CopyClaims"]();
        this.internalCommentProcess = 'Save';
        this.externalCommentProcess = 'Save';
        this.copyClaimesProcess = 'Save';
        this.editCopyClaimsComment = false;
        this.editExternalComment = false;
        this.getComments();
        this.getCopyClaims();
    }
    setFormValidator() {
        this.commentForm = this.formBuilder.group({
            internalComments: [''],
            externalComments: [''],
            commentType: [''],
            description: [''],
        });
    }
    setHtml5Value(commentBody) {
        this.commentHtmlOutput = "<!DOCTYPE html><html lang=" + "en" + "><meta charset=" + "utf-8" + "><body>" + commentBody + "</body></html>";
        return this.commentHtmlOutput;
    }
};
CommentComponent.ctorParameters = () => [
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_6__["FormBuilder"] },
    { type: _services__WEBPACK_IMPORTED_MODULE_9__["DataStorageService"] },
    { type: _services__WEBPACK_IMPORTED_MODULE_9__["SweetAlertService"] },
    { type: _services__WEBPACK_IMPORTED_MODULE_9__["DataStorageService"] },
    { type: _services__WEBPACK_IMPORTED_MODULE_9__["ApiService"] },
    { type: _angular_common__WEBPACK_IMPORTED_MODULE_4__["DatePipe"] },
    { type: ngx_spinner__WEBPACK_IMPORTED_MODULE_12__["NgxSpinnerService"] },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_13__["ActivatedRoute"] },
    { type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_15__["MatDialog"] }
];
CommentComponent.propDecorators = {
    commentS1Application: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"] }],
    commentS2Application: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"] }],
    sampleDataTransfer: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"] }]
};
CommentComponent = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_5__["Component"])({
        selector: 'app-comment',
        template: _raw_loader_comment_component_html__WEBPACK_IMPORTED_MODULE_1__["default"],
        styles: [_comment_component_scss__WEBPACK_IMPORTED_MODULE_2__["default"]]
    })
], CommentComponent);



/***/ }),

/***/ "j9f2":
/*!***********************************************!*\
  !*** ./src/app/core/models/comments.model.ts ***!
  \***********************************************/
/*! exports provided: CommentThread */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CommentThread", function() { return CommentThread; });
class CommentThread {
    constructor() {
        this.parent = {};
        this.replyEditorIsEnabled = false;
        this.isReply = false;
    }
}


/***/ }),

/***/ "k01g":
/*!***************************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/modules/pages/applications/reassignment/reassignment.component.html ***!
  \***************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<form>\r\n    <!-- <div class=\"spinner\">\r\n        <ngx-spinner bdColor=\"rgba(0, 0, 0, 0.8)\" size=\"large\" color=\"#fff\" type=\"line-spin-fade\" [fullScreen]=\"false\">\r\n            <p> Loading list of Applications </p>\r\n        </ngx-spinner>\r\n    </div> -->\r\n    <div class=\"container-fluid\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-12 title\">\r\n                <mat-label>\r\n                    <mat-icon>view_list</mat-icon> Application Reassignment\r\n                </mat-label>\r\n            </div>\r\n        </div>\r\n        <hr>\r\n        <mat-tab-group mat-align-tabs=\"start\" (selectedTabChange)=\"changeTab($event)\">\r\n            <mat-tab label=\"S1\">\r\n                <ng-container *ngTemplateOutlet=\"s1ApplicationFormDisplay\"></ng-container>\r\n            </mat-tab>\r\n            <mat-tab label=\"S2\">\r\n                <ng-container *ngTemplateOutlet=\"s2ApplicationFormDisplay\"></ng-container>\r\n            </mat-tab>\r\n        </mat-tab-group>\r\n\r\n        <span *ngIf=\"displayedContent === 'S1' \">\r\n            <ng-container *ngTemplateOutlet=\"s1ApplicationList\"></ng-container>\r\n        </span>\r\n        <span *ngIf=\"displayedContent === 'S2' \">\r\n            <ng-container *ngTemplateOutlet=\"s2ApplicationList\"></ng-container>\r\n        </span>\r\n\r\n    </div>\r\n</form>\r\n\r\n\r\n<!-- ****************************** FORM ****************************** -->\r\n\r\n<ng-template #s1ApplicationFormDisplay>\r\n    <form [formGroup]=\"s1ApplicationForm\" *ngIf=\"s1Application?.id\">\r\n        <div class=\"row\">\r\n            <mat-form-field class=\"col-md-6\" appearance=\"outline\">\r\n                <mat-label>Reference Code</mat-label>\r\n                <input matInput [(ngModel)]=\"s1Application.referenceCode\" name=\"referenceCode\"\r\n                    formControlName=\"referenceCode\" readonly\r\n                    *ngIf=\"s1Application?.internalStatus!=='S1_APPLICATION_REJECTED'\">\r\n                <input matInput [(ngModel)]=\"s1Application.referenceCodeRejected\" name=\"referenceCode\"\r\n                    formControlName=\"referenceCode\" readonly\r\n                    *ngIf=\"s1Application?.internalStatus==='S1_APPLICATION_REJECTED'\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field class=\"col-md-6\" appearance=\"outline\">\r\n                <mat-label>Application Owner</mat-label>\r\n                <input matInput [(ngModel)]=\"applicationOwnerName \" name=\"applicationOwner\"\r\n                    formControlName=\"applicationOwner\" readonly>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n                <mat-label>AD Title</mat-label>\r\n                <input matInput [(ngModel)]=\"s1Application.adTitle\" name=\"adTitle\" formControlName=\"adTitle\" readonly>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field class=\"col-md-6\" appearance=\"outline\">\r\n                <mat-label>Assigned User</mat-label>\r\n                <mat-select [(ngModel)]=\"s1Application.assignedUser\" name=\"assignedUser\" formControlName=\"assignedUser\"\r\n                    [compareWith]=\"compareAssignedUser\">\r\n                    <mat-option *ngFor=\"let i of userList\" [value]=\"i\">\r\n                        {{ i?.firstName }} {{ i?.lastName }}\r\n                    </mat-option>\r\n                </mat-select>\r\n            </mat-form-field>\r\n        </div>\r\n        <app-form-action-buttons [childObject]=\"s1Application\" [childForm]=\"s1ApplicationForm\"\r\n            (updateFunction)=\"update()\" (cancelFunction)=\"resetFormValidator()\"></app-form-action-buttons>\r\n    </form>\r\n</ng-template>\r\n\r\n<ng-template #s2ApplicationFormDisplay>\r\n    <form [formGroup]=\"s1ApplicationForm\" *ngIf=\"s2Application?.id\">\r\n        <div class=\"row\">\r\n            <mat-form-field class=\"col-md-6\" appearance=\"outline\">\r\n                <mat-label>Reference Code</mat-label>\r\n                <input matInput [(ngModel)]=\"s2Application.applicationForm.referenceCode\" name=\"referenceCode\"\r\n                    formControlName=\"referenceCode\" readonly\r\n                    *ngIf=\"s2Application?.internalStatus!=='S1_APPLICATION_REJECTED'\">\r\n                <input matInput [(ngModel)]=\"s1Application.referenceCodeRejected\" name=\"referenceCode\"\r\n                    formControlName=\"referenceCode\" readonly\r\n                    *ngIf=\"s2Application?.internalStatus==='S1_APPLICATION_REJECTED'\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field class=\"col-md-6\" appearance=\"outline\">\r\n                <mat-label>Application Owner</mat-label>\r\n                <input matInput [(ngModel)]=\"applicationOwnerName\" name=\"applicationOwner\"\r\n                    formControlName=\"applicationOwner\" readonly>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n                <mat-label>AD Title</mat-label>\r\n                <input matInput [(ngModel)]=\"s2Application.applicationForm.adTitle\" name=\"adTitle\" formControlName=\"adTitle\" readonly>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field class=\"col-md-6\" appearance=\"outline\">\r\n                <mat-label>Assigned User</mat-label>\r\n                <mat-select [(ngModel)]=\"s2Application.assignedUser\" name=\"assignedUser\" formControlName=\"assignedUser\"\r\n                    [compareWith]=\"compareAssignedUser\">\r\n                    <mat-option *ngFor=\"let i of userList\" [value]=\"i\">\r\n                        {{ i?.firstName }} {{ i?.lastName }}\r\n                    </mat-option>\r\n                </mat-select>\r\n            </mat-form-field>\r\n        </div>\r\n        <app-form-action-buttons [childObject]=\"s2Application\" [childForm]=\"s1ApplicationForm\"\r\n            (updateFunction)=\"update()\" (cancelFunction)=\"resetFormValidator()\"></app-form-action-buttons>\r\n    </form>\r\n</ng-template>\r\n\r\n\r\n\r\n\r\n<!-- ****************************** LISTING ****************************** -->\r\n\r\n<ng-template #s1ApplicationList>\r\n    <br>\r\n    <app-form-list [dataSource]=\"s1ApplicationDataSource\" [displayedColumns]=\"s1ApplicationDisplayedColumns\"\r\n        (selectInListFunction)=\"getS1Application()\"></app-form-list>\r\n</ng-template>\r\n\r\n<ng-template #s2ApplicationList>\r\n    <br>\r\n    <app-form-list [dataSource]=\"s2ApplicationDataSource\" [displayedColumns]=\"s2ApplicationDisplayedColumns\"\r\n        (selectInListFunction)=\"getS2Application()\"></app-form-list>\r\n</ng-template>\r\n");

/***/ }),

/***/ "mXdJ":
/*!*************************************************************************!*\
  !*** ./src/app/modules/pages/company/add-company/add-company.module.ts ***!
  \*************************************************************************/
/*! exports provided: AddCompanyModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AddCompanyModule", function() { return AddCompanyModule; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "mrSG");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common */ "ofXK");
/* harmony import */ var _add_company_routing_module__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./add-company-routing.module */ "H6Pz");
/* harmony import */ var _shared__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @shared */ "M0ag");
/* harmony import */ var _add_company_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./add-company.component */ "9hFf");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/common/http */ "tk/3");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/forms */ "3Pt+");








let AddCompanyModule = class AddCompanyModule {
};
AddCompanyModule = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModule"])({
        declarations: [_add_company_component__WEBPACK_IMPORTED_MODULE_5__["AddCompanyComponent"]],
        imports: [
            _angular_common__WEBPACK_IMPORTED_MODULE_2__["CommonModule"],
            _add_company_routing_module__WEBPACK_IMPORTED_MODULE_3__["AddCompanyRoutingModule"],
            _angular_common_http__WEBPACK_IMPORTED_MODULE_6__["HttpClientModule"],
            _angular_forms__WEBPACK_IMPORTED_MODULE_7__["ReactiveFormsModule"],
            _shared__WEBPACK_IMPORTED_MODULE_4__["AngularMaterialModule"],
        ]
    })
], AddCompanyModule);



/***/ }),

/***/ "mcQa":
/*!*************************************************************************************************************************************************!*\
  !*** ./src/app/modules/pages/applications/schedule-of-fees/single-application/modal-single-application/modal-single-application.component.scss ***!
  \*************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("span {\n  color: red;\n}\n\n.numbers-input {\n  text-align: end;\n}\n\n.total {\n  font-weight: 900;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9wYWdlcy9hcHBsaWNhdGlvbnMvc2NoZWR1bGUtb2YtZmVlcy9zaW5nbGUtYXBwbGljYXRpb24vbW9kYWwtc2luZ2xlLWFwcGxpY2F0aW9uL21vZGFsLXNpbmdsZS1hcHBsaWNhdGlvbi5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLFVBQUE7QUFDSjs7QUFFQTtFQUNFLGVBQUE7QUFDRjs7QUFFQTtFQUNFLGdCQUFBO0FBQ0YiLCJmaWxlIjoic3JjL2FwcC9tb2R1bGVzL3BhZ2VzL2FwcGxpY2F0aW9ucy9zY2hlZHVsZS1vZi1mZWVzL3NpbmdsZS1hcHBsaWNhdGlvbi9tb2RhbC1zaW5nbGUtYXBwbGljYXRpb24vbW9kYWwtc2luZ2xlLWFwcGxpY2F0aW9uLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsic3BhbntcclxuICAgIGNvbG9yOiByZWQ7XHJcbn1cclxuXHJcbi5udW1iZXJzLWlucHV0e1xyXG4gIHRleHQtYWxpZ246IGVuZDtcclxufVxyXG5cclxuLnRvdGFse1xyXG4gIGZvbnQtd2VpZ2h0OiA5MDA7XHJcbn1cclxuIl19 */");

/***/ }),

/***/ "mf8c":
/*!**************************************************************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/modules/pages/applications/schedule-of-fees/multiple-applications/multiple-applications.component.html ***!
  \**************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<form>\r\n    <div class=\"container-fluid\">\r\n      <div class=\"row\">\r\n        <div class=\"col-md-12 title\">\r\n          <mat-label>\r\n            <mat-icon>view_list</mat-icon> Multiple Applications - For Payment\r\n          </mat-label>\r\n        </div>\r\n      </div>\r\n      <hr>\r\n      <br>\r\n      <div class=\"col-md-12\" fxLayout fxLayoutAlign=\"center center\">\r\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n          <input matInput type=\"text\" placeholder=\"Company Name\">\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div class=\"mat-elevation-z8 fields\">\r\n        <table mat-table [dataSource]=\"dataSource\" matSort>\r\n          <ng-container matColumnDef=\"adTitle\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> REFERENCE CODE </th>\r\n            <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"openModal(element)\"> {{element?.adTitle | uppercase}}</td>\r\n          </ng-container>\r\n          <ng-container matColumnDef=\"typeOfApplication\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> TYPE OF APPLICATION</th>\r\n            <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"openModal(element)\">{{element?.applicationType?.description | uppercase}}</td>\r\n          </ng-container>\r\n          <ng-container matColumnDef=\"brand\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> BRAND</th>\r\n            <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"openModal(element)\">{{element?.brand?.description | uppercase}}</td>\r\n          </ng-container>\r\n          <ng-container matColumnDef=\"product\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> PRODUCT</th>\r\n            <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"openModal(element)\">{{element?.product?.description | uppercase}}</td>\r\n          </ng-container>\r\n          <ng-container matColumnDef=\"applicantCompanyName\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> APPLICANT COMPANY NAME</th>\r\n            <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"openModal(element)\">{{element?.company.companyName | uppercase}}</td>\r\n          </ng-container>\r\n          <!-- <ng-container matColumnDef=\"countVerifiedApplicationForm\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> NUMBER OF VERIFIED APPLICATIONS</th>\r\n            <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"openModal(element)\">{{element?.countVerifiedApplicationForm}}</td>\r\n          </ng-container> -->\r\n          <ng-container matColumnDef=\"paymentStatus\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> PAYMENT STATUS</th>\r\n            <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"openModal(element)\">{{element?.paymentStatus?.replaceAll('_',' ') | uppercase}}</td>\r\n          </ng-container>\r\n\r\n\r\n\r\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n          <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n        </table>\r\n        <div class=\"no-record\" [hidden]=\"dataSource && dataSource?.data?.length > 0\">\r\n          No record found.\r\n        </div>\r\n        <mat-paginator [pageSizeOptions]=\"[10, 20, 50]\" showFirstLastButtons></mat-paginator>\r\n      </div>\r\n      <br>\r\n    </div>\r\n  </form>\r\n");

/***/ }),

/***/ "mp9u":
/*!****************************************************************************************************************!*\
  !*** ./src/app/modules/pages/applications/s2-application/list-s2-application/list-s2-application.component.ts ***!
  \****************************************************************************************************************/
/*! exports provided: ListS2ApplicationComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ListS2ApplicationComponent", function() { return ListS2ApplicationComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "mrSG");
/* harmony import */ var _raw_loader_list_s2_application_component_html__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! raw-loader!./list-s2-application.component.html */ "pBQ4");
/* harmony import */ var _list_s2_application_component_scss__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./list-s2-application.component.scss */ "ZYcb");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/material/dialog */ "0IaG");
/* harmony import */ var _angular_material_paginator__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/material/paginator */ "M9IT");
/* harmony import */ var _angular_material_sort__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/material/sort */ "Dh3D");
/* harmony import */ var _angular_material_table__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/material/table */ "+0xr");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/router */ "tyNb");
/* harmony import */ var _models__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @models */ "sKXY");
/* harmony import */ var _services__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @services */ "dJ3e");
/* harmony import */ var _shared__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @shared */ "M0ag");
/* harmony import */ var app_core_models_application_request_model__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! app/core/models/application-request.model */ "an1Z");
/* harmony import */ var app_core_models_applicationCountS2_model__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! app/core/models/applicationCountS2.model */ "Uyvf");
/* harmony import */ var app_core_services_common_services_service__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! app/core/services/common-services.service */ "Iws0");
/* harmony import */ var app_modules_fragments_request_for_special_clearing_request_for_special_clearing_component__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! app/modules/fragments/request-for-special-clearing/request-for-special-clearing.component */ "+TpJ");
/* harmony import */ var ngx_spinner__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ngx-spinner */ "JqCM");
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! sweetalert2 */ "PSD3");
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_17___default = /*#__PURE__*/__webpack_require__.n(sweetalert2__WEBPACK_IMPORTED_MODULE_17__);


















let ListS2ApplicationComponent = class ListS2ApplicationComponent {
    constructor(apiService, dataStorage, router, sweetAlertService, dialog, spinner, route, commonService) {
        this.apiService = apiService;
        this.dataStorage = dataStorage;
        this.router = router;
        this.sweetAlertService = sweetAlertService;
        this.dialog = dialog;
        this.spinner = spinner;
        this.route = route;
        this.commonService = commonService;
        this.pageSize = 10;
        this.pageNo = 0;
        this.pageSizeOptions = [10, 20, 50];
        this.displayedColumns = ['referenceCode', 'typeOfApplication', 'companyName', 'brand', 'typeOfMedium', 'status', 'internalStatus', 'icon'];
        this.s2ApplicationList = [];
        this.s2TotalItems = 0;
        this.isAscUser = false;
        this.s2ApplicationListForClearance = [];
        this.forClearanceDisplayedColumns = ['referenceCode', 'typeOfApplication', 'companyName', 'brand', 'typeOfMedium', 'status', 'icon'];
        this.s2SpecialTotalItems = 0;
        this.s2SpecialApplicationList = [];
        this.s2SpecialApplicationDisplayedColumns = ['adTitle', 'typeOfApplication', 'companyName', 'brand', 'status'];
        this.applicationRequest = new app_core_models_application_request_model__WEBPACK_IMPORTED_MODULE_12__["ApplicationRequest"]();
        this.currentPage = 1;
        // currentSize = 100;
        this.originalTabDataCount = 0;
        this.complianceTabDataCount = 0;
        this.releasedAppealTabDataCount = 0;
        this.toaTabDataCount = 0;
        this.click = 0;
        this.timeLeft = 60;
        this.refreshButtonEnabled = true;
        this.isTimerValueDisplay = false;
        this.s2ApplicationCountList = [];
        this.displayedContent = 'ORIGINAL';
        this.s2Application = new _models__WEBPACK_IMPORTED_MODULE_9__["S2Application"]();
        this.applicationCountS2 = new app_core_models_applicationCountS2_model__WEBPACK_IMPORTED_MODULE_13__["ApplicationCountS2"]();
        this.isSuperAdmin = false;
        this.isAdmin = false;
        this.isAccounting = false;
        this.isApplicant = false;
        this.isScreener = false;
        this.isReviewer = false;
        this.isAdSpecialist = false;
        this.isEvaluator = false;
        this.ascUserRoleList = [..._shared__WEBPACK_IMPORTED_MODULE_11__["ROLES"].filter((role) => role.ascUser === true).map((role) => role.role)];
    }
    ngOnInit() {
        this.isAscUser = this.ascUserRoleList.includes(this.dataStorage.getUserRole());
        this.currentUser = this.dataStorage.getUserAccount();
        this.viewApplicationType = this.route.parent.snapshot.url[0].path;
        this.getListCount();
        if (this.currentUser.userRole.name === _shared__WEBPACK_IMPORTED_MODULE_11__["USER_ROLES"].ROLE_APPLICANT) {
            this.displayedColumns = ['referenceCode', 'typeOfApplication', 'companyName', 'brand', 'typeOfMedium', 'status', 'icon'];
        }
        if (this.viewApplicationType === 'special') {
            this.applicationTypeTitle = 'SPECIAL CLEARING';
            this.getSpecialS2ApplicationList();
        }
        else {
            this.applicationTypeTitle = 'INDIVIDUAL';
            this.getList();
        }
        this.initUserRole();
    }
    initUserRole() {
        if (this.currentUser.userRole.name === _shared__WEBPACK_IMPORTED_MODULE_11__["USER_ROLES"].ROLE_SUPER_ADMIN) {
            this.isSuperAdmin = true;
        }
        else if (this.currentUser.userRole.name === _shared__WEBPACK_IMPORTED_MODULE_11__["USER_ROLES"].ROLE_ADMIN) {
            this.isAdmin = true;
        }
        else if (this.currentUser.userRole.name === _shared__WEBPACK_IMPORTED_MODULE_11__["USER_ROLES"].ROLE_ACCOUNTING) {
            this.isAccounting = true;
        }
        else if (this.currentUser.userRole.name === _shared__WEBPACK_IMPORTED_MODULE_11__["USER_ROLES"].ROLE_APPLICANT) {
            this.isApplicant = true;
        }
        else if (this.currentUser.userRole.name === _shared__WEBPACK_IMPORTED_MODULE_11__["USER_ROLES"].ROLE_SCREENER) {
            this.isScreener = true;
        }
        else if (this.currentUser.userRole.name === _shared__WEBPACK_IMPORTED_MODULE_11__["USER_ROLES"].ROLE_REVIEWER) {
            this.isReviewer = true;
        }
        else if (this.currentUser.userRole.name === _shared__WEBPACK_IMPORTED_MODULE_11__["USER_ROLES"].ROLE_AD_SPECIALIST) {
            this.isAdSpecialist = true;
        }
        else if (this.currentUser.userRole.name === _shared__WEBPACK_IMPORTED_MODULE_11__["USER_ROLES"].ROLE_ENCODER) {
            this.isEvaluator = true;
        }
    }
    getListCount() {
        let endpoint;
        if (this.currentUser.userRole.name === _shared__WEBPACK_IMPORTED_MODULE_11__["USER_ROLES"].ROLE_APPLICANT) {
            endpoint = _shared__WEBPACK_IMPORTED_MODULE_11__["ENDPOINTS"].badgeCountByApplicationOwnerS2;
        }
        else {
            endpoint = _shared__WEBPACK_IMPORTED_MODULE_11__["ENDPOINTS"].badgeCountByAscUserS2;
        }
        this.apiService.findAll(endpoint + this.currentUser.id).subscribe((res) => {
            this.applicationCountS2 = res;
        });
    }
    getList(submissionType = 'ORIGINAL') {
        this.currentPage = this.pageNo;
        this.currentPage++;
        if (this.currentPage === 0)
            this.currentPage++;
        let param = submissionType.toUpperCase();
        if (param === _shared__WEBPACK_IMPORTED_MODULE_11__["SUBMISSION_TYPE"].COMPLIANCE && this.currentUser.userRole.name === _shared__WEBPACK_IMPORTED_MODULE_11__["USER_ROLES"].ROLE_APPLICANT) {
            param = `&complianceForm=true`;
        }
        else if (param === _shared__WEBPACK_IMPORTED_MODULE_11__["SUBMISSION_TYPE"].COMPLIANCE && this.currentUser.userRole.name !== _shared__WEBPACK_IMPORTED_MODULE_11__["USER_ROLES"].ROLE_APPLICANT) {
            param = `&complianceForm=true`;
        }
        else if (param === _shared__WEBPACK_IMPORTED_MODULE_11__["SUBMISSION_TYPE"].TOA) {
            param = `&hasToa=true`;
        }
        else {
            param = `&submissionType=${param}&complianceForm=false`;
        }
        this.spinner.show();
        let endpoint = `custom/search?page=${this.currentPage}&size=${this.pageSize}${param}`;
        if (this.currentUser.userRole.name === _shared__WEBPACK_IMPORTED_MODULE_11__["USER_ROLES"].ROLE_APPLICANT) {
            endpoint = _shared__WEBPACK_IMPORTED_MODULE_11__["ENDPOINTS"].s2ApplicationFormPresentor + endpoint + `&applicationOwnerId=${this.currentUser.id}`;
        }
        else if (this.currentUser.userRole.name === _shared__WEBPACK_IMPORTED_MODULE_11__["USER_ROLES"].ROLE_ENCODER) {
            endpoint = _shared__WEBPACK_IMPORTED_MODULE_11__["ENDPOINTS"].s2ApplicationFormEncoder + endpoint + `&assignedEncoderId=${this.currentUser.id}`;
        }
        else if (this.currentUser.userRole.name === _shared__WEBPACK_IMPORTED_MODULE_11__["USER_ROLES"].ROLE_AD_SPECIALIST) {
            endpoint = _shared__WEBPACK_IMPORTED_MODULE_11__["ENDPOINTS"].s2ApplicationFormAdSpe + endpoint + `&assignedAdSpecialistId=${this.currentUser.id}`;
        }
        else if (this.currentUser.userRole.name === _shared__WEBPACK_IMPORTED_MODULE_11__["USER_ROLES"].ROLE_ADMIN || this.currentUser.userRole.name === _shared__WEBPACK_IMPORTED_MODULE_11__["USER_ROLES"].ROLE_SUPER_ADMIN) {
            endpoint = _shared__WEBPACK_IMPORTED_MODULE_11__["ENDPOINTS"].s2ApplicationFormAdmin + endpoint;
        }
        else {
            endpoint = _shared__WEBPACK_IMPORTED_MODULE_11__["ENDPOINTS"].s2Application + endpoint + `&applicationOwnerId=${this.currentUser.id}`;
        }
        // console.log(endpoint);
        this.apiService.findAll(endpoint).subscribe((res) => {
            this.s2ApplicationList = res.data;
            this.s2TotalItems = res.totalItems;
            console.log('s2ApplicationList: ', res);
            this.dataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_7__["MatTableDataSource"](this.s2ApplicationList);
            this.dataSource.paginator = this.paginator;
            this.dataSource.sort = this.sort;
            this.hideSpinner();
        }, (err) => {
            this.hideSpinner();
        });
    }
    hideSpinner() {
        setTimeout(() => {
            this.spinner.hide();
        }, 1);
    }
    getSpecialS2ApplicationList() {
        let endpoint = '';
        let obj;
        if (this.currentUser.userRole.name === _shared__WEBPACK_IMPORTED_MODULE_11__["USER_ROLES"].ROLE_ADMIN || this.currentUser.userRole.name === _shared__WEBPACK_IMPORTED_MODULE_11__["USER_ROLES"].ROLE_SUPER_ADMIN) {
            obj = {
                statuses: ['FOR_APPROVAL', 'APPROVED', 'DISAPPROVED']
            };
            endpoint = _shared__WEBPACK_IMPORTED_MODULE_11__["ENDPOINTS"].s2SpecialClearingApplicationRequestsAdmin;
        }
        else {
            obj = {
                applicationOwnerId: this.currentUser.id,
                statuses: ['FOR_APPROVAL', 'APPROVED', 'DISAPPROVED']
            };
            endpoint = _shared__WEBPACK_IMPORTED_MODULE_11__["ENDPOINTS"].s2SpecialClearingApplicationRequests;
        }
        this.currentPage = this.pageNo;
        this.currentPage++;
        if (this.currentPage === 0)
            this.currentPage++;
        this.apiService.save(`${endpoint}?page=${this.currentPage}&size=${this.pageSize}`, obj)
            .subscribe((res) => {
            this.s2SpecialApplicationList = res.data;
            console.log('s2SpecialApplicationList: ', res);
            this.s2SpecialTotalItems = res.totalItems;
            this.s2SpecialApplicationDataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_7__["MatTableDataSource"](this.s2SpecialApplicationList);
            this.s2SpecialApplicationDataSource.paginator = this.paginator;
            this.s2SpecialApplicationDataSource.sort = this.sort;
            setTimeout(() => {
                this.spinner.hide();
            }, 1);
        }, (err) => {
            this.spinner.hide();
        });
    }
    pageEvents(event) {
        this.pageSize = event.pageSize;
        if (event.pageIndex > this.pageNo) {
            this.pageNo++;
        }
        else {
            this.pageNo--;
        }
        if (event.pageSize > event.length) {
            this.pageNo = 0;
        }
        this.getList();
    }
    setPageSizeOptions(setPageSizeOptionsInput) {
        if (setPageSizeOptionsInput) {
            this.pageSizeOptions = setPageSizeOptionsInput.split(',').map(str => +str);
        }
    }
    viewApplication(data) {
        this.s2Application = data;
        console.log('S2 FORM: ', this.s2Application);
        if (data.formStatus === _shared__WEBPACK_IMPORTED_MODULE_11__["FORM_STATUS"].OPEN && this.s2Application.internalStatus !== _shared__WEBPACK_IMPORTED_MODULE_11__["APPLICATION_STATUS"].S1_APPLICATION_REJECTED
            && (this.currentUser.userRole.name !== _shared__WEBPACK_IMPORTED_MODULE_11__["USER_ROLES"].ROLE_APPLICANT && this.currentUser.userRole.name !== _shared__WEBPACK_IMPORTED_MODULE_11__["USER_ROLES"].ROLE_ADMIN
                && this.currentUser.userRole.name !== _shared__WEBPACK_IMPORTED_MODULE_11__["USER_ROLES"].ROLE_SUPER_ADMIN
                && this.currentUser.userRole.name !== _shared__WEBPACK_IMPORTED_MODULE_11__["USER_ROLES"].ROLE_AD_SPECIALIST) // s2form will be assigned to s1form adspe
        ) {
            sweetalert2__WEBPACK_IMPORTED_MODULE_17___default.a.fire({
                text: 'Are you sure you want to open this application? This application will be LOCKED on your account.',
                icon: 'question',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Confirm'
            }).then((result) => {
                if (result.value) {
                    this.spinner.show();
                    this.s2Application.assignedEncoder = this.currentUser;
                    // wait for BE
                    this.apiService.save(_shared__WEBPACK_IMPORTED_MODULE_11__["ENDPOINTS"].s2ApplicationFormEncoder + _shared__WEBPACK_IMPORTED_MODULE_11__["ENDPOINTS"].takeApplication, this.s2Application).subscribe((res) => {
                        this.spinner.hide();
                        this.sweetAlertService.customSuccessMessage('Application successfully assigned to you.', 3);
                        this.router.navigate(['asc/page/application/s2/update/', data.id]);
                    }, (err) => {
                        this.spinner.hide();
                    });
                }
            });
        }
        else {
            this.router.navigate(['asc/page/application/s2/update/', data.id]);
        }
    }
    applyApplicationForToa(data) {
        sweetalert2__WEBPACK_IMPORTED_MODULE_17___default.a.fire({
            text: 'Are you sure you want to apply this application to TOA?',
            icon: 'question',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Confirm'
        }).then((result) => {
            if (result.value) {
                this.spinner.show();
                this.apiService.save(_shared__WEBPACK_IMPORTED_MODULE_11__["ENDPOINTS"].s2ApplicationForm + 'clearance/presentor/submit', data).subscribe((res) => {
                    this.spinner.hide();
                    this.sweetAlertService.customSuccessMessage('Application is applied for TOA successfully');
                    this.router.navigateByUrl('asc/page/application/s2/lists');
                }, (err) => {
                    this.spinner.hide();
                });
            }
        });
    }
    viewSpecialApplication(data) {
        this.applicationRequest = data;
        this.s2Application = new _models__WEBPACK_IMPORTED_MODULE_9__["S2Application"]();
        this.s2Application.specialClearing = true;
        this.s2Application.applicationForm = data;
        let dialogRef;
        dialogRef = this.dialog.open(app_modules_fragments_request_for_special_clearing_request_for_special_clearing_component__WEBPACK_IMPORTED_MODULE_15__["RequestForSpecialClearingComponent"], {
            width: '80%',
            height: '85%',
            data: {
                applicationRequest: this.applicationRequest,
                applicationType: 'Request for Special Clearing'
            }
        });
    }
    doFilterS1MultipleApplicationList(event) { } // in html but not existing in component -- encountered during 'ng serve --aot'
    getCompany(elementId) { } // in html but not existing in component -- encountered during 'ng serve --aot'
    doFilter(event) { } // in html but not existing in component -- encountered during 'ng serve --aot'
    changeTab(evt) {
        if (evt.tab) {
            this.displayedContent = evt.tab.textLabel;
            if (this.displayedContent === 'For Appeal') {
                this.getForDecisionAndComment();
            }
            else {
                this.getList(this.displayedContent);
            }
        }
    }
    getForDecisionAndComment() {
        let endpoint = '';
        // APPEAL
        if (this.isAdSpecialist) {
            endpoint = _shared__WEBPACK_IMPORTED_MODULE_11__["ENDPOINTS"].s2ApplicationFormAdSpe + `custom/search?assignedAdSpecialistId=${this.currentUser.id}&hasOngoingAppeal=true&page=${this.currentPage}&size=${this.pageSize}&submissionType=ORIGINAL`;
        }
        else if (this.isAdmin || this.isSuperAdmin) {
            endpoint = _shared__WEBPACK_IMPORTED_MODULE_11__["ENDPOINTS"].s2ApplicationFormAdmin + `custom/search?hasOngoingAppeal=true&page=${this.currentPage}&size=${this.pageSize}`;
        }
        this.apiService.findAll(endpoint)
            .subscribe((res) => {
            if (res) {
                this.s2ApplicationList = res === null || res === void 0 ? void 0 : res.data;
                console.log('Appeal: ', this.s2ApplicationList);
                this.s2TotalItems = res.totalItems;
                this.dataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_7__["MatTableDataSource"](this.s2ApplicationList);
                this.dataSource.paginator = this.paginatorFalse;
                this.dataSource.sort = this.sort;
                setTimeout(() => {
                    this.spinner.hide();
                }, 1);
            }
            else {
                this.s2ApplicationList = [];
            }
        }, (err) => {
            setTimeout(() => {
                this.spinner.hide();
            }, 1);
        });
    }
    sortEvent() {
        this.click++;
        if (this.click % 2 === 0) {
            this.dataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_7__["MatTableDataSource"](this.s2ApplicationList);
            this.dataSource.paginator = this.paginator;
            return this.dataSource.data.sort((a, b) => a.id - b.id);
        }
        else {
            this.dataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_7__["MatTableDataSource"](this.s2ApplicationList);
            this.dataSource.paginator = this.paginator;
            return this.dataSource.data.reverse();
        }
        // for random sort
        // this.dataSource.data.sort(() => Math.random() - 0.5)
    }
    refresh() {
        this.commonService.sendClickEvent();
        this.startTimer();
    }
    startTimer() {
        this.interval = setInterval(() => {
            this.timeLeft--;
            if (this.timeLeft > 0) {
                this.refreshButtonEnabled = false;
                this.isTimerValueDisplay = true;
            }
            else {
                this.refreshButtonEnabled = true;
                this.isTimerValueDisplay = false;
                this.timeLeft = 60;
                clearInterval(this.interval);
            }
            this.timerDisplay = this.transform(this.timeLeft);
        }, 1000);
    }
    transform(value) {
        const minutes = Math.floor(value / 60);
        return minutes + ':' + (value - minutes * 60);
    }
};
ListS2ApplicationComponent.ctorParameters = () => [
    { type: _services__WEBPACK_IMPORTED_MODULE_10__["ApiService"] },
    { type: _services__WEBPACK_IMPORTED_MODULE_10__["DataStorageService"] },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_8__["Router"] },
    { type: _services__WEBPACK_IMPORTED_MODULE_10__["SweetAlertService"] },
    { type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_4__["MatDialog"] },
    { type: ngx_spinner__WEBPACK_IMPORTED_MODULE_16__["NgxSpinnerService"] },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_8__["ActivatedRoute"] },
    { type: app_core_services_common_services_service__WEBPACK_IMPORTED_MODULE_14__["CommonServices"] }
];
ListS2ApplicationComponent.propDecorators = {
    paginatorFalse: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["ViewChild"], args: [_angular_material_paginator__WEBPACK_IMPORTED_MODULE_5__["MatPaginator"], { static: false },] }],
    paginator: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["ViewChild"], args: [_angular_material_paginator__WEBPACK_IMPORTED_MODULE_5__["MatPaginator"], { static: true },] }],
    sort: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["ViewChild"], args: [_angular_material_sort__WEBPACK_IMPORTED_MODULE_6__["MatSort"], { static: false },] }],
    table: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["ViewChild"], args: [_angular_material_table__WEBPACK_IMPORTED_MODULE_7__["MatTable"], { static: false },] }]
};
ListS2ApplicationComponent = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_3__["Component"])({
        selector: 'app-list-s2-application',
        template: _raw_loader_list_s2_application_component_html__WEBPACK_IMPORTED_MODULE_1__["default"],
        styles: [_list_s2_application_component_scss__WEBPACK_IMPORTED_MODULE_2__["default"]]
    })
], ListS2ApplicationComponent);



/***/ }),

/***/ "myqe":
/*!*****************************************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/modules/pages/applications/performance-metrics/performance-metrics.component.html ***!
  \*****************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<button mat-raised-button class=\"button-left button-red\">\r\n    <span class=\"material-icons\">new_releases</span> {{referenceCode}} </button>\r\n<button mat-raised-button class=\"button-right button-red\" (click)=\"closeDialog()\">\r\n    <i class=\"material-icons color__white\">close</i> CLOSE\r\n</button>\r\n<br>\r\n<div class=\"mat-elevation-z8\">\r\n    <table mat-table [dataSource]=\"dataSource\" matSort>\r\n\r\n        <!-- <ng-container matColumnDef=\"referenceCode\">\r\n            <th mat-header-cell *matHeaderCellDef> Reference Code </th>\r\n            <td mat-cell *matCellDef=\"let element\">\r\n                {{ element?.referenceCode }}\r\n            </td>\r\n        </ng-container> -->\r\n\r\n        <ng-container matColumnDef=\"appFormReference\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Application Form Reference </th>\r\n            <td mat-cell *matCellDef=\"let element\">\r\n                {{ element?.appFormReference }}\r\n            </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"movement\">\r\n            <th mat-header-cell *matHeaderCellDef> Movement </th>\r\n            <td mat-cell *matCellDef=\"let element\">\r\n                {{ element?.movement.replaceAll('_', ' ') }}\r\n            </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"lastUpdate\">\r\n            <th mat-header-cell *matHeaderCellDef> Date of Action </th>\r\n            <td mat-cell *matCellDef=\"let element\">\r\n                {{ element?.previousDateTime | date:'MM/dd/yyyy hh:mm a' }}\r\n            </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"duration\">\r\n            <th mat-header-cell *matHeaderCellDef> Duration </th>\r\n            <td mat-cell *matCellDef=\"let element\">\r\n                {{ element?.duration }}\r\n            </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"actionBy\">\r\n            <th mat-header-cell *matHeaderCellDef> Action By </th>\r\n            <td mat-cell *matCellDef=\"let element\">\r\n                {{ element?.actionBy }}\r\n            </td>\r\n        </ng-container>\r\n\r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n    </table>\r\n    <div class=\"no-record\" [hidden]=\"dataSource && dataSource?.data?.length > 0\">\r\n        No record found.\r\n    </div>\r\n    <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons></mat-paginator>\r\n\r\n</div>\r\n");

/***/ }),

/***/ "p0Tr":
/*!***********************************************************************************************!*\
  !*** ./src/app/modules/pages/applications/client-information/client-information.component.ts ***!
  \***********************************************************************************************/
/*! exports provided: ClientInformationComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ClientInformationComponent", function() { return ClientInformationComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "mrSG");
/* harmony import */ var _raw_loader_client_information_component_html__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! raw-loader!./client-information.component.html */ "WQFk");
/* harmony import */ var _client_information_component_scss__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./client-information.component.scss */ "QFbT");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var _models__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @models */ "sKXY");
/* harmony import */ var _shared__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @shared */ "M0ag");
/* harmony import */ var _services__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @services */ "dJ3e");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/forms */ "3Pt+");
/* harmony import */ var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/material/dialog */ "0IaG");
/* harmony import */ var _company__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @company */ "zeqK");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular/router */ "tyNb");
/* harmony import */ var _maintenance__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @maintenance */ "u+D7");
/* harmony import */ var _core_services_address_address_service__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../../../core/services/address/address.service */ "n4+4");
/* harmony import */ var _maintenance_product_product_component__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../maintenance/product/product.component */ "y6m7");
/* harmony import */ var app_core_models_multiple_application_model__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! app/core/models/multiple-application.model */ "0jzb");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! rxjs */ "qCKp");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! rxjs/operators */ "kU1M");

















let ClientInformationComponent = class ClientInformationComponent {
    constructor(apiService, addressService, dialog, dataStorage, formBuilder, sweetAlertService, route) {
        this.apiService = apiService;
        this.addressService = addressService;
        this.dialog = dialog;
        this.dataStorage = dataStorage;
        this.formBuilder = formBuilder;
        this.sweetAlertService = sweetAlertService;
        this.route = route;
        this.s1Application = new _models__WEBPACK_IMPORTED_MODULE_4__["S1Application"]();
        this.s2Application = new _models__WEBPACK_IMPORTED_MODULE_4__["S2Application"]();
        this.multipleApplication = new app_core_models_multiple_application_model__WEBPACK_IMPORTED_MODULE_14__["MultipleApplication"]();
        this.isAscUser = false;
        this.isDisableFieldOnUpdate = false;
        this.company = new _models__WEBPACK_IMPORTED_MODULE_4__["Company"]();
        this.checkInactiveAffiliation = new _angular_core__WEBPACK_IMPORTED_MODULE_3__["EventEmitter"]();
        this.hasErrorFields = new _angular_core__WEBPACK_IMPORTED_MODULE_3__["EventEmitter"]();
        this.memberAffiliationList = [];
        this.companyList = [];
        this.brandList = [];
        this.productList = [];
        // categoryList = [];
        this.regionsList = [];
        this.provinceList = [];
        this.cityMunicipalityList = [];
        this.barangayList = [];
        this.countryList = [];
        this.notInSelection = ['INACTIVE', 'DISAPPROVED'];
        this.isNewCompany = false;
        this.showCompanyAddress = false;
        this.ngUnsubscribe = new rxjs__WEBPACK_IMPORTED_MODULE_15__["Subject"]();
    }
    ngOnInit() {
        // console.log('Clientinfo');
        this.currentUser = this.dataStorage.getUserAccount();
        this.setFormValidator();
        this.getBrandList();
        this.getCompanyList();
        this.getAffiliationList();
        this.getCountries();
    }
    ngOnChanges() {
        if (this.s1Application.brand) {
            this.setProductList();
        }
    }
    setFormValidator() {
        var _a;
        this.clientInformationForm = this.formBuilder.group({
            brand: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_7__["Validators"].required],
            product: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_7__["Validators"].required],
            category: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_7__["Validators"].required],
            company: [''],
            companyAddress: [''],
            country: [''],
            companyName: [''],
            membersAffiliation: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_7__["Validators"].required],
        });
        if (((_a = this.currentUser) === null || _a === void 0 ? void 0 : _a.accountType) === 'APPLICANT') {
            this.clientInformationForm.valueChanges.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_16__["takeUntil"])(this.ngUnsubscribe)).subscribe(value => {
                this.checkInvalidFields(value);
            });
        }
    }
    getBrandList() {
        this.apiService.findAll(_shared__WEBPACK_IMPORTED_MODULE_5__["ENDPOINTS"].activeBrands).subscribe((res) => {
            this.brandList = res.responseData.data; // .filter((brand) => !this.notInSelection.includes(brand.status));
            this.productList = [];
        }, (err) => {
        });
        if (this.s1Application.brand) {
            this.setProductList();
        }
    }
    setBrand() {
        var _a, _b;
        this.setProductList();
        if (((_b = (_a = this.s1Application) === null || _a === void 0 ? void 0 : _a.product) === null || _b === void 0 ? void 0 : _b.status) !== _shared__WEBPACK_IMPORTED_MODULE_5__["COMMON_FUNCTION"].FOR_APPROVAL) {
            this.s1Application.product = null;
        }
    }
    setProductList() {
        // const endpoint = this.s1Application.brand ? ENDPOINTS.productsByBrand + this.s1Application.brand.id : ENDPOINTS.product;
        this.apiService.findAll(_shared__WEBPACK_IMPORTED_MODULE_5__["ENDPOINTS"].productsByBrand + this.s1Application.brand.id).subscribe((res) => {
            this.productList = res.responseData.data.filter((product) => product.status !== _shared__WEBPACK_IMPORTED_MODULE_5__["COMMON_FUNCTION"].DISAPPROVED.toUpperCase()
                && product.status !== _shared__WEBPACK_IMPORTED_MODULE_5__["COMMON_FUNCTION"].INACTIVE.toUpperCase());
        }, (err) => {
        });
    }
    getCompanyList() {
        this.apiService.findAll(_shared__WEBPACK_IMPORTED_MODULE_5__["ENDPOINTS"].activeCompanies).subscribe((res) => {
            this.companyList = res.responseData.data; // .filter((company) => !this.notInSelection.includes(company.status));
        }, (err) => {
        });
    }
    getAffiliationList() {
        this.apiService.findAll(_shared__WEBPACK_IMPORTED_MODULE_5__["ENDPOINTS"].activeMembersAffiliation).subscribe((res) => {
            this.memberAffiliationList = res.responseData.data;
        }, (err) => {
        });
    }
    getCompanyAddress(companyName) {
        this.showCompanyAddress = false;
        this.isNewCompany = false;
        this.apiService.findByParam(_shared__WEBPACK_IMPORTED_MODULE_5__["ENDPOINTS"].company, `custom/search?companyName=${companyName}`).subscribe((res) => {
            this.company = res.data[0];
            if (this.company.membersAffiliation.status === 'INACTIVE') {
                this.checkInactiveAffiliationFunction();
                this.sweetAlertService.customErrorMessage(`Cannot proceed with the application. Company's membership affiliation is no longer active. Please contact ASC admin`);
            }
            if (this.company.status === 'FOR_APPROVAL') {
                this.isNewCompany = true;
            }
        }, (err) => {
        });
    }
    compareCompanyName(value, selected) {
        if (value && selected && value.id === selected.id) {
            return value.companyName === selected.companyName;
        }
    }
    compareBrand(value, selected) {
        if (value && selected) {
            return value.description === selected.description;
        }
    }
    compareMembersAffiliation(value, selected) {
        if (value && selected) {
            return value.description === selected.description;
        }
    }
    compareProduct(value, selected) {
        if (value && selected) {
            return value.description === selected.description;
        }
    }
    // compareCategory(value: any, selected: any): boolean {
    //   if (value && selected) {
    //     return value.description === selected.description;
    //   }
    // }
    openNewCompanyModal(status = 'new') {
        let dataForModal;
        if (status === 'new') {
            dataForModal = {
                isFromModal: true,
                isUpdate: false,
                country: this.dataStorage.getDefaultCountry()
            };
        }
        else if (status === 'update' && this.s1Application.company) {
            dataForModal = {
                isFromModal: true,
                isUpdate: true,
                company: this.s1Application.company
            };
        }
        const dialogRef = this.dialog.open(_company__WEBPACK_IMPORTED_MODULE_9__["AddCompanyComponent"], {
            width: '80%',
            height: '85%',
            data: {
                dataForModal
            }
        });
        dialogRef.afterClosed().subscribe(result => {
            this.isNewCompany = result ? true : false;
            if (result) {
                this.getCompanyList();
                this.company = result;
                this.dataStorage.setS1NewCompany(this.company);
                this.s1Application.company = this.dataStorage.getS1NewCompany();
            }
        });
    }
    openNewBrandModal(status = 'new') {
        let dataForModal;
        if (status === 'new') {
            dataForModal = {
                isFromModal: true,
                isUpdate: false,
            };
        }
        else if (status === 'update') {
            dataForModal = {
                isFromModal: true,
                isUpdate: true,
                brand: this.s1Application.brand
            };
        }
        const dialogRef = this.dialog.open(_maintenance__WEBPACK_IMPORTED_MODULE_11__["BrandsComponent"], {
            width: '80%',
            height: '85%',
            data: {
                dataForModal
            }
        });
        dialogRef.afterClosed().subscribe(result => {
            if (result) {
                this.getBrandList();
                this.s1Application.brand = this.dataStorage.getS1NewBrand();
                this.s1Application.product = this.s1Application.product;
            }
        });
    }
    openNewProductModal(status = 'new') {
        var _a, _b;
        let dataForModal;
        if (status === 'new') {
            dataForModal = {
                isFromModal: true,
                isUpdate: false,
                brand: (_a = this.s1Application) === null || _a === void 0 ? void 0 : _a.brand,
            };
        }
        else if (status === 'update') {
            dataForModal = {
                isFromModal: true,
                isUpdate: true,
                product: (_b = this.s1Application) === null || _b === void 0 ? void 0 : _b.product,
                currentStatus: 'FOR_APPROVAL'
            };
        }
        const dialogRef = this.dialog.open(_maintenance_product_product_component__WEBPACK_IMPORTED_MODULE_13__["ProductComponent"], {
            width: '80%',
            height: '85%',
            data: {
                dataForModal
            }
        });
        dialogRef.afterClosed().subscribe(result => {
            if (result) {
                // this.getBrandList();
                this.setProductList();
                this.s1Application.product = this.dataStorage.getS1NewProduct();
            }
        });
    }
    compareCountry(value, selected) {
        if (value && selected) {
            return value.code === selected.code;
        }
    }
    getCountries() {
        this.apiService.findAll(_shared__WEBPACK_IMPORTED_MODULE_5__["ENDPOINTS"].countries).subscribe((res) => {
            this.countryList = res.responseData.data;
            this.dataStorage.setDefaultCountry(res.responseData.data[0]);
        }, (err) => {
        });
    }
    checkInactiveAffiliationFunction() {
        var _a, _b, _c;
        this.isInactiveAffiliation = ((_c = (_b = (_a = this.s1Application) === null || _a === void 0 ? void 0 : _a.company) === null || _b === void 0 ? void 0 : _b.membersAffiliation) === null || _c === void 0 ? void 0 : _c.status) === 'INACTIVE';
        this.checkInactiveAffiliation.emit();
    }
    checkInvalidFields(s1Application) {
        if ((s1Application === null || s1Application === void 0 ? void 0 : s1Application.company) && (s1Application === null || s1Application === void 0 ? void 0 : s1Application.brand) && (s1Application === null || s1Application === void 0 ? void 0 : s1Application.product)) {
            this.hasErrorFields.emit(false);
        }
        else {
            this.hasErrorFields.emit(true);
        }
    }
    ngOnDestroy() {
        this.ngUnsubscribe.next();
        this.ngUnsubscribe.complete();
    }
};
ClientInformationComponent.ctorParameters = () => [
    { type: _services__WEBPACK_IMPORTED_MODULE_6__["ApiService"] },
    { type: _core_services_address_address_service__WEBPACK_IMPORTED_MODULE_12__["AddressService"] },
    { type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_8__["MatDialog"] },
    { type: _services__WEBPACK_IMPORTED_MODULE_6__["DataStorageService"] },
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_7__["FormBuilder"] },
    { type: _services__WEBPACK_IMPORTED_MODULE_6__["SweetAlertService"] },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_10__["ActivatedRoute"] }
];
ClientInformationComponent.propDecorators = {
    s1Application: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Input"] }],
    s2Application: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Input"] }],
    multipleApplication: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Input"] }],
    isAscUser: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Input"] }],
    isDisableFieldOnUpdate: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Input"] }],
    company: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Input"] }],
    checkInactiveAffiliation: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Output"] }],
    isInactiveAffiliation: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Output"] }],
    hasErrorFields: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Output"] }]
};
ClientInformationComponent = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_3__["Component"])({
        selector: 'app-client-information',
        template: _raw_loader_client_information_component_html__WEBPACK_IMPORTED_MODULE_1__["default"],
        styles: [_client_information_component_scss__WEBPACK_IMPORTED_MODULE_2__["default"]]
    })
], ClientInformationComponent);



/***/ }),

/***/ "pBQ4":
/*!********************************************************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/modules/pages/applications/s2-application/list-s2-application/list-s2-application.component.html ***!
  \********************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<form>\r\n  <div class=\"container-fluid\">\r\n\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12 title\">\r\n        <mat-label>\r\n          <i class=\"material-icons\">file_copy</i> S2 APPLICATION - <b>{{applicationTypeTitle}}</b>\r\n        </mat-label>\r\n        <button class=\"button-right\" type=\"submit\" mat-raised-button color=\"primary\" (click)=\"refresh()\" [disabled]=\"!refreshButtonEnabled\">\r\n          <span class=\"material-icons\">sync</span>\r\n          <label *ngIf=\"isTimerValueDisplay\"> &nbsp;{{timerDisplay}}</label>\r\n        </button>\r\n      </div>\r\n    </div>\r\n    <hr>\r\n\r\n    <div *ngIf=\"applicationTypeTitle === 'INDIVIDUAL'\">\r\n      <ng-container *ngTemplateOutlet=\"individualS2ApplicationList\"></ng-container>\r\n    </div>\r\n    <div\r\n      *ngIf=\"(currentUser.userRole.name === 'ROLE_APPLICANT' || currentUser.userRole.name === 'ROLE_ADMIN' || currentUser.userRole.name === 'ROLE_SUPER_ADMIN') && viewApplicationType === 'special'\">\r\n      <ng-container *ngTemplateOutlet=\"specialS1ApplicationList\"></ng-container>\r\n    </div>\r\n\r\n    <ng-template #individualS2ApplicationList>\r\n      <div class=\"row\">\r\n        <div class=\"col-lg-9\">\r\n          <div class=\" search\" fxLayout fxLayoutAlign=\"center center\">\r\n            <mat-form-field class=\"col-md-9\" appearance=\"outline\">\r\n              <input matInput type=\"text\" (keyup)=\"doFilter($event.target.value)\" placeholder=\"Search\">\r\n            </mat-form-field>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- <div class=\"col\">\r\n          <div class=\"legend-content\">\r\n            <table class=\"legend-table\">\r\n              <tr>\r\n                <td><div class=\"legend-box legend-blue\"></div> ORIGINAL</td>\r\n              </tr>\r\n              <tr>\r\n                <td><div class=\"legend-box legend-green\"></div> REVISION</td>\r\n              </tr>\r\n              <tr>\r\n                <td><div class=\"legend-box legend-orange\"></div> FOR COMPLIANCE</td>\r\n              </tr>\r\n            </table>\r\n          </div>\r\n        </div> -->\r\n\r\n\r\n      </div><br>\r\n\r\n      <mat-tab-group mat-align-tabs=\"start\" (selectedTabChange)=\"changeTab($event)\">\r\n        <mat-tab label=\"Original\">\r\n          <ng-template mat-tab-label>\r\n            Original\r\n            <div matBadge={{applicationCountS2.countOriginal}} class=\"c-badge\" matBadgeColor=\"warn\"></div>\r\n          </ng-template>\r\n        </mat-tab>\r\n        <mat-tab label=\"Compliance\">\r\n          <ng-template mat-tab-label>\r\n            Compliance\r\n            <div matBadge={{applicationCountS2.countCompliance}} class=\"c-badge\" matBadgeColor=\"warn\"></div>\r\n          </ng-template>\r\n        </mat-tab>\r\n        <mat-tab label=\"TOA\">\r\n          <ng-template mat-tab-label>\r\n            TOA\r\n            <div matBadge={{applicationCountS2.countToa}} class=\"c-badge\" matBadgeColor=\"warn\"></div>\r\n          </ng-template>\r\n        </mat-tab>\r\n        <mat-tab label=\"For Appeal\" *ngIf=\"isAdSpecialist || isAdmin || isSuperAdmin\">\r\n          <ng-template mat-tab-label>\r\n            Released Appeal\r\n            <div matBadge={{releasedAppealTabDataCount}} class=\"c-badge\" matBadgeColor=\"warn\"></div>\r\n          </ng-template>\r\n        </mat-tab>\r\n      </mat-tab-group>\r\n\r\n      <div class=\"mat-elevation-z8 fields main-table \" fxLayout fxLayoutAlign=\"center center\">\r\n        <table mat-table [dataSource]=\"dataSource\" matSort>\r\n\r\n          <ng-container matColumnDef=\"referenceCode\">\r\n            <th mat-header-cell *matHeaderCellDef > REFERENCE CODE <mat-icon class=\"cursor\" (click)=\"sortEvent()\" style=\"color:black\">swap_vert</mat-icon></th>\r\n            <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"viewApplication(element)\"\r\n             [ngStyle]=\"{'pointer-events': ((i != 0 && currentUser.userRole.name === 'ROLE_ENCODER') ? 'none' : ''),\r\n                  'background-color':\r\n                  ((element?.submissionType=='ORIGINAL'&&element.decisionStatus!='INCOMPLETE') ? 'lightblue' :\r\n                  ((element?.submissionType=='FOR COMPLIANCE'||element.decisionStatus=='INCOMPLETE'||element.submissionType=='COMPLIANCE') ? '#ebd79b' :\r\n                  (element?.submissionType=='REVISION' ? '#8fcf8f' : '' )))}\">\r\n              {{ element?.submissionType === 'ORIGINAL' && element?.internalStatus=='S2_APPLICATION_REJECTED' ? element?.referenceCodeRejected : element?.applicationForm?.referenceCode | uppercase}}\r\n            </td>\r\n          </ng-container>\r\n          <ng-container matColumnDef=\"typeOfApplication\">\r\n            <th mat-header-cell *matHeaderCellDef > TYPE OF APPLICATION </th>\r\n            <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"viewApplication(element)\"\r\n              [ngStyle]=\"{'pointer-events': ((i != 0 && currentUser.userRole.name === 'ROLE_ENCODER') ? 'none' : ''),\r\n                  'background-color': ((currentUser.userRole.name  === 'ROLE_ENCODER' && i > 0 ? '#beb8b8' : ''))}\">\r\n              <!--  'background-color':\r\n                  ((element?.applicationForm?.applicationType.description=='Regular') ? 'lightblue' :\r\n                  (element?.applicationForm?.applicationType.description=='Batch') ? '#8fcf8f' :\r\n                  (element?.applicationForm?.applicationType.description=='Special Screening') ? '#fca402' :\r\n                  (element?.applicationForm?.applicationType.description=='Special Clearing') ? '#ff8a7b' :\r\n                  (element?.applicationForm?.applicationType.description=='Special Screening and Clearing') ? 'violet' :\r\n                  (element?.applicationForm?.applicationType.description=='For Presentation') ? 'yellow' :\r\n                  (currentUser.userRole.name === 'ROLE_ENCODER'&&i>0 ? '#beb8b8' : ''))}\"> -->\r\n              {{ element?.applicationForm?.applicationType.description.replaceAll('_',' ') | uppercase }}\r\n              {{ element?.specialClearing ? '- SPECIAL CLEARING' : '' }}\r\n              {{ element?.hasToa ? '- TOA' : '' }}\r\n            </td>\r\n          </ng-container>\r\n          <ng-container matColumnDef=\"companyName\">\r\n            <th mat-header-cell *matHeaderCellDef > COMPANY NAME </th>\r\n            <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"viewApplication(element)\"\r\n              [ngStyle]=\"{'pointer-events': ((i != 0 && currentUser.userRole.name === 'ROLE_ENCODER') ? 'none' : ''),\r\n                  'background-color': ((currentUser.userRole.name === 'ROLE_ENCODER' && i > 0? '#beb8b8' : ''))}\">\r\n              {{ element?.applicationForm?.company.companyName }} </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"brand\">\r\n            <th mat-header-cell *matHeaderCellDef > BRAND </th>\r\n            <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"viewApplication(element)\"\r\n              [ngStyle]=\"{'pointer-events': ((i != 0 && currentUser.userRole.name === 'ROLE_ENCODER') ? 'none' : ''),\r\n                  'background-color': ((currentUser.userRole.name === 'ROLE_ENCODER' && i > 0? '#beb8b8' : ''))}\">\r\n              {{ element?.applicationForm?.brand.description }} </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"typeOfMedium\">\r\n            <th mat-header-cell *matHeaderCellDef > TYPE OF MEDIUM </th>\r\n            <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"viewApplication(element)\"\r\n              [ngStyle]=\"{'pointer-events': ((i != 0 && currentUser.userRole.name === 'ROLE_ENCODER') ? 'none' : ''),\r\n                  'background-color': ((currentUser.userRole.name === 'ROLE_ENCODER' && i > 0? '#beb8b8' : ''))}\">\r\n              {{ element?.applicationForm?.typeOfMedium }} </td>\r\n          </ng-container>\r\n\r\n          <!-- [ngStyle]=\"{'pointer-events': ((i != 0 && (currentUser.userRole.name === 'ROLE_ENCODER')) ? 'none' : ''),\r\n                  'background-color': ((currentUser.userRole.name === 'ROLE_ENCODER'&&i>0 ? '#beb8b8' : ''))}\" -->\r\n          <ng-container matColumnDef=\"status\">\r\n            <th mat-header-cell *matHeaderCellDef > APPLICATION STATUS </th>\r\n            <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"viewApplication(element)\"\r\n              [ngStyle]=\"{'pointer-events': ((i != 0 && currentUser.userRole.name === 'ROLE_ENCODER') ? 'none' : ''),\r\n                  'background-color': ((currentUser.userRole.name === 'ROLE_ENCODER' && i > 0? '#beb8b8' : ''))}\">\r\n              {{ element?.externalStatus?.replaceAll('_',' ') | uppercase }} </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"internalStatus\">\r\n            <th mat-header-cell *matHeaderCellDef > INTERNAL STATUS </th>\r\n            <td mat-cell *matCellDef=\"let element; let i = index\" class=\"applicantStatus\"\r\n              [ngStyle]=\"{'pointer-events': ((i != 0 && currentUser.userRole.name === 'ROLE_ENCODER') ? 'none' : ''),\r\n                  'background-color': ((currentUser.userRole.name === 'ROLE_ENCODER' && i > 0? '#beb8b8' : ''))}\">\r\n              {{ element?.internalStatus?.replaceAll('_',' ') | uppercase }} </td>\r\n          </ng-container>\r\n          <!-- For ASC Users only -->\r\n          <!-- <ng-container matColumnDef=\"ascStatus\">\r\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> ASC STATUS </th>\r\n                  <td mat-cell *matCellDef=\"let element\" (click)=\"getCompany(element?.id)\"> {{ element?.ascStatus }} </td>\r\n                </ng-container> -->\r\n\r\n          <ng-container matColumnDef=\"icon\">\r\n            <th mat-header-cell *matHeaderCellDef > </th>\r\n            <td mat-cell *matCellDef=\"let element; let i = index\" class=\"icon\"\r\n              [hidden]=\"currentUser?.userRole?.name != 'ROLE_APPLICANT'\"\r\n              [ngStyle]=\"{'pointer-events': ((i != 0 && currentUser.userRole.name === 'ROLE_ENCODER') ? 'none' : ''),\r\n                  'background-color': ((currentUser.userRole.name != 'ROLE_APPLICANT'&&currentUser.userRole.name != 'ROLE_AD_SPECIALIST'&&i>0 ? '#beb8b8' : ''))}\">\r\n\r\n                  <!-- <button mat-raised-button class=\"button-red\" matTooltip=\"Submit S2 for Clearance \"\r\n                    (click)=\"applyApplicationForToa(element)\" *ngIf=\"currentUser?.userRole?.name=='ROLE_APPLICANT'&&element?.\r\n                        internalStatus=='APPROVED' || element?.internalStatus=='S2_APPLICATION_VERIFIED_BY_AD_SPE'\r\n                        || element?.internalStatus=='RE_SUBMITTED_S2_APPLICATION_VERIFIED_BY_AD_SPE'\">\r\n                    <i class=\"material-icons color__white\">queue_play_next</i>\r\n                  </button> -->\r\n\r\n                  <button mat-raised-button class=\"button-red\" matTooltip=\"Submit For Compliance\"\r\n                  (click)=\"viewApplication(element)\"\r\n                  *ngIf=\"(currentUser?.userRole?.name=='ROLE_APPLICANT' && element?.decisionStatus=='INCOMPLETE' &&\r\n                          (element?.internalStatus=='INCOMPLETE' || element?.internalStatus=='S2_APPLICATION_VERIFIED_BY_AD_SPE' || element?.internalStatus=='RE_SUBMITTED_S2_APPLICATION_VERIFIED_BY_AD_SPE' ||\r\n                          element?.internalStatus=='S2_APPLICATION_REJECTED'))\">\r\n                  <i class=\"material-icons\">warning_amber</i>\r\n                </button>\r\n\r\n              <!--  <button mat-raised-button class=\"button-red\" matTooltip=\"Submit For Compliance\" *ngIf=\"currentUser?.userRole?.name=='ROLE_APPLICANT'&&element?.\r\n                    internalStatus=='RE_SUBMITTED_S2_APPLICATION_VERIFIED_BY_AD_SPE' || element?.internalStatus=='S2_APPLICATION_VERIFIED_BY_AD_SPE'\r\n                    || element?.internalStatus=='APPROVED'\">\r\n                    <i class=\"material-icons color__white\">warning_amber</i>\r\n                    </button>-->\r\n            </td>\r\n          </ng-container>\r\n\r\n\r\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n          <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n        </table>\r\n        <div class=\"no-record\" [hidden]=\"dataSource && dataSource?.data?.length > 0\">\r\n          No record found.\r\n        </div>\r\n        <!-- <mat-paginator [pageSizeOptions]=\"[10, 20, 50]\" showFirstLastButtons></mat-paginator> -->\r\n        <mat-paginator [pageSize]=\"pageSize\" [pageIndex]=\"pageNo\" [length]=\"s2TotalItems\"\r\n          [pageSizeOptions]=\"pageSizeOptions\" (page)=\"pageEvents($event)\">\r\n        </mat-paginator>\r\n\r\n      </div>\r\n      <!-- </mat-tab> -->\r\n    </ng-template>\r\n\r\n\r\n\r\n\r\n\r\n    <ng-template #specialS1ApplicationList>\r\n        <b *ngIf=\"currentUser.userRole.name === 'ROLE_APPLICANT'\"><b class=\"material-icons info-msg\">error_outline</b> This\r\n          page contain list of Request for Approval and allows you to create S2 application from approved request only.</b>\r\n        <b *ngIf=\"currentUser.userRole.name === 'ROLE_ADMIN' || currentUser?.userRole.name === 'ROLE_SUPER_ADMIN' \"><b\r\n            class=\"material-icons info-msg\">error_outline</b> This page\r\n            contain list of Request for Approval and allows you to approve or disapprove request.</b>\r\n      <div class=\"row\" fxLayout fxLayoutAlign=\"center center\">\r\n        <mat-form-field class=\"col-md-8\" appearance=\"outline\">\r\n          <mat-label><i class=\"material-icons\">search</i> Search Applications</mat-label>\r\n          <input matInput type=\"text\" (keyup)=\"doFilterS1MultipleApplicationList($event.target.value)\">\r\n        </mat-form-field>\r\n\r\n        <div class=\"col\">\r\n          <div class=\"legend-content\">\r\n            <table class=\"legend-table\">\r\n              <tr>\r\n                <td>\r\n                  <div class=\"legend-box legend-orange\"></div> FOR APPROVAL\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <div class=\"legend-box legend-green\"></div> APPROVED\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <div class=\"legend-box legend-red\"></div> DISAPPROVED\r\n                </td>\r\n              </tr>\r\n              <!-- <tr>\r\n                    <td>\r\n                      <div class=\"legend-box legend-pink\"></div> REJECTED\r\n                    </td>\r\n                  </tr> -->\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- <div class=\"row\">\r\n\r\n            <div class=\"col-md-2\">LEGEND:</div>\r\n            <div class=\"col-md-1 legend legend-orange\">FOR APPROVAL</div>\r\n            <div class=\"col-md-1 legend legend-green\">APPROVED</div>\r\n            <div class=\"col-md-1 legend legend-red\">DISAPPROVED</div>\r\n            <div class=\"col-md-1\" style=\"background-color:lightpink;border-radius:8px;width:20%;\">Rejected</div>\r\n          </div> -->\r\n      <br>\r\n\r\n      <div class=\"mat-elevation-z8 fields\">\r\n        <table mat-table [dataSource]=\"s2SpecialApplicationDataSource\" matSort>\r\n\r\n          <ng-container matColumnDef=\"adTitle\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> AD TITLE </th>\r\n            <td mat-cell *matCellDef=\"let element\" (click)=\"viewSpecialApplication(element)\">\r\n              {{ element?.adTitle | uppercase }} </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"typeOfApplication\">\r\n            <th mat-header-cell *matHeaderCellDef > TYPE OF APPLICATION </th>\r\n            <td mat-cell *matCellDef=\"let element\" (click)=\"viewSpecialApplication(element)\">\r\n              {{ element?.applicationType?.description.replaceAll('_',' ') | uppercase }}\r\n              {{ element?.hasSpecialClearing ? '- SPECIAL CLEARING' : ''}}\r\n              {{ element?.hasToa ? '- TOA' : '' }} </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"companyName\">\r\n            <th mat-header-cell *matHeaderCellDef > COMPANY NAME </th>\r\n            <td mat-cell *matCellDef=\"let element\" (click)=\"viewSpecialApplication(element)\">\r\n              {{ element?.company?.companyName | uppercase }} </td>\r\n          </ng-container>\r\n\r\n          <!-- <ng-container matColumnDef=\"membersAffiliation\">\r\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> MEMBER'S AFFILIATION </th>\r\n                <td mat-cell *matCellDef=\"let element\" (click)=\"viewSpecialApplication(element)\">\r\n                  {{ element?.membersAffiliation?.description | uppercase }} </td>\r\n              </ng-container> -->\r\n\r\n          <ng-container matColumnDef=\"brand\">\r\n            <th mat-header-cell *matHeaderCellDef> BRAND </th>\r\n            <td mat-cell *matCellDef=\"let element\" (click)=\"viewSpecialApplication(element)\">\r\n              {{ element?.brand?.description | uppercase }} </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"status\">\r\n            <th mat-header-cell *matHeaderCellDef > APPLICATION STATUS </th>\r\n            <td mat-cell *matCellDef=\"let element\" class=\"applicantStatus\" [ngStyle]=\"{'background-color':\r\n                element?.status === 'FOR_APPROVAL' ? '#ebd79b' :\r\n                element?.status === 'APPROVED' ? '#8fcf8f' :\r\n                element?.status === 'DISAPPROVED' ? '#ebb89b' : '' }\" (click)=\"viewSpecialApplication(element)\">\r\n              {{ element?.status?.replaceAll('_',' ') | uppercase }} </td>\r\n          </ng-container>\r\n\r\n          <tr mat-header-row *matHeaderRowDef=\"s2SpecialApplicationDisplayedColumns\"></tr>\r\n          <tr mat-row *matRowDef=\"let row; columns: s2SpecialApplicationDisplayedColumns;\"></tr>\r\n        </table>\r\n        <div class=\"no-record\"\r\n          [hidden]=\"s2SpecialApplicationDataSource && s2SpecialApplicationDataSource?.data?.length > 0\">\r\n          No record found.\r\n        </div>\r\n        <!-- <mat-paginator [pageSizeOptions]=\"[10, 20, 50]\" showFirstLastButtons></mat-paginator> -->\r\n        <mat-paginator [pageSize]=\"pageSize\" [pageIndex]=\"pageNo\" [length]=\"s2SpecialTotalItems\"\r\n          [pageSizeOptions]=\"pageSizeOptions\" (page)=\"pageEvents($event)\">\r\n        </mat-paginator>\r\n      </div>\r\n    </ng-template>\r\n\r\n\r\n\r\n\r\n    <!-- FOR CLEARANCE TABLE -->\r\n    <!-- <mat-tab label=\"FOR CLEARANCE\">\r\n          <div class=\"mat-elevation-z8 fields toa-tab\">\r\n            <table mat-table [dataSource]=\"forClearanceDataSource\" matSort>\r\n\r\n                <ng-container matColumnDef=\"referenceCode\">\r\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> REFERENCE CODE </th>\r\n                  <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"viewApplication(element)\"\r\n                  [ngStyle]=\"{'pointer-events': ((i != 0 && (currentUser.userRole.name === 'ROLE_ENCODER')) ? 'none' : ''),\r\n                  'background-color': ((currentUser.userRole.name === 'ROLE_ENCODER'&&i>0 ? '#beb8b8' : ''))}\"> {{ element?.applicationForm?.referenceCode }} </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"typeOfApplication\">\r\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> TYPE OF APPLICATION </th>\r\n                  <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"viewApplication(element)\"\r\n                  [ngStyle]=\"{'pointer-events': ((i != 0 && (currentUser.userRole.name === 'ROLE_ENCODER')) ? 'none' : ''),\r\n                  'background-color': ((currentUser.userRole.name === 'ROLE_ENCODER'&&i>0 ? '#beb8b8' : ''))}\"> {{ element?.applicationForm?.applicationType.description }} </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"companyName\">\r\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> COMPANY NAME </th>\r\n                  <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"viewApplication(element)\"\r\n                  [ngStyle]=\"{'pointer-events': ((i != 0 && (currentUser.userRole.name === 'ROLE_ENCODER')) ? 'none' : ''),\r\n                  'background-color': ((currentUser.userRole.name === 'ROLE_ENCODER'&&i>0 ? '#beb8b8' : ''))}\"> {{ element?.applicationForm?.company.companyName }} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"brand\">\r\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> BRAND </th>\r\n                  <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"viewApplication(element)\"\r\n                  [ngStyle]=\"{'pointer-events': ((i != 0 && (currentUser.userRole.name === 'ROLE_ENCODER')) ? 'none' : ''),\r\n                  'background-color': ((currentUser.userRole.name === 'ROLE_ENCODER'&&i>0 ? '#beb8b8' : ''))}\"> {{ element?.applicationForm?.brand.description }} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"typeOfMedium\">\r\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> TYPE OF MEDIUM </th>\r\n                  <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"viewApplication(element)\"\r\n                  [ngStyle]=\"{'pointer-events': ((i != 0 && (currentUser.userRole.name === 'ROLE_ENCODER')) ? 'none' : ''),\r\n                  'background-color': ((currentUser.userRole.name === 'ROLE_ENCODER'&&i>0 ? '#beb8b8' : ''))}\"> {{ element?.applicationForm?.refTypeOfMedium }} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"status\">\r\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> APPLICATION STATUS </th>\r\n                  <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"viewApplication(element)\"\r\n                  [ngStyle]=\"{'pointer-events': ((i != 0 && (currentUser.userRole.name === 'ROLE_ENCODER')) ? 'none' : ''),\r\n                  'background-color': ((currentUser.userRole.name === 'ROLE_ENCODER'&&i>0 ? '#beb8b8' : ''))}\"> {{ element?.internalStatus?.replaceAll('_',' ') | uppercase }} </td>\r\n                </ng-container> -->\r\n\r\n    <!-- For ASC Users only -->\r\n    <!-- <ng-container matColumnDef=\"ascStatus\">\r\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> ASC STATUS </th>\r\n                  <td mat-cell *matCellDef=\"let element\" (click)=\"getCompany(element?.id)\"> {{ element?.ascStatus }} </td>\r\n                </ng-container> -->\r\n\r\n    <!-- <ng-container matColumnDef=\"icon\">\r\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> </th>\r\n                  <td mat-cell *matCellDef=\"let element\" class=\"icon\">\r\n                    <button mat-raised-button class=\"button-red\" matTooltip=\"Submit S2 for Clearance\" (click)=\"applyApplicationForToa(element)\" *ngIf=\"currentUser?.userRole?.name=='ROLE_APPLICANT'&&element?.\r\n                    internalStatus=='RE_SUBMITTED_S2_APPLICATION_VERIFIED_BY_AD_SPE' || element?.internalStatus=='S2_APPLICATION_VERIFIED_BY_AD_SPE'\r\n                    || element?.internalStatus=='APPROVED'\">\r\n                      <i class=\"material-icons\">queue_play_next</i>\r\n                    </button> -->\r\n\r\n    <!-- <button mat-raised-button class=\"button-red\" matTooltip=\"Submit For Compliance\" (click)=\"viewApplication(element)\" *ngIf=\"currentUser?.userRole?.name=='ROLE_APPLICANT'&&element?.\r\n                    internalStatus=='RE_SUBMITTED_S2_APPLICATION_VERIFIED_BY_AD_SPE' || element?.internalStatus=='S2_APPLICATION_VERIFIED_BY_AD_SPE'\r\n                    || element?.internalStatus=='APPROVED'\"><i class=\"material-icons color__white\">warning_amber</i>\r\n                    </button> -->\r\n    <!-- </td>\r\n                </ng-container> -->\r\n\r\n\r\n    <!-- <tr mat-header-row *matHeaderRowDef=\"forClearanceDisplayedColumns\"></tr>\r\n                <tr mat-row *matRowDef=\"let row; columns: forClearanceDisplayedColumns;\"></tr>\r\n            </table>\r\n            <div class=\"no-record\" [hidden]=\"forClearanceDataSource && forClearanceDataSource?.data?.length > 0\">\r\n              No record found.\r\n            </div>\r\n            <mat-paginator [pageSizeOptions]=\"[10, 20, 50]\" showFirstLastButtons></mat-paginator>\r\n\r\n          </div>\r\n        </mat-tab> -->\r\n    <!-- </mat-tab-group> -->\r\n");

/***/ }),

/***/ "pvyd":
/*!*********************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/modules/pages/applications/schedule-of-fees/special-applications/modal-special-applications/modal-special-applications.component.html ***!
  \*********************************************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12 title\">\r\n            <mat-label>\r\n                <mat-icon>view_list</mat-icon> <b>Schedule of Fees - Special Application</b>\r\n            </mat-label>\r\n        </div>\r\n    </div>\r\n    <hr>\r\n    <br>\r\n    <div class=\"row col-md-12\">\r\n        <div class=\"row col-md-6\">\r\n            <div>\r\n                <mat-label>Proof of Payment: &nbsp;&nbsp;&nbsp;<span>PDF file only!</span></mat-label><br>\r\n                <input class=\"file-upload\" type=\"file\" [(ngModel)]=\"attachment\" [ngModelOptions]=\"{standalone: true}\"\r\n                    accept=\".pdf\" (change)=\"selectFile($event)\">\r\n            </div>\r\n            <div *ngIf=\"previewDocument===true\">\r\n                <div class=\"file-upload\">\r\n                    <object [data]=\"safeURLProofOfPayment\" type=\"application/pdf\" width=\"100%\" height=\"500\">\r\n                        <iframe [src]=\"safeURLProofOfPayment\" width=\"100%\" height=\"500\">\r\n                            <p>This browser does not support PDF!</p>\r\n                        </iframe>\r\n                    </object>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row col-md-6\">\r\n\r\n            <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n                <mat-label>Reference Code</mat-label>\r\n                <input matInput [value]=\"s2Application?.applicationForm?.referenceCode\" readonly>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n                <mat-label>Advertiser</mat-label>\r\n                <input matInput name=\"companyName\" [value]=\"s2Application?.applicationForm?.company?.companyName\"\r\n                    readonly>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n                <mat-label>Ad Title - Medium (Length)</mat-label>\r\n                <input matInput name=\"refTypeOfMedium\"\r\n                    [value]=\"s2Application?.applicationForm?.adTitle + ' - ' + typeOfMediumDisplay\" readonly>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n                <mat-label>Vatable Sales</mat-label>\r\n                <input matInput class=\"numbers-input\" name=\"amount\"\r\n                    [value]=\"paymentDetails?.basicRate | number : '1.2-2'\" readonly>\r\n            </mat-form-field>\r\n\r\n\r\n            <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n                <mat-label>VAT</mat-label>\r\n                <input matInput class=\"numbers-input\" name=\"amount\" [value]=\"paymentDetails?.vat | number : '1.2-2'\"\r\n                    readonly>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n                <mat-label>Total Sales (VAT Inclusive)</mat-label>\r\n                <input matInput class=\"numbers-input total\" name=\"amount\"\r\n                    [value]=\"paymentDetails?.amountDue | number : '1.2-2'\" readonly>\r\n            </mat-form-field>\r\n\r\n            <hr>\r\n\r\n            <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n                <mat-label>Payment Mode <span class=\"required-field\">\r\n                        <mat-icon>notification_important</mat-icon>\r\n                    </span></mat-label>\r\n                <mat-select [(ngModel)]=\"paymentType\" [ngModelOptions]=\"{standalone: true}\">\r\n                    <mat-option *ngFor=\"let i of paymentTypeList\" [value]=\"i\" name=\"paymentType\">\r\n                        {{i?.paymentDescription | uppercase}}\r\n                    </mat-option>\r\n                </mat-select>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n                <mat-label>Remarks</mat-label>\r\n                <textarea matInput name=\"remarks\" [(ngModel)]=\"payment.remarks\"></textarea>\r\n            </mat-form-field>\r\n\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n        <div class=\"col-md-10\"><span *ngIf=\"paymentType && paymentDetails?.amountDue === 0\">\r\n                <i>Please contact ASC admin to check the Maintenance of Fees.</i></span></div>\r\n        <div class=\"col-md-2\">\r\n            <button mat-raised-button class=\"button-red\"\r\n                [disabled]=\"!paymentType || !previewDocument || paymentDetails?.amountDue === 0\"\r\n                (click)=\"uploadDocument(s2Application)\">\r\n                <i class=\"material-icons color__white\">task_alt</i> SUBMIT\r\n            </button>\r\n        </div>\r\n    </div>\r\n</div>\r\n");

/***/ }),

/***/ "q9/5":
/*!******************************************************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/modules/pages/applications/s2-application/add-s2-application/add-s2-application.component.html ***!
  \******************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<form>\r\n  <div class=\"container-fluid\">\r\n    <!-- <div class=\"spinner\">\r\n      <ngx-spinner bdColor=\"rgba(0, 0, 0, 0.8)\" size=\"large\" color=\"#fff\" type=\"line-spin-fade\" [fullScreen]=\"false\">\r\n        <p> {{spinnerMessage}} </p>\r\n      </ngx-spinner>\r\n    </div> -->\r\n    <!-- <div class=\"row\">\r\n      <div class=\"col-md-12 title\">\r\n        <mat-label>\r\n          <mat-icon>list_alt</mat-icon> S2 APPLICATION\r\n        </mat-label>\r\n      </div>\r\n    </div> -->\r\n    <table>\r\n      <tr>\r\n        <td class=\"details-title\">\r\n          Reference Code:\r\n        </td>\r\n        <td class=\"details\">\r\n          <span>{{ s2Application?.externalStatus=='S2_APPLICATION_REJECTED' ? s2Application?.referenceCodeRejected :\r\n            s2Application?.applicationForm?.referenceCode | uppercase}}</span>\r\n        </td>\r\n        <td>\r\n          <div class=\"action-buttons\">\r\n            <button mat-button class=\"button-red\" (click)=\"accordion.openAll()\">\r\n              <mat-icon>open_in_full</mat-icon>\r\n            </button>\r\n            &nbsp;\r\n            <button mat-button class=\"button-red\" (click)=\"accordion.closeAll()\">\r\n              <mat-icon>close_fullscreen</mat-icon>\r\n            </button>\r\n          </div>\r\n          <button class=\"button-right button-red\" mat-raised-button [routerLink]=\"['/asc/page/application/s2/lists']\">\r\n            <mat-icon>list</mat-icon> VIEW APPLICATIONS\r\n          </button>\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <td class=\"details-title\">\r\n          Status:\r\n        </td>\r\n        <td class=\"details\">\r\n          <span>{{s2Application?.externalStatus?.replaceAll('_',' ') | uppercase}}</span>\r\n        </td>\r\n        <!-- <td class=\"action-buttons\" *ngIf=\"s2Application?.internalStatus=='APPROVED' || s2Application?.internalStatus=='RE_SUBMITTED_S2_APPLICATION_VERIFIED_BY_AD_SPE' || s2Application?.internalStatus=='FOR_CLEARANCE_S2_APPLICATION' ||\r\n        s2Application?.internalStatus=='FOR_CLEARANCE_S2_APPLICATION_VERIFIED_BY_ENCODER'\"><span\r\n            class=\"badge bg-warning text-dark\">\r\n            <i class=\"material-icons\">domain_verification</i> APPLICATION FOR TOA/CLEARANCE</span></td> -->\r\n        <td class=\"action-buttons\" *ngIf=\"s2Application?.amount && s2Application?.submissionType === 'ORIGINAL'\">\r\n          <span class=\"badge bg-warning text-dark\">\r\n            <i class=\"material-icons\">paid</i> {{s2Application?.paymentStatus?.replaceAll('_',' ')}} : ₱ {{ s2Application?.amount }} </span>\r\n        </td>\r\n        <td class=\"action-buttons\" *ngIf=\"s2Application?.specialClearing\">\r\n          <span class=\"badge bg-warning text-dark\">\r\n            <i class=\"material-icons\">domain_verification</i> SPECIAL CLEARING</span>\r\n        </td>\r\n        <td class=\"action-buttons\" *ngIf=\"s2Application?.hasToa\">\r\n          <span class=\"badge bg-warning text-dark\">\r\n            <i class=\"material-icons\">domain_verification</i> Apply for TOA</span>\r\n        </td>\r\n        <td class=\"action-buttons\" *ngIf=\"s2Application?.decisionStatus==='APPROVED'\">\r\n          <span class=\"badge bg-warning text-dark\">\r\n            <i class=\"material-icons\">check</i> Valid Until: {{ s2Application?.validityDate | date:'MM/dd/yyyy'}}</span>\r\n        </td>\r\n      </tr>\r\n    </table>\r\n    <hr>\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12\">\r\n        <button mat-raised-button class=\"button-right button-red\"\r\n          *ngIf=\"(isAdmin || isSuperAdmin || isAdSpecialist) &&\r\n          s2Application?.internalStatus === 'APPROVED'\"\r\n          (click)=\"viewReport(s2Application.id, 'S2_Clearance')\"><i class=\"material-icons color__white\">open_in_new</i> CLEARANCE</button>\r\n\r\n        <button mat-raised-button class=\"button-right button-red\"\r\n          *ngIf=\"(isAdmin || isSuperAdmin || isAdSpecialist) &&\r\n          s2Application?.internalStatus === 'RE_SUBMITTED_S2_APPLICATION_VERIFIED_BY_ENCODER'\"\r\n          (click)=\"viewReport(s2Application.id, 'S2_Clearance')\"><i class=\"material-icons color__white\">open_in_new</i> PENDING FORM</button>\r\n        \r\n        <button mat-raised-button class=\"button-right button-red\" *ngIf=\"(currentUser?.userRole.name === 'ROLE_SUPER_ADMIN' || currentUser?.userRole.name === 'ROLE_ADMIN')\r\n        && (s2Application?.releaseStatus === 'FOR_RELEASE' || s2Application?.releaseStatus === 'RELEASED')\"\r\n          (click)=\"sendDecisionOrStampMaterialManual()\"><i class=\"material-icons color__white\">send</i>\r\n          SEND CLEARANCE OR TOA</button>\r\n      </div>\r\n    </div>\r\n    <form>\r\n      <mat-accordion class=\"headers-align\" multi>\r\n        <mat-expansion-panel>\r\n          <mat-expansion-panel-header>\r\n            <mat-panel-title>\r\n              <mat-icon>label_important</mat-icon> &nbsp;Client Information\r\n            </mat-panel-title>\r\n            <mat-panel-description>\r\n              Affiliation and Company details\r\n              <mat-icon>perm_contact_calendar</mat-icon>\r\n            </mat-panel-description>\r\n          </mat-expansion-panel-header>\r\n          <br>\r\n\r\n          <app-client-information [s2Application]=\"s2Application\">\r\n\r\n          </app-client-information>\r\n\r\n        </mat-expansion-panel>\r\n\r\n\r\n        <mat-expansion-panel>\r\n          <mat-expansion-panel-header>\r\n            <mat-panel-title>\r\n              <mat-icon>label_important</mat-icon> &nbsp;Material Information\r\n            </mat-panel-title>\r\n            <mat-panel-description>\r\n              Ads Details\r\n              <mat-icon>ads_click</mat-icon>\r\n            </mat-panel-description>\r\n          </mat-expansion-panel-header>\r\n          <br>\r\n          <app-material-information [s1Application]=\"s1Application\" [s2Application]=\"s2Application\"\r\n            [originalAttachmentDocuments]=\"originalAttachmentDocuments\" [revisionAttachmentDocuments]=\"revisionAttachmentDocuments\" [complianceAttachmentDocuments]=\"complianceAttachmentDocuments\"\r\n            [selectedMultimediaList]=\"selectedMultimediaList\" [applicationSingleMedia]=\"applicationSingleMedia\">\r\n          </app-material-information>\r\n\r\n        </mat-expansion-panel>\r\n\r\n        <!-- PREVIEW -->\r\n        <mat-expansion-panel [expanded]=\"true\">\r\n          <mat-expansion-panel-header>\r\n            <mat-panel-title>\r\n              <mat-icon>label_important</mat-icon> &nbsp;Final Material\r\n            </mat-panel-title>\r\n            <mat-panel-description>\r\n              Audio, Video, or Layout\r\n              <mat-icon>upload</mat-icon>\r\n            </mat-panel-description>\r\n          </mat-expansion-panel-header>\r\n          <br>\r\n\r\n          <div class=\"row\">\r\n            <div class=\"col-md-12\" appearance=\"outline\">\r\n              <div class=\"row fields\">\r\n                <h4>\r\n                  <i class=\"material-icons\">upload</i> &nbsp;Final Material\r\n                </h4>\r\n                <br>\r\n\r\n                <!-- FOR COMPLIANCE -->\r\n                <div *ngIf=\"s2Application?.internalStatus === 'INCOMPLETE' || s2Application?.internalStatus === 'S2_APPLICATION_REJECTED'\">\r\n                  <div class=\"col-md-12\" appearance=\"outline\">\r\n                    <b>FOR COMPLIANCE</b><br>\r\n                    <mat-label *ngIf=\"tempCompliance?.originalFilename\">Filename: </mat-label>\r\n\r\n                    <input #finalMaterialFileInputC matInput [value]=\"tempCompliance?.originalFilename\"\r\n                      *ngIf=\"tempCompliance?.originalFilename\" disabled>\r\n\r\n                    <input #finalMaterialFileC class=\"file-upload\"\r\n                      *ngIf=\"isApplicant && (s2Application?.decisionStatus === 'INCOMPLETE' || s2Application?.internalStatus === 'S2_APPLICATION_REJECTED')\"\r\n                      type=\"file\" accept=\"video/mp4, audio/mp3, image/jpg, image/jpeg, application/pdf, image/gif\"\r\n                      (change)=\"onAddFile($event)\" [hidden]=\"tempCompliance?.finalMaterialAttachmentReference\"/>\r\n\r\n                  </div>\r\n                  <div class=\"col-md-12\"><br></div>\r\n                  <div class=\"col-md-12\" appearance=\"outline\">\r\n\r\n                    <button mat-raised-button\r\n                      *ngIf=\"tempCompliance?.finalMaterialAttachmentReference\"\r\n                      class=\"button-red button-right\" (click)=\"viewFinalMedia(tempCompliance)\">\r\n                      <i class=\"material-icons color__white\">open_in_new</i> VIEW MATERIAL\r\n                    </button>\r\n                    &nbsp; &nbsp;\r\n                    <button mat-raised-button class=\"button-red button-right\" (click)=\"deleteUploadedFile2(tempCompliance)\"\r\n                      *ngIf=\"isApplicant &&\r\n                      (s2Application?.internalStatus === 'INCOMPLETE' || s2Application?.internalStatus === 'S2_APPLICATION_REJECTED') &&\r\n                      tempCompliance?.finalMaterialAttachmentReference\">\r\n                      <i class=\"material-icons color__white\">delete</i> DELETE ATTACHMENT\r\n                    </button>\r\n                    &nbsp; &nbsp;\r\n                    <button mat-raised-button class=\"button-red button-right\" (click)=\"uploadAudioOrVideo()\"\r\n                    *ngIf=\"isApplicant && safeURLFile\"\r\n                    [hidden]=\"tempCompliance?.finalMaterialAttachmentReference\">\r\n                      <i class=\"material-icons color__white\">upload</i> UPLOAD\r\n                    </button>\r\n                  </div>\r\n                  <div class=\"row\"><br><br></div>\r\n                  <div class=\"row\"><hr></div>\r\n                </div>\r\n                <!-- END OF FOR COMPLIANCE -->\r\n\r\n                <!-- FOR ORIGINAL ONLY -->\r\n                <div class=\"col-md-12\" appearance=\"outline\">\r\n                  <!-- <b>{{s2OriginalAttachmentDocuments[0]?.submissionType | uppercase}}</b><br> -->\r\n                  <mat-label *ngIf=\"s2OriginalAttachmentDocuments[0]?.originalFilename\">Filename: </mat-label>\r\n                  <input #finalMaterialFileInput matInput [value]=\"s2OriginalAttachmentDocuments[0]?.originalFilename\"\r\n                    *ngIf=\"s2OriginalAttachmentDocuments[0]?.originalFilename\" disabled>\r\n\r\n                  <input #finalMaterialFile class=\"file-upload\"\r\n                    *ngIf=\"isApplicant&&(s2Application?.internalStatus==='SAVED'||s2Application?.internalStatus==='INCOMPLETE'||s2Application?.internalStatus==='S2_APPLICATION_REJECTED')\"\r\n                    type=\"file\" accept=\"video/mp4, audio/mp3, image/jpg, image/jpeg, application/pdf, image/gif\"\r\n                    (change)=\"onAddFile($event)\" [hidden]=\"s2Application?.decisionStatus === 'INCOMPLETE' || s2Application?.finalMaterialAttachmentReference\"/>\r\n                </div>\r\n                <div class=\"col-md-12\"><br></div>\r\n                <div class=\"col-md-12\" appearance=\"outline\"\r\n                  *ngIf=\"isShowUploadButton||s2Application?.decisionStatus === 'INCOMPLETE'\">\r\n                  <button mat-raised-button\r\n                    *ngIf=\"s2Application?.finalMaterialAttachmentReference || s2Application?.internalStatus==='INCOMPLETE'||s2Application?.internalStatus==='S2_APPLICATION_REJECTED'\"\r\n                    class=\"button-red button-right\" (click)=\"viewFinalMedia(s2OriginalAttachmentDocuments[0])\">\r\n                    <i class=\"material-icons color__white\">open_in_new</i> VIEW MATERIAL\r\n                  </button>\r\n                  &nbsp; &nbsp;\r\n                  <button mat-raised-button class=\"button-red button-right\" (click)=\"deleteUploadedFile2(s2OriginalAttachmentDocuments[0])\"\r\n                    *ngIf=\"isApplicant &&\r\n                    (s2Application?.internalStatus==='SAVED' || s2Application?.internalStatus==='INCOMPLETE'||s2Application?.internalStatus==='S2_APPLICATION_REJECTED') &&\r\n                    s2Application?.finalMaterialAttachmentReference\"\r\n                    [hidden]=\"s2Application?.decisionStatus === 'INCOMPLETE'\">\r\n                    <i class=\"material-icons color__white\">delete</i> DELETE ATTACHMENT\r\n                  </button>\r\n                  &nbsp; &nbsp;\r\n                  <button mat-raised-button class=\"button-red button-right\" (click)=\"uploadAudioOrVideo()\" *ngIf=\"isApplicant &&\r\n                    (s2Application?.internalStatus==='SAVED' || s2Application?.internalStatus==='INCOMPLETE'||s2Application?.internalStatus==='S2_APPLICATION_REJECTED') &&\r\n                    !s2Application?.finalMaterialAttachmentReference\">\r\n                    <i class=\"material-icons color__white\">upload</i> UPLOAD\r\n                  </button>\r\n                </div>\r\n                <!-- END OF ORIGINAL ONLY -->\r\n\r\n                <div class=\"col-md-12\"><br></div>\r\n\r\n                <!---------- EXISTING COMPLIANCE ---------->\r\n                <div *ngIf=\"s2Application?.decisionStatus === 'INCOMPLETE'\">\r\n                  <div class=\"row\"><hr></div>\r\n                      <h4>\r\n                        <i class=\"material-icons\">bookmark</i> &nbsp;ATTACHMENTS FOR COMPLIANCE\r\n                      </h4>\r\n                      <br>\r\n                      <div class=\"row\" *ngFor=\"let i of s2ComplianceAttachmentDocuments; let index = index\">\r\n                        <div *ngIf=\"i !== null\">\r\n                          <div class=\"col-md-12\" appearance=\"outline\">\r\n                            <mat-label *ngIf=\"i?.originalFilename\">Filename: </mat-label>\r\n                            <input #mainInput matInput [value]=\"i?.originalFilename\" disabled *ngIf=\"i?.originalFilename\"><br>\r\n                          </div>\r\n\r\n                          <div class=\"row\"><br></div>\r\n                          <div class=\"col-md-12\" appearance=\"outline\">\r\n                            <button mat-raised-button class=\"button-red button-right\" (click)=\"viewFinalMedia(i)\">\r\n                              <i class=\"material-icons add-document\">open_in_new</i> VIEW DOCUMENT\r\n                            </button>\r\n                            &nbsp; &nbsp;\r\n                            <button mat-raised-button class=\"button-red button-right\" (click)=\"deleteUploadedFile2(i)\" *ngIf=\"i?.status === 'UNPROCESSED'\">\r\n                              <i class=\"material-icons add-document\">delete</i> DELETE ATTACHMENT\r\n                            </button>\r\n                            &nbsp; &nbsp;\r\n                          </div>\r\n                          <div class=\"col-md-12\"><br></div>\r\n                          <div class=\"col-md-12\">\r\n                            <hr>\r\n                          </div>\r\n                      </div>\r\n                    </div>\r\n                  <div class=\"no-record\" *ngIf=\"(s2ComplianceAttachmentDocuments?.length === 0 && s2ComplianceAttachmentDocuments[0]?.originalFilename === undefined) || s2ComplianceAttachmentDocuments?.length===null\">\r\n                    No existing attachments for compliance.\r\n                  </div>\r\n                </div>\r\n           </div>\r\n\r\n              <!-- /////////////////////////////// -->\r\n\r\n              <!-- FOR AD SPE - S2 APP -->\r\n              <!-- <mat-form-field class=\"col-md-6\" appearance=\"outline\">\r\n                <mat-label>Valid Until</mat-label>\r\n                <input type=\"tel\" matInput placeholder=\"Search\">\r\n                <mat-icon matSuffix>calendar_today</mat-icon>\r\n              </mat-form-field> -->\r\n            </div>\r\n          </div>\r\n\r\n        </mat-expansion-panel>\r\n\r\n\r\n        <!--\r\n\r\n          SUPPORT DOCUMENT\r\n          -->\r\n          <mat-expansion-panel [expanded]=\"true\">\r\n            <mat-expansion-panel-header>\r\n              <mat-panel-title>\r\n                <mat-icon>label_important</mat-icon> &nbsp;Support Document\r\n              </mat-panel-title>\r\n              <mat-panel-description>\r\n                PDF\r\n                <mat-icon>upload</mat-icon>\r\n              </mat-panel-description>\r\n            </mat-expansion-panel-header>\r\n            <br>\r\n\r\n          \r\n            <app-attachment-document [s1Application]=\"s1Application\" [labelMainDocument]=\"'Support Document'\"\r\n            [isAscUser]=\"isAscUser\"  [s2Appplication]=\"s2Application\" \r\n            [complianceAttachmentDocuments]=\"complianceAttachmentDocuments\" [s2SupportAttchmentDocuments]=\"originalAttachmentDocuments\" [s2DocObservable]=\"s2OriginalAttachmentObservable\"\r\n            [applicationStage]=\"applicationStage\" [S2SupportDoc]=\"true\"></app-attachment-document>\r\n \r\n                      <!-- \r\n    \r\n                        START UPLOAD SUPPORTING\r\n    \r\n    \r\n                       -->\r\n    \r\n\r\n        </mat-expansion-panel>\r\n          <!-- END SUPPORT -->\r\n\r\n        \r\n        <app-comment *ngIf=\"!isApplicant\" [commentS2Application]=\"s2Application\">\r\n        </app-comment>\r\n      </mat-accordion>\r\n\r\n      <!-- ATTACHMENTS FOR STAMPED MATERIAL AND DECISION FORM -->\r\n      <div *ngIf=\"(isAdmin || isSuperAdmin || isApplicant || isAdSpecialist) && previewAttachmentsList.length\">\r\n        <br>\r\n        <div class=\"row fields\">\r\n          <h4>\r\n            <i class=\"material-icons\">label_important</i> &nbsp;Clearance and TOA\r\n          </h4>\r\n          <br>\r\n          <app-preview-attachments [previewAttachmentsList]=\"previewAttachmentsList\"\r\n            [displayedColumns]=\"previewAttachmentsDisplayedColumns\"\r\n            [dataSource]=\"previewAttachmentsListDataSource\"></app-preview-attachments>\r\n          <div class=\"row\"><br></div>\r\n        </div>\r\n      </div>\r\n\r\n    </form>\r\n\r\n    <hr>\r\n\r\n    <!-- For adSpe only -->\r\n    <div class=\"row\" [hidden]=\"s2Application?.internalStatus === 'RE_SUBMITTED_S2_APPLICATION_VERIFIED_BY_AD_SPE' ||\r\n    s2Application?.internalStatus === 'S2_APPLICATION_VERIFIED_BY_AD_SPE'\" [formGroup]=\"s2ApplicationForm\">\r\n      <mat-form-field class=\"col-md-6\" appearance=\"outline\" *ngIf=\"isAdSpecialist || (isAdSpecialist && s2Application?.hasOngoingAppeal)\">\r\n        <mat-label>Decision:</mat-label>\r\n        <mat-select (selectionChange)=\"setDecisionStatus($event.value)\" name=\"decisionStatus\"\r\n          formControlName=\"decisionStatus\">\r\n          <mat-option value=\"APPROVED\">APPROVED</mat-option>\r\n          <mat-option *ngIf=\"s2Application?.internalStatus !='FOR_CLEARANCE_S2_APPLICATION_VERIFIED_BY_ENCODER'\"\r\n            value=\"INCOMPLETE\">INCOMPLETE</mat-option>\r\n          <mat-option value=\"DISAPPROVED\">DISAPPROVED</mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n      <mat-form-field class=\"col-md-6\" appearance=\"outline\"\r\n        *ngIf=\"isAdSpecialist &&\r\n        s2Application?.internalStatus != 'FOR_CLEARANCE_S2_APPLICATION_VERIFIED_BY_ENCODER' && decisionStatus === 'APPROVED'\">\r\n        <mat-label>Choose validity date</mat-label>\r\n        <input matInput placeholder=\"Date\" [matDatepicker]=\"validityDate\" readonly [min]=\"todayDate\"\r\n          [(ngModel)]=\"s2Application.validityDate\" name=\"expiresOn\" formControlName=\"validityDate\" [readonly]=\"true\">\r\n        <mat-datepicker-toggle matSuffix [for]=\"validityDate\">\r\n          <mat-datepicker color=\"warn\" #validityDate></mat-datepicker>\r\n        </mat-datepicker-toggle>\r\n      </mat-form-field>\r\n\r\n      <div class=\"row\" *ngIf=\"rationaleLists?.length > 0 || rationaleOthersList?.length > 0\" [hidden]=\"rationaleLists?.length === 0 && rationaleOthersList.length === 0\">\r\n        <div class=\"col-md-6 rationale\">\r\n          <label>RATIONALE</label>\r\n          <div class=\"rationale-list\" *ngIf=\"rationaleLists.length > 0\">\r\n            <label>Rationale List:</label>\r\n            <div *ngFor=\"let i of rationaleLists\">\r\n              <p><span class=\"material-icons\">help</span> {{i?.typeOfRationale?.rationale}}</p>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"rational-other-comment\" *ngIf=\"rationaleOthersList?.length > 0\">\r\n            <label>Other comments:</label>\r\n            <div *ngFor=\"let i of rationaleOthersList\">\r\n              <p><span class=\"material-icons\">help</span> {{i?.others}}</p>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n\r\n    <br>\r\n    <div class=\"row\">\r\n      <b\r\n        *ngIf=\"isAdSpecialist && s2Application?.decisionStatus === 'APPROVED' && s2Application?.validityDate === null\"><b\r\n          class=\"material-icons\">error_outline</b> Note: To submit approve application, please add validity\r\n        date.</b><br>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col\">\r\n        <!-- ORIGINAL -->\r\n        <button *ngIf=\"s2Application?.decisionStatus !== 'INCOMPLETE' && s2Application?.internalStatus !== 'S2_APPLICATION_REJECTED'\"\r\n          mat-raised-button class=\"button-red\" (click)=\"saveStatus()\" [hidden]=\"\r\n          s2Application?.internalStatus === 'RE_SUBMITTED_S2_APPLICATION_VERIFIED_BY_AD_SPE' ||\r\n          s2Application?.internalStatus === 'S2_APPLICATION_VERIFIED_BY_AD_SPE' || s2Application?.internalStatus === 'APPROVED' ||\r\n          s2Application?.internalStatus == 'FOR_CLEARANCE_S2_APPLICATION' || s2Application?.internalStatus == 'FOR_CLEARANCE_S2_APPLICATION_VERIFIED_BY_ENCODER' ||\r\n          s2Application?.internalStatus == 'FOR_CLEARANCE_S2_APPLICATION_VERIFIED_BY_AD_SPE' ||\r\n          s2Application?.hasOngoingAppeal\"\r\n          [disabled]=\"s2Application?.finalMaterialAttachmentReference === null ||\r\n          (isAdSpecialist && s2Application?.decisionStatus === 'APPROVED' && s2Application?.validityDate === null)\">\r\n\r\n          <div\r\n            *ngIf=\"isApplicant&&(s2Application?.internalStatus==='SAVED')\">\r\n            <i class=\"material-icons\">verified</i> SUBMIT\r\n          </div>\r\n          <div *ngIf=\"isEvaluator\"><i class=\"material-icons\">verified</i> FORWARD TO\r\n            AD SPECIALIST</div>\r\n          <div *ngIf=\"isAdSpecialist\"><i class=\"material-icons\">check</i> SUBMIT\r\n          </div>\r\n        </button>\r\n\r\n        <!-- INCOMPLETE -->\r\n        <button mat-raised-button *ngIf=\"s2Application?.decisionStatus ==='INCOMPLETE' || s2Application?.decisionStatus === 'S2_APPLICATION_REJECTED'\" class=\"button-red\"\r\n          (click)=\"saveStatusForCompliance()\"\r\n          [disabled]=\"!s2Application?.decisionStatus ||\r\n          (isAdSpecialist && decisionStatus === '') ||\r\n          (isAdSpecialist && decisionStatus === 'APPROVED' && s2Application?.validityDate === null) ||\r\n          (isAdSpecialist && (decisionStatus === 'INCOMPLETE' || decisionStatus === 'DISAPPROVED') && rationaleLists.length === 0 && rationaleOthersList.length === 0)\">\r\n          <div *ngIf=\"isApplicant\"\r\n            [hidden]=\"s2Application?.decisionStatus !== 'INCOMPLETE' || s2Application?.internalStatus === 'RE_SUBMITTED_S2_APPLICATION' || s2Application?.internalStatus ==='RE_SUBMITTED_S2_APPLICATION_VERIFIED_BY_ENCODER'\">\r\n            <i class=\"material-icons\">fact_check</i> SUBMIT FOR COMPLIANCE\r\n          </div>\r\n          <div *ngIf=\"isEvaluator\"><i class=\"material-icons\">fact_check</i> FORWARD\r\n            TO AD SPECIALIST FOR COMPLIANCE</div>\r\n          <div *ngIf=\"isAdSpecialist\"><i class=\"material-icons\">fact_check</i>\r\n            SUBMIT COMPLIANCE</div>\r\n        </button>\r\n\r\n        <button mat-raised-button\r\n          *ngIf=\"isEvaluator && s2Application?.internalStatus != 'FOR_CLEARANCE_S2_APPLICATION'\"\r\n          class=\"button-red\" (click)=\"rejectDisapprovedModal('encoder', 'reject', 'S2 APPLICATION REJECTED')\">\r\n          <i class=\"material-icons color__white\">cancel</i> REJECT\r\n        </button>\r\n\r\n        <!-- ADMIN / SUPERADMIN - RELEASED -->\r\n        <button mat-raised-button class=\"button-red\" (click)=\"submitAppeal()\"  *ngIf=\"(isAdmin || isSuperAdmin) &&\r\n        s2Application?.externalStatus === 'APPROVED' && s1Application?.releaseStatus === 'RELEASED' &&\r\n        !s1Application?.hasOngoingCompliance && !s1Application?.hasOngoingAppeal\">\r\n          <i class=\"material-icons color__white\">report_gmailerrorred</i> &nbsp;RETURN TO ADSPE FOR APPEAL\r\n        </button>\r\n\r\n        <!-- APPEAL - ADSPE -->\r\n        <button mat-raised-button class=\"button-red\" (click)=\"submitAppeal()\"  *ngIf=\"isAdSpecialist && s2Application?.hasOngoingAppeal\">\r\n          <i class=\"material-icons color__white\">report_gmailerrorred</i> &nbsp;VERIFY APPEAL\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- <div class=\"row\">\r\n      <div class=\"col\">\r\n        <button mat-raised-button *ngIf=\"s2Application?.internalStatus == 'APPROVED' ||\r\n         s2Application?.internalStatus == 'RE_SUBMITTED_S2_APPLICATION_VERIFIED_BY_AD_SPE' ||\r\n         s2Application?.internalStatus == 'FOR_CLEARANCE_S2_APPLICATION' ||\r\n         s2Application?.internalStatus == 'FOR_CLEARANCE_S2_APPLICATION_VERIFIED_BY_ENCODER' \" class=\"button-red\"\r\n          (click)=\"saveStatusForClearance()\" [hidden]=\"\">\r\n          <div *ngIf=\"isApplicant\"><i class=\"material-icons\">fact_check</i> SUBMIT\r\n            APPLICATION FOR CLEARANCE</div>\r\n          <div *ngIf=\"isEvaluator\"><i class=\"material-icons\">fact_check</i> FORWARD\r\n            TO AD SPECIALIST FOR CLEARANCE</div>\r\n          <div *ngIf=\"isAdSpecialist\"><i class=\"material-icons\">fact_check</i>\r\n            SUBMIT CLEARANCE</div>\r\n        </button>\r\n        <button mat-raised-button\r\n          *ngIf=\"isEvaluator && s2Application?.internalStatus == 'FOR_CLEARANCE_S2_APPLICATION'\"\r\n          class=\"button-red\" (click)=\"rejectApplication()\">\r\n          <i class=\"material-icons color__white\">cancel</i> REJECT\r\n        </button>\r\n      </div>\r\n    </div> -->\r\n\r\n    <!-- <div class=\"row\">\r\n      <div class=\"col\">\r\n        <button mat-raised-button\r\n          *ngIf=\"isApplicant && s2Application?.internalStatus == 'APPROVED' || s2Application?.internalStatus == 'RE_SUBMITTED_S2_APPLICATION_VERIFIED_BY_AD_SPE'\"\r\n          [hidden]=\"isAdSpecialist\" class=\"button-red\"\r\n          (click)=\"applyApplicationForClearance()\">\r\n          <i class=\"material-icons color__white\">fact_check</i> APPLY FOR TOA\r\n        </button>\r\n      </div>\r\n    </div> -->\r\n\r\n  </div>\r\n</form>\r\n");

/***/ }),

/***/ "qF+f":
/*!***************************************************************************************************!*\
  !*** ./src/app/modules/pages/applications/attachment-document/attachment-document.component.scss ***!
  \***************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("form textarea {\n  height: 5em;\n  padding-left: 10px;\n}\nform mat-icon {\n  margin: auto;\n}\nform .badge {\n  font-size: 15px;\n  margin-bottom: 10px;\n}\nform label {\n  font-weight: 600;\n  padding-left: 5px;\n  margin-bottom: 5px;\n}\nform .comment {\n  border: 1px solid rgba(128, 128, 128, 0.521);\n  border-radius: 10px;\n  padding: 10px;\n  box-shadow: 10px 10px 11px -7px rgba(0, 0, 0, 0.31);\n  -webkit-box-shadow: 10px 10px 11px -7px rgba(0, 0, 0, 0.31);\n  -moz-box-shadow: 10px 10px 11px -7px rgba(0, 0, 0, 0.31);\n  margin: 2px;\n  padding-bottom: 10px;\n}\nform .comment-list {\n  border-radius: 10px;\n  height: auto;\n  overflow-x: hidden;\n  min-height: 10vh;\n  max-height: 60vh;\n}\nform .comment-list .comments {\n  border: 1px solid rgba(128, 128, 128, 0.473);\n  padding: 10px 10px;\n  border-radius: 10px;\n}\nform .comment-list .username-content {\n  color: #006cfa;\n  font-weight: 500;\n  padding-left: 10px;\n}\nform .comment-list .username-content b {\n  color: gray;\n  font-weight: 500;\n  line-height: 0px;\n}\nform .comment-list .username-content .modified-action {\n  color: #006cfa;\n  font-size: 12px;\n  font-weight: 400;\n  margin-left: 2px;\n}\nform .comment-list .comment-content {\n  padding: 0px 10px;\n}\nform .comment-list .comment-content .inner-html {\n  height: auto;\n}\nform .comment-list .time-content {\n  padding-left: 10px;\n  color: gray;\n  padding-bottom: 0px;\n}\nform .comment-list .action-icon {\n  display: flex;\n  flex-direction: row;\n}\nform .comment-list .action-icon .a-icon {\n  display: inline;\n  /* the default for span */\n  width: 7%;\n}\nform .comment-list .action-icon .a-icon i {\n  font-size: 20px;\n}\nform .comment-list .action-icon .a-icon {\n  cursor: pointer;\n}\nhr {\n  color: rgba(128, 128, 128, 0.753);\n  opacity: 1;\n}\n.header {\n  margin-top: 100px;\n  text-align: center;\n  margin-bottom: 40px;\n}\n.html-header {\n  margin: 15px 0 5px;\n}\n.mat-tab {\n  padding: 20px;\n}\n.add-document {\n  color: white;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9wYWdlcy9hcHBsaWNhdGlvbnMvYXR0YWNobWVudC1kb2N1bWVudC9hdHRhY2htZW50LWRvY3VtZW50LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNJO0VBQ0ksV0FBQTtFQUNBLGtCQUFBO0FBQVI7QUFFSTtFQUNJLFlBQUE7QUFBUjtBQUVJO0VBQ0ksZUFBQTtFQUNBLG1CQUFBO0FBQVI7QUFFSTtFQUNJLGdCQUFBO0VBQ0EsaUJBQUE7RUFDQSxrQkFBQTtBQUFSO0FBR0k7RUFDSSw0Q0FBQTtFQUNBLG1CQUFBO0VBRUEsYUFBQTtFQUNBLG1EQUFBO0VBQ0EsMkRBQUE7RUFDQSx3REFBQTtFQUNBLFdBQUE7RUFDQSxvQkFBQTtBQUZSO0FBSUk7RUFFSSxtQkFBQTtFQUdBLFlBQUE7RUFDQSxrQkFBQTtFQUNBLGdCQUFBO0VBQ0EsZ0JBQUE7QUFMUjtBQU1RO0VBQ0ksNENBQUE7RUFDQSxrQkFBQTtFQUNBLG1CQUFBO0FBSlo7QUFPUTtFQUNJLGNBQUE7RUFDQSxnQkFBQTtFQUNBLGtCQUFBO0FBTFo7QUFPWTtFQUNJLFdBQUE7RUFDQSxnQkFBQTtFQUNBLGdCQUFBO0FBTGhCO0FBT1k7RUFHSSxjQUFBO0VBQ0EsZUFBQTtFQUNBLGdCQUFBO0VBQ0EsZ0JBQUE7QUFQaEI7QUFVUTtFQUNJLGlCQUFBO0FBUlo7QUFTWTtFQUNJLFlBQUE7QUFQaEI7QUFlUTtFQUNJLGtCQUFBO0VBQ0EsV0FBQTtFQUNBLG1CQUFBO0FBYlo7QUFnQlE7RUFDSSxhQUFBO0VBQ0EsbUJBQUE7QUFkWjtBQWVZO0VBQ0ksZUFBQTtFQUFpQix5QkFBQTtFQUNqQixTQUFBO0FBWmhCO0FBYWdCO0VBQ0ksZUFBQTtBQVhwQjtBQWNZO0VBQ0ksZUFBQTtBQVpoQjtBQWtCQTtFQUNJLGlDQUFBO0VBQ0EsVUFBQTtBQWZKO0FBbUJBO0VBQ0ksaUJBQUE7RUFDQSxrQkFBQTtFQUNBLG1CQUFBO0FBaEJKO0FBa0JFO0VBQ0Usa0JBQUE7QUFmSjtBQW1CQTtFQUNJLGFBQUE7QUFoQko7QUFtQkE7RUFDRSxZQUFBO0FBaEJGIiwiZmlsZSI6InNyYy9hcHAvbW9kdWxlcy9wYWdlcy9hcHBsaWNhdGlvbnMvYXR0YWNobWVudC1kb2N1bWVudC9hdHRhY2htZW50LWRvY3VtZW50LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiZm9ybXtcclxuICAgIHRleHRhcmVhe1xyXG4gICAgICAgIGhlaWdodDogNWVtO1xyXG4gICAgICAgIHBhZGRpbmctbGVmdDogMTBweDtcclxuICAgIH1cclxuICAgIG1hdC1pY29ue1xyXG4gICAgICAgIG1hcmdpbjogYXV0bztcclxuICAgIH1cclxuICAgIC5iYWRnZXtcclxuICAgICAgICBmb250LXNpemU6IDE1cHg7XHJcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMTBweDtcclxuICAgIH1cclxuICAgIGxhYmVse1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiA2MDA7XHJcbiAgICAgICAgcGFkZGluZy1sZWZ0OiA1cHg7XHJcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogNXB4O1xyXG4gICAgfVxyXG5cclxuICAgIC5jb21tZW50e1xyXG4gICAgICAgIGJvcmRlcjogMXB4IHNvbGlkIHJnYmEoMTI4LCAxMjgsIDEyOCwgMC41MjEpO1xyXG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XHJcbiAgICAgICAgLy8gcGFkZGluZy10b3A6IDEwcHg7XHJcbiAgICAgICAgcGFkZGluZzogMTBweDtcclxuICAgICAgICBib3gtc2hhZG93OiAxMHB4IDEwcHggMTFweCAtN3B4IHJnYmEoMCwwLDAsMC4zMSk7XHJcbiAgICAgICAgLXdlYmtpdC1ib3gtc2hhZG93OiAxMHB4IDEwcHggMTFweCAtN3B4IHJnYmEoMCwwLDAsMC4zMSk7XHJcbiAgICAgICAgLW1vei1ib3gtc2hhZG93OiAxMHB4IDEwcHggMTFweCAtN3B4IHJnYmEoMCwwLDAsMC4zMSk7XHJcbiAgICAgICAgbWFyZ2luOiAycHg7XHJcbiAgICAgICAgcGFkZGluZy1ib3R0b206IDEwcHg7XHJcbiAgICB9XHJcbiAgICAuY29tbWVudC1saXN0e1xyXG4gICAgICAgIC8vIGJvcmRlcjogMnB4IHNvbGlkIHJnYmEoMTI4LCAxMjgsIDEyOCwgMC4zOTcpO1xyXG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XHJcbiAgICAgICAgLy8gcGFkZGluZzogMWVtIDFlbTtcclxuICAgICAgICAvLyBvdmVyZmxvdzogc2Nyb2xsO1xyXG4gICAgICAgIGhlaWdodDogYXV0bztcclxuICAgICAgICBvdmVyZmxvdy14OiBoaWRkZW47XHJcbiAgICAgICAgbWluLWhlaWdodDogMTB2aDtcclxuICAgICAgICBtYXgtaGVpZ2h0OiA2MHZoO1xyXG4gICAgICAgIC5jb21tZW50c3tcclxuICAgICAgICAgICAgYm9yZGVyOiAxcHggc29saWQgcmdiYSgxMjgsIDEyOCwgMTI4LCAwLjQ3Myk7XHJcbiAgICAgICAgICAgIHBhZGRpbmc6IDEwcHggMTBweDtcclxuICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogMTBweDtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC51c2VybmFtZS1jb250ZW50e1xyXG4gICAgICAgICAgICBjb2xvcjogcmdiKDAsIDEwOCwgMjUwKTtcclxuICAgICAgICAgICAgZm9udC13ZWlnaHQ6IDUwMDtcclxuICAgICAgICAgICAgcGFkZGluZy1sZWZ0OiAxMHB4O1xyXG4gICAgICAgICAgICAvLyBsaW5lLWhlaWdodDogMnB4O1xyXG4gICAgICAgICAgICBie1xyXG4gICAgICAgICAgICAgICAgY29sb3I6IGdyYXk7XHJcbiAgICAgICAgICAgICAgICBmb250LXdlaWdodDogNTAwO1xyXG4gICAgICAgICAgICAgICAgbGluZS1oZWlnaHQ6IDBweDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAubW9kaWZpZWQtYWN0aW9ue1xyXG4gICAgICAgICAgICAgICAgLy8gdGV4dC1hbGlnbjogZW5kO1xyXG4gICAgICAgICAgICAgICAgLy8gcGFkZGluZy1sZWZ0OiAycHg7XHJcbiAgICAgICAgICAgICAgICBjb2xvcjogcmdiKDAsIDEwOCwgMjUwKTtcclxuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMTJweDtcclxuICAgICAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiA0MDA7XHJcbiAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogMnB4O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC5jb21tZW50LWNvbnRlbnR7XHJcbiAgICAgICAgICAgIHBhZGRpbmc6IDBweCAxMHB4O1xyXG4gICAgICAgICAgICAuaW5uZXItaHRtbHtcclxuICAgICAgICAgICAgICAgIGhlaWdodDogYXV0bztcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICB9XHJcbiAgICAgICAgLmNvbW1lbnQtY29udGVudDpob3ZlcntcclxuICAgICAgICAgICAgLy8gY3Vyc29yOiBwb2ludGVyO1xyXG5cclxuICAgICAgICB9XHJcbiAgICAgICAgLnRpbWUtY29udGVudHtcclxuICAgICAgICAgICAgcGFkZGluZy1sZWZ0OiAxMHB4O1xyXG4gICAgICAgICAgICBjb2xvcjogZ3JheTtcclxuICAgICAgICAgICAgcGFkZGluZy1ib3R0b206IDBweDtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC5hY3Rpb24taWNvbntcclxuICAgICAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IHJvdztcclxuICAgICAgICAgICAgLmEtaWNvbntcclxuICAgICAgICAgICAgICAgIGRpc3BsYXk6IGlubGluZTsgLyogdGhlIGRlZmF1bHQgZm9yIHNwYW4gKi9cclxuICAgICAgICAgICAgICAgIHdpZHRoOiA3JTtcclxuICAgICAgICAgICAgICAgIGl7XHJcbiAgICAgICAgICAgICAgICAgICAgZm9udC1zaXplOiAyMHB4O1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIC5hLWljb257XHJcbiAgICAgICAgICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuXHJcbmhye1xyXG4gICAgY29sb3I6IHJnYmEoMTI4LCAxMjgsIDEyOCwgMC43NTMpO1xyXG4gICAgb3BhY2l0eTogMTtcclxufVxyXG5cclxuXHJcbi5oZWFkZXIge1xyXG4gICAgbWFyZ2luLXRvcDogMTAwcHg7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBtYXJnaW4tYm90dG9tOiA0MHB4O1xyXG4gIH1cclxuICAuaHRtbC1oZWFkZXIge1xyXG4gICAgbWFyZ2luOiAxNXB4IDAgNXB4O1xyXG4gIH1cclxuXHJcblxyXG4ubWF0LXRhYntcclxuICAgIHBhZGRpbmc6IDIwcHg7XHJcbn1cclxuXHJcbi5hZGQtZG9jdW1lbnQge1xyXG4gIGNvbG9yOiB3aGl0ZTtcclxufVxyXG5cclxuXHJcbiJdfQ== */");

/***/ }),

/***/ "qfXM":
/*!*********************************************************************!*\
  !*** ./src/app/core/models/media-models/multimedia-moving.const.ts ***!
  \*********************************************************************/
/*! exports provided: MultiMediaMovingConstant */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MultiMediaMovingConstant", function() { return MultiMediaMovingConstant; });
class MultiMediaMovingConstant {
    constructor() {
        this.data = new Array();
        this.data = [{
                id: 0,
                multimediaMovingMedium: 'cinema',
                hasSelected: false,
            },
            {
                id: 1,
                multimediaMovingMedium: 'collaterals',
                hasSelected: false,
            },
            {
                id: 2,
                multimediaMovingMedium: 'digital video',
                hasSelected: false,
            },
            {
                id: 3,
                multimediaMovingMedium: 'e-ooh',
                hasSelected: false,
            },
            {
                id: 4,
                multimediaMovingMedium: 'television',
                hasSelected: false,
            }
        ];
    }
}


/***/ }),

/***/ "rNDJ":
/*!*****************************************************!*\
  !*** ./src/app/modules/pages/applications/index.ts ***!
  \*****************************************************/
/*! exports provided: ClientInformationComponent, MaterialInformationComponent, PreviewApplicationComponent, AddS1ApplicationComponent, ListS1ApplicationComponent, ListS1Dialog, AddS2ApplicationComponent, ListS2ApplicationComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _client_information_client_information_component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./client-information/client-information.component */ "p0Tr");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ClientInformationComponent", function() { return _client_information_client_information_component__WEBPACK_IMPORTED_MODULE_0__["ClientInformationComponent"]; });

/* harmony import */ var _material_information_material_information_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./material-information/material-information.component */ "xetz");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MaterialInformationComponent", function() { return _material_information_material_information_component__WEBPACK_IMPORTED_MODULE_1__["MaterialInformationComponent"]; });

/* harmony import */ var _preview_application_preview_application_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./preview-application/preview-application.component */ "3aNq");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PreviewApplicationComponent", function() { return _preview_application_preview_application_component__WEBPACK_IMPORTED_MODULE_2__["PreviewApplicationComponent"]; });

/* harmony import */ var _s1_application_add_s1_application_add_s1_application_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./s1-application/add-s1-application/add-s1-application.component */ "sojo");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AddS1ApplicationComponent", function() { return _s1_application_add_s1_application_add_s1_application_component__WEBPACK_IMPORTED_MODULE_3__["AddS1ApplicationComponent"]; });

/* harmony import */ var _s1_application_list_s1_application_list_s1_application_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./s1-application/list-s1-application/list-s1-application.component */ "toVP");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ListS1ApplicationComponent", function() { return _s1_application_list_s1_application_list_s1_application_component__WEBPACK_IMPORTED_MODULE_4__["ListS1ApplicationComponent"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ListS1Dialog", function() { return _s1_application_list_s1_application_list_s1_application_component__WEBPACK_IMPORTED_MODULE_4__["ListS1Dialog"]; });

/* harmony import */ var _s2_application_add_s2_application_add_s2_application_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./s2-application/add-s2-application/add-s2-application.component */ "aVd4");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AddS2ApplicationComponent", function() { return _s2_application_add_s2_application_add_s2_application_component__WEBPACK_IMPORTED_MODULE_5__["AddS2ApplicationComponent"]; });

/* harmony import */ var _s2_application_list_s2_application_list_s2_application_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./s2-application/list-s2-application/list-s2-application.component */ "mp9u");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ListS2ApplicationComponent", function() { return _s2_application_list_s2_application_list_s2_application_component__WEBPACK_IMPORTED_MODULE_6__["ListS2ApplicationComponent"]; });










/***/ }),

/***/ "sZG+":
/*!**********************************************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/modules/fragments/update-special-application/update-special-application.component.html ***!
  \**********************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<form>\r\n  <div class=\"container-fluid\">\r\n    <div class=\"row title\">\r\n      <div class=\"col-md-12\">\r\n        <table>\r\n          <tr>\r\n            <td *ngIf=\"(s1Application?.status!=undefined&&!isAscUser)||isAscUser\">\r\n              <span>\r\n                Status:\r\n              </span>\r\n            </td>\r\n            <td *ngIf=\"(s1Application?.status !== undefined && !isAscUser) || isAscUser\">\r\n              <span *ngIf=\"s1Application?.status !== undefined && !isAscUser\">\r\n                <b>{{s1Application?.status?.replaceAll('_',' ') | uppercase}}</b>\r\n              </span>\r\n              <span *ngIf=\"isAscUser\">\r\n                <b>{{s1Application?.status?.replaceAll('_',' ') | uppercase}}</b>\r\n              </span>\r\n            </td>\r\n            <td class=\"no-border\">\r\n              <button\r\n                class=\"button-right button-red\"\r\n                mat-raised-button\r\n                (click)=\"dialogRef.close()\"\r\n              >\r\n                <i class=\"material-icons color__white\">list</i> VIEW APPLICATIONS\r\n              </button>\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td class=\"no-border\"></td>\r\n          </tr>\r\n        </table>\r\n\r\n        <hr />\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"row\"><br /></div>\r\n    <div class=\"row\">\r\n      <mat-form-field class=\"col-md-6\" appearance=\"outline\">\r\n        <mat-label>Form Type</mat-label>\r\n        <input matInput [value]=\"formType\" readonly />\r\n      </mat-form-field>\r\n\r\n      <mat-form-field class=\"col-md-6\" appearance=\"outline\">\r\n        <mat-label>Application Type</mat-label>\r\n        <input matInput [value]=\"s1Application?.applicationType?.description\" readonly/>\r\n      </mat-form-field>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n      <mat-accordion class=\"headers-align\" multi>\r\n        <mat-expansion-panel\r\n          [expanded]=\"\r\n            (currentUser?.userRole?.name == 'ROLE_APPLICANT' &&\r\n              s1Application?.internalStatus != 'SAVED') ||\r\n            s1Application?.internalStatus == undefined\r\n              ? true\r\n              : false\r\n          \"\r\n          *ngIf=\"\r\n            (currentUser?.userRole?.name == 'ROLE_APPLICANT' &&\r\n              s1Application?.internalStatus == 'SAVED') ||\r\n            currentUser?.userRole?.name != 'ROLE_APPLICANT' ||\r\n            s1Application?.internalStatus == undefined\r\n          \"\r\n        >\r\n          <mat-expansion-panel-header>\r\n            <mat-panel-title>\r\n              <i class=\"material-icons\">label_important</i> &nbsp;Initial\r\n              Information\r\n            </mat-panel-title>\r\n          </mat-expansion-panel-header>\r\n          <br />\r\n\r\n          <app-client-information\r\n            [s1Application]=\"s1Application\"\r\n            [isAscUser]=\"isAscUser\"\r\n            [isDisableFieldOnUpdate]=\"isDisableFieldOnUpdate\"\r\n            [company]=\"company\"\r\n          ></app-client-information>\r\n\r\n\r\n          <div class=\"row\">\r\n            <mat-form-field class=\"col-md-6\" appearance=\"outline\">\r\n              <mat-label>Ad Title</mat-label>\r\n              <input matInput [value]=\"s1Application?.adTitle\" readonly />\r\n            </mat-form-field>\r\n\r\n            <mat-form-field class=\"col-md-6\" appearance=\"outline\">\r\n              <mat-label>Tag Line</mat-label>\r\n              <input matInput [value]=\"s1Application?.tagLine\" readonly />\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"outline\" class=\"col-md-6\">\r\n              <mat-label>Date of Submission</mat-label>\r\n              <input matInput placeholder=\"Date\" readonly\r\n                [value]=\"s1Application?.submissionDate | date: 'MMMM d, y'\"\r\n                name=\"submissionDate\" *ngIf=\"s1Application?.status !== 'DISAPPROVED'\"/>\r\n                <input matInput placeholder=\"Date\" readonly\r\n                  value=\"N/A - Request was disapproved\"\r\n                  name=\"submissionDate\" *ngIf=\"s1Application?.status === 'DISAPPROVED'\"/>\r\n            </mat-form-field>\r\n          </div>\r\n        </mat-expansion-panel>\r\n\r\n        <!-- FOR Admin Users only -->\r\n        <mat-expansion-panel *ngIf=\"currentUser?.userRole?.name === 'ROLE_ADMIN' || currentUser?.userRole?.name === 'ROLE_SUPER_ADMIN' \">\r\n          <mat-expansion-panel-header>\r\n            <mat-panel-title>\r\n              <i class=\"material-icons\">label_important</i> &nbsp;Presentor Information\r\n            </mat-panel-title>\r\n            <mat-panel-description>\r\n              Personal Details\r\n              <i class=\"material-icons\">person</i>\r\n            </mat-panel-description>\r\n          </mat-expansion-panel-header>\r\n\r\n          <br>\r\n          <div class=\"row\">\r\n            <div class=\"row\">\r\n              <!-- <mat-form-field class=\"col-md-4\" appearance=\"outline\">\r\n                <mat-label>Membership Affiliation</mat-label>\r\n                <input matInput [value]=\"s1Application?.company?.membersAffiliation?.description\" readonly>\r\n              </mat-form-field> -->\r\n              <mat-form-field class=\"col-md-7\" appearance=\"outline\">\r\n                <mat-label>Company Name</mat-label>\r\n                <input matInput [value]=\"s1Application?.company?.companyName\" readonly>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"row\"><br></div>\r\n\r\n            <div class=\"row\">\r\n              <mat-form-field class=\"col-md-11\" appearance=\"outline\">\r\n                <mat-label>Address</mat-label>\r\n                <input matInput [value]=\"s1Application?.company?.completeAddress\" readonly>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"row\"><br></div>\r\n\r\n            <div class=\"row\">\r\n              <mat-form-field class=\"col-md-8\" appearance=\"outline\" *ngIf=\"s1Application.id!= null\">\r\n                <mat-label>Name of Applicant</mat-label>\r\n                <input matInput [value]=\"s1Application?.applicationOwner?.firstName+' '+s1Application?.applicationOwner?.lastName\" readonly>\r\n              </mat-form-field>\r\n\r\n              <!-- <mat-form-field class=\"col-md-8\" appearance=\"outline\" *ngIf=\"currentUser?.userRole?.name =='ROLE_ENCODER' && s1Application.id!= null\">\r\n                <mat-label>Name of Applicant</mat-label>\r\n                <input matInput [value]=\"s1Application?.firstName+' '+s1Application?.lastName\" readonly>\r\n              </mat-form-field> -->\r\n\r\n            </div>\r\n\r\n            <div class=\"row\"><br></div>\r\n\r\n            <div class=\"row\">\r\n              <mat-form-field class=\"col-md-4\" appearance=\"outline\" *ngIf=\"s1Application.id!= null\">\r\n                <mat-label>Mobile Number</mat-label>\r\n                <input matInput [value]=\"s1Application?.applicationOwner?.mobileNumber\" readonly>\r\n              </mat-form-field>\r\n              <mat-form-field class=\"col-md-3\" appearance=\"outline\" *ngIf=\"s1Application.id!= null\">\r\n                <mat-label>Telephone Number</mat-label>\r\n                <input matInput [value]=\"s1Application?.company?.companyTelephoneNo\" readonly>\r\n              </mat-form-field>\r\n              <mat-form-field class=\"col-md-4\" appearance=\"outline\" *ngIf=\"s1Application.id!= null\">\r\n                <mat-label>Email Address</mat-label>\r\n                <input matInput [value]=\"s1Application?.applicationOwner?.username\" readonly>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n          </div>\r\n        </mat-expansion-panel>\r\n      </mat-accordion>\r\n\r\n      <div class=\"row\"><br /></div>\r\n      <hr />\r\n\r\n      <br />\r\n      <!-- //////////////////////////////////////// ACTION BUTTONS //////////////////////////////////////////////////////////// -->\r\n      <div\r\n        class=\"row\"\r\n        *ngIf=\"s1Application?.status === 'FOR_APPROVAL' && isAscUser\"\r\n      >\r\n        <div mat-dialog-actions>\r\n          <div class=\"dialog-button-content\" align=\"end\">\r\n            <button class=\"confirm\" (click)=\"onApproveOrDisapprove()\">\r\n              <i class=\"material-icons color__white\">thumb_up_alt</i> Approve\r\n            </button>\r\n            <button class=\"warn\" (click)=\"onApproveOrDisapprove('DISAPPROVED')\">\r\n              <i class=\"material-icons color__white\">thumb_down_alt</i> Disapprove\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</form>\r\n");

/***/ }),

/***/ "sojo":
/*!**************************************************************************************************************!*\
  !*** ./src/app/modules/pages/applications/s1-application/add-s1-application/add-s1-application.component.ts ***!
  \**************************************************************************************************************/
/*! exports provided: AddS1ApplicationComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AddS1ApplicationComponent", function() { return AddS1ApplicationComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "mrSG");
/* harmony import */ var _raw_loader_add_s1_application_component_html__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! raw-loader!./add-s1-application.component.html */ "ItcL");
/* harmony import */ var _add_s1_application_component_scss__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./add-s1-application.component.scss */ "Cdxb");
/* harmony import */ var app_core_models_counter__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! app/core/models/counter */ "x25a");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var _models__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @models */ "sKXY");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/forms */ "3Pt+");
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! sweetalert2 */ "PSD3");
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(sweetalert2__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _shared__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @shared */ "M0ag");
/* harmony import */ var _services__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @services */ "dJ3e");
/* harmony import */ var _angular_material_expansion__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular/material/expansion */ "7EHt");
/* harmony import */ var _client_information_client_information_component__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../client-information/client-information.component */ "p0Tr");
/* harmony import */ var _material_information_material_information_component__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../material-information/material-information.component */ "xetz");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @angular/router */ "tyNb");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @angular/common */ "ofXK");
/* harmony import */ var _core_models_application_single_media_model__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../../../../core/models/application-single-media.model */ "XLGj");
/* harmony import */ var _preview_application_preview_application_component__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../preview-application/preview-application.component */ "3aNq");
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @angular/platform-browser */ "jhN1");
/* harmony import */ var app_core_models_multiple_application_model__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! app/core/models/multiple-application.model */ "0jzb");
/* harmony import */ var ngx_spinner__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ngx-spinner */ "JqCM");
/* harmony import */ var app_core_models_application_request_model__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! app/core/models/application-request.model */ "an1Z");
/* harmony import */ var app_modules_fragments_reject_disapproved_reason_reject_disapproved_reason_component__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! app/modules/fragments/reject-disapproved-reason/reject-disapproved-reason.component */ "2CCT");
/* harmony import */ var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! @angular/material/dialog */ "0IaG");
/* harmony import */ var _performance_metrics_performance_metrics_component__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ../../performance-metrics/performance-metrics.component */ "xq5V");
/* harmony import */ var app_modules_fragments_incomplete_disapproved_rationale_incomplete_disapproved_rationale_component__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! app/modules/fragments/incomplete-disapproved-rationale/incomplete-disapproved-rationale.component */ "CDuV");
/* harmony import */ var app_core_models_report_model__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! app/core/models/report.model */ "za27");
/* harmony import */ var app_core_models_rationale_model__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! app/core/models/rationale.model */ "551E");
/* harmony import */ var app_core_services_common_services_service__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! app/core/services/common-services.service */ "Iws0");
/* harmony import */ var _angular_material_table__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! @angular/material/table */ "+0xr");
/* harmony import */ var _angular_material_snack_bar__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! @angular/material/snack-bar */ "dNgK");
/* harmony import */ var date_fns__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! date-fns */ "b/SL");
/* harmony import */ var _angular_material_datepicker__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! @angular/material/datepicker */ "iadO");
































var activeHolidayDates = [];
var activeWeekendDates = [];
let AddS1ApplicationComponent = class AddS1ApplicationComponent {
    constructor(apiService, sweetAlertService, dataStorage, route, router, sanitizer, datepipe, spinner, cd, dialog, commonServices, _snackBar) {
        this.apiService = apiService;
        this.sweetAlertService = sweetAlertService;
        this.dataStorage = dataStorage;
        this.route = route;
        this.router = router;
        this.sanitizer = sanitizer;
        this.datepipe = datepipe;
        this.spinner = spinner;
        this.cd = cd;
        this.dialog = dialog;
        this.commonServices = commonServices;
        this._snackBar = _snackBar;
        // @ViewChild(AttachmentDocumentComponent, { static: false }) materialAttachmentDocument: AttachmentDocumentComponent;
        this.exportTime = { hour: 0, minute: 0, meriden: "AM", format: 12 };
        this.title = "ASC Online System";
        this.s1Application = new _models__WEBPACK_IMPORTED_MODULE_5__["S1Application"]();
        this.multipleApplication = new app_core_models_multiple_application_model__WEBPACK_IMPORTED_MODULE_18__["MultipleApplication"]();
        this.applicationRequest = new app_core_models_application_request_model__WEBPACK_IMPORTED_MODULE_20__["ApplicationRequest"]();
        this.company = new _models__WEBPACK_IMPORTED_MODULE_5__["Company"]();
        this.applicationSingleMedia = new _core_models_application_single_media_model__WEBPACK_IMPORTED_MODULE_15__["ApplicationSingleMedia"]();
        this.presentorDetails = new _models__WEBPACK_IMPORTED_MODULE_5__["UserAccount"]();
        this.report = new app_core_models_report_model__WEBPACK_IMPORTED_MODULE_25__["Report"]();
        this.rationale = new app_core_models_rationale_model__WEBPACK_IMPORTED_MODULE_26__["Rationale"]();
        this.affiliationList = [];
        this.companyList = [];
        this.isNewCompany = false;
        this.showCompanyAddress = false;
        this.formTypeList = [..._shared__WEBPACK_IMPORTED_MODULE_8__["FORM_TYPE"]];
        this.specialApplicationType = [..._shared__WEBPACK_IMPORTED_MODULE_8__["SPECIAL_APPLICATION"]];
        this.applicationTypeList = [];
        this.attachmentDocuments = {};
        this.originalAttachmentDocuments = [];
        this.revisionAttachmentDocuments = [];
        this.complianceAttachmentDocuments = [];
        this.supportiveDocumentList = [];
        this.multimediaStaticList = [];
        this.selectedMultimediaList = [];
        this.multimediaMovingList = [];
        this.screenerList = [];
        this.reviewerList = [];
        this.applicantList = [];
        this.mediaTypeListTemp = [];
        this.rationaleOthersList = [];
        this.rationaleLists = [];
        this.adSpecialistList = [];
        this.applicationSingleMediaTemp = new _core_models_application_single_media_model__WEBPACK_IMPORTED_MODULE_15__["ApplicationSingleMedia"]();
        this.payment = new _models__WEBPACK_IMPORTED_MODULE_5__["Payment"]();
        this.currentSizeLengthMultimedia = [];
        this.toDeleteMultimediaList = [];
        this.hasMultimediaLengthToEnableSubmit = false;
        this.disableSubmitButtonByMedia = false;
        this.hasErrorsClient = false;
        this.badgeCounter = new app_core_models_counter__WEBPACK_IMPORTED_MODULE_3__["BadgeCounnter"]();
        this.isChecked = false;
        this.isAscUser = false;
        this.isDisableFieldOnUpdate = false;
        this.isSubmit = false;
        this.noDocumentAttached = true;
        this.accordionDisable = false;
        this.accordionExpanded = false;
        this.validationMessage = "";
        this.buttonDisabled = true;
        this.adSpecButtonDisabled = true;
        this.rationaleDisplay = false;
        this.submissionType = _shared__WEBPACK_IMPORTED_MODULE_8__["SUBMISSION_TYPE"].ORIGINAL;
        this.maxSizeLength = 1000;
        this.ascUserRoleList = [
            ..._shared__WEBPACK_IMPORTED_MODULE_8__["ROLES"].filter((role) => role.ascUser === true).map((role) => role.role),
        ];
        this.todayDate = new Date();
        this.isSuperAdmin = false;
        this.isAdmin = false;
        this.isAccounting = false;
        this.isApplicant = false;
        this.isEvaluator = false;
        this.isAdSpecialist = false;
        this.isScreener = false;
        this.isReviewer = false;
        this.previewAttachmentsList = [];
        this.previewAttachmentsDisplayedColumns = [
            "decisionFormFilename",
            "viewDecisionFormIcon",
            "stampMaterialFilename",
            "viewStampMaterialIcon",
        ];
        this.activeHolidayDates = [];
        this.activeWeekendDates = [];
    }
    ngOnInit() {
        if (this.todayDate.getDay() === 0 || this.todayDate.getDay() === 6) {
            this.todayDate = Object(date_fns__WEBPACK_IMPORTED_MODULE_30__["nextMonday"])(this.todayDate);
        }
        if (this.dataStorage.getS1FormAndAppType()) {
            this.s1Application.formType = this.dataStorage.getS1FormAndAppType().formType;
            this.getApplicationTypeList(this.s1Application.formType);
            this.s1Application.applicationType = this.dataStorage.getS1FormAndAppType().appType;
        }
        if (this.dataStorage.getS1Application()) {
            this.s1Application = this.dataStorage.getS1Application();
        }
        if (this.dataStorage.getSpecialS1Application()) {
            this.applicationRequest = this.dataStorage.getSpecialS1Application();
            this.s1Application.formType = "INDIVIDUAL";
            this.s1Application.submissionDate = this.applicationRequest.submissionDate;
            if (this.s1Application.submissionDate) {
                this.isChecked = true;
                this.s1Application.autoSubmit = true;
            }
        }
        this.setFormValidator();
        this.currentUser = this.dataStorage.getUserAccount();
        this.currentUserRole = this.currentUser.userRole.name;
        this.initUserRole();
        this.id = Number(this.route.snapshot.paramMap.get("id"));
        if (this.id !== 0) {
            this.viewApplication();
        }
        this.multipleId = Number(this.route.snapshot.paramMap.get("multipleId"));
        const ctr = Number(this.route.snapshot.paramMap.get("nextSequence"));
        if (this.multipleId !== 0) {
            this.spinner.show();
            this.apiService
                .findById(_shared__WEBPACK_IMPORTED_MODULE_8__["ENDPOINTS"].multipleApplication, this.multipleId)
                .subscribe((res) => {
                this.s1Application.multipleApplication = res.responseData.data;
                this.s1Application.applicationType = this.s1Application.multipleApplication.applicationType;
                this.s1Application.adTitle = this.s1Application.multipleApplication.adTitle;
                this.s1Application.brand = this.s1Application.multipleApplication.brand;
                this.s1Application.product = this.s1Application.multipleApplication.product;
                // this.s1Application.category = this.s1Application.multipleApplication.category;
                this.s1Application.company = this.s1Application.multipleApplication.company;
                this.s1Application.submissionDate = this.s1Application.multipleApplication.dateOfSubmission;
                this.s1Application.autoSubmit = true;
                // this.s1Application.membersAffiliation = this.s1Application.multipleApplication.membersAffiliation;
                this.s1Application.tagLine = this.s1Application.multipleApplication.tagLine;
                this.s1Application.formType = _shared__WEBPACK_IMPORTED_MODULE_8__["APPFORM_TYPE"].MULTIPLE;
                this.s1Application.sequenceOrder = ctr;
                this.spinner.hide();
            }, (err) => {
                this.spinner.hide();
            });
        }
        this.isAscUser = this.ascUserRoleList.includes(this.dataStorage.getUserRole());
        // this.s1Application.autoSubmit = false;
        // this.s1Application.autoSubmitTime = 0;
        // determines if the field will be enabled/disabled on update of s1 app
        this.isDisableFieldOnUpdate =
            _shared__WEBPACK_IMPORTED_MODULE_8__["ROLES"].filter((res) => res.disableFieldOnUpdate === true && res.role === this.currentUserRole).length > 0 && this.id > 0
                ? true
                : false;
        setTimeout(() => {
            this.spinner.hide();
        }, 1);
        if (this.currentUserRole === _shared__WEBPACK_IMPORTED_MODULE_8__["USER_ROLES"].ROLE_ENCODER) {
            this.accordionDisable = false;
            this.getUserTypeForList();
        }
        this.checkSingleMediaChanges();
        this.getAllActiveHolidays();
        this.getAllActiveWeekends();
    }
    matCalendarDateFilter(that) {
        return (date) => {
            return !that.isDateHoliday(date, that) && date.getDay() !== 7;
        };
    }
    initUserRole() {
        if (this.currentUser.userRole.name === _shared__WEBPACK_IMPORTED_MODULE_8__["USER_ROLES"].ROLE_SUPER_ADMIN) {
            this.isSuperAdmin = true;
        }
        else if (this.currentUser.userRole.name === _shared__WEBPACK_IMPORTED_MODULE_8__["USER_ROLES"].ROLE_ADMIN) {
            this.isAdmin = true;
        }
        else if (this.currentUser.userRole.name === _shared__WEBPACK_IMPORTED_MODULE_8__["USER_ROLES"].ROLE_ACCOUNTING) {
            this.isAccounting = true;
        }
        else if (this.currentUser.userRole.name === _shared__WEBPACK_IMPORTED_MODULE_8__["USER_ROLES"].ROLE_APPLICANT) {
            this.isApplicant = true;
        }
        else if (this.currentUser.userRole.name === _shared__WEBPACK_IMPORTED_MODULE_8__["USER_ROLES"].ROLE_SCREENER) {
            this.isScreener = true;
        }
        else if (this.currentUser.userRole.name === _shared__WEBPACK_IMPORTED_MODULE_8__["USER_ROLES"].ROLE_REVIEWER) {
            this.isReviewer = true;
        }
        else if (this.currentUser.userRole.name === _shared__WEBPACK_IMPORTED_MODULE_8__["USER_ROLES"].ROLE_AD_SPECIALIST) {
            this.isAdSpecialist = true;
        }
        else if (this.currentUser.userRole.name === _shared__WEBPACK_IMPORTED_MODULE_8__["USER_ROLES"].ROLE_ENCODER) {
            this.isEvaluator = true;
        }
    }
    ngAfterViewInit() {
        this.checkSingleMediaChanges();
        // this.checkMultimediaChanges();
    }
    ngAfterViewChecked() {
        var _a;
        if (this.applicationSingleMedia) {
            this.checkSingleMediaChanges();
        }
        if (((_a = this.materialInformation) === null || _a === void 0 ? void 0 : _a.newMultimediaList.length) ||
            this.multimediaMovingList.length) {
            // this.checkMultimediaChanges();
        }
        this.cd.detectChanges();
    }
    getScreenerAssignedAppCount(id) {
        return 0;
    }
    ngOnDestroy() {
        sessionStorage.removeItem("FORM_TYPE");
        sessionStorage.removeItem("APP_TYPE");
        sessionStorage.removeItem("NUMBER_OF_APPLICATIONS");
        sessionStorage.removeItem("S1_APPLICATION");
        sessionStorage.removeItem("MULTIPLE_S1_APPLICATION");
        sessionStorage.removeItem("SPECIAL_S1_APPLICATIONS");
        sessionStorage.removeItem("AMOUNT");
        // alert('destroy')
        // const formAndAppType = {
        //   formType: '',
        //   appType: []
        // }
        // this.dataStorage.setRequestFormAndAppType(formAndAppType);
    }
    checkInactiveAffiliation() {
        this.isInactiveAffiliation = this.clientInformation.isInactiveAffiliation;
    }
    viewApplication() {
        this.spinner.show();
        this.apiService.findById(_shared__WEBPACK_IMPORTED_MODULE_8__["ENDPOINTS"].applicationForm, this.id).subscribe((res) => {
            var _a;
            this.s1Application = res.responseData.data;
            if (this.s1Application) {
                console.log("View App: ", this.s1Application);
                this.getApplicationTypeList(this.s1Application.formType);
                this.setAppType(this.s1Application.applicationType);
                this.clientInformation.s1Application = this.s1Application;
                this.materialInformation.s1Application = this.s1Application;
                this.setApplicationStage();
                this.fetchMultimedia();
                if (this.s1Application.refTypeOfMedium === _shared__WEBPACK_IMPORTED_MODULE_8__["TYPE_OF_MEDIUM"].SINGLE_MEDIA) {
                    this.getApplicationSingleMedia();
                }
                else if (this.s1Application.refTypeOfMedium ===
                    _shared__WEBPACK_IMPORTED_MODULE_8__["TYPE_OF_MEDIUM"].MULTIMEDIA_MOVING) {
                    this.getMultimediaMoving();
                }
                else if (this.s1Application.refTypeOfMedium ===
                    _shared__WEBPACK_IMPORTED_MODULE_8__["TYPE_OF_MEDIUM"].MULTIMEDIA_STATIC) {
                    this.getMultimediaStatic();
                }
                if (this.s1Application.autoSubmit) {
                    this.scheduleSubmission();
                    this.onChangeDate(this.s1Application.submissionDate);
                }
                if (this.currentUser.userRole.name !== _shared__WEBPACK_IMPORTED_MODULE_8__["USER_ROLES"].ROLE_APPLICANT) {
                    this.getPresentorDetails();
                }
                if (this.s1Application.mainAttachmentReference ||
                    this.s1Application.supportingAttachmentReference ||
                    this.s1Application.revisionLetterAttachmentReference) {
                    this.getAttachmentDocuments();
                }
                if (this.currentUserRole === _shared__WEBPACK_IMPORTED_MODULE_8__["USER_ROLES"].ROLE_AD_SPECIALIST ||
                    this.currentUserRole === _shared__WEBPACK_IMPORTED_MODULE_8__["USER_ROLES"].ROLE_SCREENER ||
                    this.currentUserRole === _shared__WEBPACK_IMPORTED_MODULE_8__["USER_ROLES"].ROLE_REVIEWER) {
                    this.getUserTypeForList();
                }
                if ((this.s1Application.decisionStatus === "INCOMPLETE" ||
                    this.s1Application.decisionStatus === "DISAPPROVED" ||
                    this.s1Application.decisionStatus ===
                        _shared__WEBPACK_IMPORTED_MODULE_8__["APP_DECISION_STATUS"].APPROVED ||
                    this.s1Application.decisionStatus ===
                        _shared__WEBPACK_IMPORTED_MODULE_8__["APP_DECISION_STATUS"].APPROVED_WITH_CAUTION) &&
                    this.currentUserRole === _shared__WEBPACK_IMPORTED_MODULE_8__["USER_ROLES"].ROLE_SCREENER) {
                    // if ((this.s1Application.internalStatus === APPLICATION_STATUS_FOR_COMPLIANCE.COMPLIANCE_DOCUMENT_VERIFIED_BY_AD_SPE ||
                    //   this.s1Application.internalStatus === APPLICATION_STATUS_FOR_COMPLIANCE.COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER)) {
                    //     // this.dataStorage.setDecisionStatus(this.s1Application.decisionStatus);
                    //     // if(this.rationaleLists.length <= 0){
                    //     //   this.s1Application.decisionStatus = "";
                    //     //   alert("BLANK")
                    //     // }else{
                    //     //   this.s1Application.decisionStatus = this.dataStorage.getDecisionStatus();
                    //     // }
                    // }
                    if (this.s1Application.internalStatus ===
                        _shared__WEBPACK_IMPORTED_MODULE_8__["APPLICATION_STATUS_FOR_COMPLIANCE"].COMPLIANCE_DOCUMENT_VERIFIED_BY_AD_SPE ||
                        this.s1Application.internalStatus ===
                            _shared__WEBPACK_IMPORTED_MODULE_8__["APPLICATION_STATUS_REVISION"].REVISION_VERIFIED_BY_AD_SPE) {
                        if (this.rationaleOthersList || this.rationaleLists) {
                            this.getRationaleList();
                        }
                        // alert(this.dataStorage.getDecisionStatus())
                        if (this.dataStorage.getDecisionStatus()) {
                            this.s1Application.decisionStatus = this.dataStorage.getDecisionStatus();
                        }
                        // if (this.s1Application.decisionStatus === APP_DECISION_STATUS.INCOMPLETE ||
                        //   this.s1Application.decisionStatus === APP_DECISION_STATUS.DISAPPROVED) {
                        // this.getRationaleList();
                        // alert('KHFDSKF')
                        // console.log("HIIAHIIHIFDIFS", this.rationaleLists);
                        // }
                    }
                }
                if (this.isAdmin ||
                    this.isSuperAdmin ||
                    this.isApplicant ||
                    this.isAdSpecialist) {
                    this.apiService
                        .findByParam(_shared__WEBPACK_IMPORTED_MODULE_8__["ENDPOINTS"].stampedMaterialAndDecisionForms, (_a = this.s1Application) === null || _a === void 0 ? void 0 : _a.appFormReference)
                        .subscribe((previewAttachmentsData) => {
                        this.previewAttachmentsList =
                            previewAttachmentsData.responseData.data;
                        this.previewAttachmentsListDataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_28__["MatTableDataSource"](this.previewAttachmentsList);
                    });
                }
                console.log("VIEW APP FORM: ", this.s1Application);
                setTimeout(() => {
                    this.spinner.hide();
                }, 1);
                if (this.s1Application.externalStatus) {
                    this.accordionDisable = false;
                }
            }
        }, (err) => {
            this.spinner.hide();
        });
    }
    setApplicationStage() {
        this.clientInformation.applicationStage = _shared__WEBPACK_IMPORTED_MODULE_8__["APPLICATION_STAGE"].S1_APPLICATION;
        this.materialInformation.applicationStage =
            _shared__WEBPACK_IMPORTED_MODULE_8__["APPLICATION_STAGE"].S1_APPLICATION;
    }
    getPresentorDetails() {
        this.apiService
            .findByParam(_shared__WEBPACK_IMPORTED_MODULE_8__["ENDPOINTS"].userLogin, this.s1Application.applicationOwner.username)
            .subscribe((res) => {
            if (res.responseData.data) {
                this.presentorDetails = res.responseData.data;
            }
        }, (err) => { });
    }
    getApplicationSingleMedia() {
        this.apiService
            .findByParam(_shared__WEBPACK_IMPORTED_MODULE_8__["ENDPOINTS"].applicationSingleMedia, `app-form-reference/${this.s1Application.appFormReference}`)
            .subscribe((res) => {
            if (res.responseData.data.length > 0) {
                this.applicationSingleMedia = res.responseData.data[0];
                if (this.currentUser.userRole.name === _shared__WEBPACK_IMPORTED_MODULE_8__["USER_ROLES"].ROLE_APPLICANT &&
                    this.s1Application.externalStatus === _shared__WEBPACK_IMPORTED_MODULE_8__["APPLICATION_STATUS"].SAVED) {
                    this.materialInformation.applicationSingleMedia = this.applicationSingleMedia;
                }
                if (this.currentUser.userRole.name === _shared__WEBPACK_IMPORTED_MODULE_8__["USER_ROLES"].ROLE_APPLICANT) {
                    this.previewApplication.applicationSingleMedia = this.applicationSingleMedia;
                }
                this.currentSizeLength = this.applicationSingleMedia.sizeLength;
                console.log("view applicationSingleMedia: ", this.applicationSingleMedia);
            }
            else {
                this.applicationSingleMedia = new _core_models_application_single_media_model__WEBPACK_IMPORTED_MODULE_15__["ApplicationSingleMedia"]();
            }
        }, (err) => {
            this.applicationSingleMedia = new _core_models_application_single_media_model__WEBPACK_IMPORTED_MODULE_15__["ApplicationSingleMedia"]();
        });
    }
    getMultimediaStatic() {
        this.apiService
            .findByParam(_shared__WEBPACK_IMPORTED_MODULE_8__["ENDPOINTS"].applicationMultimedia, `app-form-reference/${this.s1Application.appFormReference}`)
            .subscribe((res) => {
            if (res.responseData.data.length > 0) {
                this.multimediaStaticList = res.responseData.data;
                if (this.currentUser.userRole.name === _shared__WEBPACK_IMPORTED_MODULE_8__["USER_ROLES"].ROLE_APPLICANT &&
                    this.s1Application.externalStatus === _shared__WEBPACK_IMPORTED_MODULE_8__["APPLICATION_STATUS"].SAVED) {
                    this.materialInformation.selectedMultimediaList = this.multimediaStaticList;
                }
                if (this.currentUser.userRole.name === _shared__WEBPACK_IMPORTED_MODULE_8__["USER_ROLES"].ROLE_APPLICANT) {
                    this.previewApplication.multimediaStaticList = this.multimediaStaticList;
                }
                console.log("view multimediaStaticList: ", this.multimediaStaticList);
                this.selectedMultimediaList = this.multimediaStaticList;
            }
            else {
                this.multimediaStaticList = [];
            }
        }, (err) => {
            // this.multimediaStaticList = [];
        });
    }
    getMultimediaMoving() {
        this.apiService
            .findByParam(_shared__WEBPACK_IMPORTED_MODULE_8__["ENDPOINTS"].applicationMultimedia, `app-form-reference/${this.s1Application.appFormReference}`)
            .subscribe((res) => {
            if (res.responseData.data.length > 0) {
                this.multimediaMovingList = res.responseData.data;
                this.currentSizeLengthMultimedia = this.multimediaMovingList.map((mappedMultimedia) => ({
                    multimediaSizeLength: mappedMultimedia.multimediaSizeLength,
                    typeOfMedium: mappedMultimedia.typeOfMedium.description,
                }));
                if (this.currentUser.userRole.name === _shared__WEBPACK_IMPORTED_MODULE_8__["USER_ROLES"].ROLE_APPLICANT &&
                    this.s1Application.externalStatus === _shared__WEBPACK_IMPORTED_MODULE_8__["APPLICATION_STATUS"].SAVED) {
                    this.materialInformation.selectedMultimediaList = this.multimediaMovingList;
                }
                if (this.currentUser.userRole.name === _shared__WEBPACK_IMPORTED_MODULE_8__["USER_ROLES"].ROLE_APPLICANT) {
                    this.previewApplication.multimediaMovingList = this.multimediaMovingList;
                }
                console.log("view multimediaMovingList: ", this.multimediaMovingList);
                this.selectedMultimediaList = this.multimediaMovingList;
            }
            else {
                this.multimediaMovingList = [];
            }
        }, (err) => {
            this.multimediaMovingList = [];
        });
    }
    getAttachmentDocuments() {
        this.apiService
            .findAll(_shared__WEBPACK_IMPORTED_MODULE_8__["ENDPOINTS"].attachmentDocumentByAppFormReference +
            this.s1Application.appFormReference)
            .subscribe((res) => {
            this.attachmentDocuments = res.responseData.data;
            if (this.attachmentDocuments &&
                this.attachmentDocuments.originalAttachmentDocuments.length !== 0) {
                if (this.attachmentDocuments.originalAttachmentDocuments.length === 1 &&
                    this.attachmentDocuments.originalAttachmentDocuments[0].attachmentType.includes("SUPPORTIVE")) {
                    this.attachmentDocuments.originalAttachmentDocuments[0] = null;
                    this.attachmentDocuments.originalAttachmentDocuments[1] = this.attachmentDocuments[0];
                }
                if (this.attachmentDocuments.originalAttachmentDocuments.length === 2) {
                    const mainDoc = this.attachmentDocuments.originalAttachmentDocuments.filter((data) => (data === null || data === void 0 ? void 0 : data.attachmentType) === _shared__WEBPACK_IMPORTED_MODULE_8__["ATTACHMENT_TYPE"].MAIN)[0];
                    const suppDoc = this.attachmentDocuments.originalAttachmentDocuments.filter((data) => (data === null || data === void 0 ? void 0 : data.attachmentType) === _shared__WEBPACK_IMPORTED_MODULE_8__["ATTACHMENT_TYPE"].SUPPORTIVE)[0];
                    this.attachmentDocuments.originalAttachmentDocuments[0] = mainDoc;
                    this.attachmentDocuments.originalAttachmentDocuments[1] = suppDoc;
                }
            }
            // this.revisionLetterAttachment = this.attachmentDocuments.filter(data =>
            //   data?.attachmentType === ATTACHMENT_TYPE.REVISION_LETTER)[0];
            this.originalAttachmentDocuments = this.attachmentDocuments.originalAttachmentDocuments;
            this.revisionAttachmentDocuments = this.attachmentDocuments.revisionAttachmentDocuments;
            this.complianceAttachmentDocuments = this.attachmentDocuments.complianceAttachmentDocuments;
            if (this.currentUser.userRole.name === _shared__WEBPACK_IMPORTED_MODULE_8__["USER_ROLES"].ROLE_APPLICANT &&
                this.s1Application.externalStatus === _shared__WEBPACK_IMPORTED_MODULE_8__["APPLICATION_STATUS"].SAVED) {
                this.materialInformation.originalAttachmentDocuments = this.attachmentDocuments.originalAttachmentDocuments;
                this.materialInformation.revisionAttachmentDocuments = this.attachmentDocuments.revisionAttachmentDocuments;
                this.materialInformation.complianceAttachmentDocuments = this.attachmentDocuments.complianceAttachmentDocuments;
            }
            if (this.currentUser.userRole.name === _shared__WEBPACK_IMPORTED_MODULE_8__["USER_ROLES"].ROLE_APPLICANT) {
                this.previewApplication.originalAttachmentDocuments = this.attachmentDocuments.originalAttachmentDocuments;
                this.previewApplication.revisionAttachmentDocuments = this.attachmentDocuments.revisionAttachmentDocuments;
                this.previewApplication.complianceAttachmentDocuments = this.attachmentDocuments.complianceAttachmentDocuments;
            }
            console.log("view attachmentDocuments: ", this.attachmentDocuments);
            // check if there's supporting doc
            if (this.s1Application.supportingAttachmentReference) {
                this.getSupportiveDocuments();
            }
        });
        // Fetch payment details
        if (this.s1Application.paymentAttachmentReference !== null) {
            this.viewPayment();
        }
    }
    viewPayment() {
        this.apiService
            .findByParam(_shared__WEBPACK_IMPORTED_MODULE_8__["ENDPOINTS"].payment, `app-form-reference/${this.s1Application.appFormReference}`)
            .subscribe((res) => {
            if (res.responseData.data) {
                this.payment = res.responseData.data;
                this.apiService
                    .findByParam(_shared__WEBPACK_IMPORTED_MODULE_8__["ENDPOINTS"].attachmentDocument, `payment-attachment-reference/${this.s1Application.paymentAttachmentReference}`)
                    .subscribe((res1) => {
                    if (res1) {
                        this.paymentAttachment = res1;
                        this.safeURL = this.sanitizer.bypassSecurityTrustResourceUrl(this.paymentAttachment.fileURL);
                        console.log("view paymentAttachment: ", this.paymentAttachment);
                    }
                }, (err) => {
                    this.paymentAttachment = [];
                });
            }
        }, (err) => { });
    }
    getSupportiveDocuments() {
        this.apiService
            .findByParam(_shared__WEBPACK_IMPORTED_MODULE_8__["ENDPOINTS"].supportiveDocument, `application-form-id/${this.s1Application.id}`)
            .subscribe((res) => {
            if (res.responseData.data.length > 0) {
                this.supportiveDocumentList = res.responseData.data;
                if (this.currentUser.userRole.name === _shared__WEBPACK_IMPORTED_MODULE_8__["USER_ROLES"].ROLE_APPLICANT &&
                    this.s1Application.externalStatus === _shared__WEBPACK_IMPORTED_MODULE_8__["APPLICATION_STATUS"].SAVED) {
                    this.materialInformation.supportiveDocumentList = this.supportiveDocumentList;
                }
                if (this.currentUser.userRole.name === _shared__WEBPACK_IMPORTED_MODULE_8__["USER_ROLES"].ROLE_APPLICANT) {
                    this.previewApplication.supportiveDocumentList = this.supportiveDocumentList;
                }
                console.log("view supportiveDocumentList: ", this.supportiveDocumentList);
            }
        }, (err) => {
            this.supportiveDocumentList = [];
        });
    }
    scheduleSubmission() {
        this.isChecked = !this.isChecked;
        this.s1Application.autoSubmit = !this.s1Application.autoSubmit;
        const submissionDateValue = "submissionDate";
        this.s1ApplicationForm.controls[submissionDateValue].reset();
        this.disableSaveAndSubmitButton();
    }
    /* setTime(time) {
      this.s1Application.autoSubmitTime = time;
    } */
    // noDocumentAttachFunction(): void {
    //   this.noDocumentAttached = !this.noDocumentAttached;
    // }
    setFormValidator() {
        // this.s1ApplicationForm = this.formBuilder.group({
        //   type: ['', Validators.required]
        // });
        this.s1ApplicationForm = new _angular_forms__WEBPACK_IMPORTED_MODULE_6__["FormGroup"]({
            formType: new _angular_forms__WEBPACK_IMPORTED_MODULE_6__["FormControl"](),
            applicationType: new _angular_forms__WEBPACK_IMPORTED_MODULE_6__["FormControl"](),
            decision: new _angular_forms__WEBPACK_IMPORTED_MODULE_6__["FormControl"](),
            submissionDate: new _angular_forms__WEBPACK_IMPORTED_MODULE_6__["FormControl"](),
            applicationRequest: new _angular_forms__WEBPACK_IMPORTED_MODULE_6__["FormControl"](),
            actionStatus: new _angular_forms__WEBPACK_IMPORTED_MODULE_6__["FormControl"](),
            assignedUser: new _angular_forms__WEBPACK_IMPORTED_MODULE_6__["FormControl"](),
            decisionStatus: new _angular_forms__WEBPACK_IMPORTED_MODULE_6__["FormControl"](),
        });
    }
    resetFormValidator() {
        this.s1Application = new _models__WEBPACK_IMPORTED_MODULE_5__["S1Application"]();
        this.s1ApplicationForm.markAsUntouched();
        this.s1ApplicationForm.markAsPristine();
    }
    clear() {
        this.s1Application = new _models__WEBPACK_IMPORTED_MODULE_5__["S1Application"]();
    }
    getApplicationTypeList(formType) {
        this.s1Application.formType = formType;
        this.applicationTypeList = [];
        this.apiService.findAll(_shared__WEBPACK_IMPORTED_MODULE_8__["ENDPOINTS"].applicationType).subscribe((res) => {
            // if (formType !== 'MULTIPLE') {
            this.applicationTypeList = res.responseData.data;
            // } else {
            //   this.applicationTypeList.push(res.responseData.data[0]);
            //   this.applicationTypeList.push(res.responseData.data[1]);
            // }
        }, (err) => { });
    }
    getUserTypeForList() {
        this.apiService.findAll(_shared__WEBPACK_IMPORTED_MODULE_8__["ENDPOINTS"].userAccount).subscribe((res) => {
            res.responseData.data.filter((account) => {
                if (this.currentUserRole === _shared__WEBPACK_IMPORTED_MODULE_8__["USER_ROLES"].ROLE_AD_SPECIALIST) {
                    if (account.userRole.name.toUpperCase() === _shared__WEBPACK_IMPORTED_MODULE_8__["USER_ROLES"].ROLE_SCREENER) {
                        this.apiService
                            .findAll(_shared__WEBPACK_IMPORTED_MODULE_8__["ENDPOINTS"].applicationFormScreener +
                            `custom/search?assignedScreenerId=${account.id}&page=1&size=100`)
                            .subscribe((result) => {
                            account.ctr = result.data.length;
                            console.log("counter ->", account);
                            this.screenerList.push(account);
                        }, (err) => { });
                    }
                    if (account.userRole.name.toUpperCase() ===
                        _shared__WEBPACK_IMPORTED_MODULE_8__["USER_ROLES"].ROLE_AD_SPECIALIST) {
                        this.adSpecialistList.push(account);
                    }
                }
                if (this.currentUserRole === _shared__WEBPACK_IMPORTED_MODULE_8__["USER_ROLES"].ROLE_SCREENER) {
                    if (account.userRole.name.toUpperCase() === _shared__WEBPACK_IMPORTED_MODULE_8__["USER_ROLES"].ROLE_REVIEWER) {
                        // start set partner reviewer as default/first
                        this.defaultReviewer = res.responseData.data.filter((reviewer) => reviewer.userRole.name.toUpperCase() ===
                            _shared__WEBPACK_IMPORTED_MODULE_8__["USER_ROLES"].ROLE_REVIEWER && reviewer.ascDefault === true);
                        this.reviewerList = this.defaultReviewer;
                        const otherReviewers = res.responseData.data.filter((reviewer) => reviewer.userRole.name.toUpperCase() ===
                            _shared__WEBPACK_IMPORTED_MODULE_8__["USER_ROLES"].ROLE_REVIEWER && reviewer.ascDefault === false);
                        this.reviewerList.push(...otherReviewers);
                        // this.s1Application.assignedUser = this.reviewerList[0];
                        this.s1Application.assignedReviewer = this.reviewerList[0];
                        // end set partner reviewer as default/first
                    }
                }
                this.buttonValidation("");
            });
            if (this.currentUserRole === _shared__WEBPACK_IMPORTED_MODULE_8__["USER_ROLES"].ROLE_ENCODER) {
                console.log("ITS WORKING ");
                this.applicantList = res.responseData.data.filter((account) => account.userRole.name === _shared__WEBPACK_IMPORTED_MODULE_8__["USER_ROLES"].ROLE_APPLICANT &&
                    account.status === _shared__WEBPACK_IMPORTED_MODULE_8__["COMMON_FUNCTION"].ACTIVE);
            }
        });
    }
    checkAscRateBeforeSaveOrSubmit(process = "save") {
        var _a, _b;
        const sizeLength = +((_a = this.applicationSingleMedia) === null || _a === void 0 ? void 0 : _a.sizeLength);
        if (sizeLength > this.maxSizeLength) {
            this.sweetAlertService.customErrorMessage(`Max input for size/length is ${this.maxSizeLength}`);
        }
        else if (this.s1Application.formType === "MULTIPLE" &&
            !this.specialApplicationType.includes(this.s1Application.applicationType.description.toUpperCase())) {
            this.saveOrUpdateApplication("SAVED");
        }
        else if (((_b = this.s1Application) === null || _b === void 0 ? void 0 : _b.refTypeOfMedium) === "SINGLE MEDIA" &&
            this.s1Application.formType !== "MULTIPLE") {
            this.validateAscRates(process);
        }
        else {
            if (process === "save") {
                this.saveOrUpdateApplication("SAVED");
            }
            else if (process === "submit") {
                this.saveStatus("presentor", "submit", "S1_APPLICATION_SUBMITTED");
            }
        }
    }
    validateAscRates(process = "save") {
        this.apiService
            .save(_shared__WEBPACK_IMPORTED_MODULE_8__["ENDPOINTS"].validateAscRates, this.applicationSingleMedia)
            .subscribe((res) => {
            if (process === "save") {
                this.saveOrUpdateApplication("SAVED");
            }
            else if (process === "submit") {
                this.saveStatus("presentor", "submit", "S1_APPLICATION_SUBMITTED");
            }
        }, (err) => {
            this.sweetAlertService.error(err);
        });
    }
    saveOrUpdateApplication(status, process = "save") {
        console.log("1");
        console.log("this.s1Application.appFormReference: ", this.s1Application.appFormReference);
        if (this.s1Application.formType === "MULTIPLE" &&
            !this.s1Application.multipleApplication) {
            sweetalert2__WEBPACK_IMPORTED_MODULE_7___default.a.fire({
                text: `Are you sure you want to ${process === "save" ? "save" : "submit"} this multiple application?`,
                icon: "question",
                showCancelButton: true,
                confirmButtonColor: "#3085d6",
                cancelButtonColor: "#d33",
                confirmButtonText: "Confirm",
            }).then((result) => {
                if (result.value) {
                    this.spinner.show();
                    this.multipleApplication.numberOfApplication = this.dataStorage.getNumberOfApplications();
                    this.multipleApplication.applicationType = this.s1Application.applicationType;
                    this.multipleApplication.dateOfSubmission = new Date(this.s1Application.submissionDate);
                    this.multipleApplication.status = this.specialApplicationType.includes(this.multipleApplication.applicationType.description.toUpperCase())
                        ? _shared__WEBPACK_IMPORTED_MODULE_8__["OTHER_STATUS"].FOR_APPROVAL
                        : _shared__WEBPACK_IMPORTED_MODULE_8__["APPLICATION_STATUS"].APPROVED;
                    this.multipleApplication.actionBy = this.currentUser.username;
                    this.multipleApplication.actionDate = new Date();
                    if (this.currentUser.userRole.name === _shared__WEBPACK_IMPORTED_MODULE_8__["USER_ROLES"].ROLE_ENCODER) {
                        this.multipleApplication.applicationOwner = this.s1Application.applicationOwner;
                    }
                    else {
                        this.multipleApplication.applicationOwner = this.currentUser;
                    }
                    this.multipleApplication.submissionStatus = "UNPROCESSED";
                    this.multipleApplication.assignedAdSpecialist = null;
                    this.multipleApplication.assignedEncoder = null;
                    this.multipleApplication.assignedScreener = null;
                    this.multipleApplication.assignedReviewer = null;
                    // From Client Info
                    // this.multipleApplication.membersAffiliation = this.clientInformation.s1Application.membersAffiliation;
                    this.multipleApplication.company = this.clientInformation.s1Application.company;
                    this.multipleApplication.brand = this.clientInformation.s1Application.brand;
                    this.multipleApplication.product = this.clientInformation.s1Application.product;
                    // this.multipleApplication.category = this.clientInformation.s1Application.category;
                    // From Material Info
                    this.multipleApplication.adTitle = this.materialInformation.s1Application.adTitle;
                    this.multipleApplication.tagLine = this.materialInformation.s1Application.tagLine;
                    this.save();
                }
            });
        }
        else {
            if (this.s1Application.appFormReference &&
                this.s1Application.appFormReference !== "" &&
                this.s1Application.appFormReference !== undefined) {
                if (status !== _shared__WEBPACK_IMPORTED_MODULE_8__["APPLICATION_STATUS"].SAVED) {
                    this.isSubmit = true;
                }
                console.log("APPFORM: ", this.s1Application);
                console.log("process :: ", process);
                if (process === "save") {
                    sweetalert2__WEBPACK_IMPORTED_MODULE_7___default.a.fire({
                        text: `Are you sure you want to ${process} this application?`,
                        icon: "question",
                        showCancelButton: true,
                        confirmButtonColor: "#3085d6",
                        cancelButtonColor: "#d33",
                        confirmButtonText: "Confirm",
                    }).then((result) => {
                        if (result.value) {
                            this.spinner.show();
                            this.setAndSaveS1Data(status);
                        }
                    });
                }
                else {
                    sweetalert2__WEBPACK_IMPORTED_MODULE_7___default.a.fire({
                        text: `Are you sure you want to ${process} this application?`,
                        icon: "question",
                        showCancelButton: true,
                        confirmButtonColor: "#3085d6",
                        cancelButtonColor: "#d33",
                        confirmButtonText: "Confirm",
                    }).then((result) => {
                        if (result.value) {
                            this.setAndSaveS1Data(status);
                        }
                    });
                }
            }
            else {
                this.sweetAlertService.customErrorMessage("Missing application form reference.");
            }
        }
    }
    setAndSaveS1Data(status) {
        console.log("2");
        if (this.s1Application.id === undefined) {
            this.s1Application.id = 0;
            this.s1Application.applicationOwner = this.currentUser;
            // this.s1Application.appFormReference = ''; // ETO PALAAAA!!!!
            this.s1Application.referenceCode = "";
        }
        // From Client Info
        // this.s1Application.membersAffiliation = this.clientInformation.s1Application.membersAffiliation;
        this.s1Application.company = this.clientInformation.s1Application.company;
        this.s1Application.brand = this.clientInformation.s1Application.brand;
        this.s1Application.product = this.clientInformation.s1Application.product;
        // this.s1Application.category = this.clientInformation.s1Application.category;
        // From Material Info
        this.s1Application.adTitle = this.materialInformation.s1Application.adTitle;
        this.s1Application.referenceCode = this.materialInformation.s1Application.referenceCode;
        this.s1Application.tagLine = this.materialInformation.s1Application.tagLine;
        // SubmissionType (default: ORIGINAL)
        this.s1Application.submissionType = this.submissionType;
        // Delete auto submit details if autoSubmit is false
        if (this.s1Application.autoSubmit === false) {
            this.isScheduleSendIsEmpty = false;
            this.s1Application.submissionDate = null;
        }
        console.log("Saving...");
        this.save();
    }
    save() {
        console.log("3");
        if (this.s1Application.formType === "INDIVIDUAL" ||
            this.s1Application.formType === "FOR_PRESENTATION" ||
            (this.s1Application.formType === "MULTIPLE" &&
                this.s1Application.multipleApplication)) {
            this.spinner.show();
            // Save S1 Form
            this.mediaTypeListTemp = this.materialInformation.newMultimediaList;
            this.applicationSingleMediaTemp = this.materialInformation.applicationSingleMedia;
            this.setTypeOfMediumDisplay();
            //
            if (this.s1Application.refTypeOfMedium === _shared__WEBPACK_IMPORTED_MODULE_8__["TYPE_OF_MEDIUM"].SINGLE_MEDIA) {
                this.saveUpdateApplicationSingleMedia("SAVE", null, null);
            }
            else {
                this.saveUpdateMultimedia("SAVE", null, null);
            }
        }
        else if (this.s1Application.formType === "MULTIPLE") {
            this.spinner.show();
            this.apiService
                .save(_shared__WEBPACK_IMPORTED_MODULE_8__["ENDPOINTS"].multipleApplication, this.multipleApplication)
                .subscribe((res) => {
                this.spinner.hide();
                this.router.navigate(["asc/page/application/s1/multiple"]);
                const message = this.specialApplicationType.includes(this.multipleApplication.applicationType.description.toUpperCase())
                    ? "Multiple application successfully submitted for approval"
                    : "Multiple application successfully saved";
                this.sweetAlertService.customSuccessMessage(message);
                // this.navigateToS1List();
            }, (err) => {
                console.log(err);
                this.spinner.hide();
                this.sweetAlertService.error(err);
            });
        }
    }
    setTypeOfMediumDisplay() {
        var _a, _b, _c, _d, _e;
        console.log("3a");
        if (this.s1Application.refTypeOfMedium === _shared__WEBPACK_IMPORTED_MODULE_8__["TYPE_OF_MEDIUM"].SINGLE_MEDIA) {
            this.s1Application.typeOfMedium = (_b = (_a = this.materialInformation) === null || _a === void 0 ? void 0 : _a.typeOfMedium) === null || _b === void 0 ? void 0 : _b.description;
        }
        else {
            let movingStatic = "";
            if (this.s1Application.typeOfMedium) {
                movingStatic = this.s1Application.typeOfMedium;
            }
            this.mediaTypeListTemp.forEach((element) => {
                if (movingStatic === "") {
                    movingStatic = element.description;
                }
                else if (!movingStatic.includes(element.description)) {
                    movingStatic = movingStatic + "/" + element.description;
                }
                this.s1Application.typeOfMedium = movingStatic;
            });
            // removed multimediaToDelete
            if (((_c = this.materialInformation) === null || _c === void 0 ? void 0 : _c.toDeleteMultimediaList.length) > 0) {
                let currentTOM = this.s1Application.typeOfMedium;
                (_e = (_d = this.materialInformation) === null || _d === void 0 ? void 0 : _d.toDeleteMultimediaList) === null || _e === void 0 ? void 0 : _e.forEach((multimediaToDelete) => {
                    console.log("REMOVE: ", multimediaToDelete.typeOfMedium.description);
                    currentTOM = currentTOM.replace(multimediaToDelete.typeOfMedium.description + "/", "");
                    currentTOM = currentTOM.replace("/" + multimediaToDelete.typeOfMedium.description, "");
                });
                this.s1Application.typeOfMedium = currentTOM;
            }
        }
    }
    saveUpdateApplicationSingleMedia(status, ascUser, action) {
        var _a;
        console.log("3b");
        this.applicationSingleMediaTemp.appFormReference = (_a = this.s1Application) === null || _a === void 0 ? void 0 : _a.appFormReference;
        // this.spinner.hide();
        if (this.applicationSingleMediaTemp) {
            // this.spinner.show();
            this.apiService
                .save(_shared__WEBPACK_IMPORTED_MODULE_8__["ENDPOINTS"].applicationSingleMedia, this.applicationSingleMediaTemp)
                .subscribe((res) => {
                if (res !== undefined) {
                    console.log("SAVED applicationSingleMedia: ", res.responseData.data);
                }
            }, (err) => {
                // this.spinner.hide();
                this.sweetAlertService.error(err);
                return;
            }, () => {
                // this.spinner.hide();
                if ((status === null || status === void 0 ? void 0 : status.toUpperCase()) === _shared__WEBPACK_IMPORTED_MODULE_8__["COMMON_FUNCTION"].SAVE.toUpperCase()) {
                    this.saveAppForm();
                }
                else if ((status === null || status === void 0 ? void 0 : status.toUpperCase()) === _shared__WEBPACK_IMPORTED_MODULE_8__["COMMON_FUNCTION"].SUBMIT.toUpperCase()) {
                    this.processAppForm(ascUser, action);
                }
            });
        }
    }
    saveUpdateMultimedia(status, ascUser, action) {
        let typeOfMultimedia = "";
        this.multimediaDTO.appFormReference = this.s1Application.appFormReference;
        if (this.s1Application.refTypeOfMedium === _shared__WEBPACK_IMPORTED_MODULE_8__["TYPE_OF_MEDIUM"].MULTIMEDIA_MOVING) {
            typeOfMultimedia = "moving";
        }
        else {
            typeOfMultimedia = "static";
        }
        this.apiService
            .save(_shared__WEBPACK_IMPORTED_MODULE_8__["ENDPOINTS"].applicationMultimedia + "-" + typeOfMultimedia, this.multimediaDTO)
            .subscribe((res) => { }, (err) => {
            // this.spinner.hide();
            this.sweetAlertService.error(err);
        }, () => {
            // this.spinner.hide();
            if ((status === null || status === void 0 ? void 0 : status.toUpperCase()) === _shared__WEBPACK_IMPORTED_MODULE_8__["COMMON_FUNCTION"].SAVE.toUpperCase()) {
                this.saveAppForm();
            }
            else if ((status === null || status === void 0 ? void 0 : status.toUpperCase()) === _shared__WEBPACK_IMPORTED_MODULE_8__["COMMON_FUNCTION"].SUBMIT.toUpperCase()) {
                this.processAppForm(ascUser, action);
            }
            else {
                this.spinner.hide();
            }
        });
    }
    // OLD IMPLEMENTATION - TO BE REMOVED ONCE VERIFIED
    // saveUpdateMultimedia(status, ascUser, action) {
    //   console.log('3c');
    //   const asd = this.multimediaMovingList.concat(this.multimediaStaticList);
    //   const multimediaList = [];
    //   this.mediaTypeListTemp = this.materialInformation.newMultimediaList;
    //   this.mediaTypeListTemp.forEach(element => {
    //     if (element.sizeLength !== undefined) {
    //       const obj = new ApplicationMultimedia();
    //       obj.typeOfMedium = element;
    //       obj.appFormReference = this.s1Application.appFormReference;
    //       obj.multimediaSizeLength = element.sizeLength;
    //       if (element.multimediaMoving) {
    //         obj.mediaType = TYPE_OF_MEDIUM.MOVING;
    //       }
    //       if (element.multimediaStatic) {
    //         obj.mediaType = TYPE_OF_MEDIUM.STATIC;
    //       }
    //       const existingValue = this.selectedMultimediaList.filter(filteredMedia => filteredMedia?.typeOfMedium?.id === obj.typeOfMedium.id);
    //       if (existingValue.length) {
    //         obj.id = existingValue[0].id;
    //       }
    //       delete element.sizeLength;
    //       multimediaList.push(obj);
    //     }
    //   });
    //   // this.spinner.show();
    //   this.apiService.save(ENDPOINTS.applicationMultimedia + '/' + COMMON_FUNCTION.BATCH, multimediaList).subscribe(
    //     (res: any) => {
    //       // remove blank multimedia size/length
    //       this.materialInformation?.toDeleteMultimediaList?.forEach(multimediaToDelete => {
    //         this.apiService.deleteById(`${ENDPOINTS.applicationMultimedia}`, multimediaToDelete.id).subscribe();
    //       });
    //       // this.spinner.hide();
    //     }, (err: any) => {
    //       // this.spinner.hide();
    //       this.sweetAlertService.error(err);
    //     }, () => {
    //       // this.spinner.hide();
    //       if (status?.toUpperCase() === COMMON_FUNCTION.SAVE.toUpperCase()) {
    //         this.saveAppForm();
    //       } else if (status?.toUpperCase() === COMMON_FUNCTION.SUBMIT.toUpperCase()) {
    //         this.processAppForm(ascUser, action);
    //       } else {
    //         this.spinner.hide();
    //       }
    //     });
    // }
    saveAppForm() {
        console.log("4.0");
        console.log("TO SAVE: ", this.s1Application);
        this.s1Application.actionBy = this.currentUser;
        // ENDPOINTS.applicationFormEncoder + COMMON_FUNCTION.VERIFY;
        this.apiService
            .save(_shared__WEBPACK_IMPORTED_MODULE_8__["ENDPOINTS"].applicationFormPresentor + _shared__WEBPACK_IMPORTED_MODULE_8__["COMMON_FUNCTION"].SAVE, this.s1Application)
            .subscribe((res) => {
            if (res !== undefined) {
                this.id = res.responseData.data.id;
                this.s1Application = res.responseData.data;
                console.log("SAVED:", this.s1Application);
                // if (this.currentUserRole === USER_ROLES.ROLE_ENCODER) {
                //   this.saveS1ApplicationByEncoder(this.s1Application);
                // }
                this.spinner.hide();
            }
        }, (err) => {
            this.spinner.hide();
            this.sweetAlertService.error(err);
        }, () => {
            // actions after subscription
            // this.resetFormValidator();
            if (this.s1Application.id !== undefined && this.isSubmit === false) {
                // this.router.navigate(['asc/page/application/s1/update/', this.id]);
                this.spinner.hide();
                this.sweetAlertService.customSuccessMessage("Application successfully saved.");
                if (this.s1Application.multipleApplication) {
                    this.router.navigate(["asc/page/application/s1/multiple"]);
                }
                else {
                    this.navigateToS1List();
                }
            }
            else {
                console.log("COMMENT OUT: S1_APPLICATION_SUBMITTED");
                // this.saveStatus('presentor', 'submit', 'S1_APPLICATION_SUBMITTED');
            }
        });
    }
    saveSupportingDocuments() {
        this.spinner.show();
        const supportingDocuments = [];
        this.materialInformation.newSupportiveDocumentList = this.materialInformation.newSupportiveDocumentList.map((res) => {
            res.applicationForm = this.s1Application;
            supportingDocuments.push(res);
        });
        this.apiService
            .save(_shared__WEBPACK_IMPORTED_MODULE_8__["ENDPOINTS"].supportiveDocument + "/" + _shared__WEBPACK_IMPORTED_MODULE_8__["COMMON_FUNCTION"].BATCH, supportingDocuments)
            .subscribe((res) => {
            console.log("Saved suppoting docs successfully.");
            this.spinner.hide();
        }, (err) => {
            this.spinner.hide();
            this.sweetAlertService.error(err);
            return;
        });
    }
    setAppType(type) {
        this.s1Application.applicationType = type;
    }
    compareFormType(value, selected) {
        if (value && selected) {
            return value.description === selected;
        }
    }
    compareApplicationType(value, selected) {
        if (value && selected) {
            return value.description === selected.description;
        }
    }
    compareAssignedScreener(value, selected) {
        if (value && selected) {
            return value.description === selected.description;
        }
    }
    compareAssignedReviewer(value, selected) {
        if (value && selected) {
            return value.description === selected.description;
        }
    }
    compareAssignedAdSpec(value, selected) {
        if (value && selected) {
            return value.description === selected.description;
        }
    }
    // onChangeHour(event) {
    //   let timeFetched;
    //   timeFetched = event.hour + ':' + event.minute + event.meriden;
    //   this.s1Application.autoSubmitTime = timeFetched;
    // }
    onChangeDate(value) {
        console.log(value);
        if (value) {
            const dateFetched = value;
            const dateTransformed = this.datepipe.transform(dateFetched, "yyyy-MM-dd");
            this.s1Application.submissionDate = new Date(dateTransformed);
            this.s1Application.autoSubmit = true;
            this.disableSaveAndSubmitButton();
        }
    }
    resendDecision() {
        sweetalert2__WEBPACK_IMPORTED_MODULE_7___default.a.fire({
            text: "Are you sure you want to resend decision form?",
            icon: "question",
            showCancelButton: true,
            confirmButtonColor: "#3085d6",
            cancelButtonColor: "#d33",
            confirmButtonText: "Confirm",
        }).then((result) => {
            if (result.value) {
                this.spinner.show();
                this.apiService
                    .save(_shared__WEBPACK_IMPORTED_MODULE_8__["ENDPOINTS"].api +
                    `admin/application-form/id/${this.s1Application.id}/send/decision-form`, this.s1Application)
                    .subscribe((res) => {
                    if (res.code === 200) {
                        this.spinner.hide();
                        this.sweetAlertService.customSuccessMessage("Successfully resend decision form");
                        this.navigateToS1List();
                    }
                }, (err) => {
                    this.spinner.hide();
                });
            }
        });
    }
    returnToScreener() {
        sweetalert2__WEBPACK_IMPORTED_MODULE_7___default.a.fire({
            text: "Are you sure you want to return this application to Screener?",
            icon: "question",
            showCancelButton: true,
            confirmButtonColor: "#3085d6",
            cancelButtonColor: "#d33",
            confirmButtonText: "Confirm",
        }).then((result) => {
            if (result.value) {
                this.spinner.show();
                let endpoint = "";
                if (this.currentUser.userRole.name === _shared__WEBPACK_IMPORTED_MODULE_8__["USER_ROLES"].ROLE_AD_SPECIALIST) {
                    endpoint =
                        _shared__WEBPACK_IMPORTED_MODULE_8__["ENDPOINTS"].api +
                            `application-form/id/${this.s1Application.id}/s1/ad-specialist/forward-to-screener`;
                }
                else if (this.currentUser.userRole.name === _shared__WEBPACK_IMPORTED_MODULE_8__["USER_ROLES"].ROLE_ADMIN ||
                    this.currentUser.userRole.name === _shared__WEBPACK_IMPORTED_MODULE_8__["USER_ROLES"].ROLE_SUPER_ADMIN) {
                    endpoint =
                        _shared__WEBPACK_IMPORTED_MODULE_8__["ENDPOINTS"].api +
                            `admin/application-form/id/${this.s1Application.id}/forward-to-screener`;
                }
                this.apiService.save(endpoint, this.s1Application).subscribe((res) => {
                    if (res.code === 200) {
                        console.log("RETURN: ", res.responseData.data);
                        this.spinner.hide();
                        this.sweetAlertService.customSuccessMessage("Successfully return to Screener");
                        this.navigateToS1List();
                    }
                }, (err) => {
                    this.spinner.hide();
                });
            }
        });
    }
    returnTo(ascUser, newStatus) {
        sweetalert2__WEBPACK_IMPORTED_MODULE_7___default.a.fire({
            text: "Are you sure you want to return this application to " + ascUser + "?",
            icon: "question",
            showCancelButton: true,
            confirmButtonColor: "#3085d6",
            cancelButtonColor: "#d33",
            confirmButtonText: "Confirm",
        }).then((result) => {
            if (result.value) {
                this.spinner.show();
                let endpoint = "";
                this.s1Application.assignedUser = this.s1Application.actionBy;
                this.s1Application.actionBy = this.currentUser;
                if (this.currentUser.userRole.name === _shared__WEBPACK_IMPORTED_MODULE_8__["USER_ROLES"].ROLE_SCREENER) {
                    if (this.s1Application.multipleApplication &&
                        this.s1Application.submissionType === _shared__WEBPACK_IMPORTED_MODULE_8__["SUBMISSION_TYPE"].ORIGINAL) {
                        endpoint = `${_shared__WEBPACK_IMPORTED_MODULE_8__["ENDPOINTS"].multipleApplicationReturnToAdSpe}${this.s1Application.multipleApplication.id}/return`;
                    }
                    else {
                        endpoint = `${_shared__WEBPACK_IMPORTED_MODULE_8__["ENDPOINTS"].applicationFormScreener}return`;
                    }
                }
                else if (this.currentUser.userRole.name === _shared__WEBPACK_IMPORTED_MODULE_8__["USER_ROLES"].ROLE_REVIEWER) {
                    if (this.s1Application.multipleApplication &&
                        this.s1Application.submissionType === _shared__WEBPACK_IMPORTED_MODULE_8__["SUBMISSION_TYPE"].ORIGINAL) {
                        endpoint = `${_shared__WEBPACK_IMPORTED_MODULE_8__["ENDPOINTS"].multipleApplicationReturnToScreener}${this.s1Application.multipleApplication.id}/return`;
                    }
                    else {
                        endpoint = `${_shared__WEBPACK_IMPORTED_MODULE_8__["ENDPOINTS"].applicationFormReviewer}return`;
                    }
                }
                // console.log('TO SAVE: ', this.s1Application);
                this.apiService.save(endpoint, this.s1Application).subscribe((res) => {
                    if (res.code === 200) {
                        // console.log('RETURN: ', res.responseData.data);
                        this.spinner.hide();
                        this.sweetAlertService.customSuccessMessage("Successfully returned the application");
                        this.navigateToS1List();
                    }
                }, (err) => {
                    this.spinner.hide();
                });
            }
        });
    }
    reassign() {
        if (this.s1Application.internalStatus ===
            _shared__WEBPACK_IMPORTED_MODULE_8__["APPLICATION_STATUS"].S1_APPLICATION_VERIFIED_BY_AD_SPE) {
            if (this.s1Application.multipleApplication) {
                this.s1Application.multipleApplication.assignedScreener = this.s1Application.assignedScreener;
            }
            else {
                this.s1Application.assignedUser = this.s1Application.assignedScreener;
            }
        }
        else if (this.s1Application.internalStatus ===
            _shared__WEBPACK_IMPORTED_MODULE_8__["APPLICATION_STATUS"].S1_APPLICATION_SCREENED) {
            if (this.s1Application.multipleApplication) {
                this.s1Application.multipleApplication.assignedReviewer = this.s1Application.assignedReviewer;
            }
            else {
                this.s1Application.assignedUser = this.s1Application.assignedReviewer;
            }
        }
        sweetalert2__WEBPACK_IMPORTED_MODULE_7___default.a.fire({
            text: "Are you sure you want to reassign this application?",
            icon: "question",
            showCancelButton: true,
            confirmButtonColor: "#3085d6",
            cancelButtonColor: "#d33",
            confirmButtonText: "Confirm",
        }).then((result) => {
            if (result.value) {
                this.spinner.show();
                let endpoint = "";
                let param = {};
                this.s1Application.actionBy = this.currentUser;
                if (this.currentUserRole === _shared__WEBPACK_IMPORTED_MODULE_8__["USER_ROLES"].ROLE_AD_SPECIALIST) {
                    if (this.s1Application.multipleApplication) {
                        endpoint = _shared__WEBPACK_IMPORTED_MODULE_8__["ENDPOINTS"].reAssignScreenerForMultipleApplication;
                        param = this.s1Application.multipleApplication;
                    }
                    else {
                        endpoint = `${_shared__WEBPACK_IMPORTED_MODULE_8__["ENDPOINTS"].applicationFormAdSpecialist}re-assign/screener`;
                        param = this.s1Application;
                    }
                }
                else {
                    if (this.s1Application.multipleApplication) {
                        endpoint = _shared__WEBPACK_IMPORTED_MODULE_8__["ENDPOINTS"].reAssignReviewerForMultipleApplication;
                        param = this.s1Application.multipleApplication;
                    }
                    else {
                        endpoint = `${_shared__WEBPACK_IMPORTED_MODULE_8__["ENDPOINTS"].applicationFormScreener}re-assign/reviewer`;
                        param = this.s1Application;
                    }
                }
                this.apiService.save(endpoint, param).subscribe((res) => {
                    console.log("SAVED: ", res.responseData.data);
                    if (res.code === 200) {
                        this.spinner.hide();
                        this.sweetAlertService.success(res);
                        this.navigateToS1List();
                    }
                }, (err) => {
                    this.spinner.hide();
                });
            }
        });
    }
    reassignAdSpecialist() {
        sweetalert2__WEBPACK_IMPORTED_MODULE_7___default.a.fire({
            text: "Are you sure you want to re-assign this application to " +
                this.s1Application.assignedAdSpecialist.firstName +
                " " +
                this.s1Application.assignedAdSpecialist.lastName,
            icon: "question",
            showCancelButton: true,
            confirmButtonColor: "#3085d6",
            cancelButtonColor: "#d33",
            confirmButtonText: "Confirm",
        }).then((result) => {
            if (result.value) {
                this.spinner.show();
                let endpoint = "";
                this.s1Application.assignedUser = this.s1Application.assignedAdSpecialist;
                endpoint = _shared__WEBPACK_IMPORTED_MODULE_8__["ENDPOINTS"].applicationForm;
                // console.log('TO SAVE: ', this.s1Application);
                this.apiService.update(endpoint, this.s1Application).subscribe((res) => {
                    // console.log('RETURN: ', res.responseData.data);
                    if (res.code === 200) {
                        this.spinner.hide();
                        this.sweetAlertService.customSuccessMessage("Application re-assigned successfully.");
                        this.navigateToS1List();
                    }
                }, (err) => {
                    this.spinner.hide();
                });
            }
        });
    }
    validateSubmissionTime(status = "") {
        const currentDate = new Date();
        // start - for testing purposes only - uncomment lines below during dev (do not push uncomment)
        // currentDate.setHours(11);
        // currentDate.setMinutes(0);
        // const currentHour = currentDate.getHours();
        // const currentMinute = currentDate.getMinutes();
        // if ((currentHour < 7 || (currentHour >= 11 && currentMinute > 0) || currentHour > 11) && status === 'S1_APPLICATION_SUBMITTED') {
        //   const err = {
        //     error: { message: 'Submission of application is between 7:00 AM to 11:00 AM only.' }
        //   };
        //   this.sweetAlertService.error(err);
        //   return;
        // }
        // end
    }
    checkNullValues(str) {
        return str ? str : "";
    }
    /////////////////////////// FOR ORIGINAL //////////////////////////////////
    saveStatus(ascUser = "", action = "", status = "") {
        let message = "";
        if (action === "submit") {
            message =
                "Once submitted and accepted, cancellation of application is not allowed." +
                    ` Are you sure you want to ${action} this application?`;
        }
        else
            message = `Are you sure you want to ${action} this application?`;
        sweetalert2__WEBPACK_IMPORTED_MODULE_7___default.a.fire({
            text: message,
            icon: "question",
            showCancelButton: true,
            confirmButtonColor: "#3085d6",
            cancelButtonColor: "#d33",
            confirmButtonText: "Confirm",
        }).then((result) => {
            if (result.value) {
                let msg = "";
                if (status === _shared__WEBPACK_IMPORTED_MODULE_8__["APPLICATION_STATUS"].S1_APPLICATION_SUBMITTED) {
                    msg = _shared__WEBPACK_IMPORTED_MODULE_8__["COMMON_FUNCTION"].SUBMIT;
                }
                else if (status === _shared__WEBPACK_IMPORTED_MODULE_8__["APPLICATION_STATUS"].S1_APPLICATION_CANCELLED) {
                    msg = _shared__WEBPACK_IMPORTED_MODULE_8__["COMMON_FUNCTION"].CANCEL;
                }
                else if (status === _shared__WEBPACK_IMPORTED_MODULE_8__["APPLICATION_STATUS"].S1_APPLICATION_REJECTED) {
                    msg = _shared__WEBPACK_IMPORTED_MODULE_8__["COMMON_FUNCTION"].REJECT;
                }
                else if (status === _shared__WEBPACK_IMPORTED_MODULE_8__["APPLICATION_STATUS"].S1_APPLICATION_VERIFIED_BY_AD_SPE) {
                    msg = _shared__WEBPACK_IMPORTED_MODULE_8__["COMMON_FUNCTION"].VERIFY;
                }
                else if (status === _shared__WEBPACK_IMPORTED_MODULE_8__["APPLICATION_STATUS"].S1_APPLICATION_SCREENED) {
                    msg = _shared__WEBPACK_IMPORTED_MODULE_8__["COMMON_FUNCTION"].SCREEN;
                }
                else {
                    msg = _shared__WEBPACK_IMPORTED_MODULE_8__["COMMON_FUNCTION"].ACCEPT;
                }
                this.spinner.show();
                this.dataStorage.setDisplayProgressbar(true);
                // Check NULL values
                this.s1Application.referenceCode = this.checkNullValues(this.s1Application.referenceCode);
                this.s1Application.supportingAttachmentReference = this.checkNullValues(this.s1Application.supportingAttachmentReference);
                this.s1Application.paymentAttachmentReference = this.checkNullValues(this.s1Application.paymentAttachmentReference);
                this.s1Application.revisionLetterAttachmentReference = this.checkNullValues(this.s1Application.revisionLetterAttachmentReference);
                this.s1Application.decisionStatus = this.checkNullValues(this.s1Application.decisionStatus);
                this.s1Application.status = this.specialApplicationType.includes(this.s1Application.applicationType.description.toUpperCase())
                    ? _shared__WEBPACK_IMPORTED_MODULE_8__["OTHER_STATUS"].FOR_APPROVAL
                    : _shared__WEBPACK_IMPORTED_MODULE_8__["APPLICATION_STATUS"].APPROVED;
                // SUBMIT
                if (status === _shared__WEBPACK_IMPORTED_MODULE_8__["APPLICATION_STATUS"].S1_APPLICATION_SUBMITTED) {
                    if (this.currentUserRole === _shared__WEBPACK_IMPORTED_MODULE_8__["USER_ROLES"].ROLE_ENCODER) {
                        this.s1Application.applicationOwner = this.selectedApplicationOwner;
                    }
                    else {
                        this.s1Application.applicationOwner = this.dataStorage.getUserAccount();
                    }
                    this.s1Application.submissionDate = new Date();
                    // Delete auto submit details if autoSubmit was cancelled
                    this.s1Application.autoSubmit = false;
                }
                if (!this.s1Application.company) {
                    this.s1Application.company = this.dataStorage.getS1NewCompany();
                    sessionStorage.removeItem("NEW_COMPANY");
                }
                this.s1Application.actionBy = this.dataStorage.getUserAccount();
                if (status !== _shared__WEBPACK_IMPORTED_MODULE_8__["APPLICATION_STATUS"].S1_APPLICATION_CANCELLED) {
                    // FOR ADSPE: Save Supporting Documents
                    if (this.currentUserRole === _shared__WEBPACK_IMPORTED_MODULE_8__["USER_ROLES"].ROLE_AD_SPECIALIST &&
                        this.materialInformation.newSupportiveDocumentList.length > 0) {
                        this.saveSupportingDocuments();
                    }
                    this.spinner.show();
                    if (this.s1Application.formType !== _shared__WEBPACK_IMPORTED_MODULE_8__["APPFORM_TYPE"].MULTIPLE ||
                        (this.s1Application.multipleApplication &&
                            this.s1Application.multipleApplication
                                .actualNumberOfApplicationForm ===
                                this.s1Application.multipleApplication
                                    .countVerifiedApplicationForm -
                                    1)) {
                        if (ascUser === "ad-specialist" &&
                            action === "verify" &&
                            status === _shared__WEBPACK_IMPORTED_MODULE_8__["APPLICATION_STATUS"].S1_APPLICATION_VERIFIED_BY_AD_SPE) {
                            // this.s1Application.assignedScreener = this.s1Application.assignedUser;
                            this.s1Application.assignedUser = this.s1Application.assignedScreener;
                        }
                        else if (ascUser === "screener" &&
                            action === "verify" &&
                            status === _shared__WEBPACK_IMPORTED_MODULE_8__["APPLICATION_STATUS"].S1_APPLICATION_SCREENED) {
                            this.s1Application.assignedUser = this.s1Application.assignedReviewer;
                        }
                    }
                    this.mediaTypeListTemp = this.materialInformation.newMultimediaList;
                    this.applicationSingleMediaTemp = this.materialInformation.applicationSingleMedia;
                    console.log("mediaTypeListTemp: ", this.mediaTypeListTemp);
                    console.log("applicationSingleMediaTemp: ", this.applicationSingleMediaTemp);
                    // Encoder: Update Medium details - working in single media
                    // Encoder: Encode appform - working in single media
                    if (this.currentUserRole === _shared__WEBPACK_IMPORTED_MODULE_8__["USER_ROLES"].ROLE_ENCODER) {
                        this.setTypeOfMediumDisplay();
                        if (this.s1Application.refTypeOfMedium === _shared__WEBPACK_IMPORTED_MODULE_8__["TYPE_OF_MEDIUM"].SINGLE_MEDIA) {
                            this.applicationSingleMedia = this.applicationSingleMediaTemp;
                            this.applicationSingleMedia.appFormReference = this.s1Application.appFormReference;
                            this.saveUpdateApplicationSingleMedia(null, null, null);
                        }
                        else {
                            this.saveUpdateMultimedia(null, null, null);
                        }
                    }
                    // working in Single Media
                    if (msg === _shared__WEBPACK_IMPORTED_MODULE_8__["COMMON_FUNCTION"].SUBMIT &&
                        this.currentUserRole === _shared__WEBPACK_IMPORTED_MODULE_8__["USER_ROLES"].ROLE_APPLICANT) {
                        this.setTypeOfMediumDisplay();
                        if (this.s1Application.refTypeOfMedium === _shared__WEBPACK_IMPORTED_MODULE_8__["TYPE_OF_MEDIUM"].SINGLE_MEDIA) {
                            this.saveUpdateApplicationSingleMedia(msg, ascUser, action);
                        }
                        else {
                            this.saveUpdateMultimedia(msg, ascUser, action);
                        }
                    }
                    else {
                        this.processAppForm(ascUser, action);
                    }
                    // socket here
                }
                else {
                    // CANCEL APPLICATION (PUT method)
                    this.spinner.show();
                    this.apiService
                        .update(`${_shared__WEBPACK_IMPORTED_MODULE_8__["ENDPOINTS"].applicationForm}/s1/${ascUser}/${action}`, this.s1Application)
                        .subscribe((res) => {
                        console.log("SAVED STATUS: ", res.responseData.data);
                        this.spinner.hide();
                        this.sweetAlertService.customSuccessMessage("Application successfully canceled.");
                        this.navigateToS1List();
                    }, (err) => {
                        console.log(err);
                        this.spinner.hide();
                    }, () => {
                        this.dataStorage.setDisplayProgressbar(false);
                    });
                }
            }
        });
    }
    processAppForm(ascUser, action) {
        console.log("Process 2");
        const { appFormReference, revisionLetterAttachmentReference, supportingAttachmentReference, } = this.s1Application;
        this.s1Application.appFormReference = appFormReference
            ? appFormReference
            : "";
        if (revisionLetterAttachmentReference === "") {
            delete this.s1Application.revisionLetterAttachmentReference;
        }
        if (supportingAttachmentReference === "") {
            delete this.s1Application.supportingAttachmentReference;
        }
        this.s1Application.status = this.specialApplicationType.includes(this.s1Application.applicationType.description.toUpperCase())
            ? _shared__WEBPACK_IMPORTED_MODULE_8__["OTHER_STATUS"].FOR_APPROVAL
            : "APPROVED";
        console.log("TO PROCESS: ", this.s1Application);
        this.apiService
            .save(`${_shared__WEBPACK_IMPORTED_MODULE_8__["ENDPOINTS"].applicationForm}/s1/${ascUser}/${action}`, this.s1Application)
            .subscribe((res) => {
            if (res) {
                console.log("SAVED STATUS 1: ", res);
                if (res.code === 400) {
                    this.sweetAlertService.customErrorMessage(res.responseMessage);
                }
                else {
                    console.log("SAVED STATUS: ", res.responseData.data);
                    this.s1Application = res.responseData.data;
                    // saving of media
                    // if (this.s1Application.refTypeOfMedium === TYPE_OF_MEDIUM.SINGLE_MEDIA) {
                    //   this.saveUpdateApplicationSingleMedia();
                    // } else {
                    //   this.saveUpdateMultimedia();
                    // }
                    // Forward Multiple Application
                    if (this.s1Application.multipleApplication &&
                        this.s1Application.multipleApplication
                            .actualNumberOfApplicationForm ===
                            this.s1Application.multipleApplication
                                .countVerifiedApplicationForm) {
                        this.forwardMultipleAppsTo(ascUser);
                    }
                    else {
                        console.log("SAVED STATUS: ", res.responseData.data);
                        this.s1Application = res.responseData.data;
                        // saving of media
                        // if (this.s1Application.refTypeOfMedium === TYPE_OF_MEDIUM.SINGLE_MEDIA) {
                        //   this.saveUpdateApplicationSingleMedia();
                        // } else {
                        //   this.saveUpdateMultimedia();
                        // }
                        // Forward Multiple Application
                        if (this.s1Application.multipleApplication &&
                            this.s1Application.multipleApplication
                                .actualNumberOfApplicationForm ===
                                this.s1Application.multipleApplication
                                    .countVerifiedApplicationForm) {
                            this.forwardMultipleAppsTo(ascUser);
                        }
                        else {
                            this.spinner.hide();
                            this.sweetAlertService.success(res);
                        }
                    }
                }
            }
        }, (err) => {
            console.log(err);
            this.spinner.hide();
            this.sweetAlertService.error(err);
            this.dataStorage.setDisplayProgressbar(false);
        }, () => {
            this.spinner.hide();
            this.dataStorage.setDisplayProgressbar(false);
            // if (this.s1Application.multipleApplication) {
            //   this.router.navigate(['/asc/page/application/s1/multiple']);
            // } else {
            this.navigateToS1List();
            //
            if (this.currentUserRole === _shared__WEBPACK_IMPORTED_MODULE_8__["USER_ROLES"].ROLE_APPLICANT &&
                this.checkCutOffTime()) {
                this._snackBar.open("Cutoff reached. Application will be processed the next day.", "OK", {
                    horizontalPosition: "right",
                    verticalPosition: "top",
                    duration: 5000,
                });
            }
            // }
        });
        // if (this.currentUserRole === USER_ROLES.ROLE_ENCODER && this.s1Application.externalStatus === APPLICATION_STATUS.SAVED) {
        //   this.saveS1ApplicationByEncoder(this.s1Application);
        // }
    }
    submitDecisionAndComment() {
        sweetalert2__WEBPACK_IMPORTED_MODULE_7___default.a.fire({
            text: "Are you sure you want to save changes to this application?",
            icon: "question",
            showCancelButton: true,
            confirmButtonColor: "#3085d6",
            cancelButtonColor: "#d33",
            confirmButtonText: "Confirm",
        }).then((result) => {
            if (result.value) {
                let endpoint = "";
                if (this.currentUser.userRole.name === _shared__WEBPACK_IMPORTED_MODULE_8__["USER_ROLES"].ROLE_SCREENER) {
                    endpoint = _shared__WEBPACK_IMPORTED_MODULE_8__["ENDPOINTS"].submitDecisionAndCommentScreener;
                }
                else if (this.currentUser.userRole.name === _shared__WEBPACK_IMPORTED_MODULE_8__["USER_ROLES"].ROLE_REVIEWER) {
                    endpoint = _shared__WEBPACK_IMPORTED_MODULE_8__["ENDPOINTS"].submitDecisionAndCommentReviewer;
                }
                this.apiService.save(endpoint, this.s1Application).subscribe((res) => {
                    console.log(res);
                    this.sweetAlertService.customSuccessMessage("Decision and comment successfully submitted.");
                    this.navigateToS1List();
                }, (err) => { });
            }
        });
    }
    forwardMultipleAppsTo(user) {
        console.log("forwardMultipleAppsTo");
        console.log(this.s1Application);
        let endpoint = "";
        if (user === "encoder") {
            this.s1Application.multipleApplication.assignedEncoder = this.s1Application.assignedEncoder;
            endpoint = _shared__WEBPACK_IMPORTED_MODULE_8__["ENDPOINTS"].forwardMultipleAppFormToAdSpe;
        }
        else if (user === "ad-specialist") {
            this.s1Application.multipleApplication.assignedAdSpecialist = this.s1Application.assignedAdSpecialist;
            this.s1Application.multipleApplication.assignedScreener = this.s1Application.assignedScreener;
            endpoint = _shared__WEBPACK_IMPORTED_MODULE_8__["ENDPOINTS"].forwardMultipleAppFormToScreener;
        }
        else if (user === "screener") {
            this.s1Application.multipleApplication.assignedReviewer = this.s1Application.assignedReviewer;
            endpoint = _shared__WEBPACK_IMPORTED_MODULE_8__["ENDPOINTS"].forwardMultipleAppFormToReviewer;
        }
        else if (user === "reviewer") {
            endpoint =
                _shared__WEBPACK_IMPORTED_MODULE_8__["ENDPOINTS"].releaseMultipleApplication +
                    this.s1Application.multipleApplication.id +
                    `/release`;
        }
        this.apiService
            .save(endpoint, this.s1Application.multipleApplication)
            .subscribe((res) => {
            console.log("Forwarded: ", res);
            this.spinner.hide();
            this.sweetAlertService.customSuccessMessage("Multiple application successfully forwarded to the next user.");
        }, (err) => {
            this.spinner.hide();
            this.sweetAlertService.error(err);
        }, () => {
            this.spinner.hide();
        });
    }
    /////////////////////////// FOR COMPLIANCE //////////////////////////////////
    saveStatusForCompliance(ascUser = "", action = "", status = "") {
        console.log("Com > ", this.s1Application);
        let msg;
        if (status ===
            _shared__WEBPACK_IMPORTED_MODULE_8__["APPLICATION_STATUS_FOR_COMPLIANCE"].SUBMITTED_DOCUMENT_FOR_COMPLIANCE) {
            msg = _shared__WEBPACK_IMPORTED_MODULE_8__["COMMON_FUNCTION"].SUBMIT;
        }
        else {
            msg = _shared__WEBPACK_IMPORTED_MODULE_8__["COMMON_FUNCTION"].ACCEPT;
        }
        if (this.s1Application.submissionType === _shared__WEBPACK_IMPORTED_MODULE_8__["SUBMISSION_TYPE"].REVISION) {
            this.s1Application.submissionType = _shared__WEBPACK_IMPORTED_MODULE_8__["SUBMISSION_TYPE"].REVISION;
        }
        else {
            this.s1Application.submissionType = _shared__WEBPACK_IMPORTED_MODULE_8__["SUBMISSION_TYPE"].ORIGINAL;
        }
        sweetalert2__WEBPACK_IMPORTED_MODULE_7___default.a.fire({
            text: "Are you sure you want to " + msg + " this application for compliance?",
            icon: "question",
            showCancelButton: true,
            confirmButtonColor: "#3085d6",
            cancelButtonColor: "#d33",
            confirmButtonText: "Confirm",
        }).then((result) => {
            if (result.value) {
                this.spinner.show();
                this.dataStorage.setDisplayProgressbar(true);
                console.log("TO SAVE: ", this.s1Application);
                // FOR ADSPE: Save Supporting Documents
                if (this.materialInformation.newSupportiveDocumentList.length > 0) {
                    this.saveSupportingDocuments();
                }
                this.spinner.show();
                this.s1Application.actionBy = this.currentUser;
                if (ascUser === "ad-specialist" &&
                    action === "verify" &&
                    status ===
                        _shared__WEBPACK_IMPORTED_MODULE_8__["APPLICATION_STATUS_FOR_COMPLIANCE"].COMPLIANCE_DOCUMENT_VERIFIED_BY_AD_SPE) {
                    // this.s1Application.assignedScreener = this.s1Application.assignedUser;
                    this.s1Application.assignedUser = this.s1Application.assignedScreener;
                    console.log("ASSINGED SCREENER", this.s1Application.assignedUser);
                }
                if (ascUser === "screener" &&
                    action === "verify" &&
                    status ===
                        _shared__WEBPACK_IMPORTED_MODULE_8__["APPLICATION_STATUS_FOR_COMPLIANCE"].COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER) {
                    // this.s1Application.assignedScreener = this.s1Application.assignedUser;
                    this.s1Application.assignedUser = this.s1Application.assignedReviewer;
                    console.log("ASSINGED REVIEWER", this.s1Application.assignedUser);
                }
                this.apiService
                    .save(`${_shared__WEBPACK_IMPORTED_MODULE_8__["ENDPOINTS"].applicationForm}/s1/compliance/${ascUser}/${action}`, this.s1Application)
                    .subscribe((res) => {
                    console.log("SAVED STATUS: ", res.responseData.data);
                    this.spinner.hide();
                    this.sweetAlertService.success(res);
                    this.navigateToS1List();
                }, (err) => {
                    console.log(err);
                    this.spinner.hide();
                    this.sweetAlertService.error(err);
                    this.dataStorage.setDisplayProgressbar(false);
                }, () => {
                    this.spinner.hide();
                    this.dataStorage.setDisplayProgressbar(false);
                });
            }
        });
    }
    /////////////////////////// REVISION //////////////////////////////////
    saveStatusRevision(ascUser = "", action = "", status = "") {
        console.log("Rev > ", this.s1Application);
        sweetalert2__WEBPACK_IMPORTED_MODULE_7___default.a.fire({
            text: "Are you sure you want to save changes for revision?",
            icon: "question",
            showCancelButton: true,
            confirmButtonColor: "#3085d6",
            cancelButtonColor: "#d33",
            confirmButtonText: "Confirm",
        }).then((result) => {
            if (result.value) {
                this.spinner.show();
                this.dataStorage.setDisplayProgressbar(true);
                if (this.s1Application.revisionNo === 2 &&
                    this.currentUser.userRole.name === _shared__WEBPACK_IMPORTED_MODULE_8__["USER_ROLES"].ROLE_APPLICANT) {
                    this.spinner.hide();
                    this.sweetAlertService.customSuccessMessage("Presentor can only submit revision no more than 2 times.");
                }
                else {
                    if (this.currentUser.userRole.name === _shared__WEBPACK_IMPORTED_MODULE_8__["USER_ROLES"].ROLE_APPLICANT) {
                        this.s1Application.submissionType = _shared__WEBPACK_IMPORTED_MODULE_8__["SUBMISSION_TYPE"].REVISION;
                    }
                    // FOR ADSPE: Save Supporting Documents
                    console.log("Save supporting..");
                    if (this.materialInformation.newSupportiveDocumentList.length > 0) {
                        this.saveSupportingDocuments();
                    }
                    this.s1Application.actionBy = this.dataStorage.getUserAccount();
                    if (ascUser === "ad-specialist" &&
                        action === "verify" &&
                        status === _shared__WEBPACK_IMPORTED_MODULE_8__["APPLICATION_STATUS_REVISION"].REVISION_VERIFIED_BY_AD_SPE) {
                        this.s1Application.assignedUser = this.s1Application.assignedScreener;
                    }
                    if (ascUser === "screener" &&
                        action === "verify" &&
                        status === _shared__WEBPACK_IMPORTED_MODULE_8__["APPLICATION_STATUS_REVISION"].REVISION_SCREENED) {
                        this.s1Application.assignedUser = this.s1Application.assignedReviewer;
                    }
                    console.log("TO SAVE: ", this.s1Application);
                    this.spinner.show();
                    this.apiService
                        .save(`${_shared__WEBPACK_IMPORTED_MODULE_8__["ENDPOINTS"].applicationForm}/s1/revision/${ascUser}/${action}`, this.s1Application)
                        .subscribe((res) => {
                        console.log("SAVED STATUS: ", res.responseData.data);
                        this.spinner.hide();
                        this.sweetAlertService.success(res);
                        this.navigateToS1List();
                    }, (err) => {
                        this.spinner.hide();
                        console.log(err);
                        this.sweetAlertService.error(err);
                        this.dataStorage.setDisplayProgressbar(false);
                    }, () => {
                        this.dataStorage.setDisplayProgressbar(false);
                    });
                }
            }
        });
    }
    requestSpecialS1ApplicationApproval() {
        this.applicationRequest = {
            id: 0,
            adTitle: this.s1Application.adTitle,
            applicationOwner: this.s1Application.applicationOwner,
            applicationType: this.s1Application.applicationType,
            brand: this.s1Application.brand,
            product: this.s1Application.product,
            // category: this.s1Application.category,
            company: this.s1Application.company,
            formType: this.s1Application.formType,
            // membersAffiliation: this.s1Application.membersAffiliation,
            status: _shared__WEBPACK_IMPORTED_MODULE_8__["OTHER_STATUS"].FOR_APPROVAL,
            submissionDate: new Date(this.s1Application.submissionDate),
            tagLine: this.s1Application.tagLine,
            submitApplicationForm: false,
            hasSpecialClearing: false,
            applicationForm: null,
        };
        sweetalert2__WEBPACK_IMPORTED_MODULE_7___default.a.fire({
            text: "Are you sure you want to request this application for approval?",
            icon: "question",
            showCancelButton: true,
            confirmButtonColor: "#3085d6",
            cancelButtonColor: "#d33",
            confirmButtonText: "Confirm",
        }).then((result) => {
            if (result.value) {
                this.spinner.show();
                this.dataStorage.setDisplayProgressbar(true);
                console.log("TO SAVE: ", this.applicationRequest);
                if (this.currentUser.userRole.name === _shared__WEBPACK_IMPORTED_MODULE_8__["USER_ROLES"].ROLE_ENCODER) {
                    this.applicationRequest.applicationOwner = this.s1Application.applicationOwner;
                }
                else {
                    this.applicationRequest.applicationOwner = this.currentUser;
                }
                this.apiService
                    .save(_shared__WEBPACK_IMPORTED_MODULE_8__["ENDPOINTS"].applicationRequests, this.applicationRequest)
                    .subscribe((res) => {
                    console.log("SAVED STATUS: ", res.responseData.data);
                    this.spinner.hide();
                    this.sweetAlertService.success(res);
                    // this.navigateToS1List();
                    this.router.navigate(["asc/page/application/s1/special"]);
                }, (err) => {
                    this.spinner.hide();
                    console.log(err);
                    this.sweetAlertService.error(err);
                    this.dataStorage.setDisplayProgressbar(false);
                }, () => {
                    this.spinner.hide();
                    this.dataStorage.setDisplayProgressbar(false);
                });
            }
        });
    }
    accordionDisablingFunction() {
        if (this.currentUser.userRole.name === _shared__WEBPACK_IMPORTED_MODULE_8__["USER_ROLES"].ROLE_APPLICANT) {
            // if (this.s1Application.membersAffiliation && this.company && this.s1Application.brand) {
            // this.accordionDisable = !this.accordionDisable;
            this.accordionExpanded = !this.accordionExpanded;
            this.validationMessage = "";
            // } else {
            //   this.validationMessage = ' Please provide all the required information...'
            // }
        }
    }
    disabledWeekEnds(d) {
        const day = (d || new Date()).getDay();
        return (((day !== 0 && day !== 6) ||
            activeWeekendDates.find((weekendDate) => {
                return Object(date_fns__WEBPACK_IMPORTED_MODULE_30__["format"])(d, "yyyy-MM-dd") === Object(date_fns__WEBPACK_IMPORTED_MODULE_30__["format"])(weekendDate, "yyyy-MM-dd");
            })) &&
            !Boolean(activeHolidayDates.find((holidayDate) => {
                return Object(date_fns__WEBPACK_IMPORTED_MODULE_30__["format"])(d, "yyyy-MM-dd") === Object(date_fns__WEBPACK_IMPORTED_MODULE_30__["format"])(holidayDate, "yyyy-MM-dd");
            })));
    }
    disableSaveAndSubmitButton() {
        if (this.s1Application.autoSubmit === false) {
            this.isScheduleSendIsEmpty = false;
        }
        if (this.s1Application.autoSubmit === true) {
            this.isScheduleSendIsEmpty = true;
            if (this.s1Application.submissionDate === null ||
                this.s1Application.submissionDate === undefined) {
                this.isScheduleSendIsEmpty = true;
            }
            else {
                this.isScheduleSendIsEmpty = false;
            }
        }
    }
    adSpecValidation(i) { }
    buttonValidation(i) {
        if (this.currentUserRole === _shared__WEBPACK_IMPORTED_MODULE_8__["USER_ROLES"].ROLE_AD_SPECIALIST &&
            this.s1Application.assignedScreener) {
            this.buttonDisabled = false;
        }
        else if (this.currentUserRole === _shared__WEBPACK_IMPORTED_MODULE_8__["USER_ROLES"].ROLE_SCREENER &&
            this.s1Application.assignedReviewer) {
            // if ((i || this.s1Application.assignedUser.userRole.name === USER_ROLES.ROLE_REVIEWER) &&
            //   (i || this.s1Application.assignedUser || this.s1Application.decisionStatus)) {
            this.buttonDisabled = false;
            // }
        }
        this.dataStorage.setDecisionStatus(i);
        if ((i === "INCOMPLETE" || i === "DISAPPROVED") &&
            this.currentUserRole === _shared__WEBPACK_IMPORTED_MODULE_8__["USER_ROLES"].ROLE_SCREENER) {
            if (this.s1Application.internalStatus ===
                _shared__WEBPACK_IMPORTED_MODULE_8__["APPLICATION_STATUS_FOR_COMPLIANCE"].COMPLIANCE_DOCUMENT_VERIFIED_BY_AD_SPE ||
                this.s1Application.internalStatus ===
                    _shared__WEBPACK_IMPORTED_MODULE_8__["APPLICATION_STATUS_REVISION"].REVISION_VERIFIED_BY_AD_SPE) {
                if (this.s1Application.decisionStatus ===
                    _shared__WEBPACK_IMPORTED_MODULE_8__["APP_DECISION_STATUS"].INCOMPLETE ||
                    this.s1Application.decisionStatus === _shared__WEBPACK_IMPORTED_MODULE_8__["APP_DECISION_STATUS"].DISAPPROVED) {
                    this.s1Application.decisionStatus = i;
                    // if (this.rationaleLists.length === 0) {
                    this.incompleteDisapprovedModal(i);
                    // }
                }
            }
        }
    }
    selectApplicant(res) {
        this.selectedApplicationOwner = res;
        this.getPresentorDetails();
    }
    saveS1ApplicationByEncoder(data) {
        this.spinner.show();
        this.apiService
            .save(_shared__WEBPACK_IMPORTED_MODULE_8__["ENDPOINTS"].applicationFormEncoder + _shared__WEBPACK_IMPORTED_MODULE_8__["COMMON_FUNCTION"].VERIFY, data)
            .subscribe((res) => {
            this.spinner.hide();
            console.log("SAVED BY ENCODER : ", res.responseData.data);
        }, (err) => {
            this.spinner.hide();
        });
    }
    rejectDisapprovedModal() {
        const dialogRef = this.dialog.open(app_modules_fragments_reject_disapproved_reason_reject_disapproved_reason_component__WEBPACK_IMPORTED_MODULE_21__["RejectDisapprovedReasonComponent"], {
            width: "50%",
            height: "65%",
            data: {
                s1Application: this.s1Application,
                applicationStage: "s1",
            },
        });
    }
    incompleteDisapprovedModal(decisionStatus) {
        const dialogRef = this.dialog.open(app_modules_fragments_incomplete_disapproved_rationale_incomplete_disapproved_rationale_component__WEBPACK_IMPORTED_MODULE_24__["IncompleteDisapprovedRationaleComponent"], {
            width: "50%",
            height: "65%",
            data: {
                s1Application: this.s1Application,
                applicationStage: "s1",
            },
        });
        dialogRef.afterClosed().subscribe((result) => {
            this.getRationaleList();
            if (this.rationaleLists.length > 0 ||
                this.rationaleOthersList.length > 0) {
                this.s1Application.decisionStatus = decisionStatus;
            }
            if (result) {
                this.buttonDisabled = false;
            }
        });
    }
    navigateToS1List() {
        // setTimeout(() => {
        this.router.navigate(["asc/page/application/s1/lists"]);
        // }, 2000);
    }
    openPerformanceMetrics() {
        const dialogRef = this.dialog.open(_performance_metrics_performance_metrics_component__WEBPACK_IMPORTED_MODULE_23__["PerformanceMetricsComponent"], {
            data: {
                appFormReference: this.s1Application.appFormReference,
                referenceCode: this.s1Application.referenceCode,
            },
        });
        dialogRef.afterClosed().subscribe((result) => { });
    }
    viewReport(id, filename) {
        var _a, _b;
        if (filename === "S1_Decision_Form" || filename === "Stamp_Material") {
            const downloadURL = filename === "S1_Decision_Form"
                ? (_a = this.s1Application) === null || _a === void 0 ? void 0 : _a.decisionFormFileURL : filename === "Stamp_Material"
                ? (_b = this.s1Application) === null || _b === void 0 ? void 0 : _b.stampMaterialFileURL : "";
            window.open(downloadURL);
        }
        else {
            this.report.filename = filename;
            this.report.format = "pdf";
            (this.report.module = "Form"),
                (this.report.params = { applicationFormId: id });
            console.log(this.report);
            this.spinner.show();
            this.apiService
                .printReport(_shared__WEBPACK_IMPORTED_MODULE_8__["ENDPOINTS"].generateReports, this.report)
                .subscribe((data) => {
                const newBlob = new Blob([data], { type: "application/pdf" });
                const downloadURL = URL.createObjectURL(newBlob);
                this.spinner.hide();
                window.open(downloadURL);
            }, (err) => {
                this.spinner.hide();
            });
        }
    }
    getRationaleList() {
        // Rationale Object
        this.apiService
            .findByParam(_shared__WEBPACK_IMPORTED_MODULE_8__["ENDPOINTS"].applicationRationale, `application-form-id/${this.s1Application.id}`)
            .subscribe((res) => {
            this.rationaleOthersList = res.responseData.data;
        });
        // Rationale List
        this.apiService
            .findByParam(_shared__WEBPACK_IMPORTED_MODULE_8__["ENDPOINTS"].rationaleList, `application/${this.s1Application.id}`)
            .subscribe((res) => {
            this.rationaleLists = res;
        });
        this.rationaleDisplay = true;
    }
    resubmitApplication(id) {
        var _a;
        if (id === void 0) { id = (_a = this.s1Application) === null || _a === void 0 ? void 0 : _a.id; }
        this.spinner.show();
        let endpoint = this.hasMultimediaLengthChange
            ? _shared__WEBPACK_IMPORTED_MODULE_8__["ENDPOINTS"].modifyApprovedS1ApplicationFormMultimedia
            : _shared__WEBPACK_IMPORTED_MODULE_8__["ENDPOINTS"].modifyApprovedS1ApplicationFormSingleMedia;
        endpoint += `=${id}`;
        const newMedia = this.materialInformation.newMultimediaList[0];
        const obj = this.hasMultimediaLengthChange
            ? {
                appFormReference: this.s1Application.appFormReference,
                typeOfMedium: newMedia,
                mediaType: "STATIC",
                multimediaSizeLength: newMedia.sizeLength,
                amount: 0,
            }
            : this.applicationSingleMedia;
        this.apiService.save(endpoint, obj).subscribe((res) => {
            this.spinner.hide();
            if (this.s1Application.refTypeOfMedium === _shared__WEBPACK_IMPORTED_MODULE_8__["TYPE_OF_MEDIUM"].SINGLE_MEDIA) {
                this.saveUpdateApplicationSingleMedia(null, null, null);
            }
            else {
                this.saveUpdateMultimedia(null, null, null);
            }
            this.sweetAlertService.success(res);
            if (this.s1Application.multipleApplication) {
                this.router.navigate(["asc/page/application/s1/multiple"]);
            }
            else {
                this.navigateToS1List();
            }
        }, (err) => {
            this.spinner.hide();
        });
    }
    clearDecisionStatus() {
        this.s1Application.decisionStatus = "";
    }
    checkSingleMediaChanges() {
        var _a, _b;
        this.applicationSingleMedia = (_a = this.materialInformation) === null || _a === void 0 ? void 0 : _a.applicationSingleMedia;
        this.disableSubmitButtonByMedia = (_b = this.materialInformation) === null || _b === void 0 ? void 0 : _b.disableSubmitButtonByMedia;
        this.hasMultimediaLengthToEnableSubmit = true;
    }
    checkMultimediaChanges() {
        var _a, _b, _c;
        // this.hasMultimediaLengthToEnableSubmit = this.multimediaMovingList.length ? true : false;
        this.disableSubmitButtonByMedia = false;
        this.hasMultimediaLengthToEnableSubmit =
            ((_a = this.materialInformation) === null || _a === void 0 ? void 0 : _a.newMultimediaList.length) ||
                this.multimediaMovingList.length ||
                this.multimediaStaticList.length
                ? true
                : false;
        const multimediaListChanges = (_c = (_b = this.materialInformation) === null || _b === void 0 ? void 0 : _b.newMultimediaList) === null || _c === void 0 ? void 0 : _c.map((mappedMultimedia) => ({
            multimediaSizeLength: mappedMultimedia === null || mappedMultimedia === void 0 ? void 0 : mappedMultimedia.sizeLength,
            typeOfMedium: mappedMultimedia === null || mappedMultimedia === void 0 ? void 0 : mappedMultimedia.description,
        }));
        const hasSizeLengthChange = this.currentSizeLengthMultimedia
            .map((media) => {
            var _a;
            return ({
                multimediaSizeLength: media.multimediaSizeLength,
                typeOfMedium: media.typeOfMedium,
                multimediaSizeLengthNew: (_a = multimediaListChanges === null || multimediaListChanges === void 0 ? void 0 : multimediaListChanges.filter((filteredMedia) => filteredMedia.typeOfMedium === media.typeOfMedium)[0]) === null || _a === void 0 ? void 0 : _a.multimediaSizeLength,
            });
        })
            .filter((filteredRes) => +filteredRes.multimediaSizeLength !==
            +filteredRes.multimediaSizeLengthNew &&
            filteredRes.multimediaSizeLengthNew);
        const hasNewMultimediaType = multimediaListChanges === null || multimediaListChanges === void 0 ? void 0 : multimediaListChanges.map((multimedia) => this.currentSizeLengthMultimedia.some((currMedia) => currMedia.typeOfMedium === multimedia.typeOfMedium)).includes(false);
        this.hasMultimediaLengthChange =
            hasNewMultimediaType || hasSizeLengthChange.length ? true : false;
    }
    checkEmittedMultimedia(multimediaDTO) {
        this.multimediaDTO = multimediaDTO.data;
        switch (multimediaDTO.type) {
            case _shared__WEBPACK_IMPORTED_MODULE_8__["TYPE_OF_MEDIUM"].MULTIMEDIA_MOVING:
                if (multimediaDTO.data) {
                    this.hasMultimediaLengthToEnableSubmit =
                        multimediaDTO.data.sizeLength > 0 ? true : false;
                    this.disableSubmitButtonByMedia = multimediaDTO.data.applicationMultimediaMovingList.filter((medium) => medium.hasSelected === true)
                        ? false
                        : true;
                }
                break;
            case _shared__WEBPACK_IMPORTED_MODULE_8__["TYPE_OF_MEDIUM"].MULTIMEDIA_STATIC:
                if (multimediaDTO.data) {
                    this.disableSubmitButtonByMedia = multimediaDTO.data.applicationMultimediaStaticList.filter((medium) => medium.hasSelected === true)
                        ? false
                        : true;
                    this.hasMultimediaLengthToEnableSubmit = multimediaDTO.data.applicationMultimediaStaticList.filter((medium) => medium.multimediaStaticMedium === "digital static" ||
                        (medium.hasSelected === true && medium.sizeLength))
                        ? true
                        : false;
                }
                break;
        }
    }
    fetchMultimedia() {
        console.log("S1 APPP::: ", this.s1Application);
        let typeofMedium = this.s1Application.refTypeOfMedium === _shared__WEBPACK_IMPORTED_MODULE_8__["TYPE_OF_MEDIUM"].MULTIMEDIA_MOVING
            ? "moving"
            : "static";
        let endpoint = _shared__WEBPACK_IMPORTED_MODULE_8__["ENDPOINTS"].applicationMultimedia +
            "-" +
            typeofMedium +
            "/app-form-reference";
        this.apiService
            .findByParam(endpoint, this.s1Application.appFormReference)
            .subscribe((multimedia) => {
            console.log("Multimedia Response: ", multimedia.responseData.data);
            if (multimedia)
                this.multimediaDTO = multimedia.responseData.data;
        });
    }
    submitAppeal() {
        let endpoint;
        if (this.isAdmin) {
            endpoint = _shared__WEBPACK_IMPORTED_MODULE_8__["ENDPOINTS"].admin + `/s1/verify/appeal`;
        }
        else if (this.isAdSpecialist) {
            endpoint = _shared__WEBPACK_IMPORTED_MODULE_8__["ENDPOINTS"].applicationFormAdSpecialist + `verify/appeal`;
        }
        this.spinner.show();
        this.apiService.save(endpoint, this.s1Application).subscribe((res) => {
            this.spinner.hide();
            this.sweetAlertService.success(res);
            console.log("submitAppeal : ", res.responseData.data);
            this.navigateToS1List();
        }, (err) => {
            this.spinner.hide();
        });
    }
    sendDecisionOrStampMaterialManual() {
        sweetalert2__WEBPACK_IMPORTED_MODULE_7___default.a.fire({
            text: "Are you sure you want to send this application form?",
            icon: "question",
            showCancelButton: true,
            confirmButtonColor: "#3085d6",
            cancelButtonColor: "#d33",
            confirmButtonText: "Confirm",
        }).then((result) => {
            if (result.value) {
                this.apiService
                    .save(_shared__WEBPACK_IMPORTED_MODULE_8__["ENDPOINTS"].s1ManualRelease + `/${this.s1Application.id}`, this.s1Application)
                    .subscribe((res) => {
                    this.sweetAlertService.customSuccessMessage(res.message);
                });
            }
        });
    }
    checkCutOffTime() {
        let regex = new RegExp(":", "g");
        let startTime = "11:00:00";
        let endTime = "23:59:59";
        let currentTime = String(new Date().getHours() +
            ":" +
            new Date().getMinutes() +
            ":" +
            new Date().getSeconds());
        if (parseInt(currentTime.replace(regex, "")) >=
            parseInt(startTime.replace(regex, "")) &&
            parseInt(currentTime.replace(regex, "")) <=
                parseInt(endTime.replace(regex, ""))) {
            return true;
        }
        else {
            return false;
        }
    }
    checkMaterialFieldErrors() {
        var _a, _b;
        return ((!((_a = this.s1Application) === null || _a === void 0 ? void 0 : _a.adTitle) ||
            !((_b = this.s1Application) === null || _b === void 0 ? void 0 : _b.refTypeOfMedium) ||
            !this.hasMultimediaLengthToEnableSubmit ||
            this.disableSubmitButtonByMedia) &&
            !this.s1Application.typeOfMedium);
    }
    getAllActiveHolidays() {
        this.apiService.findAll(_shared__WEBPACK_IMPORTED_MODULE_8__["ENDPOINTS"].holidays).subscribe((res) => {
            activeHolidayDates = res.responseData.data
                .filter((holidayDate) => holidayDate.status === "ACTIVE" &&
                holidayDate.holidayType !== "WEEKEND")
                .map((holidayDate) => new Date(holidayDate.holidayDate));
        });
    }
    getAllActiveWeekends() {
        this.apiService.findAll(_shared__WEBPACK_IMPORTED_MODULE_8__["ENDPOINTS"].holidays).subscribe((res) => {
            activeWeekendDates = res.responseData.data
                .filter((holidayDate) => holidayDate.status === "ACTIVE" &&
                holidayDate.holidayType === "WEEKEND")
                .map((holidayDate) => new Date(holidayDate.holidayDate));
        });
    }
    isSaveAndRequestForApprovalDisabled() {
        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;
        return ((!((_a = this.s1Application) === null || _a === void 0 ? void 0 : _a.brand) ||
            !((_b = this.s1Application) === null || _b === void 0 ? void 0 : _b.company) ||
            !((_c = this.s1Application) === null || _c === void 0 ? void 0 : _c.adTitle) || ((_e = (_d = this.s1Application) === null || _d === void 0 ? void 0 : _d.brand) === null || _e === void 0 ? void 0 : _e.penalty) ||
            !((_f = this.s1Application) === null || _f === void 0 ? void 0 : _f.product) || ((_h = (_g = this.s1Application) === null || _g === void 0 ? void 0 : _g.company) === null || _h === void 0 ? void 0 : _h.delinquent) ||
            this.isInactiveAffiliation ||
            ((_k = (_j = this.s1Application) === null || _j === void 0 ? void 0 : _j.company) === null || _k === void 0 ? void 0 : _k.status) === "INACTIVE" ||
            !this.s1Application.submissionDate));
    }
    isSingleRegularDisabled() {
        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u;
        if (((_b = (_a = this.s1Application) === null || _a === void 0 ? void 0 : _a.applicationType) === null || _b === void 0 ? void 0 : _b.description) === 'Special Screening' ||
            ((_d = (_c = this.s1Application) === null || _c === void 0 ? void 0 : _c.applicationType) === null || _d === void 0 ? void 0 : _d.description) === 'Special Screening and Clearing') {
            return this.isSaveAndRequestForApprovalDisabled();
        }
        return ((!((_e = this.s1Application) === null || _e === void 0 ? void 0 : _e.brand) ||
            !((_f = this.s1Application) === null || _f === void 0 ? void 0 : _f.company) ||
            !((_g = this.s1Application) === null || _g === void 0 ? void 0 : _g.adTitle) ||
            !((_h = this.s1Application) === null || _h === void 0 ? void 0 : _h.refTypeOfMedium) ||
            !((_j = this.s1Application) === null || _j === void 0 ? void 0 : _j.mainAttachmentReference) ||
            !((_k = this.s1Application) === null || _k === void 0 ? void 0 : _k.refTypeOfMedium) ||
            (!((_l = this.s1Application) === null || _l === void 0 ? void 0 : _l.hasNoSupportingDocs) &&
                !((_m = this.s1Application) === null || _m === void 0 ? void 0 : _m.supportingAttachmentReference)) || ((_p = (_o = this.s1Application) === null || _o === void 0 ? void 0 : _o.brand) === null || _p === void 0 ? void 0 : _p.penalty) ||
            !((_q = this.s1Application) === null || _q === void 0 ? void 0 : _q.product) || ((_s = (_r = this.s1Application) === null || _r === void 0 ? void 0 : _r.company) === null || _s === void 0 ? void 0 : _s.delinquent) ||
            this.isInactiveAffiliation ||
            ((_u = (_t = this.s1Application) === null || _t === void 0 ? void 0 : _t.company) === null || _u === void 0 ? void 0 : _u.status) === "INACTIVE" ||
            this.disableSubmitButtonByMedia ||
            !this.hasMultimediaLengthToEnableSubmit) &&
            !this.s1Application.typeOfMedium);
    }
    isMultipleRegularDisabled() {
        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l;
        return (!((_a = this.s1Application) === null || _a === void 0 ? void 0 : _a.brand) ||
            !((_b = this.s1Application) === null || _b === void 0 ? void 0 : _b.company) ||
            !((_c = this.s1Application) === null || _c === void 0 ? void 0 : _c.adTitle) ||
            !((_d = this.s1Application) === null || _d === void 0 ? void 0 : _d.refTypeOfMedium) || ((_f = (_e = this.s1Application) === null || _e === void 0 ? void 0 : _e.brand) === null || _f === void 0 ? void 0 : _f.penalty) ||
            !((_g = this.s1Application) === null || _g === void 0 ? void 0 : _g.product) || ((_j = (_h = this.s1Application) === null || _h === void 0 ? void 0 : _h.company) === null || _j === void 0 ? void 0 : _j.delinquent) ||
            this.isInactiveAffiliation ||
            ((_l = (_k = this.s1Application) === null || _k === void 0 ? void 0 : _k.company) === null || _l === void 0 ? void 0 : _l.status) === "INACTIVE" ||
            !this.s1Application.submissionDate);
    }
};
AddS1ApplicationComponent.ctorParameters = () => [
    { type: _services__WEBPACK_IMPORTED_MODULE_9__["ApiService"] },
    { type: _services__WEBPACK_IMPORTED_MODULE_9__["SweetAlertService"] },
    { type: _services__WEBPACK_IMPORTED_MODULE_9__["DataStorageService"] },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_13__["ActivatedRoute"] },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_13__["Router"] },
    { type: _angular_platform_browser__WEBPACK_IMPORTED_MODULE_17__["DomSanitizer"] },
    { type: _angular_common__WEBPACK_IMPORTED_MODULE_14__["DatePipe"] },
    { type: ngx_spinner__WEBPACK_IMPORTED_MODULE_19__["NgxSpinnerService"] },
    { type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["ChangeDetectorRef"] },
    { type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_22__["MatDialog"] },
    { type: app_core_services_common_services_service__WEBPACK_IMPORTED_MODULE_27__["CommonServices"] },
    { type: _angular_material_snack_bar__WEBPACK_IMPORTED_MODULE_29__["MatSnackBar"] }
];
AddS1ApplicationComponent.propDecorators = {
    accordion: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["ViewChild"], args: [_angular_material_expansion__WEBPACK_IMPORTED_MODULE_10__["MatAccordion"],] }],
    clientInformation: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["ViewChild"], args: [_client_information_client_information_component__WEBPACK_IMPORTED_MODULE_11__["ClientInformationComponent"], { static: false },] }],
    materialInformation: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["ViewChild"], args: [_material_information_material_information_component__WEBPACK_IMPORTED_MODULE_12__["MaterialInformationComponent"], { static: false },] }],
    previewApplication: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["ViewChild"], args: [_preview_application_preview_application_component__WEBPACK_IMPORTED_MODULE_16__["PreviewApplicationComponent"], { static: false },] }],
    datepicker: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["ViewChild"], args: [_angular_material_datepicker__WEBPACK_IMPORTED_MODULE_31__["MatDatepicker"],] }]
};
AddS1ApplicationComponent = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_4__["Component"])({
        selector: "app-add-s1-application",
        template: _raw_loader_add_s1_application_component_html__WEBPACK_IMPORTED_MODULE_1__["default"],
        styles: [_add_s1_application_component_scss__WEBPACK_IMPORTED_MODULE_2__["default"]]
    })
], AddS1ApplicationComponent);



/***/ }),

/***/ "tXAP":
/*!******************************************************************************************************!*\
  !*** ./src/app/modules/fragments/update-special-application/update-special-application.component.ts ***!
  \******************************************************************************************************/
/*! exports provided: UpdateSpecialApplicationComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UpdateSpecialApplicationComponent", function() { return UpdateSpecialApplicationComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "mrSG");
/* harmony import */ var _raw_loader_update_special_application_component_html__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! raw-loader!./update-special-application.component.html */ "sZG+");
/* harmony import */ var _update_special_application_component_scss__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./update-special-application.component.scss */ "aBBN");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/material/dialog */ "0IaG");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/router */ "tyNb");
/* harmony import */ var _models__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @models */ "sKXY");
/* harmony import */ var _services__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @services */ "dJ3e");
/* harmony import */ var _shared__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @shared */ "M0ag");
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! sweetalert2 */ "PSD3");
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(sweetalert2__WEBPACK_IMPORTED_MODULE_9__);










let UpdateSpecialApplicationComponent = class UpdateSpecialApplicationComponent {
    constructor(apiService, dataStorage, sweetAlertService, router, dialogRef, data) {
        this.apiService = apiService;
        this.dataStorage = dataStorage;
        this.sweetAlertService = sweetAlertService;
        this.router = router;
        this.dialogRef = dialogRef;
        this.data = data;
        this.company = new _models__WEBPACK_IMPORTED_MODULE_6__["Company"]();
        this.s1Application = new _models__WEBPACK_IMPORTED_MODULE_6__["S1Application"]();
        this.isAscUser = false;
        this.isDisableFieldOnUpdate = true;
        this.formType = 'INDIVIDUAL';
        this.ascUserRoleList = [..._shared__WEBPACK_IMPORTED_MODULE_8__["ROLES"].filter((role) => role.ascUser === true).map((role) => role.role)];
        if (data) {
            this.s1Application = data;
            this.s1Application.submissionDate = data.submissionDate;
            this.s1Application.formType = this.formType;
            // Client Info
            // this.s1Application.company = this.multipleS1Application.company;
            // this.company = this.multipleS1Application.company;
            // this.s1Application.membersAffiliation = this.multipleS1Application.membersAffiliation;
            // this.s1Application.brand = this.multipleS1Application.brand;
        }
    }
    ngOnInit() {
        this.currentUser = this.dataStorage.getUserAccount();
        this.currentUserRole = this.currentUser.userRole.name;
        this.isAscUser = this.ascUserRoleList.includes(this.dataStorage.getUserRole());
    }
    onApproveOrDisapprove(status = 'APPROVED') {
        const displayStatus = status === 'APPROVED' ? 'approve' : 'disapprove';
        sweetalert2__WEBPACK_IMPORTED_MODULE_9___default.a.fire({
            text: `Are you sure you want to ${displayStatus} this application?`,
            icon: 'question',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Confirm'
        }).then((result) => {
            if (result.value) {
                const endpointExtension = status === 'APPROVED' ? '/approve' : '/disapprove';
                // this.s1Application.actionDate = new Date();
                this.s1Application.actionBy = this.currentUser.username;
                this.apiService.save(`${_shared__WEBPACK_IMPORTED_MODULE_8__["ENDPOINTS"].applicationRequests}${endpointExtension}/${this.s1Application.id}`, this.s1Application).subscribe((res) => {
                    this.sweetAlertService.customSuccessMessage(`Application successfully ${status.toLowerCase()}.`);
                    this.router.navigate(['asc/page/application/s1/special']);
                }, (err) => {
                    console.log(err);
                }, () => {
                    this.dialogRef.close(this.s1Application);
                });
            }
        });
    }
    updateSpecialApplication() {
        // TO DO
        // will only redirect to add new S1 application
        // saving or updating is in add-s1-application.component.ts
        this.dialogRef.close();
        this.router.navigate(['asc/page/application/s1/add']);
    }
};
UpdateSpecialApplicationComponent.ctorParameters = () => [
    { type: _services__WEBPACK_IMPORTED_MODULE_7__["ApiService"] },
    { type: _services__WEBPACK_IMPORTED_MODULE_7__["DataStorageService"] },
    { type: _services__WEBPACK_IMPORTED_MODULE_7__["SweetAlertService"] },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_5__["Router"] },
    { type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_4__["MatDialogRef"], decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Optional"] }] },
    { type: undefined, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Optional"] }, { type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Inject"], args: [_angular_material_dialog__WEBPACK_IMPORTED_MODULE_4__["MAT_DIALOG_DATA"],] }] }
];
UpdateSpecialApplicationComponent = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_3__["Component"])({
        selector: 'app-update-special-application',
        template: _raw_loader_update_special_application_component_html__WEBPACK_IMPORTED_MODULE_1__["default"],
        styles: [_update_special_application_component_scss__WEBPACK_IMPORTED_MODULE_2__["default"]]
    })
], UpdateSpecialApplicationComponent);



/***/ }),

/***/ "toVP":
/*!****************************************************************************************************************!*\
  !*** ./src/app/modules/pages/applications/s1-application/list-s1-application/list-s1-application.component.ts ***!
  \****************************************************************************************************************/
/*! exports provided: ListS1ApplicationComponent, ListS1Dialog */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ListS1ApplicationComponent", function() { return ListS1ApplicationComponent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ListS1Dialog", function() { return ListS1Dialog; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "mrSG");
/* harmony import */ var _raw_loader_list_s1_application_component_html__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! raw-loader!./list-s1-application.component.html */ "wBLN");
/* harmony import */ var _list_s1_application_component_scss__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./list-s1-application.component.scss */ "+jm7");
/* harmony import */ var _raw_loader_list_s1_dialog_html__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! raw-loader!./list-s1-dialog.html */ "4gM3");
/* harmony import */ var _core_models_counter__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./../../../../../core/models/counter */ "x25a");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var _angular_material_paginator__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/material/paginator */ "M9IT");
/* harmony import */ var _angular_material_sort__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/material/sort */ "Dh3D");
/* harmony import */ var _angular_material_table__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/material/table */ "+0xr");
/* harmony import */ var _models__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @models */ "sKXY");
/* harmony import */ var _shared__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @shared */ "M0ag");
/* harmony import */ var _services__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @services */ "dJ3e");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @angular/router */ "tyNb");
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! sweetalert2 */ "PSD3");
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(sweetalert2__WEBPACK_IMPORTED_MODULE_13__);
/* harmony import */ var app_modules_fragments_s1_form_type_s1_form_type_component__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! app/modules/fragments/s1-form-type/s1-form-type.component */ "fmC0");
/* harmony import */ var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @angular/material/dialog */ "0IaG");
/* harmony import */ var ngx_spinner__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ngx-spinner */ "JqCM");
/* harmony import */ var app_core_models_multiple_application_model__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! app/core/models/multiple-application.model */ "0jzb");
/* harmony import */ var app_modules_fragments_update_multiple_application_update_multiple_application_component__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! app/modules/fragments/update-multiple-application/update-multiple-application.component */ "FtXF");
/* harmony import */ var app_modules_fragments_update_special_application_update_special_application_component__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! app/modules/fragments/update-special-application/update-special-application.component */ "tXAP");
/* harmony import */ var app_core_models_application_request_model__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! app/core/models/application-request.model */ "an1Z");
/* harmony import */ var app_modules_fragments_request_for_special_clearing_request_for_special_clearing_component__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! app/modules/fragments/request-for-special-clearing/request-for-special-clearing.component */ "+TpJ");
/* harmony import */ var app_core_models_type_of_execution_model__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! app/core/models/type-of-execution.model */ "Hjha");
/* harmony import */ var app_core_services_common_services_service__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! app/core/services/common-services.service */ "Iws0");
/* harmony import */ var app_core_services_socket_websocket_service__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! app/core/services/socket/websocket.service */ "B1bq");


























let ListS1ApplicationComponent = class ListS1ApplicationComponent {
    constructor(apiService, dataStorage, router, sweetAlertService, dialog, spinner, route, commonService, webSocketService) {
        this.apiService = apiService;
        this.dataStorage = dataStorage;
        this.router = router;
        this.sweetAlertService = sweetAlertService;
        this.dialog = dialog;
        this.spinner = spinner;
        this.route = route;
        this.commonService = commonService;
        this.webSocketService = webSocketService;
        this.pageSize = 10;
        this.pageNo = 0;
        this.pageSizeOptions = [10, 20, 50];
        this.displayedColumns = [];
        this.totalItems = 0;
        this.totalPages = 0;
        this.currentPage = 1; // reuse
        // currentSize = 100;
        this.badgeCounter = new _core_models_counter__WEBPACK_IMPORTED_MODULE_4__["BadgeCounnter"]();
        this.returnedApps = [];
        this.click = 0;
        this.timeLeft = 60;
        this.refreshButtonEnabled = true;
        this.isTimerValueDisplay = false;
        // , 'ascStatus', 'awaitingActionFrom'];
        // multiple s1 application list variables
        this.multipleApplicationList = [];
        this.multipleApplicationDisplayedColumns = ['adTitle', 'typeOfApplication', 'companyName', 'brand', 'product', 'status'];
        this.multipleTotalItems = 0;
        // end multiple application list variables
        // special s1 application list variables
        this.specialApplicationList = [];
        this.specialApplicationDisplayedColumns = ['adTitle', 'typeOfApplication', 'companyName', 'brand', 'status'];
        this.specialTotalItems = 0;
        // end special application list variables
        // assigned s1 application list variables
        this.assignedApplicationList = [];
        this.assignedApplicationDisplayedColumns = ['referenceCode', 'adTitle', 'typeOfApplication', 'companyName', 'brand', 'product', 'status', 'internalStatus', 'icon']; // end assigned application list variables
        this.forReleaseApplicationsList = [];
        this.forReleaseTotalItems = 0;
        this.forReleaseApplicationDisplayedColumns = ['referenceCode', 'typeOfApplication', 'companyName', 'brand', 'product', 'typeOfMedium', 'status', 'internalStatus', 'decisionStatus'];
        this.applicationList = [];
        this.submissionType = _shared__WEBPACK_IMPORTED_MODULE_10__["SUBMISSION_TYPE"].ORIGINAL;
        this.originalTabDataCount = 0;
        this.revisionTabDataCount = 0;
        this.complianceTabDataCount = 0;
        this.decisionCommentTabDataCount = 0;
        this.releasedAppealTabDataCount = 0;
        this.isSuperAdmin = false;
        this.isAdmin = false;
        this.isAccounting = false;
        this.isApplicant = false;
        this.isScreener = false;
        this.isReviewer = false;
        this.isAdSpecialist = false;
        this.isEvaluator = false;
        this.s1Application = new _models__WEBPACK_IMPORTED_MODULE_9__["S1Application"]();
        this.s2Application = new _models__WEBPACK_IMPORTED_MODULE_9__["S2Application"]();
        this.multipleS1Application = new app_core_models_multiple_application_model__WEBPACK_IMPORTED_MODULE_17__["MultipleApplication"]();
        this.applicationRequest = new app_core_models_application_request_model__WEBPACK_IMPORTED_MODULE_20__["ApplicationRequest"]();
        this.s1ApplicationTitle = 'S1 APPLICATION';
        this.displayedContent = 'ORIGINAL';
        this.paymentStatus = _shared__WEBPACK_IMPORTED_MODULE_10__["PAYMENT_STATUS"];
        this.doFilter = (value) => {
            this.dataSource.filter = value.trim().toLocaleLowerCase();
        };
        this.doFilterS1MultipleApplicationList = (value) => {
            this.multipleApplicationDataSource.filter = value.trim().toLocaleLowerCase();
        };
        this.doFilterSpecialS1ApplicationList = (value) => {
            this.specialApplicationDataSource.filter = value.trim().toLocaleLowerCase();
        };
        this.doFilterAssignedS1ApplicationList = (value) => {
            this.assignedApplicationDataSource.filter = value.trim().toLocaleLowerCase();
        };
        this.doFilterForReleaseApplicationList = (value) => {
            this.forReleaseApplicationDataSource.filter = value.trim().toLocaleLowerCase();
        };
    }
    ngOnDestroy() {
        // if(this.counterObservable){
        // this.counterObservable.unsubscribe();
        // }
    }
    ngOnInit() {
        this.webSocketService.listen("broadcast").subscribe(res => {
            console.log('test');
            this.apiService.findAll(_shared__WEBPACK_IMPORTED_MODULE_10__["ENDPOINTS"].badgeCountByAscUser + this.currentUser.id).subscribe((res) => {
                this.badgeCounter = res;
                console.log(this.badgeCounter);
            });
        });
        // this.counterObservable = merge(timer(0, 5000))
        // .pipe(mergeMap(_ => this.apiService.findAll(ENDPOINTS.badgeCountByAscUser + this.currentUser.id)))
        // .subscribe(
        //   (res: BadgeCounnter) => {
        //     this.badgeCounter = res;
        //   },
        //   (err: HttpErrorResponse) => {
        //     console.log('Error:', err);
        //   }
        // );
        this.currentUser = this.dataStorage.getUserAccount();
        this.viewApplicationType = this.route.parent.snapshot.url[0].path;
        if (this.currentUser.userRole.name === _shared__WEBPACK_IMPORTED_MODULE_10__["USER_ROLES"].ROLE_APPLICANT) {
            this.displayedColumns = ['referenceCode', 'typeOfApplication', 'companyName', 'brand', 'typeOfMedium', 'status', 'paymentStatus', 'icon'];
        }
        else if (this.currentUser.userRole.name === _shared__WEBPACK_IMPORTED_MODULE_10__["USER_ROLES"].ROLE_SCREENER || this.currentUser.userRole.name === _shared__WEBPACK_IMPORTED_MODULE_10__["USER_ROLES"].ROLE_REVIEWER) {
            this.displayedColumns = ['referenceCode', 'typeOfApplication', 'companyName', 'brand', 'typeOfMedium', 'status', 'paymentStatus', 'internalStatus', 'icon'];
        }
        else if (this.currentUser.userRole.name === _shared__WEBPACK_IMPORTED_MODULE_10__["USER_ROLES"].ROLE_SUPER_ADMIN || this.currentUser.userRole.name === _shared__WEBPACK_IMPORTED_MODULE_10__["USER_ROLES"].ROLE_ADMIN
            || this.currentUser.userRole.name === _shared__WEBPACK_IMPORTED_MODULE_10__["USER_ROLES"].ROLE_ENCODER) {
            this.displayedColumns = ['referenceCode', 'typeOfApplication', 'companyName', 'brand', 'typeOfMedium', 'status', 'paymentStatus', 'internalStatus'];
        }
        else if (this.currentUser.userRole.name === _shared__WEBPACK_IMPORTED_MODULE_10__["USER_ROLES"].ROLE_AD_SPECIALIST) {
            this.displayedColumns = ['referenceCode', 'typeOfApplication', 'companyName', 'brand', 'product', 'typeOfMedium', 'status', 'paymentStatus', 'internalStatus', 'icon'];
        }
        this.getList();
        this.getListCounts();
        this.initUserRole();
        this.refreshApplicationBadgeCount();
    }
    parseInternalStatus(internalStatus, actionBy) {
        let user = `${actionBy.firstName} ${actionBy.lastName}`;
        if (internalStatus.match("SUBMITTED")) {
            return `SUBMITTED BY: ${user}`;
        }
        else if (internalStatus.match("REVIEWED"))
            return `REVIEWED BY: ${user}`;
        else if (internalStatus.match("VERIFIED"))
            return `VERIFIED BY: ${user}`;
        else if (internalStatus.match("SCREENED"))
            return `SCREENED BY: ${user}`;
        else if (internalStatus.match("REJECTED"))
            return `REJECTED BY: ${user}`;
        // return internalStatus;
    }
    refreshApplicationBadgeCount() {
        this.commonService.sendClickEvent();
    }
    formatTextPayment(status) {
        return status.replace(/_/g, ' ');
    }
    initUserRole() {
        if (this.currentUser.userRole.name === _shared__WEBPACK_IMPORTED_MODULE_10__["USER_ROLES"].ROLE_SUPER_ADMIN) {
            this.isSuperAdmin = true;
        }
        else if (this.currentUser.userRole.name === _shared__WEBPACK_IMPORTED_MODULE_10__["USER_ROLES"].ROLE_ADMIN) {
            this.isAdmin = true;
        }
        else if (this.currentUser.userRole.name === _shared__WEBPACK_IMPORTED_MODULE_10__["USER_ROLES"].ROLE_ACCOUNTING) {
            this.isAccounting = true;
        }
        else if (this.currentUser.userRole.name === _shared__WEBPACK_IMPORTED_MODULE_10__["USER_ROLES"].ROLE_APPLICANT) {
            this.isApplicant = true;
        }
        else if (this.currentUser.userRole.name === _shared__WEBPACK_IMPORTED_MODULE_10__["USER_ROLES"].ROLE_SCREENER) {
            this.isScreener = true;
        }
        else if (this.currentUser.userRole.name === _shared__WEBPACK_IMPORTED_MODULE_10__["USER_ROLES"].ROLE_REVIEWER) {
            this.isReviewer = true;
        }
        else if (this.currentUser.userRole.name === _shared__WEBPACK_IMPORTED_MODULE_10__["USER_ROLES"].ROLE_AD_SPECIALIST) {
            this.isAdSpecialist = true;
        }
        else if (this.currentUser.userRole.name === _shared__WEBPACK_IMPORTED_MODULE_10__["USER_ROLES"].ROLE_ENCODER) {
            this.isEvaluator = true;
        }
    }
    getListCounts() {
        let endpoint;
        let screenedCount = 0;
        if (this.currentUser.userRole.name === _shared__WEBPACK_IMPORTED_MODULE_10__["USER_ROLES"].ROLE_APPLICANT) {
            endpoint = _shared__WEBPACK_IMPORTED_MODULE_10__["ENDPOINTS"].badgeCountByApplicationOwner;
        }
        else {
            endpoint = _shared__WEBPACK_IMPORTED_MODULE_10__["ENDPOINTS"].badgeCountByAscUser;
        }
        this.apiService.findAll(_shared__WEBPACK_IMPORTED_MODULE_10__["ENDPOINTS"].applicationForm + `/custom/search?assignedScreenerId=${this.currentUser.id}&page=${this.currentPage}&size=${this.pageSize}`)
            .subscribe(response => {
            screenedCount = response.totalItems;
        });
        this.apiService.findAll(endpoint + this.currentUser.id).subscribe((res) => {
            this.badgeCounter = res;
            this.apiService.findAll(_shared__WEBPACK_IMPORTED_MODULE_10__["ENDPOINTS"].applicationForm + `/custom/search?assignedScreenerId=${this.currentUser.id}&page=${this.currentPage}&size=${this.pageSize}`)
                .subscribe(response => {
                this.badgeCounter.screenedApplications = response.totalItems;
            });
        });
    }
    getList(submissionType = 'ORIGINAL') {
        this.currentPage = this.pageNo;
        this.currentPage++;
        if (this.currentPage === 0)
            this.currentPage++;
        if (this.viewApplicationType === 'multiple') {
            this.applicationTypeTitle = 'MULTIPLE';
            this.getMultipleS1ApplicationList();
        }
        else if (this.viewApplicationType === 'special') {
            this.applicationTypeTitle = 'SPECIAL';
            this.getSpecialS1ApplicationList();
        }
        else if (this.viewApplicationType === 'assigned-applications') {
            this.applicationTypeTitle = 'Assigned Applications';
            this.getAssignAppFormBy();
        }
        else if (this.viewApplicationType === 'for-release') {
            this.applicationTypeTitle = 'For Release Applications';
            this.getForReleaseApplicationList();
        }
        else if (this.viewApplicationType === 'released') {
            this.applicationTypeTitle = 'Released Applications';
            this.getReleasedApplicationList();
        }
        else {
            this.applicationTypeTitle = 'INDIVIDUAL';
            let param = submissionType.toUpperCase();
            if (param === _shared__WEBPACK_IMPORTED_MODULE_10__["SUBMISSION_TYPE"].COMPLIANCE && this.currentUser.userRole.name === _shared__WEBPACK_IMPORTED_MODULE_10__["USER_ROLES"].ROLE_APPLICANT) {
                param = `&decisionStatus=INCOMPLETE&complianceForm=true`;
            }
            else if (param === _shared__WEBPACK_IMPORTED_MODULE_10__["SUBMISSION_TYPE"].COMPLIANCE && this.currentUser.userRole.name !== _shared__WEBPACK_IMPORTED_MODULE_10__["USER_ROLES"].ROLE_APPLICANT) {
                param = `&complianceForm=true`;
            }
            else {
                param = `&submissionType=${param}`;
            }
            let endpoint = `custom/search?page=${this.currentPage}&size=${this.pageSize}${param}`;
            if (this.currentUser.userRole.name === _shared__WEBPACK_IMPORTED_MODULE_10__["USER_ROLES"].ROLE_APPLICANT) {
                endpoint = _shared__WEBPACK_IMPORTED_MODULE_10__["ENDPOINTS"].applicationFormPresentor + endpoint + `&applicationOwnerId=${this.currentUser.id}`;
            }
            else if (this.currentUser.userRole.name === _shared__WEBPACK_IMPORTED_MODULE_10__["USER_ROLES"].ROLE_ENCODER) {
                endpoint = _shared__WEBPACK_IMPORTED_MODULE_10__["ENDPOINTS"].applicationFormEncoder + endpoint + `&assignedUserId=${this.currentUser.id}`;
            }
            else if (this.currentUser.userRole.name === _shared__WEBPACK_IMPORTED_MODULE_10__["USER_ROLES"].ROLE_AD_SPECIALIST) {
                endpoint = _shared__WEBPACK_IMPORTED_MODULE_10__["ENDPOINTS"].applicationFormAdSpecialist + endpoint + `&assignedUserId=${this.currentUser.id}`;
            }
            else if (this.currentUser.userRole.name === _shared__WEBPACK_IMPORTED_MODULE_10__["USER_ROLES"].ROLE_SCREENER) {
                if (submissionType === 'ORIGINAL')
                    endpoint = _shared__WEBPACK_IMPORTED_MODULE_10__["ENDPOINTS"].applicationFormScreener + endpoint + `&assignedScreenerId=${this.currentUser.id}`;
                else if (submissionType === 'SCREENED APPLICATIONS')
                    endpoint = _shared__WEBPACK_IMPORTED_MODULE_10__["ENDPOINTS"].applicationForm + `/custom/search?assignedScreenerId=${this.currentUser.id}&page=${this.currentPage}&size=${this.pageSize}`;
                else if (submissionType === 'REVISION')
                    endpoint = _shared__WEBPACK_IMPORTED_MODULE_10__["ENDPOINTS"].applicationFormScreener + endpoint;
                else if (submissionType === 'COMPLIANCE')
                    endpoint = _shared__WEBPACK_IMPORTED_MODULE_10__["ENDPOINTS"].applicationFormScreener + endpoint;
            }
            else if (this.currentUser.userRole.name === _shared__WEBPACK_IMPORTED_MODULE_10__["USER_ROLES"].ROLE_REVIEWER) {
                endpoint = _shared__WEBPACK_IMPORTED_MODULE_10__["ENDPOINTS"].applicationFormReviewer + endpoint + `&assignedReviewerId=${this.currentUser.id}`;
            }
            else if (this.currentUser.userRole.name === _shared__WEBPACK_IMPORTED_MODULE_10__["USER_ROLES"].ROLE_ADMIN ||
                this.currentUser.userRole.name === _shared__WEBPACK_IMPORTED_MODULE_10__["USER_ROLES"].ROLE_SUPER_ADMIN) {
                endpoint = _shared__WEBPACK_IMPORTED_MODULE_10__["ENDPOINTS"].applicationFormAdmin + endpoint;
            }
            this.spinner.show();
            this.apiService.findAll(endpoint).subscribe((res) => {
                this.applicationList = res.data;
                this.totalItems = res.totalItems;
                console.log('applicationList: ', this.applicationList);
                this.dataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_8__["MatTableDataSource"](this.applicationList);
                // this.dataSource.paginator = this.paginator;
                setTimeout(() => {
                    this.spinner.hide();
                }, 1);
            }, (err) => {
                setTimeout(() => {
                    this.spinner.hide();
                }, 1);
            });
        }
    }
    getScreenedApps() {
    }
    showStatus(stats) {
        if (stats.paymentStatus !== _shared__WEBPACK_IMPORTED_MODULE_10__["PAYMENT_STATUS"].PAID && stats.actionStatus === _shared__WEBPACK_IMPORTED_MODULE_10__["ACTION_STATUS"].ASSIGN_TO_PRESENTOR)
            return "ON PROCESS";
        else
            return stats.externalStatus.replaceAll("_", " ").toUpperCase();
    }
    pageEvents(event) {
        this.pageSize = event.pageSize;
        if (event.pageIndex > this.pageNo) {
            this.pageNo++;
        }
        else {
            this.pageNo--;
        }
        if (event.pageSize > event.length) {
            this.pageNo = 0;
        }
        this.getList(this.displayedContent.toUpperCase());
    }
    setPageSizeOptions(setPageSizeOptionsInput) {
        if (setPageSizeOptionsInput) {
            this.pageSizeOptions = setPageSizeOptionsInput.split(',').map(str => +str);
        }
    }
    getMultipleS1ApplicationList() {
        let endpoint = '';
        const ascEndpoint = `/custom/search?page=${this.currentPage}&size=${this.pageSize}`;
        let assignedASCUser = '';
        if (this.currentUser.userRole.name === _shared__WEBPACK_IMPORTED_MODULE_10__["USER_ROLES"].ROLE_ADMIN || this.currentUser.userRole.name === _shared__WEBPACK_IMPORTED_MODULE_10__["USER_ROLES"].ROLE_SUPER_ADMIN) {
            endpoint = _shared__WEBPACK_IMPORTED_MODULE_10__["ENDPOINTS"].multipleApplication + ascEndpoint;
        }
        else {
            if (this.currentUser.userRole.name === _shared__WEBPACK_IMPORTED_MODULE_10__["USER_ROLES"].ROLE_APPLICANT) {
                assignedASCUser = `&applicationOwnerId=${this.currentUser.id}`;
            }
            else if (this.currentUser.userRole.name === _shared__WEBPACK_IMPORTED_MODULE_10__["USER_ROLES"].ROLE_ENCODER) {
                assignedASCUser = `&assignedEvaluatorId=${this.currentUser.id}`;
            }
            else if (this.currentUser.userRole.name === _shared__WEBPACK_IMPORTED_MODULE_10__["USER_ROLES"].ROLE_AD_SPECIALIST) {
                assignedASCUser = `&assignedAdSpecialistId=${this.currentUser.id}`;
            }
            else if (this.currentUser.userRole.name === _shared__WEBPACK_IMPORTED_MODULE_10__["USER_ROLES"].ROLE_SCREENER) {
                assignedASCUser = `&assignedScreenerId=${this.currentUser.id}`;
            }
            else if (this.currentUser.userRole.name === _shared__WEBPACK_IMPORTED_MODULE_10__["USER_ROLES"].ROLE_REVIEWER) {
                assignedASCUser = `&assignedReviewerId=${this.currentUser.id}`;
            }
            endpoint = _shared__WEBPACK_IMPORTED_MODULE_10__["ENDPOINTS"].multipleApplication + ascEndpoint + assignedASCUser;
        }
        console.log(endpoint);
        this.apiService.findAll(endpoint).subscribe((res) => {
            this.multipleApplicationList = res.data;
            console.log('multipleApplicationList: ', res);
            this.multipleTotalItems = res.totalItems;
            this.refreshApplicationBadgeCount();
            this.multipleApplicationDataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_8__["MatTableDataSource"](this.multipleApplicationList);
            this.multipleApplicationDataSource.paginator = this.paginator;
            this.multipleApplicationDataSource.sort = this.sort;
            setTimeout(() => {
                this.spinner.hide();
            }, 1);
        }, (err) => {
            setTimeout(() => {
                this.spinner.hide();
            }, 1);
        });
    }
    getSpecialS1ApplicationList() {
        if (this.currentUser.userRole.name === _shared__WEBPACK_IMPORTED_MODULE_10__["USER_ROLES"].ROLE_ADMIN || this.currentUser.userRole.name === _shared__WEBPACK_IMPORTED_MODULE_10__["USER_ROLES"].ROLE_SUPER_ADMIN) {
            const obj = {
                statuses: ['FOR_APPROVAL', 'APPROVED', 'DISAPPROVED']
            };
            this.apiService.save(`${_shared__WEBPACK_IMPORTED_MODULE_10__["ENDPOINTS"].s1SpecialApplicationRequestsAdmin}?page=${this.currentPage}&size=${this.pageSize}`, obj)
                .subscribe((res) => {
                this.specialApplicationList = res.data;
                this.specialTotalItems = res.totalItems;
                console.log('specialApplicationList: ', res);
                this.refreshApplicationBadgeCount();
                this.specialApplicationDataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_8__["MatTableDataSource"](this.specialApplicationList);
                this.specialApplicationDataSource.paginator = this.paginator;
                this.specialApplicationDataSource.sort = this.sort;
                setTimeout(() => {
                    this.spinner.hide();
                }, 1);
            }, (err) => {
                setTimeout(() => {
                    this.spinner.hide();
                }, 1);
            });
        }
        else {
            const obj = {
                applicationOwnerId: this.currentUser.id,
                statuses: ['FOR_APPROVAL', 'APPROVED', 'DISAPPROVED']
            };
            this.apiService.save(`${_shared__WEBPACK_IMPORTED_MODULE_10__["ENDPOINTS"].s1SpecialApplicationRequests}?page=${this.currentPage}&size=${this.pageSize}`, obj)
                .subscribe((res) => {
                this.specialApplicationList = res.data;
                this.specialTotalItems = res.totalItems;
                console.log('specialApplicationList: ', res);
                this.refreshApplicationBadgeCount();
                this.specialApplicationDataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_8__["MatTableDataSource"](this.specialApplicationList);
                this.specialApplicationDataSource.paginator = this.paginator;
                this.specialApplicationDataSource.sort = this.sort;
                setTimeout(() => {
                    this.spinner.hide();
                }, 1);
            }, (err) => {
                setTimeout(() => {
                    this.spinner.hide();
                }, 1);
            });
        }
    }
    getAssignAppFormBy() {
        let endpoint = '';
        if (this.currentUser.userRole.name === _shared__WEBPACK_IMPORTED_MODULE_10__["USER_ROLES"].ROLE_AD_SPECIALIST) {
            endpoint = _shared__WEBPACK_IMPORTED_MODULE_10__["ENDPOINTS"].applicationForm + `/custom/search?assignedAdSpecialistId=${this.currentUser.id}&page=${this.currentPage}&size=${this.pageSize}`;
        }
        else {
            endpoint = _shared__WEBPACK_IMPORTED_MODULE_10__["ENDPOINTS"].applicationForm + `/custom/search?assignedScreenerId=${this.currentUser.id}&page=${this.currentPage}&size=${this.pageSize}`;
        }
        this.spinner.show();
        this.apiService.findAll(endpoint).subscribe((res) => {
            this.assignedApplicationList = res.data;
            this.retrieveReassignLength = res.totalItems;
            this.refreshApplicationBadgeCount();
            this.assignedApplicationDataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_8__["MatTableDataSource"](this.assignedApplicationList);
            this.assignedApplicationDataSource.sort = this.sort;
            setTimeout(() => {
                this.spinner.hide();
            }, 1);
        }, (err) => {
            setTimeout(() => {
                this.spinner.hide();
            }, 1);
        });
    }
    getForReleaseApplicationList() {
        let endpoint;
        const param = `&page=${this.currentPage}&size=${this.pageSize}`;
        if (this.currentUser.userRole.name === _shared__WEBPACK_IMPORTED_MODULE_10__["USER_ROLES"].ROLE_AD_SPECIALIST) {
            endpoint = _shared__WEBPACK_IMPORTED_MODULE_10__["ENDPOINTS"].getForReleaseApplicationAdSpe + `?releaseStatus=FOR_RELEASE&assignedAdSpecialistId=${this.currentUser.id}${param}`;
        }
        else if (this.currentUser.userRole.name === _shared__WEBPACK_IMPORTED_MODULE_10__["USER_ROLES"].ROLE_REVIEWER) {
            endpoint = _shared__WEBPACK_IMPORTED_MODULE_10__["ENDPOINTS"].getForReleaseApplicationsReviewer + `?releaseStatus=FOR_RELEASE&assignedReviewerId=${this.currentUser.id}${param}`;
        }
        else if (this.currentUser.userRole.name === _shared__WEBPACK_IMPORTED_MODULE_10__["USER_ROLES"].ROLE_ADMIN || _shared__WEBPACK_IMPORTED_MODULE_10__["USER_ROLES"].ROLE_SUPER_ADMIN) {
            endpoint = _shared__WEBPACK_IMPORTED_MODULE_10__["ENDPOINTS"].getAdminSuperAdminForReleaseApplication + `/custom/search?releaseStatus=FOR_RELEASE${param}`;
        }
        this.apiService.findAll(endpoint).subscribe((res) => {
            this.forReleaseApplicationsList = res.data;
            this.forReleaseTotalItems = res.totalItems;
            this.refreshApplicationBadgeCount();
            console.log('getForReleaseApplicationList: ', this.forReleaseApplicationsList);
            this.forReleaseApplicationDataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_8__["MatTableDataSource"](this.forReleaseApplicationsList);
            this.forReleaseApplicationDataSource.paginator = this.paginatorFalse;
            this.forReleaseApplicationDataSource.sort = this.sort;
            setTimeout(() => {
                this.spinner.hide();
            }, 1);
        }, (err) => {
            setTimeout(() => {
                this.spinner.hide();
            }, 1);
        });
    }
    getReleasedApplicationList() {
        this.apiService.findAll(_shared__WEBPACK_IMPORTED_MODULE_10__["ENDPOINTS"].getReleaseApplicationsAdSpe + `?page=${this.currentPage}&size=${this.pageSize}`)
            .subscribe((res) => {
            this.forReleaseApplicationsList = res.data;
            console.log('getReleasedApplicationList: ', this.forReleaseApplicationsList);
            this.forReleaseTotalItems = res.totalItems;
            this.refreshApplicationBadgeCount();
            this.forReleaseApplicationDataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_8__["MatTableDataSource"](this.forReleaseApplicationsList);
            this.forReleaseApplicationDataSource.paginator = this.paginatorFalse;
            this.forReleaseApplicationDataSource.sort = this.sort;
            setTimeout(() => {
                this.spinner.hide();
            }, 1);
        }, (err) => {
            setTimeout(() => {
                this.spinner.hide();
            }, 1);
        });
    }
    getForDecisionAndComment(displayedContent) {
        let endpoint = '';
        // APPEAL
        if (this.isAdSpecialist) {
            endpoint = _shared__WEBPACK_IMPORTED_MODULE_10__["ENDPOINTS"].applicationFormAdSpecialist + `custom/search?assignedUserId=${this.currentUser.id}&hasOngoingAppeal=true&page=${this.currentPage}&size=${this.pageSize}&submissionType=ORIGINAL`;
        }
        // RETURN TO SCREENER
        else if (this.isScreener) {
            endpoint = _shared__WEBPACK_IMPORTED_MODULE_10__["ENDPOINTS"].s1ApplicationForm + `screener/assigned-user-id/${this.currentUser.id}/forwarded-for-decision-and-comment`;
        }
        else if (this.isReviewer) {
            endpoint = _shared__WEBPACK_IMPORTED_MODULE_10__["ENDPOINTS"].s1ApplicationForm + `reviewer/assigned-user-id/${this.currentUser.id}/forwarded-for-decision-and-comment`;
        }
        else if (this.isAdmin || this.isSuperAdmin) {
            if (displayedContent === 'For Appeal') {
                endpoint = _shared__WEBPACK_IMPORTED_MODULE_10__["ENDPOINTS"].applicationFormAdmin + `custom/search?hasOngoingAppeal=true&page=${this.currentPage}&size=${this.pageSize}`;
            }
            else {
                endpoint = _shared__WEBPACK_IMPORTED_MODULE_10__["ENDPOINTS"].admin + `/s1/for-decision-comment/reviewer-screener`;
            }
        }
        this.spinner.show();
        this.apiService.findAll(endpoint)
            .subscribe((res) => {
            var _a;
            if (res) {
                if (res === null || res === void 0 ? void 0 : res.data) {
                    this.applicationList = res === null || res === void 0 ? void 0 : res.data;
                }
                else {
                    this.applicationList = (_a = res === null || res === void 0 ? void 0 : res.responseData) === null || _a === void 0 ? void 0 : _a.data;
                }
                console.log(displayedContent + ': ', this.applicationList);
                this.refreshApplicationBadgeCount();
                this.dataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_8__["MatTableDataSource"](this.applicationList);
                this.dataSource.paginator = this.paginatorFalse;
                this.dataSource.sort = this.sort;
                setTimeout(() => {
                    this.spinner.hide();
                }, 1);
            }
            else {
                this.applicationList = [];
            }
        }, (err) => {
            setTimeout(() => {
                this.spinner.hide();
            }, 1);
        });
    }
    viewApplication(data) {
        this.s1Application = data;
        console.log('S1 FORM: ', this.s1Application);
        if (this.viewApplicationType === 'released' || this.viewApplicationType === 'for-release' || this.viewApplicationType === 'assigned-applications' ||
            this.currentUser.userRole.name === _shared__WEBPACK_IMPORTED_MODULE_10__["USER_ROLES"].ROLE_APPLICANT || this.currentUser.userRole.name === _shared__WEBPACK_IMPORTED_MODULE_10__["USER_ROLES"].ROLE_ADMIN ||
            this.currentUser.userRole.name === _shared__WEBPACK_IMPORTED_MODULE_10__["USER_ROLES"].ROLE_SUPER_ADMIN) {
            this.router.navigate(['asc/page/application/s1/update/', data.id]);
        }
        else if (data.formStatus === _shared__WEBPACK_IMPORTED_MODULE_10__["FORM_STATUS"].OPEN && this.s1Application.internalStatus !== _shared__WEBPACK_IMPORTED_MODULE_10__["APPLICATION_STATUS"].S1_APPLICATION_REJECTED) {
            sweetalert2__WEBPACK_IMPORTED_MODULE_13___default.a.fire({
                text: 'Are you sure you want to open this application? This application will be LOCKED on your account.',
                icon: 'question',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Confirm'
            }).then((result) => {
                if (result.value) {
                    if (this.currentUser.userRole.name === _shared__WEBPACK_IMPORTED_MODULE_10__["USER_ROLES"].ROLE_ENCODER) {
                        this.s1Application.assignedEncoder = this.currentUser;
                    }
                    else if (this.currentUser.userRole.name === _shared__WEBPACK_IMPORTED_MODULE_10__["USER_ROLES"].ROLE_AD_SPECIALIST) {
                        this.s1Application.assignedAdSpecialist = this.currentUser;
                    }
                    else if (this.currentUser.userRole.name === _shared__WEBPACK_IMPORTED_MODULE_10__["USER_ROLES"].ROLE_SCREENER) {
                        this.s1Application.assignedScreener = this.currentUser;
                    }
                    else if (this.currentUser.userRole.name === _shared__WEBPACK_IMPORTED_MODULE_10__["USER_ROLES"].ROLE_REVIEWER) {
                        this.s1Application.assignedReviewer = this.currentUser;
                    }
                    this.s1Application.currentAssignee = this.currentUser.userRole.name;
                    let endpoint = '';
                    if (this.currentUser.userRole.name === _shared__WEBPACK_IMPORTED_MODULE_10__["USER_ROLES"].ROLE_ENCODER) {
                        endpoint = _shared__WEBPACK_IMPORTED_MODULE_10__["ENDPOINTS"].applicationFormEncoder;
                    }
                    else {
                        endpoint = _shared__WEBPACK_IMPORTED_MODULE_10__["ENDPOINTS"].applicationFormAdSpecialist;
                    }
                    this.apiService.save(endpoint + _shared__WEBPACK_IMPORTED_MODULE_10__["ENDPOINTS"].takeApplication, this.s1Application).subscribe((res) => {
                        this.sweetAlertService.customSuccessMessage('Application successfully assigned to you.', 3);
                        this.router.navigate(['asc/page/application/s1/update/', data.id]);
                        this.refreshApplicationBadgeCount();
                    }, (err) => {
                        console.log('error deep');
                        let lockedBy = '';
                        if (this.s1Application.assignedUser) {
                            lockedBy = ` by ${this.s1Application.assignedUser.firstName} ${this.s1Application.assignedUser.lastName} `;
                        }
                        err.error.message = `Application has been locked${lockedBy} for processing. Kindly select another application to process.`;
                        this.sweetAlertService.error(err, 5);
                        // location.reload();
                    });
                }
            });
        }
        else {
            if (this.s1Application.assignedUser) {
                if (this.s1Application.assignedUser.username === this.currentUser.username) {
                    this.router.navigate(['asc/page/application/s1/update/', data.id]);
                    this.refreshApplicationBadgeCount();
                }
                else {
                    console.log('error out');
                    let lockedBy = '';
                    if (this.s1Application.assignedUser) {
                        lockedBy = ` by ${this.s1Application.assignedUser.firstName} ${this.s1Application.assignedUser.lastName} `;
                    }
                    this.sweetAlertService.customErrorMessage(`Application has been locked${lockedBy} for processing.Kindly select another application to process.`, 5);
                    this.refreshApplicationBadgeCount();
                }
            }
        }
    }
    viewMultipleApplication(data) {
        this.multipleS1Application = data;
        console.log('multipleS1Application: ', this.multipleS1Application);
        let dialogRef;
        if (this.currentUser.userRole.name === _shared__WEBPACK_IMPORTED_MODULE_10__["USER_ROLES"].ROLE_ADMIN || this.currentUser.userRole.name === _shared__WEBPACK_IMPORTED_MODULE_10__["USER_ROLES"].ROLE_SUPER_ADMIN) {
            dialogRef = this.dialog.open(app_modules_fragments_update_multiple_application_update_multiple_application_component__WEBPACK_IMPORTED_MODULE_18__["UpdateMultipleApplicationComponent"], {
                width: '80%',
                height: '85%',
                data: this.multipleS1Application
            });
        }
        else {
            dialogRef = this.dialog.open(app_modules_fragments_update_multiple_application_update_multiple_application_component__WEBPACK_IMPORTED_MODULE_18__["UpdateMultipleApplicationComponent"], {
                width: '80%',
                height: '85%',
                data: this.multipleS1Application
            });
        }
        dialogRef.afterClosed().subscribe(result => {
            if (result) {
                this.getMultipleS1ApplicationList();
            }
        });
    }
    viewSpecialApplication(data) {
        this.applicationRequest = data;
        this.s1Application = new _models__WEBPACK_IMPORTED_MODULE_9__["S1Application"]();
        this.s1Application.adTitle = data.adTitle;
        this.s1Application.applicationOwner = data.applicationOwner;
        this.s1Application.applicationType = data.applicationType;
        this.s1Application.brand = data.brand;
        this.s1Application.product = data.product;
        // this.s1Application.category = data.category;
        this.s1Application.company = data.company;
        // this.s1Application.membersAffiliation = data.membersAffiliation;
        this.s1Application.submissionDate = data.submissionDate;
        this.s1Application.tagLine = data.tagLine;
        this.s1Application.status = data.status;
        this.s1Application.submissionType = _shared__WEBPACK_IMPORTED_MODULE_10__["SUBMISSION_TYPE"].ORIGINAL;
        this.s1Application.appFormReference = '';
        this.s1Application.formType = data.formType;
        this.s1Application.applicationRequest = data;
        this.s1Application.id = 0;
        let dialogRef;
        if (this.currentUser.userRole.name === _shared__WEBPACK_IMPORTED_MODULE_10__["USER_ROLES"].ROLE_ADMIN || this.currentUser.userRole.name === _shared__WEBPACK_IMPORTED_MODULE_10__["USER_ROLES"].ROLE_SUPER_ADMIN
            || this.currentUser.userRole.name === _shared__WEBPACK_IMPORTED_MODULE_10__["USER_ROLES"].ROLE_APPLICANT &&
                this.applicationRequest.status === 'FOR_APPROVAL') {
            dialogRef = this.dialog.open(app_modules_fragments_update_special_application_update_special_application_component__WEBPACK_IMPORTED_MODULE_19__["UpdateSpecialApplicationComponent"], {
                width: '80%',
                height: '85%',
                data: this.applicationRequest
            });
        }
        else {
            this.dataStorage.setS1Application(this.s1Application);
            this.dataStorage.setSpecialS1Application(this.applicationRequest);
            this.router.navigate(['asc/page/application/s1/add']);
            // dialogRef = this.dialog.open(UpdateSpecialApplicationComponent, {
            //   width: '80%',
            //   height: '85%',
            //   data: this.applicationRequest
            // });
        }
        dialogRef.afterClosed().subscribe(result => {
            if (result) {
                this.getSpecialS1ApplicationList();
            }
        });
    }
    getCompanyById(id) {
        // updates company details in data storage
        const promise = new Promise((resolve, reject) => {
            this.apiService.findById(_shared__WEBPACK_IMPORTED_MODULE_10__["ENDPOINTS"].company, id).subscribe((res) => {
                if (res) {
                    this.currentUser.company = res.responseData.data;
                    this.dataStorage.saveUserAccount(this.currentUser);
                    resolve(this.currentUser);
                }
            }, err => {
                reject(err);
            });
        });
        return promise;
    }
    openFormTypeModal() {
        this.getCompanyById(this.currentUser.company.id).then((res) => {
            if (res.company.membersAffiliation.status === 'INACTIVE') {
                this.sweetAlertService.customErrorMessage(`Your Company's membership affiliation is no longer active. Cannot proceed with new application. Please contact ASC admin`);
            }
            else {
                const dialogRef = this.dialog.open(app_modules_fragments_s1_form_type_s1_form_type_component__WEBPACK_IMPORTED_MODULE_14__["S1FormTypeComponent"], {
                // width: '30%',
                // height: '25%',
                });
                dialogRef.afterClosed().subscribe(result => {
                    if (result) {
                        console.log(result);
                    }
                });
            }
        });
    }
    applyForS2(data) {
        let typeOfExecution;
        if (data.refTypeOfMedium === _shared__WEBPACK_IMPORTED_MODULE_10__["TYPE_OF_MEDIUM"].SINGLE_MEDIA) {
            this.apiService.findByParam(_shared__WEBPACK_IMPORTED_MODULE_10__["ENDPOINTS"].applicationSingleMedia, `app-form-reference/${data.appFormReference}`).subscribe((res) => {
                if (res.responseData.data.length > 0) {
                    typeOfExecution = res.responseData.data[0].mediumExecution.typeOfExecution;
                    data.typeOfExecution = typeOfExecution;
                    const dialogRef = this.dialog.open(ListS1Dialog, {
                        data: {
                            s2Application: data
                        }
                    });
                }
            }, (err) => {
            });
        }
        else {
            const dialogRef = this.dialog.open(ListS1Dialog, {
                data: {
                    s2Application: data
                }
            });
        }
    }
    returnTo(process, s1App) {
        this.s1Application = s1App;
        sweetalert2__WEBPACK_IMPORTED_MODULE_13___default.a.fire({
            text: 'Are you sure you want to ' + process + ' this application?',
            icon: 'question',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Confirm'
        }).then((result) => {
            if (result.value) {
                this.spinner.show();
                let endpoint = '';
                this.s1Application.actionBy = this.currentUser;
                if (this.currentUser.userRole.name === _shared__WEBPACK_IMPORTED_MODULE_10__["USER_ROLES"].ROLE_SCREENER) {
                    this.s1Application.currentAssignee = _shared__WEBPACK_IMPORTED_MODULE_10__["USER_ROLES"].ROLE_AD_SPECIALIST;
                    if (this.s1Application.multipleApplication && this.s1Application.submissionType === _shared__WEBPACK_IMPORTED_MODULE_10__["SUBMISSION_TYPE"].ORIGINAL) {
                        endpoint = `${_shared__WEBPACK_IMPORTED_MODULE_10__["ENDPOINTS"].multipleApplicationReturnToAdSpe}${this.s1Application.multipleApplication.id}/return`;
                    }
                    else {
                        endpoint = `${_shared__WEBPACK_IMPORTED_MODULE_10__["ENDPOINTS"].applicationFormScreener}return`;
                    }
                }
                else {
                    if (this.s1Application.multipleApplication && this.s1Application.submissionType === _shared__WEBPACK_IMPORTED_MODULE_10__["SUBMISSION_TYPE"].ORIGINAL) {
                        endpoint = `${_shared__WEBPACK_IMPORTED_MODULE_10__["ENDPOINTS"].multipleApplicationReturnToScreener}${this.s1Application.multipleApplication.id}/return`;
                    }
                    else {
                        endpoint = `${_shared__WEBPACK_IMPORTED_MODULE_10__["ENDPOINTS"].applicationFormReviewer}return`;
                    }
                }
                // console.log('TO SAVE: ', this.s1Application);
                this.apiService.save(endpoint, this.s1Application).subscribe((res) => {
                    // console.log('RETURN: ', res.responseData.data);
                    if (res.code === 200) {
                        this.spinner.hide();
                        this.getList();
                        this.sweetAlertService.customSuccessMessage('Successfully returned the application');
                        this.refreshApplicationBadgeCount();
                    }
                }, (err) => {
                    this.spinner.hide();
                });
            }
        });
    }
    saveStatus(ascUser = '', action = '', status = '', application) {
        let fetchedData;
        this.apiService.findAll(`${_shared__WEBPACK_IMPORTED_MODULE_10__["ENDPOINTS"].applicationForm}/id/${application.id}`).subscribe(validateApp => {
            console.log('validate => ', validateApp);
            fetchedData = validateApp.responseData.data;
        });
        sweetalert2__WEBPACK_IMPORTED_MODULE_13___default.a.fire({
            text: 'Are you sure you want to cancel this application?',
            icon: 'question',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Confirm'
        }).then((result) => {
            if (result.value) {
                this.dataStorage.setDisplayProgressbar(true);
                if (fetchedData.assignedUser && fetchedData.formStatus === _shared__WEBPACK_IMPORTED_MODULE_10__["FORM_STATUS"].LOCKED) {
                    this.sweetAlertService.customErrorMessage("This form is already in process");
                    return;
                }
                this.apiService.update(`${_shared__WEBPACK_IMPORTED_MODULE_10__["ENDPOINTS"].applicationForm}/s1/${ascUser}/${action}`, application).subscribe((res) => {
                    console.log('SAVED STATUS: ', res.responseData.data);
                    this.sweetAlertService.customSuccessMessage('Application successfully canceled.');
                    this.getList();
                    this.refreshApplicationBadgeCount();
                    // this.router.navigate(['asc/page/application/s1/lists']);
                }, (err) => {
                    console.log(err);
                    this.sweetAlertService.error(err);
                    this.dataStorage.setDisplayProgressbar(false);
                }, () => {
                    this.dataStorage.setDisplayProgressbar(false);
                });
            }
        });
    }
    changeTab(evt) {
        console.log('tab ---  ', evt);
        if (evt.tab.textLabel !== 'For Decision and Comments') {
            this.getListCounts();
        }
        if (evt.tab) {
            this.displayedContent = evt.tab.textLabel;
            if (this.displayedContent === 'For Decision and Comments' || this.displayedContent === 'For Appeal') {
                this.getForDecisionAndComment(this.displayedContent);
            }
            else if (this.displayedContent === 'Returned Application') {
                console.log('returneeed');
                const userType = this.isAdSpecialist ? 'adSpeId' : 'screenerId';
                this.spinner.show();
                this.apiService.findAll(`${this.isAdSpecialist ? _shared__WEBPACK_IMPORTED_MODULE_10__["ENDPOINTS"].getAllAdSpeReturnedApps : _shared__WEBPACK_IMPORTED_MODULE_10__["ENDPOINTS"].getAllScreenerReturnedApps}/?&${userType}=${this.currentUser.id}&page=${this.currentPage - 1}&size=${this.pageSize}`)
                    .subscribe(respose => {
                    this.applicationList = respose.data;
                    this.totalItems = respose.totalItems;
                    console.log('applicationList: ', this.applicationList);
                    this.dataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_8__["MatTableDataSource"](this.applicationList);
                    this.dataSource.paginator = this.paginator;
                    this.assignedApplicationDisplayedColumns.splice(this.assignedApplicationDisplayedColumns.indexOf("icon"), 1);
                    setTimeout(() => {
                        this.spinner.hide();
                    }, 1);
                }, err => {
                    setTimeout(() => {
                        this.spinner.hide();
                    }, 1);
                });
            }
            else if (this.displayedContent === 'Screened Applications') {
                this.getList(this.displayedContent.toUpperCase());
            }
            else {
                this.getList(this.displayedContent.toUpperCase());
            }
        }
    }
    sortEvent() {
        this.click++;
        if (this.click % 2 === 0) {
            console.log('even', this.click);
            this.dataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_8__["MatTableDataSource"](this.applicationList);
            this.dataSource.paginator = this.paginator;
            return this.dataSource.data.sort((a, b) => a.id - b.id);
        }
        else {
            console.log('odd', this.click);
            this.dataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_8__["MatTableDataSource"](this.applicationList);
            this.dataSource.paginator = this.paginator;
            return this.dataSource.data.reverse();
        }
        // this.dataSource.data.sort(() => Math.random() - 0.5)
    }
    unlockApplication(process, s1App) {
        this.s1Application = s1App;
        sweetalert2__WEBPACK_IMPORTED_MODULE_13___default.a.fire({
            text: 'Are you sure you want to ' + process + ' this application?',
            icon: 'question',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Confirm'
        }).then((result) => {
            if (result.value) {
                this.spinner.show();
                let endpoint = '';
                this.s1Application.actionBy = this.currentUser;
                this.s1Application.formStatus = _shared__WEBPACK_IMPORTED_MODULE_10__["FORM_STATUS"].OPEN;
                endpoint = _shared__WEBPACK_IMPORTED_MODULE_10__["ENDPOINTS"].applicationForm;
                // console.log('TO SAVE: ', this.s1Application);
                this.apiService.update(endpoint, this.s1Application).subscribe((res) => {
                    // console.log('RETURN: ', res.responseData.data);
                    if (res.code === 200) {
                        this.spinner.hide();
                        this.getList();
                        this.sweetAlertService.customSuccessMessage('Successfully unlocked the application');
                        this.refreshApplicationBadgeCount();
                    }
                }, (err) => {
                    this.spinner.hide();
                });
            }
        });
    }
    refresh() {
        this.commonService.sendClickEvent();
        this.startTimer();
    }
    startTimer() {
        this.interval = setInterval(() => {
            this.timeLeft--;
            if (this.timeLeft > 0) {
                this.refreshButtonEnabled = false;
                this.isTimerValueDisplay = true;
            }
            else {
                this.refreshButtonEnabled = true;
                this.isTimerValueDisplay = false;
                this.timeLeft = 60;
                clearInterval(this.interval);
            }
            this.timerDisplay = this.transform(this.timeLeft);
        }, 1000);
    }
    transform(value) {
        const minutes = Math.floor(value / 60);
        return minutes + ':' + (value - minutes * 60);
    }
};
ListS1ApplicationComponent.ctorParameters = () => [
    { type: _services__WEBPACK_IMPORTED_MODULE_11__["ApiService"] },
    { type: _services__WEBPACK_IMPORTED_MODULE_11__["DataStorageService"] },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_12__["Router"] },
    { type: _services__WEBPACK_IMPORTED_MODULE_11__["SweetAlertService"] },
    { type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_15__["MatDialog"] },
    { type: ngx_spinner__WEBPACK_IMPORTED_MODULE_16__["NgxSpinnerService"] },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_12__["ActivatedRoute"] },
    { type: app_core_services_common_services_service__WEBPACK_IMPORTED_MODULE_23__["CommonServices"] },
    { type: app_core_services_socket_websocket_service__WEBPACK_IMPORTED_MODULE_24__["WebSocketService"] }
];
ListS1ApplicationComponent.propDecorators = {
    paginatorFalse: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["ViewChild"], args: [_angular_material_paginator__WEBPACK_IMPORTED_MODULE_6__["MatPaginator"], { static: false },] }],
    paginator: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["ViewChild"], args: [_angular_material_paginator__WEBPACK_IMPORTED_MODULE_6__["MatPaginator"], { static: true },] }],
    sort: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["ViewChild"], args: [_angular_material_sort__WEBPACK_IMPORTED_MODULE_7__["MatSort"], { static: false },] }],
    table: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["ViewChild"], args: [_angular_material_table__WEBPACK_IMPORTED_MODULE_8__["MatTable"], { static: false },] }]
};
ListS1ApplicationComponent = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_5__["Component"])({
        selector: 'app-list-s1-application',
        template: _raw_loader_list_s1_application_component_html__WEBPACK_IMPORTED_MODULE_1__["default"],
        styles: [_list_s1_application_component_scss__WEBPACK_IMPORTED_MODULE_2__["default"]]
    })
], ListS1ApplicationComponent);

let ListS1Dialog = class ListS1Dialog {
    constructor(apiService, sweetAlertService, router, dataStorage, dialog, dialogRef, commonService, data) {
        this.apiService = apiService;
        this.sweetAlertService = sweetAlertService;
        this.router = router;
        this.dataStorage = dataStorage;
        this.dialog = dialog;
        this.dialogRef = dialogRef;
        this.commonService = commonService;
        this.data = data;
        this.s2Application = new _models__WEBPACK_IMPORTED_MODULE_9__["S2Application"]();
        this.s1Application = new _models__WEBPACK_IMPORTED_MODULE_9__["S1Application"]();
        this.applicationRequest = new app_core_models_application_request_model__WEBPACK_IMPORTED_MODULE_20__["ApplicationRequest"]();
        this.typeOfExecution = new app_core_models_type_of_execution_model__WEBPACK_IMPORTED_MODULE_22__["TypeOfExecution"]();
    }
    ngOnInit() {
        this.typeOfExecution = this.data.s2Application.typeOfExecution;
        this.s2Application.applicationForm = this.data.s2Application;
        this.s1Application = this.data.s2Application;
    }
    // Used for S2 or TOA
    proceedToS2(isS2) {
        sweetalert2__WEBPACK_IMPORTED_MODULE_13___default.a.fire({
            text: `Are you sure you want to apply for ${isS2 ? 'S2' : 'TOA'}?`,
            icon: 'question',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Confirm'
        }).then((result) => {
            if (result.value) {
                this.s2Application.submissionType = this.data.s2Application.submissionType;
                this.s2Application.applicationForm = this.data.s2Application;
                this.s2Application.submissionType = _shared__WEBPACK_IMPORTED_MODULE_10__["SUBMISSION_TYPE"].ORIGINAL; // this.s2Application.applicationForm.submissionType;
                if (!isS2) {
                    this.s2Application.hasToa = true;
                    // this.s2Application.submissionType = SUBMISSION_TYPE.TOA;
                }
                this.s2Application.internalStatus = 'SAVED';
                this.s2Application.externalStatus = 'SAVED';
                console.log('View S2:', this.data.s2Application);
                this.apiService.save(_shared__WEBPACK_IMPORTED_MODULE_10__["ENDPOINTS"].s2ApplicationFormPresentorSave, this.s2Application).subscribe((res) => {
                    console.log(res);
                    this.router.navigate(['asc/page/application/s2/update', res.responseData.data.id]);
                    this.commonService.sendClickEvent();
                    this.dialogRef.close();
                }, (err) => {
                });
            }
        });
    }
    requestForClearingAndClearance() {
        sweetalert2__WEBPACK_IMPORTED_MODULE_13___default.a.fire({
            text: 'Are you sure you want to request approval for special clearing?',
            icon: 'question',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Confirm'
        }).then((result) => {
            if (result.value) {
                this.dialogRef.close();
                let dialogRef;
                this.applicationRequest.hasSpecialClearing = true;
                this.applicationRequest.applicationForm = this.s1Application;
                dialogRef = this.dialog.open(app_modules_fragments_request_for_special_clearing_request_for_special_clearing_component__WEBPACK_IMPORTED_MODULE_21__["RequestForSpecialClearingComponent"], {
                    width: '80%',
                    height: '85%',
                    data: {
                        applicationRequest: this.applicationRequest,
                        applicationType: 'Request for Special Clearing'
                    }
                });
                this.commonService.sendClickEvent();
            }
        });
    }
};
ListS1Dialog.ctorParameters = () => [
    { type: _services__WEBPACK_IMPORTED_MODULE_11__["ApiService"] },
    { type: _services__WEBPACK_IMPORTED_MODULE_11__["SweetAlertService"] },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_12__["Router"] },
    { type: _services__WEBPACK_IMPORTED_MODULE_11__["DataStorageService"] },
    { type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_15__["MatDialog"] },
    { type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_15__["MatDialogRef"] },
    { type: app_core_services_common_services_service__WEBPACK_IMPORTED_MODULE_23__["CommonServices"] },
    { type: undefined, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Inject"], args: [_angular_material_dialog__WEBPACK_IMPORTED_MODULE_15__["MAT_DIALOG_DATA"],] }] }
];
ListS1Dialog = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_5__["Component"])({
        selector: 'list-s1-dialog',
        template: _raw_loader_list_s1_dialog_html__WEBPACK_IMPORTED_MODULE_3__["default"],
        styles: [_list_s1_application_component_scss__WEBPACK_IMPORTED_MODULE_2__["default"]]
    })
], ListS1Dialog);



/***/ }),

/***/ "u+D7":
/*!****************************************************!*\
  !*** ./src/app/modules/pages/maintenance/index.ts ***!
  \****************************************************/
/*! exports provided: AffiliationComponent, BrandsComponent, PaymentTypeComponent, TypeOfDocumentComponent, TypeOfMediumComponent, TypeOfReasonComponent, CategoryComponent, ProductComponent, AscRatesComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _affiliation_affiliation_component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./affiliation/affiliation.component */ "Y9a5");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AffiliationComponent", function() { return _affiliation_affiliation_component__WEBPACK_IMPORTED_MODULE_0__["AffiliationComponent"]; });

/* harmony import */ var _brands_brands_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./brands/brands.component */ "vcPs");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "BrandsComponent", function() { return _brands_brands_component__WEBPACK_IMPORTED_MODULE_1__["BrandsComponent"]; });

/* harmony import */ var _payment_type_payment_type_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./payment-type/payment-type.component */ "PE+p");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PaymentTypeComponent", function() { return _payment_type_payment_type_component__WEBPACK_IMPORTED_MODULE_2__["PaymentTypeComponent"]; });

/* harmony import */ var _type_of_document_type_of_document_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./type-of-document/type-of-document.component */ "0uvy");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TypeOfDocumentComponent", function() { return _type_of_document_type_of_document_component__WEBPACK_IMPORTED_MODULE_3__["TypeOfDocumentComponent"]; });

/* harmony import */ var _type_of_medium_type_of_medium_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./type-of-medium/type-of-medium.component */ "cIBp");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TypeOfMediumComponent", function() { return _type_of_medium_type_of_medium_component__WEBPACK_IMPORTED_MODULE_4__["TypeOfMediumComponent"]; });

/* harmony import */ var _type_of_reason_type_of_reason_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./type-of-reason/type-of-reason.component */ "kyg5");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TypeOfReasonComponent", function() { return _type_of_reason_type_of_reason_component__WEBPACK_IMPORTED_MODULE_5__["TypeOfReasonComponent"]; });

/* harmony import */ var _category_category_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./category/category.component */ "1kjv");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CategoryComponent", function() { return _category_category_component__WEBPACK_IMPORTED_MODULE_6__["CategoryComponent"]; });

/* harmony import */ var _product_product_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./product/product.component */ "y6m7");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ProductComponent", function() { return _product_product_component__WEBPACK_IMPORTED_MODULE_7__["ProductComponent"]; });

/* harmony import */ var _asc_rates_asc_rates_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./asc-rates/asc-rates.component */ "g34Q");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AscRatesComponent", function() { return _asc_rates_asc_rates_component__WEBPACK_IMPORTED_MODULE_8__["AscRatesComponent"]; });












/***/ }),

/***/ "vKeY":
/*!*********************************************************!*\
  !*** ./src/app/modules/pages/company/company.module.ts ***!
  \*********************************************************/
/*! exports provided: CompanyModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CompanyModule", function() { return CompanyModule; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "mrSG");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common */ "ofXK");
/* harmony import */ var _company_routing_module__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./company-routing.module */ "Fy8O");




;
let CompanyModule = class CompanyModule {
};
CompanyModule = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModule"])({
        declarations: [],
        imports: [
            _angular_common__WEBPACK_IMPORTED_MODULE_2__["CommonModule"],
            _company_routing_module__WEBPACK_IMPORTED_MODULE_3__["CompanyRoutingModule"],
        ]
    })
], CompanyModule);



/***/ }),

/***/ "wBLN":
/*!********************************************************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/modules/pages/applications/s1-application/list-s1-application/list-s1-application.component.html ***!
  \********************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<form (keydown.enter)=\"$event.preventDefault()\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12 title\">\r\n        <mat-label>\r\n          <i class=\"material-icons icon-black\">view_list</i> <span\r\n            [hidden]=\"viewApplicationType === 'assigned-applications' || viewApplicationType === 'for-release' || viewApplicationType === 'released'\"> {{s1ApplicationTitle}} -</span> &nbsp;<span>{{\r\n            applicationTypeTitle?.replace('Assigned', 'Retrieve/Re-assign') | uppercase}}</span>\r\n        </mat-label>\r\n        <button class=\"button-right\" type=\"submit\" mat-raised-button color=\"primary\" (click)=\"refresh()\" [disabled]=\"!refreshButtonEnabled\">\r\n          <span class=\"material-icons\">sync</span>\r\n          <label *ngIf=\"isTimerValueDisplay\"> &nbsp;{{timerDisplay}}</label>\r\n        </button>\r\n        <button class=\"button-right button-red\" type=\"submit\" mat-raised-button\r\n          *ngIf=\"currentUser?.userRole?.name=='ROLE_APPLICANT' || currentUser?.userRole?.name=='ROLE_ENCODER'\"\r\n          [hidden]=\"viewApplicationType === 'multiple'\"\r\n          (click)=\"openFormTypeModal()\">\r\n          <i class=\"material-icons color__white\">add</i> NEW APPLICATION\r\n        </button>\r\n      </div>\r\n    </div>\r\n    <hr>\r\n    <!-- ADMIN - INCLUDES LIST FOR MULTIPLE APPLICATIONS -->\r\n    <!-- TEMP: SHOW multiple application tab for all roles -->\r\n    <!-- <mat-tab-group>\r\n      <mat-tab  >\r\n        <ng-container *ngTemplateOutlet=\"individualS1ApplicationList\"></ng-container>\r\n      </mat-tab>\r\n      <mat-tab>\r\n        <ng-container *ngTemplateOutlet=\"multipleS1ApplicationList\"></ng-container>\r\n      </mat-tab>\r\n      <mat-tab >\r\n        <ng-container *ngTemplateOutlet=\"specialS1ApplicationList\"></ng-container>\r\n      </mat-tab>\r\n      <mat-tab  >\r\n        <ng-container *ngTemplateOutlet=\"assignedToScreenerS1ApplicationList\"></ng-container>\r\n      </mat-tab>\r\n    </mat-tab-group> -->\r\n\r\n    <div *ngIf=\"applicationTypeTitle === 'INDIVIDUAL'\">\r\n      <ng-container *ngTemplateOutlet=\"individualS1ApplicationList\"></ng-container>\r\n    </div>\r\n    <div *ngIf=\"viewApplicationType === 'multiple'\">\r\n      <ng-container *ngTemplateOutlet=\"multipleS1ApplicationList\"></ng-container>\r\n    </div>\r\n    <div\r\n      *ngIf=\"(currentUser.userRole.name === 'ROLE_APPLICANT' || currentUser.userRole.name === 'ROLE_ENCODER' || currentUser.userRole.name === 'ROLE_ADMIN' || currentUser?.userRole.name === 'ROLE_SUPER_ADMIN') && viewApplicationType === 'special'\">\r\n      <ng-container *ngTemplateOutlet=\"specialS1ApplicationList\"></ng-container>\r\n    </div>\r\n    <div *ngIf=\"(currentUser.userRole.name=='ROLE_AD_SPECIALIST'||currentUser.userRole.name=='ROLE_SCREENER')\">\r\n      <ng-container *ngTemplateOutlet=\"assignedToScreenerS1ApplicationList\"></ng-container>\r\n    </div>\r\n    <div *ngIf=\"currentUser.userRole.name=='ROLE_AD_SPECIALIST' || currentUser.userRole.name=='ROLE_REVIEWER' || currentUser.userRole.name === 'ROLE_ADMIN' || currentUser?.userRole.name === 'ROLE_SUPER_ADMIN'\">\r\n      <ng-container *ngTemplateOutlet=\"forReleaseApplicationList\"></ng-container>\r\n    </div>\r\n\r\n    <!-- OTHER USERS - DISPLAY ONLY S1 APPLICATIONS -->\r\n    <!-- <ng-container *ngIf=\"!showMultipleS1Application\">\r\n      <ng-container *ngTemplateOutlet=\"individualS1ApplicationList\"></ng-container>\r\n    </ng-container> -->\r\n  </div>\r\n\r\n</form>\r\n\r\n<!-- TEMPLATE FOR INDIVIDUAL S1 APPLICATION LIST -->\r\n<ng-template #individualS1ApplicationList>\r\n  <br>\r\n  <div class=\"row\" fxLayout fxLayoutAlign=\"center center\">\r\n    <mat-form-field class=\"col-md-9\" appearance=\"outline\">\r\n      <mat-label><i class=\"material-icons\">search</i> Search Applications</mat-label>\r\n      <input matInput type=\"text\" (keyup)=\"doFilter($event.target.value)\">\r\n      <input type=\"hidden\">\r\n    </mat-form-field>\r\n\r\n\r\n    <!-- <div class=\"row\">\r\n    <div class=\"col-md-2\">LEGEND:</div>\r\n    <div class=\"col-md-1 legend legend-blue\">ORIGINAL</div>\r\n    <div class=\"col-md-1 legend legend-green\">REVISION</div>\r\n    <div class=\"col-md-1 legend legend-orange\">FOR COMPLIANCE</div>\r\n    <div class=\"col-md-1\" style=\"background-color:lightpink;border-radius:8px;width:20%;\">Rejected</div>\r\n  </div> -->\r\n\r\n    <div class=\"col\" *ngIf=\"currentUser.userRole.name==='ROLE_AD_SPECIALIST'\">\r\n      <div class=\"legend-content\">\r\n        <table class=\"legend-table\">\r\n          <tr>\r\n            <td>\r\n              LEGEND:\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td>\r\n              <div class=\"legend-box legend-yellow\"></div> LOCKED\r\n            </td>\r\n          </tr>\r\n         <tr>\r\n            <td>\r\n              <div class=\"legend-box legend-white\"></div> OPEN\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td>\r\n              <div class=\"legend-box legend-blue\"></div> ORIGINAL\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td>\r\n              <div class=\"legend-box legend-orange\"></div> FOR COMPLIANCE\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td>\r\n              <div class=\"legend-box legend-green\"></div> REVISION\r\n            </td>\r\n          </tr>\r\n       <!--     <tr>\r\n            <td>\r\n              <div class=\"legend-box legend-orange\"></div> FOR COMPLIANCE\r\n            </td>\r\n          </tr> -->\r\n        </table>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"col\" *ngIf=\"currentUser.userRole.name !='ROLE_AD_SPECIALIST'\">\r\n      <div class=\"legend-content\">\r\n        <table class=\"legend-table\">\r\n          <tr>\r\n            <td>\r\n              LEGEND:\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td>\r\n              <div class=\"legend-box legend-blue\"></div> ORIGINAL\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td>\r\n              <div class=\"legend-box legend-orange\"></div> FOR COMPLIANCE\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td>\r\n              <div class=\"legend-box legend-green\"></div> REVISION\r\n            </td>\r\n          </tr>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n\r\n  <br>\r\n<!--\r\n  <mat-tab-group mat-align-tabs=\"start\" (selectedTabChange)=\"changeTab($event)\">\r\n    <mat-tab label=\"\">\r\n      <ng-template mat-tab-label>\r\n        Original\r\n        <div matBadge={{dataSource?.data?.length}} class=\"c-badge\" matBadgeColor=\"warn\"></div>\r\n      </ng-template>\r\n    </mat-tab>\r\n    <mat-tab label=\"\">\r\n      <ng-template mat-tab-label>\r\n        Revision\r\n        <div matBadge={{dataSource?.data?.length}} class=\"c-badge\" matBadgeColor=\"warn\"></div>\r\n      </ng-template>\r\n    </mat-tab>\r\n    <mat-tab label=\"\">\r\n      <ng-template mat-tab-label>\r\n        Compliance\r\n        <div matBadge={{dataSource?.data?.length}} class=\"c-badge\" matBadgeColor=\"warn\"></div>\r\n      </ng-template>\r\n    </mat-tab>\r\n  </mat-tab-group> -->\r\n  <mat-tab-group mat-align-tabs=\"start\" (selectedTabChange)=\"changeTab($event)\">\r\n    <mat-tab label=\"Original\">\r\n      <ng-template mat-tab-label>\r\n        Original\r\n        <div matBadge={{badgeCounter.countOriginal}} class=\"c-badge\" matBadgeColor=\"warn\"></div>\r\n      </ng-template>\r\n    </mat-tab>\r\n    <mat-tab label=\"Revision\" *ngIf=\"!isReviewer\">\r\n      <ng-template mat-tab-label>\r\n        Revision\r\n        <div matBadge={{badgeCounter.countRevision}} class=\"c-badge\" matBadgeColor=\"warn\"></div>\r\n      </ng-template>\r\n    </mat-tab>\r\n    <mat-tab label=\"Compliance\" *ngIf=\"!isReviewer\">\r\n      <ng-template mat-tab-label>\r\n        Compliance\r\n        <div matBadge={{badgeCounter.countCompliance}} class=\"c-badge\" matBadgeColor=\"warn\"></div>\r\n      </ng-template>\r\n    </mat-tab>\r\n    <mat-tab label=\"For Appeal\" *ngIf=\"isAdSpecialist || isAdmin || isSuperAdmin\">\r\n      <ng-template mat-tab-label>\r\n        Released Appeal\r\n        <div matBadge={{badgeCounter.countTotalOngoingAppeal}} class=\"c-badge\" matBadgeColor=\"warn\"></div>\r\n      </ng-template>\r\n    </mat-tab>\r\n    <mat-tab label=\"Returned Application\" *ngIf=\"isAdSpecialist || isScreener\">\r\n      <ng-template mat-tab-label>\r\n        Returned Application\r\n        <div matBadge={{badgeCounter.returnedApplications}} class=\"c-badge\" matBadgeColor=\"warn\"></div>\r\n      </ng-template>\r\n    </mat-tab>\r\n      <mat-tab label=\"For Decision and Comments\" *ngIf=\"isScreener || isReviewer || isAdmin || isSuperAdmin\">\r\n        <ng-template mat-tab-label>\r\n          For Decision and Comments\r\n          <div matBadge={{badgeCounter.countTotalScreenerAndReviewerDecisionComment}} class=\"c-badge\" matBadgeColor=\"warn\"></div>\r\n        </ng-template>\r\n      </mat-tab>\r\n  \r\n      <mat-tab label=\"Screened Applications\" *ngIf=\"isScreener || isReviewer || isAdmin || isSuperAdmin\">\r\n        <ng-template mat-tab-label>\r\n          Screened Applications\r\n          <div matBadge={{badgeCounter.screenedApplications}} class=\"c-badge\" matBadgeColor=\"warn\"></div>\r\n        </ng-template>\r\n      </mat-tab>\r\n  </mat-tab-group>\r\n\r\n  <div class=\"mat-elevation-z8 fields\">\r\n\r\n\r\n    <table mat-table [dataSource]=\"dataSource\" matSort>\r\n      <ng-container matColumnDef=\"referenceCode\">\r\n        <th mat-header-cell *matHeaderCellDef>REFERENCE CODE <mat-icon class=\"cursor\" (click)=\"sortEvent()\" style=\"color:black\" [hidden]=\"currentUser.userRole.name === 'ROLE_ENCODER'\">swap_vert</mat-icon></th>\r\n        <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"viewApplication(element)\" [ngStyle]=\"{'pointer-events': ((i !== 0 && currentUser.userRole.name === 'ROLE_ENCODER') ? 'none' : ''),\r\n        'background-color': (\r\n          (currentUser.userRole.name === 'ROLE_ENCODER' && i > 0 ? '#beb8b8' :\r\n            (((element.submissionType === 'ORIGINAL' && element.decisionStatus !== 'INCOMPLETE') || element.decisionStatus === 'INCOMPLETE') ? 'lightblue' :\r\n            ((element.submissionType === 'FOR COMPLIANCE') ? '#fca402' :\r\n            (element.submissionType === 'REVISION' ? '#8fcf8f' : '' )))\r\n          )\r\n          )}\">\r\n          {{ element?.submissionType === 'ORIGINAL' && element?.internalStatus=='S1_APPLICATION_REJECTED' ? element?.referenceCodeRejected : element?.referenceCode | uppercase}}\r\n        </td>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"typeOfApplication\">\r\n        <th mat-header-cell *matHeaderCellDef > TYPE OF APPLICATION </th>\r\n        <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"viewApplication(element)\"\r\n          [ngStyle]=\"{'pointer-events': ((i !== 0 && currentUser.userRole.name === 'ROLE_ENCODER') ? 'none' : ''),\r\n          'background-color': ((currentUser.userRole.name === 'ROLE_ENCODER' && i > 0 ? '#beb8b8' : currentUser.userRole.name === 'ROLE_AD_SPECIALIST' && element?.formStatus==='LOCKED' ? 'yellow' : ''))}\">\r\n          {{element?.formType.replaceAll('_',' ') | uppercase}} - {{\r\n          element?.applicationType?.description | uppercase }}</td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"companyName\">\r\n        <th mat-header-cell *matHeaderCellDef > COMPANY NAME </th>\r\n        <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"viewApplication(element)\"\r\n        [ngStyle]=\"{'pointer-events': ((i !== 0 && currentUser.userRole.name === 'ROLE_ENCODER') ? 'none' : ''),\r\n          'background-color': ((currentUser.userRole.name === 'ROLE_ENCODER' && i > 0 ? '#beb8b8'\r\n          : currentUser.userRole.name === 'ROLE_AD_SPECIALIST' && element?.formStatus==='LOCKED' ? 'yellow' : ''))}\">\r\n          {{ element?.company?.companyName | uppercase }}</td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"brand\">\r\n        <th mat-header-cell *matHeaderCellDef > BRAND </th>\r\n        <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"viewApplication(element)\"\r\n        [ngStyle]=\"{'pointer-events': ((i !== 0 && currentUser.userRole.name === 'ROLE_ENCODER') ? 'none' : ''),\r\n          'background-color': ((currentUser.userRole.name === 'ROLE_ENCODER' && i > 0 ? '#beb8b8'\r\n          : currentUser.userRole.name === 'ROLE_AD_SPECIALIST' && element?.formStatus==='LOCKED' ? 'yellow' : ''))}\">\r\n          {{ element?.brand?.description | uppercase }} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"product\">\r\n        <th mat-header-cell *matHeaderCellDef > PRODUCT </th>\r\n        <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"viewApplication(element)\"\r\n        [ngStyle]=\"{'pointer-events': ((i !== 0 && currentUser.userRole.name === 'ROLE_ENCODER') ? 'none' : ''),\r\n          'background-color': ((currentUser.userRole.name === 'ROLE_ENCODER' && i > 0 ? '#beb8b8'\r\n          : currentUser.userRole.name === 'ROLE_AD_SPECIALIST' && element?.formStatus==='LOCKED' ? 'yellow' : ''))}\">\r\n          {{ element?.product?.description | uppercase }} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"typeOfMedium\">\r\n        <th mat-header-cell *matHeaderCellDef> TYPE OF MEDIUM</th>\r\n        <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"viewApplication(element)\"\r\n        [ngStyle]=\"{'pointer-events': ((i !== 0 && currentUser.userRole.name === 'ROLE_ENCODER') ? 'none' : ''),\r\n          'background-color': ((currentUser.userRole.name === 'ROLE_ENCODER' && i > 0 ? '#beb8b8'\r\n          : currentUser.userRole.name === 'ROLE_AD_SPECIALIST' && element?.formStatus==='LOCKED' ? 'yellow' : ''))}\">\r\n          {{ element?.typeOfMedium | uppercase }}</td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"status\">\r\n        <th mat-header-cell *matHeaderCellDef > APPLICATION STATUS </th>\r\n        <td mat-cell *matCellDef=\"let element; let i = index\" class=\"\" (click)=\"viewApplication(element)\"\r\n          [ngStyle]=\"{'pointer-events': ((i !== 0 && currentUser.userRole.name === 'ROLE_ENCODER') ? 'none' : ''),\r\n        'background-color': ((currentUser.userRole.name === 'ROLE_ENCODER' && i > 0\r\n        ? '#beb8b8' : element?.internalStatus === 'S1_APPLICATION_REJECTED' || element?.internalStatus === 'S1_APPLICATION_CANCELLED' ? 'lightpink' : currentUser.userRole.name === 'ROLE_AD_SPECIALIST' && element?.formStatus==='LOCKED' ? 'yellow' : ''))}\">\r\n          {{ showStatus({'paymentStatus': element?.paymentStatus, 'externalStatus': element?.externalStatus, 'actionStatus': element?.actionStatus}) }} </td>\r\n      </ng-container>\r\n\r\n      <ng-continer matColumnDef=\"paymentStatus\">\r\n        <th mat-header-cell *matHeaderCellDef>PAYMENT STATUS</th>\r\n        <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"viewApplication(element)\"\r\n          [ngStyle]=\"{\r\n            'pointer-events': ((i !== 0 && currentUser.userRole.name === 'ROLE_ENCODER') ? 'none' : ''),\r\n            'background-color': ((currentUser.userRole.name === 'ROLE_ENCODER' && i > 0 ? '#beb8b8' : currentUser.userRole.name === 'ROLE_AD_SPECIALIST' && element?.formStatus==='LOCKED' ? 'yellow' : ''))\r\n          }\"\r\n        >\r\n          <div\r\n            class=\"payment-status-chip\"\r\n            [ngClass]=\"{\r\n              'payment-status-chip--paid': element?.paymentStatus === paymentStatus.PAID,\r\n              'payment-status-chip--unpaid': element?.paymentStatus === paymentStatus.UNPAID,\r\n              'payment-status-chip--for-approval': element?.paymentStatus === paymentStatus.FOR_APPROVAL,\r\n              'payment-status-chip--for-payment': element?.paymentStatus === paymentStatus.FOR_PAYMENT\r\n            }\"\r\n          >\r\n            {{formatTextPayment(element?.paymentStatus)}}\r\n          </div>\r\n        </td>\r\n      </ng-continer>\r\n\r\n      <ng-container matColumnDef=\"internalStatus\">\r\n        <th mat-header-cell *matHeaderCellDef > INTERNAL STATUS </th>\r\n        <td mat-cell *matCellDef=\"let element; let i = index\" class=\"\"\r\n          [ngStyle]=\"{'pointer-events': ((i !== 0 && currentUser.userRole.name === 'ROLE_ENCODER') ? 'none' : ''),\r\n        'background-color': ((currentUser.userRole.name === 'ROLE_ENCODER' && i > 0 ? '#beb8b8' : currentUser.userRole.name === 'ROLE_AD_SPECIALIST' && element?.formStatus==='LOCKED' ? 'yellow' : ''))}\">\r\n          {{ parseInternalStatus(element?.internalStatus, element?.actionBy) }}</td>\r\n      </ng-container>\r\n\r\n      <!-- For ASC Users only 'background-color': ((currentUser.userRole.name === 'ROLE_AD_SPECIALIST' && i > 0 && element?.formStatus==='LOCKED' ? 'yellow' : ''))-->\r\n      <!-- <ng-container matColumnDef=\"status\" *ngIf=\"currentUser.userRole.name!='ROLE_APPLICANT'\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> APPLICATION STATUS </th>\r\n        <td mat-cell *matCellDef=\"let element; let i = index\" class=\"applicantStatus\"\r\n          [ngStyle]=\"{'background-color':\r\n          ((element.submissionType=='ORIGINAL'&&element.decisionStatus!='INCOMPLETE') ? 'lightblue' :\r\n          ((element.submissionType=='FOR COMPLIANCE'||element.decisionStatus=='INCOMPLETE'||element.submissionType=='COMPLIANCE') ? '#ebd79b' :\r\n          (element.submissionType=='REVISION' ? '#8fcf8f' : '' )))}\"\r\n          (click)=\"viewApplication(element)\"> {{\r\n          element?.internalStatus?.replaceAll('_',' ') | uppercase }}</td>\r\n      </ng-container> -->\r\n\r\n      <ng-container matColumnDef=\"icon\">\r\n        <th mat-header-cell *matHeaderCellDef > </th>\r\n        <td mat-cell *matCellDef=\"let element\" class=\"icon\">\r\n          <!-- FOR APPLICANT -------------------------------------------------- -->\r\n          <button mat-raised-button class=\"button-red\" matTooltip=\"Cancel Application\" [disabled]=\"element.formStatus === 'LOCKED'\"\r\n            (click)=\"saveStatus('presentor','cancel', 'S1_APPLICATION_CANCELLED', element)\"\r\n            *ngIf=\"currentUser?.userRole?.name=='ROLE_APPLICANT'&&element?.internalStatus=='S1_APPLICATION_SUBMITTED'\">\r\n            <i class=\"material-icons color__white\">cancel</i>\r\n          </button>\r\n\r\n          <button mat-raised-button class=\"button-red\" matTooltip=\"Submit For Compliance\"\r\n            (click)=\"viewApplication(element)\"\r\n            *ngIf=\"(!element?.appliedS2 && !element?.hasOngoingCompliance && !element?.hasOngoingRevision && element?.decisionStatus=='INCOMPLETE' &&\r\n            !s1Application?.hasOngoingAppeal && element?.paymentStatus === 'PAID' && element?.releaseStatus === 'RELEASED' &&\r\n                    (element?.internalStatus=='S1_APPLICATION_REVIEWED' || element?.internalStatus=='COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER' || element?.internalStatus=='REVISION_SCREENED' ||\r\n                    element?.internalStatus=='S1_APPLICATION_REJECTED'))\">\r\n            <i class=\"material-icons\">warning_amber</i>\r\n          </button>\r\n\r\n          <button mat-raised-button class=\"button-red\" matTooltip=\"Submit Revision\"\r\n            (click)=\"viewApplication(element)\"\r\n            *ngIf=\"(element?.revisionNo !== 2 && currentUser?.userRole?.name=='ROLE_APPLICANT' && !element?.appliedS2 &&\r\n            element?.paymentStatus === 'PAID' && element?.releaseStatus === 'RELEASED' && !element?.hasOngoingCompliance &&\r\n            !element?.hasOngoingRevision && element?.submissionType === 'ORIGINAL' && !s1Application?.hasOngoingAppeal &&\r\n                    (\r\n                      (element?.internalStatus=='S1_APPLICATION_REVIEWED' || element?.internalStatus=='COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER') &&\r\n                      (element?.decisionStatus=='APPROVED' || element?.decisionStatus=='APPROVED W/ CAUTION')\r\n                    )\r\n                  )\">\r\n            <i class=\"material-icons\">task_alt</i>\r\n          </button>\r\n\r\n          <button mat-raised-button class=\"button-red\" matTooltip=\"Apply for S2 Application\"\r\n            *ngIf=\"currentUser?.userRole?.name=='ROLE_APPLICANT' && !element?.appliedS2 && !element?.hasOngoingRevision&& !element?.hasOngoingCompliance &&\r\n            element?.paymentStatus === 'PAID' && element?.releaseStatus === 'RELEASED' && !s1Application?.hasOngoingAppeal &&\r\n            ((element?.internalStatus=='S1_APPLICATION_REVIEWED'|| element?.internalStatus=='COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER'|| element?.internalStatus=='REVISION_SCREENED') &&\r\n             (element?.decisionStatus=='APPROVED'||element?.decisionStatus=='APPROVED W/ CAUTION'))\"\r\n            (click)=\"applyForS2(element)\">\r\n              <i class=\"material-icons color__white\"> queue_play_next</i>\r\n          </button>\r\n\r\n          <!-- FOR ASC USERS -------------------------------------------------- -->\r\n          <button mat-raised-button class=\"button-red\" matTooltip=\"Return to Ad Specialist\"\r\n            (click)=\"returnTo('RETURN', element)\"\r\n            *ngIf=\"currentUser?.userRole?.name=='ROLE_SCREENER'&&element?.internalStatus=='S1_APPLICATION_VERIFIED_BY_AD_SPE'\">\r\n            <i class=\"material-icons color__white\">assignment_return</i>\r\n          </button>\r\n          <button mat-raised-button class=\"button-red\" matTooltip=\"Return to Ad Specialist\"\r\n            (click)=\"returnTo('RETURN', element)\"\r\n            *ngIf=\"currentUser?.userRole?.name=='ROLE_SCREENER'&&element?.internalStatus=='COMPLIANCE_DOCUMENT_VERIFIED_BY_AD_SPE'\">\r\n            <i class=\"material-icons color__white\">assignment_return</i>\r\n          </button>\r\n          <button mat-raised-button class=\"button-red\" matTooltip=\"Return to Ad Specialist\"\r\n            (click)=\"returnTo('RETURN', element)\"\r\n            *ngIf=\"currentUser?.userRole?.name=='ROLE_SCREENER'&&element?.internalStatus=='REVISION_VERIFIED_BY_AD_SPE'\">\r\n            <i class=\"material-icons color__white\">assignment_return</i>\r\n          </button>\r\n\r\n          <button mat-raised-button class=\"button-red\" matTooltip=\"Return to Screener\"\r\n            (click)=\"returnTo('RETURN', element)\"\r\n            *ngIf=\"currentUser?.userRole?.name=='ROLE_REVIEWER'&&element.internalStatus=='S1_APPLICATION_SCREENED'\">\r\n            <i class=\"material-icons color__white\">assignment_return</i>\r\n          </button>\r\n\r\n          <!-- FOR ADSPECIALIST USERS -------------------------------------------------- -->\r\n          <button mat-raised-button class=\"button-red\" matTooltip=\"Unlock\"\r\n            (click)=\"unlockApplication('UNLOCK', element)\"\r\n            *ngIf=\"currentUser?.userRole?.name=='ROLE_AD_SPECIALIST' && element.formStatus == 'LOCKED' && displayedContent !== 'Returned Application'\">\r\n            <i class=\"material-icons color__white\">lock</i>\r\n          </button>\r\n          \r\n\r\n        </td>\r\n      </ng-container>\r\n\r\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n    </table>\r\n    <div class=\"no-record\" [hidden]=\"dataSource && dataSource?.data?.length > 0\">\r\n      No record found.\r\n    </div>\r\n    <!-- <div style=\"float:right\"\r\n      *ngIf=\"currentUser?.userRole?.name!=='ROLE_ADMIN'&&currentUser?.userRole?.name!=='ROLE_SUPER_ADMIN'\">\r\n      <button mat-stroked-button color=\"primary\">Total Items: {{totalItems}}</button>\r\n      <button mat-stroked-button color=\"primary\">{{currentPage}} of {{totalPages==0 ? '1' : totalPages}}</button>\r\n      <button mat-stroked-button color=\"warn\" (click)=\"prevPage()\"\r\n        [disabled]=\"dataSource && dataSource?.data?.length === 0\">\r\n        < Prev</button> <button mat-stroked-button color=\"warn\" (click)=\"nextPage()\"\r\n          [disabled]=\"dataSource && dataSource?.data?.length === 0\">Next >\r\n      </button>\r\n    </div> -->\r\n    <!-- <mat-paginator [length]=\"resultsLength\"></mat-paginator> -->\r\n    <!-- <mat-paginator [pageSizeOptions]=\"[10, 20, 50]\" showFirstLastButtons> -->\r\n    <!-- </mat-paginator> -->\r\n    <mat-paginator [pageSize]=\"pageSize\" [pageIndex]=\"pageNo\" [length]=\"totalItems\"\r\n      [pageSizeOptions]=\"pageSizeOptions\" (page)=\"pageEvents($event)\">\r\n  </mat-paginator>\r\n  </div>\r\n  <br>\r\n</ng-template>\r\n\r\n\r\n<!-- TEMPLATE FOR MULTIPLE S1 APPLICATION LIST -->\r\n<ng-template #multipleS1ApplicationList>\r\n  <br>\r\n  <div class=\"row\" fxLayout fxLayoutAlign=\"center center\">\r\n    <mat-form-field class=\"col-md-9\" appearance=\"outline\">\r\n      <mat-label><i class=\"material-icons\">search</i> Search Applications</mat-label>\r\n      <input matInput type=\"text\" (keyup)=\"doFilterS1MultipleApplicationList($event.target.value)\">\r\n    </mat-form-field>\r\n\r\n    <div class=\"col\">\r\n      <div class=\"legend-content\">\r\n        <table class=\"legend-table\">\r\n          <tr>\r\n            <td>\r\n              <div class=\"legend-box legend-orange\"></div> FOR APPROVAL\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td>\r\n              <div class=\"legend-box legend-green\"></div> APPROVED\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td>\r\n              <div class=\"legend-box legend-red\"></div> DISAPPROVED\r\n            </td>\r\n          </tr>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- <div class=\"row\">\r\n\r\n    <div class=\"col-md-2\">LEGEND:</div>\r\n    <div class=\"col-md-1 legend legend-orange\">FOR APPROVAL</div>\r\n    <div class=\"col-md-1 legend legend-green\">APPROVED</div>\r\n    <div class=\"col-md-1 legend legend-red\">DISAPPROVED</div>\r\n    <div class=\"col-md-1\" style=\"background-color:lightpink;border-radius:8px;width:20%;\">Rejected</div>\r\n  </div> -->\r\n\r\n  <br>\r\n\r\n  <div class=\"mat-elevation-z8 fields\">\r\n    <table mat-table [dataSource]=\"multipleApplicationDataSource\" matSort>\r\n\r\n      <ng-container matColumnDef=\"adTitle\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> AD TITLE </th>\r\n        <td mat-cell *matCellDef=\"let element\" (click)=\"viewMultipleApplication(element)\">\r\n          {{ element?.adTitle | uppercase }} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"typeOfApplication\">\r\n        <th mat-header-cell *matHeaderCellDef > TYPE OF APPLICATION </th>\r\n        <td mat-cell *matCellDef=\"let element\" (click)=\"viewMultipleApplication(element)\">\r\n          {{element?.applicationType?.description.replaceAll('_',' ') | uppercase }}</td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"companyName\">\r\n        <th mat-header-cell *matHeaderCellDef > COMPANY NAME </th>\r\n        <td mat-cell *matCellDef=\"let element\" (click)=\"viewMultipleApplication(element)\">\r\n          {{ element?.company?.companyName | uppercase }} </td>\r\n      </ng-container>\r\n\r\n      <!-- <ng-container matColumnDef=\"membersAffiliation\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> MEMBER'S AFFILIATION </th>\r\n        <td mat-cell *matCellDef=\"let element\" (click)=\"viewMultipleApplication(element)\">\r\n          {{ element?.membersAffiliation?.description | uppercase }} </td>\r\n      </ng-container> -->\r\n\r\n      <ng-container matColumnDef=\"brand\">\r\n        <th mat-header-cell *matHeaderCellDef > BRAND </th>\r\n        <td mat-cell *matCellDef=\"let element\" (click)=\"viewMultipleApplication(element)\">\r\n          {{ element?.brand?.description | uppercase }} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"product\">\r\n        <th mat-header-cell *matHeaderCellDef [hidden]=\"currentUser.userRole.name !== 'ROLE_AD_SPECIALIST'\" > PRODUCT </th>\r\n        <td mat-cell [hidden]=\"currentUser.userRole.name !== 'ROLE_AD_SPECIALIST'\" *matCellDef=\"let element\">\r\n          {{ element?.product?.description | uppercase }} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"status\">\r\n        <th mat-header-cell *matHeaderCellDef > APPLICATION STATUS </th>\r\n        <td mat-cell *matCellDef=\"let element\" class=\"applicantStatus\" [ngStyle]=\"{'background-color':\r\n        element?.status === 'FOR_APPROVAL' ? '#fca402' :\r\n        element?.status === 'APPROVED' ? '#8fcf8f' :\r\n        element?.status === 'DISAPPROVED' ? '#ff8a7b' : '' }\" (click)=\"viewMultipleApplication(element)\">\r\n          {{ element?.status?.replaceAll('_',' ') | uppercase }} </td>\r\n      </ng-container>\r\n\r\n      <tr mat-header-row *matHeaderRowDef=\"multipleApplicationDisplayedColumns\"></tr>\r\n      <tr mat-row *matRowDef=\"let row; columns: multipleApplicationDisplayedColumns;\"></tr>\r\n    </table>\r\n    <div class=\"no-record\" [hidden]=\"multipleApplicationDataSource && multipleApplicationDataSource?.data?.length > 0\">\r\n      No record found.\r\n    </div>\r\n    <!-- <mat-paginator [pageSizeOptions]=\"[10, 20, 50]\" showFirstLastButtons></mat-paginator> -->\r\n    <mat-paginator [pageSize]=\"pageSize\" [pageIndex]=\"pageNo\" [length]=\"multipleTotalItems\"\r\n      [pageSizeOptions]=\"pageSizeOptions\" (page)=\"pageEvents($event)\">\r\n    </mat-paginator>\r\n  </div>\r\n</ng-template>\r\n\r\n<!-- TEMPLATE FOR SPECIAL S1 APPLICATION LIST -->\r\n<ng-template #specialS1ApplicationList>\r\n  <b *ngIf=\"currentUser.userRole.name === 'ROLE_APPLICANT' || currentUser.userRole.name === 'ROLE_ENCODER'\"><b class=\"material-icons info-msg\">error_outline</b> This\r\n    page contain list of Request for Approval and allows you to create S1 application from approved request only.</b>\r\n  <b *ngIf=\"currentUser.userRole.name === 'ROLE_ADMIN' || currentUser?.userRole.name === 'ROLE_SUPER_ADMIN' \"><b\r\n      class=\"material-icons info-msg\">error_outline</b> This page\r\n    contain list of Request for Approval and allows you to approve or disapprove request.</b>\r\n  <br>\r\n  <div class=\"row\" fxLayout fxLayoutAlign=\"center center\">\r\n    <mat-form-field class=\"col-md-8\" appearance=\"outline\">\r\n      <mat-label><i class=\"material-icons\">search</i> Search Applications</mat-label>\r\n      <input matInput type=\"text\" (keyup)=\"doFilterS1MultipleApplicationList($event.target.value)\">\r\n    </mat-form-field>\r\n\r\n    <div class=\"col\">\r\n      <div class=\"legend-content\">\r\n        <table class=\"legend-table\">\r\n          <tr>\r\n            <td>\r\n              <div class=\"legend-box legend-orange\"></div> FOR APPROVAL\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td>\r\n              <div class=\"legend-box legend-green\"></div> APPROVED\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td>\r\n              <div class=\"legend-box legend-red\"></div> DISAPPROVED\r\n            </td>\r\n          </tr>\r\n          <!-- <tr>\r\n            <td>\r\n              <div class=\"legend-box legend-pink\"></div> REJECTED\r\n            </td>\r\n          </tr> -->\r\n        </table>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- <div class=\"row\">\r\n\r\n    <div class=\"col-md-2\">LEGEND:</div>\r\n    <div class=\"col-md-1 legend legend-orange\">FOR APPROVAL</div>\r\n    <div class=\"col-md-1 legend legend-green\">APPROVED</div>\r\n    <div class=\"col-md-1 legend legend-red\">DISAPPROVED</div>\r\n    <div class=\"col-md-1\" style=\"background-color:lightpink;border-radius:8px;width:20%;\">Rejected</div>\r\n  </div> -->\r\n  <br>\r\n\r\n  <div class=\"mat-elevation-z8 fields\">\r\n    <table mat-table [dataSource]=\"specialApplicationDataSource\" matSort>\r\n\r\n      <ng-container matColumnDef=\"adTitle\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> AD TITLE </th>\r\n        <td mat-cell *matCellDef=\"let element\" (click)=\"viewSpecialApplication(element)\">\r\n          {{ element?.adTitle | uppercase }} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"typeOfApplication\">\r\n        <th mat-header-cell *matHeaderCellDef > TYPE OF APPLICATION </th>\r\n        <td mat-cell *matCellDef=\"let element\" (click)=\"viewSpecialApplication(element)\">\r\n          {{ element?.applicationType?.description.replaceAll('_',' ') | uppercase }} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"companyName\">\r\n        <th mat-header-cell *matHeaderCellDef > COMPANY NAME </th>\r\n        <td mat-cell *matCellDef=\"let element\" (click)=\"viewSpecialApplication(element)\">\r\n          {{ element?.company?.companyName | uppercase }} </td>\r\n      </ng-container>\r\n\r\n      <!-- <ng-container matColumnDef=\"membersAffiliation\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> MEMBER'S AFFILIATION </th>\r\n        <td mat-cell *matCellDef=\"let element\" (click)=\"viewSpecialApplication(element)\">\r\n          {{ element?.membersAffiliation?.description | uppercase }} </td>\r\n      </ng-container> -->\r\n\r\n      <ng-container matColumnDef=\"brand\">\r\n        <th mat-header-cell *matHeaderCellDef > BRAND </th>\r\n        <td mat-cell *matCellDef=\"let element\" (click)=\"viewSpecialApplication(element)\">\r\n          {{ element?.brand?.description | uppercase }} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"status\">\r\n        <th mat-header-cell *matHeaderCellDef> APPLICATION STATUS </th>\r\n        <td mat-cell *matCellDef=\"let element\" class=\"applicantStatus\" [ngStyle]=\"{'background-color':\r\n        element?.status === 'FOR_APPROVAL' ? '#fca402' :\r\n        element?.status === 'APPROVED' ? '#8fcf8f' :\r\n        element?.status === 'DISAPPROVED' ? '#ff8a7b' : '' }\" (click)=\"viewSpecialApplication(element)\">\r\n          {{ element?.status?.replaceAll('_',' ') | uppercase }} </td>\r\n      </ng-container>\r\n\r\n      <tr mat-header-row *matHeaderRowDef=\"specialApplicationDisplayedColumns\"></tr>\r\n      <tr mat-row *matRowDef=\"let row; columns: specialApplicationDisplayedColumns;\"></tr>\r\n    </table>\r\n    <div class=\"no-record\" [hidden]=\"specialApplicationDataSource && specialApplicationDataSource?.data?.length > 0\">\r\n      No record found.\r\n    </div>\r\n    <!-- <mat-paginator [pageSizeOptions]=\"[10, 20, 50]\" showFirstLastButtons></mat-paginator> -->\r\n    <mat-paginator [pageSize]=\"pageSize\" [pageIndex]=\"pageNo\" [length]=\"specialTotalItems\"\r\n      [pageSizeOptions]=\"pageSizeOptions\" (page)=\"pageEvents($event)\">\r\n    </mat-paginator>\r\n  </div>\r\n</ng-template>\r\n\r\n<!-- TEMPLATE FOR ASSIGNED TO SCREENER S1 APPLICATION LIST -->\r\n<ng-template #assignedToScreenerS1ApplicationList>\r\n  <div *ngIf=\"viewApplicationType === 'assigned-applications'\">\r\n    <b><b class=\"material-icons info-msg\">error_outline</b> This page allows you to view or retrieve application to\r\n      re-assign only.</b>\r\n    <br>\r\n    <div class=\"row\" fxLayout fxLayoutAlign=\"center center\">\r\n      <mat-form-field class=\"col-md-8\" appearance=\"outline\">\r\n        <mat-label><i class=\"material-icons\">search</i> Search Applications</mat-label>\r\n        <input matInput type=\"text\" (keyup)=\"doFilterAssignedS1ApplicationList($event.target.value)\">\r\n      </mat-form-field>\r\n\r\n      <div class=\"col\">\r\n        <div class=\"legend-content\">\r\n          <table class=\"legend-table\">\r\n            <tr>\r\n              <td>\r\n                <div class=\"legend-box legend-blue\"></div> ORIGINAL\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                <div class=\"legend-box legend-green\"></div> REVISION\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                <div class=\"legend-box legend-orange\"></div> FOR COMPLIANCE\r\n              </td>\r\n            </tr>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- <div class=\"row\">\r\n\r\n    <div class=\"col-md-2\">LEGEND:</div>\r\n    <div class=\"col-md-1 legend legend-blue\">ORIGINAL</div>\r\n    <div class=\"col-md-1 legend legend-green\">REVISION</div>\r\n    <div class=\"col-md-1 legend legend-orange\">FOR COMPLIANCE</div>\r\n    <div class=\"col-md-1\" style=\"background-color:lightpink;border-radius:8px;width:20%;\">Rejected</div>\r\n  </div> -->\r\n    <br>\r\n\r\n    <div class=\"mat-elevation-z8 fields\">\r\n      <table mat-table [dataSource]=\"assignedApplicationDataSource\" matSort>\r\n\r\n        <ng-container matColumnDef=\"referenceCode\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> REFERENCE CODE </th>\r\n          <td mat-cell *matCellDef=\"let element; let i = index\" [ngStyle]=\"{'background-color':\r\n        (((element.submissionType=='ORIGINAL'&&element.decisionStatus!='INCOMPLETE') || element.decisionStatus=='INCOMPLETE') ? 'lightblue' :\r\n        ((element.submissionType=='FOR COMPLIANCE'||element.submissionType=='COMPLIANCE') ? '#ebd79b' :\r\n        (element.submissionType=='REVISION' ? '#8fcf8f' : '' )))}\">\r\n            {{ element?.internalStatus=='S1_APPLICATION_REJECTED' ? element?.referenceCodeRejected :\r\n            element?.referenceCode | uppercase}}</td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"adTitle\">\r\n          <th mat-header-cell *matHeaderCellDef > AD TITLE </th>\r\n          <td mat-cell *matCellDef=\"let element\">\r\n            {{ element?.adTitle.replaceAll('_',' ') | uppercase }} </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"typeOfApplication\">\r\n          <th mat-header-cell *matHeaderCellDef > TYPE OF APPLICATION </th>\r\n          <td mat-cell *matCellDef=\"let element\">\r\n            {{element?.formType.replaceAll('_',' ') | uppercase}} - {{\r\n            element?.applicationType?.description | uppercase }}</td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"companyName\">\r\n          <th mat-header-cell *matHeaderCellDef > COMPANY NAME </th>\r\n          <td mat-cell *matCellDef=\"let element\">\r\n            {{ element?.company?.companyName | uppercase }} </td>\r\n        </ng-container>\r\n\r\n        <!-- <ng-container matColumnDef=\"membersAffiliation\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> MEMBER'S AFFILIATION </th>\r\n          <td mat-cell *matCellDef=\"let element\">\r\n            {{ element?.membersAffiliation?.description | uppercase }} </td>\r\n        </ng-container> -->\r\n\r\n        <ng-container matColumnDef=\"brand\">\r\n          <th mat-header-cell *matHeaderCellDef > BRAND </th>\r\n          <td mat-cell *matCellDef=\"let element\">\r\n            {{ element?.brand?.description | uppercase }} </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"product\">\r\n          <th mat-header-cell *matHeaderCellDef [hidden]=\"currentUser.userRole.name !== 'ROLE_AD_SPECIALIST'\" > PRODUCT </th>\r\n          <td mat-cell [hidden]=\"currentUser.userRole.name !== 'ROLE_AD_SPECIALIST'\" *matCellDef=\"let element\">\r\n            {{ element?.product?.description | uppercase }} </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"status\">\r\n          <th mat-header-cell *matHeaderCellDef > APPLICATION STATUS </th>\r\n          <td mat-cell *matCellDef=\"let element; let i = index\" class=\"applicantStatus\"\r\n            [ngStyle]=\"{'background-color': element?.internalStatus === 'S1_APPLICATION_REJECTED' ? 'lightpink' : '' }\">\r\n            {{\r\n            element?.externalStatus?.replaceAll('_',' ') | uppercase }}</td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"internalStatus\" *ngIf=\"currentUser.userRole.name !== 'ROLE_APPLICANT'\">\r\n          <th mat-header-cell *matHeaderCellDef > INTERNAL STATUS </th>\r\n          <td mat-cell *matCellDef=\"let element; let i = index\" class=\"applicantStatus\" [ngStyle]=\"{'pointer-events': ((i !== 0 && (currentUser.userRole.name !== 'ROLE_ADMIN' && currentUser.userRole.name !== 'ROLE_AD_SPECIALIST' && currentUser.userRole.name !== 'ROLE_SUPER_ADMIN' && currentUser.userRole.name !== 'ROLE_APPLICANT')) ? 'none' : ''),\r\n            'background-color': element?.internalStatus === 'S1_APPLICATION_REJECTED' ? 'lightpink' : '' }\" >\r\n            {{ element?.internalStatus?.replaceAll('_',' ') | uppercase }} </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"icon\">\r\n          <th mat-header-cell *matHeaderCellDef > </th>\r\n          <td mat-cell *matCellDef=\"let element\" class=\"icon\">\r\n            <button mat-raised-button class=\"button-red\" matTooltip=\"Re-assignment\" (click)=\"viewApplication(element)\"\r\n              *ngIf=\"\r\n          (currentUser?.userRole?.name=='ROLE_AD_SPECIALIST'&&element?.internalStatus=='S1_APPLICATION_VERIFIED_BY_AD_SPE')\r\n          ||(currentUser?.userRole?.name=='ROLE_AD_SPECIALIST'&&element?.internalStatus=='COMPLIANCE_DOCUMENT_VERIFIED_BY_AD_SPE')\r\n          ||(currentUser?.userRole?.name=='ROLE_AD_SPECIALIST'&&element?.internalStatus=='REVISION_VERIFIED_BY_AD_SPE')\r\n          ||(currentUser?.userRole?.name=='ROLE_SCREENER'&&element.internalStatus=='S1_APPLICATION_SCREENED')\">\r\n              <i class=\"material-icons color__white\">assignment_return</i><span> Re-assignment </span>\r\n            </button>\r\n\r\n          </td>\r\n        </ng-container>\r\n\r\n        <tr mat-header-row *matHeaderRowDef=\"assignedApplicationDisplayedColumns\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: assignedApplicationDisplayedColumns;\"></tr>\r\n      </table>\r\n      <div class=\"no-record\"\r\n        [hidden]=\"assignedApplicationDataSource && assignedApplicationDataSource?.data?.length > 0\">\r\n        No record found.\r\n      </div>\r\n      <!-- <mat-paginator [pageSizeOptions]=\"[10, 20, 30]\" showFirstLastButtons></mat-paginator> -->\r\n      <mat-paginator\r\n        [pageSize]=\"pageSize\"\r\n        [pageIndex]=\"pageNo\"\r\n        [length]=\"retrieveReassignLength\"\r\n        (page)=\"pageEvents($event)\"\r\n      ></mat-paginator>\r\n    </div>\r\n  </div>\r\n</ng-template>\r\n\r\n<!-- TEMPLATE \"FOR RELEASE\" APPLICATION LIST -->\r\n<ng-template #forReleaseApplicationList>\r\n  <div *ngIf=\"viewApplicationType === 'for-release' || viewApplicationType === 'released'\">\r\n    <!-- <b><b class=\"material-icons info-msg\">error_outline</b> This page allows you to resend decision form.</b> -->\r\n    <br>\r\n    <div class=\"row\" fxLayout fxLayoutAlign=\"center center\">\r\n      <mat-form-field class=\"col-md-8\" appearance=\"outline\">\r\n        <mat-label><i class=\"material-icons\">search</i> Search Applications</mat-label>\r\n        <input matInput type=\"text\" (keyup)=\"doFilterForReleaseApplicationList($event.target.value)\">\r\n      </mat-form-field>\r\n      <br>\r\n\r\n      <div class=\"mat-elevation-z8 fields\">\r\n        <table mat-table [dataSource]=\"forReleaseApplicationDataSource\" matSort>\r\n\r\n          <ng-container matColumnDef=\"referenceCode\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> REFERENCE CODE </th>\r\n            <td mat-cell *matCellDef=\"let element; let i = index\" [ngStyle]=\"{'background-color':\r\n          (((element.submissionType=='ORIGINAL'&&element.decisionStatus!='INCOMPLETE') || element.decisionStatus=='INCOMPLETE') ? 'lightblue' :\r\n          ((element.submissionType=='FOR COMPLIANCE'||element.submissionType=='COMPLIANCE') ? '#ebd79b' :\r\n          (element.submissionType=='REVISION' ? '#8fcf8f' : '' )))}\"\r\n          (click)=\"viewApplication(element)\">\r\n              {{ element?.internalStatus=='S1_APPLICATION_REJECTED' ? element?.referenceCodeRejected :\r\n              element?.referenceCode | uppercase}}</td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"adTitle\">\r\n            <th mat-header-cell *matHeaderCellDef > AD TITLE </th>\r\n            <td mat-cell *matCellDef=\"let element\" (click)=\"viewApplication(element)\">\r\n              {{ element?.adTitle.replaceAll('_',' ') | uppercase }} </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"typeOfApplication\">\r\n            <th mat-header-cell *matHeaderCellDef > TYPE OF APPLICATION </th>\r\n            <td mat-cell *matCellDef=\"let element\" (click)=\"viewApplication(element)\">\r\n              {{element?.formType.replaceAll('_',' ') | uppercase}} - {{\r\n              element?.applicationType?.description | uppercase }}</td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"companyName\">\r\n            <th mat-header-cell *matHeaderCellDef > COMPANY NAME </th>\r\n            <td mat-cell *matCellDef=\"let element\" (click)=\"viewApplication(element)\">\r\n              {{ element?.company?.companyName | uppercase }} </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"brand\">\r\n            <th mat-header-cell *matHeaderCellDef > BRAND </th>\r\n            <td mat-cell *matCellDef=\"let element\" (click)=\"viewApplication(element)\">\r\n              {{ element?.brand?.description | uppercase }} </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"product\">\r\n            <th mat-header-cell *matHeaderCellDef [hidden]=\"currentUser.userRole.name !== 'ROLE_AD_SPECIALIST'\" > PRODUCT </th>\r\n            <td mat-cell [hidden]=\"currentUser.userRole.name !== 'ROLE_AD_SPECIALIST'\" *matCellDef=\"let element\">\r\n              {{ element?.product?.description | uppercase }} </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"typeOfMedium\">\r\n            <th mat-header-cell *matHeaderCellDef > TYPE OF MEDIUM</th>\r\n            <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"viewApplication(element)\">\r\n              {{ element?.typeOfMedium | uppercase }}</td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"status\">\r\n            <th mat-header-cell *matHeaderCellDef > APPLICATION STATUS </th>\r\n            <td mat-cell *matCellDef=\"let element; let i = index\" class=\"applicantStatus\" (click)=\"viewApplication(element)\"\r\n              [ngStyle]=\"{'background-color': element?.internalStatus === 'S1_APPLICATION_REJECTED' ? 'lightpink' : '' }\">\r\n              {{ element?.externalStatus?.replaceAll('_',' ') | uppercase }}</td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"internalStatus\" *ngIf=\"currentUser.userRole.name !== 'ROLE_APPLICANT'\">\r\n            <th mat-header-cell *matHeaderCellDef > INTERNAL STATUS </th>\r\n            <td mat-cell *matCellDef=\"let element; let i = index\" class=\"applicantStatus\" [ngStyle]=\"{'pointer-events': ((i !== 0 && (currentUser.userRole.name !== 'ROLE_ADMIN' && currentUser.userRole.name !== 'ROLE_AD_SPECIALIST' && currentUser.userRole.name !== 'ROLE_SUPER_ADMIN' && currentUser.userRole.name !== 'ROLE_APPLICANT')) ? 'none' : ''),\r\n              'background-color': element?.internalStatus === 'S1_APPLICATION_REJECTED' ? 'lightpink' : '' }\"\r\n              (click)=\"viewApplication(element)\">\r\n              {{ element?.internalStatus?.replaceAll('_',' ') | uppercase }} </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"decisionStatus\" *ngIf=\"currentUser.userRole.name !== 'ROLE_APPLICANT'\">\r\n            <th mat-header-cell *matHeaderCellDef > DECISION STATUS </th>\r\n            <td mat-cell *matCellDef=\"let element; let i = index\" class=\"applicantStatus\" [ngStyle]=\"{'pointer-events': ((i !== 0 && (currentUser.userRole.name !== 'ROLE_ADMIN' && currentUser.userRole.name !== 'ROLE_AD_SPECIALIST' && currentUser.userRole.name !== 'ROLE_SUPER_ADMIN' && currentUser.userRole.name !== 'ROLE_APPLICANT')) ? 'none' : ''),\r\n              'background-color': element?.internalStatus === 'S1_APPLICATION_REJECTED' ? 'lightpink' : '' }\"\r\n              (click)=\"viewApplication(element)\">\r\n              {{ element?.decisionStatus?.replaceAll('_',' ') | uppercase }} </td>\r\n          </ng-container>\r\n\r\n\r\n          <tr mat-header-row *matHeaderRowDef=\"forReleaseApplicationDisplayedColumns\"></tr>\r\n          <tr mat-row *matRowDef=\"let row; columns: forReleaseApplicationDisplayedColumns;\"></tr>\r\n        </table>\r\n        <div class=\"no-record\"\r\n          [hidden]=\"forReleaseApplicationDataSource && forReleaseApplicationDataSource?.data?.length > 0 \">\r\n          No record found.\r\n        </div>\r\n        <!-- <mat-paginator [pageSizeOptions]=\"[10, 20, 30]\" showFirstLastButtons></mat-paginator> -->\r\n        <mat-paginator [pageSize]=\"pageSize\" [pageIndex]=\"pageNo\" [length]=\"forReleaseTotalItems\"\r\n          [pageSizeOptions]=\"pageSizeOptions\" (page)=\"pageEvents($event)\">\r\n        </mat-paginator>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n</ng-template>\r\n");

/***/ }),

/***/ "xZhW":
/*!************************************************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/modules/fragments/update-multiple-application/update-multiple-application.component.html ***!
  \************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<form>\r\n  <div class=\"container-fluid\">\r\n    <div class=\"row title\">\r\n      <div class=\"col-md-12\">\r\n\r\n        <table class=\"application-details\">\r\n          <tr>\r\n            <td *ngIf=\"multipleS1Application?.status\">\r\n              <span>\r\n                Status:\r\n              </span>\r\n            </td>\r\n            <td *ngIf=\"multipleS1Application?.status\">\r\n              <span>\r\n                <b>{{multipleS1Application?.status?.replaceAll('_',' ') | uppercase}}</b>\r\n              </span>\r\n            </td>\r\n            <!-- <td class=\"no-border\">\r\n                        <button class=\"button-right button-red\" mat-raised-button\r\n                        (click)=\"dialogRef.close()\">\r\n                          <i class=\"material-icons color__white\">list</i> VIEW APPLICATIONS\r\n                        </button>\r\n                      </td> -->\r\n          <tr>\r\n            <td class=\"no-border\">\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td *ngIf=\"multipleS1Application?.numberOfApplication\">\r\n              <span>\r\n                Number of Applications:\r\n              </span>\r\n            </td>\r\n            <td>\r\n              <span>\r\n                <b *ngIf=\"(multipleS1Application?.status === 'FOR_APPROVAL' || multipleS1Application?.submissionStatus==='PROCESSED' || multipleS1Application?.status === 'DISAPPROVED') &&\r\n                (currentUser.userRole.name==='ROLE_ADMIN' || currentUser.userRole.name === 'ROLE_SUPER_ADMIN' || currentUser.userRole.name === 'ROLE_APPLICANT')\">\r\n                  {{multipleS1Application?.submissionStatus==='PROCESSED' && multipleS1Application?.status !== 'DISAPPROVED' && multipleS1Application?.status !== 'FOR_APPROVAL'\r\n                  ? multipleS1Application.actualNumberOfApplicationForm\r\n                  : multipleS1Application?.numberOfApplication}}</b>\r\n\r\n                  <b *ngIf=\"multipleS1Application?.submissionStatus==='PROCESSED'\">\r\n                    {{currentUser.userRole.name !== 'ROLE_APPLICANT' && currentUser.userRole.name!=='ROLE_ADMIN' && currentUser.userRole.name !== 'ROLE_SUPER_ADMIN' ? multipleS1Application?.countVerifiedApplicationForm : ''}}\r\n                     of {{multipleS1Application?.actualNumberOfApplicationForm}}</b>\r\n\r\n                <b *ngIf=\"multipleS1Application?.status === 'APPROVED' && (currentUser.userRole.name==='ROLE_ADMIN' || currentUser.userRole.name === 'ROLE_SUPER_ADMIN' || currentUser.userRole.name === 'ROLE_APPLICANT') && multipleS1Application?.submissionStatus!=='PROCESSED'\">\r\n                  {{multipleS1ApplicationList.length}} of {{multipleS1Application?.numberOfApplication}}</b>\r\n              </span>\r\n            </td>\r\n            <td class=\"no-border\"\r\n              *ngIf=\"multipleS1Application?.status==='APPROVED'&&currentUser.userRole.name==='ROLE_APPLICANT'\"\r\n              [hidden]=\"multipleS1Application?.submissionStatus==='PROCESSED'\">\r\n              <button class=\"button-right button-red\" mat-raised-button\r\n              [disabled]=\"multipleS1Application?.actualNumberOfApplicationForm === multipleS1Application?.numberOfApplication\"\r\n                (click)=\"updateMultipleApplications(multipleS1Application?.id)\">\r\n                <i class=\"material-icons color__white\">add</i> ADD APPLICATION\r\n              </button>\r\n            </td>\r\n          </tr>\r\n        </table>\r\n\r\n        <hr>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"row\"><br></div>\r\n    <div class=\"row\">\r\n      <mat-form-field class=\"col-md-6\" appearance=\"outline\">\r\n        <mat-label>Form Type</mat-label>\r\n        <input matInput [value]=\"formType\" readonly>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field class=\"col-md-6\" appearance=\"outline\">\r\n        <mat-label>Application Type</mat-label>\r\n        <input matInput [value]=\"multipleS1Application?.applicationType?.description\" readonly>\r\n      </mat-form-field>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n      <mat-accordion class=\"headers-align\" multi>\r\n        <mat-expansion-panel [expanded]=\"\r\n                  ((currentUser?.userRole?.name=='ROLE_APPLICANT'&&s1Application?.internalStatus!='SAVED')\r\n                  ||(s1Application?.internalStatus==undefined))\r\n                  &&((multipleS1Application?.status !== 'APPROVED')\r\n                  ||(multipleS1Application?.status === 'APPROVED' && multipleS1ApplicationList.length==0))\" *ngIf=\"\r\n                  (currentUser?.userRole?.name=='ROLE_APPLICANT'&&s1Application?.internalStatus=='SAVED')\r\n                  ||(currentUser?.userRole?.name!='ROLE_APPLICANT')\r\n                  ||(s1Application?.internalStatus==undefined)\">\r\n\r\n          <mat-expansion-panel-header>\r\n            <mat-panel-title>\r\n              <i class=\"material-icons\">label_important</i> &nbsp;Initial Information\r\n            </mat-panel-title>\r\n          </mat-expansion-panel-header>\r\n          <br>\r\n\r\n          <app-client-information [multipleApplication]=\"multipleS1Application\" [s1Application]=\"s1Application\" [isAscUser]=\"isAscUser\"\r\n            [isDisableFieldOnUpdate]=\"isDisableFieldOnUpdate\" [company]=\"company\"></app-client-information>\r\n\r\n          <div class=\"row\">\r\n            <mat-form-field class=\"col-md-6\" appearance=\"outline\">\r\n              <mat-label>Ad Title</mat-label>\r\n              <input matInput [value]=\"multipleS1Application?.adTitle\" readonly>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field class=\"col-md-6\" appearance=\"outline\">\r\n              <mat-label>Tag Line</mat-label>\r\n              <input matInput [value]=\"multipleS1Application?.tagLine\" readonly>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div class=\"row\">\r\n            <mat-form-field appearance=\"outline\" class=\"col-md-6\">\r\n              <mat-label>Date of Submission</mat-label>\r\n                <input matInput placeholder=\"Date\" readonly\r\n                  [value]=\"multipleS1Application?.dateOfSubmission | date: 'MMMM d, y'\"\r\n                  name=\"dateOfSubmission\" *ngIf=\"multipleS1Application?.status !== 'DISAPPROVED'\"/>\r\n                <input matInput placeholder=\"Date\" readonly\r\n                  value=\"N/A - Request was disapproved\"\r\n                  name=\"dateOfSubmission\" *ngIf=\"multipleS1Application?.status === 'DISAPPROVED'\"/>\r\n            </mat-form-field>\r\n          </div>\r\n        </mat-expansion-panel>\r\n\r\n        <!-- FOR Admin Users only -->\r\n        <mat-expansion-panel *ngIf=\"currentUser?.userRole?.name === 'ROLE_ADMIN' || currentUser?.userRole?.name === 'ROLE_SUPER_ADMIN' \">\r\n          <mat-expansion-panel-header>\r\n            <mat-panel-title>\r\n              <i class=\"material-icons\">label_important</i> &nbsp;Presentor Information\r\n            </mat-panel-title>\r\n            <mat-panel-description>\r\n              Personal Details\r\n              <i class=\"material-icons\">person</i>\r\n            </mat-panel-description>\r\n          </mat-expansion-panel-header>\r\n\r\n          <br>\r\n          <div class=\"row\">\r\n            <div class=\"row\">\r\n              <mat-form-field class=\"col-md-7\" appearance=\"outline\">\r\n                <mat-label>Company Name</mat-label>\r\n                <input matInput [value]=\"multipleS1Application?.company?.companyName\" readonly>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"row\"><br></div>\r\n\r\n            <div class=\"row\">\r\n              <mat-form-field class=\"col-md-11\" appearance=\"outline\">\r\n                <mat-label>Address</mat-label>\r\n                <input matInput [value]=\"multipleS1Application?.company?.completeAddress\" readonly>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"row\"><br></div>\r\n\r\n            <div class=\"row\">\r\n              <mat-form-field class=\"col-md-8\" appearance=\"outline\" *ngIf=\"multipleS1Application.id!= null\">\r\n                <mat-label>Name of Applicant</mat-label>\r\n                <input matInput [value]=\"multipleS1Application?.applicationOwner?.firstName+' '+multipleS1Application?.applicationOwner?.lastName\" readonly>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"row\"><br></div>\r\n\r\n            <div class=\"row\">\r\n              <mat-form-field class=\"col-md-4\" appearance=\"outline\" *ngIf=\"multipleS1Application.id!= null\">\r\n                <mat-label>Mobile Number</mat-label>\r\n                <input matInput [value]=\"multipleS1Application?.applicationOwner?.mobileNumber\" readonly>\r\n              </mat-form-field>\r\n              <mat-form-field class=\"col-md-3\" appearance=\"outline\" *ngIf=\"multipleS1Application.id!= null\">\r\n                <mat-label>Telephone Number</mat-label>\r\n                <input matInput [value]=\"multipleS1Application?.company?.companyTelephoneNo\" readonly>\r\n              </mat-form-field>\r\n              <mat-form-field class=\"col-md-4\" appearance=\"outline\" *ngIf=\"multipleS1Application.id!= null\">\r\n                <mat-label>Email Address</mat-label>\r\n                <input matInput [value]=\"multipleS1Application?.applicationOwner?.username\" readonly>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n          </div>\r\n        </mat-expansion-panel>\r\n\r\n      </mat-accordion>\r\n      <!-- </form> -->\r\n\r\n      <div class=\"row\"><br></div>\r\n      <!-- ADD TABLE HERE -->\r\n      <div class=\"mat-elevation-z8 fields\" *ngIf=\"multipleS1Application?.status==='APPROVED'\">\r\n        <table mat-table [dataSource]=\"dataSource||multipleS1ApplicationList\" matSort>\r\n\r\n          <ng-container matColumnDef=\"referenceCode\">\r\n            <th mat-header-cell class=\"center-table-text\" *matHeaderCellDef mat-sort-header> REFERENCE CODE </th>\r\n            <td mat-cell *matCellDef=\"let element\" (click)=\"viewApplication(element)\">\r\n              {{ element?.referenceCode ? element?.referenceCode : '-' | uppercase}} </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"typeOfMediumDisplay\">\r\n            <th mat-header-cell class=\"center-table-text\" *matHeaderCellDef> MEDIUM (Length) </th>\r\n            <td mat-cell *matCellDef=\"let element\" (click)=\"viewApplication(element)\"> {{ element?.typeOfMediumDisplay }} </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"mainAttachmentReference\">\r\n            <th mat-header-cell class=\"center-table-text\" *matHeaderCellDef> HAS MAIN DOC </th>\r\n            <td mat-cell *matCellDef=\"let element\" (click)=\"viewApplication(element)\">\r\n              <i *ngIf=\"element?.mainAttachmentReference\" class=\"material-icons\">check_circle</i>\r\n              <i *ngIf=\"!element?.mainAttachmentReference\" class=\"material-icons cancel\">cancel</i>\r\n            </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"supportingAttachmentReference\">\r\n            <th mat-header-cell class=\"center-table-text\" *matHeaderCellDef> HAS SUPPORT DOC </th>\r\n            <td mat-cell *matCellDef=\"let element\" (click)=\"viewApplication(element)\">\r\n              <i *ngIf=\"element?.supportingAttachmentReference\" class=\"material-icons\">check_circle</i>\r\n              <i *ngIf=\"!element?.supportingAttachmentReference && !element?.hasNoSupportingDocs\" class=\"material-icons cancel\">cancel</i>\r\n              <i *ngIf=\"element?.hasNoSupportingDocs\" class=\"material-icons\">cancel</i>\r\n            </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"brand\">\r\n            <th mat-header-cell class=\"center-table-text\" *matHeaderCellDef> BRAND </th>\r\n            <td mat-cell *matCellDef=\"let element\" (click)=\"viewApplication(element)\">\r\n              {{ element?.brand?.description | uppercase }}\r\n            </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"status\">\r\n            <th mat-header-cell class=\"center-table-text\" *matHeaderCellDef> APPLICATION STATUS </th>\r\n            <td mat-cell *matCellDef=\"let element\" (click)=\"viewApplication(element)\"\r\n            [ngStyle]=\"{'background-color': element?.internalStatus === 'S1_APPLICATION_REJECTED' ? 'lightpink' : '' }\">\r\n              {{ element?.externalStatus?.replaceAll('_',' ') | uppercase }}\r\n          </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"ASCstatus\">\r\n            <th mat-header-cell class=\"center-table-text\" *matHeaderCellDef> INTERNAL STATUS </th>\r\n            <td mat-cell *matCellDef=\"let element\" (click)=\"viewApplication(element)\"\r\n            [ngStyle]=\"{'background-color': element?.internalStatus === 'S1_APPLICATION_REJECTED' ? 'lightpink' : '' }\"> {{\r\n              element?.internalStatus?.replaceAll('_',' ') | uppercase }}</td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"decisionStatus\">\r\n            <th mat-header-cell class=\"center-table-text\" *matHeaderCellDef> DECISION STATUS </th>\r\n            <td mat-cell *matCellDef=\"let element\" (click)=\"viewApplication(element)\"\r\n            [ngStyle]=\"{'background-color': element?.internalStatus === 'S1_APPLICATION_REJECTED' ? 'lightpink' : '' }\">\r\n              {{ element?.decisionStatus ? element?.decisionStatus : '-' | uppercase }}\r\n          </td>\r\n          </ng-container>\r\n\r\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n          <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n        </table>\r\n        <div class=\"no-record\" [hidden]=\"dataSource && dataSource?.data?.length > 0\"\r\n          *ngIf=\"multipleS1ApplicationList.length==0\">\r\n          No results found.\r\n        </div>\r\n        <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons></mat-paginator>\r\n        <div class=\"row\"><br></div>\r\n      </div>\r\n      <hr>\r\n\r\n      <div class=\"row\"><br>\r\n      <b *ngIf=\"isDisabledSubmitButton && currentUser.userRole.name==='ROLE_APPLICANT'\"><b class=\"material-icons\">error_outline</b> {{warningNote}}</b>\r\n      </div>\r\n\r\n      <div class=\"row\"><br></div>\r\n      <div class=\"no-border\" [hidden]=\"multipleS1Application?.submissionStatus==='PROCESSED'\"\r\n      *ngIf=\"multipleS1ApplicationList.length>0 && currentUser.userRole.name==='ROLE_APPLICANT' &&\r\n            multipleS1Application?.status !== 'FOR_APPROVAL' && isAllApplicationsHasMainDoc\">\r\n        <button class=\"button-right button-red\" mat-raised-button [disabled]=\"isDisabledSubmitButton\"\r\n          (click)=\"submitMultiple()\">\r\n          <i class=\"material-icons color__white\">send</i> SUBMIT\r\n          <br>\r\n        </button>\r\n      </div>\r\n      <br>\r\n      <!-- //////////////////////////////////////// ACTION BUTTONS //////////////////////////////////////////////////////////// -->\r\n      <div class=\"row\" *ngIf=\"multipleS1Application?.status === 'FOR_APPROVAL' && isAscUser && !multipleS1Application?.assignedReviewer\">\r\n        <div mat-dialog-actions>\r\n          <div class=\"dialog-button-content\" align=\"end\">\r\n            <button class=\"confirm\" (click)=\"onApproveOrDisapprove()\"><i\r\n                class=\"material-icons\">thumb_up_alt</i>Approve</button>\r\n            <button class=\"warn\" (click)=\"onApproveOrDisapprove('DISAPPROVED')\"><i\r\n                class=\"material-icons\">thumb_down_alt</i>Disapprove</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    <!-- //////////////////////////////////////// ASC USERS //////////////////////////////////////////////////////////// -->\r\n      <!-- <div class=\"no-border\"\r\n        *ngIf=\"currentUser.userRole.name==='ROLE_ENCODER'&&canForwardMultipleApp && !multipleS1Application?.assignedReviewer\">\r\n        <button class=\"button-right button-red\" mat-raised-button (click)=\"forwardMultipleAppsTo('encoder')\">\r\n          <i class=\"material-icons color__white\">verified</i> FORWARD TO AD SPECIALIST\r\n        </button>\r\n      </div>\r\n\r\n      <div class=\"no-border\"\r\n        *ngIf=\"currentUser.userRole.name==='ROLE_AD_SPECIALIST'&&canForwardMultipleApp && !multipleS1Application?.assignedReviewer\">\r\n        <button class=\"button-right button-red\" mat-raised-button (click)=\"forwardMultipleAppsTo('ad-specialist')\">\r\n          <i class=\"material-icons color__white\">verified</i> FORWARD TO SCREENER\r\n        </button>\r\n      </div>\r\n\r\n      <div class=\"no-border\"\r\n        *ngIf=\"currentUser.userRole.name==='ROLE_SCREENER'&&canForwardMultipleApp && !multipleS1Application?.assignedReviewer\">\r\n        <button class=\"button-right button-red\" mat-raised-button (click)=\"forwardMultipleAppsTo('screener')\">\r\n          <i class=\"material-icons color__white\">fact_check</i> SCREENED\r\n        </button>\r\n      </div> -->\r\n\r\n      <!-- <div class=\"no-border\"\r\n        *ngIf=\"currentUser.userRole.name==='ROLE_REVIEWER'&&canForwardMultipleApp\">\r\n        <button class=\"button-right button-red\" mat-raised-button (click)=\"forwardMultipleAppsTo('reviewer')\">\r\n          <i class=\"material-icons color__white\">assignment_turned_in</i> REVIEWED\r\n        </button>\r\n      </div> -->\r\n\r\n      <br>\r\n    </div>\r\n  </div>\r\n</form>\r\n");

/***/ }),

/***/ "xat4":
/*!**************************************************!*\
  !*** ./src/app/core/models/copy-claims.model.ts ***!
  \**************************************************/
/*! exports provided: CopyClaims */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CopyClaims", function() { return CopyClaims; });
class CopyClaims {
}


/***/ }),

/***/ "xetz":
/*!***************************************************************************************************!*\
  !*** ./src/app/modules/pages/applications/material-information/material-information.component.ts ***!
  \***************************************************************************************************/
/*! exports provided: MaterialInformationComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MaterialInformationComponent", function() { return MaterialInformationComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "mrSG");
/* harmony import */ var _raw_loader_material_information_component_html__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! raw-loader!./material-information.component.html */ "6YtE");
/* harmony import */ var _material_information_component_scss__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./material-information.component.scss */ "eWDB");
/* harmony import */ var _core_models_media_models_multimedia_moving_const__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./../../../../core/models/media-models/multimedia-moving.const */ "qfXM");
/* harmony import */ var app_core_services_common_services_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! app/core/services/common-services.service */ "Iws0");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var _services__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @services */ "dJ3e");
/* harmony import */ var _shared__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @shared */ "M0ag");
/* harmony import */ var _angular_material_table__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/material/table */ "+0xr");
/* harmony import */ var _models__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @models */ "sKXY");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular/forms */ "3Pt+");
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/platform-browser */ "jhN1");
/* harmony import */ var _angular_material_sort__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @angular/material/sort */ "Dh3D");
/* harmony import */ var _angular_material_paginator__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @angular/material/paginator */ "M9IT");
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! sweetalert2 */ "PSD3");
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(sweetalert2__WEBPACK_IMPORTED_MODULE_14__);
/* harmony import */ var ngx_spinner__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ngx-spinner */ "JqCM");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! rxjs */ "qCKp");
/* harmony import */ var app_core_models_media_models_mulstimedia_static_const__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! app/core/models/media-models/mulstimedia-static.const */ "VE5Z");


















let MaterialInformationComponent = class MaterialInformationComponent {
    constructor(formBuilder, apiService, sweetAlertService, sanitizer, dataStorage, fileStorageService, cd, validateFieldService, spinner, util) {
        this.formBuilder = formBuilder;
        this.apiService = apiService;
        this.sweetAlertService = sweetAlertService;
        this.sanitizer = sanitizer;
        this.dataStorage = dataStorage;
        this.fileStorageService = fileStorageService;
        this.cd = cd;
        this.validateFieldService = validateFieldService;
        this.spinner = spinner;
        this.util = util;
        // @ViewChild(AttachmentDocumentComponent, { static: false }) materialAttachmentDocument: AttachmentDocumentComponent;
        this.checkSingleMediaChangesFunction = new _angular_core__WEBPACK_IMPORTED_MODULE_5__["EventEmitter"]();
        this.checkMultimediaChangesFunction = new _angular_core__WEBPACK_IMPORTED_MODULE_5__["EventEmitter"]();
        // @ViewChild('mainFile')
        // myMainFile: ElementRef;
        // @ViewChild('mainInput')
        // myMainInput: ElementRef;
        // @ViewChild('supportiveFile')
        // mySupportiveFile: ElementRef;
        // @ViewChild('revisionLetterFile')
        // myRevisionLetterFile: ElementRef;
        this.s1Application = new _models__WEBPACK_IMPORTED_MODULE_9__["S1Application"]();
        this.s2Application = new _models__WEBPACK_IMPORTED_MODULE_9__["S2Application"]();
        this.originalAttachmentDocuments = [];
        this.revisionAttachmentDocuments = [];
        this.complianceAttachmentDocuments = [];
        this.newMultimediaList = [];
        this.typeOfMediumList = []; // single and multimedia
        this.supportiveDocumentList = [];
        this.applicationSingleMedia = new _models__WEBPACK_IMPORTED_MODULE_9__["ApplicationSingleMedia"]();
        this.isAscUser = false;
        this.isDisableFieldOnUpdate = false;
        this.todayDate = new Date();
        this.executionList = [];
        this.dialectList = [];
        this.newSupportiveDocumentList = [];
        this.typeOfDocumentList = [];
        this.specialApplicationType = [..._shared__WEBPACK_IMPORTED_MODULE_7__["SPECIAL_APPLICATION"]];
        this.setMultimediaList = [];
        this.selectedMultimediaList = [];
        this.selectedMultimediaStringList = [];
        this.toDeleteMultimediaList = [];
        // singleMedia = new SingleMedia();
        this.typeOfMedium = new _models__WEBPACK_IMPORTED_MODULE_9__["TypeOfMedium"]();
        this.typeOfDocument = new _models__WEBPACK_IMPORTED_MODULE_9__["TypeOfDocument"]();
        // attachmentDocument = new AttachmentDocument();
        this.supportingDocument = new _models__WEBPACK_IMPORTED_MODULE_9__["SupportingDocument"]();
        this.applicationMultimedia = new _models__WEBPACK_IMPORTED_MODULE_9__["ApplicationMultimedia"]();
        this.applicationRequest = new _models__WEBPACK_IMPORTED_MODULE_9__["ApplicationRequest"]();
        this.newApplicationSingleMedia = new _models__WEBPACK_IMPORTED_MODULE_9__["ApplicationSingleMedia"]();
        this.selectMultimedia = false;
        // showMainDocumentUploadButton = false;
        // showMainDocumentViewButton = false;
        // showMainDocumentDownloadButton = false;
        // showSupportDocumentFrame = false;
        // showMainDocumentRemoveButton = false;
        // showRevisionLetterViewButton = false;
        this.previewMainDocument = false;
        this.disableSubmitButtonByMedia = false;
        this.showSupportiveDocumentUploadButton = false;
        this.showSupportiveDocumentViewButton = false;
        this.showSupportiveDocumentDownloadButton = false;
        this.showRevisionLetterDownloadButton = false;
        this.previewSupportiveDocument = false;
        this.showRevisionLetterUploadButton = false;
        this.isDigitalStatic = false;
        this.isUpdate = false;
        this.attachmentType = _shared__WEBPACK_IMPORTED_MODULE_7__["ATTACHMENT_TYPE"].MAIN;
        this.progress = { percentage: 0 };
        this.mediaType = '';
        this.labelMainDocument = 'MAIN DOCUMENT';
        this.savedTypeOfMedium = '';
        this.ngUnsubscribe = new rxjs__WEBPACK_IMPORTED_MODULE_16__["Subject"]();
        this.selectedTypeOfMedium = 'SINGLE MEDIA';
        this.multimediaDTO = {};
        this.multimediaMovingDTO = new _models__WEBPACK_IMPORTED_MODULE_9__["ApplicationMultimediaMovingDTO"]();
        this.multimediaStaticDTO = new _models__WEBPACK_IMPORTED_MODULE_9__["ApplicationMultimediaStaticDTO"]();
    }
    ngOnInit() {
        this.currentUser = this.dataStorage.getUserAccount();
        if (this.currentUser.userRole.name === _shared__WEBPACK_IMPORTED_MODULE_7__["USER_ROLES"].ROLE_AD_SPECIALIST) {
            this.displayedColumns = ['typeOfDocument', 'input', 'variant', 'expiresOn', 'basedOn', 'remarks', 'action'];
        }
        else {
            this.displayedColumns = ['typeOfDocument', 'input', 'variant', 'expiresOn', 'basedOn', 'remarks'];
        }
        this.setFormValidator();
        this.getTypeOfDocumentList();
        if (this.dataStorage.getSpecialS1Application()) {
            this.applicationRequest = this.dataStorage.getSpecialS1Application();
        }
        this.emitSingleMediaChanges();
        this.initializeMultimediaMovingObj();
        this.initializeMultimediaStaticObj();
    }
    ngOnChanges(changes) {
        var _a;
        if (changes) {
            if (this.multimediaDTO) {
                if (this.s1Application.refTypeOfMedium === _shared__WEBPACK_IMPORTED_MODULE_7__["TYPE_OF_MEDIUM"].MULTIMEDIA_MOVING)
                    this.multimediaMovingDTO = this.multimediaDTO;
                if (this.s1Application.refTypeOfMedium === _shared__WEBPACK_IMPORTED_MODULE_7__["TYPE_OF_MEDIUM"].MULTIMEDIA_STATIC)
                    this.multimediaStaticDTO = this.multimediaDTO;
            }
        }
        if (this.s1Application.refTypeOfMedium === undefined) {
            this.s1Application.refTypeOfMedium = _shared__WEBPACK_IMPORTED_MODULE_7__["TYPE_OF_MEDIUM"].SINGLE_MEDIA;
            this.getTypeOfMedium(_shared__WEBPACK_IMPORTED_MODULE_7__["TYPE_OF_MEDIUM"].SINGLE_MEDIA);
        }
        else if (!this.applicationSingleMedia || ((_a = this.s1Application.refTypeOfMedium) === null || _a === void 0 ? void 0 : _a.includes('MULTIMEDIA'))) {
            this.getTypeOfMedium(this.s1Application.refTypeOfMedium);
        }
        else if (this.applicationSingleMedia) {
            if (this.applicationSingleMedia.mediumExecution) {
                this.typeOfMedium = this.applicationSingleMedia.mediumExecution.typeOfMedium;
                if (this.typeOfMedium.id) {
                    this.getExecutionDialectList();
                }
            }
        }
    }
    ngAfterViewChecked() {
        this.cd.detectChanges();
    }
    setFormValidator() {
        this.materialInformationForm = this.formBuilder.group({
            adTitle: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_10__["Validators"].required],
            referenceCode: [''],
            previousRefCode: [''],
            tagLine: [''],
            refTypeOfMedium: [''],
            appFormReference: [''],
            // this.attachmentDocumentForm = this.formBuilder.group({
            attachmentReference: [''],
            hasNoSupportingDocs: [''],
            typeOfDocument: [''],
            basedOn: [''],
            variant: [''],
            dateOfLaunch: [''],
            expiresOn: [''],
            remarks: [''],
            input: [''],
            typeOfMedium: [''],
            mediumExecution: [''],
            language: [''],
            dialect: [''],
            others: [''],
            sizeLength: ['0'],
            width: ['0'],
            multimediaLength: [''],
            multimediaSize: [''],
            applicationSingleMedia: [''],
            applicationMultimediaStatic: [''],
            applicationMultimediaMoving: [''],
        });
    }
    getTypeOfMedium(type) {
        this.typeOfMediumList = [];
        let endpoint = '';
        if (type === _shared__WEBPACK_IMPORTED_MODULE_7__["TYPE_OF_MEDIUM"].SINGLE_MEDIA) {
            this.applicationSingleMedia = new _models__WEBPACK_IMPORTED_MODULE_9__["ApplicationSingleMedia"]();
            endpoint = _shared__WEBPACK_IMPORTED_MODULE_7__["ENDPOINTS"].typeOfMediumSingleMedia;
            this.selectMultimedia = false;
            this.s1Application.refTypeOfMedium = _shared__WEBPACK_IMPORTED_MODULE_7__["TYPE_OF_MEDIUM"].SINGLE_MEDIA;
            this.selectedTypeOfMedium = _shared__WEBPACK_IMPORTED_MODULE_7__["TYPE_OF_MEDIUM"].SINGLE_MEDIA;
        }
        else if (type === _shared__WEBPACK_IMPORTED_MODULE_7__["TYPE_OF_MEDIUM"].MULTIMEDIA_MOVING) {
            endpoint = _shared__WEBPACK_IMPORTED_MODULE_7__["ENDPOINTS"].typeOfMediumMultiMediaMoving;
            this.selectMultimedia = true;
            this.s1Application.refTypeOfMedium = _shared__WEBPACK_IMPORTED_MODULE_7__["TYPE_OF_MEDIUM"].MULTIMEDIA_MOVING;
            this.initializeMultimediaStaticObj();
            this.selectedTypeOfMedium = _shared__WEBPACK_IMPORTED_MODULE_7__["TYPE_OF_MEDIUM"].MULTIMEDIA;
        }
        else {
            endpoint = _shared__WEBPACK_IMPORTED_MODULE_7__["ENDPOINTS"].typeOfMediumMultiMediaStatic;
            this.selectMultimedia = true;
            this.s1Application.refTypeOfMedium = _shared__WEBPACK_IMPORTED_MODULE_7__["TYPE_OF_MEDIUM"].MULTIMEDIA_STATIC;
            this.initializeMultimediaMovingObj();
            this.selectedTypeOfMedium = _shared__WEBPACK_IMPORTED_MODULE_7__["TYPE_OF_MEDIUM"].MULTIMEDIA;
        }
        // console.log('Selected: ', this.selectedTypeOfMedium)
        this.apiService.findAll(endpoint).subscribe((res) => {
            this.typeOfMediumList = res.responseData.data;
            if (type === _shared__WEBPACK_IMPORTED_MODULE_7__["TYPE_OF_MEDIUM"].SINGLE_MEDIA) {
                this.typeOfMedium = this.typeOfMediumList.filter(medium => medium.description === this.savedTypeOfMedium)[0];
            }
            // if (this.selectedMultimediaList.length > 0) {
            //   this.selectedMultimediaStringList = this.selectedMultimediaList.map(mappedList => mappedList?.typeOfMedium?.description);
            //   this.emitMultimediaChanges();
            // }
            // this.typeOfMediumList = this.typeOfMediumList.map((medium, index) => {
            //   const sampleList = this.selectedMultimediaList.filter(filteredMedium => filteredMedium.typeOfMedium.id === medium.id);
            //   if (sampleList.length) {
            //     medium.sizeLength = sampleList[0].multimediaSizeLength;
            //   } else {
            //     medium.sizeLength = null;
            //   }
            //   return medium;
            // });
        }, (err) => {
        });
    }
    resetValues() {
        this.applicationSingleMedia.dialect = null;
        this.applicationSingleMedia.language = null;
        this.applicationSingleMedia.others = '';
        this.applicationSingleMedia.sizeLength = '0';
        this.applicationSingleMedia.amount = 0;
        this.applicationSingleMedia.mediumExecution = null;
        this.applicationSingleMedia.width = '0';
    }
    setSingleMedia(typeofMedium) {
        this.resetValues();
        this.typeOfMedium = typeofMedium;
        this.labelMainDocument = this.typeOfMedium.typeOfMainDocument.typeOfMainDocument;
        this.getExecutionDialectList();
        this.emitSingleMediaChanges();
    }
    emitSingleMediaChanges() {
        var _a, _b, _c, _d;
        if ((((_a = this.typeOfMedium) === null || _a === void 0 ? void 0 : _a.executionEnable) && !this.applicationSingleMedia.mediumExecution) ||
            (((_b = this.typeOfMedium) === null || _b === void 0 ? void 0 : _b.lengthEnable) && !this.applicationSingleMedia.sizeLength) ||
            (((_c = this.typeOfMedium) === null || _c === void 0 ? void 0 : _c.sizeLengthEnable) && !this.applicationSingleMedia.sizeLength) ||
            ((!((_d = this.typeOfMedium) === null || _d === void 0 ? void 0 : _d.id) && !this.applicationSingleMedia.id) && !this.savedTypeOfMedium)) {
            this.disableSubmitButtonByMedia = true;
        }
        else {
            this.disableSubmitButtonByMedia = false;
        }
        this.checkSingleMediaChangesFunction.emit();
    }
    // addMultimedia(obj: any, evt) {
    //   if (evt.target.value) {
    //     obj.sizeLength = evt.target.value;
    //     const existingValue = this.newMultimediaList.filter(filteredList => filteredList === obj);
    //     if (existingValue.length) {
    //       existingValue[0] = obj;
    //     } else {
    //       this.newMultimediaList.push(obj);
    //       this.selectedMultimediaList.push(obj);
    //     }
    //     if (obj?.id) {
    //       this.toDeleteMultimediaList = this.toDeleteMultimediaList.filter(filtered => filtered.id !== obj?.id);
    //     }
    //   } else {
    //     const deleteExisting = this.selectedMultimediaList.filter(filteredMedia => filteredMedia?.typeOfMedium?.id === obj?.id);
    //     if (deleteExisting.length) {
    //       this.toDeleteMultimediaList.push(deleteExisting[0]);
    //     }
    //     this.newMultimediaList = this.newMultimediaList.filter(filteredMultimedia => filteredMultimedia.id !== obj.id);
    //     this.selectedMultimediaList = this.selectedMultimediaList.filter(filteredMultimedia => filteredMultimedia.id !== obj.id);
    //   }
    //   const toDeleteMultimediaSet = this.toDeleteMultimediaList.filter((item, i, ar) => ar.indexOf(item) === i);
    //   this.toDeleteMultimediaList = toDeleteMultimediaSet;
    //   this.emitMultimediaChanges();
    // }
    emitMultimediaChanges() {
        this.disableSubmitButtonByMedia = false;
        let data = {
            type: this.s1Application.refTypeOfMedium,
            data: this.s1Application.refTypeOfMedium === _shared__WEBPACK_IMPORTED_MODULE_7__["TYPE_OF_MEDIUM"].MULTIMEDIA_MOVING ? this.multimediaMovingDTO : this.multimediaStaticDTO
        };
        this.checkMultimediaChangesFunction.emit(data);
    }
    getTypeOfDocumentList() {
        this.apiService.findAll(_shared__WEBPACK_IMPORTED_MODULE_7__["ENDPOINTS"].typeOfDocument).subscribe((res) => {
            this.typeOfDocumentList = res.responseData.data;
        }, (err) => {
        });
    }
    setTypeOfDocument(type) {
        this.typeOfDocument = type;
    }
    compareSingleMedia(value, selected) {
        if (value && selected) {
            return value.description === selected.description;
        }
    }
    compareMediumExecution(value, selected) {
        if (value && selected) {
            return value.typeOfExecution.typeOfExecution === selected.typeOfExecution.typeOfExecution;
        }
    }
    compareDialect(value, selected) {
        if (value && selected) {
            return value.dialect === selected.dialect;
        }
    }
    getExecutionDialectList() {
        if (this.typeOfMedium.id) {
            this.apiService.findAll(`${_shared__WEBPACK_IMPORTED_MODULE_7__["ENDPOINTS"].typeOfExecutionsByMedium}${this.typeOfMedium.id}`).subscribe((res) => {
                if (this.typeOfMedium.executionEnable) {
                    this.executionList = res.responseData.data;
                }
                else {
                    if (res.responseData.data.length === 0) {
                        this.sweetAlertService.customErrorMessage('The selected type of medium has no execution.');
                    }
                    else {
                        this.applicationSingleMedia.mediumExecution = res.responseData.data[0];
                    }
                }
                this.emitSingleMediaChanges();
            }, (err) => {
            });
        }
        this.apiService.findAll(_shared__WEBPACK_IMPORTED_MODULE_7__["ENDPOINTS"].dialects).subscribe((res) => {
            this.dialectList = res.responseData.data;
        }, (err) => {
        });
    }
    removeTypeOfDocument(index) {
        const keepValues = [];
        sweetalert2__WEBPACK_IMPORTED_MODULE_14___default.a.fire({
            text: 'Are you sure you want to delete this TYPE OF DOCUMENT?',
            icon: 'question',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Confirm'
        }).then((result) => {
            if (result.value) {
                this.supportiveDocumentList.forEach((element, key) => {
                    if (key !== index) {
                        keepValues.push(element);
                    }
                });
                this.supportiveDocumentList = keepValues;
                this.dataSource.data = keepValues;
            }
        });
    }
    addSupportiveDocument(supportingDocument) {
        const checkIfDocumentAlreadyExist = this.supportiveDocumentList.filter(data => data.typeOfDocument.id === supportingDocument.typeOfDocument.id);
        // if (checkIfDocumentAlreadyExist.length === 1) {
        //   this.sweetAlertService.customErrorMessage('Type of Document that is being added is already on the list.', 5);
        // } else {
        this.newSupportiveDocumentList.push(supportingDocument);
        this.supportiveDocumentList.push(supportingDocument);
        this.dataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_8__["MatTableDataSource"](this.supportiveDocumentList);
        this.dataSource.paginator = this.paginator;
        this.dataSource.sort = this.sort;
        // }
        this.supportingDocument = new _models__WEBPACK_IMPORTED_MODULE_9__["SupportingDocument"]();
        this.typeOfDocument = new _models__WEBPACK_IMPORTED_MODULE_9__["TypeOfDocument"]();
    }
    getTypeOfDocument(res, index) {
        this.isUpdate = true;
        this.apiService.findById(_shared__WEBPACK_IMPORTED_MODULE_7__["ENDPOINTS"].typeOfDocument, res.typeOfDocument.id).subscribe((data) => {
            if (data) {
                this.typeOfDocument = data.responseData.data;
            }
        });
        this.supportingDocument.typeOfDocument = res.typeOfDocument;
        if (res.typeOfDocument.description === 'DOH-FDA PERMIT') {
            this.typeOfDocument.expiresOnEnable = true;
            this.supportingDocument.expiresOn = res.expiresOn;
            this.supportingDocumentIndex = index;
        }
        else if (res.typeOfDocument.description === 'NMIS') {
            this.typeOfDocument.expiresOnEnable = false;
            this.supportingDocument.expiresOn = null;
            this.supportingDocumentIndex = index;
        }
        else if (res.typeOfDocument.description === 'DOLE PERMIT') {
            this.typeOfDocument.expiresOnEnable = false;
            this.supportingDocument.expiresOn = null;
            this.supportingDocumentIndex = index;
        }
    }
    modifyTypeOfDocument(res, id) {
        const checkIfDocumentAlreadyExist = this.supportiveDocumentList.filter(data => data.typeOfDocument.id === res.typeOfDocument.id);
        //  if(checkIfDocumentAlreadyExist.length === 1){
        //   console.log("ALREADY EXIST");
        //  }else{
        //   console.log("SUCCESSFULLY UPDATE");
        //   this.supportiveDocumentList.forEach((element, key) => {
        //     if (key === id) {
        //       this.supportiveDocumentList[key] = res;
        //     }
        //   });
        //  }
        // console.log("count", checkIfDocumentAlreadyExist);
        // if (checkIfDocumentAlreadyExist.length === 1) {
        //   this.isUpdate = false;
        //   this.supportiveDocumentList.forEach((element, key) => {
        //     if (key === id) {
        //       this.supportiveDocumentList.splice(key);
        //     }
        //   });
        // } else {
        //   this.sweetAlertService.customErrorMessage(`Type of Document already exist.`);
        // }
        this.isUpdate = false;
        this.dataSource.data = this.supportiveDocumentList;
        this.supportingDocument = new _models__WEBPACK_IMPORTED_MODULE_9__["SupportingDocument"]();
        this.supportingDocumentIndex = '';
    }
    initializeMultimediaMovingObj() {
        this.multimediaMovingDTO = new _models__WEBPACK_IMPORTED_MODULE_9__["ApplicationMultimediaMovingDTO"]();
        let multimediaMovingList = new _core_models_media_models_multimedia_moving_const__WEBPACK_IMPORTED_MODULE_3__["MultiMediaMovingConstant"]().data;
        this.multimediaMovingDTO = {
            applicationMultimediaMovingList: multimediaMovingList,
            appFormReference: '',
            amount: 0,
            id: 0,
            sizeLength: 0,
            typeOfMedium: null,
        };
    }
    initializeMultimediaStaticObj() {
        this.multimediaStaticDTO = new _models__WEBPACK_IMPORTED_MODULE_9__["ApplicationMultimediaStaticDTO"]();
        let multimediaStaticList = new app_core_models_media_models_mulstimedia_static_const__WEBPACK_IMPORTED_MODULE_17__["MultiMediaStaticConst"]().data;
        this.multimediaStaticDTO = {
            applicationMultimediaStaticList: multimediaStaticList,
            appFormReference: '',
            amount: 0,
            id: 0,
            typeOfMedium: null,
        };
    }
    isNumber(number) {
        if (number)
            return this.validateFieldService.numbersOnly(number);
    }
    ngOnDestroy() {
        this.ngUnsubscribe.next();
        this.ngUnsubscribe.complete();
    }
};
MaterialInformationComponent.ctorParameters = () => [
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_10__["FormBuilder"] },
    { type: _services__WEBPACK_IMPORTED_MODULE_6__["ApiService"] },
    { type: _services__WEBPACK_IMPORTED_MODULE_6__["SweetAlertService"] },
    { type: _angular_platform_browser__WEBPACK_IMPORTED_MODULE_11__["DomSanitizer"] },
    { type: _services__WEBPACK_IMPORTED_MODULE_6__["DataStorageService"] },
    { type: _services__WEBPACK_IMPORTED_MODULE_6__["FileStorageService"] },
    { type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["ChangeDetectorRef"] },
    { type: _services__WEBPACK_IMPORTED_MODULE_6__["ValidateFieldService"] },
    { type: ngx_spinner__WEBPACK_IMPORTED_MODULE_15__["NgxSpinnerService"] },
    { type: app_core_services_common_services_service__WEBPACK_IMPORTED_MODULE_4__["CommonServices"] }
];
MaterialInformationComponent.propDecorators = {
    paginator: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["ViewChild"], args: [_angular_material_paginator__WEBPACK_IMPORTED_MODULE_13__["MatPaginator"], { static: false },] }],
    sort: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["ViewChild"], args: [_angular_material_sort__WEBPACK_IMPORTED_MODULE_12__["MatSort"], { static: false },] }],
    table: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["ViewChild"], args: [_angular_material_table__WEBPACK_IMPORTED_MODULE_8__["MatTable"], { static: false },] }],
    checkSingleMediaChangesFunction: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Output"] }],
    checkMultimediaChangesFunction: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Output"] }],
    s1Application: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"] }],
    s2Application: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"] }],
    originalAttachmentDocuments: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"] }],
    revisionAttachmentDocuments: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"] }],
    complianceAttachmentDocuments: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"] }],
    revisionLetterAttachment: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"] }],
    newMultimediaList: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"] }],
    typeOfMediumList: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"] }],
    supportiveDocumentList: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"] }],
    applicationSingleMedia: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"] }],
    isAscUser: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"] }],
    isDisableFieldOnUpdate: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"] }],
    selectedMultimediaList: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"] }],
    toDeleteMultimediaList: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"] }],
    savedTypeOfMedium: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"] }],
    multimediaDTO: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"] }]
};
MaterialInformationComponent = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_5__["Component"])({
        selector: 'app-material-information',
        template: _raw_loader_material_information_component_html__WEBPACK_IMPORTED_MODULE_1__["default"],
        changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_5__["ChangeDetectionStrategy"].OnPush,
        styles: [_material_information_component_scss__WEBPACK_IMPORTED_MODULE_2__["default"]]
    })
], MaterialInformationComponent);



/***/ }),

/***/ "xq5V":
/*!*************************************************************************************************!*\
  !*** ./src/app/modules/pages/applications/performance-metrics/performance-metrics.component.ts ***!
  \*************************************************************************************************/
/*! exports provided: PerformanceMetricsComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PerformanceMetricsComponent", function() { return PerformanceMetricsComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "mrSG");
/* harmony import */ var _raw_loader_performance_metrics_component_html__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! raw-loader!./performance-metrics.component.html */ "myqe");
/* harmony import */ var _performance_metrics_component_scss__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./performance-metrics.component.scss */ "SgpT");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/material/dialog */ "0IaG");
/* harmony import */ var _angular_material_paginator__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/material/paginator */ "M9IT");
/* harmony import */ var _angular_material_sort__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/material/sort */ "Dh3D");
/* harmony import */ var _angular_material_table__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/material/table */ "+0xr");
/* harmony import */ var _services__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @services */ "dJ3e");
/* harmony import */ var _shared__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @shared */ "M0ag");










let PerformanceMetricsComponent = class PerformanceMetricsComponent {
    constructor(apiService, dialogRef, data) {
        this.apiService = apiService;
        this.dialogRef = dialogRef;
        this.data = data;
        this.displayedColumns = [
            // 'referenceCode',
            // 'appFormReference',
            'movement',
            'lastUpdate',
            'duration',
            'actionBy'
        ];
        this.performanceMetricsList = [];
        if (data) {
            this.getPerformanceMatricsList(data.appFormReference);
            this.referenceCode = data.referenceCode;
        }
    }
    ngOnInit() {
    }
    getPerformanceMatricsList(appFormReference) {
        this.apiService.findByParam(_shared__WEBPACK_IMPORTED_MODULE_9__["ENDPOINTS"].performanceMetrics, appFormReference).subscribe((res) => {
            this.performanceMetricsList = res;
            this.dataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_7__["MatTableDataSource"](this.performanceMetricsList);
            this.dataSource.paginator = this.paginator;
            this.dataSource.sort = this.sort;
        });
    }
    closeDialog() {
        this.dialogRef.close();
    }
};
PerformanceMetricsComponent.ctorParameters = () => [
    { type: _services__WEBPACK_IMPORTED_MODULE_8__["ApiService"] },
    { type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_4__["MatDialogRef"], decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Optional"] }] },
    { type: undefined, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Optional"] }, { type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Inject"], args: [_angular_material_dialog__WEBPACK_IMPORTED_MODULE_4__["MAT_DIALOG_DATA"],] }] }
];
PerformanceMetricsComponent.propDecorators = {
    paginator: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["ViewChild"], args: [_angular_material_paginator__WEBPACK_IMPORTED_MODULE_5__["MatPaginator"], { static: false },] }],
    sort: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["ViewChild"], args: [_angular_material_sort__WEBPACK_IMPORTED_MODULE_6__["MatSort"], { static: false },] }],
    table: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["ViewChild"], args: [_angular_material_table__WEBPACK_IMPORTED_MODULE_7__["MatTable"], { static: false },] }]
};
PerformanceMetricsComponent = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_3__["Component"])({
        selector: 'app-performance-metrics',
        template: _raw_loader_performance_metrics_component_html__WEBPACK_IMPORTED_MODULE_1__["default"],
        styles: [_performance_metrics_component_scss__WEBPACK_IMPORTED_MODULE_2__["default"]]
    })
], PerformanceMetricsComponent);



/***/ }),

/***/ "zdBp":
/*!********************************************************************************!*\
  !*** ./src/app/modules/pages/applications/reassignment/reassignment.module.ts ***!
  \********************************************************************************/
/*! exports provided: ReassignmentModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ReassignmentModule", function() { return ReassignmentModule; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "mrSG");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common */ "ofXK");
/* harmony import */ var _reassignment_routing_module__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./reassignment-routing.module */ "gVhs");
/* harmony import */ var _reassignment_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./reassignment.component */ "BUd1");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/common/http */ "tk/3");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/forms */ "3Pt+");
/* harmony import */ var _shared__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @shared */ "M0ag");
/* harmony import */ var app_modules_fragments_fragments_module__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! app/modules/fragments/fragments.module */ "7Tf7");









let ReassignmentModule = class ReassignmentModule {
};
ReassignmentModule = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModule"])({
        declarations: [_reassignment_component__WEBPACK_IMPORTED_MODULE_4__["ReassignmentComponent"]],
        imports: [
            _angular_common__WEBPACK_IMPORTED_MODULE_2__["CommonModule"],
            _reassignment_routing_module__WEBPACK_IMPORTED_MODULE_3__["ReassignmentRoutingModule"],
            _angular_common_http__WEBPACK_IMPORTED_MODULE_5__["HttpClientModule"],
            _angular_forms__WEBPACK_IMPORTED_MODULE_6__["ReactiveFormsModule"],
            _shared__WEBPACK_IMPORTED_MODULE_7__["AngularMaterialModule"],
            app_modules_fragments_fragments_module__WEBPACK_IMPORTED_MODULE_8__["FragmentsModule"],
        ]
    })
], ReassignmentModule);



/***/ }),

/***/ "zeqK":
/*!************************************************!*\
  !*** ./src/app/modules/pages/company/index.ts ***!
  \************************************************/
/*! exports provided: CompanyModule, AddCompanyComponent, AddCompanyModule, ListCompanyComponent, ListCompanyModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _company_module__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./company.module */ "vKeY");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CompanyModule", function() { return _company_module__WEBPACK_IMPORTED_MODULE_0__["CompanyModule"]; });

/* harmony import */ var _add_company_add_company_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./add-company/add-company.component */ "9hFf");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AddCompanyComponent", function() { return _add_company_add_company_component__WEBPACK_IMPORTED_MODULE_1__["AddCompanyComponent"]; });

/* harmony import */ var _add_company_add_company_module__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./add-company/add-company.module */ "mXdJ");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AddCompanyModule", function() { return _add_company_add_company_module__WEBPACK_IMPORTED_MODULE_2__["AddCompanyModule"]; });

/* harmony import */ var _list_company_list_company_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./list-company/list-company.component */ "OD7C");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ListCompanyComponent", function() { return _list_company_list_company_component__WEBPACK_IMPORTED_MODULE_3__["ListCompanyComponent"]; });

/* harmony import */ var _list_company_list_company_module__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./list-company/list-company.module */ "lsCb");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ListCompanyModule", function() { return _list_company_list_company_module__WEBPACK_IMPORTED_MODULE_4__["ListCompanyModule"]; });








/***/ }),

/***/ "zh2N":
/*!******************************************************************************************************************!*\
  !*** ./src/app/modules/pages/applications/schedule-of-fees/single-application/single-application.component.scss ***!
  \******************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcGFnZXMvYXBwbGljYXRpb25zL3NjaGVkdWxlLW9mLWZlZXMvc2luZ2xlLWFwcGxpY2F0aW9uL3NpbmdsZS1hcHBsaWNhdGlvbi5jb21wb25lbnQuc2NzcyJ9 */");

/***/ })

}]);
//# sourceMappingURL=applications-applications-module-es2015.js.map