{"version":3,"sources":["./src/app/modules/fragments/index.ts","./src/app/modules/pages/maintenance/company-penalties/company-penalties.component.ts","./src/app/modules/pages/maintenance/company-penalties/company-penalties.component.html","./src/app/modules/pages/maintenance/company-penalties/company-penalties-routing.module.ts","./src/app/modules/pages/maintenance/company-penalties/company-penalties.module.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoE;AACpB;;;;;;;;;;;;;;ACAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6D;AACO;AACP;AACd;AAEX;AACuC;AAC5C;;;;;;;;;;;;;;QCSjB,iFACE;QAAA,uDACF;QAAA,4DAAa;;;;QAF6B,uEAAW;QACnD,0DACF;QADE,4FACF;;;ADJP;UAAM,yBAAyB;QAWpC,YACU,UAAsB,EACtB,WAAwB,EACxB,iBAAoC,EACrC,QAAkB;YAHjB,eAAU,GAAV,UAAU,CAAY;YACtB,gBAAW,GAAX,WAAW,CAAa;YACxB,sBAAiB,GAAjB,iBAAiB,CAAmB;YACrC,aAAQ,GAAR,QAAQ,CAAU;YAX3B,6FAA6F;YAC7F,qBAAgB,GAAa,CAAC,oBAAoB,EAAE,sBAAsB,CAAC,CAAC;YAC5E,qBAAgB,GAAG,IAAI,wFAAgB,EAAE,CAAC;YAC1C,yBAAoB,GAAG,EAAE,CAAC;YAC1B,gBAAW,GAAG,EAAE,CAAC;QAQb,CAAC;QAEL,QAAQ;YACN,IAAI,CAAC,gBAAgB,EAAE,CAAC;YACxB,IAAI,CAAC,cAAc,EAAE,CAAC;YACtB,IAAI,CAAC,uBAAuB,EAAE,CAAC;QACjC,CAAC;QAED,uBAAuB;YACrB,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,iDAAS,CAAC,gBAAgB,CAAC,CAAC,SAAS,CAC3D,CAAC,GAAQ,EAAE,EAAE;gBACb,IAAI,GAAG,EAAE;oBACP,IAAI,CAAC,oBAAoB,GAAG,GAAG,CAAC,YAAY,CAAC,IAAI,CAAC;oBAClD,IAAI,CAAC,UAAU,GAAG,IAAI,0EAAkB,CAAmB,GAAG,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;oBAClF,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC;oBAC7D,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC;iBACpD;YACH,CAAC,CAAC,CAAC;QACL,CAAC;QAED,mBAAmB;YACjB,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,iDAAS,CAAC,gBAAgB,EAAE,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,CAAC,GAAQ,EAAE,EAAE;gBAC9G,IAAI,GAAG,EAAE;oBAEP,IAAI,CAAC,gBAAgB,GAAG,GAAG,CAAC,YAAY,CAAC,IAAI,CAAC;oBAC9C,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;iBACpC;YACH,CAAC,CAAC,CAAC;QACL,CAAC;QAED,cAAc;YACZ,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,iDAAS,CAAC,eAAe,CAAC,CAAC,SAAS,CAC1D,CAAC,GAAQ,EAAE,EAAE;gBACb,IAAI,GAAG,EAAE;oBACP,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC,YAAY,CAAC,IAAI,CAAC;iBAC1C;YACH,CAAC,CAAC,CAAC;QACL,CAAC;QAED,IAAI;YACF,IAAI,CAAC,UAAU,EAAE,CAAC;YAClB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,iDAAS,CAAC,gBAAgB,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC,SAAS,CAC/E,CAAC,GAAQ,EAAE,EAAE;gBACb,IAAI,GAAG,EAAE;oBACP,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;iBACrC;qBAAI;oBACH,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;iBACnC;gBACD,IAAI,CAAC,uBAAuB,EAAE,CAAC;gBAC/B,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAC5B,CAAC,CAAC,CAAC;QACL,CAAC;QAED,MAAM;YACJ,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,iDAAS,CAAC,gBAAgB,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC,SAAS,CACjF,CAAC,GAAQ,EAAE,EAAE;gBACb,IAAI,GAAG,EAAE;oBACP,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;iBACrC;qBAAI;oBACH,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;iBACnC;gBACD,IAAI,CAAC,uBAAuB,EAAE,CAAC;gBAC/B,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAC5B,CAAC,CAAC,CAAC;QACL,CAAC;QAED,gBAAgB;YACd,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;gBACjD,OAAO,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;gBAClC,aAAa,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;aAEzC,CAAC,CAAC;QACL,CAAC;QAED,kBAAkB;YAChB,IAAI,CAAC,gBAAgB,GAAG,IAAI,wFAAgB,EAAE,CAAC;YAC/C,IAAI,CAAC,oBAAoB,CAAC,eAAe,EAAE,CAAC;YAC5C,IAAI,CAAC,oBAAoB,CAAC,cAAc,EAAE,CAAC;QAC7C,CAAC;QAED,uBAAuB,CAAC,KAAU,EAAE,QAAa;YAC/C,IAAI,KAAK,IAAI,QAAQ,EAAE;gBACrB,OAAO,KAAK,CAAC,WAAW,KAAK,QAAQ,CAAC,WAAW,CAAC;aACnD;QACH,CAAC;QAED,UAAU;YACR,sFAAsF;YACtF,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,gBAAgB,CAAC,WAAW,EAAE,YAAY,CAAC;QAC1E,CAAC;QAED,MAAM;YACJ,kDAAI,CAAC,IAAI,CAAC;gBACR,IAAI,EAAE,uDAAuD;gBAC7D,IAAI,EAAE,UAAU;gBAChB,gBAAgB,EAAE,IAAI;gBACtB,kBAAkB,EAAE,SAAS;gBAC7B,iBAAiB,EAAE,MAAM;gBACzB,iBAAiB,EAAE,SAAS;aAC7B,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;gBACjB,IAAI,MAAM,CAAC,KAAK,EAAE;oBAChB,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,iDAAS,CAAC,gBAAgB,EAAE,IAAI,CAAC,gBAAgB,CAAC,EAAE,CAAC,CAAC,SAAS,CACxF,GAAG,EAAE;wBACH,IAAI,CAAC,iBAAiB,CAAC,oBAAoB,CAAC,uCAAuC,CAAC,CAAC;wBACrF,IAAI,CAAC,kBAAkB,EAAE,CAAC;wBAC1B,IAAI,CAAC,cAAc,EAAE,CAAC;wBACtB,IAAI,CAAC,uBAAuB,EAAE,CAAC;oBACjC,CAAC,CACF,CAAC;iBACH;YACH,CAAC,CAAC,CAAC;QACL,CAAC;;sGA/HU,yBAAyB;6GAAzB,yBAAyB;YAAA;0EAEzB,4DAAiB;;;;;;;;gBCjB9B,uEACI;gBAAA,yEACE;gBAAA,yEACE;gBAAA,yEACE;gBAAA,4EACE;gBAAA,2EAAU;gBAAA,oEAAS;gBAAA,4DAAW;gBAAC,8EACjC;gBAAA,4DAAY;gBACd,4DAAM;gBACR,4DAAM;gBACN,gEAEA;gBAAA,0EAEE;gBAAA,0EACE;gBAAA,qFACE;gBAAA,6EAAW;gBAAA,oEAAQ;gBAAA,2EAA6B;gBAAA,6DAAC;gBAAA,4DAAO;gBAAA,4DAAY;gBACpE,iFACE;gBADU,qNAAsC;gBAChD,qIACE;gBAEJ,4DAAa;gBACf,4DAAiB;gBAEjB,qFACE;gBAAA,6EAAW;gBAAA,2EAAe;gBAAA,2EAA6B;gBAAA,6DAAC;gBAAA,4DAAO;gBAAA,4DAAY;gBAC3E,4EACJ;gBADoB,sNAA4C;gBAA5D,4DACJ;gBAAA,4DAAiB;gBACjB,4DAAM;gBAEN,qEAQM;gBACR,4DAAO;gBAEP,8FAE0B;gBAFmE,iLAAgB,UAAM,IAAC,6HAAmB,YAAQ,IAA3B,6HAC1F,wBAAoB,IADsE,6HAClD,YAAQ,IAD0C;gBAEpH,4DAA0B;gBAC1B,iEACA;gBAAA,qFAGgB;gBAFZ,uLAAwB,yBAAqB,IAAC;gBAElD,4DAAgB;gBAElB,4DAAM;gBACR,4DAAO;;;gBAvCG,0DAAkC;gBAAlC,+FAAkC;gBAKtB,0DAAsC;gBAAtC,iGAAsC;gBACpC,0DAA6B;gBAA7B,oFAA6B;gBAQ3B,0DAA4C;gBAA5C,uGAA4C;gBAezC,0DAAgC;gBAAhC,6FAAgC;gBAI1C,0DAAyB;gBAAzB,sFAAyB;;;;;;;;;;;;;;;;;;AC5C9C;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AACmB;;;AAE1E,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,sFAAyB;KACrC;CACF,CAAC;AAMK;UAAM,6BAA6B;;gHAA7B,6BAA6B;wLAA7B,6BAA6B,kBAH/B,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAC9B,4DAAY,CAAC,EAAD;;;mIAEX,6BAA6B,uFAF9B,4DAAY,CAAC,EAAD;;;;;;;;;;;;;;ACbxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACM;AAEoC;AACT;AAClB;AACH;AACL;AACyB;;AAclE;UAAM,sBAAsB;;yGAAtB,sBAAsB;0KAAtB,sBAAsB,kBATxB;gBACP,4DAAY;gBACZ,+FAA6B;gBAC7B,qEAAgB;gBAChB,kEAAmB;gBACnB,6DAAqB;gBACrB,sFAAe;aAChB;;;;wHAEU,sBAAsB,mBAVlB,sFAAyB,CAAC,EAAD,UAEtC,4DAAY;YACZ,+FAA6B;YAC7B,qEAAgB;YAChB,kEAAmB;YACnB,6DAAqB;YACrB,sFAAe;AAAA","file":"company-penalties-company-penalties-module-es2015.js","sourcesContent":["export * from './form-action-buttons/form-action-buttons.component';\nexport * from './form-list/form-list.component';","import { DatePipe } from '@angular/common';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { FormListComponent } from '@fragments';\nimport { ApiService, SweetAlertService } from '@services';\nimport { ENDPOINTS } from '@shared';\nimport { CompanyPenalties } from 'app/core/models/company-penalties.model';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-company-penalties',\n  templateUrl: './company-penalties.component.html',\n  styleUrls: ['./company-penalties.component.scss']\n})\nexport class CompanyPenaltiesComponent implements OnInit {\n\n  @ViewChild(FormListComponent) formListComponent: FormListComponent\n  dataSource: MatTableDataSource<CompanyPenalties>;\n  // displayedColumns: string[] = ['companyDescription', 'companyPenaltyAmount', 'deleteIcon'];\n  displayedColumns: string[] = ['companyDescription', 'companyPenaltyAmount'];\n  companyPenalties = new CompanyPenalties();\n  companyPenaltiesList = [];\n  companyList = [];\n  companyPenaltiesForm: FormGroup;\n\n  constructor(\n    private apiService: ApiService,\n    private formBuilder: FormBuilder,\n    private sweetAlertService: SweetAlertService,\n    public datepipe: DatePipe\n  ) { }\n\n  ngOnInit(): void {\n    this.setFormValidator();\n    this.getCompanyList();\n    this.getCompanyPenaltiesList();\n  }\n\n  getCompanyPenaltiesList(): void {\n    this.apiService.findAll(ENDPOINTS.companyPenalties).subscribe(\n      (res: any) => {\n      if (res) {\n        this.companyPenaltiesList = res.responseData.data;\n        this.dataSource = new MatTableDataSource<CompanyPenalties>(res.responseData.data);\n        this.dataSource.paginator = this.formListComponent.paginator;\n        this.dataSource.sort = this.formListComponent.sort;\n      }\n    });\n  }\n\n  getCompanyPenalties(): void {\n    this.apiService.findById(ENDPOINTS.companyPenalties, this.formListComponent.idForUpdate).subscribe((res: any) => {\n      if (res) {\n\n        this.companyPenalties = res.responseData.data;\n        console.log(this.companyPenalties);\n      }\n    });\n  }\n\n  getCompanyList(): void {\n    this.apiService.findAll(ENDPOINTS.activeCompanies).subscribe(\n      (res: any) => {\n      if (res) {\n        this.companyList = res.responseData.data;\n      }\n    });\n  }\n\n  save(): void {\n    this.formatDate();\n    this.apiService.save(ENDPOINTS.companyPenalties, this.companyPenalties).subscribe(\n      (res: any) => {\n      if (res) {\n        this.sweetAlertService.success(res);\n      }else{\n        this.sweetAlertService.error(res);\n      }\n      this.getCompanyPenaltiesList();\n      this.resetFormValidator();\n    });\n  }\n\n  update(): void {\n    this.apiService.update(ENDPOINTS.companyPenalties, this.companyPenalties).subscribe(\n      (res: any) => {\n      if (res) {\n        this.sweetAlertService.success(res);\n      }else{\n        this.sweetAlertService.error(res);\n      }\n      this.getCompanyPenaltiesList();\n      this.resetFormValidator();\n    });\n  }\n\n  setFormValidator(): void {\n    this.companyPenaltiesForm = this.formBuilder.group({\n      company: ['', Validators.required],\n      penaltyAmount: ['', Validators.required],\n      // penaltyDate: ['', Validators.required],\n    });\n  }\n\n  resetFormValidator(): void {\n    this.companyPenalties = new CompanyPenalties();\n    this.companyPenaltiesForm.markAsUntouched();\n    this.companyPenaltiesForm.markAsPristine();\n  }\n\n  compareCompanyPenalties(value: any, selected: any): boolean {\n    if (value && selected) {\n      return value.description === selected.description;\n    }\n  }\n\n  formatDate(): void {\n    // this.brandPenalties.penaltyDate = this.datepipe.transform(new Date(), 'yyyy-MM-dd')\n    this.datepipe.transform(this.companyPenalties.penaltyDate, 'yyyy-MM-dd')\n  }\n\n  delete() {\n    Swal.fire({\n      text: 'Are you sure you want to delete this company penalty?',\n      icon: 'question',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Confirm'\n    }).then((result) => {\n      if (result.value) {\n        this.apiService.deleteById(ENDPOINTS.companyPenalties, this.companyPenalties.id).subscribe(\n          () => {\n            this.sweetAlertService.customSuccessMessage('Company penalty successfully deleted.');\n            this.resetFormValidator();\n            this.getCompanyList();\n            this.getCompanyPenaltiesList();\n          }\n        );\n      }\n    });\n  }\n\n}\n","<form>\n    <div class=\"container-fluid\">\n      <div class=\"row\">\n        <div class=\"col-md-12 title\">\n          <mat-label>\n            <mat-icon>turned_in</mat-icon> Company Penalties\n          </mat-label>\n        </div>\n      </div>\n      <hr>\n\n      <form [formGroup]=\"companyPenaltiesForm\">\n\n        <div class=\"row\">\n          <mat-form-field class=\"col-md-6\" appearance=\"outline\">\n            <mat-label>Company <span class=\"required-field\">*</span></mat-label>\n            <mat-select [(ngModel)]=\"companyPenalties.company\" name=\"company\" formControlName=\"company\" [compareWith]=\"compareCompanyPenalties\">\n              <mat-option *ngFor=\"let i of companyList\" [value]=\"i\">\n                {{i.companyName}}\n              </mat-option>\n            </mat-select>\n          </mat-form-field>\n\n          <mat-form-field class=\"col-md-6\" appearance=\"outline\">\n            <mat-label>Penalty Amount <span class=\"required-field\">*</span></mat-label>\n            <input matInput [(ngModel)]=\"companyPenalties.penaltyAmount\" name=\"penaltyAmount\" formControlName=\"penaltyAmount\">\n        </mat-form-field>\n        </div>\n\n        <div class=\"row\">\n            <!-- <mat-form-field class=\"col-md-6\" appearance=\"outline\">\n            <mat-label>Choose date penalty</mat-label>\n            <input matInput [matDatepicker]=\"picker\" readonly [(ngModel)]=\"brandPenalties.penaltyDate\" name=\"penaltyDate\"\n              formControlName=\"penaltyDate\" (dateChange)=\"test()\">\n            <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n            <mat-datepicker #picker disabled=\"false\" color=\"warn\"></mat-datepicker>\n          </mat-form-field> -->\n        </div>\n      </form>\n\n      <app-form-action-buttons [childObject]=\"companyPenalties\" [childForm]=\"companyPenaltiesForm\" (saveFunction)=\"save()\" (updateFunction)=\"update()\"\n              (cancelFunction)=\"resetFormValidator()\" (deleteFunction)=\"delete()\">\n      </app-form-action-buttons>\n      <br>\n      <app-form-list [dataSource]=\"dataSource\" [displayedColumns]=\"displayedColumns\"\n          (selectInListFunction)=\"getCompanyPenalties()\">\n          <!-- (deleteInListFunction)=\"delete()\" -->\n      </app-form-list>\n\n    </div>\n  </form>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CompanyPenaltiesComponent } from './company-penalties.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CompanyPenaltiesComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class CompanyPenaltiesRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { CompanyPenaltiesRoutingModule } from './company-penalties-routing.module';\nimport { CompanyPenaltiesComponent } from './company-penalties.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { AngularMaterialModule } from '@shared';\nimport { FragmentsModule } from 'app/modules/fragments/fragments.module';\n\n\n@NgModule({\n  declarations: [CompanyPenaltiesComponent],\n  imports: [\n    CommonModule,\n    CompanyPenaltiesRoutingModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    AngularMaterialModule,\n    FragmentsModule\n  ]\n})\nexport class CompanyPenaltiesModule { }\n"],"sourceRoot":"webpack:///"}