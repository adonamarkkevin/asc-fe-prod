{"version":3,"sources":["webpack:///src/app/modules/fragments/index.ts","webpack:///src/app/modules/pages/maintenance/dialect/dialect-routing.module.ts","webpack:///src/app/modules/pages/maintenance/dialect/dialect.component.ts","webpack:///src/app/modules/pages/maintenance/dialect/dialect.component.html","webpack:///src/app/modules/pages/maintenance/dialect/dialect.module.ts"],"names":["routes","path","component","DialectRoutingModule","forChild","DialectComponent","apiService","formBuilder","sweetAlertService","displayedColumns","statusList","dialect","dialectList","getList","setFormValidator","findAll","dialects","subscribe","res","responseData","data","dataSource","paginator","formListComponent","sort","save","undefined","success","err","error","resetFormValidator","findById","idForUpdate","console","log","update","status","ACTIVE","dialectForm","group","required","markAsUntouched","markAsPristine","fire","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","value","deleteById","id","customSuccessMessage","getDialect","DialectModule"],"mappings":"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","file":"dialect-dialect-module-es5.js","sourcesContent":["export * from './form-action-buttons/form-action-buttons.component';\nexport * from './form-list/form-list.component';","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { DialectComponent } from './dialect.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DialectComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class DialectRoutingModule { }\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { FormListComponent } from '@fragments';\nimport { ApiService, SweetAlertService } from '@services';\nimport { COMMON_FUNCTION, ENDPOINTS, STATUSES } from '@shared';\nimport { Dialect } from 'app/core/models/dialect.model';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-dialect',\n  templateUrl: './dialect.component.html',\n  styleUrls: ['./dialect.component.scss']\n})\nexport class DialectComponent implements OnInit {\n\n  @ViewChild(FormListComponent) formListComponent: FormListComponent;\n  dataSource: MatTableDataSource<Dialect>;\n  displayedColumns: string[] = ['dialect', 'status'];\n  statusList = [...STATUSES];\n\n  dialect = new Dialect();\n  dialectList = [];\n\n  dialectForm: FormGroup;\n\n\n  constructor(\n    private apiService: ApiService,\n    private formBuilder: FormBuilder,\n    private sweetAlertService: SweetAlertService,\n  ) { }\n\n  ngOnInit() {\n    this.getList();\n    this.setFormValidator();\n  }\n\n  getList(): void {\n    this.apiService.findAll(ENDPOINTS.dialects).subscribe((res: any) => {\n      this.dialectList = res.responseData.data;\n      this.dataSource = new MatTableDataSource<Dialect>(res.responseData.data);\n      this.dataSource.paginator = this.formListComponent.paginator;\n      this.dataSource.sort = this.formListComponent.sort;\n    });\n  }\n\n  save(): void{\n    this.apiService.save(ENDPOINTS.dialects, this.dialect).subscribe(\n        (res: any) => {\n          if (res !== undefined){\n            this.sweetAlertService.success(res);\n          }\n        }, (err: any) => {\n          this.sweetAlertService.error(err);\n        }, () => {\n          this.resetFormValidator(),\n          this.getList();\n        }\n    )\n  }\n\n  getDialect(): void {\n    this.apiService.findById(ENDPOINTS.dialects, this.formListComponent.idForUpdate).subscribe((res: any) => {\n      if (res) {\n        this.dialect = res.responseData.data;\n        console.log(res);\n\n      }\n    });\n  }\n\n  update(): void {\n    this.apiService.update(ENDPOINTS.dialects, this.dialect).subscribe(\n      (res: any) => {\n        if (res !== undefined){\n          this.sweetAlertService.success(res);\n        }\n      }, (err: any) => {\n        this.sweetAlertService.error(err);\n      }, () => {\n        this.resetFormValidator()\n        this.getList();\n      });\n  }\n\n  setFormValidator(): void {\n    this.dialect.status = COMMON_FUNCTION.ACTIVE;\n    this.dialectForm = this.formBuilder.group({\n      dialect: ['', Validators.required],\n      status: [''],\n    });\n  }\n\n  resetFormValidator(): void {\n    this.dialect = new Dialect();\n    this.dialect.status = COMMON_FUNCTION.ACTIVE;\n    this.dialectForm.markAsUntouched();\n    this.dialectForm.markAsPristine();\n  }\n\n  delete() {\n    Swal.fire({\n      text: 'Are you sure you want to delete this dialect?',\n      icon: 'question',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Confirm'\n    }).then((result) => {\n      if (result.value) {\n        this.apiService.deleteById(ENDPOINTS.dialects, this.dialect.id).subscribe(\n          () => {\n            this.sweetAlertService.customSuccessMessage('Dialect successfully deleted.');\n            this.resetFormValidator();\n            this.getList();\n          }\n        );\n      }\n    });\n  }\n\n}\n","<form>\n    <div class=\"container-fluid\">\n      <div class=\"row\">\n        <div class=\"col-md-12 title\">\n          <mat-label>\n            Dialect\n          </mat-label>\n        </div>\n      </div>\n      <hr>\n\n      <form [formGroup]=\"dialectForm\">\n        <div class=\"row\">\n          <mat-form-field class=\"col-md-8\" appearance=\"outline\">\n            <mat-label>Dialect <span class=\"required-field\">*</span></mat-label>\n            <input matInput [(ngModel)]=\"dialect.dialect\" name=\"dialect\" formControlName=\"dialect\">\n          </mat-form-field>\n\n          <mat-form-field class=\"col-md-4\" appearance=\"outline\" *ngIf=\"dialect.id\">\n            <mat-label>Status</mat-label>\n            <mat-select [(ngModel)]=\"dialect.status\" name=\"status\" formControlName=\"status\">\n              <mat-option *ngFor=\"let i of statusList\" [value]=\"i.status\">\n                {{i.status}}\n              </mat-option>\n            </mat-select>\n          </mat-form-field>\n        </div>\n      </form>\n\n      <app-form-action-buttons [childObject]=\"dialect\" [childForm]=\"dialectForm\" (saveFunction)=\"save()\"\n        (updateFunction)=\"update()\" (cancelFunction)=\"resetFormValidator()\" (deleteFunction)=\"delete()\"></app-form-action-buttons>\n      <br>\n      <app-form-list [dataSource]=\"dataSource\" [displayedColumns]=\"displayedColumns\"\n        (selectInListFunction)=\"getDialect()\"></app-form-list>\n\n    </div>\n  </form>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DialectRoutingModule } from './dialect-routing.module';\nimport { DialectComponent } from './dialect.component';\nimport { FragmentsModule } from 'app/modules/fragments/fragments.module';\nimport { AngularMaterialModule } from '@shared';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\n\n@NgModule({\n  declarations: [DialectComponent],\n  imports: [\n    CommonModule,\n    DialectRoutingModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    AngularMaterialModule,\n    FragmentsModule,\n  ]\n})\nexport class DialectModule { }\n"]}