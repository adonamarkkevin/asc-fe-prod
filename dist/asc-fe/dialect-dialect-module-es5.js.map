{"version":3,"sources":["webpack:///src/app/modules/fragments/index.ts","webpack:///src/app/modules/pages/maintenance/dialect/dialect-routing.module.ts","webpack:///src/app/modules/pages/maintenance/dialect/dialect.component.ts","webpack:///src/app/modules/pages/maintenance/dialect/dialect.component.html","webpack:///src/app/modules/pages/maintenance/dialect/dialect.module.ts","webpack:///src/app/modules/pages/maintenance/dialect/dialect.component.scss"],"names":["routes","path","component","DialectRoutingModule","imports","forChild","exports","DialectComponent","apiService","formBuilder","sweetAlertService","displayedColumns","statusList","dialect","dialectList","getList","setFormValidator","findAll","dialects","subscribe","res","responseData","data","dataSource","paginator","formListComponent","sort","save","undefined","success","err","error","resetFormValidator","findById","idForUpdate","console","log","update","status","ACTIVE","dialectForm","group","required","markAsUntouched","markAsPristine","fire","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","value","deleteById","id","customSuccessMessage","selector","template","DialectModule","declarations"],"mappings":"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","file":"dialect-dialect-module-es5.js","sourcesContent":["export * from './form-action-buttons/form-action-buttons.component';\r\nexport * from './form-list/form-list.component';","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { DialectComponent } from './dialect.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: DialectComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class DialectRoutingModule { }\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { FormListComponent } from '@fragments';\r\nimport { ApiService, SweetAlertService } from '@services';\r\nimport { COMMON_FUNCTION, ENDPOINTS, STATUSES } from '@shared';\r\nimport { Dialect } from 'app/core/models/dialect.model';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-dialect',\r\n  templateUrl: './dialect.component.html',\r\n  styleUrls: ['./dialect.component.scss']\r\n})\r\nexport class DialectComponent implements OnInit {\r\n\r\n  @ViewChild(FormListComponent) formListComponent: FormListComponent;\r\n  dataSource: MatTableDataSource<Dialect>;\r\n  displayedColumns: string[] = ['dialect', 'status'];\r\n  statusList = [...STATUSES];\r\n\r\n  dialect = new Dialect();\r\n  dialectList = [];\r\n\r\n  dialectForm: FormGroup;\r\n\r\n\r\n  constructor(\r\n    private apiService: ApiService,\r\n    private formBuilder: FormBuilder,\r\n    private sweetAlertService: SweetAlertService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.getList();\r\n    this.setFormValidator();\r\n  }\r\n\r\n  getList(): void {\r\n    this.apiService.findAll(ENDPOINTS.dialects).subscribe((res: any) => {\r\n      this.dialectList = res.responseData.data;\r\n      this.dataSource = new MatTableDataSource<Dialect>(res.responseData.data);\r\n      this.dataSource.paginator = this.formListComponent.paginator;\r\n      this.dataSource.sort = this.formListComponent.sort;\r\n    });\r\n  }\r\n\r\n  save(): void{\r\n    this.apiService.save(ENDPOINTS.dialects, this.dialect).subscribe(\r\n        (res: any) => {\r\n          if (res !== undefined){\r\n            this.sweetAlertService.success(res);\r\n          }\r\n        }, (err: any) => {\r\n          this.sweetAlertService.error(err);\r\n        }, () => {\r\n          this.resetFormValidator(),\r\n          this.getList();\r\n        }\r\n    )\r\n  }\r\n\r\n  getDialect(): void {\r\n    this.apiService.findById(ENDPOINTS.dialects, this.formListComponent.idForUpdate).subscribe((res: any) => {\r\n      if (res) {\r\n        this.dialect = res.responseData.data;\r\n        console.log(res);\r\n\r\n      }\r\n    });\r\n  }\r\n\r\n  update(): void {\r\n    this.apiService.update(ENDPOINTS.dialects, this.dialect).subscribe(\r\n      (res: any) => {\r\n        if (res !== undefined){\r\n          this.sweetAlertService.success(res);\r\n        }\r\n      }, (err: any) => {\r\n        this.sweetAlertService.error(err);\r\n      }, () => {\r\n        this.resetFormValidator()\r\n        this.getList();\r\n      });\r\n  }\r\n\r\n  setFormValidator(): void {\r\n    this.dialect.status = COMMON_FUNCTION.ACTIVE;\r\n    this.dialectForm = this.formBuilder.group({\r\n      dialect: ['', Validators.required],\r\n      status: [''],\r\n    });\r\n  }\r\n\r\n  resetFormValidator(): void {\r\n    this.dialect = new Dialect();\r\n    this.dialect.status = COMMON_FUNCTION.ACTIVE;\r\n    this.dialectForm.markAsUntouched();\r\n    this.dialectForm.markAsPristine();\r\n  }\r\n\r\n  delete() {\r\n    Swal.fire({\r\n      text: 'Are you sure you want to delete this dialect?',\r\n      icon: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Confirm'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.apiService.deleteById(ENDPOINTS.dialects, this.dialect.id).subscribe(\r\n          () => {\r\n            this.sweetAlertService.customSuccessMessage('Dialect successfully deleted.');\r\n            this.resetFormValidator();\r\n            this.getList();\r\n          }\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","export default \"<form>\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-12 title\\\">\\r\\n          <mat-label>\\r\\n            Dialect\\r\\n          </mat-label>\\r\\n        </div>\\r\\n      </div>\\r\\n      <hr>\\r\\n\\r\\n      <form [formGroup]=\\\"dialectForm\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <mat-form-field class=\\\"col-md-8\\\" appearance=\\\"outline\\\">\\r\\n            <mat-label>Dialect <span class=\\\"required-field\\\">*</span></mat-label>\\r\\n            <input matInput [(ngModel)]=\\\"dialect.dialect\\\" name=\\\"dialect\\\" formControlName=\\\"dialect\\\">\\r\\n          </mat-form-field>\\r\\n\\r\\n          <mat-form-field class=\\\"col-md-4\\\" appearance=\\\"outline\\\" *ngIf=\\\"dialect.id\\\">\\r\\n            <mat-label>Status</mat-label>\\r\\n            <mat-select [(ngModel)]=\\\"dialect.status\\\" name=\\\"status\\\" formControlName=\\\"status\\\">\\r\\n              <mat-option *ngFor=\\\"let i of statusList\\\" [value]=\\\"i.status\\\">\\r\\n                {{i.status}}\\r\\n              </mat-option>\\r\\n            </mat-select>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n      </form>\\r\\n\\r\\n      <app-form-action-buttons [childObject]=\\\"dialect\\\" [childForm]=\\\"dialectForm\\\" (saveFunction)=\\\"save()\\\"\\r\\n        (updateFunction)=\\\"update()\\\" (cancelFunction)=\\\"resetFormValidator()\\\" (deleteFunction)=\\\"delete()\\\"></app-form-action-buttons>\\r\\n      <br>\\r\\n      <app-form-list [dataSource]=\\\"dataSource\\\" [displayedColumns]=\\\"displayedColumns\\\"\\r\\n        (selectInListFunction)=\\\"getDialect()\\\"></app-form-list>\\r\\n\\r\\n    </div>\\r\\n  </form>\";","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { DialectRoutingModule } from './dialect-routing.module';\r\nimport { DialectComponent } from './dialect.component';\r\nimport { FragmentsModule } from 'app/modules/fragments/fragments.module';\r\nimport { AngularMaterialModule } from '@shared';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\n\r\n@NgModule({\r\n  declarations: [DialectComponent],\r\n  imports: [\r\n    CommonModule,\r\n    DialectRoutingModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule,\r\n    AngularMaterialModule,\r\n    FragmentsModule,\r\n  ]\r\n})\r\nexport class DialectModule { }\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcGFnZXMvbWFpbnRlbmFuY2UvZGlhbGVjdC9kaWFsZWN0LmNvbXBvbmVudC5zY3NzIn0= */\";"]}