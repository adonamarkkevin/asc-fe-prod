{"version":3,"sources":["./src/app/modules/pages/maintenance/email-notification/email-notification.module.ts","./src/app/modules/fragments/index.ts","./src/app/modules/pages/maintenance/email-notification/email-notification-routing.module.ts","./src/app/modules/pages/maintenance/email-notification/email-notification.component.ts","./src/app/modules/pages/maintenance/email-notification/email-notification.component.html"],"names":[],"mappings":"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","file":"email-notification-email-notification-module-es2015.js","sourcesContent":["import { CustomAngularEditorModule } from './../../applications/editor/lib/angular-editor.module';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { EmailNotificationRoutingModule } from './email-notification-routing.module';\nimport { EmailNotificationComponent } from './email-notification.component';\nimport { FragmentsModule } from 'app/modules/fragments/fragments.module';\nimport { AngularMaterialModule } from '@shared';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\n\n\n@NgModule({\n  declarations: [EmailNotificationComponent],\n  imports: [\n    CommonModule,\n    EmailNotificationRoutingModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    AngularMaterialModule,\n    FragmentsModule,\n    CustomAngularEditorModule\n  ]\n})\nexport class EmailNotificationModule { }\n","export * from './form-action-buttons/form-action-buttons.component';\nexport * from './form-list/form-list.component';","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { EmailNotificationComponent } from './email-notification.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: EmailNotificationComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class EmailNotificationRoutingModule { }\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { FormListComponent } from '@fragments';\nimport { ApiService, SweetAlertService } from '@services';\nimport { COMMON_FUNCTION, ENDPOINTS, STATUSES } from '@shared';\nimport { EmailNotification } from 'app/core/models/email-notification.model';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport Swal from 'sweetalert2';\nimport { AngularEditorConfig } from '../../applications/editor/public-api';\n\n@Component({\n  selector: 'app-email-notification',\n  templateUrl: './email-notification.component.html',\n  styleUrls: ['./email-notification.component.scss']\n})\nexport class EmailNotificationComponent implements OnInit {\n\n  @ViewChild(FormListComponent) formListComponent: FormListComponent;\n  dataSource: MatTableDataSource<EmailNotification>;\n  displayedColumns: string[] = ['emailCode', 'subject', 'description', 'status'];\n  statusList = [...STATUSES];\n\n  emailNotification = new EmailNotification();\n  emailNotificationList = [];\n\n  emailNotificationForm: FormGroup;\n\n  editorConfig: AngularEditorConfig = {\n    editable: true,\n      spellcheck: true,\n      height: '15em',\n      minHeight: '0',\n      maxHeight: 'auto',\n      width: 'auto',\n      minWidth: '0',\n      translate: 'no',\n      enableToolbar: true,\n      showToolbar: true,\n      placeholder: 'Enter email body message here...',\n      defaultParagraphSeparator: 'p',\n      defaultFontName: 'Arial',\n      defaultFontSize: '',\n      fonts: [\n        {class: 'arial', name: 'Arial'},\n        {class: 'times-new-roman', name: 'Times New Roman'},\n        {class: 'calibri', name: 'Calibri'},\n        {class: 'comic-sans-ms', name: 'Comic Sans MS'}\n      ],\n      customClasses: [\n      {\n        name: 'quote',\n        class: 'quote',\n      },\n      {\n        name: 'redText',\n        class: 'redText'\n      },\n      {\n        name: 'titleText',\n        class: 'titleText',\n        tag: 'h1',\n      },\n    ],\n    uploadUrl: 'v1/image',\n    // upload: (file: File) => { ... }\n    uploadWithCredentials: false,\n    sanitize: true,\n    toolbarPosition: 'top',\n    toolbarHiddenButtons: [\n      ['link',\n      'unlink',\n      'insertImage',\n      'insertVideo',],\n\n    ]\n};\n\n\n  constructor(\n    private apiService: ApiService,\n    private formBuilder: FormBuilder,\n    private sweetAlertService: SweetAlertService,\n    private spinner: NgxSpinnerService,\n  ) { }\n\n  ngOnInit() {\n    this.getList();\n    this.setFormValidator();\n  }\n\n  getList(): void {\n    this.apiService.findAll(ENDPOINTS.emailNotification).subscribe((res: any) => {\n      this.emailNotificationList = res.responseData.data;\n      this.dataSource = new MatTableDataSource<EmailNotification>(res.responseData.data);\n      this.dataSource.paginator = this.formListComponent.paginator;\n      this.dataSource.sort = this.formListComponent.sort;\n    });\n  }\n\n  save(): void{\n    this.spinner.show();\n    console.log(this.emailNotification);\n\n    this.apiService.save(ENDPOINTS.emailNotification, this.emailNotification).subscribe(\n        (res: any) => {\n          if (res !== undefined){\n            this.spinner.hide();\n            this.sweetAlertService.success(res);\n          }\n        }, (err: any) => {\n          this.spinner.hide();\n          this.sweetAlertService.error(err);\n        }, () => {\n          this.spinner.hide();\n          this.resetFormValidator(),\n          this.getList();\n        }\n    )\n  }\n\n  getEmailNotification(): void {\n    this.spinner.show();\n    this.apiService.findById(ENDPOINTS.emailNotification, this.formListComponent.idForUpdate).subscribe((res: any) => {\n      if (res) {\n        this.emailNotification = res.responseData.data;\n        console.log(res);\n        this.spinner.hide();\n      }\n    });\n  }\n\n  update(): void {\n    this.spinner.show();\n    this.apiService.update(ENDPOINTS.emailNotification, this.emailNotification).subscribe(\n      (res: any) => {\n        if (res !== undefined){\n          this.spinner.hide();\n          this.sweetAlertService.success(res);\n        }\n      }, (err: any) => {\n        this.spinner.hide();\n        this.sweetAlertService.error(err);\n      }, () => {\n        this.spinner.hide();\n        this.resetFormValidator()\n        this.getList();\n      });\n  }\n\n  setFormValidator(): void {\n    this.emailNotification.status = COMMON_FUNCTION.ACTIVE;\n    this.emailNotificationForm = this.formBuilder.group({\n      emailCode: ['', Validators.required],\n      subject: ['', Validators.required],\n      description: ['', Validators.required],\n      body: ['', Validators.required],\n      status: [''],\n    });\n  }\n\n  resetFormValidator(): void {\n    this.emailNotification = new EmailNotification();\n    this.emailNotification.status = COMMON_FUNCTION.ACTIVE;\n    this.emailNotificationForm.markAsUntouched();\n    this.emailNotificationForm.markAsPristine();\n  }\n\n  delete() {\n    Swal.fire({\n      text: 'Are you sure you want to delete this email notification?',\n      icon: 'question',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Confirm'\n    }).then((result) => {\n      if (result.value) {\n        this.spinner.show();\n        this.apiService.deleteById(ENDPOINTS.emailNotification, this.emailNotification.id).subscribe(\n          () => {\n            this.spinner.hide();\n            this.sweetAlertService.customSuccessMessage('Email notification successfully deleted.');\n            this.resetFormValidator();\n            this.getList();\n          }\n        );\n      }\n    });\n  }\n\n}\n","<form>\n    <div class=\"container-fluid\">\n        <div class=\"row\">\n            <div class=\"col-md-12 title\">\n                <mat-label>\n                    Email Notification\n                </mat-label>\n            </div>\n        </div>\n        <hr>\n\n        <form [formGroup]=\"emailNotificationForm\">\n            <div class=\"row\">\n                <mat-form-field class=\"col-md-4\" appearance=\"outline\">\n                    <mat-label>Email Code <span class=\"required-field\">*</span></mat-label>\n                    <input matInput [(ngModel)]=\"emailNotification.emailCode\" name=\"emailCode\"\n                        formControlName=\"emailCode\">\n                </mat-form-field>\n\n                <mat-form-field class=\"col-md-4\" appearance=\"outline\">\n                    <mat-label>Subject</mat-label>\n                    <input matInput [(ngModel)]=\"emailNotification.subject\" name=\"subject\" formControlName=\"subject\">\n                </mat-form-field>\n\n                <mat-form-field class=\"col-md-4\" appearance=\"outline\">\n                    <mat-label>Status</mat-label>\n                    <mat-select [(ngModel)]=\"emailNotification.status\" name=\"status\" formControlName=\"status\">\n                        <mat-option *ngFor=\"let i of statusList\" [value]=\"i.status\">\n                            {{i.status}}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n\n                <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n                    <mat-label>Description</mat-label>\n                    <textarea matInput [(ngModel)]=\"emailNotification.description\" name=\"description\" formControlName=\"description\"></textarea>\n                </mat-form-field>\n\n                <div class=\"col-md-12\" appearance=\"outline\">\n                    <mat-label>Body</mat-label>\n                    <angular-editor \n                        [(ngModel)]=\"emailNotification.body\" \n                        [config]=\"editorConfig\" \n                        name=\"body\"\n                        formControlName=\"body\">\n                    </angular-editor><br>\n                </div>\n            </div>\n        </form>\n\n        <app-form-action-buttons [childObject]=\"emailNotification\" [childForm]=\"emailNotificationForm\"\n            (saveFunction)=\"save()\" (updateFunction)=\"update()\" (cancelFunction)=\"resetFormValidator()\"\n            (deleteFunction)=\"delete()\">\n        </app-form-action-buttons>\n        <br>\n        <app-form-list [dataSource]=\"dataSource\" [displayedColumns]=\"displayedColumns\"\n            (selectInListFunction)=\"getEmailNotification()\"></app-form-list>\n\n    </div>\n</form>\n"],"sourceRoot":"webpack:///"}