{"version":3,"sources":["./src/app/modules/pages/maintenance/email-notification/email-notification.module.ts","./src/app/modules/pages/maintenance/email-notification/email-notification.component.scss","./src/app/modules/fragments/index.ts","./src/app/modules/pages/maintenance/email-notification/email-notification.component.html","./src/app/modules/pages/maintenance/email-notification/email-notification-routing.module.ts","./src/app/modules/pages/maintenance/email-notification/email-notification.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAkG;AACzD;AACM;AAEsC;AACT;AACH;AACzB;AACK;AACG;IAgB3C,uBAAuB,SAAvB,uBAAuB;CAAI;AAA3B,uBAAuB;IAZnC,8DAAQ,CAAC;QACR,YAAY,EAAE,CAAC,wFAA0B,CAAC;QAC1C,OAAO,EAAE;YACP,4DAAY;YACZ,iGAA8B;YAC9B,qEAAgB;YAChB,kEAAmB;YACnB,6DAAqB;YACrB,sFAAe;YACf,wGAAyB;SAC1B;KACF,CAAC;GACW,uBAAuB,CAAI;AAAJ;;;;;;;;;;;;;ACzBpC;AAAe,6GAA8C,+MAA+M,E;;;;;;;;;;;;ACA5Q;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoE;AACpB;;;;;;;;;;;;;ACDhD;AAAe,w9CAAy5C,UAAU,i8CAAi8C,E;;;;;;;;;;;;;;;;;;;ACA10F;AACc;AACqB;AAE5E,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,wFAA0B;KACtC;CACF,CAAC;IAMW,8BAA8B,SAA9B,8BAA8B;CAAI;AAAlC,8BAA8B;IAJ1C,8DAAQ,CAAC;QACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;KACxB,CAAC;GACW,8BAA8B,CAAI;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACfkB;AACO;AACP;AACd;AACW;AACK;AACc;AAC7B;AACjB;IAQlB,0BAA0B,SAA1B,0BAA0B;IA+DrC,YACU,UAAsB,EACtB,WAAwB,EACxB,iBAAoC,EACpC,OAA0B;QAH1B,eAAU,GAAV,UAAU,CAAY;QACtB,gBAAW,GAAX,WAAW,CAAa;QACxB,sBAAiB,GAAjB,iBAAiB,CAAmB;QACpC,YAAO,GAAP,OAAO,CAAmB;QA/DpC,qBAAgB,GAAa,CAAC,WAAW,EAAE,SAAS,EAAE,aAAa,EAAE,QAAQ,CAAC,CAAC;QAC/E,eAAU,GAAG,CAAC,GAAG,gDAAQ,CAAC,CAAC;QAE3B,sBAAiB,GAAG,IAAI,0FAAiB,EAAE,CAAC;QAC5C,0BAAqB,GAAG,EAAE,CAAC;QAI3B,iBAAY,GAAwB;YAClC,QAAQ,EAAE,IAAI;YACZ,UAAU,EAAE,IAAI;YAChB,MAAM,EAAE,MAAM;YACd,SAAS,EAAE,GAAG;YACd,SAAS,EAAE,MAAM;YACjB,KAAK,EAAE,MAAM;YACb,QAAQ,EAAE,GAAG;YACb,SAAS,EAAE,IAAI;YACf,aAAa,EAAE,IAAI;YACnB,WAAW,EAAE,IAAI;YACjB,WAAW,EAAE,kCAAkC;YAC/C,yBAAyB,EAAE,GAAG;YAC9B,eAAe,EAAE,OAAO;YACxB,eAAe,EAAE,EAAE;YACnB,KAAK,EAAE;gBACL,EAAC,KAAK,EAAE,OAAO,EAAE,IAAI,EAAE,OAAO,EAAC;gBAC/B,EAAC,KAAK,EAAE,iBAAiB,EAAE,IAAI,EAAE,iBAAiB,EAAC;gBACnD,EAAC,KAAK,EAAE,SAAS,EAAE,IAAI,EAAE,SAAS,EAAC;gBACnC,EAAC,KAAK,EAAE,eAAe,EAAE,IAAI,EAAE,eAAe,EAAC;aAChD;YACD,aAAa,EAAE;gBACf;oBACE,IAAI,EAAE,OAAO;oBACb,KAAK,EAAE,OAAO;iBACf;gBACD;oBACE,IAAI,EAAE,SAAS;oBACf,KAAK,EAAE,SAAS;iBACjB;gBACD;oBACE,IAAI,EAAE,WAAW;oBACjB,KAAK,EAAE,WAAW;oBAClB,GAAG,EAAE,IAAI;iBACV;aACF;YACD,SAAS,EAAE,UAAU;YACrB,kCAAkC;YAClC,qBAAqB,EAAE,KAAK;YAC5B,QAAQ,EAAE,IAAI;YACd,eAAe,EAAE,KAAK;YACtB,oBAAoB,EAAE;gBACpB,CAAC,MAAM;oBACP,QAAQ;oBACR,aAAa;oBACb,aAAa,EAAE;aAEhB;SACJ,CAAC;IAQI,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,OAAO,EAAE,CAAC;QACf,IAAI,CAAC,gBAAgB,EAAE,CAAC;IAC1B,CAAC;IAED,OAAO;QACL,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,iDAAS,CAAC,iBAAiB,CAAC,CAAC,SAAS,CAAC,CAAC,GAAQ,EAAE,EAAE;YAC1E,IAAI,CAAC,qBAAqB,GAAG,GAAG,CAAC,YAAY,CAAC,IAAI,CAAC;YACnD,IAAI,CAAC,UAAU,GAAG,IAAI,0EAAkB,CAAoB,GAAG,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;YACnF,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC;YAC7D,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC;QACrD,CAAC,CAAC,CAAC;IACL,CAAC;IAED,IAAI;QACF,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACpB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;QAEpC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,iDAAS,CAAC,iBAAiB,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC,SAAS,CAC/E,CAAC,GAAQ,EAAE,EAAE;YACX,IAAI,GAAG,KAAK,SAAS,EAAC;gBACpB,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;gBACpB,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;aACrC;QACH,CAAC,EAAE,CAAC,GAAQ,EAAE,EAAE;YACd,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YACpB,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACpC,CAAC,EAAE,GAAG,EAAE;YACN,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YACpB,IAAI,CAAC,kBAAkB,EAAE;gBACzB,IAAI,CAAC,OAAO,EAAE,CAAC;QACjB,CAAC,CACJ;IACH,CAAC;IAED,oBAAoB;QAClB,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACpB,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,iDAAS,CAAC,iBAAiB,EAAE,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,CAAC,GAAQ,EAAE,EAAE;YAC/G,IAAI,GAAG,EAAE;gBACP,IAAI,CAAC,iBAAiB,GAAG,GAAG,CAAC,YAAY,CAAC,IAAI,CAAC;gBAC/C,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBACjB,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;aACrB;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACpB,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,iDAAS,CAAC,iBAAiB,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC,SAAS,CACnF,CAAC,GAAQ,EAAE,EAAE;YACX,IAAI,GAAG,KAAK,SAAS,EAAC;gBACpB,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;gBACpB,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;aACrC;QACH,CAAC,EAAE,CAAC,GAAQ,EAAE,EAAE;YACd,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YACpB,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACpC,CAAC,EAAE,GAAG,EAAE;YACN,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YACpB,IAAI,CAAC,kBAAkB,EAAE;YACzB,IAAI,CAAC,OAAO,EAAE,CAAC;QACjB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,gBAAgB;QACd,IAAI,CAAC,iBAAiB,CAAC,MAAM,GAAG,uDAAe,CAAC,MAAM,CAAC;QACvD,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAClD,SAAS,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACpC,OAAO,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAClC,WAAW,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACtC,IAAI,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC/B,MAAM,EAAE,CAAC,EAAE,CAAC;SACb,CAAC,CAAC;IACL,CAAC;IAED,kBAAkB;QAChB,IAAI,CAAC,iBAAiB,GAAG,IAAI,0FAAiB,EAAE,CAAC;QACjD,IAAI,CAAC,iBAAiB,CAAC,MAAM,GAAG,uDAAe,CAAC,MAAM,CAAC;QACvD,IAAI,CAAC,qBAAqB,CAAC,eAAe,EAAE,CAAC;QAC7C,IAAI,CAAC,qBAAqB,CAAC,cAAc,EAAE,CAAC;IAC9C,CAAC;IAED,MAAM;QACJ,mDAAI,CAAC,IAAI,CAAC;YACR,IAAI,EAAE,0DAA0D;YAChE,IAAI,EAAE,UAAU;YAChB,gBAAgB,EAAE,IAAI;YACtB,kBAAkB,EAAE,SAAS;YAC7B,iBAAiB,EAAE,MAAM;YACzB,iBAAiB,EAAE,SAAS;SAC7B,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;YACjB,IAAI,MAAM,CAAC,KAAK,EAAE;gBAChB,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;gBACpB,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,iDAAS,CAAC,iBAAiB,EAAE,IAAI,CAAC,iBAAiB,CAAC,EAAE,CAAC,CAAC,SAAS,CAC1F,GAAG,EAAE;oBACH,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;oBACpB,IAAI,CAAC,iBAAiB,CAAC,oBAAoB,CAAC,0CAA0C,CAAC,CAAC;oBACxF,IAAI,CAAC,kBAAkB,EAAE,CAAC;oBAC1B,IAAI,CAAC,OAAO,EAAE,CAAC;gBACjB,CAAC,CACF,CAAC;aACH;QACH,CAAC,CAAC,CAAC;IACL,CAAC;CAEF;;YA3LQ,oDAAU;YAHV,0DAAW;YAGC,2DAAiB;YAG7B,8DAAiB;;;gCAWvB,uDAAS,SAAC,4DAAiB;;AAFjB,0BAA0B;IALtC,+DAAS,CAAC;QACT,QAAQ,EAAE,wBAAwB;QAClC,+FAAkD;;KAEnD,CAAC;GACW,0BAA0B,CA+KtC;AA/KsC","file":"email-notification-email-notification-module-es2015.js","sourcesContent":["import { CustomAngularEditorModule } from './../../applications/editor/lib/angular-editor.module';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { EmailNotificationRoutingModule } from './email-notification-routing.module';\r\nimport { EmailNotificationComponent } from './email-notification.component';\r\nimport { FragmentsModule } from 'app/modules/fragments/fragments.module';\r\nimport { AngularMaterialModule } from '@shared';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [EmailNotificationComponent],\r\n  imports: [\r\n    CommonModule,\r\n    EmailNotificationRoutingModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule,\r\n    AngularMaterialModule,\r\n    FragmentsModule,\r\n    CustomAngularEditorModule\r\n  ]\r\n})\r\nexport class EmailNotificationModule { }\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcGFnZXMvbWFpbnRlbmFuY2UvZW1haWwtbm90aWZpY2F0aW9uL2VtYWlsLW5vdGlmaWNhdGlvbi5jb21wb25lbnQuc2NzcyJ9 */\";","export * from './form-action-buttons/form-action-buttons.component';\r\nexport * from './form-list/form-list.component';","export default \"<form>\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12 title\\\">\\r\\n                <mat-label>\\r\\n                    Email Notification\\r\\n                </mat-label>\\r\\n            </div>\\r\\n        </div>\\r\\n        <hr>\\r\\n\\r\\n        <form [formGroup]=\\\"emailNotificationForm\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <mat-form-field class=\\\"col-md-4\\\" appearance=\\\"outline\\\">\\r\\n                    <mat-label>Email Code <span class=\\\"required-field\\\">*</span></mat-label>\\r\\n                    <input matInput [(ngModel)]=\\\"emailNotification.emailCode\\\" name=\\\"emailCode\\\"\\r\\n                        formControlName=\\\"emailCode\\\">\\r\\n                </mat-form-field>\\r\\n\\r\\n                <mat-form-field class=\\\"col-md-4\\\" appearance=\\\"outline\\\">\\r\\n                    <mat-label>Subject</mat-label>\\r\\n                    <input matInput [(ngModel)]=\\\"emailNotification.subject\\\" name=\\\"subject\\\" formControlName=\\\"subject\\\">\\r\\n                </mat-form-field>\\r\\n\\r\\n                <mat-form-field class=\\\"col-md-4\\\" appearance=\\\"outline\\\">\\r\\n                    <mat-label>Status</mat-label>\\r\\n                    <mat-select [(ngModel)]=\\\"emailNotification.status\\\" name=\\\"status\\\" formControlName=\\\"status\\\">\\r\\n                        <mat-option *ngFor=\\\"let i of statusList\\\" [value]=\\\"i.status\\\">\\r\\n                            {{i.status}}\\r\\n                        </mat-option>\\r\\n                    </mat-select>\\r\\n                </mat-form-field>\\r\\n\\r\\n                <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n                    <mat-label>Description</mat-label>\\r\\n                    <textarea matInput [(ngModel)]=\\\"emailNotification.description\\\" name=\\\"description\\\" formControlName=\\\"description\\\"></textarea>\\r\\n                </mat-form-field>\\r\\n\\r\\n                <div class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n                    <mat-label>Body</mat-label>\\r\\n                    <angular-editor \\r\\n                        [(ngModel)]=\\\"emailNotification.body\\\" \\r\\n                        [config]=\\\"editorConfig\\\" \\r\\n                        name=\\\"body\\\"\\r\\n                        formControlName=\\\"body\\\">\\r\\n                    </angular-editor><br>\\r\\n                </div>\\r\\n            </div>\\r\\n        </form>\\r\\n\\r\\n        <app-form-action-buttons [childObject]=\\\"emailNotification\\\" [childForm]=\\\"emailNotificationForm\\\"\\r\\n            (saveFunction)=\\\"save()\\\" (updateFunction)=\\\"update()\\\" (cancelFunction)=\\\"resetFormValidator()\\\"\\r\\n            (deleteFunction)=\\\"delete()\\\">\\r\\n        </app-form-action-buttons>\\r\\n        <br>\\r\\n        <app-form-list [dataSource]=\\\"dataSource\\\" [displayedColumns]=\\\"displayedColumns\\\"\\r\\n            (selectInListFunction)=\\\"getEmailNotification()\\\"></app-form-list>\\r\\n\\r\\n    </div>\\r\\n</form>\\r\\n\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { EmailNotificationComponent } from './email-notification.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: EmailNotificationComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class EmailNotificationRoutingModule { }\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { FormListComponent } from '@fragments';\r\nimport { ApiService, SweetAlertService } from '@services';\r\nimport { COMMON_FUNCTION, ENDPOINTS, STATUSES } from '@shared';\r\nimport { EmailNotification } from 'app/core/models/email-notification.model';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport Swal from 'sweetalert2';\r\nimport { AngularEditorConfig } from '../../applications/editor/public-api';\r\n\r\n@Component({\r\n  selector: 'app-email-notification',\r\n  templateUrl: './email-notification.component.html',\r\n  styleUrls: ['./email-notification.component.scss']\r\n})\r\nexport class EmailNotificationComponent implements OnInit {\r\n\r\n  @ViewChild(FormListComponent) formListComponent: FormListComponent;\r\n  dataSource: MatTableDataSource<EmailNotification>;\r\n  displayedColumns: string[] = ['emailCode', 'subject', 'description', 'status'];\r\n  statusList = [...STATUSES];\r\n\r\n  emailNotification = new EmailNotification();\r\n  emailNotificationList = [];\r\n\r\n  emailNotificationForm: FormGroup;\r\n\r\n  editorConfig: AngularEditorConfig = {\r\n    editable: true,\r\n      spellcheck: true,\r\n      height: '15em',\r\n      minHeight: '0',\r\n      maxHeight: 'auto',\r\n      width: 'auto',\r\n      minWidth: '0',\r\n      translate: 'no',\r\n      enableToolbar: true,\r\n      showToolbar: true,\r\n      placeholder: 'Enter email body message here...',\r\n      defaultParagraphSeparator: 'p',\r\n      defaultFontName: 'Arial',\r\n      defaultFontSize: '',\r\n      fonts: [\r\n        {class: 'arial', name: 'Arial'},\r\n        {class: 'times-new-roman', name: 'Times New Roman'},\r\n        {class: 'calibri', name: 'Calibri'},\r\n        {class: 'comic-sans-ms', name: 'Comic Sans MS'}\r\n      ],\r\n      customClasses: [\r\n      {\r\n        name: 'quote',\r\n        class: 'quote',\r\n      },\r\n      {\r\n        name: 'redText',\r\n        class: 'redText'\r\n      },\r\n      {\r\n        name: 'titleText',\r\n        class: 'titleText',\r\n        tag: 'h1',\r\n      },\r\n    ],\r\n    uploadUrl: 'v1/image',\r\n    // upload: (file: File) => { ... }\r\n    uploadWithCredentials: false,\r\n    sanitize: true,\r\n    toolbarPosition: 'top',\r\n    toolbarHiddenButtons: [\r\n      ['link',\r\n      'unlink',\r\n      'insertImage',\r\n      'insertVideo',],\r\n\r\n    ]\r\n};\r\n\r\n\r\n  constructor(\r\n    private apiService: ApiService,\r\n    private formBuilder: FormBuilder,\r\n    private sweetAlertService: SweetAlertService,\r\n    private spinner: NgxSpinnerService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.getList();\r\n    this.setFormValidator();\r\n  }\r\n\r\n  getList(): void {\r\n    this.apiService.findAll(ENDPOINTS.emailNotification).subscribe((res: any) => {\r\n      this.emailNotificationList = res.responseData.data;\r\n      this.dataSource = new MatTableDataSource<EmailNotification>(res.responseData.data);\r\n      this.dataSource.paginator = this.formListComponent.paginator;\r\n      this.dataSource.sort = this.formListComponent.sort;\r\n    });\r\n  }\r\n\r\n  save(): void{\r\n    this.spinner.show();\r\n    console.log(this.emailNotification);\r\n\r\n    this.apiService.save(ENDPOINTS.emailNotification, this.emailNotification).subscribe(\r\n        (res: any) => {\r\n          if (res !== undefined){\r\n            this.spinner.hide();\r\n            this.sweetAlertService.success(res);\r\n          }\r\n        }, (err: any) => {\r\n          this.spinner.hide();\r\n          this.sweetAlertService.error(err);\r\n        }, () => {\r\n          this.spinner.hide();\r\n          this.resetFormValidator(),\r\n          this.getList();\r\n        }\r\n    )\r\n  }\r\n\r\n  getEmailNotification(): void {\r\n    this.spinner.show();\r\n    this.apiService.findById(ENDPOINTS.emailNotification, this.formListComponent.idForUpdate).subscribe((res: any) => {\r\n      if (res) {\r\n        this.emailNotification = res.responseData.data;\r\n        console.log(res);\r\n        this.spinner.hide();\r\n      }\r\n    });\r\n  }\r\n\r\n  update(): void {\r\n    this.spinner.show();\r\n    this.apiService.update(ENDPOINTS.emailNotification, this.emailNotification).subscribe(\r\n      (res: any) => {\r\n        if (res !== undefined){\r\n          this.spinner.hide();\r\n          this.sweetAlertService.success(res);\r\n        }\r\n      }, (err: any) => {\r\n        this.spinner.hide();\r\n        this.sweetAlertService.error(err);\r\n      }, () => {\r\n        this.spinner.hide();\r\n        this.resetFormValidator()\r\n        this.getList();\r\n      });\r\n  }\r\n\r\n  setFormValidator(): void {\r\n    this.emailNotification.status = COMMON_FUNCTION.ACTIVE;\r\n    this.emailNotificationForm = this.formBuilder.group({\r\n      emailCode: ['', Validators.required],\r\n      subject: ['', Validators.required],\r\n      description: ['', Validators.required],\r\n      body: ['', Validators.required],\r\n      status: [''],\r\n    });\r\n  }\r\n\r\n  resetFormValidator(): void {\r\n    this.emailNotification = new EmailNotification();\r\n    this.emailNotification.status = COMMON_FUNCTION.ACTIVE;\r\n    this.emailNotificationForm.markAsUntouched();\r\n    this.emailNotificationForm.markAsPristine();\r\n  }\r\n\r\n  delete() {\r\n    Swal.fire({\r\n      text: 'Are you sure you want to delete this email notification?',\r\n      icon: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Confirm'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.spinner.show();\r\n        this.apiService.deleteById(ENDPOINTS.emailNotification, this.emailNotification.id).subscribe(\r\n          () => {\r\n            this.spinner.hide();\r\n            this.sweetAlertService.customSuccessMessage('Email notification successfully deleted.');\r\n            this.resetFormValidator();\r\n            this.getList();\r\n          }\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}