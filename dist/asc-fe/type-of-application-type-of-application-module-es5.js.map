{"version":3,"sources":["webpack:///src/app/modules/fragments/index.ts","webpack:///src/app/modules/pages/maintenance/type-of-application/type-of-application.module.ts","webpack:///src/app/modules/pages/maintenance/type-of-application/type-of-application-routing.module.ts","webpack:///src/app/modules/pages/maintenance/type-of-application/type-of-application.component.ts","webpack:///src/app/modules/pages/maintenance/type-of-application/type-of-application.component.html"],"names":["TypeOfApplicationModule","routes","path","component","TypeOfApplicationRoutingModule","forChild","TypeOfApplicationComponent","apiService","formBuilder","sweetAlertService","displayedColumns","statusList","typeOfApplication","typeOfApplicationList","formTypeList","getList","setFormValidator","findAll","applicationType","subscribe","res","console","log","responseData","data","dataSource","paginator","formListComponent","sort","save","undefined","success","err","error","resetFormValidator","findById","idForUpdate","update","formType","status","ACTIVE","typeOfApplicationForm","group","clearingReleaseTime","required","decisionReleaseTime","description","sequenceNo","submissionEndTime","submissionStartTime","markAsUntouched","markAsPristine","value","selected","fire","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","deleteById","id","customSuccessMessage","getTypeOfApplication"],"mappings":"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","file":"type-of-application-type-of-application-module-es5.js","sourcesContent":["export * from './form-action-buttons/form-action-buttons.component';\nexport * from './form-list/form-list.component';","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { TypeOfApplicationRoutingModule } from './type-of-application-routing.module';\nimport { TypeOfApplicationComponent } from './type-of-application.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { AngularMaterialModule } from '@shared';\nimport { FragmentsModule } from '../../../fragments/fragments.module';\n\n\n@NgModule({\n  declarations: [TypeOfApplicationComponent],\n  imports: [\n    CommonModule,\n    TypeOfApplicationRoutingModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    AngularMaterialModule,\n    FragmentsModule\n  ]\n})\nexport class TypeOfApplicationModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { TypeOfApplicationComponent } from './type-of-application.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TypeOfApplicationComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class TypeOfApplicationRoutingModule { }\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { FormListComponent } from '@fragments';\nimport { TypeOfApplication } from '@models';\nimport { ApiService, SweetAlertService } from '@services';\nimport { COMMON_FUNCTION, ENDPOINTS, FORM_TYPE, STATUSES } from '@shared';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-type-of-application',\n  templateUrl: './type-of-application.component.html',\n  styleUrls: ['./type-of-application.component.scss']\n})\nexport class TypeOfApplicationComponent implements OnInit {\n\n  @ViewChild(FormListComponent) formListComponent: FormListComponent;\n  dataSource: MatTableDataSource<TypeOfApplication>;\n  displayedColumns: string[] = ['description', 'clearingReleaseTime', 'decisionReleaseTime', 'submissionStartTime', 'submissionEndTime'];;\n  statusList = [...STATUSES];\n\n  typeOfApplication = new TypeOfApplication();\n  typeOfApplicationList = [];\n\n  formTypeList = [...FORM_TYPE];\n\n  typeOfApplicationForm: FormGroup;\n\n  constructor(\n    private apiService: ApiService,\n    private formBuilder: FormBuilder,\n    private sweetAlertService: SweetAlertService\n  ) { }\n\n  ngOnInit(): void {\n    this.getList();\n    this.setFormValidator();\n  }\n\n  getList(): void {\n    this.apiService.findAll(ENDPOINTS.applicationType).subscribe((res: any) => {\n      console.log(res.responseData.data);\n      this.typeOfApplicationList = res.responseData.data;\n      this.dataSource = new MatTableDataSource<TypeOfApplication>(res.responseData.data);\n      this.dataSource.paginator = this.formListComponent.paginator;\n      this.dataSource.sort = this.formListComponent.sort;\n    });\n  }\n\n  save(): void {\n    this.apiService.save(ENDPOINTS.applicationType, this.typeOfApplication).subscribe(\n      (res: any) => {\n        if (res !== undefined) {\n          this.sweetAlertService.success(res);\n        }\n      }, (err: any) => {\n        this.sweetAlertService.error(err);\n      }, () => {\n\n        this.resetFormValidator(),\n          this.getList();\n      }\n    )\n  }\n\n\n  getTypeOfApplication(): void {\n    this.apiService.findById(ENDPOINTS.applicationType, this.formListComponent.idForUpdate).subscribe((res: any) => {\n      if (res) {\n        this.typeOfApplication = res.responseData.data;\n      }\n    });\n  }\n\n\n  update(): void {\n    // this.typeOfApplication.modifiedBy = \"J. Dela Cruz\";\n    this.apiService.update(ENDPOINTS.applicationType, this.typeOfApplication).subscribe(\n      (res: any) => {\n        if (res !== undefined) {\n          this.sweetAlertService.success(res);\n        }\n      }, (err: any) => {\n        this.sweetAlertService.error(err);\n      }, () => {\n\n        this.resetFormValidator();\n        this.getList();\n      });\n  }\n\n  setFormValidator(): void {\n    formType: new FormControl();\n    this.typeOfApplication.status = COMMON_FUNCTION.ACTIVE;\n    this.typeOfApplicationForm = this.formBuilder.group({\n      // formType: ['', Validators.required],\n      clearingReleaseTime: ['', [Validators.required]],\n      decisionReleaseTime: ['', [Validators.required]],\n      description: ['', [Validators.required]],\n      sequenceNo: ['', [Validators.required]],\n      status: ['', [Validators.required]],\n      submissionEndTime: ['', [Validators.required]],\n      submissionStartTime: ['', [Validators.required]],\n    });\n  }\n\n  resetFormValidator(): void {\n    this.typeOfApplication = new TypeOfApplication();\n    this.typeOfApplication.status = COMMON_FUNCTION.ACTIVE;\n    this.typeOfApplicationForm.markAsUntouched();\n    this.typeOfApplicationForm.markAsPristine();\n\n  }\n\n  compareFormType(value: any, selected: any): boolean {\n    if (value && selected) {\n      return value.description === selected;\n    }\n  }\n\n  delete() {\n    Swal.fire({\n      text: 'Are you sure you want to delete this type of application?',\n      icon: 'question',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Confirm'\n    }).then((result) => {\n      if (result.value) {\n        this.apiService.deleteById(ENDPOINTS.applicationType, this.typeOfApplication.id).subscribe(\n          () => {\n            this.sweetAlertService.customSuccessMessage('Type of application successfully deleted.');\n            this.resetFormValidator();\n            this.getList();\n          }\n        );\n      }\n    });\n  }\n}\n","<br>\n<form>\n    <div class=\"container-fluid\">\n      <div class=\"row\">\n        <div class=\"col-md-12 title\">\n          <mat-label>\n             Type of Application\n          </mat-label>\n        </div>\n      </div>\n      <hr>\n\n      <form [formGroup]=\"typeOfApplicationForm\">\n        <div class=\"row\">\n\n          <mat-form-field class=\"col-md-4\" appearance=\"outline\">\n            <mat-label>Description <span class=\"required-field\">*</span></mat-label>\n            <input matInput [(ngModel)]=\"typeOfApplication.description\" name=\"description\" formControlName=\"description\">\n          </mat-form-field>\n\n          <mat-form-field class=\"col-md-4\" appearance=\"outline\">\n            <mat-label>Sequence Number <span class=\"required-field\">*</span></mat-label>\n            <input matInput [(ngModel)]=\"typeOfApplication.sequenceNo\" name=\"sequenceNo\" formControlName=\"sequenceNo\">\n          </mat-form-field>\n\n          <mat-form-field class=\"col-md-4\" appearance=\"outline\" *ngIf=\"typeOfApplication.id\">\n            <mat-label>Status</mat-label>\n            <mat-select [(ngModel)]=\"typeOfApplication.status\" name=\"status\" formControlName=\"status\">\n              <mat-option *ngFor=\"let i of statusList\" [value]=\"i.status\">\n                {{i.status}}\n              </mat-option>\n            </mat-select>\n          </mat-form-field>\n\n          <mat-form-field class=\"col-md-6\" appearance=\"outline\">\n            <mat-label>Clearing Release Time <span class=\"required-field\">*</span></mat-label>\n            <input matInput [(ngModel)]=\"typeOfApplication.clearingReleaseTime\" name=\"clearingReleaseTime\"\n              formControlName=\"clearingReleaseTime\">\n          </mat-form-field>\n\n          <mat-form-field class=\"col-md-6\" appearance=\"outline\">\n            <mat-label>Decision Release Time <span class=\"required-field\">*</span></mat-label>\n            <input matInput [(ngModel)]=\"typeOfApplication.decisionReleaseTime\" name=\"decisionReleaseTime\"\n              formControlName=\"decisionReleaseTime\">\n          </mat-form-field>\n\n          <mat-form-field class=\"col-md-6\" appearance=\"outline\">\n            <mat-label>Submission Start Time <span class=\"required-field\">*</span></mat-label>\n            <input matInput [(ngModel)]=\"typeOfApplication.submissionStartTime\" name=\"submissionStartTime\"\n              formControlName=\"submissionStartTime\">\n          </mat-form-field>\n\n          <mat-form-field class=\"col-md-6\" appearance=\"outline\">\n            <mat-label>Submission End Time <span class=\"required-field\">*</span></mat-label>\n            <input matInput [(ngModel)]=\"typeOfApplication.submissionEndTime\" name=\"submissionEndTime\"\n              formControlName=\"submissionEndTime\">\n          </mat-form-field>\n\n        </div>\n      </form>\n\n      <app-form-action-buttons [childObject]=\"typeOfApplication\" [childForm]=\"typeOfApplicationForm\" (saveFunction)=\"save()\"\n        (updateFunction)=\"update()\" (cancelFunction)=\"resetFormValidator()\" (deleteFunction)=\"delete()\"></app-form-action-buttons>\n        <br>\n        <app-form-list [dataSource]=\"dataSource\" [displayedColumns]=\"displayedColumns\"\n          (selectInListFunction)=\"getTypeOfApplication()\"></app-form-list>\n    </div>\n  </form>\n"]}