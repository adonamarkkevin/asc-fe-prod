{"version":3,"sources":["webpack:///src/app/modules/fragments/index.ts","webpack:///src/app/modules/pages/maintenance/type-of-application/type-of-application.component.scss","webpack:///src/app/modules/pages/maintenance/type-of-application/type-of-application.component.html","webpack:///src/app/modules/pages/maintenance/type-of-application/type-of-application.module.ts","webpack:///src/app/modules/pages/maintenance/type-of-application/type-of-application-routing.module.ts","webpack:///src/app/modules/pages/maintenance/type-of-application/type-of-application.component.ts"],"names":["TypeOfApplicationModule","declarations","imports","routes","path","component","TypeOfApplicationRoutingModule","forChild","exports","TypeOfApplicationComponent","apiService","formBuilder","sweetAlertService","displayedColumns","statusList","typeOfApplication","typeOfApplicationList","formTypeList","getList","setFormValidator","findAll","applicationType","subscribe","res","console","log","responseData","data","dataSource","paginator","formListComponent","sort","save","undefined","success","err","error","resetFormValidator","findById","idForUpdate","update","formType","status","ACTIVE","typeOfApplicationForm","group","clearingReleaseTime","required","decisionReleaseTime","description","sequenceNo","submissionEndTime","submissionStartTime","markAsUntouched","markAsPristine","value","selected","fire","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","deleteById","id","customSuccessMessage","selector","template"],"mappings":"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","file":"type-of-application-type-of-application-module-es5.js","sourcesContent":["export * from './form-action-buttons/form-action-buttons.component';\r\nexport * from './form-list/form-list.component';","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcGFnZXMvbWFpbnRlbmFuY2UvdHlwZS1vZi1hcHBsaWNhdGlvbi90eXBlLW9mLWFwcGxpY2F0aW9uLmNvbXBvbmVudC5zY3NzIn0= */\";","export default \"<br>\\r\\n<form>\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-12 title\\\">\\r\\n          <mat-label>\\r\\n             Type of Application\\r\\n          </mat-label>\\r\\n        </div>\\r\\n      </div>\\r\\n      <hr>\\r\\n\\r\\n      <form [formGroup]=\\\"typeOfApplicationForm\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n\\r\\n          <mat-form-field class=\\\"col-md-4\\\" appearance=\\\"outline\\\">\\r\\n            <mat-label>Description <span class=\\\"required-field\\\">*</span></mat-label>\\r\\n            <input matInput [(ngModel)]=\\\"typeOfApplication.description\\\" name=\\\"description\\\" formControlName=\\\"description\\\">\\r\\n          </mat-form-field>\\r\\n\\r\\n          <mat-form-field class=\\\"col-md-4\\\" appearance=\\\"outline\\\">\\r\\n            <mat-label>Sequence Number <span class=\\\"required-field\\\">*</span></mat-label>\\r\\n            <input matInput [(ngModel)]=\\\"typeOfApplication.sequenceNo\\\" name=\\\"sequenceNo\\\" formControlName=\\\"sequenceNo\\\">\\r\\n          </mat-form-field>\\r\\n\\r\\n          <mat-form-field class=\\\"col-md-4\\\" appearance=\\\"outline\\\" *ngIf=\\\"typeOfApplication.id\\\">\\r\\n            <mat-label>Status</mat-label>\\r\\n            <mat-select [(ngModel)]=\\\"typeOfApplication.status\\\" name=\\\"status\\\" formControlName=\\\"status\\\">\\r\\n              <mat-option *ngFor=\\\"let i of statusList\\\" [value]=\\\"i.status\\\">\\r\\n                {{i.status}}\\r\\n              </mat-option>\\r\\n            </mat-select>\\r\\n          </mat-form-field>\\r\\n\\r\\n          <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\">\\r\\n            <mat-label>Clearing Release Time <span class=\\\"required-field\\\">*</span></mat-label>\\r\\n            <input matInput [(ngModel)]=\\\"typeOfApplication.clearingReleaseTime\\\" name=\\\"clearingReleaseTime\\\"\\r\\n              formControlName=\\\"clearingReleaseTime\\\">\\r\\n          </mat-form-field>\\r\\n\\r\\n          <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\">\\r\\n            <mat-label>Decision Release Time <span class=\\\"required-field\\\">*</span></mat-label>\\r\\n            <input matInput [(ngModel)]=\\\"typeOfApplication.decisionReleaseTime\\\" name=\\\"decisionReleaseTime\\\"\\r\\n              formControlName=\\\"decisionReleaseTime\\\">\\r\\n          </mat-form-field>\\r\\n\\r\\n          <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\">\\r\\n            <mat-label>Submission Start Time <span class=\\\"required-field\\\">*</span></mat-label>\\r\\n            <input matInput [(ngModel)]=\\\"typeOfApplication.submissionStartTime\\\" name=\\\"submissionStartTime\\\"\\r\\n              formControlName=\\\"submissionStartTime\\\">\\r\\n          </mat-form-field>\\r\\n\\r\\n          <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\">\\r\\n            <mat-label>Submission End Time <span class=\\\"required-field\\\">*</span></mat-label>\\r\\n            <input matInput [(ngModel)]=\\\"typeOfApplication.submissionEndTime\\\" name=\\\"submissionEndTime\\\"\\r\\n              formControlName=\\\"submissionEndTime\\\">\\r\\n          </mat-form-field>\\r\\n\\r\\n        </div>\\r\\n      </form>\\r\\n\\r\\n      <app-form-action-buttons [childObject]=\\\"typeOfApplication\\\" [childForm]=\\\"typeOfApplicationForm\\\" (saveFunction)=\\\"save()\\\"\\r\\n        (updateFunction)=\\\"update()\\\" (cancelFunction)=\\\"resetFormValidator()\\\" (deleteFunction)=\\\"delete()\\\"></app-form-action-buttons>\\r\\n        <br>\\r\\n        <app-form-list [dataSource]=\\\"dataSource\\\" [displayedColumns]=\\\"displayedColumns\\\"\\r\\n          (selectInListFunction)=\\\"getTypeOfApplication()\\\"></app-form-list>\\r\\n    </div>\\r\\n  </form>\\r\\n\";","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { TypeOfApplicationRoutingModule } from './type-of-application-routing.module';\r\nimport { TypeOfApplicationComponent } from './type-of-application.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { AngularMaterialModule } from '@shared';\r\nimport { FragmentsModule } from '../../../fragments/fragments.module';\r\n\r\n\r\n@NgModule({\r\n  declarations: [TypeOfApplicationComponent],\r\n  imports: [\r\n    CommonModule,\r\n    TypeOfApplicationRoutingModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule,\r\n    AngularMaterialModule,\r\n    FragmentsModule\r\n  ]\r\n})\r\nexport class TypeOfApplicationModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { TypeOfApplicationComponent } from './type-of-application.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: TypeOfApplicationComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class TypeOfApplicationRoutingModule { }\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { FormListComponent } from '@fragments';\r\nimport { TypeOfApplication } from '@models';\r\nimport { ApiService, SweetAlertService } from '@services';\r\nimport { COMMON_FUNCTION, ENDPOINTS, FORM_TYPE, STATUSES } from '@shared';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-type-of-application',\r\n  templateUrl: './type-of-application.component.html',\r\n  styleUrls: ['./type-of-application.component.scss']\r\n})\r\nexport class TypeOfApplicationComponent implements OnInit {\r\n\r\n  @ViewChild(FormListComponent) formListComponent: FormListComponent;\r\n  dataSource: MatTableDataSource<TypeOfApplication>;\r\n  displayedColumns: string[] = ['description', 'clearingReleaseTime', 'decisionReleaseTime', 'submissionStartTime', 'submissionEndTime'];;\r\n  statusList = [...STATUSES];\r\n\r\n  typeOfApplication = new TypeOfApplication();\r\n  typeOfApplicationList = [];\r\n\r\n  formTypeList = [...FORM_TYPE];\r\n\r\n  typeOfApplicationForm: FormGroup;\r\n\r\n  constructor(\r\n    private apiService: ApiService,\r\n    private formBuilder: FormBuilder,\r\n    private sweetAlertService: SweetAlertService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getList();\r\n    this.setFormValidator();\r\n  }\r\n\r\n  getList(): void {\r\n    this.apiService.findAll(ENDPOINTS.applicationType).subscribe((res: any) => {\r\n      console.log(res.responseData.data);\r\n      this.typeOfApplicationList = res.responseData.data;\r\n      this.dataSource = new MatTableDataSource<TypeOfApplication>(res.responseData.data);\r\n      this.dataSource.paginator = this.formListComponent.paginator;\r\n      this.dataSource.sort = this.formListComponent.sort;\r\n    });\r\n  }\r\n\r\n  save(): void {\r\n    this.apiService.save(ENDPOINTS.applicationType, this.typeOfApplication).subscribe(\r\n      (res: any) => {\r\n        if (res !== undefined) {\r\n          this.sweetAlertService.success(res);\r\n        }\r\n      }, (err: any) => {\r\n        this.sweetAlertService.error(err);\r\n      }, () => {\r\n\r\n        this.resetFormValidator(),\r\n          this.getList();\r\n      }\r\n    )\r\n  }\r\n\r\n\r\n  getTypeOfApplication(): void {\r\n    this.apiService.findById(ENDPOINTS.applicationType, this.formListComponent.idForUpdate).subscribe((res: any) => {\r\n      if (res) {\r\n        this.typeOfApplication = res.responseData.data;\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  update(): void {\r\n    // this.typeOfApplication.modifiedBy = \"J. Dela Cruz\";\r\n    this.apiService.update(ENDPOINTS.applicationType, this.typeOfApplication).subscribe(\r\n      (res: any) => {\r\n        if (res !== undefined) {\r\n          this.sweetAlertService.success(res);\r\n        }\r\n      }, (err: any) => {\r\n        this.sweetAlertService.error(err);\r\n      }, () => {\r\n\r\n        this.resetFormValidator();\r\n        this.getList();\r\n      });\r\n  }\r\n\r\n  setFormValidator(): void {\r\n    formType: new FormControl();\r\n    this.typeOfApplication.status = COMMON_FUNCTION.ACTIVE;\r\n    this.typeOfApplicationForm = this.formBuilder.group({\r\n      // formType: ['', Validators.required],\r\n      clearingReleaseTime: ['', [Validators.required]],\r\n      decisionReleaseTime: ['', [Validators.required]],\r\n      description: ['', [Validators.required]],\r\n      sequenceNo: ['', [Validators.required]],\r\n      status: ['', [Validators.required]],\r\n      submissionEndTime: ['', [Validators.required]],\r\n      submissionStartTime: ['', [Validators.required]],\r\n    });\r\n  }\r\n\r\n  resetFormValidator(): void {\r\n    this.typeOfApplication = new TypeOfApplication();\r\n    this.typeOfApplication.status = COMMON_FUNCTION.ACTIVE;\r\n    this.typeOfApplicationForm.markAsUntouched();\r\n    this.typeOfApplicationForm.markAsPristine();\r\n\r\n  }\r\n\r\n  compareFormType(value: any, selected: any): boolean {\r\n    if (value && selected) {\r\n      return value.description === selected;\r\n    }\r\n  }\r\n\r\n  delete() {\r\n    Swal.fire({\r\n      text: 'Are you sure you want to delete this type of application?',\r\n      icon: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Confirm'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.apiService.deleteById(ENDPOINTS.applicationType, this.typeOfApplication.id).subscribe(\r\n          () => {\r\n            this.sweetAlertService.customSuccessMessage('Type of application successfully deleted.');\r\n            this.resetFormValidator();\r\n            this.getList();\r\n          }\r\n        );\r\n      }\r\n    });\r\n  }\r\n}\r\n"]}