{"version":3,"sources":["webpack:///src/app/modules/pages/accounting/list-payment/list-payment.component.ts","webpack:///src/app/modules/pages/accounting/list-payment/list-payment.component.html","webpack:///src/app/modules/pages/accounting/list-payment/list-payment.module.ts","webpack:///src/app/modules/pages/accounting/list-payment/list-payment-routing.module.ts"],"names":["ListPaymentComponent","router","apiService","displayedColumns","paymentList","pageSize","pageNo","currentPage","totalItems","pageSizeOptions","doFilter","value","dataSource","filter","trim","toLocaleLowerCase","getS1PaymentList","endpoint","findAll","accountingPaymentForApprovals","subscribe","res","responseData","data","console","log","sort","event","pageIndex","length","id","navigate","pageEvents","ListPaymentModule","routes","path","component","ListPaymentRoutingModule","forChild"],"mappings":"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","file":"default~applications-applications-module~list-payment-list-payment-module-es5.js","sourcesContent":["import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTable, MatTableDataSource } from '@angular/material/table';\r\nimport { Payment } from '@models';\r\nimport { ENDPOINTS } from '@shared';\r\nimport { ApiService } from '@services';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-list-payment',\r\n  templateUrl: './list-payment.component.html',\r\n  styleUrls: ['./list-payment.component.scss']\r\n})\r\nexport class ListPaymentComponent implements OnInit {\r\n\r\n  @ViewChild(MatPaginator, { static: false }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: false }) sort: MatSort;\r\n  @ViewChild(MatTable, { static: false }) table: MatTable<Object>;\r\n  dataSource: MatTableDataSource<Payment>\r\n  displayedColumns: string[] = ['referenceCode', 'typeOfApplication', 'brand', 'typeOfMedium', 'companyName', 'paymentStatus'];\r\n  paymentList = [];\r\n  pageSize = 10;\r\n  pageNo = 0;\r\n  currentPage = 1;\r\n  totalItems = 0;\r\n  pageSizeOptions: number[] = [10, 20, 50];\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private apiService: ApiService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getS1PaymentList();\r\n  }\r\n\r\n  getS1PaymentList() {\r\n    let endpoint = `?page=${this.currentPage}&size=${this.pageSize}`;\r\n    this.apiService.findAll(ENDPOINTS.accountingPaymentForApprovals + endpoint).subscribe((res: any) => {\r\n      this.paymentList = res.responseData.data;\r\n      console.log('payment list:: ', this.paymentList);\r\n\r\n      this.dataSource = new MatTableDataSource<Payment>(this.paymentList);\r\n      // this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    });\r\n    console.log('Whuy', this.paymentList)\r\n  }\r\n\r\n  pageEvents(event: any) {\r\n    this.pageSize = event.pageSize;\r\n\r\n    if (event.pageIndex > this.pageNo) {\r\n      this.pageNo++;\r\n    } else {\r\n      this.pageNo--;\r\n    }\r\n\r\n    if (event.pageSize > event.length) {\r\n      this.pageNo = 0;\r\n    }\r\n\r\n    this.getS1PaymentList();\r\n  }\r\n\r\n  getPaymentDetails(id) {\r\n    this.router.navigate(['asc/page/accounting/update/', id]);\r\n  }\r\n\r\n  public doFilter = (value: string) => {\r\n    this.dataSource.filter = value.trim().toLocaleLowerCase();\r\n   }\r\n\r\n\r\n\r\n}\r\n","<form>\r\n  <div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12 title\">\r\n        <mat-label>\r\n          <mat-icon>view_list</mat-icon>  PROOF OF PAYMENTS\r\n        </mat-label>\r\n\r\n        <!-- <button class=\"button-right button-red\" mat-raised-button [routerLink]=\"['/asc/page/accounting/add']\">\r\n          <mat-icon>add</mat-icon> NEW PAYMENT\r\n        </button> -->\r\n      </div>\r\n    </div>\r\n    <br>\r\n\r\n    <div class=\"col-md-12\" fxLayout fxLayoutAlign=\"center center\">\r\n      <mat-form-field>\r\n        <input matInput type=\"text\" (keyup)=\"doFilter($event.target.value)\" placeholder=\"Search\">\r\n      </mat-form-field>\r\n    </div>\r\n\r\n    <div class=\"mat-elevation-z8 fields\">\r\n      <table mat-table [dataSource]=\"dataSource\" matSort>\r\n\r\n        <ng-container matColumnDef=\"referenceCode\">\r\n          <th mat-header-cell *matHeaderCellDef > REFERENCE CODE </th>\r\n          <td mat-cell *matCellDef=\"let element\" (click)=\"getPaymentDetails(element.id)\">\r\n            {{ element?.applicationForm?.referenceCode }} </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"typeOfApplication\">\r\n          <th mat-header-cell *matHeaderCellDef > TYPE OF APPLICATION </th>\r\n          <td mat-cell *matCellDef=\"let element\" (click)=\"getPaymentDetails(element.id)\">\r\n            {{ element?.applicationForm?.applicationType?.description }} </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"brand\">\r\n          <th mat-header-cell *matHeaderCellDef > BRAND </th>\r\n          <td mat-cell *matCellDef=\"let element\" (click)=\"getPaymentDetails(element.id)\">\r\n            {{ element?.applicationForm?.brand?.description }} </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"typeOfMedium\">\r\n          <th mat-header-cell *matHeaderCellDef > TYPE OF MEDIUM </th>\r\n          <td mat-cell *matCellDef=\"let element\" (click)=\"getPaymentDetails(element.id)\">\r\n            {{ element?.applicationForm?.refTypeOfMedium }} </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"companyName\">\r\n          <th mat-header-cell *matHeaderCellDef > PRESENTOR'S COMPANY NAME </th>\r\n          <td mat-cell *matCellDef=\"let element\" (click)=\"getPaymentDetails(element.id)\">\r\n            {{ element?.applicationForm?.applicationOwner?.company?.companyName }} </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"paymentStatus\">\r\n          <th mat-header-cell *matHeaderCellDef > PAYMENT STATUS </th>\r\n          <td mat-cell *matCellDef=\"let element\" (click)=\"getPaymentDetails(element.id)\">\r\n            {{ element?.paymentStatus }} </td>\r\n        </ng-container>\r\n\r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n      </table>\r\n      <div class=\"no-record\" [hidden]=\"dataSource && dataSource?.data?.length > 0\">\r\n        No record found.\r\n      </div>\r\n      <mat-paginator [pageSize]=\"pageSize\" [pageIndex]=\"pageNo\" [length]=\"totalItems\"\r\n      [pageSizeOptions]=\"pageSizeOptions\" (page)=\"pageEvents($event)\">\r\n      </mat-paginator>\r\n\r\n    </div>\r\n  </div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { ListPaymentRoutingModule } from './list-payment-routing.module';\r\nimport { ListPaymentComponent } from './list-payment.component';\r\nimport { AngularMaterialModule } from '@shared';\r\n\r\n\r\n@NgModule({\r\n  declarations: [ListPaymentComponent],\r\n  imports: [\r\n    CommonModule,\r\n    ListPaymentRoutingModule,\r\n    AngularMaterialModule\r\n  ]\r\n})\r\nexport class ListPaymentModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ListPaymentComponent } from './list-payment.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ListPaymentComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ListPaymentRoutingModule { }\r\n"]}