{"version":3,"sources":["webpack:///src/app/modules/fragments/index.ts","webpack:///src/app/modules/pages/maintenance/company-penalties/company-penalties.component.ts","webpack:///src/app/modules/pages/maintenance/company-penalties/company-penalties-routing.module.ts","webpack:///src/app/modules/pages/maintenance/company-penalties/company-penalties.component.scss","webpack:///src/app/modules/pages/maintenance/company-penalties/company-penalties.component.html","webpack:///src/app/modules/pages/maintenance/company-penalties/company-penalties.module.ts"],"names":["CompanyPenaltiesComponent","apiService","formBuilder","sweetAlertService","datepipe","displayedColumns","companyPenalties","companyPenaltiesList","companyList","setFormValidator","getCompanyList","getCompanyPenaltiesList","findAll","subscribe","res","responseData","data","dataSource","paginator","formListComponent","sort","findById","idForUpdate","console","log","activeCompanies","formatDate","save","success","error","resetFormValidator","update","companyPenaltiesForm","group","company","required","penaltyAmount","markAsUntouched","markAsPristine","value","selected","description","transform","penaltyDate","fire","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","deleteById","id","customSuccessMessage","selector","template","routes","path","component","CompanyPenaltiesRoutingModule","imports","forChild","exports","CompanyPenaltiesModule","declarations"],"mappings":"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","file":"company-penalties-company-penalties-module-es5.js","sourcesContent":["export * from './form-action-buttons/form-action-buttons.component';\r\nexport * from './form-list/form-list.component';","import { DatePipe } from '@angular/common';\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { FormListComponent } from '@fragments';\r\nimport { ApiService, SweetAlertService } from '@services';\r\nimport { ENDPOINTS } from '@shared';\r\nimport { CompanyPenalties } from 'app/core/models/company-penalties.model';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-company-penalties',\r\n  templateUrl: './company-penalties.component.html',\r\n  styleUrls: ['./company-penalties.component.scss']\r\n})\r\nexport class CompanyPenaltiesComponent implements OnInit {\r\n\r\n  @ViewChild(FormListComponent) formListComponent: FormListComponent\r\n  dataSource: MatTableDataSource<CompanyPenalties>;\r\n  // displayedColumns: string[] = ['companyDescription', 'companyPenaltyAmount', 'deleteIcon'];\r\n  displayedColumns: string[] = ['companyDescription', 'companyPenaltyAmount'];\r\n  companyPenalties = new CompanyPenalties();\r\n  companyPenaltiesList = [];\r\n  companyList = [];\r\n  companyPenaltiesForm: FormGroup;\r\n\r\n  constructor(\r\n    private apiService: ApiService,\r\n    private formBuilder: FormBuilder,\r\n    private sweetAlertService: SweetAlertService,\r\n    public datepipe: DatePipe\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.setFormValidator();\r\n    this.getCompanyList();\r\n    this.getCompanyPenaltiesList();\r\n  }\r\n\r\n  getCompanyPenaltiesList(): void {\r\n    this.apiService.findAll(ENDPOINTS.companyPenalties).subscribe(\r\n      (res: any) => {\r\n      if (res) {\r\n        this.companyPenaltiesList = res.responseData.data;\r\n        this.dataSource = new MatTableDataSource<CompanyPenalties>(res.responseData.data);\r\n        this.dataSource.paginator = this.formListComponent.paginator;\r\n        this.dataSource.sort = this.formListComponent.sort;\r\n      }\r\n    });\r\n  }\r\n\r\n  getCompanyPenalties(): void {\r\n    this.apiService.findById(ENDPOINTS.companyPenalties, this.formListComponent.idForUpdate).subscribe((res: any) => {\r\n      if (res) {\r\n\r\n        this.companyPenalties = res.responseData.data;\r\n        console.log(this.companyPenalties);\r\n      }\r\n    });\r\n  }\r\n\r\n  getCompanyList(): void {\r\n    this.apiService.findAll(ENDPOINTS.activeCompanies).subscribe(\r\n      (res: any) => {\r\n      if (res) {\r\n        this.companyList = res.responseData.data;\r\n      }\r\n    });\r\n  }\r\n\r\n  save(): void {\r\n    this.formatDate();\r\n    this.apiService.save(ENDPOINTS.companyPenalties, this.companyPenalties).subscribe(\r\n      (res: any) => {\r\n      if (res) {\r\n        this.sweetAlertService.success(res);\r\n      }else{\r\n        this.sweetAlertService.error(res);\r\n      }\r\n      this.getCompanyPenaltiesList();\r\n      this.resetFormValidator();\r\n    });\r\n  }\r\n\r\n  update(): void {\r\n    this.apiService.update(ENDPOINTS.companyPenalties, this.companyPenalties).subscribe(\r\n      (res: any) => {\r\n      if (res) {\r\n        this.sweetAlertService.success(res);\r\n      }else{\r\n        this.sweetAlertService.error(res);\r\n      }\r\n      this.getCompanyPenaltiesList();\r\n      this.resetFormValidator();\r\n    });\r\n  }\r\n\r\n  setFormValidator(): void {\r\n    this.companyPenaltiesForm = this.formBuilder.group({\r\n      company: ['', Validators.required],\r\n      penaltyAmount: ['', Validators.required],\r\n      // penaltyDate: ['', Validators.required],\r\n    });\r\n  }\r\n\r\n  resetFormValidator(): void {\r\n    this.companyPenalties = new CompanyPenalties();\r\n    this.companyPenaltiesForm.markAsUntouched();\r\n    this.companyPenaltiesForm.markAsPristine();\r\n  }\r\n\r\n  compareCompanyPenalties(value: any, selected: any): boolean {\r\n    if (value && selected) {\r\n      return value.description === selected.description;\r\n    }\r\n  }\r\n\r\n  formatDate(): void {\r\n    // this.brandPenalties.penaltyDate = this.datepipe.transform(new Date(), 'yyyy-MM-dd')\r\n    this.datepipe.transform(this.companyPenalties.penaltyDate, 'yyyy-MM-dd')\r\n  }\r\n\r\n  delete() {\r\n    Swal.fire({\r\n      text: 'Are you sure you want to delete this company penalty?',\r\n      icon: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Confirm'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.apiService.deleteById(ENDPOINTS.companyPenalties, this.companyPenalties.id).subscribe(\r\n          () => {\r\n            this.sweetAlertService.customSuccessMessage('Company penalty successfully deleted.');\r\n            this.resetFormValidator();\r\n            this.getCompanyList();\r\n            this.getCompanyPenaltiesList();\r\n          }\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { CompanyPenaltiesComponent } from './company-penalties.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: CompanyPenaltiesComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class CompanyPenaltiesRoutingModule { }\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcGFnZXMvbWFpbnRlbmFuY2UvY29tcGFueS1wZW5hbHRpZXMvY29tcGFueS1wZW5hbHRpZXMuY29tcG9uZW50LnNjc3MifQ== */\";","export default \"<form>\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-12 title\\\">\\r\\n          <mat-label>\\r\\n            <mat-icon>turned_in</mat-icon> Company Penalties\\r\\n          </mat-label>\\r\\n        </div>\\r\\n      </div>\\r\\n      <hr>\\r\\n\\r\\n      <form [formGroup]=\\\"companyPenaltiesForm\\\">\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n          <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\">\\r\\n            <mat-label>Company <span class=\\\"required-field\\\">*</span></mat-label>\\r\\n            <mat-select [(ngModel)]=\\\"companyPenalties.company\\\" name=\\\"company\\\" formControlName=\\\"company\\\" [compareWith]=\\\"compareCompanyPenalties\\\">\\r\\n              <mat-option *ngFor=\\\"let i of companyList\\\" [value]=\\\"i\\\">\\r\\n                {{i.companyName}}\\r\\n              </mat-option>\\r\\n            </mat-select>\\r\\n          </mat-form-field>\\r\\n\\r\\n          <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\">\\r\\n            <mat-label>Penalty Amount <span class=\\\"required-field\\\">*</span></mat-label>\\r\\n            <input matInput [(ngModel)]=\\\"companyPenalties.penaltyAmount\\\" name=\\\"penaltyAmount\\\" formControlName=\\\"penaltyAmount\\\">\\r\\n        </mat-form-field>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n            <!-- <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\">\\r\\n            <mat-label>Choose date penalty</mat-label>\\r\\n            <input matInput [matDatepicker]=\\\"picker\\\" readonly [(ngModel)]=\\\"brandPenalties.penaltyDate\\\" name=\\\"penaltyDate\\\"\\r\\n              formControlName=\\\"penaltyDate\\\" (dateChange)=\\\"test()\\\">\\r\\n            <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\r\\n            <mat-datepicker #picker disabled=\\\"false\\\" color=\\\"warn\\\"></mat-datepicker>\\r\\n          </mat-form-field> -->\\r\\n        </div>\\r\\n      </form>\\r\\n\\r\\n      <app-form-action-buttons [childObject]=\\\"companyPenalties\\\" [childForm]=\\\"companyPenaltiesForm\\\" (saveFunction)=\\\"save()\\\" (updateFunction)=\\\"update()\\\"\\r\\n              (cancelFunction)=\\\"resetFormValidator()\\\" (deleteFunction)=\\\"delete()\\\">\\r\\n      </app-form-action-buttons>\\r\\n      <br>\\r\\n      <app-form-list [dataSource]=\\\"dataSource\\\" [displayedColumns]=\\\"displayedColumns\\\"\\r\\n          (selectInListFunction)=\\\"getCompanyPenalties()\\\">\\r\\n          <!-- (deleteInListFunction)=\\\"delete()\\\" -->\\r\\n      </app-form-list>\\r\\n\\r\\n    </div>\\r\\n  </form>\\r\\n\";","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { CompanyPenaltiesRoutingModule } from './company-penalties-routing.module';\r\nimport { CompanyPenaltiesComponent } from './company-penalties.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { AngularMaterialModule } from '@shared';\r\nimport { FragmentsModule } from 'app/modules/fragments/fragments.module';\r\n\r\n\r\n@NgModule({\r\n  declarations: [CompanyPenaltiesComponent],\r\n  imports: [\r\n    CommonModule,\r\n    CompanyPenaltiesRoutingModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule,\r\n    AngularMaterialModule,\r\n    FragmentsModule\r\n  ]\r\n})\r\nexport class CompanyPenaltiesModule { }\r\n"]}