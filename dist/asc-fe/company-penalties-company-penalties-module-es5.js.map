{"version":3,"sources":["webpack:///src/app/modules/fragments/index.ts","webpack:///src/app/modules/pages/maintenance/company-penalties/company-penalties.component.ts","webpack:///src/app/modules/pages/maintenance/company-penalties/company-penalties.component.html","webpack:///src/app/modules/pages/maintenance/company-penalties/company-penalties-routing.module.ts","webpack:///src/app/modules/pages/maintenance/company-penalties/company-penalties.module.ts"],"names":["CompanyPenaltiesComponent","apiService","formBuilder","sweetAlertService","datepipe","displayedColumns","companyPenalties","companyPenaltiesList","companyList","setFormValidator","getCompanyList","getCompanyPenaltiesList","findAll","subscribe","res","responseData","data","dataSource","paginator","formListComponent","sort","findById","idForUpdate","console","log","activeCompanies","formatDate","save","success","error","resetFormValidator","update","companyPenaltiesForm","group","company","required","penaltyAmount","markAsUntouched","markAsPristine","value","selected","description","transform","penaltyDate","fire","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","deleteById","id","customSuccessMessage","getCompanyPenalties","routes","path","component","CompanyPenaltiesRoutingModule","forChild","CompanyPenaltiesModule"],"mappings":"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","file":"company-penalties-company-penalties-module-es5.js","sourcesContent":["export * from './form-action-buttons/form-action-buttons.component';\r\nexport * from './form-list/form-list.component';","import { DatePipe } from '@angular/common';\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { FormListComponent } from '@fragments';\r\nimport { ApiService, SweetAlertService } from '@services';\r\nimport { ENDPOINTS } from '@shared';\r\nimport { CompanyPenalties } from 'app/core/models/company-penalties.model';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-company-penalties',\r\n  templateUrl: './company-penalties.component.html',\r\n  styleUrls: ['./company-penalties.component.scss']\r\n})\r\nexport class CompanyPenaltiesComponent implements OnInit {\r\n\r\n  @ViewChild(FormListComponent) formListComponent: FormListComponent\r\n  dataSource: MatTableDataSource<CompanyPenalties>;\r\n  // displayedColumns: string[] = ['companyDescription', 'companyPenaltyAmount', 'deleteIcon'];\r\n  displayedColumns: string[] = ['companyDescription', 'companyPenaltyAmount'];\r\n  companyPenalties = new CompanyPenalties();\r\n  companyPenaltiesList = [];\r\n  companyList = [];\r\n  companyPenaltiesForm: FormGroup;\r\n\r\n  constructor(\r\n    private apiService: ApiService,\r\n    private formBuilder: FormBuilder,\r\n    private sweetAlertService: SweetAlertService,\r\n    public datepipe: DatePipe\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.setFormValidator();\r\n    this.getCompanyList();\r\n    this.getCompanyPenaltiesList();\r\n  }\r\n\r\n  getCompanyPenaltiesList(): void {\r\n    this.apiService.findAll(ENDPOINTS.companyPenalties).subscribe(\r\n      (res: any) => {\r\n      if (res) {\r\n        this.companyPenaltiesList = res.responseData.data;\r\n        this.dataSource = new MatTableDataSource<CompanyPenalties>(res.responseData.data);\r\n        this.dataSource.paginator = this.formListComponent.paginator;\r\n        this.dataSource.sort = this.formListComponent.sort;\r\n      }\r\n    });\r\n  }\r\n\r\n  getCompanyPenalties(): void {\r\n    this.apiService.findById(ENDPOINTS.companyPenalties, this.formListComponent.idForUpdate).subscribe((res: any) => {\r\n      if (res) {\r\n\r\n        this.companyPenalties = res.responseData.data;\r\n        console.log(this.companyPenalties);\r\n      }\r\n    });\r\n  }\r\n\r\n  getCompanyList(): void {\r\n    this.apiService.findAll(ENDPOINTS.activeCompanies).subscribe(\r\n      (res: any) => {\r\n      if (res) {\r\n        this.companyList = res.responseData.data;\r\n      }\r\n    });\r\n  }\r\n\r\n  save(): void {\r\n    this.formatDate();\r\n    this.apiService.save(ENDPOINTS.companyPenalties, this.companyPenalties).subscribe(\r\n      (res: any) => {\r\n      if (res) {\r\n        this.sweetAlertService.success(res);\r\n      }else{\r\n        this.sweetAlertService.error(res);\r\n      }\r\n      this.getCompanyPenaltiesList();\r\n      this.resetFormValidator();\r\n    });\r\n  }\r\n\r\n  update(): void {\r\n    this.apiService.update(ENDPOINTS.companyPenalties, this.companyPenalties).subscribe(\r\n      (res: any) => {\r\n      if (res) {\r\n        this.sweetAlertService.success(res);\r\n      }else{\r\n        this.sweetAlertService.error(res);\r\n      }\r\n      this.getCompanyPenaltiesList();\r\n      this.resetFormValidator();\r\n    });\r\n  }\r\n\r\n  setFormValidator(): void {\r\n    this.companyPenaltiesForm = this.formBuilder.group({\r\n      company: ['', Validators.required],\r\n      penaltyAmount: ['', Validators.required],\r\n      // penaltyDate: ['', Validators.required],\r\n    });\r\n  }\r\n\r\n  resetFormValidator(): void {\r\n    this.companyPenalties = new CompanyPenalties();\r\n    this.companyPenaltiesForm.markAsUntouched();\r\n    this.companyPenaltiesForm.markAsPristine();\r\n  }\r\n\r\n  compareCompanyPenalties(value: any, selected: any): boolean {\r\n    if (value && selected) {\r\n      return value.description === selected.description;\r\n    }\r\n  }\r\n\r\n  formatDate(): void {\r\n    // this.brandPenalties.penaltyDate = this.datepipe.transform(new Date(), 'yyyy-MM-dd')\r\n    this.datepipe.transform(this.companyPenalties.penaltyDate, 'yyyy-MM-dd')\r\n  }\r\n\r\n  delete() {\r\n    Swal.fire({\r\n      text: 'Are you sure you want to delete this company penalty?',\r\n      icon: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Confirm'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.apiService.deleteById(ENDPOINTS.companyPenalties, this.companyPenalties.id).subscribe(\r\n          () => {\r\n            this.sweetAlertService.customSuccessMessage('Company penalty successfully deleted.');\r\n            this.resetFormValidator();\r\n            this.getCompanyList();\r\n            this.getCompanyPenaltiesList();\r\n          }\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<form>\r\n    <div class=\"container-fluid\">\r\n      <div class=\"row\">\r\n        <div class=\"col-md-12 title\">\r\n          <mat-label>\r\n            <mat-icon>turned_in</mat-icon> Company Penalties\r\n          </mat-label>\r\n        </div>\r\n      </div>\r\n      <hr>\r\n\r\n      <form [formGroup]=\"companyPenaltiesForm\">\r\n\r\n        <div class=\"row\">\r\n          <mat-form-field class=\"col-md-6\" appearance=\"outline\">\r\n            <mat-label>Company <span class=\"required-field\">*</span></mat-label>\r\n            <mat-select [(ngModel)]=\"companyPenalties.company\" name=\"company\" formControlName=\"company\" [compareWith]=\"compareCompanyPenalties\">\r\n              <mat-option *ngFor=\"let i of companyList\" [value]=\"i\">\r\n                {{i.companyName}}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field class=\"col-md-6\" appearance=\"outline\">\r\n            <mat-label>Penalty Amount <span class=\"required-field\">*</span></mat-label>\r\n            <input matInput [(ngModel)]=\"companyPenalties.penaltyAmount\" name=\"penaltyAmount\" formControlName=\"penaltyAmount\">\r\n        </mat-form-field>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n            <!-- <mat-form-field class=\"col-md-6\" appearance=\"outline\">\r\n            <mat-label>Choose date penalty</mat-label>\r\n            <input matInput [matDatepicker]=\"picker\" readonly [(ngModel)]=\"brandPenalties.penaltyDate\" name=\"penaltyDate\"\r\n              formControlName=\"penaltyDate\" (dateChange)=\"test()\">\r\n            <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n            <mat-datepicker #picker disabled=\"false\" color=\"warn\"></mat-datepicker>\r\n          </mat-form-field> -->\r\n        </div>\r\n      </form>\r\n\r\n      <app-form-action-buttons [childObject]=\"companyPenalties\" [childForm]=\"companyPenaltiesForm\" (saveFunction)=\"save()\" (updateFunction)=\"update()\"\r\n              (cancelFunction)=\"resetFormValidator()\" (deleteFunction)=\"delete()\">\r\n      </app-form-action-buttons>\r\n      <br>\r\n      <app-form-list [dataSource]=\"dataSource\" [displayedColumns]=\"displayedColumns\"\r\n          (selectInListFunction)=\"getCompanyPenalties()\">\r\n          <!-- (deleteInListFunction)=\"delete()\" -->\r\n      </app-form-list>\r\n\r\n    </div>\r\n  </form>\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { CompanyPenaltiesComponent } from './company-penalties.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: CompanyPenaltiesComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class CompanyPenaltiesRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { CompanyPenaltiesRoutingModule } from './company-penalties-routing.module';\r\nimport { CompanyPenaltiesComponent } from './company-penalties.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { AngularMaterialModule } from '@shared';\r\nimport { FragmentsModule } from 'app/modules/fragments/fragments.module';\r\n\r\n\r\n@NgModule({\r\n  declarations: [CompanyPenaltiesComponent],\r\n  imports: [\r\n    CommonModule,\r\n    CompanyPenaltiesRoutingModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule,\r\n    AngularMaterialModule,\r\n    FragmentsModule\r\n  ]\r\n})\r\nexport class CompanyPenaltiesModule { }\r\n"]}