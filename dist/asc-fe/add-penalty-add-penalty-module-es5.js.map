{"version":3,"sources":["webpack:///src/app/core/models/type-of-document.model.ts","webpack:///src/app/core/models/country.model.ts","webpack:///src/app/core/models/type-of-reason.model.ts","webpack:///src/app/core/models/company-penalty.model.ts","webpack:///src/app/core/models/type-of-application.model.ts","webpack:///src/app/core/models/s1-application.model.ts","webpack:///src/app/core/models/product.model.ts","webpack:///src/app/modules/pages/accounting/add-penalty/add-penalty.module.ts","webpack:///src/app/core/models/payment.model.ts","webpack:///src/app/core/models/type-of-medium.model.ts","webpack:///src/app/core/models/application-multimedia.model.ts","webpack:///src/app/core/models/s2-application.model.ts","webpack:///src/app/core/models/or-preparation.model.ts","webpack:///src/app/core/models/user-account.model.ts","webpack:///src/app/core/models/asc-rate.model.ts","webpack:///src/app/core/models/application-single-media.model.ts","webpack:///src/app/modules/pages/accounting/add-penalty/add-penalty.component.html","webpack:///src/app/modules/pages/accounting/add-penalty/add-penalty.component.ts","webpack:///src/app/core/models/application-request.model.ts","webpack:///src/app/core/models/profile.model.ts","webpack:///src/app/core/models/attachment-document.model.ts","webpack:///src/app/core/models/category.model.ts","webpack:///src/app/core/models/supporting-document.model.ts","webpack:///src/app/core/models/user-role.model.ts","webpack:///src/app/modules/pages/accounting/add-penalty/add-penalty.component.scss","webpack:///src/app/core/models/payment-type.model.ts","webpack:///src/app/core/models/or-preparation-reference.model.ts","webpack:///src/app/core/models/performance-metrics.model.ts","webpack:///src/app/modules/pages/accounting/add-penalty/add-penalty-routing.module.ts","webpack:///src/app/core/models/payment-method.model.ts","webpack:///src/app/core/models/index.ts","webpack:///src/app/core/models/affiliation.model.ts","webpack:///src/app/core/models/brand.model.ts","webpack:///src/app/core/models/company.model.ts","webpack:///src/app/core/models/brand-penalty.model.ts"],"names":["TypeOfDocument","Country","TypeOfReason","CompanyPenalty","TypeOfApplication","S1Application","Product","AddPenaltyModule","declarations","imports","Payment","paymentMethod","filedBirForm","remarks","TypeOfMedium","ApplicationMultimedia","ApplicationMultimediaItemsDTO","ApplicationMultimediaMovingDTO","ApplicationMultimediaStaticDTO","S2Application","OrPreparation","totals","totalSales","totalAmountDue","totalVat","totalWithholdingtax","UserAccount","AscRate","ApplicationSingleMedia","AddPenaltyComponent","router","apiService","sweetAlertService","sanitizer","fileStorageService","route","spinner","validateFieldService","dataStorageService","displayedColumns","brandPenalty","companyPenalty","paymentType","attachmentDocument","company","objAttachmentReference","brandPenaltyAttachmentReference","paymentAttachmentReference","paymentTypeList","brandList","companyList","companyPenaltyList","delinquentAppForms","notInSelection","previewDocument","process","paymentTypeFromUrl","approveDelinquent","isShowUploadButton","currentUser","getUserAccount","getPenalizedBrandList","getCompanyList","getPaymentList","id","Number","snapshot","paramMap","get","viewPayment","sessionStorage","removeItem","elm","paymentStatus","navigate","toLowerCase","findAll","brand","subscribe","res","responseData","data","filter","includes","status","userRole","name","ROLE_APPLICANT","creditCardIndex","findIndex","element","paymentDescription","splice","event","target","files","fileSize","size","customErrorMessage","value","fileURL","URL","createObjectURL","safeURLBrand","bypassSecurityTrustResourceUrl","reader","FileReader","file","readAsDataURL","onload","selectedFile","penaltyType","fire","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","save","brandPenalties","customSuccessMessage","err","error","penaltyDate","Date","companyPenalties","show","attachmentType","BRAND_PENALTY_PAYMENT","PAYMENT","params","ORIGINAL","pushFileToStorage","uploadedPaymentFile","addToAttachmentDocuments","payment","hideSpinner","getAttachmentDocument","attachment","console","log","paymentDate","approveBrandPenalty","amount","message","responseMessage","amountDue","amountReceive","approveDelinquentCompany","findById","obj","penaltyBrand","description","getAttachmentDocuments","penaltyCompany","companyName","totalBalance","filteredData","map","mapped","penaltyAmount","reduce","previousValue","currentValue","previewRemarks","getPayment","applicationForm","getAppFormsByCompanyId","companyId","dataSource","paginator","param","findByParam","originalFilename","filename","fileExtension","documentFormat","setTimeout","hide","brandPenaltyAttachmentDocument","attachmentReference","window","open","selected","update","selector","template","ApplicationRequest","Profile","AttachmentDocument","Category","SupportingDocument","UserRole","PaymentType","OrPreparationReference","PerformanceMetrics","routes","path","component","AddPenaltyRoutingModule","forChild","exports","PaymentMethod","Affiliation","Brand","Company","BrandPenalty"],"mappings":"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","file":"add-penalty-add-penalty-module-es5.js","sourcesContent":["export class TypeOfDocument {\r\n    id: number;\r\n    description: string;\r\n    remarksEnable: boolean;\r\n    basedOnEnable: boolean;\r\n    variantEnable: boolean;\r\n    dateOfLaunchEnable: boolean;\r\n    expiresOnEnable: boolean;\r\n    inputEnable: boolean;\r\n    status: string;\r\n}\r\n","export class Country {\r\n  id: number;\r\n  code: string;\r\n  name: string;\r\n}","export class TypeOfReason {\r\n    id: number;\r\n    reason: string;\r\n    status: string;\r\n}\r\n","import { Company } from './company.model';\r\nimport { PaymentMethod } from './payment-method.model';\r\n\r\nexport class CompanyPenalty {\r\n    id: number;\r\n    company: Company;\r\n    paymentStatus: string;\r\n    penaltyAmount: number;\r\n    penaltyDate: Date;\r\n    remarks: string;\r\n    paymentAttachmentReference: string;\r\n    paymentMethod: PaymentMethod;\r\n\r\n    // not yet in BE\r\n    // paidDate: Date;\r\n    // status: string;\r\n}","export class TypeOfApplication {\r\n    id: number;\r\n    description: string;\r\n    clearingReleaseTime: String\r\n    decisionReleaseTime: String\r\n    sequenceNo: number;\r\n    status: String\r\n    submissionEndTime: String;\r\n    submissionStartTime: String\r\n}","import { Company } from './company.model';\r\nimport { Brand } from './brand.model';\r\nimport { ApplicationType } from './application-type.model';\r\nimport { UserAccount } from './user-account.model';\r\nimport { MultipleApplication } from './multiple-application.model';\r\nimport { Affiliation } from './affiliation.model';\r\nimport { ApplicationRequest } from './application-request.model';\r\nimport { Product } from './product.model';\r\nimport { TypeOfMedium } from './type-of-medium.model';\r\n\r\nexport class S1Application {\r\n    id: number;\r\n    company: Company;\r\n    brand: Brand;\r\n    adTitle: string;\r\n    referenceCode: string;\r\n\r\n    tagLine: string;\r\n    materialInformation: string;\r\n    externalStatus: string\r\n    internalStatus: string\r\n    revisionNo: number;\r\n\r\n    actionBy: UserAccount;\r\n    actionStatus: string; // ASSIGN_TO_ADSPE, ASSIGN_TO_REVIEWER, ASSIGN_TO_SCREENER\r\n    formStatus: string; // OPEN, LOCKED\r\n    submissionType: string // ORIGINAL, REVISION, COMPLIANCE\r\n    applicationType: ApplicationType;\r\n\r\n    formType: string; // INDIVIDUAL, MULTIPLE\r\n    autoSubmit: boolean;\r\n    submissionDate: Date;\r\n    sequenceOrder: number;\r\n    countSeries: number;\r\n\r\n    refTypeOfMedium: string;\r\n    assignedUser: UserAccount;\r\n    applicationOwner: UserAccount;\r\n    multipleApplication: MultipleApplication;\r\n    appFormReference: string;\r\n\r\n    mainAttachmentReference: string;\r\n    supportingAttachmentReference: string;\r\n    paymentAttachmentReference: string;\r\n    membersAffiliation: Affiliation;\r\n    decisionStatus: string;\r\n\r\n    amount: number;\r\n    applicationRequest: ApplicationRequest;\r\n    revisionLetterAttachmentReference: string;\r\n    assignedEncoder: UserAccount;\r\n    assignedAdSpecialist: UserAccount;\r\n\r\n    assignedScreener: UserAccount;\r\n    assignedReviewer: UserAccount;\r\n    verifiedDatetimeByEvaluator: Date;\r\n    sameDayRelease: boolean;\r\n    paidByApplicant: boolean;\r\n\r\n    archived: boolean;\r\n    appliedS2: boolean;\r\n    deliquent: boolean;\r\n    paymentStatus: string;\r\n    applicationDate: Date;\r\n\r\n    validUntil: Date;\r\n    previousRefCode: string;\r\n    hasNoSupportingDocs: boolean;\r\n    referenceCodeRejected: string;\r\n\r\n    hasRevision: boolean;\r\n    product: Product;\r\n    hasOngoingRevision: boolean;\r\n    qrCode: string;\r\n    barCode: string;\r\n    screenerDecisionComment: boolean;\r\n    reviewerDecisionComment: boolean;\r\n    hasOngoingCompliance: boolean;\r\n    releaseStatus: string;\r\n\r\n    complianceForm: boolean; // param need upon request for compliance\r\n    emailSent: boolean;\r\n    forwardToScreener: boolean;\r\n    forwardToReviewer: boolean;\r\n    formProcess: string;\r\n    typeOfMedium: string;\r\n\r\n    stampMaterialFileURL: string;\r\n    stampMaterialFilename: string;\r\n    decisionFormFileURL : string;\r\n    decisionFormFilename: string;\r\n\r\n    hasOngoingAppeal: boolean;\r\n    typeOfAppeal: string;\r\n    appealAttachmentReference: string;\r\n\r\n    hasOfficialReceipt: boolean;\r\n\r\n    // For AppRequest\r\n    status: string;\r\n\r\n    currentAssignee: string;\r\n}\r\n","import { Brand } from './brand.model';\r\nimport { Category } from './category.model';\r\n\r\nexport class Product {\r\n    id: number;\r\n    description: string;\r\n    status: string;\r\n    brand: Brand;\r\n    category: Category;\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AddPenaltyRoutingModule } from './add-penalty-routing.module';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { AngularMaterialModule } from '@shared';\r\nimport { AddPenaltyComponent } from './add-penalty.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [AddPenaltyComponent],\r\n  imports: [\r\n    CommonModule,\r\n    AddPenaltyRoutingModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    AngularMaterialModule,\r\n  ]\r\n})\r\nexport class AddPenaltyModule { }\r\n","import { S1Application } from './s1-application.model';\r\nimport { PaymentMethod } from './payment-method.model';\r\nimport { MultipleApplication } from './multiple-application.model';\r\nimport { S2Application } from './s2-application.model';\r\n\r\nexport class Payment {\r\n    id: number;\r\n    amountDue: number;\r\n    amountReceive: number;\r\n    appFormReference: string;\r\n    applicationForm: S1Application;\r\n    basicRate: number;\r\n    discount: number;\r\n    filename: string;\r\n    officialReceiptNo: string;\r\n    paymentAttachmentReference: string;\r\n    paymentDate: Date;\r\n    paymentMethod: PaymentMethod = new PaymentMethod();\r\n    paymentStatus: string; // PAID, UNPAID\r\n    remarks: string;\r\n    status: string;\r\n    vat: number;\r\n    withholdingTax: number;\r\n    amountToSettle: number;\r\n    companyName: string;\r\n    companyId: number;\r\n\r\n    multipleApplication: MultipleApplication;\r\n    filedBirForm: boolean = false;\r\n    applicationFormS2: S2Application;\r\n\r\n    constructor() {\r\n        this.filedBirForm = false;\r\n        this.remarks = '';\r\n    }\r\n}\r\n","import { TypeOfClearance } from './type-of-clearance.model';\r\nimport { TypeOfMainDocument } from './type-of-main-document.model';\r\n\r\nexport class TypeOfMedium {\r\n  description: string;\r\n  executionEnable: boolean;\r\n  id: number;\r\n  languageEnable: boolean;\r\n  lengthEnable: boolean;\r\n  multimedia: boolean;\r\n  multimediaMoving: boolean;\r\n  multimediaStatic: boolean;\r\n  othersEnable: boolean;\r\n  singlemedia: boolean;\r\n  sizeLengthEnable: boolean;\r\n  status: string;\r\n  typeOfMainDocument: TypeOfMainDocument;\r\n  widthEnable: boolean;\r\n  typeOfClearance: TypeOfClearance;\r\n\r\n  // not in BE; for List value\r\n  enabledFields: string;\r\n  sizeLength: string;\r\n}\r\n","import { TypeOfMedium } from './type-of-medium.model';\r\n\r\nexport class ApplicationMultimedia {\r\n    id: number;\r\n    amount: number;\r\n    appFormReference: string;\r\n    mediaType?: string; // STATIC, MOVING\r\n    multimediaSizeLength?: string;\r\n    typeOfMedium?: TypeOfMedium;\r\n}\r\n\r\nexport class ApplicationMultimediaItemsDTO {\r\n    hasSelected: boolean;\r\n    id: number;\r\n    multimediaMovingMedium?: string;\r\n    multimediaStaticMedium?: string;\r\n    sizeLength?: number;\r\n}\r\n\r\nexport class ApplicationMultimediaMovingDTO extends ApplicationMultimedia {\r\n    applicationMultimediaMovingList: ApplicationMultimediaItemsDTO[];\r\n    sizeLength: number;\r\n}\r\n\r\nexport class ApplicationMultimediaStaticDTO extends ApplicationMultimedia {\r\n    applicationMultimediaStaticList: ApplicationMultimediaItemsDTO[];\r\n}\r\n","import { ApplicationRequest } from './application-request.model';\r\nimport { S1Application } from './s1-application.model';\r\nimport { UserAccount } from './user-account.model';\r\n\r\nexport class S2Application {\r\n\r\n    id: number;\r\n    actionBy: string;\r\n    actionStatus: string;\r\n    applicationDate: Date;\r\n    applicationForm: S1Application;\r\n    assignedAdSpecialist: UserAccount;\r\n    assignedEncoder: UserAccount;\r\n    assignedUser: UserAccount;\r\n    complianceDate: Date;\r\n    decisionStatus: string;\r\n    externalStatus: string;\r\n    finalMaterialAttachmentReference: string;\r\n    formStatus: string;\r\n    internalStatus: string;\r\n    issuedDate: Date;\r\n    paymentStatus: string;\r\n    specialClearing: boolean;\r\n    submissionDate: Date;\r\n    validUntil: Date;\r\n    validityDate: Date;\r\n    referenceCodeRejected: string;\r\n    releaseDate: Date;\r\n    hasToa: boolean;\r\n    submissionType: string;\r\n    applicationRequest: ApplicationRequest;\r\n    paymentAttachmentReference: string;\r\n    amount: string;\r\n    appFormReference: string;\r\n    hasOngoingCompliance: boolean;\r\n    formProcess: string;\r\n    complianceForm: boolean; // param need upon request for compliance\r\n    hasOngoingAppeal: boolean;\r\n    typeOfAppeal: string;\r\n    appealAttachmentReference: string;\r\n    clearanceToaFileUrl: string;\r\n    clearanceToaFilename: string;\r\n    releaseStatus: string;\r\n    supportingAttachmentReference: string;\r\n}\r\n","import { TotalAmountsModel } from './totals.model';\r\nimport { TypeOfMedium, OrPreparationReference } from '@models';\r\n\r\nexport class OrPreparation {\r\n    amount: number;\r\n    amountInWords: string;\r\n    businessStyle: string;\r\n    companyAddress: string;\r\n    companyName: string;\r\n    companyTin: string;\r\n    controlNumber: string;\r\n    fullPaymentOf: string;\r\n    id: number;\r\n    officialReceiptDate: Date;\r\n    officialReceiptNo: string;\r\n    officialReceiptReferences: OrPreparationReference[];\r\n    remarks: string;\r\n    status: string;\r\n    typeOfMedium: TypeOfMedium;\r\n    voucherControlNumber: string;\r\n\r\n    //totals\r\n    totalSales: number;\r\n    totalVat: number;\r\n    totalWithholdingtax: number;\r\n    totalAmountDue: number;\r\n\r\n    // Not if BE; for FE only\r\n    officialReceiptReferencesValue: string;\r\n\r\n    setTotalAmounts(totals: TotalAmountsModel){\r\n        this.totalSales = totals.totalSales;\r\n        this.totalAmountDue = totals.totalAmountDue;\r\n        this.totalVat = totals.totalVat;\r\n        this.totalWithholdingtax = totals.totalWithholdingtax;\r\n    }\r\n}","import { Affiliation, Company, UserRole } from '@models';\r\n\r\nexport class UserAccount {\r\n    id: number;\r\n    username: string;\r\n    password: string;\r\n    firstName: string;\r\n    middleName: string;\r\n    lastName: string;\r\n    company: Company;\r\n    membersAffiliationDto: Affiliation;\r\n    mobileNumber: string;\r\n    userRole: UserRole;\r\n    status: string;\r\n    acceptTerms: boolean;\r\n    accountType: string;\r\n    // locked: Boolean;\r\n    // enabled: Boolean;\r\n    ascDefault:\tboolean;\r\n    membersAffiliation:\tAffiliation;\r\n    scheduledUser:\tboolean;\r\n    signatureAttachmentReference:\tstring;\r\n}\r\n","import { TypeOfExecution } from './type-of-execution.model';\r\nimport { TypeOfMedium } from './type-of-medium.model';\r\n\r\nexport class AscRate {\r\n    id: number;\r\n    lengthFrom: number;\r\n    lengthTo: number;\r\n    memberOffline: number;\r\n    memberOnline: number;\r\n    nonMemberOffline: number;\r\n    nonMemberOnline: number;\r\n    status: string;\r\n    typeOfExecution: TypeOfExecution;\r\n    typeOfMedium: TypeOfMedium;\r\n}","import { Dialect } from './dialect.model';\r\nimport { MediumExecution } from './medium-execution.model';\r\n\r\nexport class ApplicationSingleMedia {\r\n    id: number;\r\n    amount: number;\r\n    appFormReference: string;\r\n    dialect: Dialect;\r\n    language: string;\r\n    others: string;\r\n    sizeLength: string;\r\n    mediumExecution: MediumExecution;\r\n    width: string;\r\n\r\n}\r\n","export default \"<form>\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"column\\\">\\r\\n                <div class=\\\"col-md-12 title\\\">\\r\\n                    <mat-label>\\r\\n                        {{ paymentTypeFromUrl | titlecase }} Penalties\\r\\n                    </mat-label>\\r\\n                    <button mat-raised-button class=\\\"button-right button-red button-center\\\" (click)=\\\"navigateToList()\\\">\\r\\n                        <i class=\\\"material-icons color__white\\\">list</i> BACK TO LIST\\r\\n                    </button>\\r\\n                </div>\\r\\n                <hr>\\r\\n\\r\\n                <div class=\\\"col-md-12\\\" appearance=\\\"outline\\\"\\r\\n                    *ngIf=\\\"paymentTypeFromUrl === 'brand' || paymentTypeFromUrl === 'company'\\\">\\r\\n                    <mat-label>Filename: </mat-label>\\r\\n                    <br>\\r\\n                    <input matInput [value]=\\\"attachmentDocument.originalFilename || objAttachmentReference?.brandPenaltyAttachmentReference || objAttachmentReference?.paymentAttachmentReference\\\" disabled\\r\\n                        *ngIf=\\\"attachmentDocument.originalFilename || objAttachmentReference?.brandPenaltyAttachmentReference || objAttachmentReference?.paymentAttachmentReference\\\">\\r\\n\\r\\n                    <input class=\\\"file-upload\\\" type=\\\"file\\\" *ngIf=\\\"!attachmentDocument.originalFilename\\\" accept=\\\".pdf\\\"\\r\\n                        (change)=\\\"selectFile($event)\\\" [hidden]=\\\"objAttachmentReference?.brandPenaltyAttachmentReference || objAttachmentReference?.paymentAttachmentReference\\\">\\r\\n                    <br><br>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-12\\\" appearance=\\\"outline\\\" *ngIf=\\\"paymentTypeFromUrl === 'delinquent' \\\">\\r\\n                    <ng-container *ngTemplateOutlet=\\\"approveDelinquent\\\"></ng-container>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-12\\\" appearance=\\\"outline\\\"\\r\\n                    *ngIf=\\\"paymentTypeFromUrl === 'brand' || paymentTypeFromUrl === 'company' || paymentTypeFromUrl === 'delinquent' \\\">\\r\\n\\r\\n                    <button mat-raised-button class=\\\"button-red button-right\\\" (click)=\\\"viewDocument()\\\"\\r\\n                        *ngIf=\\\"objAttachmentReference?.brandPenaltyAttachmentReference || objAttachmentReference?.paymentAttachmentReference\\\">\\r\\n                        <i class=\\\"material-icons add-document\\\">open_in_new</i> VIEW DOCUMENT\\r\\n                    </button>\\r\\n\\r\\n                    &nbsp; &nbsp;\\r\\n\\r\\n                    <button mat-raised-button class=\\\"button-red button-right\\\" (click)=\\\"uploadProofOfPayment()\\\"\\r\\n                        [disabled]=\\\"!safeURLBrand||!isShowUploadButton\\\" *ngIf=\\\"isShowUploadButton\\\"\\r\\n                        [hidden]=\\\"objAttachmentReference?.brandPenaltyAttachmentReference || objAttachmentReference?.paymentAttachmentReference\\\">\\r\\n                        <i class=\\\"material-icons add-document\\\">upload</i> UPLOAD\\r\\n                    </button>\\r\\n\\r\\n                    <br><br>\\r\\n                    <div class=\\\"row col-md-12\\\" appearance=\\\"outline\\\"\\r\\n                        *ngIf=\\\"previewDocument==true && (\\r\\n                            objAttachmentReference?.brandPenaltyAttachmentReference ||\\r\\n                            objAttachmentReference?.paymentAttachmentReference\\r\\n                        )\\\">\\r\\n                        <div class=\\\"file-upload\\\">\\r\\n                            <object [data]=\\\"safeURLBrand\\\" type=\\\"application/pdf\\\" width=\\\"100%\\\" height=\\\"400\\\">\\r\\n                                <iframe [src]=\\\"safeURLBrand\\\" width=\\\"100%\\\" height=\\\"400\\\">\\r\\n                                    <p>This browser does not support PDF!</p>\\r\\n                                </iframe>\\r\\n                            </object>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"column\\\" *ngIf=\\\"paymentTypeFromUrl === 'brand' \\\">\\r\\n                <ng-container *ngTemplateOutlet=\\\"addBrandPenalty\\\"></ng-container>\\r\\n            </div>\\r\\n            <div class=\\\"column\\\" *ngIf=\\\"paymentTypeFromUrl === 'company' \\\">\\r\\n                <ng-container *ngTemplateOutlet=\\\"addCompanyPenalty\\\"></ng-container>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\\r\\n\\r\\n<ng-template #approveDelinquent>\\r\\n    <div class=\\\"col-md-12\\\" style=\\\"padding: 0 2em;\\\">\\r\\n        <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n            <mat-label>Company</mat-label>\\r\\n            <input matInput name=\\\"penaltyBrand\\\" [(ngModel)]=\\\"company.companyName\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n                readonly>\\r\\n        </mat-form-field>\\r\\n\\r\\n        <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n            <mat-label>Amount to Settle</mat-label>\\r\\n            <input class=\\\"numbers-input\\\" matInput name=\\\"amountDue\\\" [value]=\\\"payment?.amountDue | number : '1.2-2'\\\"\\r\\n                type=\\\"text\\\" (keydown)=\\\"validateFieldService.numbersOnly($event)\\\" readonly>\\r\\n        </mat-form-field>\\r\\n\\r\\n        <div class=\\\"mat-elevation-z8 fields\\\">\\r\\n          <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\r\\n\\r\\n            <ng-container matColumnDef=\\\"referenceCode\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef > REFERENCE CODE </th>\\r\\n              <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getPaymentDetails(element)\\\"> {{ element?.referenceCode | uppercase }} </td>\\r\\n            </ng-container>\\r\\n\\r\\n            <ng-container matColumnDef=\\\"brand\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef > BRAND </th>\\r\\n              <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getPaymentDetails(element)\\\"> {{ element?.brand?.description | uppercase }} </td>\\r\\n            </ng-container>\\r\\n\\r\\n            <ng-container matColumnDef=\\\"typeOfMedium\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef > TYPE OF MEDIUM </th>\\r\\n              <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getPaymentDetails(element)\\\"> {{ element?.typeOfMedium | uppercase }} </td>\\r\\n            </ng-container>\\r\\n\\r\\n            <ng-container matColumnDef=\\\"paymentStatus\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef > PAYMENT STATUS </th>\\r\\n              <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getPaymentDetails(element)\\\"> {{ element?.paymentStatus?.replaceAll('_',' ') | uppercase }} </td>\\r\\n            </ng-container>\\r\\n\\r\\n            <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n            <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n          </table>\\r\\n          <div class=\\\"no-record\\\" [hidden]=\\\"dataSource && dataSource?.data?.length > 0\\\">\\r\\n            No record found.\\r\\n          </div>\\r\\n          <mat-paginator [pageSizeOptions]=\\\"[10, 20, 50]\\\" showFirstLastButtons></mat-paginator>\\r\\n        </div>\\r\\n\\r\\n        <br><br>\\r\\n\\r\\n        <button mat-raised-button class=\\\"button-right button-red\\\" (click)=\\\"addPenalty('Delinquent')\\\"\\r\\n            *ngIf=\\\"process==='save'\\\">\\r\\n            <i class=\\\"material-icons color__white\\\">task_alt</i> SUBMIT\\r\\n        </button>\\r\\n\\r\\n    </div>\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #addBrandPenalty>\\r\\n    <div class=\\\"col-md-12\\\" style=\\\"padding: 0 2em;\\\">\\r\\n        <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\" *ngIf=\\\"penaltyBrand === undefined\\\">\\r\\n            <mat-label>Brand</mat-label>\\r\\n            <mat-select class=\\\"col-md-4\\\" [(ngModel)]=\\\"brandPenalty.brand\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                <mat-option *ngFor=\\\"let i of brandList\\\" [value]=\\\"i\\\" name=\\\"brand\\\">\\r\\n                    {{ i?.description | uppercase }}\\r\\n                </mat-option>\\r\\n            </mat-select>\\r\\n        </mat-form-field>\\r\\n        <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\" *ngIf=\\\"penaltyBrand !== undefined\\\">\\r\\n            <mat-label>Brand</mat-label>\\r\\n            <input matInput name=\\\"penaltyBrand\\\" [(ngModel)]=\\\"penaltyBrand\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n                readonly>\\r\\n        </mat-form-field>\\r\\n\\r\\n        <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n            <mat-label>Accumulated Amount Due</mat-label>\\r\\n            <input matInput name=\\\"amount\\\" [(ngModel)]=\\\"brandPenalty.amount\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n                type=\\\"text\\\" (keydown)=\\\"validateFieldService.numbersOnly($event)\\\">\\r\\n        </mat-form-field>\\r\\n\\r\\n        <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n            <mat-label>Remarks</mat-label>\\r\\n            <textarea matInput name=\\\"remarks\\\" [(ngModel)]=\\\"brandPenalty.remarks\\\"\\r\\n                [ngModelOptions]=\\\"{standalone: true}\\\" [readonly]=\\\"brandPenalty?.paymentStatus === 'PAID'\\\"></textarea>\\r\\n        </mat-form-field>\\r\\n\\r\\n        <hr *ngIf=\\\"process==='update'\\\">\\r\\n\\r\\n        <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\" *ngIf=\\\"process==='update'\\\">\\r\\n            <mat-label>Payment Mode</mat-label>\\r\\n            <mat-select class=\\\"col-md-4\\\" [(ngModel)]=\\\"paymentMethod.paymentType\\\" name=\\\"paymentType\\\"\\r\\n                [compareWith]=\\\"comparePaymentMethod\\\" [disabled]=\\\"brandPenalty?.paymentStatus === 'PAID'\\\">\\r\\n                <mat-option *ngFor=\\\"let i of paymentTypeList\\\" [value]=\\\"i\\\" name=\\\"paymentType\\\">\\r\\n                    {{ i?.paymentDescription | uppercase }}\\r\\n                </mat-option>\\r\\n            </mat-select>\\r\\n        </mat-form-field>\\r\\n        <!-- <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\" *ngIf=\\\"paymentMode !== undefined\\\">\\r\\n            <mat-label>Payment Mode</mat-label>\\r\\n            <input matInput name=\\\"amount\\\" [(ngModel)]=\\\"paymentMode\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n                readonly>\\r\\n        </mat-form-field> -->\\r\\n\\r\\n        <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\" *ngIf=\\\"process==='update'\\\">\\r\\n            <mat-label>Amount Received</mat-label>\\r\\n            <input matInput name=\\\"amount\\\" [(ngModel)]=\\\"paymentMethod.amount\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n                type=\\\"text\\\" (keydown)=\\\"validateFieldService.numbersOnly($event)\\\" [readonly]=\\\"brandPenalty?.paymentStatus === 'PAID'\\\">\\r\\n        </mat-form-field>\\r\\n\\r\\n        <br><br>\\r\\n\\r\\n        <button mat-raised-button class=\\\"button-right button-red\\\" (click)=\\\"addPenalty('Brand')\\\"\\r\\n            *ngIf=\\\"process==='save' && brandPenalty?.paymentStatus !== 'PAID'\\\">\\r\\n            <i class=\\\"material-icons color__white\\\">task_alt</i> SUBMIT\\r\\n        </button>\\r\\n        <button mat-raised-button class=\\\"button-right button-red button-right__approve\\\" (click)=\\\"approvePenalty()\\\"\\r\\n            *ngIf=\\\"process==='update' && brandPenalty?.paymentStatus !== 'PAID'\\\">\\r\\n            <i class=\\\"material-icons color__white\\\">task_alt</i> APPROVE\\r\\n        </button>\\r\\n\\r\\n    </div>\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #addCompanyPenalty>\\r\\n    <div class=\\\"col-md-12\\\" style=\\\"padding: 0 2em;\\\">\\r\\n        <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\" *ngIf=\\\"penaltyCompany === undefined\\\">\\r\\n            <mat-label>Company</mat-label>\\r\\n            <mat-select class=\\\"col-md-4\\\" [(ngModel)]=\\\"companyPenalty.company\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n                [compareWith]=\\\"compareCompany\\\">\\r\\n                <mat-option *ngFor=\\\"let i of companyList\\\" [value]=\\\"i\\\" name=\\\"company\\\">\\r\\n                    {{ i?.companyName | uppercase }}\\r\\n                </mat-option>\\r\\n            </mat-select>\\r\\n        </mat-form-field>\\r\\n        <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\" *ngIf=\\\"penaltyCompany !== undefined\\\">\\r\\n            <mat-label>Company</mat-label>\\r\\n            <input matInput name=\\\"penaltyCompany\\\" [(ngModel)]=\\\"penaltyCompany\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n                readonly>\\r\\n        </mat-form-field>\\r\\n\\r\\n        <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\" *ngIf=\\\"totalBalance === undefined || totalBalance === 0\\\">\\r\\n            <mat-label>Accumulated Amount Due</mat-label>\\r\\n            <input matInput name=\\\"amount\\\" [(ngModel)]=\\\"companyPenalty.penaltyAmount\\\"\\r\\n                [ngModelOptions]=\\\"{standalone: true}\\\" type=\\\"text\\\" (keydown)=\\\"validateFieldService.numbersOnly($event)\\\">\\r\\n        </mat-form-field>\\r\\n        <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\" *ngIf=\\\"totalBalance !== undefined && totalBalance > 0\\\">\\r\\n            <mat-label>Accumulated Amount Due</mat-label>\\r\\n            <input matInput name=\\\"totalBalance\\\" [(ngModel)]=\\\"totalBalance\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n                readonly>\\r\\n        </mat-form-field>\\r\\n\\r\\n        <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\" *ngIf=\\\"previewRemarks === undefined || previewRemarks === ''\\\">\\r\\n            <mat-label>Remarks</mat-label>\\r\\n            <textarea matInput name=\\\"remarks\\\" [(ngModel)]=\\\"companyPenalty.remarks\\\" [readonly]=\\\"process==='update'\\\"\\r\\n                [ngModelOptions]=\\\"{standalone: true}\\\" [readonly]=\\\"companyPenalty?.paymentStatus === 'PAID'\\\"></textarea>\\r\\n        </mat-form-field>\\r\\n        <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\" *ngIf=\\\"previewRemarks !== undefined && previewRemarks !== ''\\\">\\r\\n            <mat-label>Remarks</mat-label>\\r\\n            <input matInput name=\\\"previewRemarks\\\" [(ngModel)]=\\\"previewRemarks\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n                readonly>\\r\\n        </mat-form-field>\\r\\n\\r\\n        <hr *ngIf=\\\"process==='update'\\\">\\r\\n\\r\\n        <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\" *ngIf=\\\"process==='update'\\\">\\r\\n            <mat-label>Payment Mode</mat-label>\\r\\n            <mat-select class=\\\"col-md-4\\\" [(ngModel)]=\\\"paymentMethod.paymentType\\\" name=\\\"paymentType\\\"\\r\\n                [compareWith]=\\\"comparePaymentMethod\\\" [disabled]=\\\"companyPenalty?.paymentStatus === 'PAID'\\\">\\r\\n                <mat-option *ngFor=\\\"let i of paymentTypeList\\\" [value]=\\\"i\\\" name=\\\"paymentType\\\">\\r\\n                    {{ i?.paymentDescription | uppercase }}\\r\\n                </mat-option>\\r\\n            </mat-select>\\r\\n        </mat-form-field>\\r\\n\\r\\n        <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\" *ngIf=\\\"process==='update'\\\">\\r\\n            <mat-label>Amount Received</mat-label>\\r\\n            <input matInput name=\\\"amount\\\" [(ngModel)]=\\\"paymentMethod.amount\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n                type=\\\"text\\\" (keydown)=\\\"validateFieldService.numbersOnly($event)\\\" [readonly]=\\\"companyPenalty?.paymentStatus === 'PAID'\\\">\\r\\n        </mat-form-field>\\r\\n\\r\\n        <br><br>\\r\\n\\r\\n        <button mat-raised-button class=\\\"button-right button-red\\\" (click)=\\\"addPenalty('Company')\\\"\\r\\n            *ngIf=\\\"process==='save' && companyPenalty?.paymentStatus !== 'PAID'\\\">\\r\\n            <i class=\\\"material-icons color__white\\\">task_alt</i> SUBMIT\\r\\n        </button>\\r\\n        <button mat-raised-button class=\\\"button-right button-red button-right__approve\\\" (click)=\\\"approvePenalty()\\\"\\r\\n            *ngIf=\\\"process==='update' && companyPenalty?.paymentStatus !== 'PAID'\\\">\\r\\n            <i class=\\\"material-icons color__white\\\">task_alt</i> APPROVE\\r\\n        </button>\\r\\n\\r\\n    </div>\\r\\n</ng-template>\\r\\n\";","import { USER_ROLES } from './../../../../shared/utils/constants';\r\nimport { Component, Input, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { AttachmentDocument, Payment, PaymentType, Company } from '@models';\r\nimport { ApiService, DataStorageService, SweetAlertService } from '@services';\r\nimport { ATTACHMENT_TYPE, ENDPOINTS, SUBMISSION_TYPE } from '@shared';\r\nimport { BrandPenalty } from 'app/core/models/brand-penalty.model';\r\nimport { CompanyPenalty } from 'app/core/models/company-penalty.model';\r\nimport { PaymentMethod } from 'app/core/models/payment-method.model';\r\nimport { FileStorageService } from 'app/core/services/file.storage.service';\r\nimport { ValidateFieldService } from 'app/core/services/validate-field.service';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-add-penalty',\r\n  templateUrl: './add-penalty.component.html',\r\n  styleUrls: ['./add-penalty.component.scss']\r\n})\r\nexport class AddPenaltyComponent implements OnInit, OnDestroy {\r\n\r\n  @ViewChild(MatPaginator, { static: false }) paginator: MatPaginator;\r\n  dataSource: MatTableDataSource<any>\r\n  displayedColumns = ['referenceCode', 'brand', 'typeOfMedium', 'paymentStatus'];\r\n  brandPenalty = new BrandPenalty();\r\n  companyPenalty = new CompanyPenalty();\r\n  payment: any; // = new Payment();\r\n  paymentType = new PaymentType();\r\n  attachmentDocument = new AttachmentDocument();\r\n  paymentMethod = new PaymentMethod();\r\n  company = new Company();\r\n\r\n  objAttachmentReference = {\r\n    brandPenaltyAttachmentReference: '',\r\n    paymentAttachmentReference: ''\r\n  };\r\n\r\n  paymentTypeList = [];\r\n  brandList = [];\r\n  companyList = [];\r\n  companyPenaltyList = [];\r\n  delinquentAppForms = [];\r\n  notInSelection = ['INACTIVE', 'DISAPPROVED'];\r\n  // attachmentDocuments = [];\r\n  id: number;\r\n  penaltyBrand: string;\r\n  penaltyCompany: string;\r\n  paymentMode: string;\r\n  totalBalance: number;\r\n  previewRemarks: string;\r\n  previewDocument = false;\r\n  attachment: any;\r\n  process = 'save';\r\n  paymentTypeFromUrl = '';\r\n  approveDelinquent = false;\r\n  currentUser: any;\r\n\r\n  @Input() safeURLBrand: any;\r\n  isShowUploadButton = false;\r\n  fileSize: number;\r\n  selectedFile: File;\r\n  uploadedPaymentFile: any;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private apiService: ApiService,\r\n    private sweetAlertService: SweetAlertService,\r\n    private sanitizer: DomSanitizer,\r\n    private fileStorageService: FileStorageService,\r\n    private route: ActivatedRoute,\r\n    private spinner: NgxSpinnerService,\r\n    public validateFieldService: ValidateFieldService,\r\n    private dataStorageService: DataStorageService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.currentUser = this.dataStorageService.getUserAccount();\r\n    this.getPenalizedBrandList();\r\n    this.getCompanyList();\r\n    this.getPaymentList();\r\n    this.id = Number(this.route.snapshot.paramMap.get('id'));\r\n    this.paymentTypeFromUrl = this.route.snapshot.paramMap.get('type');\r\n    if (this.id !== 0) {\r\n      this.process = 'update';\r\n      this.viewPayment();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    sessionStorage.removeItem('PAYMENT');\r\n  }\r\n\r\n  getPaymentDetails(elm) {\r\n    if (elm?.paymentStatus) {\r\n      this.router.navigate(['asc/page/accounting/update/', `${elm?.paymentStatus?.toLowerCase()}-${elm.id}`, `delinquent-${elm.id}`]);\r\n    } else {\r\n      this.router.navigate(['asc/page/accounting/update/', `delinquent-${elm.id}`]);\r\n    }\r\n  }\r\n\r\n\r\n  getPenalizedBrandList() {\r\n    this.apiService.findAll(ENDPOINTS.brand).subscribe((res: any) => {\r\n      // this.brandList = res.responseData.data.filter(penalizedBrands => penalizedBrands.penalty);\r\n      this.brandList = res.responseData.data;\r\n    });\r\n  }\r\n\r\n  getCompanyList() {\r\n    this.apiService.findAll(ENDPOINTS.company).subscribe((res: any) => {\r\n      this.companyList = res.responseData.data.filter((company) => !this.notInSelection.includes(company.status));\r\n    });\r\n  }\r\n\r\n  getPaymentList() {\r\n    this.apiService.findAll(ENDPOINTS.paymentType).subscribe((res: any) => {\r\n      this.paymentTypeList = res.responseData.data;\r\n      if (this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT) {\r\n        const creditCardIndex = this.paymentTypeList\r\n          .findIndex((element) => element.paymentDescription === 'Credit Card');\r\n        this.paymentTypeList.splice(creditCardIndex, 1);\r\n      }\r\n    });\r\n  }\r\n\r\n  selectFile(event) {\r\n    this.isShowUploadButton = false;\r\n\r\n    if (event.target.files[0]) {\r\n      this.fileSize = event.target.files[0].size;\r\n\r\n      if (this.fileSize > 15000000) {\r\n        this.sweetAlertService.customErrorMessage(`Attachments' total file size should not exceed 15MB.`);\r\n        event.target.value = '';\r\n        return;\r\n\r\n      } else {\r\n        this.isShowUploadButton = true;\r\n        const fileURL = URL.createObjectURL(event.target.files[0]);\r\n        this.previewDocument = true;\r\n\r\n        this.safeURLBrand = this.sanitizer.bypassSecurityTrustResourceUrl(fileURL);\r\n\r\n        const reader = new FileReader();\r\n        const [file] = event.target.files;\r\n\r\n        reader.readAsDataURL(file);\r\n        reader.onload = () => {\r\n        };\r\n\r\n        this.selectedFile = event.target.files[0];\r\n      }\r\n    }\r\n  }\r\n\r\n  addPenalty(penaltyType = 'Brand') {\r\n    Swal.fire({\r\n      text: `Are you sure you want to submit this ${penaltyType} Penalty?`,\r\n      icon: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Confirm'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        if (penaltyType === 'Brand') {\r\n          this.apiService.save(ENDPOINTS.brandPenalties, this.brandPenalty).subscribe(\r\n            (res: any) => {\r\n              this.sweetAlertService.customSuccessMessage('Brand penalty successfully saved.');\r\n              this.router.navigate(['asc/page/accounting/payments/', 'brand-penalties']);\r\n            }, (err: any) => {\r\n              this.sweetAlertService.error(err);\r\n            }\r\n          );\r\n        } else if (penaltyType === 'Company') {\r\n          this.companyPenalty.penaltyDate = new Date();\r\n          this.apiService.save(ENDPOINTS.companyPenalties, this.companyPenalty).subscribe(\r\n            (res: any) => {\r\n              this.sweetAlertService.customSuccessMessage('Company penalty successfully saved.');\r\n              this.router.navigate(['asc/page/accounting/payments/', 'company-penalties']);\r\n            }, (err: any) => {\r\n              this.sweetAlertService.error(err);\r\n            }\r\n          );\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  uploadProofOfPayment() {\r\n    Swal.fire({\r\n      text: 'Are you sure you want to submit this as proof of payment?',\r\n      icon: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Confirm'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.spinner.show();\r\n        let attachmentType = '';\r\n        if (this.paymentTypeFromUrl === 'brand') {\r\n          attachmentType = ATTACHMENT_TYPE.BRAND_PENALTY_PAYMENT;\r\n        } else if (this.paymentTypeFromUrl === 'company' || this.paymentTypeFromUrl === 'delinquent') {\r\n          attachmentType = ATTACHMENT_TYPE.PAYMENT;\r\n        }\r\n\r\n        let params = '';\r\n        params = '?&attachmentType=' + attachmentType + '&submissionType=' + SUBMISSION_TYPE.ORIGINAL;\r\n        this.fileStorageService.pushFileToStorage(ENDPOINTS.attachmentDocument, this.selectedFile, params)\r\n          .subscribe((res: any) => {\r\n            this.uploadedPaymentFile = res.responseData.data;\r\n            this.addToAttachmentDocuments(this.uploadedPaymentFile);\r\n\r\n            if (this.paymentTypeFromUrl === 'brand') {\r\n              this.brandPenalty.brandPenaltyAttachmentReference = this.uploadedPaymentFile.brandPenaltyAttachmentReference;\r\n              this.objAttachmentReference.brandPenaltyAttachmentReference = this.brandPenalty.brandPenaltyAttachmentReference;\r\n            } else if (this.paymentTypeFromUrl === 'company') {\r\n              this.companyPenalty.paymentAttachmentReference = this.uploadedPaymentFile.paymentAttachmentReference;\r\n              this.objAttachmentReference.paymentAttachmentReference = this.companyPenalty.paymentAttachmentReference;\r\n            } else if (this.paymentTypeFromUrl === 'delinquent') {\r\n              this.payment.paymentAttachmentReference = this.uploadedPaymentFile.paymentAttachmentReference;\r\n              this.objAttachmentReference.paymentAttachmentReference = this.payment.paymentAttachmentReference;\r\n            }\r\n            this.hideSpinner();\r\n            this.sweetAlertService.customSuccessMessage('Attachment successfully uploaded.');\r\n            this.selectedFile = null;\r\n\r\n            if (this.brandPenalty.brandPenaltyAttachmentReference || this.companyPenalty.paymentAttachmentReference\r\n              || this.payment.paymentAttachmentReference === 'delinquent') {\r\n              this.getAttachmentDocument();\r\n            }\r\n\r\n          }, (err: any) => {\r\n            this.hideSpinner();\r\n            this.sweetAlertService.error(err);\r\n          }, () => {\r\n            // actions after subscription\r\n          });\r\n      } else {\r\n        this.selectedFile = null;\r\n      }\r\n    });\r\n  }\r\n\r\n  saveBrandPenalty() {\r\n    this.apiService.save(`${ENDPOINTS.brandPenalties}/payment-type-id/${this.paymentType.id}/payment/submit`, this.brandPenalty)\r\n      .subscribe((res: any) => {\r\n        this.brandPenalty = new BrandPenalty();\r\n        this.paymentType = new PaymentType();\r\n        this.attachment = null;\r\n        this.previewDocument = false;\r\n        this.sweetAlertService.customSuccessMessage('Voucher fund successfully submitted.');\r\n      }, (err) => {\r\n        console.log(err);\r\n        this.sweetAlertService.error(err);\r\n      });\r\n  }\r\n\r\n  approvePenalty() {\r\n    if (this.paymentTypeFromUrl === 'brand') {\r\n      Swal.fire({\r\n        text: 'Are you sure you want to approve this Brand Penalty?',\r\n        icon: 'question',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        confirmButtonText: 'Confirm'\r\n      }).then((result) => {\r\n        if (result.value) {\r\n          this.paymentMethod.paymentDate = new Date();\r\n          this.brandPenalty.paymentMethod = this.paymentMethod;\r\n          this.brandPenalty.brandPenaltyAttachmentReference = this.attachmentDocument.brandPenaltyAttachmentReference;\r\n          console.log(this.paymentMethod);\r\n\r\n          this.apiService.save(ENDPOINTS.approveBrandPenalty, this.brandPenalty).subscribe((res: any) => {\r\n            this.sweetAlertService.customSuccessMessage('Brand penalty approved successfully.');\r\n            this.router.navigate(['asc/page/accounting/payments/', 'brand-penalties']);\r\n          });\r\n        } else {\r\n          this.attachment = null;\r\n        }\r\n      });\r\n    } else if (this.paymentTypeFromUrl === 'company') {\r\n      Swal.fire({\r\n        text: 'Are you sure you want to approve this Company Penalty?',\r\n        icon: 'question',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        confirmButtonText: 'Confirm'\r\n      }).then((result) => {\r\n        if (result.value) {\r\n          // this.paymentMethod.paymentDate = new Date();\r\n          this.companyPenalty.paymentMethod = this.paymentMethod;\r\n          this.companyPenalty.paymentAttachmentReference = this.attachmentDocument.paymentAttachmentReference;\r\n          console.log(this.paymentMethod);\r\n          console.log(this.companyPenalty);\r\n          console.log(this.attachmentDocument.paymentAttachmentReference);\r\n          this.companyPenaltyList[0].paymentMethod = this.paymentMethod;\r\n          this.companyPenaltyList[0].paymentAttachmentReference = this.attachmentDocument.paymentAttachmentReference;\r\n          this.apiService.save(`${ENDPOINTS.companyPenalties}/submit-penalty-payment?amountReceived=${this.paymentMethod.amount}&paymentTypeId=${this.paymentMethod?.paymentType?.id}`,\r\n            this.companyPenaltyList[0]).subscribe((res: any) => {\r\n              this.sweetAlertService.customSuccessMessage('Company penalty approved successfully.');\r\n              this.router.navigate(['asc/page/accounting/payments/', 'company-penalties']);\r\n            }, err => {\r\n              if (!err.error.message) {\r\n                err.error.message = err.error.responseMessage;\r\n              }\r\n              this.sweetAlertService.error(err);\r\n            });\r\n        } else {\r\n          this.attachment = null;\r\n        }\r\n      });\r\n    } else if (this.paymentTypeFromUrl === 'delinquent') {\r\n      if (this.paymentMethod.amount < this.payment.amountDue) {\r\n        this.sweetAlertService.customErrorMessage(`Amount Received/Transferred is lower than Amount Due.`);\r\n      } else {\r\n        Swal.fire({\r\n          text: 'Are you sure you want to approve this Delinquent Company?',\r\n          icon: 'question',\r\n          showCancelButton: true,\r\n          confirmButtonColor: '#3085d6',\r\n          cancelButtonColor: '#d33',\r\n          confirmButtonText: 'Confirm'\r\n        }).then((result) => {\r\n          if (result.value) {\r\n            // this.paymentMethod.paymentDate = new Date();\r\n            this.payment.paymentMethod = this.paymentMethod;\r\n            this.payment.amountReceive = Number(this.paymentMethod.amount);\r\n            console.log(this.paymentMethod);\r\n            console.log(this.payment);\r\n\r\n            this.apiService.save(`${ENDPOINTS.approveDelinquentCompany}`, this.payment).subscribe((res: any) => {\r\n              this.sweetAlertService.customSuccessMessage('Delinquent company approved successfully.');\r\n              this.router.navigate(['asc/page/accounting/payments/', 'delinquent-companies']);\r\n            }, err => {\r\n              if (!err.error.message) {\r\n                err.error.message = err.error.responseMessage;\r\n              }\r\n              this.sweetAlertService.error(err);\r\n            });\r\n          } else {\r\n            this.attachment = null;\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  viewPayment() {\r\n    if (this.paymentTypeFromUrl === 'brand') {\r\n      this.apiService.findById(ENDPOINTS.brandPenalties, this.id).subscribe((res: any) => {\r\n        const obj = res.responseData.data;\r\n        this.penaltyBrand = obj.brand.description;\r\n        if (obj?.paymentMethod) {\r\n          this.paymentType = obj?.paymentMethod?.paymentType;\r\n          this.paymentMethod = obj?.paymentMethod;\r\n        }\r\n        this.brandPenalty = obj;\r\n        if (this.brandPenalty.brandPenaltyAttachmentReference) {\r\n          this.objAttachmentReference.brandPenaltyAttachmentReference = this.brandPenalty.brandPenaltyAttachmentReference;\r\n          this.getAttachmentDocuments();\r\n        }\r\n      });\r\n    } else if (this.paymentTypeFromUrl === 'company') {\r\n      this.apiService.findById(`${ENDPOINTS.companyPenalties}/company`, this.id).subscribe((res: any) => {\r\n        if (res.responseData.data) {\r\n          this.companyPenaltyList = res.responseData.data;\r\n\r\n          if (this.companyPenaltyList[0].paymentAttachmentReference) {\r\n            this.objAttachmentReference.paymentAttachmentReference = this.companyPenalty.paymentAttachmentReference;\r\n            this.getAttachmentDocuments();\r\n          }\r\n\r\n          this.penaltyCompany = this.companyPenaltyList[0].company.companyName;\r\n          this.totalBalance = this.companyPenaltyList.filter(filteredData => filteredData.paymentStatus !== 'PAID')\r\n            .map(mapped => mapped.penaltyAmount).reduce((previousValue, currentValue) =>\r\n              previousValue + currentValue,\r\n              0);\r\n          this.previewRemarks = this.companyPenaltyList.filter(filteredData => filteredData.paymentStatus !== 'PAID')\r\n            .map(mapped => mapped.remarks ? mapped.remarks + '. ' : '')\r\n            .reduce((previousValue, currentValue) =>\r\n              previousValue + currentValue,\r\n              '');\r\n\r\n        }\r\n      });\r\n    } else if (this.paymentTypeFromUrl === 'delinquent') {\r\n      this.payment = this.dataStorageService.getPayment();\r\n\r\n      const companyName = this.payment?.applicationForm?.companyName;\r\n      this.company.companyName = companyName;\r\n      this.getAppFormsByCompanyId(this.payment?.companyId);\r\n    }\r\n  }\r\n\r\n  getAppFormsByCompanyId(companyId) {\r\n    this.apiService.findAll(ENDPOINTS.getAppFormsByCompanyId + companyId).subscribe((res: any) => {\r\n      this.delinquentAppForms = res.responseData.data;\r\n      this.dataSource = new MatTableDataSource<any>(this.delinquentAppForms);\r\n      this.dataSource.paginator = this.paginator;\r\n    });\r\n  }\r\n\r\n  getAttachmentDocuments() {\r\n    let param;\r\n    if (this.brandPenalty.brandPenaltyAttachmentReference) {\r\n      param = `brand-penalty-attachment-reference/${this.brandPenalty.brandPenaltyAttachmentReference}`;\r\n    } else if (this.companyPenalty.paymentAttachmentReference) {\r\n      param = `payment-attachment-reference/${this.companyPenaltyList[0].paymentAttachmentReference}`;\r\n    }\r\n\r\n    this.apiService.findByParam(ENDPOINTS.attachmentDocument, param).subscribe((res: any) => {\r\n      if (res) {\r\n        this.attachmentDocument = res.responseData.data;\r\n      }\r\n      this.previewDocument = true;\r\n      this.safeURLBrand = this.sanitizer.bypassSecurityTrustResourceUrl(this.attachmentDocument.fileURL);\r\n    });\r\n  }\r\n\r\n  addToAttachmentDocuments(obj: any) {\r\n    this.attachmentDocument.brandPenaltyAttachmentReference = obj.brandPenaltyAttachmentReference;\r\n    this.attachmentDocument.id = obj.id;\r\n    this.attachmentDocument.originalFilename = obj.originalFilename;\r\n    this.attachmentDocument.filename = obj.filename;\r\n    this.attachmentDocument.fileExtension = obj.fileExtension;\r\n    this.attachmentDocument.fileURL = obj.fileURL;\r\n    this.attachmentDocument.attachmentType = obj.attachmentType;\r\n    this.attachmentDocument.documentFormat = obj.documentFormat;\r\n  }\r\n\r\n  hideSpinner() {\r\n    setTimeout(() => {\r\n      this.spinner.hide();\r\n    }, 1);\r\n  }\r\n\r\n  getAttachmentDocument() {\r\n    this.spinner.show();\r\n\r\n    if (this.paymentTypeFromUrl === 'brand') {\r\n      this.apiService.findByParam(ENDPOINTS.brandPenaltyAttachmentDocument,\r\n        this.brandPenalty.brandPenaltyAttachmentReference).subscribe(\r\n          (res: any) => {\r\n            if (res) {\r\n              this.attachmentDocument = res;\r\n            }\r\n            this.hideSpinner();\r\n          }, (err: any) => {\r\n            this.hideSpinner();\r\n            console.error(err);\r\n          });\r\n    } else {\r\n      let attachmentReference = '';\r\n      if (this.paymentTypeFromUrl === 'company') {\r\n        attachmentReference = this.companyPenalty.paymentAttachmentReference;\r\n      } else if (this.paymentTypeFromUrl === 'delinquent') {\r\n        attachmentReference = this.payment.paymentAttachmentReference;\r\n      }\r\n      this.apiService.findByParam(ENDPOINTS.paymentAttachmentReference,\r\n        attachmentReference).subscribe(\r\n          (res: any) => {\r\n            if (res) {\r\n              this.attachmentDocument = res?.responseData?.data;\r\n            }\r\n            this.hideSpinner();\r\n          }, (err: any) => {\r\n            this.hideSpinner();\r\n            console.error(err);\r\n          });\r\n    }\r\n  }\r\n\r\n  viewDocument() {\r\n    if (this.uploadedPaymentFile) {\r\n      window.open(this.uploadedPaymentFile.fileURL);\r\n    } else {\r\n      window.open(this.attachmentDocument.fileURL);\r\n    }\r\n  }\r\n\r\n  comparePaymentMethod(value: any, selected: any): boolean {\r\n    if (value && selected) {\r\n      return value.paymentDescription === selected.paymentDescription;\r\n    }\r\n  }\r\n\r\n  compareCompany(value: any, selected: any): boolean {\r\n    if (value && selected) {\r\n      return value.id === selected.id;\r\n    }\r\n  }\r\n\r\n  navigateToList() {\r\n    Swal.fire({\r\n      text: 'Are you sure you want to go back to payment list?',\r\n      icon: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Confirm'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        if (this.paymentTypeFromUrl === 'brand') {\r\n          this.router.navigate(['asc/page/accounting/payments/', 'brand-penalties']);\r\n        } else if (this.paymentTypeFromUrl === 'company') {\r\n          this.router.navigate(['asc/page/accounting/payments/', 'company-penalties']);\r\n        } else if (this.paymentTypeFromUrl === 'delinquent') {\r\n          this.router.navigate(['asc/page/accounting/payments/', 'delinquent-companies']);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  updatePayment() {\r\n    this.apiService.update(ENDPOINTS.companyPenalties, this.companyPenalty).subscribe(\r\n      res => {\r\n        console.log('Update companyPenalties: ', res);\r\n      }, err => {\r\n        console.log(err);\r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n","import { Company } from '@models'\r\nimport { Affiliation } from './affiliation.model';\r\nimport { ApplicationType } from './application-type.model'\r\nimport { Brand } from './brand.model'\r\nimport { Category } from './category.model';\r\nimport { Product } from './product.model';\r\nimport { S1Application } from './s1-application.model';\r\nimport { UserAccount } from './user-account.model'\r\n\r\nexport class ApplicationRequest {\r\n    id: number;\r\n    adTitle: string;\r\n    applicationOwner: UserAccount;\r\n    applicationType: ApplicationType;\r\n    brand: Brand;\r\n    company: Company;\r\n    status: string;\r\n    submissionDate: Date;\r\n    tagLine: string\r\n    submitApplicationForm: boolean;\r\n    formType: string;\r\n    hasSpecialClearing: boolean;\r\n    applicationForm: S1Application;\r\n    product: Product;\r\n}\r\n","export class Profile {\r\n    id: number;\r\n    name: string;\r\n}\r\n","import { S1Application } from './s1-application.model';\r\nimport { S2Application } from './s2-application.model';\r\n\r\nexport class AttachmentDocument {\r\n    id: number;\r\n    applicationId: S1Application;\r\n    applicationS2Id: S2Application;\r\n    attachmentType: string; // MAIN, SUPPORTIVE, PAYMENT\r\n    autoSubmit: boolean;\r\n    brandPenaltyAttachmentReference: string;\r\n    documentFormat: string;\r\n    fileExtension: string;\r\n    fileURL: string;\r\n    filename: string;\r\n    mainAttachmentReference: string;\r\n    supportingAttachmentReference: string;\r\n    paymentAttachmentReference: string;\r\n    revisionLetterAttachmentReference: string;\r\n    finalMaterialAttachmentReference: string;\r\n    originalFilename: string;\r\n    status: string;\r\n    submissionType: string; // ORIGINAL, REVISION, COMPLIANCE, TOA\r\n    voucherAttachmentReference: string;\r\n    applicationFormId: string; // for compliance used only\r\n    applicationForm: string;\r\n    appFormReference: string;\r\n    modifiedApprovedS1AttachmentReference: string;\r\n    fileSize: number\r\n\r\n    createdBy: string;\r\n    createdDate: Date;\r\n    modifiedBy: string;\r\n    modifiedDate: Date;\r\n}\r\n","import { Product } from './product.model';\r\n\r\nexport class Category {\r\n    id: number;\r\n    description: string;\r\n    status: string;\r\n}\r\n","import { TypeOfDocument } from './type-of-document.model';\r\nimport { S1Application } from './s1-application.model';\r\n\r\nexport class SupportingDocument {\r\n    id: number;\r\n    appFormReference: S1Application;\r\n    typeOfDocument: TypeOfDocument;\r\n    basedOn: string;\r\n    variant: string;\r\n    dateOfLaunch: Date;\r\n    expiresOn: Date;\r\n    remarks: string;\r\n    input: string;\r\n\r\n    createdBy: string;\r\n    createdDate: Date;\r\n    modifiedBy: string;\r\n    modifiedDate: Date;\r\n}\r\n","export class UserRole {\r\n    id: number;\r\n    name: string;\r\n    status: string;\r\n}\r\n","export default \".column {\\n  float: left;\\n  width: 50%;\\n  padding: 10px;\\n}\\n\\n.row:after {\\n  content: \\\"\\\";\\n  display: table;\\n  clear: both;\\n}\\n\\n.button-right__approve {\\n  margin: 0;\\n}\\n\\n.button-center {\\n  margin: -5px auto;\\n}\\n\\n.numbers-input {\\n  text-align: end;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9wYWdlcy9hY2NvdW50aW5nL2FkZC1wZW5hbHR5L2FkZC1wZW5hbHR5LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksV0FBQTtFQUNBLFVBQUE7RUFDQSxhQUFBO0FBQ0o7O0FBRUE7RUFDSSxXQUFBO0VBQ0EsY0FBQTtFQUNBLFdBQUE7QUFDSjs7QUFFQTtFQUVJLFNBQUE7QUFBSjs7QUFHQTtFQUNJLGlCQUFBO0FBQUo7O0FBR0E7RUFDRSxlQUFBO0FBQUYiLCJmaWxlIjoic3JjL2FwcC9tb2R1bGVzL3BhZ2VzL2FjY291bnRpbmcvYWRkLXBlbmFsdHkvYWRkLXBlbmFsdHkuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY29sdW1uIHtcclxuICAgIGZsb2F0OiBsZWZ0O1xyXG4gICAgd2lkdGg6IDUwJTtcclxuICAgIHBhZGRpbmc6IDEwcHg7XHJcbn1cclxuXHJcbi5yb3c6YWZ0ZXIge1xyXG4gICAgY29udGVudDogXCJcIjtcclxuICAgIGRpc3BsYXk6IHRhYmxlO1xyXG4gICAgY2xlYXI6IGJvdGg7XHJcbn1cclxuXHJcbi5idXR0b24tcmlnaHRfX2FwcHJvdmUge1xyXG4gICAgLy8gbWFyZ2luOiAtMTBweDtcclxuICAgIG1hcmdpbjogMDtcclxufVxyXG5cclxuLmJ1dHRvbi1jZW50ZXIge1xyXG4gICAgbWFyZ2luOiAtNXB4IGF1dG87XHJcbn1cclxuXHJcbi5udW1iZXJzLWlucHV0e1xyXG4gIHRleHQtYWxpZ246IGVuZDtcclxufVxyXG4iXX0= */\";","export class PaymentType {\r\n    id: number;\r\n    amount: boolean;\r\n    bankBranch: boolean;\r\n    bankName: boolean;\r\n    controlNo: boolean;\r\n    fundTransferDate: boolean;\r\n    paymentDescription: string;\r\n    promisorryDate: boolean;\r\n    referenceNo: boolean;\r\n    status: string;\r\n}\r\n","export class OrPreparationReference {\r\n    id: number;\r\n    reference: string;\r\n    amount: number;\r\n}","export class PerformanceMetrics {\r\n    id: number;\r\n    referenceCode: string;\r\n    appFormReference: string;\r\n    movement: string;\r\n    actionBy: string;\r\n    userRole: string;\r\n    currentDateTime: Date;\r\n    previousDateTime: Date;\r\n    duration: string;\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AddPenaltyComponent } from './add-penalty.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component : AddPenaltyComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AddPenaltyRoutingModule { }\r\n","import { PaymentType } from \"./payment-type.model\";\r\n\r\nexport class PaymentMethod {\r\n    id: number;\r\n    paymentType: PaymentType;\r\n    referenceNo: string;\r\n    controlNo: string;\r\n    paymentDate: Date;\r\n    amount: number;\r\n    bankName: string\r\n    bankBranch: string;\r\n    promisorryDate: Date;\r\n    ccConfirmationCode: string;\r\n    checkNo: string;\r\n}\r\n","export * from './affiliation.model';\r\nexport * from './brand.model';\r\nexport * from './company.model';\r\nexport * from './payment-type.model';\r\nexport * from './profile.model';\r\nexport * from './s1-application.model';\r\nexport * from './s2-application.model';\r\nexport * from './type-of-document.model';\r\nexport * from './type-of-medium.model';\r\nexport * from './type-of-reason.model';\r\nexport * from './user-role.model';\r\nexport * from './user-account.model';\r\nexport * from './attachment-document.model';\r\nexport * from './category.model';\r\nexport * from './product.model';\r\nexport * from './type-of-application.model';\r\nexport * from './asc-rate.model';\r\nexport * from './payment.model';\r\nexport * from './country.model';\r\nexport * from './performance-metrics.model';\r\nexport * from './or-preparation.model';\r\nexport * from './or-preparation-reference.model';\r\nexport * from './supporting-document.model';\r\nexport * from './application-single-media.model';\r\nexport * from './application-request.model';\r\nexport * from './application-multimedia.model';\r\n","export class Affiliation {\r\n    id: number;\r\n    description: string;\r\n    member: boolean;\r\n    status: string;\r\n}\r\n","import { Category, Product } from '@models';\r\n\r\nexport class Brand {\r\n    id: number;\r\n    description: string;\r\n    // product: Product;\r\n    // category: Category;\r\n    status: string;\r\n    penalty: boolean;\r\n  }\r\n","import { Affiliation } from './affiliation.model';\r\nimport { Country } from './country.model';\r\n\r\nexport class Company {\r\n    id: number;\r\n    companyName: string;\r\n    companyTelephoneNo: string;\r\n    companyTin: string;\r\n    country: Country;\r\n    status: string;\r\n    completeAddress: string;\r\n    voucherApproved: boolean\r\n    membersAffiliation: Affiliation;\r\n    delinquent: boolean;\r\n    contactPersonEmail: string;\r\n    contactPersonName: string;\r\n    amountToSettle: number;\r\n    companyMobileNo: string;\r\n    companyTelephoneNo2: string;\r\n}\r\n","import { Brand } from \"./brand.model\";\r\nimport { PaymentMethod } from \"./payment-method.model\";\r\n\r\nexport class BrandPenalty {\r\n    id: number;\r\n    amount: number;\r\n    brand: Brand;\r\n    brandPenaltyAttachmentReference: string;\r\n    paidDate: Date;\r\n    paymentMethod: PaymentMethod;\r\n    paymentStatus: string;\r\n    penaltyDate: Date;\r\n    remarks: string;\r\n    status: string;\r\n}"]}