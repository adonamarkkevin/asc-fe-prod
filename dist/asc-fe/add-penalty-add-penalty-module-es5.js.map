<<<<<<< HEAD
{"version":3,"sources":["webpack:///src/app/core/models/company-penalty.model.ts","webpack:///src/app/modules/pages/accounting/add-penalty/add-penalty.module.ts","webpack:///src/app/modules/pages/accounting/add-penalty/add-penalty.component.ts","webpack:///src/app/modules/pages/accounting/add-penalty/add-penalty.component.html","webpack:///src/app/modules/pages/accounting/add-penalty/add-penalty-routing.module.ts","webpack:///src/app/core/models/brand-penalty.model.ts"],"names":["CompanyPenalty","AddPenaltyModule","validateFieldService","AddPenaltyComponent","router","apiService","sweetAlertService","sanitizer","fileStorageService","route","spinner","dataStorageService","displayedColumns","brandPenalty","companyPenalty","paymentType","attachmentDocument","paymentMethod","company","objAttachmentReference","brandPenaltyAttachmentReference","paymentAttachmentReference","paymentTypeList","brandList","companyList","companyPenaltyList","delinquentAppForms","notInSelection","previewDocument","process","paymentTypeFromUrl","approveDelinquent","isShowUploadButton","currentUser","getUserAccount","getPenalizedBrandList","getCompanyList","getPaymentList","id","Number","snapshot","paramMap","get","viewPayment","sessionStorage","removeItem","elm","paymentStatus","navigate","toLowerCase","findAll","brand","subscribe","res","responseData","data","filter","includes","status","userRole","name","ROLE_APPLICANT","creditCardIndex","findIndex","element","paymentDescription","splice","event","target","files","fileSize","size","customErrorMessage","value","fileURL","URL","createObjectURL","safeURLBrand","bypassSecurityTrustResourceUrl","reader","FileReader","file","readAsDataURL","onload","selectedFile","penaltyType","fire","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","save","brandPenalties","customSuccessMessage","err","error","penaltyDate","Date","companyPenalties","show","attachmentType","BRAND_PENALTY_PAYMENT","PAYMENT","params","ORIGINAL","pushFileToStorage","uploadedPaymentFile","addToAttachmentDocuments","payment","hideSpinner","getAttachmentDocument","attachment","console","log","paymentDate","approveBrandPenalty","amount","message","responseMessage","amountDue","amountReceive","approveDelinquentCompany","findById","obj","penaltyBrand","description","getAttachmentDocuments","penaltyCompany","companyName","totalBalance","filteredData","map","mapped","penaltyAmount","reduce","previousValue","currentValue","previewRemarks","remarks","getPayment","applicationForm","getAppFormsByCompanyId","companyId","dataSource","paginator","param","findByParam","originalFilename","filename","fileExtension","documentFormat","setTimeout","hide","brandPenaltyAttachmentDocument","attachmentReference","window","open","selected","update","navigateToList","routes","path","component","AddPenaltyRoutingModule","forChild","BrandPenalty"],"mappings":"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","file":"add-penalty-add-penalty-module-es5.js","sourcesContent":["import { Company } from './company.model';\r\nimport { PaymentMethod } from './payment-method.model';\r\n\r\nexport class CompanyPenalty {\r\n    id: number;\r\n    company: Company;\r\n    paymentStatus: string;\r\n    penaltyAmount: number;\r\n    penaltyDate: Date;\r\n    remarks: string;\r\n    paymentAttachmentReference: string;\r\n    paymentMethod: PaymentMethod;\r\n\r\n    // not yet in BE\r\n    // paidDate: Date;\r\n    // status: string;\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AddPenaltyRoutingModule } from './add-penalty-routing.module';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { AngularMaterialModule } from '@shared';\r\nimport { AddPenaltyComponent } from './add-penalty.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [AddPenaltyComponent],\r\n  imports: [\r\n    CommonModule,\r\n    AddPenaltyRoutingModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    AngularMaterialModule,\r\n  ]\r\n})\r\nexport class AddPenaltyModule { }\r\n","import { USER_ROLES } from './../../../../shared/utils/constants';\r\nimport { Component, Input, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { AttachmentDocument, Payment, PaymentType, Company } from '@models';\r\nimport { ApiService, DataStorageService, SweetAlertService } from '@services';\r\nimport { ATTACHMENT_TYPE, ENDPOINTS, SUBMISSION_TYPE } from '@shared';\r\nimport { BrandPenalty } from 'app/core/models/brand-penalty.model';\r\nimport { CompanyPenalty } from 'app/core/models/company-penalty.model';\r\nimport { PaymentMethod } from 'app/core/models/payment-method.model';\r\nimport { FileStorageService } from 'app/core/services/file.storage.service';\r\nimport { ValidateFieldService } from 'app/core/services/validate-field.service';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-add-penalty',\r\n  templateUrl: './add-penalty.component.html',\r\n  styleUrls: ['./add-penalty.component.scss']\r\n})\r\nexport class AddPenaltyComponent implements OnInit, OnDestroy {\r\n\r\n  @ViewChild(MatPaginator, { static: false }) paginator: MatPaginator;\r\n  dataSource: MatTableDataSource<any>\r\n  displayedColumns = ['referenceCode', 'brand', 'typeOfMedium', 'paymentStatus'];\r\n  brandPenalty = new BrandPenalty();\r\n  companyPenalty = new CompanyPenalty();\r\n  payment: any; // = new Payment();\r\n  paymentType = new PaymentType();\r\n  attachmentDocument = new AttachmentDocument();\r\n  paymentMethod = new PaymentMethod();\r\n  company = new Company();\r\n\r\n  objAttachmentReference = {\r\n    brandPenaltyAttachmentReference: '',\r\n    paymentAttachmentReference: ''\r\n  };\r\n\r\n  paymentTypeList = [];\r\n  brandList = [];\r\n  companyList = [];\r\n  companyPenaltyList = [];\r\n  delinquentAppForms = [];\r\n  notInSelection = ['INACTIVE', 'DISAPPROVED'];\r\n  // attachmentDocuments = [];\r\n  id: number;\r\n  penaltyBrand: string;\r\n  penaltyCompany: string;\r\n  paymentMode: string;\r\n  totalBalance: number;\r\n  previewRemarks: string;\r\n  previewDocument = false;\r\n  attachment: any;\r\n  process = 'save';\r\n  paymentTypeFromUrl = '';\r\n  approveDelinquent = false;\r\n  currentUser: any;\r\n\r\n  @Input() safeURLBrand: any;\r\n  isShowUploadButton = false;\r\n  fileSize: number;\r\n  selectedFile: File;\r\n  uploadedPaymentFile: any;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private apiService: ApiService,\r\n    private sweetAlertService: SweetAlertService,\r\n    private sanitizer: DomSanitizer,\r\n    private fileStorageService: FileStorageService,\r\n    private route: ActivatedRoute,\r\n    private spinner: NgxSpinnerService,\r\n    public validateFieldService: ValidateFieldService,\r\n    private dataStorageService: DataStorageService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.currentUser = this.dataStorageService.getUserAccount();\r\n    this.getPenalizedBrandList();\r\n    this.getCompanyList();\r\n    this.getPaymentList();\r\n    this.id = Number(this.route.snapshot.paramMap.get('id'));\r\n    this.paymentTypeFromUrl = this.route.snapshot.paramMap.get('type');\r\n    if (this.id !== 0) {\r\n      this.process = 'update';\r\n      this.viewPayment();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    sessionStorage.removeItem('PAYMENT');\r\n  }\r\n\r\n  getPaymentDetails(elm) {\r\n    if (elm?.paymentStatus) {\r\n      this.router.navigate(['asc/page/accounting/update/', `${elm?.paymentStatus?.toLowerCase()}-${elm.id}`, `delinquent-${elm.id}`]);\r\n    } else {\r\n      this.router.navigate(['asc/page/accounting/update/', `delinquent-${elm.id}`]);\r\n    }\r\n  }\r\n\r\n\r\n  getPenalizedBrandList() {\r\n    this.apiService.findAll(ENDPOINTS.brand).subscribe((res: any) => {\r\n      // this.brandList = res.responseData.data.filter(penalizedBrands => penalizedBrands.penalty);\r\n      this.brandList = res.responseData.data;\r\n    });\r\n  }\r\n\r\n  getCompanyList() {\r\n    this.apiService.findAll(ENDPOINTS.company).subscribe((res: any) => {\r\n      this.companyList = res.responseData.data.filter((company) => !this.notInSelection.includes(company.status));\r\n    });\r\n  }\r\n\r\n  getPaymentList() {\r\n    this.apiService.findAll(ENDPOINTS.paymentType).subscribe((res: any) => {\r\n      this.paymentTypeList = res.responseData.data;\r\n      if (this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT) {\r\n        const creditCardIndex = this.paymentTypeList\r\n          .findIndex((element) => element.paymentDescription === 'Credit Card');\r\n        this.paymentTypeList.splice(creditCardIndex, 1);\r\n      }\r\n    });\r\n  }\r\n\r\n  selectFile(event) {\r\n    this.isShowUploadButton = false;\r\n\r\n    if (event.target.files[0]) {\r\n      this.fileSize = event.target.files[0].size;\r\n\r\n      if (this.fileSize > 15000000) {\r\n        this.sweetAlertService.customErrorMessage(`Attachments' total file size should not exceed 15MB.`);\r\n        event.target.value = '';\r\n        return;\r\n\r\n      } else {\r\n        this.isShowUploadButton = true;\r\n        const fileURL = URL.createObjectURL(event.target.files[0]);\r\n        this.previewDocument = true;\r\n\r\n        this.safeURLBrand = this.sanitizer.bypassSecurityTrustResourceUrl(fileURL);\r\n\r\n        const reader = new FileReader();\r\n        const [file] = event.target.files;\r\n\r\n        reader.readAsDataURL(file);\r\n        reader.onload = () => {\r\n        };\r\n\r\n        this.selectedFile = event.target.files[0];\r\n      }\r\n    }\r\n  }\r\n\r\n  addPenalty(penaltyType = 'Brand') {\r\n    Swal.fire({\r\n      text: `Are you sure you want to submit this ${penaltyType} Penalty?`,\r\n      icon: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Confirm'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        if (penaltyType === 'Brand') {\r\n          this.apiService.save(ENDPOINTS.brandPenalties, this.brandPenalty).subscribe(\r\n            (res: any) => {\r\n              this.sweetAlertService.customSuccessMessage('Brand penalty successfully saved.');\r\n              this.router.navigate(['asc/page/accounting/payments/', 'brand-penalties']);\r\n            }, (err: any) => {\r\n              this.sweetAlertService.error(err);\r\n            }\r\n          );\r\n        } else if (penaltyType === 'Company') {\r\n          this.companyPenalty.penaltyDate = new Date();\r\n          this.apiService.save(ENDPOINTS.companyPenalties, this.companyPenalty).subscribe(\r\n            (res: any) => {\r\n              this.sweetAlertService.customSuccessMessage('Company penalty successfully saved.');\r\n              this.router.navigate(['asc/page/accounting/payments/', 'company-penalties']);\r\n            }, (err: any) => {\r\n              this.sweetAlertService.error(err);\r\n            }\r\n          );\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  uploadProofOfPayment() {\r\n    Swal.fire({\r\n      text: 'Are you sure you want to submit this as proof of payment?',\r\n      icon: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Confirm'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.spinner.show();\r\n        let attachmentType = '';\r\n        if (this.paymentTypeFromUrl === 'brand') {\r\n          attachmentType = ATTACHMENT_TYPE.BRAND_PENALTY_PAYMENT;\r\n        } else if (this.paymentTypeFromUrl === 'company' || this.paymentTypeFromUrl === 'delinquent') {\r\n          attachmentType = ATTACHMENT_TYPE.PAYMENT;\r\n        }\r\n\r\n        let params = '';\r\n        params = '?&attachmentType=' + attachmentType + '&submissionType=' + SUBMISSION_TYPE.ORIGINAL;\r\n        this.fileStorageService.pushFileToStorage(ENDPOINTS.attachmentDocument, this.selectedFile, params)\r\n          .subscribe((res: any) => {\r\n            this.uploadedPaymentFile = res.responseData.data;\r\n            this.addToAttachmentDocuments(this.uploadedPaymentFile);\r\n\r\n            if (this.paymentTypeFromUrl === 'brand') {\r\n              this.brandPenalty.brandPenaltyAttachmentReference = this.uploadedPaymentFile.brandPenaltyAttachmentReference;\r\n              this.objAttachmentReference.brandPenaltyAttachmentReference = this.brandPenalty.brandPenaltyAttachmentReference;\r\n            } else if (this.paymentTypeFromUrl === 'company') {\r\n              this.companyPenalty.paymentAttachmentReference = this.uploadedPaymentFile.paymentAttachmentReference;\r\n              this.objAttachmentReference.paymentAttachmentReference = this.companyPenalty.paymentAttachmentReference;\r\n            } else if (this.paymentTypeFromUrl === 'delinquent') {\r\n              this.payment.paymentAttachmentReference = this.uploadedPaymentFile.paymentAttachmentReference;\r\n              this.objAttachmentReference.paymentAttachmentReference = this.payment.paymentAttachmentReference;\r\n            }\r\n            this.hideSpinner();\r\n            this.sweetAlertService.customSuccessMessage('Attachment successfully uploaded.');\r\n            this.selectedFile = null;\r\n\r\n            if (this.brandPenalty.brandPenaltyAttachmentReference || this.companyPenalty.paymentAttachmentReference\r\n              || this.payment.paymentAttachmentReference === 'delinquent') {\r\n              this.getAttachmentDocument();\r\n            }\r\n\r\n          }, (err: any) => {\r\n            this.hideSpinner();\r\n            this.sweetAlertService.error(err);\r\n          }, () => {\r\n            // actions after subscription\r\n          });\r\n      } else {\r\n        this.selectedFile = null;\r\n      }\r\n    });\r\n  }\r\n\r\n  saveBrandPenalty() {\r\n    this.apiService.save(`${ENDPOINTS.brandPenalties}/payment-type-id/${this.paymentType.id}/payment/submit`, this.brandPenalty)\r\n      .subscribe((res: any) => {\r\n        this.brandPenalty = new BrandPenalty();\r\n        this.paymentType = new PaymentType();\r\n        this.attachment = null;\r\n        this.previewDocument = false;\r\n        this.sweetAlertService.customSuccessMessage('Voucher fund successfully submitted.');\r\n      }, (err) => {\r\n        console.log(err);\r\n        this.sweetAlertService.error(err);\r\n      });\r\n  }\r\n\r\n  approvePenalty() {\r\n    if (this.paymentTypeFromUrl === 'brand') {\r\n      Swal.fire({\r\n        text: 'Are you sure you want to approve this Brand Penalty?',\r\n        icon: 'question',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        confirmButtonText: 'Confirm'\r\n      }).then((result) => {\r\n        if (result.value) {\r\n          this.paymentMethod.paymentDate = new Date();\r\n          this.brandPenalty.paymentMethod = this.paymentMethod;\r\n          this.brandPenalty.brandPenaltyAttachmentReference = this.attachmentDocument.brandPenaltyAttachmentReference;\r\n          console.log(this.paymentMethod);\r\n\r\n          this.apiService.save(ENDPOINTS.approveBrandPenalty, this.brandPenalty).subscribe((res: any) => {\r\n            this.sweetAlertService.customSuccessMessage('Brand penalty approved successfully.');\r\n            this.router.navigate(['asc/page/accounting/payments/', 'brand-penalties']);\r\n          });\r\n        } else {\r\n          this.attachment = null;\r\n        }\r\n      });\r\n    } else if (this.paymentTypeFromUrl === 'company') {\r\n      Swal.fire({\r\n        text: 'Are you sure you want to approve this Company Penalty?',\r\n        icon: 'question',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        confirmButtonText: 'Confirm'\r\n      }).then((result) => {\r\n        if (result.value) {\r\n          // this.paymentMethod.paymentDate = new Date();\r\n          this.companyPenalty.paymentMethod = this.paymentMethod;\r\n          this.companyPenalty.paymentAttachmentReference = this.attachmentDocument.paymentAttachmentReference;\r\n          console.log(this.paymentMethod);\r\n          console.log(this.companyPenalty);\r\n          console.log(this.attachmentDocument.paymentAttachmentReference);\r\n          this.companyPenaltyList[0].paymentMethod = this.paymentMethod;\r\n          this.companyPenaltyList[0].paymentAttachmentReference = this.attachmentDocument.paymentAttachmentReference;\r\n          this.apiService.save(`${ENDPOINTS.companyPenalties}/submit-penalty-payment?amountReceived=${this.paymentMethod.amount}&paymentTypeId=${this.paymentMethod?.paymentType?.id}`,\r\n            this.companyPenaltyList[0]).subscribe((res: any) => {\r\n              this.sweetAlertService.customSuccessMessage('Company penalty approved successfully.');\r\n              this.router.navigate(['asc/page/accounting/payments/', 'company-penalties']);\r\n            }, err => {\r\n              if (!err.error.message) {\r\n                err.error.message = err.error.responseMessage;\r\n              }\r\n              this.sweetAlertService.error(err);\r\n            });\r\n        } else {\r\n          this.attachment = null;\r\n        }\r\n      });\r\n    } else if (this.paymentTypeFromUrl === 'delinquent') {\r\n      if (this.paymentMethod.amount < this.payment.amountDue) {\r\n        this.sweetAlertService.customErrorMessage(`Amount Received/Transferred is lower than Amount Due.`);\r\n      } else {\r\n        Swal.fire({\r\n          text: 'Are you sure you want to approve this Delinquent Company?',\r\n          icon: 'question',\r\n          showCancelButton: true,\r\n          confirmButtonColor: '#3085d6',\r\n          cancelButtonColor: '#d33',\r\n          confirmButtonText: 'Confirm'\r\n        }).then((result) => {\r\n          if (result.value) {\r\n            // this.paymentMethod.paymentDate = new Date();\r\n            this.payment.paymentMethod = this.paymentMethod;\r\n            this.payment.amountReceive = Number(this.paymentMethod.amount);\r\n            console.log(this.paymentMethod);\r\n            console.log(this.payment);\r\n\r\n            this.apiService.save(`${ENDPOINTS.approveDelinquentCompany}`, this.payment).subscribe((res: any) => {\r\n              this.sweetAlertService.customSuccessMessage('Delinquent company approved successfully.');\r\n              this.router.navigate(['asc/page/accounting/payments/', 'delinquent-companies']);\r\n            }, err => {\r\n              if (!err.error.message) {\r\n                err.error.message = err.error.responseMessage;\r\n              }\r\n              this.sweetAlertService.error(err);\r\n            });\r\n          } else {\r\n            this.attachment = null;\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  viewPayment() {\r\n    if (this.paymentTypeFromUrl === 'brand') {\r\n      this.apiService.findById(ENDPOINTS.brandPenalties, this.id).subscribe((res: any) => {\r\n        const obj = res.responseData.data;\r\n        this.penaltyBrand = obj.brand.description;\r\n        if (obj?.paymentMethod) {\r\n          this.paymentType = obj?.paymentMethod?.paymentType;\r\n          this.paymentMethod = obj?.paymentMethod;\r\n        }\r\n        this.brandPenalty = obj;\r\n        if (this.brandPenalty.brandPenaltyAttachmentReference) {\r\n          this.objAttachmentReference.brandPenaltyAttachmentReference = this.brandPenalty.brandPenaltyAttachmentReference;\r\n          this.getAttachmentDocuments();\r\n        }\r\n      });\r\n    } else if (this.paymentTypeFromUrl === 'company') {\r\n      this.apiService.findById(`${ENDPOINTS.companyPenalties}/company`, this.id).subscribe((res: any) => {\r\n        if (res.responseData.data) {\r\n          this.companyPenaltyList = res.responseData.data;\r\n\r\n          if (this.companyPenaltyList[0].paymentAttachmentReference) {\r\n            this.objAttachmentReference.paymentAttachmentReference = this.companyPenalty.paymentAttachmentReference;\r\n            this.getAttachmentDocuments();\r\n          }\r\n\r\n          this.penaltyCompany = this.companyPenaltyList[0].company.companyName;\r\n          this.totalBalance = this.companyPenaltyList.filter(filteredData => filteredData.paymentStatus !== 'PAID')\r\n            .map(mapped => mapped.penaltyAmount).reduce((previousValue, currentValue) =>\r\n              previousValue + currentValue,\r\n              0);\r\n          this.previewRemarks = this.companyPenaltyList.filter(filteredData => filteredData.paymentStatus !== 'PAID')\r\n            .map(mapped => mapped.remarks ? mapped.remarks + '. ' : '')\r\n            .reduce((previousValue, currentValue) =>\r\n              previousValue + currentValue,\r\n              '');\r\n\r\n        }\r\n      });\r\n    } else if (this.paymentTypeFromUrl === 'delinquent') {\r\n      this.payment = this.dataStorageService.getPayment();\r\n\r\n      const companyName = this.payment?.applicationForm?.companyName;\r\n      this.company.companyName = companyName;\r\n      this.getAppFormsByCompanyId(this.payment?.companyId);\r\n    }\r\n  }\r\n\r\n  getAppFormsByCompanyId(companyId) {\r\n    this.apiService.findAll(ENDPOINTS.getAppFormsByCompanyId + companyId).subscribe((res: any) => {\r\n      this.delinquentAppForms = res.responseData.data;\r\n      this.dataSource = new MatTableDataSource<any>(this.delinquentAppForms);\r\n      this.dataSource.paginator = this.paginator;\r\n    });\r\n  }\r\n\r\n  getAttachmentDocuments() {\r\n    let param;\r\n    if (this.brandPenalty.brandPenaltyAttachmentReference) {\r\n      param = `brand-penalty-attachment-reference/${this.brandPenalty.brandPenaltyAttachmentReference}`;\r\n    } else if (this.companyPenalty.paymentAttachmentReference) {\r\n      param = `payment-attachment-reference/${this.companyPenaltyList[0].paymentAttachmentReference}`;\r\n    }\r\n\r\n    this.apiService.findByParam(ENDPOINTS.attachmentDocument, param).subscribe((res: any) => {\r\n      if (res) {\r\n        this.attachmentDocument = res.responseData.data;\r\n      }\r\n      this.previewDocument = true;\r\n      this.safeURLBrand = this.sanitizer.bypassSecurityTrustResourceUrl(this.attachmentDocument.fileURL);\r\n    });\r\n  }\r\n\r\n  addToAttachmentDocuments(obj: any) {\r\n    this.attachmentDocument.brandPenaltyAttachmentReference = obj.brandPenaltyAttachmentReference;\r\n    this.attachmentDocument.id = obj.id;\r\n    this.attachmentDocument.originalFilename = obj.originalFilename;\r\n    this.attachmentDocument.filename = obj.filename;\r\n    this.attachmentDocument.fileExtension = obj.fileExtension;\r\n    this.attachmentDocument.fileURL = obj.fileURL;\r\n    this.attachmentDocument.attachmentType = obj.attachmentType;\r\n    this.attachmentDocument.documentFormat = obj.documentFormat;\r\n  }\r\n\r\n  hideSpinner() {\r\n    setTimeout(() => {\r\n      this.spinner.hide();\r\n    }, 1);\r\n  }\r\n\r\n  getAttachmentDocument() {\r\n    this.spinner.show();\r\n\r\n    if (this.paymentTypeFromUrl === 'brand') {\r\n      this.apiService.findByParam(ENDPOINTS.brandPenaltyAttachmentDocument,\r\n        this.brandPenalty.brandPenaltyAttachmentReference).subscribe(\r\n          (res: any) => {\r\n            if (res) {\r\n              this.attachmentDocument = res;\r\n            }\r\n            this.hideSpinner();\r\n          }, (err: any) => {\r\n            this.hideSpinner();\r\n            console.error(err);\r\n          });\r\n    } else {\r\n      let attachmentReference = '';\r\n      if (this.paymentTypeFromUrl === 'company') {\r\n        attachmentReference = this.companyPenalty.paymentAttachmentReference;\r\n      } else if (this.paymentTypeFromUrl === 'delinquent') {\r\n        attachmentReference = this.payment.paymentAttachmentReference;\r\n      }\r\n      this.apiService.findByParam(ENDPOINTS.paymentAttachmentReference,\r\n        attachmentReference).subscribe(\r\n          (res: any) => {\r\n            if (res) {\r\n              this.attachmentDocument = res?.responseData?.data;\r\n            }\r\n            this.hideSpinner();\r\n          }, (err: any) => {\r\n            this.hideSpinner();\r\n            console.error(err);\r\n          });\r\n    }\r\n  }\r\n\r\n  viewDocument() {\r\n    if (this.uploadedPaymentFile) {\r\n      window.open(this.uploadedPaymentFile.fileURL);\r\n    } else {\r\n      window.open(this.attachmentDocument.fileURL);\r\n    }\r\n  }\r\n\r\n  comparePaymentMethod(value: any, selected: any): boolean {\r\n    if (value && selected) {\r\n      return value.paymentDescription === selected.paymentDescription;\r\n    }\r\n  }\r\n\r\n  compareCompany(value: any, selected: any): boolean {\r\n    if (value && selected) {\r\n      return value.id === selected.id;\r\n    }\r\n  }\r\n\r\n  navigateToList() {\r\n    Swal.fire({\r\n      text: 'Are you sure you want to go back to payment list?',\r\n      icon: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Confirm'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        if (this.paymentTypeFromUrl === 'brand') {\r\n          this.router.navigate(['asc/page/accounting/payments/', 'brand-penalties']);\r\n        } else if (this.paymentTypeFromUrl === 'company') {\r\n          this.router.navigate(['asc/page/accounting/payments/', 'company-penalties']);\r\n        } else if (this.paymentTypeFromUrl === 'delinquent') {\r\n          this.router.navigate(['asc/page/accounting/payments/', 'delinquent-companies']);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  updatePayment() {\r\n    this.apiService.update(ENDPOINTS.companyPenalties, this.companyPenalty).subscribe(\r\n      res => {\r\n        console.log('Update companyPenalties: ', res);\r\n      }, err => {\r\n        console.log(err);\r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n","<form>\r\n    <div class=\"container-fluid\">\r\n        <div class=\"row\">\r\n            <div class=\"column\">\r\n                <div class=\"col-md-12 title\">\r\n                    <mat-label>\r\n                        {{ paymentTypeFromUrl | titlecase }} Penalties\r\n                    </mat-label>\r\n                    <button mat-raised-button class=\"button-right button-red button-center\" (click)=\"navigateToList()\">\r\n                        <i class=\"material-icons color__white\">list</i> BACK TO LIST\r\n                    </button>\r\n                </div>\r\n                <hr>\r\n\r\n                <div class=\"col-md-12\" appearance=\"outline\"\r\n                    *ngIf=\"paymentTypeFromUrl === 'brand' || paymentTypeFromUrl === 'company'\">\r\n                    <mat-label>Filename: </mat-label>\r\n                    <br>\r\n                    <input matInput [value]=\"attachmentDocument.originalFilename || objAttachmentReference?.brandPenaltyAttachmentReference || objAttachmentReference?.paymentAttachmentReference\" disabled\r\n                        *ngIf=\"attachmentDocument.originalFilename || objAttachmentReference?.brandPenaltyAttachmentReference || objAttachmentReference?.paymentAttachmentReference\">\r\n\r\n                    <input class=\"file-upload\" type=\"file\" *ngIf=\"!attachmentDocument.originalFilename\" accept=\".pdf\"\r\n                        (change)=\"selectFile($event)\" [hidden]=\"objAttachmentReference?.brandPenaltyAttachmentReference || objAttachmentReference?.paymentAttachmentReference\">\r\n                    <br><br>\r\n                </div>\r\n                <div class=\"col-md-12\" appearance=\"outline\" *ngIf=\"paymentTypeFromUrl === 'delinquent' \">\r\n                    <ng-container *ngTemplateOutlet=\"approveDelinquent\"></ng-container>\r\n                </div>\r\n                <div class=\"col-md-12\" appearance=\"outline\"\r\n                    *ngIf=\"paymentTypeFromUrl === 'brand' || paymentTypeFromUrl === 'company' || paymentTypeFromUrl === 'delinquent' \">\r\n\r\n                    <button mat-raised-button class=\"button-red button-right\" (click)=\"viewDocument()\"\r\n                        *ngIf=\"objAttachmentReference?.brandPenaltyAttachmentReference || objAttachmentReference?.paymentAttachmentReference\">\r\n                        <i class=\"material-icons add-document\">open_in_new</i> VIEW DOCUMENT\r\n                    </button>\r\n\r\n                    &nbsp; &nbsp;\r\n\r\n                    <button mat-raised-button class=\"button-red button-right\" (click)=\"uploadProofOfPayment()\"\r\n                        [disabled]=\"!safeURLBrand||!isShowUploadButton\" *ngIf=\"isShowUploadButton\"\r\n                        [hidden]=\"objAttachmentReference?.brandPenaltyAttachmentReference || objAttachmentReference?.paymentAttachmentReference\">\r\n                        <i class=\"material-icons add-document\">upload</i> UPLOAD\r\n                    </button>\r\n\r\n                    <br><br>\r\n                    <div class=\"row col-md-12\" appearance=\"outline\"\r\n                        *ngIf=\"previewDocument==true && (\r\n                            objAttachmentReference?.brandPenaltyAttachmentReference ||\r\n                            objAttachmentReference?.paymentAttachmentReference\r\n                        )\">\r\n                        <div class=\"file-upload\">\r\n                            <object [data]=\"safeURLBrand\" type=\"application/pdf\" width=\"100%\" height=\"400\">\r\n                                <iframe [src]=\"safeURLBrand\" width=\"100%\" height=\"400\">\r\n                                    <p>This browser does not support PDF!</p>\r\n                                </iframe>\r\n                            </object>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"column\" *ngIf=\"paymentTypeFromUrl === 'brand' \">\r\n                <ng-container *ngTemplateOutlet=\"addBrandPenalty\"></ng-container>\r\n            </div>\r\n            <div class=\"column\" *ngIf=\"paymentTypeFromUrl === 'company' \">\r\n                <ng-container *ngTemplateOutlet=\"addCompanyPenalty\"></ng-container>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</form>\r\n\r\n<ng-template #approveDelinquent>\r\n    <div class=\"col-md-12\" style=\"padding: 0 2em;\">\r\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n            <mat-label>Company</mat-label>\r\n            <input matInput name=\"penaltyBrand\" [(ngModel)]=\"company.companyName\" [ngModelOptions]=\"{standalone: true}\"\r\n                readonly>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n            <mat-label>Amount to Settle</mat-label>\r\n            <input class=\"numbers-input\" matInput name=\"amountDue\" [value]=\"payment?.amountDue | number : '1.2-2'\"\r\n                type=\"text\" (keydown)=\"validateFieldService.numbersOnly($event)\" readonly>\r\n        </mat-form-field>\r\n\r\n        <div class=\"mat-elevation-z8 fields\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n\r\n            <ng-container matColumnDef=\"referenceCode\">\r\n              <th mat-header-cell *matHeaderCellDef > REFERENCE CODE </th>\r\n              <td mat-cell *matCellDef=\"let element\" (click)=\"getPaymentDetails(element)\"> {{ element?.referenceCode | uppercase }} </td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"brand\">\r\n              <th mat-header-cell *matHeaderCellDef > BRAND </th>\r\n              <td mat-cell *matCellDef=\"let element\" (click)=\"getPaymentDetails(element)\"> {{ element?.brand?.description | uppercase }} </td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"typeOfMedium\">\r\n              <th mat-header-cell *matHeaderCellDef > TYPE OF MEDIUM </th>\r\n              <td mat-cell *matCellDef=\"let element\" (click)=\"getPaymentDetails(element)\"> {{ element?.typeOfMedium | uppercase }} </td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"paymentStatus\">\r\n              <th mat-header-cell *matHeaderCellDef > PAYMENT STATUS </th>\r\n              <td mat-cell *matCellDef=\"let element\" (click)=\"getPaymentDetails(element)\"> {{ element?.paymentStatus?.replaceAll('_',' ') | uppercase }} </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n          </table>\r\n          <div class=\"no-record\" [hidden]=\"dataSource && dataSource?.data?.length > 0\">\r\n            No record found.\r\n          </div>\r\n          <mat-paginator [pageSizeOptions]=\"[10, 20, 50]\" showFirstLastButtons></mat-paginator>\r\n        </div>\r\n\r\n        <br><br>\r\n\r\n        <button mat-raised-button class=\"button-right button-red\" (click)=\"addPenalty('Delinquent')\"\r\n            *ngIf=\"process==='save'\">\r\n            <i class=\"material-icons color__white\">task_alt</i> SUBMIT\r\n        </button>\r\n\r\n    </div>\r\n</ng-template>\r\n\r\n<ng-template #addBrandPenalty>\r\n    <div class=\"col-md-12\" style=\"padding: 0 2em;\">\r\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\" *ngIf=\"penaltyBrand === undefined\">\r\n            <mat-label>Brand</mat-label>\r\n            <mat-select class=\"col-md-4\" [(ngModel)]=\"brandPenalty.brand\" [ngModelOptions]=\"{standalone: true}\">\r\n                <mat-option *ngFor=\"let i of brandList\" [value]=\"i\" name=\"brand\">\r\n                    {{ i?.description | uppercase }}\r\n                </mat-option>\r\n            </mat-select>\r\n        </mat-form-field>\r\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\" *ngIf=\"penaltyBrand !== undefined\">\r\n            <mat-label>Brand</mat-label>\r\n            <input matInput name=\"penaltyBrand\" [(ngModel)]=\"penaltyBrand\" [ngModelOptions]=\"{standalone: true}\"\r\n                readonly>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n            <mat-label>Accumulated Amount Due</mat-label>\r\n            <input matInput name=\"amount\" [(ngModel)]=\"brandPenalty.amount\" [ngModelOptions]=\"{standalone: true}\"\r\n                type=\"text\" (keydown)=\"validateFieldService.numbersOnly($event)\">\r\n        </mat-form-field>\r\n\r\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n            <mat-label>Remarks</mat-label>\r\n            <textarea matInput name=\"remarks\" [(ngModel)]=\"brandPenalty.remarks\"\r\n                [ngModelOptions]=\"{standalone: true}\" [readonly]=\"brandPenalty?.paymentStatus === 'PAID'\"></textarea>\r\n        </mat-form-field>\r\n\r\n        <hr *ngIf=\"process==='update'\">\r\n\r\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\" *ngIf=\"process==='update'\">\r\n            <mat-label>Payment Mode</mat-label>\r\n            <mat-select class=\"col-md-4\" [(ngModel)]=\"paymentMethod.paymentType\" name=\"paymentType\"\r\n                [compareWith]=\"comparePaymentMethod\" [disabled]=\"brandPenalty?.paymentStatus === 'PAID'\">\r\n                <mat-option *ngFor=\"let i of paymentTypeList\" [value]=\"i\" name=\"paymentType\">\r\n                    {{ i?.paymentDescription | uppercase }}\r\n                </mat-option>\r\n            </mat-select>\r\n        </mat-form-field>\r\n        <!-- <mat-form-field class=\"col-md-12\" appearance=\"outline\" *ngIf=\"paymentMode !== undefined\">\r\n            <mat-label>Payment Mode</mat-label>\r\n            <input matInput name=\"amount\" [(ngModel)]=\"paymentMode\" [ngModelOptions]=\"{standalone: true}\"\r\n                readonly>\r\n        </mat-form-field> -->\r\n\r\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\" *ngIf=\"process==='update'\">\r\n            <mat-label>Amount Received</mat-label>\r\n            <input matInput name=\"amount\" [(ngModel)]=\"paymentMethod.amount\" [ngModelOptions]=\"{standalone: true}\"\r\n                type=\"text\" (keydown)=\"validateFieldService.numbersOnly($event)\" [readonly]=\"brandPenalty?.paymentStatus === 'PAID'\">\r\n        </mat-form-field>\r\n\r\n        <br><br>\r\n\r\n        <button mat-raised-button class=\"button-right button-red\" (click)=\"addPenalty('Brand')\"\r\n            *ngIf=\"process==='save' && brandPenalty?.paymentStatus !== 'PAID'\">\r\n            <i class=\"material-icons color__white\">task_alt</i> SUBMIT\r\n        </button>\r\n        <button mat-raised-button class=\"button-right button-red button-right__approve\" (click)=\"approvePenalty()\"\r\n            *ngIf=\"process==='update' && brandPenalty?.paymentStatus !== 'PAID'\">\r\n            <i class=\"material-icons color__white\">task_alt</i> APPROVE\r\n        </button>\r\n\r\n    </div>\r\n</ng-template>\r\n\r\n<ng-template #addCompanyPenalty>\r\n    <div class=\"col-md-12\" style=\"padding: 0 2em;\">\r\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\" *ngIf=\"penaltyCompany === undefined\">\r\n            <mat-label>Company</mat-label>\r\n            <mat-select class=\"col-md-4\" [(ngModel)]=\"companyPenalty.company\" [ngModelOptions]=\"{standalone: true}\"\r\n                [compareWith]=\"compareCompany\">\r\n                <mat-option *ngFor=\"let i of companyList\" [value]=\"i\" name=\"company\">\r\n                    {{ i?.companyName | uppercase }}\r\n                </mat-option>\r\n            </mat-select>\r\n        </mat-form-field>\r\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\" *ngIf=\"penaltyCompany !== undefined\">\r\n            <mat-label>Company</mat-label>\r\n            <input matInput name=\"penaltyCompany\" [(ngModel)]=\"penaltyCompany\" [ngModelOptions]=\"{standalone: true}\"\r\n                readonly>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\" *ngIf=\"totalBalance === undefined || totalBalance === 0\">\r\n            <mat-label>Accumulated Amount Due</mat-label>\r\n            <input matInput name=\"amount\" [(ngModel)]=\"companyPenalty.penaltyAmount\"\r\n                [ngModelOptions]=\"{standalone: true}\" type=\"text\" (keydown)=\"validateFieldService.numbersOnly($event)\">\r\n        </mat-form-field>\r\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\" *ngIf=\"totalBalance !== undefined && totalBalance > 0\">\r\n            <mat-label>Accumulated Amount Due</mat-label>\r\n            <input matInput name=\"totalBalance\" [(ngModel)]=\"totalBalance\" [ngModelOptions]=\"{standalone: true}\"\r\n                readonly>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\" *ngIf=\"previewRemarks === undefined || previewRemarks === ''\">\r\n            <mat-label>Remarks</mat-label>\r\n            <textarea matInput name=\"remarks\" [(ngModel)]=\"companyPenalty.remarks\" [readonly]=\"process==='update'\"\r\n                [ngModelOptions]=\"{standalone: true}\" [readonly]=\"companyPenalty?.paymentStatus === 'PAID'\"></textarea>\r\n        </mat-form-field>\r\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\" *ngIf=\"previewRemarks !== undefined && previewRemarks !== ''\">\r\n            <mat-label>Remarks</mat-label>\r\n            <input matInput name=\"previewRemarks\" [(ngModel)]=\"previewRemarks\" [ngModelOptions]=\"{standalone: true}\"\r\n                readonly>\r\n        </mat-form-field>\r\n\r\n        <hr *ngIf=\"process==='update'\">\r\n\r\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\" *ngIf=\"process==='update'\">\r\n            <mat-label>Payment Mode</mat-label>\r\n            <mat-select class=\"col-md-4\" [(ngModel)]=\"paymentMethod.paymentType\" name=\"paymentType\"\r\n                [compareWith]=\"comparePaymentMethod\" [disabled]=\"companyPenalty?.paymentStatus === 'PAID'\">\r\n                <mat-option *ngFor=\"let i of paymentTypeList\" [value]=\"i\" name=\"paymentType\">\r\n                    {{ i?.paymentDescription | uppercase }}\r\n                </mat-option>\r\n            </mat-select>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\" *ngIf=\"process==='update'\">\r\n            <mat-label>Amount Received</mat-label>\r\n            <input matInput name=\"amount\" [(ngModel)]=\"paymentMethod.amount\" [ngModelOptions]=\"{standalone: true}\"\r\n                type=\"text\" (keydown)=\"validateFieldService.numbersOnly($event)\" [readonly]=\"companyPenalty?.paymentStatus === 'PAID'\">\r\n        </mat-form-field>\r\n\r\n        <br><br>\r\n\r\n        <button mat-raised-button class=\"button-right button-red\" (click)=\"addPenalty('Company')\"\r\n            *ngIf=\"process==='save' && companyPenalty?.paymentStatus !== 'PAID'\">\r\n            <i class=\"material-icons color__white\">task_alt</i> SUBMIT\r\n        </button>\r\n        <button mat-raised-button class=\"button-right button-red button-right__approve\" (click)=\"approvePenalty()\"\r\n            *ngIf=\"process==='update' && companyPenalty?.paymentStatus !== 'PAID'\">\r\n            <i class=\"material-icons color__white\">task_alt</i> APPROVE\r\n        </button>\r\n\r\n    </div>\r\n</ng-template>\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AddPenaltyComponent } from './add-penalty.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component : AddPenaltyComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AddPenaltyRoutingModule { }\r\n","import { Brand } from \"./brand.model\";\r\nimport { PaymentMethod } from \"./payment-method.model\";\r\n\r\nexport class BrandPenalty {\r\n    id: number;\r\n    amount: number;\r\n    brand: Brand;\r\n    brandPenaltyAttachmentReference: string;\r\n    paidDate: Date;\r\n    paymentMethod: PaymentMethod;\r\n    paymentStatus: string;\r\n    penaltyDate: Date;\r\n    remarks: string;\r\n    status: string;\r\n}"]}
=======
{"version":3,"sources":["webpack:///src/app/core/models/company-penalty.model.ts","webpack:///src/app/modules/pages/accounting/add-penalty/add-penalty.module.ts","webpack:///src/app/modules/pages/accounting/add-penalty/add-penalty.component.ts","webpack:///src/app/modules/pages/accounting/add-penalty/add-penalty.component.html","webpack:///src/app/modules/pages/accounting/add-penalty/add-penalty-routing.module.ts","webpack:///src/app/core/models/brand-penalty.model.ts"],"names":["CompanyPenalty","AddPenaltyModule","validateFieldService","AddPenaltyComponent","router","apiService","sweetAlertService","sanitizer","fileStorageService","route","spinner","dataStorageService","displayedColumns","brandPenalty","companyPenalty","paymentType","attachmentDocument","paymentMethod","company","objAttachmentReference","brandPenaltyAttachmentReference","paymentAttachmentReference","paymentTypeList","brandList","companyList","companyPenaltyList","delinquentAppForms","notInSelection","previewDocument","process","paymentTypeFromUrl","approveDelinquent","isShowUploadButton","currentUser","getUserAccount","getPenalizedBrandList","getCompanyList","getPaymentList","id","Number","snapshot","paramMap","get","viewPayment","sessionStorage","removeItem","elm","paymentStatus","navigate","toLowerCase","findAll","brand","subscribe","res","responseData","data","filter","includes","status","userRole","name","ROLE_APPLICANT","creditCardIndex","findIndex","element","paymentDescription","splice","event","target","files","fileSize","size","customErrorMessage","value","fileURL","URL","createObjectURL","safeURLBrand","bypassSecurityTrustResourceUrl","reader","FileReader","file","readAsDataURL","onload","selectedFile","penaltyType","fire","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","save","brandPenalties","customSuccessMessage","err","error","penaltyDate","Date","companyPenalties","show","attachmentType","BRAND_PENALTY_PAYMENT","PAYMENT","params","ORIGINAL","pushFileToStorage","uploadedPaymentFile","addToAttachmentDocuments","payment","hideSpinner","getAttachmentDocument","attachment","console","log","paymentDate","approveBrandPenalty","amount","message","responseMessage","amountDue","amountReceive","approveDelinquentCompany","findById","obj","penaltyBrand","description","getAttachmentDocuments","penaltyCompany","companyName","totalBalance","filteredData","map","mapped","penaltyAmount","reduce","previousValue","currentValue","previewRemarks","remarks","getPayment","applicationForm","getAppFormsByCompanyId","companyId","dataSource","paginator","param","findByParam","originalFilename","filename","fileExtension","documentFormat","setTimeout","hide","brandPenaltyAttachmentDocument","attachmentReference","window","open","selected","update","navigateToList","routes","path","component","AddPenaltyRoutingModule","forChild","BrandPenalty"],"mappings":"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","file":"add-penalty-add-penalty-module-es5.js","sourcesContent":["import { Company } from './company.model';\r\nimport { PaymentMethod } from './payment-method.model';\r\n\r\nexport class CompanyPenalty {\r\n    id: number;\r\n    company: Company;\r\n    paymentStatus: string;\r\n    penaltyAmount: number;\r\n    penaltyDate: Date;\r\n    remarks: string;\r\n    paymentAttachmentReference: string;\r\n    paymentMethod: PaymentMethod;\r\n\r\n    // not yet in BE\r\n    // paidDate: Date;\r\n    // status: string;\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AddPenaltyRoutingModule } from './add-penalty-routing.module';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { AngularMaterialModule } from '@shared';\r\nimport { AddPenaltyComponent } from './add-penalty.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [AddPenaltyComponent],\r\n  imports: [\r\n    CommonModule,\r\n    AddPenaltyRoutingModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    AngularMaterialModule,\r\n  ]\r\n})\r\nexport class AddPenaltyModule { }\r\n","import { USER_ROLES } from './../../../../shared/utils/constants';\r\nimport { Component, Input, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { AttachmentDocument, Payment, PaymentType, Company } from '@models';\r\nimport { ApiService, DataStorageService, SweetAlertService } from '@services';\r\nimport { ATTACHMENT_TYPE, ENDPOINTS, SUBMISSION_TYPE } from '@shared';\r\nimport { BrandPenalty } from 'app/core/models/brand-penalty.model';\r\nimport { CompanyPenalty } from 'app/core/models/company-penalty.model';\r\nimport { PaymentMethod } from 'app/core/models/payment-method.model';\r\nimport { FileStorageService } from 'app/core/services/file.storage.service';\r\nimport { ValidateFieldService } from 'app/core/services/validate-field.service';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-add-penalty',\r\n  templateUrl: './add-penalty.component.html',\r\n  styleUrls: ['./add-penalty.component.scss']\r\n})\r\nexport class AddPenaltyComponent implements OnInit, OnDestroy {\r\n\r\n  @ViewChild(MatPaginator, { static: false }) paginator: MatPaginator;\r\n  dataSource: MatTableDataSource<any>\r\n  displayedColumns = ['referenceCode', 'brand', 'typeOfMedium', 'paymentStatus'];\r\n  brandPenalty = new BrandPenalty();\r\n  companyPenalty = new CompanyPenalty();\r\n  payment: any; // = new Payment();\r\n  paymentType = new PaymentType();\r\n  attachmentDocument = new AttachmentDocument();\r\n  paymentMethod = new PaymentMethod();\r\n  company = new Company();\r\n\r\n  objAttachmentReference = {\r\n    brandPenaltyAttachmentReference: '',\r\n    paymentAttachmentReference: ''\r\n  };\r\n\r\n  paymentTypeList = [];\r\n  brandList = [];\r\n  companyList = [];\r\n  companyPenaltyList = [];\r\n  delinquentAppForms = [];\r\n  notInSelection = ['INACTIVE', 'DISAPPROVED'];\r\n  // attachmentDocuments = [];\r\n  id: number;\r\n  penaltyBrand: string;\r\n  penaltyCompany: string;\r\n  paymentMode: string;\r\n  totalBalance: number;\r\n  previewRemarks: string;\r\n  previewDocument = false;\r\n  attachment: any;\r\n  process = 'save';\r\n  paymentTypeFromUrl = '';\r\n  approveDelinquent = false;\r\n  currentUser: any;\r\n\r\n  @Input() safeURLBrand: any;\r\n  isShowUploadButton = false;\r\n  fileSize: number;\r\n  selectedFile: File;\r\n  uploadedPaymentFile: any;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private apiService: ApiService,\r\n    private sweetAlertService: SweetAlertService,\r\n    private sanitizer: DomSanitizer,\r\n    private fileStorageService: FileStorageService,\r\n    private route: ActivatedRoute,\r\n    private spinner: NgxSpinnerService,\r\n    public validateFieldService: ValidateFieldService,\r\n    private dataStorageService: DataStorageService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.currentUser = this.dataStorageService.getUserAccount();\r\n    this.getPenalizedBrandList();\r\n    this.getCompanyList();\r\n    this.getPaymentList();\r\n    this.id = Number(this.route.snapshot.paramMap.get('id'));\r\n    this.paymentTypeFromUrl = this.route.snapshot.paramMap.get('type');\r\n    if (this.id !== 0) {\r\n      this.process = 'update';\r\n      this.viewPayment();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    sessionStorage.removeItem('PAYMENT');\r\n  }\r\n\r\n  getPaymentDetails(elm) {\r\n    if (elm?.paymentStatus) {\r\n      this.router.navigate(['asc/page/accounting/update/', `${elm?.paymentStatus?.toLowerCase()}-${elm.id}`, `delinquent-${elm.id}`]);\r\n    } else {\r\n      this.router.navigate(['asc/page/accounting/update/', `delinquent-${elm.id}`]);\r\n    }\r\n  }\r\n\r\n\r\n  getPenalizedBrandList() {\r\n    this.apiService.findAll(ENDPOINTS.brand).subscribe((res: any) => {\r\n      // this.brandList = res.responseData.data.filter(penalizedBrands => penalizedBrands.penalty);\r\n      this.brandList = res.responseData.data;\r\n    });\r\n  }\r\n\r\n  getCompanyList() {\r\n    this.apiService.findAll(ENDPOINTS.company).subscribe((res: any) => {\r\n      this.companyList = res.responseData.data.filter((company) => !this.notInSelection.includes(company.status));\r\n    });\r\n  }\r\n\r\n  getPaymentList() {\r\n    this.apiService.findAll(ENDPOINTS.paymentType).subscribe((res: any) => {\r\n      this.paymentTypeList = res.responseData.data;\r\n      if (this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT) {\r\n        const creditCardIndex = this.paymentTypeList\r\n          .findIndex((element) => element.paymentDescription === 'Credit Card');\r\n        this.paymentTypeList.splice(creditCardIndex, 1);\r\n      }\r\n    });\r\n  }\r\n\r\n  selectFile(event) {\r\n    this.isShowUploadButton = false;\r\n\r\n    if (event.target.files[0]) {\r\n      this.fileSize = event.target.files[0].size;\r\n\r\n      if (this.fileSize > 15000000) {\r\n        this.sweetAlertService.customErrorMessage(`Attachments' total file size should not exceed 15MB.`);\r\n        event.target.value = '';\r\n        return;\r\n\r\n      } else {\r\n        this.isShowUploadButton = true;\r\n        const fileURL = URL.createObjectURL(event.target.files[0]);\r\n        this.previewDocument = true;\r\n\r\n        this.safeURLBrand = this.sanitizer.bypassSecurityTrustResourceUrl(fileURL);\r\n\r\n        const reader = new FileReader();\r\n        const [file] = event.target.files;\r\n\r\n        reader.readAsDataURL(file);\r\n        reader.onload = () => {\r\n        };\r\n\r\n        this.selectedFile = event.target.files[0];\r\n      }\r\n    }\r\n  }\r\n\r\n  addPenalty(penaltyType = 'Brand') {\r\n    Swal.fire({\r\n      text: `Are you sure you want to submit this ${penaltyType} Penalty?`,\r\n      icon: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Confirm'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        if (penaltyType === 'Brand') {\r\n          this.apiService.save(ENDPOINTS.brandPenalties, this.brandPenalty).subscribe(\r\n            (res: any) => {\r\n              this.sweetAlertService.customSuccessMessage('Brand penalty successfully saved.');\r\n              this.router.navigate(['asc/page/accounting/payments/', 'brand-penalties']);\r\n            }, (err: any) => {\r\n              this.sweetAlertService.error(err);\r\n            }\r\n          );\r\n        } else if (penaltyType === 'Company') {\r\n          this.companyPenalty.penaltyDate = new Date();\r\n          this.apiService.save(ENDPOINTS.companyPenalties, this.companyPenalty).subscribe(\r\n            (res: any) => {\r\n              this.sweetAlertService.customSuccessMessage('Company penalty successfully saved.');\r\n              this.router.navigate(['asc/page/accounting/payments/', 'company-penalties']);\r\n            }, (err: any) => {\r\n              this.sweetAlertService.error(err);\r\n            }\r\n          );\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  uploadProofOfPayment() {\r\n    Swal.fire({\r\n      text: 'Are you sure you want to submit this as proof of payment?',\r\n      icon: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Confirm'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.spinner.show();\r\n        let attachmentType = '';\r\n        if (this.paymentTypeFromUrl === 'brand') {\r\n          attachmentType = ATTACHMENT_TYPE.BRAND_PENALTY_PAYMENT;\r\n        } else if (this.paymentTypeFromUrl === 'company' || this.paymentTypeFromUrl === 'delinquent') {\r\n          attachmentType = ATTACHMENT_TYPE.PAYMENT;\r\n        }\r\n\r\n        let params = '';\r\n        params = '?&attachmentType=' + attachmentType + '&submissionType=' + SUBMISSION_TYPE.ORIGINAL;\r\n        this.fileStorageService.pushFileToStorage(ENDPOINTS.attachmentDocument, this.selectedFile, params)\r\n          .subscribe((res: any) => {\r\n            this.uploadedPaymentFile = res.responseData.data;\r\n            this.addToAttachmentDocuments(this.uploadedPaymentFile);\r\n\r\n            if (this.paymentTypeFromUrl === 'brand') {\r\n              this.brandPenalty.brandPenaltyAttachmentReference = this.uploadedPaymentFile.brandPenaltyAttachmentReference;\r\n              this.objAttachmentReference.brandPenaltyAttachmentReference = this.brandPenalty.brandPenaltyAttachmentReference;\r\n            } else if (this.paymentTypeFromUrl === 'company') {\r\n              this.companyPenalty.paymentAttachmentReference = this.uploadedPaymentFile.paymentAttachmentReference;\r\n              this.objAttachmentReference.paymentAttachmentReference = this.companyPenalty.paymentAttachmentReference;\r\n            } else if (this.paymentTypeFromUrl === 'delinquent') {\r\n              this.payment.paymentAttachmentReference = this.uploadedPaymentFile.paymentAttachmentReference;\r\n              this.objAttachmentReference.paymentAttachmentReference = this.payment.paymentAttachmentReference;\r\n            }\r\n            this.hideSpinner();\r\n            this.sweetAlertService.customSuccessMessage('Attachment successfully uploaded.');\r\n            this.selectedFile = null;\r\n\r\n            if (this.brandPenalty.brandPenaltyAttachmentReference || this.companyPenalty.paymentAttachmentReference\r\n              || this.payment.paymentAttachmentReference === 'delinquent') {\r\n              this.getAttachmentDocument();\r\n            }\r\n\r\n          }, (err: any) => {\r\n            this.hideSpinner();\r\n            this.sweetAlertService.error(err);\r\n          }, () => {\r\n            // actions after subscription\r\n          });\r\n      } else {\r\n        this.selectedFile = null;\r\n      }\r\n    });\r\n  }\r\n\r\n  saveBrandPenalty() {\r\n    this.apiService.save(`${ENDPOINTS.brandPenalties}/payment-type-id/${this.paymentType.id}/payment/submit`, this.brandPenalty)\r\n      .subscribe((res: any) => {\r\n        this.brandPenalty = new BrandPenalty();\r\n        this.paymentType = new PaymentType();\r\n        this.attachment = null;\r\n        this.previewDocument = false;\r\n        this.sweetAlertService.customSuccessMessage('Voucher fund successfully submitted.');\r\n      }, (err) => {\r\n        console.log(err);\r\n        this.sweetAlertService.error(err);\r\n      });\r\n  }\r\n\r\n  approvePenalty() {\r\n    if (this.paymentTypeFromUrl === 'brand') {\r\n      Swal.fire({\r\n        text: 'Are you sure you want to approve this Brand Penalty?',\r\n        icon: 'question',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        confirmButtonText: 'Confirm'\r\n      }).then((result) => {\r\n        if (result.value) {\r\n          this.paymentMethod.paymentDate = new Date();\r\n          this.brandPenalty.paymentMethod = this.paymentMethod;\r\n          this.brandPenalty.brandPenaltyAttachmentReference = this.attachmentDocument.brandPenaltyAttachmentReference;\r\n          console.log(this.paymentMethod);\r\n\r\n          this.apiService.save(ENDPOINTS.approveBrandPenalty, this.brandPenalty).subscribe((res: any) => {\r\n            this.sweetAlertService.customSuccessMessage('Brand penalty approved successfully.');\r\n            this.router.navigate(['asc/page/accounting/payments/', 'brand-penalties']);\r\n          });\r\n        } else {\r\n          this.attachment = null;\r\n        }\r\n      });\r\n    } else if (this.paymentTypeFromUrl === 'company') {\r\n      Swal.fire({\r\n        text: 'Are you sure you want to approve this Company Penalty?',\r\n        icon: 'question',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        confirmButtonText: 'Confirm'\r\n      }).then((result) => {\r\n        if (result.value) {\r\n          // this.paymentMethod.paymentDate = new Date();\r\n          this.companyPenalty.paymentMethod = this.paymentMethod;\r\n          this.companyPenalty.paymentAttachmentReference = this.attachmentDocument.paymentAttachmentReference;\r\n          console.log(this.paymentMethod);\r\n          console.log(this.companyPenalty);\r\n          console.log(this.attachmentDocument.paymentAttachmentReference);\r\n          this.companyPenaltyList[0].paymentMethod = this.paymentMethod;\r\n          this.companyPenaltyList[0].paymentAttachmentReference = this.attachmentDocument.paymentAttachmentReference;\r\n          this.apiService.save(`${ENDPOINTS.companyPenalties}/submit-penalty-payment?amountReceived=${this.paymentMethod.amount}&paymentTypeId=${this.paymentMethod?.paymentType?.id}`,\r\n            this.companyPenaltyList[0]).subscribe((res: any) => {\r\n              this.sweetAlertService.customSuccessMessage('Company penalty approved successfully.');\r\n              this.router.navigate(['asc/page/accounting/payments/', 'company-penalties']);\r\n            }, err => {\r\n              if (!err.error.message) {\r\n                err.error.message = err.error.responseMessage;\r\n              }\r\n              this.sweetAlertService.error(err);\r\n            });\r\n        } else {\r\n          this.attachment = null;\r\n        }\r\n      });\r\n    } else if (this.paymentTypeFromUrl === 'delinquent') {\r\n      if (this.paymentMethod.amount < this.payment.amountDue) {\r\n        this.sweetAlertService.customErrorMessage(`Amount Received/Transferred is lower than Amount Due.`);\r\n      } else {\r\n        Swal.fire({\r\n          text: 'Are you sure you want to approve this Delinquent Company?',\r\n          icon: 'question',\r\n          showCancelButton: true,\r\n          confirmButtonColor: '#3085d6',\r\n          cancelButtonColor: '#d33',\r\n          confirmButtonText: 'Confirm'\r\n        }).then((result) => {\r\n          if (result.value) {\r\n            // this.paymentMethod.paymentDate = new Date();\r\n            this.payment.paymentMethod = this.paymentMethod;\r\n            this.payment.amountReceive = Number(this.paymentMethod.amount);\r\n            console.log(this.paymentMethod);\r\n            console.log(this.payment);\r\n\r\n            this.apiService.save(`${ENDPOINTS.approveDelinquentCompany}`, this.payment).subscribe((res: any) => {\r\n              this.sweetAlertService.customSuccessMessage('Delinquent company approved successfully.');\r\n              this.router.navigate(['asc/page/accounting/payments/', 'delinquent-companies']);\r\n            }, err => {\r\n              if (!err.error.message) {\r\n                err.error.message = err.error.responseMessage;\r\n              }\r\n              this.sweetAlertService.error(err);\r\n            });\r\n          } else {\r\n            this.attachment = null;\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  viewPayment() {\r\n    if (this.paymentTypeFromUrl === 'brand') {\r\n      this.apiService.findById(ENDPOINTS.brandPenalties, this.id).subscribe((res: any) => {\r\n        const obj = res.responseData.data;\r\n        this.penaltyBrand = obj.brand.description;\r\n        if (obj?.paymentMethod) {\r\n          this.paymentType = obj?.paymentMethod?.paymentType;\r\n          this.paymentMethod = obj?.paymentMethod;\r\n        }\r\n        this.brandPenalty = obj;\r\n        if (this.brandPenalty.brandPenaltyAttachmentReference) {\r\n          this.objAttachmentReference.brandPenaltyAttachmentReference = this.brandPenalty.brandPenaltyAttachmentReference;\r\n          this.getAttachmentDocuments();\r\n        }\r\n      });\r\n    } else if (this.paymentTypeFromUrl === 'company') {\r\n      this.apiService.findById(`${ENDPOINTS.companyPenalties}/company`, this.id).subscribe((res: any) => {\r\n        if (res.responseData.data) {\r\n          this.companyPenaltyList = res.responseData.data;\r\n\r\n          if (this.companyPenaltyList[0].paymentAttachmentReference) {\r\n            this.objAttachmentReference.paymentAttachmentReference = this.companyPenalty.paymentAttachmentReference;\r\n            this.getAttachmentDocuments();\r\n          }\r\n\r\n          this.penaltyCompany = this.companyPenaltyList[0].company.companyName;\r\n          this.totalBalance = this.companyPenaltyList.filter(filteredData => filteredData.paymentStatus !== 'PAID')\r\n            .map(mapped => mapped.penaltyAmount).reduce((previousValue, currentValue) =>\r\n              previousValue + currentValue,\r\n              0);\r\n          this.previewRemarks = this.companyPenaltyList.filter(filteredData => filteredData.paymentStatus !== 'PAID')\r\n            .map(mapped => mapped.remarks ? mapped.remarks + '. ' : '')\r\n            .reduce((previousValue, currentValue) =>\r\n              previousValue + currentValue,\r\n              '');\r\n\r\n        }\r\n      });\r\n    } else if (this.paymentTypeFromUrl === 'delinquent') {\r\n      this.payment = this.dataStorageService.getPayment();\r\n\r\n      const companyName = this.payment?.applicationForm?.companyName;\r\n      this.company.companyName = companyName;\r\n      this.getAppFormsByCompanyId(this.payment?.companyId);\r\n    }\r\n  }\r\n\r\n  getAppFormsByCompanyId(companyId) {\r\n    this.apiService.findAll(ENDPOINTS.getAppFormsByCompanyId + companyId).subscribe((res: any) => {\r\n      this.delinquentAppForms = res.responseData.data;\r\n      this.dataSource = new MatTableDataSource<any>(this.delinquentAppForms);\r\n      this.dataSource.paginator = this.paginator;\r\n    });\r\n  }\r\n\r\n  getAttachmentDocuments() {\r\n    let param;\r\n    if (this.brandPenalty.brandPenaltyAttachmentReference) {\r\n      param = `brand-penalty-attachment-reference/${this.brandPenalty.brandPenaltyAttachmentReference}`;\r\n    } else if (this.companyPenalty.paymentAttachmentReference) {\r\n      param = `payment-attachment-reference/${this.companyPenaltyList[0].paymentAttachmentReference}`;\r\n    }\r\n\r\n    this.apiService.findByParam(ENDPOINTS.attachmentDocument, param).subscribe((res: any) => {\r\n      if (res) {\r\n        this.attachmentDocument = res.responseData.data;\r\n      }\r\n      this.previewDocument = true;\r\n      this.safeURLBrand = this.sanitizer.bypassSecurityTrustResourceUrl(this.attachmentDocument.fileURL);\r\n    });\r\n  }\r\n\r\n  addToAttachmentDocuments(obj: any) {\r\n    this.attachmentDocument.brandPenaltyAttachmentReference = obj.brandPenaltyAttachmentReference;\r\n    this.attachmentDocument.id = obj.id;\r\n    this.attachmentDocument.originalFilename = obj.originalFilename;\r\n    this.attachmentDocument.filename = obj.filename;\r\n    this.attachmentDocument.fileExtension = obj.fileExtension;\r\n    this.attachmentDocument.fileURL = obj.fileURL;\r\n    this.attachmentDocument.attachmentType = obj.attachmentType;\r\n    this.attachmentDocument.documentFormat = obj.documentFormat;\r\n  }\r\n\r\n  hideSpinner() {\r\n    setTimeout(() => {\r\n      this.spinner.hide();\r\n    }, 1);\r\n  }\r\n\r\n  getAttachmentDocument() {\r\n    this.spinner.show();\r\n\r\n    if (this.paymentTypeFromUrl === 'brand') {\r\n      this.apiService.findByParam(ENDPOINTS.brandPenaltyAttachmentDocument,\r\n        this.brandPenalty.brandPenaltyAttachmentReference).subscribe(\r\n          (res: any) => {\r\n            if (res) {\r\n              this.attachmentDocument = res;\r\n            }\r\n            this.hideSpinner();\r\n          }, (err: any) => {\r\n            this.hideSpinner();\r\n            console.error(err);\r\n          });\r\n    } else {\r\n      let attachmentReference = '';\r\n      if (this.paymentTypeFromUrl === 'company') {\r\n        attachmentReference = this.companyPenalty.paymentAttachmentReference;\r\n      } else if (this.paymentTypeFromUrl === 'delinquent') {\r\n        attachmentReference = this.payment.paymentAttachmentReference;\r\n      }\r\n      this.apiService.findByParam(ENDPOINTS.paymentAttachmentReference,\r\n        attachmentReference).subscribe(\r\n          (res: any) => {\r\n            if (res) {\r\n              this.attachmentDocument = res?.responseData?.data;\r\n            }\r\n            this.hideSpinner();\r\n          }, (err: any) => {\r\n            this.hideSpinner();\r\n            console.error(err);\r\n          });\r\n    }\r\n  }\r\n\r\n  viewDocument() {\r\n    if (this.uploadedPaymentFile) {\r\n      window.open(this.uploadedPaymentFile.fileURL);\r\n    } else {\r\n      window.open(this.attachmentDocument.fileURL);\r\n    }\r\n  }\r\n\r\n  comparePaymentMethod(value: any, selected: any): boolean {\r\n    if (value && selected) {\r\n      return value.paymentDescription === selected.paymentDescription;\r\n    }\r\n  }\r\n\r\n  compareCompany(value: any, selected: any): boolean {\r\n    if (value && selected) {\r\n      return value.id === selected.id;\r\n    }\r\n  }\r\n\r\n  navigateToList() {\r\n    Swal.fire({\r\n      text: 'Are you sure you want to go back to payment list?',\r\n      icon: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Confirm'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        if (this.paymentTypeFromUrl === 'brand') {\r\n          this.router.navigate(['asc/page/accounting/payments/', 'brand-penalties']);\r\n        } else if (this.paymentTypeFromUrl === 'company') {\r\n          this.router.navigate(['asc/page/accounting/payments/', 'company-penalties']);\r\n        } else if (this.paymentTypeFromUrl === 'delinquent') {\r\n          this.router.navigate(['asc/page/accounting/payments/', 'delinquent-companies']);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  updatePayment() {\r\n    this.apiService.update(ENDPOINTS.companyPenalties, this.companyPenalty).subscribe(\r\n      res => {\r\n        console.log('Update companyPenalties: ', res);\r\n      }, err => {\r\n        console.log(err);\r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n","<form>\r\n    <div class=\"container-fluid\">\r\n        <div class=\"row\">\r\n            <div class=\"column\">\r\n                <div class=\"col-md-12 title\">\r\n                    <mat-label>\r\n                        {{ paymentTypeFromUrl | titlecase }} Penalties\r\n                    </mat-label>\r\n                    <button mat-raised-button class=\"button-right button-red button-center\" (click)=\"navigateToList()\">\r\n                        <i class=\"material-icons color__white\">list</i> BACK TO LIST\r\n                    </button>\r\n                </div>\r\n                <hr>\r\n\r\n                <div class=\"col-md-12\" appearance=\"outline\"\r\n                    *ngIf=\"paymentTypeFromUrl === 'brand' || paymentTypeFromUrl === 'company'\">\r\n                    <mat-label>Filename: </mat-label>\r\n                    <br>\r\n                    <input matInput [value]=\"attachmentDocument.originalFilename || objAttachmentReference?.brandPenaltyAttachmentReference || objAttachmentReference?.paymentAttachmentReference\" disabled\r\n                        *ngIf=\"attachmentDocument.originalFilename || objAttachmentReference?.brandPenaltyAttachmentReference || objAttachmentReference?.paymentAttachmentReference\">\r\n\r\n                    <input class=\"file-upload\" type=\"file\" *ngIf=\"!attachmentDocument.originalFilename\" accept=\".pdf\"\r\n                        (change)=\"selectFile($event)\" [hidden]=\"objAttachmentReference?.brandPenaltyAttachmentReference || objAttachmentReference?.paymentAttachmentReference\">\r\n                    <br><br>\r\n                </div>\r\n                <div class=\"col-md-12\" appearance=\"outline\" *ngIf=\"paymentTypeFromUrl === 'delinquent' \">\r\n                    <ng-container *ngTemplateOutlet=\"approveDelinquent\"></ng-container>\r\n                </div>\r\n                <div class=\"col-md-12\" appearance=\"outline\"\r\n                    *ngIf=\"paymentTypeFromUrl === 'brand' || paymentTypeFromUrl === 'company' || paymentTypeFromUrl === 'delinquent' \">\r\n\r\n                    <button mat-raised-button class=\"button-red button-right\" (click)=\"viewDocument()\"\r\n                        *ngIf=\"objAttachmentReference?.brandPenaltyAttachmentReference || objAttachmentReference?.paymentAttachmentReference\">\r\n                        <i class=\"material-icons add-document\">open_in_new</i> VIEW DOCUMENT\r\n                    </button>\r\n\r\n                    &nbsp; &nbsp;\r\n\r\n                    <button mat-raised-button class=\"button-red button-right\" (click)=\"uploadProofOfPayment()\"\r\n                        [disabled]=\"!safeURLBrand||!isShowUploadButton\" *ngIf=\"isShowUploadButton\"\r\n                        [hidden]=\"objAttachmentReference?.brandPenaltyAttachmentReference || objAttachmentReference?.paymentAttachmentReference\">\r\n                        <i class=\"material-icons add-document\">upload</i> UPLOAD\r\n                    </button>\r\n\r\n                    <br><br>\r\n                    <div class=\"row col-md-12\" appearance=\"outline\"\r\n                        *ngIf=\"previewDocument==true && (\r\n                            objAttachmentReference?.brandPenaltyAttachmentReference ||\r\n                            objAttachmentReference?.paymentAttachmentReference\r\n                        )\">\r\n                        <div class=\"file-upload\">\r\n                            <object [data]=\"safeURLBrand\" type=\"application/pdf\" width=\"100%\" height=\"400\">\r\n                                <iframe [src]=\"safeURLBrand\" width=\"100%\" height=\"400\">\r\n                                    <p>This browser does not support PDF!</p>\r\n                                </iframe>\r\n                            </object>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"column\" *ngIf=\"paymentTypeFromUrl === 'brand' \">\r\n                <ng-container *ngTemplateOutlet=\"addBrandPenalty\"></ng-container>\r\n            </div>\r\n            <div class=\"column\" *ngIf=\"paymentTypeFromUrl === 'company' \">\r\n                <ng-container *ngTemplateOutlet=\"addCompanyPenalty\"></ng-container>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</form>\r\n\r\n<ng-template #approveDelinquent>\r\n    <div class=\"col-md-12\" style=\"padding: 0 2em;\">\r\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n            <mat-label>Company</mat-label>\r\n            <input matInput name=\"penaltyBrand\" [(ngModel)]=\"company.companyName\" [ngModelOptions]=\"{standalone: true}\"\r\n                readonly>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n            <mat-label>Amount to Settle</mat-label>\r\n            <input class=\"numbers-input\" matInput name=\"amountDue\" [value]=\"payment?.amountDue | number : '1.2-2'\"\r\n                type=\"text\" (keydown)=\"validateFieldService.numbersOnly($event)\" readonly>\r\n        </mat-form-field>\r\n\r\n        <div class=\"mat-elevation-z8 fields\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n\r\n            <ng-container matColumnDef=\"referenceCode\">\r\n              <th mat-header-cell *matHeaderCellDef > REFERENCE CODE </th>\r\n              <td mat-cell *matCellDef=\"let element\" (click)=\"getPaymentDetails(element)\"> {{ element?.referenceCode | uppercase }} </td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"brand\">\r\n              <th mat-header-cell *matHeaderCellDef > BRAND </th>\r\n              <td mat-cell *matCellDef=\"let element\" (click)=\"getPaymentDetails(element)\"> {{ element?.brand?.description | uppercase }} </td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"typeOfMedium\">\r\n              <th mat-header-cell *matHeaderCellDef > TYPE OF MEDIUM </th>\r\n              <td mat-cell *matCellDef=\"let element\" (click)=\"getPaymentDetails(element)\"> {{ element?.typeOfMedium | uppercase }} </td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"paymentStatus\">\r\n              <th mat-header-cell *matHeaderCellDef > PAYMENT STATUS </th>\r\n              <td mat-cell *matCellDef=\"let element\" (click)=\"getPaymentDetails(element)\"> {{ element?.paymentStatus?.replaceAll('_',' ') | uppercase }} </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n          </table>\r\n          <div class=\"no-record\" [hidden]=\"dataSource && dataSource?.data?.length > 0\">\r\n            No record found.\r\n          </div>\r\n          <mat-paginator [pageSizeOptions]=\"[10, 20, 50]\" showFirstLastButtons></mat-paginator>\r\n        </div>\r\n\r\n        <br><br>\r\n\r\n        <button mat-raised-button class=\"button-right button-red\" (click)=\"addPenalty('Delinquent')\"\r\n            *ngIf=\"process==='save'\">\r\n            <i class=\"material-icons color__white\">task_alt</i> SUBMIT\r\n        </button>\r\n\r\n    </div>\r\n</ng-template>\r\n\r\n<ng-template #addBrandPenalty>\r\n    <div class=\"col-md-12\" style=\"padding: 0 2em;\">\r\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\" *ngIf=\"penaltyBrand === undefined\">\r\n            <mat-label>Brand</mat-label>\r\n            <mat-select class=\"col-md-4\" [(ngModel)]=\"brandPenalty.brand\" [ngModelOptions]=\"{standalone: true}\">\r\n                <mat-option *ngFor=\"let i of brandList\" [value]=\"i\" name=\"brand\">\r\n                    {{ i?.description | uppercase }}\r\n                </mat-option>\r\n            </mat-select>\r\n        </mat-form-field>\r\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\" *ngIf=\"penaltyBrand !== undefined\">\r\n            <mat-label>Brand</mat-label>\r\n            <input matInput name=\"penaltyBrand\" [(ngModel)]=\"penaltyBrand\" [ngModelOptions]=\"{standalone: true}\"\r\n                readonly>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n            <mat-label>Accumulated Amount Due</mat-label>\r\n            <input matInput name=\"amount\" [(ngModel)]=\"brandPenalty.amount\" [ngModelOptions]=\"{standalone: true}\"\r\n                type=\"text\" (keydown)=\"validateFieldService.numbersOnly($event)\">\r\n        </mat-form-field>\r\n\r\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n            <mat-label>Remarks</mat-label>\r\n            <textarea matInput name=\"remarks\" [(ngModel)]=\"brandPenalty.remarks\"\r\n                [ngModelOptions]=\"{standalone: true}\" [readonly]=\"brandPenalty?.paymentStatus === 'PAID'\"></textarea>\r\n        </mat-form-field>\r\n\r\n        <hr *ngIf=\"process==='update'\">\r\n\r\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\" *ngIf=\"process==='update'\">\r\n            <mat-label>Payment Mode</mat-label>\r\n            <mat-select class=\"col-md-4\" [(ngModel)]=\"paymentMethod.paymentType\" name=\"paymentType\"\r\n                [compareWith]=\"comparePaymentMethod\" [disabled]=\"brandPenalty?.paymentStatus === 'PAID'\">\r\n                <mat-option *ngFor=\"let i of paymentTypeList\" [value]=\"i\" name=\"paymentType\">\r\n                    {{ i?.paymentDescription | uppercase }}\r\n                </mat-option>\r\n            </mat-select>\r\n        </mat-form-field>\r\n        <!-- <mat-form-field class=\"col-md-12\" appearance=\"outline\" *ngIf=\"paymentMode !== undefined\">\r\n            <mat-label>Payment Mode</mat-label>\r\n            <input matInput name=\"amount\" [(ngModel)]=\"paymentMode\" [ngModelOptions]=\"{standalone: true}\"\r\n                readonly>\r\n        </mat-form-field> -->\r\n\r\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\" *ngIf=\"process==='update'\">\r\n            <mat-label>Amount Received</mat-label>\r\n            <input matInput name=\"amount\" [(ngModel)]=\"paymentMethod.amount\" [ngModelOptions]=\"{standalone: true}\"\r\n                type=\"text\" (keydown)=\"validateFieldService.numbersOnly($event)\" [readonly]=\"brandPenalty?.paymentStatus === 'PAID'\">\r\n        </mat-form-field>\r\n\r\n        <br><br>\r\n\r\n        <button mat-raised-button class=\"button-right button-red\" (click)=\"addPenalty('Brand')\"\r\n            *ngIf=\"process==='save' && brandPenalty?.paymentStatus !== 'PAID'\">\r\n            <i class=\"material-icons color__white\">task_alt</i> SUBMIT\r\n        </button>\r\n        <button mat-raised-button class=\"button-right button-red button-right__approve\" (click)=\"approvePenalty()\"\r\n            *ngIf=\"process==='update' && brandPenalty?.paymentStatus !== 'PAID'\">\r\n            <i class=\"material-icons color__white\">task_alt</i> APPROVE\r\n        </button>\r\n\r\n    </div>\r\n</ng-template>\r\n\r\n<ng-template #addCompanyPenalty>\r\n    <div class=\"col-md-12\" style=\"padding: 0 2em;\">\r\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\" *ngIf=\"penaltyCompany === undefined\">\r\n            <mat-label>Company</mat-label>\r\n            <mat-select class=\"col-md-4\" [(ngModel)]=\"companyPenalty.company\" [ngModelOptions]=\"{standalone: true}\"\r\n                [compareWith]=\"compareCompany\">\r\n                <mat-option *ngFor=\"let i of companyList\" [value]=\"i\" name=\"company\">\r\n                    {{ i?.companyName | uppercase }}\r\n                </mat-option>\r\n            </mat-select>\r\n        </mat-form-field>\r\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\" *ngIf=\"penaltyCompany !== undefined\">\r\n            <mat-label>Company</mat-label>\r\n            <input matInput name=\"penaltyCompany\" [(ngModel)]=\"penaltyCompany\" [ngModelOptions]=\"{standalone: true}\"\r\n                readonly>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\" *ngIf=\"totalBalance === undefined || totalBalance === 0\">\r\n            <mat-label>Accumulated Amount Due</mat-label>\r\n            <input matInput name=\"amount\" [(ngModel)]=\"companyPenalty.penaltyAmount\"\r\n                [ngModelOptions]=\"{standalone: true}\" type=\"text\" (keydown)=\"validateFieldService.numbersOnly($event)\">\r\n        </mat-form-field>\r\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\" *ngIf=\"totalBalance !== undefined && totalBalance > 0\">\r\n            <mat-label>Accumulated Amount Due</mat-label>\r\n            <input matInput name=\"totalBalance\" [(ngModel)]=\"totalBalance\" [ngModelOptions]=\"{standalone: true}\"\r\n                readonly>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\" *ngIf=\"previewRemarks === undefined || previewRemarks === ''\">\r\n            <mat-label>Remarks</mat-label>\r\n            <textarea matInput name=\"remarks\" [(ngModel)]=\"companyPenalty.remarks\" [readonly]=\"process==='update'\"\r\n                [ngModelOptions]=\"{standalone: true}\" [readonly]=\"companyPenalty?.paymentStatus === 'PAID'\"></textarea>\r\n        </mat-form-field>\r\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\" *ngIf=\"previewRemarks !== undefined && previewRemarks !== ''\">\r\n            <mat-label>Remarks</mat-label>\r\n            <input matInput name=\"previewRemarks\" [(ngModel)]=\"previewRemarks\" [ngModelOptions]=\"{standalone: true}\"\r\n                readonly>\r\n        </mat-form-field>\r\n\r\n        <hr *ngIf=\"process==='update'\">\r\n\r\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\" *ngIf=\"process==='update'\">\r\n            <mat-label>Payment Mode</mat-label>\r\n            <mat-select class=\"col-md-4\" [(ngModel)]=\"paymentMethod.paymentType\" name=\"paymentType\"\r\n                [compareWith]=\"comparePaymentMethod\" [disabled]=\"companyPenalty?.paymentStatus === 'PAID'\">\r\n                <mat-option *ngFor=\"let i of paymentTypeList\" [value]=\"i\" name=\"paymentType\">\r\n                    {{ i?.paymentDescription | uppercase }}\r\n                </mat-option>\r\n            </mat-select>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\" *ngIf=\"process==='update'\">\r\n            <mat-label>Amount Received</mat-label>\r\n            <input matInput name=\"amount\" [(ngModel)]=\"paymentMethod.amount\" [ngModelOptions]=\"{standalone: true}\"\r\n                type=\"text\" (keydown)=\"validateFieldService.numbersOnly($event)\" [readonly]=\"companyPenalty?.paymentStatus === 'PAID'\">\r\n        </mat-form-field>\r\n\r\n        <br><br>\r\n\r\n        <button mat-raised-button class=\"button-right button-red\" (click)=\"addPenalty('Company')\"\r\n            *ngIf=\"process==='save' && companyPenalty?.paymentStatus !== 'PAID'\">\r\n            <i class=\"material-icons color__white\">task_alt</i> SUBMIT\r\n        </button>\r\n        <button mat-raised-button class=\"button-right button-red button-right__approve\" (click)=\"approvePenalty()\"\r\n            *ngIf=\"process==='update' && companyPenalty?.paymentStatus !== 'PAID'\">\r\n            <i class=\"material-icons color__white\">task_alt</i> APPROVE\r\n        </button>\r\n\r\n    </div>\r\n</ng-template>\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AddPenaltyComponent } from './add-penalty.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component : AddPenaltyComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AddPenaltyRoutingModule { }\r\n","import { Brand } from \"./brand.model\";\r\nimport { PaymentMethod } from \"./payment-method.model\";\r\n\r\nexport class BrandPenalty {\r\n    id: number;\r\n    amount: number;\r\n    brand: Brand;\r\n    brandPenaltyAttachmentReference: string;\r\n    paidDate: Date;\r\n    paymentMethod: PaymentMethod;\r\n    paymentStatus: string;\r\n    penaltyDate: Date;\r\n    remarks: string;\r\n    status: string;\r\n}"]}
>>>>>>> 53dc5baaa640736d2cc27f9eee7c34fe4a9274c2
