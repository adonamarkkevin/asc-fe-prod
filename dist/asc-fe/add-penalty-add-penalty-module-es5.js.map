{"version":3,"sources":["webpack:///src/app/core/models/type-of-document.model.ts","webpack:///src/app/core/models/country.model.ts","webpack:///src/app/core/models/type-of-reason.model.ts","webpack:///src/app/core/models/company-penalty.model.ts","webpack:///src/app/core/models/type-of-application.model.ts","webpack:///src/app/core/models/s1-application.model.ts","webpack:///src/app/core/models/product.model.ts","webpack:///src/app/modules/pages/accounting/add-penalty/add-penalty.module.ts","webpack:///src/app/core/models/payment.model.ts","webpack:///src/app/core/models/type-of-medium.model.ts","webpack:///src/app/core/models/application-multimedia.model.ts","webpack:///src/app/core/models/s2-application.model.ts","webpack:///src/app/core/models/or-preparation.model.ts","webpack:///src/app/core/models/user-account.model.ts","webpack:///src/app/core/models/asc-rate.model.ts","webpack:///src/app/core/models/application-single-media.model.ts","webpack:///src/app/modules/pages/accounting/add-penalty/add-penalty.component.ts","webpack:///src/app/modules/pages/accounting/add-penalty/add-penalty.component.html","webpack:///src/app/core/models/application-request.model.ts","webpack:///src/app/core/models/profile.model.ts","webpack:///src/app/core/models/attachment-document.model.ts","webpack:///src/app/core/models/category.model.ts","webpack:///src/app/core/models/supporting-document.model.ts","webpack:///src/app/core/models/user-role.model.ts","webpack:///src/app/core/models/payment-type.model.ts","webpack:///src/app/core/models/or-preparation-reference.model.ts","webpack:///src/app/core/models/performance-metrics.model.ts","webpack:///src/app/modules/pages/accounting/add-penalty/add-penalty-routing.module.ts","webpack:///src/app/core/models/payment-method.model.ts","webpack:///src/app/core/models/index.ts","webpack:///src/app/core/models/affiliation.model.ts","webpack:///src/app/core/models/brand.model.ts","webpack:///src/app/core/models/company.model.ts","webpack:///src/app/core/models/brand-penalty.model.ts"],"names":["TypeOfDocument","Country","TypeOfReason","CompanyPenalty","TypeOfApplication","S1Application","Product","AddPenaltyModule","Payment","paymentMethod","filedBirForm","remarks","TypeOfMedium","ApplicationMultimedia","ApplicationMultimediaItemsDTO","ApplicationMultimediaMovingDTO","ApplicationMultimediaStaticDTO","S2Application","OrPreparation","totals","totalSales","totalAmountDue","totalVat","totalWithholdingtax","UserAccount","AscRate","ApplicationSingleMedia","validateFieldService","AddPenaltyComponent","router","apiService","sweetAlertService","sanitizer","fileStorageService","route","spinner","dataStorageService","displayedColumns","brandPenalty","companyPenalty","paymentType","attachmentDocument","company","objAttachmentReference","brandPenaltyAttachmentReference","paymentAttachmentReference","paymentTypeList","brandList","companyList","companyPenaltyList","delinquentAppForms","notInSelection","previewDocument","process","paymentTypeFromUrl","approveDelinquent","isShowUploadButton","currentUser","getUserAccount","getPenalizedBrandList","getCompanyList","getPaymentList","id","Number","snapshot","paramMap","get","viewPayment","sessionStorage","removeItem","elm","paymentStatus","navigate","toLowerCase","findAll","brand","subscribe","res","responseData","data","filter","includes","status","userRole","name","ROLE_APPLICANT","creditCardIndex","findIndex","element","paymentDescription","splice","event","target","files","fileSize","size","customErrorMessage","value","fileURL","URL","createObjectURL","safeURLBrand","bypassSecurityTrustResourceUrl","reader","FileReader","file","readAsDataURL","onload","selectedFile","penaltyType","fire","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","save","brandPenalties","customSuccessMessage","err","error","penaltyDate","Date","companyPenalties","show","attachmentType","BRAND_PENALTY_PAYMENT","PAYMENT","params","ORIGINAL","pushFileToStorage","uploadedPaymentFile","addToAttachmentDocuments","payment","hideSpinner","getAttachmentDocument","attachment","console","log","paymentDate","approveBrandPenalty","amount","message","responseMessage","amountDue","amountReceive","approveDelinquentCompany","findById","obj","penaltyBrand","description","getAttachmentDocuments","penaltyCompany","companyName","totalBalance","filteredData","map","mapped","penaltyAmount","reduce","previousValue","currentValue","previewRemarks","getPayment","applicationForm","getAppFormsByCompanyId","companyId","dataSource","paginator","param","findByParam","originalFilename","filename","fileExtension","documentFormat","setTimeout","hide","brandPenaltyAttachmentDocument","attachmentReference","window","open","selected","update","navigateToList","ApplicationRequest","Profile","AttachmentDocument","Category","SupportingDocument","UserRole","PaymentType","OrPreparationReference","PerformanceMetrics","routes","path","component","AddPenaltyRoutingModule","forChild","PaymentMethod","Affiliation","Brand","Company","BrandPenalty"],"mappings":"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","file":"add-penalty-add-penalty-module-es5.js","sourcesContent":["export class TypeOfDocument {\n    id: number;\n    description: string;\n    remarksEnable: boolean;\n    basedOnEnable: boolean;\n    variantEnable: boolean;\n    dateOfLaunchEnable: boolean;\n    expiresOnEnable: boolean;\n    inputEnable: boolean;\n    status: string;\n}\n","export class Country {\n  id: number;\n  code: string;\n  name: string;\n}","export class TypeOfReason {\n    id: number;\n    reason: string;\n    status: string;\n}\n","import { Company } from './company.model';\nimport { PaymentMethod } from './payment-method.model';\n\nexport class CompanyPenalty {\n    id: number;\n    company: Company;\n    paymentStatus: string;\n    penaltyAmount: number;\n    penaltyDate: Date;\n    remarks: string;\n    paymentAttachmentReference: string;\n    paymentMethod: PaymentMethod;\n\n    // not yet in BE\n    // paidDate: Date;\n    // status: string;\n}","export class TypeOfApplication {\n    id: number;\n    description: string;\n    clearingReleaseTime: String\n    decisionReleaseTime: String\n    sequenceNo: number;\n    status: String\n    submissionEndTime: String;\n    submissionStartTime: String\n}","import { Company } from './company.model';\nimport { Brand } from './brand.model';\nimport { ApplicationType } from './application-type.model';\nimport { UserAccount } from './user-account.model';\nimport { MultipleApplication } from './multiple-application.model';\nimport { Affiliation } from './affiliation.model';\nimport { ApplicationRequest } from './application-request.model';\nimport { Product } from './product.model';\nimport { TypeOfMedium } from './type-of-medium.model';\n\nexport class S1Application {\n    id: number;\n    company: Company;\n    brand: Brand;\n    adTitle: string;\n    referenceCode: string;\n\n    tagLine: string;\n    materialInformation: string;\n    externalStatus: string\n    internalStatus: string\n    revisionNo: number;\n\n    actionBy: UserAccount;\n    actionStatus: string; // ASSIGN_TO_ADSPE, ASSIGN_TO_REVIEWER, ASSIGN_TO_SCREENER\n    formStatus: string; // OPEN, LOCKED\n    submissionType: string // ORIGINAL, REVISION, COMPLIANCE\n    applicationType: ApplicationType;\n\n    formType: string; // INDIVIDUAL, MULTIPLE\n    autoSubmit: boolean;\n    submissionDate: Date;\n    sequenceOrder: number;\n    countSeries: number;\n\n    refTypeOfMedium: string;\n    assignedUser: UserAccount;\n    applicationOwner: UserAccount;\n    multipleApplication: MultipleApplication;\n    appFormReference: string;\n\n    mainAttachmentReference: string;\n    supportingAttachmentReference: string;\n    paymentAttachmentReference: string;\n    membersAffiliation: Affiliation;\n    decisionStatus: string;\n\n    amount: number;\n    applicationRequest: ApplicationRequest;\n    revisionLetterAttachmentReference: string;\n    assignedEncoder: UserAccount;\n    assignedAdSpecialist: UserAccount;\n\n    assignedScreener: UserAccount;\n    assignedReviewer: UserAccount;\n    verifiedDatetimeByEvaluator: Date;\n    sameDayRelease: boolean;\n    paidByApplicant: boolean;\n\n    archived: boolean;\n    appliedS2: boolean;\n    deliquent: boolean;\n    paymentStatus: string;\n    applicationDate: Date;\n\n    validUntil: Date;\n    previousRefCode: string;\n    hasNoSupportingDocs: boolean;\n    referenceCodeRejected: string;\n\n    hasRevision: boolean;\n    product: Product;\n    hasOngoingRevision: boolean;\n    qrCode: string;\n    barCode: string;\n    screenerDecisionComment: boolean;\n    reviewerDecisionComment: boolean;\n    hasOngoingCompliance: boolean;\n    releaseStatus: string;\n\n    complianceForm: boolean; // param need upon request for compliance\n    emailSent: boolean;\n    forwardToScreener: boolean;\n    forwardToReviewer: boolean;\n    formProcess: string;\n    typeOfMedium: string;\n\n    stampMaterialFileURL: string;\n    stampMaterialFilename: string;\n    decisionFormFileURL : string;\n    decisionFormFilename: string;\n\n    hasOngoingAppeal: boolean;\n    typeOfAppeal: string;\n    appealAttachmentReference: string;\n\n    hasOfficialReceipt: boolean;\n\n    // For AppRequest\n    status: string;\n\n    currentAssignee: string;\n}\n","import { Brand } from './brand.model';\nimport { Category } from './category.model';\n\nexport class Product {\n    id: number;\n    description: string;\n    status: string;\n    brand: Brand;\n    category: Category;\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AddPenaltyRoutingModule } from './add-penalty-routing.module';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AngularMaterialModule } from '@shared';\nimport { AddPenaltyComponent } from './add-penalty.component';\n\n\n@NgModule({\n  declarations: [AddPenaltyComponent],\n  imports: [\n    CommonModule,\n    AddPenaltyRoutingModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    FormsModule,\n    AngularMaterialModule,\n  ]\n})\nexport class AddPenaltyModule { }\n","import { S1Application } from './s1-application.model';\nimport { PaymentMethod } from './payment-method.model';\nimport { MultipleApplication } from './multiple-application.model';\nimport { S2Application } from './s2-application.model';\n\nexport class Payment {\n    id: number;\n    amountDue: number;\n    amountReceive: number;\n    appFormReference: string;\n    applicationForm: S1Application;\n    basicRate: number;\n    discount: number;\n    filename: string;\n    officialReceiptNo: string;\n    paymentAttachmentReference: string;\n    paymentDate: Date;\n    paymentMethod: PaymentMethod = new PaymentMethod();\n    paymentStatus: string; // PAID, UNPAID\n    remarks: string;\n    status: string;\n    vat: number;\n    withholdingTax: number;\n    amountToSettle: number;\n    companyName: string;\n    companyId: number;\n\n    multipleApplication: MultipleApplication;\n    filedBirForm: boolean = false;\n    applicationFormS2: S2Application;\n\n    constructor() {\n        this.filedBirForm = false;\n        this.remarks = '';\n    }\n}\n","import { TypeOfClearance } from './type-of-clearance.model';\nimport { TypeOfMainDocument } from './type-of-main-document.model';\n\nexport class TypeOfMedium {\n  description: string;\n  executionEnable: boolean;\n  id: number;\n  languageEnable: boolean;\n  lengthEnable: boolean;\n  multimedia: boolean;\n  multimediaMoving: boolean;\n  multimediaStatic: boolean;\n  othersEnable: boolean;\n  singlemedia: boolean;\n  sizeLengthEnable: boolean;\n  status: string;\n  typeOfMainDocument: TypeOfMainDocument;\n  widthEnable: boolean;\n  typeOfClearance: TypeOfClearance;\n\n  // not in BE; for List value\n  enabledFields: string;\n  sizeLength: string;\n}\n","import { TypeOfMedium } from './type-of-medium.model';\n\nexport class ApplicationMultimedia {\n    id: number;\n    amount: number;\n    appFormReference: string;\n    mediaType?: string; // STATIC, MOVING\n    multimediaSizeLength?: string;\n    typeOfMedium?: TypeOfMedium;\n}\n\nexport class ApplicationMultimediaItemsDTO {\n    hasSelected: boolean;\n    id: number;\n    multimediaMovingMedium?: string;\n    multimediaStaticMedium?: string;\n    sizeLength?: number;\n}\n\nexport class ApplicationMultimediaMovingDTO extends ApplicationMultimedia {\n    applicationMultimediaMovingList: ApplicationMultimediaItemsDTO[];\n    sizeLength: number;\n}\n\nexport class ApplicationMultimediaStaticDTO extends ApplicationMultimedia {\n    applicationMultimediaStaticList: ApplicationMultimediaItemsDTO[];\n}\n","import { ApplicationRequest } from './application-request.model';\nimport { S1Application } from './s1-application.model';\nimport { UserAccount } from './user-account.model';\n\nexport class S2Application {\n\n    id: number;\n    actionBy: string;\n    actionStatus: string;\n    applicationDate: Date;\n    applicationForm: S1Application;\n    assignedAdSpecialist: UserAccount;\n    assignedEncoder: UserAccount;\n    assignedUser: UserAccount;\n    complianceDate: Date;\n    decisionStatus: string;\n    externalStatus: string;\n    finalMaterialAttachmentReference: string;\n    formStatus: string;\n    internalStatus: string;\n    issuedDate: Date;\n    paymentStatus: string;\n    specialClearing: boolean;\n    submissionDate: Date;\n    validUntil: Date;\n    validityDate: Date;\n    referenceCodeRejected: string;\n    releaseDate: Date;\n    hasToa: boolean;\n    submissionType: string;\n    applicationRequest: ApplicationRequest;\n    paymentAttachmentReference: string;\n    amount: string;\n    appFormReference: string;\n    hasOngoingCompliance: boolean;\n    formProcess: string;\n    complianceForm: boolean; // param need upon request for compliance\n    hasOngoingAppeal: boolean;\n    typeOfAppeal: string;\n    appealAttachmentReference: string;\n    clearanceToaFileUrl: string;\n    clearanceToaFilename: string;\n    releaseStatus: string;\n    supportingAttachmentReference: string;\n}\n","import { TotalAmountsModel } from './totals.model';\nimport { TypeOfMedium, OrPreparationReference } from '@models';\n\nexport class OrPreparation {\n    amount: number;\n    amountInWords: string;\n    businessStyle: string;\n    companyAddress: string;\n    companyName: string;\n    companyTin: string;\n    controlNumber: string;\n    fullPaymentOf: string;\n    id: number;\n    officialReceiptDate: Date;\n    officialReceiptNo: string;\n    officialReceiptReferences: OrPreparationReference[];\n    remarks: string;\n    status: string;\n    typeOfMedium: TypeOfMedium;\n    voucherControlNumber: string;\n\n    //totals\n    totalSales: number;\n    totalVat: number;\n    totalWithholdingtax: number;\n    totalAmountDue: number;\n\n    // Not if BE; for FE only\n    officialReceiptReferencesValue: string;\n\n    setTotalAmounts(totals: TotalAmountsModel){\n        this.totalSales = totals.totalSales;\n        this.totalAmountDue = totals.totalAmountDue;\n        this.totalVat = totals.totalVat;\n        this.totalWithholdingtax = totals.totalWithholdingtax;\n    }\n}","import { Affiliation, Company, UserRole } from '@models';\n\nexport class UserAccount {\n    id: number;\n    username: string;\n    password: string;\n    firstName: string;\n    middleName: string;\n    lastName: string;\n    company: Company;\n    membersAffiliationDto: Affiliation;\n    mobileNumber: string;\n    userRole: UserRole;\n    status: string;\n    acceptTerms: boolean;\n    accountType: string;\n    // locked: Boolean;\n    // enabled: Boolean;\n    ascDefault:\tboolean;\n    membersAffiliation:\tAffiliation;\n    scheduledUser:\tboolean;\n    signatureAttachmentReference:\tstring;\n}\n","import { TypeOfExecution } from './type-of-execution.model';\nimport { TypeOfMedium } from './type-of-medium.model';\n\nexport class AscRate {\n    id: number;\n    lengthFrom: number;\n    lengthTo: number;\n    memberOffline: number;\n    memberOnline: number;\n    nonMemberOffline: number;\n    nonMemberOnline: number;\n    status: string;\n    typeOfExecution: TypeOfExecution;\n    typeOfMedium: TypeOfMedium;\n}","import { Dialect } from './dialect.model';\nimport { MediumExecution } from './medium-execution.model';\n\nexport class ApplicationSingleMedia {\n    id: number;\n    amount: number;\n    appFormReference: string;\n    dialect: Dialect;\n    language: string;\n    others: string;\n    sizeLength: string;\n    mediumExecution: MediumExecution;\n    width: string;\n\n}\n","import { USER_ROLES } from './../../../../shared/utils/constants';\nimport { Component, Input, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AttachmentDocument, Payment, PaymentType, Company } from '@models';\nimport { ApiService, DataStorageService, SweetAlertService } from '@services';\nimport { ATTACHMENT_TYPE, ENDPOINTS, SUBMISSION_TYPE } from '@shared';\nimport { BrandPenalty } from 'app/core/models/brand-penalty.model';\nimport { CompanyPenalty } from 'app/core/models/company-penalty.model';\nimport { PaymentMethod } from 'app/core/models/payment-method.model';\nimport { FileStorageService } from 'app/core/services/file.storage.service';\nimport { ValidateFieldService } from 'app/core/services/validate-field.service';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-add-penalty',\n  templateUrl: './add-penalty.component.html',\n  styleUrls: ['./add-penalty.component.scss']\n})\nexport class AddPenaltyComponent implements OnInit, OnDestroy {\n\n  @ViewChild(MatPaginator, { static: false }) paginator: MatPaginator;\n  dataSource: MatTableDataSource<any>\n  displayedColumns = ['referenceCode', 'brand', 'typeOfMedium', 'paymentStatus'];\n  brandPenalty = new BrandPenalty();\n  companyPenalty = new CompanyPenalty();\n  payment: any; // = new Payment();\n  paymentType = new PaymentType();\n  attachmentDocument = new AttachmentDocument();\n  paymentMethod = new PaymentMethod();\n  company = new Company();\n\n  objAttachmentReference = {\n    brandPenaltyAttachmentReference: '',\n    paymentAttachmentReference: ''\n  };\n\n  paymentTypeList = [];\n  brandList = [];\n  companyList = [];\n  companyPenaltyList = [];\n  delinquentAppForms = [];\n  notInSelection = ['INACTIVE', 'DISAPPROVED'];\n  // attachmentDocuments = [];\n  id: number;\n  penaltyBrand: string;\n  penaltyCompany: string;\n  paymentMode: string;\n  totalBalance: number;\n  previewRemarks: string;\n  previewDocument = false;\n  attachment: any;\n  process = 'save';\n  paymentTypeFromUrl = '';\n  approveDelinquent = false;\n  currentUser: any;\n\n  @Input() safeURLBrand: any;\n  isShowUploadButton = false;\n  fileSize: number;\n  selectedFile: File;\n  uploadedPaymentFile: any;\n\n  constructor(\n    private router: Router,\n    private apiService: ApiService,\n    private sweetAlertService: SweetAlertService,\n    private sanitizer: DomSanitizer,\n    private fileStorageService: FileStorageService,\n    private route: ActivatedRoute,\n    private spinner: NgxSpinnerService,\n    public validateFieldService: ValidateFieldService,\n    private dataStorageService: DataStorageService,\n  ) { }\n\n  ngOnInit(): void {\n    this.currentUser = this.dataStorageService.getUserAccount();\n    this.getPenalizedBrandList();\n    this.getCompanyList();\n    this.getPaymentList();\n    this.id = Number(this.route.snapshot.paramMap.get('id'));\n    this.paymentTypeFromUrl = this.route.snapshot.paramMap.get('type');\n    if (this.id !== 0) {\n      this.process = 'update';\n      this.viewPayment();\n    }\n  }\n\n  ngOnDestroy(): void {\n    sessionStorage.removeItem('PAYMENT');\n  }\n\n  getPaymentDetails(elm) {\n    if (elm?.paymentStatus) {\n      this.router.navigate(['asc/page/accounting/update/', `${elm?.paymentStatus?.toLowerCase()}-${elm.id}`, `delinquent-${elm.id}`]);\n    } else {\n      this.router.navigate(['asc/page/accounting/update/', `delinquent-${elm.id}`]);\n    }\n  }\n\n\n  getPenalizedBrandList() {\n    this.apiService.findAll(ENDPOINTS.brand).subscribe((res: any) => {\n      // this.brandList = res.responseData.data.filter(penalizedBrands => penalizedBrands.penalty);\n      this.brandList = res.responseData.data;\n    });\n  }\n\n  getCompanyList() {\n    this.apiService.findAll(ENDPOINTS.company).subscribe((res: any) => {\n      this.companyList = res.responseData.data.filter((company) => !this.notInSelection.includes(company.status));\n    });\n  }\n\n  getPaymentList() {\n    this.apiService.findAll(ENDPOINTS.paymentType).subscribe((res: any) => {\n      this.paymentTypeList = res.responseData.data;\n      if (this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT) {\n        const creditCardIndex = this.paymentTypeList\n          .findIndex((element) => element.paymentDescription === 'Credit Card');\n        this.paymentTypeList.splice(creditCardIndex, 1);\n      }\n    });\n  }\n\n  selectFile(event) {\n    this.isShowUploadButton = false;\n\n    if (event.target.files[0]) {\n      this.fileSize = event.target.files[0].size;\n\n      if (this.fileSize > 15000000) {\n        this.sweetAlertService.customErrorMessage(`Attachments' total file size should not exceed 15MB.`);\n        event.target.value = '';\n        return;\n\n      } else {\n        this.isShowUploadButton = true;\n        const fileURL = URL.createObjectURL(event.target.files[0]);\n        this.previewDocument = true;\n\n        this.safeURLBrand = this.sanitizer.bypassSecurityTrustResourceUrl(fileURL);\n\n        const reader = new FileReader();\n        const [file] = event.target.files;\n\n        reader.readAsDataURL(file);\n        reader.onload = () => {\n        };\n\n        this.selectedFile = event.target.files[0];\n      }\n    }\n  }\n\n  addPenalty(penaltyType = 'Brand') {\n    Swal.fire({\n      text: `Are you sure you want to submit this ${penaltyType} Penalty?`,\n      icon: 'question',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Confirm'\n    }).then((result) => {\n      if (result.value) {\n        if (penaltyType === 'Brand') {\n          this.apiService.save(ENDPOINTS.brandPenalties, this.brandPenalty).subscribe(\n            (res: any) => {\n              this.sweetAlertService.customSuccessMessage('Brand penalty successfully saved.');\n              this.router.navigate(['asc/page/accounting/payments/', 'brand-penalties']);\n            }, (err: any) => {\n              this.sweetAlertService.error(err);\n            }\n          );\n        } else if (penaltyType === 'Company') {\n          this.companyPenalty.penaltyDate = new Date();\n          this.apiService.save(ENDPOINTS.companyPenalties, this.companyPenalty).subscribe(\n            (res: any) => {\n              this.sweetAlertService.customSuccessMessage('Company penalty successfully saved.');\n              this.router.navigate(['asc/page/accounting/payments/', 'company-penalties']);\n            }, (err: any) => {\n              this.sweetAlertService.error(err);\n            }\n          );\n        }\n      }\n    });\n  }\n\n  uploadProofOfPayment() {\n    Swal.fire({\n      text: 'Are you sure you want to submit this as proof of payment?',\n      icon: 'question',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Confirm'\n    }).then((result) => {\n      if (result.value) {\n        this.spinner.show();\n        let attachmentType = '';\n        if (this.paymentTypeFromUrl === 'brand') {\n          attachmentType = ATTACHMENT_TYPE.BRAND_PENALTY_PAYMENT;\n        } else if (this.paymentTypeFromUrl === 'company' || this.paymentTypeFromUrl === 'delinquent') {\n          attachmentType = ATTACHMENT_TYPE.PAYMENT;\n        }\n\n        let params = '';\n        params = '?&attachmentType=' + attachmentType + '&submissionType=' + SUBMISSION_TYPE.ORIGINAL;\n        this.fileStorageService.pushFileToStorage(ENDPOINTS.attachmentDocument, this.selectedFile, params)\n          .subscribe((res: any) => {\n            this.uploadedPaymentFile = res.responseData.data;\n            this.addToAttachmentDocuments(this.uploadedPaymentFile);\n\n            if (this.paymentTypeFromUrl === 'brand') {\n              this.brandPenalty.brandPenaltyAttachmentReference = this.uploadedPaymentFile.brandPenaltyAttachmentReference;\n              this.objAttachmentReference.brandPenaltyAttachmentReference = this.brandPenalty.brandPenaltyAttachmentReference;\n            } else if (this.paymentTypeFromUrl === 'company') {\n              this.companyPenalty.paymentAttachmentReference = this.uploadedPaymentFile.paymentAttachmentReference;\n              this.objAttachmentReference.paymentAttachmentReference = this.companyPenalty.paymentAttachmentReference;\n            } else if (this.paymentTypeFromUrl === 'delinquent') {\n              this.payment.paymentAttachmentReference = this.uploadedPaymentFile.paymentAttachmentReference;\n              this.objAttachmentReference.paymentAttachmentReference = this.payment.paymentAttachmentReference;\n            }\n            this.hideSpinner();\n            this.sweetAlertService.customSuccessMessage('Attachment successfully uploaded.');\n            this.selectedFile = null;\n\n            if (this.brandPenalty.brandPenaltyAttachmentReference || this.companyPenalty.paymentAttachmentReference\n              || this.payment.paymentAttachmentReference === 'delinquent') {\n              this.getAttachmentDocument();\n            }\n\n          }, (err: any) => {\n            this.hideSpinner();\n            this.sweetAlertService.error(err);\n          }, () => {\n            // actions after subscription\n          });\n      } else {\n        this.selectedFile = null;\n      }\n    });\n  }\n\n  saveBrandPenalty() {\n    this.apiService.save(`${ENDPOINTS.brandPenalties}/payment-type-id/${this.paymentType.id}/payment/submit`, this.brandPenalty)\n      .subscribe((res: any) => {\n        this.brandPenalty = new BrandPenalty();\n        this.paymentType = new PaymentType();\n        this.attachment = null;\n        this.previewDocument = false;\n        this.sweetAlertService.customSuccessMessage('Voucher fund successfully submitted.');\n      }, (err) => {\n        console.log(err);\n        this.sweetAlertService.error(err);\n      });\n  }\n\n  approvePenalty() {\n    if (this.paymentTypeFromUrl === 'brand') {\n      Swal.fire({\n        text: 'Are you sure you want to approve this Brand Penalty?',\n        icon: 'question',\n        showCancelButton: true,\n        confirmButtonColor: '#3085d6',\n        cancelButtonColor: '#d33',\n        confirmButtonText: 'Confirm'\n      }).then((result) => {\n        if (result.value) {\n          this.paymentMethod.paymentDate = new Date();\n          this.brandPenalty.paymentMethod = this.paymentMethod;\n          this.brandPenalty.brandPenaltyAttachmentReference = this.attachmentDocument.brandPenaltyAttachmentReference;\n          console.log(this.paymentMethod);\n\n          this.apiService.save(ENDPOINTS.approveBrandPenalty, this.brandPenalty).subscribe((res: any) => {\n            this.sweetAlertService.customSuccessMessage('Brand penalty approved successfully.');\n            this.router.navigate(['asc/page/accounting/payments/', 'brand-penalties']);\n          });\n        } else {\n          this.attachment = null;\n        }\n      });\n    } else if (this.paymentTypeFromUrl === 'company') {\n      Swal.fire({\n        text: 'Are you sure you want to approve this Company Penalty?',\n        icon: 'question',\n        showCancelButton: true,\n        confirmButtonColor: '#3085d6',\n        cancelButtonColor: '#d33',\n        confirmButtonText: 'Confirm'\n      }).then((result) => {\n        if (result.value) {\n          // this.paymentMethod.paymentDate = new Date();\n          this.companyPenalty.paymentMethod = this.paymentMethod;\n          this.companyPenalty.paymentAttachmentReference = this.attachmentDocument.paymentAttachmentReference;\n          console.log(this.paymentMethod);\n          console.log(this.companyPenalty);\n          console.log(this.attachmentDocument.paymentAttachmentReference);\n          this.companyPenaltyList[0].paymentMethod = this.paymentMethod;\n          this.companyPenaltyList[0].paymentAttachmentReference = this.attachmentDocument.paymentAttachmentReference;\n          this.apiService.save(`${ENDPOINTS.companyPenalties}/submit-penalty-payment?amountReceived=${this.paymentMethod.amount}&paymentTypeId=${this.paymentMethod?.paymentType?.id}`,\n            this.companyPenaltyList[0]).subscribe((res: any) => {\n              this.sweetAlertService.customSuccessMessage('Company penalty approved successfully.');\n              this.router.navigate(['asc/page/accounting/payments/', 'company-penalties']);\n            }, err => {\n              if (!err.error.message) {\n                err.error.message = err.error.responseMessage;\n              }\n              this.sweetAlertService.error(err);\n            });\n        } else {\n          this.attachment = null;\n        }\n      });\n    } else if (this.paymentTypeFromUrl === 'delinquent') {\n      if (this.paymentMethod.amount < this.payment.amountDue) {\n        this.sweetAlertService.customErrorMessage(`Amount Received/Transferred is lower than Amount Due.`);\n      } else {\n        Swal.fire({\n          text: 'Are you sure you want to approve this Delinquent Company?',\n          icon: 'question',\n          showCancelButton: true,\n          confirmButtonColor: '#3085d6',\n          cancelButtonColor: '#d33',\n          confirmButtonText: 'Confirm'\n        }).then((result) => {\n          if (result.value) {\n            // this.paymentMethod.paymentDate = new Date();\n            this.payment.paymentMethod = this.paymentMethod;\n            this.payment.amountReceive = Number(this.paymentMethod.amount);\n            console.log(this.paymentMethod);\n            console.log(this.payment);\n\n            this.apiService.save(`${ENDPOINTS.approveDelinquentCompany}`, this.payment).subscribe((res: any) => {\n              this.sweetAlertService.customSuccessMessage('Delinquent company approved successfully.');\n              this.router.navigate(['asc/page/accounting/payments/', 'delinquent-companies']);\n            }, err => {\n              if (!err.error.message) {\n                err.error.message = err.error.responseMessage;\n              }\n              this.sweetAlertService.error(err);\n            });\n          } else {\n            this.attachment = null;\n          }\n        });\n      }\n    }\n  }\n\n  viewPayment() {\n    if (this.paymentTypeFromUrl === 'brand') {\n      this.apiService.findById(ENDPOINTS.brandPenalties, this.id).subscribe((res: any) => {\n        const obj = res.responseData.data;\n        this.penaltyBrand = obj.brand.description;\n        if (obj?.paymentMethod) {\n          this.paymentType = obj?.paymentMethod?.paymentType;\n          this.paymentMethod = obj?.paymentMethod;\n        }\n        this.brandPenalty = obj;\n        if (this.brandPenalty.brandPenaltyAttachmentReference) {\n          this.objAttachmentReference.brandPenaltyAttachmentReference = this.brandPenalty.brandPenaltyAttachmentReference;\n          this.getAttachmentDocuments();\n        }\n      });\n    } else if (this.paymentTypeFromUrl === 'company') {\n      this.apiService.findById(`${ENDPOINTS.companyPenalties}/company`, this.id).subscribe((res: any) => {\n        if (res.responseData.data) {\n          this.companyPenaltyList = res.responseData.data;\n\n          if (this.companyPenaltyList[0].paymentAttachmentReference) {\n            this.objAttachmentReference.paymentAttachmentReference = this.companyPenalty.paymentAttachmentReference;\n            this.getAttachmentDocuments();\n          }\n\n          this.penaltyCompany = this.companyPenaltyList[0].company.companyName;\n          this.totalBalance = this.companyPenaltyList.filter(filteredData => filteredData.paymentStatus !== 'PAID')\n            .map(mapped => mapped.penaltyAmount).reduce((previousValue, currentValue) =>\n              previousValue + currentValue,\n              0);\n          this.previewRemarks = this.companyPenaltyList.filter(filteredData => filteredData.paymentStatus !== 'PAID')\n            .map(mapped => mapped.remarks ? mapped.remarks + '. ' : '')\n            .reduce((previousValue, currentValue) =>\n              previousValue + currentValue,\n              '');\n\n        }\n      });\n    } else if (this.paymentTypeFromUrl === 'delinquent') {\n      this.payment = this.dataStorageService.getPayment();\n\n      const companyName = this.payment?.applicationForm?.companyName;\n      this.company.companyName = companyName;\n      this.getAppFormsByCompanyId(this.payment?.companyId);\n    }\n  }\n\n  getAppFormsByCompanyId(companyId) {\n    this.apiService.findAll(ENDPOINTS.getAppFormsByCompanyId + companyId).subscribe((res: any) => {\n      this.delinquentAppForms = res.responseData.data;\n      this.dataSource = new MatTableDataSource<any>(this.delinquentAppForms);\n      this.dataSource.paginator = this.paginator;\n    });\n  }\n\n  getAttachmentDocuments() {\n    let param;\n    if (this.brandPenalty.brandPenaltyAttachmentReference) {\n      param = `brand-penalty-attachment-reference/${this.brandPenalty.brandPenaltyAttachmentReference}`;\n    } else if (this.companyPenalty.paymentAttachmentReference) {\n      param = `payment-attachment-reference/${this.companyPenaltyList[0].paymentAttachmentReference}`;\n    }\n\n    this.apiService.findByParam(ENDPOINTS.attachmentDocument, param).subscribe((res: any) => {\n      if (res) {\n        this.attachmentDocument = res.responseData.data;\n      }\n      this.previewDocument = true;\n      this.safeURLBrand = this.sanitizer.bypassSecurityTrustResourceUrl(this.attachmentDocument.fileURL);\n    });\n  }\n\n  addToAttachmentDocuments(obj: any) {\n    this.attachmentDocument.brandPenaltyAttachmentReference = obj.brandPenaltyAttachmentReference;\n    this.attachmentDocument.id = obj.id;\n    this.attachmentDocument.originalFilename = obj.originalFilename;\n    this.attachmentDocument.filename = obj.filename;\n    this.attachmentDocument.fileExtension = obj.fileExtension;\n    this.attachmentDocument.fileURL = obj.fileURL;\n    this.attachmentDocument.attachmentType = obj.attachmentType;\n    this.attachmentDocument.documentFormat = obj.documentFormat;\n  }\n\n  hideSpinner() {\n    setTimeout(() => {\n      this.spinner.hide();\n    }, 1);\n  }\n\n  getAttachmentDocument() {\n    this.spinner.show();\n\n    if (this.paymentTypeFromUrl === 'brand') {\n      this.apiService.findByParam(ENDPOINTS.brandPenaltyAttachmentDocument,\n        this.brandPenalty.brandPenaltyAttachmentReference).subscribe(\n          (res: any) => {\n            if (res) {\n              this.attachmentDocument = res;\n            }\n            this.hideSpinner();\n          }, (err: any) => {\n            this.hideSpinner();\n            console.error(err);\n          });\n    } else {\n      let attachmentReference = '';\n      if (this.paymentTypeFromUrl === 'company') {\n        attachmentReference = this.companyPenalty.paymentAttachmentReference;\n      } else if (this.paymentTypeFromUrl === 'delinquent') {\n        attachmentReference = this.payment.paymentAttachmentReference;\n      }\n      this.apiService.findByParam(ENDPOINTS.paymentAttachmentReference,\n        attachmentReference).subscribe(\n          (res: any) => {\n            if (res) {\n              this.attachmentDocument = res?.responseData?.data;\n            }\n            this.hideSpinner();\n          }, (err: any) => {\n            this.hideSpinner();\n            console.error(err);\n          });\n    }\n  }\n\n  viewDocument() {\n    if (this.uploadedPaymentFile) {\n      window.open(this.uploadedPaymentFile.fileURL);\n    } else {\n      window.open(this.attachmentDocument.fileURL);\n    }\n  }\n\n  comparePaymentMethod(value: any, selected: any): boolean {\n    if (value && selected) {\n      return value.paymentDescription === selected.paymentDescription;\n    }\n  }\n\n  compareCompany(value: any, selected: any): boolean {\n    if (value && selected) {\n      return value.id === selected.id;\n    }\n  }\n\n  navigateToList() {\n    Swal.fire({\n      text: 'Are you sure you want to go back to payment list?',\n      icon: 'question',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Confirm'\n    }).then((result) => {\n      if (result.value) {\n        if (this.paymentTypeFromUrl === 'brand') {\n          this.router.navigate(['asc/page/accounting/payments/', 'brand-penalties']);\n        } else if (this.paymentTypeFromUrl === 'company') {\n          this.router.navigate(['asc/page/accounting/payments/', 'company-penalties']);\n        } else if (this.paymentTypeFromUrl === 'delinquent') {\n          this.router.navigate(['asc/page/accounting/payments/', 'delinquent-companies']);\n        }\n      }\n    });\n  }\n\n  updatePayment() {\n    this.apiService.update(ENDPOINTS.companyPenalties, this.companyPenalty).subscribe(\n      res => {\n        console.log('Update companyPenalties: ', res);\n      }, err => {\n        console.log(err);\n      }\n    );\n  }\n\n}\n","<form>\n    <div class=\"container-fluid\">\n        <div class=\"row\">\n            <div class=\"column\">\n                <div class=\"col-md-12 title\">\n                    <mat-label>\n                        {{ paymentTypeFromUrl | titlecase }} Penalties\n                    </mat-label>\n                    <button mat-raised-button class=\"button-right button-red button-center\" (click)=\"navigateToList()\">\n                        <i class=\"material-icons color__white\">list</i> BACK TO LIST\n                    </button>\n                </div>\n                <hr>\n\n                <div class=\"col-md-12\" appearance=\"outline\"\n                    *ngIf=\"paymentTypeFromUrl === 'brand' || paymentTypeFromUrl === 'company'\">\n                    <mat-label>Filename: </mat-label>\n                    <br>\n                    <input matInput [value]=\"attachmentDocument.originalFilename || objAttachmentReference?.brandPenaltyAttachmentReference || objAttachmentReference?.paymentAttachmentReference\" disabled\n                        *ngIf=\"attachmentDocument.originalFilename || objAttachmentReference?.brandPenaltyAttachmentReference || objAttachmentReference?.paymentAttachmentReference\">\n\n                    <input class=\"file-upload\" type=\"file\" *ngIf=\"!attachmentDocument.originalFilename\" accept=\".pdf\"\n                        (change)=\"selectFile($event)\" [hidden]=\"objAttachmentReference?.brandPenaltyAttachmentReference || objAttachmentReference?.paymentAttachmentReference\">\n                    <br><br>\n                </div>\n                <div class=\"col-md-12\" appearance=\"outline\" *ngIf=\"paymentTypeFromUrl === 'delinquent' \">\n                    <ng-container *ngTemplateOutlet=\"approveDelinquent\"></ng-container>\n                </div>\n                <div class=\"col-md-12\" appearance=\"outline\"\n                    *ngIf=\"paymentTypeFromUrl === 'brand' || paymentTypeFromUrl === 'company' || paymentTypeFromUrl === 'delinquent' \">\n\n                    <button mat-raised-button class=\"button-red button-right\" (click)=\"viewDocument()\"\n                        *ngIf=\"objAttachmentReference?.brandPenaltyAttachmentReference || objAttachmentReference?.paymentAttachmentReference\">\n                        <i class=\"material-icons add-document\">open_in_new</i> VIEW DOCUMENT\n                    </button>\n\n                    &nbsp; &nbsp;\n\n                    <button mat-raised-button class=\"button-red button-right\" (click)=\"uploadProofOfPayment()\"\n                        [disabled]=\"!safeURLBrand||!isShowUploadButton\" *ngIf=\"isShowUploadButton\"\n                        [hidden]=\"objAttachmentReference?.brandPenaltyAttachmentReference || objAttachmentReference?.paymentAttachmentReference\">\n                        <i class=\"material-icons add-document\">upload</i> UPLOAD\n                    </button>\n\n                    <br><br>\n                    <div class=\"row col-md-12\" appearance=\"outline\"\n                        *ngIf=\"previewDocument==true && (\n                            objAttachmentReference?.brandPenaltyAttachmentReference ||\n                            objAttachmentReference?.paymentAttachmentReference\n                        )\">\n                        <div class=\"file-upload\">\n                            <object [data]=\"safeURLBrand\" type=\"application/pdf\" width=\"100%\" height=\"400\">\n                                <iframe [src]=\"safeURLBrand\" width=\"100%\" height=\"400\">\n                                    <p>This browser does not support PDF!</p>\n                                </iframe>\n                            </object>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"column\" *ngIf=\"paymentTypeFromUrl === 'brand' \">\n                <ng-container *ngTemplateOutlet=\"addBrandPenalty\"></ng-container>\n            </div>\n            <div class=\"column\" *ngIf=\"paymentTypeFromUrl === 'company' \">\n                <ng-container *ngTemplateOutlet=\"addCompanyPenalty\"></ng-container>\n            </div>\n        </div>\n    </div>\n</form>\n\n<ng-template #approveDelinquent>\n    <div class=\"col-md-12\" style=\"padding: 0 2em;\">\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n            <mat-label>Company</mat-label>\n            <input matInput name=\"penaltyBrand\" [(ngModel)]=\"company.companyName\" [ngModelOptions]=\"{standalone: true}\"\n                readonly>\n        </mat-form-field>\n\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n            <mat-label>Amount to Settle</mat-label>\n            <input class=\"numbers-input\" matInput name=\"amountDue\" [value]=\"payment?.amountDue | number : '1.2-2'\"\n                type=\"text\" (keydown)=\"validateFieldService.numbersOnly($event)\" readonly>\n        </mat-form-field>\n\n        <div class=\"mat-elevation-z8 fields\">\n          <table mat-table [dataSource]=\"dataSource\" matSort>\n\n            <ng-container matColumnDef=\"referenceCode\">\n              <th mat-header-cell *matHeaderCellDef > REFERENCE CODE </th>\n              <td mat-cell *matCellDef=\"let element\" (click)=\"getPaymentDetails(element)\"> {{ element?.referenceCode | uppercase }} </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"brand\">\n              <th mat-header-cell *matHeaderCellDef > BRAND </th>\n              <td mat-cell *matCellDef=\"let element\" (click)=\"getPaymentDetails(element)\"> {{ element?.brand?.description | uppercase }} </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"typeOfMedium\">\n              <th mat-header-cell *matHeaderCellDef > TYPE OF MEDIUM </th>\n              <td mat-cell *matCellDef=\"let element\" (click)=\"getPaymentDetails(element)\"> {{ element?.typeOfMedium | uppercase }} </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"paymentStatus\">\n              <th mat-header-cell *matHeaderCellDef > PAYMENT STATUS </th>\n              <td mat-cell *matCellDef=\"let element\" (click)=\"getPaymentDetails(element)\"> {{ element?.paymentStatus?.replaceAll('_',' ') | uppercase }} </td>\n            </ng-container>\n\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n          </table>\n          <div class=\"no-record\" [hidden]=\"dataSource && dataSource?.data?.length > 0\">\n            No record found.\n          </div>\n          <mat-paginator [pageSizeOptions]=\"[10, 20, 50]\" showFirstLastButtons></mat-paginator>\n        </div>\n\n        <br><br>\n\n        <button mat-raised-button class=\"button-right button-red\" (click)=\"addPenalty('Delinquent')\"\n            *ngIf=\"process==='save'\">\n            <i class=\"material-icons color__white\">task_alt</i> SUBMIT\n        </button>\n\n    </div>\n</ng-template>\n\n<ng-template #addBrandPenalty>\n    <div class=\"col-md-12\" style=\"padding: 0 2em;\">\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\" *ngIf=\"penaltyBrand === undefined\">\n            <mat-label>Brand</mat-label>\n            <mat-select class=\"col-md-4\" [(ngModel)]=\"brandPenalty.brand\" [ngModelOptions]=\"{standalone: true}\">\n                <mat-option *ngFor=\"let i of brandList\" [value]=\"i\" name=\"brand\">\n                    {{ i?.description | uppercase }}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\" *ngIf=\"penaltyBrand !== undefined\">\n            <mat-label>Brand</mat-label>\n            <input matInput name=\"penaltyBrand\" [(ngModel)]=\"penaltyBrand\" [ngModelOptions]=\"{standalone: true}\"\n                readonly>\n        </mat-form-field>\n\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n            <mat-label>Accumulated Amount Due</mat-label>\n            <input matInput name=\"amount\" [(ngModel)]=\"brandPenalty.amount\" [ngModelOptions]=\"{standalone: true}\"\n                type=\"text\" (keydown)=\"validateFieldService.numbersOnly($event)\">\n        </mat-form-field>\n\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n            <mat-label>Remarks</mat-label>\n            <textarea matInput name=\"remarks\" [(ngModel)]=\"brandPenalty.remarks\"\n                [ngModelOptions]=\"{standalone: true}\" [readonly]=\"brandPenalty?.paymentStatus === 'PAID'\"></textarea>\n        </mat-form-field>\n\n        <hr *ngIf=\"process==='update'\">\n\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\" *ngIf=\"process==='update'\">\n            <mat-label>Payment Mode</mat-label>\n            <mat-select class=\"col-md-4\" [(ngModel)]=\"paymentMethod.paymentType\" name=\"paymentType\"\n                [compareWith]=\"comparePaymentMethod\" [disabled]=\"brandPenalty?.paymentStatus === 'PAID'\">\n                <mat-option *ngFor=\"let i of paymentTypeList\" [value]=\"i\" name=\"paymentType\">\n                    {{ i?.paymentDescription | uppercase }}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n        <!-- <mat-form-field class=\"col-md-12\" appearance=\"outline\" *ngIf=\"paymentMode !== undefined\">\n            <mat-label>Payment Mode</mat-label>\n            <input matInput name=\"amount\" [(ngModel)]=\"paymentMode\" [ngModelOptions]=\"{standalone: true}\"\n                readonly>\n        </mat-form-field> -->\n\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\" *ngIf=\"process==='update'\">\n            <mat-label>Amount Received</mat-label>\n            <input matInput name=\"amount\" [(ngModel)]=\"paymentMethod.amount\" [ngModelOptions]=\"{standalone: true}\"\n                type=\"text\" (keydown)=\"validateFieldService.numbersOnly($event)\" [readonly]=\"brandPenalty?.paymentStatus === 'PAID'\">\n        </mat-form-field>\n\n        <br><br>\n\n        <button mat-raised-button class=\"button-right button-red\" (click)=\"addPenalty('Brand')\"\n            *ngIf=\"process==='save' && brandPenalty?.paymentStatus !== 'PAID'\">\n            <i class=\"material-icons color__white\">task_alt</i> SUBMIT\n        </button>\n        <button mat-raised-button class=\"button-right button-red button-right__approve\" (click)=\"approvePenalty()\"\n            *ngIf=\"process==='update' && brandPenalty?.paymentStatus !== 'PAID'\">\n            <i class=\"material-icons color__white\">task_alt</i> APPROVE\n        </button>\n\n    </div>\n</ng-template>\n\n<ng-template #addCompanyPenalty>\n    <div class=\"col-md-12\" style=\"padding: 0 2em;\">\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\" *ngIf=\"penaltyCompany === undefined\">\n            <mat-label>Company</mat-label>\n            <mat-select class=\"col-md-4\" [(ngModel)]=\"companyPenalty.company\" [ngModelOptions]=\"{standalone: true}\"\n                [compareWith]=\"compareCompany\">\n                <mat-option *ngFor=\"let i of companyList\" [value]=\"i\" name=\"company\">\n                    {{ i?.companyName | uppercase }}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\" *ngIf=\"penaltyCompany !== undefined\">\n            <mat-label>Company</mat-label>\n            <input matInput name=\"penaltyCompany\" [(ngModel)]=\"penaltyCompany\" [ngModelOptions]=\"{standalone: true}\"\n                readonly>\n        </mat-form-field>\n\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\" *ngIf=\"totalBalance === undefined || totalBalance === 0\">\n            <mat-label>Accumulated Amount Due</mat-label>\n            <input matInput name=\"amount\" [(ngModel)]=\"companyPenalty.penaltyAmount\"\n                [ngModelOptions]=\"{standalone: true}\" type=\"text\" (keydown)=\"validateFieldService.numbersOnly($event)\">\n        </mat-form-field>\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\" *ngIf=\"totalBalance !== undefined && totalBalance > 0\">\n            <mat-label>Accumulated Amount Due</mat-label>\n            <input matInput name=\"totalBalance\" [(ngModel)]=\"totalBalance\" [ngModelOptions]=\"{standalone: true}\"\n                readonly>\n        </mat-form-field>\n\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\" *ngIf=\"previewRemarks === undefined || previewRemarks === ''\">\n            <mat-label>Remarks</mat-label>\n            <textarea matInput name=\"remarks\" [(ngModel)]=\"companyPenalty.remarks\" [readonly]=\"process==='update'\"\n                [ngModelOptions]=\"{standalone: true}\" [readonly]=\"companyPenalty?.paymentStatus === 'PAID'\"></textarea>\n        </mat-form-field>\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\" *ngIf=\"previewRemarks !== undefined && previewRemarks !== ''\">\n            <mat-label>Remarks</mat-label>\n            <input matInput name=\"previewRemarks\" [(ngModel)]=\"previewRemarks\" [ngModelOptions]=\"{standalone: true}\"\n                readonly>\n        </mat-form-field>\n\n        <hr *ngIf=\"process==='update'\">\n\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\" *ngIf=\"process==='update'\">\n            <mat-label>Payment Mode</mat-label>\n            <mat-select class=\"col-md-4\" [(ngModel)]=\"paymentMethod.paymentType\" name=\"paymentType\"\n                [compareWith]=\"comparePaymentMethod\" [disabled]=\"companyPenalty?.paymentStatus === 'PAID'\">\n                <mat-option *ngFor=\"let i of paymentTypeList\" [value]=\"i\" name=\"paymentType\">\n                    {{ i?.paymentDescription | uppercase }}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\" *ngIf=\"process==='update'\">\n            <mat-label>Amount Received</mat-label>\n            <input matInput name=\"amount\" [(ngModel)]=\"paymentMethod.amount\" [ngModelOptions]=\"{standalone: true}\"\n                type=\"text\" (keydown)=\"validateFieldService.numbersOnly($event)\" [readonly]=\"companyPenalty?.paymentStatus === 'PAID'\">\n        </mat-form-field>\n\n        <br><br>\n\n        <button mat-raised-button class=\"button-right button-red\" (click)=\"addPenalty('Company')\"\n            *ngIf=\"process==='save' && companyPenalty?.paymentStatus !== 'PAID'\">\n            <i class=\"material-icons color__white\">task_alt</i> SUBMIT\n        </button>\n        <button mat-raised-button class=\"button-right button-red button-right__approve\" (click)=\"approvePenalty()\"\n            *ngIf=\"process==='update' && companyPenalty?.paymentStatus !== 'PAID'\">\n            <i class=\"material-icons color__white\">task_alt</i> APPROVE\n        </button>\n\n    </div>\n</ng-template>\n","import { Company } from '@models'\nimport { Affiliation } from './affiliation.model';\nimport { ApplicationType } from './application-type.model'\nimport { Brand } from './brand.model'\nimport { Category } from './category.model';\nimport { Product } from './product.model';\nimport { S1Application } from './s1-application.model';\nimport { UserAccount } from './user-account.model'\n\nexport class ApplicationRequest {\n    id: number;\n    adTitle: string;\n    applicationOwner: UserAccount;\n    applicationType: ApplicationType;\n    brand: Brand;\n    company: Company;\n    status: string;\n    submissionDate: Date;\n    tagLine: string\n    submitApplicationForm: boolean;\n    formType: string;\n    hasSpecialClearing: boolean;\n    applicationForm: S1Application;\n    product: Product;\n}\n","export class Profile {\n    id: number;\n    name: string;\n}\n","import { S1Application } from './s1-application.model';\nimport { S2Application } from './s2-application.model';\n\nexport class AttachmentDocument {\n    id: number;\n    applicationId: S1Application;\n    applicationS2Id: S2Application;\n    attachmentType: string; // MAIN, SUPPORTIVE, PAYMENT\n    autoSubmit: boolean;\n    brandPenaltyAttachmentReference: string;\n    documentFormat: string;\n    fileExtension: string;\n    fileURL: string;\n    filename: string;\n    mainAttachmentReference: string;\n    supportingAttachmentReference: string;\n    paymentAttachmentReference: string;\n    revisionLetterAttachmentReference: string;\n    finalMaterialAttachmentReference: string;\n    originalFilename: string;\n    status: string;\n    submissionType: string; // ORIGINAL, REVISION, COMPLIANCE, TOA\n    voucherAttachmentReference: string;\n    applicationFormId: string; // for compliance used only\n    applicationForm: string;\n    appFormReference: string;\n    modifiedApprovedS1AttachmentReference: string;\n    fileSize: number\n\n    createdBy: string;\n    createdDate: Date;\n    modifiedBy: string;\n    modifiedDate: Date;\n}\n","import { Product } from './product.model';\n\nexport class Category {\n    id: number;\n    description: string;\n    status: string;\n}\n","import { TypeOfDocument } from './type-of-document.model';\nimport { S1Application } from './s1-application.model';\n\nexport class SupportingDocument {\n    id: number;\n    appFormReference: S1Application;\n    typeOfDocument: TypeOfDocument;\n    basedOn: string;\n    variant: string;\n    dateOfLaunch: Date;\n    expiresOn: Date;\n    remarks: string;\n    input: string;\n\n    createdBy: string;\n    createdDate: Date;\n    modifiedBy: string;\n    modifiedDate: Date;\n}\n","export class UserRole {\n    id: number;\n    name: string;\n    status: string;\n}\n","export class PaymentType {\n    id: number;\n    amount: boolean;\n    bankBranch: boolean;\n    bankName: boolean;\n    controlNo: boolean;\n    fundTransferDate: boolean;\n    paymentDescription: string;\n    promisorryDate: boolean;\n    referenceNo: boolean;\n    status: string;\n}\n","export class OrPreparationReference {\n    id: number;\n    reference: string;\n    amount: number;\n}","export class PerformanceMetrics {\n    id: number;\n    referenceCode: string;\n    appFormReference: string;\n    movement: string;\n    actionBy: string;\n    userRole: string;\n    currentDateTime: Date;\n    previousDateTime: Date;\n    duration: string;\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AddPenaltyComponent } from './add-penalty.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component : AddPenaltyComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AddPenaltyRoutingModule { }\n","import { PaymentType } from \"./payment-type.model\";\n\nexport class PaymentMethod {\n    id: number;\n    paymentType: PaymentType;\n    referenceNo: string;\n    controlNo: string;\n    paymentDate: Date;\n    amount: number;\n    bankName: string\n    bankBranch: string;\n    promisorryDate: Date;\n    ccConfirmationCode: string;\n    checkNo: string;\n}\n","export * from './affiliation.model';\nexport * from './brand.model';\nexport * from './company.model';\nexport * from './payment-type.model';\nexport * from './profile.model';\nexport * from './s1-application.model';\nexport * from './s2-application.model';\nexport * from './type-of-document.model';\nexport * from './type-of-medium.model';\nexport * from './type-of-reason.model';\nexport * from './user-role.model';\nexport * from './user-account.model';\nexport * from './attachment-document.model';\nexport * from './category.model';\nexport * from './product.model';\nexport * from './type-of-application.model';\nexport * from './asc-rate.model';\nexport * from './payment.model';\nexport * from './country.model';\nexport * from './performance-metrics.model';\nexport * from './or-preparation.model';\nexport * from './or-preparation-reference.model';\nexport * from './supporting-document.model';\nexport * from './application-single-media.model';\nexport * from './application-request.model';\nexport * from './application-multimedia.model';\n","export class Affiliation {\n    id: number;\n    description: string;\n    member: boolean;\n    status: string;\n}\n","import { Category, Product } from '@models';\n\nexport class Brand {\n    id: number;\n    description: string;\n    // product: Product;\n    // category: Category;\n    status: string;\n    penalty: boolean;\n  }\n","import { Affiliation } from './affiliation.model';\nimport { Country } from './country.model';\n\nexport class Company {\n    id: number;\n    companyName: string;\n    companyTelephoneNo: string;\n    companyTin: string;\n    country: Country;\n    status: string;\n    completeAddress: string;\n    voucherApproved: boolean\n    membersAffiliation: Affiliation;\n    delinquent: boolean;\n    contactPersonEmail: string;\n    contactPersonName: string;\n    amountToSettle: number;\n    companyMobileNo: string;\n    companyTelephoneNo2: string;\n}\n","import { Brand } from \"./brand.model\";\nimport { PaymentMethod } from \"./payment-method.model\";\n\nexport class BrandPenalty {\n    id: number;\n    amount: number;\n    brand: Brand;\n    brandPenaltyAttachmentReference: string;\n    paidDate: Date;\n    paymentMethod: PaymentMethod;\n    paymentStatus: string;\n    penaltyDate: Date;\n    remarks: string;\n    status: string;\n}"]}