{"version":3,"sources":["webpack:///src/app/modules/pages/accounting/add-payment/add-payment-preview-application/add-payment-preview-application.component.ts","webpack:///src/app/modules/pages/accounting/add-payment/add-payment.module.ts","webpack:///src/app/modules/pages/accounting/add-payment/add-payment.component.scss","webpack:///src/app/modules/pages/accounting/add-payment/add-payment.component.ts","webpack:///src/app/modules/pages/accounting/add-payment/add-payment.component.html","webpack:///src/app/modules/pages/accounting/add-payment/add-payment-preview-application/add-payment-preview-application.component.html","webpack:///src/app/modules/pages/accounting/add-payment/add-payment-routing.module.ts"],"names":["AddPaymentPreviewApplicationComponent","apiService","applicationSingleMedia","multimediaDTO","presentorDetails","multimediaMovingList","multimediaStaticList","changes","getPresentorDetails","previewS1Application","applicationOwner","username","findByParam","userLogin","subscribe","res","responseData","data","selector","template","AddPaymentModule","declarations","imports","exports","AddPaymentComponent","sanitizer","formBuilder","route","router","fileStorageService","dataStorage","validateFieldService","spinner","sweetAlertService","displayedColumns","multipleApplicationList","paymentTypeFromUrl","s1Application","attachmentDocument","typeOfMediumDisplay","paymentTypeList","attachmentDocuments","payment","paymentMethod","currentDate","Date","paymentTemp","isMultiple","isSpecial","isForPayment","isForApproval","isPaymentTypeValid","isDelinquent","isShowUploadButton","previewDocument","proofOfPayment","id","name","currentUser","getUserAccount","snapshot","paramMap","get","split","getPaymentList","setFormValidator","initData","toLowerCase","includes","params","userRole","ROLE_ACCOUNTING","getPaymentDetails","viewPayment","getMultipleApplicationList","paymentForm","group","paymentType","required","referenceNo","amount","paymentDate","bankName","bankBranch","controlNo","referenceNumber","typeOfMaterial","length","baseRate","vat","total","remarks","applicantCompanyDetails","accumulatedAmountToBeSettled","clientCompanyDetails","discount","amountReceive","filedBirForm","withholdingTax","orNo","ccConfirmationCode","checkNo","amountDue","customErrorMessage","fire","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","value","Number","save","approveDelinquentCompany","customSuccessMessage","navigate","err","error","message","responseMessage","a","b","paymentDescription","GCASH","CASH","PAYMAYA","BANK","VOUCHER","CHECK","PROMISORRY_NOTE","endpoint","paymentDetails","multiplePaymentDetails","paymentMultipleMonitoring","specialPaymentDetails","paymentSpecial","findAll","applicationForm","refTypeOfMedium","applicationFormS2","getApplicationSingleMedia","getMultimediaMoving","fetchMultimedia","getMultimediaStatic","paymentAttachmentReference","getAttachmentDocumentDisplay","ROLE_APPLICANT","creditCardIndex","findIndex","element","splice","paymentMultiple","paymentDetailsAccounting","paymentMode","res1","safeURL","bypassSecurityTrustResourceUrl","fileURL","getMultipleAppFormsWithNoRejected","forEach","multipleApplication","appFormReference","dataSource","paginator","amountTransferred","parseFloat","toString","toPay","paymentStatus","PAID","accountingPaymentApprove","accountingMultiplePaymentApprove","accountingSpecialPaymentApprove","selected","selectedProofOfPayment","basicRate","Math","round","toFixed","withholding","UNPAID","event","target","files","fileSize","size","URL","createObjectURL","reader","FileReader","file","readAsDataURL","onload","selectedFile","uploadedPaymentFile","window","open","show","PAYMENT","ORIGINAL","pushFileToStorage","addToAttachmentDocuments","hideSpinner","getAttachmentDocument","obj","originalFilename","filename","fileExtension","attachmentType","documentFormat","setTimeout","hide","console","mediumExecution","typeOfMedium","description","sizeLength","index","applicationMultimedia","multimediaList","Set","map","mappedList","multimediaSizeLength","mediaCtrl","media","rejectEndpoint","accountingReject","accountingRejectMultiple","accountingRejectSpecial","typeofMedium","MULTIMEDIA_MOVING","multimedia","routes","path","component","AddPaymentRoutingModule","forChild"],"mappings":"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","file":"default~add-payment-add-payment-module~applications-applications-module-es5.js","sourcesContent":["import { AfterViewInit, Component, Input, OnChanges, OnInit, SimpleChanges, ViewChild } from '@angular/core';\r\nimport { S1Application, UserAccount } from '@models';\r\nimport { ApiService } from '@services';\r\nimport { APP_DECISION_STATUS, ATTACHMENT_TYPE, ENDPOINTS, SUBMISSION_TYPE } from '@shared';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { ApplicationSingleMedia } from '../../../../../core/models/application-single-media.model';\r\n\r\n@Component({\r\n  selector: 'app-add-payment-preview-application',\r\n  templateUrl: './add-payment-preview-application.component.html',\r\n})\r\n\r\nexport class AddPaymentPreviewApplicationComponent implements OnChanges {\r\n  @Input() previewS1Application: any;\r\n  @Input() applicationSingleMedia = new ApplicationSingleMedia();\r\n  @Input() multimediaDTO: any = {};\r\n  presentorDetails = new UserAccount();\r\n\r\n  multimediaMovingList = [];\r\n  multimediaStaticList = [];\r\n\r\n  constructor(private apiService: ApiService) { }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes['previewS1Application']) {\r\n      this.getPresentorDetails();\r\n    }\r\n  }\r\n\r\n  getPresentorDetails() {\r\n    if (this.previewS1Application?.applicationOwner?.username) {\r\n      this.apiService.findByParam(ENDPOINTS.userLogin, this.previewS1Application.applicationOwner.username).subscribe(\r\n        (res: any) => {\r\n          if (res.responseData.data) {\r\n            this.presentorDetails = res.responseData.data;\r\n          }\r\n        });\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { AddPaymentRoutingModule } from './add-payment-routing.module';\r\nimport { AddPaymentComponent } from './add-payment.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { AngularMaterialModule } from '@shared';\r\nimport { AddPaymentPreviewApplicationComponent } from './add-payment-preview-application/add-payment-preview-application.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [AddPaymentComponent, AddPaymentPreviewApplicationComponent],\r\n  imports: [\r\n    CommonModule,\r\n    AddPaymentRoutingModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    AngularMaterialModule,\r\n  ],\r\n  exports: [\r\n    AddPaymentComponent,\r\n    AddPaymentPreviewApplicationComponent\r\n  ]\r\n})\r\nexport class AddPaymentModule { }\r\n","export default \"textarea {\\n  height: 200px;\\n}\\n\\n.numbers-input {\\n  text-align: end;\\n}\\n\\n.total {\\n  font-weight: 900;\\n}\\n\\n.mat-expansion-panel-header.mat-expanded:hover,\\n.mat-expansion-panel-header {\\n  background: #bad9ff;\\n}\\n\\n.mat-expansion-panel .mat-expansion-panel-header.cdk-keyboard-focused:not([aria-disabled=true]),\\n.mat-expansion-panel .mat-expansion-panel-header.cdk-program-focused:not([aria-disabled=true]),\\n.mat-expansion-panel:not(.mat-expanded) .mat-expansion-panel-header:hover:not([aria-disabled=true]) {\\n  background: #cfe5ff;\\n}\\n\\n.mat-expansion-panel-header-description {\\n  justify-content: space-between;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9wYWdlcy9hY2NvdW50aW5nL2FkZC1wYXltZW50L2FkZC1wYXltZW50LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksYUFBQTtBQUNKOztBQUVBO0VBQ0ksZUFBQTtBQUNKOztBQUNBO0VBQ0ksZ0JBQUE7QUFFSjs7QUFDQTs7RUFFRSxtQkFBQTtBQUVGOztBQUNBOzs7RUFNRSxtQkFBQTtBQURGOztBQUlBO0VBQ0ksOEJBQUE7QUFESiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcGFnZXMvYWNjb3VudGluZy9hZGQtcGF5bWVudC9hZGQtcGF5bWVudC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbInRleHRhcmVhIHtcclxuICAgIGhlaWdodDogMjAwcHg7XHJcbn1cclxuXHJcbi5udW1iZXJzLWlucHV0e1xyXG4gICAgdGV4dC1hbGlnbjogZW5kO1xyXG59XHJcbi50b3RhbHtcclxuICAgIGZvbnQtd2VpZ2h0OiA5MDA7XHJcbn1cclxuXHJcbi5tYXQtZXhwYW5zaW9uLXBhbmVsLWhlYWRlci5tYXQtZXhwYW5kZWQ6aG92ZXIsXHJcbi5tYXQtZXhwYW5zaW9uLXBhbmVsLWhlYWRlciB7XHJcbiAgYmFja2dyb3VuZDogI2JhZDlmZjtcclxufVxyXG5cclxuLm1hdC1leHBhbnNpb24tcGFuZWxcclxuICAubWF0LWV4cGFuc2lvbi1wYW5lbC1oZWFkZXIuY2RrLWtleWJvYXJkLWZvY3VzZWQ6bm90KFthcmlhLWRpc2FibGVkPVwidHJ1ZVwiXSksXHJcbi5tYXQtZXhwYW5zaW9uLXBhbmVsXHJcbiAgLm1hdC1leHBhbnNpb24tcGFuZWwtaGVhZGVyLmNkay1wcm9ncmFtLWZvY3VzZWQ6bm90KFthcmlhLWRpc2FibGVkPVwidHJ1ZVwiXSksXHJcbi5tYXQtZXhwYW5zaW9uLXBhbmVsOm5vdCgubWF0LWV4cGFuZGVkKVxyXG4gIC5tYXQtZXhwYW5zaW9uLXBhbmVsLWhlYWRlcjpob3Zlcjpub3QoW2FyaWEtZGlzYWJsZWQ9XCJ0cnVlXCJdKSB7XHJcbiAgYmFja2dyb3VuZDogI2NmZTVmZjtcclxufVxyXG5cclxuLm1hdC1leHBhbnNpb24tcGFuZWwtaGVhZGVyLWRlc2NyaXB0aW9uIHtcclxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcclxufVxyXG4iXX0= */\";","import { Component, OnInit, Input, ViewChild } from '@angular/core';\r\nimport { S1Application, Payment, AttachmentDocument } from '@models';\r\nimport { ApiService, SweetAlertService, DataStorageService } from '@services';\r\nimport { APPLICATION_STATUSES, ATTACHMENT_TYPE, ENDPOINTS, PAYMENT_MODE, PAYMENT_STATUS, PAYMENT_TYPE, PAYMENT_TYPE_LIST, SUBMISSION_TYPE, TYPE_OF_MEDIUM, USER_ROLES } from '@shared';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport Swal from 'sweetalert2';\r\nimport { PaymentMethod } from 'app/core/models/payment-method.model';\r\nimport { MatTable, MatTableDataSource } from '@angular/material/table';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { ValidateFieldService } from 'app/core/services/validate-field.service';\r\nimport { FileStorageService } from 'app/core/services/file.storage.service';\r\nimport { ApplicationSingleMedia } from 'app/core/models/application-single-media.model';\r\n\r\n@Component({\r\n  selector: 'app-add-payment',\r\n  templateUrl: './add-payment.component.html',\r\n  styleUrls: ['./add-payment.component.scss']\r\n})\r\nexport class AddPaymentComponent implements OnInit {\r\n  @ViewChild(MatPaginator, { static: false }) paginator: MatPaginator;\r\n  @ViewChild(MatTable, { static: false }) table: MatTable<AddPaymentComponent>;\r\n  dataSource: MatTableDataSource<any>\r\n  displayedColumns: string[] = ['referenceCode', 'adTitle', 'mediumAndLength', 'amount'];\r\n  multipleApplicationList = [];\r\n  paymentTypeFromUrl = '';\r\n\r\n  @Input() s1Application = new S1Application();\r\n  attachmentDocument = new AttachmentDocument();\r\n  applicationSingleMedia = new ApplicationSingleMedia();\r\n  typeOfMediumDisplay = '';\r\n  paymentTypeList = [];\r\n  attachmentDocuments = [];\r\n  @Input() payment = new Payment();\r\n  paymentMethod = new PaymentMethod();\r\n  safeURL: any;\r\n  id: any;\r\n  paymentForm: FormGroup;\r\n  paymentTypeForm: FormGroup;\r\n  currentUser: any;\r\n  paymentMode: string;\r\n  selectedProofOfPayment: any;\r\n  currentDate = new Date();\r\n  paymentTemp = new Payment();\r\n  isMultiple = false;\r\n  isSpecial = false;\r\n  isForPayment = false;\r\n  isForApproval = false;\r\n  isPaymentTypeValid = false;\r\n  isDelinquent = false;\r\n  selectedFile: File;\r\n  fileSize: number;\r\n  uploadedPaymentFile: any;\r\n  isShowUploadButton = false;\r\n  previewDocument = false;\r\n\r\n  proofOfPayment = [\r\n    { id: 1, name: 'Schedule of Fees - Individual' },\r\n    { id: 2, name: 'Schedule of Fees - Multiple' },\r\n    { id: 3, name: 'Schedule of Fees - Special' },\r\n    { id: 4, name: 'Settlement of Delinquent Status' },\r\n    { id: 5, name: 'Settlement of Brand Penalties' },\r\n    { id: 6, name: 'Settlement of Company Penalties' }\r\n  ];\r\n  multimediaDTO: any = {};\r\n\r\n  constructor(\r\n    private apiService: ApiService,\r\n    private sanitizer: DomSanitizer,\r\n    private formBuilder: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private fileStorageService: FileStorageService,\r\n    public dataStorage: DataStorageService,\r\n    public validateFieldService: ValidateFieldService,\r\n    private spinner: NgxSpinnerService,\r\n    private sweetAlertService: SweetAlertService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.currentUser = this.dataStorage.getUserAccount();\r\n\r\n    this.paymentTypeFromUrl = this.route.snapshot.paramMap.get('id').split('-')[0];\r\n    this.id = this.route.snapshot.paramMap.get('id').split('-')[1];\r\n\r\n    this.getPaymentList();\r\n    this.setFormValidator();\r\n    this.initData();\r\n  }\r\n\r\n  initData() {\r\n    if (this.paymentTypeFromUrl?.toLowerCase() === 'for_payment') {\r\n      this.isForPayment = true;\r\n    }\r\n    if (this.paymentTypeFromUrl?.toLowerCase() === 'for_approval') {\r\n      this.isForApproval = true;\r\n    }\r\n\r\n    if (this.route?.snapshot?.paramMap?.get('status')?.includes('multiple-')) {\r\n      this.isMultiple = true;\r\n      this.paymentTypeFromUrl = 'multiple';\r\n    }\r\n    if (this.route?.snapshot?.params?.id.includes('special-')) {\r\n      this.isSpecial = true;\r\n      this.paymentTypeFromUrl = 'special';\r\n    }\r\n    if (this.route?.snapshot?.paramMap?.get('status')?.includes('delinquent-')) {\r\n      this.isDelinquent = true;\r\n      this.paymentTypeFromUrl = 'delinquent';\r\n    }\r\n\r\n    if (this.id !== 0 && this.currentUser.userRole.name === USER_ROLES.ROLE_ACCOUNTING) {\r\n      if (this.isForPayment || this.isSpecial || this.paymentTypeFromUrl?.toLowerCase() === 'unpaid' || this.isMultiple) {\r\n        this.getPaymentDetails();\r\n      } else {\r\n        this.viewPayment();\r\n      }\r\n      if (this.isMultiple) {\r\n        this.getMultipleApplicationList();\r\n      }\r\n    }\r\n  }\r\n\r\n  setFormValidator(): void {\r\n    this.paymentForm = this.formBuilder.group({\r\n      paymentType: ['', Validators.required],\r\n      referenceNo: [''],\r\n      amount: [''],\r\n      paymentDate: [''],\r\n      bankName: [''],\r\n      bankBranch: [''],\r\n      controlNo: [''],\r\n      referenceNumber: [''],\r\n      typeOfMaterial: [''],\r\n      length: [''],\r\n      baseRate: [''],\r\n      vat: [''],\r\n      total: [''],\r\n      remarks: [''],\r\n      applicantCompanyDetails: [''],\r\n      accumulatedAmountToBeSettled: [''],\r\n      clientCompanyDetails: [''],\r\n      discount: [''],\r\n      amountReceive: [''],\r\n      filedBirForm: [''],\r\n      withholdingTax: [0],\r\n      orNo: [''],\r\n      ccConfirmationCode: [''],\r\n      checkNo: ['']\r\n    });\r\n\r\n  }\r\n\r\n  approvePenalty() {\r\n    if (this.paymentMethod.amount < this.payment.amountDue) {\r\n      this.sweetAlertService.customErrorMessage(`Amount Received/Transferred is lower than Amount Due.`);\r\n    } else {\r\n      Swal.fire({\r\n        text: 'Are you sure you want to approve this Delinquent Company?',\r\n        icon: 'question',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        confirmButtonText: 'Confirm'\r\n      }).then((result) => {\r\n        if (result.value) {\r\n          this.payment.paymentMethod = this.paymentMethod;\r\n          this.payment.amountReceive = Number(this.paymentMethod.amount);\r\n\r\n          this.apiService.save(`${ENDPOINTS.approveDelinquentCompany}`, this.payment).subscribe((res: any) => {\r\n            this.sweetAlertService.customSuccessMessage('Delinquent company approved successfully.');\r\n            this.router.navigate(['asc/page/accounting/payments/', 'delinquent-companies']);\r\n          }, err => {\r\n            if (!err.error.message) {\r\n              err.error.message = err.error.responseMessage;\r\n            }\r\n            this.sweetAlertService.error(err);\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  paymentTypevalidator() {\r\n    let a = this.paymentMethod;\r\n    let b = this.paymentMethod?.paymentType?.paymentDescription;\r\n    if (b === PAYMENT_MODE.GCASH || b === PAYMENT_MODE.CASH) {\r\n      if (a.referenceNo && a.paymentDate && a.amount\r\n        ? this.isPaymentTypeValid = true : this.isPaymentTypeValid = false) { }\r\n    } else if (b === PAYMENT_MODE.PAYMAYA) {\r\n      if (a.referenceNo && a.paymentDate && a.amount && a.ccConfirmationCode\r\n        ? this.isPaymentTypeValid = true : this.isPaymentTypeValid = false) { }\r\n    } else if (b === PAYMENT_MODE.BANK) {\r\n      if (a.bankName && a.paymentDate && a.amount && a.bankBranch\r\n        ? this.isPaymentTypeValid = true : this.isPaymentTypeValid = false) { }\r\n    } else if (b === PAYMENT_MODE.VOUCHER) {\r\n      if (a.controlNo ? this.isPaymentTypeValid = true : this.isPaymentTypeValid = false) { }\r\n    \r\n    } else if (b === PAYMENT_MODE.CHECK) {\r\n      if (a.bankName && a.checkNo && a.amount\r\n        ? this.isPaymentTypeValid = true : this.isPaymentTypeValid = false) { }\r\n    }\r\n  }\r\n\r\n  resetPaymentTypeValidation() {\r\n    this.isPaymentTypeValid = false\r\n    if (this.paymentMethod?.paymentType?.paymentDescription === PAYMENT_MODE.PROMISORRY_NOTE) {\r\n      this.isPaymentTypeValid = true;\r\n    }\r\n  }\r\n\r\n  getPaymentDetails() {\r\n    let endpoint = ENDPOINTS.paymentDetails;\r\n    if (this.isMultiple) {\r\n      if (this.isForPayment) {\r\n        endpoint = ENDPOINTS.multiplePaymentDetails;\r\n      } else {\r\n        endpoint = ENDPOINTS.paymentMultipleMonitoring + `?groupId=`;\r\n      }\r\n    }\r\n    if (this.isSpecial) {\r\n      if (this.isForPayment) {\r\n        endpoint = ENDPOINTS.specialPaymentDetails;\r\n      } else {\r\n        endpoint = ENDPOINTS.paymentSpecial;\r\n      }\r\n    }\r\n\r\n    this.apiService.findAll(endpoint + this.id).subscribe((res: any) => {\r\n      if (res.responseData) {\r\n        this.payment = res.responseData.data;\r\n        this.payment ? (this.payment.filedBirForm = this.payment.filedBirForm ? this.payment.filedBirForm : false) : null;\r\n        this.paymentMethod = this.payment?.paymentMethod ? this.payment.paymentMethod : new PaymentMethod();\r\n      } else if (res.data) {\r\n        this.payment = res.data[0];\r\n        this.payment ? (this.payment.filedBirForm = this.payment.filedBirForm ? this.payment.filedBirForm : false) : null;\r\n        this.paymentMethod = this.payment?.paymentMethod ? this.payment.paymentMethod : new PaymentMethod();\r\n      } else {\r\n        this.payment = res;\r\n        this.payment ? (this.payment.filedBirForm = this.payment.filedBirForm ? this.payment.filedBirForm : false) : null;\r\n        this.paymentMethod = this.payment?.paymentMethod ? this.payment.paymentMethod : new PaymentMethod();\r\n      }\r\n\r\n      switch (this.payment?.applicationForm?.refTypeOfMedium || this.payment?.applicationFormS2?.applicationForm?.refTypeOfMedium) {\r\n        case 'SINGLE MEDIA':\r\n          this.getApplicationSingleMedia();\r\n          break;\r\n        case 'MULTIMEDIA-MOVING':\r\n          this.getMultimediaMoving();\r\n          this.fetchMultimedia();\r\n          break;\r\n        case 'MULTIMEDIA-STATIC':\r\n          this.getMultimediaStatic();\r\n          this.fetchMultimedia();\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n\r\n      if (this.payment?.paymentAttachmentReference) {\r\n        this.getAttachmentDocumentDisplay(this.payment.paymentAttachmentReference);\r\n      }\r\n      \r\n      // this.paymentTemp = this.payment;\r\n    });\r\n  }\r\n\r\n  getPaymentList() {\r\n    this.apiService.findAll(ENDPOINTS.paymentType).subscribe((res: any) => {\r\n      this.paymentTypeList = res.responseData.data;\r\n      if (this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT) {\r\n        const creditCardIndex = this.paymentTypeList\r\n          .findIndex((element) => element.paymentDescription === 'Credit Card');\r\n        this.paymentTypeList.splice(creditCardIndex, 1);\r\n      }\r\n    });\r\n  }\r\n\r\n  viewPayment() {\r\n    let endpoint = `${ENDPOINTS.payment}/application-form-id`;\r\n    if (this.isMultiple) {\r\n      if (this.isForPayment) {\r\n        endpoint = `${ENDPOINTS.paymentMultiple}/payment-multiple-details/multiple-application-id`;\r\n      } else if (this.isForApproval) {\r\n        endpoint = ENDPOINTS.paymentMultipleMonitoring;\r\n      }\r\n    } else {\r\n      if (this.paymentTypeFromUrl?.toLowerCase() === 'for_payment') {\r\n        if (this.currentUser.userRole.name === USER_ROLES.ROLE_ACCOUNTING) {\r\n          endpoint = `${ENDPOINTS.paymentDetailsAccounting}`;\r\n        } else {\r\n          endpoint = `${ENDPOINTS.paymentDetails}`;\r\n        }\r\n      }\r\n    }\r\n\r\n    this.apiService.findByParam(endpoint, this.id).subscribe((res: any) => {\r\n      if (res.responseData) {\r\n        this.payment = res.responseData.data;\r\n        if (this.payment) {\r\n          this.payment.filedBirForm = this.payment.filedBirForm ? this.payment.filedBirForm : false;\r\n        }\r\n      } else {\r\n        this.payment = res;\r\n        if (this.payment) {\r\n          this.payment.filedBirForm = this.payment.filedBirForm ? this.payment.filedBirForm : false;\r\n        }\r\n      }\r\n\r\n      this.paymentMethod = this.payment?.paymentMethod ? this.payment.paymentMethod : new PaymentMethod();\r\n      this.paymentMode = this.paymentMethod?.paymentType?.paymentDescription;\r\n      // this.paymentTemp = this.payment;\r\n\r\n      if (this.payment?.paymentAttachmentReference) {\r\n        this.getAttachmentDocumentDisplay(this.payment.paymentAttachmentReference);\r\n      }\r\n\r\n      switch (this.payment?.applicationForm?.refTypeOfMedium || this.payment?.applicationFormS2?.applicationForm?.refTypeOfMedium) {\r\n        case 'SINGLE MEDIA':\r\n          this.getApplicationSingleMedia();\r\n          break;\r\n        case 'MULTIMEDIA-MOVING':\r\n          this.getMultimediaMoving();\r\n          this.fetchMultimedia();\r\n          break;\r\n        case 'MULTIMEDIA-STATIC':\r\n          this.getMultimediaStatic();\r\n          this.fetchMultimedia();\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n\r\n    });\r\n  }\r\n\r\n  getAttachmentDocumentDisplay(paymentAttachmentReference) {\r\n    this.apiService.findByParam(ENDPOINTS.attachmentDocument, `payment-attachment-reference/` + paymentAttachmentReference)\r\n      .subscribe((res1: any) => {\r\n        if (res1.responseData.data) {\r\n          this.attachmentDocuments = res1.responseData.data;\r\n          this.attachmentDocument = res1.responseData.data;\r\n          this.safeURL = this.sanitizer.bypassSecurityTrustResourceUrl(this.attachmentDocument.fileURL);\r\n          // console.log('view attachmentDocument: ', this.attachmentDocuments);\r\n        }\r\n      }, (err: any) => {\r\n        this.attachmentDocuments = [];\r\n      });\r\n  }\r\n\r\n  getMultipleApplicationList() {\r\n    this.apiService.findAll(ENDPOINTS.getMultipleAppFormsWithNoRejected + this.id).subscribe((res: any) => {\r\n      this.multipleApplicationList = res.responseData.data;\r\n\r\n      this.multipleApplicationList.forEach((multipleApplication) => {\r\n        switch (multipleApplication?.refTypeOfMedium || multipleApplication?.applicationFormS2?.applicationForm?.refTypeOfMedium) {\r\n          case 'SINGLE MEDIA':\r\n            this.getApplicationSingleMedia(multipleApplication?.appFormReference);\r\n            break;\r\n          case 'MULTIMEDIA-MOVING':\r\n            this.getMultimediaMoving(multipleApplication?.appFormReference);\r\n            break;\r\n          case 'MULTIMEDIA-STATIC':\r\n            this.getMultimediaStatic(multipleApplication?.appFormReference);\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      });\r\n\r\n      this.dataSource = new MatTableDataSource<any>(this.multipleApplicationList);\r\n      this.dataSource.paginator = this.paginator;\r\n      if (this.multipleApplicationList.length) {\r\n        this.payment.multipleApplication = this.multipleApplicationList[0].multipleApplication;\r\n      }\r\n    }, (err: any) => {\r\n      this.sweetAlertService.error(err);\r\n    });\r\n  }\r\n\r\n  processPayment(remarks) {\r\n\r\n    const amountTransferred = Number.parseFloat(this.paymentMethod?.amount?.toString());\r\n    const toPay = this.payment.amountDue - this.payment?.withholdingTax;\r\n\r\n    if (this.paymentMethod.paymentType.paymentDescription === 'Voucher' ||\r\n      this.paymentMethod.paymentType.paymentDescription === 'Promisorry Note' ||\r\n      (this.paymentMethod.paymentType.paymentDescription !== 'Voucher'\r\n        && this.paymentMethod.paymentType.paymentDescription !== 'Promisorry Note'\r\n        && amountTransferred >= toPay)) {\r\n      Swal.fire({\r\n        text: 'Are you sure you want to process this PAYMENT?',\r\n        icon: 'question',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        confirmButtonText: 'Confirm'\r\n      }).then((result) => {\r\n        if (result.value) {\r\n          this.payment.paymentStatus = PAYMENT_STATUS.PAID;\r\n          this.payment.paymentDate = new Date();\r\n          this.payment.paymentMethod = this.paymentMethod;\r\n          this.payment.amountReceive = this.paymentMethod.amount;\r\n          // this.payment.paymentAttachmentReference = this.attachmentDocument.paymentAttachmentReference;\r\n\r\n          let endpoint = ENDPOINTS.accountingPaymentApprove;\r\n          if (this.isMultiple) {\r\n            endpoint = ENDPOINTS.accountingMultiplePaymentApprove;\r\n          } else if (this.isSpecial) {\r\n            endpoint = ENDPOINTS.accountingSpecialPaymentApprove;\r\n          }\r\n          this.apiService.save(endpoint, this.payment).subscribe((res: any) => {\r\n            this.sweetAlertService.customSuccessMessage('Payment successfully processed.');\r\n            // console.log('SAVED DATA: ', res);\r\n            this.router.navigate(['asc/page/accounting/payments/', `schedule-of-fees-${this.paymentTypeFromUrl}`]);\r\n          });\r\n        }\r\n      });\r\n    } else {\r\n      this.sweetAlertService.customErrorMessage(`Amount Received/Transferred is lower than Amount Due.`);\r\n    }\r\n  }\r\n\r\n  comparePaymentType(value: any, selected: any): boolean {\r\n    if (value && selected) {\r\n      return value.paymentDescription === selected.paymentDescription;\r\n    }\r\n  }\r\n\r\n  selectProofOfPayment(res) {\r\n    this.selectedProofOfPayment = res;\r\n  }\r\n\r\n  // recompute() {\r\n  //   console.log('trigerring recompute... ', this.payment);\r\n\r\n  //   this.paymentTemp = this.payment;\r\n  //   let endpoint = ENDPOINTS.accountingRecompute;\r\n  //   if (this.isMultiple) {\r\n  //     endpoint = ENDPOINTS.accountingRecomputeMultiple;\r\n  //   } else if (this.isSpecial) {\r\n  //     endpoint = ENDPOINTS.accountingSpecialPaymentRecompute;\r\n  //   }\r\n  //   console.log('paymentMethod - ', this.paymentMethod);\r\n  //   this.payment.paymentMethod = this.paymentMethod;\r\n  //   this.payment.paymentDate = new Date();\r\n  //   this.payment.filename = this.attachmentDocument.filename;\r\n  //   this.payment.amountReceive = this.paymentMethod.amount;\r\n  //   this.payment.paymentAttachmentReference = this.attachmentDocument.paymentAttachmentReference;\r\n\r\n  //   this.apiService.save(endpoint, this.payment).subscribe((res: any) => {\r\n  //     this.payment = res;\r\n  //     this.payment.basicRate = this.paymentTemp.basicRate;\r\n  //     this.payment.vat = this.paymentTemp.vat;\r\n  //     this.payment.amountDue = this.paymentTemp.amountDue;\r\n  //     console.log('payment... ', this.payment);\r\n  //   }, (err: any) => {\r\n  //   });\r\n  // }\r\n\r\n  computeWithholding() {\r\n    if (this.payment) {\r\n      this.payment.withholdingTax = this.payment?.filedBirForm ? this.payment.basicRate * 0.02 : 0;\r\n    }\r\n  }\r\n  \r\n  getAmountDue(): number {\r\n    let amountDue = Number((Math.round(this.payment?.amountDue * 100) / 100).toFixed(2));\r\n    let withholding = Number((Math.round(this.payment?.withholdingTax * 100) / 100).toFixed(2));\r\n    let result = amountDue - withholding;\r\n    return result ? result : 0;\r\n  }\r\n\r\n  validatePaymentStatus(): boolean {\r\n    if (this.payment?.paymentStatus !== PAYMENT_STATUS.PAID && this.payment?.paymentStatus !== PAYMENT_STATUS.UNPAID) {\r\n      return true;\r\n    } \r\n    return false;\r\n  }\r\n  \r\n  comparePaymentMethod(value: any, selected: any): boolean {\r\n    if (value && selected) {\r\n      return value.paymentDescription === selected.paymentDescription;\r\n    }\r\n  }\r\n\r\n  selectFile(event) {\r\n    this.isShowUploadButton = false;\r\n\r\n    if (event.target.files[0]) {\r\n      this.fileSize = event.target.files[0].size;\r\n\r\n      if (this.fileSize > 15000000) {\r\n        this.sweetAlertService.customErrorMessage(`Attachments' total file size should not exceed 15MB.`);\r\n        event.target.value = '';\r\n        return;\r\n\r\n      } else {\r\n        this.isShowUploadButton = true;\r\n        const fileURL = URL.createObjectURL(event.target.files[0]);\r\n        this.previewDocument = true;\r\n\r\n        this.safeURL = this.sanitizer.bypassSecurityTrustResourceUrl(fileURL);\r\n\r\n        const reader = new FileReader();\r\n        const [file] = event.target.files;\r\n\r\n        reader.readAsDataURL(file);\r\n        reader.onload = () => {\r\n        };\r\n\r\n        this.selectedFile = event.target.files[0];\r\n      }\r\n    }\r\n  }\r\n\r\n  viewDocument() {\r\n    if (this.uploadedPaymentFile) {\r\n      window.open(this.uploadedPaymentFile.fileURL);\r\n    } else {\r\n      window.open(this.attachmentDocument.fileURL);\r\n    }\r\n  }\r\n\r\n  uploadProofOfPayment() {\r\n    Swal.fire({\r\n      text: 'Are you sure you want to submit this as proof of payment?',\r\n      icon: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Confirm'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.spinner.show();\r\n        let params = '';\r\n        params = '?&attachmentType=' + ATTACHMENT_TYPE.PAYMENT + '&submissionType=' + SUBMISSION_TYPE.ORIGINAL;\r\n        this.fileStorageService.pushFileToStorage(ENDPOINTS.attachmentDocument, this.selectedFile, params)\r\n          .subscribe((res: any) => {\r\n\r\n            this.uploadedPaymentFile = res.responseData.data;\r\n            this.payment.paymentAttachmentReference = this.uploadedPaymentFile.paymentAttachmentReference;\r\n            this.addToAttachmentDocuments(this.uploadedPaymentFile);\r\n\r\n            this.hideSpinner();\r\n            this.sweetAlertService.customSuccessMessage('Attachment successfully uploaded.');\r\n            this.selectedFile = null;\r\n\r\n            this.getAttachmentDocument();\r\n\r\n          }, (err: any) => {\r\n            this.hideSpinner();\r\n            this.sweetAlertService.error(err);\r\n          }, () => {\r\n            // actions after subscription\r\n          });\r\n      } else {\r\n        this.selectedFile = null;\r\n      }\r\n    });\r\n  }\r\n\r\n  addToAttachmentDocuments(obj: any) {\r\n    this.attachmentDocument.paymentAttachmentReference = obj.paymentAttachmentReference;\r\n    this.attachmentDocument.id = obj.id;\r\n    this.attachmentDocument.originalFilename = obj.originalFilename;\r\n    this.attachmentDocument.filename = obj.filename;\r\n    this.attachmentDocument.fileExtension = obj.fileExtension;\r\n    this.attachmentDocument.fileURL = obj.fileURL;\r\n    this.attachmentDocument.attachmentType = obj.attachmentType;\r\n    this.attachmentDocument.documentFormat = obj.documentFormat;\r\n  }\r\n\r\n  hideSpinner() {\r\n    setTimeout(() => {\r\n      this.spinner.hide();\r\n    }, 1);\r\n  }\r\n\r\n  getAttachmentDocument() {\r\n    this.spinner.show();\r\n\r\n    this.apiService.findByParam(ENDPOINTS.paymentAttachmentReference,\r\n      this.attachmentDocument.paymentAttachmentReference).subscribe(\r\n        (res: any) => {\r\n          if (res) {\r\n            this.attachmentDocument = res.responseData.data;\r\n          }\r\n          this.hideSpinner();\r\n        }, (err: any) => {\r\n          this.hideSpinner();\r\n          console.error(err);\r\n        });\r\n  }\r\n\r\n  getAttachmentDocuments() {\r\n    this.apiService.findByParam(ENDPOINTS.attachmentDocument, `brand-penalty-attachment-reference/${this.payment.paymentAttachmentReference}`).subscribe((res: any) => {\r\n      if (res) {\r\n        this.attachmentDocument = res;\r\n      }\r\n      this.previewDocument = true;\r\n      this.safeURL = this.sanitizer.bypassSecurityTrustResourceUrl(this.attachmentDocument.fileURL);\r\n    });\r\n  }\r\n\r\n  navigateToList() {\r\n    if (this.payment.paymentStatus === PAYMENT_STATUS.PAID || this.payment.paymentStatus === PAYMENT_STATUS.UNPAID) {\r\n      if (this.paymentTypeFromUrl) {\r\n        this.router.navigate(['asc/page/accounting/payments/', `schedule-of-fees-${this.paymentTypeFromUrl}`]);\r\n      } else {\r\n        this.router.navigate(['asc/page/accounting/payments/']);\r\n      }\r\n    } else {\r\n      Swal.fire({\r\n        text: 'Are you sure you want to go back to payment list?',\r\n        icon: 'question',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        confirmButtonText: 'Confirm'\r\n      }).then((result) => {\r\n        if (result.value) {\r\n          if (this.paymentTypeFromUrl) {\r\n            this.router.navigate(['asc/page/accounting/payments/', `schedule-of-fees-${this.paymentTypeFromUrl}`]);\r\n          } else {\r\n            this.router.navigate(['asc/page/accounting/payments/']);\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  getApplicationSingleMedia(appFormReference = this.payment?.applicationForm?.appFormReference) {\r\n    if (this.payment?.applicationFormS2?.applicationForm?.refTypeOfMedium) {\r\n      appFormReference = this.payment?.applicationFormS2?.applicationForm?.appFormReference;\r\n    }\r\n    this.apiService.findByParam(ENDPOINTS.applicationSingleMedia,\r\n      `app-form-reference/${appFormReference}`).subscribe(\r\n        (res: any) => {\r\n          if (res.responseData.data.length > 0) {\r\n            this.applicationSingleMedia = res.responseData.data[0];\r\n\r\n            this.typeOfMediumDisplay = `${this.applicationSingleMedia?.mediumExecution?.typeOfMedium?.description} (${this.applicationSingleMedia?.sizeLength})`;\r\n            if (this.isMultiple) {\r\n              this.multipleApplicationList.forEach((element, index) => {\r\n                if (element.appFormReference === appFormReference) {\r\n                  this.multipleApplicationList[index] = {\r\n                    ...this.multipleApplicationList[index],\r\n                    typeOfMediumDisplay: this.typeOfMediumDisplay\r\n                  };\r\n                }\r\n              });\r\n              this.dataSource = new MatTableDataSource<any>(this.multipleApplicationList);\r\n              this.dataSource.paginator = this.paginator;\r\n            }\r\n\r\n          } else {\r\n            this.applicationSingleMedia = new ApplicationSingleMedia();\r\n            this.typeOfMediumDisplay = '';\r\n          }\r\n        }, (err: any) => {\r\n          this.applicationSingleMedia = new ApplicationSingleMedia();\r\n          this.typeOfMediumDisplay = '';\r\n        });\r\n  }\r\n\r\n  getMultimediaStatic(appFormReference = this.payment?.applicationForm?.appFormReference) {\r\n    this.apiService.findByParam(ENDPOINTS.applicationMultimedia,\r\n      `app-form-reference/${appFormReference}`).subscribe(\r\n        (res: any) => {\r\n          if (res.responseData.data.length > 0) {\r\n            const multimediaList = new Set(res.responseData.data.map(mappedList => `${mappedList?.typeOfMedium?.description} (${mappedList?.multimediaSizeLength})`));\r\n\r\n            this.typeOfMediumDisplay = '';\r\n            let mediaCtrl = 1;\r\n            for (const media of multimediaList) {\r\n              if (mediaCtrl !== multimediaList.size) {\r\n                this.typeOfMediumDisplay += `${media}, `;\r\n                mediaCtrl++;\r\n              } else {\r\n                this.typeOfMediumDisplay += media;\r\n              }\r\n            }\r\n\r\n            if (this.isMultiple) {\r\n              this.multipleApplicationList.forEach((element, index) => {\r\n                if (element.appFormReference === appFormReference) {\r\n                  this.multipleApplicationList[index] = {\r\n                    ...this.multipleApplicationList[index],\r\n                    typeOfMediumDisplay: this.typeOfMediumDisplay\r\n                  };\r\n                }\r\n              });\r\n              this.dataSource = new MatTableDataSource<any>(this.multipleApplicationList);\r\n              this.dataSource.paginator = this.paginator;\r\n            }\r\n          } else {\r\n            this.typeOfMediumDisplay = '';\r\n          }\r\n        }, (err: any) => {\r\n          this.typeOfMediumDisplay = '';\r\n        });\r\n  }\r\n\r\n  getMultimediaMoving(appFormReference = this.payment?.applicationForm?.appFormReference) {\r\n    this.apiService.findByParam(ENDPOINTS.applicationMultimedia,\r\n      `app-form-reference/${appFormReference}`).subscribe(\r\n        (res: any) => {\r\n          if (res.responseData.data.length > 0) {\r\n            const multimediaList = new Set(res.responseData.data.map(mappedList => `${mappedList?.typeOfMedium?.description} (${mappedList?.multimediaSizeLength})`));\r\n\r\n            this.typeOfMediumDisplay = '';\r\n            let mediaCtrl = 1;\r\n            for (const media of multimediaList) {\r\n              if (mediaCtrl !== multimediaList.size) {\r\n                this.typeOfMediumDisplay += `${media}, `;\r\n                mediaCtrl++;\r\n              } else {\r\n                this.typeOfMediumDisplay += media;\r\n              }\r\n            }\r\n\r\n            if (this.isMultiple) {\r\n              this.multipleApplicationList.forEach((element, index) => {\r\n                if (element.appFormReference === appFormReference) {\r\n                  this.multipleApplicationList[index] = {\r\n                    ...this.multipleApplicationList[index],\r\n                    typeOfMediumDisplay: this.typeOfMediumDisplay\r\n                  };\r\n                }\r\n              });\r\n              this.dataSource = new MatTableDataSource<any>(this.multipleApplicationList);\r\n              this.dataSource.paginator = this.paginator;\r\n            }\r\n          } else {\r\n            this.typeOfMediumDisplay = '';\r\n          }\r\n        }, (err: any) => {\r\n          this.typeOfMediumDisplay = '';\r\n        });\r\n  }\r\n\r\n  rejectPayment() {\r\n    Swal.fire({\r\n      text: 'Are you sure you want to reject this roof of payment?',\r\n      icon: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Confirm'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.spinner.show();\r\n\r\n        let rejectEndpoint = ENDPOINTS.accountingReject;\r\n        if (this.isMultiple) {\r\n          rejectEndpoint = ENDPOINTS.accountingRejectMultiple;\r\n        } else if (this.isSpecial) {\r\n          rejectEndpoint = ENDPOINTS.accountingRejectSpecial;\r\n        }\r\n\r\n        this.apiService.save(rejectEndpoint, this.payment)\r\n          .subscribe((res: any) => {\r\n            this.hideSpinner();\r\n            this.sweetAlertService.customSuccessMessage('Successfully rejected.');\r\n\r\n            if (this.paymentTypeFromUrl) {\r\n              this.router.navigate(['asc/page/accounting/payments/', `schedule-of-fees-${this.paymentTypeFromUrl}`]);\r\n            } else {\r\n              this.router.navigate(['asc/page/accounting/payments/']);\r\n            }\r\n          }, (err: any) => {\r\n            this.hideSpinner();\r\n            this.sweetAlertService.error(err);\r\n          }, () => {\r\n            // actions after subscription\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  fetchMultimedia(): void{\r\n    let typeofMedium = this.payment?.applicationForm.refTypeOfMedium === TYPE_OF_MEDIUM.MULTIMEDIA_MOVING ? 'moving' : 'static';\r\n    let endpoint = ENDPOINTS.applicationMultimedia + '-' + typeofMedium + '/app-form-reference'\r\n    this.apiService.findByParam(endpoint, this.payment?.applicationForm.appFormReference).subscribe(\r\n      multimedia => {\r\n        if (multimedia) this.multimediaDTO = multimedia.responseData.data;\r\n      }\r\n    );\r\n  }\r\n}\r\n","export default \"<form>\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"currentUser?.userRole.name=='ROLE_ACCOUNTING'\\\">\\r\\n      <div class=\\\"col-md-12 title\\\">\\r\\n        <mat-label>\\r\\n          <mat-icon>payment</mat-icon> PAYMENT\\r\\n        </mat-label>\\r\\n\\r\\n        <button class=\\\"button-right button-red\\\" mat-raised-button (click)=\\\"navigateToList()\\\">\\r\\n          <mat-icon>list</mat-icon> VIEW LIST OF PAYMENT\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row mt-3\\\">\\r\\n      <mat-accordion class=\\\"headers-align\\\">\\r\\n        <mat-expansion-panel>\\r\\n          <mat-expansion-panel-header>\\r\\n            <mat-panel-title>\\r\\n              <i class=\\\"material-icons\\\">label_important</i> &nbsp;Preview\\r\\n            </mat-panel-title>\\r\\n            <mat-panel-description>\\r\\n              Application Details\\r\\n              <i class=\\\"material-icons\\\">visibility</i>\\r\\n            </mat-panel-description>\\r\\n          </mat-expansion-panel-header>\\r\\n          <br>\\r\\n          <app-add-payment-preview-application [previewS1Application]=\\\"payment?.applicationForm || payment?.multipleApplication\\\" [multimediaDTO]=\\\"multimediaDTO\\\"></app-add-payment-preview-application>\\r\\n        </mat-expansion-panel>\\r\\n      </mat-accordion>\\r\\n    </div>\\r\\n    <hr>\\r\\n\\r\\n    <form [formGroup]=\\\"paymentForm\\\">\\r\\n      <div class=\\\"row fields\\\">\\r\\n        <div class=\\\"col-md-12 title\\\" *ngIf=\\\"currentUser?.userRole?.name!='ROLE_ACCOUNTING'\\\">\\r\\n          <mat-label>\\r\\n            <mat-icon>payment</mat-icon>\\r\\n            {{payment?.paymentStatus!='PAID'&&safeURL!=undefined ? 'FOR APPROVAL' : payment?.paymentStatus}}\\r\\n          </mat-label>\\r\\n        </div>\\r\\n\\r\\n        <!--///////////////////////// ACCOUNTING /////////////////////////////-->\\r\\n        <div class=\\\"row\\\" *ngIf=\\\"currentUser.userRole.name=='ROLE_ACCOUNTING'\\\">\\r\\n          <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\">\\r\\n            <mat-label>Type Of Payment</mat-label>\\r\\n            <input matInput value=\\\"Schedule of Fees\\\" readonly>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md-6\\\" appearance=\\\"outline\\\">\\r\\n          <div class=\\\"col-md-12\\\" appearance=\\\"outline\\\" *ngIf=\\\"isForPayment || paymentTypeFromUrl === 'paid' || safeURL \\\">\\r\\n            <mat-label>Filename: </mat-label>\\r\\n            <br>\\r\\n            <input matInput [value]=\\\"attachmentDocument.originalFilename\\\" disabled\\r\\n              *ngIf=\\\"attachmentDocument.originalFilename\\\">\\r\\n            <input class=\\\"file-upload\\\" type=\\\"file\\\"\\r\\n              *ngIf=\\\"!attachmentDocument.originalFilename && this.paymentTypeFromUrl !== 'paid'\\\" accept=\\\".pdf\\\"\\r\\n              (change)=\\\"selectFile($event)\\\">\\r\\n            <br><br>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"col-md-12\\\" appearance=\\\"outline\\\"\\r\\n            *ngIf=\\\"(isForPayment || this.paymentTypeFromUrl === 'paid' || safeURL) && (attachmentDocument?.paymentAttachmentReference || isShowUploadButton)\\\">\\r\\n\\r\\n            <button mat-raised-button class=\\\"button-red button-right\\\" (click)=\\\"viewDocument()\\\"\\r\\n              *ngIf=\\\"attachmentDocument?.paymentAttachmentReference\\\">\\r\\n              <mat-icon>open_in_new</mat-icon> VIEW DOCUMENT\\r\\n            </button>\\r\\n\\r\\n            &nbsp; &nbsp;\\r\\n\\r\\n            <button mat-raised-button class=\\\"button-red button-right\\\" (click)=\\\"uploadProofOfPayment()\\\"\\r\\n              [disabled]=\\\"!safeURL||!isShowUploadButton\\\"\\r\\n              *ngIf=\\\"isShowUploadButton && !attachmentDocument.originalFilename\\\">\\r\\n              <mat-icon>upload</mat-icon> UPLOAD\\r\\n            </button>\\r\\n            <br><br>\\r\\n          </div>\\r\\n          <div class=\\\"file-upload\\\" style=\\\"border: 1px solid red\\\" *ngIf=\\\"safeURL\\\"\\r\\n            [hidden]=\\\"payment?.paymentStatus === 'PAID' || payment?.paymentStatus === 'UNPAID'\\\">\\r\\n            <object [data]=\\\"safeURL\\\" type=\\\"application/pdf\\\" width=\\\"100%\\\" height=\\\"500\\\">\\r\\n              <iframe [src]=\\\"safeURL\\\" width=\\\"100%\\\" height=\\\"500\\\">\\r\\n                <p>This browser does not support PDF!</p>\\r\\n              </iframe>\\r\\n            </object>\\r\\n          </div>\\r\\n          <br>\\r\\n          <div class=\\\"row\\\">\\r\\n            <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\" [hidden]=\\\"isMultiple\\\">\\r\\n              <mat-label>Reference Number</mat-label>\\r\\n              <input matInput\\r\\n                [value]=\\\"payment?.applicationForm?.referenceCode || payment?.applicationFormS2?.applicationForm?.referenceCode\\\"\\r\\n                readonly>\\r\\n            </mat-form-field>\\r\\n\\r\\n            <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n              <mat-label>Advertiser</mat-label>\\r\\n              <input matInput name=\\\"companyName\\\" readonly\\r\\n                [value]=\\\"payment?.applicationForm?.company?.companyName || payment?.multipleApplication?.company?.companyName || payment?.applicationFormS2?.applicationForm?.company?.companyName\\\">\\r\\n            </mat-form-field>\\r\\n\\r\\n            <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\" [hidden]=\\\"isMultiple\\\">\\r\\n              <mat-label>Ad Title - Medium (Length)</mat-label>\\r\\n              <textarea matInput name=\\\"refTypeOfMedium\\\"\\r\\n                [value]=\\\"payment?.applicationForm?.adTitle ? payment?.applicationForm?.adTitle + ' - ' + typeOfMediumDisplay : typeOfMediumDisplay || payment?.applicationFormS2?.applicationForm?.adTitle + ' - ' + typeOfMediumDisplay || payment?.applicationFormS2?.applicationForm?.adTitle + ' - ' + typeOfMediumDisplay\\\"\\r\\n                readonly></textarea>\\r\\n            </mat-form-field>\\r\\n\\r\\n            <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n              <mat-label>Vatable Sales</mat-label>\\r\\n              <input class=\\\"numbers-input\\\" matInput [value]=\\\"payment?.basicRate | number : '1.2-2'\\\" readonly\\r\\n                step=\\\"0.01\\\">\\r\\n            </mat-form-field>\\r\\n\\r\\n            <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n              <mat-label>VAT</mat-label>\\r\\n              <input class=\\\"numbers-input\\\" matInput [value]=\\\"payment?.vat | number : '1.2-2'\\\" readonly>\\r\\n            </mat-form-field>\\r\\n\\r\\n            <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n              <mat-label>Total Sales (VAT Inclusive)</mat-label>\\r\\n              <input class=\\\"numbers-input total\\\" matInput name=\\\"amount\\\" [value]=\\\"payment?.amountDue | number : '1.2-2'\\\"\\r\\n                readonly>\\r\\n            </mat-form-field>\\r\\n\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md-6\\\" [hidden]=\\\"payment?.paymentStatus!='PAID'&&currentUser?.userRole?.name!='ROLE_ACCOUNTING'\\\">\\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n            <div *ngIf=\\\"isMultiple\\\">\\r\\n              <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\r\\n                <ng-container matColumnDef=\\\"referenceCode\\\">\\r\\n                  <th mat-header-cell *matHeaderCellDef> Reference Code </th>\\r\\n                  <td mat-cell *matCellDef=\\\"let element; let i = index\\\">{{element?.referenceCode}}</td>\\r\\n                </ng-container>\\r\\n                <ng-container matColumnDef=\\\"adTitle\\\">\\r\\n                  <th mat-header-cell *matHeaderCellDef> Ad Title </th>\\r\\n                  <td mat-cell *matCellDef=\\\"let element; let i = index\\\">{{element?.adTitle}}</td>\\r\\n                </ng-container>\\r\\n                <ng-container matColumnDef=\\\"mediumAndLength\\\">\\r\\n                  <th mat-header-cell *matHeaderCellDef> Medium And Length</th>\\r\\n                  <td mat-cell *matCellDef=\\\"let element; let i = index\\\">{{ element?.typeOfMediumDisplay }}</td>\\r\\n                </ng-container>\\r\\n                <ng-container matColumnDef=\\\"amount\\\">\\r\\n                  <th mat-header-cell *matHeaderCellDef> Amount</th>\\r\\n                  <td mat-cell *matCellDef=\\\"let element; let i = index\\\">{{element?.amount | number : '1.2-2'}}</td>\\r\\n                </ng-container>\\r\\n                <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n                <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n              </table>\\r\\n              <div class=\\\"no-record\\\" [hidden]=\\\"dataSource && dataSource?.data?.length > 0\\\">\\r\\n                No record found.\\r\\n              </div>\\r\\n              <mat-paginator [pageSizeOptions]=\\\"[5, 10, 20]\\\" showFirstLastButtons></mat-paginator>\\r\\n            </div>\\r\\n\\r\\n            <span>\\r\\n              <mat-checkbox class=\\\"example-margin\\\" [(ngModel)]=\\\"payment && payment.filedBirForm\\\" formControlName=\\\"filedBirForm\\\"\\r\\n                (ngModelChange)=\\\"computeWithholding()\\\"\\r\\n                >\\r\\n                BIR Form 2307</mat-checkbox>\\r\\n            </span>\\r\\n            <!-- <b [hidden]=\\\"payment?.paymentStatus !== 'PAID' || !payment.filedBirForm\\\"><i class=\\\"material-icons\\\">check</i>\\r\\n              BIR Form 2307</b>\\r\\n            <b [hidden]=\\\"payment?.paymentStatus !== 'PAID' || payment.filedBirForm\\\"><i class=\\\"material-icons\\\">close</i>\\r\\n              BIR Form 2307</b> -->\\r\\n            <br><br>\\r\\n            <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n              <mat-label>Withholding Tax</mat-label>\\r\\n              <input matInput class=\\\"numbers-input\\\" name=\\\"vat\\\" [value]=\\\"payment?.withholdingTax | number : '1.2-2'\\\"\\r\\n                formControlName=\\\"withholdingTax\\\" readonly>\\r\\n            </mat-form-field>\\r\\n\\r\\n            <!-- <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n              <mat-label>Official Receipt No</mat-label>\\r\\n              <input matInput name=\\\"orNo\\\" [(ngModel)]=\\\"payment.officialReceiptNo\\\" [readonly]=\\\"!isForPayment\\\"\\r\\n                formControlName=\\\"orNo\\\" (keydown)=\\\"validateFieldService.numbersOnly($event)\\\">\\r\\n            </mat-form-field> -->\\r\\n\\r\\n            <!-- <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n              <mat-label>Amount Receive</mat-label>\\r\\n              <input matInput name=\\\"amountReceive\\\" type=\\\"number\\\" [(ngModel)]=\\\"payment.amountReceive\\\" formControlName=\\\"amountReceive\\\"\\r\\n              [readonly]=\\\"currentUser.userRole.name!='ROLE_ACCOUNTING'||payment?.paymentStatus=='PAID'\\\">\\r\\n            </mat-form-field> -->\\r\\n\\r\\n            <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n              <mat-label>Amount Due</mat-label>\\r\\n              <input class=\\\"numbers-input total\\\" matInput name=\\\"amount\\\"\\r\\n                [value]=\\\"getAmountDue() | number : '1.2-2'\\\" readonly>\\r\\n            </mat-form-field>\\r\\n\\r\\n            <div *ngIf=\\\"isMultiple\\\"><br>\\r\\n              <hr><br>\\r\\n            </div>\\r\\n\\r\\n            <!-- <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n              <mat-label>Payment Mode</mat-label>\\r\\n              <input matInput [value]=\\\"payment?.paymentMethod?.paymentType?.paymentDescription\\\" readonly> -->\\r\\n            <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n              <mat-label>Payment Mode</mat-label>\\r\\n              <mat-select class=\\\"col-md-4\\\" [(ngModel)]=\\\"paymentMethod.paymentType\\\" name=\\\"paymentType\\\"\\r\\n                [compareWith]=\\\"comparePaymentMethod\\\" formControlName=\\\"paymentType\\\" [disabled]=\\\"payment?.paymentStatus=='PAID' || payment?.paymentStatus=='UNPAID'\\\"\\r\\n                (selectionChange)=\\\"resetPaymentTypeValidation()\\\">\\r\\n                <mat-option *ngFor=\\\"let i of paymentTypeList\\\" [value]=\\\"i\\\" name=\\\"paymentType\\\">\\r\\n                  {{ i?.paymentDescription | uppercase }}\\r\\n                </mat-option>\\r\\n              </mat-select>\\r\\n            </mat-form-field>\\r\\n\\r\\n            <div *ngIf=\\\"paymentMethod?.paymentType?.paymentDescription ==='Cash' || paymentMethod?.paymentType?.paymentDescription ==='GCash' ||\\r\\n              paymentMethod?.paymentType?.paymentDescription ==='PayMaya'\\\">\\r\\n\\r\\n\\r\\n              <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label>Reference Number <span class=\\\"required-field\\\">\\r\\n                    <mat-icon>notification_important</mat-icon>\\r\\n                  </span></mat-label>\\r\\n                <input matInput [(ngModel)]=\\\"paymentMethod.referenceNo\\\" name=\\\"referenceNo\\\" formControlName=\\\"referenceNo\\\"\\r\\n                  [readonly]=\\\"currentUser.userRole.name!='ROLE_ACCOUNTING'||payment?.paymentStatus=='PAID'\\\"\\r\\n                  (blur)=\\\"paymentTypevalidator()\\\" (keyup)=\\\"paymentTypevalidator()\\\">\\r\\n              </mat-form-field>\\r\\n              <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label>Fund Transfer Date <span class=\\\"required-field\\\">\\r\\n                    <mat-icon>notification_important</mat-icon>\\r\\n                  </span></mat-label>\\r\\n                <input matInput placeholder=\\\"Date\\\" [matDatepicker]=\\\"paymentDate\\\" [min]=\\\"currentDate\\\"\\r\\n                  [(ngModel)]=\\\"paymentMethod.paymentDate\\\" name=\\\"paymentDate\\\" formControlName=\\\"paymentDate\\\"\\r\\n                  [readonly]=\\\"currentUser?.userRole.name!='ROLE_ACCOUNTING'||payment?.paymentStatus=='PAID'\\\"\\r\\n                  (dateChange)=\\\"paymentTypevalidator()\\\" (keyup)=\\\"paymentTypevalidator()\\\">\\r\\n                <mat-datepicker-toggle matSuffix [for]=\\\"paymentDate\\\" *ngIf=\\\"payment?.paymentStatus!=='PAID'\\\">\\r\\n                </mat-datepicker-toggle>\\r\\n                <mat-datepicker color=\\\"warn\\\" #paymentDate></mat-datepicker>\\r\\n              </mat-form-field>\\r\\n              <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\"\\r\\n                *ngIf=\\\"paymentMethod?.paymentType?.paymentDescription ==='PayMaya'\\\">\\r\\n                <mat-label>Confirmation Code <span class=\\\"required-field\\\">\\r\\n                    <mat-icon>notification_important</mat-icon>\\r\\n                  </span></mat-label>\\r\\n                <input matInput [(ngModel)]=\\\"paymentMethod.ccConfirmationCode\\\" name=\\\"ccConfirmationCode\\\"\\r\\n                  formControlName=\\\"ccConfirmationCode\\\"\\r\\n                  [readonly]=\\\"currentUser.userRole.name!='ROLE_ACCOUNTING'||payment?.paymentStatus=='PAID'\\\">\\r\\n              </mat-form-field>\\r\\n              <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label>Amount Transferred <span class=\\\"required-field\\\">\\r\\n                    <mat-icon>notification_important</mat-icon>\\r\\n                  </span></mat-label>\\r\\n                <input matInput [(ngModel)]=\\\"paymentMethod.amount\\\" name=\\\"amount\\\" formControlName=\\\"amount\\\"\\r\\n                  (keydown)=\\\"validateFieldService.numbersOnly($event)\\\" class=\\\"numbers-input\\\"\\r\\n                  [hidden]=\\\"currentUser.userRole.name!='ROLE_ACCOUNTING'||payment?.paymentStatus=='PAID'\\\"\\r\\n                  (blur)=\\\"paymentTypevalidator()\\\" (keyup)=\\\"paymentTypevalidator()\\\">\\r\\n\\r\\n                <input class=\\\"numbers-input total\\\" matInput name=\\\"amount\\\"\\r\\n                  [value]=\\\"paymentMethod?.amount | number : '1.2-2'\\\" readonly\\r\\n                  *ngIf=\\\"currentUser.userRole.name!='ROLE_ACCOUNTING'||payment?.paymentStatus=='PAID'\\\">\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n\\r\\n\\r\\n            <div class=\\\"row\\\" *ngIf=\\\"paymentMethod?.paymentType?.paymentDescription ==='Voucher'\\\">\\r\\n              <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label>Control Number <span class=\\\"required-field\\\">\\r\\n                    <mat-icon>notification_important</mat-icon>\\r\\n                  </span></mat-label>\\r\\n                <input matInput [(ngModel)]=\\\"paymentMethod.controlNo\\\" name=\\\"controlNo\\\" formControlName=\\\"controlNo\\\"\\r\\n                  [readonly]=\\\"currentUser.userRole.name!='ROLE_ACCOUNTING'||payment?.paymentStatus=='PAID'\\\"\\r\\n                  (blur)=\\\"paymentTypevalidator()\\\" (keyup)=\\\"paymentTypevalidator()\\\">\\r\\n              </mat-form-field>\\r\\n              <!-- <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label>Amount</mat-label>\\r\\n                <input matInput [(ngModel)]=\\\"paymentMethod.amount\\\" name=\\\"amount\\\" formControlName=\\\"amount\\\"\\r\\n                  (keydown)=\\\"validateFieldService.numbersOnly($event)\\\" class=\\\"numbers-input\\\"\\r\\n                  [readonly]=\\\"currentUser.userRole.name!='ROLE_ACCOUNTING'||payment?.paymentStatus=='PAID'\\\">\\r\\n              </mat-form-field> -->\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row\\\"\\r\\n              *ngIf=\\\"paymentMethod?.paymentType?.paymentDescription ==='Bank' ||\\r\\n            paymentMethod?.paymentType?.paymentDescription ==='Credit Card' || paymentMethod?.paymentType?.paymentDescription ==='Check'\\\">\\r\\n\\r\\n              <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label>Bank Name <span class=\\\"required-field\\\">\\r\\n                    <mat-icon>notification_important</mat-icon>\\r\\n                  </span></mat-label>\\r\\n                <input matInput [(ngModel)]=\\\"paymentMethod.bankName\\\" name=\\\"bankName\\\" formControlName=\\\"bankName\\\"\\r\\n                  [readonly]=\\\"currentUser.userRole.name!='ROLE_ACCOUNTING'||payment?.paymentStatus=='PAID'\\\"\\r\\n                  (blur)=\\\"paymentTypevalidator()\\\" (keyup)=\\\"paymentTypevalidator()\\\">\\r\\n              </mat-form-field>\\r\\n              <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\"\\r\\n                *ngIf=\\\"paymentMethod?.paymentType?.paymentDescription ==='Credit Card'\\\">\\r\\n                <mat-label>Confirmation Code <span class=\\\"required-field\\\">\\r\\n                    <mat-icon>notification_important</mat-icon>\\r\\n                  </span></mat-label>\\r\\n                <input matInput [(ngModel)]=\\\"paymentMethod.ccConfirmationCode\\\" name=\\\"ccConfirmationCode\\\"\\r\\n                  formControlName=\\\"ccConfirmationCode\\\"\\r\\n                  [readonly]=\\\"currentUser.userRole.name!='ROLE_ACCOUNTING'||payment?.paymentStatus=='PAID'\\\"\\r\\n                  (blur)=\\\"paymentTypevalidator()\\\" (keyup)=\\\"paymentTypevalidator()\\\">\\r\\n              </mat-form-field>\\r\\n              <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\"\\r\\n                *ngIf=\\\"paymentMethod?.paymentType?.paymentDescription ==='Check'\\\">\\r\\n                <mat-label>Check Number <span class=\\\"required-field\\\">\\r\\n                    <mat-icon>notification_important</mat-icon>\\r\\n                  </span></mat-label>\\r\\n                <input matInput [(ngModel)]=\\\"paymentMethod.checkNo\\\" name=\\\"checkNo\\\" formControlName=\\\"checkNo\\\"\\r\\n                  [readonly]=\\\"currentUser.userRole.name!='ROLE_ACCOUNTING'||payment?.paymentStatus=='PAID'\\\"\\r\\n                  (blur)=\\\"paymentTypevalidator()\\\" (keyup)=\\\"paymentTypevalidator()\\\">\\r\\n              </mat-form-field>\\r\\n              <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label>Amount Transferred <span class=\\\"required-field\\\">\\r\\n                    <mat-icon>notification_important</mat-icon>\\r\\n                  </span></mat-label>\\r\\n                <input matInput [(ngModel)]=\\\"paymentMethod.amount\\\" name=\\\"amount\\\" class=\\\"numbers-input\\\"\\r\\n                  formControlName=\\\"amount\\\"\\r\\n                  [hidden]=\\\"currentUser.userRole.name!='ROLE_ACCOUNTING'||payment?.paymentStatus=='PAID'\\\"\\r\\n                  (blur)=\\\"paymentTypevalidator()\\\" (keyup)=\\\"paymentTypevalidator()\\\">\\r\\n\\r\\n                <input class=\\\"numbers-input total\\\" matInput name=\\\"amount\\\"\\r\\n                  [value]=\\\"paymentMethod?.amount | number : '1.2-2'\\\" readonly\\r\\n                  *ngIf=\\\"currentUser.userRole.name!='ROLE_ACCOUNTING'||payment?.paymentStatus=='PAID'\\\">\\r\\n              </mat-form-field>\\r\\n              <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\"\\r\\n                *ngIf=\\\"paymentMethod?.paymentType?.paymentDescription ==='Bank'\\\">\\r\\n                <mat-label>Branch <span class=\\\"required-field\\\">\\r\\n                    <mat-icon>notification_important</mat-icon>\\r\\n                  </span></mat-label>\\r\\n                <input matInput [(ngModel)]=\\\"paymentMethod.bankBranch\\\" name=\\\"withholdingTax\\\"\\r\\n                  formControlName=\\\"bankBranch\\\"\\r\\n                  [readonly]=\\\"currentUser.userRole.name!='ROLE_ACCOUNTING'||payment?.paymentStatus=='PAID'\\\"\\r\\n                  (blur)=\\\"paymentTypevalidator()\\\" (keyup)=\\\"paymentTypevalidator()\\\">\\r\\n              </mat-form-field>\\r\\n              <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\"\\r\\n                *ngIf=\\\"paymentMethod?.paymentType?.paymentDescription ==='Bank'\\\">\\r\\n                <mat-label>Deposited Date <span class=\\\"required-field\\\">\\r\\n                    <mat-icon>notification_important</mat-icon>\\r\\n                  </span></mat-label>\\r\\n                <input matInput placeholder=\\\"Date\\\" [matDatepicker]=\\\"paymentDate\\\" [(ngModel)]=\\\"paymentMethod.paymentDate\\\"\\r\\n                  name=\\\"paymentDate\\\" formControlName=\\\"paymentDate\\\" (dateChange)=\\\"paymentTypevalidator()\\\"\\r\\n                  (keyup)=\\\"paymentTypevalidator()\\\">\\r\\n                <mat-datepicker-toggle matSuffix [for]=\\\"paymentDate\\\"></mat-datepicker-toggle>\\r\\n                <mat-datepicker color=\\\"warn\\\" #paymentDate disabled=\\\"false\\\"></mat-datepicker>\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n\\r\\n\\r\\n            <!--  <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n              <mat-label>Discount</mat-label>\\r\\n              <input matInput name=\\\"discount\\\" type=\\\"number\\\" [(ngModel)]=\\\"payment.discount\\\" formControlName=\\\"discount\\\"\\r\\n              [readonly]=\\\"currentUser.userRole.name!='ROLE_ACCOUNTING'||payment?.paymentStatus=='PAID'\\\">\\r\\n            </mat-form-field> -->\\r\\n\\r\\n\\r\\n            <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n              <mat-label>REMARKS</mat-label>\\r\\n              <!-- <textarea matInput [value]=\\\"payment?.remarks\\\" [readonly]=\\\"!isForPayment\\\"></textarea> -->\\r\\n              <textarea matInput [ngModel]=\\\"payment?.remarks\\\" (ngModelChange)=\\\"payment ? payment.remarks = $event : null\\\" formControlName=\\\"remarks\\\" name=\\\"remarks\\\"\\r\\n                [readonly]=\\\"currentUser.userRole.name!='ROLE_ACCOUNTING'||payment?.paymentStatus=='PAID'\\\"></textarea>\\r\\n            </mat-form-field>\\r\\n\\r\\n          </div>\\r\\n\\r\\n          <div *ngIf=\\\"selectedProofOfPayment === 2\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n\\r\\n              <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label>Applicant Company Details</mat-label>\\r\\n                <input matInput name=\\\"companyName\\\" [readonly]=\\\"isForPayment\\\">\\r\\n              </mat-form-field>\\r\\n\\r\\n            </div>\\r\\n            <div class=\\\"row\\\">\\r\\n\\r\\n              <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label>Accumulated Amount to be settled</mat-label>\\r\\n                <input matInput name=\\\"length\\\" [readonly]=\\\"isForPayment\\\" class=\\\"numbers-input\\\">\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div *ngIf=\\\"selectedProofOfPayment === 3\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n\\r\\n              <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label>Client Company Details</mat-label>\\r\\n                <input matInput name=\\\"companyName\\\" [readonly]=\\\"isForPayment\\\">\\r\\n              </mat-form-field>\\r\\n\\r\\n            </div>\\r\\n            <div class=\\\"row\\\">\\r\\n\\r\\n              <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label>Accumulated Amount to be settled</mat-label>\\r\\n                <input matInput name=\\\"length\\\" [readonly]=\\\"isForPayment\\\" class=\\\"numbers-input\\\">\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"row\\\" *ngIf=\\\"currentUser?.userRole?.name=='ROLE_ACCOUNTING'&&payment?.paymentStatus!=='PAID'\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n              <button class=\\\"button-right button-red\\\" mat-raised-button (click)=\\\"processPayment(payment?.remarks)\\\"\\r\\n                [hidden]=\\\"isDelinquent\\\"\\r\\n                [disabled]=\\\"(!paymentForm.valid || !payment?.paymentAttachmentReference || !isPaymentTypeValid)\\r\\n                && ((paymentMode?.toUpperCase() !== 'PROMISORRY NOTE' && paymentMethod.paymentType?.paymentDescription?.toUpperCase() !== 'PROMISORRY NOTE') || !payment.paymentAttachmentReference )\\\">\\r\\n                <mat-icon>offline_pin</mat-icon> PROCESS\\r\\n              </button>\\r\\n              <button mat-raised-button class=\\\"button-right button-red button-right__approve\\\" (click)=\\\"approvePenalty()\\\"\\r\\n                [disabled]=\\\"(!paymentForm.valid || !payment?.paymentAttachmentReference || !isPaymentTypeValid)\\r\\n              && ((paymentMode?.toUpperCase() !== 'PROMISORRY NOTE' && paymentMethod.paymentType?.paymentDescription?.toUpperCase() !== 'PROMISORRY NOTE') || !payment.paymentAttachmentReference )\\\"\\r\\n                *ngIf=\\\"isDelinquent\\\">\\r\\n                <i class=\\\"material-icons color__white\\\">task_alt</i> APPROVE\\r\\n              </button>\\r\\n              &nbsp;\\r\\n              <button mat-raised-button class=\\\"button-right button-red\\\" (click)=\\\"rejectPayment()\\\" *ngIf=\\\"isForApproval\\\">\\r\\n                <mat-icon>unpublished</mat-icon> REJECT\\r\\n              </button>\\r\\n            </div>\\r\\n          </div>\\r\\n          <br>\\r\\n        </div>\\r\\n      </div>\\r\\n    </form>\\r\\n  </div>\\r\\n</form>\";","export default \"<!-- CLIENT INFO -->\\r\\n<div class=\\\"row fields\\\">\\r\\n  <h4>\\r\\n    <i class=\\\"material-icons\\\">preview</i> &nbsp;<b>CLIENT'S INFORMATION</b>\\r\\n    <hr>\\r\\n  </h4>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-4\\\" appearance=\\\"outline\\\">\\r\\n      <mat-label>Client Company Name</mat-label>\\r\\n      <input matInput [value]=\\\"previewS1Application?.company?.companyName\\\" disabled>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-4\\\" appearance=\\\"outline\\\">\\r\\n      <mat-label>Client Membership Affiliation</mat-label>\\r\\n      <input matInput [value]=\\\"previewS1Application?.company?.membersAffiliation?.description\\\" disabled>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-4\\\" appearance=\\\"outline\\\"></div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-4\\\" appearance=\\\"outline\\\">\\r\\n      <mat-label>Brand</mat-label>\\r\\n      <input matInput [value]=\\\"previewS1Application?.brand?.description\\\" disabled>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-4\\\" appearance=\\\"outline\\\">\\r\\n      <mat-label>Product</mat-label>\\r\\n      <input matInput [value]=\\\"previewS1Application?.product?.description\\\" disabled>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-4\\\" appearance=\\\"outline\\\">\\r\\n      <mat-label>Category</mat-label>\\r\\n      <input matInput [value]=\\\"previewS1Application?.product?.category?.description\\\" disabled>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <br><br><br>\\r\\n</div>\\r\\n\\r\\n<!-- PRESENTOR INFO -->\\r\\n<div class=\\\"row fields\\\">\\r\\n  <h4>\\r\\n    <i class=\\\"material-icons\\\">preview</i> &nbsp;<b>PRESENTOR INFORMATION</b>\\r\\n    <hr>\\r\\n  </h4>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12 mb-3\\\" appearance=\\\"outline\\\">\\r\\n      <mat-label>Name of Applicant</mat-label>\\r\\n      <input matInput [value]=\\\"presentorDetails?.firstName+' '+presentorDetails?.lastName\\\" disabled>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-12 mb-3\\\" appearance=\\\"outline\\\">\\r\\n      <mat-label>Company Name</mat-label>\\r\\n      <input matInput [value]=\\\"presentorDetails?.company?.companyName\\\" disabled>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-12 mb-3\\\" appearance=\\\"outline\\\">\\r\\n      <mat-label>Address</mat-label>\\r\\n        <input matInput [value]=\\\"presentorDetails?.company?.completeAddress\\\" disabled>\\r\\n    </div>\\r\\n    \\r\\n    <div class=\\\"row col-md-12 mb-4\\\">\\r\\n      <div class=\\\"col-md-6 mb-3\\\" appearance=\\\"outline\\\">\\r\\n        <mat-label>Mobile Number</mat-label>\\r\\n        <input matInput [value]=\\\"presentorDetails?.mobileNumber\\\" disabled>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-6 mb-3\\\" appearance=\\\"outline\\\">\\r\\n        <mat-label>Email Address</mat-label>\\r\\n        <input matInput [value]=\\\"presentorDetails?.username\\\" disabled>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-6 mb-3\\\" appearance=\\\"outline\\\">\\r\\n        <mat-label>Telephone Number</mat-label>\\r\\n        <input matInput [value]=\\\"presentorDetails?.company?.companyTelephoneNo\\\" disabled>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-6 mb-3\\\" appearance=\\\"outline\\\">\\r\\n        <mat-label>Alternate Telephone Number</mat-label>\\r\\n        <input matInput [value]=\\\"presentorDetails?.company?.companyTelephoneNo2\\\" disabled>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<!-- MATERIAL INFO -->\\r\\n<div class=\\\"row fields\\\">\\r\\n  <h4>\\r\\n    <i class=\\\"material-icons\\\">preview</i> &nbsp;<b>MATERIAL INFORMATION</b>\\r\\n    <hr>\\r\\n  </h4>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n      <mat-label>Ad Title</mat-label>\\r\\n      <input matInput [value]=\\\"previewS1Application?.adTitle\\\" disabled>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row\\\"><br></div>\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-6\\\" appearance=\\\"outline\\\">\\r\\n      <mat-label>Reference Code of Previously-Approved Material</mat-label>\\r\\n      <input matInput [value]=\\\"previewS1Application?.previousRefCode\\\" disabled>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-6\\\" appearance=\\\"outline\\\">\\r\\n      <mat-label>Tag line</mat-label>\\r\\n      <input matInput [value]=\\\"previewS1Application?.tagLine\\\" disabled>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row\\\" *ngIf=\\\"previewS1Application?.refTypeOfMedium\\\">\\r\\n    <div class=\\\"col-md-6\\\" appearance=\\\"outline\\\">\\r\\n      <mat-label>Media Type</mat-label>\\r\\n      <input matInput [value]=\\\"previewS1Application?.refTypeOfMedium\\\" disabled>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\"><br></div>\\r\\n  <div class=\\\"row\\\" *ngIf=\\\"applicationSingleMedia\\\">\\r\\n    <div class=\\\"col-md-3\\\" appearance=\\\"outline\\\"\\r\\n      *ngIf=\\\"applicationSingleMedia?.mediumExecution?.typeOfMedium?.description\\\">\\r\\n      <mat-label>Type of Medium</mat-label>\\r\\n      <input matInput [value]=\\\"applicationSingleMedia?.mediumExecution?.typeOfMedium?.description\\\" disabled>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-3\\\" appearance=\\\"outline\\\" *ngIf=\\\"applicationSingleMedia?.mediumExecution\\\">\\r\\n      <mat-label>Execution</mat-label>\\r\\n      <input matInput [value]=\\\"applicationSingleMedia?.mediumExecution?.typeOfExecution?.typeOfExecution\\\" disabled>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-3\\\" appearance=\\\"outline\\\" *ngIf=\\\"applicationSingleMedia?.dialect\\\">\\r\\n      <mat-label>Language/Dialect</mat-label>\\r\\n      <input matInput [value]=\\\"applicationSingleMedia?.dialect?.dialect\\\" disabled>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-3\\\" appearance=\\\"outline\\\" *ngIf=\\\"applicationSingleMedia?.others\\\">\\r\\n      <mat-label>Others</mat-label>\\r\\n      <input matInput [value]=\\\"applicationSingleMedia?.others\\\" disabled>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-3\\\" appearance=\\\"outline\\\" *ngIf=\\\"applicationSingleMedia?.sizeLength\\\">\\r\\n      <mat-label>Size Length</mat-label>\\r\\n      <input matInput [value]=\\\"applicationSingleMedia?.sizeLength\\\" disabled>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-3\\\" appearance=\\\"outline\\\" *ngIf=\\\"applicationSingleMedia?.width\\\">\\r\\n      <mat-label>Width</mat-label>\\r\\n      <input matInput [value]=\\\"applicationSingleMedia?.width\\\" disabled>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <!-- Displaying Multimedia List -->\\r\\n  <div class=\\\"row\\\" *ngIf=\\\"multimediaDTO\\\">\\r\\n    <table class=\\\"mx-3 mb-3\\\">\\r\\n      <ng-container *ngIf=\\\"previewS1Application?.refTypeOfMedium === 'MULTIMEDIA-STATIC'\\\">\\r\\n        <ng-container *ngFor=\\\"let i of multimediaDTO.applicationMultimediaStaticList\\\">\\r\\n          <tr *ngIf=\\\"i?.hasSelected\\\" style=\\\"height: 30px;\\\">\\r\\n            <td class=\\\"col-md-4\\\">\\r\\n              <mat-checkbox [checked]=\\\"i?.hasSelected\\\" disabled>\\r\\n                {{i?.multimediaStaticMedium | uppercase}}\\r\\n              </mat-checkbox>\\r\\n            </td>\\r\\n            <td class=\\\"col-md-1\\\" \\r\\n              *ngIf=\\\"previewS1Application?.refTypeOfMedium === 'MULTIMEDIA-STATIC' && i?.multimediaStaticMedium !== 'digital static'\\\">\\r\\n              Size\\r\\n            </td>\\r\\n            <td class=\\\"col-md-2\\\">\\r\\n              <input matInput \\r\\n                *ngIf=\\\"previewS1Application?.refTypeOfMedium === 'MULTIMEDIA-STATIC' && i?.multimediaStaticMedium !== 'digital static'\\\" \\r\\n                [value]=\\\"i?.sizeLength\\\" disabled>\\r\\n            </td>\\r\\n            <td class=\\\"col-md-5\\\"></td>\\r\\n          </tr>\\r\\n        </ng-container>\\r\\n      </ng-container>\\r\\n\\r\\n      <ng-container *ngIf=\\\"previewS1Application?.refTypeOfMedium === 'MULTIMEDIA-MOVING'\\\">\\r\\n        <ng-container *ngFor=\\\"let i of multimediaDTO.applicationMultimediaMovingList\\\" style=\\\"height: 30px;\\\">\\r\\n          <tr *ngIf=\\\"i?.hasSelected\\\">\\r\\n            <td class=\\\"col-md-4\\\">\\r\\n              <mat-checkbox [checked]=\\\"true\\\" disabled>\\r\\n                {{i?.multimediaMovingMedium | uppercase}}\\r\\n              </mat-checkbox>\\r\\n            </td>\\r\\n            <td class=\\\"col-md-1\\\" *ngIf=\\\"previewS1Application?.refTypeOfMedium === 'MULTIMEDIA-MOVING'\\\">Length</td>\\r\\n            <td class=\\\"col-md-2\\\">\\r\\n              <input matInput *ngIf=\\\"previewS1Application?.refTypeOfMedium === 'MULTIMEDIA-MOVING'\\\" [value]=\\\"multimediaDTO?.sizeLength\\\" disabled>\\r\\n            </td>\\r\\n            <td class=\\\"col-md-5\\\"></td>\\r\\n          </tr>\\r\\n        </ng-container>\\r\\n      </ng-container>\\r\\n    </table>\\r\\n  </div>\\r\\n</div>\\r\\n\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AddPaymentComponent } from './add-payment.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AddPaymentComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AddPaymentRoutingModule { }\r\n"]}