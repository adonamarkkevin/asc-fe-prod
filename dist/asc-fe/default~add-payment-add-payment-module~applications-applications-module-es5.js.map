{"version":3,"sources":["webpack:///src/app/modules/pages/accounting/add-payment/add-payment-preview-application/add-payment-preview-application.component.ts","webpack:///src/app/modules/pages/accounting/add-payment/add-payment-preview-application/add-payment-preview-application.component.html","webpack:///src/app/modules/pages/accounting/add-payment/add-payment.module.ts","webpack:///src/app/modules/pages/accounting/add-payment/add-payment.component.ts","webpack:///src/app/modules/pages/accounting/add-payment/add-payment.component.html","webpack:///src/app/modules/pages/accounting/add-payment/add-payment-routing.module.ts"],"names":["AddPaymentPreviewApplicationComponent","apiService","previewS1Application","applicationSingleMedia","multimediaDTO","presentorDetails","multimediaMovingList","multimediaStaticList","changes","getPresentorDetails","applicationOwner","username","findByParam","userLogin","subscribe","res","responseData","data","AddPaymentModule","validateFieldService","AddPaymentComponent","sanitizer","formBuilder","route","router","fileStorageService","dataStorage","spinner","sweetAlertService","displayedColumns","multipleApplicationList","paymentTypeFromUrl","s1Application","attachmentDocument","typeOfMediumDisplay","paymentTypeList","attachmentDocuments","payment","paymentMethod","currentDate","Date","paymentTemp","isMultiple","isSpecial","isForPayment","isForApproval","isPaymentTypeValid","isDelinquent","isShowUploadButton","previewDocument","proofOfPayment","id","name","currentUser","getUserAccount","snapshot","paramMap","get","split","getPaymentList","setFormValidator","initData","toLowerCase","includes","userRole","ROLE_ACCOUNTING","getPaymentDetails","viewPayment","getMultipleApplicationList","paymentForm","group","paymentType","required","referenceNo","amount","paymentDate","bankName","bankBranch","controlNo","referenceNumber","typeOfMaterial","length","baseRate","vat","total","remarks","applicantCompanyDetails","accumulatedAmountToBeSettled","clientCompanyDetails","discount","amountReceive","filedBirForm","withholdingTax","orNo","ccConfirmationCode","checkNo","amountDue","customErrorMessage","fire","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","value","Number","save","approveDelinquentCompany","customSuccessMessage","navigate","err","error","message","responseMessage","a","b","paymentDescription","GCASH","CASH","PAYMAYA","BANK","VOUCHER","CHECK","PROMISORRY_NOTE","endpoint","paymentDetails","multiplePaymentDetails","paymentMultipleMonitoring","specialPaymentDetails","paymentSpecial","findAll","applicationForm","refTypeOfMedium","applicationFormS2","getApplicationSingleMedia","getMultimediaMoving","fetchMultimedia","getMultimediaStatic","paymentAttachmentReference","getAttachmentDocumentDisplay","ROLE_APPLICANT","creditCardIndex","findIndex","element","splice","paymentMultiple","paymentDetailsAccounting","paymentMode","res1","safeURL","bypassSecurityTrustResourceUrl","fileURL","getMultipleAppFormsWithNoRejected","forEach","multipleApplication","appFormReference","dataSource","paginator","amountTransferred","parseFloat","toString","toPay","paymentStatus","PAID","accountingPaymentApprove","accountingMultiplePaymentApprove","accountingSpecialPaymentApprove","selected","selectedProofOfPayment","basicRate","Math","round","toFixed","withholding","UNPAID","event","target","files","fileSize","size","URL","createObjectURL","reader","FileReader","file","readAsDataURL","onload","selectedFile","uploadedPaymentFile","window","open","show","params","PAYMENT","ORIGINAL","pushFileToStorage","addToAttachmentDocuments","hideSpinner","getAttachmentDocument","obj","originalFilename","filename","fileExtension","attachmentType","documentFormat","setTimeout","hide","console","mediumExecution","typeOfMedium","description","sizeLength","index","applicationMultimedia","multimediaList","Set","map","mappedList","multimediaSizeLength","mediaCtrl","media","rejectEndpoint","accountingReject","accountingRejectMultiple","accountingRejectSpecial","typeofMedium","MULTIMEDIA_MOVING","multimedia","computeWithholding","resetPaymentTypeValidation","routes","path","component","AddPaymentRoutingModule","forChild"],"mappings":"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","file":"default~add-payment-add-payment-module~applications-applications-module-es5.js","sourcesContent":["import { AfterViewInit, Component, Input, OnChanges, OnInit, SimpleChanges, ViewChild } from '@angular/core';\nimport { S1Application, UserAccount } from '@models';\nimport { ApiService } from '@services';\nimport { APP_DECISION_STATUS, ATTACHMENT_TYPE, ENDPOINTS, SUBMISSION_TYPE } from '@shared';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { ApplicationSingleMedia } from '../../../../../core/models/application-single-media.model';\n\n@Component({\n  selector: 'app-add-payment-preview-application',\n  templateUrl: './add-payment-preview-application.component.html',\n})\n\nexport class AddPaymentPreviewApplicationComponent implements OnChanges {\n  @Input() previewS1Application = new S1Application();\n  @Input() applicationSingleMedia = new ApplicationSingleMedia();\n  @Input() multimediaDTO: any = {};\n  presentorDetails = new UserAccount();\n\n  multimediaMovingList = [];\n  multimediaStaticList = [];\n\n  constructor(private apiService: ApiService) { }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['previewS1Application']) {\n      this.getPresentorDetails();\n    }\n  }\n\n  getPresentorDetails() {\n    if (this.previewS1Application?.applicationOwner?.username) {\n      this.apiService.findByParam(ENDPOINTS.userLogin, this.previewS1Application.applicationOwner.username).subscribe(\n        (res: any) => {\n          if (res.responseData.data) {\n            this.presentorDetails = res.responseData.data;\n          }\n        });\n    }\n  }\n}\n","<!-- CLIENT INFO -->\n<div class=\"row fields\">\n  <h4>\n    <i class=\"material-icons\">preview</i> &nbsp;<b>CLIENT'S INFORMATION</b>\n    <hr>\n  </h4>\n  <div class=\"row\">\n    <div class=\"col-md-4\" appearance=\"outline\">\n      <mat-label>Client Company Name</mat-label>\n      <input matInput [value]=\"previewS1Application?.company?.companyName\" disabled>\n    </div>\n    <div class=\"col-md-4\" appearance=\"outline\">\n      <mat-label>Client Membership Affiliation</mat-label>\n      <input matInput [value]=\"previewS1Application?.company?.membersAffiliation?.description\" disabled>\n    </div>\n    <div class=\"col-md-4\" appearance=\"outline\"></div>\n  </div>\n\n  <div class=\"row\">\n    <div class=\"col-md-4\" appearance=\"outline\">\n      <mat-label>Brand</mat-label>\n      <input matInput [value]=\"previewS1Application?.brand?.description\" disabled>\n    </div>\n    <div class=\"col-md-4\" appearance=\"outline\">\n      <mat-label>Product</mat-label>\n      <input matInput [value]=\"previewS1Application?.product?.description\" disabled>\n    </div>\n    <div class=\"col-md-4\" appearance=\"outline\">\n      <mat-label>Category</mat-label>\n      <input matInput [value]=\"previewS1Application?.product?.category?.description\" disabled>\n    </div>\n  </div>\n\n  <br><br><br>\n</div>\n\n<!-- PRESENTOR INFO -->\n<div class=\"row fields\">\n  <h4>\n    <i class=\"material-icons\">preview</i> &nbsp;<b>PRESENTOR INFORMATION</b>\n    <hr>\n  </h4>\n  <div class=\"row\">\n    <div class=\"col-md-12 mb-3\" appearance=\"outline\">\n      <mat-label>Name of Applicant</mat-label>\n      <input matInput [value]=\"presentorDetails?.firstName+' '+presentorDetails?.lastName\" disabled>\n    </div>\n    <div class=\"col-md-12 mb-3\" appearance=\"outline\">\n      <mat-label>Company Name</mat-label>\n      <input matInput [value]=\"presentorDetails?.company?.companyName\" disabled>\n    </div>\n    <div class=\"col-md-12 mb-3\" appearance=\"outline\">\n      <mat-label>Address</mat-label>\n        <input matInput [value]=\"presentorDetails?.company?.completeAddress\" disabled>\n    </div>\n    \n    <div class=\"row col-md-12 mb-4\">\n      <div class=\"col-md-6 mb-3\" appearance=\"outline\">\n        <mat-label>Mobile Number</mat-label>\n        <input matInput [value]=\"presentorDetails?.mobileNumber\" disabled>\n      </div>\n      <div class=\"col-md-6 mb-3\" appearance=\"outline\">\n        <mat-label>Email Address</mat-label>\n        <input matInput [value]=\"presentorDetails?.username\" disabled>\n      </div>\n      <div class=\"col-md-6 mb-3\" appearance=\"outline\">\n        <mat-label>Telephone Number</mat-label>\n        <input matInput [value]=\"presentorDetails?.company?.companyTelephoneNo\" disabled>\n      </div>\n      <div class=\"col-md-6 mb-3\" appearance=\"outline\">\n        <mat-label>Alternate Telephone Number</mat-label>\n        <input matInput [value]=\"presentorDetails?.company?.companyTelephoneNo2\" disabled>\n      </div>\n    </div>\n  </div>\n</div>\n\n<!-- MATERIAL INFO -->\n<div class=\"row fields\">\n  <h4>\n    <i class=\"material-icons\">preview</i> &nbsp;<b>MATERIAL INFORMATION</b>\n    <hr>\n  </h4>\n  <div class=\"row\">\n    <div class=\"col-md-12\" appearance=\"outline\">\n      <mat-label>Ad Title</mat-label>\n      <input matInput [value]=\"previewS1Application?.adTitle\" disabled>\n    </div>\n  </div>\n\n  <div class=\"row\"><br></div>\n\n  <div class=\"row\">\n    <div class=\"col-md-6\" appearance=\"outline\">\n      <mat-label>Reference Code of Previously-Approved Material</mat-label>\n      <input matInput [value]=\"previewS1Application?.previousRefCode\" disabled>\n    </div>\n    <div class=\"col-md-6\" appearance=\"outline\">\n      <mat-label>Tag line</mat-label>\n      <input matInput [value]=\"previewS1Application?.tagLine\" disabled>\n    </div>\n  </div>\n\n  <div class=\"row\" *ngIf=\"previewS1Application?.refTypeOfMedium\">\n    <div class=\"col-md-6\" appearance=\"outline\">\n      <mat-label>Media Type</mat-label>\n      <input matInput [value]=\"previewS1Application?.refTypeOfMedium\" disabled>\n    </div>\n  </div>\n  <div class=\"row\"><br></div>\n  <div class=\"row\" *ngIf=\"applicationSingleMedia\">\n    <div class=\"col-md-3\" appearance=\"outline\"\n      *ngIf=\"applicationSingleMedia?.mediumExecution?.typeOfMedium?.description\">\n      <mat-label>Type of Medium</mat-label>\n      <input matInput [value]=\"applicationSingleMedia?.mediumExecution?.typeOfMedium?.description\" disabled>\n    </div>\n    <div class=\"col-md-3\" appearance=\"outline\" *ngIf=\"applicationSingleMedia?.mediumExecution\">\n      <mat-label>Execution</mat-label>\n      <input matInput [value]=\"applicationSingleMedia?.mediumExecution?.typeOfExecution?.typeOfExecution\" disabled>\n    </div>\n    <div class=\"col-md-3\" appearance=\"outline\" *ngIf=\"applicationSingleMedia?.dialect\">\n      <mat-label>Language/Dialect</mat-label>\n      <input matInput [value]=\"applicationSingleMedia?.dialect?.dialect\" disabled>\n    </div>\n    <div class=\"col-md-3\" appearance=\"outline\" *ngIf=\"applicationSingleMedia?.others\">\n      <mat-label>Others</mat-label>\n      <input matInput [value]=\"applicationSingleMedia?.others\" disabled>\n    </div>\n    <div class=\"col-md-3\" appearance=\"outline\" *ngIf=\"applicationSingleMedia?.sizeLength\">\n      <mat-label>Size Length</mat-label>\n      <input matInput [value]=\"applicationSingleMedia?.sizeLength\" disabled>\n    </div>\n    <div class=\"col-md-3\" appearance=\"outline\" *ngIf=\"applicationSingleMedia?.width\">\n      <mat-label>Width</mat-label>\n      <input matInput [value]=\"applicationSingleMedia?.width\" disabled>\n    </div>\n  </div>\n\n  <!-- Displaying Multimedia List -->\n  <div class=\"row\" *ngIf=\"multimediaDTO\">\n    <table class=\"mx-3 mb-3\">\n      <ng-container *ngIf=\"previewS1Application?.refTypeOfMedium === 'MULTIMEDIA-STATIC'\">\n        <ng-container *ngFor=\"let i of multimediaDTO.applicationMultimediaStaticList\">\n          <tr *ngIf=\"i?.hasSelected\" style=\"height: 30px;\">\n            <td class=\"col-md-4\">\n              <mat-checkbox [checked]=\"i?.hasSelected\" disabled>\n                {{i?.multimediaStaticMedium | uppercase}}\n              </mat-checkbox>\n            </td>\n            <td class=\"col-md-1\" \n              *ngIf=\"previewS1Application?.refTypeOfMedium === 'MULTIMEDIA-STATIC' && i?.multimediaStaticMedium !== 'digital static'\">\n              Size\n            </td>\n            <td class=\"col-md-2\">\n              <input matInput \n                *ngIf=\"previewS1Application?.refTypeOfMedium === 'MULTIMEDIA-STATIC' && i?.multimediaStaticMedium !== 'digital static'\" \n                [value]=\"i?.sizeLength\" disabled>\n            </td>\n            <td class=\"col-md-5\"></td>\n          </tr>\n        </ng-container>\n      </ng-container>\n\n      <ng-container *ngIf=\"previewS1Application?.refTypeOfMedium === 'MULTIMEDIA-MOVING'\">\n        <ng-container *ngFor=\"let i of multimediaDTO.applicationMultimediaMovingList\" style=\"height: 30px;\">\n          <tr *ngIf=\"i?.hasSelected\">\n            <td class=\"col-md-4\">\n              <mat-checkbox [checked]=\"true\" disabled>\n                {{i?.multimediaMovingMedium | uppercase}}\n              </mat-checkbox>\n            </td>\n            <td class=\"col-md-1\" *ngIf=\"previewS1Application?.refTypeOfMedium === 'MULTIMEDIA-MOVING'\">Length</td>\n            <td class=\"col-md-2\">\n              <input matInput *ngIf=\"previewS1Application?.refTypeOfMedium === 'MULTIMEDIA-MOVING'\" [value]=\"multimediaDTO?.sizeLength\" disabled>\n            </td>\n            <td class=\"col-md-5\"></td>\n          </tr>\n        </ng-container>\n      </ng-container>\n    </table>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AddPaymentRoutingModule } from './add-payment-routing.module';\nimport { AddPaymentComponent } from './add-payment.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { AngularMaterialModule } from '@shared';\nimport { AddPaymentPreviewApplicationComponent } from './add-payment-preview-application/add-payment-preview-application.component';\n\n\n@NgModule({\n  declarations: [AddPaymentComponent, AddPaymentPreviewApplicationComponent],\n  imports: [\n    CommonModule,\n    AddPaymentRoutingModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    FormsModule,\n    AngularMaterialModule,\n  ],\n  exports: [\n    AddPaymentComponent,\n    AddPaymentPreviewApplicationComponent\n  ]\n})\nexport class AddPaymentModule { }\n","import { Component, OnInit, Input, ViewChild } from '@angular/core';\nimport { S1Application, Payment, AttachmentDocument } from '@models';\nimport { ApiService, SweetAlertService, DataStorageService } from '@services';\nimport { APPLICATION_STATUSES, ATTACHMENT_TYPE, ENDPOINTS, PAYMENT_MODE, PAYMENT_STATUS, PAYMENT_TYPE, PAYMENT_TYPE_LIST, SUBMISSION_TYPE, TYPE_OF_MEDIUM, USER_ROLES } from '@shared';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport Swal from 'sweetalert2';\nimport { PaymentMethod } from 'app/core/models/payment-method.model';\nimport { MatTable, MatTableDataSource } from '@angular/material/table';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { ValidateFieldService } from 'app/core/services/validate-field.service';\nimport { FileStorageService } from 'app/core/services/file.storage.service';\nimport { ApplicationSingleMedia } from 'app/core/models/application-single-media.model';\n\n@Component({\n  selector: 'app-add-payment',\n  templateUrl: './add-payment.component.html',\n  styleUrls: ['./add-payment.component.scss']\n})\nexport class AddPaymentComponent implements OnInit {\n  @ViewChild(MatPaginator, { static: false }) paginator: MatPaginator;\n  @ViewChild(MatTable, { static: false }) table: MatTable<AddPaymentComponent>;\n  dataSource: MatTableDataSource<any>\n  displayedColumns: string[] = ['referenceCode', 'adTitle', 'mediumAndLength', 'amount'];\n  multipleApplicationList = [];\n  paymentTypeFromUrl = '';\n\n  @Input() s1Application = new S1Application();\n  attachmentDocument = new AttachmentDocument();\n  applicationSingleMedia = new ApplicationSingleMedia();\n  typeOfMediumDisplay = '';\n  paymentTypeList = [];\n  attachmentDocuments = [];\n  @Input() payment = new Payment();\n  paymentMethod = new PaymentMethod();\n  safeURL: any;\n  id: any;\n  paymentForm: FormGroup;\n  paymentTypeForm: FormGroup;\n  currentUser: any;\n  paymentMode: string;\n  selectedProofOfPayment: any;\n  currentDate = new Date();\n  paymentTemp = new Payment();\n  isMultiple = false;\n  isSpecial = false;\n  isForPayment = false;\n  isForApproval = false;\n  isPaymentTypeValid = false;\n  isDelinquent = false;\n  selectedFile: File;\n  fileSize: number;\n  uploadedPaymentFile: any;\n  isShowUploadButton = false;\n  previewDocument = false;\n\n  proofOfPayment = [\n    { id: 1, name: 'Schedule of Fees - Individual' },\n    { id: 2, name: 'Schedule of Fees - Multiple' },\n    { id: 3, name: 'Schedule of Fees - Special' },\n    { id: 4, name: 'Settlement of Delinquent Status' },\n    { id: 5, name: 'Settlement of Brand Penalties' },\n    { id: 6, name: 'Settlement of Company Penalties' }\n  ];\n  multimediaDTO: any = {};\n\n  constructor(\n    private apiService: ApiService,\n    private sanitizer: DomSanitizer,\n    private formBuilder: FormBuilder,\n    private route: ActivatedRoute,\n    private router: Router,\n    private fileStorageService: FileStorageService,\n    public dataStorage: DataStorageService,\n    public validateFieldService: ValidateFieldService,\n    private spinner: NgxSpinnerService,\n    private sweetAlertService: SweetAlertService,\n  ) { }\n\n  ngOnInit(): void {\n    this.currentUser = this.dataStorage.getUserAccount();\n\n    this.paymentTypeFromUrl = this.route.snapshot.paramMap.get('id').split('-')[0];\n    this.id = this.route.snapshot.paramMap.get('id').split('-')[1];\n\n    this.getPaymentList();\n    this.setFormValidator();\n    this.initData();\n  }\n\n  initData() {\n    if (this.paymentTypeFromUrl?.toLowerCase() === 'for_payment') {\n      this.isForPayment = true;\n    }\n    if (this.paymentTypeFromUrl?.toLowerCase() === 'for_approval') {\n      this.isForApproval = true;\n    }\n\n    if (this.route?.snapshot?.paramMap?.get('status')?.includes('multiple-')) {\n      this.isMultiple = true;\n      this.paymentTypeFromUrl = 'multiple';\n    }\n    if (this.route?.snapshot?.paramMap?.get('status')?.includes('special-')) {\n      this.isSpecial = true;\n      this.paymentTypeFromUrl = 'special';\n    }\n    if (this.route?.snapshot?.paramMap?.get('status')?.includes('delinquent-')) {\n      this.isDelinquent = true;\n      this.paymentTypeFromUrl = 'delinquent';\n    }\n\n    if (this.id !== 0 && this.currentUser.userRole.name === USER_ROLES.ROLE_ACCOUNTING) {\n      if (this.isForPayment || this.isSpecial || this.paymentTypeFromUrl?.toLowerCase() === 'unpaid' || this.isMultiple) {\n        this.getPaymentDetails();\n      } else {\n        this.viewPayment();\n      }\n      if (this.isMultiple) {\n        this.getMultipleApplicationList();\n      }\n    }\n  }\n\n  setFormValidator(): void {\n    this.paymentForm = this.formBuilder.group({\n      paymentType: ['', Validators.required],\n      referenceNo: [''],\n      amount: [''],\n      paymentDate: [''],\n      bankName: [''],\n      bankBranch: [''],\n      controlNo: [''],\n      referenceNumber: [''],\n      typeOfMaterial: [''],\n      length: [''],\n      baseRate: [''],\n      vat: [''],\n      total: [''],\n      remarks: [''],\n      applicantCompanyDetails: [''],\n      accumulatedAmountToBeSettled: [''],\n      clientCompanyDetails: [''],\n      discount: [''],\n      amountReceive: [''],\n      filedBirForm: [''],\n      withholdingTax: [0],\n      orNo: [''],\n      ccConfirmationCode: [''],\n      checkNo: ['']\n    });\n\n  }\n\n  approvePenalty() {\n    if (this.paymentMethod.amount < this.payment.amountDue) {\n      this.sweetAlertService.customErrorMessage(`Amount Received/Transferred is lower than Amount Due.`);\n    } else {\n      Swal.fire({\n        text: 'Are you sure you want to approve this Delinquent Company?',\n        icon: 'question',\n        showCancelButton: true,\n        confirmButtonColor: '#3085d6',\n        cancelButtonColor: '#d33',\n        confirmButtonText: 'Confirm'\n      }).then((result) => {\n        if (result.value) {\n          this.payment.paymentMethod = this.paymentMethod;\n          this.payment.amountReceive = Number(this.paymentMethod.amount);\n\n          this.apiService.save(`${ENDPOINTS.approveDelinquentCompany}`, this.payment).subscribe((res: any) => {\n            this.sweetAlertService.customSuccessMessage('Delinquent company approved successfully.');\n            this.router.navigate(['asc/page/accounting/payments/', 'delinquent-companies']);\n          }, err => {\n            if (!err.error.message) {\n              err.error.message = err.error.responseMessage;\n            }\n            this.sweetAlertService.error(err);\n          });\n        }\n      });\n    }\n  }\n\n  paymentTypevalidator() {\n    let a = this.paymentMethod;\n    let b = this.paymentMethod?.paymentType?.paymentDescription;\n    if (b === PAYMENT_MODE.GCASH || b === PAYMENT_MODE.CASH) {\n      if (a.referenceNo && a.paymentDate && a.amount\n        ? this.isPaymentTypeValid = true : this.isPaymentTypeValid = false) { }\n    } else if (b === PAYMENT_MODE.PAYMAYA) {\n      if (a.referenceNo && a.paymentDate && a.amount && a.ccConfirmationCode\n        ? this.isPaymentTypeValid = true : this.isPaymentTypeValid = false) { }\n    } else if (b === PAYMENT_MODE.BANK) {\n      if (a.bankName && a.paymentDate && a.amount && a.bankBranch\n        ? this.isPaymentTypeValid = true : this.isPaymentTypeValid = false) { }\n    } else if (b === PAYMENT_MODE.VOUCHER) {\n      if (a.controlNo ? this.isPaymentTypeValid = true : this.isPaymentTypeValid = false) { }\n    \n    } else if (b === PAYMENT_MODE.CHECK) {\n      if (a.bankName && a.checkNo && a.amount\n        ? this.isPaymentTypeValid = true : this.isPaymentTypeValid = false) { }\n    }\n  }\n\n  resetPaymentTypeValidation() {\n    this.isPaymentTypeValid = false\n    if (this.paymentMethod?.paymentType?.paymentDescription === PAYMENT_MODE.PROMISORRY_NOTE) {\n      this.isPaymentTypeValid = true;\n    }\n  }\n\n  getPaymentDetails() {\n    let endpoint = ENDPOINTS.paymentDetails;\n    if (this.isMultiple) {\n      if (this.isForPayment) {\n        endpoint = ENDPOINTS.multiplePaymentDetails;\n      } else {\n        endpoint = ENDPOINTS.paymentMultipleMonitoring + `?groupId=`;\n      }\n    }\n    if (this.isSpecial) {\n      if (this.isForPayment) {\n        endpoint = ENDPOINTS.specialPaymentDetails;\n      } else {\n        endpoint = ENDPOINTS.paymentSpecial;\n      }\n    }\n\n    this.apiService.findAll(endpoint + this.id).subscribe((res: any) => {\n      if (res.responseData) {\n        this.payment = res.responseData.data;\n        this.payment.filedBirForm = this.payment.filedBirForm ? this.payment.filedBirForm : false;\n        this.paymentMethod = this.payment?.paymentMethod ? this.payment.paymentMethod : new PaymentMethod();\n      } else if (res.data) {\n        this.payment = res.data[0];\n        this.payment.filedBirForm = this.payment.filedBirForm ? this.payment.filedBirForm : false;\n        this.paymentMethod = this.payment?.paymentMethod ? this.payment.paymentMethod : new PaymentMethod();\n      } else {\n        this.payment = res;\n        this.payment.filedBirForm = this.payment.filedBirForm ? this.payment.filedBirForm : false;\n        this.paymentMethod = this.payment?.paymentMethod ? this.payment.paymentMethod : new PaymentMethod();\n      }\n\n      switch (this.payment?.applicationForm?.refTypeOfMedium || this.payment?.applicationFormS2?.applicationForm?.refTypeOfMedium) {\n        case 'SINGLE MEDIA':\n          this.getApplicationSingleMedia();\n          break;\n        case 'MULTIMEDIA-MOVING':\n          this.getMultimediaMoving();\n          this.fetchMultimedia();\n          break;\n        case 'MULTIMEDIA-STATIC':\n          this.getMultimediaStatic();\n          this.fetchMultimedia();\n          break;\n        default:\n          break;\n      }\n\n      if (this.payment.paymentAttachmentReference) {\n        this.getAttachmentDocumentDisplay(this.payment.paymentAttachmentReference);\n      }\n      \n      // this.paymentTemp = this.payment;\n    });\n  }\n\n  getPaymentList() {\n    this.apiService.findAll(ENDPOINTS.paymentType).subscribe((res: any) => {\n      this.paymentTypeList = res.responseData.data;\n      if (this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT) {\n        const creditCardIndex = this.paymentTypeList\n          .findIndex((element) => element.paymentDescription === 'Credit Card');\n        this.paymentTypeList.splice(creditCardIndex, 1);\n      }\n    });\n  }\n\n  viewPayment() {\n    let endpoint = `${ENDPOINTS.payment}/application-form-id`;\n    if (this.isMultiple) {\n      if (this.isForPayment) {\n        endpoint = `${ENDPOINTS.paymentMultiple}/payment-multiple-details/multiple-application-id`;\n      } else if (this.isForApproval) {\n        endpoint = ENDPOINTS.paymentMultipleMonitoring;\n      }\n    } else {\n      if (this.paymentTypeFromUrl?.toLowerCase() === 'for_payment') {\n        if (this.currentUser.userRole.name === USER_ROLES.ROLE_ACCOUNTING) {\n          endpoint = `${ENDPOINTS.paymentDetailsAccounting}`;\n        } else {\n          endpoint = `${ENDPOINTS.paymentDetails}`;\n        }\n      }\n    }\n\n    // console.log('endpoint....' + endpoint);\n    this.apiService.findByParam(endpoint, this.id).subscribe((res: any) => {\n      if (res.responseData) {\n        this.payment = res.responseData.data;\n        this.payment.filedBirForm = this.payment.filedBirForm ? this.payment.filedBirForm : false;\n      } else {\n        this.payment = res;\n        this.payment.filedBirForm = this.payment.filedBirForm ? this.payment.filedBirForm : false;\n      }\n\n      this.paymentMethod = this.payment?.paymentMethod ? this.payment.paymentMethod : new PaymentMethod();\n      this.paymentMode = this.paymentMethod?.paymentType?.paymentDescription;\n      // this.paymentTemp = this.payment;\n\n      if (this.payment.paymentAttachmentReference) {\n        this.getAttachmentDocumentDisplay(this.payment.paymentAttachmentReference);\n      }\n\n      switch (this.payment?.applicationForm?.refTypeOfMedium || this.payment?.applicationFormS2?.applicationForm?.refTypeOfMedium) {\n        case 'SINGLE MEDIA':\n          this.getApplicationSingleMedia();\n          break;\n        case 'MULTIMEDIA-MOVING':\n          this.getMultimediaMoving();\n          this.fetchMultimedia();\n          break;\n        case 'MULTIMEDIA-STATIC':\n          this.getMultimediaStatic();\n          this.fetchMultimedia();\n          break;\n        default:\n          break;\n      }\n\n    });\n  }\n\n  getAttachmentDocumentDisplay(paymentAttachmentReference) {\n    this.apiService.findByParam(ENDPOINTS.attachmentDocument, `payment-attachment-reference/` + paymentAttachmentReference)\n      .subscribe((res1: any) => {\n        if (res1.responseData.data) {\n          this.attachmentDocuments = res1.responseData.data;\n          this.attachmentDocument = res1.responseData.data;\n          this.safeURL = this.sanitizer.bypassSecurityTrustResourceUrl(this.attachmentDocument.fileURL);\n          // console.log('view attachmentDocument: ', this.attachmentDocuments);\n        }\n      }, (err: any) => {\n        this.attachmentDocuments = [];\n      });\n  }\n\n  getMultipleApplicationList() {\n    this.apiService.findAll(ENDPOINTS.getMultipleAppFormsWithNoRejected + this.id).subscribe((res: any) => {\n      this.multipleApplicationList = res.responseData.data;\n\n      this.multipleApplicationList.forEach((multipleApplication) => {\n        switch (multipleApplication?.refTypeOfMedium || multipleApplication?.applicationFormS2?.applicationForm?.refTypeOfMedium) {\n          case 'SINGLE MEDIA':\n            this.getApplicationSingleMedia(multipleApplication?.appFormReference);\n            break;\n          case 'MULTIMEDIA-MOVING':\n            this.getMultimediaMoving(multipleApplication?.appFormReference);\n            break;\n          case 'MULTIMEDIA-STATIC':\n            this.getMultimediaStatic(multipleApplication?.appFormReference);\n            break;\n          default:\n            break;\n        }\n      });\n\n      this.dataSource = new MatTableDataSource<any>(this.multipleApplicationList);\n      this.dataSource.paginator = this.paginator;\n      if (this.multipleApplicationList.length) {\n        this.payment.multipleApplication = this.multipleApplicationList[0].multipleApplication;\n      }\n    }, (err: any) => {\n      this.sweetAlertService.error(err);\n    });\n  }\n\n  processPayment(remarks) {\n\n    const amountTransferred = Number.parseFloat(this.paymentMethod?.amount?.toString());\n    const toPay = this.payment.amountDue - this.payment.withholdingTax;\n\n    if (this.paymentMethod.paymentType.paymentDescription === 'Voucher' ||\n      this.paymentMethod.paymentType.paymentDescription === 'Promisorry Note' ||\n      (this.paymentMethod.paymentType.paymentDescription !== 'Voucher'\n        && this.paymentMethod.paymentType.paymentDescription !== 'Promisorry Note'\n        && amountTransferred >= toPay)) {\n      Swal.fire({\n        text: 'Are you sure you want to process this PAYMENT?',\n        icon: 'question',\n        showCancelButton: true,\n        confirmButtonColor: '#3085d6',\n        cancelButtonColor: '#d33',\n        confirmButtonText: 'Confirm'\n      }).then((result) => {\n        if (result.value) {\n          this.payment.paymentStatus = PAYMENT_STATUS.PAID;\n          this.payment.paymentDate = new Date();\n          this.payment.paymentMethod = this.paymentMethod;\n          this.payment.amountReceive = this.paymentMethod.amount;\n          // this.payment.paymentAttachmentReference = this.attachmentDocument.paymentAttachmentReference;\n\n          let endpoint = ENDPOINTS.accountingPaymentApprove;\n          if (this.isMultiple) {\n            endpoint = ENDPOINTS.accountingMultiplePaymentApprove;\n          } else if (this.isSpecial) {\n            endpoint = ENDPOINTS.accountingSpecialPaymentApprove;\n          }\n          this.apiService.save(endpoint, this.payment).subscribe((res: any) => {\n            this.sweetAlertService.customSuccessMessage('Payment successfully processed.');\n            // console.log('SAVED DATA: ', res);\n            this.router.navigate(['asc/page/accounting/payments/', `schedule-of-fees-${this.paymentTypeFromUrl}`]);\n          });\n        }\n      });\n    } else {\n      this.sweetAlertService.customErrorMessage(`Amount Received/Transferred is lower than Amount Due.`);\n    }\n  }\n\n  comparePaymentType(value: any, selected: any): boolean {\n    if (value && selected) {\n      return value.paymentDescription === selected.paymentDescription;\n    }\n  }\n\n  selectProofOfPayment(res) {\n    this.selectedProofOfPayment = res;\n  }\n\n  // recompute() {\n  //   console.log('trigerring recompute... ', this.payment);\n\n  //   this.paymentTemp = this.payment;\n  //   let endpoint = ENDPOINTS.accountingRecompute;\n  //   if (this.isMultiple) {\n  //     endpoint = ENDPOINTS.accountingRecomputeMultiple;\n  //   } else if (this.isSpecial) {\n  //     endpoint = ENDPOINTS.accountingSpecialPaymentRecompute;\n  //   }\n  //   console.log('paymentMethod - ', this.paymentMethod);\n  //   this.payment.paymentMethod = this.paymentMethod;\n  //   this.payment.paymentDate = new Date();\n  //   this.payment.filename = this.attachmentDocument.filename;\n  //   this.payment.amountReceive = this.paymentMethod.amount;\n  //   this.payment.paymentAttachmentReference = this.attachmentDocument.paymentAttachmentReference;\n\n  //   this.apiService.save(endpoint, this.payment).subscribe((res: any) => {\n  //     this.payment = res;\n  //     this.payment.basicRate = this.paymentTemp.basicRate;\n  //     this.payment.vat = this.paymentTemp.vat;\n  //     this.payment.amountDue = this.paymentTemp.amountDue;\n  //     console.log('payment... ', this.payment);\n  //   }, (err: any) => {\n  //   });\n  // }\n\n  computeWithholding() {\n    this.payment.withholdingTax = this.payment?.filedBirForm ? this.payment.basicRate * 0.02 : 0;\n  }\n  \n  getAmountDue(): number {\n    let amountDue = Number((Math.round(this.payment?.amountDue * 100) / 100).toFixed(2));\n    let withholding = Number((Math.round(this.payment?.withholdingTax * 100) / 100).toFixed(2));\n    let result = amountDue - withholding;\n    return result ? result : 0;\n  }\n\n  validatePaymentStatus(): boolean {\n    if (this.payment?.paymentStatus !== PAYMENT_STATUS.PAID && this.payment?.paymentStatus !== PAYMENT_STATUS.UNPAID) {\n      return true;\n    } \n    return false;\n  }\n  \n  comparePaymentMethod(value: any, selected: any): boolean {\n    if (value && selected) {\n      return value.paymentDescription === selected.paymentDescription;\n    }\n  }\n\n  selectFile(event) {\n    this.isShowUploadButton = false;\n\n    if (event.target.files[0]) {\n      this.fileSize = event.target.files[0].size;\n\n      if (this.fileSize > 15000000) {\n        this.sweetAlertService.customErrorMessage(`Attachments' total file size should not exceed 15MB.`);\n        event.target.value = '';\n        return;\n\n      } else {\n        this.isShowUploadButton = true;\n        const fileURL = URL.createObjectURL(event.target.files[0]);\n        this.previewDocument = true;\n\n        this.safeURL = this.sanitizer.bypassSecurityTrustResourceUrl(fileURL);\n\n        const reader = new FileReader();\n        const [file] = event.target.files;\n\n        reader.readAsDataURL(file);\n        reader.onload = () => {\n        };\n\n        this.selectedFile = event.target.files[0];\n      }\n    }\n  }\n\n  viewDocument() {\n    if (this.uploadedPaymentFile) {\n      window.open(this.uploadedPaymentFile.fileURL);\n    } else {\n      window.open(this.attachmentDocument.fileURL);\n    }\n  }\n\n  uploadProofOfPayment() {\n    Swal.fire({\n      text: 'Are you sure you want to submit this as proof of payment?',\n      icon: 'question',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Confirm'\n    }).then((result) => {\n      if (result.value) {\n        this.spinner.show();\n        let params = '';\n        params = '?&attachmentType=' + ATTACHMENT_TYPE.PAYMENT + '&submissionType=' + SUBMISSION_TYPE.ORIGINAL;\n        this.fileStorageService.pushFileToStorage(ENDPOINTS.attachmentDocument, this.selectedFile, params)\n          .subscribe((res: any) => {\n\n            this.uploadedPaymentFile = res.responseData.data;\n            this.payment.paymentAttachmentReference = this.uploadedPaymentFile.paymentAttachmentReference;\n            this.addToAttachmentDocuments(this.uploadedPaymentFile);\n\n            this.hideSpinner();\n            this.sweetAlertService.customSuccessMessage('Attachment successfully uploaded.');\n            this.selectedFile = null;\n\n            this.getAttachmentDocument();\n\n          }, (err: any) => {\n            this.hideSpinner();\n            this.sweetAlertService.error(err);\n          }, () => {\n            // actions after subscription\n          });\n      } else {\n        this.selectedFile = null;\n      }\n    });\n  }\n\n  addToAttachmentDocuments(obj: any) {\n    this.attachmentDocument.paymentAttachmentReference = obj.paymentAttachmentReference;\n    this.attachmentDocument.id = obj.id;\n    this.attachmentDocument.originalFilename = obj.originalFilename;\n    this.attachmentDocument.filename = obj.filename;\n    this.attachmentDocument.fileExtension = obj.fileExtension;\n    this.attachmentDocument.fileURL = obj.fileURL;\n    this.attachmentDocument.attachmentType = obj.attachmentType;\n    this.attachmentDocument.documentFormat = obj.documentFormat;\n  }\n\n  hideSpinner() {\n    setTimeout(() => {\n      this.spinner.hide();\n    }, 1);\n  }\n\n  getAttachmentDocument() {\n    this.spinner.show();\n\n    this.apiService.findByParam(ENDPOINTS.paymentAttachmentReference,\n      this.attachmentDocument.paymentAttachmentReference).subscribe(\n        (res: any) => {\n          if (res) {\n            this.attachmentDocument = res.responseData.data;\n          }\n          this.hideSpinner();\n        }, (err: any) => {\n          this.hideSpinner();\n          console.error(err);\n        });\n  }\n\n  getAttachmentDocuments() {\n    this.apiService.findByParam(ENDPOINTS.attachmentDocument, `brand-penalty-attachment-reference/${this.payment.paymentAttachmentReference}`).subscribe((res: any) => {\n      if (res) {\n        this.attachmentDocument = res;\n      }\n      this.previewDocument = true;\n      this.safeURL = this.sanitizer.bypassSecurityTrustResourceUrl(this.attachmentDocument.fileURL);\n    });\n  }\n\n  navigateToList() {\n    if (this.payment.paymentStatus === PAYMENT_STATUS.PAID || this.payment.paymentStatus === PAYMENT_STATUS.UNPAID) {\n      if (this.paymentTypeFromUrl) {\n        this.router.navigate(['asc/page/accounting/payments/', `schedule-of-fees-${this.paymentTypeFromUrl}`]);\n      } else {\n        this.router.navigate(['asc/page/accounting/payments/']);\n      }\n    } else {\n      Swal.fire({\n        text: 'Are you sure you want to go back to payment list?',\n        icon: 'question',\n        showCancelButton: true,\n        confirmButtonColor: '#3085d6',\n        cancelButtonColor: '#d33',\n        confirmButtonText: 'Confirm'\n      }).then((result) => {\n        if (result.value) {\n          if (this.paymentTypeFromUrl) {\n            this.router.navigate(['asc/page/accounting/payments/', `schedule-of-fees-${this.paymentTypeFromUrl}`]);\n          } else {\n            this.router.navigate(['asc/page/accounting/payments/']);\n          }\n        }\n      });\n    }\n  }\n\n  getApplicationSingleMedia(appFormReference = this.payment?.applicationForm?.appFormReference) {\n    if (this.payment?.applicationFormS2?.applicationForm?.refTypeOfMedium) {\n      appFormReference = this.payment?.applicationFormS2?.applicationForm?.appFormReference;\n    }\n    this.apiService.findByParam(ENDPOINTS.applicationSingleMedia,\n      `app-form-reference/${appFormReference}`).subscribe(\n        (res: any) => {\n          if (res.responseData.data.length > 0) {\n            this.applicationSingleMedia = res.responseData.data[0];\n\n            this.typeOfMediumDisplay = `${this.applicationSingleMedia?.mediumExecution?.typeOfMedium?.description} (${this.applicationSingleMedia?.sizeLength})`;\n            if (this.isMultiple) {\n              this.multipleApplicationList.forEach((element, index) => {\n                if (element.appFormReference === appFormReference) {\n                  this.multipleApplicationList[index] = {\n                    ...this.multipleApplicationList[index],\n                    typeOfMediumDisplay: this.typeOfMediumDisplay\n                  };\n                }\n              });\n              this.dataSource = new MatTableDataSource<any>(this.multipleApplicationList);\n              this.dataSource.paginator = this.paginator;\n            }\n\n          } else {\n            this.applicationSingleMedia = new ApplicationSingleMedia();\n            this.typeOfMediumDisplay = '';\n          }\n        }, (err: any) => {\n          this.applicationSingleMedia = new ApplicationSingleMedia();\n          this.typeOfMediumDisplay = '';\n        });\n  }\n\n  getMultimediaStatic(appFormReference = this.payment?.applicationForm?.appFormReference) {\n    this.apiService.findByParam(ENDPOINTS.applicationMultimedia,\n      `app-form-reference/${appFormReference}`).subscribe(\n        (res: any) => {\n          if (res.responseData.data.length > 0) {\n            const multimediaList = new Set(res.responseData.data.map(mappedList => `${mappedList?.typeOfMedium?.description} (${mappedList?.multimediaSizeLength})`));\n\n            this.typeOfMediumDisplay = '';\n            let mediaCtrl = 1;\n            for (const media of multimediaList) {\n              if (mediaCtrl !== multimediaList.size) {\n                this.typeOfMediumDisplay += `${media}, `;\n                mediaCtrl++;\n              } else {\n                this.typeOfMediumDisplay += media;\n              }\n            }\n\n            if (this.isMultiple) {\n              this.multipleApplicationList.forEach((element, index) => {\n                if (element.appFormReference === appFormReference) {\n                  this.multipleApplicationList[index] = {\n                    ...this.multipleApplicationList[index],\n                    typeOfMediumDisplay: this.typeOfMediumDisplay\n                  };\n                }\n              });\n              this.dataSource = new MatTableDataSource<any>(this.multipleApplicationList);\n              this.dataSource.paginator = this.paginator;\n            }\n          } else {\n            this.typeOfMediumDisplay = '';\n          }\n        }, (err: any) => {\n          this.typeOfMediumDisplay = '';\n        });\n  }\n\n  getMultimediaMoving(appFormReference = this.payment?.applicationForm?.appFormReference) {\n    this.apiService.findByParam(ENDPOINTS.applicationMultimedia,\n      `app-form-reference/${appFormReference}`).subscribe(\n        (res: any) => {\n          if (res.responseData.data.length > 0) {\n            const multimediaList = new Set(res.responseData.data.map(mappedList => `${mappedList?.typeOfMedium?.description} (${mappedList?.multimediaSizeLength})`));\n\n            this.typeOfMediumDisplay = '';\n            let mediaCtrl = 1;\n            for (const media of multimediaList) {\n              if (mediaCtrl !== multimediaList.size) {\n                this.typeOfMediumDisplay += `${media}, `;\n                mediaCtrl++;\n              } else {\n                this.typeOfMediumDisplay += media;\n              }\n            }\n\n            if (this.isMultiple) {\n              this.multipleApplicationList.forEach((element, index) => {\n                if (element.appFormReference === appFormReference) {\n                  this.multipleApplicationList[index] = {\n                    ...this.multipleApplicationList[index],\n                    typeOfMediumDisplay: this.typeOfMediumDisplay\n                  };\n                }\n              });\n              this.dataSource = new MatTableDataSource<any>(this.multipleApplicationList);\n              this.dataSource.paginator = this.paginator;\n            }\n          } else {\n            this.typeOfMediumDisplay = '';\n          }\n        }, (err: any) => {\n          this.typeOfMediumDisplay = '';\n        });\n  }\n\n  rejectPayment() {\n    Swal.fire({\n      text: 'Are you sure you want to reject this roof of payment?',\n      icon: 'question',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Confirm'\n    }).then((result) => {\n      if (result.value) {\n        this.spinner.show();\n\n        let rejectEndpoint = ENDPOINTS.accountingReject;\n        if (this.isMultiple) {\n          rejectEndpoint = ENDPOINTS.accountingRejectMultiple;\n        } else if (this.isSpecial) {\n          rejectEndpoint = ENDPOINTS.accountingRejectSpecial;\n        }\n\n        this.apiService.save(rejectEndpoint, this.payment)\n          .subscribe((res: any) => {\n            this.hideSpinner();\n            this.sweetAlertService.customSuccessMessage('Successfully rejected.');\n\n            if (this.paymentTypeFromUrl) {\n              this.router.navigate(['asc/page/accounting/payments/', `schedule-of-fees-${this.paymentTypeFromUrl}`]);\n            } else {\n              this.router.navigate(['asc/page/accounting/payments/']);\n            }\n          }, (err: any) => {\n            this.hideSpinner();\n            this.sweetAlertService.error(err);\n          }, () => {\n            // actions after subscription\n          });\n      }\n    });\n  }\n\n  fetchMultimedia(): void{\n    let typeofMedium = this.payment?.applicationForm.refTypeOfMedium === TYPE_OF_MEDIUM.MULTIMEDIA_MOVING ? 'moving' : 'static';\n    let endpoint = ENDPOINTS.applicationMultimedia + '-' + typeofMedium + '/app-form-reference'\n    this.apiService.findByParam(endpoint, this.payment?.applicationForm.appFormReference).subscribe(\n      multimedia => {\n        if (multimedia) this.multimediaDTO = multimedia.responseData.data;\n      }\n    );\n  }\n}\n","<form>\n  <div class=\"container-fluid\">\n    <div class=\"row\" *ngIf=\"currentUser?.userRole.name=='ROLE_ACCOUNTING'\">\n      <div class=\"col-md-12 title\">\n        <mat-label>\n          <mat-icon>payment</mat-icon> PAYMENT\n        </mat-label>\n\n        <button class=\"button-right button-red\" mat-raised-button (click)=\"navigateToList()\">\n          <mat-icon>list</mat-icon> VIEW LIST OF PAYMENT\n        </button>\n      </div>\n    </div>\n    <div class=\"row mt-3\">\n      <mat-accordion class=\"headers-align\">\n        <mat-expansion-panel>\n          <mat-expansion-panel-header>\n            <mat-panel-title>\n              <i class=\"material-icons\">label_important</i> &nbsp;Preview\n            </mat-panel-title>\n            <mat-panel-description>\n              Application Details\n              <i class=\"material-icons\">visibility</i>\n            </mat-panel-description>\n          </mat-expansion-panel-header>\n          <br>\n          <app-add-payment-preview-application [previewS1Application]=\"payment?.applicationForm\" [multimediaDTO]=\"multimediaDTO\"></app-add-payment-preview-application>\n        </mat-expansion-panel>\n      </mat-accordion>\n    </div>\n    <hr>\n\n    <form [formGroup]=\"paymentForm\">\n      <div class=\"row fields\">\n        <div class=\"col-md-12 title\" *ngIf=\"currentUser?.userRole?.name!='ROLE_ACCOUNTING'\">\n          <mat-label>\n            <mat-icon>payment</mat-icon>\n            {{payment?.paymentStatus!='PAID'&&safeURL!=undefined ? 'FOR APPROVAL' : payment?.paymentStatus}}\n          </mat-label>\n        </div>\n\n        <!--///////////////////////// ACCOUNTING /////////////////////////////-->\n        <div class=\"row\" *ngIf=\"currentUser.userRole.name=='ROLE_ACCOUNTING'\">\n          <mat-form-field class=\"col-md-6\" appearance=\"outline\">\n            <mat-label>Type Of Payment</mat-label>\n            <input matInput value=\"Schedule of Fees\" readonly>\n          </mat-form-field>\n        </div>\n\n        <div class=\"col-md-6\" appearance=\"outline\">\n          <div class=\"col-md-12\" appearance=\"outline\" *ngIf=\"isForPayment || paymentTypeFromUrl === 'paid' || safeURL \">\n            <mat-label>Filename: </mat-label>\n            <br>\n            <input matInput [value]=\"attachmentDocument.originalFilename\" disabled\n              *ngIf=\"attachmentDocument.originalFilename\">\n            <input class=\"file-upload\" type=\"file\"\n              *ngIf=\"!attachmentDocument.originalFilename && this.paymentTypeFromUrl !== 'paid'\" accept=\".pdf\"\n              (change)=\"selectFile($event)\">\n            <br><br>\n          </div>\n\n          <div class=\"col-md-12\" appearance=\"outline\"\n            *ngIf=\"(isForPayment || this.paymentTypeFromUrl === 'paid' || safeURL) && (attachmentDocument?.paymentAttachmentReference || isShowUploadButton)\">\n\n            <button mat-raised-button class=\"button-red button-right\" (click)=\"viewDocument()\"\n              *ngIf=\"attachmentDocument?.paymentAttachmentReference\">\n              <mat-icon>open_in_new</mat-icon> VIEW DOCUMENT\n            </button>\n\n            &nbsp; &nbsp;\n\n            <button mat-raised-button class=\"button-red button-right\" (click)=\"uploadProofOfPayment()\"\n              [disabled]=\"!safeURL||!isShowUploadButton\"\n              *ngIf=\"isShowUploadButton && !attachmentDocument.originalFilename\">\n              <mat-icon>upload</mat-icon> UPLOAD\n            </button>\n            <br><br>\n          </div>\n          <div class=\"file-upload\" style=\"border: 1px solid red\" *ngIf=\"safeURL\"\n            [hidden]=\"payment?.paymentStatus === 'PAID' || payment?.paymentStatus === 'UNPAID'\">\n            <object [data]=\"safeURL\" type=\"application/pdf\" width=\"100%\" height=\"500\">\n              <iframe [src]=\"safeURL\" width=\"100%\" height=\"500\">\n                <p>This browser does not support PDF!</p>\n              </iframe>\n            </object>\n          </div>\n          <br>\n          <div class=\"row\">\n            <mat-form-field class=\"col-md-12\" appearance=\"outline\" [hidden]=\"isMultiple\">\n              <mat-label>Reference Number</mat-label>\n              <input matInput\n                [value]=\"payment?.applicationForm?.referenceCode || payment?.applicationFormS2?.applicationForm?.referenceCode\"\n                readonly>\n            </mat-form-field>\n\n            <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n              <mat-label>Advertiser</mat-label>\n              <input matInput name=\"companyName\" readonly\n                [value]=\"payment?.applicationForm?.company?.companyName || payment?.multipleApplication?.company?.companyName || payment?.applicationFormS2?.applicationForm?.company?.companyName\">\n            </mat-form-field>\n\n            <mat-form-field class=\"col-md-12\" appearance=\"outline\" [hidden]=\"isMultiple\">\n              <mat-label>Ad Title - Medium (Length)</mat-label>\n              <textarea matInput name=\"refTypeOfMedium\"\n                [value]=\"payment?.applicationForm?.adTitle ? payment?.applicationForm?.adTitle + ' - ' + typeOfMediumDisplay : typeOfMediumDisplay || payment?.applicationFormS2?.applicationForm?.adTitle + ' - ' + typeOfMediumDisplay || payment?.applicationFormS2?.applicationForm?.adTitle + ' - ' + typeOfMediumDisplay\"\n                readonly></textarea>\n            </mat-form-field>\n\n            <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n              <mat-label>Vatable Sales</mat-label>\n              <input class=\"numbers-input\" matInput [value]=\"payment?.basicRate | number : '1.2-2'\" readonly\n                step=\"0.01\">\n            </mat-form-field>\n\n            <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n              <mat-label>VAT</mat-label>\n              <input class=\"numbers-input\" matInput [value]=\"payment?.vat | number : '1.2-2'\" readonly>\n            </mat-form-field>\n\n            <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n              <mat-label>Total Sales (VAT Inclusive)</mat-label>\n              <input class=\"numbers-input total\" matInput name=\"amount\" [value]=\"payment?.amountDue | number : '1.2-2'\"\n                readonly>\n            </mat-form-field>\n\n          </div>\n        </div>\n\n        <div class=\"col-md-6\" [hidden]=\"payment?.paymentStatus!='PAID'&&currentUser?.userRole?.name!='ROLE_ACCOUNTING'\">\n\n          <div class=\"row\">\n            <div *ngIf=\"isMultiple\">\n              <table mat-table [dataSource]=\"dataSource\" matSort>\n                <ng-container matColumnDef=\"referenceCode\">\n                  <th mat-header-cell *matHeaderCellDef> Reference Code </th>\n                  <td mat-cell *matCellDef=\"let element; let i = index\">{{element?.referenceCode}}</td>\n                </ng-container>\n                <ng-container matColumnDef=\"adTitle\">\n                  <th mat-header-cell *matHeaderCellDef> Ad Title </th>\n                  <td mat-cell *matCellDef=\"let element; let i = index\">{{element?.adTitle}}</td>\n                </ng-container>\n                <ng-container matColumnDef=\"mediumAndLength\">\n                  <th mat-header-cell *matHeaderCellDef> Medium And Length</th>\n                  <td mat-cell *matCellDef=\"let element; let i = index\">{{ element?.typeOfMediumDisplay }}</td>\n                </ng-container>\n                <ng-container matColumnDef=\"amount\">\n                  <th mat-header-cell *matHeaderCellDef> Amount</th>\n                  <td mat-cell *matCellDef=\"let element; let i = index\">{{element?.amount | number : '1.2-2'}}</td>\n                </ng-container>\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n              </table>\n              <div class=\"no-record\" [hidden]=\"dataSource && dataSource?.data?.length > 0\">\n                No record found.\n              </div>\n              <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons></mat-paginator>\n            </div>\n\n            <span>\n              <mat-checkbox class=\"example-margin\" [(ngModel)]=\"payment.filedBirForm\" formControlName=\"filedBirForm\"\n                (ngModelChange)=\"computeWithholding()\"\n                >\n                BIR Form 2307</mat-checkbox>\n            </span>\n            <!-- <b [hidden]=\"payment?.paymentStatus !== 'PAID' || !payment.filedBirForm\"><i class=\"material-icons\">check</i>\n              BIR Form 2307</b>\n            <b [hidden]=\"payment?.paymentStatus !== 'PAID' || payment.filedBirForm\"><i class=\"material-icons\">close</i>\n              BIR Form 2307</b> -->\n            <br><br>\n            <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n              <mat-label>Withholding Tax</mat-label>\n              <input matInput class=\"numbers-input\" name=\"vat\" [value]=\"payment?.withholdingTax | number : '1.2-2'\"\n                formControlName=\"withholdingTax\" readonly>\n            </mat-form-field>\n\n            <!-- <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n              <mat-label>Official Receipt No</mat-label>\n              <input matInput name=\"orNo\" [(ngModel)]=\"payment.officialReceiptNo\" [readonly]=\"!isForPayment\"\n                formControlName=\"orNo\" (keydown)=\"validateFieldService.numbersOnly($event)\">\n            </mat-form-field> -->\n\n            <!-- <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n              <mat-label>Amount Receive</mat-label>\n              <input matInput name=\"amountReceive\" type=\"number\" [(ngModel)]=\"payment.amountReceive\" formControlName=\"amountReceive\"\n              [readonly]=\"currentUser.userRole.name!='ROLE_ACCOUNTING'||payment?.paymentStatus=='PAID'\">\n            </mat-form-field> -->\n\n            <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n              <mat-label>Amount Due</mat-label>\n              <input class=\"numbers-input total\" matInput name=\"amount\"\n                [value]=\"getAmountDue() | number : '1.2-2'\" readonly>\n            </mat-form-field>\n\n            <div *ngIf=\"isMultiple\"><br>\n              <hr><br>\n            </div>\n\n            <!-- <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n              <mat-label>Payment Mode</mat-label>\n              <input matInput [value]=\"payment?.paymentMethod?.paymentType?.paymentDescription\" readonly> -->\n            <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n              <mat-label>Payment Mode</mat-label>\n              <mat-select class=\"col-md-4\" [(ngModel)]=\"paymentMethod.paymentType\" name=\"paymentType\"\n                [compareWith]=\"comparePaymentMethod\" formControlName=\"paymentType\" [disabled]=\"payment?.paymentStatus=='PAID' || payment?.paymentStatus=='UNPAID'\"\n                (selectionChange)=\"resetPaymentTypeValidation()\">\n                <mat-option *ngFor=\"let i of paymentTypeList\" [value]=\"i\" name=\"paymentType\">\n                  {{ i?.paymentDescription | uppercase }}\n                </mat-option>\n              </mat-select>\n            </mat-form-field>\n\n            <div *ngIf=\"paymentMethod?.paymentType?.paymentDescription ==='Cash' || paymentMethod?.paymentType?.paymentDescription ==='GCash' ||\n              paymentMethod?.paymentType?.paymentDescription ==='PayMaya'\">\n\n\n              <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n                <mat-label>Reference Number <span class=\"required-field\">\n                    <mat-icon>notification_important</mat-icon>\n                  </span></mat-label>\n                <input matInput [(ngModel)]=\"paymentMethod.referenceNo\" name=\"referenceNo\" formControlName=\"referenceNo\"\n                  [readonly]=\"currentUser.userRole.name!='ROLE_ACCOUNTING'||payment?.paymentStatus=='PAID'\"\n                  (blur)=\"paymentTypevalidator()\" (keyup)=\"paymentTypevalidator()\">\n              </mat-form-field>\n              <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n                <mat-label>Fund Transfer Date <span class=\"required-field\">\n                    <mat-icon>notification_important</mat-icon>\n                  </span></mat-label>\n                <input matInput placeholder=\"Date\" [matDatepicker]=\"paymentDate\" [min]=\"currentDate\"\n                  [(ngModel)]=\"paymentMethod.paymentDate\" name=\"paymentDate\" formControlName=\"paymentDate\"\n                  [readonly]=\"currentUser?.userRole.name!='ROLE_ACCOUNTING'||payment?.paymentStatus=='PAID'\"\n                  (dateChange)=\"paymentTypevalidator()\" (keyup)=\"paymentTypevalidator()\">\n                <mat-datepicker-toggle matSuffix [for]=\"paymentDate\" *ngIf=\"payment?.paymentStatus!=='PAID'\">\n                </mat-datepicker-toggle>\n                <mat-datepicker color=\"warn\" #paymentDate></mat-datepicker>\n              </mat-form-field>\n              <mat-form-field class=\"col-md-12\" appearance=\"outline\"\n                *ngIf=\"paymentMethod?.paymentType?.paymentDescription ==='PayMaya'\">\n                <mat-label>Confirmation Code <span class=\"required-field\">\n                    <mat-icon>notification_important</mat-icon>\n                  </span></mat-label>\n                <input matInput [(ngModel)]=\"paymentMethod.ccConfirmationCode\" name=\"ccConfirmationCode\"\n                  formControlName=\"ccConfirmationCode\"\n                  [readonly]=\"currentUser.userRole.name!='ROLE_ACCOUNTING'||payment?.paymentStatus=='PAID'\">\n              </mat-form-field>\n              <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n                <mat-label>Amount Transferred <span class=\"required-field\">\n                    <mat-icon>notification_important</mat-icon>\n                  </span></mat-label>\n                <input matInput [(ngModel)]=\"paymentMethod.amount\" name=\"amount\" formControlName=\"amount\"\n                  (keydown)=\"validateFieldService.numbersOnly($event)\" class=\"numbers-input\"\n                  [hidden]=\"currentUser.userRole.name!='ROLE_ACCOUNTING'||payment?.paymentStatus=='PAID'\"\n                  (blur)=\"paymentTypevalidator()\" (keyup)=\"paymentTypevalidator()\">\n\n                <input class=\"numbers-input total\" matInput name=\"amount\"\n                  [value]=\"paymentMethod?.amount | number : '1.2-2'\" readonly\n                  *ngIf=\"currentUser.userRole.name!='ROLE_ACCOUNTING'||payment?.paymentStatus=='PAID'\">\n              </mat-form-field>\n            </div>\n\n\n            <div class=\"row\" *ngIf=\"paymentMethod?.paymentType?.paymentDescription ==='Voucher'\">\n              <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n                <mat-label>Control Number <span class=\"required-field\">\n                    <mat-icon>notification_important</mat-icon>\n                  </span></mat-label>\n                <input matInput [(ngModel)]=\"paymentMethod.controlNo\" name=\"controlNo\" formControlName=\"controlNo\"\n                  [readonly]=\"currentUser.userRole.name!='ROLE_ACCOUNTING'||payment?.paymentStatus=='PAID'\"\n                  (blur)=\"paymentTypevalidator()\" (keyup)=\"paymentTypevalidator()\">\n              </mat-form-field>\n              <!-- <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n                <mat-label>Amount</mat-label>\n                <input matInput [(ngModel)]=\"paymentMethod.amount\" name=\"amount\" formControlName=\"amount\"\n                  (keydown)=\"validateFieldService.numbersOnly($event)\" class=\"numbers-input\"\n                  [readonly]=\"currentUser.userRole.name!='ROLE_ACCOUNTING'||payment?.paymentStatus=='PAID'\">\n              </mat-form-field> -->\n            </div>\n\n            <div class=\"row\"\n              *ngIf=\"paymentMethod?.paymentType?.paymentDescription ==='Bank' ||\n            paymentMethod?.paymentType?.paymentDescription ==='Credit Card' || paymentMethod?.paymentType?.paymentDescription ==='Check'\">\n\n              <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n                <mat-label>Bank Name <span class=\"required-field\">\n                    <mat-icon>notification_important</mat-icon>\n                  </span></mat-label>\n                <input matInput [(ngModel)]=\"paymentMethod.bankName\" name=\"bankName\" formControlName=\"bankName\"\n                  [readonly]=\"currentUser.userRole.name!='ROLE_ACCOUNTING'||payment?.paymentStatus=='PAID'\"\n                  (blur)=\"paymentTypevalidator()\" (keyup)=\"paymentTypevalidator()\">\n              </mat-form-field>\n              <mat-form-field class=\"col-md-12\" appearance=\"outline\"\n                *ngIf=\"paymentMethod?.paymentType?.paymentDescription ==='Credit Card'\">\n                <mat-label>Confirmation Code <span class=\"required-field\">\n                    <mat-icon>notification_important</mat-icon>\n                  </span></mat-label>\n                <input matInput [(ngModel)]=\"paymentMethod.ccConfirmationCode\" name=\"ccConfirmationCode\"\n                  formControlName=\"ccConfirmationCode\"\n                  [readonly]=\"currentUser.userRole.name!='ROLE_ACCOUNTING'||payment?.paymentStatus=='PAID'\"\n                  (blur)=\"paymentTypevalidator()\" (keyup)=\"paymentTypevalidator()\">\n              </mat-form-field>\n              <mat-form-field class=\"col-md-12\" appearance=\"outline\"\n                *ngIf=\"paymentMethod?.paymentType?.paymentDescription ==='Check'\">\n                <mat-label>Check Number <span class=\"required-field\">\n                    <mat-icon>notification_important</mat-icon>\n                  </span></mat-label>\n                <input matInput [(ngModel)]=\"paymentMethod.checkNo\" name=\"checkNo\" formControlName=\"checkNo\"\n                  [readonly]=\"currentUser.userRole.name!='ROLE_ACCOUNTING'||payment?.paymentStatus=='PAID'\"\n                  (blur)=\"paymentTypevalidator()\" (keyup)=\"paymentTypevalidator()\">\n              </mat-form-field>\n              <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n                <mat-label>Amount Transferred <span class=\"required-field\">\n                    <mat-icon>notification_important</mat-icon>\n                  </span></mat-label>\n                <input matInput [(ngModel)]=\"paymentMethod.amount\" name=\"amount\" class=\"numbers-input\"\n                  formControlName=\"amount\"\n                  [hidden]=\"currentUser.userRole.name!='ROLE_ACCOUNTING'||payment?.paymentStatus=='PAID'\"\n                  (blur)=\"paymentTypevalidator()\" (keyup)=\"paymentTypevalidator()\">\n\n                <input class=\"numbers-input total\" matInput name=\"amount\"\n                  [value]=\"paymentMethod?.amount | number : '1.2-2'\" readonly\n                  *ngIf=\"currentUser.userRole.name!='ROLE_ACCOUNTING'||payment?.paymentStatus=='PAID'\">\n              </mat-form-field>\n              <mat-form-field class=\"col-md-12\" appearance=\"outline\"\n                *ngIf=\"paymentMethod?.paymentType?.paymentDescription ==='Bank'\">\n                <mat-label>Branch <span class=\"required-field\">\n                    <mat-icon>notification_important</mat-icon>\n                  </span></mat-label>\n                <input matInput [(ngModel)]=\"paymentMethod.bankBranch\" name=\"withholdingTax\"\n                  formControlName=\"bankBranch\"\n                  [readonly]=\"currentUser.userRole.name!='ROLE_ACCOUNTING'||payment?.paymentStatus=='PAID'\"\n                  (blur)=\"paymentTypevalidator()\" (keyup)=\"paymentTypevalidator()\">\n              </mat-form-field>\n              <mat-form-field class=\"col-md-12\" appearance=\"outline\"\n                *ngIf=\"paymentMethod?.paymentType?.paymentDescription ==='Bank'\">\n                <mat-label>Deposited Date <span class=\"required-field\">\n                    <mat-icon>notification_important</mat-icon>\n                  </span></mat-label>\n                <input matInput placeholder=\"Date\" [matDatepicker]=\"paymentDate\" [(ngModel)]=\"paymentMethod.paymentDate\"\n                  name=\"paymentDate\" formControlName=\"paymentDate\" (dateChange)=\"paymentTypevalidator()\"\n                  (keyup)=\"paymentTypevalidator()\">\n                <mat-datepicker-toggle matSuffix [for]=\"paymentDate\"></mat-datepicker-toggle>\n                <mat-datepicker color=\"warn\" #paymentDate disabled=\"false\"></mat-datepicker>\n              </mat-form-field>\n            </div>\n\n\n            <!--  <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n              <mat-label>Discount</mat-label>\n              <input matInput name=\"discount\" type=\"number\" [(ngModel)]=\"payment.discount\" formControlName=\"discount\"\n              [readonly]=\"currentUser.userRole.name!='ROLE_ACCOUNTING'||payment?.paymentStatus=='PAID'\">\n            </mat-form-field> -->\n\n\n            <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n              <mat-label>REMARKS</mat-label>\n              <!-- <textarea matInput [value]=\"payment?.remarks\" [readonly]=\"!isForPayment\"></textarea> -->\n              <textarea matInput [ngModel]=\"payment?.remarks\" (ngModelChange)=\"payment.remarks = $event\" formControlName=\"remarks\" name=\"remarks\"\n                [readonly]=\"currentUser.userRole.name!='ROLE_ACCOUNTING'||payment?.paymentStatus=='PAID'\"></textarea>\n            </mat-form-field>\n\n          </div>\n\n          <div *ngIf=\"selectedProofOfPayment === 2\">\n            <div class=\"row\">\n\n              <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n                <mat-label>Applicant Company Details</mat-label>\n                <input matInput name=\"companyName\" [readonly]=\"isForPayment\">\n              </mat-form-field>\n\n            </div>\n            <div class=\"row\">\n\n              <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n                <mat-label>Accumulated Amount to be settled</mat-label>\n                <input matInput name=\"length\" [readonly]=\"isForPayment\" class=\"numbers-input\">\n              </mat-form-field>\n            </div>\n          </div>\n\n          <div *ngIf=\"selectedProofOfPayment === 3\">\n            <div class=\"row\">\n\n              <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n                <mat-label>Client Company Details</mat-label>\n                <input matInput name=\"companyName\" [readonly]=\"isForPayment\">\n              </mat-form-field>\n\n            </div>\n            <div class=\"row\">\n\n              <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n                <mat-label>Accumulated Amount to be settled</mat-label>\n                <input matInput name=\"length\" [readonly]=\"isForPayment\" class=\"numbers-input\">\n              </mat-form-field>\n            </div>\n          </div>\n\n          <div class=\"row\" *ngIf=\"currentUser?.userRole?.name=='ROLE_ACCOUNTING'&&payment?.paymentStatus!=='PAID'\">\n            <div class=\"col-md-12\">\n              <button class=\"button-right button-red\" mat-raised-button (click)=\"processPayment(payment?.remarks)\"\n                [hidden]=\"isDelinquent\"\n                [disabled]=\"(!paymentForm.valid || !payment?.paymentAttachmentReference || !isPaymentTypeValid)\n                && ((paymentMode?.toUpperCase() !== 'PROMISORRY NOTE' && paymentMethod.paymentType?.paymentDescription?.toUpperCase() !== 'PROMISORRY NOTE') || !payment.paymentAttachmentReference )\">\n                <mat-icon>offline_pin</mat-icon> PROCESS\n              </button>\n              <button mat-raised-button class=\"button-right button-red button-right__approve\" (click)=\"approvePenalty()\"\n                [disabled]=\"(!paymentForm.valid || !payment?.paymentAttachmentReference || !isPaymentTypeValid)\n              && ((paymentMode?.toUpperCase() !== 'PROMISORRY NOTE' && paymentMethod.paymentType?.paymentDescription?.toUpperCase() !== 'PROMISORRY NOTE') || !payment.paymentAttachmentReference )\"\n                *ngIf=\"isDelinquent\">\n                <i class=\"material-icons color__white\">task_alt</i> APPROVE\n              </button>\n              &nbsp;\n              <button mat-raised-button class=\"button-right button-red\" (click)=\"rejectPayment()\" *ngIf=\"isForApproval\">\n                <mat-icon>unpublished</mat-icon> REJECT\n              </button>\n            </div>\n          </div>\n          <br>\n        </div>\n      </div>\n    </form>\n  </div>\n</form>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AddPaymentComponent } from './add-payment.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AddPaymentComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AddPaymentRoutingModule { }\n"]}