{"version":3,"sources":["webpack:///src/app/modules/pages/accounting/add-payment/add-payment-preview-application/add-payment-preview-application.component.ts","webpack:///src/app/modules/pages/accounting/add-payment/add-payment-preview-application/add-payment-preview-application.component.html","webpack:///src/app/modules/pages/accounting/add-payment/add-payment.module.ts","webpack:///src/app/modules/pages/accounting/add-payment/add-payment.component.ts","webpack:///src/app/modules/pages/accounting/add-payment/add-payment.component.html","webpack:///src/app/modules/pages/accounting/add-payment/add-payment-routing.module.ts"],"names":["AddPaymentPreviewApplicationComponent","apiService","applicationSingleMedia","multimediaDTO","presentorDetails","multimediaMovingList","multimediaStaticList","changes","getPresentorDetails","previewS1Application","applicationOwner","username","findByParam","userLogin","subscribe","res","responseData","data","AddPaymentModule","validateFieldService","AddPaymentComponent","sanitizer","formBuilder","route","router","fileStorageService","dataStorage","spinner","sweetAlertService","displayedColumns","multipleApplicationList","paymentTypeFromUrl","s1Application","attachmentDocument","typeOfMediumDisplay","paymentTypeList","attachmentDocuments","payment","paymentMethod","currentDate","Date","paymentTemp","isMultiple","isSpecial","isForPayment","isForApproval","isPaymentTypeValid","isDelinquent","isShowUploadButton","previewDocument","proofOfPayment","id","name","currentUser","getUserAccount","snapshot","paramMap","get","split","getPaymentList","setFormValidator","initData","toLowerCase","includes","params","userRole","ROLE_ACCOUNTING","getPaymentDetails","viewPayment","getMultipleApplicationList","paymentForm","group","paymentType","required","referenceNo","amount","paymentDate","bankName","bankBranch","controlNo","referenceNumber","typeOfMaterial","length","baseRate","vat","total","remarks","applicantCompanyDetails","accumulatedAmountToBeSettled","clientCompanyDetails","discount","amountReceive","filedBirForm","withholdingTax","orNo","ccConfirmationCode","checkNo","amountDue","customErrorMessage","fire","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","value","Number","save","approveDelinquentCompany","customSuccessMessage","navigate","err","error","message","responseMessage","a","b","paymentDescription","GCASH","CASH","PAYMAYA","BANK","VOUCHER","CHECK","PROMISORRY_NOTE","endpoint","paymentDetails","multiplePaymentDetails","paymentMultipleMonitoring","specialPaymentDetails","paymentSpecial","findAll","applicationForm","refTypeOfMedium","applicationFormS2","getApplicationSingleMedia","getMultimediaMoving","fetchMultimedia","getMultimediaStatic","paymentAttachmentReference","getAttachmentDocumentDisplay","ROLE_APPLICANT","creditCardIndex","findIndex","element","splice","paymentMultiple","paymentDetailsAccounting","paymentMode","res1","safeURL","bypassSecurityTrustResourceUrl","fileURL","getMultipleAppFormsWithNoRejected","forEach","multipleApplication","appFormReference","dataSource","paginator","amountTransferred","parseFloat","toString","toPay","toFixed","paymentStatus","PAID","accountingPaymentApprove","accountingMultiplePaymentApprove","accountingSpecialPaymentApprove","selected","selectedProofOfPayment","basicRate","withholding","UNPAID","event","target","files","fileSize","size","URL","createObjectURL","reader","FileReader","file","readAsDataURL","onload","selectedFile","uploadedPaymentFile","window","open","show","PAYMENT","ORIGINAL","pushFileToStorage","addToAttachmentDocuments","hideSpinner","getAttachmentDocument","obj","originalFilename","filename","fileExtension","attachmentType","documentFormat","setTimeout","hide","console","mediumExecution","typeOfMedium","description","sizeLength","index","applicationMultimedia","multimediaList","Set","map","mappedList","multimediaSizeLength","mediaCtrl","media","rejectEndpoint","accountingReject","accountingRejectMultiple","accountingRejectSpecial","typeofMedium","MULTIMEDIA_MOVING","multimedia","computeWithholding","resetPaymentTypeValidation","routes","path","component","AddPaymentRoutingModule","forChild"],"mappings":"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","file":"default~add-payment-add-payment-module~applications-applications-module-es5.js","sourcesContent":["import { AfterViewInit, Component, Input, OnChanges, OnInit, SimpleChanges, ViewChild } from '@angular/core';\r\nimport { S1Application, UserAccount } from '@models';\r\nimport { ApiService } from '@services';\r\nimport { APP_DECISION_STATUS, ATTACHMENT_TYPE, ENDPOINTS, SUBMISSION_TYPE } from '@shared';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { ApplicationSingleMedia } from '../../../../../core/models/application-single-media.model';\r\n\r\n@Component({\r\n  selector: 'app-add-payment-preview-application',\r\n  templateUrl: './add-payment-preview-application.component.html',\r\n})\r\n\r\nexport class AddPaymentPreviewApplicationComponent implements OnChanges {\r\n  @Input() previewS1Application: any;\r\n  @Input() applicationSingleMedia = new ApplicationSingleMedia();\r\n  @Input() multimediaDTO: any = {};\r\n  presentorDetails = new UserAccount();\r\n\r\n  multimediaMovingList = [];\r\n  multimediaStaticList = [];\r\n\r\n  constructor(private apiService: ApiService) { }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes['previewS1Application']) {\r\n      this.getPresentorDetails();\r\n    }\r\n  }\r\n\r\n  getPresentorDetails() {\r\n    if (this.previewS1Application?.applicationOwner?.username) {\r\n      this.apiService.findByParam(ENDPOINTS.userLogin, this.previewS1Application.applicationOwner.username).subscribe(\r\n        (res: any) => {\r\n          if (res.responseData.data) {\r\n            this.presentorDetails = res.responseData.data;\r\n          }\r\n        });\r\n    }\r\n  }\r\n}\r\n","<!-- CLIENT INFO -->\r\n<div class=\"row fields\">\r\n  <h4>\r\n    <i class=\"material-icons\">preview</i> &nbsp;<b>CLIENT'S INFORMATION</b>\r\n    <hr>\r\n  </h4>\r\n  <div class=\"row\">\r\n    <div class=\"col-md-4\" appearance=\"outline\">\r\n      <mat-label>Client Company Name</mat-label>\r\n      <input matInput [value]=\"previewS1Application?.company?.companyName\" disabled>\r\n    </div>\r\n    <div class=\"col-md-4\" appearance=\"outline\">\r\n      <mat-label>Client Membership Affiliation</mat-label>\r\n      <input matInput [value]=\"previewS1Application?.company?.membersAffiliation?.description\" disabled>\r\n    </div>\r\n    <div class=\"col-md-4\" appearance=\"outline\"></div>\r\n  </div>\r\n\r\n  <div class=\"row\">\r\n    <div class=\"col-md-4\" appearance=\"outline\">\r\n      <mat-label>Brand</mat-label>\r\n      <input matInput [value]=\"previewS1Application?.brand?.description\" disabled>\r\n    </div>\r\n    <div class=\"col-md-4\" appearance=\"outline\">\r\n      <mat-label>Product</mat-label>\r\n      <input matInput [value]=\"previewS1Application?.product?.description\" disabled>\r\n    </div>\r\n    <div class=\"col-md-4\" appearance=\"outline\">\r\n      <mat-label>Category</mat-label>\r\n      <input matInput [value]=\"previewS1Application?.product?.category?.description\" disabled>\r\n    </div>\r\n  </div>\r\n\r\n  <br><br><br>\r\n</div>\r\n\r\n<!-- PRESENTOR INFO -->\r\n<div class=\"row fields\">\r\n  <h4>\r\n    <i class=\"material-icons\">preview</i> &nbsp;<b>PRESENTOR INFORMATION</b>\r\n    <hr>\r\n  </h4>\r\n  <div class=\"row\">\r\n    <div class=\"col-md-12 mb-3\" appearance=\"outline\">\r\n      <mat-label>Name of Applicant</mat-label>\r\n      <input matInput [value]=\"presentorDetails?.firstName+' '+presentorDetails?.lastName\" disabled>\r\n    </div>\r\n    <div class=\"col-md-12 mb-3\" appearance=\"outline\">\r\n      <mat-label>Company Name</mat-label>\r\n      <input matInput [value]=\"presentorDetails?.company?.companyName\" disabled>\r\n    </div>\r\n    <div class=\"col-md-12 mb-3\" appearance=\"outline\">\r\n      <mat-label>Address</mat-label>\r\n        <input matInput [value]=\"presentorDetails?.company?.completeAddress\" disabled>\r\n    </div>\r\n    \r\n    <div class=\"row col-md-12 mb-4\">\r\n      <div class=\"col-md-6 mb-3\" appearance=\"outline\">\r\n        <mat-label>Mobile Number</mat-label>\r\n        <input matInput [value]=\"presentorDetails?.mobileNumber\" disabled>\r\n      </div>\r\n      <div class=\"col-md-6 mb-3\" appearance=\"outline\">\r\n        <mat-label>Email Address</mat-label>\r\n        <input matInput [value]=\"presentorDetails?.username\" disabled>\r\n      </div>\r\n      <div class=\"col-md-6 mb-3\" appearance=\"outline\">\r\n        <mat-label>Telephone Number</mat-label>\r\n        <input matInput [value]=\"presentorDetails?.company?.companyTelephoneNo\" disabled>\r\n      </div>\r\n      <div class=\"col-md-6 mb-3\" appearance=\"outline\">\r\n        <mat-label>Alternate Telephone Number</mat-label>\r\n        <input matInput [value]=\"presentorDetails?.company?.companyTelephoneNo2\" disabled>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- MATERIAL INFO -->\r\n<div class=\"row fields\">\r\n  <h4>\r\n    <i class=\"material-icons\">preview</i> &nbsp;<b>MATERIAL INFORMATION</b>\r\n    <hr>\r\n  </h4>\r\n  <div class=\"row\">\r\n    <div class=\"col-md-12\" appearance=\"outline\">\r\n      <mat-label>Ad Title</mat-label>\r\n      <input matInput [value]=\"previewS1Application?.adTitle\" disabled>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"row\"><br></div>\r\n\r\n  <div class=\"row\">\r\n    <div class=\"col-md-6\" appearance=\"outline\">\r\n      <mat-label>Reference Code of Previously-Approved Material</mat-label>\r\n      <input matInput [value]=\"previewS1Application?.previousRefCode\" disabled>\r\n    </div>\r\n    <div class=\"col-md-6\" appearance=\"outline\">\r\n      <mat-label>Tag line</mat-label>\r\n      <input matInput [value]=\"previewS1Application?.tagLine\" disabled>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"row\" *ngIf=\"previewS1Application?.refTypeOfMedium\">\r\n    <div class=\"col-md-6\" appearance=\"outline\">\r\n      <mat-label>Media Type</mat-label>\r\n      <input matInput [value]=\"previewS1Application?.refTypeOfMedium\" disabled>\r\n    </div>\r\n  </div>\r\n  <div class=\"row\"><br></div>\r\n  <div class=\"row\" *ngIf=\"applicationSingleMedia\">\r\n    <div class=\"col-md-3\" appearance=\"outline\"\r\n      *ngIf=\"applicationSingleMedia?.mediumExecution?.typeOfMedium?.description\">\r\n      <mat-label>Type of Medium</mat-label>\r\n      <input matInput [value]=\"applicationSingleMedia?.mediumExecution?.typeOfMedium?.description\" disabled>\r\n    </div>\r\n    <div class=\"col-md-3\" appearance=\"outline\" *ngIf=\"applicationSingleMedia?.mediumExecution\">\r\n      <mat-label>Execution</mat-label>\r\n      <input matInput [value]=\"applicationSingleMedia?.mediumExecution?.typeOfExecution?.typeOfExecution\" disabled>\r\n    </div>\r\n    <div class=\"col-md-3\" appearance=\"outline\" *ngIf=\"applicationSingleMedia?.dialect\">\r\n      <mat-label>Language/Dialect</mat-label>\r\n      <input matInput [value]=\"applicationSingleMedia?.dialect?.dialect\" disabled>\r\n    </div>\r\n    <div class=\"col-md-3\" appearance=\"outline\" *ngIf=\"applicationSingleMedia?.others\">\r\n      <mat-label>Others</mat-label>\r\n      <input matInput [value]=\"applicationSingleMedia?.others\" disabled>\r\n    </div>\r\n    <div class=\"col-md-3\" appearance=\"outline\" *ngIf=\"applicationSingleMedia?.sizeLength\">\r\n      <mat-label>Size / Length</mat-label>\r\n      <input matInput [value]=\"applicationSingleMedia?.sizeLength\" disabled>\r\n    </div>\r\n    <div class=\"col-md-3\" appearance=\"outline\" *ngIf=\"applicationSingleMedia?.width\">\r\n      <mat-label>Width</mat-label>\r\n      <input matInput [value]=\"applicationSingleMedia?.width\" disabled>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Displaying Multimedia List -->\r\n  <div class=\"row\" *ngIf=\"multimediaDTO\">\r\n    <table class=\"mx-3 mb-3\">\r\n      <ng-container *ngIf=\"previewS1Application?.refTypeOfMedium === 'MULTIMEDIA-STATIC'\">\r\n        <ng-container *ngFor=\"let i of multimediaDTO.applicationMultimediaStaticList\">\r\n          <tr *ngIf=\"i?.hasSelected\" style=\"height: 30px;\">\r\n            <td class=\"col-md-4\">\r\n              <mat-checkbox [checked]=\"i?.hasSelected\" disabled>\r\n                {{i?.multimediaStaticMedium | uppercase}}\r\n              </mat-checkbox>\r\n            </td>\r\n            <td class=\"col-md-1\" \r\n              *ngIf=\"previewS1Application?.refTypeOfMedium === 'MULTIMEDIA-STATIC' && i?.multimediaStaticMedium !== 'digital static'\">\r\n              Size\r\n            </td>\r\n            <td class=\"col-md-2\">\r\n              <input matInput \r\n                *ngIf=\"previewS1Application?.refTypeOfMedium === 'MULTIMEDIA-STATIC' && i?.multimediaStaticMedium !== 'digital static'\" \r\n                [value]=\"i?.sizeLength\" disabled>\r\n            </td>\r\n            <td class=\"col-md-5\"></td>\r\n          </tr>\r\n        </ng-container>\r\n      </ng-container>\r\n\r\n      <ng-container *ngIf=\"previewS1Application?.refTypeOfMedium === 'MULTIMEDIA-MOVING'\">\r\n        <ng-container *ngFor=\"let i of multimediaDTO.applicationMultimediaMovingList\" style=\"height: 30px;\">\r\n          <tr *ngIf=\"i?.hasSelected\">\r\n            <td class=\"col-md-4\">\r\n              <mat-checkbox [checked]=\"true\" disabled>\r\n                {{i?.multimediaMovingMedium | uppercase}}\r\n              </mat-checkbox>\r\n            </td>\r\n            <td class=\"col-md-1\" *ngIf=\"previewS1Application?.refTypeOfMedium === 'MULTIMEDIA-MOVING'\">Length</td>\r\n            <td class=\"col-md-2\">\r\n              <input matInput *ngIf=\"previewS1Application?.refTypeOfMedium === 'MULTIMEDIA-MOVING'\" [value]=\"multimediaDTO?.sizeLength\" disabled>\r\n            </td>\r\n            <td class=\"col-md-5\"></td>\r\n          </tr>\r\n        </ng-container>\r\n      </ng-container>\r\n    </table>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { AddPaymentRoutingModule } from './add-payment-routing.module';\r\nimport { AddPaymentComponent } from './add-payment.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { AngularMaterialModule } from '@shared';\r\nimport { AddPaymentPreviewApplicationComponent } from './add-payment-preview-application/add-payment-preview-application.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [AddPaymentComponent, AddPaymentPreviewApplicationComponent],\r\n  imports: [\r\n    CommonModule,\r\n    AddPaymentRoutingModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    AngularMaterialModule,\r\n  ],\r\n  exports: [\r\n    AddPaymentComponent,\r\n    AddPaymentPreviewApplicationComponent\r\n  ]\r\n})\r\nexport class AddPaymentModule { }\r\n","import { Component, OnInit, Input, ViewChild } from \"@angular/core\";\r\nimport { S1Application, Payment, AttachmentDocument } from \"@models\";\r\nimport { ApiService, SweetAlertService, DataStorageService } from \"@services\";\r\nimport {\r\n  APPLICATION_STATUSES,\r\n  ATTACHMENT_TYPE,\r\n  ENDPOINTS,\r\n  PAYMENT_MODE,\r\n  PAYMENT_STATUS,\r\n  PAYMENT_TYPE,\r\n  PAYMENT_TYPE_LIST,\r\n  SUBMISSION_TYPE,\r\n  TYPE_OF_MEDIUM,\r\n  USER_ROLES,\r\n} from \"@shared\";\r\nimport { DomSanitizer } from \"@angular/platform-browser\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\r\nimport Swal from \"sweetalert2\";\r\nimport { PaymentMethod } from \"app/core/models/payment-method.model\";\r\nimport { MatTable, MatTableDataSource } from \"@angular/material/table\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { ValidateFieldService } from \"app/core/services/validate-field.service\";\r\nimport { FileStorageService } from \"app/core/services/file.storage.service\";\r\nimport { ApplicationSingleMedia } from \"app/core/models/application-single-media.model\";\r\n\r\n@Component({\r\n  selector: \"app-add-payment\",\r\n  templateUrl: \"./add-payment.component.html\",\r\n  styleUrls: [\"./add-payment.component.scss\"],\r\n})\r\nexport class AddPaymentComponent implements OnInit {\r\n  @ViewChild(MatPaginator, { static: false }) paginator: MatPaginator;\r\n  @ViewChild(MatTable, { static: false }) table: MatTable<AddPaymentComponent>;\r\n  dataSource: MatTableDataSource<any>;\r\n  displayedColumns: string[] = [\r\n    \"referenceCode\",\r\n    \"adTitle\",\r\n    \"mediumAndLength\",\r\n    \"amount\",\r\n  ];\r\n  multipleApplicationList = [];\r\n  paymentTypeFromUrl = \"\";\r\n\r\n  @Input() s1Application = new S1Application();\r\n  attachmentDocument = new AttachmentDocument();\r\n  applicationSingleMedia = new ApplicationSingleMedia();\r\n  typeOfMediumDisplay = \"\";\r\n  paymentTypeList = [];\r\n  attachmentDocuments = [];\r\n  @Input() payment = new Payment();\r\n  paymentMethod = new PaymentMethod();\r\n  safeURL: any;\r\n  id: any;\r\n  paymentForm: FormGroup;\r\n  paymentTypeForm: FormGroup;\r\n  currentUser: any;\r\n  paymentMode: string;\r\n  selectedProofOfPayment: any;\r\n  currentDate = new Date();\r\n  paymentTemp = new Payment();\r\n  isMultiple = false;\r\n  isSpecial = false;\r\n  isForPayment = false;\r\n  isForApproval = false;\r\n  isPaymentTypeValid = false;\r\n  isDelinquent = false;\r\n  selectedFile: File;\r\n  fileSize: number;\r\n  uploadedPaymentFile: any;\r\n  isShowUploadButton = false;\r\n  previewDocument = false;\r\n\r\n  proofOfPayment = [\r\n    { id: 1, name: \"Schedule of Fees - Individual\" },\r\n    { id: 2, name: \"Schedule of Fees - Multiple\" },\r\n    { id: 3, name: \"Schedule of Fees - Special\" },\r\n    { id: 4, name: \"Settlement of Delinquent Status\" },\r\n    { id: 5, name: \"Settlement of Brand Penalties\" },\r\n    { id: 6, name: \"Settlement of Company Penalties\" },\r\n  ];\r\n  multimediaDTO: any = {};\r\n\r\n  constructor(\r\n    private apiService: ApiService,\r\n    private sanitizer: DomSanitizer,\r\n    private formBuilder: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private fileStorageService: FileStorageService,\r\n    public dataStorage: DataStorageService,\r\n    public validateFieldService: ValidateFieldService,\r\n    private spinner: NgxSpinnerService,\r\n    private sweetAlertService: SweetAlertService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.currentUser = this.dataStorage.getUserAccount();\r\n\r\n    this.paymentTypeFromUrl = this.route.snapshot.paramMap\r\n      .get(\"id\")\r\n      .split(\"-\")[0];\r\n    this.id = this.route.snapshot.paramMap.get(\"id\").split(\"-\")[1];\r\n\r\n    this.getPaymentList();\r\n    this.setFormValidator();\r\n    this.initData();\r\n  }\r\n\r\n  initData() {\r\n    if (this.paymentTypeFromUrl?.toLowerCase() === \"for_payment\") {\r\n      this.isForPayment = true;\r\n    }\r\n    if (this.paymentTypeFromUrl?.toLowerCase() === \"for_approval\") {\r\n      this.isForApproval = true;\r\n    }\r\n\r\n    if (this.route?.snapshot?.paramMap?.get(\"status\")?.includes(\"multiple-\")) {\r\n      this.isMultiple = true;\r\n      this.paymentTypeFromUrl = \"multiple\";\r\n    }\r\n    if (this.route?.snapshot?.params?.id.includes(\"special-\")) {\r\n      this.isSpecial = true;\r\n      this.paymentTypeFromUrl = \"special\";\r\n    }\r\n    if (\r\n      this.route?.snapshot?.paramMap?.get(\"status\")?.includes(\"delinquent-\")\r\n    ) {\r\n      this.isDelinquent = true;\r\n      this.paymentTypeFromUrl = \"delinquent\";\r\n    }\r\n\r\n    if (\r\n      this.id !== 0 &&\r\n      this.currentUser.userRole.name === USER_ROLES.ROLE_ACCOUNTING\r\n    ) {\r\n      if (\r\n        this.isForPayment ||\r\n        this.isSpecial ||\r\n        this.paymentTypeFromUrl?.toLowerCase() === \"unpaid\" ||\r\n        this.isMultiple\r\n      ) {\r\n        this.getPaymentDetails();\r\n      } else {\r\n        this.viewPayment();\r\n      }\r\n      if (this.isMultiple) {\r\n        this.getMultipleApplicationList();\r\n      }\r\n    }\r\n  }\r\n\r\n  setFormValidator(): void {\r\n    this.paymentForm = this.formBuilder.group({\r\n      paymentType: [\"\", Validators.required],\r\n      referenceNo: [\"\"],\r\n      amount: [\"\"],\r\n      paymentDate: [\"\"],\r\n      bankName: [\"\"],\r\n      bankBranch: [\"\"],\r\n      controlNo: [\"\"],\r\n      referenceNumber: [\"\"],\r\n      typeOfMaterial: [\"\"],\r\n      length: [\"\"],\r\n      baseRate: [\"\"],\r\n      vat: [\"\"],\r\n      total: [\"\"],\r\n      remarks: [\"\"],\r\n      applicantCompanyDetails: [\"\"],\r\n      accumulatedAmountToBeSettled: [\"\"],\r\n      clientCompanyDetails: [\"\"],\r\n      discount: [\"\"],\r\n      amountReceive: [\"\"],\r\n      filedBirForm: [\"\"],\r\n      withholdingTax: [0],\r\n      orNo: [\"\"],\r\n      ccConfirmationCode: [\"\"],\r\n      checkNo: [\"\"],\r\n    });\r\n  }\r\n\r\n  approvePenalty() {\r\n    if (this.paymentMethod.amount < this.payment.amountDue) {\r\n      this.sweetAlertService.customErrorMessage(\r\n        `Amount Received/Transferred is lower than Amount Due.`\r\n      );\r\n    } else {\r\n      Swal.fire({\r\n        text: \"Are you sure you want to approve this Delinquent Company?\",\r\n        icon: \"question\",\r\n        showCancelButton: true,\r\n        confirmButtonColor: \"#3085d6\",\r\n        cancelButtonColor: \"#d33\",\r\n        confirmButtonText: \"Confirm\",\r\n      }).then((result) => {\r\n        if (result.value) {\r\n          this.payment.paymentMethod = this.paymentMethod;\r\n          this.payment.amountReceive = Number(this.paymentMethod.amount);\r\n\r\n          this.apiService\r\n            .save(`${ENDPOINTS.approveDelinquentCompany}`, this.payment)\r\n            .subscribe(\r\n              (res: any) => {\r\n                this.sweetAlertService.customSuccessMessage(\r\n                  \"Delinquent company approved successfully.\"\r\n                );\r\n                this.router.navigate([\r\n                  \"asc/page/accounting/payments/\",\r\n                  \"delinquent-companies\",\r\n                ]);\r\n              },\r\n              (err) => {\r\n                if (!err.error.message) {\r\n                  err.error.message = err.error.responseMessage;\r\n                }\r\n                this.sweetAlertService.error(err);\r\n              }\r\n            );\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  paymentTypevalidator() {\r\n    let a = this.paymentMethod;\r\n    let b = this.paymentMethod?.paymentType?.paymentDescription;\r\n    if (b === PAYMENT_MODE.GCASH || b === PAYMENT_MODE.CASH) {\r\n      if (\r\n        a.referenceNo && a.paymentDate && a.amount\r\n          ? (this.isPaymentTypeValid = true)\r\n          : (this.isPaymentTypeValid = false)\r\n      ) {\r\n      }\r\n    } else if (b === PAYMENT_MODE.PAYMAYA) {\r\n      if (\r\n        a.referenceNo && a.paymentDate && a.amount && a.ccConfirmationCode\r\n          ? (this.isPaymentTypeValid = true)\r\n          : (this.isPaymentTypeValid = false)\r\n      ) {\r\n      }\r\n    } else if (b === PAYMENT_MODE.BANK) {\r\n      if (\r\n        a.bankName && a.paymentDate && a.amount && a.bankBranch\r\n          ? (this.isPaymentTypeValid = true)\r\n          : (this.isPaymentTypeValid = false)\r\n      ) {\r\n      }\r\n    } else if (b === PAYMENT_MODE.VOUCHER) {\r\n      if (\r\n        a.controlNo\r\n          ? (this.isPaymentTypeValid = true)\r\n          : (this.isPaymentTypeValid = false)\r\n      ) {\r\n      }\r\n    } else if (b === PAYMENT_MODE.CHECK) {\r\n      if (\r\n        a.bankName && a.checkNo && a.amount\r\n          ? (this.isPaymentTypeValid = true)\r\n          : (this.isPaymentTypeValid = false)\r\n      ) {\r\n      }\r\n    }\r\n  }\r\n\r\n  resetPaymentTypeValidation() {\r\n    this.isPaymentTypeValid = false;\r\n    if (\r\n      this.paymentMethod?.paymentType?.paymentDescription ===\r\n      PAYMENT_MODE.PROMISORRY_NOTE\r\n    ) {\r\n      this.isPaymentTypeValid = true;\r\n    }\r\n  }\r\n\r\n  getPaymentDetails() {\r\n    let endpoint = ENDPOINTS.paymentDetails;\r\n    if (this.isMultiple) {\r\n      if (this.isForPayment) {\r\n        endpoint = ENDPOINTS.multiplePaymentDetails;\r\n      } else {\r\n        endpoint = ENDPOINTS.paymentMultipleMonitoring + `?groupId=`;\r\n      }\r\n    }\r\n    if (this.isSpecial) {\r\n      if (this.isForPayment) {\r\n        endpoint = ENDPOINTS.specialPaymentDetails;\r\n      } else {\r\n        endpoint = ENDPOINTS.paymentSpecial;\r\n      }\r\n    }\r\n\r\n    this.apiService.findAll(endpoint + this.id).subscribe((res: any) => {\r\n      if (res.responseData) {\r\n        this.payment = res.responseData.data;\r\n        this.payment\r\n          ? (this.payment.filedBirForm = this.payment.filedBirForm\r\n              ? this.payment.filedBirForm\r\n              : false)\r\n          : null;\r\n        this.paymentMethod = this.payment?.paymentMethod\r\n          ? this.payment.paymentMethod\r\n          : new PaymentMethod();\r\n      } else if (res.data) {\r\n        this.payment = res.data[0];\r\n        this.payment\r\n          ? (this.payment.filedBirForm = this.payment.filedBirForm\r\n              ? this.payment.filedBirForm\r\n              : false)\r\n          : null;\r\n        this.paymentMethod = this.payment?.paymentMethod\r\n          ? this.payment.paymentMethod\r\n          : new PaymentMethod();\r\n      } else {\r\n        this.payment = res;\r\n        this.payment\r\n          ? (this.payment.filedBirForm = this.payment.filedBirForm\r\n              ? this.payment.filedBirForm\r\n              : false)\r\n          : null;\r\n        this.paymentMethod = this.payment?.paymentMethod\r\n          ? this.payment.paymentMethod\r\n          : new PaymentMethod();\r\n      }\r\n\r\n      switch (\r\n        this.payment?.applicationForm?.refTypeOfMedium ||\r\n        this.payment?.applicationFormS2?.applicationForm?.refTypeOfMedium\r\n      ) {\r\n        case \"SINGLE MEDIA\":\r\n          this.getApplicationSingleMedia();\r\n          break;\r\n        case \"MULTIMEDIA-MOVING\":\r\n          this.getMultimediaMoving();\r\n          this.fetchMultimedia();\r\n          break;\r\n        case \"MULTIMEDIA-STATIC\":\r\n          this.getMultimediaStatic();\r\n          this.fetchMultimedia();\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n\r\n      if (this.payment?.paymentAttachmentReference) {\r\n        this.getAttachmentDocumentDisplay(\r\n          this.payment.paymentAttachmentReference\r\n        );\r\n      }\r\n\r\n      // this.paymentTemp = this.payment;\r\n    });\r\n  }\r\n\r\n  getPaymentList() {\r\n    this.apiService.findAll(ENDPOINTS.paymentType).subscribe((res: any) => {\r\n      this.paymentTypeList = res.responseData.data;\r\n      if (this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT) {\r\n        const creditCardIndex = this.paymentTypeList.findIndex(\r\n          (element) => element.paymentDescription === \"Credit Card\"\r\n        );\r\n        this.paymentTypeList.splice(creditCardIndex, 1);\r\n      }\r\n    });\r\n  }\r\n\r\n  viewPayment() {\r\n    let endpoint = `${ENDPOINTS.payment}/application-form-id`;\r\n    if (this.isMultiple) {\r\n      if (this.isForPayment) {\r\n        endpoint = `${ENDPOINTS.paymentMultiple}/payment-multiple-details/multiple-application-id`;\r\n      } else if (this.isForApproval) {\r\n        endpoint = ENDPOINTS.paymentMultipleMonitoring;\r\n      }\r\n    } else {\r\n      if (this.paymentTypeFromUrl?.toLowerCase() === \"for_payment\") {\r\n        if (this.currentUser.userRole.name === USER_ROLES.ROLE_ACCOUNTING) {\r\n          endpoint = `${ENDPOINTS.paymentDetailsAccounting}`;\r\n        } else {\r\n          endpoint = `${ENDPOINTS.paymentDetails}`;\r\n        }\r\n      }\r\n    }\r\n\r\n    this.apiService.findByParam(endpoint, this.id).subscribe((res: any) => {\r\n      if (res.responseData) {\r\n        this.payment = res.responseData.data;\r\n        if (this.payment) {\r\n          this.payment.filedBirForm = this.payment.filedBirForm\r\n            ? this.payment.filedBirForm\r\n            : false;\r\n        }\r\n      } else {\r\n        this.payment = res;\r\n        if (this.payment) {\r\n          this.payment.filedBirForm = this.payment.filedBirForm\r\n            ? this.payment.filedBirForm\r\n            : false;\r\n        }\r\n      }\r\n\r\n      this.paymentMethod = this.payment?.paymentMethod\r\n        ? this.payment.paymentMethod\r\n        : new PaymentMethod();\r\n      this.paymentMode = this.paymentMethod?.paymentType?.paymentDescription;\r\n      // this.paymentTemp = this.payment;\r\n\r\n      if (this.payment?.paymentAttachmentReference) {\r\n        this.getAttachmentDocumentDisplay(\r\n          this.payment.paymentAttachmentReference\r\n        );\r\n      }\r\n\r\n      switch (\r\n        this.payment?.applicationForm?.refTypeOfMedium ||\r\n        this.payment?.applicationFormS2?.applicationForm?.refTypeOfMedium\r\n      ) {\r\n        case \"SINGLE MEDIA\":\r\n          this.getApplicationSingleMedia();\r\n          break;\r\n        case \"MULTIMEDIA-MOVING\":\r\n          this.getMultimediaMoving();\r\n          this.fetchMultimedia();\r\n          break;\r\n        case \"MULTIMEDIA-STATIC\":\r\n          this.getMultimediaStatic();\r\n          this.fetchMultimedia();\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    });\r\n  }\r\n\r\n  getAttachmentDocumentDisplay(paymentAttachmentReference) {\r\n    this.apiService\r\n      .findByParam(\r\n        ENDPOINTS.attachmentDocument,\r\n        `payment-attachment-reference/` + paymentAttachmentReference\r\n      )\r\n      .subscribe(\r\n        (res1: any) => {\r\n          if (res1.responseData.data) {\r\n            this.attachmentDocuments = res1.responseData.data;\r\n            this.attachmentDocument = res1.responseData.data;\r\n            this.safeURL = this.sanitizer.bypassSecurityTrustResourceUrl(\r\n              this.attachmentDocument.fileURL\r\n            );\r\n            // console.log('view attachmentDocument: ', this.attachmentDocuments);\r\n          }\r\n        },\r\n        (err: any) => {\r\n          this.attachmentDocuments = [];\r\n        }\r\n      );\r\n  }\r\n\r\n  getMultipleApplicationList() {\r\n    this.apiService\r\n      .findAll(ENDPOINTS.getMultipleAppFormsWithNoRejected + this.id)\r\n      .subscribe(\r\n        (res: any) => {\r\n          this.multipleApplicationList = res.responseData.data;\r\n\r\n          this.multipleApplicationList.forEach((multipleApplication) => {\r\n            switch (\r\n              multipleApplication?.refTypeOfMedium ||\r\n              multipleApplication?.applicationFormS2?.applicationForm\r\n                ?.refTypeOfMedium\r\n            ) {\r\n              case \"SINGLE MEDIA\":\r\n                this.getApplicationSingleMedia(\r\n                  multipleApplication?.appFormReference\r\n                );\r\n                break;\r\n              case \"MULTIMEDIA-MOVING\":\r\n                this.getMultimediaMoving(multipleApplication?.appFormReference);\r\n                break;\r\n              case \"MULTIMEDIA-STATIC\":\r\n                this.getMultimediaStatic(multipleApplication?.appFormReference);\r\n                break;\r\n              default:\r\n                break;\r\n            }\r\n          });\r\n\r\n          this.dataSource = new MatTableDataSource<any>(\r\n            this.multipleApplicationList\r\n          );\r\n          this.dataSource.paginator = this.paginator;\r\n          if (this.multipleApplicationList.length) {\r\n            this.payment.multipleApplication = this.multipleApplicationList[0].multipleApplication;\r\n          }\r\n        },\r\n        (err: any) => {\r\n          this.sweetAlertService.error(err);\r\n        }\r\n      );\r\n  }\r\n\r\n  processPayment(remarks) {\r\n    const amountTransferred = Number.parseFloat(\r\n      this.paymentMethod?.amount?.toString()\r\n    );\r\n    const toPay = +Number(this.payment.amountDue - this.payment?.withholdingTax)?.toFixed(2);\r\n\r\n    if (\r\n      this.paymentMethod.paymentType.paymentDescription === \"Voucher\" ||\r\n      this.paymentMethod.paymentType.paymentDescription === \"Promisorry Note\" ||\r\n      (this.paymentMethod.paymentType.paymentDescription !== \"Voucher\" &&\r\n        this.paymentMethod.paymentType.paymentDescription !==\r\n          \"Promisorry Note\" &&\r\n        amountTransferred >= toPay)\r\n    ) {\r\n      Swal.fire({\r\n        text: \"Are you sure you want to process this PAYMENT?\",\r\n        icon: \"question\",\r\n        showCancelButton: true,\r\n        confirmButtonColor: \"#3085d6\",\r\n        cancelButtonColor: \"#d33\",\r\n        confirmButtonText: \"Confirm\",\r\n      }).then((result) => {\r\n        if (result.value) {\r\n          this.payment.paymentStatus = PAYMENT_STATUS.PAID;\r\n          this.payment.paymentDate = new Date();\r\n          this.payment.paymentMethod = this.paymentMethod;\r\n          this.payment.amountReceive = this.paymentMethod.amount;\r\n          this.payment.amountDue = toPay;\r\n          // this.payment.paymentAttachmentReference = this.attachmentDocument.paymentAttachmentReference;\r\n\r\n          let endpoint = ENDPOINTS.accountingPaymentApprove;\r\n          if (this.isMultiple) {\r\n            endpoint = ENDPOINTS.accountingMultiplePaymentApprove;\r\n          } else if (this.isSpecial) {\r\n            endpoint = ENDPOINTS.accountingSpecialPaymentApprove;\r\n          }\r\n          this.apiService.save(endpoint, this.payment).subscribe((res: any) => {\r\n            this.sweetAlertService.customSuccessMessage(\r\n              \"Payment successfully processed.\"\r\n            );\r\n            // console.log('SAVED DATA: ', res);\r\n            this.router.navigate([\r\n              \"asc/page/accounting/payments/\",\r\n              `schedule-of-fees-${this.paymentTypeFromUrl}`,\r\n            ]);\r\n          });\r\n        }\r\n      });\r\n    } else {\r\n      this.sweetAlertService.customErrorMessage(\r\n        `Amount Received/Transferred is lower than Amount Due.`\r\n      );\r\n    }\r\n  }\r\n\r\n  comparePaymentType(value: any, selected: any): boolean {\r\n    if (value && selected) {\r\n      return value.paymentDescription === selected.paymentDescription;\r\n    }\r\n  }\r\n\r\n  selectProofOfPayment(res) {\r\n    this.selectedProofOfPayment = res;\r\n  }\r\n\r\n  // recompute() {\r\n  //   console.log('trigerring recompute... ', this.payment);\r\n\r\n  //   this.paymentTemp = this.payment;\r\n  //   let endpoint = ENDPOINTS.accountingRecompute;\r\n  //   if (this.isMultiple) {\r\n  //     endpoint = ENDPOINTS.accountingRecomputeMultiple;\r\n  //   } else if (this.isSpecial) {\r\n  //     endpoint = ENDPOINTS.accountingSpecialPaymentRecompute;\r\n  //   }\r\n  //   console.log('paymentMethod - ', this.paymentMethod);\r\n  //   this.payment.paymentMethod = this.paymentMethod;\r\n  //   this.payment.paymentDate = new Date();\r\n  //   this.payment.filename = this.attachmentDocument.filename;\r\n  //   this.payment.amountReceive = this.paymentMethod.amount;\r\n  //   this.payment.paymentAttachmentReference = this.attachmentDocument.paymentAttachmentReference;\r\n\r\n  //   this.apiService.save(endpoint, this.payment).subscribe((res: any) => {\r\n  //     this.payment = res;\r\n  //     this.payment.basicRate = this.paymentTemp.basicRate;\r\n  //     this.payment.vat = this.paymentTemp.vat;\r\n  //     this.payment.amountDue = this.paymentTemp.amountDue;\r\n  //     console.log('payment... ', this.payment);\r\n  //   }, (err: any) => {\r\n  //   });\r\n  // }\r\n\r\n  computeWithholding() {\r\n    if (this.payment) {\r\n      this.payment.withholdingTax = this.payment?.filedBirForm\r\n        ? this.payment.basicRate * 0.02\r\n        : 0;\r\n    }\r\n  }\r\n\r\n  getAmountDue(): number {\r\n    let amountDue = this.payment?.amountDue;\r\n    let withholding = this.payment?.withholdingTax;\r\n    let result = amountDue - withholding;\r\n    return result ? result : 0;\r\n  }\r\n\r\n  validatePaymentStatus(): boolean {\r\n    if (\r\n      this.payment?.paymentStatus !== PAYMENT_STATUS.PAID &&\r\n      this.payment?.paymentStatus !== PAYMENT_STATUS.UNPAID\r\n    ) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  comparePaymentMethod(value: any, selected: any): boolean {\r\n    if (value && selected) {\r\n      return value.paymentDescription === selected.paymentDescription;\r\n    }\r\n  }\r\n\r\n  selectFile(event) {\r\n    this.isShowUploadButton = false;\r\n\r\n    if (event.target.files[0]) {\r\n      this.fileSize = event.target.files[0].size;\r\n\r\n      if (this.fileSize > 15000000) {\r\n        this.sweetAlertService.customErrorMessage(\r\n          `Attachments' total file size should not exceed 15MB.`\r\n        );\r\n        event.target.value = \"\";\r\n        return;\r\n      } else {\r\n        this.isShowUploadButton = true;\r\n        const fileURL = URL.createObjectURL(event.target.files[0]);\r\n        this.previewDocument = true;\r\n\r\n        this.safeURL = this.sanitizer.bypassSecurityTrustResourceUrl(fileURL);\r\n\r\n        const reader = new FileReader();\r\n        const [file] = event.target.files;\r\n\r\n        reader.readAsDataURL(file);\r\n        reader.onload = () => {};\r\n\r\n        this.selectedFile = event.target.files[0];\r\n      }\r\n    }\r\n  }\r\n\r\n  viewDocument() {\r\n    if (this.uploadedPaymentFile) {\r\n      window.open(this.uploadedPaymentFile.fileURL);\r\n    } else {\r\n      window.open(this.attachmentDocument.fileURL);\r\n    }\r\n  }\r\n\r\n  uploadProofOfPayment() {\r\n    Swal.fire({\r\n      text: \"Are you sure you want to submit this as proof of payment?\",\r\n      icon: \"question\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Confirm\",\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.spinner.show();\r\n        let params = \"\";\r\n        params =\r\n          \"?&attachmentType=\" +\r\n          ATTACHMENT_TYPE.PAYMENT +\r\n          \"&submissionType=\" +\r\n          SUBMISSION_TYPE.ORIGINAL;\r\n        this.fileStorageService\r\n          .pushFileToStorage(\r\n            ENDPOINTS.attachmentDocument,\r\n            this.selectedFile,\r\n            params\r\n          )\r\n          .subscribe(\r\n            (res: any) => {\r\n              this.uploadedPaymentFile = res.responseData.data;\r\n              this.payment.paymentAttachmentReference = this.uploadedPaymentFile.paymentAttachmentReference;\r\n              this.addToAttachmentDocuments(this.uploadedPaymentFile);\r\n\r\n              this.hideSpinner();\r\n              this.sweetAlertService.customSuccessMessage(\r\n                \"Attachment successfully uploaded.\"\r\n              );\r\n              this.selectedFile = null;\r\n\r\n              this.getAttachmentDocument();\r\n            },\r\n            (err: any) => {\r\n              this.hideSpinner();\r\n              this.sweetAlertService.error(err);\r\n            },\r\n            () => {\r\n              // actions after subscription\r\n            }\r\n          );\r\n      } else {\r\n        this.selectedFile = null;\r\n      }\r\n    });\r\n  }\r\n\r\n  addToAttachmentDocuments(obj: any) {\r\n    this.attachmentDocument.paymentAttachmentReference =\r\n      obj.paymentAttachmentReference;\r\n    this.attachmentDocument.id = obj.id;\r\n    this.attachmentDocument.originalFilename = obj.originalFilename;\r\n    this.attachmentDocument.filename = obj.filename;\r\n    this.attachmentDocument.fileExtension = obj.fileExtension;\r\n    this.attachmentDocument.fileURL = obj.fileURL;\r\n    this.attachmentDocument.attachmentType = obj.attachmentType;\r\n    this.attachmentDocument.documentFormat = obj.documentFormat;\r\n  }\r\n\r\n  hideSpinner() {\r\n    setTimeout(() => {\r\n      this.spinner.hide();\r\n    }, 1);\r\n  }\r\n\r\n  getAttachmentDocument() {\r\n    this.spinner.show();\r\n\r\n    this.apiService\r\n      .findByParam(\r\n        ENDPOINTS.paymentAttachmentReference,\r\n        this.attachmentDocument.paymentAttachmentReference\r\n      )\r\n      .subscribe(\r\n        (res: any) => {\r\n          if (res) {\r\n            this.attachmentDocument = res.responseData.data;\r\n          }\r\n          this.hideSpinner();\r\n        },\r\n        (err: any) => {\r\n          this.hideSpinner();\r\n          console.error(err);\r\n        }\r\n      );\r\n  }\r\n\r\n  getAttachmentDocuments() {\r\n    this.apiService\r\n      .findByParam(\r\n        ENDPOINTS.attachmentDocument,\r\n        `brand-penalty-attachment-reference/${this.payment.paymentAttachmentReference}`\r\n      )\r\n      .subscribe((res: any) => {\r\n        if (res) {\r\n          this.attachmentDocument = res;\r\n        }\r\n        this.previewDocument = true;\r\n        this.safeURL = this.sanitizer.bypassSecurityTrustResourceUrl(\r\n          this.attachmentDocument.fileURL\r\n        );\r\n      });\r\n  }\r\n\r\n  navigateToList() {\r\n    if (\r\n      this.payment.paymentStatus === PAYMENT_STATUS.PAID ||\r\n      this.payment.paymentStatus === PAYMENT_STATUS.UNPAID\r\n    ) {\r\n      if (this.paymentTypeFromUrl) {\r\n        this.router.navigate([\r\n          \"asc/page/accounting/payments/\",\r\n          `schedule-of-fees-${this.paymentTypeFromUrl}`,\r\n        ]);\r\n      } else {\r\n        this.router.navigate([\"asc/page/accounting/payments/\"]);\r\n      }\r\n    } else {\r\n      Swal.fire({\r\n        text: \"Are you sure you want to go back to payment list?\",\r\n        icon: \"question\",\r\n        showCancelButton: true,\r\n        confirmButtonColor: \"#3085d6\",\r\n        cancelButtonColor: \"#d33\",\r\n        confirmButtonText: \"Confirm\",\r\n      }).then((result) => {\r\n        if (result.value) {\r\n          if (this.paymentTypeFromUrl) {\r\n            this.router.navigate([\r\n              \"asc/page/accounting/payments/\",\r\n              `schedule-of-fees-${this.paymentTypeFromUrl}`,\r\n            ]);\r\n          } else {\r\n            this.router.navigate([\"asc/page/accounting/payments/\"]);\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  getApplicationSingleMedia(\r\n    appFormReference = this.payment?.applicationForm?.appFormReference\r\n  ) {\r\n    if (this.payment?.applicationFormS2?.applicationForm?.refTypeOfMedium) {\r\n      appFormReference = this.payment?.applicationFormS2?.applicationForm\r\n        ?.appFormReference;\r\n    }\r\n    this.apiService\r\n      .findByParam(\r\n        ENDPOINTS.applicationSingleMedia,\r\n        `app-form-reference/${appFormReference}`\r\n      )\r\n      .subscribe(\r\n        (res: any) => {\r\n          if (res.responseData.data.length > 0) {\r\n            this.applicationSingleMedia = res.responseData.data[0];\r\n\r\n            this.typeOfMediumDisplay = `${this.applicationSingleMedia?.mediumExecution?.typeOfMedium?.description} (${this.applicationSingleMedia?.sizeLength})`;\r\n            if (this.isMultiple) {\r\n              this.multipleApplicationList.forEach((element, index) => {\r\n                if (element.appFormReference === appFormReference) {\r\n                  this.multipleApplicationList[index] = {\r\n                    ...this.multipleApplicationList[index],\r\n                    typeOfMediumDisplay: this.typeOfMediumDisplay,\r\n                  };\r\n                }\r\n              });\r\n              this.dataSource = new MatTableDataSource<any>(\r\n                this.multipleApplicationList\r\n              );\r\n              this.dataSource.paginator = this.paginator;\r\n            }\r\n          } else {\r\n            this.applicationSingleMedia = new ApplicationSingleMedia();\r\n            this.typeOfMediumDisplay = \"\";\r\n          }\r\n        },\r\n        (err: any) => {\r\n          this.applicationSingleMedia = new ApplicationSingleMedia();\r\n          this.typeOfMediumDisplay = \"\";\r\n        }\r\n      );\r\n  }\r\n\r\n  getMultimediaStatic(\r\n    appFormReference = this.payment?.applicationForm?.appFormReference\r\n  ) {\r\n    this.apiService\r\n      .findByParam(\r\n        ENDPOINTS.applicationMultimedia,\r\n        `app-form-reference/${appFormReference}`\r\n      )\r\n      .subscribe(\r\n        (res: any) => {\r\n          if (res.responseData.data.length > 0) {\r\n            const multimediaList = new Set(\r\n              res.responseData.data.map(\r\n                (mappedList) =>\r\n                  `${mappedList?.typeOfMedium?.description} (${mappedList?.multimediaSizeLength})`\r\n              )\r\n            );\r\n\r\n            this.typeOfMediumDisplay = \"\";\r\n            let mediaCtrl = 1;\r\n            for (const media of multimediaList) {\r\n              if (mediaCtrl !== multimediaList.size) {\r\n                this.typeOfMediumDisplay += `${media}, `;\r\n                mediaCtrl++;\r\n              } else {\r\n                this.typeOfMediumDisplay += media;\r\n              }\r\n            }\r\n\r\n            if (this.isMultiple) {\r\n              this.multipleApplicationList.forEach((element, index) => {\r\n                if (element.appFormReference === appFormReference) {\r\n                  this.multipleApplicationList[index] = {\r\n                    ...this.multipleApplicationList[index],\r\n                    typeOfMediumDisplay: this.typeOfMediumDisplay,\r\n                  };\r\n                }\r\n              });\r\n              this.dataSource = new MatTableDataSource<any>(\r\n                this.multipleApplicationList\r\n              );\r\n              this.dataSource.paginator = this.paginator;\r\n            }\r\n          } else {\r\n            this.typeOfMediumDisplay = \"\";\r\n          }\r\n        },\r\n        (err: any) => {\r\n          this.typeOfMediumDisplay = \"\";\r\n        }\r\n      );\r\n  }\r\n\r\n  getMultimediaMoving(\r\n    appFormReference = this.payment?.applicationForm?.appFormReference\r\n  ) {\r\n    this.apiService\r\n      .findByParam(\r\n        ENDPOINTS.applicationMultimedia,\r\n        `app-form-reference/${appFormReference}`\r\n      )\r\n      .subscribe(\r\n        (res: any) => {\r\n          if (res.responseData.data.length > 0) {\r\n            const multimediaList = new Set(\r\n              res.responseData.data.map(\r\n                (mappedList) =>\r\n                  `${mappedList?.typeOfMedium?.description} (${mappedList?.multimediaSizeLength})`\r\n              )\r\n            );\r\n\r\n            this.typeOfMediumDisplay = \"\";\r\n            let mediaCtrl = 1;\r\n            for (const media of multimediaList) {\r\n              if (mediaCtrl !== multimediaList.size) {\r\n                this.typeOfMediumDisplay += `${media}, `;\r\n                mediaCtrl++;\r\n              } else {\r\n                this.typeOfMediumDisplay += media;\r\n              }\r\n            }\r\n\r\n            if (this.isMultiple) {\r\n              this.multipleApplicationList.forEach((element, index) => {\r\n                if (element.appFormReference === appFormReference) {\r\n                  this.multipleApplicationList[index] = {\r\n                    ...this.multipleApplicationList[index],\r\n                    typeOfMediumDisplay: this.typeOfMediumDisplay,\r\n                  };\r\n                }\r\n              });\r\n              this.dataSource = new MatTableDataSource<any>(\r\n                this.multipleApplicationList\r\n              );\r\n              this.dataSource.paginator = this.paginator;\r\n            }\r\n          } else {\r\n            this.typeOfMediumDisplay = \"\";\r\n          }\r\n        },\r\n        (err: any) => {\r\n          this.typeOfMediumDisplay = \"\";\r\n        }\r\n      );\r\n  }\r\n\r\n  rejectPayment() {\r\n    Swal.fire({\r\n      text: \"Are you sure you want to reject this roof of payment?\",\r\n      icon: \"question\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Confirm\",\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.spinner.show();\r\n\r\n        let rejectEndpoint = ENDPOINTS.accountingReject;\r\n        if (this.isMultiple) {\r\n          rejectEndpoint = ENDPOINTS.accountingRejectMultiple;\r\n        } else if (this.isSpecial) {\r\n          rejectEndpoint = ENDPOINTS.accountingRejectSpecial;\r\n        }\r\n\r\n        this.apiService.save(rejectEndpoint, this.payment).subscribe(\r\n          (res: any) => {\r\n            this.hideSpinner();\r\n            this.sweetAlertService.customSuccessMessage(\r\n              \"Successfully rejected.\"\r\n            );\r\n\r\n            if (this.paymentTypeFromUrl) {\r\n              this.router.navigate([\r\n                \"asc/page/accounting/payments/\",\r\n                `schedule-of-fees-${this.paymentTypeFromUrl}`,\r\n              ]);\r\n            } else {\r\n              this.router.navigate([\"asc/page/accounting/payments/\"]);\r\n            }\r\n          },\r\n          (err: any) => {\r\n            this.hideSpinner();\r\n            this.sweetAlertService.error(err);\r\n          },\r\n          () => {\r\n            // actions after subscription\r\n          }\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  fetchMultimedia(): void {\r\n    let typeofMedium =\r\n      this.payment?.applicationForm.refTypeOfMedium ===\r\n      TYPE_OF_MEDIUM.MULTIMEDIA_MOVING\r\n        ? \"moving\"\r\n        : \"static\";\r\n    let endpoint =\r\n      ENDPOINTS.applicationMultimedia +\r\n      \"-\" +\r\n      typeofMedium +\r\n      \"/app-form-reference\";\r\n    this.apiService\r\n      .findByParam(endpoint, this.payment?.applicationForm.appFormReference)\r\n      .subscribe((multimedia) => {\r\n        if (multimedia) this.multimediaDTO = multimedia.responseData.data;\r\n      });\r\n  }\r\n}\r\n","<form>\r\n  <div class=\"container-fluid\">\r\n    <div class=\"row\" *ngIf=\"currentUser?.userRole.name=='ROLE_ACCOUNTING'\">\r\n      <div class=\"col-md-12 title\">\r\n        <mat-label>\r\n          <mat-icon>payment</mat-icon> PAYMENT\r\n        </mat-label>\r\n\r\n        <button class=\"button-right button-red\" mat-raised-button (click)=\"navigateToList()\">\r\n          <mat-icon>list</mat-icon> VIEW LIST OF PAYMENT\r\n        </button>\r\n      </div>\r\n    </div>\r\n    <div class=\"row mt-3\">\r\n      <mat-accordion class=\"headers-align\">\r\n        <mat-expansion-panel>\r\n          <mat-expansion-panel-header>\r\n            <mat-panel-title>\r\n              <i class=\"material-icons\">label_important</i> &nbsp;Preview\r\n            </mat-panel-title>\r\n            <mat-panel-description>\r\n              Application Details\r\n              <i class=\"material-icons\">visibility</i>\r\n            </mat-panel-description>\r\n          </mat-expansion-panel-header>\r\n          <br>\r\n          <app-add-payment-preview-application [previewS1Application]=\"payment?.applicationForm || payment?.multipleApplication\" [multimediaDTO]=\"multimediaDTO\"></app-add-payment-preview-application>\r\n        </mat-expansion-panel>\r\n      </mat-accordion>\r\n    </div>\r\n    <hr>\r\n\r\n    <form [formGroup]=\"paymentForm\">\r\n      <div class=\"row fields\">\r\n        <div class=\"col-md-12 title\" *ngIf=\"currentUser?.userRole?.name!='ROLE_ACCOUNTING'\">\r\n          <mat-label>\r\n            <mat-icon>payment</mat-icon>\r\n            {{payment?.paymentStatus!='PAID'&&safeURL!=undefined ? 'FOR APPROVAL' : payment?.paymentStatus}}\r\n          </mat-label>\r\n        </div>\r\n\r\n        <!--///////////////////////// ACCOUNTING /////////////////////////////-->\r\n        <div class=\"row\" *ngIf=\"currentUser.userRole.name=='ROLE_ACCOUNTING'\">\r\n          <mat-form-field class=\"col-md-6\" appearance=\"outline\">\r\n            <mat-label>Type Of Payment</mat-label>\r\n            <input matInput value=\"Schedule of Fees\" readonly>\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div class=\"col-md-6\" appearance=\"outline\">\r\n          <div class=\"col-md-12\" appearance=\"outline\" *ngIf=\"isForPayment || paymentTypeFromUrl === 'paid' || safeURL \">\r\n            <mat-label>Filename: </mat-label>\r\n            <br>\r\n            <input matInput [value]=\"attachmentDocument.originalFilename\" disabled\r\n              *ngIf=\"attachmentDocument.originalFilename\">\r\n            <input class=\"file-upload\" type=\"file\"\r\n              *ngIf=\"!attachmentDocument.originalFilename && this.paymentTypeFromUrl !== 'paid'\" accept=\".pdf\"\r\n              (change)=\"selectFile($event)\">\r\n            <br><br>\r\n          </div>\r\n\r\n          <div class=\"col-md-12\" appearance=\"outline\"\r\n            *ngIf=\"(isForPayment || this.paymentTypeFromUrl === 'paid' || safeURL) && (attachmentDocument?.paymentAttachmentReference || isShowUploadButton)\">\r\n\r\n            <button mat-raised-button class=\"button-red button-right\" (click)=\"viewDocument()\"\r\n              *ngIf=\"attachmentDocument?.paymentAttachmentReference\">\r\n              <mat-icon>open_in_new</mat-icon> VIEW DOCUMENT\r\n            </button>\r\n\r\n            &nbsp; &nbsp;\r\n\r\n            <button mat-raised-button class=\"button-red button-right\" (click)=\"uploadProofOfPayment()\"\r\n              [disabled]=\"!safeURL||!isShowUploadButton\"\r\n              *ngIf=\"isShowUploadButton && !attachmentDocument.originalFilename\">\r\n              <mat-icon>upload</mat-icon> UPLOAD\r\n            </button>\r\n            <br><br>\r\n          </div>\r\n          <div class=\"file-upload\" style=\"border: 1px solid red\" *ngIf=\"safeURL\"\r\n            [hidden]=\"payment?.paymentStatus === 'PAID' || payment?.paymentStatus === 'UNPAID'\">\r\n            <object [data]=\"safeURL\" type=\"application/pdf\" width=\"100%\" height=\"500\">\r\n              <iframe [src]=\"safeURL\" width=\"100%\" height=\"500\">\r\n                <p>This browser does not support PDF!</p>\r\n              </iframe>\r\n            </object>\r\n          </div>\r\n          <br>\r\n          <div class=\"row\">\r\n            <mat-form-field class=\"col-md-12\" appearance=\"outline\" [hidden]=\"isMultiple\">\r\n              <mat-label>Reference Number</mat-label>\r\n              <input matInput\r\n                [value]=\"payment?.applicationForm?.referenceCode || payment?.applicationFormS2?.applicationForm?.referenceCode\"\r\n                readonly>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n              <mat-label>Advertiser</mat-label>\r\n              <input matInput name=\"companyName\" readonly\r\n                [value]=\"payment?.applicationForm?.company?.companyName || payment?.multipleApplication?.company?.companyName || payment?.applicationFormS2?.applicationForm?.company?.companyName\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field class=\"col-md-12\" appearance=\"outline\" [hidden]=\"isMultiple\">\r\n              <mat-label>Ad Title - Medium (Length)</mat-label>\r\n              <textarea matInput name=\"refTypeOfMedium\"\r\n                [value]=\"payment?.applicationForm?.adTitle ? payment?.applicationForm?.adTitle + ' - ' + typeOfMediumDisplay : typeOfMediumDisplay || payment?.applicationFormS2?.applicationForm?.adTitle + ' - ' + typeOfMediumDisplay || payment?.applicationFormS2?.applicationForm?.adTitle + ' - ' + typeOfMediumDisplay\"\r\n                readonly></textarea>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n              <mat-label>Vatable Sales</mat-label>\r\n              <input class=\"numbers-input\" matInput [value]=\"payment?.basicRate | number : '1.2-2'\" readonly\r\n                step=\"0.01\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n              <mat-label>VAT</mat-label>\r\n              <input class=\"numbers-input\" matInput [value]=\"payment?.vat | number : '1.2-2'\" readonly>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n              <mat-label>Total Sales (VAT Inclusive)</mat-label>\r\n              <input class=\"numbers-input total\" matInput name=\"amount\" [value]=\"payment?.amountDue | number : '1.2-2'\"\r\n                readonly>\r\n            </mat-form-field>\r\n\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"col-md-6\" [hidden]=\"payment?.paymentStatus!='PAID'&&currentUser?.userRole?.name!='ROLE_ACCOUNTING'\">\r\n\r\n          <div class=\"row\">\r\n            <div *ngIf=\"isMultiple\">\r\n              <table mat-table [dataSource]=\"dataSource\" matSort>\r\n                <ng-container matColumnDef=\"referenceCode\">\r\n                  <th mat-header-cell *matHeaderCellDef> Reference Code </th>\r\n                  <td mat-cell *matCellDef=\"let element; let i = index\">{{element?.referenceCode}}</td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"adTitle\">\r\n                  <th mat-header-cell *matHeaderCellDef> Ad Title </th>\r\n                  <td mat-cell *matCellDef=\"let element; let i = index\">{{element?.adTitle}}</td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"mediumAndLength\">\r\n                  <th mat-header-cell *matHeaderCellDef> Medium And Length</th>\r\n                  <td mat-cell *matCellDef=\"let element; let i = index\">{{ element?.typeOfMediumDisplay }}</td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"amount\">\r\n                  <th mat-header-cell *matHeaderCellDef> Amount</th>\r\n                  <td mat-cell *matCellDef=\"let element; let i = index\">{{element?.amount | number : '1.2-2'}}</td>\r\n                </ng-container>\r\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n              </table>\r\n              <div class=\"no-record\" [hidden]=\"dataSource && dataSource?.data?.length > 0\">\r\n                No record found.\r\n              </div>\r\n              <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons></mat-paginator>\r\n            </div>\r\n\r\n            <span>\r\n              <mat-checkbox class=\"example-margin\" [(ngModel)]=\"payment && payment.filedBirForm\" formControlName=\"filedBirForm\"\r\n                (ngModelChange)=\"computeWithholding()\"\r\n                >\r\n                BIR Form 2307</mat-checkbox>\r\n            </span>\r\n            <!-- <b [hidden]=\"payment?.paymentStatus !== 'PAID' || !payment.filedBirForm\"><i class=\"material-icons\">check</i>\r\n              BIR Form 2307</b>\r\n            <b [hidden]=\"payment?.paymentStatus !== 'PAID' || payment.filedBirForm\"><i class=\"material-icons\">close</i>\r\n              BIR Form 2307</b> -->\r\n            <br><br>\r\n            <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n              <mat-label>Withholding Tax</mat-label>\r\n              <input matInput class=\"numbers-input\" name=\"vat\" [value]=\"payment?.withholdingTax | number : '1.2-2'\"\r\n                formControlName=\"withholdingTax\" readonly>\r\n            </mat-form-field>\r\n\r\n            <!-- <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n              <mat-label>Official Receipt No</mat-label>\r\n              <input matInput name=\"orNo\" [(ngModel)]=\"payment.officialReceiptNo\" [readonly]=\"!isForPayment\"\r\n                formControlName=\"orNo\" (keydown)=\"validateFieldService.numbersOnly($event)\">\r\n            </mat-form-field> -->\r\n\r\n            <!-- <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n              <mat-label>Amount Receive</mat-label>\r\n              <input matInput name=\"amountReceive\" type=\"number\" [(ngModel)]=\"payment.amountReceive\" formControlName=\"amountReceive\"\r\n              [readonly]=\"currentUser.userRole.name!='ROLE_ACCOUNTING'||payment?.paymentStatus=='PAID'\">\r\n            </mat-form-field> -->\r\n\r\n            <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n              <mat-label>Amount Due</mat-label>\r\n              <input class=\"numbers-input total\" matInput name=\"amount\"\r\n                [value]=\"getAmountDue() | number : '1.2-2'\" readonly>\r\n            </mat-form-field>\r\n\r\n            <div *ngIf=\"isMultiple\"><br>\r\n              <hr><br>\r\n            </div>\r\n\r\n            <!-- <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n              <mat-label>Payment Mode</mat-label>\r\n              <input matInput [value]=\"payment?.paymentMethod?.paymentType?.paymentDescription\" readonly> -->\r\n            <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n              <mat-label>Payment Mode</mat-label>\r\n              <mat-select class=\"col-md-4\" [(ngModel)]=\"paymentMethod.paymentType\" name=\"paymentType\"\r\n                [compareWith]=\"comparePaymentMethod\" formControlName=\"paymentType\" [disabled]=\"payment?.paymentStatus=='PAID' || payment?.paymentStatus=='UNPAID'\"\r\n                (selectionChange)=\"resetPaymentTypeValidation()\">\r\n                <mat-option *ngFor=\"let i of paymentTypeList\" [value]=\"i\" name=\"paymentType\">\r\n                  {{ i?.paymentDescription | uppercase }}\r\n                </mat-option>\r\n              </mat-select>\r\n            </mat-form-field>\r\n\r\n            <div *ngIf=\"paymentMethod?.paymentType?.paymentDescription ==='Cash' || paymentMethod?.paymentType?.paymentDescription ==='GCash' ||\r\n              paymentMethod?.paymentType?.paymentDescription ==='PayMaya'\">\r\n\r\n\r\n              <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n                <mat-label>Reference Number <span class=\"required-field\">\r\n                    <mat-icon>notification_important</mat-icon>\r\n                  </span></mat-label>\r\n                <input matInput [(ngModel)]=\"paymentMethod.referenceNo\" name=\"referenceNo\" formControlName=\"referenceNo\"\r\n                  [readonly]=\"currentUser.userRole.name!='ROLE_ACCOUNTING'||payment?.paymentStatus=='PAID'\"\r\n                  (blur)=\"paymentTypevalidator()\" (keyup)=\"paymentTypevalidator()\">\r\n              </mat-form-field>\r\n              <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n                <mat-label>Fund Transfer Date <span class=\"required-field\">\r\n                    <mat-icon>notification_important</mat-icon>\r\n                  </span></mat-label>\r\n                <input matInput placeholder=\"Date\" [matDatepicker]=\"paymentDate\" [min]=\"currentDate\"\r\n                  [(ngModel)]=\"paymentMethod.paymentDate\" name=\"paymentDate\" formControlName=\"paymentDate\"\r\n                  [readonly]=\"currentUser?.userRole.name!='ROLE_ACCOUNTING'||payment?.paymentStatus=='PAID'\"\r\n                  (dateChange)=\"paymentTypevalidator()\" (keyup)=\"paymentTypevalidator()\">\r\n                <mat-datepicker-toggle matSuffix [for]=\"paymentDate\" *ngIf=\"payment?.paymentStatus!=='PAID'\">\r\n                </mat-datepicker-toggle>\r\n                <mat-datepicker color=\"warn\" #paymentDate></mat-datepicker>\r\n              </mat-form-field>\r\n              <mat-form-field class=\"col-md-12\" appearance=\"outline\"\r\n                *ngIf=\"paymentMethod?.paymentType?.paymentDescription ==='PayMaya'\">\r\n                <mat-label>Confirmation Code <span class=\"required-field\">\r\n                    <mat-icon>notification_important</mat-icon>\r\n                  </span></mat-label>\r\n                <input matInput [(ngModel)]=\"paymentMethod.ccConfirmationCode\" name=\"ccConfirmationCode\"\r\n                  formControlName=\"ccConfirmationCode\"\r\n                  [readonly]=\"currentUser.userRole.name!='ROLE_ACCOUNTING'||payment?.paymentStatus=='PAID'\">\r\n              </mat-form-field>\r\n              <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n                <mat-label>Amount Transferred <span class=\"required-field\">\r\n                    <mat-icon>notification_important</mat-icon>\r\n                  </span></mat-label>\r\n                <input matInput [(ngModel)]=\"paymentMethod.amount\" name=\"amount\" formControlName=\"amount\"\r\n                  (keydown)=\"validateFieldService.numbersOnly($event)\" class=\"numbers-input\"\r\n                  [hidden]=\"currentUser.userRole.name!='ROLE_ACCOUNTING'||payment?.paymentStatus=='PAID'\"\r\n                  (blur)=\"paymentTypevalidator()\" (keyup)=\"paymentTypevalidator()\">\r\n\r\n                <input class=\"numbers-input total\" matInput name=\"amount\"\r\n                  [value]=\"paymentMethod?.amount | number : '1.2-2'\" readonly\r\n                  *ngIf=\"currentUser.userRole.name!='ROLE_ACCOUNTING'||payment?.paymentStatus=='PAID'\">\r\n              </mat-form-field>\r\n            </div>\r\n\r\n\r\n            <div class=\"row\" *ngIf=\"paymentMethod?.paymentType?.paymentDescription ==='Voucher'\">\r\n              <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n                <mat-label>Control Number <span class=\"required-field\">\r\n                    <mat-icon>notification_important</mat-icon>\r\n                  </span></mat-label>\r\n                <input matInput [(ngModel)]=\"paymentMethod.controlNo\" name=\"controlNo\" formControlName=\"controlNo\"\r\n                  [readonly]=\"currentUser.userRole.name!='ROLE_ACCOUNTING'||payment?.paymentStatus=='PAID'\"\r\n                  (blur)=\"paymentTypevalidator()\" (keyup)=\"paymentTypevalidator()\">\r\n              </mat-form-field>\r\n              <!-- <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n                <mat-label>Amount</mat-label>\r\n                <input matInput [(ngModel)]=\"paymentMethod.amount\" name=\"amount\" formControlName=\"amount\"\r\n                  (keydown)=\"validateFieldService.numbersOnly($event)\" class=\"numbers-input\"\r\n                  [readonly]=\"currentUser.userRole.name!='ROLE_ACCOUNTING'||payment?.paymentStatus=='PAID'\">\r\n              </mat-form-field> -->\r\n            </div>\r\n\r\n            <div class=\"row\"\r\n              *ngIf=\"paymentMethod?.paymentType?.paymentDescription ==='Bank' ||\r\n            paymentMethod?.paymentType?.paymentDescription ==='Credit Card' || paymentMethod?.paymentType?.paymentDescription ==='Check'\">\r\n\r\n              <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n                <mat-label>Bank Name <span class=\"required-field\">\r\n                    <mat-icon>notification_important</mat-icon>\r\n                  </span></mat-label>\r\n                <input matInput [(ngModel)]=\"paymentMethod.bankName\" name=\"bankName\" formControlName=\"bankName\"\r\n                  [readonly]=\"currentUser.userRole.name!='ROLE_ACCOUNTING'||payment?.paymentStatus=='PAID'\"\r\n                  (blur)=\"paymentTypevalidator()\" (keyup)=\"paymentTypevalidator()\">\r\n              </mat-form-field>\r\n              <mat-form-field class=\"col-md-12\" appearance=\"outline\"\r\n                *ngIf=\"paymentMethod?.paymentType?.paymentDescription ==='Credit Card'\">\r\n                <mat-label>Confirmation Code <span class=\"required-field\">\r\n                    <mat-icon>notification_important</mat-icon>\r\n                  </span></mat-label>\r\n                <input matInput [(ngModel)]=\"paymentMethod.ccConfirmationCode\" name=\"ccConfirmationCode\"\r\n                  formControlName=\"ccConfirmationCode\"\r\n                  [readonly]=\"currentUser.userRole.name!='ROLE_ACCOUNTING'||payment?.paymentStatus=='PAID'\"\r\n                  (blur)=\"paymentTypevalidator()\" (keyup)=\"paymentTypevalidator()\">\r\n              </mat-form-field>\r\n              <mat-form-field class=\"col-md-12\" appearance=\"outline\"\r\n                *ngIf=\"paymentMethod?.paymentType?.paymentDescription ==='Check'\">\r\n                <mat-label>Check Number <span class=\"required-field\">\r\n                    <mat-icon>notification_important</mat-icon>\r\n                  </span></mat-label>\r\n                <input matInput [(ngModel)]=\"paymentMethod.checkNo\" name=\"checkNo\" formControlName=\"checkNo\"\r\n                  [readonly]=\"currentUser.userRole.name!='ROLE_ACCOUNTING'||payment?.paymentStatus=='PAID'\"\r\n                  (blur)=\"paymentTypevalidator()\" (keyup)=\"paymentTypevalidator()\">\r\n              </mat-form-field>\r\n              <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n                <mat-label>Amount Transferred <span class=\"required-field\">\r\n                    <mat-icon>notification_important</mat-icon>\r\n                  </span></mat-label>\r\n                <input matInput [(ngModel)]=\"paymentMethod.amount\" name=\"amount\" class=\"numbers-input\"\r\n                  formControlName=\"amount\"\r\n                  [hidden]=\"currentUser.userRole.name!='ROLE_ACCOUNTING'||payment?.paymentStatus=='PAID'\"\r\n                  (blur)=\"paymentTypevalidator()\" (keyup)=\"paymentTypevalidator()\">\r\n\r\n                <input class=\"numbers-input total\" matInput name=\"amount\"\r\n                  [value]=\"paymentMethod?.amount | number : '1.2-2'\" readonly\r\n                  *ngIf=\"currentUser.userRole.name!='ROLE_ACCOUNTING'||payment?.paymentStatus=='PAID'\">\r\n              </mat-form-field>\r\n              <mat-form-field class=\"col-md-12\" appearance=\"outline\"\r\n                *ngIf=\"paymentMethod?.paymentType?.paymentDescription ==='Bank'\">\r\n                <mat-label>Branch <span class=\"required-field\">\r\n                    <mat-icon>notification_important</mat-icon>\r\n                  </span></mat-label>\r\n                <input matInput [(ngModel)]=\"paymentMethod.bankBranch\" name=\"withholdingTax\"\r\n                  formControlName=\"bankBranch\"\r\n                  [readonly]=\"currentUser.userRole.name!='ROLE_ACCOUNTING'||payment?.paymentStatus=='PAID'\"\r\n                  (blur)=\"paymentTypevalidator()\" (keyup)=\"paymentTypevalidator()\">\r\n              </mat-form-field>\r\n              <mat-form-field class=\"col-md-12\" appearance=\"outline\"\r\n                *ngIf=\"paymentMethod?.paymentType?.paymentDescription ==='Bank'\">\r\n                <mat-label>Deposited Date <span class=\"required-field\">\r\n                    <mat-icon>notification_important</mat-icon>\r\n                  </span></mat-label>\r\n                <input matInput placeholder=\"Date\" [matDatepicker]=\"paymentDate\" [(ngModel)]=\"paymentMethod.paymentDate\"\r\n                  name=\"paymentDate\" formControlName=\"paymentDate\" (dateChange)=\"paymentTypevalidator()\"\r\n                  (keyup)=\"paymentTypevalidator()\">\r\n                <mat-datepicker-toggle matSuffix [for]=\"paymentDate\"></mat-datepicker-toggle>\r\n                <mat-datepicker color=\"warn\" #paymentDate disabled=\"false\"></mat-datepicker>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n\r\n            <!--  <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n              <mat-label>Discount</mat-label>\r\n              <input matInput name=\"discount\" type=\"number\" [(ngModel)]=\"payment.discount\" formControlName=\"discount\"\r\n              [readonly]=\"currentUser.userRole.name!='ROLE_ACCOUNTING'||payment?.paymentStatus=='PAID'\">\r\n            </mat-form-field> -->\r\n\r\n\r\n            <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n              <mat-label>REMARKS</mat-label>\r\n              <!-- <textarea matInput [value]=\"payment?.remarks\" [readonly]=\"!isForPayment\"></textarea> -->\r\n              <textarea matInput [ngModel]=\"payment?.remarks\" (ngModelChange)=\"payment ? payment.remarks = $event : null\" formControlName=\"remarks\" name=\"remarks\"\r\n                [readonly]=\"currentUser.userRole.name!='ROLE_ACCOUNTING'||payment?.paymentStatus=='PAID'\"></textarea>\r\n            </mat-form-field>\r\n\r\n          </div>\r\n\r\n          <div *ngIf=\"selectedProofOfPayment === 2\">\r\n            <div class=\"row\">\r\n\r\n              <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n                <mat-label>Applicant Company Details</mat-label>\r\n                <input matInput name=\"companyName\" [readonly]=\"isForPayment\">\r\n              </mat-form-field>\r\n\r\n            </div>\r\n            <div class=\"row\">\r\n\r\n              <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n                <mat-label>Accumulated Amount to be settled</mat-label>\r\n                <input matInput name=\"length\" [readonly]=\"isForPayment\" class=\"numbers-input\">\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n\r\n          <div *ngIf=\"selectedProofOfPayment === 3\">\r\n            <div class=\"row\">\r\n\r\n              <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n                <mat-label>Client Company Details</mat-label>\r\n                <input matInput name=\"companyName\" [readonly]=\"isForPayment\">\r\n              </mat-form-field>\r\n\r\n            </div>\r\n            <div class=\"row\">\r\n\r\n              <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n                <mat-label>Accumulated Amount to be settled</mat-label>\r\n                <input matInput name=\"length\" [readonly]=\"isForPayment\" class=\"numbers-input\">\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"row\" *ngIf=\"currentUser?.userRole?.name=='ROLE_ACCOUNTING'&&payment?.paymentStatus!=='PAID'\">\r\n            <div class=\"col-md-12\">\r\n              <button class=\"button-right button-red\" mat-raised-button (click)=\"processPayment(payment?.remarks)\"\r\n                [hidden]=\"isDelinquent\"\r\n                [disabled]=\"(!paymentForm.valid || !payment?.paymentAttachmentReference || !isPaymentTypeValid)\r\n                && ((paymentMode?.toUpperCase() !== 'PROMISORRY NOTE' && paymentMethod.paymentType?.paymentDescription?.toUpperCase() !== 'PROMISORRY NOTE') || !payment.paymentAttachmentReference )\">\r\n                <mat-icon>offline_pin</mat-icon> PROCESS\r\n              </button>\r\n              <button mat-raised-button class=\"button-right button-red button-right__approve\" (click)=\"approvePenalty()\"\r\n                [disabled]=\"(!paymentForm.valid || !payment?.paymentAttachmentReference || !isPaymentTypeValid)\r\n              && ((paymentMode?.toUpperCase() !== 'PROMISORRY NOTE' && paymentMethod.paymentType?.paymentDescription?.toUpperCase() !== 'PROMISORRY NOTE') || !payment.paymentAttachmentReference )\"\r\n                *ngIf=\"isDelinquent\">\r\n                <i class=\"material-icons color__white\">task_alt</i> APPROVE\r\n              </button>\r\n              &nbsp;\r\n              <button mat-raised-button class=\"button-right button-red\" (click)=\"rejectPayment()\" *ngIf=\"isForApproval\">\r\n                <mat-icon>unpublished</mat-icon> REJECT\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <br>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</form>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AddPaymentComponent } from './add-payment.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AddPaymentComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AddPaymentRoutingModule { }\r\n"]}