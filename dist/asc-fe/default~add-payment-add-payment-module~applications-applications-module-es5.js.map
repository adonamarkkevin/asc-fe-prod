{"version":3,"sources":["webpack:///src/app/modules/pages/accounting/add-payment/add-payment-preview-application/add-payment-preview-application.component.ts","webpack:///src/app/modules/pages/accounting/add-payment/add-payment-preview-application/add-payment-preview-application.component.html","webpack:///src/app/modules/pages/accounting/add-payment/add-payment.module.ts","webpack:///src/app/modules/pages/accounting/add-payment/add-payment.component.ts","webpack:///src/app/modules/pages/accounting/add-payment/add-payment.component.html","webpack:///src/app/modules/pages/accounting/add-payment/add-payment-routing.module.ts"],"names":["AddPaymentPreviewApplicationComponent","apiService","applicationSingleMedia","multimediaDTO","presentorDetails","multimediaMovingList","multimediaStaticList","changes","getPresentorDetails","previewS1Application","applicationOwner","username","findByParam","userLogin","subscribe","res","responseData","data","AddPaymentModule","validateFieldService","AddPaymentComponent","sanitizer","formBuilder","route","router","fileStorageService","dataStorage","spinner","sweetAlertService","displayedColumns","multipleApplicationList","paymentTypeFromUrl","s1Application","attachmentDocument","typeOfMediumDisplay","paymentTypeList","attachmentDocuments","payment","paymentMethod","currentDate","Date","paymentTemp","isMultiple","isSpecial","isForPayment","isForApproval","isPaymentTypeValid","isDelinquent","isShowUploadButton","previewDocument","proofOfPayment","id","name","currentUser","getUserAccount","snapshot","paramMap","get","split","getPaymentList","setFormValidator","initData","toLowerCase","includes","params","userRole","ROLE_ACCOUNTING","getPaymentDetails","viewPayment","getMultipleApplicationList","paymentForm","group","paymentType","required","referenceNo","amount","paymentDate","bankName","bankBranch","controlNo","referenceNumber","typeOfMaterial","length","baseRate","vat","total","remarks","applicantCompanyDetails","accumulatedAmountToBeSettled","clientCompanyDetails","discount","amountReceive","filedBirForm","withholdingTax","orNo","ccConfirmationCode","checkNo","amountDue","customErrorMessage","fire","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","value","Number","save","approveDelinquentCompany","customSuccessMessage","navigate","err","error","message","responseMessage","a","b","paymentDescription","GCASH","CASH","PAYMAYA","BANK","VOUCHER","CHECK","PROMISORRY_NOTE","endpoint","paymentDetails","multiplePaymentDetails","paymentMultipleMonitoring","specialPaymentDetails","paymentSpecial","findAll","applicationForm","refTypeOfMedium","applicationFormS2","getApplicationSingleMedia","getMultimediaMoving","fetchMultimedia","getMultimediaStatic","paymentAttachmentReference","getAttachmentDocumentDisplay","ROLE_APPLICANT","creditCardIndex","findIndex","element","splice","paymentMultiple","paymentDetailsAccounting","paymentMode","res1","safeURL","bypassSecurityTrustResourceUrl","fileURL","getMultipleAppFormsWithNoRejected","forEach","multipleApplication","appFormReference","dataSource","paginator","amountTransferred","parseFloat","toString","toPay","paymentStatus","PAID","accountingPaymentApprove","accountingMultiplePaymentApprove","accountingSpecialPaymentApprove","selected","selectedProofOfPayment","basicRate","Math","round","toFixed","withholding","UNPAID","event","target","files","fileSize","size","URL","createObjectURL","reader","FileReader","file","readAsDataURL","onload","selectedFile","uploadedPaymentFile","window","open","show","PAYMENT","ORIGINAL","pushFileToStorage","addToAttachmentDocuments","hideSpinner","getAttachmentDocument","obj","originalFilename","filename","fileExtension","attachmentType","documentFormat","setTimeout","hide","console","mediumExecution","typeOfMedium","description","sizeLength","index","applicationMultimedia","multimediaList","Set","map","mappedList","multimediaSizeLength","mediaCtrl","media","rejectEndpoint","accountingReject","accountingRejectMultiple","accountingRejectSpecial","typeofMedium","MULTIMEDIA_MOVING","multimedia","computeWithholding","resetPaymentTypeValidation","routes","path","component","AddPaymentRoutingModule","forChild"],"mappings":"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","file":"default~add-payment-add-payment-module~applications-applications-module-es5.js","sourcesContent":["import { AfterViewInit, Component, Input, OnChanges, OnInit, SimpleChanges, ViewChild } from '@angular/core';\r\nimport { S1Application, UserAccount } from '@models';\r\nimport { ApiService } from '@services';\r\nimport { APP_DECISION_STATUS, ATTACHMENT_TYPE, ENDPOINTS, SUBMISSION_TYPE } from '@shared';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { ApplicationSingleMedia } from '../../../../../core/models/application-single-media.model';\r\n\r\n@Component({\r\n  selector: 'app-add-payment-preview-application',\r\n  templateUrl: './add-payment-preview-application.component.html',\r\n})\r\n\r\nexport class AddPaymentPreviewApplicationComponent implements OnChanges {\r\n  @Input() previewS1Application: any;\r\n  @Input() applicationSingleMedia = new ApplicationSingleMedia();\r\n  @Input() multimediaDTO: any = {};\r\n  presentorDetails = new UserAccount();\r\n\r\n  multimediaMovingList = [];\r\n  multimediaStaticList = [];\r\n\r\n  constructor(private apiService: ApiService) { }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes['previewS1Application']) {\r\n      this.getPresentorDetails();\r\n    }\r\n  }\r\n\r\n  getPresentorDetails() {\r\n    if (this.previewS1Application?.applicationOwner?.username) {\r\n      this.apiService.findByParam(ENDPOINTS.userLogin, this.previewS1Application.applicationOwner.username).subscribe(\r\n        (res: any) => {\r\n          if (res.responseData.data) {\r\n            this.presentorDetails = res.responseData.data;\r\n          }\r\n        });\r\n    }\r\n  }\r\n}\r\n","<!-- CLIENT INFO -->\r\n<div class=\"row fields\">\r\n  <h4>\r\n    <i class=\"material-icons\">preview</i> &nbsp;<b>CLIENT'S INFORMATION</b>\r\n    <hr>\r\n  </h4>\r\n  <div class=\"row\">\r\n    <div class=\"col-md-4\" appearance=\"outline\">\r\n      <mat-label>Client Company Name</mat-label>\r\n      <input matInput [value]=\"previewS1Application?.company?.companyName\" disabled>\r\n    </div>\r\n    <div class=\"col-md-4\" appearance=\"outline\">\r\n      <mat-label>Client Membership Affiliation</mat-label>\r\n      <input matInput [value]=\"previewS1Application?.company?.membersAffiliation?.description\" disabled>\r\n    </div>\r\n    <div class=\"col-md-4\" appearance=\"outline\"></div>\r\n  </div>\r\n\r\n  <div class=\"row\">\r\n    <div class=\"col-md-4\" appearance=\"outline\">\r\n      <mat-label>Brand</mat-label>\r\n      <input matInput [value]=\"previewS1Application?.brand?.description\" disabled>\r\n    </div>\r\n    <div class=\"col-md-4\" appearance=\"outline\">\r\n      <mat-label>Product</mat-label>\r\n      <input matInput [value]=\"previewS1Application?.product?.description\" disabled>\r\n    </div>\r\n    <div class=\"col-md-4\" appearance=\"outline\">\r\n      <mat-label>Category</mat-label>\r\n      <input matInput [value]=\"previewS1Application?.product?.category?.description\" disabled>\r\n    </div>\r\n  </div>\r\n\r\n  <br><br><br>\r\n</div>\r\n\r\n<!-- PRESENTOR INFO -->\r\n<div class=\"row fields\">\r\n  <h4>\r\n    <i class=\"material-icons\">preview</i> &nbsp;<b>PRESENTOR INFORMATION</b>\r\n    <hr>\r\n  </h4>\r\n  <div class=\"row\">\r\n    <div class=\"col-md-12 mb-3\" appearance=\"outline\">\r\n      <mat-label>Name of Applicant</mat-label>\r\n      <input matInput [value]=\"presentorDetails?.firstName+' '+presentorDetails?.lastName\" disabled>\r\n    </div>\r\n    <div class=\"col-md-12 mb-3\" appearance=\"outline\">\r\n      <mat-label>Company Name</mat-label>\r\n      <input matInput [value]=\"presentorDetails?.company?.companyName\" disabled>\r\n    </div>\r\n    <div class=\"col-md-12 mb-3\" appearance=\"outline\">\r\n      <mat-label>Address</mat-label>\r\n        <input matInput [value]=\"presentorDetails?.company?.completeAddress\" disabled>\r\n    </div>\r\n    \r\n    <div class=\"row col-md-12 mb-4\">\r\n      <div class=\"col-md-6 mb-3\" appearance=\"outline\">\r\n        <mat-label>Mobile Number</mat-label>\r\n        <input matInput [value]=\"presentorDetails?.mobileNumber\" disabled>\r\n      </div>\r\n      <div class=\"col-md-6 mb-3\" appearance=\"outline\">\r\n        <mat-label>Email Address</mat-label>\r\n        <input matInput [value]=\"presentorDetails?.username\" disabled>\r\n      </div>\r\n      <div class=\"col-md-6 mb-3\" appearance=\"outline\">\r\n        <mat-label>Telephone Number</mat-label>\r\n        <input matInput [value]=\"presentorDetails?.company?.companyTelephoneNo\" disabled>\r\n      </div>\r\n      <div class=\"col-md-6 mb-3\" appearance=\"outline\">\r\n        <mat-label>Alternate Telephone Number</mat-label>\r\n        <input matInput [value]=\"presentorDetails?.company?.companyTelephoneNo2\" disabled>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- MATERIAL INFO -->\r\n<div class=\"row fields\">\r\n  <h4>\r\n    <i class=\"material-icons\">preview</i> &nbsp;<b>MATERIAL INFORMATION</b>\r\n    <hr>\r\n  </h4>\r\n  <div class=\"row\">\r\n    <div class=\"col-md-12\" appearance=\"outline\">\r\n      <mat-label>Ad Title</mat-label>\r\n      <input matInput [value]=\"previewS1Application?.adTitle\" disabled>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"row\"><br></div>\r\n\r\n  <div class=\"row\">\r\n    <div class=\"col-md-6\" appearance=\"outline\">\r\n      <mat-label>Reference Code of Previously-Approved Material</mat-label>\r\n      <input matInput [value]=\"previewS1Application?.previousRefCode\" disabled>\r\n    </div>\r\n    <div class=\"col-md-6\" appearance=\"outline\">\r\n      <mat-label>Tag line</mat-label>\r\n      <input matInput [value]=\"previewS1Application?.tagLine\" disabled>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"row\" *ngIf=\"previewS1Application?.refTypeOfMedium\">\r\n    <div class=\"col-md-6\" appearance=\"outline\">\r\n      <mat-label>Media Type</mat-label>\r\n      <input matInput [value]=\"previewS1Application?.refTypeOfMedium\" disabled>\r\n    </div>\r\n  </div>\r\n  <div class=\"row\"><br></div>\r\n  <div class=\"row\" *ngIf=\"applicationSingleMedia\">\r\n    <div class=\"col-md-3\" appearance=\"outline\"\r\n      *ngIf=\"applicationSingleMedia?.mediumExecution?.typeOfMedium?.description\">\r\n      <mat-label>Type of Medium</mat-label>\r\n      <input matInput [value]=\"applicationSingleMedia?.mediumExecution?.typeOfMedium?.description\" disabled>\r\n    </div>\r\n    <div class=\"col-md-3\" appearance=\"outline\" *ngIf=\"applicationSingleMedia?.mediumExecution\">\r\n      <mat-label>Execution</mat-label>\r\n      <input matInput [value]=\"applicationSingleMedia?.mediumExecution?.typeOfExecution?.typeOfExecution\" disabled>\r\n    </div>\r\n    <div class=\"col-md-3\" appearance=\"outline\" *ngIf=\"applicationSingleMedia?.dialect\">\r\n      <mat-label>Language/Dialect</mat-label>\r\n      <input matInput [value]=\"applicationSingleMedia?.dialect?.dialect\" disabled>\r\n    </div>\r\n    <div class=\"col-md-3\" appearance=\"outline\" *ngIf=\"applicationSingleMedia?.others\">\r\n      <mat-label>Others</mat-label>\r\n      <input matInput [value]=\"applicationSingleMedia?.others\" disabled>\r\n    </div>\r\n    <div class=\"col-md-3\" appearance=\"outline\" *ngIf=\"applicationSingleMedia?.sizeLength\">\r\n      <mat-label>Size / Length</mat-label>\r\n      <input matInput [value]=\"applicationSingleMedia?.sizeLength\" disabled>\r\n    </div>\r\n    <div class=\"col-md-3\" appearance=\"outline\" *ngIf=\"applicationSingleMedia?.width\">\r\n      <mat-label>Width</mat-label>\r\n      <input matInput [value]=\"applicationSingleMedia?.width\" disabled>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Displaying Multimedia List -->\r\n  <div class=\"row\" *ngIf=\"multimediaDTO\">\r\n    <table class=\"mx-3 mb-3\">\r\n      <ng-container *ngIf=\"previewS1Application?.refTypeOfMedium === 'MULTIMEDIA-STATIC'\">\r\n        <ng-container *ngFor=\"let i of multimediaDTO.applicationMultimediaStaticList\">\r\n          <tr *ngIf=\"i?.hasSelected\" style=\"height: 30px;\">\r\n            <td class=\"col-md-4\">\r\n              <mat-checkbox [checked]=\"i?.hasSelected\" disabled>\r\n                {{i?.multimediaStaticMedium | uppercase}}\r\n              </mat-checkbox>\r\n            </td>\r\n            <td class=\"col-md-1\" \r\n              *ngIf=\"previewS1Application?.refTypeOfMedium === 'MULTIMEDIA-STATIC' && i?.multimediaStaticMedium !== 'digital static'\">\r\n              Size\r\n            </td>\r\n            <td class=\"col-md-2\">\r\n              <input matInput \r\n                *ngIf=\"previewS1Application?.refTypeOfMedium === 'MULTIMEDIA-STATIC' && i?.multimediaStaticMedium !== 'digital static'\" \r\n                [value]=\"i?.sizeLength\" disabled>\r\n            </td>\r\n            <td class=\"col-md-5\"></td>\r\n          </tr>\r\n        </ng-container>\r\n      </ng-container>\r\n\r\n      <ng-container *ngIf=\"previewS1Application?.refTypeOfMedium === 'MULTIMEDIA-MOVING'\">\r\n        <ng-container *ngFor=\"let i of multimediaDTO.applicationMultimediaMovingList\" style=\"height: 30px;\">\r\n          <tr *ngIf=\"i?.hasSelected\">\r\n            <td class=\"col-md-4\">\r\n              <mat-checkbox [checked]=\"true\" disabled>\r\n                {{i?.multimediaMovingMedium | uppercase}}\r\n              </mat-checkbox>\r\n            </td>\r\n            <td class=\"col-md-1\" *ngIf=\"previewS1Application?.refTypeOfMedium === 'MULTIMEDIA-MOVING'\">Length</td>\r\n            <td class=\"col-md-2\">\r\n              <input matInput *ngIf=\"previewS1Application?.refTypeOfMedium === 'MULTIMEDIA-MOVING'\" [value]=\"multimediaDTO?.sizeLength\" disabled>\r\n            </td>\r\n            <td class=\"col-md-5\"></td>\r\n          </tr>\r\n        </ng-container>\r\n      </ng-container>\r\n    </table>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { AddPaymentRoutingModule } from './add-payment-routing.module';\r\nimport { AddPaymentComponent } from './add-payment.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { AngularMaterialModule } from '@shared';\r\nimport { AddPaymentPreviewApplicationComponent } from './add-payment-preview-application/add-payment-preview-application.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [AddPaymentComponent, AddPaymentPreviewApplicationComponent],\r\n  imports: [\r\n    CommonModule,\r\n    AddPaymentRoutingModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    AngularMaterialModule,\r\n  ],\r\n  exports: [\r\n    AddPaymentComponent,\r\n    AddPaymentPreviewApplicationComponent\r\n  ]\r\n})\r\nexport class AddPaymentModule { }\r\n","import { Component, OnInit, Input, ViewChild } from '@angular/core';\r\nimport { S1Application, Payment, AttachmentDocument } from '@models';\r\nimport { ApiService, SweetAlertService, DataStorageService } from '@services';\r\nimport { APPLICATION_STATUSES, ATTACHMENT_TYPE, ENDPOINTS, PAYMENT_MODE, PAYMENT_STATUS, PAYMENT_TYPE, PAYMENT_TYPE_LIST, SUBMISSION_TYPE, TYPE_OF_MEDIUM, USER_ROLES } from '@shared';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport Swal from 'sweetalert2';\r\nimport { PaymentMethod } from 'app/core/models/payment-method.model';\r\nimport { MatTable, MatTableDataSource } from '@angular/material/table';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { ValidateFieldService } from 'app/core/services/validate-field.service';\r\nimport { FileStorageService } from 'app/core/services/file.storage.service';\r\nimport { ApplicationSingleMedia } from 'app/core/models/application-single-media.model';\r\n\r\n@Component({\r\n  selector: 'app-add-payment',\r\n  templateUrl: './add-payment.component.html',\r\n  styleUrls: ['./add-payment.component.scss']\r\n})\r\nexport class AddPaymentComponent implements OnInit {\r\n  @ViewChild(MatPaginator, { static: false }) paginator: MatPaginator;\r\n  @ViewChild(MatTable, { static: false }) table: MatTable<AddPaymentComponent>;\r\n  dataSource: MatTableDataSource<any>\r\n  displayedColumns: string[] = ['referenceCode', 'adTitle', 'mediumAndLength', 'amount'];\r\n  multipleApplicationList = [];\r\n  paymentTypeFromUrl = '';\r\n\r\n  @Input() s1Application = new S1Application();\r\n  attachmentDocument = new AttachmentDocument();\r\n  applicationSingleMedia = new ApplicationSingleMedia();\r\n  typeOfMediumDisplay = '';\r\n  paymentTypeList = [];\r\n  attachmentDocuments = [];\r\n  @Input() payment = new Payment();\r\n  paymentMethod = new PaymentMethod();\r\n  safeURL: any;\r\n  id: any;\r\n  paymentForm: FormGroup;\r\n  paymentTypeForm: FormGroup;\r\n  currentUser: any;\r\n  paymentMode: string;\r\n  selectedProofOfPayment: any;\r\n  currentDate = new Date();\r\n  paymentTemp = new Payment();\r\n  isMultiple = false;\r\n  isSpecial = false;\r\n  isForPayment = false;\r\n  isForApproval = false;\r\n  isPaymentTypeValid = false;\r\n  isDelinquent = false;\r\n  selectedFile: File;\r\n  fileSize: number;\r\n  uploadedPaymentFile: any;\r\n  isShowUploadButton = false;\r\n  previewDocument = false;\r\n\r\n  proofOfPayment = [\r\n    { id: 1, name: 'Schedule of Fees - Individual' },\r\n    { id: 2, name: 'Schedule of Fees - Multiple' },\r\n    { id: 3, name: 'Schedule of Fees - Special' },\r\n    { id: 4, name: 'Settlement of Delinquent Status' },\r\n    { id: 5, name: 'Settlement of Brand Penalties' },\r\n    { id: 6, name: 'Settlement of Company Penalties' }\r\n  ];\r\n  multimediaDTO: any = {};\r\n\r\n  constructor(\r\n    private apiService: ApiService,\r\n    private sanitizer: DomSanitizer,\r\n    private formBuilder: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private fileStorageService: FileStorageService,\r\n    public dataStorage: DataStorageService,\r\n    public validateFieldService: ValidateFieldService,\r\n    private spinner: NgxSpinnerService,\r\n    private sweetAlertService: SweetAlertService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.currentUser = this.dataStorage.getUserAccount();\r\n\r\n    this.paymentTypeFromUrl = this.route.snapshot.paramMap.get('id').split('-')[0];\r\n    this.id = this.route.snapshot.paramMap.get('id').split('-')[1];\r\n\r\n    this.getPaymentList();\r\n    this.setFormValidator();\r\n    this.initData();\r\n  }\r\n\r\n  initData() {\r\n    if (this.paymentTypeFromUrl?.toLowerCase() === 'for_payment') {\r\n      this.isForPayment = true;\r\n    }\r\n    if (this.paymentTypeFromUrl?.toLowerCase() === 'for_approval') {\r\n      this.isForApproval = true;\r\n    }\r\n\r\n    if (this.route?.snapshot?.paramMap?.get('status')?.includes('multiple-')) {\r\n      this.isMultiple = true;\r\n      this.paymentTypeFromUrl = 'multiple';\r\n    }\r\n    if (this.route?.snapshot?.params?.id.includes('special-')) {\r\n      this.isSpecial = true;\r\n      this.paymentTypeFromUrl = 'special';\r\n    }\r\n    if (this.route?.snapshot?.paramMap?.get('status')?.includes('delinquent-')) {\r\n      this.isDelinquent = true;\r\n      this.paymentTypeFromUrl = 'delinquent';\r\n    }\r\n\r\n    if (this.id !== 0 && this.currentUser.userRole.name === USER_ROLES.ROLE_ACCOUNTING) {\r\n      if (this.isForPayment || this.isSpecial || this.paymentTypeFromUrl?.toLowerCase() === 'unpaid' || this.isMultiple) {\r\n        this.getPaymentDetails();\r\n      } else {\r\n        this.viewPayment();\r\n      }\r\n      if (this.isMultiple) {\r\n        this.getMultipleApplicationList();\r\n      }\r\n    }\r\n  }\r\n\r\n  setFormValidator(): void {\r\n    this.paymentForm = this.formBuilder.group({\r\n      paymentType: ['', Validators.required],\r\n      referenceNo: [''],\r\n      amount: [''],\r\n      paymentDate: [''],\r\n      bankName: [''],\r\n      bankBranch: [''],\r\n      controlNo: [''],\r\n      referenceNumber: [''],\r\n      typeOfMaterial: [''],\r\n      length: [''],\r\n      baseRate: [''],\r\n      vat: [''],\r\n      total: [''],\r\n      remarks: [''],\r\n      applicantCompanyDetails: [''],\r\n      accumulatedAmountToBeSettled: [''],\r\n      clientCompanyDetails: [''],\r\n      discount: [''],\r\n      amountReceive: [''],\r\n      filedBirForm: [''],\r\n      withholdingTax: [0],\r\n      orNo: [''],\r\n      ccConfirmationCode: [''],\r\n      checkNo: ['']\r\n    });\r\n\r\n  }\r\n\r\n  approvePenalty() {\r\n    if (this.paymentMethod.amount < this.payment.amountDue) {\r\n      this.sweetAlertService.customErrorMessage(`Amount Received/Transferred is lower than Amount Due.`);\r\n    } else {\r\n      Swal.fire({\r\n        text: 'Are you sure you want to approve this Delinquent Company?',\r\n        icon: 'question',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        confirmButtonText: 'Confirm'\r\n      }).then((result) => {\r\n        if (result.value) {\r\n          this.payment.paymentMethod = this.paymentMethod;\r\n          this.payment.amountReceive = Number(this.paymentMethod.amount);\r\n\r\n          this.apiService.save(`${ENDPOINTS.approveDelinquentCompany}`, this.payment).subscribe((res: any) => {\r\n            this.sweetAlertService.customSuccessMessage('Delinquent company approved successfully.');\r\n            this.router.navigate(['asc/page/accounting/payments/', 'delinquent-companies']);\r\n          }, err => {\r\n            if (!err.error.message) {\r\n              err.error.message = err.error.responseMessage;\r\n            }\r\n            this.sweetAlertService.error(err);\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  paymentTypevalidator() {\r\n    let a = this.paymentMethod;\r\n    let b = this.paymentMethod?.paymentType?.paymentDescription;\r\n    if (b === PAYMENT_MODE.GCASH || b === PAYMENT_MODE.CASH) {\r\n      if (a.referenceNo && a.paymentDate && a.amount\r\n        ? this.isPaymentTypeValid = true : this.isPaymentTypeValid = false) { }\r\n    } else if (b === PAYMENT_MODE.PAYMAYA) {\r\n      if (a.referenceNo && a.paymentDate && a.amount && a.ccConfirmationCode\r\n        ? this.isPaymentTypeValid = true : this.isPaymentTypeValid = false) { }\r\n    } else if (b === PAYMENT_MODE.BANK) {\r\n      if (a.bankName && a.paymentDate && a.amount && a.bankBranch\r\n        ? this.isPaymentTypeValid = true : this.isPaymentTypeValid = false) { }\r\n    } else if (b === PAYMENT_MODE.VOUCHER) {\r\n      if (a.controlNo ? this.isPaymentTypeValid = true : this.isPaymentTypeValid = false) { }\r\n    \r\n    } else if (b === PAYMENT_MODE.CHECK) {\r\n      if (a.bankName && a.checkNo && a.amount\r\n        ? this.isPaymentTypeValid = true : this.isPaymentTypeValid = false) { }\r\n    }\r\n  }\r\n\r\n  resetPaymentTypeValidation() {\r\n    this.isPaymentTypeValid = false\r\n    if (this.paymentMethod?.paymentType?.paymentDescription === PAYMENT_MODE.PROMISORRY_NOTE) {\r\n      this.isPaymentTypeValid = true;\r\n    }\r\n  }\r\n\r\n  getPaymentDetails() {\r\n    let endpoint = ENDPOINTS.paymentDetails;\r\n    if (this.isMultiple) {\r\n      if (this.isForPayment) {\r\n        endpoint = ENDPOINTS.multiplePaymentDetails;\r\n      } else {\r\n        endpoint = ENDPOINTS.paymentMultipleMonitoring + `?groupId=`;\r\n      }\r\n    }\r\n    if (this.isSpecial) {\r\n      if (this.isForPayment) {\r\n        endpoint = ENDPOINTS.specialPaymentDetails;\r\n      } else {\r\n        endpoint = ENDPOINTS.paymentSpecial;\r\n      }\r\n    }\r\n\r\n    this.apiService.findAll(endpoint + this.id).subscribe((res: any) => {\r\n      if (res.responseData) {\r\n        this.payment = res.responseData.data;\r\n        this.payment ? (this.payment.filedBirForm = this.payment.filedBirForm ? this.payment.filedBirForm : false) : null;\r\n        this.paymentMethod = this.payment?.paymentMethod ? this.payment.paymentMethod : new PaymentMethod();\r\n      } else if (res.data) {\r\n        this.payment = res.data[0];\r\n        this.payment ? (this.payment.filedBirForm = this.payment.filedBirForm ? this.payment.filedBirForm : false) : null;\r\n        this.paymentMethod = this.payment?.paymentMethod ? this.payment.paymentMethod : new PaymentMethod();\r\n      } else {\r\n        this.payment = res;\r\n        this.payment ? (this.payment.filedBirForm = this.payment.filedBirForm ? this.payment.filedBirForm : false) : null;\r\n        this.paymentMethod = this.payment?.paymentMethod ? this.payment.paymentMethod : new PaymentMethod();\r\n      }\r\n\r\n      switch (this.payment?.applicationForm?.refTypeOfMedium || this.payment?.applicationFormS2?.applicationForm?.refTypeOfMedium) {\r\n        case 'SINGLE MEDIA':\r\n          this.getApplicationSingleMedia();\r\n          break;\r\n        case 'MULTIMEDIA-MOVING':\r\n          this.getMultimediaMoving();\r\n          this.fetchMultimedia();\r\n          break;\r\n        case 'MULTIMEDIA-STATIC':\r\n          this.getMultimediaStatic();\r\n          this.fetchMultimedia();\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n\r\n      if (this.payment?.paymentAttachmentReference) {\r\n        this.getAttachmentDocumentDisplay(this.payment.paymentAttachmentReference);\r\n      }\r\n      \r\n      // this.paymentTemp = this.payment;\r\n    });\r\n  }\r\n\r\n  getPaymentList() {\r\n    this.apiService.findAll(ENDPOINTS.paymentType).subscribe((res: any) => {\r\n      this.paymentTypeList = res.responseData.data;\r\n      if (this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT) {\r\n        const creditCardIndex = this.paymentTypeList\r\n          .findIndex((element) => element.paymentDescription === 'Credit Card');\r\n        this.paymentTypeList.splice(creditCardIndex, 1);\r\n      }\r\n    });\r\n  }\r\n\r\n  viewPayment() {\r\n    let endpoint = `${ENDPOINTS.payment}/application-form-id`;\r\n    if (this.isMultiple) {\r\n      if (this.isForPayment) {\r\n        endpoint = `${ENDPOINTS.paymentMultiple}/payment-multiple-details/multiple-application-id`;\r\n      } else if (this.isForApproval) {\r\n        endpoint = ENDPOINTS.paymentMultipleMonitoring;\r\n      }\r\n    } else {\r\n      if (this.paymentTypeFromUrl?.toLowerCase() === 'for_payment') {\r\n        if (this.currentUser.userRole.name === USER_ROLES.ROLE_ACCOUNTING) {\r\n          endpoint = `${ENDPOINTS.paymentDetailsAccounting}`;\r\n        } else {\r\n          endpoint = `${ENDPOINTS.paymentDetails}`;\r\n        }\r\n      }\r\n    }\r\n\r\n    this.apiService.findByParam(endpoint, this.id).subscribe((res: any) => {\r\n      if (res.responseData) {\r\n        this.payment = res.responseData.data;\r\n        if (this.payment) {\r\n          this.payment.filedBirForm = this.payment.filedBirForm ? this.payment.filedBirForm : false;\r\n        }\r\n      } else {\r\n        this.payment = res;\r\n        if (this.payment) {\r\n          this.payment.filedBirForm = this.payment.filedBirForm ? this.payment.filedBirForm : false;\r\n        }\r\n      }\r\n\r\n      this.paymentMethod = this.payment?.paymentMethod ? this.payment.paymentMethod : new PaymentMethod();\r\n      this.paymentMode = this.paymentMethod?.paymentType?.paymentDescription;\r\n      // this.paymentTemp = this.payment;\r\n\r\n      if (this.payment?.paymentAttachmentReference) {\r\n        this.getAttachmentDocumentDisplay(this.payment.paymentAttachmentReference);\r\n      }\r\n\r\n      switch (this.payment?.applicationForm?.refTypeOfMedium || this.payment?.applicationFormS2?.applicationForm?.refTypeOfMedium) {\r\n        case 'SINGLE MEDIA':\r\n          this.getApplicationSingleMedia();\r\n          break;\r\n        case 'MULTIMEDIA-MOVING':\r\n          this.getMultimediaMoving();\r\n          this.fetchMultimedia();\r\n          break;\r\n        case 'MULTIMEDIA-STATIC':\r\n          this.getMultimediaStatic();\r\n          this.fetchMultimedia();\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n\r\n    });\r\n  }\r\n\r\n  getAttachmentDocumentDisplay(paymentAttachmentReference) {\r\n    this.apiService.findByParam(ENDPOINTS.attachmentDocument, `payment-attachment-reference/` + paymentAttachmentReference)\r\n      .subscribe((res1: any) => {\r\n        if (res1.responseData.data) {\r\n          this.attachmentDocuments = res1.responseData.data;\r\n          this.attachmentDocument = res1.responseData.data;\r\n          this.safeURL = this.sanitizer.bypassSecurityTrustResourceUrl(this.attachmentDocument.fileURL);\r\n          // console.log('view attachmentDocument: ', this.attachmentDocuments);\r\n        }\r\n      }, (err: any) => {\r\n        this.attachmentDocuments = [];\r\n      });\r\n  }\r\n\r\n  getMultipleApplicationList() {\r\n    this.apiService.findAll(ENDPOINTS.getMultipleAppFormsWithNoRejected + this.id).subscribe((res: any) => {\r\n      this.multipleApplicationList = res.responseData.data;\r\n\r\n      this.multipleApplicationList.forEach((multipleApplication) => {\r\n        switch (multipleApplication?.refTypeOfMedium || multipleApplication?.applicationFormS2?.applicationForm?.refTypeOfMedium) {\r\n          case 'SINGLE MEDIA':\r\n            this.getApplicationSingleMedia(multipleApplication?.appFormReference);\r\n            break;\r\n          case 'MULTIMEDIA-MOVING':\r\n            this.getMultimediaMoving(multipleApplication?.appFormReference);\r\n            break;\r\n          case 'MULTIMEDIA-STATIC':\r\n            this.getMultimediaStatic(multipleApplication?.appFormReference);\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      });\r\n\r\n      this.dataSource = new MatTableDataSource<any>(this.multipleApplicationList);\r\n      this.dataSource.paginator = this.paginator;\r\n      if (this.multipleApplicationList.length) {\r\n        this.payment.multipleApplication = this.multipleApplicationList[0].multipleApplication;\r\n      }\r\n    }, (err: any) => {\r\n      this.sweetAlertService.error(err);\r\n    });\r\n  }\r\n\r\n  processPayment(remarks) {\r\n\r\n    const amountTransferred = Number.parseFloat(this.paymentMethod?.amount?.toString());\r\n    const toPay = this.payment.amountDue - this.payment?.withholdingTax;\r\n\r\n    if (this.paymentMethod.paymentType.paymentDescription === 'Voucher' ||\r\n      this.paymentMethod.paymentType.paymentDescription === 'Promisorry Note' ||\r\n      (this.paymentMethod.paymentType.paymentDescription !== 'Voucher'\r\n        && this.paymentMethod.paymentType.paymentDescription !== 'Promisorry Note'\r\n        && amountTransferred >= toPay)) {\r\n      Swal.fire({\r\n        text: 'Are you sure you want to process this PAYMENT?',\r\n        icon: 'question',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        confirmButtonText: 'Confirm'\r\n      }).then((result) => {\r\n        if (result.value) {\r\n          this.payment.paymentStatus = PAYMENT_STATUS.PAID;\r\n          this.payment.paymentDate = new Date();\r\n          this.payment.paymentMethod = this.paymentMethod;\r\n          this.payment.amountReceive = this.paymentMethod.amount;\r\n          // this.payment.paymentAttachmentReference = this.attachmentDocument.paymentAttachmentReference;\r\n\r\n          let endpoint = ENDPOINTS.accountingPaymentApprove;\r\n          if (this.isMultiple) {\r\n            endpoint = ENDPOINTS.accountingMultiplePaymentApprove;\r\n          } else if (this.isSpecial) {\r\n            endpoint = ENDPOINTS.accountingSpecialPaymentApprove;\r\n          }\r\n          this.apiService.save(endpoint, this.payment).subscribe((res: any) => {\r\n            this.sweetAlertService.customSuccessMessage('Payment successfully processed.');\r\n            // console.log('SAVED DATA: ', res);\r\n            this.router.navigate(['asc/page/accounting/payments/', `schedule-of-fees-${this.paymentTypeFromUrl}`]);\r\n          });\r\n        }\r\n      });\r\n    } else {\r\n      this.sweetAlertService.customErrorMessage(`Amount Received/Transferred is lower than Amount Due.`);\r\n    }\r\n  }\r\n\r\n  comparePaymentType(value: any, selected: any): boolean {\r\n    if (value && selected) {\r\n      return value.paymentDescription === selected.paymentDescription;\r\n    }\r\n  }\r\n\r\n  selectProofOfPayment(res) {\r\n    this.selectedProofOfPayment = res;\r\n  }\r\n\r\n  // recompute() {\r\n  //   console.log('trigerring recompute... ', this.payment);\r\n\r\n  //   this.paymentTemp = this.payment;\r\n  //   let endpoint = ENDPOINTS.accountingRecompute;\r\n  //   if (this.isMultiple) {\r\n  //     endpoint = ENDPOINTS.accountingRecomputeMultiple;\r\n  //   } else if (this.isSpecial) {\r\n  //     endpoint = ENDPOINTS.accountingSpecialPaymentRecompute;\r\n  //   }\r\n  //   console.log('paymentMethod - ', this.paymentMethod);\r\n  //   this.payment.paymentMethod = this.paymentMethod;\r\n  //   this.payment.paymentDate = new Date();\r\n  //   this.payment.filename = this.attachmentDocument.filename;\r\n  //   this.payment.amountReceive = this.paymentMethod.amount;\r\n  //   this.payment.paymentAttachmentReference = this.attachmentDocument.paymentAttachmentReference;\r\n\r\n  //   this.apiService.save(endpoint, this.payment).subscribe((res: any) => {\r\n  //     this.payment = res;\r\n  //     this.payment.basicRate = this.paymentTemp.basicRate;\r\n  //     this.payment.vat = this.paymentTemp.vat;\r\n  //     this.payment.amountDue = this.paymentTemp.amountDue;\r\n  //     console.log('payment... ', this.payment);\r\n  //   }, (err: any) => {\r\n  //   });\r\n  // }\r\n\r\n  computeWithholding() {\r\n    if (this.payment) {\r\n      this.payment.withholdingTax = this.payment?.filedBirForm ? this.payment.basicRate * 0.02 : 0;\r\n    }\r\n  }\r\n  \r\n  getAmountDue(): number {\r\n    let amountDue = Number((Math.round(this.payment?.amountDue * 100) / 100).toFixed(2));\r\n    let withholding = Number((Math.round(this.payment?.withholdingTax * 100) / 100).toFixed(2));\r\n    let result = amountDue - withholding;\r\n    return result ? result : 0;\r\n  }\r\n\r\n  validatePaymentStatus(): boolean {\r\n    if (this.payment?.paymentStatus !== PAYMENT_STATUS.PAID && this.payment?.paymentStatus !== PAYMENT_STATUS.UNPAID) {\r\n      return true;\r\n    } \r\n    return false;\r\n  }\r\n  \r\n  comparePaymentMethod(value: any, selected: any): boolean {\r\n    if (value && selected) {\r\n      return value.paymentDescription === selected.paymentDescription;\r\n    }\r\n  }\r\n\r\n  selectFile(event) {\r\n    this.isShowUploadButton = false;\r\n\r\n    if (event.target.files[0]) {\r\n      this.fileSize = event.target.files[0].size;\r\n\r\n      if (this.fileSize > 15000000) {\r\n        this.sweetAlertService.customErrorMessage(`Attachments' total file size should not exceed 15MB.`);\r\n        event.target.value = '';\r\n        return;\r\n\r\n      } else {\r\n        this.isShowUploadButton = true;\r\n        const fileURL = URL.createObjectURL(event.target.files[0]);\r\n        this.previewDocument = true;\r\n\r\n        this.safeURL = this.sanitizer.bypassSecurityTrustResourceUrl(fileURL);\r\n\r\n        const reader = new FileReader();\r\n        const [file] = event.target.files;\r\n\r\n        reader.readAsDataURL(file);\r\n        reader.onload = () => {\r\n        };\r\n\r\n        this.selectedFile = event.target.files[0];\r\n      }\r\n    }\r\n  }\r\n\r\n  viewDocument() {\r\n    if (this.uploadedPaymentFile) {\r\n      window.open(this.uploadedPaymentFile.fileURL);\r\n    } else {\r\n      window.open(this.attachmentDocument.fileURL);\r\n    }\r\n  }\r\n\r\n  uploadProofOfPayment() {\r\n    Swal.fire({\r\n      text: 'Are you sure you want to submit this as proof of payment?',\r\n      icon: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Confirm'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.spinner.show();\r\n        let params = '';\r\n        params = '?&attachmentType=' + ATTACHMENT_TYPE.PAYMENT + '&submissionType=' + SUBMISSION_TYPE.ORIGINAL;\r\n        this.fileStorageService.pushFileToStorage(ENDPOINTS.attachmentDocument, this.selectedFile, params)\r\n          .subscribe((res: any) => {\r\n\r\n            this.uploadedPaymentFile = res.responseData.data;\r\n            this.payment.paymentAttachmentReference = this.uploadedPaymentFile.paymentAttachmentReference;\r\n            this.addToAttachmentDocuments(this.uploadedPaymentFile);\r\n\r\n            this.hideSpinner();\r\n            this.sweetAlertService.customSuccessMessage('Attachment successfully uploaded.');\r\n            this.selectedFile = null;\r\n\r\n            this.getAttachmentDocument();\r\n\r\n          }, (err: any) => {\r\n            this.hideSpinner();\r\n            this.sweetAlertService.error(err);\r\n          }, () => {\r\n            // actions after subscription\r\n          });\r\n      } else {\r\n        this.selectedFile = null;\r\n      }\r\n    });\r\n  }\r\n\r\n  addToAttachmentDocuments(obj: any) {\r\n    this.attachmentDocument.paymentAttachmentReference = obj.paymentAttachmentReference;\r\n    this.attachmentDocument.id = obj.id;\r\n    this.attachmentDocument.originalFilename = obj.originalFilename;\r\n    this.attachmentDocument.filename = obj.filename;\r\n    this.attachmentDocument.fileExtension = obj.fileExtension;\r\n    this.attachmentDocument.fileURL = obj.fileURL;\r\n    this.attachmentDocument.attachmentType = obj.attachmentType;\r\n    this.attachmentDocument.documentFormat = obj.documentFormat;\r\n  }\r\n\r\n  hideSpinner() {\r\n    setTimeout(() => {\r\n      this.spinner.hide();\r\n    }, 1);\r\n  }\r\n\r\n  getAttachmentDocument() {\r\n    this.spinner.show();\r\n\r\n    this.apiService.findByParam(ENDPOINTS.paymentAttachmentReference,\r\n      this.attachmentDocument.paymentAttachmentReference).subscribe(\r\n        (res: any) => {\r\n          if (res) {\r\n            this.attachmentDocument = res.responseData.data;\r\n          }\r\n          this.hideSpinner();\r\n        }, (err: any) => {\r\n          this.hideSpinner();\r\n          console.error(err);\r\n        });\r\n  }\r\n\r\n  getAttachmentDocuments() {\r\n    this.apiService.findByParam(ENDPOINTS.attachmentDocument, `brand-penalty-attachment-reference/${this.payment.paymentAttachmentReference}`).subscribe((res: any) => {\r\n      if (res) {\r\n        this.attachmentDocument = res;\r\n      }\r\n      this.previewDocument = true;\r\n      this.safeURL = this.sanitizer.bypassSecurityTrustResourceUrl(this.attachmentDocument.fileURL);\r\n    });\r\n  }\r\n\r\n  navigateToList() {\r\n    if (this.payment.paymentStatus === PAYMENT_STATUS.PAID || this.payment.paymentStatus === PAYMENT_STATUS.UNPAID) {\r\n      if (this.paymentTypeFromUrl) {\r\n        this.router.navigate(['asc/page/accounting/payments/', `schedule-of-fees-${this.paymentTypeFromUrl}`]);\r\n      } else {\r\n        this.router.navigate(['asc/page/accounting/payments/']);\r\n      }\r\n    } else {\r\n      Swal.fire({\r\n        text: 'Are you sure you want to go back to payment list?',\r\n        icon: 'question',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        confirmButtonText: 'Confirm'\r\n      }).then((result) => {\r\n        if (result.value) {\r\n          if (this.paymentTypeFromUrl) {\r\n            this.router.navigate(['asc/page/accounting/payments/', `schedule-of-fees-${this.paymentTypeFromUrl}`]);\r\n          } else {\r\n            this.router.navigate(['asc/page/accounting/payments/']);\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  getApplicationSingleMedia(appFormReference = this.payment?.applicationForm?.appFormReference) {\r\n    if (this.payment?.applicationFormS2?.applicationForm?.refTypeOfMedium) {\r\n      appFormReference = this.payment?.applicationFormS2?.applicationForm?.appFormReference;\r\n    }\r\n    this.apiService.findByParam(ENDPOINTS.applicationSingleMedia,\r\n      `app-form-reference/${appFormReference}`).subscribe(\r\n        (res: any) => {\r\n          if (res.responseData.data.length > 0) {\r\n            this.applicationSingleMedia = res.responseData.data[0];\r\n\r\n            this.typeOfMediumDisplay = `${this.applicationSingleMedia?.mediumExecution?.typeOfMedium?.description} (${this.applicationSingleMedia?.sizeLength})`;\r\n            if (this.isMultiple) {\r\n              this.multipleApplicationList.forEach((element, index) => {\r\n                if (element.appFormReference === appFormReference) {\r\n                  this.multipleApplicationList[index] = {\r\n                    ...this.multipleApplicationList[index],\r\n                    typeOfMediumDisplay: this.typeOfMediumDisplay\r\n                  };\r\n                }\r\n              });\r\n              this.dataSource = new MatTableDataSource<any>(this.multipleApplicationList);\r\n              this.dataSource.paginator = this.paginator;\r\n            }\r\n\r\n          } else {\r\n            this.applicationSingleMedia = new ApplicationSingleMedia();\r\n            this.typeOfMediumDisplay = '';\r\n          }\r\n        }, (err: any) => {\r\n          this.applicationSingleMedia = new ApplicationSingleMedia();\r\n          this.typeOfMediumDisplay = '';\r\n        });\r\n  }\r\n\r\n  getMultimediaStatic(appFormReference = this.payment?.applicationForm?.appFormReference) {\r\n    this.apiService.findByParam(ENDPOINTS.applicationMultimedia,\r\n      `app-form-reference/${appFormReference}`).subscribe(\r\n        (res: any) => {\r\n          if (res.responseData.data.length > 0) {\r\n            const multimediaList = new Set(res.responseData.data.map(mappedList => `${mappedList?.typeOfMedium?.description} (${mappedList?.multimediaSizeLength})`));\r\n\r\n            this.typeOfMediumDisplay = '';\r\n            let mediaCtrl = 1;\r\n            for (const media of multimediaList) {\r\n              if (mediaCtrl !== multimediaList.size) {\r\n                this.typeOfMediumDisplay += `${media}, `;\r\n                mediaCtrl++;\r\n              } else {\r\n                this.typeOfMediumDisplay += media;\r\n              }\r\n            }\r\n\r\n            if (this.isMultiple) {\r\n              this.multipleApplicationList.forEach((element, index) => {\r\n                if (element.appFormReference === appFormReference) {\r\n                  this.multipleApplicationList[index] = {\r\n                    ...this.multipleApplicationList[index],\r\n                    typeOfMediumDisplay: this.typeOfMediumDisplay\r\n                  };\r\n                }\r\n              });\r\n              this.dataSource = new MatTableDataSource<any>(this.multipleApplicationList);\r\n              this.dataSource.paginator = this.paginator;\r\n            }\r\n          } else {\r\n            this.typeOfMediumDisplay = '';\r\n          }\r\n        }, (err: any) => {\r\n          this.typeOfMediumDisplay = '';\r\n        });\r\n  }\r\n\r\n  getMultimediaMoving(appFormReference = this.payment?.applicationForm?.appFormReference) {\r\n    this.apiService.findByParam(ENDPOINTS.applicationMultimedia,\r\n      `app-form-reference/${appFormReference}`).subscribe(\r\n        (res: any) => {\r\n          if (res.responseData.data.length > 0) {\r\n            const multimediaList = new Set(res.responseData.data.map(mappedList => `${mappedList?.typeOfMedium?.description} (${mappedList?.multimediaSizeLength})`));\r\n\r\n            this.typeOfMediumDisplay = '';\r\n            let mediaCtrl = 1;\r\n            for (const media of multimediaList) {\r\n              if (mediaCtrl !== multimediaList.size) {\r\n                this.typeOfMediumDisplay += `${media}, `;\r\n                mediaCtrl++;\r\n              } else {\r\n                this.typeOfMediumDisplay += media;\r\n              }\r\n            }\r\n\r\n            if (this.isMultiple) {\r\n              this.multipleApplicationList.forEach((element, index) => {\r\n                if (element.appFormReference === appFormReference) {\r\n                  this.multipleApplicationList[index] = {\r\n                    ...this.multipleApplicationList[index],\r\n                    typeOfMediumDisplay: this.typeOfMediumDisplay\r\n                  };\r\n                }\r\n              });\r\n              this.dataSource = new MatTableDataSource<any>(this.multipleApplicationList);\r\n              this.dataSource.paginator = this.paginator;\r\n            }\r\n          } else {\r\n            this.typeOfMediumDisplay = '';\r\n          }\r\n        }, (err: any) => {\r\n          this.typeOfMediumDisplay = '';\r\n        });\r\n  }\r\n\r\n  rejectPayment() {\r\n    Swal.fire({\r\n      text: 'Are you sure you want to reject this roof of payment?',\r\n      icon: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Confirm'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.spinner.show();\r\n\r\n        let rejectEndpoint = ENDPOINTS.accountingReject;\r\n        if (this.isMultiple) {\r\n          rejectEndpoint = ENDPOINTS.accountingRejectMultiple;\r\n        } else if (this.isSpecial) {\r\n          rejectEndpoint = ENDPOINTS.accountingRejectSpecial;\r\n        }\r\n\r\n        this.apiService.save(rejectEndpoint, this.payment)\r\n          .subscribe((res: any) => {\r\n            this.hideSpinner();\r\n            this.sweetAlertService.customSuccessMessage('Successfully rejected.');\r\n\r\n            if (this.paymentTypeFromUrl) {\r\n              this.router.navigate(['asc/page/accounting/payments/', `schedule-of-fees-${this.paymentTypeFromUrl}`]);\r\n            } else {\r\n              this.router.navigate(['asc/page/accounting/payments/']);\r\n            }\r\n          }, (err: any) => {\r\n            this.hideSpinner();\r\n            this.sweetAlertService.error(err);\r\n          }, () => {\r\n            // actions after subscription\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  fetchMultimedia(): void{\r\n    let typeofMedium = this.payment?.applicationForm.refTypeOfMedium === TYPE_OF_MEDIUM.MULTIMEDIA_MOVING ? 'moving' : 'static';\r\n    let endpoint = ENDPOINTS.applicationMultimedia + '-' + typeofMedium + '/app-form-reference'\r\n    this.apiService.findByParam(endpoint, this.payment?.applicationForm.appFormReference).subscribe(\r\n      multimedia => {\r\n        if (multimedia) this.multimediaDTO = multimedia.responseData.data;\r\n      }\r\n    );\r\n  }\r\n}\r\n","<form>\r\n  <div class=\"container-fluid\">\r\n    <div class=\"row\" *ngIf=\"currentUser?.userRole.name=='ROLE_ACCOUNTING'\">\r\n      <div class=\"col-md-12 title\">\r\n        <mat-label>\r\n          <mat-icon>payment</mat-icon> PAYMENT\r\n        </mat-label>\r\n\r\n        <button class=\"button-right button-red\" mat-raised-button (click)=\"navigateToList()\">\r\n          <mat-icon>list</mat-icon> VIEW LIST OF PAYMENT\r\n        </button>\r\n      </div>\r\n    </div>\r\n    <div class=\"row mt-3\">\r\n      <mat-accordion class=\"headers-align\">\r\n        <mat-expansion-panel>\r\n          <mat-expansion-panel-header>\r\n            <mat-panel-title>\r\n              <i class=\"material-icons\">label_important</i> &nbsp;Preview\r\n            </mat-panel-title>\r\n            <mat-panel-description>\r\n              Application Details\r\n              <i class=\"material-icons\">visibility</i>\r\n            </mat-panel-description>\r\n          </mat-expansion-panel-header>\r\n          <br>\r\n          <app-add-payment-preview-application [previewS1Application]=\"payment?.applicationForm || payment?.multipleApplication\" [multimediaDTO]=\"multimediaDTO\"></app-add-payment-preview-application>\r\n        </mat-expansion-panel>\r\n      </mat-accordion>\r\n    </div>\r\n    <hr>\r\n\r\n    <form [formGroup]=\"paymentForm\">\r\n      <div class=\"row fields\">\r\n        <div class=\"col-md-12 title\" *ngIf=\"currentUser?.userRole?.name!='ROLE_ACCOUNTING'\">\r\n          <mat-label>\r\n            <mat-icon>payment</mat-icon>\r\n            {{payment?.paymentStatus!='PAID'&&safeURL!=undefined ? 'FOR APPROVAL' : payment?.paymentStatus}}\r\n          </mat-label>\r\n        </div>\r\n\r\n        <!--///////////////////////// ACCOUNTING /////////////////////////////-->\r\n        <div class=\"row\" *ngIf=\"currentUser.userRole.name=='ROLE_ACCOUNTING'\">\r\n          <mat-form-field class=\"col-md-6\" appearance=\"outline\">\r\n            <mat-label>Type Of Payment</mat-label>\r\n            <input matInput value=\"Schedule of Fees\" readonly>\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div class=\"col-md-6\" appearance=\"outline\">\r\n          <div class=\"col-md-12\" appearance=\"outline\" *ngIf=\"isForPayment || paymentTypeFromUrl === 'paid' || safeURL \">\r\n            <mat-label>Filename: </mat-label>\r\n            <br>\r\n            <input matInput [value]=\"attachmentDocument.originalFilename\" disabled\r\n              *ngIf=\"attachmentDocument.originalFilename\">\r\n            <input class=\"file-upload\" type=\"file\"\r\n              *ngIf=\"!attachmentDocument.originalFilename && this.paymentTypeFromUrl !== 'paid'\" accept=\".pdf\"\r\n              (change)=\"selectFile($event)\">\r\n            <br><br>\r\n          </div>\r\n\r\n          <div class=\"col-md-12\" appearance=\"outline\"\r\n            *ngIf=\"(isForPayment || this.paymentTypeFromUrl === 'paid' || safeURL) && (attachmentDocument?.paymentAttachmentReference || isShowUploadButton)\">\r\n\r\n            <button mat-raised-button class=\"button-red button-right\" (click)=\"viewDocument()\"\r\n              *ngIf=\"attachmentDocument?.paymentAttachmentReference\">\r\n              <mat-icon>open_in_new</mat-icon> VIEW DOCUMENT\r\n            </button>\r\n\r\n            &nbsp; &nbsp;\r\n\r\n            <button mat-raised-button class=\"button-red button-right\" (click)=\"uploadProofOfPayment()\"\r\n              [disabled]=\"!safeURL||!isShowUploadButton\"\r\n              *ngIf=\"isShowUploadButton && !attachmentDocument.originalFilename\">\r\n              <mat-icon>upload</mat-icon> UPLOAD\r\n            </button>\r\n            <br><br>\r\n          </div>\r\n          <div class=\"file-upload\" style=\"border: 1px solid red\" *ngIf=\"safeURL\"\r\n            [hidden]=\"payment?.paymentStatus === 'PAID' || payment?.paymentStatus === 'UNPAID'\">\r\n            <object [data]=\"safeURL\" type=\"application/pdf\" width=\"100%\" height=\"500\">\r\n              <iframe [src]=\"safeURL\" width=\"100%\" height=\"500\">\r\n                <p>This browser does not support PDF!</p>\r\n              </iframe>\r\n            </object>\r\n          </div>\r\n          <br>\r\n          <div class=\"row\">\r\n            <mat-form-field class=\"col-md-12\" appearance=\"outline\" [hidden]=\"isMultiple\">\r\n              <mat-label>Reference Number</mat-label>\r\n              <input matInput\r\n                [value]=\"payment?.applicationForm?.referenceCode || payment?.applicationFormS2?.applicationForm?.referenceCode\"\r\n                readonly>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n              <mat-label>Advertiser</mat-label>\r\n              <input matInput name=\"companyName\" readonly\r\n                [value]=\"payment?.applicationForm?.company?.companyName || payment?.multipleApplication?.company?.companyName || payment?.applicationFormS2?.applicationForm?.company?.companyName\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field class=\"col-md-12\" appearance=\"outline\" [hidden]=\"isMultiple\">\r\n              <mat-label>Ad Title - Medium (Length)</mat-label>\r\n              <textarea matInput name=\"refTypeOfMedium\"\r\n                [value]=\"payment?.applicationForm?.adTitle ? payment?.applicationForm?.adTitle + ' - ' + typeOfMediumDisplay : typeOfMediumDisplay || payment?.applicationFormS2?.applicationForm?.adTitle + ' - ' + typeOfMediumDisplay || payment?.applicationFormS2?.applicationForm?.adTitle + ' - ' + typeOfMediumDisplay\"\r\n                readonly></textarea>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n              <mat-label>Vatable Sales</mat-label>\r\n              <input class=\"numbers-input\" matInput [value]=\"payment?.basicRate | number : '1.2-2'\" readonly\r\n                step=\"0.01\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n              <mat-label>VAT</mat-label>\r\n              <input class=\"numbers-input\" matInput [value]=\"payment?.vat | number : '1.2-2'\" readonly>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n              <mat-label>Total Sales (VAT Inclusive)</mat-label>\r\n              <input class=\"numbers-input total\" matInput name=\"amount\" [value]=\"payment?.amountDue | number : '1.2-2'\"\r\n                readonly>\r\n            </mat-form-field>\r\n\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"col-md-6\" [hidden]=\"payment?.paymentStatus!='PAID'&&currentUser?.userRole?.name!='ROLE_ACCOUNTING'\">\r\n\r\n          <div class=\"row\">\r\n            <div *ngIf=\"isMultiple\">\r\n              <table mat-table [dataSource]=\"dataSource\" matSort>\r\n                <ng-container matColumnDef=\"referenceCode\">\r\n                  <th mat-header-cell *matHeaderCellDef> Reference Code </th>\r\n                  <td mat-cell *matCellDef=\"let element; let i = index\">{{element?.referenceCode}}</td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"adTitle\">\r\n                  <th mat-header-cell *matHeaderCellDef> Ad Title </th>\r\n                  <td mat-cell *matCellDef=\"let element; let i = index\">{{element?.adTitle}}</td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"mediumAndLength\">\r\n                  <th mat-header-cell *matHeaderCellDef> Medium And Length</th>\r\n                  <td mat-cell *matCellDef=\"let element; let i = index\">{{ element?.typeOfMediumDisplay }}</td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"amount\">\r\n                  <th mat-header-cell *matHeaderCellDef> Amount</th>\r\n                  <td mat-cell *matCellDef=\"let element; let i = index\">{{element?.amount | number : '1.2-2'}}</td>\r\n                </ng-container>\r\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n              </table>\r\n              <div class=\"no-record\" [hidden]=\"dataSource && dataSource?.data?.length > 0\">\r\n                No record found.\r\n              </div>\r\n              <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons></mat-paginator>\r\n            </div>\r\n\r\n            <span>\r\n              <mat-checkbox class=\"example-margin\" [(ngModel)]=\"payment && payment.filedBirForm\" formControlName=\"filedBirForm\"\r\n                (ngModelChange)=\"computeWithholding()\"\r\n                >\r\n                BIR Form 2307</mat-checkbox>\r\n            </span>\r\n            <!-- <b [hidden]=\"payment?.paymentStatus !== 'PAID' || !payment.filedBirForm\"><i class=\"material-icons\">check</i>\r\n              BIR Form 2307</b>\r\n            <b [hidden]=\"payment?.paymentStatus !== 'PAID' || payment.filedBirForm\"><i class=\"material-icons\">close</i>\r\n              BIR Form 2307</b> -->\r\n            <br><br>\r\n            <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n              <mat-label>Withholding Tax</mat-label>\r\n              <input matInput class=\"numbers-input\" name=\"vat\" [value]=\"payment?.withholdingTax | number : '1.2-2'\"\r\n                formControlName=\"withholdingTax\" readonly>\r\n            </mat-form-field>\r\n\r\n            <!-- <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n              <mat-label>Official Receipt No</mat-label>\r\n              <input matInput name=\"orNo\" [(ngModel)]=\"payment.officialReceiptNo\" [readonly]=\"!isForPayment\"\r\n                formControlName=\"orNo\" (keydown)=\"validateFieldService.numbersOnly($event)\">\r\n            </mat-form-field> -->\r\n\r\n            <!-- <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n              <mat-label>Amount Receive</mat-label>\r\n              <input matInput name=\"amountReceive\" type=\"number\" [(ngModel)]=\"payment.amountReceive\" formControlName=\"amountReceive\"\r\n              [readonly]=\"currentUser.userRole.name!='ROLE_ACCOUNTING'||payment?.paymentStatus=='PAID'\">\r\n            </mat-form-field> -->\r\n\r\n            <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n              <mat-label>Amount Due</mat-label>\r\n              <input class=\"numbers-input total\" matInput name=\"amount\"\r\n                [value]=\"getAmountDue() | number : '1.2-2'\" readonly>\r\n            </mat-form-field>\r\n\r\n            <div *ngIf=\"isMultiple\"><br>\r\n              <hr><br>\r\n            </div>\r\n\r\n            <!-- <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n              <mat-label>Payment Mode</mat-label>\r\n              <input matInput [value]=\"payment?.paymentMethod?.paymentType?.paymentDescription\" readonly> -->\r\n            <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n              <mat-label>Payment Mode</mat-label>\r\n              <mat-select class=\"col-md-4\" [(ngModel)]=\"paymentMethod.paymentType\" name=\"paymentType\"\r\n                [compareWith]=\"comparePaymentMethod\" formControlName=\"paymentType\" [disabled]=\"payment?.paymentStatus=='PAID' || payment?.paymentStatus=='UNPAID'\"\r\n                (selectionChange)=\"resetPaymentTypeValidation()\">\r\n                <mat-option *ngFor=\"let i of paymentTypeList\" [value]=\"i\" name=\"paymentType\">\r\n                  {{ i?.paymentDescription | uppercase }}\r\n                </mat-option>\r\n              </mat-select>\r\n            </mat-form-field>\r\n\r\n            <div *ngIf=\"paymentMethod?.paymentType?.paymentDescription ==='Cash' || paymentMethod?.paymentType?.paymentDescription ==='GCash' ||\r\n              paymentMethod?.paymentType?.paymentDescription ==='PayMaya'\">\r\n\r\n\r\n              <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n                <mat-label>Reference Number <span class=\"required-field\">\r\n                    <mat-icon>notification_important</mat-icon>\r\n                  </span></mat-label>\r\n                <input matInput [(ngModel)]=\"paymentMethod.referenceNo\" name=\"referenceNo\" formControlName=\"referenceNo\"\r\n                  [readonly]=\"currentUser.userRole.name!='ROLE_ACCOUNTING'||payment?.paymentStatus=='PAID'\"\r\n                  (blur)=\"paymentTypevalidator()\" (keyup)=\"paymentTypevalidator()\">\r\n              </mat-form-field>\r\n              <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n                <mat-label>Fund Transfer Date <span class=\"required-field\">\r\n                    <mat-icon>notification_important</mat-icon>\r\n                  </span></mat-label>\r\n                <input matInput placeholder=\"Date\" [matDatepicker]=\"paymentDate\" [min]=\"currentDate\"\r\n                  [(ngModel)]=\"paymentMethod.paymentDate\" name=\"paymentDate\" formControlName=\"paymentDate\"\r\n                  [readonly]=\"currentUser?.userRole.name!='ROLE_ACCOUNTING'||payment?.paymentStatus=='PAID'\"\r\n                  (dateChange)=\"paymentTypevalidator()\" (keyup)=\"paymentTypevalidator()\">\r\n                <mat-datepicker-toggle matSuffix [for]=\"paymentDate\" *ngIf=\"payment?.paymentStatus!=='PAID'\">\r\n                </mat-datepicker-toggle>\r\n                <mat-datepicker color=\"warn\" #paymentDate></mat-datepicker>\r\n              </mat-form-field>\r\n              <mat-form-field class=\"col-md-12\" appearance=\"outline\"\r\n                *ngIf=\"paymentMethod?.paymentType?.paymentDescription ==='PayMaya'\">\r\n                <mat-label>Confirmation Code <span class=\"required-field\">\r\n                    <mat-icon>notification_important</mat-icon>\r\n                  </span></mat-label>\r\n                <input matInput [(ngModel)]=\"paymentMethod.ccConfirmationCode\" name=\"ccConfirmationCode\"\r\n                  formControlName=\"ccConfirmationCode\"\r\n                  [readonly]=\"currentUser.userRole.name!='ROLE_ACCOUNTING'||payment?.paymentStatus=='PAID'\">\r\n              </mat-form-field>\r\n              <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n                <mat-label>Amount Transferred <span class=\"required-field\">\r\n                    <mat-icon>notification_important</mat-icon>\r\n                  </span></mat-label>\r\n                <input matInput [(ngModel)]=\"paymentMethod.amount\" name=\"amount\" formControlName=\"amount\"\r\n                  (keydown)=\"validateFieldService.numbersOnly($event)\" class=\"numbers-input\"\r\n                  [hidden]=\"currentUser.userRole.name!='ROLE_ACCOUNTING'||payment?.paymentStatus=='PAID'\"\r\n                  (blur)=\"paymentTypevalidator()\" (keyup)=\"paymentTypevalidator()\">\r\n\r\n                <input class=\"numbers-input total\" matInput name=\"amount\"\r\n                  [value]=\"paymentMethod?.amount | number : '1.2-2'\" readonly\r\n                  *ngIf=\"currentUser.userRole.name!='ROLE_ACCOUNTING'||payment?.paymentStatus=='PAID'\">\r\n              </mat-form-field>\r\n            </div>\r\n\r\n\r\n            <div class=\"row\" *ngIf=\"paymentMethod?.paymentType?.paymentDescription ==='Voucher'\">\r\n              <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n                <mat-label>Control Number <span class=\"required-field\">\r\n                    <mat-icon>notification_important</mat-icon>\r\n                  </span></mat-label>\r\n                <input matInput [(ngModel)]=\"paymentMethod.controlNo\" name=\"controlNo\" formControlName=\"controlNo\"\r\n                  [readonly]=\"currentUser.userRole.name!='ROLE_ACCOUNTING'||payment?.paymentStatus=='PAID'\"\r\n                  (blur)=\"paymentTypevalidator()\" (keyup)=\"paymentTypevalidator()\">\r\n              </mat-form-field>\r\n              <!-- <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n                <mat-label>Amount</mat-label>\r\n                <input matInput [(ngModel)]=\"paymentMethod.amount\" name=\"amount\" formControlName=\"amount\"\r\n                  (keydown)=\"validateFieldService.numbersOnly($event)\" class=\"numbers-input\"\r\n                  [readonly]=\"currentUser.userRole.name!='ROLE_ACCOUNTING'||payment?.paymentStatus=='PAID'\">\r\n              </mat-form-field> -->\r\n            </div>\r\n\r\n            <div class=\"row\"\r\n              *ngIf=\"paymentMethod?.paymentType?.paymentDescription ==='Bank' ||\r\n            paymentMethod?.paymentType?.paymentDescription ==='Credit Card' || paymentMethod?.paymentType?.paymentDescription ==='Check'\">\r\n\r\n              <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n                <mat-label>Bank Name <span class=\"required-field\">\r\n                    <mat-icon>notification_important</mat-icon>\r\n                  </span></mat-label>\r\n                <input matInput [(ngModel)]=\"paymentMethod.bankName\" name=\"bankName\" formControlName=\"bankName\"\r\n                  [readonly]=\"currentUser.userRole.name!='ROLE_ACCOUNTING'||payment?.paymentStatus=='PAID'\"\r\n                  (blur)=\"paymentTypevalidator()\" (keyup)=\"paymentTypevalidator()\">\r\n              </mat-form-field>\r\n              <mat-form-field class=\"col-md-12\" appearance=\"outline\"\r\n                *ngIf=\"paymentMethod?.paymentType?.paymentDescription ==='Credit Card'\">\r\n                <mat-label>Confirmation Code <span class=\"required-field\">\r\n                    <mat-icon>notification_important</mat-icon>\r\n                  </span></mat-label>\r\n                <input matInput [(ngModel)]=\"paymentMethod.ccConfirmationCode\" name=\"ccConfirmationCode\"\r\n                  formControlName=\"ccConfirmationCode\"\r\n                  [readonly]=\"currentUser.userRole.name!='ROLE_ACCOUNTING'||payment?.paymentStatus=='PAID'\"\r\n                  (blur)=\"paymentTypevalidator()\" (keyup)=\"paymentTypevalidator()\">\r\n              </mat-form-field>\r\n              <mat-form-field class=\"col-md-12\" appearance=\"outline\"\r\n                *ngIf=\"paymentMethod?.paymentType?.paymentDescription ==='Check'\">\r\n                <mat-label>Check Number <span class=\"required-field\">\r\n                    <mat-icon>notification_important</mat-icon>\r\n                  </span></mat-label>\r\n                <input matInput [(ngModel)]=\"paymentMethod.checkNo\" name=\"checkNo\" formControlName=\"checkNo\"\r\n                  [readonly]=\"currentUser.userRole.name!='ROLE_ACCOUNTING'||payment?.paymentStatus=='PAID'\"\r\n                  (blur)=\"paymentTypevalidator()\" (keyup)=\"paymentTypevalidator()\">\r\n              </mat-form-field>\r\n              <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n                <mat-label>Amount Transferred <span class=\"required-field\">\r\n                    <mat-icon>notification_important</mat-icon>\r\n                  </span></mat-label>\r\n                <input matInput [(ngModel)]=\"paymentMethod.amount\" name=\"amount\" class=\"numbers-input\"\r\n                  formControlName=\"amount\"\r\n                  [hidden]=\"currentUser.userRole.name!='ROLE_ACCOUNTING'||payment?.paymentStatus=='PAID'\"\r\n                  (blur)=\"paymentTypevalidator()\" (keyup)=\"paymentTypevalidator()\">\r\n\r\n                <input class=\"numbers-input total\" matInput name=\"amount\"\r\n                  [value]=\"paymentMethod?.amount | number : '1.2-2'\" readonly\r\n                  *ngIf=\"currentUser.userRole.name!='ROLE_ACCOUNTING'||payment?.paymentStatus=='PAID'\">\r\n              </mat-form-field>\r\n              <mat-form-field class=\"col-md-12\" appearance=\"outline\"\r\n                *ngIf=\"paymentMethod?.paymentType?.paymentDescription ==='Bank'\">\r\n                <mat-label>Branch <span class=\"required-field\">\r\n                    <mat-icon>notification_important</mat-icon>\r\n                  </span></mat-label>\r\n                <input matInput [(ngModel)]=\"paymentMethod.bankBranch\" name=\"withholdingTax\"\r\n                  formControlName=\"bankBranch\"\r\n                  [readonly]=\"currentUser.userRole.name!='ROLE_ACCOUNTING'||payment?.paymentStatus=='PAID'\"\r\n                  (blur)=\"paymentTypevalidator()\" (keyup)=\"paymentTypevalidator()\">\r\n              </mat-form-field>\r\n              <mat-form-field class=\"col-md-12\" appearance=\"outline\"\r\n                *ngIf=\"paymentMethod?.paymentType?.paymentDescription ==='Bank'\">\r\n                <mat-label>Deposited Date <span class=\"required-field\">\r\n                    <mat-icon>notification_important</mat-icon>\r\n                  </span></mat-label>\r\n                <input matInput placeholder=\"Date\" [matDatepicker]=\"paymentDate\" [(ngModel)]=\"paymentMethod.paymentDate\"\r\n                  name=\"paymentDate\" formControlName=\"paymentDate\" (dateChange)=\"paymentTypevalidator()\"\r\n                  (keyup)=\"paymentTypevalidator()\">\r\n                <mat-datepicker-toggle matSuffix [for]=\"paymentDate\"></mat-datepicker-toggle>\r\n                <mat-datepicker color=\"warn\" #paymentDate disabled=\"false\"></mat-datepicker>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n\r\n            <!--  <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n              <mat-label>Discount</mat-label>\r\n              <input matInput name=\"discount\" type=\"number\" [(ngModel)]=\"payment.discount\" formControlName=\"discount\"\r\n              [readonly]=\"currentUser.userRole.name!='ROLE_ACCOUNTING'||payment?.paymentStatus=='PAID'\">\r\n            </mat-form-field> -->\r\n\r\n\r\n            <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n              <mat-label>REMARKS</mat-label>\r\n              <!-- <textarea matInput [value]=\"payment?.remarks\" [readonly]=\"!isForPayment\"></textarea> -->\r\n              <textarea matInput [ngModel]=\"payment?.remarks\" (ngModelChange)=\"payment ? payment.remarks = $event : null\" formControlName=\"remarks\" name=\"remarks\"\r\n                [readonly]=\"currentUser.userRole.name!='ROLE_ACCOUNTING'||payment?.paymentStatus=='PAID'\"></textarea>\r\n            </mat-form-field>\r\n\r\n          </div>\r\n\r\n          <div *ngIf=\"selectedProofOfPayment === 2\">\r\n            <div class=\"row\">\r\n\r\n              <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n                <mat-label>Applicant Company Details</mat-label>\r\n                <input matInput name=\"companyName\" [readonly]=\"isForPayment\">\r\n              </mat-form-field>\r\n\r\n            </div>\r\n            <div class=\"row\">\r\n\r\n              <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n                <mat-label>Accumulated Amount to be settled</mat-label>\r\n                <input matInput name=\"length\" [readonly]=\"isForPayment\" class=\"numbers-input\">\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n\r\n          <div *ngIf=\"selectedProofOfPayment === 3\">\r\n            <div class=\"row\">\r\n\r\n              <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n                <mat-label>Client Company Details</mat-label>\r\n                <input matInput name=\"companyName\" [readonly]=\"isForPayment\">\r\n              </mat-form-field>\r\n\r\n            </div>\r\n            <div class=\"row\">\r\n\r\n              <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n                <mat-label>Accumulated Amount to be settled</mat-label>\r\n                <input matInput name=\"length\" [readonly]=\"isForPayment\" class=\"numbers-input\">\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"row\" *ngIf=\"currentUser?.userRole?.name=='ROLE_ACCOUNTING'&&payment?.paymentStatus!=='PAID'\">\r\n            <div class=\"col-md-12\">\r\n              <button class=\"button-right button-red\" mat-raised-button (click)=\"processPayment(payment?.remarks)\"\r\n                [hidden]=\"isDelinquent\"\r\n                [disabled]=\"(!paymentForm.valid || !payment?.paymentAttachmentReference || !isPaymentTypeValid)\r\n                && ((paymentMode?.toUpperCase() !== 'PROMISORRY NOTE' && paymentMethod.paymentType?.paymentDescription?.toUpperCase() !== 'PROMISORRY NOTE') || !payment.paymentAttachmentReference )\">\r\n                <mat-icon>offline_pin</mat-icon> PROCESS\r\n              </button>\r\n              <button mat-raised-button class=\"button-right button-red button-right__approve\" (click)=\"approvePenalty()\"\r\n                [disabled]=\"(!paymentForm.valid || !payment?.paymentAttachmentReference || !isPaymentTypeValid)\r\n              && ((paymentMode?.toUpperCase() !== 'PROMISORRY NOTE' && paymentMethod.paymentType?.paymentDescription?.toUpperCase() !== 'PROMISORRY NOTE') || !payment.paymentAttachmentReference )\"\r\n                *ngIf=\"isDelinquent\">\r\n                <i class=\"material-icons color__white\">task_alt</i> APPROVE\r\n              </button>\r\n              &nbsp;\r\n              <button mat-raised-button class=\"button-right button-red\" (click)=\"rejectPayment()\" *ngIf=\"isForApproval\">\r\n                <mat-icon>unpublished</mat-icon> REJECT\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <br>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</form>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AddPaymentComponent } from './add-payment.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AddPaymentComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AddPaymentRoutingModule { }\r\n"]}