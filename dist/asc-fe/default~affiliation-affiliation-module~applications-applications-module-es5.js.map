<<<<<<< HEAD
{"version":3,"sources":["webpack:///src/app/modules/pages/maintenance/affiliation/affiliation.component.ts","webpack:///src/app/modules/pages/maintenance/affiliation/affiliation.component.html"],"names":["AffiliationComponent","apiService","formBuilder","sweetAlertService","displayedColumns","statusList","yesNoList","affiliation","affiliationList","getList","setFormValidator","findAll","subscribe","res","responseData","data","dataSource","paginator","formListComponent","sort","member","toString","setValue","status","ACTIVE","save","undefined","success","err","error","resetFormValidator","findById","idForUpdate","fire","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","value","update","affiliationForm","group","description","required","markAsUntouched","markAsPristine","param","selected","deleteById","id","customSuccessMessage","confirmUpdate","getAffiliation"],"mappings":"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","file":"default~affiliation-affiliation-module~applications-applications-module-es5.js","sourcesContent":["import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ApiService, SweetAlertService } from '@services';\r\nimport { COMMON_FUNCTION, ENDPOINTS, STATUSES, YES_NO_OPTION } from '@shared';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Affiliation } from '@models';\r\nimport { FormListComponent } from '@fragments';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-affiliation',\r\n  templateUrl: './affiliation.component.html',\r\n  styleUrls: ['./affiliation.component.scss']\r\n})\r\nexport class AffiliationComponent implements OnInit {\r\n\r\n  @ViewChild(FormListComponent) formListComponent: FormListComponent;\r\n  dataSource: MatTableDataSource<Affiliation>;\r\n  displayedColumns: string[] = ['affiliationDesc', 'member', 'status'];\r\n  statusList = [...STATUSES];\r\n  yesNoList = [...YES_NO_OPTION];\r\n\r\n  affiliation = new Affiliation();\r\n  affiliationList = [];\r\n\r\n  affiliationForm: FormGroup;\r\n\r\n  constructor(\r\n    private apiService: ApiService,\r\n    private formBuilder: FormBuilder,\r\n    private sweetAlertService: SweetAlertService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.getList();\r\n    this.setFormValidator();\r\n  }\r\n\r\n  getList(): void {\r\n    this.apiService.findAll(ENDPOINTS.affiliation).subscribe((res: any) => {\r\n      this.affiliationList = res.responseData.data;\r\n      this.dataSource = new MatTableDataSource<Affiliation>(res.responseData.data);\r\n      this.dataSource.paginator = this.formListComponent.paginator;\r\n      this.dataSource.sort = this.formListComponent.sort;\r\n    });\r\n  }\r\n\r\n  save(): void {\r\n    if (this.affiliation.member.toString() === 'No') {\r\n      this.affiliation.member = this.setValue(this.affiliation.member);\r\n    }\r\n    this.affiliation.status = COMMON_FUNCTION.ACTIVE;\r\n    this.apiService.save(ENDPOINTS.affiliation, this.affiliation).subscribe(\r\n      (res: any) => {\r\n        if (res !== undefined) {\r\n          this.sweetAlertService.success(res);\r\n        }\r\n      }, (err: any) => {\r\n        this.sweetAlertService.error(err);\r\n      }, () => {\r\n        // actions after subscription\r\n        this.resetFormValidator();\r\n        this.getList();\r\n      });\r\n  }\r\n\r\n  getAffiliation(): void {\r\n    this.apiService.findById(ENDPOINTS.affiliation, this.formListComponent.idForUpdate).subscribe((res: any) => {\r\n      if (res) {\r\n        this.affiliation = res.responseData.data;\r\n      }\r\n    });\r\n  }\r\n\r\n  confirmUpdate() {\r\n    if (this.affiliation.status === 'INACTIVE') {\r\n      Swal.fire({\r\n        text: `Admin should manually change the company's membership affiliation value to its equivalent non member value. Continue?`,\r\n        icon: 'question',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        confirmButtonText: 'Confirm'\r\n      }).then((result) => {\r\n        if (result.value) {\r\n          this.update();\r\n        }\r\n      });\r\n    } else {\r\n      this.update();\r\n    }\r\n  }\r\n\r\n  update(): void {\r\n    this.affiliation.member = this.setValue(this.affiliation.member);\r\n    this.apiService.update(ENDPOINTS.affiliation, this.affiliation).subscribe(\r\n      (res: any) => {\r\n        if (res !== undefined) {\r\n          this.sweetAlertService.success(res);\r\n        }\r\n      }, (err: any) => {\r\n        this.sweetAlertService.error(err);\r\n      }, () => {\r\n        // actions after subscription\r\n        this.resetFormValidator();\r\n        this.getList();\r\n      });\r\n  }\r\n\r\n  setFormValidator(): void {\r\n    this.affiliation.status = COMMON_FUNCTION.ACTIVE;\r\n    this.affiliation.member = true;\r\n    this.affiliationForm = this.formBuilder.group({\r\n      description: ['', Validators.required],\r\n      member: ['', Validators.required],\r\n      status: [''],\r\n    });\r\n  }\r\n\r\n  resetFormValidator(): void {\r\n    this.affiliation = new Affiliation();\r\n    this.affiliation.status = COMMON_FUNCTION.ACTIVE;\r\n    this.affiliation.member = true;\r\n    this.affiliationForm.markAsUntouched();\r\n    this.affiliationForm.markAsPristine();\r\n  }\r\n\r\n  setValue(param): boolean {\r\n    return param === 'Yes' || param === true ? true : false;\r\n  }\r\n\r\n  compareMember(value: any, selected: any): boolean {\r\n    if (value) {\r\n      return value === (selected ? 'Yes' : 'No');\r\n    }\r\n  }\r\n\r\n  delete() {\r\n    Swal.fire({\r\n      text: 'Are you sure you want to delete this brand?',\r\n      icon: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Confirm'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.apiService.deleteById(ENDPOINTS.affiliation, this.affiliation.id).subscribe(\r\n          () => {\r\n            this.sweetAlertService.customSuccessMessage('Affiliation successfully deleted.');\r\n            this.resetFormValidator();\r\n            this.getList();\r\n          }\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<form>\r\n  <div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12 title\">\r\n        <mat-label>\r\n          <mat-icon>groups</mat-icon> Member's Affiliation\r\n        </mat-label>\r\n      </div>\r\n    </div>\r\n    <hr>\r\n\r\n    <form [formGroup]=\"affiliationForm\">\r\n      <div class=\"row\">\r\n        <mat-form-field class=\"col-md-8\" appearance=\"outline\">\r\n          <mat-label>Member's Affiliation <span class=\"required-field\">*</span></mat-label>\r\n          <input matInput [(ngModel)]=\"affiliation.description\" name=\"description\" formControlName=\"description\">\r\n        </mat-form-field>\r\n\r\n        <mat-form-field class=\"col-md-4\" appearance=\"outline\">\r\n          <mat-label>Member</mat-label>\r\n          <mat-select [(ngModel)]=\"affiliation.member\" name=\"member\" formControlName=\"member\"\r\n            [compareWith]=\"compareMember\">\r\n            <mat-option *ngFor=\"let i of yesNoList\" [value]=\"i\">\r\n              {{ i }}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field class=\"col-md-4\" appearance=\"outline\" *ngIf=\"affiliation.id\">\r\n          <mat-label>Status</mat-label>\r\n          <mat-select [(ngModel)]=\"affiliation.status\" name=\"status\" formControlName=\"status\">\r\n            <mat-option *ngFor=\"let i of statusList\" [value]=\"i.status\">\r\n              {{i.status}}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n    </form>\r\n\r\n    <app-form-action-buttons [childObject]=\"affiliation\" [childForm]=\"affiliationForm\" (saveFunction)=\"save()\"\r\n      (updateFunction)=\"confirmUpdate()\" (cancelFunction)=\"resetFormValidator()\" (deleteFunction)=\"delete()\"></app-form-action-buttons>\r\n    <br>\r\n    <app-form-list [dataSource]=\"dataSource\" [displayedColumns]=\"displayedColumns\"\r\n      (selectInListFunction)=\"getAffiliation()\"></app-form-list>\r\n\r\n  </div>\r\n</form>\r\n"]}
=======
{"version":3,"sources":["webpack:///src/app/modules/pages/maintenance/affiliation/affiliation.component.ts","webpack:///src/app/modules/pages/maintenance/affiliation/affiliation.component.html"],"names":["AffiliationComponent","apiService","formBuilder","sweetAlertService","displayedColumns","statusList","yesNoList","affiliation","affiliationList","getList","setFormValidator","findAll","subscribe","res","responseData","data","dataSource","paginator","formListComponent","sort","member","toString","setValue","status","ACTIVE","save","undefined","success","err","error","resetFormValidator","findById","idForUpdate","fire","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","value","update","affiliationForm","group","description","required","markAsUntouched","markAsPristine","param","selected","deleteById","id","customSuccessMessage","confirmUpdate","getAffiliation"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAAA;MAAA;;;MAAA;QAAA;MAAA;MAAA;;;MAAA;MAAA;MAAA;MAAA;;;MAAA;MAAA;MAAA;MAAA;;;MAAA;MAAA;MAAA;MAAA;;;MAAA;MAAA;MAAA;MAAA;;;MAAA;MAAA;MAAA;MAAA;;;MAAA;MAAA;MAAA;MAAA;;;MAAA;MAAA;MAAA;MAAA;;;MAAA;MAAA;;;MAAA;MAAA;MAAA;MAAA;;;MAAA;MAAA;MAAA;MAAA;;;MAAA;MAAA;MAAA;MAAA;;;MAAA;MAAA;MAAA;MAAA;;;MAAA;MAAA;MAAA;MAAA;;;MAAA;MAAA;MAAA;MAAA;;;MAAA;MAAA;MAAA;MAAA;;;MAAA;MAAA;MAAA;MAAA;;;MAAA;MAAA;MAAA;;;;UCsBY;;UACE;;UACF;;;;;;UAFwC;;UACtC;;UAAA;;;;;;UAQF;;UACE;;UACF;;;;;;UAFyC;;UACvC;;UAAA;;;;;;;;UAJN;;UACE;;UAAW;;UAAM;;UACjB;;UAAY;YAAA;;YAAA;;YAAA;UAAA;;UACV;;UAGF;;UACF;;;;;;UALc;;UAAA;;UACE;;UAAA;;;;MDjBjB;QAAA,IAAMA,oBAAN;UAaL,8BACUC,UADV,EAEUC,WAFV,EAGUC,iBAHV,EAG8C;YAAA;;YAFpC,KAAAF,UAAA,GAAAA,UAAA;YACA,KAAAC,WAAA,GAAAA,WAAA;YACA,KAAAC,iBAAA,GAAAA,iBAAA;YAZV,KAAAC,gBAAA,GAA6B,CAAC,iBAAD,EAAoB,QAApB,EAA8B,QAA9B,CAA7B;YACA,KAAAC,UAAA,sBAAiB,gDAAjB;YACA,KAAAC,SAAA,sBAAgB,qDAAhB;YAEA,KAAAC,WAAA,GAAc,IAAI,mDAAJ,EAAd;YACA,KAAAC,eAAA,GAAkB,EAAlB;UAQK;;UAjBA;YAAA;YAAA,OAmBL,oBAAW;cACT,KAAKC,OAAL;cACA,KAAKC,gBAAL;YACD;UAtBI;YAAA;YAAA,OAwBL,mBAAO;cAAA;;cACL,KAAKT,UAAL,CAAgBU,OAAhB,CAAwB,kDAAUJ,WAAlC,EAA+CK,SAA/C,CAAyD,UAACC,GAAD,EAAc;gBACrE,KAAI,CAACL,eAAL,GAAuBK,GAAG,CAACC,YAAJ,CAAiBC,IAAxC;gBACA,KAAI,CAACC,UAAL,GAAkB,IAAI,0EAAJ,CAAoCH,GAAG,CAACC,YAAJ,CAAiBC,IAArD,CAAlB;gBACA,KAAI,CAACC,UAAL,CAAgBC,SAAhB,GAA4B,KAAI,CAACC,iBAAL,CAAuBD,SAAnD;gBACA,KAAI,CAACD,UAAL,CAAgBG,IAAhB,GAAuB,KAAI,CAACD,iBAAL,CAAuBC,IAA9C;cACD,CALD;YAMD;UA/BI;YAAA;YAAA,OAiCL,gBAAI;cAAA;;cACF,IAAI,KAAKZ,WAAL,CAAiBa,MAAjB,CAAwBC,QAAxB,OAAuC,IAA3C,EAAiD;gBAC/C,KAAKd,WAAL,CAAiBa,MAAjB,GAA0B,KAAKE,QAAL,CAAc,KAAKf,WAAL,CAAiBa,MAA/B,CAA1B;cACD;;cACD,KAAKb,WAAL,CAAiBgB,MAAjB,GAA0B,wDAAgBC,MAA1C;cACA,KAAKvB,UAAL,CAAgBwB,IAAhB,CAAqB,kDAAUlB,WAA/B,EAA4C,KAAKA,WAAjD,EAA8DK,SAA9D,CACE,UAACC,GAAD,EAAc;gBACZ,IAAIA,GAAG,KAAKa,SAAZ,EAAuB;kBACrB,MAAI,CAACvB,iBAAL,CAAuBwB,OAAvB,CAA+Bd,GAA/B;gBACD;cACF,CALH,EAKK,UAACe,GAAD,EAAc;gBACf,MAAI,CAACzB,iBAAL,CAAuB0B,KAAvB,CAA6BD,GAA7B;cACD,CAPH,EAOK,YAAM;gBACP;gBACA,MAAI,CAACE,kBAAL;;gBACA,MAAI,CAACrB,OAAL;cACD,CAXH;YAYD;UAlDI;YAAA;YAAA,OAoDL,0BAAc;cAAA;;cACZ,KAAKR,UAAL,CAAgB8B,QAAhB,CAAyB,kDAAUxB,WAAnC,EAAgD,KAAKW,iBAAL,CAAuBc,WAAvE,EAAoFpB,SAApF,CAA8F,UAACC,GAAD,EAAc;gBAC1G,IAAIA,GAAJ,EAAS;kBACP,MAAI,CAACN,WAAL,GAAmBM,GAAG,CAACC,YAAJ,CAAiBC,IAApC;gBACD;cACF,CAJD;YAKD;UA1DI;YAAA;YAAA,OA4DL,yBAAgB;cAAA;;cACd,IAAI,KAAKR,WAAL,CAAiBgB,MAAjB,KAA4B,UAAhC,EAA4C;gBAC1C,mDAAKU,IAAL,CAAU;kBACRC,IAAI,yHADI;kBAERC,IAAI,EAAE,UAFE;kBAGRC,gBAAgB,EAAE,IAHV;kBAIRC,kBAAkB,EAAE,SAJZ;kBAKRC,iBAAiB,EAAE,MALX;kBAMRC,iBAAiB,EAAE;gBANX,CAAV,EAOGC,IAPH,CAOQ,UAACC,MAAD,EAAY;kBAClB,IAAIA,MAAM,CAACC,KAAX,EAAkB;oBAChB,MAAI,CAACC,MAAL;kBACD;gBACF,CAXD;cAYD,CAbD,MAaO;gBACL,KAAKA,MAAL;cACD;YACF;UA7EI;YAAA;YAAA,OA+EL,kBAAM;cAAA;;cACJ,KAAKpC,WAAL,CAAiBa,MAAjB,GAA0B,KAAKE,QAAL,CAAc,KAAKf,WAAL,CAAiBa,MAA/B,CAA1B;cACA,KAAKnB,UAAL,CAAgB0C,MAAhB,CAAuB,kDAAUpC,WAAjC,EAA8C,KAAKA,WAAnD,EAAgEK,SAAhE,CACE,UAACC,GAAD,EAAc;gBACZ,IAAIA,GAAG,KAAKa,SAAZ,EAAuB;kBACrB,MAAI,CAACvB,iBAAL,CAAuBwB,OAAvB,CAA+Bd,GAA/B;gBACD;cACF,CALH,EAKK,UAACe,GAAD,EAAc;gBACf,MAAI,CAACzB,iBAAL,CAAuB0B,KAAvB,CAA6BD,GAA7B;cACD,CAPH,EAOK,YAAM;gBACP;gBACA,MAAI,CAACE,kBAAL;;gBACA,MAAI,CAACrB,OAAL;cACD,CAXH;YAYD;UA7FI;YAAA;YAAA,OA+FL,4BAAgB;cACd,KAAKF,WAAL,CAAiBgB,MAAjB,GAA0B,wDAAgBC,MAA1C;cACA,KAAKjB,WAAL,CAAiBa,MAAjB,GAA0B,IAA1B;cACA,KAAKwB,eAAL,GAAuB,KAAK1C,WAAL,CAAiB2C,KAAjB,CAAuB;gBAC5CC,WAAW,EAAE,CAAC,EAAD,EAAK,0DAAWC,QAAhB,CAD+B;gBAE5C3B,MAAM,EAAE,CAAC,EAAD,EAAK,0DAAW2B,QAAhB,CAFoC;gBAG5CxB,MAAM,EAAE,CAAC,EAAD;cAHoC,CAAvB,CAAvB;YAKD;UAvGI;YAAA;YAAA,OAyGL,8BAAkB;cAChB,KAAKhB,WAAL,GAAmB,IAAI,mDAAJ,EAAnB;cACA,KAAKA,WAAL,CAAiBgB,MAAjB,GAA0B,wDAAgBC,MAA1C;cACA,KAAKjB,WAAL,CAAiBa,MAAjB,GAA0B,IAA1B;cACA,KAAKwB,eAAL,CAAqBI,eAArB;cACA,KAAKJ,eAAL,CAAqBK,cAArB;YACD;UA/GI;YAAA;YAAA,OAiHL,kBAASC,KAAT,EAAc;cACZ,OAAOA,KAAK,KAAK,KAAV,IAAmBA,KAAK,KAAK,IAA7B,GAAoC,IAApC,GAA2C,KAAlD;YACD;UAnHI;YAAA;YAAA,OAqHL,uBAAcR,KAAd,EAA0BS,QAA1B,EAAuC;cACrC,IAAIT,KAAJ,EAAW;gBACT,OAAOA,KAAK,MAAMS,QAAQ,GAAG,KAAH,GAAW,IAAzB,CAAZ;cACD;YACF;UAzHI;YAAA;YAAA,OA2HL,mBAAS;cAAA;;cACP,mDAAKlB,IAAL,CAAU;gBACRC,IAAI,EAAE,6CADE;gBAERC,IAAI,EAAE,UAFE;gBAGRC,gBAAgB,EAAE,IAHV;gBAIRC,kBAAkB,EAAE,SAJZ;gBAKRC,iBAAiB,EAAE,MALX;gBAMRC,iBAAiB,EAAE;cANX,CAAV,EAOGC,IAPH,CAOQ,UAACC,MAAD,EAAY;gBAClB,IAAIA,MAAM,CAACC,KAAX,EAAkB;kBAChB,MAAI,CAACzC,UAAL,CAAgBmD,UAAhB,CAA2B,kDAAU7C,WAArC,EAAkD,MAAI,CAACA,WAAL,CAAiB8C,EAAnE,EAAuEzC,SAAvE,CACE,YAAM;oBACJ,MAAI,CAACT,iBAAL,CAAuBmD,oBAAvB,CAA4C,mCAA5C;;oBACA,MAAI,CAACxB,kBAAL;;oBACA,MAAI,CAACrB,OAAL;kBACD,CALH;gBAOD;cACF,CAjBD;YAkBD;UA9II;;UAAA;QAAA;;;2BAAMT,oB,EAAoB,qH,EAAA,2H,EAAA,4H;QAAA,C;;;gBAApBA,oB;UAAoB,gC;UAAA;YAAA;wEAEpB,4D,EAAiB,I;;;;;;;;;;;;;;cChB9B;;cACE;;cACE;;cACE;;cACE;;cACE;;cAAU;;cAAM;;cAAY;;cAC9B;;cACF;;cACF;;cACA;;cAEA;;cACE;;cACE;;cACE;;cAAW;;cAAqB;;cAA6B;;cAAC;;cAAO;;cACrE;;cAAgB;gBAAA;cAAA;;cAAhB;;cACF;;cAEA;;cACE;;cAAW;;cAAM;;cACjB;;cAAY;gBAAA;cAAA;;cAEV;;cAGF;;cACF;;cAEA;;cAQF;;cACF;;cAEA;;cAAmF;gBAAA,OAAgB,IAAAyB,IAAA,EAAhB;cAAsB,CAAtB,EAAuB,gBAAvB,EAAuB;gBAAA,OACtF,IAAA8B,aAAA,EADsF;cACvE,CADgD,EAAuB,gBAAvB,EAAuB;gBAAA,OACnD,IAAAzB,kBAAA,EADmD;cAC/B,CADQ,EAAuB,gBAAvB,EAAuB;gBAAA,OACX,eADW;cACH,CADpB;;cACsB;;cACzG;;cACA;;cACE;gBAAA,OAAwB,IAAA0B,cAAA,EAAxB;cAAwC,CAAxC;;cAA0C;;cAE9C;;cACF;;;;cAnCU;;cAAA;;cAIgB;;cAAA;;cAKJ;;cAAA,4FAAgC,aAAhC,EAAgC,iBAAhC;;cAEE;;cAAA;;cAMsC;;cAAA;;cAWjC;;cAAA,yFAA2B,WAA3B,EAA2B,mBAA3B;;cAGV;;cAAA,uFAAyB,kBAAzB,EAAyB,oBAAzB;;;;;;;OD5BZ","file":"default~affiliation-affiliation-module~applications-applications-module-es5.js","sourcesContent":["import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ApiService, SweetAlertService } from '@services';\r\nimport { COMMON_FUNCTION, ENDPOINTS, STATUSES, YES_NO_OPTION } from '@shared';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Affiliation } from '@models';\r\nimport { FormListComponent } from '@fragments';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-affiliation',\r\n  templateUrl: './affiliation.component.html',\r\n  styleUrls: ['./affiliation.component.scss']\r\n})\r\nexport class AffiliationComponent implements OnInit {\r\n\r\n  @ViewChild(FormListComponent) formListComponent: FormListComponent;\r\n  dataSource: MatTableDataSource<Affiliation>;\r\n  displayedColumns: string[] = ['affiliationDesc', 'member', 'status'];\r\n  statusList = [...STATUSES];\r\n  yesNoList = [...YES_NO_OPTION];\r\n\r\n  affiliation = new Affiliation();\r\n  affiliationList = [];\r\n\r\n  affiliationForm: FormGroup;\r\n\r\n  constructor(\r\n    private apiService: ApiService,\r\n    private formBuilder: FormBuilder,\r\n    private sweetAlertService: SweetAlertService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.getList();\r\n    this.setFormValidator();\r\n  }\r\n\r\n  getList(): void {\r\n    this.apiService.findAll(ENDPOINTS.affiliation).subscribe((res: any) => {\r\n      this.affiliationList = res.responseData.data;\r\n      this.dataSource = new MatTableDataSource<Affiliation>(res.responseData.data);\r\n      this.dataSource.paginator = this.formListComponent.paginator;\r\n      this.dataSource.sort = this.formListComponent.sort;\r\n    });\r\n  }\r\n\r\n  save(): void {\r\n    if (this.affiliation.member.toString() === 'No') {\r\n      this.affiliation.member = this.setValue(this.affiliation.member);\r\n    }\r\n    this.affiliation.status = COMMON_FUNCTION.ACTIVE;\r\n    this.apiService.save(ENDPOINTS.affiliation, this.affiliation).subscribe(\r\n      (res: any) => {\r\n        if (res !== undefined) {\r\n          this.sweetAlertService.success(res);\r\n        }\r\n      }, (err: any) => {\r\n        this.sweetAlertService.error(err);\r\n      }, () => {\r\n        // actions after subscription\r\n        this.resetFormValidator();\r\n        this.getList();\r\n      });\r\n  }\r\n\r\n  getAffiliation(): void {\r\n    this.apiService.findById(ENDPOINTS.affiliation, this.formListComponent.idForUpdate).subscribe((res: any) => {\r\n      if (res) {\r\n        this.affiliation = res.responseData.data;\r\n      }\r\n    });\r\n  }\r\n\r\n  confirmUpdate() {\r\n    if (this.affiliation.status === 'INACTIVE') {\r\n      Swal.fire({\r\n        text: `Admin should manually change the company's membership affiliation value to its equivalent non member value. Continue?`,\r\n        icon: 'question',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        confirmButtonText: 'Confirm'\r\n      }).then((result) => {\r\n        if (result.value) {\r\n          this.update();\r\n        }\r\n      });\r\n    } else {\r\n      this.update();\r\n    }\r\n  }\r\n\r\n  update(): void {\r\n    this.affiliation.member = this.setValue(this.affiliation.member);\r\n    this.apiService.update(ENDPOINTS.affiliation, this.affiliation).subscribe(\r\n      (res: any) => {\r\n        if (res !== undefined) {\r\n          this.sweetAlertService.success(res);\r\n        }\r\n      }, (err: any) => {\r\n        this.sweetAlertService.error(err);\r\n      }, () => {\r\n        // actions after subscription\r\n        this.resetFormValidator();\r\n        this.getList();\r\n      });\r\n  }\r\n\r\n  setFormValidator(): void {\r\n    this.affiliation.status = COMMON_FUNCTION.ACTIVE;\r\n    this.affiliation.member = true;\r\n    this.affiliationForm = this.formBuilder.group({\r\n      description: ['', Validators.required],\r\n      member: ['', Validators.required],\r\n      status: [''],\r\n    });\r\n  }\r\n\r\n  resetFormValidator(): void {\r\n    this.affiliation = new Affiliation();\r\n    this.affiliation.status = COMMON_FUNCTION.ACTIVE;\r\n    this.affiliation.member = true;\r\n    this.affiliationForm.markAsUntouched();\r\n    this.affiliationForm.markAsPristine();\r\n  }\r\n\r\n  setValue(param): boolean {\r\n    return param === 'Yes' || param === true ? true : false;\r\n  }\r\n\r\n  compareMember(value: any, selected: any): boolean {\r\n    if (value) {\r\n      return value === (selected ? 'Yes' : 'No');\r\n    }\r\n  }\r\n\r\n  delete() {\r\n    Swal.fire({\r\n      text: 'Are you sure you want to delete this brand?',\r\n      icon: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Confirm'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.apiService.deleteById(ENDPOINTS.affiliation, this.affiliation.id).subscribe(\r\n          () => {\r\n            this.sweetAlertService.customSuccessMessage('Affiliation successfully deleted.');\r\n            this.resetFormValidator();\r\n            this.getList();\r\n          }\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<form>\r\n  <div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12 title\">\r\n        <mat-label>\r\n          <mat-icon>groups</mat-icon> Member's Affiliation\r\n        </mat-label>\r\n      </div>\r\n    </div>\r\n    <hr>\r\n\r\n    <form [formGroup]=\"affiliationForm\">\r\n      <div class=\"row\">\r\n        <mat-form-field class=\"col-md-8\" appearance=\"outline\">\r\n          <mat-label>Member's Affiliation <span class=\"required-field\">*</span></mat-label>\r\n          <input matInput [(ngModel)]=\"affiliation.description\" name=\"description\" formControlName=\"description\">\r\n        </mat-form-field>\r\n\r\n        <mat-form-field class=\"col-md-4\" appearance=\"outline\">\r\n          <mat-label>Member</mat-label>\r\n          <mat-select [(ngModel)]=\"affiliation.member\" name=\"member\" formControlName=\"member\"\r\n            [compareWith]=\"compareMember\">\r\n            <mat-option *ngFor=\"let i of yesNoList\" [value]=\"i\">\r\n              {{ i }}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field class=\"col-md-4\" appearance=\"outline\" *ngIf=\"affiliation.id\">\r\n          <mat-label>Status</mat-label>\r\n          <mat-select [(ngModel)]=\"affiliation.status\" name=\"status\" formControlName=\"status\">\r\n            <mat-option *ngFor=\"let i of statusList\" [value]=\"i.status\">\r\n              {{i.status}}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n    </form>\r\n\r\n    <app-form-action-buttons [childObject]=\"affiliation\" [childForm]=\"affiliationForm\" (saveFunction)=\"save()\"\r\n      (updateFunction)=\"confirmUpdate()\" (cancelFunction)=\"resetFormValidator()\" (deleteFunction)=\"delete()\"></app-form-action-buttons>\r\n    <br>\r\n    <app-form-list [dataSource]=\"dataSource\" [displayedColumns]=\"displayedColumns\"\r\n      (selectInListFunction)=\"getAffiliation()\"></app-form-list>\r\n\r\n  </div>\r\n</form>\r\n"]}
>>>>>>> 53dc5baaa640736d2cc27f9eee7c34fe4a9274c2
