{"version":3,"sources":["./src/app/modules/pages/maintenance/affiliation/affiliation.component.scss","./src/app/modules/pages/maintenance/type-of-document/type-of-document.component.ts","./src/app/modules/pages/maintenance/category/category.component.ts","./src/app/modules/pages/maintenance/affiliation/affiliation.component.html","./src/app/modules/pages/accounting/list-payment/list-payment.component.ts","./src/app/modules/pages/account/account-routing.module.ts","./src/app/modules/pages/maintenance/product/product-routing.module.ts","./src/app/modules/pages/maintenance/brands/brands.module.ts","./src/app/modules/pages/maintenance/payment-type/payment-type.component.html","./src/app/core/services/date.service.ts","./src/app/modules/pages/account/user-role/user-role.module.ts","./src/app/core/models/type-of-execution.model.ts","./src/app/core/models/voucher.model.ts","./src/app/modules/pages/accounting/list-payment/list-payment.component.scss","./src/app/modules/pages/maintenance/payment-type/payment-type.component.scss","./src/app/modules/pages/accounting/list-payment/list-payment.module.ts","./src/app/modules/pages/maintenance/type-of-document/type-of-document.component.scss","./src/app/modules/pages/maintenance/payment-type/payment-type.component.ts","./src/app/modules/pages/accounting/accounting-routing.module.ts","./src/app/modules/pages/account/user-role/user-role-routing.module.ts","./src/app/modules/pages/maintenance/type-of-reason/type-of-reason.component.scss","./src/app/modules/pages/maintenance/affiliation/affiliation.component.ts","./src/app/modules/pages/accounting/list-payment/list-payment.component.html","./src/app/modules/pages/account/user-role/user-role.component.ts","./src/app/core/models/s1-settlement-or-expiration-period.model.ts","./src/app/modules/pages/maintenance/type-of-document/type-of-document.component.html","./src/app/modules/pages/account/user-role/user-role.component.scss","./src/app/modules/pages/account/account.module.ts","./src/app/modules/pages/maintenance/category/category.component.html","./src/app/modules/pages/maintenance/type-of-reason/type-of-reason.component.ts","./src/app/modules/pages/maintenance/category/category.component.scss","./src/app/modules/pages/maintenance/product/product.module.ts","./src/app/modules/pages/accounting/accounting.module.ts","./src/app/modules/pages/maintenance/type-of-reason/type-of-reason.component.html","./src/app/modules/pages/account/user-role/user-role.component.html","./src/app/modules/pages/accounting/list-payment/list-payment-routing.module.ts","./src/app/modules/pages/maintenance/brands/brands-routing.module.ts","./src/app/core/models/report.model.ts"],"names":[],"mappings":"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","file":"common-es2015.js","sourcesContent":["export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcGFnZXMvbWFpbnRlbmFuY2UvYWZmaWxpYXRpb24vYWZmaWxpYXRpb24uY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { TypeOfDocument } from '@models';\r\nimport { COMMON_FUNCTION, ENDPOINTS, STATUSES } from '@shared';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ApiService, SweetAlertService } from '@services';\r\nimport { FormListComponent } from '@fragments';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-type-of-document',\r\n  templateUrl: './type-of-document.component.html',\r\n  styleUrls: ['./type-of-document.component.scss']\r\n})\r\nexport class TypeOfDocumentComponent implements OnInit {\r\n\r\n  @ViewChild(FormListComponent) formListComponent: FormListComponent;\r\n  dataSource: MatTableDataSource<TypeOfDocument>;\r\n  displayedColumns: string[] = ['typeOfDocumentDesc', 'dateOfLaunchEnable', 'expiresOnEnable', 'basedOnEnable', 'variantEnable', 'remarksEnable', 'inputEnable', 'status'];\r\n  \r\n  typeOfDocument = new TypeOfDocument();\r\n  typeOfDocumentList = [];\r\n  statusList = [...STATUSES];\r\n\r\n  isChecked = false;\r\n\r\n  typeOfDocumentForm: FormGroup;\r\n  hasInput = false;\r\n\r\n  constructor(\r\n    private apiService: ApiService,\r\n    private formBuilder: FormBuilder,\r\n    private sweetAlertService: SweetAlertService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.getList();\r\n    this.setFormValidator();\r\n  }\r\n\r\n  getList(): void {\r\n    this.apiService.findAll(ENDPOINTS.typeOfDocument).subscribe((res: any) => {\r\n      this.typeOfDocumentList = res.responseData.data;\r\n      this.dataSource = new MatTableDataSource<TypeOfDocument>(res.responseData.data);\r\n      this.dataSource.paginator = this.formListComponent.paginator;\r\n      this.dataSource.sort = this.formListComponent.sort;\r\n    });\r\n  }\r\n\r\n  save(): void {\r\n    this.apiService.save(ENDPOINTS.typeOfDocument, this.typeOfDocument).subscribe(\r\n      (res: any) => {\r\n        if (res !== undefined) {\r\n          this.sweetAlertService.success(res);\r\n        }\r\n      }, (err: any) => {\r\n        this.sweetAlertService.error(err);\r\n      }, () => {\r\n        // actions after subscription\r\n        this.resetFormValidator();\r\n        this.getList();\r\n      });\r\n  }\r\n\r\n  getTypeOfDocument(): void {\r\n    this.apiService.findById(ENDPOINTS.typeOfDocument, this.formListComponent.idForUpdate).subscribe((res: any) => {\r\n      if (res) {\r\n        this.typeOfDocument = res.responseData.data;\r\n      }\r\n    });\r\n  }\r\n\r\n  update(): void {\r\n    this.apiService.update(ENDPOINTS.typeOfDocument, this.typeOfDocument).subscribe(\r\n      (res: any) => {\r\n        if (res !== undefined) {\r\n          this.sweetAlertService.success(res);\r\n        }\r\n      }, (err: any) => {\r\n        this.sweetAlertService.error(err);\r\n      }, () => {\r\n        // actions after subscription\r\n        this.resetFormValidator();\r\n        this.getList();\r\n      });\r\n  }\r\n\r\n  setCheckboxValue() {\r\n    this.isChecked = !this.isChecked;\r\n  }\r\n\r\n  setFormValidator(): void {\r\n    this.typeOfDocument.status = COMMON_FUNCTION.ACTIVE;\r\n    this.typeOfDocumentForm = this.formBuilder.group({\r\n      description: ['', Validators.required],\r\n      dateOfLaunchEnable: [''],\r\n      expiresOnEnable: [''],\r\n      basedOnEnable: [''],\r\n      variantEnable: [''],\r\n      remarksEnable: [''],\r\n      inputEnable: [''],\r\n      status: [''],\r\n    });\r\n  }\r\n\r\n  resetFormValidator(): void {\r\n    this.typeOfDocument = new TypeOfDocument();\r\n    this.typeOfDocument.status = COMMON_FUNCTION.ACTIVE;\r\n    this.typeOfDocumentForm.markAsUntouched();\r\n    this.typeOfDocumentForm.markAsPristine();\r\n  }\r\n\r\n  delete() {\r\n    Swal.fire({\r\n      text: 'Are you sure you want to delete this type of document?',\r\n      icon: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Confirm'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.apiService.deleteById(ENDPOINTS.typeOfDocument, this.typeOfDocument.id).subscribe(\r\n          () => {\r\n            this.sweetAlertService.customSuccessMessage('Type of document successfully deleted.');\r\n            this.resetFormValidator();\r\n            this.getList();\r\n          }\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { FormListComponent } from '@fragments';\r\nimport { ApiService, SweetAlertService } from '@services';\r\nimport { COMMON_FUNCTION, ENDPOINTS, STATUSES } from '@shared';\r\nimport { Category } from '@models';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-category',\r\n  templateUrl: './category.component.html',\r\n  styleUrls: ['./category.component.scss']\r\n})\r\nexport class CategoryComponent implements OnInit {\r\n\r\n  @ViewChild(FormListComponent) formListComponent: FormListComponent;\r\n  dataSource: MatTableDataSource<Category>;\r\n  displayedColumns: string[] = ['categoryDescription', 'status'];\r\n  statusList = [...STATUSES];\r\n\r\n  category = new Category();\r\n  categoryList = [];\r\n  isExist = false;\r\n  categoryForm: FormGroup;\r\n\r\n\r\n  constructor(\r\n    private apiService: ApiService,\r\n    private formBuilder: FormBuilder,\r\n    private sweetAlertService: SweetAlertService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.getList();\r\n    this.setFormValidator();\r\n    // this.getProductList();\r\n  }\r\n\r\n  getList(): void {\r\n    this.apiService.findAll(ENDPOINTS.category).subscribe((res: any) => {\r\n      this.categoryList = res.responseData.data;\r\n      this.dataSource = new MatTableDataSource<Category>(res.responseData.data);\r\n      this.dataSource.paginator = this.formListComponent.paginator;\r\n      this.dataSource.sort = this.formListComponent.sort;\r\n    });\r\n  }\r\n\r\n  save(): void {\r\n    this.apiService.save(ENDPOINTS.category, this.category).subscribe(\r\n      (res: any) => {\r\n        if (res !== undefined) {\r\n          this.sweetAlertService.success(res);\r\n        }\r\n      }, (err: any) => {\r\n        this.sweetAlertService.error(err);\r\n      }, () => {\r\n        this.resetFormValidator(),\r\n          this.getList();\r\n      }\r\n    )\r\n  }\r\n\r\n  // not in used\r\n  checkCategoryIfExisting(categoryName): void {\r\n    let category = [];\r\n    this.apiService.findAll(ENDPOINTS.category).subscribe(\r\n      (res: any) => {\r\n        category = res.responseData.data;\r\n        category = category.filter(cn => cn.description === categoryName);\r\n        if (category.length > 0) {\r\n          this.sweetAlertService.customErrorMessage('Category name already exist.');\r\n        } else {\r\n          if (this.category.id > 0) {\r\n            this.update();\r\n          } else {\r\n            this.save();\r\n          }\r\n        }\r\n      }\r\n    )\r\n  }\r\n\r\n  getCategory(): void {\r\n    this.apiService.findById(ENDPOINTS.category, this.formListComponent.idForUpdate).subscribe((res: any) => {\r\n      if (res) {\r\n        this.category = res.responseData.data;\r\n      }\r\n    });\r\n  }\r\n\r\n  update(): void {\r\n    this.apiService.update(ENDPOINTS.category, this.category).subscribe(\r\n      (res: any) => {\r\n        if (res !== undefined) {\r\n          this.sweetAlertService.success(res);\r\n        }\r\n      }, (err: any) => {\r\n        this.sweetAlertService.error(err);\r\n      }, () => {\r\n        this.resetFormValidator();\r\n        this.getList();\r\n      });\r\n  }\r\n\r\n  setFormValidator(): void {\r\n    this.category.status = COMMON_FUNCTION.ACTIVE;\r\n    this.categoryForm = this.formBuilder.group({\r\n      description: ['', Validators.required],\r\n      status: [''],\r\n    });\r\n  }\r\n\r\n  resetFormValidator(): void {\r\n    this.category = new Category();\r\n    this.category.status = COMMON_FUNCTION.ACTIVE;\r\n    this.categoryForm.markAsUntouched();\r\n    this.categoryForm.markAsPristine();\r\n  }\r\n\r\n  delete() {\r\n\r\n    Swal.fire({\r\n      text: 'Are you sure you want to delete this company?',\r\n      icon: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Confirm'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.apiService.deleteById(ENDPOINTS.category, this.category.id).subscribe(\r\n          () => {\r\n            this.sweetAlertService.customSuccessMessage('Category successfully deleted.');\r\n            this.resetFormValidator();\r\n            this.getList();\r\n          }, (err: any) => {\r\n            this.sweetAlertService.error(err);\r\n          }, () => {\r\n            this.resetFormValidator();\r\n            this.getList();\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  // getProductList() {\r\n  //   this.apiService.findAll(ENDPOINTS.product).subscribe((res: any) => {\r\n  //     this.productList = res.responseData.data.filter((product) => product.status === COMMON_FUNCTION.ACTIVE);\r\n  //   });\r\n  // }\r\n\r\n  // compareProduct(value: any, selected: any): boolean {\r\n  //   if (value && selected) {\r\n  //     return value.description === selected.description;\r\n  //   }\r\n  // }\r\n\r\n}\r\n","export default \"<form>\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12 title\\\">\\r\\n        <mat-label>\\r\\n          <mat-icon>groups</mat-icon> Member's Affiliation\\r\\n        </mat-label>\\r\\n      </div>\\r\\n    </div>\\r\\n    <hr>\\r\\n\\r\\n    <form [formGroup]=\\\"affiliationForm\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <mat-form-field class=\\\"col-md-8\\\" appearance=\\\"outline\\\">\\r\\n          <mat-label>Member's Affiliation <span class=\\\"required-field\\\">*</span></mat-label>\\r\\n          <input matInput [(ngModel)]=\\\"affiliation.description\\\" name=\\\"description\\\" formControlName=\\\"description\\\">\\r\\n        </mat-form-field>\\r\\n\\r\\n        <mat-form-field class=\\\"col-md-4\\\" appearance=\\\"outline\\\">\\r\\n          <mat-label>Member</mat-label>\\r\\n          <mat-select [(ngModel)]=\\\"affiliation.member\\\" name=\\\"member\\\" formControlName=\\\"member\\\"\\r\\n            [compareWith]=\\\"compareMember\\\">\\r\\n            <mat-option *ngFor=\\\"let i of yesNoList\\\" [value]=\\\"i\\\">\\r\\n              {{ i }}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n\\r\\n        <mat-form-field class=\\\"col-md-4\\\" appearance=\\\"outline\\\" *ngIf=\\\"affiliation.id\\\">\\r\\n          <mat-label>Status</mat-label>\\r\\n          <mat-select [(ngModel)]=\\\"affiliation.status\\\" name=\\\"status\\\" formControlName=\\\"status\\\">\\r\\n            <mat-option *ngFor=\\\"let i of statusList\\\" [value]=\\\"i.status\\\">\\r\\n              {{i.status}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n    </form>\\r\\n\\r\\n    <app-form-action-buttons [childObject]=\\\"affiliation\\\" [childForm]=\\\"affiliationForm\\\" (saveFunction)=\\\"save()\\\"\\r\\n      (updateFunction)=\\\"confirmUpdate()\\\" (cancelFunction)=\\\"resetFormValidator()\\\" (deleteFunction)=\\\"delete()\\\"></app-form-action-buttons>\\r\\n    <br>\\r\\n    <app-form-list [dataSource]=\\\"dataSource\\\" [displayedColumns]=\\\"displayedColumns\\\"\\r\\n      (selectInListFunction)=\\\"getAffiliation()\\\"></app-form-list>\\r\\n\\r\\n  </div>\\r\\n</form>\\r\\n\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTable, MatTableDataSource } from '@angular/material/table';\r\nimport { Payment } from '@models';\r\nimport { ENDPOINTS } from '@shared';\r\nimport { ApiService } from '@services';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-list-payment',\r\n  templateUrl: './list-payment.component.html',\r\n  styleUrls: ['./list-payment.component.scss']\r\n})\r\nexport class ListPaymentComponent implements OnInit {\r\n\r\n  @ViewChild(MatPaginator, { static: false }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: false }) sort: MatSort;\r\n  @ViewChild(MatTable, { static: false }) table: MatTable<Object>;\r\n  dataSource: MatTableDataSource<Payment>\r\n  displayedColumns: string[] = ['referenceCode', 'typeOfApplication', 'brand', 'typeOfMedium', 'companyName', 'paymentStatus'];\r\n  paymentList = [];\r\n  pageSize = 10;\r\n  pageNo = 0;\r\n  currentPage = 1;\r\n  totalItems = 0;\r\n  pageSizeOptions: number[] = [10, 20, 50];\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private apiService: ApiService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getS1PaymentList();\r\n  }\r\n\r\n  getS1PaymentList() {\r\n    let endpoint = `?page=${this.currentPage}&size=${this.pageSize}`;\r\n    this.apiService.findAll(ENDPOINTS.accountingPaymentForApprovals + endpoint).subscribe((res: any) => {\r\n      this.paymentList = res.responseData.data;\r\n      console.log('payment list:: ', this.paymentList);\r\n\r\n      this.dataSource = new MatTableDataSource<Payment>(this.paymentList);\r\n      // this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    });\r\n    console.log('Whuy', this.paymentList)\r\n  }\r\n\r\n  pageEvents(event: any) {\r\n    this.pageSize = event.pageSize;\r\n\r\n    if (event.pageIndex > this.pageNo) {\r\n      this.pageNo++;\r\n    } else {\r\n      this.pageNo--;\r\n    }\r\n\r\n    if (event.pageSize > event.length) {\r\n      this.pageNo = 0;\r\n    }\r\n\r\n    this.getS1PaymentList();\r\n  }\r\n\r\n  getPaymentDetails(id) {\r\n    this.router.navigate(['asc/page/accounting/update/', id]);\r\n  }\r\n\r\n  public doFilter = (value: string) => {\r\n    this.dataSource.filter = value.trim().toLocaleLowerCase();\r\n   }\r\n\r\n\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { URL_PATHS } from '@shared';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\n\r\n\r\nconst routes: Routes = [\r\n\r\n  {\r\n    path: '',\r\n    children: [\r\n      {\r\n        path: URL_PATHS.USER_ROLE,\r\n        loadChildren: () => import('./user-role/user-role.module')\r\n          .then(m => m.UserRoleModule)\r\n      },\r\n      {\r\n        path: URL_PATHS.USER_REGISTRATION,\r\n        loadChildren: () => import('./user-registration/user-registration.module')\r\n          .then(m => m.UserRegistrationModule)\r\n      },\r\n      {\r\n        path: URL_PATHS.UPDATE_USER + '/:id',\r\n        loadChildren: () => import('./user-registration/user-registration.module')\r\n          .then(m => m.UserRegistrationModule)\r\n      },\r\n      {\r\n        path: URL_PATHS.USER_PROFILE,\r\n        loadChildren: () => import('./user-profile/user-profile.module')\r\n          .then(m => m.UserProfileModule)\r\n      },\r\n      {\r\n        path: URL_PATHS.USER_LIST,\r\n        loadChildren: () => import('./user-list/user-list.module')\r\n          .then(m => m.UserListModule)\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AccountRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ProductComponent } from './product.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ProductComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ProductRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { BrandsRoutingModule } from './brands-routing.module';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { BrandsComponent } from './brands.component';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { AngularMaterialModule } from '@shared';\r\nimport { FragmentsModule } from '../../../fragments/fragments.module';\r\n\r\n@NgModule({\r\n  declarations: [BrandsComponent],\r\n  imports: [\r\n    CommonModule,\r\n    BrandsRoutingModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule,\r\n    AngularMaterialModule,\r\n    FragmentsModule\r\n  ]\r\n})\r\nexport class BrandsModule { }\r\n","export default \"<form>\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12 title\\\">\\r\\n        <mat-label>\\r\\n          <mat-icon>payment</mat-icon> Payment Type\\r\\n        </mat-label>\\r\\n      </div>\\r\\n    </div>\\r\\n    <hr>\\r\\n\\r\\n    <form [formGroup]=\\\"paymentTypeForm\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <mat-form-field class=\\\"col-md-8\\\" appearance=\\\"outline\\\">\\r\\n          <mat-label>Payment Description: <span class=\\\"required-field\\\">*</span></mat-label>\\r\\n          <input matInput [(ngModel)]=\\\"paymentType.paymentDescription\\\" name=\\\"paymentDescription\\\"\\r\\n            formControlName=\\\"paymentDescription\\\">\\r\\n        </mat-form-field>\\r\\n\\r\\n        <mat-form-field class=\\\"col-md-4\\\" appearance=\\\"outline\\\" *ngIf=\\\"paymentType.id\\\">\\r\\n          <mat-label>Status</mat-label>\\r\\n          <mat-select [(ngModel)]=\\\"paymentType.status\\\" name=\\\"status\\\" formControlName=\\\"status\\\">\\r\\n            <mat-option *ngFor=\\\"let i of statusList\\\" [value]=\\\"i.status\\\">\\r\\n              {{i.status}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n        <mat-slide-toggle class=\\\"col-md-5\\\" [(ngModel)]=\\\"paymentType.amount\\\" [checked]=\\\"paymentType.amount\\\" color=\\\"warn\\\"\\r\\n          formControlName=\\\"amount\\\"><b>Has Amount</b>\\r\\n        </mat-slide-toggle>\\r\\n        <mat-slide-toggle class=\\\"col-md-5\\\" [(ngModel)]=\\\"paymentType.bankBranch\\\" [checked]=\\\"paymentType.bankBranch\\\"\\r\\n          color=\\\"warn\\\" formControlName=\\\"bankBranch\\\"><b>Has Bank Branch</b>\\r\\n        </mat-slide-toggle>\\r\\n        <br>\\r\\n        <mat-slide-toggle class=\\\"col-md-5\\\" [(ngModel)]=\\\"paymentType.bankName\\\" [checked]=\\\"paymentType.bankName\\\"\\r\\n          color=\\\"warn\\\" formControlName=\\\"bankName\\\"><b>Has Bank Name</b></mat-slide-toggle>\\r\\n        <mat-slide-toggle class=\\\"col-md-5\\\" [(ngModel)]=\\\"paymentType.controlNo\\\" [checked]=\\\"paymentType.controlNo\\\"\\r\\n          color=\\\"warn\\\" formControlName=\\\"controlNo\\\"><b>Has Control Number</b>\\r\\n        </mat-slide-toggle>\\r\\n        <br>\\r\\n        <mat-slide-toggle class=\\\"col-md-5\\\" [(ngModel)]=\\\"paymentType.fundTransferDate\\\"\\r\\n          [checked]=\\\"paymentType.fundTransferDate\\\" color=\\\"warn\\\" formControlName=\\\"fundTransferDate\\\"><b>Has Fund Transfer\\r\\n            Date</b></mat-slide-toggle>\\r\\n        <mat-slide-toggle class=\\\"col-md-5\\\" [(ngModel)]=\\\"paymentType.promisorryDate\\\"\\r\\n          [checked]=\\\"paymentType.promisorryDate\\\" color=\\\"warn\\\" formControlName=\\\"promisorryDate\\\"><b>Has Promisorry\\r\\n            Date</b></mat-slide-toggle>\\r\\n        <br>\\r\\n        <mat-slide-toggle class=\\\"col-md-5\\\" [(ngModel)]=\\\"paymentType.referenceNo\\\" [checked]=\\\"paymentType.referenceNo\\\"\\r\\n          color=\\\"warn\\\" formControlName=\\\"referenceNo\\\"><b>Has Reference No\\r\\n          </b></mat-slide-toggle>\\r\\n      </div>\\r\\n    </form>\\r\\n\\r\\n    <app-form-action-buttons [childObject]=\\\"paymentType\\\" [childForm]=\\\"paymentTypeForm\\\" (saveFunction)=\\\"save()\\\"\\r\\n      (updateFunction)=\\\"update()\\\" (cancelFunction)=\\\"resetFormValidator()\\\" (deleteFunction)=\\\"delete()\\\"></app-form-action-buttons>\\r\\n    <br>\\r\\n    <app-form-list [dataSource]=\\\"dataSource\\\" [displayedColumns]=\\\"displayedColumns\\\"\\r\\n      (selectInListFunction)=\\\"getPaymentType()\\\"></app-form-list>\\r\\n  </div>\\r\\n</form>\\r\\n\";","import { Injectable } from '@angular/core';\r\nimport { DatePipe } from '@angular/common';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class DateService {\r\n    constructor(\r\n        private datepipe: DatePipe,\r\n        ) { }\r\n\r\n    setDate(value): Date {\r\n        if (!value) return null;\r\n\r\n        return new Date(this.datepipe.transform(value, 'yyyy-MM-dd'));\r\n    }\r\n\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { UserRoleRoutingModule } from './user-role-routing.module';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { AngularMaterialModule } from '@shared';\r\nimport { UserRoleComponent } from './user-role.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [UserRoleComponent],\r\n  imports: [\r\n    CommonModule,\r\n    UserRoleRoutingModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule,\r\n    AngularMaterialModule\r\n  ]\r\n})\r\nexport class UserRoleModule { }\r\n","\r\nexport class TypeOfExecution {\r\n    id: number;\r\n    typeOfExecution: string;\r\n    status: string;\r\n    applyForToa: boolean;\r\n    live: boolean;\r\n}\r\n","import { Company } from './company.model';\r\nimport { VoucherSignatories } from \"./voucher-signatories.model\";\r\n\r\nexport class Voucher {\r\n\r\n    id: number;\r\n    company: Company;\r\n    fundAmount:\tnumber;\r\n    voucherDate: Date;\r\n    status: string;\r\n    voucherAttachmentReference: string;\r\n    voucherSignatories: VoucherSignatories[];\r\n   \r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcGFnZXMvYWNjb3VudGluZy9saXN0LXBheW1lbnQvbGlzdC1wYXltZW50LmNvbXBvbmVudC5zY3NzIn0= */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcGFnZXMvbWFpbnRlbmFuY2UvcGF5bWVudC10eXBlL3BheW1lbnQtdHlwZS5jb21wb25lbnQuc2NzcyJ9 */\";","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { ListPaymentRoutingModule } from './list-payment-routing.module';\r\nimport { ListPaymentComponent } from './list-payment.component';\r\nimport { AngularMaterialModule } from '@shared';\r\n\r\n\r\n@NgModule({\r\n  declarations: [ListPaymentComponent],\r\n  imports: [\r\n    CommonModule,\r\n    ListPaymentRoutingModule,\r\n    AngularMaterialModule\r\n  ]\r\n})\r\nexport class ListPaymentModule { }\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcGFnZXMvbWFpbnRlbmFuY2UvdHlwZS1vZi1kb2N1bWVudC90eXBlLW9mLWRvY3VtZW50LmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { PaymentType } from '@models';\r\nimport { STATUSES, ENDPOINTS, COMMON_FUNCTION } from '@shared';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ApiService, SweetAlertService } from '@services';\r\nimport { FormListComponent } from '@fragments';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-payment-type',\r\n  templateUrl: './payment-type.component.html',\r\n  styleUrls: ['./payment-type.component.scss']\r\n})\r\nexport class PaymentTypeComponent implements OnInit {\r\n\r\n  @ViewChild(FormListComponent) formListComponent: FormListComponent;\r\n  dataSource: MatTableDataSource<PaymentType>;\r\n  displayedColumns: string[] = [\r\n    'paymentDescription',\r\n    'amount',\r\n    'bankBranch',\r\n    'bankName',\r\n    'controlNo',\r\n    'fundTransferDate',\r\n    'promisorryDate',\r\n    'referenceNo',\r\n    'status'\r\n  ];\r\n  statusList = [...STATUSES];\r\n\r\n  paymentType = new PaymentType();\r\n  paymentTypeList = [];\r\n\r\n  paymentTypeForm: FormGroup;\r\n\r\n  constructor(\r\n    private apiService: ApiService,\r\n    private formBuilder: FormBuilder,\r\n    private sweetAlertService: SweetAlertService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.getList();\r\n    this.setFormValidator();\r\n  }\r\n\r\n  getList(): void {\r\n    this.apiService.findAll(ENDPOINTS.paymentType).subscribe((res: any) => {\r\n      this.paymentTypeList = res.responseData.data;\r\n      this.dataSource = new MatTableDataSource<PaymentType>(res.responseData.data);\r\n      this.dataSource.paginator = this.formListComponent.paginator;\r\n      this.dataSource.sort = this.formListComponent.sort;\r\n    });\r\n  }\r\n\r\n  save(): void {\r\n    this.apiService.save(ENDPOINTS.paymentType, this.paymentType).subscribe(\r\n      (res: any) => {\r\n        if (res !== undefined) {\r\n          this.sweetAlertService.success(res);\r\n        }\r\n      }, (err: any) => {\r\n        this.sweetAlertService.error(err);\r\n      }, () => {\r\n        // actions after subscription\r\n        this.resetFormValidator();\r\n        this.getList();\r\n      });\r\n  }\r\n\r\n  getPaymentType(): void {\r\n    this.apiService.findById(ENDPOINTS.paymentType, this.formListComponent.idForUpdate).subscribe((res: any) => {\r\n      if (res) {\r\n        this.paymentType = res.responseData.data;\r\n      }\r\n    });\r\n  }\r\n\r\n  update(): void {\r\n    this.apiService.update(ENDPOINTS.paymentType, this.paymentType).subscribe(\r\n      (res: any) => {\r\n        if (res !== undefined) {\r\n          this.sweetAlertService.success(res);\r\n        }\r\n      }, (err: any) => {\r\n        this.sweetAlertService.error(err);\r\n      }, () => {\r\n        // actions after subscription\r\n        this.resetFormValidator();\r\n        this.getList();\r\n      });\r\n  }\r\n\r\n  setFormValidator(): void {\r\n    this.paymentType.status = COMMON_FUNCTION.ACTIVE;\r\n    this.paymentTypeForm = this.formBuilder.group({\r\n      paymentDescription: ['', Validators.required],\r\n      amount: [''],\r\n      bankBranch: [''],\r\n      bankName: [''],\r\n      controlNo: [''],\r\n      fundTransferDate: [''],\r\n      promisorryDate: [''],\r\n      referenceNo: [''],\r\n      status: [''],\r\n    });\r\n  }\r\n\r\n  resetFormValidator(): void {\r\n    this.paymentType = new PaymentType();\r\n    this.paymentType.status = COMMON_FUNCTION.ACTIVE;\r\n    this.paymentTypeForm.markAsUntouched();\r\n    this.paymentTypeForm.markAsPristine();\r\n  }\r\n\r\n  delete() {\r\n    Swal.fire({\r\n      text: 'Are you sure you want to delete this payment type?',\r\n      icon: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Confirm'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.apiService.deleteById(ENDPOINTS.paymentType, this.paymentType.id).subscribe(\r\n          () => {\r\n            this.sweetAlertService.customSuccessMessage('Payment type successfully deleted.');\r\n            this.resetFormValidator();\r\n            this.getList();\r\n          }\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { URL_PATHS } from '@shared';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    children: [\r\n      {\r\n        path: URL_PATHS.PAYMENTS,\r\n        loadChildren: () => import('./payments/payments.module')\r\n          .then(m => m.PaymentsModule)\r\n      },\r\n      {\r\n        path: URL_PATHS.LIST_PAYMENT,\r\n        loadChildren: () => import('./list-payment/list-payment.module')\r\n          .then(m => m.ListPaymentModule)\r\n      },\r\n      {\r\n        path: URL_PATHS.ADD_PAYMENT,\r\n        loadChildren: () => import('./add-payment/add-payment.module')\r\n          .then(m => m.AddPaymentModule)\r\n      },\r\n      {\r\n        path: URL_PATHS.UPDATE_PAYMENT + '/:id',\r\n        loadChildren: () => import('./add-payment/add-payment.module')\r\n          .then(m => m.AddPaymentModule)\r\n      },\r\n      {\r\n        path: URL_PATHS.UPDATE_PAYMENT + '/:id/:status',\r\n        loadChildren: () => import('./add-payment/add-payment.module')\r\n          .then(m => m.AddPaymentModule)\r\n      },\r\n      {\r\n        path: URL_PATHS.VOUCHER_ENROLLMENT,\r\n        loadChildren: () => import('./company-voucher/company-voucher-enrollment/company-voucher-enrollment.module')\r\n          .then(m => m.CompanyVoucherEnrollmentModule)\r\n      },\r\n      {\r\n        path: URL_PATHS.VOUCHER_REPLENISHMENT,\r\n        loadChildren: () => import('./company-voucher/company-voucher-fund/company-voucher-fund.module')\r\n          .then(m => m.CompanyVoucherFundModule)\r\n      },\r\n      {\r\n        path: URL_PATHS.ADD_PAYMENT,\r\n        loadChildren: () => import('./add-payment/add-payment.module')\r\n          .then(m => m.AddPaymentModule)\r\n      },\r\n      {\r\n        path: URL_PATHS.REPORTS,\r\n        loadChildren: () => import('./reports/reports.module')\r\n          .then(m => m.ReportsModule)\r\n      },\r\n      {\r\n        path: URL_PATHS.ADD_PENALTY,\r\n        loadChildren: () => import('./add-penalty/add-penalty.module')\r\n          .then(m => m.AddPenaltyModule)\r\n      },\r\n      {\r\n        path: URL_PATHS.ADD_PENALTY + '/:type',\r\n        loadChildren: () => import('./add-penalty/add-penalty.module')\r\n          .then(m => m.AddPenaltyModule)\r\n      },\r\n      {\r\n        path: URL_PATHS.UPDATE_PENALTY + '/:type/:id',\r\n        loadChildren: () => import('./add-penalty/add-penalty.module')\r\n          .then(m => m.AddPenaltyModule)\r\n      },\r\n      {\r\n        path: URL_PATHS.VOUCHER_MONITORING,\r\n        loadChildren: () => import('./voucher-brand-monitoring/voucher-brand-monitoring/voucher-brand-monitoring.module')\r\n          .then(m => m.VoucherBrandMonitoringModule)\r\n      },\r\n      {\r\n        path: URL_PATHS.VOUCHER_MONITORING + '/:brand',\r\n        loadChildren: () => import('./voucher-brand-monitoring/voucher-brand-monitoring/voucher-brand-monitoring.module')\r\n          .then(m => m.VoucherBrandMonitoringModule)\r\n      },\r\n      {\r\n        path: URL_PATHS.OR_PREPARATION,\r\n        loadChildren: () => import('./or-preparation/or-preparation.module')\r\n          .then(m => m.OrPreparationModule)\r\n      },\r\n    ]\r\n  }\r\n];\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AccountingRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { UserRoleComponent } from './user-role.component';\r\n\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: UserRoleComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class UserRoleRoutingModule { }\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcGFnZXMvbWFpbnRlbmFuY2UvdHlwZS1vZi1yZWFzb24vdHlwZS1vZi1yZWFzb24uY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ApiService, SweetAlertService } from '@services';\r\nimport { COMMON_FUNCTION, ENDPOINTS, STATUSES, YES_NO_OPTION } from '@shared';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Affiliation } from '@models';\r\nimport { FormListComponent } from '@fragments';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-affiliation',\r\n  templateUrl: './affiliation.component.html',\r\n  styleUrls: ['./affiliation.component.scss']\r\n})\r\nexport class AffiliationComponent implements OnInit {\r\n\r\n  @ViewChild(FormListComponent) formListComponent: FormListComponent;\r\n  dataSource: MatTableDataSource<Affiliation>;\r\n  displayedColumns: string[] = ['affiliationDesc', 'member', 'status'];\r\n  statusList = [...STATUSES];\r\n  yesNoList = [...YES_NO_OPTION];\r\n\r\n  affiliation = new Affiliation();\r\n  affiliationList = [];\r\n\r\n  affiliationForm: FormGroup;\r\n\r\n  constructor(\r\n    private apiService: ApiService,\r\n    private formBuilder: FormBuilder,\r\n    private sweetAlertService: SweetAlertService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.getList();\r\n    this.setFormValidator();\r\n  }\r\n\r\n  getList(): void {\r\n    this.apiService.findAll(ENDPOINTS.affiliation).subscribe((res: any) => {\r\n      this.affiliationList = res.responseData.data;\r\n      this.dataSource = new MatTableDataSource<Affiliation>(res.responseData.data);\r\n      this.dataSource.paginator = this.formListComponent.paginator;\r\n      this.dataSource.sort = this.formListComponent.sort;\r\n    });\r\n  }\r\n\r\n  save(): void {\r\n    if (this.affiliation.member.toString() === 'No') {\r\n      this.affiliation.member = this.setValue(this.affiliation.member);\r\n    }\r\n    this.affiliation.status = COMMON_FUNCTION.ACTIVE;\r\n    this.apiService.save(ENDPOINTS.affiliation, this.affiliation).subscribe(\r\n      (res: any) => {\r\n        if (res !== undefined) {\r\n          this.sweetAlertService.success(res);\r\n        }\r\n      }, (err: any) => {\r\n        this.sweetAlertService.error(err);\r\n      }, () => {\r\n        // actions after subscription\r\n        this.resetFormValidator();\r\n        this.getList();\r\n      });\r\n  }\r\n\r\n  getAffiliation(): void {\r\n    this.apiService.findById(ENDPOINTS.affiliation, this.formListComponent.idForUpdate).subscribe((res: any) => {\r\n      if (res) {\r\n        this.affiliation = res.responseData.data;\r\n      }\r\n    });\r\n  }\r\n\r\n  confirmUpdate() {\r\n    if (this.affiliation.status === 'INACTIVE') {\r\n      Swal.fire({\r\n        text: `Admin should manually change the company's membership affiliation value to its equivalent non member value. Continue?`,\r\n        icon: 'question',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        confirmButtonText: 'Confirm'\r\n      }).then((result) => {\r\n        if (result.value) {\r\n          this.update();\r\n        }\r\n      });\r\n    } else {\r\n      this.update();\r\n    }\r\n  }\r\n\r\n  update(): void {\r\n    this.affiliation.member = this.setValue(this.affiliation.member);\r\n    this.apiService.update(ENDPOINTS.affiliation, this.affiliation).subscribe(\r\n      (res: any) => {\r\n        if (res !== undefined) {\r\n          this.sweetAlertService.success(res);\r\n        }\r\n      }, (err: any) => {\r\n        this.sweetAlertService.error(err);\r\n      }, () => {\r\n        // actions after subscription\r\n        this.resetFormValidator();\r\n        this.getList();\r\n      });\r\n  }\r\n\r\n  setFormValidator(): void {\r\n    this.affiliation.status = COMMON_FUNCTION.ACTIVE;\r\n    this.affiliation.member = true;\r\n    this.affiliationForm = this.formBuilder.group({\r\n      description: ['', Validators.required],\r\n      member: ['', Validators.required],\r\n      status: [''],\r\n    });\r\n  }\r\n\r\n  resetFormValidator(): void {\r\n    this.affiliation = new Affiliation();\r\n    this.affiliation.status = COMMON_FUNCTION.ACTIVE;\r\n    this.affiliation.member = true;\r\n    this.affiliationForm.markAsUntouched();\r\n    this.affiliationForm.markAsPristine();\r\n  }\r\n\r\n  setValue(param): boolean {\r\n    return param === 'Yes' || param === true ? true : false;\r\n  }\r\n\r\n  compareMember(value: any, selected: any): boolean {\r\n    if (value) {\r\n      return value === (selected ? 'Yes' : 'No');\r\n    }\r\n  }\r\n\r\n  delete() {\r\n    Swal.fire({\r\n      text: 'Are you sure you want to delete this brand?',\r\n      icon: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Confirm'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.apiService.deleteById(ENDPOINTS.affiliation, this.affiliation.id).subscribe(\r\n          () => {\r\n            this.sweetAlertService.customSuccessMessage('Affiliation successfully deleted.');\r\n            this.resetFormValidator();\r\n            this.getList();\r\n          }\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","export default \"<form>\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12 title\\\">\\r\\n        <mat-label>\\r\\n          <mat-icon>view_list</mat-icon>  PROOF OF PAYMENTS\\r\\n        </mat-label>\\r\\n\\r\\n        <!-- <button class=\\\"button-right button-red\\\" mat-raised-button [routerLink]=\\\"['/asc/page/accounting/add']\\\">\\r\\n          <mat-icon>add</mat-icon> NEW PAYMENT\\r\\n        </button> -->\\r\\n      </div>\\r\\n    </div>\\r\\n    <br>\\r\\n\\r\\n    <div class=\\\"col-md-12\\\" fxLayout fxLayoutAlign=\\\"center center\\\">\\r\\n      <mat-form-field>\\r\\n        <input matInput type=\\\"text\\\" (keyup)=\\\"doFilter($event.target.value)\\\" placeholder=\\\"Search\\\">\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"mat-elevation-z8 fields\\\">\\r\\n      <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"referenceCode\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef > REFERENCE CODE </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getPaymentDetails(element.id)\\\">\\r\\n            {{ element?.applicationForm?.referenceCode }} </td>\\r\\n        </ng-container>\\r\\n        <ng-container matColumnDef=\\\"typeOfApplication\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef > TYPE OF APPLICATION </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getPaymentDetails(element.id)\\\">\\r\\n            {{ element?.applicationForm?.applicationType?.description }} </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"brand\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef > BRAND </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getPaymentDetails(element.id)\\\">\\r\\n            {{ element?.applicationForm?.brand?.description }} </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"typeOfMedium\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef > TYPE OF MEDIUM </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getPaymentDetails(element.id)\\\">\\r\\n            {{ element?.applicationForm?.refTypeOfMedium }} </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"companyName\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef > PRESENTOR'S COMPANY NAME </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getPaymentDetails(element.id)\\\">\\r\\n            {{ element?.applicationForm?.applicationOwner?.company?.companyName }} </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"paymentStatus\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef > PAYMENT STATUS </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getPaymentDetails(element.id)\\\">\\r\\n            {{ element?.paymentStatus }} </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n      </table>\\r\\n      <div class=\\\"no-record\\\" [hidden]=\\\"dataSource && dataSource?.data?.length > 0\\\">\\r\\n        No record found.\\r\\n      </div>\\r\\n      <mat-paginator [pageSize]=\\\"pageSize\\\" [pageIndex]=\\\"pageNo\\\" [length]=\\\"totalItems\\\"\\r\\n      [pageSizeOptions]=\\\"pageSizeOptions\\\" (page)=\\\"pageEvents($event)\\\">\\r\\n      </mat-paginator>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTable, MatTableDataSource } from '@angular/material/table';\r\nimport { UserRole } from '@models';\r\nimport { ApiService, SweetAlertService } from '@services';\r\nimport { COMMON_FUNCTION, ENDPOINTS, ROLES, STATUSES } from '@shared';\r\n\r\n@Component({\r\n  selector: 'app-user-role',\r\n  templateUrl: './user-role.component.html',\r\n  styleUrls: ['./user-role.component.scss']\r\n})\r\nexport class UserRoleComponent implements OnInit {\r\n\r\n  @ViewChild(MatPaginator, { static: false }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: false }) sort: MatSort;\r\n  @ViewChild(MatTable, { static: false }) table: MatTable<UserRole>;\r\n  dataSource: MatTableDataSource<UserRole>;\r\n  displayedColumns: string[] = ['name', 'status'];\r\n  statusList = [...STATUSES];\r\n  roleList = [...ROLES];\r\n\r\n  userRole = new UserRole();\r\n  userRoleList = [];\r\n\r\n  userRoleForm: FormGroup;\r\n\r\n  name: any; // in html but not existing in component -- encountered during \"ng serve --aot\"\r\n\r\n  constructor(\r\n    private apiService: ApiService,\r\n    private formBuilder: FormBuilder,\r\n    private sweetAlertService: SweetAlertService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getList();\r\n    this.setFormValidator();\r\n  }\r\n\r\n  getList(): void {\r\n    this.apiService.findAll(ENDPOINTS.roles).subscribe((res: any) => {\r\n      console.log(res.responseData.data);\r\n\r\n      this.userRoleList = res.responseData.data;\r\n      this.dataSource = new MatTableDataSource<UserRole>(this.userRoleList);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    }, (err: any) => {\r\n    });\r\n  }\r\n\r\n  save(): void {\r\n    this.apiService.save(ENDPOINTS.roles, this.userRole).subscribe(\r\n      (res: any) => {\r\n        if (res !== undefined) {\r\n          this.sweetAlertService.success(res);\r\n        }\r\n      }, (err: any) => {\r\n        this.sweetAlertService.error(err);\r\n      }, () => {\r\n        // actions after subscription\r\n        this.resetFormValidator();\r\n        this.getList();\r\n      });\r\n  }\r\n\r\n  getUserRole(name): void {\r\n    this.apiService.findAll(ENDPOINTS.roles+'/role-name/'+ name).subscribe((res: any) => {\r\n      if (res) {\r\n        this.userRole = res;\r\n      }\r\n    }, (err: any) => {\r\n      this.userRole = err.error;\r\n    });\r\n  }\r\n\r\n  update(): void {\r\n    this.apiService.update(ENDPOINTS.roles, this.userRole).subscribe(\r\n      (res: any) => {\r\n        if (res !== undefined) {\r\n          this.sweetAlertService.success(res);\r\n        }\r\n      }, (err: any) => {\r\n        this.sweetAlertService.error(err);\r\n      }, () => {\r\n        // actions after subscription\r\n        this.resetFormValidator();\r\n        this.getList();\r\n      });\r\n  }\r\n\r\n  setFormValidator(): void {\r\n    this.userRole.status = COMMON_FUNCTION.ACTIVE;\r\n    this.userRoleForm = this.formBuilder.group({\r\n      name: ['', Validators.required],\r\n      status: [''],\r\n    });\r\n  }\r\n\r\n  resetFormValidator(): void {\r\n    this.userRole = new UserRole();\r\n    this.userRole.status = COMMON_FUNCTION.ACTIVE;\r\n    this.userRoleForm.markAsUntouched();\r\n    this.userRoleForm.markAsPristine();\r\n  }\r\n\r\n}\r\n","export class S1SettlementOrExpirationPeriod {\r\n  id: number;\r\n  noOfHours: number;\r\n  noOfDays: number;\r\n  noOfWorkingDays: number;\r\n}\r\n","export default \"<form>\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12 title\\\">\\r\\n        <mat-label>\\r\\n          <mat-icon>file_present</mat-icon> Type of Document\\r\\n        </mat-label>\\r\\n      </div>\\r\\n    </div>\\r\\n    <hr>\\r\\n\\r\\n    <form [formGroup]=\\\"typeOfDocumentForm\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <mat-form-field class=\\\"col-md-8\\\" appearance=\\\"outline\\\">\\r\\n          <mat-label>Type of Document:<span class=\\\"required-field\\\">*</span></mat-label>\\r\\n          <input matInput [(ngModel)]=\\\"typeOfDocument.description\\\" name=\\\"description\\\" formControlName=\\\"description\\\">\\r\\n        </mat-form-field>\\r\\n\\r\\n        <mat-form-field class=\\\"col-md-4\\\" appearance=\\\"outline\\\" *ngIf=\\\"typeOfDocument.id\\\">\\r\\n          <mat-label>Status</mat-label>\\r\\n          <mat-select [(ngModel)]=\\\"typeOfDocument.status\\\" name=\\\"status\\\" formControlName=\\\"status\\\">\\r\\n            <mat-option *ngFor=\\\"let i of statusList\\\" [value]=\\\"i.status\\\">\\r\\n              {{i.status}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n        <mat-slide-toggle class=\\\"col-md-5\\\" [(ngModel)]=\\\"typeOfDocument.dateOfLaunchEnable\\\" [checked]=\\\"typeOfDocument.dateOfLaunchEnable\\\" color=\\\"warn\\\" formControlName=\\\"dateOfLaunchEnable\\\"><b>Has Date of Launch</b>\\r\\n        </mat-slide-toggle>\\r\\n        <mat-slide-toggle class=\\\"col-md-5\\\" [(ngModel)]=\\\"typeOfDocument.expiresOnEnable\\\" [checked]=\\\"typeOfDocument.expiresOnEnable\\\" color=\\\"warn\\\" formControlName=\\\"expiresOnEnable\\\"><b>Has Expiration Date</b>\\r\\n        </mat-slide-toggle>\\r\\n      <br>\\r\\n        <mat-slide-toggle class=\\\"col-md-5\\\" [(ngModel)]=\\\"typeOfDocument.basedOnEnable\\\" [checked]=\\\"typeOfDocument.basedOnEnable\\\" color=\\\"warn\\\" formControlName=\\\"basedOnEnable\\\"><b>Has Basis</b></mat-slide-toggle>\\r\\n        <mat-slide-toggle class=\\\"col-md-5\\\" [(ngModel)]=\\\"typeOfDocument.variantEnable\\\" [checked]=\\\"typeOfDocument.variantEnable\\\" color=\\\"warn\\\" formControlName=\\\"variantEnable\\\"><b>Has Variant</b>\\r\\n        </mat-slide-toggle>\\r\\n      <br>\\r\\n        <mat-slide-toggle class=\\\"col-md-5\\\" [(ngModel)]=\\\"typeOfDocument.remarksEnable\\\" [checked]=\\\"typeOfDocument.remarksEnable\\\" color=\\\"warn\\\" formControlName=\\\"remarksEnable\\\"><b>Has Remarks</b></mat-slide-toggle>\\r\\n        <mat-slide-toggle class=\\\"col-md-5\\\" [(ngModel)]=\\\"typeOfDocument.inputEnable\\\" [checked]=\\\"typeOfDocument.inputEnable\\\" color=\\\"warn\\\" formControlName=\\\"inputEnable\\\"><b>Has Input</b></mat-slide-toggle>\\r\\n      </div>\\r\\n    </form>\\r\\n\\r\\n    <app-form-action-buttons [childObject]=\\\"typeOfDocument\\\" [childForm]=\\\"typeOfDocumentForm\\\" (saveFunction)=\\\"save()\\\"\\r\\n      (updateFunction)=\\\"update()\\\" (cancelFunction)=\\\"resetFormValidator()\\\" (deleteFunction)=\\\"delete()\\\"></app-form-action-buttons>\\r\\n    <br>\\r\\n    <app-form-list [dataSource]=\\\"dataSource\\\" [displayedColumns]=\\\"displayedColumns\\\"\\r\\n      (selectInListFunction)=\\\"getTypeOfDocument()\\\"></app-form-list>\\r\\n  </div>\\r\\n</form>\\r\\n\";","export default \".badge {\\n  padding: 5px 20px;\\n  text-decoration: none;\\n  width: 10em;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9wYWdlcy9hY2NvdW50L3VzZXItcm9sZS91c2VyLXJvbGUuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxpQkFBQTtFQUNBLHFCQUFBO0VBQ0EsV0FBQTtBQUNKIiwiZmlsZSI6InNyYy9hcHAvbW9kdWxlcy9wYWdlcy9hY2NvdW50L3VzZXItcm9sZS91c2VyLXJvbGUuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYmFkZ2V7XHJcbiAgICBwYWRkaW5nOiA1cHggMjBweDtcclxuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxuICAgIHdpZHRoOiAxMGVtO1xyXG59Il19 */\";","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AccountRoutingModule } from './account-routing.module';\r\nimport { UserRoleComponent } from './user-role/user-role.component';\r\nimport { UserRegistrationComponent } from './user-registration/user-registration.component';\r\nimport { UserProfileComponent } from './user-profile/user-profile.component';\r\nimport { UserListComponent } from './user-list/user-list.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule,\r\n    AccountRoutingModule\r\n  ]\r\n})\r\nexport class AccountModule { }\r\n","export default \"<form>\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12 title\\\">\\r\\n        <mat-label>\\r\\n          Category\\r\\n        </mat-label>\\r\\n      </div>\\r\\n    </div>\\r\\n    <hr>\\r\\n\\r\\n    <form [formGroup]=\\\"categoryForm\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <mat-form-field class=\\\"col-md-8\\\" appearance=\\\"outline\\\">\\r\\n          <mat-label>Category: <span class=\\\"required-field\\\">*</span></mat-label>\\r\\n          <input matInput [(ngModel)]=\\\"category.description\\\" name=\\\"description\\\" formControlName=\\\"description\\\">\\r\\n        </mat-form-field>\\r\\n\\r\\n         <!-- <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\">\\r\\n          <mat-label>Product <span class=\\\"required-field\\\">*</span></mat-label>\\r\\n          <mat-select [(ngModel)]=\\\"category.product\\\" name=\\\"product\\\" formControlName=\\\"product\\\"\\r\\n            [compareWith]=\\\"compareProduct\\\">\\r\\n            <mat-option *ngFor=\\\"let i of productList\\\" [value]=\\\"i\\\">\\r\\n              {{i.description}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field> -->\\r\\n\\r\\n        <mat-form-field class=\\\"col-md-4\\\" appearance=\\\"outline\\\" *ngIf=\\\"category.id\\\">\\r\\n          <mat-label>Status</mat-label>\\r\\n          <mat-select [(ngModel)]=\\\"category.status\\\" name=\\\"status\\\" formControlName=\\\"status\\\">\\r\\n            <mat-option *ngFor=\\\"let i of statusList\\\" [value]=\\\"i.status\\\">\\r\\n              {{i.status}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n    </form>\\r\\n\\r\\n    <app-form-action-buttons [childObject]=\\\"category\\\" [childForm]=\\\"categoryForm\\\" (saveFunction)=\\\"save()\\\"\\r\\n      (updateFunction)=\\\"update()\\\" (cancelFunction)=\\\"resetFormValidator()\\\" (deleteFunction)=\\\"delete()\\\"></app-form-action-buttons>\\r\\n    <br>\\r\\n    <app-form-list [dataSource]=\\\"dataSource\\\" [displayedColumns]=\\\"displayedColumns\\\"\\r\\n      (selectInListFunction)=\\\"getCategory()\\\"></app-form-list>\\r\\n\\r\\n  </div>\\r\\n</form>\\r\\n\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { FormListComponent } from '@fragments';\r\nimport { TypeOfReason } from '@models';\r\nimport { ApiService, SweetAlertService } from '@services';\r\nimport { COMMON_FUNCTION, ENDPOINTS, STATUSES } from '@shared';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-type-of-reason',\r\n  templateUrl: './type-of-reason.component.html',\r\n  styleUrls: ['./type-of-reason.component.scss']\r\n})\r\nexport class TypeOfReasonComponent implements OnInit {\r\n\r\n  @ViewChild(FormListComponent) formListComponent: FormListComponent;\r\n  dataSource: MatTableDataSource<TypeOfReason>;\r\n  displayedColumns: string[] = ['reason', 'status'];\r\n  statusList = [...STATUSES];\r\n\r\n  typeOfReason = new TypeOfReason();\r\n  typeOfReasonList = [];\r\n\r\n  typeOfReasonForm: FormGroup;\r\n\r\n  constructor(\r\n    private apiService: ApiService,\r\n    private formBuilder: FormBuilder,\r\n    private sweetAlertService: SweetAlertService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getList();\r\n    this.setFormValidator();\r\n  }\r\n\r\n  getList(): void {\r\n    this.apiService.findAll(ENDPOINTS.typeOfReason).subscribe((res: any) => {\r\n      this.typeOfReasonList = res.responseData.data;\r\n      this.dataSource = new MatTableDataSource<TypeOfReason>(res.responseData.data);\r\n      this.dataSource.paginator = this.formListComponent.paginator;\r\n      this.dataSource.sort = this.formListComponent.sort;\r\n    });\r\n  }\r\n\r\n  save(): void {\r\n    this.apiService.save(ENDPOINTS.typeOfReason, this.typeOfReason).subscribe(\r\n      (res: any) => {\r\n        if (res !== undefined) {\r\n          this.sweetAlertService.success(res);\r\n        }\r\n      }, (err: any) => {\r\n        this.sweetAlertService.error(err);\r\n      }, () => {\r\n        // actions after subscription\r\n        this.resetFormValidator();\r\n        this.getList();\r\n      });\r\n  }\r\n\r\n  getTypeOfReason(): void {\r\n    this.apiService.findById(ENDPOINTS.typeOfReason, this.formListComponent.idForUpdate).subscribe((res: any) => {\r\n      if (res) {\r\n        this.typeOfReason = res.responseData.data;\r\n      }\r\n    });\r\n  }\r\n\r\n  update(): void {\r\n    this.apiService.update(ENDPOINTS.typeOfReason, this.typeOfReason).subscribe(\r\n      (res: any) => {\r\n        if (res !== undefined) {\r\n          this.sweetAlertService.success(res);\r\n        }\r\n      }, (err: any) => {\r\n        this.sweetAlertService.error(err);\r\n      }, () => {\r\n        // actions after subscription\r\n        this.resetFormValidator();\r\n        this.getList();\r\n      });\r\n  }\r\n\r\n  setFormValidator(): void {\r\n    this.typeOfReason.status = COMMON_FUNCTION.ACTIVE;\r\n    this.typeOfReasonForm = this.formBuilder.group({\r\n      reason: ['', Validators.required],\r\n      status: [''],\r\n    });\r\n  }\r\n\r\n  resetFormValidator(): void {\r\n    this.typeOfReason = new TypeOfReason();\r\n    this.typeOfReason.status = COMMON_FUNCTION.ACTIVE;\r\n    this.typeOfReasonForm.markAsUntouched();\r\n    this.typeOfReasonForm.markAsPristine();\r\n  }\r\n\r\n  delete() {\r\n    Swal.fire({\r\n      text: 'Are you sure you want to delete this type of reason?',\r\n      icon: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Confirm'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.apiService.deleteById(ENDPOINTS.typeOfReason, this.typeOfReason.id).subscribe(\r\n          () => {\r\n            this.sweetAlertService.customSuccessMessage('Type of reason successfully deleted.');\r\n            this.resetFormValidator();\r\n            this.getList();\r\n          }\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcGFnZXMvbWFpbnRlbmFuY2UvY2F0ZWdvcnkvY2F0ZWdvcnkuY29tcG9uZW50LnNjc3MifQ== */\";","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { ProductRoutingModule } from './product-routing.module';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { AngularMaterialModule } from '@shared';\r\nimport { FragmentsModule } from '../../../fragments/fragments.module';\r\nimport { ProductComponent } from './product.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ProductComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ProductRoutingModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule,\r\n    AngularMaterialModule,\r\n    FragmentsModule\r\n  ]\r\n})\r\nexport class ProductModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AccountingRoutingModule } from './accounting-routing.module';\r\n\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule,\r\n    AccountingRoutingModule\r\n  ]\r\n})\r\nexport class AccountingModule { }\r\n","export default \"<form>\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12 title\\\">\\r\\n        <mat-label>\\r\\n          <mat-icon>event_note</mat-icon> Type of Reason\\r\\n        </mat-label>\\r\\n      </div>\\r\\n    </div>\\r\\n    <hr>\\r\\n\\r\\n    <form [formGroup]=\\\"typeOfReasonForm\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <mat-form-field class=\\\"col-md-8\\\" appearance=\\\"outline\\\">\\r\\n          <mat-label>Reason:<span class=\\\"required-field\\\">*</span></mat-label>\\r\\n          <input matInput [(ngModel)]=\\\"typeOfReason.reason\\\" name=\\\"reason\\\" formControlName=\\\"reason\\\">\\r\\n        </mat-form-field>\\r\\n\\r\\n        <mat-form-field class=\\\"col-md-4\\\" appearance=\\\"outline\\\" *ngIf=\\\"typeOfReason.id\\\">\\r\\n          <mat-label>Status</mat-label>\\r\\n          <mat-select [(ngModel)]=\\\"typeOfReason.status\\\" name=\\\"status\\\" formControlName=\\\"status\\\">\\r\\n            <mat-option *ngFor=\\\"let i of statusList\\\" [value]=\\\"i.status\\\">\\r\\n              {{i.status}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n    </form>\\r\\n\\r\\n    <app-form-action-buttons [childObject]=\\\"typeOfReason\\\" [childForm]=\\\"typeOfReasonForm\\\" (saveFunction)=\\\"save()\\\"\\r\\n      (updateFunction)=\\\"update()\\\" (cancelFunction)=\\\"resetFormValidator()\\\" (deleteFunction)=\\\"delete()\\\"></app-form-action-buttons>\\r\\n      <br>\\r\\n      <app-form-list [dataSource]=\\\"dataSource\\\" [displayedColumns]=\\\"displayedColumns\\\"\\r\\n        (selectInListFunction)=\\\"getTypeOfReason()\\\"></app-form-list>\\r\\n  </div>\\r\\n</form>\";","export default \"<form>\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-12 title\\\">\\r\\n          <mat-label>\\r\\n            <mat-icon>settings_accessibility</mat-icon> User Role\\r\\n          </mat-label>\\r\\n        </div>\\r\\n      </div>\\r\\n      <hr>\\r\\n\\r\\n      <form [formGroup]=\\\"userRoleForm\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <mat-form-field class=\\\"col-md-8\\\" appearance=\\\"outline\\\">\\r\\n            <!-- <mat-label>User Role: <span class=\\\"required-field\\\">*</span></mat-label>\\r\\n            <input matInput [(ngModel)]=\\\"userRole.name\\\" name=\\\"name\\\" formControlName=\\\"name\\\"> -->\\r\\n            <mat-label>User Role</mat-label>\\r\\n            <mat-select [(ngModel)]=\\\"userRole.name\\\" name=\\\"name\\\" formControlName=\\\"name\\\">\\r\\n              <mat-option *ngFor=\\\"let i of roleList\\\" [value]=\\\"i.role\\\">\\r\\n                {{ i?.role?.replaceAll('_', (' '))?.replace('ENCODER', 'EVALUATOR') }}\\r\\n              </mat-option>\\r\\n            </mat-select>\\r\\n          </mat-form-field>\\r\\n\\r\\n          <mat-form-field class=\\\"col-md-4\\\" appearance=\\\"outline\\\">\\r\\n            <mat-label>Status</mat-label>\\r\\n            <mat-select [(ngModel)]=\\\"userRole.status\\\" name=\\\"status\\\" formControlName=\\\"status\\\">\\r\\n              <mat-option *ngFor=\\\"let i of statusList\\\" [value]=\\\"i.status\\\">\\r\\n                {{i.status}}\\r\\n              </mat-option>\\r\\n            </mat-select>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n      </form>\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n          <!-- <button mat-raised-button color=\\\"primary\\\" (click)=\\\"save()\\\" *ngIf=\\\"!name?.id\\\" [disabled]=\\\"!(userRoleForm.valid)\\\">\\r\\n            <mat-icon>save</mat-icon> SAVE\\r\\n          </button> -->\\r\\n          <button mat-raised-button color=\\\"primary\\\" (click)=\\\"update()\\\" *ngIf=\\\"userRole?.id\\\" [disabled]=\\\"!(userRoleForm.valid)\\\">\\r\\n            <mat-icon>task_alt </mat-icon> UPDATE\\r\\n          </button>\\r\\n          <button mat-raised-button color=\\\"warn\\\" (click)=\\\"resetFormValidator()\\\" *ngIf=\\\"userRole?.id || userRole?.name\\\">\\r\\n            <mat-icon>{{ userRole?.id ? 'cancel' : 'refresh' }}</mat-icon> {{ userRole?.id ? 'CANCEL' : 'RESET' }}\\r\\n          </button>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <br>\\r\\n\\r\\n      <div class=\\\"mat-elevation-z8\\\">\\r\\n        <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\r\\n\\r\\n          <!--- Note that these columns can be defined in any order.\\r\\n                  The actual rendered columns are set as a property on the row definition\\\" -->\\r\\n\\r\\n          <!-- Position Column -->\\r\\n          <ng-container matColumnDef=\\\"name\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef> User Role </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getUserRole(element?.name)\\\"> {{ element?.name?.replaceAll('_', ' ')?.replace('ENCODER', 'EVALUATOR') }} </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"status\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef> Status </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getUserRole(element?.name)\\\">\\r\\n              <span *ngIf=\\\"element?.status == 'ACTIVE'\\\" class=\\\"badge rounded-pill bg-success\\\">{{ element?.status }}</span>\\r\\n              <span *ngIf=\\\"element?.status != 'ACTIVE'\\\" class=\\\"badge rounded-pill bg-danger\\\">{{ element?.status }}</span>\\r\\n            </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n          <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n        </table>\\r\\n        <div class=\\\"no-record\\\" [hidden]=\\\"dataSource && dataSource?.data?.length > 0\\\">\\r\\n          No record found.\\r\\n        </div>\\r\\n        <mat-paginator [pageSizeOptions]=\\\"[10, 20, 30]\\\" showFirstLastButtons></mat-paginator>\\r\\n\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n  </form>\\r\\n\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ListPaymentComponent } from './list-payment.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ListPaymentComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ListPaymentRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { BrandsComponent } from './brands.component';\r\n\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: BrandsComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class BrandsRoutingModule { }\r\n","export class Report {\r\n    filename:\tstring\r\n    format:\tstring\r\n    module:\tstring\r\n    params: {};\r\n}"],"sourceRoot":"webpack:///"}