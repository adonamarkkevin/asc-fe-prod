{"version":3,"sources":["webpack:///src/app/modules/fragments/index.ts","webpack:///src/app/modules/pages/maintenance/holiday/holiday.component.ts","webpack:///src/app/modules/pages/maintenance/holiday/holiday.component.html","webpack:///src/app/modules/pages/maintenance/holiday/holiday-routing.module.ts","webpack:///src/app/modules/pages/maintenance/holiday/holiday.module.ts"],"names":["HolidayComponent","apiService","formBuilder","sweetAlertService","dateService","displayedColumns","statusList","holidayTypeList","holiday","holidayList","disabledWeekEnds","d","day","Date","getDay","holidayType","getList","setFormValidator","findAll","holidays","subscribe","res","responseData","data","dataSource","paginator","formListComponent","sort","holidayDate","setDate","save","undefined","success","err","error","resetFormValidator","findById","idForUpdate","console","log","update","status","ACTIVE","holidayForm","group","holidayName","required","markAsUntouched","markAsPristine","fire","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","value","deleteById","id","customSuccessMessage","getHoliday","routes","path","component","HolidayRoutingModule","forChild","HolidayModule"],"mappings":"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","file":"holiday-holiday-module-es5.js","sourcesContent":["export * from './form-action-buttons/form-action-buttons.component';\nexport * from './form-list/form-list.component';","import { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { FormListComponent } from \"@fragments\";\nimport { ApiService, SweetAlertService } from \"@services\";\nimport { COMMON_FUNCTION, ENDPOINTS, HOLIDAY_TYPE, STATUSES } from \"@shared\";\nimport { Holiday } from \"app/core/models/holiday.model\";\nimport { DateService } from \"app/core/services/date.service\";\nimport Swal from \"sweetalert2\";\n\n@Component({\n  selector: \"app-holiday\",\n  templateUrl: \"./holiday.component.html\",\n  styleUrls: [\"./holiday.component.scss\"],\n})\nexport class HolidayComponent implements OnInit {\n  @ViewChild(FormListComponent) formListComponent: FormListComponent;\n  dataSource: MatTableDataSource<Holiday>;\n  displayedColumns: string[] = [\n    \"holidayName\",\n    \"holidayDate\",\n    \"holidayType\",\n    \"status\",\n  ];\n  statusList = [...STATUSES];\n  holidayTypeList = [...HOLIDAY_TYPE];\n\n  holiday = new Holiday();\n  holidayList = [];\n\n  holidayForm: FormGroup;\n\n  constructor(\n    private apiService: ApiService,\n    private formBuilder: FormBuilder,\n    private sweetAlertService: SweetAlertService,\n    private dateService: DateService\n  ) {}\n\n  ngOnInit() {\n    this.getList();\n    this.setFormValidator();\n  }\n\n  getList(): void {\n    this.apiService.findAll(ENDPOINTS.holidays).subscribe((res: any) => {\n      this.holidayList = res.responseData.data;\n      this.dataSource = new MatTableDataSource<Holiday>(res.responseData.data);\n      this.dataSource.paginator = this.formListComponent.paginator;\n      this.dataSource.sort = this.formListComponent.sort;\n    });\n  }\n\n  save(): void {\n    this.holiday.holidayDate = this.dateService.setDate(\n      this.holiday.holidayDate\n    );\n    this.apiService.save(ENDPOINTS.holidays, this.holiday).subscribe(\n      (res: any) => {\n        if (res !== undefined) {\n          this.sweetAlertService.success(res);\n        }\n      },\n      (err: any) => {\n        this.sweetAlertService.error(err);\n      },\n      () => {\n        this.resetFormValidator(), this.getList();\n      }\n    );\n  }\n\n  getHoliday(): void {\n    this.apiService\n      .findById(ENDPOINTS.holidays, this.formListComponent.idForUpdate)\n      .subscribe((res: any) => {\n        if (res) {\n          this.holiday = res.responseData.data;\n          console.log(res);\n        }\n      });\n  }\n\n  update(): void {\n    this.holiday.holidayDate = this.dateService.setDate(\n      this.holiday.holidayDate\n    );\n    this.apiService.update(ENDPOINTS.holidays, this.holiday).subscribe(\n      (res: any) => {\n        if (res !== undefined) {\n          this.sweetAlertService.success(res);\n        }\n      },\n      (err: any) => {\n        this.sweetAlertService.error(err);\n      },\n      () => {\n        this.resetFormValidator();\n        this.getList();\n      }\n    );\n  }\n\n  setFormValidator(): void {\n    this.holiday.status = COMMON_FUNCTION.ACTIVE;\n    this.holidayForm = this.formBuilder.group({\n      holidayName: [\"\", Validators.required],\n      holidayDate: [\"\", Validators.required],\n      holidayType: [\"\", Validators.required],\n      status: [\"\"],\n    });\n  }\n\n  resetFormValidator(): void {\n    this.holiday = new Holiday();\n    this.holiday.status = COMMON_FUNCTION.ACTIVE;\n    this.holidayForm.markAsUntouched();\n    this.holidayForm.markAsPristine();\n  }\n\n  disabledWeekEnds = (d: Date | null): boolean => {\n    const day = (d || new Date()).getDay();\n\n    if (this.holiday.holidayType === \"WEEKEND\") {\n      return day === 0 || day === 6;\n    }\n    return day !== 0 && day !== 6;\n  };\n\n  delete() {\n    Swal.fire({\n      text: \"Are you sure you want to delete this holiday?\",\n      icon: \"question\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Confirm\",\n    }).then((result) => {\n      if (result.value) {\n        this.apiService\n          .deleteById(ENDPOINTS.holidays, this.holiday.id)\n          .subscribe(() => {\n            this.sweetAlertService.customSuccessMessage(\n              \"Holiday successfully deleted.\"\n            );\n            this.resetFormValidator();\n            this.getList();\n          });\n      }\n    });\n  }\n}\n","<form>\n    <div class=\"container-fluid\">\n      <div class=\"row\">\n        <div class=\"col-md-12 title\">\n          <mat-label>\n            Holiday\n          </mat-label>\n        </div>\n      </div>\n      <hr>\n\n      <form [formGroup]=\"holidayForm\">\n        <div class=\"row\">\n          <mat-form-field class=\"col-md-6\" appearance=\"outline\">\n            <mat-label>Holiday Type <span class=\"required-field\">*</span></mat-label>\n            <mat-select [(ngModel)]=\"holiday.holidayType\" name=\"holidayType\" formControlName=\"holidayType\">\n              <mat-option *ngFor=\"let i of holidayTypeList\" [value]=\"i.type\">\n                {{i?.type?.replaceAll('_',' ')}}\n              </mat-option>\n            </mat-select>\n          </mat-form-field>\n\n          <mat-form-field class=\"col-md-8\" appearance=\"outline\">\n            <mat-label>Holiday Name <span class=\"required-field\">*</span></mat-label>\n            <input matInput [(ngModel)]=\"holiday.holidayName\" name=\"holidayName\" formControlName=\"holidayName\">\n          </mat-form-field>\n\n          <mat-form-field class=\"col-md-4\" appearance=\"outline\">\n              <mat-label>Holiday Date</mat-label>\n              <input matInput placeholder=\"Date\" [matDatepicker]=\"holidayDate\"\n                  [matDatepickerFilter]=\"disabledWeekEnds\" readonly [(ngModel)]=\"holiday.holidayDate\"\n                  name=\"holidayDate\" formControlName=\"holidayDate\">\n              <mat-datepicker-toggle matSuffix [for]=\"holidayDate\"></mat-datepicker-toggle>\n              <mat-datepicker color=\"warn\" #holidayDate disabled=\"false\"></mat-datepicker>\n          </mat-form-field>\n\n          <mat-form-field class=\"col-md-4\" appearance=\"outline\">\n            <mat-label>Status</mat-label>\n            <mat-select [(ngModel)]=\"holiday.status\" name=\"status\" formControlName=\"status\">\n              <mat-option *ngFor=\"let i of statusList\" [value]=\"i.status\">\n                {{i.status}}\n              </mat-option>\n            </mat-select>\n          </mat-form-field>\n        </div>\n      </form>\n\n      <app-form-action-buttons [childObject]=\"holiday\" [childForm]=\"holidayForm\" (saveFunction)=\"save()\"\n        (updateFunction)=\"update()\" (cancelFunction)=\"resetFormValidator()\" (deleteFunction)=\"delete()\"></app-form-action-buttons>\n      <br>\n      <app-form-list [dataSource]=\"dataSource\" [displayedColumns]=\"displayedColumns\"\n        (selectInListFunction)=\"getHoliday()\"></app-form-list>\n\n    </div>\n  </form>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HolidayComponent } from './holiday.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HolidayComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class HolidayRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { HolidayRoutingModule } from './holiday-routing.module';\nimport { FragmentsModule } from 'app/modules/fragments/fragments.module';\nimport { AngularMaterialModule } from '@shared';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { HolidayComponent } from './holiday.component';\n\n\n@NgModule({\n  declarations: [\n    HolidayComponent\n  ],\n  imports: [\n    CommonModule,\n    HolidayRoutingModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    AngularMaterialModule,\n    FragmentsModule,\n  ]\n})\nexport class HolidayModule { }\n"]}