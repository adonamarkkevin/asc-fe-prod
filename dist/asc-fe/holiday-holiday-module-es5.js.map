{"version":3,"sources":["webpack:///src/app/modules/fragments/index.ts","webpack:///src/app/modules/pages/maintenance/holiday/holiday.component.ts","webpack:///src/app/modules/pages/maintenance/holiday/holiday.component.html","webpack:///src/app/modules/pages/maintenance/holiday/holiday-routing.module.ts","webpack:///src/app/modules/pages/maintenance/holiday/holiday.component.scss","webpack:///src/app/modules/pages/maintenance/holiday/holiday.module.ts"],"names":["HolidayComponent","apiService","formBuilder","sweetAlertService","dateService","displayedColumns","statusList","holidayTypeList","holiday","holidayList","disabledWeekEnds","d","day","Date","getDay","holidayType","getList","setFormValidator","findAll","holidays","subscribe","res","responseData","data","dataSource","paginator","formListComponent","sort","holidayDate","setDate","save","undefined","success","err","error","resetFormValidator","findById","idForUpdate","console","log","update","status","ACTIVE","holidayForm","group","holidayName","required","markAsUntouched","markAsPristine","fire","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","value","deleteById","id","customSuccessMessage","selector","template","routes","path","component","HolidayRoutingModule","imports","forChild","exports","HolidayModule","declarations"],"mappings":"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","file":"holiday-holiday-module-es5.js","sourcesContent":["export * from './form-action-buttons/form-action-buttons.component';\r\nexport * from './form-list/form-list.component';","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { FormListComponent } from \"@fragments\";\r\nimport { ApiService, SweetAlertService } from \"@services\";\r\nimport { COMMON_FUNCTION, ENDPOINTS, HOLIDAY_TYPE, STATUSES } from \"@shared\";\r\nimport { Holiday } from \"app/core/models/holiday.model\";\r\nimport { DateService } from \"app/core/services/date.service\";\r\nimport Swal from \"sweetalert2\";\r\n\r\n@Component({\r\n  selector: \"app-holiday\",\r\n  templateUrl: \"./holiday.component.html\",\r\n  styleUrls: [\"./holiday.component.scss\"],\r\n})\r\nexport class HolidayComponent implements OnInit {\r\n  @ViewChild(FormListComponent) formListComponent: FormListComponent;\r\n  dataSource: MatTableDataSource<Holiday>;\r\n  displayedColumns: string[] = [\r\n    \"holidayName\",\r\n    \"holidayDate\",\r\n    \"holidayType\",\r\n    \"status\",\r\n  ];\r\n  statusList = [...STATUSES];\r\n  holidayTypeList = [...HOLIDAY_TYPE];\r\n\r\n  holiday = new Holiday();\r\n  holidayList = [];\r\n\r\n  holidayForm: FormGroup;\r\n\r\n  constructor(\r\n    private apiService: ApiService,\r\n    private formBuilder: FormBuilder,\r\n    private sweetAlertService: SweetAlertService,\r\n    private dateService: DateService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.getList();\r\n    this.setFormValidator();\r\n  }\r\n\r\n  getList(): void {\r\n    this.apiService.findAll(ENDPOINTS.holidays).subscribe((res: any) => {\r\n      this.holidayList = res.responseData.data;\r\n      this.dataSource = new MatTableDataSource<Holiday>(res.responseData.data);\r\n      this.dataSource.paginator = this.formListComponent.paginator;\r\n      this.dataSource.sort = this.formListComponent.sort;\r\n    });\r\n  }\r\n\r\n  save(): void {\r\n    this.holiday.holidayDate = this.dateService.setDate(\r\n      this.holiday.holidayDate\r\n    );\r\n    this.apiService.save(ENDPOINTS.holidays, this.holiday).subscribe(\r\n      (res: any) => {\r\n        if (res !== undefined) {\r\n          this.sweetAlertService.success(res);\r\n        }\r\n      },\r\n      (err: any) => {\r\n        this.sweetAlertService.error(err);\r\n      },\r\n      () => {\r\n        this.resetFormValidator(), this.getList();\r\n      }\r\n    );\r\n  }\r\n\r\n  getHoliday(): void {\r\n    this.apiService\r\n      .findById(ENDPOINTS.holidays, this.formListComponent.idForUpdate)\r\n      .subscribe((res: any) => {\r\n        if (res) {\r\n          this.holiday = res.responseData.data;\r\n          console.log(res);\r\n        }\r\n      });\r\n  }\r\n\r\n  update(): void {\r\n    this.holiday.holidayDate = this.dateService.setDate(\r\n      this.holiday.holidayDate\r\n    );\r\n    this.apiService.update(ENDPOINTS.holidays, this.holiday).subscribe(\r\n      (res: any) => {\r\n        if (res !== undefined) {\r\n          this.sweetAlertService.success(res);\r\n        }\r\n      },\r\n      (err: any) => {\r\n        this.sweetAlertService.error(err);\r\n      },\r\n      () => {\r\n        this.resetFormValidator();\r\n        this.getList();\r\n      }\r\n    );\r\n  }\r\n\r\n  setFormValidator(): void {\r\n    this.holiday.status = COMMON_FUNCTION.ACTIVE;\r\n    this.holidayForm = this.formBuilder.group({\r\n      holidayName: [\"\", Validators.required],\r\n      holidayDate: [\"\", Validators.required],\r\n      holidayType: [\"\", Validators.required],\r\n      status: [\"\"],\r\n    });\r\n  }\r\n\r\n  resetFormValidator(): void {\r\n    this.holiday = new Holiday();\r\n    this.holiday.status = COMMON_FUNCTION.ACTIVE;\r\n    this.holidayForm.markAsUntouched();\r\n    this.holidayForm.markAsPristine();\r\n  }\r\n\r\n  disabledWeekEnds = (d: Date | null): boolean => {\r\n    const day = (d || new Date()).getDay();\r\n\r\n    if (this.holiday.holidayType === \"WEEKEND\") {\r\n      return day === 0 || day === 6;\r\n    }\r\n    return day !== 0 && day !== 6;\r\n  };\r\n\r\n  delete() {\r\n    Swal.fire({\r\n      text: \"Are you sure you want to delete this holiday?\",\r\n      icon: \"question\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Confirm\",\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.apiService\r\n          .deleteById(ENDPOINTS.holidays, this.holiday.id)\r\n          .subscribe(() => {\r\n            this.sweetAlertService.customSuccessMessage(\r\n              \"Holiday successfully deleted.\"\r\n            );\r\n            this.resetFormValidator();\r\n            this.getList();\r\n          });\r\n      }\r\n    });\r\n  }\r\n}\r\n","export default \"<form>\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-12 title\\\">\\r\\n          <mat-label>\\r\\n            Holiday\\r\\n          </mat-label>\\r\\n        </div>\\r\\n      </div>\\r\\n      <hr>\\r\\n\\r\\n      <form [formGroup]=\\\"holidayForm\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\">\\r\\n            <mat-label>Holiday Type <span class=\\\"required-field\\\">*</span></mat-label>\\r\\n            <mat-select [(ngModel)]=\\\"holiday.holidayType\\\" name=\\\"holidayType\\\" formControlName=\\\"holidayType\\\">\\r\\n              <mat-option *ngFor=\\\"let i of holidayTypeList\\\" [value]=\\\"i.type\\\">\\r\\n                {{i?.type?.replaceAll('_',' ')}}\\r\\n              </mat-option>\\r\\n            </mat-select>\\r\\n          </mat-form-field>\\r\\n\\r\\n          <mat-form-field class=\\\"col-md-8\\\" appearance=\\\"outline\\\">\\r\\n            <mat-label>Holiday Name <span class=\\\"required-field\\\">*</span></mat-label>\\r\\n            <input matInput [(ngModel)]=\\\"holiday.holidayName\\\" name=\\\"holidayName\\\" formControlName=\\\"holidayName\\\">\\r\\n          </mat-form-field>\\r\\n\\r\\n          <mat-form-field class=\\\"col-md-4\\\" appearance=\\\"outline\\\">\\r\\n              <mat-label>Holiday Date</mat-label>\\r\\n              <input matInput placeholder=\\\"Date\\\" [matDatepicker]=\\\"holidayDate\\\"\\r\\n                  [matDatepickerFilter]=\\\"disabledWeekEnds\\\" readonly [(ngModel)]=\\\"holiday.holidayDate\\\"\\r\\n                  name=\\\"holidayDate\\\" formControlName=\\\"holidayDate\\\">\\r\\n              <mat-datepicker-toggle matSuffix [for]=\\\"holidayDate\\\"></mat-datepicker-toggle>\\r\\n              <mat-datepicker color=\\\"warn\\\" #holidayDate disabled=\\\"false\\\"></mat-datepicker>\\r\\n          </mat-form-field>\\r\\n\\r\\n          <mat-form-field class=\\\"col-md-4\\\" appearance=\\\"outline\\\">\\r\\n            <mat-label>Status</mat-label>\\r\\n            <mat-select [(ngModel)]=\\\"holiday.status\\\" name=\\\"status\\\" formControlName=\\\"status\\\">\\r\\n              <mat-option *ngFor=\\\"let i of statusList\\\" [value]=\\\"i.status\\\">\\r\\n                {{i.status}}\\r\\n              </mat-option>\\r\\n            </mat-select>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n      </form>\\r\\n\\r\\n      <app-form-action-buttons [childObject]=\\\"holiday\\\" [childForm]=\\\"holidayForm\\\" (saveFunction)=\\\"save()\\\"\\r\\n        (updateFunction)=\\\"update()\\\" (cancelFunction)=\\\"resetFormValidator()\\\" (deleteFunction)=\\\"delete()\\\"></app-form-action-buttons>\\r\\n      <br>\\r\\n      <app-form-list [dataSource]=\\\"dataSource\\\" [displayedColumns]=\\\"displayedColumns\\\"\\r\\n        (selectInListFunction)=\\\"getHoliday()\\\"></app-form-list>\\r\\n\\r\\n    </div>\\r\\n  </form>\\r\\n\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { HolidayComponent } from './holiday.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: HolidayComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class HolidayRoutingModule { }\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcGFnZXMvbWFpbnRlbmFuY2UvaG9saWRheS9ob2xpZGF5LmNvbXBvbmVudC5zY3NzIn0= */\";","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { HolidayRoutingModule } from './holiday-routing.module';\r\nimport { FragmentsModule } from 'app/modules/fragments/fragments.module';\r\nimport { AngularMaterialModule } from '@shared';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { HolidayComponent } from './holiday.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    HolidayComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    HolidayRoutingModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule,\r\n    AngularMaterialModule,\r\n    FragmentsModule,\r\n  ]\r\n})\r\nexport class HolidayModule { }\r\n"]}