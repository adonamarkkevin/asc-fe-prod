{"version":3,"sources":["webpack:///src/app/modules/pages/applications/schedule-of-fees/special-applications/special-applications.component.ts","webpack:///src/app/modules/pages/applications/schedule-of-fees/special-applications/special-applications.component.html","webpack:///src/app/core/models/multiple-application.model.ts","webpack:///src/app/core/models/comment.model.ts","webpack:///src/app/modules/pages/applications/preview-attachments/preview-attachments.component.ts","webpack:///src/app/modules/pages/applications/preview-attachments/preview-attachments.component.html","webpack:///src/app/modules/pages/applications/preview-application/preview-application.component.ts","webpack:///src/app/modules/pages/applications/preview-application/preview-application.component.html","webpack:///src/app/modules/pages/applications/schedule-of-fees/multiple-applications/modal-multiple-applications/modal-multiple-applications.component.ts","webpack:///src/app/modules/pages/applications/schedule-of-fees/multiple-applications/modal-multiple-applications/modal-multiple-applications.component.html","webpack:///src/app/modules/pages/applications/reassignment/reassignment.component.ts","webpack:///src/app/modules/pages/applications/reassignment/reassignment.component.html","webpack:///src/app/modules/pages/applications/applications.module.ts","webpack:///src/app/modules/fragments/update-multiple-application/update-multiple-application.component.ts","webpack:///src/app/modules/fragments/update-multiple-application/update-multiple-application.component.html","webpack:///src/app/modules/pages/company/company-routing.module.ts","webpack:///src/app/modules/pages/company/add-company/add-company-routing.module.ts","webpack:///src/app/modules/pages/applications/schedule-of-fees/single-application/single-application.component.ts","webpack:///src/app/modules/pages/applications/schedule-of-fees/single-application/single-application.component.html","webpack:///src/app/modules/pages/applications/schedule-of-fees/multiple-applications/multiple-applications.component.ts","webpack:///src/app/modules/pages/applications/schedule-of-fees/multiple-applications/multiple-applications.component.html","webpack:///src/app/modules/pages/applications/schedule-of-fees/special-applications/modal-special-applications/modal-special-applications.component.ts","webpack:///src/app/modules/pages/applications/schedule-of-fees/special-applications/modal-special-applications/modal-special-applications.component.html","webpack:///src/app/core/models/media-models/mulstimedia-static.const.ts","webpack:///src/app/modules/pages/accounting/index.ts","webpack:///src/app/modules/pages/applications/applications-routing.module.ts","webpack:///src/app/modules/pages/applications/s2-application/add-s2-application/add-s2-application.component.ts","webpack:///src/app/modules/pages/applications/s2-application/add-s2-application/add-s2-application.component.html","webpack:///src/app/modules/pages/applications/attachment-document/attachment-document.component.ts","webpack:///src/app/modules/pages/applications/attachment-document/attachment-document.component.html","webpack:///src/app/modules/pages/accounting/upload-payment/upload-payment.component.ts","webpack:///src/app/modules/pages/accounting/upload-payment/upload-payment.component.html","webpack:///src/app/modules/fragments/s1-form-type/s1-form-type.component.ts","webpack:///src/app/modules/fragments/s1-form-type/s1-form-type.component.html","webpack:///src/app/modules/pages/applications/reassignment/reassignment-routing.module.ts","webpack:///src/app/modules/pages/applications/comment/comment.component.ts","webpack:///src/app/modules/pages/applications/comment/comment.component.html","webpack:///src/app/core/models/comments.model.ts","webpack:///src/app/modules/pages/company/add-company/add-company.module.ts","webpack:///src/app/modules/pages/applications/s2-application/list-s2-application/list-s2-application.component.ts","webpack:///src/app/modules/pages/applications/s2-application/list-s2-application/list-s2-application.component.html","webpack:///src/app/modules/pages/applications/client-information/client-information.component.ts","webpack:///src/app/modules/pages/applications/client-information/client-information.component.html","webpack:///src/app/core/models/media-models/multimedia-moving.const.ts","webpack:///src/app/modules/pages/applications/index.ts","webpack:///src/app/modules/pages/applications/s1-application/add-s1-application/add-s1-application.component.ts","webpack:///src/app/modules/pages/applications/s1-application/add-s1-application/add-s1-application.component.html","webpack:///src/app/modules/fragments/update-special-application/update-special-application.component.ts","webpack:///src/app/modules/fragments/update-special-application/update-special-application.component.html","webpack:///src/app/modules/pages/applications/s1-application/list-s1-application/list-s1-application.component.ts","webpack:///src/app/modules/pages/applications/s1-application/list-s1-application/list-s1-application.component.html","webpack:///src/app/modules/pages/applications/s1-application/list-s1-application/list-s1-dialog.html","webpack:///src/app/modules/pages/maintenance/index.ts","webpack:///src/app/modules/pages/company/company.module.ts","webpack:///src/app/core/models/copy-claims.model.ts","webpack:///src/app/modules/pages/applications/material-information/material-information.component.ts","webpack:///src/app/modules/pages/applications/material-information/material-information.component.html","webpack:///src/app/modules/pages/applications/performance-metrics/performance-metrics.component.ts","webpack:///src/app/modules/pages/applications/performance-metrics/performance-metrics.component.html","webpack:///src/app/modules/pages/applications/reassignment/reassignment.module.ts","webpack:///src/app/modules/pages/company/index.ts"],"names":["SpecialApplicationsComponent","apiService","dialog","dataStorage","displayedColumns","paymentList","currentUser","getUserAccount","getS2PaymentList","findAll","scheduleOfFeesS2Special","subscribe","res","dataSource","paginator","sort","dialogRef","open","width","height","data","afterClosed","result","ngOnInit","MultipleApplication","MultipleApplicationId","Comment","PreviewAttachmentsComponent","previewAttachmentsList","console","log","attachmentUrl","window","PreviewApplicationComponent","attachmentDocuments","originalAttachmentDocuments","revisionAttachmentDocuments","complianceAttachmentDocuments","applicationSingleMedia","multimediaDTO","supportiveDocumentList","multimediaMovingList","multimediaStaticList","typeOfDocument","previewS1Application","submissionType","ORIGINAL","REVISION","revisionLetterAttachment","COMPLIANCE","decisionStatus","INCOMPLETE","MAIN","mainDoc","filter","attachmentType","fileURL","SUPPORTIVE","supportiveDoc","REVISION_LETTER","revisionLetterDoc","ELEMENT_DATA","referenceCode","amount","ModalMultipleApplicationsComponent","sanitizer","fileStorageService","sweetAlertService","router","multipleApplicationList","s1Application","payment","previewDocument","attachmentDocument","isSubmitted","paymentTypeList","multipleApplication","isDisabled","typeOfMediumDisplay","paymentStatus","FOR_PAYMENT","getPaymentDetails","getMultipleApplicationList","getPaymentList","multiplePaymentDetails","id","paymentDetails","getMultipleAppFormsWithNoRejected","responseData","forEach","refTypeOfMedium","applicationFormS2","applicationForm","getApplicationSingleMedia","appFormReference","getMultimediaMoving","getMultimediaStatic","err","error","message","under_maintenance","paymentType","userRole","name","ROLE_APPLICANT","creditCardIndex","findIndex","element","paymentDescription","splice","event","attachmentSize","target","files","size","type","customErrorMessage","value","pdfURL","URL","createObjectURL","safeURLProofOfPayment","bypassSecurityTrustResourceUrl","reader","FileReader","file","readAsDataURL","onload","selectedFiles","fire","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","setDisplayProgressbar","params","PAYMENT","pushFileToStorage","item","obj","paymentAttachmentReference","amountDue","totalAmount","filename","saveProofOfPayment","undefined","FOR_APPROVAL","officialReceiptNo","paymentMethod","save","applicationFormPresentor","customSuccessMessage","closeModal","close","navigate","findByParam","length","mediumExecution","typeOfMedium","description","sizeLength","index","applicationMultimedia","multimediaList","Set","map","mappedList","multimediaSizeLength","mediaCtrl","media","selectFile","ReassignmentComponent","formBuilder","spinner","s2Application","userList","s1ApplicationList","s1ApplicationDisplayedColumns","s2ApplicationList","s2ApplicationDisplayedColumns","applicationOwnerName","displayedContent","getS1ApplicationList","setFormValidator","getUserList","applicationType","show","admin","filteredS1List","appliedS2","s1ApplicationDataSource","formListComponent","hide","s2ApplicationDataSource","findById","idForUpdate","applicationOwner","lastName","firstName","assignedUser","endpoint","currentObj","applicationReassignment","s2ApplicationReassignment","actionStatus","assignedEncoder","assignedAdSpecialist","success","resetFormValidator","s1ApplicationForm","group","adTitle","assignedReviewer","assignedScreener","markAsUntouched","markAsPristine","userAccount","filteredUsers","selected","evt","tab","textLabel","changeTab","ApplicationsModule","UpdateMultipleApplicationComponent","datepipe","company","multipleS1Application","multipleS1ApplicationList","isAscUser","isDisableFieldOnUpdate","isDisabledSubmitButton","canForwardMultipleApp","isAllApplicationsHasMainDoc","warningNote","formType","MULTIPLE","ascUserRoleList","role","ascUser","brand","product","currentUserRole","includes","getUserRole","getS1FormsByMultipleApplication","ROLE_ADMIN","ROLE_SUPER_ADMIN","getMultipleAppForms","filteredList","mainAttachmentReference","supportingAttachmentReference","hasNoSupportingDocs","today","transform","Date","approvedDate","dateOfSubmission","submissionStatus","status","checkForwardStatus","countVerifiedApplicationForm","actualNumberOfApplicationForm","displayStatus","endpointExtension","actionDate","actionBy","username","update","multipleId","ctr","numberOfApplication","result2","user","forwardMultipleAppFormToScreener","forwardMultipleAppFormToReviewer","filteredS1App","routes","path","children","LIST_COMPANY","loadChildren","m","ListCompanyModule","ADD_COMPANY","AddCompanyModule","UPDATE_COMPANY","CompanyRoutingModule","forChild","component","AddCompanyRoutingModule","SingleApplicationComponent","getS1PaymentList","maxHeight","MultipleApplicationsComponent","getS1MultiplePaymentList","ModalSpecialApplicationsComponent","specialPaymentDetails","vat","toFixed","navigateByUrl","UNPAID","s2ApplicationFormPresentor","uploadDocument","MultiMediaStaticConst","Array","multimediaStaticMedium","hasSelected","S1_APPLICATION","S1ApplicationModule","S2_APPLICATION","S2ApplicationModule","SCHEDULE_OF_FEES_SINGLE_APPLICATION","SingleApplicationModule","SCHEDULE_OF_FEES_MULTIPLE_APPLICATIONS","MultipleApplicationsModule","SCHEDULE_OF_FEES_SPECIAL_APPLICATIONS","SpecialApplicationsModule","ACCOUNTS_PAYABLE","AccountsPayableModule","APPLICATION_REASSIGNMENT","ReassignmentModule","ApplicationsRoutingModule","AddS2ApplicationComponent","route","spinnerMessageEmitter","title","rationaleS2","report","s2OriginalAttachmentDocuments","s2OriginalAttachmentObservable","s2ComplianceAttachmentDocuments","affiliationList","companyList","selectedMultimediaList","rationaleOthersList","rationaleLists","isNewCompany","showCompanyAddress","spinnerMessage","todayDate","tempCompliance","audioVideo","isAudioVideo","isShowUploadButton","rationaleDisplay","isSuperAdmin","isAdmin","isAccounting","isApplicant","isEvaluator","isAdSpecialist","isScreener","isReviewer","previewAttachmentsDisplayedColumns","applicationStage","Number","snapshot","paramMap","get","initUserRole","getAffiliationList","getCompanyList","viewS2Application","ROLE_ACCOUNTING","ROLE_SCREENER","ROLE_REVIEWER","ROLE_AD_SPECIALIST","ROLE_ENCODER","clientInformation","materialInformation","finalMaterialAttachmentReference","getS2AttachmentDocument","setApplicationStage","hideSpinner","SINGLE_MEDIA","MULTIMEDIA_MOVING","MULTIMEDIA_STATIC","getAttachmentDocuments","DISAPPROVED","internalStatus","getRationaleList","clearanceAndToa","previewAttachmentsData","previewAttachmentsListDataSource","comment","getCommentsS2","swalMessage","s2ApplicationFormPresentorSubmit","s2ApplicationFormEncoderVerify","s2ApplicationFormAdSpe","APPROVED","navigateToS2List","s2ApplicationForm","externalStatus","action","attachmentDocumentByAppFormReference","SAVED","next","supportiveDocument","i","validityDate","incompleteDisapprovedRationale","activeMembersAffiliation","activeCompanies","companyName","affiliation","required","attachmentComponent","eventParam","byteToMegaByte","finalMaterialType","maxFileSize","fileSize","toLowerCase","safeURLFile","selectedFile","appFormRef","FINAL_MATERIAL","uploadedFinalMaterialFile","addToAttachmentDocuments","myFinalMaterialFileInputC","nativeElement","myFinalMaterialFileC","myFinalMaterialFileInput","myFinalMaterialFile","originalFilename","fileExtension","documentFormat","createdBy","createdDate","attachmentDocumentByS2AppFormReference","setTimeout","applicationRationaleS2","others","rationaleListS2","format","module","applicationFormS2Id","printReport","generateReports","newBlob","Blob","downloadURL","s2ManualRelease","accordion","AttachmentDocumentComponent","dataStorageService","s2SupportAttchmentDocuments","s2DocObservable","s2SupportDocument","S2SupportDoc","tempRevisionAttachmentDocuments","tempComplianceAttachmentDocuments","tabLabel","s2Appplication","labelMainDocument","showMainDocumentUploadButton","showMainDocumentUploadButtonR","showMainDocumentUploadButtonC","showMainDocumentViewButton","showMainDocumentViewButtonR","showMainDocumentViewButtonC","showSupportDocumentFrame","showSupportDocumentFrameR","showSupportDocumentFrameC","showSupportiveDocumentUploadButton","showSupportiveDocumentUploadButtonR","showSupportiveDocumentUploadButtonC","showSupportiveDocumentViewButton","showSupportiveDocumentViewButtonR","showSupportiveDocumentViewButtonC","showRevisionLetterViewButton","showRevisionLetterUploadButton","mainDocAttachmentSize","supportDocAttachmentSize","revisionDocAttachmentSize","progress","percentage","changes","hasMain","Boolean","find","c","hasSupportive","r","accountType","label","attachmentSizeForUpload","safeURLSupportDoc","safeURLMainDoc","safeURLRevisionLetter","S1_APPLICATION_REVIEWED","COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER","safeURLMainDocR","safeURLSupportDocR","revisionLetterAttachmentReference","safeURLMainDocC","safeURLSupportDocC","replaceAll","currentFileUpload","uploadedFileSupportive","s2SupportDocAddToAttachmentDocument","uploadedFileMain","uploadedFileRevision","push","JSON","parse","stringify","myMainFile","myMainInput","isOriginal","documentType","currentSubType","REVISION_SCREENED","S1_APPLICATION_REJECTED","mySupportiveFile","mySupportiveInput","myRevisionLetterFile","attachmentDocumentForm","attachmentReference","language","dialect","multimediaLength","multimediaSize","applicationMultimediaStatic","applicationMultimediaMoving","UploadPaymentComponent","paymentForm","remarks","pt","S1FormTypeComponent","numberOfMultipleApplicationAllowed","applicationTypeList","formTypeList","showNumberOfApplications","isMultiple","isSpecial","isPresentation","getApplicationTypeList","getNoOfMultipleApplicationsAllowed","noOfMultipleApplicationAllowed","INDIVIDUAL","toLocaleLowerCase","apptype","formtype","numberOfApplications","min","parseInt","minimum","toString","max","maximum","navigateToS1Application","formAndAppType","appType","setS1FormAndAppType","setNumberOfApplications","FOR_PRESENTATION","proceedS1Application","checkType","setAsMultiple","setAsForPresentation","ReassignmentRoutingModule","CommentComponent","commentS1Application","commentS2Application","internalComment","externalComment","copyClaims","commentList","internalCommentList","externalCommentList","replyInternalComment","copyClaimsList","commentId","commentTypeList","commentType","internalCommentProcess","externalCommentProcess","copyClaimesProcess","disabledComment","editCopyClaimsComment","editExternalComment","replyEditorConfig","editable","spellcheck","minHeight","minWidth","translate","enableToolbar","showToolbar","placeholder","defaultParagraphSeparator","defaultFontName","defaultFontSize","fonts","customClasses","tag","uploadUrl","uploadWithCredentials","sanitize","toolbarPosition","toolbarHiddenButtons","editorConfig","screenerDecisionComment","reviewerDecisionComment","releaseStatus","getComments","getCopyClaims","commentS2","applicationFormType","S2","S1","setHtml5Value","dateTransformed","isReply","parentId","addInternalComment","replyEditorIsEnabled","deleteById","commentForm","internalComments","externalComments","commentBody","commentHtmlOutput","cancel","CommentThread","parent","ListS2ApplicationComponent","commonService","pageSize","pageNo","pageSizeOptions","s2TotalItems","s2ApplicationListForClearance","forClearanceDisplayedColumns","s2SpecialTotalItems","s2SpecialApplicationList","s2SpecialApplicationDisplayedColumns","applicationRequest","currentPage","originalTabDataCount","complianceTabDataCount","releasedAppealTabDataCount","toaTabDataCount","click","timeLeft","refreshButtonEnabled","isTimerValueDisplay","s2ApplicationCountList","applicationCountS2","viewApplicationType","url","getListCount","applicationTypeTitle","getSpecialS2ApplicationList","getList","badgeCountByApplicationOwnerS2","badgeCountByAscUserS2","param","toUpperCase","TOA","s2ApplicationFormEncoder","s2ApplicationFormAdmin","totalItems","statuses","s2SpecialClearingApplicationRequestsAdmin","applicationOwnerId","s2SpecialClearingApplicationRequests","s2SpecialApplicationDataSource","pageIndex","setPageSizeOptionsInput","split","str","formStatus","OPEN","takeApplication","specialClearing","elementId","getForDecisionAndComment","paginatorFalse","a","b","reverse","sendClickEvent","startTimer","interval","setInterval","clearInterval","timerDisplay","minutes","Math","floor","refresh","ClientInformationComponent","addressService","checkInactiveAffiliation","hasErrorFields","memberAffiliationList","brandList","productList","regionsList","provinceList","cityMunicipalityList","barangayList","countryList","notInSelection","ngUnsubscribe","getBrandList","getCountries","setProductList","clientInformationForm","category","companyAddress","country","membersAffiliation","valueChanges","pipe","checkInvalidFields","activeBrands","productsByBrand","INACTIVE","checkInactiveAffiliationFunction","dataForModal","isFromModal","isUpdate","getDefaultCountry","setS1NewCompany","getS1NewCompany","getS1NewBrand","currentStatus","getS1NewProduct","code","countries","setDefaultCountry","isInactiveAffiliation","emit","complete","MultiMediaMovingConstant","multimediaMovingMedium","activeHolidayDates","activeWeekendDates","AddS1ApplicationComponent","cd","commonServices","_snackBar","exportTime","hour","minute","meriden","presentorDetails","rationale","specialApplicationType","screenerList","reviewerList","applicantList","mediaTypeListTemp","adSpecialistList","applicationSingleMediaTemp","currentSizeLengthMultimedia","toDeleteMultimediaList","hasMultimediaLengthToEnableSubmit","disableSubmitButtonByMedia","hasErrorsClient","badgeCounter","isChecked","isSubmit","noDocumentAttached","accordionDisable","accordionExpanded","validationMessage","buttonDisabled","adSpecButtonDisabled","maxSizeLength","getDay","getS1FormAndAppType","getS1Application","getSpecialS1Application","submissionDate","autoSubmit","viewApplication","tagLine","sequenceOrder","disableFieldOnUpdate","getUserTypeForList","checkSingleMediaChanges","getAllActiveHolidays","getAllActiveWeekends","that","date","isDateHoliday","newMultimediaList","detectChanges","sessionStorage","removeItem","setAppType","fetchMultimedia","scheduleSubmission","onChangeDate","getPresentorDetails","APPROVED_WITH_CAUTION","COMPLIANCE_DOCUMENT_VERIFIED_BY_AD_SPE","REVISION_VERIFIED_BY_AD_SPE","getDecisionStatus","stampedMaterialAndDecisionForms","userLogin","previewApplication","currentSizeLength","mappedMultimedia","suppDoc","getSupportiveDocuments","viewPayment","res1","paymentAttachment","safeURL","submissionDateValue","controls","reset","disableSaveAndSubmitButton","decision","account","applicationFormScreener","defaultReviewer","reviewer","ascDefault","otherReviewers","buttonValidation","ACTIVE","process","saveOrUpdateApplication","validateAscRates","saveStatus","getNumberOfApplications","setAndSaveS1Data","isScheduleSendIsEmpty","setTypeOfMediumDisplay","saveUpdateApplicationSingleMedia","saveUpdateMultimedia","movingStatic","currentTOM","multimediaToDelete","replace","SAVE","saveAppForm","SUBMIT","processAppForm","typeOfMultimedia","applicationMultimediaMovingList","e","applicationMultimediaStaticList","navigateToS1List","supportingDocuments","newSupportiveDocumentList","BATCH","dateFetched","api","newStatus","multipleApplicationReturnToAdSpe","multipleApplicationReturnToScreener","applicationFormReviewer","S1_APPLICATION_VERIFIED_BY_AD_SPE","S1_APPLICATION_SCREENED","reAssignScreenerForMultipleApplication","applicationFormAdSpecialist","reAssignReviewerForMultipleApplication","currentDate","msg","S1_APPLICATION_SUBMITTED","S1_APPLICATION_CANCELLED","CANCEL","REJECT","VERIFY","SCREEN","ACCEPT","checkNullValues","selectedApplicationOwner","saveSupportingDocuments","responseMessage","forwardMultipleAppsTo","checkCutOffTime","horizontalPosition","verticalPosition","duration","submitDecisionAndCommentScreener","submitDecisionAndCommentReviewer","forwardMultipleAppFormToAdSpe","releaseMultipleApplication","SUBMITTED_DOCUMENT_FOR_COMPLIANCE","revisionNo","submitApplicationForm","hasSpecialClearing","applicationRequests","d","day","weekendDate","holidayDate","setDecisionStatus","incompleteDisapprovedModal","applicationFormEncoder","decisionFormFileURL","stampMaterialFileURL","applicationFormId","applicationRationale","rationaleList","hasMultimediaLengthChange","modifyApprovedS1ApplicationFormMultimedia","modifyApprovedS1ApplicationFormSingleMedia","newMedia","mediaType","multimediaListChanges","hasSizeLengthChange","multimediaSizeLengthNew","filteredMedia","filteredRes","hasNewMultimediaType","multimedia","some","currMedia","medium","typeofMedium","s1ManualRelease","regex","RegExp","startTime","endTime","currentTime","String","getHours","getMinutes","getSeconds","holidays","holidayType","penalty","delinquent","isSaveAndRequestForApprovalDisabled","UpdateSpecialApplicationComponent","ListS1ApplicationComponent","webSocketService","totalPages","returnedApps","multipleApplicationDisplayedColumns","multipleTotalItems","specialApplicationList","specialApplicationDisplayedColumns","specialTotalItems","assignedApplicationList","assignedApplicationDisplayedColumns","forReleaseApplicationsList","forReleaseTotalItems","forReleaseApplicationDisplayedColumns","applicationList","revisionTabDataCount","decisionCommentTabDataCount","s1ApplicationTitle","doFilter","trim","doFilterS1MultipleApplicationList","multipleApplicationDataSource","doFilterSpecialS1ApplicationList","specialApplicationDataSource","doFilterAssignedS1ApplicationList","assignedApplicationDataSource","doFilterForReleaseApplicationList","forReleaseApplicationDataSource","listen","badgeCountByAscUser","getListCounts","refreshApplicationBadgeCount","match","screenedCount","badgeCountByApplicationOwner","response","screenedApplications","getMultipleS1ApplicationList","getSpecialS1ApplicationList","getAssignAppFormBy","getForReleaseApplicationList","getReleasedApplicationList","applicationFormAdmin","stats","PAID","ASSIGN_TO_PRESENTOR","ascEndpoint","assignedASCUser","s1SpecialApplicationRequestsAdmin","s1SpecialApplicationRequests","retrieveReassignLength","getForReleaseApplicationAdSpe","getForReleaseApplicationsReviewer","getAdminSuperAdminForReleaseApplication","getReleaseApplicationsAdSpe","currentAssignee","lockedBy","setS1Application","setSpecialS1Application","promise","Promise","resolve","reject","saveUserAccount","getCompanyById","typeOfExecution","ListS1Dialog","s1App","application","fetchedData","validateApp","LOCKED","userType","getAllAdSpeReturnedApps","getAllScreenerReturnedApps","respose","indexOf","$event","preventDefault","isS2","hasToa","s2ApplicationFormPresentorSave","proceedToS2","requestForClearingAndClearance","CompanyModule","CopyClaims","MaterialInformationComponent","validateFieldService","util","checkSingleMediaChangesFunction","checkMultimediaChangesFunction","typeOfMediumList","executionList","dialectList","typeOfDocumentList","setMultimediaList","selectedMultimediaStringList","supportingDocument","newApplicationSingleMedia","selectMultimedia","previewMainDocument","showSupportiveDocumentDownloadButton","showRevisionLetterDownloadButton","previewSupportiveDocument","isDigitalStatic","savedTypeOfMedium","selectedTypeOfMedium","multimediaMovingDTO","multimediaStaticDTO","getTypeOfDocumentList","emitSingleMediaChanges","initializeMultimediaMovingObj","initializeMultimediaStaticObj","getTypeOfMedium","getExecutionDialectList","materialInformationForm","previousRefCode","basedOn","variant","dateOfLaunch","expiresOn","input","typeOfMediumSingleMedia","typeOfMediumMultiMediaMoving","MULTIMEDIA","typeOfMediumMultiMediaStatic","resetValues","typeOfMainDocument","executionEnable","lengthEnable","sizeLengthEnable","typeOfExecutionsByMedium","dialects","keepValues","key","checkIfDocumentAlreadyExist","expiresOnEnable","supportingDocumentIndex","number","numbersOnly","PerformanceMetricsComponent","performanceMetricsList","getPerformanceMatricsList","performanceMetrics","closeDialog"],"mappings":"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","file":"applications-applications-module-es5.js","sourcesContent":["import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTable, MatTableDataSource } from '@angular/material/table';\r\nimport { ApiService, DataStorageService, SweetAlertService } from '@services';\r\nimport { ENDPOINTS } from '@shared';\r\nimport { ModalSpecialApplicationsComponent } from './modal-special-applications/modal-special-applications.component';\r\n\r\n\r\n@Component({\r\n  selector: 'app-special-applications',\r\n  templateUrl: './special-applications.component.html',\r\n  styleUrls: ['./special-applications.component.scss']\r\n})\r\nexport class SpecialApplicationsComponent implements OnInit {\r\n\r\n  @ViewChild(MatPaginator, { static: false }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: false }) sort: MatSort;\r\n  @ViewChild(MatTable, { static: false }) table: MatTable<Object>;\r\n\r\n  dataSource: MatTableDataSource<any>\r\n  displayedColumns: string[] = ['referenceCode', 'typeOfApplication', 'brand', 'medium', 'applicantCompanyName', 'paymentStatus'];\r\n  paymentList = [];\r\n\r\n  currentUser: any;\r\n  constructor(\r\n    private apiService: ApiService,\r\n    private dialog: MatDialog,\r\n    private dataStorage: DataStorageService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.currentUser = this.dataStorage.getUserAccount();\r\n    this.getS2PaymentList();\r\n  }\r\n\r\n  getS2PaymentList() {\r\n    this.apiService.findAll(ENDPOINTS.scheduleOfFeesS2Special).subscribe((res: any) => {\r\n      this.paymentList = res;\r\n\r\n      this.dataSource = new MatTableDataSource<any>(this.paymentList);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    });\r\n  }\r\n\r\n  openModal(res) {\r\n\r\n    const dialogRef = this.dialog.open(ModalSpecialApplicationsComponent, {\r\n      width: '60%',\r\n      height: '85%',\r\n      data: res\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.ngOnInit();\r\n    });\r\n\r\n  }\r\n}\r\n","<form>\r\n  <div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12 title\">\r\n        <mat-label>\r\n          <mat-icon>view_list</mat-icon> Special Clearing - For Payment\r\n        </mat-label>\r\n      </div>\r\n    </div>\r\n    <hr>\r\n    <br>\r\n    <div class=\"col-md-12\" fxLayout fxLayoutAlign=\"center center\">\r\n      <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n        <input matInput type=\"text\" placeholder=\"Company Name\">\r\n      </mat-form-field>\r\n    </div>\r\n\r\n    <div class=\"mat-elevation-z8 fields\">\r\n      <table mat-table [dataSource]=\"dataSource\" matSort>\r\n        <ng-container matColumnDef=\"referenceCode\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> REFERENCE CODE </th>\r\n          <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"openModal(element)\"> {{element?.applicationForm?.referenceCode | uppercase}}</td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"typeOfApplication\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> TYPE OF APPLICATION</th>\r\n          <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"openModal(element)\">{{element?.applicationForm?.applicationType.description | uppercase}}</td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"brand\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> BRAND</th>\r\n          <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"openModal(element)\">{{element?.applicationForm?.brand.description | uppercase}}</td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"medium\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> MEDIUM</th>\r\n          <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"openModal(element)\">{{element?.applicationForm?.typeOfMedium | uppercase}}</td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"applicantCompanyName\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> APPLICANT COMPANY NAME</th>\r\n          <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"openModal(element)\">{{element?.applicationForm?.company.companyName | uppercase}}</td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"paymentStatus\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> PAYMENT STATUS</th>\r\n          <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"openModal(element)\">{{element?.paymentStatus?.replaceAll('_',' ') | uppercase}}</td>\r\n        </ng-container>\r\n\r\n\r\n\r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n      </table>\r\n      <div class=\"no-record\" [hidden]=\"dataSource && dataSource?.data?.length > 0\">\r\n        No record found.\r\n      </div>\r\n      <mat-paginator [pageSizeOptions]=\"[10, 20, 50]\" showFirstLastButtons></mat-paginator>\r\n    </div>\r\n    <br>\r\n  </div>\r\n</form>\r\n","import { Company } from './company.model';\r\nimport { Brand } from './brand.model';\r\nimport { ApplicationType } from './application-type.model';\r\nimport { UserAccount } from './user-account.model';\r\nimport { Product } from './product.model';\r\nimport { Category } from '@models';\r\n\r\nexport class MultipleApplication {\r\n    id: number;\r\n    actionBy: string;\r\n    actionDate: Date;\r\n    adTitle: string;\r\n    applicationOwner: UserAccount;\r\n    applicationType: ApplicationType;\r\n    brand: Brand;\r\n    company: Company;\r\n    dateOfSubmission: Date;\r\n    numberOfApplication: number;\r\n    status: string;\r\n    tagLine: string;\r\n\r\n    actionStatus: string;\r\n    submissionStatus: string;\r\n    assignedAdSpecialist: UserAccount;\r\n    assignedEncoder: UserAccount;\r\n    assignedScreener: UserAccount;\r\n    assignedReviewer: UserAccount;\r\n    actualNumberOfApplicationForm: number;\r\n    countVerifiedApplicationForm: number;\r\n\r\n    totalAmount: number;\r\n    paymentStatus: string;\r\n\r\n    product: Product;\r\n\r\n}\r\n\r\nexport class MultipleApplicationId {\r\n  id: number;\r\n}\r\n\r\n","import { S2Application } from './s2-application.model';\r\nimport { UserAccount } from './user-account.model';\r\n\r\nexport class Comment {\r\n    id: number;\r\n    comment: string;\r\n    revisionNo: number;\r\n    actionBy: UserAccount;\r\n    role: string;\r\n    actionDate: Date;\r\n    commentType: string; // INTERNAL, EXTERNAL, EMAIL, REJECT\r\n    applicationFormType: string; // S1, S2\r\n    appFormReference: string;\r\n    applicationFormS2: S2Application;\r\n    // modifiedBy: string;\r\n    // modifiedDate: Date;\r\n}\r\n","import {\r\n  AfterViewInit,\r\n  Component,\r\n  Input,\r\n  OnInit,\r\n  ViewChild,\r\n} from \"@angular/core\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTable, MatTableDataSource } from \"@angular/material/table\";\r\n\r\n@Component({\r\n  selector: \"app-preview-attachments\",\r\n  templateUrl: \"./preview-attachments.component.html\",\r\n  styleUrls: [\"./preview-attachments.component.scss\"],\r\n})\r\nexport class PreviewAttachmentsComponent implements OnInit, AfterViewInit {\r\n  @ViewChild(MatPaginator, { static: false }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: false }) sort: MatSort;\r\n  @ViewChild(MatTable, { static: false }) table: MatTable<object>;\r\n  @Input() previewAttachmentsList = [];\r\n  @Input() dataSource: MatTableDataSource<object>;\r\n  @Input() displayedColumns = \"\";\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  ngAfterViewInit(): void {\r\n    console.log(this.dataSource);\r\n    if (this.dataSource) {\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    }\r\n  }\r\n\r\n  viewFormOrMaterial(attachmentUrl) {\r\n    if (attachmentUrl) {\r\n      window.open(attachmentUrl);\r\n    }\r\n  }\r\n}\r\n","<div class=\"mat-elevation-z8\">\r\n    <table mat-table [dataSource]=\"dataSource\" matSort>\r\n\r\n        <ng-container matColumnDef=\"decisionFormFilename\">\r\n            <th mat-header-cell *matHeaderCellDef> Decision Form Filename </th>\r\n            <td mat-cell *matCellDef=\"let element\"> {{ element?.decisionFormFilename }} </td>\r\n        </ng-container>\r\n\r\n        <!-- VIEW ICON START -->\r\n        <ng-container matColumnDef=\"viewDecisionFormIcon\">\r\n            <th mat-header-cell *matHeaderCellDef> View Decision Form </th>\r\n            <td mat-cell *matCellDef=\"let element\">\r\n                <span class=\"material-icons\" *ngIf=\"element?.decisionFormFileURL\" matTooltip=\"View Decision Form\"\r\n                    (click)=\"viewFormOrMaterial(element?.decisionFormFileURL)\">open_in_new</span>\r\n            </td>\r\n        </ng-container>\r\n        <!-- VIEW ICON END -->\r\n\r\n        <ng-container matColumnDef=\"stampMaterialFilename\">\r\n            <th mat-header-cell *matHeaderCellDef> Stamp Material Filename </th>\r\n            <td mat-cell *matCellDef=\"let element\"> {{ element?.stampMaterialFilename }} </td>\r\n        </ng-container>\r\n\r\n        <!-- VIEW ICON START -->\r\n        <ng-container matColumnDef=\"viewStampMaterialIcon\">\r\n            <th mat-header-cell *matHeaderCellDef> View Stamp Material </th>\r\n            <td mat-cell *matCellDef=\"let element\">\r\n                <span class=\"material-icons\" *ngIf=\"element?.stampMaterialFileURL\" matTooltip=\"View Stamp Material\"\r\n                    (click)=\"viewFormOrMaterial(element?.stampMaterialFileURL)\">open_in_new</span>\r\n            </td>\r\n        </ng-container>\r\n        <!-- VIEW ICON END -->\r\n\r\n        <ng-container matColumnDef=\"clearanceToaFilename\">\r\n            <th mat-header-cell *matHeaderCellDef> Clearance TOA Filename </th>\r\n            <td mat-cell *matCellDef=\"let element\"> {{ element?.clearanceToaFilename }} </td>\r\n        </ng-container>\r\n\r\n        <!-- VIEW ICON START -->\r\n        <ng-container matColumnDef=\"viewClearanceToaIcon\">\r\n            <th mat-header-cell *matHeaderCellDef> View Clearance TOA </th>\r\n            <td mat-cell *matCellDef=\"let element\">\r\n                <span class=\"material-icons\" *ngIf=\"element?.clearanceToaFileUrl\" matTooltip=\"View Clearance TOA\"\r\n                    (click)=\"viewFormOrMaterial(element?.clearanceToaFileUrl)\">open_in_new</span>\r\n            </td>\r\n        </ng-container>\r\n        <!-- VIEW ICON END -->\r\n\r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n    </table>\r\n    <div class=\"no-record\" [hidden]=\"dataSource && dataSource?.data?.length > 0\">\r\n        No record found.\r\n    </div>\r\n    <mat-paginator [pageSizeOptions]=\"[10, 20, 30]\" showFirstLastButtons></mat-paginator>\r\n\r\n</div>","import { Component, Input, OnInit, ViewChild } from '@angular/core';\r\nimport { S1Application } from '@models';\r\nimport { ApiService } from '@services';\r\nimport { APP_DECISION_STATUS, ATTACHMENT_TYPE, SUBMISSION_TYPE } from '@shared';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { ApplicationSingleMedia } from '../../../../core/models/application-single-media.model';\r\nimport { AttachmentDocumentComponent } from '../attachment-document/attachment-document.component';\r\n\r\n@Component({\r\n  selector: 'app-preview-application',\r\n  templateUrl: './preview-application.component.html',\r\n  styleUrls: ['./preview-application.component.scss']\r\n})\r\nexport class PreviewApplicationComponent implements OnInit {\r\n  @ViewChild(MatPaginator, { static: false }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: false }) sort: MatSort;\r\n  dataSource: MatTableDataSource<any>;\r\n  displayedColumns: string[] = ['typeOfDocument', 'variant', 'expiresOn', 'basedOn', 'remarks'];\r\n  @ViewChild(AttachmentDocumentComponent, { static: false }) materialAttachmentDocument: AttachmentDocumentComponent\r\n    ;\r\n\r\n  @Input() previewS1Application: any;// = new S1Application();\r\n  attachmentDocuments = [];\r\n  @Input() originalAttachmentDocuments = [];\r\n  @Input() revisionAttachmentDocuments = [];\r\n  @Input() complianceAttachmentDocuments = [];\r\n  @Input() applicationSingleMedia = new ApplicationSingleMedia();\r\n  @Input() revisionLetterAttachment: any;\r\n  @Input() multimediaDTO: any = {};\r\n\r\n  supportiveDocumentList = [];\r\n  multimediaMovingList = [];\r\n  multimediaStaticList = [];\r\n\r\n  constructor(\r\n    private apiService: ApiService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    // console.log('Preview..', this.previewS1Application);\r\n  }\r\n\r\n\r\n  viewDocument(typeOfDocument) {\r\n    if (this.previewS1Application.submissionType === SUBMISSION_TYPE.ORIGINAL) {\r\n      this.attachmentDocuments = this.originalAttachmentDocuments;\r\n    } else if (this.previewS1Application.submissionType === SUBMISSION_TYPE.REVISION) {\r\n      this.attachmentDocuments = this.revisionLetterAttachment;\r\n    } else if (this.previewS1Application.submissionType === SUBMISSION_TYPE.COMPLIANCE\r\n      || this.previewS1Application.decisionStatus === APP_DECISION_STATUS.INCOMPLETE) {\r\n      this.attachmentDocuments = this.complianceAttachmentDocuments;\r\n    }\r\n\r\n    if (typeOfDocument === ATTACHMENT_TYPE.MAIN) {\r\n      const mainDoc = this.attachmentDocuments.filter(res => res.attachmentType === ATTACHMENT_TYPE.MAIN)[0];\r\n      window.open(this.attachmentDocuments[0].fileURL);\r\n    } else if (typeOfDocument === ATTACHMENT_TYPE.SUPPORTIVE) {\r\n      const supportiveDoc = this.attachmentDocuments.filter(res => res.attachmentType === ATTACHMENT_TYPE.SUPPORTIVE)[0];\r\n      window.open(supportiveDoc.fileURL);\r\n    } else if (typeOfDocument === ATTACHMENT_TYPE.REVISION_LETTER) {\r\n      // this.attachmentDocuments.filter(res => res.attachmentType === ATTACHMENT_TYPE.REVISION_LETTER)[0];\r\n      const revisionLetterDoc = this.revisionLetterAttachment;\r\n      window.open(revisionLetterDoc.fileURL);\r\n    }\r\n  }\r\n\r\n}\r\n","<!--  -->\r\n<div class=\"row fields\">\r\n  <h4>\r\n    <i class=\"material-icons\">preview</i> &nbsp;<b>CLIENT'S INFORMATION</b>\r\n    <hr>\r\n  </h4>\r\n  <div class=\"row\">\r\n    <div class=\"col-md-4\" appearance=\"outline\">\r\n      <mat-label>Client Company Name</mat-label>\r\n      <input matInput [value]=\"previewS1Application?.company?.companyName\" disabled>\r\n    </div>\r\n    <div class=\"col-md-4\" appearance=\"outline\">\r\n      <mat-label>Client Membership Affiliation</mat-label>\r\n      <input matInput [value]=\"previewS1Application?.company?.membersAffiliation?.description\" disabled>\r\n    </div>\r\n    <div class=\"col-md-4\" appearance=\"outline\"></div>\r\n  </div>\r\n\r\n  <div class=\"row\"><br></div>\r\n\r\n  <div class=\"row\">\r\n    <div class=\"col-md-4\" appearance=\"outline\">\r\n      <mat-label>Brand</mat-label>\r\n      <input matInput [value]=\"previewS1Application?.brand?.description\" disabled>\r\n    </div>\r\n    <div class=\"col-md-4\" appearance=\"outline\">\r\n      <mat-label>Product</mat-label>\r\n      <input matInput [value]=\"previewS1Application?.product?.description\" disabled>\r\n    </div>\r\n    <div class=\"col-md-4\" appearance=\"outline\">\r\n      <mat-label>Category</mat-label>\r\n      <input matInput [value]=\"previewS1Application?.product?.category?.description\" disabled>\r\n    </div>\r\n  </div>\r\n\r\n  <br><br><br>\r\n</div>\r\n\r\n<!--  -->\r\n<div class=\"row fields\">\r\n  <h4>\r\n    <i class=\"material-icons\">preview</i> &nbsp;<b>MATERIAL INFORMATION</b>\r\n    <hr>\r\n  </h4>\r\n  <div class=\"row\">\r\n    <div class=\"col-md-12\" appearance=\"outline\">\r\n      <mat-label>Ad Title</mat-label>\r\n      <input matInput [value]=\"previewS1Application?.adTitle\" disabled>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"row\"><br></div>\r\n\r\n  <div class=\"row\">\r\n    <div class=\"col-md-6\" appearance=\"outline\">\r\n      <mat-label>Reference Code of Previously-Approved Material</mat-label>\r\n      <input matInput [value]=\"previewS1Application?.previousRefCode\" disabled>\r\n    </div>\r\n    <div class=\"col-md-6\" appearance=\"outline\">\r\n      <mat-label>Tag line</mat-label>\r\n      <input matInput [value]=\"previewS1Application?.tagLine\" disabled>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"row\" *ngIf=\"previewS1Application?.refTypeOfMedium\">\r\n    <div class=\"col-md-12\">\r\n      <hr>\r\n    </div>\r\n  </div>\r\n  <div class=\"row\" *ngIf=\"previewS1Application?.refTypeOfMedium\">\r\n    <div class=\"col-md-6\" appearance=\"outline\">\r\n      <mat-label>Media Type</mat-label>\r\n      <input matInput [value]=\"previewS1Application?.refTypeOfMedium\" disabled>\r\n    </div>\r\n  </div>\r\n  <div class=\"row\"><br></div>\r\n  <div class=\"row\" *ngIf=\"applicationSingleMedia\">\r\n    <div class=\"col-md-3\" appearance=\"outline\" *ngIf=\"applicationSingleMedia?.mediumExecution?.typeOfMedium?.description\">\r\n      <mat-label>Type of Medium</mat-label>\r\n      <input matInput [value]=\"applicationSingleMedia?.mediumExecution?.typeOfMedium?.description\" disabled>\r\n    </div>\r\n    <div class=\"col-md-3\" appearance=\"outline\" *ngIf=\"applicationSingleMedia?.mediumExecution\">\r\n      <mat-label>Execution</mat-label>\r\n      <input matInput [value]=\"applicationSingleMedia?.mediumExecution?.typeOfExecution?.typeOfExecution\" disabled>\r\n    </div>\r\n    <div class=\"col-md-3\" appearance=\"outline\" *ngIf=\"applicationSingleMedia?.dialect\">\r\n      <mat-label>Language/Dialect</mat-label>\r\n      <input matInput [value]=\"applicationSingleMedia?.dialect?.dialect\" disabled>\r\n    </div>\r\n    <div class=\"col-md-3\" appearance=\"outline\" *ngIf=\"applicationSingleMedia?.others\">\r\n      <mat-label>Others</mat-label>\r\n      <input matInput [value]=\"applicationSingleMedia?.others\" disabled>\r\n    </div>\r\n    <div class=\"col-md-3\" appearance=\"outline\" *ngIf=\"applicationSingleMedia?.sizeLength\">\r\n      <mat-label>Size / Length</mat-label>\r\n      <input matInput [value]=\"applicationSingleMedia?.sizeLength\" disabled>\r\n    </div>\r\n    <div class=\"col-md-3\" appearance=\"outline\" *ngIf=\"applicationSingleMedia?.width\">\r\n      <mat-label>Width</mat-label>\r\n      <input matInput [value]=\"applicationSingleMedia?.width\" disabled>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- TO BE DELETED ONCE VERIFIED -->\r\n  <!-- <div class=\"row\" *ngIf=\"multimediaMovingList?.length>0\">\r\n    <span *ngFor=\"let i of multimediaMovingList\">\r\n      <table>\r\n        <tr>\r\n          <td class=\"col-md-4\">\r\n            <mat-checkbox [checked]=\"true\" disabled>{{i?.typeOfMedium?.description}}</mat-checkbox>\r\n          </td>\r\n          <td class=\"col-md-1\">Length:</td>\r\n          <td class=\"col-md-2\">\r\n            <input matInput [value]=\"i?.multimediaSizeLength\" disabled>\r\n          </td>\r\n          <td class=\"col-md-5\"></td>\r\n        </tr>\r\n      </table>\r\n    </span>\r\n  </div>\r\n\r\n  <div class=\"row\" *ngIf=\"multimediaStaticList?.length>0\">\r\n    <span *ngFor=\"let i of multimediaStaticList\">\r\n      <table>\r\n        <tr>\r\n          <td class=\"col-md-4\">\r\n            <mat-checkbox [checked]=\"true\" disabled>{{i?.typeOfMedium?.description}}</mat-checkbox>\r\n          </td>\r\n          <td class=\"col-md-1\">Size</td>\r\n          <td class=\"col-md-2\">\r\n            <input matInput [value]=\"i?.multimediaSizeLength\" disabled>\r\n          </td>\r\n          <td class=\"col-md-5\"></td>\r\n        </tr>\r\n      </table>\r\n    </span>\r\n  </div> -->\r\n\r\n  <!-- New Multimedia List -->\r\n  <div class=\"row\" *ngIf=\"multimediaDTO\">\r\n    <table class=\"mx-3 mb-3\">\r\n      <ng-container *ngIf=\"previewS1Application?.refTypeOfMedium === 'MULTIMEDIA-STATIC'\">\r\n        <ng-container *ngFor=\"let i of multimediaDTO.applicationMultimediaStaticList\">\r\n          <tr *ngIf=\"i?.hasSelected\" style=\"height: 30px;\">\r\n            <td class=\"col-md-4\">\r\n              <mat-checkbox [checked]=\"i?.hasSelected\" disabled>\r\n                {{i?.multimediaStaticMedium | uppercase}}\r\n              </mat-checkbox>\r\n            </td>\r\n            <td class=\"col-md-1\" \r\n              *ngIf=\"previewS1Application?.refTypeOfMedium === 'MULTIMEDIA-STATIC' && i?.multimediaStaticMedium !== 'digital static'\">\r\n              Size\r\n            </td>\r\n            <td class=\"col-md-2\">\r\n              <input matInput \r\n                *ngIf=\"previewS1Application?.refTypeOfMedium === 'MULTIMEDIA-STATIC' && i?.multimediaStaticMedium !== 'digital static'\" \r\n                [value]=\"i?.sizeLength\" disabled>\r\n            </td>\r\n            <td class=\"col-md-5\"></td>\r\n          </tr>\r\n        </ng-container>\r\n      </ng-container>\r\n\r\n      <ng-container *ngIf=\"previewS1Application?.refTypeOfMedium === 'MULTIMEDIA-MOVING'\">\r\n        <ng-container *ngFor=\"let i of multimediaDTO.applicationMultimediaMovingList\" style=\"height: 30px;\">\r\n          <tr *ngIf=\"i?.hasSelected\">\r\n            <td class=\"col-md-4\">\r\n              <mat-checkbox [checked]=\"true\" disabled>\r\n                {{i?.multimediaMovingMedium | uppercase}}\r\n              </mat-checkbox>\r\n            </td>\r\n            <td class=\"col-md-1\" *ngIf=\"previewS1Application?.refTypeOfMedium === 'MULTIMEDIA-MOVING'\">Length</td>\r\n            <td class=\"col-md-2\">\r\n              <input matInput *ngIf=\"previewS1Application?.refTypeOfMedium === 'MULTIMEDIA-MOVING'\" [value]=\"multimediaDTO?.sizeLength\" disabled>\r\n            </td>\r\n            <td class=\"col-md-5\"></td>\r\n          </tr>\r\n        </ng-container>\r\n      </ng-container>\r\n    </table>\r\n  </div>\r\n\r\n  <app-attachment-document [s1Application]=\"previewS1Application\" [applicationStage]=\"'S1-Preview'\"\r\n  [isAscUser]=\"'true'\" [isDisableFieldOnUpdate]=\"'true'\"\r\n  [originalAttachmentDocuments]=\"originalAttachmentDocuments\" [revisionAttachmentDocuments]=\"revisionAttachmentDocuments\" [complianceAttachmentDocuments]=\"complianceAttachmentDocuments\"></app-attachment-document>\r\n\r\n  <div class=\"row\" *ngIf=\"supportiveDocumentList.length>0\">\r\n    <div class=\"col-md-12\" appearance=\"outline\">\r\n      <div class=\"mat-elevation-z8 fields\">\r\n        <table mat-table [dataSource]=\"dataSource||supportiveDocumentList\" matSort>\r\n\r\n          <ng-container matColumnDef=\"typeOfDocument\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> TYPE OF DOCUMENT </th>\r\n            <td mat-cell *matCellDef=\"let element\"> {{ element?.typeOfDocument?.description }} </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"variant\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> VARIANT </th>\r\n            <td mat-cell *matCellDef=\"let element\"> {{ element?.variant==undefined ? 'N/A' : element?.variant }} </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"expiresOn\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> EXPIRES ON </th>\r\n            <td mat-cell *matCellDef=\"let element\">\r\n              {{ element?.expiresOn==undefined ? 'N/A' : element?.expiresOn | date:'yyyy-MM-dd' }}\r\n            </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"basedOn\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> BASED ON </th>\r\n            <td mat-cell *matCellDef=\"let element\">\r\n              {{ element?.basedOn ==undefined ? 'N/A' : element?.basedOn | date:'yyyy-MM-dd' }}\r\n            </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"remarks\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> REMARKS </th>\r\n            <td mat-cell *matCellDef=\"let element\"> {{ element?.remarks==undefined ? 'N/A' : element?.remarks }} </td>\r\n          </ng-container>\r\n\r\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n          <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n        </table>\r\n        <div class=\"no-record\" [hidden]=\"dataSource && dataSource?.data?.length > 0\"\r\n          *ngIf=\"supportiveDocumentList.length==0\">\r\n          No supporting document found.\r\n        </div>\r\n        <!-- <mat-paginator [pageSizeOptions]=\"[10, 20, 50]\" showFirstLastButtons></mat-paginator> -->\r\n      </div>\r\n      <div class=\"row\"><br></div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!--  -->\r\n<div class=\"row fields\" *ngIf=\"previewS1Application.autoSubmit==true&&previewS1Application?.externalStatus!='SAVED'\">\r\n  <h4>\r\n    <i class=\"material-icons\">schedule_send</i> &nbsp;<b>AUTO-SUBMISSION DETAILS</b>\r\n    <hr>\r\n    <div class=\"row\">\r\n      <div class=\"col-md-6\" appearance=\"outline\">\r\n        <mat-label>Date</mat-label>\r\n        <input matInput [value]=\"previewS1Application.submissionDate\" disabled>\r\n      </div>\r\n      <!-- <div class=\"col-md-3\" appearance=\"outline\">\r\n        <mat-label>Time</mat-label>\r\n        <input matInput [value]=\"previewS1Application.autoSubmitTime+' AM'\" disabled>\r\n      </div> -->\r\n    </div>\r\n  </h4>\r\n</div>\r\n","import { Component, Inject, Input, OnDestroy, OnInit, Optional, ViewChild } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTable, MatTableDataSource } from '@angular/material/table';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { Router } from '@angular/router';\r\nimport { AttachmentDocument, Payment, S1Application } from '@models';\r\nimport { ApiService, DataStorageService, SweetAlertService } from '@services';\r\nimport { ATTACHMENT_TYPE, ENDPOINTS, ERROR_MESSAGES, PAYMENT_STATUS, SUBMISSION_TYPE, USER_ROLES } from '@shared';\r\nimport { ApplicationSingleMedia } from 'app/core/models/application-single-media.model';\r\nimport { MultipleApplication } from 'app/core/models/multiple-application.model';\r\nimport { FileStorageService } from 'app/core/services/file.storage.service';\r\nimport Swal from 'sweetalert2';\r\n\r\nexport interface companyDetails {\r\n  referenceCode: string;\r\n  amount: number;\r\n}\r\n\r\nconst ELEMENT_DATA: companyDetails[] = [\r\n  { referenceCode: 'Company one ', amount: 3000, },\r\n  { referenceCode: 'Company two ', amount: 4000, },\r\n  { referenceCode: 'Company three ', amount: 5000, },\r\n  { referenceCode: 'Company two ', amount: 6000, },\r\n  { referenceCode: 'Company three ', amount: 7000, },\r\n];\r\n\r\n@Component({\r\n  selector: 'app-modal-multiple-applications',\r\n  templateUrl: './modal-multiple-applications.component.html',\r\n  styleUrls: ['./modal-multiple-applications.component.scss']\r\n})\r\nexport class ModalMultipleApplicationsComponent implements OnInit, OnDestroy {\r\n\r\n  @ViewChild(MatPaginator, { static: false }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: false }) sort: MatSort;\r\n  @ViewChild(MatTable, { static: false }) table: MatTable<ModalMultipleApplicationsComponent>;\r\n  dataSource: MatTableDataSource<any>\r\n  displayedColumns: string[] = ['referenceCode', 'adTitle', 'mediumAndLength', 'amount'];\r\n  multipleApplicationList = [];\r\n\r\n  @Input() s1Application = new S1Application();\r\n  payment = new Payment();\r\n  safeURLProofOfPayment: any;\r\n  selectedFiles: any;\r\n  previewDocument = false;\r\n  attachmentDocument = new AttachmentDocument();\r\n  applicationSingleMedia = new ApplicationSingleMedia();\r\n  currentUser: any;\r\n  attachmentDocuments = [];\r\n  isSubmitted = false;\r\n  paymentTypeList = [];\r\n  paymentType: any;\r\n  attachment: any;\r\n  multipleApplication = new MultipleApplication();\r\n  totalAmount: any;\r\n  paymentDetails: any;\r\n  isDisabled = false;\r\n  typeOfMediumDisplay = '';\r\n\r\n  constructor(\r\n    private sanitizer: DomSanitizer,\r\n    private apiService: ApiService,\r\n    public dataStorage: DataStorageService,\r\n    private fileStorageService: FileStorageService,\r\n    private sweetAlertService: SweetAlertService,\r\n    private router: Router,\r\n    @Optional() public dialogRef: MatDialogRef<ModalMultipleApplicationsComponent>,\r\n    @Optional() @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {\r\n    if (data) {\r\n      this.multipleApplication = data;\r\n      if (this.multipleApplication.paymentStatus !== PAYMENT_STATUS.FOR_PAYMENT) {\r\n        this.isDisabled = true;\r\n      }\r\n      this.getPaymentDetails();\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getMultipleApplicationList();\r\n    this.getPaymentList();\r\n  }\r\n\r\n  getPaymentDetails() {\r\n    this.apiService.findAll(ENDPOINTS.multiplePaymentDetails + this.multipleApplication.id).subscribe((res: any) => {\r\n      this.paymentDetails = res;\r\n    });\r\n  }\r\n\r\n\r\n  getMultipleApplicationList() {\r\n    this.apiService.findAll(ENDPOINTS.getMultipleAppFormsWithNoRejected + this.multipleApplication.id).subscribe((res: any) => {\r\n      this.multipleApplicationList = res.responseData.data;\r\n      console.log(this.multipleApplicationList);\r\n      // this.totalAmount = this.multipleApplicationList.map(mapped => mapped.amount).reduce((previousValue, currentValue) =>\r\n      //   previousValue + currentValue,\r\n      //   0);\r\n\r\n      this.multipleApplicationList.forEach((multipleApplication) => {\r\n        switch (multipleApplication?.refTypeOfMedium || multipleApplication?.applicationFormS2?.applicationForm?.refTypeOfMedium) {\r\n          case 'SINGLE MEDIA':\r\n            this.getApplicationSingleMedia(multipleApplication?.appFormReference);\r\n            break;\r\n          case 'MULTIMEDIA-MOVING':\r\n            this.getMultimediaMoving(multipleApplication?.appFormReference);\r\n            break;\r\n          case 'MULTIMEDIA-STATIC':\r\n            this.getMultimediaStatic(multipleApplication?.appFormReference);\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      });\r\n\r\n\r\n      this.dataSource = new MatTableDataSource<any>(this.multipleApplicationList);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n\r\n    }, (err: any) => {\r\n      err.error.message = ERROR_MESSAGES.under_maintenance;\r\n      this.sweetAlertService.error(err);\r\n    });\r\n  }\r\n\r\n  getPaymentList() {\r\n    this.apiService.findAll(ENDPOINTS.paymentType).subscribe((res: any) => {\r\n      const currentUser = this.dataStorage.getUserAccount();\r\n      if (currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT) {\r\n        const creditCardIndex = this.paymentTypeList\r\n          .findIndex((element) => element.paymentDescription === 'Credit Card');\r\n        this.paymentTypeList.splice(creditCardIndex, 1);\r\n      }\r\n      this.paymentTypeList = res.responseData.data;\r\n    });\r\n  }\r\n\r\n  selectFile(event) {\r\n    const attachmentSize = event.target.files[0].size;\r\n\r\n    if (event.target.files[0].type === 'application/pdf') {\r\n      if (attachmentSize > 15000000) { // 1MB = 1M\r\n        this.sweetAlertService.customErrorMessage(`Attachments' total file size should not exceed 15MB.`);\r\n        event.target.value = '';\r\n        return;\r\n      } else {\r\n        const pdfURL = URL.createObjectURL(event.target.files[0]);\r\n        this.safeURLProofOfPayment = this.sanitizer.bypassSecurityTrustResourceUrl(pdfURL);\r\n        this.previewDocument = true;\r\n\r\n        // env.showSpinner = true;\r\n        const reader = new FileReader();\r\n        const [file] = event.target.files;\r\n\r\n        reader.readAsDataURL(file);\r\n        reader.onload = () => {\r\n        };\r\n      }\r\n\r\n      this.selectedFiles = event.target.files;\r\n    } else {\r\n      this.sweetAlertService.customErrorMessage('Attachment should be in PDF format only.');\r\n      event.target.value = '';\r\n      return;\r\n    }\r\n  }\r\n\r\n  uploadDocument(multipleApplication) {\r\n    Swal.fire({\r\n      text: 'Are you sure you want to submit this PROOF OF PAYMENT?',\r\n      icon: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Confirm'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.dataStorage.setDisplayProgressbar(true);\r\n        let params = '';\r\n        params = '?&attachmentType=' + ATTACHMENT_TYPE.PAYMENT + '&submissionType=' + SUBMISSION_TYPE.ORIGINAL;\r\n        this.fileStorageService.pushFileToStorage(ENDPOINTS.attachmentDocument, this.selectedFiles.item(0), params)\r\n          .subscribe(res => {\r\n            const obj = res.responseData.data;\r\n            console.log(obj);\r\n            this.s1Application.paymentAttachmentReference = obj.paymentAttachmentReference;\r\n            this.payment.paymentAttachmentReference = obj.paymentAttachmentReference;\r\n            this.payment.amountDue = this.totalAmount;\r\n            this.payment.multipleApplication = multipleApplication;\r\n            this.payment.filename = obj.filename;\r\n            this.saveProofOfPayment();\r\n            this.selectedFiles = undefined;\r\n          }, (err: any) => {\r\n            this.sweetAlertService.error(err);\r\n          }, () => {\r\n            // actions after subscription\r\n            this.dataStorage.setDisplayProgressbar(false);\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  saveProofOfPayment() {\r\n    console.log('Saving payment...');\r\n    this.dataStorage.setDisplayProgressbar(true);\r\n    this.payment.paymentStatus = PAYMENT_STATUS.FOR_APPROVAL;\r\n    this.payment.id = 0;\r\n    this.payment.officialReceiptNo = '';\r\n    this.payment.paymentMethod = null;\r\n    this.payment.amountDue = this.multipleApplication.totalAmount;\r\n    console.log('PAYMENT : ', this.payment);\r\n    console.log(this.paymentType.id);\r\n\r\n\r\n    this.apiService.save(`${ENDPOINTS.applicationFormPresentor}payment-type-id/${this.paymentType.id}/payment-multiple/submit`, this.payment)\r\n      .subscribe((res: any) => {\r\n        console.log('SAVED STATUS: ', res.responseData.data);\r\n\r\n        this.safeURLProofOfPayment = this.sanitizer.bypassSecurityTrustResourceUrl(res.responseData.data.fileURL);\r\n        this.isSubmitted = true;\r\n        this.sweetAlertService.customSuccessMessage('Proof of payment successfully submitted.');\r\n        this.closeModal();\r\n      }, (err) => {\r\n        console.log(err);\r\n        this.sweetAlertService.error(err);\r\n        this.dataStorage.setDisplayProgressbar(false);\r\n      }, () => {\r\n        this.dataStorage.setDisplayProgressbar(false);\r\n      });\r\n  }\r\n\r\n  closeModal(): void {\r\n    this.dialogRef.close();\r\n    this.router.navigate(['asc/page/application/multiple-applications']);\r\n  }\r\n  ngOnDestroy(): void {\r\n    // this.s1Application = null;\r\n  }\r\n\r\n  getApplicationSingleMedia(appFormReference = this.payment?.applicationForm?.appFormReference) {\r\n    if (this.payment?.applicationFormS2?.applicationForm?.refTypeOfMedium) {\r\n      appFormReference = this.payment?.applicationFormS2?.applicationForm?.appFormReference;\r\n    }\r\n    this.apiService.findByParam(ENDPOINTS.applicationSingleMedia,\r\n      `app-form-reference/${appFormReference}`).subscribe(\r\n        (res: any) => {\r\n          if (res.responseData.data.length > 0) {\r\n            this.applicationSingleMedia = res.responseData.data[0];\r\n\r\n            this.typeOfMediumDisplay = `${this.applicationSingleMedia?.mediumExecution?.typeOfMedium?.description} (${this.applicationSingleMedia?.sizeLength})`;\r\n            console.log('view applicationSingleMedia: ', this.typeOfMediumDisplay);\r\n\r\n            this.multipleApplicationList.forEach((element, index) => {\r\n              if (element.appFormReference === appFormReference) {\r\n                this.multipleApplicationList[index] = {\r\n                  ...this.multipleApplicationList[index],\r\n                  typeOfMediumDisplay: this.typeOfMediumDisplay\r\n                };\r\n              }\r\n            });\r\n            this.dataSource = new MatTableDataSource<any>(this.multipleApplicationList);\r\n            this.dataSource.paginator = this.paginator;\r\n\r\n          } else {\r\n            this.applicationSingleMedia = new ApplicationSingleMedia();\r\n            this.typeOfMediumDisplay = '';\r\n          }\r\n        }, (err: any) => {\r\n          this.applicationSingleMedia = new ApplicationSingleMedia();\r\n          this.typeOfMediumDisplay = '';\r\n        });\r\n  }\r\n\r\n  getMultimediaStatic(appFormReference = this.payment?.applicationForm?.appFormReference) {\r\n    this.apiService.findByParam(ENDPOINTS.applicationMultimedia,\r\n      `app-form-reference/${appFormReference}`).subscribe(\r\n        (res: any) => {\r\n          if (res.responseData.data.length > 0) {\r\n            const multimediaList = new Set(res.responseData.data.map(mappedList => `${mappedList?.typeOfMedium?.description} (${mappedList?.multimediaSizeLength})`));\r\n\r\n            this.typeOfMediumDisplay = '';\r\n            let mediaCtrl = 1;\r\n            for (const media of multimediaList) {\r\n              if (mediaCtrl !== multimediaList.size) {\r\n                this.typeOfMediumDisplay += `${media}, `;\r\n                mediaCtrl++;\r\n              } else {\r\n                this.typeOfMediumDisplay += media;\r\n              }\r\n            }\r\n\r\n            this.multipleApplicationList.forEach((element, index) => {\r\n              console.log(element);\r\n              if (element.appFormReference === appFormReference) {\r\n                this.multipleApplicationList[index] = {\r\n                  ...this.multipleApplicationList[index],\r\n                  typeOfMediumDisplay: this.typeOfMediumDisplay\r\n                };\r\n              }\r\n            });\r\n            this.dataSource = new MatTableDataSource<any>(this.multipleApplicationList);\r\n            this.dataSource.paginator = this.paginator;\r\n\r\n          } else {\r\n            this.typeOfMediumDisplay = '';\r\n          }\r\n        }, (err: any) => {\r\n          this.typeOfMediumDisplay = '';\r\n        });\r\n  }\r\n\r\n  getMultimediaMoving(appFormReference = this.payment?.applicationForm?.appFormReference) {\r\n    this.apiService.findByParam(ENDPOINTS.applicationMultimedia,\r\n      `app-form-reference/${appFormReference}`).subscribe(\r\n        (res: any) => {\r\n          if (res.responseData.data.length > 0) {\r\n            const multimediaList = new Set(res.responseData.data.map(mappedList => `${mappedList?.typeOfMedium?.description} (${mappedList?.multimediaSizeLength})`));\r\n\r\n            this.typeOfMediumDisplay = '';\r\n            let mediaCtrl = 1;\r\n            for (const media of multimediaList) {\r\n              if (mediaCtrl !== multimediaList.size) {\r\n                this.typeOfMediumDisplay += `${media}, `;\r\n                mediaCtrl++;\r\n              } else {\r\n                this.typeOfMediumDisplay += media;\r\n              }\r\n            }\r\n\r\n            this.multipleApplicationList.forEach((element, index) => {\r\n              console.log(element);\r\n              if (element.appFormReference === appFormReference) {\r\n                this.multipleApplicationList[index] = {\r\n                  ...this.multipleApplicationList[index],\r\n                  typeOfMediumDisplay: this.typeOfMediumDisplay\r\n                };\r\n              }\r\n            });\r\n            this.dataSource = new MatTableDataSource<any>(this.multipleApplicationList);\r\n            this.dataSource.paginator = this.paginator;\r\n\r\n          } else {\r\n            this.typeOfMediumDisplay = '';\r\n          }\r\n        }, (err: any) => {\r\n          this.typeOfMediumDisplay = '';\r\n        });\r\n  }\r\n}\r\n","<div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12 title\">\r\n            <mat-label>\r\n                <mat-icon>view_list</mat-icon> Schedule of Fees - Multiple Applications\r\n            </mat-label>\r\n        </div>\r\n    </div>\r\n    <hr>\r\n    <br>\r\n    <div class=\"row col-md-12\">\r\n        <div class=\"row col-md-6\">\r\n            <div>\r\n                <mat-label>Proof of Payment: &nbsp;&nbsp;&nbsp;<span>PDF file only!</span></mat-label><br>\r\n                <input class=\"file-upload\" type=\"file\" [(ngModel)]=\"attachment\" [ngModelOptions]=\"{standalone: true}\"\r\n                    accept=\".pdf\" (change)=\"selectFile($event)\" [disabled]=\"isDisabled\">\r\n            </div>\r\n            <div *ngIf=\"previewDocument===true && !isDisabled\">\r\n                <div class=\"file-upload\">\r\n                    <object [data]=\"safeURLProofOfPayment\" type=\"application/pdf\" width=\"100%\" height=\"500\">\r\n                        <iframe [src]=\"safeURLProofOfPayment\" width=\"100%\" height=\"500\">\r\n                            <p>This browser does not support PDF!</p>\r\n                        </iframe>\r\n                    </object>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row col-md-6\">\r\n\r\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n            <mat-label>Advertiser</mat-label>\r\n            <input matInput name=\"companyName\" [value]=\"multipleApplication?.company?.companyName\" readonly>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n            <mat-label>Vatable Sales</mat-label>\r\n            <input matInput class=\"numbers-input\" name=\"amount\" [value]=\"paymentDetails?.basicRate | number : '1.2-2'\" readonly>\r\n        </mat-form-field>\r\n\r\n\r\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n            <mat-label>VAT</mat-label>\r\n            <input matInput class=\"numbers-input\" name=\"amount\" [value]=\"paymentDetails?.vat | number : '1.2-2'\" readonly>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n            <mat-label>Total Sales (VAT Inclusive)</mat-label>\r\n            <input matInput class=\"numbers-input total\" name=\"amount\" [value]=\"paymentDetails?.amountDue | number : '1.2-2'\" readonly>\r\n        </mat-form-field>\r\n\r\n        <div>\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n              <ng-container matColumnDef=\"referenceCode\">\r\n                  <th mat-header-cell *matHeaderCellDef> Reference Code </th>\r\n                  <td mat-cell *matCellDef=\"let element; let i = index\">{{element?.referenceCode}}</td>\r\n              </ng-container>\r\n              <ng-container matColumnDef=\"adTitle\">\r\n                  <th mat-header-cell *matHeaderCellDef> Ad Title </th>\r\n                  <td mat-cell *matCellDef=\"let element; let i = index\">{{element?.adTitle}}</td>\r\n              </ng-container>\r\n              <ng-container matColumnDef=\"mediumAndLength\">\r\n                <th mat-header-cell *matHeaderCellDef> Medium And Length</th>\r\n                <td mat-cell *matCellDef=\"let element; let i = index\">{{ element?.typeOfMediumDisplay }}</td>\r\n              </ng-container>\r\n              <ng-container matColumnDef=\"amount\">\r\n                  <th mat-header-cell *matHeaderCellDef> Amount</th>\r\n                  <td mat-cell *matCellDef=\"let element; let i = index\" class=\"numbers-input\">{{element?.amount | number : '1.2-2'}}</td>\r\n              </ng-container>\r\n              <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n              <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n          </table>\r\n          <div class=\"no-record\" [hidden]=\"dataSource && dataSource?.data?.length > 0\">\r\n              No record found.\r\n          </div>\r\n          <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons></mat-paginator>\r\n          <!-- <div class=\"grandTotal\">\r\n            <mat-label>TOTAL: &nbsp;&nbsp;&nbsp;<span>{{multipleApplication?.totalAmount | number : '1.2-2'}}</span></mat-label>\r\n          </div> -->\r\n        </div>\r\n\r\n        <div><br><hr><br></div>\r\n\r\n            <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n                <mat-label>Payment Mode</mat-label>\r\n                <mat-select [(ngModel)]=\"paymentType\" [ngModelOptions]=\"{standalone: true}\" [disabled]=\"multipleApplication?.paymentStatus !== 'FOR_PAYMENT'\">\r\n                    <mat-option *ngFor=\"let i of paymentTypeList\" [value]=\"i\" name=\"paymentType\">\r\n                        {{i?.paymentDescription | uppercase}}\r\n                    </mat-option>\r\n                </mat-select>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n                <mat-label>Remarks</mat-label>\r\n                <textarea matInput name=\"remarks\" [(ngModel)]=\"payment.remarks\" [readonly]=\"multipleApplication?.paymentStatus !== 'FOR_PAYMENT'\"></textarea>\r\n            </mat-form-field>\r\n\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"row\" *ngIf=\"!isDisabled || multipleApplication?.paymentStatus === undefined || multipleApplication?.totalAmount === 0\">\r\n        <div class=\"col-md-10\"><span *ngIf=\"multipleApplication && multipleApplication?.totalAmount === 0\">\r\n          <i>Please contact ASC admin to check the Maintenance of Fees.</i></span></div>\r\n        <div class=\"col-md-2\">\r\n            <button mat-raised-button class=\"button-red\" [disabled]=\"!paymentType || !previewDocument || multipleApplication?.totalAmount === 0\" (click)=\"uploadDocument(multipleApplication)\">\r\n                <i class=\"material-icons color__white\">task_alt</i> SUBMIT\r\n            </button>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { FormListComponent } from '@fragments';\r\nimport { S1Application, S2Application } from '@models';\r\nimport { ApiService, SweetAlertService } from '@services';\r\nimport { ENDPOINTS, USER_ROLES } from '@shared';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\n\r\n@Component({\r\n  selector: 'app-reassignment',\r\n  templateUrl: './reassignment.component.html',\r\n  styleUrls: ['./reassignment.component.scss']\r\n})\r\nexport class ReassignmentComponent implements OnInit {\r\n  @ViewChild(FormListComponent) formListComponent: FormListComponent;\r\n\r\n  // ojects\r\n  s1Application = new S1Application();\r\n  s2Application = new S2Application();\r\n\r\n  // lists\r\n  userList = [];\r\n\r\n  // for displayed list\r\n  // s1\r\n  s1ApplicationList = [];\r\n  s1ApplicationDataSource: MatTableDataSource<S1Application>;\r\n  s1ApplicationDisplayedColumns = [\r\n    'referenceCode',\r\n    'adTitle',\r\n    'applicationOwner',\r\n    'assignedEncoder',\r\n    'assignedAdSpecialist',\r\n    'assignedScreener',\r\n    'assignedReviewer',\r\n    'assignedUser',\r\n  ];\r\n\r\n  // s2\r\n  // TODO update when endpoint is available\r\n  s2ApplicationList = [];\r\n  s2ApplicationDataSource: MatTableDataSource<S2Application>;\r\n  s2ApplicationDisplayedColumns = [\r\n    'referenceCode',\r\n    'adTitle',\r\n    'applicationOwner',\r\n    'assignedEncoder',\r\n    'assignedAdSpecialist',\r\n    // 'assignedScreener',\r\n    // 'assignedReviewer',\r\n    'assignedUser',\r\n  ];\r\n\r\n  // form\r\n  s1ApplicationForm: FormGroup;\r\n\r\n  // others\r\n  applicationOwnerName = '';\r\n  displayedContent = 'S1';\r\n\r\n  constructor(\r\n    private apiService: ApiService,\r\n    private formBuilder: FormBuilder,\r\n    private sweetAlertService: SweetAlertService,\r\n    private spinner: NgxSpinnerService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.getS1ApplicationList();\r\n    this.setFormValidator();\r\n    this.getUserList();\r\n  }\r\n\r\n  getS1ApplicationList(applicationType = 'S1'): void {\r\n    this.spinner.show();\r\n    if (applicationType === 'S1') {\r\n      this.apiService.findAll(ENDPOINTS.admin).subscribe((res: any) => {\r\n        this.s1ApplicationList = res.responseData.data;\r\n        this.s1ApplicationList = this.s1ApplicationList.filter(filteredS1List => !filteredS1List.appliedS2);\r\n\r\n        this.s1ApplicationDataSource = new MatTableDataSource<S1Application>(this.s1ApplicationList);\r\n        this.s1ApplicationDataSource.paginator = this.formListComponent.paginator;\r\n        this.s1ApplicationDataSource.sort = this.formListComponent.sort;\r\n      }, (err) => {\r\n        console.error(err);\r\n        this.spinner.hide();\r\n      }, () => {\r\n        this.spinner.hide();\r\n      });\r\n    } else if (applicationType === 'S2') {\r\n      this.apiService.findAll(ENDPOINTS.s2Application).subscribe((res: any) => {\r\n        this.s2ApplicationList = res.responseData.data;\r\n\r\n        this.s2ApplicationDataSource = new MatTableDataSource<S2Application>(this.s2ApplicationList);\r\n        this.s2ApplicationDataSource.paginator = this.formListComponent.paginator;\r\n        this.s2ApplicationDataSource.sort = this.formListComponent.sort;\r\n      }, (err) => {\r\n        console.error(err);\r\n        this.spinner.hide();\r\n      }, () => {\r\n        this.spinner.hide();\r\n      });\r\n    }\r\n  }\r\n\r\n  getS1Application(): void {\r\n    this.apiService.findById(ENDPOINTS.applicationForm, this.formListComponent.idForUpdate).subscribe((res: any) => {\r\n      if (res) {\r\n        this.s1Application = res.responseData.data;\r\n        this.applicationOwnerName = this.s1Application.applicationOwner\r\n          ? this.s1Application.applicationOwner.lastName + ', ' + this.s1Application.applicationOwner.firstName\r\n          : '';\r\n        if (this.s1Application.assignedUser) {\r\n          this.getUserList(this.s1Application.assignedUser.userRole.name);\r\n        } else {\r\n          this.getUserList('N/A');\r\n        }\r\n\r\n      }\r\n    });\r\n  }\r\n\r\n  getS2Application(): void {\r\n    this.apiService.findById(ENDPOINTS.applicationFormS2, this.formListComponent.idForUpdate).subscribe((res: any) => {\r\n      if (res) {\r\n\r\n        this.s2Application = res.responseData.data;\r\n        if (this.s2Application.applicationForm) {\r\n          this.applicationOwnerName = this.s2Application.applicationForm.applicationOwner\r\n            ? this.s2Application.applicationForm.applicationOwner.lastName + ', '\r\n            + this.s2Application.applicationForm.applicationOwner.firstName\r\n            : '';\r\n        }\r\n        if (this.s2Application.assignedUser) {\r\n          this.getUserList(this.s2Application.assignedUser.userRole.name);\r\n        } else {\r\n          this.getUserList('N/A');\r\n        }\r\n\r\n      }\r\n    });\r\n  }\r\n\r\n  update(): void {\r\n    this.spinner.show();\r\n\r\n    let endpoint = '';\r\n    let currentObj: any;\r\n    if (this.displayedContent === 'S1') {\r\n      endpoint = ENDPOINTS.applicationReassignment\r\n      currentObj = this.s1Application;\r\n    } else if (this.displayedContent === 'S2') {\r\n      endpoint = ENDPOINTS.s2ApplicationReassignment;\r\n      // endpoint = ENDPOINTS.applicationFormS2;\r\n      if (this.s2Application.actionStatus === 'ASSIGN_TO_ENCODER') {\r\n        this.s2Application.assignedEncoder = this.s2Application.assignedUser;\r\n      } else if (this.s2Application.actionStatus === 'ASSIGN_TO_ADSPE') {\r\n        this.s2Application.assignedAdSpecialist = this.s2Application.assignedUser;\r\n      }\r\n\r\n      currentObj = this.s2Application;\r\n    }\r\n\r\n    this.apiService.save(endpoint, currentObj).subscribe(\r\n      (res: any) => {\r\n        if (res) {\r\n          this.spinner.hide();\r\n          this.sweetAlertService.success(res);\r\n        }\r\n      }, (err: any) => {\r\n        this.spinner.hide();\r\n        this.sweetAlertService.error(err);\r\n      }, () => {\r\n        // actions after subscription\r\n        this.spinner.hide();\r\n        this.getUserList();\r\n        this.resetFormValidator();\r\n        if (this.displayedContent === 'S1') {\r\n          this.getS1ApplicationList();\r\n        } else if (this.displayedContent === 'S2') {\r\n          this.getS1ApplicationList('S2');\r\n        }\r\n      });\r\n  }\r\n\r\n  setFormValidator(): void {\r\n    this.s1ApplicationForm = this.formBuilder.group({\r\n      referenceCode: [''],\r\n      adTitle: [''],\r\n      applicationOwner: [''],\r\n      assignedAdSpecialist: [''],\r\n      assignedEncoder: [''],\r\n      assignedReviewer: [''],\r\n      assignedScreener: [''],\r\n      assignedUser: [''],\r\n    });\r\n  }\r\n\r\n  resetFormValidator(): void {\r\n    this.s1Application = new S1Application();\r\n    this.s2Application = new S2Application();\r\n    this.s1ApplicationForm.markAsUntouched();\r\n    this.s1ApplicationForm.markAsPristine();\r\n  }\r\n\r\n\r\n  getUserList(userRole = '') {\r\n    this.apiService.findAll(ENDPOINTS.userAccount).subscribe(\r\n      (res: any) => {\r\n        this.userList = res.responseData.data;\r\n        this.userList = this.userList.filter(\r\n          filteredUsers => filteredUsers?.userRole?.name !== USER_ROLES.ROLE_APPLICANT);\r\n        if (userRole) {\r\n          this.userList = this.userList.filter(\r\n            filteredUsers => filteredUsers?.userRole?.name === userRole);\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  compareAssignedUser(value: any, selected: any): boolean {\r\n    if (value && selected) {\r\n      return value.id === selected.id;\r\n    }\r\n  }\r\n\r\n  changeTab(evt) {\r\n    if (evt.tab) {\r\n      this.displayedContent = evt.tab.textLabel;\r\n    }\r\n\r\n    if (evt.index === 0) {\r\n      this.getS1ApplicationList();\r\n    } else if (evt.index === 1) {\r\n      this.getS1ApplicationList('S2');\r\n    }\r\n  }\r\n\r\n}\r\n","<form>\r\n    <!-- <div class=\"spinner\">\r\n        <ngx-spinner bdColor=\"rgba(0, 0, 0, 0.8)\" size=\"large\" color=\"#fff\" type=\"line-spin-fade\" [fullScreen]=\"false\">\r\n            <p> Loading list of Applications </p>\r\n        </ngx-spinner>\r\n    </div> -->\r\n    <div class=\"container-fluid\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-12 title\">\r\n                <mat-label>\r\n                    <mat-icon>view_list</mat-icon> Application Reassignment\r\n                </mat-label>\r\n            </div>\r\n        </div>\r\n        <hr>\r\n        <mat-tab-group mat-align-tabs=\"start\" (selectedTabChange)=\"changeTab($event)\">\r\n            <mat-tab label=\"S1\">\r\n                <ng-container *ngTemplateOutlet=\"s1ApplicationFormDisplay\"></ng-container>\r\n            </mat-tab>\r\n            <mat-tab label=\"S2\">\r\n                <ng-container *ngTemplateOutlet=\"s2ApplicationFormDisplay\"></ng-container>\r\n            </mat-tab>\r\n        </mat-tab-group>\r\n\r\n        <span *ngIf=\"displayedContent === 'S1' \">\r\n            <ng-container *ngTemplateOutlet=\"s1ApplicationList\"></ng-container>\r\n        </span>\r\n        <span *ngIf=\"displayedContent === 'S2' \">\r\n            <ng-container *ngTemplateOutlet=\"s2ApplicationList\"></ng-container>\r\n        </span>\r\n\r\n    </div>\r\n</form>\r\n\r\n\r\n<!-- ****************************** FORM ****************************** -->\r\n\r\n<ng-template #s1ApplicationFormDisplay>\r\n    <form [formGroup]=\"s1ApplicationForm\" *ngIf=\"s1Application?.id\">\r\n        <div class=\"row\">\r\n            <mat-form-field class=\"col-md-6\" appearance=\"outline\">\r\n                <mat-label>Reference Code</mat-label>\r\n                <input matInput [(ngModel)]=\"s1Application.referenceCode\" name=\"referenceCode\"\r\n                    formControlName=\"referenceCode\" readonly\r\n                    *ngIf=\"s1Application?.internalStatus!=='S1_APPLICATION_REJECTED'\">\r\n                <input matInput [(ngModel)]=\"s1Application.referenceCodeRejected\" name=\"referenceCode\"\r\n                    formControlName=\"referenceCode\" readonly\r\n                    *ngIf=\"s1Application?.internalStatus==='S1_APPLICATION_REJECTED'\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field class=\"col-md-6\" appearance=\"outline\">\r\n                <mat-label>Application Owner</mat-label>\r\n                <input matInput [(ngModel)]=\"applicationOwnerName \" name=\"applicationOwner\"\r\n                    formControlName=\"applicationOwner\" readonly>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n                <mat-label>AD Title</mat-label>\r\n                <input matInput [(ngModel)]=\"s1Application.adTitle\" name=\"adTitle\" formControlName=\"adTitle\" readonly>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field class=\"col-md-6\" appearance=\"outline\">\r\n                <mat-label>Assigned User</mat-label>\r\n                <mat-select [(ngModel)]=\"s1Application.assignedUser\" name=\"assignedUser\" formControlName=\"assignedUser\"\r\n                    [compareWith]=\"compareAssignedUser\">\r\n                    <mat-option *ngFor=\"let i of userList\" [value]=\"i\">\r\n                        {{ i?.firstName }} {{ i?.lastName }}\r\n                    </mat-option>\r\n                </mat-select>\r\n            </mat-form-field>\r\n        </div>\r\n        <app-form-action-buttons [childObject]=\"s1Application\" [childForm]=\"s1ApplicationForm\"\r\n            (updateFunction)=\"update()\" (cancelFunction)=\"resetFormValidator()\"></app-form-action-buttons>\r\n    </form>\r\n</ng-template>\r\n\r\n<ng-template #s2ApplicationFormDisplay>\r\n    <form [formGroup]=\"s1ApplicationForm\" *ngIf=\"s2Application?.id\">\r\n        <div class=\"row\">\r\n            <mat-form-field class=\"col-md-6\" appearance=\"outline\">\r\n                <mat-label>Reference Code</mat-label>\r\n                <input matInput [(ngModel)]=\"s2Application.applicationForm.referenceCode\" name=\"referenceCode\"\r\n                    formControlName=\"referenceCode\" readonly\r\n                    *ngIf=\"s2Application?.internalStatus!=='S1_APPLICATION_REJECTED'\">\r\n                <input matInput [(ngModel)]=\"s1Application.referenceCodeRejected\" name=\"referenceCode\"\r\n                    formControlName=\"referenceCode\" readonly\r\n                    *ngIf=\"s2Application?.internalStatus==='S1_APPLICATION_REJECTED'\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field class=\"col-md-6\" appearance=\"outline\">\r\n                <mat-label>Application Owner</mat-label>\r\n                <input matInput [(ngModel)]=\"applicationOwnerName\" name=\"applicationOwner\"\r\n                    formControlName=\"applicationOwner\" readonly>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n                <mat-label>AD Title</mat-label>\r\n                <input matInput [(ngModel)]=\"s2Application.applicationForm.adTitle\" name=\"adTitle\" formControlName=\"adTitle\" readonly>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field class=\"col-md-6\" appearance=\"outline\">\r\n                <mat-label>Assigned User</mat-label>\r\n                <mat-select [(ngModel)]=\"s2Application.assignedUser\" name=\"assignedUser\" formControlName=\"assignedUser\"\r\n                    [compareWith]=\"compareAssignedUser\">\r\n                    <mat-option *ngFor=\"let i of userList\" [value]=\"i\">\r\n                        {{ i?.firstName }} {{ i?.lastName }}\r\n                    </mat-option>\r\n                </mat-select>\r\n            </mat-form-field>\r\n        </div>\r\n        <app-form-action-buttons [childObject]=\"s2Application\" [childForm]=\"s1ApplicationForm\"\r\n            (updateFunction)=\"update()\" (cancelFunction)=\"resetFormValidator()\"></app-form-action-buttons>\r\n    </form>\r\n</ng-template>\r\n\r\n\r\n\r\n\r\n<!-- ****************************** LISTING ****************************** -->\r\n\r\n<ng-template #s1ApplicationList>\r\n    <br>\r\n    <app-form-list [dataSource]=\"s1ApplicationDataSource\" [displayedColumns]=\"s1ApplicationDisplayedColumns\"\r\n        (selectInListFunction)=\"getS1Application()\"></app-form-list>\r\n</ng-template>\r\n\r\n<ng-template #s2ApplicationList>\r\n    <br>\r\n    <app-form-list [dataSource]=\"s2ApplicationDataSource\" [displayedColumns]=\"s2ApplicationDisplayedColumns\"\r\n        (selectInListFunction)=\"getS2Application()\"></app-form-list>\r\n</ng-template>\r\n","import { CustomAngularEditorModule } from './editor/lib/angular-editor.module';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { ApplicationsRoutingModule } from './applications-routing.module';\r\nimport { AngularMaterialModule } from '@shared';\r\nimport { CommentComponent } from './comment/comment.component';\r\nimport { ClientInformationComponent, MaterialInformationComponent, PreviewApplicationComponent } from '@applications';\r\nimport { UploadPaymentComponent } from '../accounting/upload-payment/upload-payment.component';\r\nimport { AddPaymentModule } from '@accounting';\r\nimport { SingleApplicationComponent } from './schedule-of-fees/single-application/single-application.component';\r\nimport { MultipleApplicationsComponent } from './schedule-of-fees/multiple-applications/multiple-applications.component';\r\nimport { ReassignmentModule } from './reassignment/reassignment.module';\r\nimport { PerformanceMetricsComponent } from './performance-metrics/performance-metrics.component';\r\nimport { SpecialApplicationsComponent } from './schedule-of-fees/special-applications/special-applications.component';\r\nimport { AttachmentDocumentComponent } from './attachment-document/attachment-document.component';\r\nimport { PreviewAttachmentsComponent } from './preview-attachments/preview-attachments.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    PreviewApplicationComponent,\r\n    ClientInformationComponent,\r\n    MaterialInformationComponent,\r\n    CommentComponent,\r\n    UploadPaymentComponent,\r\n    SingleApplicationComponent,\r\n    MultipleApplicationsComponent,\r\n    PerformanceMetricsComponent,\r\n    SpecialApplicationsComponent,\r\n    AttachmentDocumentComponent,\r\n    PreviewAttachmentsComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ApplicationsRoutingModule,\r\n    AngularMaterialModule,\r\n    AddPaymentModule,\r\n    ReassignmentModule,\r\n    CustomAngularEditorModule\r\n  ],\r\n  exports: [\r\n    PreviewApplicationComponent,\r\n    ClientInformationComponent,\r\n    MaterialInformationComponent,\r\n    CommentComponent,\r\n    UploadPaymentComponent,\r\n    PerformanceMetricsComponent,\r\n    AttachmentDocumentComponent,\r\n    PreviewAttachmentsComponent,\r\n  ]\r\n})\r\nexport class ApplicationsModule { }\r\n","import { DatePipe } from \"@angular/common\";\r\nimport { Component, Inject, OnInit, Optional, ViewChild } from \"@angular/core\";\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { Router } from \"@angular/router\";\r\nimport { Company, S1Application } from \"@models\";\r\nimport { ApiService, DataStorageService, SweetAlertService } from \"@services\";\r\nimport {\r\n  APPFORM_TYPE,\r\n  ENDPOINTS,\r\n  ERROR_MESSAGES,\r\n  FORM_TYPE,\r\n  ROLES,\r\n  USER_ROLES,\r\n} from \"@shared\";\r\nimport { ApplicationSingleMedia } from \"app/core/models/application-single-media.model\";\r\nimport { MultipleApplication } from \"app/core/models/multiple-application.model\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport Swal from \"sweetalert2\";\r\n\r\n@Component({\r\n  selector: \"app-update-multiple-application\",\r\n  templateUrl: \"./update-multiple-application.component.html\",\r\n  styleUrls: [\"./update-multiple-application.component.scss\"],\r\n})\r\nexport class UpdateMultipleApplicationComponent implements OnInit {\r\n  @ViewChild(MatPaginator, { static: false }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: false }) sort: MatSort;\r\n\r\n  company = new Company();\r\n  s1Application = new S1Application();\r\n  multipleS1Application = new MultipleApplication();\r\n  applicationSingleMedia = new ApplicationSingleMedia();\r\n  multipleS1ApplicationList = [];\r\n  dataSource: MatTableDataSource<S1Application>;\r\n  displayedColumns: string[] = [\r\n    \"referenceCode\",\r\n    \"typeOfMediumDisplay\",\r\n    \"mainAttachmentReference\",\r\n    \"supportingAttachmentReference\",\r\n    \"brand\",\r\n    \"status\",\r\n    \"decisionStatus\",\r\n  ];\r\n\r\n  currentUser: any;\r\n  currentUserRole: any;\r\n\r\n  isAscUser = false;\r\n  isDisableFieldOnUpdate = true;\r\n  isDisabledSubmitButton = true;\r\n  canForwardMultipleApp = false;\r\n  isAllApplicationsHasMainDoc = false;\r\n  warningNote =\r\n    \"Note: To submit multiple application, please make sure that every application has complete details and has necessary attachments.\";\r\n  typeOfMediumDisplay = \"\";\r\n\r\n  formType = APPFORM_TYPE.MULTIPLE;\r\n\r\n  ascUserRoleList = [\r\n    ...ROLES.filter((role: any) => role.ascUser === true).map(\r\n      (role: any) => role.role\r\n    ),\r\n  ];\r\n\r\n  constructor(\r\n    private apiService: ApiService,\r\n    private sweetAlertService: SweetAlertService,\r\n    private dataStorage: DataStorageService,\r\n    private router: Router,\r\n    private spinner: NgxSpinnerService,\r\n    private datepipe: DatePipe,\r\n    @Optional()\r\n    public dialogRef: MatDialogRef<UpdateMultipleApplicationComponent>,\r\n    @Optional() @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {\r\n    if (data) {\r\n      this.multipleS1Application = data;\r\n      this.s1Application.formType = this.formType;\r\n\r\n      // Client Info\r\n      this.s1Application.company = this.multipleS1Application.company;\r\n      this.company = this.multipleS1Application.company;\r\n      // this.s1Application.membersAffiliation = this.multipleS1Application.membersAffiliation;\r\n      this.s1Application.brand = this.multipleS1Application.brand;\r\n      this.s1Application.product = this.multipleS1Application.product;\r\n      // this.s1Application.category = this.multipleS1Application.category;\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.currentUser = this.dataStorage.getUserAccount();\r\n    this.currentUserRole = this.currentUser.userRole.name;\r\n    this.isAscUser = this.ascUserRoleList.includes(\r\n      this.dataStorage.getUserRole()\r\n    );\r\n    this.getS1FormsByMultipleApplication();\r\n    if (this.currentUserRole !== USER_ROLES.ROLE_APPLICANT) {\r\n      this.displayedColumns = [\r\n        \"referenceCode\",\r\n        \"typeOfMediumDisplay\",\r\n        \"mainAttachmentReference\",\r\n        \"supportingAttachmentReference\",\r\n        \"brand\",\r\n        \"status\",\r\n        \"ASCstatus\",\r\n        \"decisionStatus\",\r\n      ];\r\n    }\r\n  }\r\n\r\n  getS1FormsByMultipleApplication() {\r\n    let endpoint = \"\";\r\n    if (\r\n      this.currentUserRole === USER_ROLES.ROLE_APPLICANT ||\r\n      this.currentUserRole === USER_ROLES.ROLE_ADMIN ||\r\n      this.currentUserRole === USER_ROLES.ROLE_SUPER_ADMIN\r\n    ) {\r\n      endpoint = ENDPOINTS.getMultipleAppForms + this.multipleS1Application.id;\r\n    } else {\r\n      endpoint =\r\n        ENDPOINTS.getMultipleAppFormsWithNoRejected +\r\n        this.multipleS1Application.id;\r\n    }\r\n    // this.apiService.findAll(ENDPOINTS.applicationFormPresentor + `multiple-application/${this.multipleS1Application.id}/applications`)\r\n    this.apiService.findAll(endpoint).subscribe(\r\n      (res: any) => {\r\n        this.multipleS1ApplicationList = res.responseData.data;\r\n\r\n        this.isAllApplicationsHasMainDoc = this.multipleS1ApplicationList.filter(\r\n          (filteredList) => !filteredList.mainAttachmentReference\r\n        ).length\r\n          ? false\r\n          : true;\r\n\r\n        this.multipleS1ApplicationList.forEach((value, index) => {\r\n          this.s1Application = value;\r\n          this.multipleS1ApplicationList[index] = value;\r\n          switch (\r\n            value?.refTypeOfMedium ||\r\n            value?.applicationFormS2?.applicationForm?.refTypeOfMedium\r\n          ) {\r\n            case \"SINGLE MEDIA\":\r\n              this.getApplicationSingleMedia();\r\n              break;\r\n            case \"MULTIMEDIA-MOVING\":\r\n              this.getMultimediaMoving();\r\n              break;\r\n            case \"MULTIMEDIA-STATIC\":\r\n              this.getMultimediaStatic();\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n        });\r\n\r\n        this.dataSource = new MatTableDataSource<S1Application>(\r\n          this.multipleS1ApplicationList\r\n        );\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n\r\n        // will be disabled if there's an application without main doc uploaded\r\n        this.isDisabledSubmitButton = this.multipleS1ApplicationList.filter(\r\n          (filteredList) => !filteredList.mainAttachmentReference\r\n        ).length\r\n          ? true\r\n          : false;\r\n\r\n        this.isDisabledSubmitButton = this.multipleS1ApplicationList.filter(\r\n          (filteredList) =>\r\n            !filteredList.supportingAttachmentReference &&\r\n            !filteredList.hasNoSupportingDocs\r\n        ).length\r\n          ? true\r\n          : false;\r\n\r\n        // if earlier or later than the approved date\r\n\r\n        const today = this.datepipe.transform(new Date(), \"yyyy-MM-dd\");\r\n        const approvedDate = this.datepipe.transform(\r\n          this.multipleS1Application.dateOfSubmission,\r\n          \"yyyy-MM-dd\"\r\n        );\r\n\r\n        if (\r\n          this.multipleS1Application.submissionStatus !== \"PROCESSED\" &&\r\n          approvedDate !== today &&\r\n          this.multipleS1Application.status !== \"DISAPPROVED\"\r\n        ) {\r\n          this.isDisabledSubmitButton = true;\r\n          this.warningNote =\r\n            \"Note: Applicant can only submit multiple application on approved date.\";\r\n        }\r\n\r\n        this.checkForwardStatus();\r\n      },\r\n      (err: any) => {\r\n        err.error.message = ERROR_MESSAGES.under_maintenance;\r\n        this.sweetAlertService.error(err);\r\n      }\r\n    );\r\n  }\r\n\r\n  checkForwardStatus() {\r\n    if (\r\n      this.multipleS1Application.countVerifiedApplicationForm ===\r\n      this.multipleS1Application.actualNumberOfApplicationForm\r\n    ) {\r\n      this.canForwardMultipleApp = true;\r\n    }\r\n  }\r\n\r\n  viewApplication(data) {\r\n    this.dialogRef.close();\r\n    this.router.navigate([`asc/page/application/s1/update/${data.id}`]);\r\n  }\r\n\r\n  onApproveOrDisapprove(status = \"APPROVED\"): void {\r\n    const displayStatus = status === \"APPROVED\" ? \"approve\" : \"disapprove\";\r\n    Swal.fire({\r\n      text: `Are you sure you want to ${displayStatus} this application?`,\r\n      icon: \"question\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Confirm\",\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        const endpointExtension =\r\n          status === \"APPROVED\" ? \"/approve\" : \"/disapprove\";\r\n        this.multipleS1Application.actionDate = new Date();\r\n        this.multipleS1Application.actionBy = this.currentUser.username;\r\n        this.apiService\r\n          .update(\r\n            `${ENDPOINTS.multipleApplication}${endpointExtension}`,\r\n            this.multipleS1Application\r\n          )\r\n          .subscribe(\r\n            (res: any) => {\r\n              this.sweetAlertService.customSuccessMessage(\r\n                \"Multiple application submission request has been \" +\r\n                  displayStatus +\r\n                  \"d.\"\r\n              );\r\n            },\r\n            (err: any) => {\r\n              err.error.message = ERROR_MESSAGES.under_maintenance;\r\n              this.sweetAlertService.error(err);\r\n            },\r\n            () => {\r\n              this.dialogRef.close(this.multipleS1Application);\r\n            }\r\n          );\r\n      }\r\n    });\r\n  }\r\n\r\n  updateMultipleApplications(multipleId): void {\r\n    // TO DO\r\n    // will only redirect to add new S1 application\r\n    // saving or updating is in add-s1-application.component.ts\r\n    const ctr =\r\n      this.multipleS1ApplicationList.length === 0\r\n        ? 1\r\n        : this.multipleS1ApplicationList.length + 1;\r\n\r\n    this.dialogRef.close();\r\n    this.router.navigate([\r\n      `asc/page/application/s1/add/multiple/${multipleId}/${ctr}`,\r\n    ]);\r\n  }\r\n\r\n  compareProduct(value: any, selected: any): boolean {\r\n    if (value && selected) {\r\n      return value.description === selected.description;\r\n    }\r\n  }\r\n\r\n  // compareCategory(value: any, selected: any): boolean {\r\n  //   if (value && selected) {\r\n  //     return value.description === selected.description;\r\n  //   }\r\n  // }\r\n\r\n  submitMultiple() {\r\n    Swal.fire({\r\n      text: `Are you sure you want to submit this multiple application?`,\r\n      icon: \"question\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Confirm\",\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        if (\r\n          this.multipleS1Application.numberOfApplication >\r\n          this.multipleS1ApplicationList.length\r\n        ) {\r\n          Swal.fire({\r\n            text: `Are you sure you want to submit ${this.multipleS1ApplicationList.length} out ${this.multipleS1Application.numberOfApplication} applications only?`,\r\n            icon: \"question\",\r\n            showCancelButton: true,\r\n            confirmButtonColor: \"#3085d6\",\r\n            cancelButtonColor: \"#d33\",\r\n            confirmButtonText: \"Confirm\",\r\n          }).then((result2) => {\r\n            if (result2.value) {\r\n              const endpoint = `${ENDPOINTS.applicationFormPresentor}group-id/${this.multipleS1Application.id}/application-type-id/\r\n                ${this.multipleS1Application.applicationType.id}/batch-multiple-app-form/submit`;\r\n              this.apiService.save(endpoint, null).subscribe(\r\n                (res: any) => {\r\n                  this.sweetAlertService.customSuccessMessage(\r\n                    \"Multiple application successfully submitted.\"\r\n                  );\r\n                  this.getS1FormsByMultipleApplication();\r\n                },\r\n                (err: any) => {\r\n                  err.error.message = ERROR_MESSAGES.under_maintenance;\r\n                  this.sweetAlertService.error(err);\r\n                },\r\n                () => {\r\n                  this.dialogRef.close(this.multipleS1Application);\r\n                }\r\n              );\r\n            }\r\n          });\r\n        } else {\r\n          const endpoint = `${ENDPOINTS.applicationFormPresentor}group-id/${this.multipleS1Application.id}/application-type-id/\r\n        ${this.multipleS1Application.applicationType.id}/batch-multiple-app-form/submit`;\r\n          this.apiService.save(endpoint, null).subscribe(\r\n            (res: any) => {\r\n              this.sweetAlertService.customSuccessMessage(\r\n                \"Multiple application successfully submitted.\"\r\n              );\r\n              this.getS1FormsByMultipleApplication();\r\n            },\r\n            (err: any) => {\r\n              err.error.message = ERROR_MESSAGES.under_maintenance;\r\n              this.sweetAlertService.error(err);\r\n            },\r\n            () => {\r\n              this.dialogRef.close(this.multipleS1Application);\r\n            }\r\n          );\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  forwardMultipleAppsTo(user) {\r\n    Swal.fire({\r\n      text: `Are you sure you want to forward this multiple application?`,\r\n      icon: \"question\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Confirm\",\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.spinner.show();\r\n        let endpoint = \"\";\r\n\r\n        if (user === \"encoder\") {\r\n          this.multipleS1Application.assignedEncoder = this.multipleS1ApplicationList[0].assignedEncoder;\r\n          // endpoint = ENDPOINTS.forwardMultipleAppFormToAdSpe;\r\n          endpoint = `${ENDPOINTS.s1ApplicationForm}encoder/group-id/${this.multipleS1Application.id}/forward-multiple-app-form`;\r\n        } else if (user === \"ad-specialist\") {\r\n          this.multipleS1Application.assignedAdSpecialist = this.multipleS1ApplicationList[0].assignedAdSpecialist;\r\n          this.multipleS1Application.assignedScreener = this.multipleS1ApplicationList[0].assignedScreener;\r\n          endpoint = ENDPOINTS.forwardMultipleAppFormToScreener;\r\n        } else if (user === \"screener\") {\r\n          this.multipleS1Application.assignedReviewer = this.multipleS1ApplicationList[0].assignedReviewer;\r\n          endpoint = ENDPOINTS.forwardMultipleAppFormToReviewer;\r\n        }\r\n\r\n        this.apiService.save(endpoint, this.multipleS1Application).subscribe(\r\n          (res: any) => {\r\n            console.log(res);\r\n            this.spinner.hide();\r\n            this.sweetAlertService.customSuccessMessage(\r\n              \"Multiple application successfully forwarded to the next user.\"\r\n            );\r\n          },\r\n          (err: any) => {\r\n            this.spinner.hide();\r\n            err.error.message = ERROR_MESSAGES.under_maintenance;\r\n            this.sweetAlertService.error(err);\r\n          },\r\n          () => {\r\n            this.spinner.hide();\r\n            this.dialogRef.close(this.multipleS1Application);\r\n          }\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  getApplicationSingleMedia(\r\n    appFormReference = this.s1Application?.appFormReference\r\n  ) {\r\n    this.apiService\r\n      .findByParam(\r\n        ENDPOINTS.applicationSingleMedia,\r\n        `app-form-reference/${appFormReference}`\r\n      )\r\n      .subscribe(\r\n        (res: any) => {\r\n          if (res.responseData.data.length > 0) {\r\n            this.applicationSingleMedia = res.responseData.data[0];\r\n\r\n            this.typeOfMediumDisplay = `${this.applicationSingleMedia?.mediumExecution?.typeOfMedium?.description} (${this.applicationSingleMedia?.sizeLength})`;\r\n\r\n            this.multipleS1ApplicationList.forEach((element, index) => {\r\n              if (element.appFormReference === appFormReference) {\r\n                this.multipleS1ApplicationList[index] = {\r\n                  ...this.multipleS1ApplicationList[index],\r\n                  typeOfMediumDisplay:\r\n                    this.typeOfMediumDisplay === \"undefined (0)\"\r\n                      ? \"\"\r\n                      : this.typeOfMediumDisplay,\r\n                };\r\n              }\r\n            });\r\n\r\n            this.isDisabledSubmitButton = this.multipleS1ApplicationList.filter(\r\n              (filteredS1App) => filteredS1App.typeOfMediumDisplay === \"\"\r\n            ).length\r\n              ? true\r\n              : false;\r\n\r\n            this.dataSource = new MatTableDataSource<any>(\r\n              this.multipleS1ApplicationList\r\n            );\r\n            this.dataSource.paginator = this.paginator;\r\n          } else {\r\n            this.applicationSingleMedia = new ApplicationSingleMedia();\r\n            this.typeOfMediumDisplay = \"\";\r\n          }\r\n        },\r\n        (err: any) => {\r\n          this.applicationSingleMedia = new ApplicationSingleMedia();\r\n          this.typeOfMediumDisplay = \"\";\r\n        }\r\n      );\r\n  }\r\n\r\n  getMultimediaStatic(appFormReference = this.s1Application?.appFormReference) {\r\n    this.apiService\r\n      .findByParam(\r\n        ENDPOINTS.applicationMultimedia,\r\n        `app-form-reference/${appFormReference}`\r\n      )\r\n      .subscribe(\r\n        (res: any) => {\r\n          if (res.responseData.data.length > 0) {\r\n            const multimediaList = new Set(\r\n              res.responseData.data.map(\r\n                (mappedList) =>\r\n                  `${mappedList?.typeOfMedium?.description} (${mappedList?.multimediaSizeLength})`\r\n              )\r\n            );\r\n\r\n            this.typeOfMediumDisplay = \"\";\r\n            let mediaCtrl = 1;\r\n            for (const media of multimediaList) {\r\n              if (mediaCtrl !== multimediaList.size) {\r\n                this.typeOfMediumDisplay += `${media}, `;\r\n                mediaCtrl++;\r\n              } else {\r\n                this.typeOfMediumDisplay += media;\r\n              }\r\n            }\r\n\r\n            this.multipleS1ApplicationList.forEach((element, index) => {\r\n              if (element.appFormReference === appFormReference) {\r\n                this.multipleS1ApplicationList[index] = {\r\n                  ...this.multipleS1ApplicationList[index],\r\n                  typeOfMediumDisplay: this.typeOfMediumDisplay,\r\n                };\r\n              }\r\n            });\r\n            this.dataSource = new MatTableDataSource<any>(\r\n              this.multipleS1ApplicationList\r\n            );\r\n            this.dataSource.paginator = this.paginator;\r\n\r\n            this.isDisabledSubmitButton = this.multipleS1ApplicationList.filter(\r\n              (filteredList) => !filteredList.typeOfMediumDisplay\r\n            ).length\r\n              ? true\r\n              : false;\r\n          } else {\r\n            this.typeOfMediumDisplay = \"\";\r\n          }\r\n        },\r\n        (err: any) => {\r\n          this.typeOfMediumDisplay = \"\";\r\n        }\r\n      );\r\n  }\r\n\r\n  getMultimediaMoving(appFormReference = this.s1Application?.appFormReference) {\r\n    this.apiService\r\n      .findByParam(\r\n        ENDPOINTS.applicationMultimedia,\r\n        `app-form-reference/${appFormReference}`\r\n      )\r\n      .subscribe(\r\n        (res: any) => {\r\n          if (res.responseData.data.length > 0) {\r\n            const multimediaList = new Set(\r\n              res.responseData.data.map(\r\n                (mappedList) =>\r\n                  `${mappedList?.typeOfMedium?.description} (${mappedList?.multimediaSizeLength})`\r\n              )\r\n            );\r\n\r\n            this.typeOfMediumDisplay = \"\";\r\n            let mediaCtrl = 1;\r\n            for (const media of multimediaList) {\r\n              if (mediaCtrl !== multimediaList.size) {\r\n                this.typeOfMediumDisplay += `${media}, `;\r\n                mediaCtrl++;\r\n              } else {\r\n                this.typeOfMediumDisplay += media;\r\n              }\r\n            }\r\n\r\n            this.multipleS1ApplicationList.forEach((element, index) => {\r\n              if (element.appFormReference === appFormReference) {\r\n                this.multipleS1ApplicationList[index] = {\r\n                  ...this.multipleS1ApplicationList[index],\r\n                  typeOfMediumDisplay: this.typeOfMediumDisplay,\r\n                };\r\n              }\r\n            });\r\n            this.dataSource = new MatTableDataSource<any>(\r\n              this.multipleS1ApplicationList\r\n            );\r\n            this.dataSource.paginator = this.paginator;\r\n\r\n            this.isDisabledSubmitButton = this.multipleS1ApplicationList.filter(\r\n              (filteredList) => !filteredList.typeOfMediumDisplay\r\n            ).length\r\n              ? true\r\n              : false;\r\n          } else {\r\n            this.typeOfMediumDisplay = \"\";\r\n          }\r\n        },\r\n        (err: any) => {\r\n          this.typeOfMediumDisplay = \"\";\r\n        }\r\n      );\r\n  }\r\n}\r\n","<form>\r\n  <div class=\"container-fluid\">\r\n    <div class=\"row title\">\r\n      <div class=\"col-md-12\">\r\n\r\n        <table class=\"application-details\">\r\n          <tr>\r\n            <td *ngIf=\"multipleS1Application?.status\">\r\n              <span>\r\n                Status:\r\n              </span>\r\n            </td>\r\n            <td *ngIf=\"multipleS1Application?.status\">\r\n              <span>\r\n                <b>{{multipleS1Application?.status?.replaceAll('_',' ') | uppercase}}</b>\r\n              </span>\r\n            </td>\r\n            <!-- <td class=\"no-border\">\r\n                        <button class=\"button-right button-red\" mat-raised-button\r\n                        (click)=\"dialogRef.close()\">\r\n                          <i class=\"material-icons color__white\">list</i> VIEW APPLICATIONS\r\n                        </button>\r\n                      </td> -->\r\n          <tr>\r\n            <td class=\"no-border\">\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td *ngIf=\"multipleS1Application?.numberOfApplication\">\r\n              <span>\r\n                Number of Applications:\r\n              </span>\r\n            </td>\r\n            <td>\r\n              <span>\r\n                <b *ngIf=\"(multipleS1Application?.status === 'FOR_APPROVAL' || multipleS1Application?.submissionStatus==='PROCESSED' || multipleS1Application?.status === 'DISAPPROVED') &&\r\n                (currentUser.userRole.name==='ROLE_ADMIN' || currentUser.userRole.name === 'ROLE_SUPER_ADMIN' || currentUser.userRole.name === 'ROLE_APPLICANT')\">\r\n                  {{multipleS1Application?.submissionStatus==='PROCESSED' && multipleS1Application?.status !== 'DISAPPROVED' && multipleS1Application?.status !== 'FOR_APPROVAL'\r\n                  ? multipleS1Application.actualNumberOfApplicationForm\r\n                  : multipleS1Application?.numberOfApplication}}</b>\r\n\r\n                  <b *ngIf=\"multipleS1Application?.submissionStatus==='PROCESSED'\">\r\n                    {{currentUser.userRole.name !== 'ROLE_APPLICANT' && currentUser.userRole.name!=='ROLE_ADMIN' && currentUser.userRole.name !== 'ROLE_SUPER_ADMIN' ? multipleS1Application?.countVerifiedApplicationForm : ''}}\r\n                     of {{multipleS1Application?.actualNumberOfApplicationForm}}</b>\r\n\r\n                <b *ngIf=\"multipleS1Application?.status === 'APPROVED' && (currentUser.userRole.name==='ROLE_ADMIN' || currentUser.userRole.name === 'ROLE_SUPER_ADMIN' || currentUser.userRole.name === 'ROLE_APPLICANT') && multipleS1Application?.submissionStatus!=='PROCESSED'\">\r\n                  {{multipleS1ApplicationList.length}} of {{multipleS1Application?.numberOfApplication}}</b>\r\n              </span>\r\n            </td>\r\n            <td class=\"no-border\"\r\n              *ngIf=\"multipleS1Application?.status==='APPROVED'&&currentUser.userRole.name==='ROLE_APPLICANT'\"\r\n              [hidden]=\"multipleS1Application?.submissionStatus==='PROCESSED'\">\r\n              <button class=\"button-right button-red\" mat-raised-button\r\n              [disabled]=\"multipleS1Application?.actualNumberOfApplicationForm === multipleS1Application?.numberOfApplication\"\r\n                (click)=\"updateMultipleApplications(multipleS1Application?.id)\">\r\n                <i class=\"material-icons color__white\">add</i> ADD APPLICATION\r\n              </button>\r\n            </td>\r\n          </tr>\r\n        </table>\r\n\r\n        <hr>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"row\"><br></div>\r\n    <div class=\"row\">\r\n      <mat-form-field class=\"col-md-6\" appearance=\"outline\">\r\n        <mat-label>Form Type</mat-label>\r\n        <input matInput [value]=\"formType\" readonly>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field class=\"col-md-6\" appearance=\"outline\">\r\n        <mat-label>Application Type</mat-label>\r\n        <input matInput [value]=\"multipleS1Application?.applicationType?.description\" readonly>\r\n      </mat-form-field>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n      <mat-accordion class=\"headers-align\" multi>\r\n        <mat-expansion-panel [expanded]=\"\r\n                  ((currentUser?.userRole?.name=='ROLE_APPLICANT'&&s1Application?.internalStatus!='SAVED')\r\n                  ||(s1Application?.internalStatus==undefined))\r\n                  &&((multipleS1Application?.status !== 'APPROVED')\r\n                  ||(multipleS1Application?.status === 'APPROVED' && multipleS1ApplicationList.length==0))\" *ngIf=\"\r\n                  (currentUser?.userRole?.name=='ROLE_APPLICANT'&&s1Application?.internalStatus=='SAVED')\r\n                  ||(currentUser?.userRole?.name!='ROLE_APPLICANT')\r\n                  ||(s1Application?.internalStatus==undefined)\">\r\n\r\n          <mat-expansion-panel-header>\r\n            <mat-panel-title>\r\n              <i class=\"material-icons\">label_important</i> &nbsp;Initial Information\r\n            </mat-panel-title>\r\n          </mat-expansion-panel-header>\r\n          <br>\r\n\r\n          <app-client-information [multipleApplication]=\"multipleS1Application\" [s1Application]=\"s1Application\" [isAscUser]=\"isAscUser\"\r\n            [isDisableFieldOnUpdate]=\"isDisableFieldOnUpdate\" [company]=\"company\"></app-client-information>\r\n\r\n          <div class=\"row\">\r\n            <mat-form-field class=\"col-md-6\" appearance=\"outline\">\r\n              <mat-label>Ad Title</mat-label>\r\n              <input matInput [value]=\"multipleS1Application?.adTitle\" readonly>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field class=\"col-md-6\" appearance=\"outline\">\r\n              <mat-label>Tag Line</mat-label>\r\n              <input matInput [value]=\"multipleS1Application?.tagLine\" readonly>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div class=\"row\">\r\n            <mat-form-field appearance=\"outline\" class=\"col-md-6\">\r\n              <mat-label>Date of Submission</mat-label>\r\n                <input matInput placeholder=\"Date\" readonly\r\n                  [value]=\"multipleS1Application?.dateOfSubmission | date: 'MMMM d, y'\"\r\n                  name=\"dateOfSubmission\" *ngIf=\"multipleS1Application?.status !== 'DISAPPROVED'\"/>\r\n                <input matInput placeholder=\"Date\" readonly\r\n                  value=\"N/A - Request was disapproved\"\r\n                  name=\"dateOfSubmission\" *ngIf=\"multipleS1Application?.status === 'DISAPPROVED'\"/>\r\n            </mat-form-field>\r\n          </div>\r\n        </mat-expansion-panel>\r\n\r\n        <!-- FOR Admin Users only -->\r\n        <mat-expansion-panel *ngIf=\"currentUser?.userRole?.name === 'ROLE_ADMIN' || currentUser?.userRole?.name === 'ROLE_SUPER_ADMIN' \">\r\n          <mat-expansion-panel-header>\r\n            <mat-panel-title>\r\n              <i class=\"material-icons\">label_important</i> &nbsp;Presentor Information\r\n            </mat-panel-title>\r\n            <mat-panel-description>\r\n              Personal Details\r\n              <i class=\"material-icons\">person</i>\r\n            </mat-panel-description>\r\n          </mat-expansion-panel-header>\r\n\r\n          <br>\r\n          <div class=\"row\">\r\n            <div class=\"row\">\r\n              <mat-form-field class=\"col-md-7\" appearance=\"outline\">\r\n                <mat-label>Company Name</mat-label>\r\n                <input matInput [value]=\"multipleS1Application?.company?.companyName\" readonly>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"row\"><br></div>\r\n\r\n            <div class=\"row\">\r\n              <mat-form-field class=\"col-md-11\" appearance=\"outline\">\r\n                <mat-label>Address</mat-label>\r\n                <input matInput [value]=\"multipleS1Application?.company?.completeAddress\" readonly>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"row\"><br></div>\r\n\r\n            <div class=\"row\">\r\n              <mat-form-field class=\"col-md-8\" appearance=\"outline\" *ngIf=\"multipleS1Application.id!= null\">\r\n                <mat-label>Name of Applicant</mat-label>\r\n                <input matInput [value]=\"multipleS1Application?.applicationOwner?.firstName+' '+multipleS1Application?.applicationOwner?.lastName\" readonly>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"row\"><br></div>\r\n\r\n            <div class=\"row\">\r\n              <mat-form-field class=\"col-md-4\" appearance=\"outline\" *ngIf=\"multipleS1Application.id!= null\">\r\n                <mat-label>Mobile Number</mat-label>\r\n                <input matInput [value]=\"multipleS1Application?.applicationOwner?.mobileNumber\" readonly>\r\n              </mat-form-field>\r\n              <mat-form-field class=\"col-md-3\" appearance=\"outline\" *ngIf=\"multipleS1Application.id!= null\">\r\n                <mat-label>Telephone Number</mat-label>\r\n                <input matInput [value]=\"multipleS1Application?.company?.companyTelephoneNo\" readonly>\r\n              </mat-form-field>\r\n              <mat-form-field class=\"col-md-4\" appearance=\"outline\" *ngIf=\"multipleS1Application.id!= null\">\r\n                <mat-label>Email Address</mat-label>\r\n                <input matInput [value]=\"multipleS1Application?.applicationOwner?.username\" readonly>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n          </div>\r\n        </mat-expansion-panel>\r\n\r\n      </mat-accordion>\r\n      <!-- </form> -->\r\n\r\n      <div class=\"row\"><br></div>\r\n      <!-- ADD TABLE HERE -->\r\n      <div class=\"mat-elevation-z8 fields\" *ngIf=\"multipleS1Application?.status==='APPROVED'\">\r\n        <table mat-table [dataSource]=\"dataSource||multipleS1ApplicationList\" matSort>\r\n\r\n          <ng-container matColumnDef=\"referenceCode\">\r\n            <th mat-header-cell class=\"center-table-text\" *matHeaderCellDef mat-sort-header> REFERENCE CODE </th>\r\n            <td mat-cell *matCellDef=\"let element\" (click)=\"viewApplication(element)\">\r\n              {{ element?.referenceCode ? element?.referenceCode : '-' | uppercase}} </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"typeOfMediumDisplay\">\r\n            <th mat-header-cell class=\"center-table-text\" *matHeaderCellDef> MEDIUM (Length) </th>\r\n            <td mat-cell *matCellDef=\"let element\" (click)=\"viewApplication(element)\"> {{ element?.typeOfMediumDisplay }} </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"mainAttachmentReference\">\r\n            <th mat-header-cell class=\"center-table-text\" *matHeaderCellDef> HAS MAIN DOC </th>\r\n            <td mat-cell *matCellDef=\"let element\" (click)=\"viewApplication(element)\">\r\n              <i *ngIf=\"element?.mainAttachmentReference\" class=\"material-icons\">check_circle</i>\r\n              <i *ngIf=\"!element?.mainAttachmentReference\" class=\"material-icons cancel\">cancel</i>\r\n            </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"supportingAttachmentReference\">\r\n            <th mat-header-cell class=\"center-table-text\" *matHeaderCellDef> HAS SUPPORT DOC </th>\r\n            <td mat-cell *matCellDef=\"let element\" (click)=\"viewApplication(element)\">\r\n              <i *ngIf=\"element?.supportingAttachmentReference\" class=\"material-icons\">check_circle</i>\r\n              <i *ngIf=\"!element?.supportingAttachmentReference && !element?.hasNoSupportingDocs\" class=\"material-icons cancel\">cancel</i>\r\n              <i *ngIf=\"element?.hasNoSupportingDocs\" class=\"material-icons\">cancel</i>\r\n            </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"brand\">\r\n            <th mat-header-cell class=\"center-table-text\" *matHeaderCellDef> BRAND </th>\r\n            <td mat-cell *matCellDef=\"let element\" (click)=\"viewApplication(element)\">\r\n              {{ element?.brand?.description | uppercase }}\r\n            </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"status\">\r\n            <th mat-header-cell class=\"center-table-text\" *matHeaderCellDef> APPLICATION STATUS </th>\r\n            <td mat-cell *matCellDef=\"let element\" (click)=\"viewApplication(element)\"\r\n            [ngStyle]=\"{'background-color': element?.internalStatus === 'S1_APPLICATION_REJECTED' ? 'lightpink' : '' }\">\r\n              {{ element?.externalStatus?.replaceAll('_',' ') | uppercase }}\r\n          </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"ASCstatus\">\r\n            <th mat-header-cell class=\"center-table-text\" *matHeaderCellDef> INTERNAL STATUS </th>\r\n            <td mat-cell *matCellDef=\"let element\" (click)=\"viewApplication(element)\"\r\n            [ngStyle]=\"{'background-color': element?.internalStatus === 'S1_APPLICATION_REJECTED' ? 'lightpink' : '' }\"> {{\r\n              element?.internalStatus?.replaceAll('_',' ') | uppercase }}</td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"decisionStatus\">\r\n            <th mat-header-cell class=\"center-table-text\" *matHeaderCellDef> DECISION STATUS </th>\r\n            <td mat-cell *matCellDef=\"let element\" (click)=\"viewApplication(element)\"\r\n            [ngStyle]=\"{'background-color': element?.internalStatus === 'S1_APPLICATION_REJECTED' ? 'lightpink' : '' }\">\r\n              {{ element?.decisionStatus ? element?.decisionStatus : '-' | uppercase }}\r\n          </td>\r\n          </ng-container>\r\n\r\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n          <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n        </table>\r\n        <div class=\"no-record\" [hidden]=\"dataSource && dataSource?.data?.length > 0\"\r\n          *ngIf=\"multipleS1ApplicationList.length==0\">\r\n          No results found.\r\n        </div>\r\n        <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons></mat-paginator>\r\n        <div class=\"row\"><br></div>\r\n      </div>\r\n      <hr>\r\n\r\n      <div class=\"row\"><br>\r\n      <b *ngIf=\"isDisabledSubmitButton && currentUser.userRole.name==='ROLE_APPLICANT'\"><b class=\"material-icons\">error_outline</b> {{warningNote}}</b>\r\n      </div>\r\n\r\n      <div class=\"row\"><br></div>\r\n      <div class=\"no-border\" [hidden]=\"multipleS1Application?.submissionStatus==='PROCESSED'\"\r\n      *ngIf=\"multipleS1ApplicationList.length>0 && currentUser.userRole.name==='ROLE_APPLICANT' &&\r\n            multipleS1Application?.status !== 'FOR_APPROVAL' && isAllApplicationsHasMainDoc\">\r\n        <button class=\"button-right button-red\" mat-raised-button [disabled]=\"isDisabledSubmitButton\"\r\n          (click)=\"submitMultiple()\">\r\n          <i class=\"material-icons color__white\">send</i> SUBMIT\r\n          <br>\r\n        </button>\r\n      </div>\r\n      <br>\r\n      <!-- //////////////////////////////////////// ACTION BUTTONS //////////////////////////////////////////////////////////// -->\r\n      <div class=\"row\" *ngIf=\"multipleS1Application?.status === 'FOR_APPROVAL' && isAscUser && !multipleS1Application?.assignedReviewer\">\r\n        <div mat-dialog-actions>\r\n          <div class=\"dialog-button-content\" align=\"end\">\r\n            <button class=\"confirm\" (click)=\"onApproveOrDisapprove()\"><i\r\n                class=\"material-icons\">thumb_up_alt</i>Approve</button>\r\n            <button class=\"warn\" (click)=\"onApproveOrDisapprove('DISAPPROVED')\"><i\r\n                class=\"material-icons\">thumb_down_alt</i>Disapprove</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    <!-- //////////////////////////////////////// ASC USERS //////////////////////////////////////////////////////////// -->\r\n      <!-- <div class=\"no-border\"\r\n        *ngIf=\"currentUser.userRole.name==='ROLE_ENCODER'&&canForwardMultipleApp && !multipleS1Application?.assignedReviewer\">\r\n        <button class=\"button-right button-red\" mat-raised-button (click)=\"forwardMultipleAppsTo('encoder')\">\r\n          <i class=\"material-icons color__white\">verified</i> FORWARD TO AD SPECIALIST\r\n        </button>\r\n      </div>\r\n\r\n      <div class=\"no-border\"\r\n        *ngIf=\"currentUser.userRole.name==='ROLE_AD_SPECIALIST'&&canForwardMultipleApp && !multipleS1Application?.assignedReviewer\">\r\n        <button class=\"button-right button-red\" mat-raised-button (click)=\"forwardMultipleAppsTo('ad-specialist')\">\r\n          <i class=\"material-icons color__white\">verified</i> FORWARD TO SCREENER\r\n        </button>\r\n      </div>\r\n\r\n      <div class=\"no-border\"\r\n        *ngIf=\"currentUser.userRole.name==='ROLE_SCREENER'&&canForwardMultipleApp && !multipleS1Application?.assignedReviewer\">\r\n        <button class=\"button-right button-red\" mat-raised-button (click)=\"forwardMultipleAppsTo('screener')\">\r\n          <i class=\"material-icons color__white\">fact_check</i> SCREENED\r\n        </button>\r\n      </div> -->\r\n\r\n      <!-- <div class=\"no-border\"\r\n        *ngIf=\"currentUser.userRole.name==='ROLE_REVIEWER'&&canForwardMultipleApp\">\r\n        <button class=\"button-right button-red\" mat-raised-button (click)=\"forwardMultipleAppsTo('reviewer')\">\r\n          <i class=\"material-icons color__white\">assignment_turned_in</i> REVIEWED\r\n        </button>\r\n      </div> -->\r\n\r\n      <br>\r\n    </div>\r\n  </div>\r\n</form>\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { URL_PATHS } from '@shared';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    children: [\r\n      {\r\n        path: URL_PATHS.LIST_COMPANY,\r\n        loadChildren: () => import('./list-company/list-company.module')\r\n          .then(m => m.ListCompanyModule)\r\n      },\r\n      {\r\n        path: URL_PATHS.ADD_COMPANY,\r\n        loadChildren: () => import('./add-company/add-company.module')\r\n          .then(m => m.AddCompanyModule)\r\n      },\r\n      {\r\n        path: URL_PATHS.UPDATE_COMPANY + '/:id',\r\n        loadChildren: () => import('./add-company/add-company.module')\r\n          .then(m => m.AddCompanyModule)\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class CompanyRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AddCompanyComponent } from './add-company.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AddCompanyComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AddCompanyRoutingModule { }\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTable, MatTableDataSource } from '@angular/material/table';\r\nimport { ApiService, DataStorageService, SweetAlertService } from '@services';\r\nimport { ENDPOINTS } from '@shared';\r\nimport { ModalSingleApplicationComponent } from './modal-single-application/modal-single-application.component';\r\n\r\n@Component({\r\n  selector: 'app-single-application',\r\n  templateUrl: './single-application.component.html',\r\n  styleUrls: ['./single-application.component.scss']\r\n})\r\nexport class SingleApplicationComponent implements OnInit {\r\n\r\n  @ViewChild(MatPaginator, { static: false }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: false }) sort: MatSort;\r\n  @ViewChild(MatTable, { static: false }) table: MatTable<Object>;\r\n\r\n  dataSource: MatTableDataSource<any>\r\n  displayedColumns: string[] = ['referenceCode', 'typeOfApplication', 'brand', 'medium', 'applicantCompanyName', 'paymentStatus'];\r\n  paymentList = [];\r\n\r\n  currentUser: any;\r\n  constructor(\r\n    private apiService: ApiService,\r\n    private dialog: MatDialog,\r\n    private dataStorage: DataStorageService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.currentUser = this.dataStorage.getUserAccount();\r\n    this.getS1PaymentList();\r\n  }\r\n\r\n  getS1PaymentList() {\r\n    this.apiService.findByParam(ENDPOINTS.applicationFormPresentor + this.currentUser.id,\r\n      'payment-status/FOR_PAYMENT/schedule-of-fees').subscribe((res: any) => {\r\n        this.paymentList = res.responseData.data;\r\n        this.dataSource = new MatTableDataSource<any>(this.paymentList);\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n      });\r\n  }\r\n\r\n  openModal(res) {\r\n\r\n    const dialogRef = this.dialog.open(ModalSingleApplicationComponent, {\r\n      width: '80%',\r\n      height: 'fit-content',\r\n      maxHeight: '85vh',\r\n      data: res\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.ngOnInit();\r\n    });\r\n\r\n  }\r\n}\r\n","<form>\r\n    <div class=\"container-fluid\">\r\n      <div class=\"row\">\r\n        <div class=\"col-md-12 title\">\r\n          <mat-label>\r\n            <mat-icon>view_list</mat-icon> Individual Applications - For Payment\r\n          </mat-label>\r\n        </div>\r\n      </div>\r\n      <hr>\r\n      <br>\r\n      <div class=\"col-md-12\" fxLayout fxLayoutAlign=\"center center\">\r\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n          <input matInput type=\"text\" placeholder=\"Company Name\">\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div class=\"mat-elevation-z8 fields\">\r\n        <table mat-table [dataSource]=\"dataSource\" matSort>\r\n          <ng-container matColumnDef=\"referenceCode\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> REFERENCE CODE </th>\r\n            <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"openModal(element)\"> {{element?.referenceCode | uppercase}}</td>\r\n          </ng-container>\r\n          <ng-container matColumnDef=\"typeOfApplication\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> TYPE OF APPLICATION</th>\r\n            <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"openModal(element)\">{{element?.applicationType.description | uppercase}} - {{element?.formType?.replaceAll('_',' ') | uppercase}}</td>\r\n          </ng-container>\r\n          <ng-container matColumnDef=\"brand\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> BRAND</th>\r\n            <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"openModal(element)\">{{element?.brand.description | uppercase}}</td>\r\n          </ng-container>\r\n          <ng-container matColumnDef=\"medium\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> MEDIUM</th>\r\n            <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"openModal(element)\">{{element?.typeOfMedium | uppercase}}</td>\r\n          </ng-container>\r\n          <ng-container matColumnDef=\"applicantCompanyName\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> APPLICANT COMPANY NAME</th>\r\n            <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"openModal(element)\">{{element?.company.companyName | uppercase}}</td>\r\n          </ng-container>\r\n          <ng-container matColumnDef=\"paymentStatus\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> PAYMENT STATUS</th>\r\n            <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"openModal(element)\">{{element?.paymentStatus?.replaceAll('_',' ') | uppercase}}</td>\r\n          </ng-container>\r\n\r\n\r\n\r\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n          <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n        </table>\r\n        <div class=\"no-record\" [hidden]=\"dataSource && dataSource?.data?.length > 0\">\r\n          No record found.\r\n        </div>\r\n        <mat-paginator [pageSizeOptions]=\"[10, 20, 50]\" showFirstLastButtons></mat-paginator>\r\n      </div>\r\n      <br>\r\n    </div>\r\n  </form>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTable, MatTableDataSource } from '@angular/material/table';\r\nimport { ApiService, DataStorageService } from '@services';\r\nimport { ENDPOINTS } from '@shared';\r\nimport { ModalMultipleApplicationsComponent } from './modal-multiple-applications/modal-multiple-applications.component';\r\n\r\n\r\nexport interface companyDetails {\r\n  referenceCode: string;\r\n  amount: number;\r\n}\r\n\r\nconst ELEMENT_DATA: companyDetails[] = [\r\n  { referenceCode: 'Company one ', amount: 3000, },\r\n  { referenceCode: 'Company two ', amount: 4000, },\r\n  { referenceCode: 'Company three ', amount: 5000, },\r\n  { referenceCode: 'Company two ', amount: 6000, },\r\n  { referenceCode: 'Company three ', amount: 7000, },\r\n];\r\n\r\n@Component({\r\n  selector: 'app-multiple-applications',\r\n  templateUrl: './multiple-applications.component.html',\r\n  styleUrls: ['./multiple-applications.component.scss']\r\n})\r\nexport class MultipleApplicationsComponent implements OnInit {\r\n\r\n  @ViewChild(MatPaginator, { static: false }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: false }) sort: MatSort;\r\n  @ViewChild(MatTable, { static: false }) table: MatTable<Object>;\r\n\r\n  dataSource: MatTableDataSource<any>\r\n  displayedColumns: string[] = ['adTitle', 'typeOfApplication', 'brand', 'product', 'applicantCompanyName', 'paymentStatus'];\r\n  paymentList = [];\r\n  currentUser: any;\r\n\r\n\r\n  constructor(\r\n    private apiService: ApiService,\r\n    private dialog: MatDialog,\r\n    private dataStorage: DataStorageService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.currentUser = this.dataStorage.getUserAccount();\r\n    this.getS1MultiplePaymentList();\r\n  }\r\n\r\n  getS1MultiplePaymentList() {\r\n    this.apiService.findAll(ENDPOINTS.applicationFormPresentor + `${this.currentUser.id}/multiple-application?paymentStatus=FOR_PAYMENT`)\r\n    .subscribe((res: any) => {\r\n      this.paymentList = res.responseData.data;\r\n\r\n      this.dataSource = new MatTableDataSource<any>(this.paymentList);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    }, (err: any) => {\r\n    });\r\n  }\r\n\r\n  openModal(res) {\r\n    const dialogRef = this.dialog.open(ModalMultipleApplicationsComponent, {\r\n      width: '60%',\r\n      height: '85%',\r\n      data: res\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        console.log(result);\r\n        this.getS1MultiplePaymentList();\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n\r\n}\r\n","<form>\r\n    <div class=\"container-fluid\">\r\n      <div class=\"row\">\r\n        <div class=\"col-md-12 title\">\r\n          <mat-label>\r\n            <mat-icon>view_list</mat-icon> Multiple Applications - For Payment\r\n          </mat-label>\r\n        </div>\r\n      </div>\r\n      <hr>\r\n      <br>\r\n      <div class=\"col-md-12\" fxLayout fxLayoutAlign=\"center center\">\r\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n          <input matInput type=\"text\" placeholder=\"Company Name\">\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div class=\"mat-elevation-z8 fields\">\r\n        <table mat-table [dataSource]=\"dataSource\" matSort>\r\n          <ng-container matColumnDef=\"adTitle\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> REFERENCE CODE </th>\r\n            <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"openModal(element)\"> {{element?.adTitle | uppercase}}</td>\r\n          </ng-container>\r\n          <ng-container matColumnDef=\"typeOfApplication\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> TYPE OF APPLICATION</th>\r\n            <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"openModal(element)\">{{element?.applicationType?.description | uppercase}}</td>\r\n          </ng-container>\r\n          <ng-container matColumnDef=\"brand\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> BRAND</th>\r\n            <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"openModal(element)\">{{element?.brand?.description | uppercase}}</td>\r\n          </ng-container>\r\n          <ng-container matColumnDef=\"product\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> PRODUCT</th>\r\n            <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"openModal(element)\">{{element?.product?.description | uppercase}}</td>\r\n          </ng-container>\r\n          <ng-container matColumnDef=\"applicantCompanyName\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> APPLICANT COMPANY NAME</th>\r\n            <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"openModal(element)\">{{element?.company.companyName | uppercase}}</td>\r\n          </ng-container>\r\n          <!-- <ng-container matColumnDef=\"countVerifiedApplicationForm\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> NUMBER OF VERIFIED APPLICATIONS</th>\r\n            <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"openModal(element)\">{{element?.countVerifiedApplicationForm}}</td>\r\n          </ng-container> -->\r\n          <ng-container matColumnDef=\"paymentStatus\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> PAYMENT STATUS</th>\r\n            <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"openModal(element)\">{{element?.paymentStatus?.replaceAll('_',' ') | uppercase}}</td>\r\n          </ng-container>\r\n\r\n\r\n\r\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n          <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n        </table>\r\n        <div class=\"no-record\" [hidden]=\"dataSource && dataSource?.data?.length > 0\">\r\n          No record found.\r\n        </div>\r\n        <mat-paginator [pageSizeOptions]=\"[10, 20, 50]\" showFirstLastButtons></mat-paginator>\r\n      </div>\r\n      <br>\r\n    </div>\r\n  </form>\r\n","import { USER_ROLES } from './../../../../../../shared/utils/constants';\r\nimport { Component, Inject, Input, OnDestroy, OnInit, Optional } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { Router } from '@angular/router';\r\nimport { AttachmentDocument, Payment, S2Application } from '@models';\r\nimport { ApiService, DataStorageService, SweetAlertService } from '@services';\r\nimport { ATTACHMENT_TYPE, ENDPOINTS, PAYMENT_STATUS } from '@shared';\r\nimport { ApplicationSingleMedia } from 'app/core/models/application-single-media.model';\r\nimport { FileStorageService } from 'app/core/services/file.storage.service';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-modal-special-applications',\r\n  templateUrl: './modal-special-applications.component.html',\r\n  styleUrls: ['./modal-special-applications.component.scss']\r\n})\r\nexport class ModalSpecialApplicationsComponent implements OnInit, OnDestroy {\r\n\r\n  @Input() s2Application = new S2Application();\r\n  attachmentDocument = new AttachmentDocument();\r\n  payment = new Payment();\r\n  applicationSingleMedia = new ApplicationSingleMedia();\r\n\r\n\r\n  paymentTypeList = [];\r\n  attachmentDocuments = [];\r\n\r\n\r\n  paymentType: any;\r\n  safeURLProofOfPayment: any;\r\n  selectedFiles: any;\r\n  currentUser: any;\r\n  attachment: any;\r\n  previewDocument = false;\r\n  isSubmitted = false;\r\n  paymentDetails: any;\r\n  typeOfMediumDisplay = '';\r\n\r\n  paymentForm: FormGroup;\r\n\r\n  constructor(\r\n    private sanitizer: DomSanitizer,\r\n    private apiService: ApiService,\r\n    public dataStorage: DataStorageService,\r\n    private fileStorageService: FileStorageService,\r\n    private sweetAlertService: SweetAlertService,\r\n    private router: Router,\r\n    private spinner: NgxSpinnerService,\r\n    @Optional() public dialogRef: MatDialogRef<ModalSpecialApplicationsComponent>,\r\n    @Optional() @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {\r\n    if (data) {\r\n      if (data) {\r\n        this.s2Application = data;\r\n        console.log('S2', this.s2Application);\r\n        switch (this.s2Application?.applicationForm?.refTypeOfMedium || this.payment?.applicationFormS2?.applicationForm?.refTypeOfMedium) {\r\n          case 'SINGLE MEDIA':\r\n            this.getApplicationSingleMedia();\r\n            break;\r\n          case 'MULTIMEDIA-MOVING':\r\n            this.getMultimediaMoving();\r\n            break;\r\n          case 'MULTIMEDIA-STATIC':\r\n            this.getMultimediaStatic();\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n        this.getPaymentDetails();\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.currentUser = this.dataStorage.getUserAccount();\r\n    this.getPaymentList();\r\n  }\r\n\r\n  getPaymentDetails() {\r\n    this.apiService.findAll(ENDPOINTS.specialPaymentDetails + this.s2Application.id).subscribe((res: any) => {\r\n      this.paymentDetails = res;\r\n      this.paymentDetails.vat = this.paymentDetails.vat.toFixed(2);\r\n    });\r\n  }\r\n\r\n  getPaymentList() {\r\n    this.apiService.findAll(ENDPOINTS.paymentType).subscribe((res: any) => {\r\n      this.paymentTypeList = res.responseData.data;\r\n      if (this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT) {\r\n        const creditCardIndex = this.paymentTypeList\r\n          .findIndex((element) => element.paymentDescription === 'Credit Card');\r\n        this.paymentTypeList.splice(creditCardIndex, 1);\r\n      }\r\n    });\r\n  }\r\n\r\n  selectFile(event) {\r\n    const attachmentSize = event.target.files[0].size;\r\n\r\n    if (event.target.files[0].type === 'application/pdf') {\r\n      if (attachmentSize > 15000000) { // 1MB = 1M\r\n        this.sweetAlertService.customErrorMessage(`Attachments' total file size should not exceed 15MB.`);\r\n        event.target.value = '';\r\n        return;\r\n      } else {\r\n        const pdfURL = URL.createObjectURL(event.target.files[0]);\r\n        this.safeURLProofOfPayment = this.sanitizer.bypassSecurityTrustResourceUrl(pdfURL);\r\n        this.previewDocument = true;\r\n        // env.showSpinner = true;\r\n        const reader = new FileReader();\r\n        const [file] = event.target.files;\r\n\r\n        reader.readAsDataURL(file);\r\n        reader.onload = () => {\r\n        };\r\n      }\r\n\r\n      this.selectedFiles = event.target.files;\r\n    } else {\r\n      this.sweetAlertService.customErrorMessage('Attachment should be in PDF format only.');\r\n      event.target.value = '';\r\n      return;\r\n    }\r\n  }\r\n\r\n  uploadDocument(s2Application) {\r\n    Swal.fire({\r\n      text: 'Are you sure you want to submit this PROOF OF PAYMENT?',\r\n      icon: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Confirm'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.spinner.show();\r\n        let params = '';\r\n        params = '?&attachmentType=' + ATTACHMENT_TYPE.PAYMENT + '&submissionType=' + s2Application.submissionType;\r\n        this.fileStorageService.pushFileToStorage(ENDPOINTS.attachmentDocument, this.selectedFiles.item(0), params)\r\n          .subscribe(res => {\r\n            const obj = res.responseData.data;\r\n            console.log(obj);\r\n            this.s2Application.paymentAttachmentReference = obj.paymentAttachmentReference;\r\n            this.payment.paymentAttachmentReference = obj.paymentAttachmentReference;\r\n            this.payment.amountDue = s2Application.amount;\r\n            this.payment.applicationFormS2 = s2Application;\r\n            this.payment.appFormReference = s2Application.appFormReference;\r\n            this.payment.filename = obj.filename;\r\n            this.saveProofOfPayment();\r\n            // this.previewDocument = true;\r\n            this.selectedFiles = undefined;\r\n            this.spinner.hide();\r\n            this.router.navigateByUrl('asc/page/application/special-applications');\r\n          }, (err: any) => {\r\n            this.spinner.hide();\r\n            this.sweetAlertService.error(err);\r\n          }, () => {\r\n            // actions after subscription\r\n            this.spinner.hide();\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  saveProofOfPayment() {\r\n    console.log('Saving payment...');\r\n    this.dataStorage.setDisplayProgressbar(true);\r\n    this.payment.paymentStatus = PAYMENT_STATUS.UNPAID;\r\n    this.payment.id = 0;\r\n    this.payment.officialReceiptNo = '';\r\n    this.payment.paymentMethod = null;\r\n    console.log('PAYMENT : ', this.payment);\r\n\r\n    this.apiService.save(`${ENDPOINTS.s2ApplicationFormPresentor}payment-type-id/${this.paymentType.id}\r\n    /payment-special-clearing/submit`, this.payment).subscribe((res: any) => {\r\n      console.log('SAVED STATUS: ', res.responseData.data);\r\n\r\n      this.safeURLProofOfPayment = this.sanitizer.bypassSecurityTrustResourceUrl(res.responseData.data.fileURL);\r\n      this.isSubmitted = true;\r\n      this.sweetAlertService.customSuccessMessage('Proof of payment successfully submitted.');\r\n      this.closeModal();\r\n    }, (err) => {\r\n      console.log(err);\r\n      this.sweetAlertService.error(err);\r\n      this.dataStorage.setDisplayProgressbar(false);\r\n    }, () => {\r\n      this.dataStorage.setDisplayProgressbar(false);\r\n    });\r\n  }\r\n\r\n  closeModal(): void {\r\n    this.dialogRef.close();\r\n    this.router.navigate(['asc/page/application/special-applications']);\r\n  }\r\n  ngOnDestroy(): void {\r\n    // this.s2Application = null;\r\n  }\r\n\r\n  getApplicationSingleMedia() {\r\n    this.apiService.findByParam(ENDPOINTS.applicationSingleMedia,\r\n      `app-form-reference/${this.s2Application?.applicationForm?.appFormReference}`).subscribe(\r\n        (res: any) => {\r\n          if (res.responseData.data.length > 0) {\r\n            this.applicationSingleMedia = res.responseData.data[0];\r\n            this.typeOfMediumDisplay = `${this.applicationSingleMedia?.mediumExecution?.typeOfMedium?.description} (${this.applicationSingleMedia?.sizeLength})`;\r\n          } else {\r\n            this.typeOfMediumDisplay = '';\r\n          }\r\n        }, (err: any) => {\r\n          this.typeOfMediumDisplay = '';\r\n        });\r\n  }\r\n\r\n  getMultimediaStatic() {\r\n    this.apiService.findByParam(ENDPOINTS.applicationMultimedia,\r\n      `app-form-reference/${this.s2Application?.applicationForm?.appFormReference}`).subscribe(\r\n        (res: any) => {\r\n          if (res.responseData.data.length > 0) {\r\n            const multimediaList = new Set(res.responseData.data.map(mappedList => `${mappedList?.typeOfMedium?.description} (${mappedList?.multimediaSizeLength})`));\r\n\r\n            this.typeOfMediumDisplay = '';\r\n            let mediaCtrl = 1;\r\n            for (const media of multimediaList) {\r\n              if (mediaCtrl !== multimediaList.size) {\r\n                this.typeOfMediumDisplay += `${media}, `;\r\n                mediaCtrl++;\r\n              } else {\r\n                this.typeOfMediumDisplay += media;\r\n              }\r\n            }\r\n          } else {\r\n            this.typeOfMediumDisplay = '';\r\n          }\r\n        }, (err: any) => {\r\n          this.typeOfMediumDisplay = '';\r\n        });\r\n  }\r\n\r\n  getMultimediaMoving() {\r\n    this.apiService.findByParam(ENDPOINTS.applicationMultimedia,\r\n      `app-form-reference/${this.s2Application?.applicationForm?.appFormReference}`).subscribe(\r\n        (res: any) => {\r\n          if (res.responseData.data.length > 0) {\r\n            const multimediaList = new Set(res.responseData.data.map(mappedList => `${mappedList?.typeOfMedium?.description} (${mappedList?.multimediaSizeLength})`));\r\n\r\n            this.typeOfMediumDisplay = '';\r\n            let mediaCtrl = 1;\r\n            for (const media of multimediaList) {\r\n              if (mediaCtrl !== multimediaList.size) {\r\n                this.typeOfMediumDisplay += `${media}, `;\r\n                mediaCtrl++;\r\n              } else {\r\n                this.typeOfMediumDisplay += media;\r\n              }\r\n            }\r\n          } else {\r\n            this.typeOfMediumDisplay = '';\r\n          }\r\n        }, (err: any) => {\r\n          this.typeOfMediumDisplay = '';\r\n        });\r\n  }\r\n\r\n}\r\n","<div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12 title\">\r\n            <mat-label>\r\n                <mat-icon>view_list</mat-icon> <b>Schedule of Fees - Special Application</b>\r\n            </mat-label>\r\n        </div>\r\n    </div>\r\n    <hr>\r\n    <br>\r\n    <div class=\"row col-md-12\">\r\n        <div class=\"row col-md-6\">\r\n            <div>\r\n                <mat-label>Proof of Payment: &nbsp;&nbsp;&nbsp;<span>PDF file only!</span></mat-label><br>\r\n                <input class=\"file-upload\" type=\"file\" [(ngModel)]=\"attachment\" [ngModelOptions]=\"{standalone: true}\"\r\n                    accept=\".pdf\" (change)=\"selectFile($event)\">\r\n            </div>\r\n            <div *ngIf=\"previewDocument===true\">\r\n                <div class=\"file-upload\">\r\n                    <object [data]=\"safeURLProofOfPayment\" type=\"application/pdf\" width=\"100%\" height=\"500\">\r\n                        <iframe [src]=\"safeURLProofOfPayment\" width=\"100%\" height=\"500\">\r\n                            <p>This browser does not support PDF!</p>\r\n                        </iframe>\r\n                    </object>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row col-md-6\">\r\n\r\n            <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n                <mat-label>Reference Code</mat-label>\r\n                <input matInput [value]=\"s2Application?.applicationForm?.referenceCode\" readonly>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n                <mat-label>Advertiser</mat-label>\r\n                <input matInput name=\"companyName\" [value]=\"s2Application?.applicationForm?.company?.companyName\"\r\n                    readonly>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n                <mat-label>Ad Title - Medium (Length)</mat-label>\r\n                <input matInput name=\"refTypeOfMedium\"\r\n                    [value]=\"s2Application?.applicationForm?.adTitle + ' - ' + typeOfMediumDisplay\" readonly>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n                <mat-label>Vatable Sales</mat-label>\r\n                <input matInput class=\"numbers-input\" name=\"amount\"\r\n                    [value]=\"paymentDetails?.basicRate | number : '1.2-2'\" readonly>\r\n            </mat-form-field>\r\n\r\n\r\n            <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n                <mat-label>VAT</mat-label>\r\n                <input matInput class=\"numbers-input\" name=\"amount\" [value]=\"paymentDetails?.vat | number : '1.2-2'\"\r\n                    readonly>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n                <mat-label>Total Sales (VAT Inclusive)</mat-label>\r\n                <input matInput class=\"numbers-input total\" name=\"amount\"\r\n                    [value]=\"paymentDetails?.amountDue | number : '1.2-2'\" readonly>\r\n            </mat-form-field>\r\n\r\n            <hr>\r\n\r\n            <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n                <mat-label>Payment Mode <span class=\"required-field\">\r\n                        <mat-icon>notification_important</mat-icon>\r\n                    </span></mat-label>\r\n                <mat-select [(ngModel)]=\"paymentType\" [ngModelOptions]=\"{standalone: true}\">\r\n                    <mat-option *ngFor=\"let i of paymentTypeList\" [value]=\"i\" name=\"paymentType\">\r\n                        {{i?.paymentDescription | uppercase}}\r\n                    </mat-option>\r\n                </mat-select>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n                <mat-label>Remarks</mat-label>\r\n                <textarea matInput name=\"remarks\" [(ngModel)]=\"payment.remarks\"></textarea>\r\n            </mat-form-field>\r\n\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n        <div class=\"col-md-10\"><span *ngIf=\"paymentType && paymentDetails?.amountDue === 0\">\r\n                <i>Please contact ASC admin to check the Maintenance of Fees.</i></span></div>\r\n        <div class=\"col-md-2\">\r\n            <button mat-raised-button class=\"button-red\"\r\n                [disabled]=\"!paymentType || !previewDocument || paymentDetails?.amountDue === 0\"\r\n                (click)=\"uploadDocument(s2Application)\">\r\n                <i class=\"material-icons color__white\">task_alt</i> SUBMIT\r\n            </button>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { MultiMediaStatic } from './multimedia-static.model';\r\nexport class MultiMediaStaticConst{\r\n    data: Array<MultiMediaStatic> = new Array<MultiMediaStatic>();\r\n    constructor(){\r\n        this.data = [\r\n            {\r\n                id: 0,\r\n                multimediaStaticMedium: 'collaterals',\r\n                hasSelected: false,\r\n                sizeLength: 0\r\n              },\r\n              {\r\n                id: 1,\r\n                multimediaStaticMedium: 'digital static',\r\n                hasSelected: false,\r\n                sizeLength: 0\r\n              },\r\n              {\r\n                id: 2,\r\n                multimediaStaticMedium: 'ooh',\r\n                hasSelected: false,\r\n                sizeLength: 0\r\n              },\r\n              {\r\n                id: 3,\r\n                multimediaStaticMedium: 'print',\r\n                hasSelected: false,\r\n                sizeLength: 0\r\n              }\r\n        ]\r\n    }\r\n}","export * from './accounting.module';\r\nexport * from './add-payment/add-payment.component';\r\nexport * from './add-payment/add-payment.module';\r\nexport * from './list-payment/list-payment.component';\r\nexport * from './list-payment/list-payment.module';","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { URL_PATHS } from '@shared';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: URL_PATHS.S1_APPLICATION,\r\n    loadChildren: () => import('./s1-application/s1-application.module')\r\n      .then(m => m.S1ApplicationModule)\r\n  },\r\n  {\r\n    path: URL_PATHS.S2_APPLICATION,\r\n    loadChildren: () => import('./s2-application/s2-application.module')\r\n      .then(m => m.S2ApplicationModule)\r\n  },\r\n  {\r\n    path: URL_PATHS.SCHEDULE_OF_FEES_SINGLE_APPLICATION,\r\n    loadChildren: () => import('./schedule-of-fees/single-application/single-application.module')\r\n      .then(m => m.SingleApplicationModule)\r\n  },\r\n  {\r\n    path: URL_PATHS.SCHEDULE_OF_FEES_SINGLE_APPLICATION + '/:id',\r\n    loadChildren: () => import('./schedule-of-fees/single-application/single-application.module')\r\n      .then(m => m.SingleApplicationModule)\r\n  },\r\n  {\r\n    path: URL_PATHS.SCHEDULE_OF_FEES_MULTIPLE_APPLICATIONS,\r\n    loadChildren: () => import('./schedule-of-fees/multiple-applications/multiple-applications.module')\r\n      .then(m => m.MultipleApplicationsModule)\r\n  },\r\n  {\r\n    path: URL_PATHS.SCHEDULE_OF_FEES_MULTIPLE_APPLICATIONS + '/:id',\r\n    loadChildren: () => import('./schedule-of-fees/multiple-applications/multiple-applications.module')\r\n      .then(m => m.MultipleApplicationsModule)\r\n  },\r\n  {\r\n    path: URL_PATHS.SCHEDULE_OF_FEES_SPECIAL_APPLICATIONS,\r\n    loadChildren: () => import('./schedule-of-fees/special-applications/special-applications.module')\r\n      .then(m => m.SpecialApplicationsModule)\r\n  },\r\n  {\r\n    path: URL_PATHS.ACCOUNTS_PAYABLE,\r\n    loadChildren: () => import('./schedule-of-fees/accounts-payable/accounts-payable.module')\r\n      .then(m => m.AccountsPayableModule)\r\n  },\r\n  {\r\n    path: URL_PATHS.SCHEDULE_OF_FEES_SPECIAL_APPLICATIONS + '/:id',\r\n    loadChildren: () => import('./schedule-of-fees/special-applications/special-applications.module')\r\n      .then(m => m.SpecialApplicationsModule)\r\n  },\r\n  {\r\n    path: URL_PATHS.APPLICATION_REASSIGNMENT,\r\n    loadChildren: () => import('./reassignment/reassignment.module')\r\n      .then(m => m.ReassignmentModule)\r\n  }\r\n];\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ApplicationsRoutingModule { }\r\n","import { Observable, Subject } from \"rxjs\";\r\nimport { AttachmentDocumentComponent } from \"./../../attachment-document/attachment-document.component\";\r\nimport { DatePipe } from \"@angular/common\";\r\nimport {\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  OnInit,\r\n  Output,\r\n  ViewChild,\r\n} from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatAccordion } from \"@angular/material/expansion\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { DomSanitizer } from \"@angular/platform-browser\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport {\r\n  AttachmentDocument,\r\n  Company,\r\n  S1Application,\r\n  S2Application,\r\n} from \"@models\";\r\nimport { ApiService, DataStorageService, SweetAlertService } from \"@services\";\r\nimport {\r\n  APPLICATION_STAGE,\r\n  APPLICATION_STATUS_S2,\r\n  ENDPOINTS,\r\n  USER_ROLES,\r\n  ATTACHMENT_TYPE,\r\n  TYPE_OF_MEDIUM,\r\n  APPLICATION_STATUS,\r\n  APP_DECISION_STATUS,\r\n  APPLICATION_STATUS_FOR_COMPLIANCE,\r\n  SUBMISSION_TYPE,\r\n  ROLES,\r\n} from \"@shared\";\r\nimport { ApplicationSingleMedia } from \"app/core/models/application-single-media.model\";\r\nimport { RationaleS2 } from \"app/core/models/rationale-s2.model\";\r\nimport { Report } from \"app/core/models/report.model\";\r\nimport { CommonServices } from \"app/core/services/common-services.service\";\r\nimport { FileStorageService } from \"app/core/services/file.storage.service\";\r\nimport { IncompleteDisapprovedRationaleComponent } from \"app/modules/fragments/incomplete-disapproved-rationale/incomplete-disapproved-rationale.component\";\r\nimport { RejectDisapprovedReasonComponent } from \"app/modules/fragments/reject-disapproved-reason/reject-disapproved-reason.component\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport Swal from \"sweetalert2\";\r\nimport { ClientInformationComponent } from \"../../client-information/client-information.component\";\r\nimport { CommentComponent } from \"../../comment/comment.component\";\r\nimport { MaterialInformationComponent } from \"../../material-information/material-information.component\";\r\n\r\n@Component({\r\n  selector: \"app-add-s2-application\",\r\n  templateUrl: \"./add-s2-application.component.html\",\r\n  styleUrls: [\"./add-s2-application.component.scss\"],\r\n})\r\nexport class AddS2ApplicationComponent implements OnInit {\r\n  @ViewChild(MatAccordion) accordion: MatAccordion;\r\n  @ViewChild(ClientInformationComponent, { static: false })\r\n  clientInformation: ClientInformationComponent;\r\n  @ViewChild(MaterialInformationComponent, { static: false })\r\n  materialInformation: MaterialInformationComponent;\r\n  @ViewChild(CommentComponent, { static: false }) comment: CommentComponent;\r\n  // @ViewChild(LayoutComponent, { static: false }) layoutComponent: LayoutComponent;\r\n\r\n  @ViewChild(\"finalMaterialFileInput\") myFinalMaterialFileInput: ElementRef;\r\n  @ViewChild(\"finalMaterialFile\") myFinalMaterialFile: ElementRef;\r\n\r\n  @ViewChild(\"finalMaterialFileInputC\") myFinalMaterialFileInputC: ElementRef;\r\n  @ViewChild(\"finalMaterialFileC\") myFinalMaterialFileC: ElementRef;\r\n\r\n  @ViewChild(AttachmentDocumentComponent, { static: false })\r\n  attachmentComponent: AttachmentDocumentComponent;\r\n\r\n  @Output() spinnerMessageEmitter = new EventEmitter<string>();\r\n\r\n  title = \"ASC Online System\";\r\n  s2Application = new S2Application();\r\n  s1Application = new S1Application();\r\n  company = new Company();\r\n  rationaleS2 = new RationaleS2();\r\n  attachmentDocument = new AttachmentDocument();\r\n  applicationSingleMedia = new ApplicationSingleMedia();\r\n  report = new Report();\r\n  attachmentDocuments: any = {};\r\n  originalAttachmentDocuments = [];\r\n  revisionAttachmentDocuments = [];\r\n  complianceAttachmentDocuments = [];\r\n  s2OriginalAttachmentDocuments = [];\r\n  s2OriginalAttachmentObservable: Subject<any> = new Subject();\r\n  s2ComplianceAttachmentDocuments = [];\r\n  supportiveDocumentList = [];\r\n  affiliationList = [];\r\n  companyList = [];\r\n  multimediaStaticList = [];\r\n  multimediaMovingList = [];\r\n  selectedMultimediaList = [];\r\n  rationaleOthersList = [];\r\n  rationaleLists = [];\r\n  isNewCompany = false;\r\n  showCompanyAddress = false;\r\n  id: number;\r\n  spinnerMessage = \"\";\r\n  todayDate: Date = new Date();\r\n  s2ApplicationForm: FormGroup;\r\n  selectedFile: File;\r\n  tempCompliance = new AttachmentDocument();\r\n\r\n  selected: any; // in html but not existing in component -- encountered during 'ng serve --aot'\r\n  currentUser: any;\r\n  currentUserRole: any;\r\n  decisionStatus = \"\";\r\n  audioVideo = \"Video\";\r\n  isAudioVideo = false;\r\n  isShowUploadButton = false;\r\n  rationaleDisplay = false;\r\n  fileSize: number;\r\n  safeURLFile: any;\r\n  uploadedFinalMaterialFile: any;\r\n\r\n  isSuperAdmin = false;\r\n  isAdmin = false;\r\n  isAccounting = false;\r\n  isApplicant = false;\r\n  isEvaluator = false;\r\n  isAdSpecialist = false;\r\n  isScreener = false;\r\n  isReviewer = false;\r\n\r\n  previewAttachmentsList = [];\r\n  previewAttachmentsDisplayedColumns: string[] = [\r\n    \"clearanceToaFilename\",\r\n    \"viewClearanceToaIcon\",\r\n  ];\r\n  previewAttachmentsListDataSource: MatTableDataSource<object>;\r\n  isAscUser: boolean = false;\r\n  ascUserRoleList = [\r\n    ...ROLES.filter((role: any) => role.ascUser === true).map(\r\n      (role: any) => role.role\r\n    ),\r\n  ];\r\n  applicationStage: string = \"S2-APPLICATION\";\r\n  constructor(\r\n    private apiService: ApiService,\r\n    private formBuilder: FormBuilder,\r\n    private sweetAlertService: SweetAlertService,\r\n    private dataStorage: DataStorageService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private sanitizer: DomSanitizer,\r\n    public datepipe: DatePipe,\r\n    private spinner: NgxSpinnerService,\r\n    private fileStorageService: FileStorageService,\r\n    private dialog: MatDialog\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.setFormValidator();\r\n    this.currentUser = this.dataStorage.getUserAccount();\r\n    this.isAscUser = this.ascUserRoleList.includes(\r\n      this.dataStorage.getUserRole()\r\n    );\r\n    this.currentUserRole = this.currentUser.userRole.name;\r\n    this.id = Number(this.route.snapshot.paramMap.get(\"id\"));\r\n    this.initUserRole();\r\n    this.getAffiliationList();\r\n    this.getCompanyList();\r\n    if (this.id) {\r\n      this.viewS2Application();\r\n    }\r\n  }\r\n\r\n  initUserRole() {\r\n    if (this.currentUser.userRole.name === USER_ROLES.ROLE_SUPER_ADMIN) {\r\n      this.isSuperAdmin = true;\r\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_ADMIN) {\r\n      this.isAdmin = true;\r\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_ACCOUNTING) {\r\n      this.isAccounting = true;\r\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT) {\r\n      this.isApplicant = true;\r\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_SCREENER) {\r\n      this.isScreener = true;\r\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_REVIEWER) {\r\n      this.isReviewer = true;\r\n    } else if (\r\n      this.currentUser.userRole.name === USER_ROLES.ROLE_AD_SPECIALIST\r\n    ) {\r\n      this.isAdSpecialist = true;\r\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_ENCODER) {\r\n      this.isEvaluator = true;\r\n    }\r\n  }\r\n\r\n  viewS2Application(): void {\r\n    this.spinner.show();\r\n    this.spinnerMessage = \"Loading S2 Application\";\r\n    this.apiService.findById(ENDPOINTS.applicationFormS2, this.id).subscribe(\r\n      (res: any) => {\r\n        console.log(\"s2 = \");\r\n        this.s2Application = res.responseData.data;\r\n        console.log(\"S2 Form: \", this.s2Application);\r\n\r\n        this.s1Application = this.s2Application.applicationForm;\r\n        this.clientInformation.s1Application = this.s2Application.applicationForm;\r\n        this.materialInformation.s1Application = this.s2Application.applicationForm;\r\n\r\n        if (this.s2Application.finalMaterialAttachmentReference) {\r\n          this.isShowUploadButton = true;\r\n          this.getS2AttachmentDocument();\r\n        }\r\n\r\n        this.setApplicationStage(this.s2Application);\r\n        this.hideSpinner();\r\n        if (\r\n          this.s2Application.applicationForm.refTypeOfMedium ===\r\n          TYPE_OF_MEDIUM.SINGLE_MEDIA\r\n        ) {\r\n          this.getApplicationSingleMedia();\r\n        } else if (\r\n          this.s2Application.applicationForm.refTypeOfMedium ===\r\n          TYPE_OF_MEDIUM.MULTIMEDIA_MOVING\r\n        ) {\r\n          this.getMultimediaMoving();\r\n        } else if (\r\n          this.s2Application.applicationForm.refTypeOfMedium ===\r\n          TYPE_OF_MEDIUM.MULTIMEDIA_STATIC\r\n        ) {\r\n          this.getMultimediaStatic();\r\n        }\r\n        this.getAttachmentDocuments();\r\n        // this.getSupportiveDocuments();\r\n\r\n        if (\r\n          (this.s2Application.decisionStatus ===\r\n            APP_DECISION_STATUS.INCOMPLETE ||\r\n            this.s2Application.decisionStatus ===\r\n              APP_DECISION_STATUS.DISAPPROVED) &&\r\n          this.currentUserRole === USER_ROLES.ROLE_AD_SPECIALIST\r\n        ) {\r\n          if (\r\n            this.s2Application.internalStatus ===\r\n              \"RE_SUBMITTED_S2_APPLICATION_VERIFIED_BY_ENCODER\" &&\r\n            this.s2Application.decisionStatus === APP_DECISION_STATUS.INCOMPLETE\r\n          ) {\r\n            this.getRationaleList();\r\n          }\r\n        }\r\n\r\n        if (\r\n          this.isAdmin ||\r\n          this.isSuperAdmin ||\r\n          this.isApplicant ||\r\n          this.isAdSpecialist\r\n        ) {\r\n          console.log(\r\n            ENDPOINTS.clearanceAndToa + this.s2Application?.appFormReference\r\n          );\r\n          this.apiService\r\n            .findByParam(\r\n              ENDPOINTS.clearanceAndToa,\r\n              this.s2Application?.appFormReference\r\n            )\r\n            .subscribe((previewAttachmentsData) => {\r\n              console.log(previewAttachmentsData);\r\n\r\n              this.previewAttachmentsList =\r\n                previewAttachmentsData.responseData.data;\r\n              this.previewAttachmentsListDataSource = new MatTableDataSource<object>(\r\n                this.previewAttachmentsList\r\n              );\r\n            });\r\n        }\r\n      },\r\n      (err: any) => {\r\n        this.hideSpinner();\r\n      }\r\n    );\r\n  }\r\n\r\n  setApplicationStage(data): void {\r\n    this.clientInformation.applicationStage = APPLICATION_STAGE.S2_APPLICATION;\r\n    this.materialInformation.applicationStage =\r\n      APPLICATION_STAGE.S2_APPLICATION;\r\n    if (this.currentUserRole !== USER_ROLES.ROLE_APPLICANT) {\r\n      this.comment.applicationStage = APPLICATION_STAGE.S2_APPLICATION;\r\n      this.comment.getCommentsS2(data);\r\n    }\r\n  }\r\n\r\n  saveStatus(): void {\r\n    if (\r\n      this.s2Application.appFormReference &&\r\n      this.s2Application.appFormReference !== \"\" &&\r\n      this.s2Application.appFormReference !== undefined\r\n    ) {\r\n      let endpoint;\r\n      let swalMessage;\r\n\r\n      if (this.currentUserRole === USER_ROLES.ROLE_APPLICANT) {\r\n        endpoint = ENDPOINTS.s2ApplicationFormPresentorSubmit;\r\n        swalMessage = \"S2 application has been submitted.\";\r\n      } else if (this.currentUserRole === USER_ROLES.ROLE_ENCODER) {\r\n        endpoint = ENDPOINTS.s2ApplicationFormEncoderVerify;\r\n        swalMessage = \"S2 application has been verified.\";\r\n        this.s2Application.assignedUser = this.s2Application.applicationForm.assignedAdSpecialist;\r\n      } else if (this.currentUserRole === USER_ROLES.ROLE_AD_SPECIALIST) {\r\n        if (this.decisionStatus === APPLICATION_STATUS_S2.INCOMPLETE) {\r\n          endpoint = ENDPOINTS.s2ApplicationFormAdSpe + \"incomplete\";\r\n          swalMessage = \"S2 Application Incomplete\";\r\n        } else if (this.decisionStatus === APPLICATION_STATUS_S2.DISAPPROVED) {\r\n          endpoint = ENDPOINTS.s2ApplicationFormAdSpe + \"disapproved\";\r\n          swalMessage = \"S2 Application Disapproved\";\r\n        } else if (this.decisionStatus === APPLICATION_STATUS_S2.APPROVED) {\r\n          endpoint = ENDPOINTS.s2ApplicationFormAdSpe + \"approved\";\r\n          swalMessage = \"S2 Application Approved!\";\r\n        }\r\n      }\r\n\r\n      // this.s2Application.modifiedBy = this.currentUser;\r\n      // this.s2Application.modifiedDate = this.todayDate;\r\n\r\n      Swal.fire({\r\n        text: \"Are you sure you want to submit the application?\",\r\n        icon: \"question\",\r\n        showCancelButton: true,\r\n        confirmButtonColor: \"#3085d6\",\r\n        cancelButtonColor: \"#d33\",\r\n        confirmButtonText: \"Confirm\",\r\n      }).then((result) => {\r\n        if (result.value) {\r\n          this.spinner.show();\r\n          if (this.decisionStatus === APPLICATION_STATUS_S2.INCOMPLETE) {\r\n            this.s2Application.submissionType = SUBMISSION_TYPE.ORIGINAL;\r\n            this.s2Application.decisionStatus =\r\n              APPLICATION_STATUS_S2.INCOMPLETE;\r\n          } else if (this.decisionStatus === APPLICATION_STATUS_S2.APPROVED) {\r\n            this.s2Application.decisionStatus = APPLICATION_STATUS_S2.APPROVED;\r\n          } else if (\r\n            this.decisionStatus === APPLICATION_STATUS_S2.DISAPPROVED\r\n          ) {\r\n            this.s2Application.decisionStatus =\r\n              APPLICATION_STATUS_S2.DISAPPROVED;\r\n          }\r\n          this.apiService.save(endpoint, this.s2Application).subscribe(\r\n            (res: any) => {\r\n              this.spinner.hide();\r\n              this.sweetAlertService.customSuccessMessage(swalMessage);\r\n              this.navigateToS2List();\r\n            },\r\n            (err: any) => {\r\n              this.spinner.hide();\r\n            }\r\n          );\r\n        }\r\n      });\r\n    } else {\r\n      this.sweetAlertService.customErrorMessage(\r\n        \"Missing application form reference.\"\r\n      );\r\n    }\r\n  } // in html but not existing in component -- encountered during 'ng serve --aot'\r\n\r\n  saveStatusForCompliance(): void {\r\n    let endpoint;\r\n    let swalMessage;\r\n\r\n    if (this.currentUserRole === USER_ROLES.ROLE_APPLICANT) {\r\n      endpoint = ENDPOINTS.s2ApplicationForm + \"compliance/presentor/submit\";\r\n      swalMessage = \"S2 Application has been re-submitted successfully\";\r\n    } else if (this.currentUserRole === USER_ROLES.ROLE_ENCODER) {\r\n      endpoint = ENDPOINTS.s2ApplicationForm + \"compliance/encoder/verify\";\r\n      swalMessage =\r\n        \"S2 Application has been re-submitted successfully verified by ENCODER\";\r\n    } else if (this.currentUserRole === USER_ROLES.ROLE_AD_SPECIALIST) {\r\n      if (this.decisionStatus === APPLICATION_STATUS_S2.INCOMPLETE) {\r\n        endpoint = ENDPOINTS.s2ApplicationFormAdSpe + \"incomplete\";\r\n        swalMessage = \"S2 Application Incomplete\";\r\n      } else if (this.decisionStatus === APPLICATION_STATUS_S2.DISAPPROVED) {\r\n        endpoint = ENDPOINTS.s2ApplicationFormAdSpe + \"disapproved\";\r\n        swalMessage = \"S2 Application Disapproved\";\r\n      } else if (this.decisionStatus === APPLICATION_STATUS_S2.APPROVED) {\r\n        endpoint =\r\n          ENDPOINTS.s2ApplicationForm + \"compliance/ad-specialist/verify\";\r\n        swalMessage = \"S2 Application has been verified by AD-SPECIALIST\";\r\n        // this.s2Application.decisionStatus = APPLICATION_STATUS_S2.APPROVED;\r\n      }\r\n    }\r\n\r\n    Swal.fire({\r\n      text: \"Are you sure you want to re-submit this application?\",\r\n      icon: \"question\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Confirm\",\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.spinner.show();\r\n        if (this.decisionStatus === APPLICATION_STATUS_S2.INCOMPLETE) {\r\n          this.s2Application.submissionType = SUBMISSION_TYPE.ORIGINAL;\r\n          this.s2Application.decisionStatus = APPLICATION_STATUS_S2.INCOMPLETE;\r\n        } else if (this.decisionStatus === APPLICATION_STATUS_S2.APPROVED) {\r\n          this.s2Application.decisionStatus = APPLICATION_STATUS_S2.APPROVED;\r\n        } else if (this.decisionStatus === APPLICATION_STATUS_S2.DISAPPROVED) {\r\n          this.s2Application.decisionStatus = APPLICATION_STATUS_S2.DISAPPROVED;\r\n        }\r\n        this.s2Application.submissionType = SUBMISSION_TYPE.ORIGINAL;\r\n        this.apiService.save(endpoint, this.s2Application).subscribe(\r\n          (res: any) => {\r\n            this.spinner.hide();\r\n            this.sweetAlertService.customSuccessMessage(swalMessage);\r\n            this.navigateToS2List();\r\n          },\r\n          (err: any) => {\r\n            this.spinner.hide();\r\n          }\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  saveStatusForClearance(): void {\r\n    let endpoint;\r\n    let swalMessage;\r\n\r\n    if (this.currentUserRole === USER_ROLES.ROLE_APPLICANT) {\r\n      endpoint = ENDPOINTS.s2ApplicationForm + \"clearance/presentor/submit\";\r\n      swalMessage = \"S2 Application clearance has been submitted successfully\";\r\n    } else if (this.currentUserRole === USER_ROLES.ROLE_ENCODER) {\r\n      endpoint = ENDPOINTS.s2ApplicationForm + \"clearance/encoder/verify\";\r\n      swalMessage =\r\n        \"S2 Application clearance has been verified successfully by ENCODER\";\r\n    } else if (this.currentUserRole === USER_ROLES.ROLE_AD_SPECIALIST) {\r\n      if (this.decisionStatus === APPLICATION_STATUS_S2.DISAPPROVED) {\r\n        endpoint = ENDPOINTS.s2ApplicationFormAdSpe + \"disapproved\";\r\n        swalMessage = \"S2 Application clearance Disapproved\";\r\n      } else if (this.decisionStatus === APPLICATION_STATUS_S2.APPROVED) {\r\n        endpoint =\r\n          ENDPOINTS.s2ApplicationForm + \"clearance/ad-specialist/verify\";\r\n        swalMessage =\r\n          \"S2 Application clearance has been approved by AD-SPECIALIST\";\r\n        this.s2Application.internalStatus = APPLICATION_STATUS_S2.APPROVED;\r\n        this.s2Application.externalStatus = APPLICATION_STATUS_S2.APPROVED;\r\n      }\r\n    }\r\n\r\n    Swal.fire({\r\n      text: \"Are you sure you want to submit this application clearance?\",\r\n      icon: \"question\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Confirm\",\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        if (this.decisionStatus === APPLICATION_STATUS_S2.DISAPPROVED) {\r\n          this.s2Application.decisionStatus = APPLICATION_STATUS_S2.DISAPPROVED;\r\n        }\r\n        this.spinner.show();\r\n        this.apiService.save(endpoint, this.s2Application).subscribe(\r\n          (res: any) => {\r\n            this.hideSpinner();\r\n            this.sweetAlertService.customSuccessMessage(swalMessage);\r\n            this.navigateToS2List();\r\n          },\r\n          (err: any) => {\r\n            this.hideSpinner();\r\n          }\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  applyApplicationForClearance(): void {\r\n    Swal.fire({\r\n      text: \"Are you sure you want to apply this application to Clearance?\",\r\n      icon: \"question\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Confirm\",\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.spinner.show();\r\n        this.apiService\r\n          .save(\r\n            ENDPOINTS.s2ApplicationForm + \"clearance/presentor/submit\",\r\n            this.s2Application\r\n          )\r\n          .subscribe(\r\n            (res: any) => {\r\n              this.hideSpinner();\r\n              this.sweetAlertService.customSuccessMessage(\r\n                this.sweetAlertService.customSuccessMessage(\r\n                  \"Application with reference no is applied for Clearance successfully.\"\r\n                )\r\n              );\r\n              this.navigateToS2List();\r\n            },\r\n            (err: any) => {\r\n              this.hideSpinner();\r\n            }\r\n          );\r\n      }\r\n    });\r\n  }\r\n\r\n  rejectDisapprovedModal(ascUser = \"\", action = \"\", status = \"\"): void {\r\n    // Swal.fire({\r\n    //   text: 'Are you sure you want to REJECT this application?',\r\n    //   icon: 'question',\r\n    //   showCancelButton: true,\r\n    //   confirmButtonColor: '#3085d6',\r\n    //   cancelButtonColor: '#d33',\r\n    //   confirmButtonText: 'Confirm'\r\n    // }).then((result) => {\r\n    //   if (result.value) {\r\n    //     this.apiService.save(ENDPOINTS.s2ApplicationFormEncoderReject, this.s2Application).subscribe(\r\n    //       (res: any) => {\r\n    //         this.sweetAlertService.customSuccessMessage('Application has been rejected successfully');\r\n    //         this.router.navigateByUrl('asc/page/application/s2/lists');\r\n    //       }\r\n    //     );\r\n    //   }\r\n    // })\r\n    const dialogRef = this.dialog.open(RejectDisapprovedReasonComponent, {\r\n      width: \"40%\",\r\n      height: \"45%\",\r\n      data: {\r\n        s2Application: this.s2Application,\r\n        ascUser: ascUser,\r\n        action: action,\r\n        status: status,\r\n        applicationStage: \"s2\",\r\n      },\r\n    });\r\n  }\r\n\r\n  incompleteDisapprovedRationale(ascUser = \"\", action = \"\", status = \"\"): void {\r\n    const dialogRef = this.dialog.open(\r\n      IncompleteDisapprovedRationaleComponent,\r\n      {\r\n        width: \"40%\",\r\n        height: \"65%\",\r\n        data: {\r\n          s2Application: this.s2Application,\r\n          ascUser: ascUser,\r\n          action: action,\r\n          status: status,\r\n          applicationStage: \"s2\",\r\n        },\r\n      }\r\n    );\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      console.log(\"The dialog was closed\", result);\r\n      if (result) {\r\n        this.getRationaleList();\r\n      }\r\n    });\r\n  }\r\n\r\n  getApplicationSingleMedia() {\r\n    this.spinner.show();\r\n    this.apiService\r\n      .findByParam(\r\n        ENDPOINTS.applicationSingleMedia,\r\n        `app-form-reference/${this.s2Application.applicationForm.appFormReference}`\r\n      )\r\n      .subscribe(\r\n        (res: any) => {\r\n          if (res.responseData.data.length > 0) {\r\n            this.applicationSingleMedia = res.responseData.data[0];\r\n          } else {\r\n            this.applicationSingleMedia = new ApplicationSingleMedia();\r\n          }\r\n          this.hideSpinner();\r\n        },\r\n        (err: any) => {\r\n          this.applicationSingleMedia = new ApplicationSingleMedia();\r\n          this.hideSpinner();\r\n        }\r\n      );\r\n  }\r\n\r\n  getAttachmentDocuments() {\r\n    console.log(\r\n      \"apForm\",\r\n      this.s2Application.applicationForm,\r\n      ENDPOINTS.attachmentDocumentByAppFormReference +\r\n        this.s2Application.applicationForm.appFormReference\r\n    );\r\n    this.apiService\r\n      .findAll(\r\n        ENDPOINTS.attachmentDocumentByAppFormReference +\r\n          this.s2Application.applicationForm.appFormReference\r\n      )\r\n      .subscribe((res: any) => {\r\n        this.attachmentDocuments = res.responseData.data;\r\n\r\n        this.originalAttachmentDocuments = this.attachmentDocuments.originalAttachmentDocuments;\r\n        this.revisionAttachmentDocuments = this.attachmentDocuments.revisionAttachmentDocuments;\r\n        this.complianceAttachmentDocuments = this.attachmentDocuments.complianceAttachmentDocuments;\r\n\r\n        console.log(this.originalAttachmentDocuments);\r\n\r\n        if (\r\n          this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT &&\r\n          this.s1Application.externalStatus === APPLICATION_STATUS.SAVED\r\n        ) {\r\n          this.materialInformation.originalAttachmentDocuments = this.attachmentDocuments.originalAttachmentDocuments;\r\n          this.materialInformation.revisionAttachmentDocuments = this.attachmentDocuments.revisionAttachmentDocuments;\r\n          this.materialInformation.complianceAttachmentDocuments = this.attachmentDocuments.complianceAttachmentDocuments;\r\n        }\r\n        console.log(\"view S2 attachmentDocuments: \", this.attachmentDocuments);\r\n        this.s2OriginalAttachmentObservable.next({\r\n          type: \"document\",\r\n          value: this.originalAttachmentDocuments,\r\n        });\r\n        this.s2OriginalAttachmentObservable.next({\r\n          type: \"application\",\r\n          value: this.s2Application,\r\n        });\r\n      });\r\n  }\r\n\r\n  getSupportiveDocuments() {\r\n    this.spinner.show();\r\n    this.apiService\r\n      .findByParam(\r\n        ENDPOINTS.supportiveDocument,\r\n        `application-form-id/${this.s2Application.applicationForm.id}`\r\n      )\r\n      .subscribe(\r\n        (res: any) => {\r\n          console.log(\"getSupportiveDocuments() \", res);\r\n          if (res.responseData.data.length > 0) {\r\n            this.supportiveDocumentList = res.responseData.data;\r\n          }\r\n          this.hideSpinner();\r\n        },\r\n        (err: any) => {\r\n          this.hideSpinner();\r\n          this.supportiveDocumentList = [];\r\n        }\r\n      );\r\n  }\r\n\r\n  getMultimediaStatic() {\r\n    this.apiService\r\n      .findByParam(\r\n        ENDPOINTS.applicationMultimedia,\r\n        `app-form-reference/${this.s2Application.applicationForm.appFormReference}`\r\n      )\r\n      .subscribe(\r\n        (res: any) => {\r\n          if (res.responseData.data.length > 0) {\r\n            this.multimediaStaticList = res.responseData.data;\r\n\r\n            if (\r\n              this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT &&\r\n              this.s2Application.applicationForm.externalStatus ===\r\n                APPLICATION_STATUS.SAVED\r\n            ) {\r\n              this.materialInformation.selectedMultimediaList = this.multimediaStaticList;\r\n            }\r\n\r\n            this.selectedMultimediaList = this.multimediaStaticList;\r\n          } else {\r\n            this.multimediaStaticList = [];\r\n          }\r\n        },\r\n        (err: any) => {\r\n          // this.multimediaStaticList = [];\r\n        }\r\n      );\r\n  }\r\n\r\n  getMultimediaMoving() {\r\n    this.apiService\r\n      .findByParam(\r\n        ENDPOINTS.applicationMultimedia,\r\n        `app-form-reference/${this.s2Application.applicationForm.appFormReference}`\r\n      )\r\n      .subscribe(\r\n        (res: any) => {\r\n          if (res.responseData.data.length > 0) {\r\n            this.multimediaMovingList = res.responseData.data;\r\n\r\n            if (\r\n              this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT &&\r\n              this.s2Application.applicationForm.externalStatus ===\r\n                APPLICATION_STATUS.SAVED\r\n            ) {\r\n              this.materialInformation.selectedMultimediaList = this.multimediaMovingList;\r\n            }\r\n            this.selectedMultimediaList = this.multimediaMovingList;\r\n          } else {\r\n            this.multimediaMovingList = [];\r\n          }\r\n        },\r\n        (err: any) => {\r\n          this.multimediaMovingList = [];\r\n        }\r\n      );\r\n  }\r\n\r\n  setDecisionStatus(i) {\r\n    this.decisionStatus = i;\r\n    // if (e === APPLICATION_STATUS_S2.DISAPPROVED) {\r\n    //   this.incompleteDisapprovedRationale('ad-specialist', 'disapproved', 'S2 APPLICATION DISAPPROVED');\r\n    // }else if(e === APPLICATION_STATUS_S2.INCOMPLETE) {\r\n    //   this.incompleteDisapprovedRationale('ad-specialist', 'incomplete', 'INCOMPLETE');\r\n    // }\r\n\r\n    if (\r\n      (i === APP_DECISION_STATUS.INCOMPLETE ||\r\n        i === APP_DECISION_STATUS.DISAPPROVED) &&\r\n      this.currentUserRole === USER_ROLES.ROLE_AD_SPECIALIST\r\n    ) {\r\n      if (\r\n        this.s2Application.internalStatus ===\r\n          \"RE_SUBMITTED_S2_APPLICATION_VERIFIED_BY_ENCODER\" &&\r\n        this.s2Application.decisionStatus === APP_DECISION_STATUS.INCOMPLETE\r\n      ) {\r\n        this.s2Application.validityDate = null;\r\n        // this.s2Application.decisionStatus = i;\r\n        this.incompleteDisapprovedRationale();\r\n      }\r\n    }\r\n  }\r\n\r\n  getAffiliationList() {\r\n    this.spinner.show();\r\n    this.apiService.findAll(ENDPOINTS.activeMembersAffiliation).subscribe(\r\n      (res: any) => {\r\n        this.affiliationList = res.responseData.data;\r\n        this.hideSpinner();\r\n      },\r\n      (err: any) => {\r\n        this.hideSpinner();\r\n      }\r\n    );\r\n  }\r\n\r\n  getCompanyList() {\r\n    this.spinner.show();\r\n    this.apiService.findAll(ENDPOINTS.activeCompanies).subscribe(\r\n      (res: any) => {\r\n        this.companyList = res.responseData.data;\r\n        this.hideSpinner();\r\n      },\r\n      (err: any) => {\r\n        this.hideSpinner();\r\n      }\r\n    );\r\n  }\r\n\r\n  getCompanyAddress(companyName) {\r\n    this.spinner.show();\r\n    this.showCompanyAddress = true;\r\n    this.isNewCompany = false;\r\n    this.apiService\r\n      .findByParam(\r\n        ENDPOINTS.company,\r\n        `/custom/search?companyName=` + companyName\r\n      )\r\n      .subscribe(\r\n        (res: any) => {\r\n          this.company = res.responseData.data;\r\n          this.hideSpinner();\r\n        },\r\n        (err: any) => {\r\n          this.hideSpinner();\r\n        }\r\n      );\r\n  }\r\n\r\n  clear(): void {\r\n    this.s2Application = new S2Application();\r\n    this.s1Application = new S1Application();\r\n  }\r\n\r\n  setFormValidator(): void {\r\n    this.s2ApplicationForm = this.formBuilder.group({\r\n      affiliation: [\"\", Validators.required],\r\n      validityDate: [\"\", Validators.required],\r\n      company: [\"\"],\r\n      decisionStatus: [\"\", Validators.required],\r\n    });\r\n  }\r\n\r\n  resetFormValidator(): void {\r\n    this.s2Application = new S2Application();\r\n    this.s1Application = new S1Application();\r\n    this.s2ApplicationForm.markAsUntouched();\r\n    this.s2ApplicationForm.markAsPristine();\r\n  }\r\n\r\n  showAudioVideo() {\r\n    this.isAudioVideo = !this.isAudioVideo;\r\n    this.audioVideo = this.isAudioVideo ? \"Audio\" : \"Video\";\r\n  }\r\n\r\n  selectFile(event, typeOfDocument) {\r\n    this.attachmentComponent.selectFile(event, typeOfDocument);\r\n  }\r\n\r\n  onAddFile(eventParam) {\r\n    const byteToMegaByte = 1000000; // 1 million byte = 1 mega byte\r\n\r\n    let finalMaterialType = \"\"; // temporary variable; TODO: remove\r\n    finalMaterialType = \"video\";\r\n    const maxFileSize =\r\n      finalMaterialType === \"video\"\r\n        ? 50\r\n        : finalMaterialType === \"audio\"\r\n        ? 20\r\n        : finalMaterialType === \"layout\"\r\n        ? 10\r\n        : 0;\r\n\r\n    if (eventParam.target.files) {\r\n      this.isShowUploadButton = false;\r\n      this.fileSize = eventParam.target.files[0].size;\r\n\r\n      // TODO validation of file size\r\n      if (\r\n        (this.fileSize > 50 * byteToMegaByte &&\r\n          finalMaterialType.toLowerCase() === \"video\") ||\r\n        (this.fileSize > 20 * byteToMegaByte &&\r\n          finalMaterialType.toLowerCase() === \"audio\") ||\r\n        (this.fileSize > 10 * byteToMegaByte &&\r\n          finalMaterialType.toLowerCase() === \"layout\")\r\n      ) {\r\n        this.sweetAlertService.customErrorMessage(\r\n          `Attachments total file size should not exceed ${maxFileSize}MB.`\r\n        );\r\n        eventParam.target.value = \"\";\r\n        return;\r\n      } else {\r\n        this.isShowUploadButton = true;\r\n        const fileURL = URL.createObjectURL(eventParam.target.files[0]);\r\n        this.safeURLFile = this.sanitizer.bypassSecurityTrustResourceUrl(\r\n          fileURL\r\n        );\r\n\r\n        const reader = new FileReader();\r\n        const [file] = eventParam.target.files;\r\n\r\n        reader.readAsDataURL(file);\r\n        reader.onload = () => {};\r\n\r\n        this.selectedFile = eventParam.target.files[0];\r\n      }\r\n    }\r\n  }\r\n\r\n  uploadAudioOrVideo() {\r\n    Swal.fire({\r\n      text: `Are you sure you want to upload this Final Material?`,\r\n      icon: \"question\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Confirm\",\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.spinner.show();\r\n        let params = \"\";\r\n        let appFormRef = \"\";\r\n\r\n        if (this.s2Application.appFormReference) {\r\n          appFormRef = `&appFormReference=${this.s2Application.appFormReference}`;\r\n        }\r\n\r\n        if (\r\n          this.s2Application.internalStatus ===\r\n            APPLICATION_STATUS_FOR_COMPLIANCE.INCOMPLETE ||\r\n          this.s2Application.internalStatus === \"S2_APPLICATION_REJECTED\"\r\n        ) {\r\n          this.s2Application.submissionType = SUBMISSION_TYPE.COMPLIANCE;\r\n        }\r\n\r\n        params =\r\n          \"?&attachmentType=\" +\r\n          ATTACHMENT_TYPE.FINAL_MATERIAL +\r\n          \"&submissionType=\" +\r\n          this.s2Application.submissionType +\r\n          appFormRef;\r\n        this.fileStorageService\r\n          .pushFileToStorage(\r\n            ENDPOINTS.attachmentDocument,\r\n            this.selectedFile,\r\n            params\r\n          )\r\n          .subscribe(\r\n            (res: any) => {\r\n              console.log(res);\r\n\r\n              if (\r\n                !this.s2Application.appFormReference ||\r\n                this.s2Application.appFormReference === \"\"\r\n              ) {\r\n                this.s2Application.appFormReference =\r\n                  res.responseData.data.appFormReference;\r\n              }\r\n\r\n              if (\r\n                this.s2Application.submissionType === SUBMISSION_TYPE.COMPLIANCE\r\n              ) {\r\n                this.s2Application.submissionType = SUBMISSION_TYPE.ORIGINAL;\r\n                this.tempCompliance = res.responseData.data;\r\n                this.s2Application.finalMaterialAttachmentReference = this.tempCompliance?.finalMaterialAttachmentReference;\r\n              } else {\r\n                this.uploadedFinalMaterialFile = res.responseData.data;\r\n                this.addToAttachmentDocuments(this.uploadedFinalMaterialFile);\r\n                this.s2Application.finalMaterialAttachmentReference = this.uploadedFinalMaterialFile?.finalMaterialAttachmentReference;\r\n\r\n                if (this.s2Application.finalMaterialAttachmentReference) {\r\n                  this.getS2AttachmentDocument();\r\n                }\r\n              }\r\n              this.spinner.hide();\r\n              this.sweetAlertService.customSuccessMessage(\r\n                \"Attachment successfully uploaded.\"\r\n              );\r\n              this.selectedFile = null;\r\n            },\r\n            (err: any) => {\r\n              this.spinner.hide();\r\n              this.sweetAlertService.error(err);\r\n            },\r\n            () => {\r\n              // actions after subscription\r\n              this.spinner.hide();\r\n            }\r\n          );\r\n      } else {\r\n        this.selectedFile = null;\r\n      }\r\n    });\r\n  }\r\n\r\n  deleteUploadedFile2(obj) {\r\n    Swal.fire({\r\n      text: \"Are you sure you want to delete this document permanently?\",\r\n      icon: \"question\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Confirm\",\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.spinner.show();\r\n        this.tempCompliance = null;\r\n        this.isShowUploadButton = false;\r\n        this.safeURLFile = null;\r\n        this.apiService\r\n          .save(ENDPOINTS.attachmentDocument + `/id/${obj.id}`, null)\r\n          .subscribe(\r\n            (res) => {\r\n              this.spinner.hide();\r\n              if (\r\n                obj.submissionType === SUBMISSION_TYPE.COMPLIANCE ||\r\n                obj.decisionStatus === APP_DECISION_STATUS.INCOMPLETE\r\n              ) {\r\n                this.s2ComplianceAttachmentDocuments = this.s2ComplianceAttachmentDocuments.filter(\r\n                  (data) => data?.id !== obj.id\r\n                );\r\n                this.myFinalMaterialFileInputC.nativeElement.value = \"\";\r\n                this.myFinalMaterialFileC.nativeElement.value = \"\";\r\n                this.tempCompliance = null;\r\n              } else {\r\n                this.s2OriginalAttachmentDocuments = this.s2OriginalAttachmentDocuments.filter(\r\n                  (data) => data?.id !== obj.id\r\n                );\r\n                this.myFinalMaterialFileInput.nativeElement.value = \"\";\r\n                this.myFinalMaterialFile.nativeElement.value = \"\";\r\n                console.log(\r\n                  \"s2 orig => \",\r\n                  this.s2ComplianceAttachmentDocuments\r\n                );\r\n              }\r\n              console.log(\"Attachment successfully deleted.\");\r\n\r\n              this.s2Application.finalMaterialAttachmentReference = null;\r\n              this.isShowUploadButton = false;\r\n              this.selectedFile = null;\r\n            },\r\n            (err: any) => {\r\n              this.spinner.hide();\r\n              this.sweetAlertService.error(err);\r\n            }\r\n          );\r\n      }\r\n    });\r\n  }\r\n\r\n  deleteUploadedFile() {\r\n    if (\r\n      this.s2Application.internalStatus === APPLICATION_STATUS.INCOMPLETE ||\r\n      this.s2Application.internalStatus === \"S2_APPLICATION_REJECTED\"\r\n    ) {\r\n      this.tempCompliance = null;\r\n      this.myFinalMaterialFileInputC.nativeElement.value = \"\";\r\n      this.myFinalMaterialFileC.nativeElement.value = \"\";\r\n    } else {\r\n      this.s2OriginalAttachmentDocuments[0] = null;\r\n      this.myFinalMaterialFileInput.nativeElement.value = \"\";\r\n      this.myFinalMaterialFile.nativeElement.value = \"\";\r\n    }\r\n    this.s2Application.finalMaterialAttachmentReference = null;\r\n    this.isShowUploadButton = false;\r\n    this.selectedFile = null;\r\n  }\r\n\r\n  addToAttachmentDocuments(obj: any) {\r\n    if (obj) {\r\n      this.attachmentDocument.finalMaterialAttachmentReference =\r\n        obj.finalMaterialAttachmentReference;\r\n      this.attachmentDocument.id = obj.id;\r\n      this.attachmentDocument.originalFilename = obj.originalFilename;\r\n      this.attachmentDocument.filename = obj.filename;\r\n      this.attachmentDocument.fileExtension = obj.fileExtension;\r\n      this.attachmentDocument.fileURL = obj.fileURL;\r\n      this.attachmentDocument.attachmentType = obj.attachmentType;\r\n      this.attachmentDocument.documentFormat = obj.documentFormat;\r\n      this.attachmentDocument.createdBy = this.currentUser.username;\r\n      this.attachmentDocument.createdDate = this.todayDate;\r\n\r\n      // if (this.s2Application.submissionType === SUBMISSION_TYPE.COMPLIANCE) {\r\n      //   this.tempCompliance = res.responseData.data;\r\n      //   this.addToAttachmentDocuments(this.tempCompliance);\r\n      // } else {\r\n      // }\r\n    } else {\r\n      this.spinner.hide();\r\n      console.log(\"Null attachment.\");\r\n      this.myFinalMaterialFile.nativeElement.value = \"\";\r\n      this.sweetAlertService.customErrorMessage(\r\n        \"Attachment cannot be uploaded.\"\r\n      );\r\n    }\r\n  }\r\n\r\n  getS2AttachmentDocument() {\r\n    this.spinner.show();\r\n    // TODO: Fetch list of existing compliance attachments\r\n    console.log(\r\n      ENDPOINTS.attachmentDocumentByS2AppFormReference +\r\n        this.s2Application.appFormReference\r\n    );\r\n    this.apiService\r\n      .findAll(\r\n        ENDPOINTS.attachmentDocumentByS2AppFormReference +\r\n          this.s2Application.appFormReference\r\n      )\r\n      .subscribe(\r\n        (res: any) => {\r\n          if (res.responseData.data) {\r\n            console.log(\r\n              \"S2 attachments: \",\r\n              res.responseData.data.originalAttachmentDocuments\r\n            );\r\n\r\n            this.attachmentDocuments = res.responseData.data;\r\n            this.s2OriginalAttachmentDocuments =\r\n              res.responseData.data.originalAttachmentDocuments;\r\n            // this.s2OriginalAttachmentObservable.next(this.s2OriginalAttachmentDocuments);\r\n            this.s2ComplianceAttachmentDocuments =\r\n              res.responseData.data.complianceAttachmentDocuments;\r\n            this.s2ComplianceAttachmentDocuments = this.s2ComplianceAttachmentDocuments?.filter(\r\n              (data) => data?.status !== \"UNPROCESSED\"\r\n            );\r\n            console.log(\"s2 Original => \", this.attachmentDocuments);\r\n            if (this.attachmentDocument.filename) {\r\n              this.isAudioVideo = this.attachmentDocument.documentFormat.includes(\r\n                \"audio\"\r\n              )\r\n                ? false\r\n                : true;\r\n            }\r\n          }\r\n          this.hideSpinner();\r\n        },\r\n        (err: any) => {\r\n          this.hideSpinner();\r\n          console.error(err);\r\n        }\r\n      );\r\n  }\r\n\r\n  viewFinalMedia(obj) {\r\n    window.open(obj.fileURL);\r\n  }\r\n\r\n  hideSpinner() {\r\n    setTimeout(() => {\r\n      this.spinner.hide();\r\n    }, 1);\r\n  }\r\n\r\n  navigateToS2List() {\r\n    setTimeout(() => {\r\n      this.router.navigateByUrl(\"asc/page/application/s2/lists\");\r\n    }, 2000);\r\n  }\r\n\r\n  getRationaleList(): void {\r\n    // Rationale Object\r\n    this.apiService\r\n      .findByParam(\r\n        ENDPOINTS.applicationRationaleS2,\r\n        `application-form-id/${this.s2Application.id}`\r\n      )\r\n      .subscribe((res: any) => {\r\n        this.rationaleOthersList = res.responseData.data;\r\n        this.rationaleOthersList = this.rationaleOthersList.filter(\r\n          (data) => data.others !== \"\"\r\n        );\r\n        console.log(\"RATIONALE LIST\", this.rationaleOthersList);\r\n      });\r\n    this.apiService\r\n      .findByParam(\r\n        ENDPOINTS.rationaleListS2,\r\n        `application-s2/${this.s2Application.id}`\r\n      )\r\n      .subscribe((res: any) => {\r\n        this.rationaleLists = res;\r\n        console.log(\"APPLICATION RATIONALE\", this.rationaleLists);\r\n      });\r\n  }\r\n\r\n  viewReport(id, filename) {\r\n    this.report.filename = filename;\r\n    this.report.format = \"pdf\";\r\n    (this.report.module = \"Form\"),\r\n      (this.report.params = { applicationFormS2Id: id });\r\n    console.log(this.report);\r\n    this.spinner.show();\r\n    this.apiService\r\n      .printReport(ENDPOINTS.generateReports, this.report)\r\n      .subscribe(\r\n        (data: any) => {\r\n          const newBlob = new Blob([data], { type: \"application/pdf\" });\r\n          const downloadURL = URL.createObjectURL(newBlob);\r\n          this.spinner.hide();\r\n          window.open(downloadURL);\r\n        },\r\n        (err: any) => {\r\n          this.spinner.hide();\r\n        }\r\n      );\r\n  }\r\n\r\n  submitAppeal() {\r\n    let endpoint;\r\n    if (this.isAdmin) {\r\n      endpoint = ENDPOINTS.admin + `/s2/verify/appeal`;\r\n    } else if (this.isAdSpecialist) {\r\n      endpoint = ENDPOINTS.s2ApplicationFormAdSpe + `verify/appeal`;\r\n    }\r\n\r\n    this.spinner.show();\r\n    this.apiService.save(endpoint, this.s2Application).subscribe(\r\n      (res: any) => {\r\n        this.spinner.hide();\r\n        this.sweetAlertService.success(res);\r\n        console.log(\"submitAppeal : \", res.responseData.data);\r\n        this.navigateToS2List();\r\n      },\r\n      (err: any) => {\r\n        this.spinner.hide();\r\n      }\r\n    );\r\n  }\r\n\r\n  sendDecisionOrStampMaterialManual(): void {\r\n    Swal.fire({\r\n      text: \"Are you sure you want to send this application form?\",\r\n      icon: \"question\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Confirm\",\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.apiService\r\n          .save(\r\n            ENDPOINTS.s2ManualRelease + `/${this.s2Application.id}`,\r\n            this.s2Application\r\n          )\r\n          .subscribe((res: any) => {\r\n            this.sweetAlertService.customSuccessMessage(res.message);\r\n          });\r\n      }\r\n    });\r\n  }\r\n}\r\n","<form>\r\n  <div class=\"container-fluid\">\r\n    <!-- <div class=\"spinner\">\r\n      <ngx-spinner bdColor=\"rgba(0, 0, 0, 0.8)\" size=\"large\" color=\"#fff\" type=\"line-spin-fade\" [fullScreen]=\"false\">\r\n        <p> {{spinnerMessage}} </p>\r\n      </ngx-spinner>\r\n    </div> -->\r\n    <!-- <div class=\"row\">\r\n      <div class=\"col-md-12 title\">\r\n        <mat-label>\r\n          <mat-icon>list_alt</mat-icon> S2 APPLICATION\r\n        </mat-label>\r\n      </div>\r\n    </div> -->\r\n    <table>\r\n      <tr>\r\n        <td class=\"details-title\">Reference Code:</td>\r\n        <td class=\"details\">\r\n          <span>{{\r\n            s2Application?.externalStatus == \"S2_APPLICATION_REJECTED\"\r\n              ? s2Application?.referenceCodeRejected\r\n              : (s2Application?.applicationForm?.referenceCode | uppercase)\r\n          }}</span>\r\n        </td>\r\n        <td>\r\n          <div class=\"action-buttons\">\r\n            <button mat-button class=\"button-red\" (click)=\"accordion.openAll()\">\r\n              <mat-icon>open_in_full</mat-icon>\r\n            </button>\r\n            &nbsp;\r\n            <button\r\n              mat-button\r\n              class=\"button-red\"\r\n              (click)=\"accordion.closeAll()\"\r\n            >\r\n              <mat-icon>close_fullscreen</mat-icon>\r\n            </button>\r\n          </div>\r\n          <button\r\n            class=\"button-right button-red\"\r\n            mat-raised-button\r\n            [routerLink]=\"['/asc/page/application/s2/lists']\"\r\n          >\r\n            <mat-icon>list</mat-icon> VIEW APPLICATIONS\r\n          </button>\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <td class=\"details-title\">Status:</td>\r\n        <td class=\"details\">\r\n          <span>{{\r\n            s2Application?.externalStatus?.replaceAll(\"_\", \" \") | uppercase\r\n          }}</span>\r\n        </td>\r\n        <!-- <td class=\"action-buttons\" *ngIf=\"s2Application?.internalStatus=='APPROVED' || s2Application?.internalStatus=='RE_SUBMITTED_S2_APPLICATION_VERIFIED_BY_AD_SPE' || s2Application?.internalStatus=='FOR_CLEARANCE_S2_APPLICATION' ||\r\n        s2Application?.internalStatus=='FOR_CLEARANCE_S2_APPLICATION_VERIFIED_BY_ENCODER'\"><span\r\n            class=\"badge bg-warning text-dark\">\r\n            <i class=\"material-icons\">domain_verification</i> APPLICATION FOR TOA/CLEARANCE</span></td> -->\r\n        <td\r\n          class=\"action-buttons\"\r\n          *ngIf=\"\r\n            s2Application?.amount &&\r\n            s2Application?.submissionType === 'ORIGINAL'\r\n          \"\r\n        >\r\n          <span class=\"badge bg-warning text-dark\">\r\n            <i class=\"material-icons\">paid</i>\r\n            {{ s2Application?.paymentStatus?.replaceAll(\"_\", \" \") }} : ₱\r\n            {{ s2Application?.amount }}\r\n          </span>\r\n        </td>\r\n        <td class=\"action-buttons\" *ngIf=\"s2Application?.specialClearing\">\r\n          <span class=\"badge bg-warning text-dark\">\r\n            <i class=\"material-icons\">domain_verification</i> SPECIAL\r\n            CLEARING</span\r\n          >\r\n        </td>\r\n        <td class=\"action-buttons\" *ngIf=\"s2Application?.hasToa\">\r\n          <span class=\"badge bg-warning text-dark\">\r\n            <i class=\"material-icons\">domain_verification</i> Apply for\r\n            TOA</span\r\n          >\r\n        </td>\r\n        <td\r\n          class=\"action-buttons\"\r\n          *ngIf=\"s2Application?.decisionStatus === 'APPROVED'\"\r\n        >\r\n          <span class=\"badge bg-warning text-dark\">\r\n            <i class=\"material-icons\">check</i> Valid Until:\r\n            {{ s2Application?.validityDate | date: \"MM/dd/yyyy\" }}</span\r\n          >\r\n        </td>\r\n      </tr>\r\n    </table>\r\n    <hr />\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12\">\r\n        <button\r\n          mat-raised-button\r\n          class=\"button-right button-red\"\r\n          *ngIf=\"\r\n            (isAdmin || isSuperAdmin || isAdSpecialist) &&\r\n            s2Application?.internalStatus === 'APPROVED'\r\n          \"\r\n          (click)=\"viewReport(s2Application.id, 'S2_Clearance')\"\r\n        >\r\n          <i class=\"material-icons color__white\">open_in_new</i> CLEARANCE\r\n        </button>\r\n\r\n        <button\r\n          mat-raised-button\r\n          class=\"button-right button-red\"\r\n          *ngIf=\"\r\n            (isAdmin || isSuperAdmin || isAdSpecialist) &&\r\n            s2Application?.internalStatus ===\r\n              'RE_SUBMITTED_S2_APPLICATION_VERIFIED_BY_ENCODER'\r\n          \"\r\n          (click)=\"viewReport(s2Application.id, 'S2_Clearance')\"\r\n        >\r\n          <i class=\"material-icons color__white\">open_in_new</i> PENDING FORM\r\n        </button>\r\n\r\n        <button\r\n          mat-raised-button\r\n          class=\"button-right button-red\"\r\n          *ngIf=\"\r\n            (currentUser?.userRole.name === 'ROLE_SUPER_ADMIN' ||\r\n              currentUser?.userRole.name === 'ROLE_ADMIN') &&\r\n            (s2Application?.releaseStatus === 'FOR_RELEASE' ||\r\n              s2Application?.releaseStatus === 'RELEASED')\r\n          \"\r\n          (click)=\"sendDecisionOrStampMaterialManual()\"\r\n        >\r\n          <i class=\"material-icons color__white\">send</i> SEND CLEARANCE OR TOA\r\n        </button>\r\n      </div>\r\n    </div>\r\n    <form>\r\n      <mat-accordion class=\"headers-align\" multi>\r\n        <mat-expansion-panel>\r\n          <mat-expansion-panel-header>\r\n            <mat-panel-title>\r\n              <mat-icon>label_important</mat-icon> &nbsp;Client Information\r\n            </mat-panel-title>\r\n            <mat-panel-description>\r\n              Affiliation and Company details\r\n              <mat-icon>perm_contact_calendar</mat-icon>\r\n            </mat-panel-description>\r\n          </mat-expansion-panel-header>\r\n          <br />\r\n\r\n          <app-client-information [s2Application]=\"s2Application\">\r\n          </app-client-information>\r\n        </mat-expansion-panel>\r\n\r\n        <mat-expansion-panel>\r\n          <mat-expansion-panel-header>\r\n            <mat-panel-title>\r\n              <mat-icon>label_important</mat-icon> &nbsp;Material Information\r\n            </mat-panel-title>\r\n            <mat-panel-description>\r\n              Ads Details\r\n              <mat-icon>ads_click</mat-icon>\r\n            </mat-panel-description>\r\n          </mat-expansion-panel-header>\r\n          <br />\r\n          <app-material-information\r\n            [s1Application]=\"s1Application\"\r\n            [s2Application]=\"s2Application\"\r\n            [originalAttachmentDocuments]=\"originalAttachmentDocuments\"\r\n            [revisionAttachmentDocuments]=\"revisionAttachmentDocuments\"\r\n            [complianceAttachmentDocuments]=\"complianceAttachmentDocuments\"\r\n            [selectedMultimediaList]=\"selectedMultimediaList\"\r\n            [applicationSingleMedia]=\"applicationSingleMedia\"\r\n          >\r\n          </app-material-information>\r\n        </mat-expansion-panel>\r\n\r\n        <!-- PREVIEW -->\r\n        <mat-expansion-panel [expanded]=\"true\">\r\n          <mat-expansion-panel-header>\r\n            <mat-panel-title>\r\n              <mat-icon>label_important</mat-icon> &nbsp;Final Material\r\n            </mat-panel-title>\r\n            <mat-panel-description>\r\n              Audio, Video, or Layout\r\n              <mat-icon>upload</mat-icon>\r\n            </mat-panel-description>\r\n          </mat-expansion-panel-header>\r\n          <br />\r\n\r\n          <div class=\"row\">\r\n            <div class=\"col-md-12\" appearance=\"outline\">\r\n              <div class=\"row fields\">\r\n                <h4>\r\n                  <i class=\"material-icons\">upload</i> &nbsp;Final Material\r\n                </h4>\r\n                <br />\r\n\r\n                <!-- FOR COMPLIANCE -->\r\n                <div\r\n                  *ngIf=\"\r\n                    s2Application?.internalStatus === 'INCOMPLETE' ||\r\n                    s2Application?.internalStatus === 'S2_APPLICATION_REJECTED'\r\n                  \"\r\n                >\r\n                  <div class=\"col-md-12\" appearance=\"outline\">\r\n                    <b>FOR COMPLIANCE</b><br />\r\n                    <mat-label *ngIf=\"tempCompliance?.originalFilename\"\r\n                      >Filename:\r\n                    </mat-label>\r\n\r\n                    <input\r\n                      #finalMaterialFileInputC\r\n                      matInput\r\n                      [value]=\"tempCompliance?.originalFilename\"\r\n                      *ngIf=\"tempCompliance?.originalFilename\"\r\n                      disabled\r\n                    />\r\n\r\n                    <input\r\n                      #finalMaterialFileC\r\n                      class=\"file-upload\"\r\n                      *ngIf=\"\r\n                        isApplicant &&\r\n                        (s2Application?.decisionStatus === 'INCOMPLETE' ||\r\n                          s2Application?.internalStatus ===\r\n                            'S2_APPLICATION_REJECTED')\r\n                      \"\r\n                      type=\"file\"\r\n                      accept=\"video/mp4, audio/mp3, image/jpg, image/jpeg, application/pdf, image/gif, image/pdf, image/png\"\r\n                      (change)=\"onAddFile($event)\"\r\n                      [hidden]=\"\r\n                        tempCompliance?.finalMaterialAttachmentReference\r\n                      \"\r\n                    />\r\n                  </div>\r\n                  <div class=\"col-md-12\"><br /></div>\r\n                  <div class=\"col-md-12\" appearance=\"outline\">\r\n                    <button\r\n                      mat-raised-button\r\n                      *ngIf=\"tempCompliance?.finalMaterialAttachmentReference\"\r\n                      class=\"button-red button-right\"\r\n                      (click)=\"viewFinalMedia(tempCompliance)\"\r\n                    >\r\n                      <i class=\"material-icons color__white\">open_in_new</i>\r\n                      VIEW MATERIAL\r\n                    </button>\r\n                    &nbsp; &nbsp;\r\n                    <button\r\n                      mat-raised-button\r\n                      class=\"button-red button-right\"\r\n                      (click)=\"deleteUploadedFile2(tempCompliance)\"\r\n                      *ngIf=\"\r\n                        isApplicant &&\r\n                        (s2Application?.internalStatus === 'INCOMPLETE' ||\r\n                          s2Application?.internalStatus ===\r\n                            'S2_APPLICATION_REJECTED') &&\r\n                        tempCompliance?.finalMaterialAttachmentReference\r\n                      \"\r\n                    >\r\n                      <i class=\"material-icons color__white\">delete</i> DELETE\r\n                      ATTACHMENT\r\n                    </button>\r\n                    &nbsp; &nbsp;\r\n                    <button\r\n                      mat-raised-button\r\n                      class=\"button-red button-right\"\r\n                      (click)=\"uploadAudioOrVideo()\"\r\n                      *ngIf=\"isApplicant && safeURLFile\"\r\n                      [hidden]=\"\r\n                        tempCompliance?.finalMaterialAttachmentReference\r\n                      \"\r\n                    >\r\n                      <i class=\"material-icons color__white\">upload</i> UPLOAD\r\n                    </button>\r\n                  </div>\r\n                  <div class=\"row\"><br /><br /></div>\r\n                  <div class=\"row\"><hr /></div>\r\n                </div>\r\n                <!-- END OF FOR COMPLIANCE -->\r\n\r\n                <!-- FOR ORIGINAL ONLY -->\r\n                <div class=\"col-md-12\" appearance=\"outline\">\r\n                  <!-- <b>{{s2OriginalAttachmentDocuments[0]?.submissionType | uppercase}}</b><br> -->\r\n                  <mat-label\r\n                    *ngIf=\"s2OriginalAttachmentDocuments[0]?.originalFilename\"\r\n                    >Filename:\r\n                  </mat-label>\r\n                  <input\r\n                    #finalMaterialFileInput\r\n                    matInput\r\n                    [value]=\"s2OriginalAttachmentDocuments[0]?.originalFilename\"\r\n                    *ngIf=\"s2OriginalAttachmentDocuments[0]?.originalFilename\"\r\n                    disabled\r\n                  />\r\n\r\n                  <input\r\n                    #finalMaterialFile\r\n                    class=\"file-upload\"\r\n                    *ngIf=\"\r\n                      isApplicant &&\r\n                      (s2Application?.internalStatus === 'SAVED' ||\r\n                        s2Application?.internalStatus === 'INCOMPLETE' ||\r\n                        s2Application?.internalStatus ===\r\n                          'S2_APPLICATION_REJECTED')\r\n                    \"\r\n                    type=\"file\"\r\n                    accept=\"video/mp4, audio/mp3, image/jpg, image/jpeg, application/pdf, image/gif\"\r\n                    (change)=\"onAddFile($event)\"\r\n                    [hidden]=\"\r\n                      s2Application?.decisionStatus === 'INCOMPLETE' ||\r\n                      s2Application?.finalMaterialAttachmentReference\r\n                    \"\r\n                  />\r\n                </div>\r\n                <div class=\"col-md-12\"><br /></div>\r\n                <div\r\n                  class=\"col-md-12\"\r\n                  appearance=\"outline\"\r\n                  *ngIf=\"\r\n                    isShowUploadButton ||\r\n                    s2Application?.decisionStatus === 'INCOMPLETE'\r\n                  \"\r\n                >\r\n                  <button\r\n                    mat-raised-button\r\n                    *ngIf=\"\r\n                      s2Application?.finalMaterialAttachmentReference ||\r\n                      s2Application?.internalStatus === 'INCOMPLETE' ||\r\n                      s2Application?.internalStatus ===\r\n                        'S2_APPLICATION_REJECTED'\r\n                    \"\r\n                    class=\"button-red button-right\"\r\n                    (click)=\"viewFinalMedia(s2OriginalAttachmentDocuments[0])\"\r\n                  >\r\n                    <i class=\"material-icons color__white\">open_in_new</i> VIEW\r\n                    MATERIAL\r\n                  </button>\r\n                  &nbsp; &nbsp;\r\n                  <button\r\n                    mat-raised-button\r\n                    class=\"button-red button-right\"\r\n                    (click)=\"\r\n                      deleteUploadedFile2(s2OriginalAttachmentDocuments[0])\r\n                    \"\r\n                    *ngIf=\"\r\n                      isApplicant &&\r\n                      (s2Application?.internalStatus === 'SAVED' ||\r\n                        s2Application?.internalStatus === 'INCOMPLETE' ||\r\n                        s2Application?.internalStatus ===\r\n                          'S2_APPLICATION_REJECTED') &&\r\n                      s2Application?.finalMaterialAttachmentReference\r\n                    \"\r\n                    [hidden]=\"s2Application?.decisionStatus === 'INCOMPLETE'\"\r\n                  >\r\n                    <i class=\"material-icons color__white\">delete</i> DELETE\r\n                    ATTACHMENT\r\n                  </button>\r\n                  &nbsp; &nbsp;\r\n                  <button\r\n                    mat-raised-button\r\n                    class=\"button-red button-right\"\r\n                    (click)=\"uploadAudioOrVideo()\"\r\n                    *ngIf=\"\r\n                      isApplicant &&\r\n                      (s2Application?.internalStatus === 'SAVED' ||\r\n                        s2Application?.internalStatus === 'INCOMPLETE' ||\r\n                        s2Application?.internalStatus ===\r\n                          'S2_APPLICATION_REJECTED') &&\r\n                      !s2Application?.finalMaterialAttachmentReference\r\n                    \"\r\n                  >\r\n                    <i class=\"material-icons color__white\">upload</i> UPLOAD\r\n                  </button>\r\n                </div>\r\n                <!-- END OF ORIGINAL ONLY -->\r\n\r\n                <div class=\"col-md-12\"><br /></div>\r\n\r\n                <!---------- EXISTING COMPLIANCE ---------->\r\n                <div *ngIf=\"s2Application?.decisionStatus === 'INCOMPLETE'\">\r\n                  <div class=\"row\"><hr /></div>\r\n                  <h4>\r\n                    <i class=\"material-icons\">bookmark</i> &nbsp;ATTACHMENTS FOR\r\n                    COMPLIANCE\r\n                  </h4>\r\n                  <br />\r\n                  <div\r\n                    class=\"row\"\r\n                    *ngFor=\"\r\n                      let i of s2ComplianceAttachmentDocuments;\r\n                      let index = index\r\n                    \"\r\n                  >\r\n                    <div *ngIf=\"i !== null\">\r\n                      <div class=\"col-md-12\" appearance=\"outline\">\r\n                        <mat-label *ngIf=\"i?.originalFilename\"\r\n                          >Filename:\r\n                        </mat-label>\r\n                        <input\r\n                          #mainInput\r\n                          matInput\r\n                          [value]=\"i?.originalFilename\"\r\n                          disabled\r\n                          *ngIf=\"i?.originalFilename\"\r\n                        /><br />\r\n                      </div>\r\n\r\n                      <div class=\"row\"><br /></div>\r\n                      <div class=\"col-md-12\" appearance=\"outline\">\r\n                        <button\r\n                          mat-raised-button\r\n                          class=\"button-red button-right\"\r\n                          (click)=\"viewFinalMedia(i)\"\r\n                        >\r\n                          <i class=\"material-icons add-document\">open_in_new</i>\r\n                          VIEW DOCUMENT\r\n                        </button>\r\n                        &nbsp; &nbsp;\r\n                        <button\r\n                          mat-raised-button\r\n                          class=\"button-red button-right\"\r\n                          (click)=\"deleteUploadedFile2(i)\"\r\n                          *ngIf=\"i?.status === 'UNPROCESSED'\"\r\n                        >\r\n                          <i class=\"material-icons add-document\">delete</i>\r\n                          DELETE ATTACHMENT\r\n                        </button>\r\n                        &nbsp; &nbsp;\r\n                      </div>\r\n                      <div class=\"col-md-12\"><br /></div>\r\n                      <div class=\"col-md-12\">\r\n                        <hr />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div\r\n                    class=\"no-record\"\r\n                    *ngIf=\"\r\n                      (s2ComplianceAttachmentDocuments?.length === 0 &&\r\n                        s2ComplianceAttachmentDocuments[0]?.originalFilename ===\r\n                          undefined) ||\r\n                      s2ComplianceAttachmentDocuments?.length === null\r\n                    \"\r\n                  >\r\n                    No existing attachments for compliance.\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <!-- /////////////////////////////// -->\r\n\r\n              <!-- FOR AD SPE - S2 APP -->\r\n              <!-- <mat-form-field class=\"col-md-6\" appearance=\"outline\">\r\n                <mat-label>Valid Until</mat-label>\r\n                <input type=\"tel\" matInput placeholder=\"Search\">\r\n                <mat-icon matSuffix>calendar_today</mat-icon>\r\n              </mat-form-field> -->\r\n            </div>\r\n          </div>\r\n        </mat-expansion-panel>\r\n\r\n        <!--\r\n\r\n          SUPPORT DOCUMENT\r\n          -->\r\n        <mat-expansion-panel [expanded]=\"true\">\r\n          <mat-expansion-panel-header>\r\n            <mat-panel-title>\r\n              <mat-icon>label_important</mat-icon> &nbsp;Support Document\r\n            </mat-panel-title>\r\n            <mat-panel-description>\r\n              PDF\r\n              <mat-icon>upload</mat-icon>\r\n            </mat-panel-description>\r\n          </mat-expansion-panel-header>\r\n          <br />\r\n          <app-attachment-document\r\n            [s1Application]=\"s1Application\"\r\n            [labelMainDocument]=\"'Support Document'\"\r\n            [isAscUser]=\"isAscUser\"\r\n            [s2Appplication]=\"s2Application\"\r\n            [complianceAttachmentDocuments]=\"complianceAttachmentDocuments\"\r\n            [s2SupportAttchmentDocuments]=\"s2OriginalAttachmentDocuments\"\r\n            [s2DocObservable]=\"s2OriginalAttachmentObservable\"\r\n            [applicationStage]=\"applicationStage\"\r\n            [S2SupportDoc]=\"true\"\r\n          ></app-attachment-document>\r\n\r\n          <!-- \r\n    \r\n                        START UPLOAD SUPPORTING\r\n    \r\n    \r\n                       -->\r\n        </mat-expansion-panel>\r\n        <!-- END SUPPORT -->\r\n\r\n        <app-comment\r\n          *ngIf=\"!isApplicant\"\r\n          [commentS2Application]=\"s2Application\"\r\n        >\r\n        </app-comment>\r\n      </mat-accordion>\r\n\r\n      <!-- ATTACHMENTS FOR STAMPED MATERIAL AND DECISION FORM -->\r\n      <div\r\n        *ngIf=\"\r\n          (isAdmin || isSuperAdmin || isApplicant || isAdSpecialist) &&\r\n          previewAttachmentsList.length\r\n        \"\r\n      >\r\n        <br />\r\n        <div class=\"row fields\">\r\n          <h4>\r\n            <i class=\"material-icons\">label_important</i> &nbsp;Clearance and\r\n            TOA\r\n          </h4>\r\n          <br />\r\n          <app-preview-attachments\r\n            [previewAttachmentsList]=\"previewAttachmentsList\"\r\n            [displayedColumns]=\"previewAttachmentsDisplayedColumns\"\r\n            [dataSource]=\"previewAttachmentsListDataSource\"\r\n          ></app-preview-attachments>\r\n          <div class=\"row\"><br /></div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n\r\n    <hr />\r\n\r\n    <!-- For adSpe only -->\r\n    <div\r\n      class=\"row\"\r\n      [hidden]=\"\r\n        s2Application?.internalStatus ===\r\n          'RE_SUBMITTED_S2_APPLICATION_VERIFIED_BY_AD_SPE' ||\r\n        s2Application?.internalStatus === 'S2_APPLICATION_VERIFIED_BY_AD_SPE'\r\n      \"\r\n      [formGroup]=\"s2ApplicationForm\"\r\n    >\r\n      <mat-form-field\r\n        class=\"col-md-6\"\r\n        appearance=\"outline\"\r\n        *ngIf=\"\r\n          isAdSpecialist || (isAdSpecialist && s2Application?.hasOngoingAppeal)\r\n        \"\r\n      >\r\n        <mat-label>Decision:</mat-label>\r\n        <mat-select\r\n          (selectionChange)=\"setDecisionStatus($event.value)\"\r\n          name=\"decisionStatus\"\r\n          formControlName=\"decisionStatus\"\r\n        >\r\n          <mat-option value=\"APPROVED\">APPROVED</mat-option>\r\n          <mat-option\r\n            *ngIf=\"\r\n              s2Application?.internalStatus !=\r\n              'FOR_CLEARANCE_S2_APPLICATION_VERIFIED_BY_ENCODER'\r\n            \"\r\n            value=\"INCOMPLETE\"\r\n            >INCOMPLETE</mat-option\r\n          >\r\n          <mat-option value=\"DISAPPROVED\">DISAPPROVED</mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n      <mat-form-field\r\n        class=\"col-md-6\"\r\n        appearance=\"outline\"\r\n        *ngIf=\"\r\n          isAdSpecialist &&\r\n          s2Application?.internalStatus !=\r\n            'FOR_CLEARANCE_S2_APPLICATION_VERIFIED_BY_ENCODER' &&\r\n          decisionStatus === 'APPROVED'\r\n        \"\r\n      >\r\n        <mat-label>Choose validity date</mat-label>\r\n        <input\r\n          matInput\r\n          placeholder=\"Date\"\r\n          [matDatepicker]=\"validityDate\"\r\n          readonly\r\n          [min]=\"todayDate\"\r\n          [(ngModel)]=\"s2Application.validityDate\"\r\n          name=\"expiresOn\"\r\n          formControlName=\"validityDate\"\r\n          [readonly]=\"true\"\r\n        />\r\n        <mat-datepicker-toggle matSuffix [for]=\"validityDate\">\r\n          <mat-datepicker color=\"warn\" #validityDate></mat-datepicker>\r\n        </mat-datepicker-toggle>\r\n      </mat-form-field>\r\n\r\n      <div\r\n        class=\"row\"\r\n        *ngIf=\"rationaleLists?.length > 0 || rationaleOthersList?.length > 0\"\r\n        [hidden]=\"\r\n          rationaleLists?.length === 0 && rationaleOthersList.length === 0\r\n        \"\r\n      >\r\n        <div class=\"col-md-6 rationale\">\r\n          <label>RATIONALE</label>\r\n          <div class=\"rationale-list\" *ngIf=\"rationaleLists.length > 0\">\r\n            <label>Rationale List:</label>\r\n            <div *ngFor=\"let i of rationaleLists\">\r\n              <p>\r\n                <span class=\"material-icons\">help</span>\r\n                {{ i?.typeOfRationale?.rationale }}\r\n              </p>\r\n            </div>\r\n          </div>\r\n\r\n          <div\r\n            class=\"rational-other-comment\"\r\n            *ngIf=\"rationaleOthersList?.length > 0\"\r\n          >\r\n            <label>Other comments:</label>\r\n            <div *ngFor=\"let i of rationaleOthersList\">\r\n              <p><span class=\"material-icons\">help</span> {{ i?.others }}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <br />\r\n    <div class=\"row\">\r\n      <b\r\n        *ngIf=\"\r\n          isAdSpecialist &&\r\n          s2Application?.decisionStatus === 'APPROVED' &&\r\n          s2Application?.validityDate === null\r\n        \"\r\n        ><b class=\"material-icons\">error_outline</b> Note: To submit approve\r\n        application, please add validity date.</b\r\n      ><br />\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col\">\r\n        <!-- ORIGINAL -->\r\n        <button\r\n          *ngIf=\"\r\n            s2Application?.decisionStatus !== 'INCOMPLETE' &&\r\n            s2Application?.internalStatus !== 'S2_APPLICATION_REJECTED'\r\n          \"\r\n          mat-raised-button\r\n          class=\"button-red\"\r\n          (click)=\"saveStatus()\"\r\n          [hidden]=\"\r\n            s2Application?.internalStatus ===\r\n              'RE_SUBMITTED_S2_APPLICATION_VERIFIED_BY_AD_SPE' ||\r\n            s2Application?.internalStatus ===\r\n              'S2_APPLICATION_VERIFIED_BY_AD_SPE' ||\r\n            s2Application?.internalStatus === 'APPROVED' ||\r\n            s2Application?.internalStatus == 'FOR_CLEARANCE_S2_APPLICATION' ||\r\n            s2Application?.internalStatus ==\r\n              'FOR_CLEARANCE_S2_APPLICATION_VERIFIED_BY_ENCODER' ||\r\n            s2Application?.internalStatus ==\r\n              'FOR_CLEARANCE_S2_APPLICATION_VERIFIED_BY_AD_SPE' ||\r\n            s2Application?.hasOngoingAppeal\r\n          \"\r\n          [disabled]=\"\r\n            s2Application?.finalMaterialAttachmentReference === null ||\r\n            (isAdSpecialist &&\r\n              s2Application?.decisionStatus === 'APPROVED' &&\r\n              s2Application?.validityDate === null)\r\n          \"\r\n        >\r\n          <div *ngIf=\"isApplicant && s2Application?.internalStatus === 'SAVED'\">\r\n            <i class=\"material-icons\">verified</i> SUBMIT\r\n          </div>\r\n          <div *ngIf=\"isEvaluator\">\r\n            <i class=\"material-icons\">verified</i> FORWARD TO AD SPECIALIST\r\n          </div>\r\n          <div *ngIf=\"isAdSpecialist\">\r\n            <i class=\"material-icons\">check</i> SUBMIT\r\n          </div>\r\n        </button>\r\n\r\n        <!-- INCOMPLETE -->\r\n        <button\r\n          mat-raised-button\r\n          *ngIf=\"\r\n            s2Application?.decisionStatus === 'INCOMPLETE' ||\r\n            s2Application?.decisionStatus === 'S2_APPLICATION_REJECTED'\r\n          \"\r\n          class=\"button-red\"\r\n          (click)=\"saveStatusForCompliance()\"\r\n          [disabled]=\"\r\n            !s2Application?.decisionStatus ||\r\n            (isAdSpecialist && decisionStatus === '') ||\r\n            (isAdSpecialist &&\r\n              decisionStatus === 'APPROVED' &&\r\n              s2Application?.validityDate === null) ||\r\n            (isAdSpecialist &&\r\n              (decisionStatus === 'INCOMPLETE' ||\r\n                decisionStatus === 'DISAPPROVED') &&\r\n              rationaleLists.length === 0 &&\r\n              rationaleOthersList.length === 0)\r\n          \"\r\n        >\r\n          <div\r\n            *ngIf=\"isApplicant\"\r\n            [hidden]=\"\r\n              s2Application?.decisionStatus !== 'INCOMPLETE' ||\r\n              s2Application?.internalStatus === 'RE_SUBMITTED_S2_APPLICATION' ||\r\n              s2Application?.internalStatus ===\r\n                'RE_SUBMITTED_S2_APPLICATION_VERIFIED_BY_ENCODER'\r\n            \"\r\n          >\r\n            <i class=\"material-icons\">fact_check</i> SUBMIT FOR COMPLIANCE\r\n          </div>\r\n          <div *ngIf=\"isEvaluator\">\r\n            <i class=\"material-icons\">fact_check</i> FORWARD TO AD SPECIALIST\r\n            FOR COMPLIANCE\r\n          </div>\r\n          <div *ngIf=\"isAdSpecialist\">\r\n            <i class=\"material-icons\">fact_check</i> SUBMIT COMPLIANCE\r\n          </div>\r\n        </button>\r\n\r\n        <button\r\n          mat-raised-button\r\n          *ngIf=\"\r\n            isEvaluator &&\r\n            s2Application?.internalStatus != 'FOR_CLEARANCE_S2_APPLICATION'\r\n          \"\r\n          class=\"button-red\"\r\n          (click)=\"\r\n            rejectDisapprovedModal(\r\n              'encoder',\r\n              'reject',\r\n              'S2 APPLICATION REJECTED'\r\n            )\r\n          \"\r\n        >\r\n          <i class=\"material-icons color__white\">cancel</i> REJECT\r\n        </button>\r\n\r\n        <!-- ADMIN / SUPERADMIN - RELEASED -->\r\n        <button\r\n          mat-raised-button\r\n          class=\"button-red\"\r\n          (click)=\"submitAppeal()\"\r\n          *ngIf=\"\r\n            (isAdmin || isSuperAdmin) &&\r\n            s2Application?.externalStatus === 'APPROVED' &&\r\n            s1Application?.releaseStatus === 'RELEASED' &&\r\n            !s1Application?.hasOngoingCompliance &&\r\n            !s1Application?.hasOngoingAppeal\r\n          \"\r\n        >\r\n          <i class=\"material-icons color__white\">report_gmailerrorred</i>\r\n          &nbsp;RETURN TO ADSPE FOR APPEAL\r\n        </button>\r\n\r\n        <!-- APPEAL - ADSPE -->\r\n        <button\r\n          mat-raised-button\r\n          class=\"button-red\"\r\n          (click)=\"submitAppeal()\"\r\n          *ngIf=\"isAdSpecialist && s2Application?.hasOngoingAppeal\"\r\n        >\r\n          <i class=\"material-icons color__white\">report_gmailerrorred</i>\r\n          &nbsp;VERIFY APPEAL\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- <div class=\"row\">\r\n      <div class=\"col\">\r\n        <button mat-raised-button *ngIf=\"s2Application?.internalStatus == 'APPROVED' ||\r\n         s2Application?.internalStatus == 'RE_SUBMITTED_S2_APPLICATION_VERIFIED_BY_AD_SPE' ||\r\n         s2Application?.internalStatus == 'FOR_CLEARANCE_S2_APPLICATION' ||\r\n         s2Application?.internalStatus == 'FOR_CLEARANCE_S2_APPLICATION_VERIFIED_BY_ENCODER' \" class=\"button-red\"\r\n          (click)=\"saveStatusForClearance()\" [hidden]=\"\">\r\n          <div *ngIf=\"isApplicant\"><i class=\"material-icons\">fact_check</i> SUBMIT\r\n            APPLICATION FOR CLEARANCE</div>\r\n          <div *ngIf=\"isEvaluator\"><i class=\"material-icons\">fact_check</i> FORWARD\r\n            TO AD SPECIALIST FOR CLEARANCE</div>\r\n          <div *ngIf=\"isAdSpecialist\"><i class=\"material-icons\">fact_check</i>\r\n            SUBMIT CLEARANCE</div>\r\n        </button>\r\n        <button mat-raised-button\r\n          *ngIf=\"isEvaluator && s2Application?.internalStatus == 'FOR_CLEARANCE_S2_APPLICATION'\"\r\n          class=\"button-red\" (click)=\"rejectApplication()\">\r\n          <i class=\"material-icons color__white\">cancel</i> REJECT\r\n        </button>\r\n      </div>\r\n    </div> -->\r\n\r\n    <!-- <div class=\"row\">\r\n      <div class=\"col\">\r\n        <button mat-raised-button\r\n          *ngIf=\"isApplicant && s2Application?.internalStatus == 'APPROVED' || s2Application?.internalStatus == 'RE_SUBMITTED_S2_APPLICATION_VERIFIED_BY_AD_SPE'\"\r\n          [hidden]=\"isAdSpecialist\" class=\"button-red\"\r\n          (click)=\"applyApplicationForClearance()\">\r\n          <i class=\"material-icons color__white\">fact_check</i> APPLY FOR TOA\r\n        </button>\r\n      </div>\r\n    </div> -->\r\n  </div>\r\n</form>\r\n","import { Observable, Subject } from \"rxjs\";\r\nimport { DatePipe } from \"@angular/common\";\r\nimport {\r\n  Component,\r\n  ElementRef,\r\n  Inject,\r\n  Input,\r\n  OnInit,\r\n  ViewChild,\r\n  OnChanges,\r\n  SimpleChanges,\r\n} from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport {\r\n  ATTACHMENT_TYPE,\r\n  APP_DECISION_STATUS,\r\n  SUBMISSION_TYPE,\r\n  APPLICATION_STATUS,\r\n  APPLICATION_STATUS_REVISION,\r\n  APPLICATION_STATUS_FOR_COMPLIANCE,\r\n} from \"@shared\";\r\nimport {\r\n  AttachmentDocument,\r\n  S1Application,\r\n  S2Application,\r\n  UserAccount,\r\n} from \"@models\";\r\nimport { ApiService, DataStorageService, SweetAlertService } from \"@services\";\r\nimport { ENDPOINTS } from \"@shared\";\r\nimport Swal from \"sweetalert2\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport {\r\n  MatDialog,\r\n  MatDialogRef,\r\n  MAT_DIALOG_DATA,\r\n} from \"@angular/material/dialog\";\r\nimport { DomSanitizer } from \"@angular/platform-browser\";\r\nimport { FileStorageService } from \"app/core/services/file.storage.service\";\r\n\r\n@Component({\r\n  selector: \"app-attachment-document\",\r\n  templateUrl: \"./attachment-document.component.html\",\r\n  styleUrls: [\"./attachment-document.component.scss\"],\r\n})\r\nexport class AttachmentDocumentComponent implements OnInit, OnChanges {\r\n  attachmentDocuments = [];\r\n  @Input() originalAttachmentDocuments = [];\r\n  @Input() revisionAttachmentDocuments = [];\r\n  @Input() complianceAttachmentDocuments = [];\r\n  @Input() s2SupportAttchmentDocuments = [];\r\n  @Input() s2DocObservable: Subject<any> = new Subject();\r\n  s2SupportDocument: any = {};\r\n  @Input() S2SupportDoc: Boolean = false;\r\n\r\n  tempRevisionAttachmentDocuments = [];\r\n  tempComplianceAttachmentDocuments = [];\r\n\r\n  tabLabel: string = SUBMISSION_TYPE.ORIGINAL;\r\n\r\n  @Input() s2Appplication = new S2Application();\r\n  @Input() s1Application = new S1Application();\r\n  @Input() labelMainDocument = \"\";\r\n  @Input() isAscUser = false;\r\n  @Input() isDisableFieldOnUpdate = false;\r\n  @Input() applicationStage = \"\";\r\n\r\n  showMainDocumentUploadButton = false;\r\n  showMainDocumentUploadButtonR = false;\r\n  showMainDocumentUploadButtonC = false;\r\n\r\n  showMainDocumentViewButton = false;\r\n  showMainDocumentViewButtonR = false;\r\n  showMainDocumentViewButtonC = false;\r\n\r\n  safeURLMainDoc: any;\r\n  safeURLMainDocR: any;\r\n  safeURLMainDocC: any;\r\n\r\n  uploadedFileMain: any;\r\n  @ViewChild(\"mainFile\")\r\n  myMainFile: ElementRef;\r\n  @ViewChild(\"mainInput\")\r\n  myMainInput: ElementRef;\r\n\r\n  showSupportDocumentFrame = false;\r\n  showSupportDocumentFrameR = false;\r\n  showSupportDocumentFrameC = false;\r\n\r\n  showSupportiveDocumentUploadButton = false;\r\n  showSupportiveDocumentUploadButtonR = false;\r\n  showSupportiveDocumentUploadButtonC = false;\r\n\r\n  showSupportiveDocumentViewButton = false;\r\n  showSupportiveDocumentViewButtonR = false;\r\n  showSupportiveDocumentViewButtonC = false;\r\n\r\n  safeURLSupportDoc: any;\r\n  safeURLSupportDocR: any;\r\n  safeURLSupportDocC: any;\r\n\r\n  uploadedFileSupportive: any;\r\n  @ViewChild(\"supportiveFile\")\r\n  mySupportiveFile: ElementRef;\r\n  @ViewChild(\"supportiveInput\")\r\n  mySupportiveInput: ElementRef;\r\n\r\n  revisionLetterAttachment: any;\r\n  showRevisionLetterViewButton = false;\r\n  showRevisionLetterUploadButton = false;\r\n  safeURLRevisionLetter: any;\r\n  uploadedFileRevision: any;\r\n\r\n  @ViewChild(\"revisionLetterFile\")\r\n  myRevisionLetterFile: ElementRef;\r\n  @ViewChild(\"revisionLetterInput\")\r\n  myRevisionLetterInput: ElementRef;\r\n\r\n  todayDate: Date = new Date();\r\n  attachmentType = ATTACHMENT_TYPE.MAIN;\r\n  submissionType = SUBMISSION_TYPE.ORIGINAL;\r\n  mainDocAttachmentSize = 0;\r\n  supportDocAttachmentSize = 0;\r\n  revisionDocAttachmentSize = 0;\r\n  attachmentSizeForUpload: number;\r\n  selectedFiles: FileList;\r\n  currentFileUpload: File;\r\n  progress: { percentage: number } = { percentage: 0 };\r\n\r\n  attachmentDocumentForm: FormGroup;\r\n  id: any;\r\n  currentUser: UserAccount;\r\n  attachmentDocument = new AttachmentDocument();\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private dataStorageService: DataStorageService,\r\n    private sweetAlertService: SweetAlertService,\r\n    private dataStorage: DataStorageService,\r\n    private apiService: ApiService,\r\n    public datepipe: DatePipe,\r\n    private spinner: NgxSpinnerService,\r\n    private route: ActivatedRoute,\r\n    private dialog: MatDialog,\r\n    private sanitizer: DomSanitizer,\r\n    private fileStorageService: FileStorageService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {}\r\n\r\n  get submitComplianceEnabled() {\r\n    const hasMain = Boolean(\r\n      this.complianceAttachmentDocuments.find(\r\n        (c) => c.attachmentType === ATTACHMENT_TYPE.MAIN\r\n      )\r\n    );\r\n    const hasSupportive = Boolean(\r\n      this.complianceAttachmentDocuments.find(\r\n        (c) => c.attachmentType === ATTACHMENT_TYPE.SUPPORTIVE\r\n      )\r\n    );\r\n\r\n    return (\r\n      (hasMain && hasSupportive) ||\r\n      (hasMain && this.s1Application.hasNoSupportingDocs)\r\n    );\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    console.log(this.s2SupportAttchmentDocuments);\r\n    this.id = Number(this.route.snapshot.paramMap.get(\"id\"));\r\n    this.currentUser = this.dataStorage.getUserAccount();\r\n    this.setFormValidator();\r\n    console.log(\"----1 => \", this.s2Appplication);\r\n    this.s2DocObservable.subscribe((res) => {\r\n      if (res.type === \"application\") {\r\n        this.s2Appplication = res.value;\r\n      } else if (res.type === \"document\") {\r\n        console.log(\"s2 document\", res.value);\r\n        this.s2SupportDocument = this.s2SupportAttchmentDocuments.filter(\r\n          (r) => r.attachmentType === ATTACHMENT_TYPE.SUPPORTIVE\r\n        )[this.s1Application.hasNoSupportingDocs ? 0 : 1];\r\n      }\r\n    });\r\n\r\n    setTimeout(() => {\r\n      console.log(\"S2222 => \", this.s2SupportAttchmentDocuments);\r\n    }, 5000);\r\n  }\r\n\r\n  validateDeleteBtn(): boolean {\r\n    if (\r\n      this.currentUser.accountType === \"APPLICANT\" &&\r\n      this.s2Appplication.internalStatus &&\r\n      this.s2SupportDocument &&\r\n      this.s2SupportAttchmentDocuments.filter(\r\n        (r) => r.attachmentType === ATTACHMENT_TYPE.SUPPORTIVE\r\n      )[this.s1Application.hasNoSupportingDocs ? 0 : 1]\r\n    ) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  changeTab(evt) {\r\n    if (evt.tab) {\r\n      const label = evt.tab.textLabel;\r\n      this.tabLabel = label;\r\n      if (label === \"REVISION\" || label === \"COMPLIANCE\") {\r\n        this.s1Application.hasNoSupportingDocs = false;\r\n      }\r\n    }\r\n  }\r\n  selectS2SupprtDoc(event) {\r\n    console.log(\"================= \", this.s2SupportAttchmentDocuments);\r\n    // checking of file type;\r\n    if (event.target.files[0].type !== \"application/pdf\") {\r\n      this.sweetAlertService.customErrorMessage(\r\n        \"Attachment should be in PDF format only.\"\r\n      );\r\n      event.target.value = \"\";\r\n      return;\r\n    }\r\n\r\n    // getting the file size.\r\n    this.attachmentType = ATTACHMENT_TYPE.SUPPORTIVE;\r\n    console.log(\"S2 Support Doc =>\", event.target.files);\r\n    this.supportDocAttachmentSize = event.target.files[0].size;\r\n\r\n    let attachmentSize =\r\n      this.mainDocAttachmentSize +\r\n      this.supportDocAttachmentSize +\r\n      this.revisionDocAttachmentSize;\r\n\r\n    // file size checking and validation\r\n    if (attachmentSize > 15000000) {\r\n      // 1MB = 1M : FOR INTEGRATION\r\n      this.sweetAlertService.customErrorMessage(\r\n        `Attachments' total file size should not exceed 15MB.`\r\n      );\r\n      event.target.value = \"\";\r\n      return;\r\n    } else {\r\n      // creating document object url\r\n      const pdfURL = URL.createObjectURL(event.target.files[0]);\r\n      this.attachmentSizeForUpload = event.target.files[0].size;\r\n      this.safeURLSupportDoc = this.sanitizer.bypassSecurityTrustResourceUrl(\r\n        pdfURL\r\n      );\r\n      this.showSupportiveDocumentUploadButton = true;\r\n\r\n      const reader = new FileReader();\r\n      const [file] = event.target.files;\r\n\r\n      reader.readAsDataURL(file);\r\n      reader.onload = () => {};\r\n    }\r\n    this.selectedFiles = event.target.files;\r\n  }\r\n  selectFile(event, typeOfDocument) {\r\n    this.attachmentType = typeOfDocument;\r\n    if (event.target.files[0].type === \"application/pdf\") {\r\n      if (this.attachmentType === ATTACHMENT_TYPE.MAIN) {\r\n        this.mainDocAttachmentSize = event.target.files[0].size;\r\n      } else if (this.attachmentType === ATTACHMENT_TYPE.SUPPORTIVE) {\r\n        this.supportDocAttachmentSize = event.target.files[0].size;\r\n      } else if (this.attachmentType === ATTACHMENT_TYPE.REVISION_LETTER) {\r\n        this.revisionDocAttachmentSize = event.target.files[0].size;\r\n      }\r\n      let attachmentSize =\r\n        this.mainDocAttachmentSize +\r\n        this.supportDocAttachmentSize +\r\n        this.revisionDocAttachmentSize;\r\n\r\n      if (attachmentSize > 15000000) {\r\n        // 1MB = 1M : FOR INTEGRATION\r\n        this.sweetAlertService.customErrorMessage(\r\n          `Attachments' total file size should not exceed 15MB.`\r\n        );\r\n        event.target.value = \"\";\r\n        return;\r\n      } else {\r\n        const pdfURL = URL.createObjectURL(event.target.files[0]);\r\n\r\n        this.attachmentSizeForUpload = event.target.files[0].size;\r\n\r\n        if (this.attachmentType === ATTACHMENT_TYPE.MAIN) {\r\n          this.safeURLMainDoc = this.sanitizer.bypassSecurityTrustResourceUrl(\r\n            pdfURL\r\n          );\r\n          this.showMainDocumentUploadButton = true;\r\n        } else if (this.attachmentType === ATTACHMENT_TYPE.SUPPORTIVE) {\r\n          this.safeURLSupportDoc = this.sanitizer.bypassSecurityTrustResourceUrl(\r\n            pdfURL\r\n          );\r\n          this.showSupportiveDocumentUploadButton = true;\r\n        } else if (this.attachmentType === ATTACHMENT_TYPE.REVISION_LETTER) {\r\n          this.safeURLRevisionLetter = this.sanitizer.bypassSecurityTrustResourceUrl(\r\n            pdfURL\r\n          );\r\n          this.showRevisionLetterUploadButton = true;\r\n        }\r\n\r\n        // original-approved - for revision\r\n        // revision\r\n        if (\r\n          (this.submissionType === SUBMISSION_TYPE.REVISION &&\r\n            this.s1Application.decisionStatus !==\r\n              APP_DECISION_STATUS.INCOMPLETE) ||\r\n          ((this.s1Application.internalStatus ===\r\n            APPLICATION_STATUS.S1_APPLICATION_REVIEWED ||\r\n            this.s1Application.internalStatus ===\r\n              APPLICATION_STATUS_FOR_COMPLIANCE.COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER) &&\r\n            (this.s1Application.decisionStatus ===\r\n              APPLICATION_STATUS.APPROVED ||\r\n              this.s1Application.decisionStatus === \"APPROVED W/ CAUTION\"))\r\n        ) {\r\n          this.safeURLMainDocR = this.safeURLMainDoc;\r\n          this.safeURLSupportDocR = this.safeURLSupportDoc;\r\n\r\n          this.showMainDocumentUploadButtonR = this.showMainDocumentUploadButton;\r\n          this.showSupportiveDocumentUploadButtonR = this.showSupportiveDocumentUploadButton;\r\n\r\n          if (this.tempRevisionAttachmentDocuments.length === 0) {\r\n            this.s1Application.mainAttachmentReference = null;\r\n            this.s1Application.supportingAttachmentReference = null;\r\n            this.s1Application.revisionLetterAttachmentReference = null;\r\n          }\r\n        }\r\n\r\n        // original-incomplete - original\r\n        // revision-incomplete\r\n        // for compliance\r\n        else if (\r\n          this.submissionType === SUBMISSION_TYPE.COMPLIANCE ||\r\n          (this.s1Application.internalStatus ===\r\n            APPLICATION_STATUS.S1_APPLICATION_REVIEWED &&\r\n            this.s1Application.decisionStatus ===\r\n              APPLICATION_STATUS.INCOMPLETE) ||\r\n          (this.submissionType === SUBMISSION_TYPE.REVISION &&\r\n            this.s1Application.decisionStatus ===\r\n              APP_DECISION_STATUS.INCOMPLETE)\r\n        ) {\r\n          this.safeURLMainDocC = this.safeURLMainDoc;\r\n          this.safeURLSupportDocC = this.safeURLSupportDoc;\r\n\r\n          this.showMainDocumentUploadButtonC = this.showMainDocumentUploadButton;\r\n          this.showSupportiveDocumentUploadButtonC = this.showSupportiveDocumentUploadButton;\r\n\r\n          if (this.tempComplianceAttachmentDocuments.length === 0) {\r\n            this.s1Application.mainAttachmentReference = null;\r\n            this.s1Application.supportingAttachmentReference = null;\r\n            this.s1Application.revisionLetterAttachmentReference = null;\r\n          }\r\n        }\r\n\r\n        const reader = new FileReader();\r\n        const [file] = event.target.files;\r\n\r\n        reader.readAsDataURL(file);\r\n        reader.onload = () => {};\r\n      }\r\n\r\n      this.selectedFiles = event.target.files;\r\n    } else {\r\n      this.sweetAlertService.customErrorMessage(\r\n        \"Attachment should be in PDF format only.\"\r\n      );\r\n      event.target.value = \"\";\r\n      return;\r\n    }\r\n  }\r\n\r\n  uploadS2SupportDoc() {\r\n    let attachmentType;\r\n    let appFormReference = \"\";\r\n    attachmentType = \"SUPPORTING\";\r\n    this.submissionType = SUBMISSION_TYPE.ORIGINAL;\r\n    Swal.fire({\r\n      text:\r\n        \"Are you sure you want to upload the \" +\r\n        attachmentType.replaceAll(\"_\", \" \") +\r\n        \" DOCUMENT?\",\r\n      icon: \"question\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Confirm\",\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.spinner.show();\r\n\r\n        this.progress.percentage = 0;\r\n        this.currentFileUpload = this.selectedFiles.item(0);\r\n        let params = \"\";\r\n        let appFormRef = \"\";\r\n\r\n        // set appFormReference\r\n        if (this.s2Appplication.appFormReference) {\r\n          console.log(\"------------------------------\");\r\n          appFormRef = `&appFormReference=${this.s2Appplication.appFormReference}`;\r\n        }\r\n\r\n        params = `?&attachmentType=${this.attachmentType}&submissionType=${this.submissionType}${appFormReference}&fileSize=${this.attachmentSizeForUpload}${appFormRef}`;\r\n        this.fileStorageService\r\n          .pushFileToStorage(\r\n            ENDPOINTS.attachmentDocument,\r\n            this.currentFileUpload,\r\n            params\r\n          )\r\n          .subscribe(\r\n            (res) => {\r\n              console.log(this.attachmentType, \" \", res.responseData.data);\r\n\r\n              if (\r\n                !this.s2Appplication.appFormReference ||\r\n                this.s2Appplication.appFormReference === \"\"\r\n              ) {\r\n                this.s2Appplication.appFormReference =\r\n                  res.responseData.data.appFormReference;\r\n                console.log(\r\n                  \"SET APPFORMREF: \",\r\n                  this.s1Application.appFormReference\r\n                );\r\n              }\r\n\r\n              this.uploadedFileSupportive = res.responseData.data;\r\n              this.s2SupportDocAddToAttachmentDocument(\r\n                this.uploadedFileSupportive\r\n              );\r\n              this.showSupportiveDocumentUploadButton = false;\r\n              this.showSupportiveDocumentViewButton = true;\r\n              this.s2Appplication.supportingAttachmentReference = this.uploadedFileSupportive.supportingAttachmentReference;\r\n\r\n              this.spinner.hide();\r\n              this.sweetAlertService.customSuccessMessage(\r\n                \"Attachment successfully uploaded.\"\r\n              );\r\n              this.selectedFiles = undefined;\r\n            },\r\n            (err: any) => {\r\n              this.spinner.hide();\r\n              this.sweetAlertService.error(err);\r\n            },\r\n            () => {\r\n              // actions after subscription\r\n              this.spinner.hide();\r\n            }\r\n          );\r\n      } else {\r\n        this.currentFileUpload = null;\r\n      }\r\n    });\r\n    console.log(\"uploaded =======> \", this.s2SupportAttchmentDocuments);\r\n  }\r\n\r\n  uploadDocument() {\r\n    console.log(\"type: \", this.attachmentType);\r\n    let attachmentType;\r\n    let appFormReference = \"\";\r\n    if (\r\n      this.attachmentType === ATTACHMENT_TYPE.SUPPORTIVE ||\r\n      this.S2SupportDoc\r\n    ) {\r\n      attachmentType = \"SUPPORTING\";\r\n    } else {\r\n      attachmentType = this.attachmentType;\r\n    }\r\n\r\n    if (!this.S2SupportDoc) {\r\n      // set submission type and appFormReference\r\n      if (\r\n        attachmentType === ATTACHMENT_TYPE.REVISION_LETTER ||\r\n        (this.s1Application.submissionType === SUBMISSION_TYPE.ORIGINAL &&\r\n          (this.s1Application.decisionStatus === APPLICATION_STATUS.APPROVED ||\r\n            this.s1Application.decisionStatus === \"APPROVED W/ CAUTION\"))\r\n      ) {\r\n        this.submissionType = SUBMISSION_TYPE.REVISION;\r\n        // appFormReference = `&appFormReference=${this.s1Application.appFormReference}`;\r\n      } else if (\r\n        this.s1Application.decisionStatus === APP_DECISION_STATUS.INCOMPLETE\r\n      ) {\r\n        this.submissionType = SUBMISSION_TYPE.COMPLIANCE;\r\n        // appFormReference = `&appFormReference=${this.s1Application.appFormReference}&applicationFormId=${this.s1Application.id}`;\r\n        appFormReference = `&applicationFormId=${this.s1Application.id}`;\r\n      } else {\r\n        this.submissionType = SUBMISSION_TYPE.ORIGINAL;\r\n      }\r\n    } else {\r\n      this.submissionType = SUBMISSION_TYPE.ORIGINAL;\r\n    }\r\n\r\n    console.log(\"NEW SUTYPE: \", this.submissionType);\r\n\r\n    Swal.fire({\r\n      text:\r\n        \"Are you sure you want to upload the \" +\r\n        attachmentType.replaceAll(\"_\", \" \") +\r\n        \" DOCUMENT?\",\r\n      icon: \"question\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Confirm\",\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.spinner.show();\r\n\r\n        this.progress.percentage = 0;\r\n        this.currentFileUpload = this.selectedFiles.item(0);\r\n        let params = \"\";\r\n        let appFormRef = \"\";\r\n\r\n        // set appFormReference\r\n        if (this.s1Application.appFormReference) {\r\n          appFormRef = `&appFormReference=${this.s1Application.appFormReference}`;\r\n        }\r\n        if (this.s2Appplication.appFormReference) {\r\n          appFormRef = `&appFormReference=${this.s2Appplication.appFormReference}`;\r\n        }\r\n\r\n        params = `?&attachmentType=${this.attachmentType}&submissionType=${this.submissionType}${appFormReference}&fileSize=${this.attachmentSizeForUpload}${appFormRef}`;\r\n        this.fileStorageService\r\n          .pushFileToStorage(\r\n            ENDPOINTS.attachmentDocument,\r\n            this.currentFileUpload,\r\n            params\r\n          )\r\n          .subscribe(\r\n            (res) => {\r\n              console.log(this.attachmentType, \" \", res.responseData.data);\r\n\r\n              if (\r\n                !this.s1Application.appFormReference ||\r\n                this.s1Application.appFormReference === \"\"\r\n              ) {\r\n                this.s1Application.appFormReference =\r\n                  res.responseData.data.appFormReference;\r\n                console.log(\r\n                  \"SET APPFORMREF: \",\r\n                  this.s1Application.appFormReference\r\n                );\r\n              }\r\n\r\n              if (!this.S2SupportDoc) {\r\n                if (this.attachmentType === ATTACHMENT_TYPE.MAIN) {\r\n                  this.uploadedFileMain = res.responseData.data;\r\n                  this.addToAttachmentDocuments(this.uploadedFileMain);\r\n                  this.showMainDocumentUploadButton = false;\r\n                  this.showMainDocumentViewButton = true;\r\n                  this.showSupportDocumentFrame = true;\r\n                  this.s1Application.mainAttachmentReference = this.uploadedFileMain.mainAttachmentReference;\r\n                } else if (this.attachmentType === ATTACHMENT_TYPE.SUPPORTIVE) {\r\n                  this.uploadedFileSupportive = res.responseData.data;\r\n                  this.addToAttachmentDocuments(this.uploadedFileSupportive);\r\n                  this.showSupportiveDocumentUploadButton = false;\r\n                  this.showSupportiveDocumentViewButton = true;\r\n                  this.s1Application.supportingAttachmentReference = this.uploadedFileSupportive.supportingAttachmentReference;\r\n                } else if (\r\n                  this.attachmentType === ATTACHMENT_TYPE.REVISION_LETTER\r\n                ) {\r\n                  this.uploadedFileRevision = res.responseData.data;\r\n                  this.addToAttachmentDocuments(this.uploadedFileRevision);\r\n                  this.showRevisionLetterViewButton = true;\r\n                  this.showRevisionLetterUploadButton = false;\r\n                  this.s1Application.revisionLetterAttachmentReference = this.uploadedFileRevision.revisionLetterAttachmentReference;\r\n                  this.revisionLetterAttachment = this.attachmentDocuments.filter(\r\n                    (data) =>\r\n                      data?.attachmentType === ATTACHMENT_TYPE.REVISION_LETTER\r\n                  )[0];\r\n                }\r\n              } else {\r\n                this.uploadedFileSupportive = res.responseData.data;\r\n                this.s2SupportDocAddToAttachmentDocument(\r\n                  this.uploadedFileSupportive\r\n                );\r\n                this.showSupportiveDocumentUploadButton = false;\r\n                this.showSupportiveDocumentViewButton = true;\r\n                this.s2Appplication.supportingAttachmentReference = this.uploadedFileSupportive.supportingAttachmentReference;\r\n              }\r\n\r\n              if (\r\n                (this.submissionType === SUBMISSION_TYPE.ORIGINAL &&\r\n                  (this.s1Application.decisionStatus ===\r\n                    APPLICATION_STATUS.APPROVED ||\r\n                    this.s1Application.decisionStatus ===\r\n                      \"APPROVED W/ CAUTION\")) ||\r\n                this.submissionType === SUBMISSION_TYPE.REVISION\r\n              ) {\r\n                if (this.attachmentType === ATTACHMENT_TYPE.MAIN) {\r\n                  this.showMainDocumentUploadButtonR = this.showMainDocumentUploadButton;\r\n                  this.showMainDocumentViewButtonR = this.showMainDocumentViewButton;\r\n                } else if (this.attachmentType === ATTACHMENT_TYPE.SUPPORTIVE) {\r\n                  this.showSupportDocumentFrameR = this.showSupportDocumentFrame;\r\n                  this.showSupportiveDocumentUploadButtonR = this.showSupportiveDocumentUploadButton;\r\n                  this.showSupportiveDocumentViewButtonR = this.showSupportiveDocumentViewButton;\r\n                }\r\n              } else if (\r\n                (this.submissionType === SUBMISSION_TYPE.ORIGINAL &&\r\n                  this.s1Application.decisionStatus ===\r\n                    APP_DECISION_STATUS.INCOMPLETE) ||\r\n                (this.submissionType === SUBMISSION_TYPE.REVISION &&\r\n                  this.s1Application.decisionStatus ===\r\n                    APP_DECISION_STATUS.INCOMPLETE) ||\r\n                this.submissionType === SUBMISSION_TYPE.COMPLIANCE\r\n              ) {\r\n                if (this.attachmentType === ATTACHMENT_TYPE.MAIN) {\r\n                  this.showMainDocumentUploadButtonC = this.showMainDocumentUploadButton;\r\n                  this.showMainDocumentViewButtonC = this.showMainDocumentViewButton;\r\n                } else if (this.attachmentType === ATTACHMENT_TYPE.SUPPORTIVE) {\r\n                  this.showSupportDocumentFrameC = this.showSupportDocumentFrame;\r\n                  this.showSupportiveDocumentUploadButtonC = this.showSupportiveDocumentUploadButton;\r\n                  this.showSupportiveDocumentViewButtonC = this.showSupportiveDocumentViewButton;\r\n                }\r\n              }\r\n\r\n              this.spinner.hide();\r\n              this.sweetAlertService.customSuccessMessage(\r\n                \"Attachment successfully uploaded.\"\r\n              );\r\n              this.selectedFiles = undefined;\r\n            },\r\n            (err: any) => {\r\n              this.spinner.hide();\r\n              this.sweetAlertService.error(err);\r\n            },\r\n            () => {\r\n              // actions after subscription\r\n              this.spinner.hide();\r\n            }\r\n          );\r\n      } else {\r\n        this.currentFileUpload = null;\r\n      }\r\n    });\r\n  }\r\n  s2SupportDocAddToAttachmentDocument(obj: any) {\r\n    if (obj.supportingAttachmentReference) {\r\n      this.attachmentDocument.mainAttachmentReference =\r\n        obj.mainAttachmentReference;\r\n      this.attachmentDocument.supportingAttachmentReference =\r\n        obj.supportingAttachmentReference;\r\n      this.attachmentDocument.revisionLetterAttachmentReference =\r\n        obj.revisionLetterAttachmentReference;\r\n      this.attachmentDocument.id = obj.id;\r\n      this.attachmentDocument.originalFilename = obj.originalFilename;\r\n      this.attachmentDocument.filename = obj.filename;\r\n      this.attachmentDocument.fileSize = obj.fileSize;\r\n      this.attachmentDocument.fileExtension = obj.fileExtension;\r\n      this.attachmentDocument.fileURL = obj.fileURL;\r\n      this.attachmentDocument.attachmentType = obj.attachmentType;\r\n      this.attachmentDocument.documentFormat = obj.documentFormat;\r\n      this.attachmentDocument.createdBy = this.currentUser.username;\r\n      this.attachmentDocument.createdDate = this.todayDate;\r\n      console.log(this.attachmentDocuments);\r\n      this.attachmentDocuments[0] = this.attachmentDocument;\r\n      this.s2SupportAttchmentDocuments = this.attachmentDocuments;\r\n      this.s2SupportDocument = obj;\r\n      this.s2SupportAttchmentDocuments.push(obj);\r\n      console.log(\"s2support => \", obj);\r\n\r\n      console.log(this.s2Appplication);\r\n      console.log(\"s2 app\", this.attachmentDocuments);\r\n    }\r\n  }\r\n\r\n  addToAttachmentDocuments(obj: any) {\r\n    if (obj) {\r\n      console.log(\"addToAttachmentDocuments\");\r\n\r\n      if (\r\n        this.s1Application.submissionType === SUBMISSION_TYPE.ORIGINAL &&\r\n        (this.s1Application.internalStatus === APPLICATION_STATUS.SAVED ||\r\n          this.s1Application.internalStatus === \"\" ||\r\n          this.s1Application.internalStatus === undefined)\r\n      ) {\r\n        this.attachmentDocuments = JSON.parse(\r\n          JSON.stringify(this.originalAttachmentDocuments)\r\n        );\r\n      }\r\n\r\n      this.attachmentDocument.mainAttachmentReference =\r\n        obj.mainAttachmentReference;\r\n      this.attachmentDocument.supportingAttachmentReference =\r\n        obj.supportingAttachmentReference;\r\n      this.attachmentDocument.revisionLetterAttachmentReference =\r\n        obj.revisionLetterAttachmentReference;\r\n      this.attachmentDocument.id = obj.id;\r\n      this.attachmentDocument.originalFilename = obj.originalFilename;\r\n      this.attachmentDocument.filename = obj.filename;\r\n      this.attachmentDocument.fileSize = obj.fileSize;\r\n      this.attachmentDocument.fileExtension = obj.fileExtension;\r\n      this.attachmentDocument.fileURL = obj.fileURL;\r\n      this.attachmentDocument.attachmentType = obj.attachmentType;\r\n      this.attachmentDocument.documentFormat = obj.documentFormat;\r\n      this.attachmentDocument.createdBy = this.currentUser.username;\r\n      this.attachmentDocument.createdDate = this.todayDate;\r\n      console.log(this.attachmentDocuments);\r\n\r\n      if (this.attachmentDocument.attachmentType === \"MAIN\") {\r\n        this.attachmentDocuments[0] = this.attachmentDocument;\r\n      } else if (this.attachmentDocument.attachmentType === \"SUPPORTIVE\") {\r\n        this.attachmentDocuments[1] = this.attachmentDocument;\r\n      } else if (this.attachmentDocument.attachmentType === \"REVISION_LETTER\") {\r\n        this.attachmentDocuments[2] = this.attachmentDocument;\r\n      }\r\n\r\n      if (\r\n        (this.s1Application.submissionType === SUBMISSION_TYPE.REVISION &&\r\n          this.s1Application.decisionStatus !==\r\n            APP_DECISION_STATUS.INCOMPLETE) ||\r\n        (this.s1Application.submissionType === SUBMISSION_TYPE.ORIGINAL &&\r\n          (this.s1Application.decisionStatus === APPLICATION_STATUS.APPROVED ||\r\n            this.s1Application.decisionStatus === \"APPROVED W/ CAUTION\"))\r\n      ) {\r\n        // this.revisionAttachmentDocuments = this.attachmentDocuments;\r\n        this.tempRevisionAttachmentDocuments = JSON.parse(\r\n          JSON.stringify(this.attachmentDocuments)\r\n        );\r\n      } else if (\r\n        this.s1Application.decisionStatus === APP_DECISION_STATUS.INCOMPLETE\r\n      ) {\r\n        // this.complianceAttachmentDocuments = this.attachmentDocuments;\r\n        this.tempComplianceAttachmentDocuments = JSON.parse(\r\n          JSON.stringify(this.attachmentDocuments)\r\n        );\r\n      } else {\r\n        this.originalAttachmentDocuments = JSON.parse(\r\n          JSON.stringify(this.attachmentDocuments)\r\n        );\r\n      }\r\n\r\n      console.log(this.attachmentDocuments);\r\n      this.attachmentDocument = new AttachmentDocument();\r\n    } else {\r\n      this.spinner.hide();\r\n      console.log(\"Null attachment.\");\r\n      this.myMainFile.nativeElement.value = null;\r\n      this.myMainInput.nativeElement.value = null;\r\n      this.sweetAlertService.customErrorMessage(\r\n        \"Attachment cannot be uploaded.\"\r\n      );\r\n    }\r\n  }\r\n\r\n  viewS2SupportDoc() {\r\n    console.log(\"uploaded\", this.uploadedFileSupportive);\r\n    console.log(\"uploaded\", this.attachmentDocuments);\r\n    console.log(\"s2Upport\", this.s2SupportAttchmentDocuments);\r\n    console.log(\"s2\", this.s2Appplication);\r\n    console.log(\"s1\", this.s1Application);\r\n    // console.log(\"S2 SUPPORTIVE\", );\r\n    console.log(\"S2 SUPPORTIVE!! \", this.s2SupportDocument);\r\n    let fileURL: string = this.s2SupportDocument.fileURL;\r\n    window.open(fileURL);\r\n  }\r\n\r\n  openDocument() {}\r\n\r\n  viewDocument(typeOfDocument, isOriginal = true) {\r\n    console.log(this.s1Application.submissionType, typeOfDocument);\r\n\r\n    if (this.tabLabel === SUBMISSION_TYPE.ORIGINAL) {\r\n      this.attachmentDocuments = JSON.parse(\r\n        JSON.stringify(this.originalAttachmentDocuments)\r\n      );\r\n\r\n      console.log(this.attachmentDocuments);\r\n    } else if (\r\n      this.tabLabel === SUBMISSION_TYPE.REVISION &&\r\n      this.s1Application.decisionStatus !== APP_DECISION_STATUS.INCOMPLETE\r\n    ) {\r\n      this.attachmentDocuments = JSON.parse(\r\n        JSON.stringify(this.revisionAttachmentDocuments)\r\n      );\r\n    } else if (\r\n      this.tabLabel === SUBMISSION_TYPE.COMPLIANCE ||\r\n      this.s1Application.decisionStatus === APP_DECISION_STATUS.INCOMPLETE\r\n    ) {\r\n      this.attachmentDocuments = JSON.parse(\r\n        JSON.stringify(this.complianceAttachmentDocuments)\r\n      );\r\n    }\r\n\r\n    if (typeOfDocument === ATTACHMENT_TYPE.MAIN) {\r\n      console.log(isOriginal, this.uploadedFileMain);\r\n      if (this.uploadedFileMain && !isOriginal) {\r\n        window.open(this.uploadedFileMain.fileURL);\r\n      } else {\r\n        window.open(this.attachmentDocuments[0].fileURL);\r\n      }\r\n    } else if (typeOfDocument === ATTACHMENT_TYPE.SUPPORTIVE) {\r\n      if (this.uploadedFileSupportive && !isOriginal) {\r\n        window.open(this.uploadedFileSupportive.fileURL);\r\n      } else {\r\n        const supportiveDoc = this.attachmentDocuments.filter(\r\n          (res) => res.attachmentType === ATTACHMENT_TYPE.SUPPORTIVE\r\n        )[0];\r\n        window.open(supportiveDoc.fileURL);\r\n      }\r\n    } else if (typeOfDocument === ATTACHMENT_TYPE.REVISION_LETTER) {\r\n      if (this.uploadedFileRevision && !isOriginal) {\r\n        window.open(this.uploadedFileRevision.fileURL);\r\n      } else {\r\n        // const revisionLetterDoc = this.revisionLetterAttachment;\r\n        const revisionLetterDoc = this.attachmentDocuments.filter(\r\n          (res) => res.attachmentType === ATTACHMENT_TYPE.REVISION_LETTER\r\n        )[0];\r\n        window.open(revisionLetterDoc.fileURL);\r\n      }\r\n    }\r\n  }\r\n\r\n  viewDocument2(i) {\r\n    console.log(i);\r\n    window.open(i?.fileURL);\r\n  }\r\n\r\n  deleteUploadedFile2(obj) {\r\n    Swal.fire({\r\n      text: \"Are you sure you want to delete this document permanently?\",\r\n      icon: \"question\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Confirm\",\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.spinner.show();\r\n        if (\r\n          obj.submissionType === SUBMISSION_TYPE.REVISION &&\r\n          obj.decisionStatus !== APP_DECISION_STATUS.INCOMPLETE\r\n        ) {\r\n          this.revisionAttachmentDocuments = this.revisionAttachmentDocuments.filter(\r\n            (data) => data?.id !== obj.id\r\n          );\r\n        } else if (\r\n          obj.submissionType === SUBMISSION_TYPE.COMPLIANCE ||\r\n          obj.decisionStatus === APP_DECISION_STATUS.INCOMPLETE\r\n        ) {\r\n          this.complianceAttachmentDocuments = this.complianceAttachmentDocuments.filter(\r\n            (data) => data?.id !== obj.id\r\n          );\r\n        }\r\n        this.apiService\r\n          .save(ENDPOINTS.attachmentDocument + `/id/${obj.id}`, null)\r\n          .subscribe(\r\n            (res) => {\r\n              this.spinner.hide();\r\n              console.log(\"Attachment successfully deleted.\");\r\n            },\r\n            (err: any) => {\r\n              this.spinner.hide();\r\n              this.sweetAlertService.error(err);\r\n            }\r\n          );\r\n      }\r\n    });\r\n  }\r\n\r\n  deleteS2SupportDoc() {\r\n    Swal.fire({\r\n      text: \"Are you sure you want to delete this document permanently?\",\r\n      icon: \"question\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Confirm\",\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        if (\r\n          this.s2Appplication.submissionType === SUBMISSION_TYPE.ORIGINAL &&\r\n          (this.s2Appplication.internalStatus === APPLICATION_STATUS.SAVED ||\r\n            this.s2Appplication.internalStatus === \"\" ||\r\n            this.s2Appplication.internalStatus === undefined)\r\n        ) {\r\n          this.attachmentDocuments = this.s2SupportAttchmentDocuments;\r\n        }\r\n        let id = this.attachmentDocuments.filter(\r\n          (r) => r.attachmentType === ATTACHMENT_TYPE.SUPPORTIVE\r\n        )[this.s1Application.hasNoSupportingDocs ? 0 : 1].id;\r\n        this.supportDocAttachmentSize = 0;\r\n        // this.attachmentDocuments[this.s1Application.hasNoSupportingDocs? 0 : 1] = null;\r\n        this.s2SupportDocument = {};\r\n        this.s2Appplication.supportingAttachmentReference = null;\r\n        // this.showSupportiveDocumentViewButton = false;\r\n        // this.showSupportiveDocumentUploadButton = false;\r\n        // this.mySupportiveFile.nativeElement.value = null;\r\n        // this.mySupportiveInput.nativeElement.value = null;\r\n        // this.s1Application.supportingAttachmentReference = null;\r\n        console.log(\"result\", result);\r\n\r\n        this.apiService\r\n          .save(ENDPOINTS.attachmentDocument + `/id/${id}`, null)\r\n          .subscribe(\r\n            (res) => {\r\n              this.spinner.hide();\r\n              console.log(\"Attachment successfully deleted.\");\r\n            },\r\n            (err: any) => {\r\n              this.spinner.hide();\r\n              this.sweetAlertService.error(err);\r\n            }\r\n          );\r\n      }\r\n    });\r\n  }\r\n\r\n  deleteUploadedFile(documentType) {\r\n    console.log(\"DELETE...\");\r\n\r\n    let currentSubType = SUBMISSION_TYPE.ORIGINAL;\r\n\r\n    Swal.fire({\r\n      text: \"Are you sure you want to delete this document permanently?\",\r\n      icon: \"question\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Confirm\",\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        let id = \"\";\r\n        // this.spinner.show();\r\n\r\n        // new appform - original\r\n        if (\r\n          this.s1Application.submissionType === SUBMISSION_TYPE.ORIGINAL &&\r\n          (this.s1Application.internalStatus === APPLICATION_STATUS.SAVED ||\r\n            this.s1Application.internalStatus === \"\" ||\r\n            this.s1Application.internalStatus === undefined)\r\n        ) {\r\n          this.attachmentDocuments = this.originalAttachmentDocuments;\r\n        }\r\n\r\n        // approved - original = for revision\r\n        else if (\r\n          this.s1Application.submissionType === SUBMISSION_TYPE.ORIGINAL &&\r\n          (this.s1Application.internalStatus ===\r\n            APPLICATION_STATUS.S1_APPLICATION_REVIEWED ||\r\n            this.s1Application.internalStatus ===\r\n              APPLICATION_STATUS_FOR_COMPLIANCE.COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER) &&\r\n          (this.s1Application.decisionStatus === APPLICATION_STATUS.APPROVED ||\r\n            this.s1Application.decisionStatus === \"APPROVED W/ CAUTION\")\r\n        ) {\r\n          this.attachmentDocuments = this.tempRevisionAttachmentDocuments;\r\n          currentSubType = SUBMISSION_TYPE.REVISION;\r\n        }\r\n\r\n        // incomplete - original = for compliance\r\n        // incomplete - compliance = for compliance\r\n        // incomplete - revision = for compliance\r\n        else if (\r\n          this.s1Application.decisionStatus === APPLICATION_STATUS.INCOMPLETE &&\r\n          (this.s1Application.internalStatus ===\r\n            APPLICATION_STATUS.S1_APPLICATION_REVIEWED ||\r\n            this.s1Application.internalStatus ===\r\n              APPLICATION_STATUS_FOR_COMPLIANCE.COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER ||\r\n            this.s1Application.internalStatus ===\r\n              APPLICATION_STATUS_REVISION.REVISION_SCREENED ||\r\n            this.s1Application.internalStatus ===\r\n              APPLICATION_STATUS_FOR_COMPLIANCE.COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER ||\r\n            this.s1Application.internalStatus ===\r\n              APPLICATION_STATUS.S1_APPLICATION_REJECTED)\r\n        ) {\r\n          this.attachmentDocuments = this.tempComplianceAttachmentDocuments;\r\n          currentSubType = SUBMISSION_TYPE.COMPLIANCE;\r\n        }\r\n        console.log(this.attachmentDocuments);\r\n        console.log(\"currentSubType \", currentSubType);\r\n\r\n        if (documentType === ATTACHMENT_TYPE.MAIN) {\r\n          id = this.attachmentDocuments[0].id;\r\n          this.mainDocAttachmentSize = 0;\r\n          this.attachmentDocuments[0] = null;\r\n          this.s1Application.mainAttachmentReference = null;\r\n          this.showMainDocumentViewButton = false;\r\n          this.myMainFile.nativeElement.value = null;\r\n          this.myMainInput.nativeElement.value = null;\r\n          this.showSupportDocumentFrame = false;\r\n          this.showMainDocumentUploadButton = false;\r\n          this.s1Application.mainAttachmentReference = null;\r\n        } else if (documentType === ATTACHMENT_TYPE.SUPPORTIVE) {\r\n          id = this.attachmentDocuments[1].id;\r\n          this.supportDocAttachmentSize = 0;\r\n          this.attachmentDocuments[1] = null;\r\n          // this.attachmentDocuments[1].originalFilename = null;\r\n          this.s1Application.supportingAttachmentReference = null;\r\n          this.showSupportiveDocumentViewButton = false;\r\n          this.showSupportiveDocumentUploadButton = false;\r\n          this.mySupportiveFile.nativeElement.value = null;\r\n          this.mySupportiveInput.nativeElement.value = null;\r\n          this.s1Application.supportingAttachmentReference = null;\r\n        } else {\r\n          id = this.attachmentDocuments[2].id;\r\n          this.revisionDocAttachmentSize = 0;\r\n          this.attachmentDocuments[2] = null;\r\n          // this.attachmentDocuments[2].originalFilename = null;\r\n          this.revisionLetterAttachment = null;\r\n          this.s1Application.revisionLetterAttachmentReference = null;\r\n          this.showRevisionLetterViewButton = false;\r\n          this.showRevisionLetterUploadButton = false;\r\n          this.myRevisionLetterFile.nativeElement.value = null;\r\n          // this.myRevisionLetterInput.nativeElement.value = null;\r\n          // this.attachmentDocuments = this.attachmentDocuments.filter((doc) =>\r\n          //   !doc.attachmentType.includes(ATTACHMENT_TYPE.REVISION_LETTER));\r\n        }\r\n\r\n        console.log(this.attachmentDocuments);\r\n\r\n        if (currentSubType === SUBMISSION_TYPE.REVISION) {\r\n          this.tempRevisionAttachmentDocuments = this.attachmentDocuments;\r\n        } else if (currentSubType === SUBMISSION_TYPE.COMPLIANCE) {\r\n          this.tempComplianceAttachmentDocuments = this.attachmentDocuments;\r\n        } else {\r\n          this.originalAttachmentDocuments = this.attachmentDocuments;\r\n        }\r\n\r\n        if (\r\n          // new - original\r\n          this.s1Application.internalStatus === undefined ||\r\n          this.s1Application.internalStatus === APPLICATION_STATUS.SAVED ||\r\n          // reviewed - approved - for revision\r\n          ((this.s1Application.internalStatus ===\r\n            APPLICATION_STATUS.S1_APPLICATION_REVIEWED ||\r\n            this.s1Application.internalStatus ===\r\n              APPLICATION_STATUS_FOR_COMPLIANCE.COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER) &&\r\n            (this.s1Application.decisionStatus ===\r\n              APPLICATION_STATUS.APPROVED ||\r\n              this.s1Application.decisionStatus === \"APPROVED W/ CAUTION\")) ||\r\n          // reviewed - incomplete - for compliance\r\n          // incomplete - incomplete - for compliance\r\n          ((this.s1Application.internalStatus ===\r\n            APPLICATION_STATUS.S1_APPLICATION_REVIEWED ||\r\n            this.s1Application.internalStatus ===\r\n              APPLICATION_STATUS_FOR_COMPLIANCE.COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER) &&\r\n            this.s1Application.decisionStatus === APPLICATION_STATUS.INCOMPLETE)\r\n        ) {\r\n          console.log(\"Trigger delete...\");\r\n\r\n          this.apiService\r\n            .save(ENDPOINTS.attachmentDocument + `/id/${id}`, null)\r\n            .subscribe(\r\n              (res) => {\r\n                this.spinner.hide();\r\n                console.log(\"Attachment successfully deleted.\");\r\n              },\r\n              (err: any) => {\r\n                this.spinner.hide();\r\n                this.sweetAlertService.error(err);\r\n              }\r\n            );\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  verifyNoDocumentAttached() {\r\n    this.s1Application.supportingAttachmentReference =\r\n      this.s1Application.supportingAttachmentReference === null ? \"\" : null;\r\n    this.safeURLSupportDoc = null;\r\n  }\r\n\r\n  setFormValidator() {\r\n    this.attachmentDocumentForm = this.formBuilder.group({\r\n      attachmentReference: [\"\"],\r\n      hasNoSupportingDocs: [\"\"],\r\n      typeOfMedium: [\"\"],\r\n      mediumExecution: [\"\"],\r\n      language: [\"\"],\r\n      dialect: [\"\"],\r\n      others: [\"\"],\r\n      sizeLength: [\"\"],\r\n      width: [\"\"],\r\n\r\n      multimediaLength: [\"\"],\r\n      multimediaSize: [\"\"],\r\n      applicationSingleMedia: [\"\"],\r\n      applicationMultimediaStatic: [\"\"],\r\n      applicationMultimediaMoving: [\"\"],\r\n    });\r\n  }\r\n}\r\n","<div class=\"row\">\r\n  <b\r\n    *ngIf=\"\r\n      currentUser?.userRole?.name == 'ROLE_APPLICANT' &&\r\n      applicationStage === 'S1-APPLICATION'\r\n    \"\r\n    ><b class=\"material-icons\">error_outline</b> Attachments' total file size\r\n    should not exceed 15MB.</b\r\n  >\r\n\r\n  <form [formGroup]=\"attachmentDocumentForm\">\r\n    <mat-tab-group\r\n      mat-align-tabs=\"center\"\r\n      class=\"mat-tab-group\"\r\n      (selectedTabChange)=\"changeTab($event)\"\r\n    >\r\n      <mat-tab label=\"SUPPORT DOCUMENT\" *ngIf=\"S2SupportDoc\">\r\n        <div class=\"mat-tab\">\r\n          <div class=\"col comment\">\r\n            <label>SUPPORT DOCUMENT</label>\r\n            <div class=\"row\">\r\n              <!-- <h4>\r\n                <i class=\"material-icons\">bookmark</i> &nbsp;{{labelMainDocument}}\r\n              </h4> -->\r\n              <br />\r\n              <div class=\"col-md-12\" appearance=\"outline\">\r\n                <mat-label *ngIf=\"s2SupportDocument\">Filename: </mat-label>\r\n                <input\r\n                  #mainInput\r\n                  matInput\r\n                  [value]=\"s2SupportDocument?.originalFilename\"\r\n                  disabled\r\n                  *ngIf=\"s2SupportDocument\"\r\n                /><br />\r\n\r\n                <input\r\n                  #mainFile\r\n                  class=\"file-upload\"\r\n                  type=\"file\"\r\n                  accept=\".pdf\"\r\n                  (change)=\"selectS2SupprtDoc($event)\"\r\n                  [hidden]=\"\r\n                    (isAscUser && isDisableFieldOnUpdate) ||\r\n                    s2SupportDocument?.originalFilename != null\r\n                  \"\r\n                  *ngIf=\"\r\n                    s2SupportAttchmentDocuments?.length >= 0 ||\r\n                    (originalAttachmentDocuments?.length >= 1 &&\r\n                      originalAttachmentDocuments[0] === null) ||\r\n                    s1Application?.internalStatus == 'SAVED' ||\r\n                    originalAttachmentDocuments[0]?.originalFilename != null\r\n                  \"\r\n                />\r\n              </div>\r\n              <div class=\"row\"><br /></div>\r\n              <div class=\"col-md-12\" appearance=\"outline\">\r\n                <button\r\n                  mat-raised-button\r\n                  class=\"button-red button-right\"\r\n                  (click)=\"viewS2SupportDoc()\"\r\n                  *ngIf=\"validateDeleteBtn() || s2SupportDocument\"\r\n                >\r\n                  <i class=\"material-icons add-document\">open_in_new</i> VIEW\r\n                  DOCUMENT\r\n                </button>\r\n                &nbsp; &nbsp;\r\n                <button\r\n                  mat-raised-button\r\n                  class=\"button-red button-right\"\r\n                  (click)=\"deleteS2SupportDoc()\"\r\n                  *ngIf=\"validateDeleteBtn()\"\r\n                >\r\n                  <i class=\"material-icons add-document\">delete</i> DELETE\r\n                  ATTACHMENT\r\n                </button>\r\n                <!-- [hidden]=\"(!showMainDocumentViewButton) ||\r\n                  (currentUser?.userRole?.name!='ROLE_APPLICANT' && currentUser?.userRole?.name!='ROLE_ENCODER') ||\r\n                  (currentUser.userRole.name=='ROLE_ENCODER' && s1Application?.internalStatus !== undefined ) ||\r\n                  applicationStage === 'S2-APPLICATION' || applicationStage === 'S1-Preview' || s1Application?.decisionStatus=='APPROVED'||s1Application?.decisionStatus=='APPROVED W/ CAUTION'\" -->\r\n\r\n                &nbsp; &nbsp;\r\n                <button\r\n                  mat-raised-button\r\n                  class=\"button-red button-right\"\r\n                  (click)=\"uploadDocument()\"\r\n                  [disabled]=\"!safeURLSupportDoc\"\r\n                  [hidden]=\"isAscUser && isDisableFieldOnUpdate\"\r\n                  *ngIf=\"safeURLSupportDoc\"\r\n                >\r\n                  <i class=\"material-icons add-document\">upload</i> UPLOAD\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </mat-tab>\r\n\r\n      <!-- TAB FOR ORIGINAL -->\r\n      <mat-tab label=\"ORIGINAL\" *ngIf=\"!S2SupportDoc\">\r\n        <div class=\"mat-tab\">\r\n          <div class=\"col comment\">\r\n            <label>ORIGINAL</label>\r\n            <!-- MAIN DOCUMENT -->\r\n            <div class=\"row\">\r\n              <h4>\r\n                <i class=\"material-icons\">bookmark</i> &nbsp;{{\r\n                  labelMainDocument ? labelMainDocument : \"MAIN DOCUMENT\"\r\n                }}\r\n              </h4>\r\n              <br />\r\n              <div class=\"col-md-12\" appearance=\"outline\">\r\n                <mat-label\r\n                  *ngIf=\"originalAttachmentDocuments[0]?.originalFilename\"\r\n                  >Filename:\r\n                </mat-label>\r\n                <input\r\n                  #mainInput\r\n                  matInput\r\n                  [value]=\"originalAttachmentDocuments[0]?.originalFilename\"\r\n                  disabled\r\n                  *ngIf=\"originalAttachmentDocuments[0]?.originalFilename\"\r\n                /><br />\r\n\r\n                <input\r\n                  #mainFile\r\n                  class=\"file-upload\"\r\n                  type=\"file\"\r\n                  accept=\".pdf\"\r\n                  (change)=\"selectFile($event, 'MAIN')\"\r\n                  [hidden]=\"\r\n                    (isAscUser && isDisableFieldOnUpdate) ||\r\n                    originalAttachmentDocuments[0]?.originalFilename != null\r\n                  \"\r\n                  *ngIf=\"\r\n                    originalAttachmentDocuments?.length == 0 ||\r\n                    (originalAttachmentDocuments?.length >= 1 &&\r\n                      originalAttachmentDocuments[0] === null) ||\r\n                    s1Application?.internalStatus == 'SAVED' ||\r\n                    originalAttachmentDocuments[0]?.originalFilename != null\r\n                  \"\r\n                />\r\n              </div>\r\n\r\n              <div class=\"row\"><br /></div>\r\n              <div class=\"col-md-12\" appearance=\"outline\">\r\n                <button\r\n                  mat-raised-button\r\n                  class=\"button-red button-right\"\r\n                  (click)=\"viewDocument('MAIN')\"\r\n                  *ngIf=\"\r\n                    showMainDocumentViewButton ||\r\n                    originalAttachmentDocuments[0]?.originalFilename\r\n                  \"\r\n                >\r\n                  <i class=\"material-icons add-document\">open_in_new</i> VIEW\r\n                  DOCUMENT\r\n                </button>\r\n                &nbsp; &nbsp;\r\n                <button\r\n                  mat-raised-button\r\n                  class=\"button-red button-right\"\r\n                  (click)=\"deleteUploadedFile('MAIN')\"\r\n                  [hidden]=\"\r\n                    (currentUser?.userRole?.name != 'ROLE_APPLICANT' &&\r\n                      currentUser?.userRole?.name != 'ROLE_ENCODER') ||\r\n                    (currentUser.userRole.name == 'ROLE_ENCODER' &&\r\n                      s1Application?.internalStatus !== undefined) ||\r\n                    applicationStage === 'S2-APPLICATION' ||\r\n                    applicationStage === 'S1-Preview' ||\r\n                    s1Application?.decisionStatus == 'APPROVED' ||\r\n                    s1Application?.decisionStatus == 'APPROVED W/ CAUTION' ||\r\n                    s1Application?.decisionStatus == 'INCOMPLETE'\r\n                  \"\r\n                  *ngIf=\"\r\n                    showMainDocumentViewButton ||\r\n                    originalAttachmentDocuments[0]?.originalFilename\r\n                  \"\r\n                >\r\n                  <i class=\"material-icons add-document\">delete</i> DELETE\r\n                  ATTACHMENT\r\n                </button>\r\n                <!-- [hidden]=\"(!showMainDocumentViewButton) ||\r\n                  (currentUser?.userRole?.name!='ROLE_APPLICANT' && currentUser?.userRole?.name!='ROLE_ENCODER') ||\r\n                  (currentUser.userRole.name=='ROLE_ENCODER' && s1Application?.internalStatus !== undefined ) ||\r\n                  applicationStage === 'S2-APPLICATION' || applicationStage === 'S1-Preview' || s1Application?.decisionStatus=='APPROVED'||s1Application?.decisionStatus=='APPROVED W/ CAUTION'\" -->\r\n\r\n                &nbsp; &nbsp;\r\n                <button\r\n                  mat-raised-button\r\n                  class=\"button-red button-right\"\r\n                  (click)=\"uploadDocument()\"\r\n                  [disabled]=\"!safeURLMainDoc || !showMainDocumentUploadButton\"\r\n                  [hidden]=\"\r\n                    (isAscUser && isDisableFieldOnUpdate) ||\r\n                    (s1Application?.submissionType === 'ORIGINAL' &&\r\n                      (s1Application?.decisionStatus == 'APPROVED' ||\r\n                        s1Application?.decisionStatus ==\r\n                          'APPROVED W/ CAUTION' ||\r\n                        s1Application?.decisionStatus == 'INCOMPLETE'))\r\n                  \"\r\n                  *ngIf=\"\r\n                    originalAttachmentDocuments[0]?.originalFilename == null ||\r\n                    showMainDocumentUploadButton\r\n                  \"\r\n                >\r\n                  <i class=\"material-icons add-document\">upload</i> UPLOAD\r\n                </button>\r\n              </div>\r\n              <div class=\"col-md-12\">\r\n                <hr />\r\n              </div>\r\n            </div>\r\n\r\n            <!-- SUPPORTING DOC -->\r\n            <div\r\n              class=\"row\"\r\n              *ngIf=\"\r\n                showSupportDocumentFrame == true ||\r\n                originalAttachmentDocuments?.length > 0\r\n              \"\r\n            >\r\n              <h4>\r\n                <i class=\"material-icons\">bookmark</i> &nbsp;SUPPORT DOCUMENTS\r\n              </h4>\r\n\r\n              <!-- Display if no support document was attached -->\r\n              <div\r\n                class=\"col-md-12\"\r\n                appearance=\"outline\"\r\n                [hidden]=\"\r\n                  (isAscUser && isDisableFieldOnUpdate) ||\r\n                  applicationStage === 'S2-APPLICATION'\r\n                \"\r\n                *ngIf=\"\r\n                  ((s1Application?.internalStatus ===\r\n                    'S1_APPLICATION_REVIEWED' ||\r\n                    s1Application?.internalStatus ===\r\n                      'COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER') &&\r\n                    (s1Application?.decisionStatus == 'APPROVED' ||\r\n                      s1Application?.decisionStatus == 'APPROVED W/ CAUTION' ||\r\n                      s1Application?.decisionStatus === 'INCOMPLETE')) ||\r\n                  originalAttachmentDocuments?.length > 0\r\n                \"\r\n              >\r\n                <mat-checkbox\r\n                  (click)=\"verifyNoDocumentAttached()\"\r\n                  [(ngModel)]=\"s1Application.hasNoSupportingDocs\"\r\n                  (checked)=\"(s1Application.hasNoSupportingDocs)\"\r\n                  formControlName=\"hasNoSupportingDocs\"\r\n                  [hidden]=\"\r\n                    originalAttachmentDocuments[1]?.originalFilename ||\r\n                    s1Application?.internalStatus ===\r\n                      'S1_APPLICATION_REVIEWED' ||\r\n                    s1Application?.internalStatus ===\r\n                      'COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER' ||\r\n                    s1Application?.internalStatus === 'REVISION_SCREENED' ||\r\n                    (s1Application?.internalStatus ===\r\n                      'S1_APPLICATION_REJECTED' &&\r\n                      (s1Application?.decisionStatus == 'APPROVED' ||\r\n                        s1Application?.decisionStatus ==\r\n                          'APPROVED W/ CAUTION' ||\r\n                        s1Application?.decisionStatus == 'INCOMPLETE'))\r\n                  \"\r\n                  *ngIf=\"\r\n                    (currentUser.userRole.name == 'ROLE_APPLICANT' &&\r\n                      originalAttachmentDocuments?.length > 0) ||\r\n                    (currentUser.userRole.name == 'ROLE_ENCODER' &&\r\n                      s1Application?.internalStatus === undefined)\r\n                  \"\r\n                >\r\n                  I certify that no supporting document is attached to this S1\r\n                  application.</mat-checkbox\r\n                >\r\n                <br />\r\n              </div>\r\n\r\n              <p\r\n                [hidden]=\"\r\n                  originalAttachmentDocuments[1]?.originalFilename ||\r\n                  (currentUser.userRole.name == 'ROLE_ENCODER' &&\r\n                    s1Application?.internalStatus === undefined)\r\n                \"\r\n                *ngIf=\"\r\n                  isAscUser ||\r\n                  currentUser.userRole.name == 'ROLE_ADMIN' ||\r\n                  currentUser.userRole.name == 'ROLE_SUPER_ADMIN' ||\r\n                  applicationStage === 'S2-APPLICATION' ||\r\n                  applicationStage === 'S1-Preview' ||\r\n                  (s1Application?.internalStatus ===\r\n                    'S1_APPLICATION_REVIEWED' &&\r\n                    (s1Application?.decisionStatus == 'APPROVED' ||\r\n                      s1Application?.decisionStatus ==\r\n                        'APPROVED W/ CAUTION')) ||\r\n                  (s1Application?.internalStatus ===\r\n                    'COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER' &&\r\n                    s1Application?.decisionStatus === 'INCOMPLETE') ||\r\n                  (s1Application?.internalStatus === 'REVISION_SCREENED' &&\r\n                    s1Application?.decisionStatus === 'INCOMPLETE') ||\r\n                  (currentUser.userRole.name == 'ROLE_APPLICANT' &&\r\n                    s1Application?.hasNoSupportingDocs &&\r\n                    s1Application?.internalStatus !== 'SAVED' &&\r\n                    s1Application?.internalStatus !== undefined)\r\n                \"\r\n              >\r\n                Supporting Document was not submitted.\r\n              </p>\r\n              <div class=\"col-md-12\"><br /></div>\r\n\r\n              <div\r\n                *ngIf=\"\r\n                  !s1Application.hasNoSupportingDocs ||\r\n                  originalAttachmentDocuments[1]?.originalFilename === null\r\n                \"\r\n              >\r\n                <div class=\"col-md-12\" appearance=\"outline\">\r\n                  <mat-label\r\n                    *ngIf=\"originalAttachmentDocuments[1]?.originalFilename\"\r\n                    >Filename:\r\n                  </mat-label>\r\n                  <input\r\n                    #supportiveInput\r\n                    matInput\r\n                    [value]=\"originalAttachmentDocuments[1]?.originalFilename\"\r\n                    disabled\r\n                    *ngIf=\"originalAttachmentDocuments[1]?.originalFilename\"\r\n                  /><br />\r\n\r\n                  <input\r\n                    #supportiveFile\r\n                    class=\"file-upload\"\r\n                    type=\"file\"\r\n                    accept=\".pdf\"\r\n                    (change)=\"selectFile($event, 'SUPPORTIVE')\"\r\n                    [hidden]=\"\r\n                      (isAscUser && isDisableFieldOnUpdate) ||\r\n                      s1Application.hasNoSupportingDocs ||\r\n                      originalAttachmentDocuments[1]?.originalFilename !=\r\n                        null ||\r\n                      s1Application?.internalStatus ===\r\n                        'S1_APPLICATION_REVIEWED' ||\r\n                      (s1Application?.internalStatus ===\r\n                        'COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER' &&\r\n                        (s1Application?.decisionStatus === 'APPROVED' ||\r\n                          s1Application?.decisionStatus ===\r\n                            'APPROVED W/ CAUTION' ||\r\n                          s1Application?.decisionStatus === 'INCOMPLETE')) ||\r\n                      (currentUser.userRole.name == 'ROLE_ENCODER' &&\r\n                        s1Application?.internalStatus !== undefined) ||\r\n                      s1Application?.submissionType === 'REVISION' ||\r\n                      s1Application?.submissionType === 'COMPLIANCE'\r\n                    \"\r\n                    *ngIf=\"\r\n                      originalAttachmentDocuments?.length == 1 ||\r\n                      (originalAttachmentDocuments?.length > 1 &&\r\n                        originalAttachmentDocuments[1] === null) ||\r\n                      originalAttachmentDocuments[1]?.originalFilename !=\r\n                        null ||\r\n                      !safeURLSupportDoc ||\r\n                      !showSupportiveDocumentUploadButton\r\n                    \"\r\n                  />\r\n                </div>\r\n\r\n                <div class=\"row\"><br /></div>\r\n                <div class=\"col-md-12\" appearance=\"outline\">\r\n                  <button\r\n                    mat-raised-button\r\n                    class=\"button-red button-right\"\r\n                    (click)=\"viewDocument('SUPPORTIVE')\"\r\n                    *ngIf=\"\r\n                      showSupportiveDocumentViewButton ||\r\n                      originalAttachmentDocuments[1]?.originalFilename\r\n                    \"\r\n                  >\r\n                    <i class=\"material-icons add-document\">open_in_new</i> VIEW\r\n                    DOCUMENT\r\n                  </button>\r\n                  &nbsp; &nbsp;\r\n                  <button\r\n                    mat-raised-button\r\n                    class=\"button-red button-right\"\r\n                    (click)=\"deleteUploadedFile('SUPPORTIVE')\"\r\n                    [hidden]=\"\r\n                      (currentUser?.userRole?.name != 'ROLE_APPLICANT' &&\r\n                        currentUser?.userRole?.name != 'ROLE_ENCODER') ||\r\n                      (currentUser.userRole.name == 'ROLE_ENCODER' &&\r\n                        s1Application?.internalStatus !== undefined) ||\r\n                      applicationStage === 'S2-APPLICATION' ||\r\n                      applicationStage === 'S1-Preview' ||\r\n                      s1Application?.decisionStatus == 'APPROVED' ||\r\n                      s1Application?.decisionStatus == 'APPROVED W/ CAUTION' ||\r\n                      s1Application?.decisionStatus == 'INCOMPLETE'\r\n                    \"\r\n                    *ngIf=\"\r\n                      showSupportiveDocumentViewButton ||\r\n                      originalAttachmentDocuments[1]?.originalFilename\r\n                    \"\r\n                  >\r\n                    <i class=\"material-icons add-document\">delete</i> DELETE\r\n                    ATTACHMENT\r\n                  </button>\r\n                  &nbsp; &nbsp;\r\n                  <button\r\n                    mat-raised-button\r\n                    class=\"button-red button-right\"\r\n                    (click)=\"uploadDocument()\"\r\n                    [disabled]=\"\r\n                      !safeURLSupportDoc || !showSupportiveDocumentUploadButton\r\n                    \"\r\n                    [hidden]=\"\r\n                      (isAscUser && isDisableFieldOnUpdate) ||\r\n                      (s1Application?.submissionType === 'ORIGINAL' &&\r\n                        (s1Application?.decisionStatus == 'APPROVED' ||\r\n                          s1Application?.decisionStatus ==\r\n                            'APPROVED W/ CAUTION' ||\r\n                          s1Application?.decisionStatus == 'INCOMPLETE'))\r\n                    \"\r\n                    *ngIf=\"showSupportiveDocumentUploadButton\"\r\n                  >\r\n                    <i class=\"material-icons add-document\">upload</i> UPLOAD\r\n                  </button>\r\n                </div>\r\n                <div class=\"row\"><br /></div>\r\n                <br />\r\n              </div>\r\n            </div>\r\n\r\n            <div\r\n              class=\"no-record\"\r\n              *ngIf=\"\r\n                originalAttachmentDocuments?.length === 0 &&\r\n                originalAttachmentDocuments[0]?.originalFilename === undefined\r\n              \"\r\n            >\r\n              No results found.\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </mat-tab>\r\n      <!-- END OF TAB FOR ORIGINAL -->\r\n\r\n      <!-- ////////////////////////////////////////// DYNAMIC ////////////////////////////////////////// -->\r\n\r\n      <!-- TAB FOR REVISION -->\r\n      <mat-tab\r\n        label=\"REVISION\"\r\n        *ngIf=\"\r\n          revisionAttachmentDocuments?.length > 0 ||\r\n          ((s1Application?.internalStatus === 'S1_APPLICATION_REVIEWED' ||\r\n            s1Application?.internalStatus ===\r\n              'COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER') &&\r\n            (s1Application?.decisionStatus == 'APPROVED' ||\r\n              s1Application?.decisionStatus === 'APPROVED W/ CAUTION') &&\r\n            applicationStage !== 'S2-APPLICATION')\r\n        \"\r\n      >\r\n        <div class=\"mat-tab\">\r\n          <div class=\"col comment\">\r\n            <label>REVISION</label>\r\n            <!---------- NEW ATTACHMENTS ---------->\r\n\r\n            <!-- MAIN DOCUMENT -->\r\n            <div\r\n              class=\"row\"\r\n              [hidden]=\"\r\n                (isAscUser && isDisableFieldOnUpdate) ||\r\n                applicationStage === 'S2-APPLICATION' ||\r\n                (currentUser.userRole.name == 'ROLE_ENCODER' &&\r\n                  s1Application?.internalStatus !== undefined)\r\n              \"\r\n              *ngIf=\"\r\n                showSupportDocumentFrameR ||\r\n                tempRevisionAttachmentDocuments?.length > 0 ||\r\n                ((s1Application?.internalStatus === 'S1_APPLICATION_REVIEWED' ||\r\n                  s1Application?.internalStatus ===\r\n                    'COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER') &&\r\n                  (s1Application?.decisionStatus === 'APPROVED' ||\r\n                    s1Application?.decisionStatus === 'APPROVED W/ CAUTION'))\r\n              \"\r\n            >\r\n              <!-- <h4>\r\n                <i class=\"material-icons\">bookmark</i> &nbsp;ss{{\r\n                  labelMainDocument ? labelMainDocument : \"MAIN DOCUMENTSS\"\r\n                }}\r\n              </h4> -->\r\n              <br />\r\n              <div class=\"col-md-12\" appearance=\"outline\">\r\n                <mat-label\r\n                  *ngIf=\"\r\n                    tempRevisionAttachmentDocuments?.length > 0 &&\r\n                    tempRevisionAttachmentDocuments[0]?.originalFilename\r\n                  \"\r\n                  >Filename:\r\n                </mat-label>\r\n                <input\r\n                  #mainInput\r\n                  matInput\r\n                  *ngIf=\"!s1Application?.hasOngoingRevision\"\r\n                  [value]=\"tempRevisionAttachmentDocuments[0]?.originalFilename\"\r\n                  disabled\r\n                /><br />\r\n\r\n                <input\r\n                  #mainFile\r\n                  class=\"file-upload\"\r\n                  type=\"file\"\r\n                  accept=\".pdf\"\r\n                  (change)=\"selectFile($event, 'MAIN')\"\r\n                  [hidden]=\"\r\n                    (isAscUser && isDisableFieldOnUpdate) ||\r\n                    tempRevisionAttachmentDocuments[0]?.originalFilename\r\n                  \"\r\n                  *ngIf=\"\r\n                    (s1Application?.internalStatus ===\r\n                      'S1_APPLICATION_REVIEWED' ||\r\n                      s1Application?.internalStatus ===\r\n                        'COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER') &&\r\n                    (s1Application?.decisionStatus === 'APPROVED' ||\r\n                      s1Application?.decisionStatus === 'APPROVED W/ CAUTION')\r\n                  \"\r\n                />\r\n              </div>\r\n\r\n              <div class=\"row\"><br /></div>\r\n              <div class=\"col-md-12\" appearance=\"outline\">\r\n                <button\r\n                  mat-raised-button\r\n                  class=\"button-red button-right\"\r\n                  (click)=\"viewDocument('MAIN', false)\"\r\n                  *ngIf=\"\r\n                    showMainDocumentViewButton ||\r\n                    tempRevisionAttachmentDocuments[0]?.originalFilename\r\n                  \"\r\n                >\r\n                  <i class=\"material-icons add-document\">open_in_new</i> VIEW\r\n                  DOCUMENT\r\n                </button>\r\n                &nbsp; &nbsp;\r\n                <button\r\n                  mat-raised-button\r\n                  class=\"button-red button-right\"\r\n                  (click)=\"deleteUploadedFile('MAIN')\"\r\n                  *ngIf=\"\r\n                    showMainDocumentViewButton ||\r\n                    tempRevisionAttachmentDocuments[0]?.originalFilename\r\n                  \"\r\n                >\r\n                  <i class=\"material-icons add-document\">delete</i> DELETE\r\n                  ATTACHMENT\r\n                </button>\r\n                &nbsp; &nbsp;\r\n\r\n                <button\r\n                  mat-raised-button\r\n                  class=\"button-red button-right\"\r\n                  (click)=\"uploadDocument()\"\r\n                  [disabled]=\"\r\n                    !safeURLMainDocR || !showMainDocumentUploadButtonR\r\n                  \"\r\n                  [hidden]=\"isAscUser && isDisableFieldOnUpdate\"\r\n                  *ngIf=\"showMainDocumentUploadButtonR\"\r\n                >\r\n                  <i class=\"material-icons add-document\">upload</i> UPLOAD\r\n                </button>\r\n              </div>\r\n              <div class=\"col-md-12\">\r\n                <hr />\r\n              </div>\r\n            </div>\r\n\r\n            <!-- SUPPORTING DOC -->\r\n            <div\r\n              class=\"row\"\r\n              [hidden]=\"\r\n                (isAscUser && isDisableFieldOnUpdate) ||\r\n                applicationStage === 'S2-APPLICATION' ||\r\n                (currentUser.userRole.name == 'ROLE_ENCODER' &&\r\n                  s1Application?.internalStatus !== undefined)\r\n              \"\r\n              *ngIf=\"\r\n                showSupportDocumentFrameR ||\r\n                tempRevisionAttachmentDocuments?.length > 0 ||\r\n                ((s1Application?.internalStatus === 'S1_APPLICATION_REVIEWED' ||\r\n                  s1Application?.internalStatus ===\r\n                    'COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER') &&\r\n                  (s1Application?.decisionStatus === 'APPROVED' ||\r\n                    s1Application?.decisionStatus === 'APPROVED W/ CAUTION'))\r\n              \"\r\n            >\r\n              <h4>\r\n                <i class=\"material-icons\">bookmark</i> &nbsp;SUPPORT DOCUMENTS\r\n              </h4>\r\n\r\n              <!-- Display if no support document was attached -->\r\n              <div\r\n                class=\"col-md-12\"\r\n                appearance=\"outline\"\r\n                [hidden]=\"\r\n                  (isAscUser && isDisableFieldOnUpdate) ||\r\n                  applicationStage === 'S2-APPLICATION'\r\n                \"\r\n                *ngIf=\"\r\n                  tempRevisionAttachmentDocuments?.length < 2 ||\r\n                  tempRevisionAttachmentDocuments?.length != 2 ||\r\n                  ((s1Application?.internalStatus ===\r\n                    'S1_APPLICATION_REVIEWED' ||\r\n                    s1Application?.internalStatus ===\r\n                      'COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER') &&\r\n                    s1Application?.decisionStatus === 'INCOMPLETE')\r\n                \"\r\n              >\r\n                <mat-checkbox\r\n                  (click)=\"verifyNoDocumentAttached()\"\r\n                  [(ngModel)]=\"s1Application.hasNoSupportingDocs\"\r\n                  (checked)=\"(s1Application.hasNoSupportingDocs)\"\r\n                  formControlName=\"hasNoSupportingDocs\"\r\n                  [hidden]=\"\r\n                    tempRevisionAttachmentDocuments[1]?.originalFilename\r\n                  \"\r\n                  *ngIf=\"\r\n                    currentUser.userRole.name == 'ROLE_APPLICANT' ||\r\n                    (currentUser.userRole.name == 'ROLE_ENCODER' &&\r\n                      s1Application?.internalStatus === undefined)\r\n                  \"\r\n                >\r\n                  I certify that no supporting document is attached to this S1\r\n                  application.</mat-checkbox\r\n                >\r\n                <br />\r\n              </div>\r\n\r\n              <p\r\n                *ngIf=\"\r\n                  (s1Application?.submissionType === 'REVISION' &&\r\n                    s1Application?.hasNoSupportingDocs &&\r\n                    s1Application?.internalStatus !== undefined &&\r\n                    s1Application?.internalStatus !==\r\n                      'S1_APPLICATION_REVIEWED' &&\r\n                    s1Application?.decisionStatus !== 'INCOMPLETE') ||\r\n                  (s1Application?.hasNoSupportingDocs &&\r\n                    applicationStage === 'S1-Preview')\r\n                \"\r\n              >\r\n                Supporting Document was not submitted.\r\n              </p>\r\n              <div class=\"col-md-12\"><br /></div>\r\n\r\n              <div *ngIf=\"!s1Application?.hasNoSupportingDocs\">\r\n                <div class=\"col-md-12\" appearance=\"outline\">\r\n                  <mat-label\r\n                    *ngIf=\"\r\n                      tempRevisionAttachmentDocuments?.length > 0 &&\r\n                      tempRevisionAttachmentDocuments[1]?.originalFilename\r\n                    \"\r\n                    >Filename:\r\n                  </mat-label>\r\n                  <input\r\n                    #supportiveInput\r\n                    matInput\r\n                    [value]=\"\r\n                      tempRevisionAttachmentDocuments[1]?.originalFilename\r\n                    \"\r\n                    disabled\r\n                    *ngIf=\"\r\n                      tempRevisionAttachmentDocuments?.length > 0 &&\r\n                      tempRevisionAttachmentDocuments[1]?.originalFilename\r\n                    \"\r\n                  /><br />\r\n\r\n                  <input\r\n                    #supportiveFile\r\n                    class=\"file-upload\"\r\n                    type=\"file\"\r\n                    accept=\".pdf\"\r\n                    (change)=\"selectFile($event, 'SUPPORTIVE')\"\r\n                    [hidden]=\"\r\n                      (isAscUser && isDisableFieldOnUpdate) ||\r\n                      tempRevisionAttachmentDocuments[1]?.originalFilename\r\n                    \"\r\n                    *ngIf=\"\r\n                      tempRevisionAttachmentDocuments?.length <= 2 ||\r\n                      (tempRevisionAttachmentDocuments?.length == 2 &&\r\n                        tempRevisionAttachmentDocuments[1] === null) ||\r\n                      s1Application?.internalStatus == 'SAVED' ||\r\n                      tempRevisionAttachmentDocuments[1]?.originalFilename !=\r\n                        null ||\r\n                      ((s1Application?.internalStatus ==\r\n                        'S1_APPLICATION_REVIEWED' ||\r\n                        s1Application?.internalStatus ==\r\n                          'COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER') &&\r\n                        (s1Application?.decisionStatus == 'INCOMPLETE' ||\r\n                          s1Application?.decisionStatus == 'APPROVED' ||\r\n                          s1Application?.decisionStatus ==\r\n                            'APPROVED W/ CAUTION'))\r\n                    \"\r\n                  />\r\n                </div>\r\n\r\n                <div class=\"row\"><br /></div>\r\n                <div class=\"col-md-12\" appearance=\"outline\">\r\n                  <button\r\n                    mat-raised-button\r\n                    class=\"button-red button-right\"\r\n                    (click)=\"viewDocument('SUPPORTIVE', false)\"\r\n                    *ngIf=\"\r\n                      showSupportiveDocumentViewButton ||\r\n                      tempRevisionAttachmentDocuments[1]?.originalFilename\r\n                    \"\r\n                  >\r\n                    <i class=\"material-icons add-document\">open_in_new</i> VIEW\r\n                    DOCUMENT\r\n                  </button>\r\n                  &nbsp; &nbsp;\r\n                  <button\r\n                    mat-raised-button\r\n                    class=\"button-red button-right\"\r\n                    (click)=\"deleteUploadedFile('SUPPORTIVE')\"\r\n                    *ngIf=\"\r\n                      showSupportiveDocumentViewButton ||\r\n                      tempRevisionAttachmentDocuments[1]?.originalFilename\r\n                    \"\r\n                  >\r\n                    <i class=\"material-icons add-document\">delete</i> DELETE\r\n                    ATTACHMENT\r\n                  </button>\r\n                  &nbsp; &nbsp;\r\n                  <button\r\n                    mat-raised-button\r\n                    class=\"button-red button-right\"\r\n                    (click)=\"uploadDocument()\"\r\n                    [hidden]=\"isAscUser && isDisableFieldOnUpdate\"\r\n                    *ngIf=\"showSupportiveDocumentUploadButton\"\r\n                  >\r\n                    <i class=\"material-icons add-document\">upload</i> UPLOAD\r\n                  </button>\r\n                  <!-- [disabled]=\"!safeURLSupportDocR||!showSupportiveDocumentUploadButtonR\" -->\r\n                </div>\r\n                <div class=\"row\"><br /></div>\r\n                <br />\r\n              </div>\r\n            </div>\r\n\r\n            <!-- FOR REVISION - REVISION LETTER -->\r\n            <div\r\n              class=\"row\"\r\n              [hidden]=\"\r\n                (isAscUser && isDisableFieldOnUpdate) ||\r\n                applicationStage === 'S2-APPLICATION' ||\r\n                (currentUser.userRole.name == 'ROLE_ENCODER' &&\r\n                  s1Application?.internalStatus !== undefined)\r\n              \"\r\n              *ngIf=\"\r\n                (s1Application?.internalStatus === 'S1_APPLICATION_REVIEWED' ||\r\n                  s1Application?.internalStatus ===\r\n                    'COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER') &&\r\n                (s1Application?.decisionStatus == 'APPROVED' ||\r\n                  s1Application?.decisionStatus == 'APPROVED W/ CAUTION')\r\n              \"\r\n              [hidden]=\"\r\n                s1Application?.appliedS2 || applicationStage === 'S1-Preview'\r\n              \"\r\n            >\r\n              <div class=\"col-md-12\">\r\n                <hr />\r\n              </div>\r\n              <h4>\r\n                <i class=\"material-icons\">bookmark</i> &nbsp;REVISION LETTER\r\n              </h4>\r\n              <br />\r\n              <div class=\"col-md-12\" appearance=\"outline\">\r\n                <mat-label\r\n                  *ngIf=\"\r\n                    revisionLetterAttachment?.originalFilename ||\r\n                    (tempRevisionAttachmentDocuments?.length > 0 &&\r\n                      tempRevisionAttachmentDocuments[1]\r\n                        ?.revisionLetterAttachmentReference)\r\n                  \"\r\n                >\r\n                  Filename:\r\n                </mat-label>\r\n                <input\r\n                  #revisionLetterInput\r\n                  matInput\r\n                  [value]=\"\r\n                    revisionLetterAttachment?.originalFilename ||\r\n                    tempRevisionAttachmentDocuments[1]\r\n                      ?.revisionLetterAttachmentReference ||\r\n                    tempRevisionAttachmentDocuments[2]\r\n                      ?.revisionLetterAttachmentReference\r\n                  \"\r\n                  disabled\r\n                  *ngIf=\"revisionLetterAttachment?.originalFilename\"\r\n                /><br />\r\n\r\n                <input\r\n                  #revisionLetterFile\r\n                  class=\"file-upload\"\r\n                  type=\"file\"\r\n                  accept=\".pdf\"\r\n                  (change)=\"selectFile($event, 'REVISION_LETTER')\"\r\n                  [hidden]=\"\r\n                    (isAscUser && isDisableFieldOnUpdate) ||\r\n                    revisionLetterAttachment?.originalFilename\r\n                  \"\r\n                  *ngIf=\"\r\n                    tempRevisionAttachmentDocuments?.length == 0 ||\r\n                    s1Application?.internalStatus == 'SAVED' ||\r\n                    ((s1Application?.internalStatus ==\r\n                      'S1_APPLICATION_REVIEWED' ||\r\n                      s1Application?.internalStatus ==\r\n                        'COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER') &&\r\n                      (s1Application?.decisionStatus == 'INCOMPLETE' ||\r\n                        s1Application?.decisionStatus == 'APPROVED' ||\r\n                        s1Application?.decisionStatus == 'APPROVED W/ CAUTION'))\r\n                  \"\r\n                />\r\n              </div>\r\n\r\n              <div class=\"row\"><br /></div>\r\n              <div class=\"col-md-12\" appearance=\"outline\">\r\n                <button\r\n                  mat-raised-button\r\n                  class=\"button-red button-right\"\r\n                  (click)=\"viewDocument('REVISION_LETTER', false)\"\r\n                  *ngIf=\"showRevisionLetterViewButton\"\r\n                >\r\n                  <i class=\"material-icons add-document\">open_in_new</i> VIEW\r\n                  DOCUMENT\r\n                </button>\r\n                &nbsp; &nbsp;\r\n                <button\r\n                  mat-raised-button\r\n                  class=\"button-red button-right\"\r\n                  (click)=\"deleteUploadedFile('REVISION_LETTER')\"\r\n                  [hidden]=\"\r\n                    (currentUser?.userRole?.name != 'ROLE_APPLICANT' &&\r\n                      currentUser?.userRole?.name != 'ROLE_ENCODER') ||\r\n                    (currentUser.userRole.name == 'ROLE_ENCODER' &&\r\n                      s1Application?.internalStatus !== undefined) ||\r\n                    applicationStage === 'S2-APPLICATION' ||\r\n                    applicationStage === 'S1-Preview'\r\n                  \"\r\n                  *ngIf=\"showRevisionLetterViewButton\"\r\n                >\r\n                  <i class=\"material-icons add-document\">delete</i> DELETE\r\n                  ATTACHMENT\r\n                </button>\r\n                &nbsp; &nbsp;\r\n\r\n                <button\r\n                  mat-raised-button\r\n                  class=\"button-red button-right\"\r\n                  (click)=\"uploadDocument()\"\r\n                  [disabled]=\"\r\n                    !safeURLRevisionLetter || !showRevisionLetterUploadButton\r\n                  \"\r\n                  [hidden]=\"isAscUser && isDisableFieldOnUpdate\"\r\n                  *ngIf=\"showRevisionLetterUploadButton\"\r\n                >\r\n                  <i class=\"material-icons add-document\">upload</i> UPLOAD\r\n                </button>\r\n              </div>\r\n              <div class=\"row\"><br /></div>\r\n              <br />\r\n              <br />\r\n            </div>\r\n\r\n            <div class=\"row\"><hr /></div>\r\n\r\n            <!---------- EXISTING ---------->\r\n            <div\r\n              class=\"row\"\r\n              *ngFor=\"let i of revisionAttachmentDocuments; let index = index\"\r\n            >\r\n              <div *ngIf=\"i !== null\">\r\n                <h4>\r\n                  <i class=\"material-icons\">bookmark</i> &nbsp;{{\r\n                    i?.attachmentType\r\n                      ?.replaceAll(\"SUPPORTIVE\", \"SUPPORTING\")\r\n                      ?.replaceAll(\"_\", \" \")\r\n                  }}\r\n                  DOCUMENT\r\n                </h4>\r\n                <br />\r\n                <div class=\"col-md-12\" appearance=\"outline\">\r\n                  <mat-label *ngIf=\"i?.originalFilename\">Filename: </mat-label>\r\n                  <input\r\n                    #mainInput\r\n                    matInput\r\n                    [value]=\"i?.originalFilename\"\r\n                    disabled\r\n                    *ngIf=\"i?.originalFilename\"\r\n                  /><br />\r\n                </div>\r\n\r\n                <div class=\"row\"><br /></div>\r\n                <div\r\n                  class=\"col-md-12\"\r\n                  appearance=\"outline\"\r\n                  *ngIf=\"\r\n                    showMainDocumentViewButton ||\r\n                    i?.mainAttachmentReference ||\r\n                    i?.supportingAttachmentReference ||\r\n                    i?.revisionLetterAttachmentReference\r\n                  \"\r\n                >\r\n                  <button\r\n                    mat-raised-button\r\n                    class=\"button-red button-right\"\r\n                    (click)=\"viewDocument2(i)\"\r\n                  >\r\n                    <i class=\"material-icons add-document\">open_in_new</i> VIEW\r\n                    DOCUMENT\r\n                  </button>\r\n                  &nbsp; &nbsp;\r\n                  <button\r\n                    mat-raised-button\r\n                    class=\"button-red button-right\"\r\n                    (click)=\"deleteUploadedFile2(i)\"\r\n                    *ngIf=\"i?.status === 'UNPROCESSED'\"\r\n                  >\r\n                    <i class=\"material-icons add-document\">delete</i> DELETE\r\n                    ATTACHMENT\r\n                  </button>\r\n                  &nbsp; &nbsp;\r\n                </div>\r\n                <div class=\"row\"><br /></div>\r\n                <div class=\"col-md-12\">\r\n                  <hr />\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div\r\n              class=\"no-record\"\r\n              *ngIf=\"\r\n                (revisionAttachmentDocuments?.length === 0 &&\r\n                  revisionAttachmentDocuments[0]?.originalFilename ===\r\n                    undefined) ||\r\n                revisionAttachmentDocuments?.length === null\r\n              \"\r\n            >\r\n              No existing attachments for revision.\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </mat-tab>\r\n\r\n      <!-- TAB FOR COMPLIANCE -->\r\n      <mat-tab\r\n        label=\"COMPLIANCE\"\r\n        *ngIf=\"\r\n          complianceAttachmentDocuments?.length > 0 ||\r\n          ((s1Application?.internalStatus === 'S1_APPLICATION_REVIEWED' ||\r\n            s1Application?.internalStatus ===\r\n              'COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER' ||\r\n            s1Application?.internalStatus == 'REVISION_SCREENED' ||\r\n            s1Application?.internalStatus == 'S1_APPLICATION_REJECTED') &&\r\n            s1Application?.decisionStatus == 'INCOMPLETE' &&\r\n            applicationStage !== 'S2-APPLICATION')\r\n        \"\r\n      >\r\n        <div class=\"mat-tab\">\r\n          <div class=\"col comment\">\r\n            <label>COMPLIANCE</label>\r\n            <!---------- NEW ATTACHMENTS ---------->\r\n\r\n            <!-- MAIN DOCUMENT -->\r\n            <div\r\n              class=\"row\"\r\n              [hidden]=\"\r\n                (isAscUser && isDisableFieldOnUpdate) ||\r\n                applicationStage === 'S2-APPLICATION' ||\r\n                (currentUser.userRole.name == 'ROLE_ENCODER' &&\r\n                  s1Application?.internalStatus !== undefined)\r\n              \"\r\n              *ngIf=\"\r\n                (s1Application?.internalStatus === 'S1_APPLICATION_REVIEWED' ||\r\n                  s1Application?.internalStatus ===\r\n                    'COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER' ||\r\n                  s1Application?.internalStatus == 'REVISION_SCREENED' ||\r\n                  s1Application?.internalStatus == 'S1_APPLICATION_REJECTED') &&\r\n                s1Application?.decisionStatus == 'INCOMPLETE'\r\n              \"\r\n            >\r\n              <h4>\r\n                <i class=\"material-icons\">bookmark</i> &nbsp;{{\r\n                  labelMainDocument ? labelMainDocument : \"MAIN DOCUMENT\"\r\n                }}\r\n              </h4>\r\n              <br />\r\n              <div class=\"col-md-12\" appearance=\"outline\">\r\n                <mat-label\r\n                  *ngIf=\"\r\n                    tempComplianceAttachmentDocuments?.length > 0 &&\r\n                    tempComplianceAttachmentDocuments[0]?.originalFilename\r\n                  \"\r\n                  >Filename:\r\n                </mat-label>\r\n                <input\r\n                  #mainInput\r\n                  matInput\r\n                  *ngIf=\"\r\n                    !s1Application?.hasOngoingRevision ||\r\n                    tempComplianceAttachmentDocuments?.length == 0\r\n                  \"\r\n                  [value]=\"\r\n                    tempComplianceAttachmentDocuments[0]?.originalFilename\r\n                  \"\r\n                  disabled\r\n                /><br />\r\n\r\n                <input\r\n                  #mainFile\r\n                  class=\"file-upload\"\r\n                  type=\"file\"\r\n                  accept=\".pdf\"\r\n                  (change)=\"selectFile($event, 'MAIN')\"\r\n                  [hidden]=\"\r\n                    (isAscUser && isDisableFieldOnUpdate) ||\r\n                    tempComplianceAttachmentDocuments[0]?.originalFilename\r\n                  \"\r\n                  *ngIf=\"\r\n                    (s1Application?.internalStatus ===\r\n                      'S1_APPLICATION_REVIEWED' ||\r\n                      s1Application?.internalStatus ===\r\n                        'COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER' ||\r\n                      s1Application?.internalStatus == 'REVISION_SCREENED' ||\r\n                      s1Application?.internalStatus ==\r\n                        'S1_APPLICATION_REJECTED') &&\r\n                    s1Application?.decisionStatus === 'INCOMPLETE'\r\n                  \"\r\n                />\r\n              </div>\r\n\r\n              <div class=\"row\"><br /></div>\r\n              <div class=\"col-md-12\" appearance=\"outline\">\r\n                <button\r\n                  mat-raised-button\r\n                  class=\"button-red button-right\"\r\n                  (click)=\"viewDocument('MAIN', false)\"\r\n                  [hidden]=\"\r\n                    tempComplianceAttachmentDocuments[0]?.originalFilename ===\r\n                    null\r\n                  \"\r\n                  *ngIf=\"\r\n                    showMainDocumentViewButtonC ||\r\n                    tempComplianceAttachmentDocuments[0]?.originalFilename\r\n                  \"\r\n                >\r\n                  <i class=\"material-icons add-document\">open_in_new</i> VIEW\r\n                  DOCUMENT\r\n                </button>\r\n                &nbsp; &nbsp;\r\n                <button\r\n                  mat-raised-button\r\n                  class=\"button-red button-right\"\r\n                  (click)=\"deleteUploadedFile('MAIN')\"\r\n                  [hidden]=\"\r\n                    tempComplianceAttachmentDocuments[0]?.originalFilename ===\r\n                    null\r\n                  \"\r\n                  *ngIf=\"\r\n                    showMainDocumentViewButtonC ||\r\n                    tempComplianceAttachmentDocuments[0]?.originalFilename\r\n                  \"\r\n                >\r\n                  <i class=\"material-icons add-document\">delete</i> DELETE\r\n                  ATTACHMENT\r\n                </button>\r\n                &nbsp; &nbsp;\r\n\r\n                <button\r\n                  mat-raised-button\r\n                  class=\"button-red button-right\"\r\n                  (click)=\"uploadDocument()\"\r\n                  [disabled]=\"!safeURLMainDoc || !showMainDocumentUploadButton\"\r\n                  [hidden]=\"isAscUser && isDisableFieldOnUpdate\"\r\n                  *ngIf=\"showMainDocumentUploadButton\"\r\n                >\r\n                  <i class=\"material-icons add-document\">upload</i> UPLOAD\r\n                </button>\r\n              </div>\r\n              <div class=\"col-md-12\">\r\n                <hr />\r\n              </div>\r\n            </div>\r\n\r\n            <!-- SUPPORTING DOC -->\r\n            <div\r\n              class=\"row\"\r\n              [hidden]=\"\r\n                (isAscUser && isDisableFieldOnUpdate) ||\r\n                applicationStage === 'S2-APPLICATION' ||\r\n                (currentUser.userRole.name == 'ROLE_ENCODER' &&\r\n                  s1Application?.internalStatus !== undefined)\r\n              \"\r\n              *ngIf=\"\r\n                showSupportDocumentFrameC ||\r\n                tempComplianceAttachmentDocuments?.length > 0 ||\r\n                ((s1Application?.internalStatus === 'S1_APPLICATION_REVIEWED' ||\r\n                  s1Application?.internalStatus ===\r\n                    'COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER' ||\r\n                  s1Application?.internalStatus == 'REVISION_SCREENED' ||\r\n                  s1Application?.internalStatus == 'S1_APPLICATION_REJECTED') &&\r\n                  s1Application?.decisionStatus == 'INCOMPLETE')\r\n              \"\r\n            >\r\n              <h4>\r\n                <i class=\"material-icons\">bookmark</i> &nbsp;SUPPORT DOCUMENTS\r\n              </h4>\r\n\r\n              <!-- Display if no support document was attached -->\r\n              <div class=\"col-md-12\" appearance=\"outline\">\r\n                <mat-checkbox\r\n                  (click)=\"verifyNoDocumentAttached()\"\r\n                  [(ngModel)]=\"s1Application.hasNoSupportingDocs\"\r\n                  (checked)=\"(s1Application.hasNoSupportingDocs)\"\r\n                  formControlName=\"hasNoSupportingDocs\"\r\n                  [hidden]=\"\r\n                    tempComplianceAttachmentDocuments[1]?.originalFilename\r\n                  \"\r\n                  *ngIf=\"\r\n                    currentUser.userRole.name == 'ROLE_APPLICANT' ||\r\n                    (currentUser.userRole.name == 'ROLE_ENCODER' &&\r\n                      s1Application?.internalStatus === undefined)\r\n                  \"\r\n                >\r\n                  I certify that no supporting document is attached to this S1\r\n                  application.</mat-checkbox\r\n                >\r\n                <br />\r\n              </div>\r\n\r\n              <p\r\n                *ngIf=\"\r\n                  (s1Application?.submissionType === 'COMPLIANCE' &&\r\n                    s1Application?.hasNoSupportingDocs &&\r\n                    s1Application?.internalStatus !== undefined &&\r\n                    s1Application?.internalStatus !==\r\n                      'S1_APPLICATION_REVIEWED' &&\r\n                    s1Application?.decisionStatus !== 'INCOMPLETE') ||\r\n                  (s1Application?.hasNoSupportingDocs &&\r\n                    applicationStage === 'S1-Preview')\r\n                \"\r\n              >\r\n                Supporting Document was not submitted.\r\n              </p>\r\n              <div class=\"col-md-12\"><br /></div>\r\n\r\n              <div *ngIf=\"!s1Application?.hasNoSupportingDocs\">\r\n                <div class=\"col-md-12\" appearance=\"outline\">\r\n                  <mat-label\r\n                    *ngIf=\"\r\n                      tempComplianceAttachmentDocuments?.length > 0 &&\r\n                      tempComplianceAttachmentDocuments[1]?.originalFilename\r\n                    \"\r\n                    >Filename:\r\n                  </mat-label>\r\n                  <input\r\n                    #supportiveInput\r\n                    matInput\r\n                    [value]=\"\r\n                      tempComplianceAttachmentDocuments[1]?.originalFilename\r\n                    \"\r\n                    disabled\r\n                    *ngIf=\"\r\n                      tempComplianceAttachmentDocuments?.length > 0 &&\r\n                      tempComplianceAttachmentDocuments[1]?.originalFilename\r\n                    \"\r\n                  /><br />\r\n\r\n                  <input\r\n                    #supportiveFile\r\n                    class=\"file-upload\"\r\n                    type=\"file\"\r\n                    accept=\".pdf\"\r\n                    (change)=\"selectFile($event, 'SUPPORTIVE')\"\r\n                    [hidden]=\"\r\n                      (isAscUser && isDisableFieldOnUpdate) ||\r\n                      tempComplianceAttachmentDocuments[1]?.originalFilename\r\n                    \"\r\n                    *ngIf=\"\r\n                      tempComplianceAttachmentDocuments?.length <= 2 ||\r\n                      (tempComplianceAttachmentDocuments?.length == 2 &&\r\n                        tempComplianceAttachmentDocuments[1] === null) ||\r\n                      s1Application?.internalStatus == 'SAVED' ||\r\n                      tempComplianceAttachmentDocuments[1]?.originalFilename !=\r\n                        null ||\r\n                      ((s1Application?.internalStatus ==\r\n                        'S1_APPLICATION_REVIEWED' ||\r\n                        s1Application?.internalStatus ==\r\n                          'COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER' ||\r\n                        s1Application?.internalStatus == 'REVISION_SCREENED' ||\r\n                        s1Application?.internalStatus ==\r\n                          'S1_APPLICATION_REJECTED') &&\r\n                        s1Application?.decisionStatus == 'INCOMPLETE')\r\n                    \"\r\n                  />\r\n                </div>\r\n\r\n                <div class=\"row\"><br /></div>\r\n                <div class=\"col-md-12\" appearance=\"outline\">\r\n                  <button\r\n                    mat-raised-button\r\n                    class=\"button-red button-right\"\r\n                    (click)=\"viewDocument('SUPPORTIVE', false)\"\r\n                    [hidden]=\"\r\n                      tempComplianceAttachmentDocuments[1]?.originalFilename ===\r\n                      null\r\n                    \"\r\n                    *ngIf=\"\r\n                      showSupportiveDocumentViewButtonC ||\r\n                      tempComplianceAttachmentDocuments[1]?.originalFilename\r\n                    \"\r\n                  >\r\n                    <i class=\"material-icons add-document\">open_in_new</i> VIEW\r\n                    DOCUMENT\r\n                  </button>\r\n                  &nbsp; &nbsp;\r\n                  <button\r\n                    mat-raised-button\r\n                    class=\"button-red button-right\"\r\n                    (click)=\"deleteUploadedFile('SUPPORTIVE')\"\r\n                    [hidden]=\"\r\n                      tempComplianceAttachmentDocuments[1]?.originalFilename ===\r\n                      null\r\n                    \"\r\n                    *ngIf=\"\r\n                      showSupportiveDocumentViewButtonC ||\r\n                      tempComplianceAttachmentDocuments[1]?.originalFilename\r\n                    \"\r\n                  >\r\n                    <i class=\"material-icons add-document\">delete</i> DELETE\r\n                    ATTACHMENT\r\n                  </button>\r\n                  &nbsp; &nbsp;\r\n                  <button\r\n                    mat-raised-button\r\n                    class=\"button-red button-right\"\r\n                    (click)=\"uploadDocument()\"\r\n                    [hidden]=\"isAscUser && isDisableFieldOnUpdate\"\r\n                    *ngIf=\"showSupportiveDocumentUploadButton\"\r\n                  >\r\n                    <i class=\"material-icons add-document\">upload</i> UPLOAD\r\n                  </button>\r\n                </div>\r\n                <div class=\"row\"><br /></div>\r\n                <br />\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"row\"><hr /></div>\r\n\r\n            <!---------- EXISTING ---------->\r\n            <div\r\n              class=\"row\"\r\n              *ngFor=\"let i of complianceAttachmentDocuments; let index = index\"\r\n            >\r\n              <div *ngIf=\"i !== null\">\r\n                <h4>\r\n                  <i class=\"material-icons\">bookmark</i> &nbsp;{{\r\n                    i?.attachmentType\r\n                      ?.replaceAll(\"SUPPORTIVE\", \"SUPPORTING\")\r\n                      ?.replaceAll(\"_\", \" \")\r\n                  }}\r\n                  DOCUMENT\r\n                </h4>\r\n                <br />\r\n                <div class=\"col-md-12\" appearance=\"outline\">\r\n                  <mat-label *ngIf=\"i?.originalFilename\">Filename: </mat-label>\r\n                  <input\r\n                    #mainInput\r\n                    matInput\r\n                    [value]=\"i?.originalFilename\"\r\n                    disabled\r\n                    *ngIf=\"i?.originalFilename\"\r\n                  /><br />\r\n                </div>\r\n\r\n                <div class=\"row\"><br /></div>\r\n                <div\r\n                  class=\"col-md-12\"\r\n                  appearance=\"outline\"\r\n                  *ngIf=\"\r\n                    showMainDocumentViewButton ||\r\n                    i?.mainAttachmentReference ||\r\n                    i?.supportingAttachmentReference ||\r\n                    i?.revisionLetterAttachmentReference\r\n                  \"\r\n                >\r\n                  <button\r\n                    mat-raised-button\r\n                    class=\"button-red button-right\"\r\n                    (click)=\"viewDocument(i.attachmentType)\"\r\n                  >\r\n                    <i class=\"material-icons add-document\">open_in_new</i> VIEW\r\n                    DOCUMENT\r\n                  </button>\r\n                  &nbsp; &nbsp;\r\n                  <button\r\n                    mat-raised-button\r\n                    class=\"button-red button-right\"\r\n                    (click)=\"deleteUploadedFile2(i)\"\r\n                    *ngIf=\"i?.status === 'UNPROCESSED'\"\r\n                  >\r\n                    <i class=\"material-icons add-document\">delete</i> DELETE\r\n                    ATTACHMENT\r\n                  </button>\r\n                  &nbsp; &nbsp;\r\n                </div>\r\n                <div class=\"col-md-12\"><br /></div>\r\n                <div class=\"col-md-12\">\r\n                  <hr />\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div\r\n              class=\"no-record\"\r\n              *ngIf=\"complianceAttachmentDocuments?.length === 0\"\r\n            >\r\n              No existing attachments for compliance.\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </mat-tab>\r\n      <!-- END OF TAB FOR COMPLIANCE -->\r\n    </mat-tab-group>\r\n  </form>\r\n</div>\r\n","import { USER_ROLES } from './../../../../shared/utils/constants';\r\nimport { Component, OnInit, Input } from '@angular/core';\r\nimport { S1Application, AttachmentDocument, Payment, PaymentType } from '@models';\r\nimport { ATTACHMENT_TYPE, ENDPOINTS, PAYMENT_STATUS, SUBMISSION_TYPE } from '@shared';\r\nimport { SweetAlertService, DataStorageService, ApiService } from '@services';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport Swal from 'sweetalert2';\r\nimport { FileStorageService } from '../../../../core/services/file.storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-upload-payment',\r\n  templateUrl: './upload-payment.component.html',\r\n  styleUrls: ['./upload-payment.component.scss']\r\n})\r\nexport class UploadPaymentComponent implements OnInit {\r\n  @Input() s1Application = new S1Application();\r\n  payment = new Payment();\r\n  safeURLProofOfPayment: any;\r\n  selectedFiles: any;\r\n  previewDocument = false;\r\n  attachmentDocument = new AttachmentDocument();\r\n  currentUser: any;\r\n  attachmentDocuments = [];\r\n  isSubmitted = false;\r\n  paymentTypeList = [];\r\n  paymentType : any;\r\n  paymentForm: FormGroup;\r\n\r\n  constructor(\r\n    private sanitizer: DomSanitizer,\r\n    private apiService: ApiService,\r\n    public dataStorage: DataStorageService,\r\n    private fileStorageService: FileStorageService,\r\n    private router: Router,\r\n    private formBuilder: FormBuilder,\r\n    private sweetAlertService: SweetAlertService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    console.log('Upload Payment');\r\n    this.currentUser = this.dataStorage.getUserAccount();\r\n    this.getPaymentList();\r\n    this.setFormValidator();\r\n  }\r\n\r\n  setFormValidator(): void {\r\n    this.paymentForm = this.formBuilder.group({\r\n      remarks: ['']\r\n    });\r\n  }\r\n\r\n  selectFile(event) {\r\n    const attachmentSize = event.target.files[0].size;\r\n\r\n    if (event.target.files[0].type === 'application/pdf') {\r\n      if (attachmentSize > 15000000) { // 1MB = 1M\r\n        this.sweetAlertService.customErrorMessage(`Attachments' total file size should not exceed 15MB.`);\r\n        event.target.value = '';\r\n        return;\r\n      } else {\r\n        const pdfURL = URL.createObjectURL(event.target.files[0]);\r\n        this.safeURLProofOfPayment = this.sanitizer.bypassSecurityTrustResourceUrl(pdfURL);\r\n        this.previewDocument = true;\r\n\r\n        // env.showSpinner = true;\r\n        const reader = new FileReader();\r\n        const [file] = event.target.files;\r\n\r\n        reader.readAsDataURL(file);\r\n        reader.onload = () => {\r\n        };\r\n      }\r\n\r\n      this.selectedFiles = event.target.files;\r\n    } else {\r\n      this.sweetAlertService.customErrorMessage('Attachment should be in PDF format only.');\r\n      event.target.value = '';\r\n      return;\r\n    }\r\n  }\r\n\r\n  uploadDocument(s1Application) {\r\n    Swal.fire({\r\n      text: 'Are you sure you want to submit this PROOF OF PAYMENT?',\r\n      icon: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Confirm'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.dataStorage.setDisplayProgressbar(true);\r\n        let params = '';\r\n        params = '?&attachmentType=' + ATTACHMENT_TYPE.PAYMENT + '&submissionType=' + SUBMISSION_TYPE.ORIGINAL;\r\n        this.fileStorageService.pushFileToStorage(ENDPOINTS.attachmentDocument, this.selectedFiles.item(0), params)\r\n        .subscribe(res => {\r\n            const obj = res.responseData.data;\r\n            console.log(obj);\r\n            this.s1Application.paymentAttachmentReference = obj.paymentAttachmentReference;\r\n            this.payment.paymentAttachmentReference = obj.paymentAttachmentReference;\r\n            this.payment.amountDue = s1Application.amount;\r\n            this.payment.applicationForm = s1Application;\r\n            this.payment.appFormReference = s1Application.appFormReference;\r\n            this.payment.filename = obj.filename;\r\n            this.saveProofOfPayment();\r\n            // this.previewDocument = true;\r\n            this.selectedFiles = undefined;\r\n          }, (err: any) => {\r\n            this.sweetAlertService.error(err);\r\n          }, () => {\r\n            // actions after subscription\r\n            this.dataStorage.setDisplayProgressbar(false);\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  saveProofOfPayment() {\r\n    console.log('Saving payment...');\r\n    this.dataStorage.setDisplayProgressbar(true);\r\n    this.payment.paymentStatus = PAYMENT_STATUS.UNPAID;\r\n    this.s1Application.paymentStatus = PAYMENT_STATUS.UNPAID;\r\n    this.payment.id = 0;\r\n    this.payment.officialReceiptNo = '';\r\n    this.payment.paymentMethod = null;\r\n    console.log('PAYMENT : ', this.payment);\r\n    console.log('S1 ',this.s1Application);\r\n\r\nreturn false\r\n    this.apiService.save(`${ENDPOINTS.applicationFormPresentor}payment-type-id/${this.paymentType.id}/payment/submit`, this.payment)\r\n    .subscribe((res: any) => {\r\n        console.log('SAVED STATUS: ', res.responseData.data);\r\n\r\n      this.safeURLProofOfPayment = this.sanitizer.bypassSecurityTrustResourceUrl(res.responseData.data.fileURL);\r\n      this.router.navigate(['asc/page/application/s1/lists']);\r\n        this.isSubmitted = true;\r\n        this.sweetAlertService.customSuccessMessage('Proof of payment successfully submitted.');\r\n      }, (err) => {\r\n        console.log(err);\r\n        this.sweetAlertService.error(err);\r\n        this.dataStorage.setDisplayProgressbar(false);\r\n      }, () => {\r\n        this.dataStorage.setDisplayProgressbar(false);\r\n      });\r\n  }\r\n\r\n  getPaymentList() {\r\n    this.apiService.findAll(ENDPOINTS.paymentType).subscribe((res: any) => {\r\n      this.paymentTypeList = res.responseData.data;\r\n      if (this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT) {\r\n        const creditCardIndex = this.paymentTypeList\r\n          .findIndex((element) => element.paymentDescription === 'Credit Card');\r\n        this.paymentTypeList.splice(creditCardIndex, 1);\r\n      }\r\n    });\r\n  }\r\n  selectedPaymentType(res){\r\n    let pt = new PaymentType();\r\n    pt  = res;\r\n    this.paymentType = pt;\r\n  }\r\n\r\n}\r\n","\r\n  <div class=\"row fields\">\r\n    <h4>\r\n      <i class=\"material-icons\">label_important</i> &nbsp;Proof of Payment\r\n    </h4>\r\n    <br>\r\n    <div class=\"col-md-4\" appearance=\"outline\">\r\n      <mat-label>Filename: </mat-label><br>\r\n      <input class=\"file-upload\" type=\"file\" accept=\".pdf\" (change)=\"selectFile($event)\" [hidden]=\"isSubmitted==true\"><br><br>\r\n\r\n      <div class=\"col-md-10\">\r\n        <div class=\"col-md-5\" appearance=\"outline\">\r\n          <mat-label>Amount Due:</mat-label>\r\n            <input type=\"text\" [(ngModel)]=\"s1Application.amount\" class=\"form-control amountDue\" [disabled]=\"true\" name=\"amountDue\">\r\n        </div>\r\n        <br>\r\n        <mat-form-field class=\"col-md-8\" appearance=\"outline\">\r\n          <mat-label>Payment Mode<span class=\"required-field\"> <mat-icon>notification_important</mat-icon>\r\n          </span></mat-label>\r\n          <mat-select [(ngModel)]=\"payment.paymentMethod\" name=\"paymentMethod\">\r\n            <mat-option *ngFor=\"let i of paymentTypeList\" [value]=\"i\" (click)=\"selectedPaymentType(i)\">\r\n              {{i.paymentDescription}}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n        <br>\r\n        <form [formGroup]=\"paymentForm\">\r\n        <div class=\"col-md-12\" appearance=\"outline\">\r\n          <mat-label>Remarks:</mat-label>\r\n          <textarea width=\"20\"  height=\"20\" [(ngModel)]=\"payment.remarks\" class=\"form-control\" name=\"remarks\" formControlName=\"remarks\"></textarea>\r\n        </div>\r\n\r\n</form>\r\n\r\n      </div>\r\n      <br><br>\r\n      <!-- <button mat-raised-button class=\"button-red button-right\" (click)=\"uploadDocument()\" *ngIf=\"enableUploadButton==true\">\r\n        <i class=\"material-icons add-document\">upload</i> UPLOAD\r\n      </button> -->\r\n    </div>\r\n    <div class=\"col-md-8\" appearance=\"outline\" *ngIf=\"previewDocument==true\">\r\n      <div class=\"file-upload\">\r\n        <object [data]=\"safeURLProofOfPayment\" type=\"application/pdf\" width=\"100%\" height=\"400\">\r\n          <iframe [src]=\"safeURLProofOfPayment\" width=\"100%\" height=\"400\">\r\n            <p>This browser does not support PDF!</p>\r\n          </iframe>\r\n        </object>\r\n      </div>\r\n    </div>\r\n    <div class=\"row\"><br></div>\r\n    <div class=\"col-md-12\" appearance=\"outline\" [hidden]=\"isSubmitted==true\">\r\n        <button mat-raised-button class=\"button-red button-right\" (click)=\"uploadDocument(s1Application)\" *ngIf=\"previewDocument==true\" [disabled]=\"!paymentType\">\r\n            <i class=\"material-icons add-document\">save</i> SUBMIT\r\n        </button>\r\n    </div>\r\n    <div class=\"row\"><br></div>\r\n  </div>\r\n","import { Component, ElementRef, Inject, OnInit, Optional, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { S1Application } from '@models';\r\nimport { ApiService, DataStorageService } from '@services';\r\nimport { APPFORM_TYPE, ENDPOINTS, FORM_TYPE } from '@shared';\r\nimport { NumberOfMultipleApplicationAllowed } from 'app/core/models/numberOfMultipleApplicationAllowed.model';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-s1-form-type',\r\n  templateUrl: './s1-form-type.component.html',\r\n  styleUrls: ['./s1-form-type.component.scss']\r\n})\r\nexport class S1FormTypeComponent implements OnInit {\r\n\r\n  s1Application = new S1Application();\r\n  numberOfMultipleApplicationAllowed = new NumberOfMultipleApplicationAllowed();\r\n  applicationTypeList = [];\r\n  formTypeList = [...FORM_TYPE];\r\n\r\n  s1ApplicationForm: FormGroup;\r\n\r\n  numberOfApplications: number;\r\n  showNumberOfApplications = false;\r\n  isMultiple = false;\r\n  isSpecial = false;\r\n  isPresentation = false;\r\n\r\n  constructor(\r\n    private apiService: ApiService,\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private dataStorage: DataStorageService,\r\n    private dialog: MatDialog,\r\n    @Optional() public dialogRef: MatDialogRef<S1FormTypeComponent>,\r\n    @Optional() @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.setFormValidator('');\r\n    this.getApplicationTypeList();\r\n    this.s1Application.formType = 'INDIVIDUAL';\r\n    this.getNoOfMultipleApplicationsAllowed();\r\n  }\r\n\r\n  getNoOfMultipleApplicationsAllowed(): void {\r\n    this.apiService.findAll(ENDPOINTS.noOfMultipleApplicationAllowed).subscribe((res: any) => {\r\n      this.numberOfMultipleApplicationAllowed = res.responseData.data[0];\r\n    });\r\n  }\r\n\r\n  getApplicationTypeList() {\r\n    this.s1Application.applicationType = null;\r\n    this.applicationTypeList = [];\r\n    this.apiService.findAll(ENDPOINTS.applicationType).subscribe((res: any) => {\r\n      this.applicationTypeList = res.responseData.data;\r\n    });\r\n  }\r\n\r\n  setAsMultiple() {\r\n    this.isMultiple = !this.isMultiple;\r\n    this.showNumberOfApplications = !this.showNumberOfApplications;\r\n    if (this.isMultiple) {\r\n      this.s1Application.formType = APPFORM_TYPE.MULTIPLE;\r\n      this.setFormValidator('multiple')\r\n    } else {\r\n      this.setFormValidator('');\r\n      this.s1Application.formType = APPFORM_TYPE.INDIVIDUAL;\r\n    }\r\n  }\r\n\r\n  checkType() {\r\n    if (this.s1Application.applicationType.description.toLocaleLowerCase().includes('special')) {\r\n      this.isSpecial = true;\r\n    } else {\r\n      this.isSpecial = false;\r\n    }\r\n\r\n    if (this.isMultiple) {\r\n      this.setFormValidator('multiple');\r\n    }\r\n\r\n  }\r\n\r\n  setFormValidator(apptype): void {\r\n    let formtype;\r\n    if (this.s1Application.formType) {\r\n      formtype = this.s1Application.formType;\r\n    }\r\n\r\n    if (apptype === 'multiple') {\r\n      this.s1ApplicationForm = this.formBuilder.group({\r\n        formType: [formtype, Validators.required],\r\n        applicationType: [this.s1Application.applicationType, Validators.required],\r\n        numberOfApplications: [\r\n          '', [\r\n            Validators.required,\r\n            Validators.min(parseInt(this.numberOfMultipleApplicationAllowed.minimum.toString(), null)),\r\n            Validators.max(parseInt(this.numberOfMultipleApplicationAllowed.maximum.toString(), null))\r\n          ]\r\n        ],\r\n      });\r\n    } else {\r\n      this.s1ApplicationForm = this.formBuilder.group({\r\n        applicationType: [this.s1Application.applicationType, Validators.required],\r\n      });\r\n      this.showNumberOfApplications = false;\r\n    }\r\n  }\r\n\r\n  proceedS1Application(): void {\r\n    if (!this.isMultiple) {\r\n      Swal.fire({\r\n        text: 'Note: The application to be created is an individual application',\r\n        icon: 'info',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        confirmButtonText: 'PROCEED'\r\n      }).then((result) => {\r\n        if (result.value) {\r\n          this.navigateToS1Application();\r\n        }\r\n      });\r\n      return;\r\n    }\r\n\r\n    this.navigateToS1Application();\r\n  }\r\n\r\n  navigateToS1Application(): void {\r\n    this.router.navigate(['/asc/page/application/s1/add']);\r\n    const formAndAppType = {\r\n      formType: this.s1Application.formType,\r\n      appType: this.s1Application.applicationType\r\n    }\r\n\r\n    this.dataStorage.setS1FormAndAppType(formAndAppType);\r\n    this.dataStorage.setNumberOfApplications(this.numberOfApplications);\r\n    this.closeModal();\r\n  }\r\n\r\n  setAsForPresentation() {\r\n    this.isPresentation = !this.isPresentation;\r\n    if (this.isPresentation) {\r\n      Swal.fire({\r\n        text: 'Note: Please be present or available during presentation period.',\r\n        icon: 'info',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        confirmButtonText: 'PROCEED'\r\n      }).then((result) => {\r\n        if (result.value) {\r\n          this.s1Application.formType = APPFORM_TYPE.FOR_PRESENTATION;\r\n          this.proceedS1Application();\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  closeModal(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","<div id=\"form-type-modal\" class=\"row\" [formGroup]=\"s1ApplicationForm\">\r\n    <h1>New S1 Application</h1>\r\n    <hr>\r\n    <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n        <mat-label>Application Type</mat-label>\r\n        <mat-select [(ngModel)]=\"s1Application.applicationType\" name=\"applicationType\" formControlName=\"applicationType\"\r\n            [disabled]=\"s1Application?.internalStatus!='SAVED'&&s1Application?.internalStatus!=undefined\" (selectionChange)=\"checkType()\">\r\n            <mat-option *ngFor=\"let i of applicationTypeList\" [value]=\"i\">\r\n                {{i?.description | uppercase}}\r\n            </mat-option>\r\n        </mat-select>\r\n    </mat-form-field>\r\n\r\n    <div class=\"col-md-6\">\r\n      <mat-checkbox (click)=\"setAsMultiple()\" [disabled]=\"isPresentation || s1Application.applicationType === null || s1Application.applicationType === undefined\"\r\n      [ngStyle]=\"{'pointer-events': (isPresentation || s1Application.applicationType === null || s1Application.applicationType === undefined) ? 'none' : ''}\">\r\n      Multiple Application</mat-checkbox>\r\n    </div>\r\n    <div class=\"col-md-6\">\r\n      <mat-checkbox  (click)=\"setAsForPresentation()\" [disabled]=\"isMultiple || (s1Application.applicationType === null || s1Application.applicationType === undefined)\"\r\n      [ngStyle]=\"{'pointer-events': (isMultiple || (s1Application.applicationType === null || s1Application.applicationType === undefined ) ) ? 'none' : ''}\"\r\n      >For Presentation</mat-checkbox>\r\n    </div>\r\n\r\n    <!-- <mat-form-field class=\"col-md-12\" appearance=\"outline\" *ngIf=\"isMultiple\">\r\n      <mat-label>Form Type</mat-label>\r\n      <mat-select [(ngModel)]=\"s1Application.formType\" name=\"formType\" formControlName=\"formType\"\r\n      [disabled]=\"s1Application?.internalStatus!='SAVED'&&s1Application?.internalStatus!=undefined\">\r\n      <mat-option *ngFor=\"let i of formTypeList\" [value]=\"i.description\" (click)=\"getApplicationTypeList()\">\r\n        {{i?.description | uppercase}}\r\n      </mat-option>\r\n    </mat-select>\r\n  </mat-form-field> -->\r\n\r\n  <mat-form-field class=\"col-md-12\" appearance=\"outline\" *ngIf=\"showNumberOfApplications && s1Application?.applicationType?.description\">\r\n    <mat-label>Number of Applications</mat-label>\r\n    <input matInput [(ngModel)]=\"numberOfApplications\" formControlName=\"numberOfApplications\">\r\n    <mat-hint>{{numberOfMultipleApplicationAllowed.minimum}} - {{numberOfMultipleApplicationAllowed.maximum}} only</mat-hint>\r\n  </mat-form-field>\r\n\r\n  <div class=\"col-md-12 mt-2\" *ngIf=\"isMultiple||isSpecial\">\r\n    <i>Note: This application type needs Request for Approval.</i>\r\n  </div>\r\n\r\n  <div class=\"col-md-12\"><br></div>\r\n\r\n  <div class=\"col-md-12 action_items\">\r\n    <button class=\"button-red col-md-5\" mat-raised-button\r\n            (click)=\"proceedS1Application()\" [disabled]=\"!s1ApplicationForm.valid||!s1Application.applicationType\">\r\n            <i class=\"material-icons color__white\">send</i> Proceed\r\n        </button>\r\n\r\n        <button class=\"button-red col-md-5\" mat-raised-button (click)=\"closeModal()\">\r\n            <i class=\"material-icons color__white\">cancel</i> Cancel\r\n        </button>\r\n    </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ReassignmentComponent } from './reassignment.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ReassignmentComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ReassignmentRoutingModule { }\r\n","import { AngularEditorConfig } from './../editor/lib/config';\r\nimport { CommentThread } from './../../../../core/models/comments.model';\r\nimport { DatePipe } from '@angular/common';\r\nimport { Component, Inject, Input, OnInit, ViewChild, ElementRef } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { COMMENT_TYPE, APPFORM_TYPE, APPLICATION_STAGE, APPLICATION_STATUS_FOR_COMPLIANCE, APPLICATION_STATUS } from '@shared';\r\nimport { S1Application, S2Application } from '@models';\r\nimport { ApiService, DataStorageService, SweetAlertService } from '@services';\r\nimport { ENDPOINTS } from '@shared';\r\nimport Swal from 'sweetalert2';\r\nimport { Comment } from '../../../../core/models/comment.model';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { CopyClaims } from 'app/core/models/copy-claims.model';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-comment',\r\n  templateUrl: './comment.component.html',\r\n  styleUrls: ['./comment.component.scss']\r\n})\r\nexport class CommentComponent implements OnInit {\r\n  @Input() commentS1Application = new S1Application();\r\n  @Input() commentS2Application = new S2Application();\r\n  @Input() sampleDataTransfer;\r\n\r\n\r\n  comment = new Comment();\r\n  internalComment:CommentThread = new CommentThread();\r\n  externalComment:CommentThread = new CommentThread();\r\n  copyClaims = new CopyClaims();\r\n  commentForm: FormGroup;\r\n  todayDate: Date = new Date();\r\n  commentList = [];\r\n  internalCommentList:Array<CommentThread> = new Array<CommentThread>();\r\n  externalCommentList:Array<CommentThread> = new Array<CommentThread>();\r\n  replyInternalComment:CommentThread = new CommentThread();\r\n  copyClaimsList = [];\r\n  commentId: number = 0;\r\n  commentTypeList = [...COMMENT_TYPE];\r\n  commentType = '';\r\n  applicationStage: string;\r\n  internalCommentProcess = 'Save';\r\n  externalCommentProcess = 'Save';\r\n  copyClaimesProcess = 'Save';\r\n  id: any;\r\n  commentHtmlOutput: string;\r\n  disabledComment = false;\r\n\r\n  currentUser: any;\r\n  editCopyClaimsComment = false;\r\n  editExternalComment = false;\r\n\r\n  replyEditorConfig: AngularEditorConfig = {\r\n    editable: true,\r\n    spellcheck: true,\r\n    height: '13m',\r\n    minHeight: '0',\r\n    maxHeight: 'auto',\r\n    width: 'auto',\r\n    minWidth: '0',\r\n    translate: 'no',\r\n    enableToolbar: true,\r\n    showToolbar: true,\r\n    placeholder: 'Enter reply here...',\r\n    defaultParagraphSeparator: 'p',\r\n    defaultFontName: 'Calibri',\r\n    defaultFontSize: '3',\r\n    fonts: [\r\n      { class: 'arial', name: 'Arial' },\r\n      { class: 'times-new-roman', name: 'Times New Roman' },\r\n      { class: 'calibri', name: 'Calibri' },\r\n      { class: 'comic-sans-ms', name: 'Comic Sans MS' }\r\n    ],\r\n\r\n    customClasses: [\r\n      {\r\n        name: 'quote',\r\n        class: 'quote',\r\n      },\r\n      {\r\n        name: 'redText',\r\n        class: 'redText'\r\n      },\r\n      {\r\n        name: 'titleText',\r\n        class: 'titleText',\r\n        tag: 'h1',\r\n      },\r\n    ],\r\n    uploadUrl: 'v1/image',\r\n    // upload: (file: File) => { ... }\r\n    uploadWithCredentials: false,\r\n    sanitize: true,\r\n    toolbarPosition: 'top',\r\n    toolbarHiddenButtons: [\r\n      ['link',\r\n        'unlink',\r\n        'insertImage',\r\n        'insertVideo',],\r\n    ]\r\n  }\r\n\r\n  editorConfig: AngularEditorConfig = {\r\n    editable: true,\r\n    spellcheck: true,\r\n    height: '15em',\r\n    minHeight: '0',\r\n    maxHeight: 'auto',\r\n    width: 'auto',\r\n    minWidth: '0',\r\n    translate: 'no',\r\n    enableToolbar: true,\r\n    showToolbar: true,\r\n    placeholder: 'Enter text here...',\r\n    defaultParagraphSeparator: 'p',\r\n    defaultFontName: 'Calibri',\r\n    defaultFontSize: '3',\r\n    fonts: [\r\n      { class: 'arial', name: 'Arial' },\r\n      { class: 'times-new-roman', name: 'Times New Roman' },\r\n      { class: 'calibri', name: 'Calibri' },\r\n      { class: 'comic-sans-ms', name: 'Comic Sans MS' }\r\n    ],\r\n\r\n    customClasses: [\r\n      {\r\n        name: 'quote',\r\n        class: 'quote',\r\n      },\r\n      {\r\n        name: 'redText',\r\n        class: 'redText'\r\n      },\r\n      {\r\n        name: 'titleText',\r\n        class: 'titleText',\r\n        tag: 'h1',\r\n      },\r\n    ],\r\n    uploadUrl: 'v1/image',\r\n    // upload: (file: File) => { ... }\r\n    uploadWithCredentials: false,\r\n    sanitize: true,\r\n    toolbarPosition: 'top',\r\n    toolbarHiddenButtons: [\r\n      ['link',\r\n        'unlink',\r\n        'insertImage',\r\n        'insertVideo',],\r\n    ]\r\n  };\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private dataStorageService: DataStorageService,\r\n    private sweetAlertService: SweetAlertService,\r\n    private dataStorage: DataStorageService,\r\n    private apiService: ApiService,\r\n    public datepipe: DatePipe,\r\n    private spinner: NgxSpinnerService,\r\n    private route: ActivatedRoute,\r\n    private dialog: MatDialog,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.setFormValidator();\r\n    this.id = Number(this.route.snapshot.paramMap.get('id'));\r\n    this.currentUser = this.dataStorage.getUserAccount();\r\n    console.log(this.applicationStage);\r\n\r\n    if ((!this.commentS1Application.screenerDecisionComment && !this.commentS1Application.reviewerDecisionComment &&\r\n      (this.commentS1Application.releaseStatus === 'FOR_RELEASE' || this.commentS1Application.releaseStatus === 'RELEASED') &&\r\n      this.currentUser.userRole.name !== 'ROLE_REVIEWER')\r\n      || this.commentS1Application.internalStatus === APPLICATION_STATUS.S1_APPLICATION_REJECTED) {\r\n      this.disabledComment = true;\r\n    }\r\n\r\n\r\n    // if(this.applicationStage != APPLICATION_STAGE.S2_APPLICATION){\r\n    //     this.getComments('');\r\n    // }\r\n    this.getComments();\r\n    this.getCopyClaims();\r\n  }\r\n\r\n  addInternalComment(comment: CommentThread): void {\r\n    let endpoint;\r\n    if (this.applicationStage === APPLICATION_STAGE.S2_APPLICATION) {\r\n      endpoint = ENDPOINTS.commentS2\r\n      this.internalComment.applicationFormType = APPFORM_TYPE.S2;\r\n      this.internalComment.applicationFormS2 = this.commentS2Application;\r\n      console.log('S2 Comment Object', this.internalComment);\r\n    } else {\r\n      endpoint = ENDPOINTS.comment\r\n      this.internalComment.applicationFormType = APPFORM_TYPE.S1;\r\n      this.internalComment.appFormReference = this.commentS1Application.appFormReference;\r\n      console.log('S1 Comment Object', this.internalComment);\r\n    }\r\n\r\n    if (this.internalCommentProcess === 'Save') {\r\n      this.spinner.show();\r\n      comment.actionBy = this.currentUser;\r\n      comment.role = this.dataStorageService.getUserRole();\r\n      comment.actionDate = new Date();\r\n      comment.commentType = 'INTERNAL';\r\n      comment.comment = this.setHtml5Value(comment.comment);\r\n      this.internalCommentList.push(comment);\r\n\r\n      this.apiService.save(endpoint, comment).subscribe(\r\n        (res: any) => {\r\n          console.log('RES', res);\r\n          if (res !== undefined) {\r\n            this.spinner.hide();\r\n            this.sweetAlertService.customSuccessMessage('Internal Comment has been added!');\r\n            this.internalComment = new CommentThread();\r\n            this.getComments();\r\n            this.getCommentsS2(res.responseData.data.applicationFormS2);\r\n          }\r\n        }, (err: any) => {\r\n          this.spinner.hide();\r\n          console.log('errrrrrrrr:::', err);\r\n\r\n          this.sweetAlertService.error(err);\r\n        }, () => {\r\n          this.spinner.hide();\r\n          this.comment = new Comment();\r\n        })\r\n\r\n    } else {\r\n      let dateTransformed = this.datepipe.transform(new Date(), 'yyyy-MM-dd')\r\n\r\n      Swal.fire({\r\n        text: 'Are you sure you want to update this comment?',\r\n        icon: 'question',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        confirmButtonText: 'Confirm'\r\n      }).then((result) => {\r\n        if (result.value) {\r\n          this.spinner.show();\r\n          // this.internalComment.modifiedBy = this.currentUser.username\r\n          // this.internalComment.modifiedDate = new Date();\r\n          this.internalComment.comment = this.setHtml5Value(this.internalComment.comment);\r\n          this.apiService.update(endpoint, this.internalComment).subscribe(\r\n            (res: any) => {\r\n              // this.internalCommentList = res.responseData.data;\r\n              this.spinner.hide();\r\n              this.sweetAlertService.customSuccessMessage('Internal Comment has been Updated!');\r\n              this.internalComment = new CommentThread();\r\n              this.internalCommentProcess = 'Save';\r\n              this.getComments();\r\n              this.getCommentsS2(res.responseData.data.applicationFormS2);\r\n            }, (err: any) => {\r\n              this.spinner.hide();\r\n            });\r\n        }\r\n\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  sendReply(comment: CommentThread){\r\n    \r\n    console.log(this.replyInternalComment)\r\n    // this.replyInternalComment.parent = comment;\r\n    this.replyInternalComment.isReply = true;\r\n    this.replyInternalComment.parentId = comment.id;\r\n    this.addInternalComment(this.replyInternalComment);\r\n\r\n  }\r\n  cancelReply(comment: CommentThread){\r\n    comment = new CommentThread();\r\n    comment.replyEditorIsEnabled = false;\r\n  }\r\n\r\n  addExternalComment(): void {\r\n    let endpoint;\r\n    if (this.applicationStage === APPLICATION_STAGE.S2_APPLICATION) {\r\n      endpoint = ENDPOINTS.commentS2\r\n      this.externalComment.applicationFormType = APPFORM_TYPE.S2;\r\n      this.externalComment.applicationFormS2 = this.commentS2Application;\r\n    } else {\r\n      endpoint = ENDPOINTS.comment\r\n      this.externalComment.applicationFormType = APPFORM_TYPE.S1;\r\n      this.externalComment.appFormReference = this.commentS1Application.appFormReference;\r\n    }\r\n\r\n    if (this.externalCommentProcess === 'Save') {\r\n      this.spinner.show();\r\n      this.externalComment.actionBy = this.currentUser;\r\n      this.externalComment.role = this.dataStorageService.getUserRole();\r\n      this.externalComment.actionDate = new Date();\r\n      this.externalComment.commentType = 'EXTERNAL';\r\n      this.externalComment.comment = this.setHtml5Value(this.externalComment.comment);\r\n      this.externalCommentList.push(this.externalComment);\r\n\r\n      this.apiService.save(endpoint, this.externalComment).subscribe(\r\n        (res: any) => {\r\n          if (res !== undefined) {\r\n            this.spinner.hide();\r\n            this.sweetAlertService.customSuccessMessage('External Comment has been added!');\r\n            this.externalComment = new CommentThread();\r\n            this.editExternalComment = false;\r\n            this.getComments();\r\n            this.getCommentsS2(res.responseData.data.applicationFormS2);\r\n          }\r\n        }, (err: any) => {\r\n          this.spinner.hide();\r\n          console.log('errrrrrrrr:::', err);\r\n\r\n          this.sweetAlertService.error(err);\r\n        }, () => {\r\n          this.spinner.hide();\r\n          this.comment = new Comment();\r\n        })\r\n\r\n    } else {\r\n      let dateTransformed = this.datepipe.transform(new Date(), 'yyyy-MM-dd')\r\n\r\n      Swal.fire({\r\n        text: 'Are you sure you want to update this comment?',\r\n        icon: 'question',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        confirmButtonText: 'Confirm'\r\n      }).then((result) => {\r\n        if (result.value) {\r\n          this.spinner.show();\r\n          // this.externalComment.modifiedBy = this.currentUser.username;\r\n          // this.externalComment.modifiedDate = new Date();\r\n          this.externalComment.comment = this.setHtml5Value(this.externalComment.comment);\r\n          this.apiService.update(endpoint, this.externalComment).subscribe(\r\n            (res: any) => {\r\n              this.spinner.hide();\r\n              // this.externalCommentList = res.responseData.data;\r\n              this.sweetAlertService.customSuccessMessage('External Comment has been Updated!');\r\n              this.externalComment = new CommentThread();\r\n              this.externalCommentProcess = 'Save'\r\n              this.editExternalComment = false;\r\n              this.getComments();\r\n              this.getCommentsS2(res.responseData.data.applicationFormS2);\r\n            }, (err: any) => {\r\n              this.spinner.hide();\r\n            });\r\n        }\r\n\r\n      });\r\n    }\r\n  }\r\n\r\n  addCopyClaims(): void {\r\n    if (this.copyClaimesProcess === 'Save') {\r\n      this.spinner.show();\r\n      this.copyClaims.actionBy = this.currentUser;\r\n      this.copyClaims.role = this.dataStorageService.getUserRole();\r\n      this.copyClaims.actionDate = new Date();\r\n      this.copyClaims.appFormReference = this.commentS1Application.appFormReference;\r\n      this.copyClaims.description = this.setHtml5Value(this.copyClaims.description);\r\n\r\n      this.apiService.save(ENDPOINTS.copyClaims, this.copyClaims).subscribe(\r\n        (res: any) => {\r\n          if (res !== undefined) {\r\n            this.spinner.hide();\r\n            this.sweetAlertService.customSuccessMessage('Copy claims description has been added!');\r\n            this.copyClaims = new CopyClaims();\r\n            this.getCopyClaims();\r\n            this.editCopyClaimsComment = false;\r\n          }\r\n        }, (err: any) => {\r\n          this.spinner.hide();\r\n          // console.log('errrrrrrrr:::', err);\r\n\r\n          this.sweetAlertService.error(err);\r\n        }, () => {\r\n          this.spinner.hide();\r\n          this.copyClaims = new CopyClaims();\r\n        })\r\n    } else {\r\n      Swal.fire({\r\n        text: 'Are you sure you want to update copy claim?',\r\n        icon: 'question',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        confirmButtonText: 'Confirm'\r\n      }).then((result) => {\r\n        if (result.value) {\r\n          this.spinner.show();\r\n          this.copyClaims.description = this.setHtml5Value(this.copyClaims.description);\r\n          this.apiService.update(ENDPOINTS.copyClaims, this.copyClaims).subscribe(\r\n            (res: any) => {\r\n              this.spinner.hide();\r\n              this.sweetAlertService.customSuccessMessage('Copy claims description has been Updated!');\r\n              this.copyClaims = new CopyClaims();\r\n              this.copyClaimesProcess = 'Save'\r\n              this.editCopyClaimsComment = false;\r\n              this.getCopyClaims();\r\n\r\n            }, (err: any) => {\r\n              this.spinner.hide();\r\n            });\r\n        }\r\n\r\n      });\r\n    }\r\n  }\r\n\r\n  getComments(): void { // comments for S1\r\n    if (this.commentS1Application) {\r\n      this.apiService.findByParam(ENDPOINTS.comment + '/app-form-reference', this.commentS1Application.appFormReference).subscribe(\r\n        (res: any) => {\r\n          this.commentList = res.responseData.data;\r\n          // get internal comments\r\n          this.internalCommentList = this.commentList.filter(internalComment => internalComment.commentType === 'INTERNAL');\r\n          console.log('INTERNAL', this.internalCommentList);\r\n          // get external comments\r\n          this.externalCommentList = this.commentList.filter(externalComment => externalComment.commentType === 'EXTERNAL');\r\n          console.log('EXTERNAL', this.externalCommentList);\r\n          this.spinner.hide();\r\n        }, (err: any) => {\r\n        });\r\n    }\r\n  }\r\n\r\n  getCommentsS2(data): void { // comments for S2\r\n    if (data) {\r\n      this.apiService.findByParam(ENDPOINTS.commentS2 + '/application-form-s2', data.id).subscribe(\r\n        (res: any) => {\r\n          this.commentList = res.responseData.data;\r\n          // get internal comments\r\n          this.internalCommentList = this.commentList.filter(internalComment => internalComment.commentType === 'INTERNAL');\r\n          // get external comments\r\n          this.externalCommentList = this.commentList.filter(externalComment => externalComment.commentType === 'EXTERNAL');\r\n        }, (err: any) => {\r\n        });\r\n    }\r\n  }\r\n\r\n  getCopyClaims(): void {\r\n    this.apiService.findByParam(ENDPOINTS.copyClaims + '/app-form-reference', this.commentS1Application.appFormReference).subscribe(\r\n      (res: any) => {\r\n        this.copyClaimsList = res.responseData.data;\r\n      }, (err: any) => {\r\n      });\r\n  }\r\n\r\n  modifyCopyClaims(data) {\r\n    this.copyClaimesProcess = 'Update';\r\n    this.copyClaims = data;\r\n    this.editCopyClaimsComment = true;\r\n    this.getCopyClaims();\r\n  }\r\n\r\n  modifyInternalComment(data): void {\r\n    this.internalCommentProcess = 'Update';\r\n    this.internalComment = data;\r\n    this.getComments();\r\n    this.getCommentsS2(data);\r\n  }\r\n\r\n  deleteComment(data): void {\r\n    let endpoint;\r\n    if (this.applicationStage === APPLICATION_STAGE.S2_APPLICATION) {\r\n      endpoint = ENDPOINTS.commentS2\r\n    } else {\r\n      endpoint = ENDPOINTS.comment\r\n    }\r\n    Swal.fire({\r\n      text: 'Are you sure you want to delete this comment?',\r\n      icon: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Confirm'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.spinner.show();\r\n        this.apiService.deleteById(endpoint, data.id).subscribe(\r\n          (res: any) => {\r\n            if (data?.applicationFormType === 'S1') {\r\n              this.getComments();\r\n            } else {\r\n              this.getCommentsS2(data);\r\n            }\r\n            this.sweetAlertService.customSuccessMessage('Comment has been Deleted!');\r\n          }, (err: any) => {\r\n            this.spinner.hide()\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  deleteCopyClaims(data): void {\r\n\r\n    Swal.fire({\r\n      text: 'Are you sure you want to delete this copy claims?',\r\n      icon: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Confirm'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.apiService.deleteById(ENDPOINTS.copyClaims, data.id).subscribe(\r\n          (res: any) => {\r\n            this.sweetAlertService.customSuccessMessage('Copy claim has been Deleted!');\r\n            this.getCopyClaims();\r\n          }, (err: any) => {\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  modifyExternalComment(data): void {\r\n    this.externalCommentProcess = 'Update';\r\n    this.externalComment = data;\r\n    this.editExternalComment = true;\r\n    this.getComments();\r\n    this.getCommentsS2(data);\r\n  }\r\n\r\n  cancel(): void {\r\n    this.internalComment = new CommentThread();\r\n    this.externalComment = new CommentThread();\r\n    this.copyClaims = new CopyClaims();\r\n    this.internalCommentProcess = 'Save';\r\n    this.externalCommentProcess = 'Save';\r\n    this.copyClaimesProcess = 'Save';\r\n    this.editCopyClaimsComment = false;\r\n    this.editExternalComment = false;\r\n    this.getComments();\r\n    this.getCopyClaims();\r\n\r\n  }\r\n\r\n  setFormValidator(): void {\r\n    this.commentForm = this.formBuilder.group({\r\n      internalComments: [''],\r\n      externalComments: [''],\r\n      commentType: [''],\r\n      description: [''],\r\n    });\r\n  }\r\n\r\n  setHtml5Value(commentBody: any) {\r\n    this.commentHtmlOutput = \"<!DOCTYPE html><html lang=\" + \"en\" + \"><meta charset=\" + \"utf-8\" + \"><body>\" + commentBody + \"</body></html>\"\r\n    return this.commentHtmlOutput;\r\n  }\r\n\r\n}\r\n","<form [formGroup]=\"commentForm\">\r\n  <mat-tab-group mat-align-tabs=\"center\" class=\"mat-tab-group\">\r\n    <!-- TAB FOR INTERNAL COMMENTS -->\r\n    <mat-tab label=\"Internal Comments Tab\">\r\n      <div class=\"mat-tab\">\r\n        <div class=\"col comment\">\r\n          <label>INTERNAL</label>\r\n          <angular-editor #editorToolBar [(ngModel)]=\"internalComment.comment\" [config]=\"editorConfig\" name=\"internalComments\"\r\n          formControlName=\"internalComments\"\r\n          [hidden]=\"disabledComment\"></angular-editor><br>\r\n\r\n          <div class=\"\">\r\n            <button mat-raised-button color=\"primary\" (click)=\"addInternalComment(internalComment)\" [disabled]=\"!internalComment.comment\"\r\n            [hidden]=\"disabledComment\">\r\n              <i class=\"material-icons color__white\">comment_bank</i> &nbsp;{{internalCommentProcess}}\r\n            </button>\r\n            <button mat-raised-button color=\"primary\" (click)=\"cancel()\" [disabled]=\"!internalComment.comment\"\r\n            [hidden]=\"disabledComment\">\r\n              <i class=\"material-icons color__white\">cancel</i> &nbsp;Cancel\r\n            </button>\r\n            <div >\r\n              <!-- CURRENT COMMENT -->\r\n              <div class=\"comment-list\">\r\n                <form class=\"comments\" *ngFor=\"let comment of internalCommentList\">\r\n                  <div class=\"row username-content\">\r\n                    <p> <i class=\"material-icons\">comment</i> {{comment?.actionBy?.firstName}}\r\n                      {{comment.actionBy.lastName}}<b> ({{comment.role.replaceAll('_', ' ').replaceAll('ROLE' , '')}}) |\r\n                        {{comment.actionDate | date:'fullDate'}} | {{comment.actionDate | date:'hh:mm:ss aa'}} </b>\r\n  \r\n                      <b *ngIf=\"comment?.modifiedBy != undefined && comment?.modifiedDate != undefined\"> | Modified by:\r\n                        {{comment.modifiedBy}} ({{comment.modifiedDate}}) </b>\r\n  \r\n                      <span class=\"a-icon\" *ngIf=\"comment?.actionBy?.id === currentUser?.id || currentUser?.userRole?.name === 'ROLE_REVIEWER'\"\r\n                      [hidden]=\"disabledComment\">\r\n                        <i class=\"material-icons\" (click)=\"deleteComment(comment)\" matTooltip=\"Delete\">delete</i>\r\n                      </span>\r\n                      <span class=\"a-icon\" *ngIf=\"comment?.actionBy?.id === currentUser?.id || currentUser?.userRole?.name === 'ROLE_REVIEWER'\"\r\n                        [hidden]=\"disabledComment\">\r\n                        <i class=\"material-icons\" style=\"color:blue\" (click)=\"modifyInternalComment(comment)\" matTooltip=\"Edit\">edit</i>\r\n                      </span>\r\n  \r\n                    </p>\r\n                  </div>\r\n                  <div class=\"comment-content\">\r\n                    <div [innerHTML]=\"comment.comment\"></div>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n\r\n\r\n              <!-- CURRENT COMMENT END -->\r\n\r\n              <!-- NEW COMMENT IMPL -->\r\n              \r\n              <!-- NEW COMMENT IMPL END -->\r\n              <div class=\"no-record\" *ngIf=\"internalCommentList.length==0 && disabledComment\">\r\n                No results found.\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </mat-tab>\r\n    <!-- END OF TAB FOR INTERNAL COMMENTS -->\r\n\r\n    <!-- TAB FOR COPY CLAIMS -->\r\n    <mat-tab label=\"Copy Claims Tab\"\r\n      *ngIf=\"currentUser?.userRole?.name != 'ROLE_ENCODER' && commentS1Application.appliedS2 === false\">\r\n      <div class=\"col comment\">\r\n        <label>COPY/CLAIMS</label>\r\n        <div class=\"\">\r\n          <ng-container *ngIf=\"editCopyClaimsComment || (!editCopyClaimsComment && copyClaimsList?.length === 0)\">\r\n            <angular-editor [(ngModel)]=\"copyClaims.description\" [config]=\"editorConfig\" name=\"description\"\r\n              formControlName=\"description\"\r\n              [hidden]=\"disabledComment\">\r\n            </angular-editor><br>\r\n            <button mat-raised-button color=\"primary\" (click)=\"addCopyClaims()\" [disabled]=\"!copyClaims.description\"\r\n              [hidden]=\"disabledComment\">\r\n              <i class=\"material-icons color__white\">comment_bank</i> &nbsp;{{copyClaimesProcess}}\r\n            </button>\r\n            <button mat-raised-button color=\"primary\" (click)=\"cancel()\" [disabled]=\"!copyClaims.description\"\r\n              [hidden]=\"disabledComment\">\r\n              <i class=\"material-icons color__white\">cancel</i> &nbsp;Cancel\r\n            </button>\r\n          </ng-container>\r\n          <div class=\"comment-list\">\r\n            <form class=\"comments\" *ngFor=\"let copyClaims of copyClaimsList\">\r\n              <div class=\"row username-content\">\r\n                <p> <i class=\"material-icons color__white\">comment</i> {{copyClaims?.actionBy?.firstName}}\r\n                  {{copyClaims.actionBy.lastName}}<b> ({{copyClaims.role.replaceAll('_', ' ').replaceAll('ROLE', '')}})\r\n                    | {{copyClaims.actionDate | date:'fullDate'}} | {{copyClaims.actionDate | date:'hh:mm:ss aa'}} </b>\r\n\r\n                    <b *ngIf=\"copyClaims?.modifiedBy != undefined && copyClaims?.modifiedDate != undefined\"> | Modified by:\r\n                      {{copyClaims.modifiedBy}} ({{copyClaims.modifiedDate}}) </b>\r\n\r\n                    <!-- <span class=\"a-icon\" *ngIf=\"copyClaims?.actionBy?.id === currentUser?.id || currentUser?.userRole?.name === 'ROLE_REVIEWER'\"\r\n                    [hidden]=\"disabledComment\">\r\n                      <i class=\"material-icons\" (click)=\"deleteCopyClaims(copyClaims)\" matTooltip=\"Delete\">delete</i>\r\n                    </span> -->\r\n                    <span class=\"a-icon\" *ngIf=\"copyClaims?.actionBy?.id === currentUser?.id || currentUser?.userRole?.name === 'ROLE_REVIEWER'\"\r\n                      [hidden]=\"disabledComment\">\r\n                      <i class=\"material-icons\" style=\"color:blue\" (click)=\"modifyCopyClaims(copyClaims)\" matTooltip=\"Edit\">edit</i>\r\n                    </span>\r\n              </div>\r\n              <div class=\"comment-content\">\r\n                <div [innerHTML]=\"copyClaims.description\"></div>\r\n              </div>\r\n            </form>\r\n            <div class=\"no-record\"\r\n              *ngIf=\"copyClaimsList.length==0 && disabledComment\">\r\n              No results found.\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </mat-tab>\r\n    <!-- END OF TAB FOR COPY CLAIMS -->\r\n\r\n    <!-- TAB FOR EXTERNAL COMMENTS -->\r\n    <mat-tab label=\"External Comments Tab\">\r\n      <div class=\"col comment\">\r\n        <label>EXTERNAL</label>\r\n        <div class=\"\">\r\n          <ng-container *ngIf=\"editExternalComment || (!editExternalComment && externalCommentList?.length === 0)\">\r\n            <angular-editor [(ngModel)]=\"externalComment.comment\" [config]=\"editorConfig\" name=\"externalComments\"\r\n              formControlName=\"externalComments\"\r\n              [hidden]=\"commentS2Application?.internalStatus === 'S1_APPLICATION_REVIEWED' ||\r\n              (disabledComment)\">\r\n            </angular-editor><br>\r\n            <button mat-raised-button color=\"primary\" (click)=\"addExternalComment()\" [disabled]=\"!externalComment.comment\"\r\n              [hidden]=\"commentS2Application?.internalStatus === 'S1_APPLICATION_REVIEWED' ||\r\n              (disabledComment)\">\r\n              <i class=\"material-icons\">comment_bank</i> &nbsp;{{externalCommentProcess}}\r\n            </button>\r\n            <button mat-raised-button color=\"primary\" (click)=\"cancel()\" [disabled]=\"!externalComment.comment\"\r\n              [hidden]=\"commentS2Application?.internalStatus === 'S1_APPLICATION_REVIEWED' ||\r\n              (disabledComment)\">\r\n              <i class=\"material-icons\">cancel</i> &nbsp;Cancel\r\n            </button>\r\n          </ng-container>\r\n          <div class=\"comment-list\">\r\n            <form class=\"comments\" *ngFor=\"let excomment of externalCommentList\">\r\n              <div class=\"row username-content\">\r\n                <p> <i class=\"material-icons\">comment</i> {{excomment?.actionBy?.firstName}}\r\n                  {{excomment.actionBy.lastName}}<b> ({{excomment.role.replaceAll('_', ' ').replaceAll('ROLE' , '')}}) |\r\n                    {{excomment.actionDate | date:'fullDate'}} | {{excomment.actionDate | date:'hh:mm:ss aa'}} </b>\r\n\r\n                    <b *ngIf=\"excomment?.modifiedBy != undefined && excomment?.modifiedDate != undefined\"> | Modified by:\r\n                      {{excomment.modifiedBy}} ({{excomment.modifiedDate}}) </b>\r\n\r\n                    <!-- <span class=\"a-icon\" *ngIf=\"excomment?.actionBy?.id === currentUser?.id || currentUser?.userRole?.name === 'ROLE_REVIEWER'\"\r\n                    [hidden]=\"disabledComment\">\r\n                      <i class=\"material-icons\" (click)=\"deleteComment(excomment)\" matTooltip=\"Delete\">delete</i>\r\n                    </span> -->\r\n                    <span class=\"a-icon\" *ngIf=\"excomment?.actionBy?.id === currentUser?.id || currentUser?.userRole?.name === 'ROLE_REVIEWER'\"\r\n                      [hidden]=\"disabledComment\">\r\n                      <i class=\"material-icons\" style=\"color:blue\" (click)=\"modifyExternalComment(excomment)\" matTooltip=\"Edit\">edit</i>\r\n                    </span>\r\n                  </p>\r\n              </div>\r\n              <div class=\"comment-content\">\r\n                <div class=\"inner-html\" [innerHTML]=\"excomment.comment\"></div>\r\n              </div>\r\n            </form>\r\n            <div class=\"no-record\"\r\n              *ngIf=\"externalCommentList.length==0 && disabledComment\">\r\n              No results found.\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </mat-tab>\r\n    <!-- END OF TAB FOR EXTERNAL COMMENTS -->\r\n  </mat-tab-group>\r\n</form>\r\n","import { S2Application, UserAccount } from '@models';\r\nexport class CommentThread {\r\n    id:                  number;\r\n    appFormReference:    string;\r\n    applicationFormType: string;\r\n    comment:             string;\r\n    actionBy:            UserAccount;\r\n    commentType:         string;\r\n    role:                string;\r\n    actionDate:          Date;\r\n    isReply:             boolean;\r\n    replies:             Array<CommentThread>;\r\n    parentId:            number;\r\n    parent:              any;\r\n    replyEditorIsEnabled: boolean;\r\n    applicationFormS2: S2Application;\r\n    constructor(){\r\n        this.parent = {};\r\n        this.replyEditorIsEnabled = false;\r\n        this.isReply = false;\r\n    }\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { AddCompanyRoutingModule } from './add-company-routing.module';\r\nimport { AngularMaterialModule } from '@shared';\r\nimport { AddCompanyComponent } from './add-company.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\n\r\n@NgModule({\r\n  declarations: [ AddCompanyComponent ],\r\n  imports: [\r\n    CommonModule,\r\n    AddCompanyRoutingModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule,\r\n    AngularMaterialModule,\r\n  ]\r\n})\r\nexport class AddCompanyModule { }\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTable, MatTableDataSource } from '@angular/material/table';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { S2Application } from '@models';\r\nimport { ApiService, DataStorageService, SweetAlertService } from '@services';\r\nimport { APPLICATION_STATUS, ENDPOINTS, FORM_STATUS, ROLES, SUBMISSION_TYPE, USER_ROLES } from '@shared';\r\nimport { ApplicationRequest } from 'app/core/models/application-request.model';\r\nimport { ApplicationCountS2 } from 'app/core/models/applicationCountS2.model';\r\nimport { MultipleApplication } from 'app/core/models/multiple-application.model';\r\nimport { CommonServices } from 'app/core/services/common-services.service';\r\nimport { RequestForSpecialClearingComponent } from 'app/modules/fragments/request-for-special-clearing/request-for-special-clearing.component';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-list-s2-application',\r\n  templateUrl: './list-s2-application.component.html',\r\n  styleUrls: ['./list-s2-application.component.scss']\r\n})\r\nexport class ListS2ApplicationComponent implements OnInit {\r\n  @ViewChild(MatPaginator, { static: false }) paginatorFalse: MatPaginator;\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  pageSize = 10;\r\n  pageNo = 0;\r\n  pageSizeOptions: number[] = [10, 20, 50];\r\n  @ViewChild(MatSort, { static: false }) sort: MatSort;\r\n  @ViewChild(MatTable, { static: false }) table: MatTable<S2Application>;\r\n  dataSource: MatTableDataSource<S2Application>; // in html but not existing in component -- encountered during 'ng serve --aot'\r\n  displayedColumns = ['referenceCode', 'typeOfApplication', 'companyName', 'brand', 'typeOfMedium', 'status', 'internalStatus', 'icon'];\r\n  s2ApplicationList = [];\r\n  s2TotalItems = 0;\r\n  isAscUser: boolean = false\r\n\r\n  // For clearance list\r\n  forClearanceDataSource: MatTableDataSource<S2Application>;\r\n  s2ApplicationListForClearance = [];\r\n  forClearanceDisplayedColumns = ['referenceCode', 'typeOfApplication', 'companyName', 'brand', 'typeOfMedium', 'status', 'icon'];\r\n  s2SpecialTotalItems = 0;\r\n\r\n  s2SpecialApplicationDataSource: MatTableDataSource<MultipleApplication>;\r\n  s2SpecialApplicationList = []\r\n  s2SpecialApplicationDisplayedColumns = ['adTitle', 'typeOfApplication', 'companyName', 'brand', 'status'];\r\n\r\n  applicationRequest = new ApplicationRequest();\r\n\r\n  currentUser: any;\r\n  viewApplicationType: string;\r\n  applicationTypeTitle: string;\r\n  currentPage = 1;\r\n  // currentSize = 100;\r\n  originalTabDataCount = 0;\r\n  complianceTabDataCount = 0;\r\n  releasedAppealTabDataCount = 0;\r\n  toaTabDataCount = 0;\r\n  click = 0;\r\n  timeLeft: number = 60;\r\n  interval: any;\r\n  refreshButtonEnabled = true;\r\n  timerDisplay: any;\r\n  isTimerValueDisplay = false;\r\n  s2ApplicationCountList = [];\r\n\r\n  displayedContent = 'ORIGINAL';\r\n\r\n  s2Application = new S2Application();\r\n  applicationCountS2 = new ApplicationCountS2();\r\n\r\n  isSuperAdmin = false;\r\n  isAdmin = false;\r\n  isAccounting = false;\r\n  isApplicant = false;\r\n  isScreener = false;\r\n  isReviewer = false;\r\n  isAdSpecialist = false;\r\n  isEvaluator = false;\r\n  ascUserRoleList = [...ROLES.filter((role: any) => role.ascUser === true).map((role: any) => role.role)];\r\n  constructor(\r\n    private apiService: ApiService,\r\n    private dataStorage: DataStorageService,\r\n    private router: Router,\r\n    private sweetAlertService: SweetAlertService,\r\n    private dialog: MatDialog,\r\n    private spinner: NgxSpinnerService,\r\n    private route: ActivatedRoute,\r\n    private commonService: CommonServices\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.isAscUser = this.ascUserRoleList.includes(this.dataStorage.getUserRole());\r\n    this.currentUser = this.dataStorage.getUserAccount();\r\n    this.viewApplicationType = this.route.parent.snapshot.url[0].path;\r\n    this.getListCount();\r\n    if (this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT) {\r\n      this.displayedColumns = ['referenceCode', 'typeOfApplication', 'companyName', 'brand', 'typeOfMedium', 'status', 'icon'];\r\n    }\r\n\r\n    if (this.viewApplicationType === 'special') {\r\n      this.applicationTypeTitle = 'SPECIAL CLEARING';\r\n      this.getSpecialS2ApplicationList();\r\n    } else {\r\n      this.applicationTypeTitle = 'INDIVIDUAL';\r\n      this.getList();\r\n    }\r\n\r\n    this.initUserRole();\r\n  }\r\n\r\n\r\n  initUserRole() {\r\n    if (this.currentUser.userRole.name === USER_ROLES.ROLE_SUPER_ADMIN) {\r\n      this.isSuperAdmin = true;\r\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_ADMIN) {\r\n      this.isAdmin = true;\r\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_ACCOUNTING) {\r\n      this.isAccounting = true;\r\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT) {\r\n      this.isApplicant = true;\r\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_SCREENER) {\r\n      this.isScreener = true;\r\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_REVIEWER) {\r\n      this.isReviewer = true;\r\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_AD_SPECIALIST) {\r\n      this.isAdSpecialist = true;\r\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_ENCODER) {\r\n      this.isEvaluator = true;\r\n    }\r\n  }\r\n\r\n\r\n  getListCount(): void {\r\n    let endpoint;\r\n    if (this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT) {\r\n      endpoint = ENDPOINTS.badgeCountByApplicationOwnerS2;\r\n    } else {\r\n      endpoint = ENDPOINTS.badgeCountByAscUserS2;\r\n    }\r\n    this.apiService.findAll(endpoint + this.currentUser.id).subscribe(\r\n      (res: any) => {\r\n        this.applicationCountS2 = res;\r\n      })\r\n  }\r\n\r\n  getList(submissionType = 'ORIGINAL'): void {\r\n\r\n    this.currentPage = this.pageNo;\r\n    this.currentPage++;\r\n    if (this.currentPage === 0) this.currentPage++;\r\n    let param = submissionType.toUpperCase();\r\n\r\n    if (param === SUBMISSION_TYPE.COMPLIANCE && this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT) {\r\n      param = `&complianceForm=true`;\r\n    } else if (param === SUBMISSION_TYPE.COMPLIANCE && this.currentUser.userRole.name !== USER_ROLES.ROLE_APPLICANT) {\r\n      param = `&complianceForm=true`;\r\n    } else if (param === SUBMISSION_TYPE.TOA) {\r\n      param = `&hasToa=true`;\r\n    } else {\r\n      param = `&submissionType=${param}&complianceForm=false`;\r\n    }\r\n\r\n    this.spinner.show();\r\n    let endpoint = `custom/search?page=${this.currentPage}&size=${this.pageSize}${param}`;\r\n\r\n    if (this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT) {\r\n      endpoint = ENDPOINTS.s2ApplicationFormPresentor + endpoint + `&applicationOwnerId=${this.currentUser.id}`;\r\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_ENCODER) {\r\n      endpoint = ENDPOINTS.s2ApplicationFormEncoder + endpoint + `&assignedEncoderId=${this.currentUser.id}`;\r\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_AD_SPECIALIST) {\r\n      endpoint = ENDPOINTS.s2ApplicationFormAdSpe + endpoint + `&assignedAdSpecialistId=${this.currentUser.id}`;\r\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_ADMIN || this.currentUser.userRole.name === USER_ROLES.ROLE_SUPER_ADMIN) {\r\n      endpoint = ENDPOINTS.s2ApplicationFormAdmin + endpoint;\r\n    } else {\r\n      endpoint = ENDPOINTS.s2Application + endpoint + `&applicationOwnerId=${this.currentUser.id}`;\r\n    }\r\n\r\n    // console.log(endpoint);\r\n    this.apiService.findAll(endpoint).subscribe(\r\n      (res: any) => {\r\n        this.s2ApplicationList = res.data;\r\n\r\n        this.s2TotalItems = res.totalItems;\r\n        console.log('s2ApplicationList: ', res);\r\n        this.dataSource = new MatTableDataSource<S2Application>(this.s2ApplicationList);\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n        this.hideSpinner();\r\n      }, (err: any) => {\r\n        this.hideSpinner();\r\n      }\r\n    )\r\n  }\r\n\r\n  hideSpinner() {\r\n    setTimeout(() => {\r\n      this.spinner.hide();\r\n    }, 1);\r\n  }\r\n\r\n  getSpecialS2ApplicationList(): void {\r\n    let endpoint = ''; let obj;\r\n    if (this.currentUser.userRole.name === USER_ROLES.ROLE_ADMIN || this.currentUser.userRole.name === USER_ROLES.ROLE_SUPER_ADMIN) {\r\n      obj = {\r\n        statuses: ['FOR_APPROVAL', 'APPROVED', 'DISAPPROVED']\r\n      }\r\n      endpoint = ENDPOINTS.s2SpecialClearingApplicationRequestsAdmin;\r\n    } else {\r\n      obj = {\r\n        applicationOwnerId: this.currentUser.id,\r\n        statuses: ['FOR_APPROVAL', 'APPROVED', 'DISAPPROVED']\r\n      }\r\n      endpoint = ENDPOINTS.s2SpecialClearingApplicationRequests;\r\n    }\r\n\r\n    this.currentPage = this.pageNo;\r\n    this.currentPage++;\r\n    if (this.currentPage === 0) this.currentPage++;\r\n\r\n    this.apiService.save(`${endpoint}?page=${this.currentPage}&size=${this.pageSize}`, obj)\r\n      .subscribe((res: any) => {\r\n        this.s2SpecialApplicationList = res.data;\r\n\r\n        console.log('s2SpecialApplicationList: ', res);\r\n        this.s2SpecialTotalItems = res.totalItems;\r\n        this.s2SpecialApplicationDataSource = new MatTableDataSource<MultipleApplication>(this.s2SpecialApplicationList);\r\n        this.s2SpecialApplicationDataSource.paginator = this.paginator;\r\n        this.s2SpecialApplicationDataSource.sort = this.sort;\r\n        setTimeout(() => {\r\n          this.spinner.hide();\r\n        }, 1);\r\n      }, (err: any) => {\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n\r\n  pageEvents(event: any) {\r\n    this.pageSize = event.pageSize;\r\n\r\n    if (event.pageIndex > this.pageNo) {\r\n      this.pageNo++;\r\n    } else {\r\n      this.pageNo--;\r\n    }\r\n\r\n    if (event.pageSize > event.length) {\r\n      this.pageNo = 0;\r\n    }\r\n\r\n    this.getList();\r\n  }\r\n\r\n  setPageSizeOptions(setPageSizeOptionsInput: string) {\r\n    if (setPageSizeOptionsInput) {\r\n      this.pageSizeOptions = setPageSizeOptionsInput.split(',').map(str => +str);\r\n    }\r\n  }\r\n\r\n  viewApplication(data: any): void {\r\n    this.s2Application = data;\r\n    console.log('S2 FORM: ', this.s2Application);\r\n\r\n    if (data.formStatus === FORM_STATUS.OPEN && this.s2Application.internalStatus !== APPLICATION_STATUS.S1_APPLICATION_REJECTED\r\n      && (this.currentUser.userRole.name !== USER_ROLES.ROLE_APPLICANT && this.currentUser.userRole.name !== USER_ROLES.ROLE_ADMIN\r\n        && this.currentUser.userRole.name !== USER_ROLES.ROLE_SUPER_ADMIN\r\n        && this.currentUser.userRole.name !== USER_ROLES.ROLE_AD_SPECIALIST) // s2form will be assigned to s1form adspe\r\n    ) {\r\n      Swal.fire({\r\n        text: 'Are you sure you want to open this application? This application will be LOCKED on your account.',\r\n        icon: 'question',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        confirmButtonText: 'Confirm'\r\n      }).then((result) => {\r\n        if (result.value) {\r\n          this.spinner.show();\r\n          this.s2Application.assignedEncoder = this.currentUser;\r\n          // wait for BE\r\n          this.apiService.save(ENDPOINTS.s2ApplicationFormEncoder + ENDPOINTS.takeApplication, this.s2Application).subscribe(\r\n            (res: any) => {\r\n              this.spinner.hide();\r\n              this.sweetAlertService.customSuccessMessage('Application successfully assigned to you.', 3);\r\n              this.router.navigate(['asc/page/application/s2/update/', data.id]);\r\n            }, (err: any) => {\r\n              this.spinner.hide();\r\n            });\r\n        }\r\n      });\r\n    } else {\r\n      this.router.navigate(['asc/page/application/s2/update/', data.id]);\r\n    }\r\n\r\n  }\r\n\r\n  applyApplicationForToa(data: any): void {\r\n    Swal.fire({\r\n      text: 'Are you sure you want to apply this application to TOA?',\r\n      icon: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Confirm'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.spinner.show();\r\n        this.apiService.save(ENDPOINTS.s2ApplicationForm + 'clearance/presentor/submit', data).subscribe(\r\n          (res: any) => {\r\n            this.spinner.hide();\r\n            this.sweetAlertService.customSuccessMessage('Application is applied for TOA successfully');\r\n            this.router.navigateByUrl('asc/page/application/s2/lists');\r\n          }, (err: any) => {\r\n            this.spinner.hide();\r\n          });\r\n      }\r\n    })\r\n  }\r\n\r\n  viewSpecialApplication(data: any): void {\r\n    this.applicationRequest = data;\r\n    this.s2Application = new S2Application();\r\n    this.s2Application.specialClearing = true;\r\n    this.s2Application.applicationForm = data;\r\n\r\n    let dialogRef;\r\n    dialogRef = this.dialog.open(RequestForSpecialClearingComponent, {\r\n      width: '80%',\r\n      height: '85%',\r\n      data: {\r\n        applicationRequest: this.applicationRequest,\r\n        applicationType: 'Request for Special Clearing'\r\n      }\r\n    });\r\n  }\r\n\r\n  doFilterS1MultipleApplicationList(event) { } // in html but not existing in component -- encountered during 'ng serve --aot'\r\n\r\n  getCompany(elementId) { } // in html but not existing in component -- encountered during 'ng serve --aot'\r\n\r\n  doFilter(event) { } // in html but not existing in component -- encountered during 'ng serve --aot'\r\n\r\n  changeTab(evt) {\r\n    if (evt.tab) {\r\n      this.displayedContent = evt.tab.textLabel;\r\n      if (this.displayedContent === 'For Appeal') {\r\n        this.getForDecisionAndComment();\r\n      } else {\r\n        this.getList(this.displayedContent);\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  getForDecisionAndComment() {\r\n    let endpoint = '';\r\n\r\n    // APPEAL\r\n    if (this.isAdSpecialist) {\r\n      endpoint = ENDPOINTS.s2ApplicationFormAdSpe + `custom/search?assignedAdSpecialistId=${this.currentUser.id}&hasOngoingAppeal=true&page=${this.currentPage}&size=${this.pageSize}&submissionType=ORIGINAL`;\r\n    }\r\n    else if (this.isAdmin || this.isSuperAdmin) {\r\n      endpoint = ENDPOINTS.s2ApplicationFormAdmin + `custom/search?hasOngoingAppeal=true&page=${this.currentPage}&size=${this.pageSize}`;\r\n    }\r\n\r\n    this.apiService.findAll(endpoint)\r\n      .subscribe((res: any) => {\r\n        if (res) {\r\n          this.s2ApplicationList = res?.data;\r\n          console.log('Appeal: ', this.s2ApplicationList);\r\n\r\n          this.s2TotalItems = res.totalItems;\r\n          this.dataSource = new MatTableDataSource<S2Application>(this.s2ApplicationList);\r\n          this.dataSource.paginator = this.paginatorFalse;\r\n          this.dataSource.sort = this.sort;\r\n          setTimeout(() => {\r\n            this.spinner.hide();\r\n          }, 1);\r\n        } else {\r\n          this.s2ApplicationList = [];\r\n        }\r\n      }, (err) => {\r\n        setTimeout(() => {\r\n          this.spinner.hide();\r\n        }, 1);\r\n      });\r\n  }\r\n\r\n  sortEvent() {\r\n    this.click++;\r\n    if (this.click % 2 === 0) {\r\n      this.dataSource = new MatTableDataSource<S2Application>(this.s2ApplicationList);\r\n      this.dataSource.paginator = this.paginator;\r\n      return this.dataSource.data.sort((a, b) => a.id - b.id);\r\n    } else {\r\n      this.dataSource = new MatTableDataSource<S2Application>(this.s2ApplicationList);\r\n      this.dataSource.paginator = this.paginator;\r\n      return this.dataSource.data.reverse();\r\n    }\r\n    // for random sort\r\n    // this.dataSource.data.sort(() => Math.random() - 0.5)\r\n  }\r\n\r\n  refresh() {\r\n    this.commonService.sendClickEvent();\r\n    this.startTimer();\r\n  }\r\n\r\n  startTimer() {\r\n    this.interval = setInterval(() => {\r\n      this.timeLeft--;\r\n      if(this.timeLeft > 0){\r\n        this.refreshButtonEnabled = false;\r\n        this.isTimerValueDisplay = true;\r\n      }else{\r\n        this.refreshButtonEnabled = true;\r\n        this.isTimerValueDisplay = false;\r\n        this.timeLeft = 60;\r\n        clearInterval(this.interval)\r\n      }\r\n      this.timerDisplay=this.transform(this.timeLeft)\r\n    },1000)\r\n  }\r\n\r\n  transform(value: number): string {\r\n    const minutes: number = Math.floor(value / 60);\r\n    return minutes + ':' + (value - minutes * 60);\r\n  }\r\n\r\n}\r\n","<form>\r\n  <div class=\"container-fluid\">\r\n\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12 title\">\r\n        <mat-label>\r\n          <i class=\"material-icons\">file_copy</i> S2 APPLICATION - <b>{{applicationTypeTitle}}</b>\r\n        </mat-label>\r\n        <button class=\"button-right\" type=\"submit\" mat-raised-button color=\"primary\" (click)=\"refresh()\" [disabled]=\"!refreshButtonEnabled\">\r\n          <span class=\"material-icons\">sync</span>\r\n          <label *ngIf=\"isTimerValueDisplay\"> &nbsp;{{timerDisplay}}</label>\r\n        </button>\r\n      </div>\r\n    </div>\r\n    <hr>\r\n\r\n    <div *ngIf=\"applicationTypeTitle === 'INDIVIDUAL'\">\r\n      <ng-container *ngTemplateOutlet=\"individualS2ApplicationList\"></ng-container>\r\n    </div>\r\n    <div\r\n      *ngIf=\"(currentUser.userRole.name === 'ROLE_APPLICANT' || currentUser.userRole.name === 'ROLE_ADMIN' || currentUser.userRole.name === 'ROLE_SUPER_ADMIN') && viewApplicationType === 'special'\">\r\n      <ng-container *ngTemplateOutlet=\"specialS1ApplicationList\"></ng-container>\r\n    </div>\r\n\r\n    <ng-template #individualS2ApplicationList>\r\n      <div class=\"row\">\r\n        <div class=\"col-lg-9\">\r\n          <div class=\" search\" fxLayout fxLayoutAlign=\"center center\">\r\n            <mat-form-field class=\"col-md-9\" appearance=\"outline\">\r\n              <input matInput type=\"text\" (keyup)=\"doFilter($event.target.value)\" placeholder=\"Search\">\r\n            </mat-form-field>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- <div class=\"col\">\r\n          <div class=\"legend-content\">\r\n            <table class=\"legend-table\">\r\n              <tr>\r\n                <td><div class=\"legend-box legend-blue\"></div> ORIGINAL</td>\r\n              </tr>\r\n              <tr>\r\n                <td><div class=\"legend-box legend-green\"></div> REVISION</td>\r\n              </tr>\r\n              <tr>\r\n                <td><div class=\"legend-box legend-orange\"></div> FOR COMPLIANCE</td>\r\n              </tr>\r\n            </table>\r\n          </div>\r\n        </div> -->\r\n\r\n\r\n      </div><br>\r\n\r\n      <mat-tab-group mat-align-tabs=\"start\" (selectedTabChange)=\"changeTab($event)\">\r\n        <mat-tab label=\"Original\">\r\n          <ng-template mat-tab-label>\r\n            Original\r\n            <div matBadge={{applicationCountS2.countOriginal}} class=\"c-badge\" matBadgeColor=\"warn\"></div>\r\n          </ng-template>\r\n        </mat-tab>\r\n        <mat-tab label=\"Compliance\">\r\n          <ng-template mat-tab-label>\r\n            Compliance\r\n            <div matBadge={{applicationCountS2.countCompliance}} class=\"c-badge\" matBadgeColor=\"warn\"></div>\r\n          </ng-template>\r\n        </mat-tab>\r\n        <mat-tab label=\"TOA\">\r\n          <ng-template mat-tab-label>\r\n            TOA\r\n            <div matBadge={{applicationCountS2.countToa}} class=\"c-badge\" matBadgeColor=\"warn\"></div>\r\n          </ng-template>\r\n        </mat-tab>\r\n        <mat-tab label=\"For Appeal\" *ngIf=\"isAdSpecialist || isAdmin || isSuperAdmin\">\r\n          <ng-template mat-tab-label>\r\n            Released Appeal\r\n            <div matBadge={{releasedAppealTabDataCount}} class=\"c-badge\" matBadgeColor=\"warn\"></div>\r\n          </ng-template>\r\n        </mat-tab>\r\n      </mat-tab-group>\r\n\r\n      <div class=\"mat-elevation-z8 fields main-table \" fxLayout fxLayoutAlign=\"center center\">\r\n        <table mat-table [dataSource]=\"dataSource\" matSort>\r\n\r\n          <ng-container matColumnDef=\"referenceCode\">\r\n            <th mat-header-cell *matHeaderCellDef > REFERENCE CODE <mat-icon class=\"cursor\" (click)=\"sortEvent()\" style=\"color:black\">swap_vert</mat-icon></th>\r\n            <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"viewApplication(element)\"\r\n             [ngStyle]=\"{'pointer-events': ((i != 0 && currentUser.userRole.name === 'ROLE_ENCODER') ? 'none' : ''),\r\n                  'background-color':\r\n                  ((element?.submissionType=='ORIGINAL'&&element.decisionStatus!='INCOMPLETE') ? 'lightblue' :\r\n                  ((element?.submissionType=='FOR COMPLIANCE'||element.decisionStatus=='INCOMPLETE'||element.submissionType=='COMPLIANCE') ? '#ebd79b' :\r\n                  (element?.submissionType=='REVISION' ? '#8fcf8f' : '' )))}\">\r\n              {{ element?.submissionType === 'ORIGINAL' && element?.internalStatus=='S2_APPLICATION_REJECTED' ? element?.referenceCodeRejected : element?.applicationForm?.referenceCode | uppercase}}\r\n            </td>\r\n          </ng-container>\r\n          <ng-container matColumnDef=\"typeOfApplication\">\r\n            <th mat-header-cell *matHeaderCellDef > TYPE OF APPLICATION </th>\r\n            <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"viewApplication(element)\"\r\n              [ngStyle]=\"{'pointer-events': ((i != 0 && currentUser.userRole.name === 'ROLE_ENCODER') ? 'none' : ''),\r\n                  'background-color': ((currentUser.userRole.name  === 'ROLE_ENCODER' && i > 0 ? '#beb8b8' : ''))}\">\r\n              <!--  'background-color':\r\n                  ((element?.applicationForm?.applicationType.description=='Regular') ? 'lightblue' :\r\n                  (element?.applicationForm?.applicationType.description=='Batch') ? '#8fcf8f' :\r\n                  (element?.applicationForm?.applicationType.description=='Special Screening') ? '#fca402' :\r\n                  (element?.applicationForm?.applicationType.description=='Special Clearing') ? '#ff8a7b' :\r\n                  (element?.applicationForm?.applicationType.description=='Special Screening and Clearing') ? 'violet' :\r\n                  (element?.applicationForm?.applicationType.description=='For Presentation') ? 'yellow' :\r\n                  (currentUser.userRole.name === 'ROLE_ENCODER'&&i>0 ? '#beb8b8' : ''))}\"> -->\r\n              {{ element?.applicationForm?.applicationType.description.replaceAll('_',' ') | uppercase }}\r\n              {{ element?.specialClearing ? '- SPECIAL CLEARING' : '' }}\r\n              {{ element?.hasToa ? '- TOA' : '' }}\r\n            </td>\r\n          </ng-container>\r\n          <ng-container matColumnDef=\"companyName\">\r\n            <th mat-header-cell *matHeaderCellDef > COMPANY NAME </th>\r\n            <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"viewApplication(element)\"\r\n              [ngStyle]=\"{'pointer-events': ((i != 0 && currentUser.userRole.name === 'ROLE_ENCODER') ? 'none' : ''),\r\n                  'background-color': ((currentUser.userRole.name === 'ROLE_ENCODER' && i > 0? '#beb8b8' : ''))}\">\r\n              {{ element?.applicationForm?.company.companyName }} </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"brand\">\r\n            <th mat-header-cell *matHeaderCellDef > BRAND </th>\r\n            <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"viewApplication(element)\"\r\n              [ngStyle]=\"{'pointer-events': ((i != 0 && currentUser.userRole.name === 'ROLE_ENCODER') ? 'none' : ''),\r\n                  'background-color': ((currentUser.userRole.name === 'ROLE_ENCODER' && i > 0? '#beb8b8' : ''))}\">\r\n              {{ element?.applicationForm?.brand.description }} </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"typeOfMedium\">\r\n            <th mat-header-cell *matHeaderCellDef > TYPE OF MEDIUM </th>\r\n            <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"viewApplication(element)\"\r\n              [ngStyle]=\"{'pointer-events': ((i != 0 && currentUser.userRole.name === 'ROLE_ENCODER') ? 'none' : ''),\r\n                  'background-color': ((currentUser.userRole.name === 'ROLE_ENCODER' && i > 0? '#beb8b8' : ''))}\">\r\n              {{ element?.applicationForm?.typeOfMedium }} </td>\r\n          </ng-container>\r\n\r\n          <!-- [ngStyle]=\"{'pointer-events': ((i != 0 && (currentUser.userRole.name === 'ROLE_ENCODER')) ? 'none' : ''),\r\n                  'background-color': ((currentUser.userRole.name === 'ROLE_ENCODER'&&i>0 ? '#beb8b8' : ''))}\" -->\r\n          <ng-container matColumnDef=\"status\">\r\n            <th mat-header-cell *matHeaderCellDef > APPLICATION STATUS </th>\r\n            <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"viewApplication(element)\"\r\n              [ngStyle]=\"{'pointer-events': ((i != 0 && currentUser.userRole.name === 'ROLE_ENCODER') ? 'none' : ''),\r\n                  'background-color': ((currentUser.userRole.name === 'ROLE_ENCODER' && i > 0? '#beb8b8' : ''))}\">\r\n              {{ element?.externalStatus?.replaceAll('_',' ') | uppercase }} </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"internalStatus\">\r\n            <th mat-header-cell *matHeaderCellDef > INTERNAL STATUS </th>\r\n            <td mat-cell *matCellDef=\"let element; let i = index\" class=\"applicantStatus\"\r\n              [ngStyle]=\"{'pointer-events': ((i != 0 && currentUser.userRole.name === 'ROLE_ENCODER') ? 'none' : ''),\r\n                  'background-color': ((currentUser.userRole.name === 'ROLE_ENCODER' && i > 0? '#beb8b8' : ''))}\">\r\n              {{ element?.internalStatus?.replaceAll('_',' ') | uppercase }} </td>\r\n          </ng-container>\r\n          <!-- For ASC Users only -->\r\n          <!-- <ng-container matColumnDef=\"ascStatus\">\r\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> ASC STATUS </th>\r\n                  <td mat-cell *matCellDef=\"let element\" (click)=\"getCompany(element?.id)\"> {{ element?.ascStatus }} </td>\r\n                </ng-container> -->\r\n\r\n          <ng-container matColumnDef=\"icon\">\r\n            <th mat-header-cell *matHeaderCellDef > </th>\r\n            <td mat-cell *matCellDef=\"let element; let i = index\" class=\"icon\"\r\n              [hidden]=\"currentUser?.userRole?.name != 'ROLE_APPLICANT'\"\r\n              [ngStyle]=\"{'pointer-events': ((i != 0 && currentUser.userRole.name === 'ROLE_ENCODER') ? 'none' : ''),\r\n                  'background-color': ((currentUser.userRole.name != 'ROLE_APPLICANT'&&currentUser.userRole.name != 'ROLE_AD_SPECIALIST'&&i>0 ? '#beb8b8' : ''))}\">\r\n\r\n                  <!-- <button mat-raised-button class=\"button-red\" matTooltip=\"Submit S2 for Clearance \"\r\n                    (click)=\"applyApplicationForToa(element)\" *ngIf=\"currentUser?.userRole?.name=='ROLE_APPLICANT'&&element?.\r\n                        internalStatus=='APPROVED' || element?.internalStatus=='S2_APPLICATION_VERIFIED_BY_AD_SPE'\r\n                        || element?.internalStatus=='RE_SUBMITTED_S2_APPLICATION_VERIFIED_BY_AD_SPE'\">\r\n                    <i class=\"material-icons color__white\">queue_play_next</i>\r\n                  </button> -->\r\n\r\n                  <button mat-raised-button class=\"button-red\" matTooltip=\"Submit For Compliance\"\r\n                  (click)=\"viewApplication(element)\"\r\n                  *ngIf=\"(currentUser?.userRole?.name=='ROLE_APPLICANT' && element?.decisionStatus=='INCOMPLETE' &&\r\n                          (element?.internalStatus=='INCOMPLETE' || element?.internalStatus=='S2_APPLICATION_VERIFIED_BY_AD_SPE' || element?.internalStatus=='RE_SUBMITTED_S2_APPLICATION_VERIFIED_BY_AD_SPE' ||\r\n                          element?.internalStatus=='S2_APPLICATION_REJECTED'))\">\r\n                  <i class=\"material-icons\">warning_amber</i>\r\n                </button>\r\n\r\n              <!--  <button mat-raised-button class=\"button-red\" matTooltip=\"Submit For Compliance\" *ngIf=\"currentUser?.userRole?.name=='ROLE_APPLICANT'&&element?.\r\n                    internalStatus=='RE_SUBMITTED_S2_APPLICATION_VERIFIED_BY_AD_SPE' || element?.internalStatus=='S2_APPLICATION_VERIFIED_BY_AD_SPE'\r\n                    || element?.internalStatus=='APPROVED'\">\r\n                    <i class=\"material-icons color__white\">warning_amber</i>\r\n                    </button>-->\r\n            </td>\r\n          </ng-container>\r\n\r\n\r\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n          <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n        </table>\r\n        <div class=\"no-record\" [hidden]=\"dataSource && dataSource?.data?.length > 0\">\r\n          No record found.\r\n        </div>\r\n        <!-- <mat-paginator [pageSizeOptions]=\"[10, 20, 50]\" showFirstLastButtons></mat-paginator> -->\r\n        <mat-paginator [pageSize]=\"pageSize\" [pageIndex]=\"pageNo\" [length]=\"s2TotalItems\"\r\n          [pageSizeOptions]=\"pageSizeOptions\" (page)=\"pageEvents($event)\">\r\n        </mat-paginator>\r\n\r\n      </div>\r\n      <!-- </mat-tab> -->\r\n    </ng-template>\r\n\r\n\r\n\r\n\r\n\r\n    <ng-template #specialS1ApplicationList>\r\n        <b *ngIf=\"currentUser.userRole.name === 'ROLE_APPLICANT'\"><b class=\"material-icons info-msg\">error_outline</b> This\r\n          page contain list of Request for Approval and allows you to create S2 application from approved request only.</b>\r\n        <b *ngIf=\"currentUser.userRole.name === 'ROLE_ADMIN' || currentUser?.userRole.name === 'ROLE_SUPER_ADMIN' \"><b\r\n            class=\"material-icons info-msg\">error_outline</b> This page\r\n            contain list of Request for Approval and allows you to approve or disapprove request.</b>\r\n      <div class=\"row\" fxLayout fxLayoutAlign=\"center center\">\r\n        <mat-form-field class=\"col-md-8\" appearance=\"outline\">\r\n          <mat-label><i class=\"material-icons\">search</i> Search Applications</mat-label>\r\n          <input matInput type=\"text\" (keyup)=\"doFilterS1MultipleApplicationList($event.target.value)\">\r\n        </mat-form-field>\r\n\r\n        <div class=\"col\">\r\n          <div class=\"legend-content\">\r\n            <table class=\"legend-table\">\r\n              <tr>\r\n                <td>\r\n                  <div class=\"legend-box legend-orange\"></div> FOR APPROVAL\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <div class=\"legend-box legend-green\"></div> APPROVED\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <div class=\"legend-box legend-red\"></div> DISAPPROVED\r\n                </td>\r\n              </tr>\r\n              <!-- <tr>\r\n                    <td>\r\n                      <div class=\"legend-box legend-pink\"></div> REJECTED\r\n                    </td>\r\n                  </tr> -->\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- <div class=\"row\">\r\n\r\n            <div class=\"col-md-2\">LEGEND:</div>\r\n            <div class=\"col-md-1 legend legend-orange\">FOR APPROVAL</div>\r\n            <div class=\"col-md-1 legend legend-green\">APPROVED</div>\r\n            <div class=\"col-md-1 legend legend-red\">DISAPPROVED</div>\r\n            <div class=\"col-md-1\" style=\"background-color:lightpink;border-radius:8px;width:20%;\">Rejected</div>\r\n          </div> -->\r\n      <br>\r\n\r\n      <div class=\"mat-elevation-z8 fields\">\r\n        <table mat-table [dataSource]=\"s2SpecialApplicationDataSource\" matSort>\r\n\r\n          <ng-container matColumnDef=\"adTitle\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> AD TITLE </th>\r\n            <td mat-cell *matCellDef=\"let element\" (click)=\"viewSpecialApplication(element)\">\r\n              {{ element?.adTitle | uppercase }} </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"typeOfApplication\">\r\n            <th mat-header-cell *matHeaderCellDef > TYPE OF APPLICATION </th>\r\n            <td mat-cell *matCellDef=\"let element\" (click)=\"viewSpecialApplication(element)\">\r\n              {{ element?.applicationType?.description.replaceAll('_',' ') | uppercase }}\r\n              {{ element?.hasSpecialClearing ? '- SPECIAL CLEARING' : ''}}\r\n              {{ element?.hasToa ? '- TOA' : '' }} </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"companyName\">\r\n            <th mat-header-cell *matHeaderCellDef > COMPANY NAME </th>\r\n            <td mat-cell *matCellDef=\"let element\" (click)=\"viewSpecialApplication(element)\">\r\n              {{ element?.company?.companyName | uppercase }} </td>\r\n          </ng-container>\r\n\r\n          <!-- <ng-container matColumnDef=\"membersAffiliation\">\r\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> MEMBER'S AFFILIATION </th>\r\n                <td mat-cell *matCellDef=\"let element\" (click)=\"viewSpecialApplication(element)\">\r\n                  {{ element?.membersAffiliation?.description | uppercase }} </td>\r\n              </ng-container> -->\r\n\r\n          <ng-container matColumnDef=\"brand\">\r\n            <th mat-header-cell *matHeaderCellDef> BRAND </th>\r\n            <td mat-cell *matCellDef=\"let element\" (click)=\"viewSpecialApplication(element)\">\r\n              {{ element?.brand?.description | uppercase }} </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"status\">\r\n            <th mat-header-cell *matHeaderCellDef > APPLICATION STATUS </th>\r\n            <td mat-cell *matCellDef=\"let element\" class=\"applicantStatus\" [ngStyle]=\"{'background-color':\r\n                element?.status === 'FOR_APPROVAL' ? '#ebd79b' :\r\n                element?.status === 'APPROVED' ? '#8fcf8f' :\r\n                element?.status === 'DISAPPROVED' ? '#ebb89b' : '' }\" (click)=\"viewSpecialApplication(element)\">\r\n              {{ element?.status?.replaceAll('_',' ') | uppercase }} </td>\r\n          </ng-container>\r\n\r\n          <tr mat-header-row *matHeaderRowDef=\"s2SpecialApplicationDisplayedColumns\"></tr>\r\n          <tr mat-row *matRowDef=\"let row; columns: s2SpecialApplicationDisplayedColumns;\"></tr>\r\n        </table>\r\n        <div class=\"no-record\"\r\n          [hidden]=\"s2SpecialApplicationDataSource && s2SpecialApplicationDataSource?.data?.length > 0\">\r\n          No record found.\r\n        </div>\r\n        <!-- <mat-paginator [pageSizeOptions]=\"[10, 20, 50]\" showFirstLastButtons></mat-paginator> -->\r\n        <mat-paginator [pageSize]=\"pageSize\" [pageIndex]=\"pageNo\" [length]=\"s2SpecialTotalItems\"\r\n          [pageSizeOptions]=\"pageSizeOptions\" (page)=\"pageEvents($event)\">\r\n        </mat-paginator>\r\n      </div>\r\n    </ng-template>\r\n\r\n\r\n\r\n\r\n    <!-- FOR CLEARANCE TABLE -->\r\n    <!-- <mat-tab label=\"FOR CLEARANCE\">\r\n          <div class=\"mat-elevation-z8 fields toa-tab\">\r\n            <table mat-table [dataSource]=\"forClearanceDataSource\" matSort>\r\n\r\n                <ng-container matColumnDef=\"referenceCode\">\r\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> REFERENCE CODE </th>\r\n                  <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"viewApplication(element)\"\r\n                  [ngStyle]=\"{'pointer-events': ((i != 0 && (currentUser.userRole.name === 'ROLE_ENCODER')) ? 'none' : ''),\r\n                  'background-color': ((currentUser.userRole.name === 'ROLE_ENCODER'&&i>0 ? '#beb8b8' : ''))}\"> {{ element?.applicationForm?.referenceCode }} </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"typeOfApplication\">\r\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> TYPE OF APPLICATION </th>\r\n                  <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"viewApplication(element)\"\r\n                  [ngStyle]=\"{'pointer-events': ((i != 0 && (currentUser.userRole.name === 'ROLE_ENCODER')) ? 'none' : ''),\r\n                  'background-color': ((currentUser.userRole.name === 'ROLE_ENCODER'&&i>0 ? '#beb8b8' : ''))}\"> {{ element?.applicationForm?.applicationType.description }} </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"companyName\">\r\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> COMPANY NAME </th>\r\n                  <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"viewApplication(element)\"\r\n                  [ngStyle]=\"{'pointer-events': ((i != 0 && (currentUser.userRole.name === 'ROLE_ENCODER')) ? 'none' : ''),\r\n                  'background-color': ((currentUser.userRole.name === 'ROLE_ENCODER'&&i>0 ? '#beb8b8' : ''))}\"> {{ element?.applicationForm?.company.companyName }} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"brand\">\r\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> BRAND </th>\r\n                  <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"viewApplication(element)\"\r\n                  [ngStyle]=\"{'pointer-events': ((i != 0 && (currentUser.userRole.name === 'ROLE_ENCODER')) ? 'none' : ''),\r\n                  'background-color': ((currentUser.userRole.name === 'ROLE_ENCODER'&&i>0 ? '#beb8b8' : ''))}\"> {{ element?.applicationForm?.brand.description }} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"typeOfMedium\">\r\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> TYPE OF MEDIUM </th>\r\n                  <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"viewApplication(element)\"\r\n                  [ngStyle]=\"{'pointer-events': ((i != 0 && (currentUser.userRole.name === 'ROLE_ENCODER')) ? 'none' : ''),\r\n                  'background-color': ((currentUser.userRole.name === 'ROLE_ENCODER'&&i>0 ? '#beb8b8' : ''))}\"> {{ element?.applicationForm?.refTypeOfMedium }} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"status\">\r\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> APPLICATION STATUS </th>\r\n                  <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"viewApplication(element)\"\r\n                  [ngStyle]=\"{'pointer-events': ((i != 0 && (currentUser.userRole.name === 'ROLE_ENCODER')) ? 'none' : ''),\r\n                  'background-color': ((currentUser.userRole.name === 'ROLE_ENCODER'&&i>0 ? '#beb8b8' : ''))}\"> {{ element?.internalStatus?.replaceAll('_',' ') | uppercase }} </td>\r\n                </ng-container> -->\r\n\r\n    <!-- For ASC Users only -->\r\n    <!-- <ng-container matColumnDef=\"ascStatus\">\r\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> ASC STATUS </th>\r\n                  <td mat-cell *matCellDef=\"let element\" (click)=\"getCompany(element?.id)\"> {{ element?.ascStatus }} </td>\r\n                </ng-container> -->\r\n\r\n    <!-- <ng-container matColumnDef=\"icon\">\r\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> </th>\r\n                  <td mat-cell *matCellDef=\"let element\" class=\"icon\">\r\n                    <button mat-raised-button class=\"button-red\" matTooltip=\"Submit S2 for Clearance\" (click)=\"applyApplicationForToa(element)\" *ngIf=\"currentUser?.userRole?.name=='ROLE_APPLICANT'&&element?.\r\n                    internalStatus=='RE_SUBMITTED_S2_APPLICATION_VERIFIED_BY_AD_SPE' || element?.internalStatus=='S2_APPLICATION_VERIFIED_BY_AD_SPE'\r\n                    || element?.internalStatus=='APPROVED'\">\r\n                      <i class=\"material-icons\">queue_play_next</i>\r\n                    </button> -->\r\n\r\n    <!-- <button mat-raised-button class=\"button-red\" matTooltip=\"Submit For Compliance\" (click)=\"viewApplication(element)\" *ngIf=\"currentUser?.userRole?.name=='ROLE_APPLICANT'&&element?.\r\n                    internalStatus=='RE_SUBMITTED_S2_APPLICATION_VERIFIED_BY_AD_SPE' || element?.internalStatus=='S2_APPLICATION_VERIFIED_BY_AD_SPE'\r\n                    || element?.internalStatus=='APPROVED'\"><i class=\"material-icons color__white\">warning_amber</i>\r\n                    </button> -->\r\n    <!-- </td>\r\n                </ng-container> -->\r\n\r\n\r\n    <!-- <tr mat-header-row *matHeaderRowDef=\"forClearanceDisplayedColumns\"></tr>\r\n                <tr mat-row *matRowDef=\"let row; columns: forClearanceDisplayedColumns;\"></tr>\r\n            </table>\r\n            <div class=\"no-record\" [hidden]=\"forClearanceDataSource && forClearanceDataSource?.data?.length > 0\">\r\n              No record found.\r\n            </div>\r\n            <mat-paginator [pageSizeOptions]=\"[10, 20, 50]\" showFirstLastButtons></mat-paginator>\r\n\r\n          </div>\r\n        </mat-tab> -->\r\n    <!-- </mat-tab-group> -->\r\n","import { Component, OnInit, Input, Output, EventEmitter, OnChanges, SimpleChanges, OnDestroy } from '@angular/core';\r\nimport { Company, S1Application, S2Application } from '@models';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { COMMON_FUNCTION, ENDPOINTS } from '@shared';\r\nimport { ApiService, DataStorageService, SweetAlertService } from '@services';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { AddCompanyComponent } from '@company';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { BrandsComponent } from '@maintenance';\r\nimport { AddressService } from '../../../../core/services/address/address.service';\r\nimport { ProductComponent } from '../../maintenance/product/product.component';\r\nimport { MultipleApplication } from 'app/core/models/multiple-application.model';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-client-information',\r\n  templateUrl: './client-information.component.html',\r\n  styleUrls: ['./client-information.component.scss']\r\n})\r\nexport class ClientInformationComponent implements OnInit, OnChanges, OnDestroy {\r\n  @Input() s1Application = new S1Application();\r\n  @Input() s2Application = new S2Application();\r\n  @Input() multipleApplication = new MultipleApplication();\r\n  @Input() isAscUser = false;\r\n  @Input() isDisableFieldOnUpdate = false;\r\n  @Input() company = new Company();\r\n  @Output() checkInactiveAffiliation: EventEmitter<any> = new EventEmitter();\r\n  @Output() isInactiveAffiliation: boolean;\r\n  @Output() hasErrorFields: EventEmitter<any> = new EventEmitter();\r\n\r\n  memberAffiliationList = [];\r\n  companyList = [];\r\n  brandList = [];\r\n  productList = [];\r\n  // categoryList = [];\r\n  regionsList = [];\r\n  provinceList = [];\r\n  cityMunicipalityList = [];\r\n  barangayList = [];\r\n  countryList = [];\r\n\r\n  notInSelection = ['INACTIVE', 'DISAPPROVED'];\r\n\r\n  isNewCompany = false;\r\n  showCompanyAddress = false;\r\n  dataSource: MatTableDataSource<S1Application>;\r\n  clientInformationForm: FormGroup;\r\n\r\n  applicationStage: string;\r\n  fullAddress: string;\r\n  currentUser: any;\r\n  ngModelValue: any;\r\n  private ngUnsubscribe = new Subject();\r\n\r\n  constructor(\r\n    private apiService: ApiService,\r\n    private addressService: AddressService,\r\n    private dialog: MatDialog,\r\n    public dataStorage: DataStorageService,\r\n    private formBuilder: FormBuilder,\r\n    private sweetAlertService: SweetAlertService,\r\n    private route: ActivatedRoute,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    // console.log('Clientinfo');\r\n    this.currentUser = this.dataStorage.getUserAccount();\r\n    this.setFormValidator();\r\n    this.getBrandList();\r\n    this.getCompanyList();\r\n    this.getAffiliationList();\r\n    this.getCountries();\r\n  }\r\n\r\n  ngOnChanges(): void {\r\n    if (this.s1Application.brand) {\r\n      this.setProductList();\r\n    }\r\n  }\r\n\r\n  setFormValidator(): void {\r\n    this.clientInformationForm = this.formBuilder.group({\r\n      brand: ['', Validators.required],\r\n      product: ['', Validators.required],\r\n      category: ['', Validators.required],\r\n      company: [''],\r\n      companyAddress: [''],\r\n      country: [''],\r\n      companyName: [''],\r\n      membersAffiliation: ['', Validators.required],\r\n    });\r\n\r\n    if (this.currentUser?.accountType === 'APPLICANT') {\r\n      this.clientInformationForm.valueChanges.pipe(takeUntil(this.ngUnsubscribe)).subscribe(value => {\r\n        this.checkInvalidFields(value);\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  getBrandList() {\r\n    this.apiService.findAll(ENDPOINTS.activeBrands).subscribe((res: any) => {\r\n      this.brandList = res.responseData.data; // .filter((brand) => !this.notInSelection.includes(brand.status));\r\n      this.productList = [];\r\n    }, (err: any) => {\r\n    });\r\n    if (this.s1Application.brand) {\r\n      this.setProductList();\r\n    }\r\n  }\r\n\r\n  setBrand() {\r\n    this.setProductList();\r\n    if (this.s1Application?.product?.status !== COMMON_FUNCTION.FOR_APPROVAL) {\r\n      this.s1Application.product = null;\r\n    }\r\n  }\r\n\r\n  setProductList() {\r\n    // const endpoint = this.s1Application.brand ? ENDPOINTS.productsByBrand + this.s1Application.brand.id : ENDPOINTS.product;\r\n    this.apiService.findAll(ENDPOINTS.productsByBrand + this.s1Application.brand.id).subscribe((res: any) => {\r\n      this.productList = res.responseData.data.filter((product) =>\r\n        product.status !== COMMON_FUNCTION.DISAPPROVED.toUpperCase()\r\n        && product.status !== COMMON_FUNCTION.INACTIVE.toUpperCase()\r\n      );\r\n    }, (err: any) => {\r\n    });\r\n  }\r\n\r\n  getCompanyList() {\r\n    this.apiService.findAll(ENDPOINTS.activeCompanies).subscribe((res: any) => {\r\n      this.companyList = res.responseData.data; // .filter((company) => !this.notInSelection.includes(company.status));\r\n    }, (err: any) => {\r\n    });\r\n  }\r\n\r\n  getAffiliationList(): void {\r\n    this.apiService.findAll(ENDPOINTS.activeMembersAffiliation).subscribe((res: any) => {\r\n      this.memberAffiliationList = res.responseData.data;\r\n    }, (err: any) => {\r\n    });\r\n  }\r\n\r\n  getCompanyAddress(companyName) {\r\n    this.showCompanyAddress = false;\r\n    this.isNewCompany = false;\r\n    this.apiService.findByParam(ENDPOINTS.company, `custom/search?companyName=${companyName}`).subscribe((res: any) => {\r\n      this.company = res.data[0];\r\n      if (this.company.membersAffiliation.status === 'INACTIVE') {\r\n        this.checkInactiveAffiliationFunction();\r\n        this.sweetAlertService.customErrorMessage(`Cannot proceed with the application. Company's membership affiliation is no longer active. Please contact ASC admin`);\r\n      }\r\n\r\n      if (this.company.status === 'FOR_APPROVAL') {\r\n        this.isNewCompany = true;\r\n      }\r\n\r\n    }, (err: any) => {\r\n    });\r\n  }\r\n\r\n  compareCompanyName(value: any, selected: any): boolean {\r\n    if (value && selected && value.id === selected.id) {\r\n      return value.companyName === selected.companyName;\r\n    }\r\n  }\r\n\r\n  compareBrand(value: any, selected: any): boolean {\r\n    if (value && selected) {\r\n      return value.description === selected.description;\r\n    }\r\n  }\r\n\r\n  compareMembersAffiliation(value: any, selected: any): boolean {\r\n    if (value && selected) {\r\n      return value.description === selected.description;\r\n    }\r\n  }\r\n\r\n  compareProduct(value: any, selected: any): boolean {\r\n    if (value && selected) {\r\n      return value.description === selected.description;\r\n    }\r\n  }\r\n\r\n  // compareCategory(value: any, selected: any): boolean {\r\n  //   if (value && selected) {\r\n  //     return value.description === selected.description;\r\n  //   }\r\n  // }\r\n\r\n  openNewCompanyModal(status = 'new') {\r\n    let dataForModal: any;\r\n    if (status === 'new') {\r\n      dataForModal = {\r\n        isFromModal: true,\r\n        isUpdate: false,\r\n        country: this.dataStorage.getDefaultCountry()\r\n      }\r\n    } else if (status === 'update' && this.s1Application.company) {\r\n      dataForModal = {\r\n        isFromModal: true,\r\n        isUpdate: true,\r\n        company: this.s1Application.company\r\n      }\r\n    }\r\n\r\n    const dialogRef = this.dialog.open(AddCompanyComponent, {\r\n      width: '80%',\r\n      height: '85%',\r\n      data: {\r\n        dataForModal\r\n      }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.isNewCompany = result ? true : false;\r\n      if (result) {\r\n        this.getCompanyList();\r\n        this.company = result;\r\n        this.dataStorage.setS1NewCompany(this.company);\r\n        this.s1Application.company = this.dataStorage.getS1NewCompany();\r\n      }\r\n    });\r\n  }\r\n\r\n  openNewBrandModal(status = 'new') {\r\n    let dataForModal: any;\r\n    if (status === 'new') {\r\n      dataForModal = {\r\n        isFromModal: true,\r\n        isUpdate: false,\r\n      }\r\n    } else if (status === 'update') {\r\n      dataForModal = {\r\n        isFromModal: true,\r\n        isUpdate: true,\r\n        brand: this.s1Application.brand\r\n      }\r\n    }\r\n\r\n    const dialogRef = this.dialog.open(BrandsComponent, {\r\n      width: '80%',\r\n      height: '85%',\r\n      data: {\r\n        dataForModal\r\n      }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this.getBrandList();\r\n        this.s1Application.brand = this.dataStorage.getS1NewBrand();\r\n        this.s1Application.product = this.s1Application.product;\r\n      }\r\n    });\r\n  }\r\n\r\n  openNewProductModal(status = 'new') {\r\n    let dataForModal: any;\r\n    if (status === 'new') {\r\n      dataForModal = {\r\n        isFromModal: true,\r\n        isUpdate: false,\r\n        brand: this.s1Application?.brand,\r\n      }\r\n    } else if (status === 'update') {\r\n      dataForModal = {\r\n        isFromModal: true,\r\n        isUpdate: true,\r\n        product: this.s1Application?.product,\r\n        currentStatus: 'FOR_APPROVAL'\r\n      }\r\n    }\r\n\r\n    const dialogRef = this.dialog.open(ProductComponent, {\r\n      width: '80%',\r\n      height: '85%',\r\n      data: {\r\n        dataForModal\r\n      }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        // this.getBrandList();\r\n        this.setProductList();\r\n        this.s1Application.product = this.dataStorage.getS1NewProduct();\r\n      }\r\n    });\r\n  }\r\n\r\n  compareCountry(value: any, selected: any): boolean {\r\n    if (value && selected) {\r\n      return value.code === selected.code;\r\n    }\r\n  }\r\n\r\n  getCountries() {\r\n    this.apiService.findAll(ENDPOINTS.countries).subscribe((res: any) => {\r\n      this.countryList = res.responseData.data;\r\n      this.dataStorage.setDefaultCountry(res.responseData.data[0]);\r\n    }, (err: any) => {\r\n    });\r\n  }\r\n\r\n  checkInactiveAffiliationFunction() {\r\n    this.isInactiveAffiliation = this.s1Application?.company?.membersAffiliation?.status === 'INACTIVE';\r\n    this.checkInactiveAffiliation.emit();\r\n  }\r\n  \r\n  checkInvalidFields(s1Application: any): void {\r\n    if (s1Application?.company && s1Application?.brand && s1Application?.product) {\r\n      this.hasErrorFields.emit(false)\r\n    } else {\r\n      this.hasErrorFields.emit(true);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.ngUnsubscribe.next();\r\n    this.ngUnsubscribe.complete();\r\n  }\r\n}\r\n","<form [formGroup]=\"clientInformationForm\"\r\n*ngIf=\"s1Application?.multipleApplication?.submissionStatus !== 'UNPROCESSED' &&\r\n        s1Application?.status !== 'DISAPPROVED' &&\r\n        s1Application?.status !== 'APPROVED' &&\r\n        s1Application?.status !== 'APPROVED' &&\r\n        multipleApplication?.status !== 'APPROVED' &&\r\n        s1Application?.applicationRequest?.status !== 'APPROVED'\">\r\n\r\n  <div class=\"row\">\r\n    <!-- <mat-form-field class=\"col-md-5\" appearance=\"outline\">\r\n      <mat-label>Client Membership Affiliation</mat-label>\r\n      <mat-select [(ngModel)]=\"s1Application.membersAffiliation\" name=\"membersAffiliation\" formControlName=\"membersAffiliation\"\r\n        [compareWith]=\"compareMembersAffiliation\" [disabled]=\"isAscUser && isDisableFieldOnUpdate\">\r\n        <mat-option *ngFor=\"let i of memberAffiliationList\" [value]=\"i\">\r\n          {{i.description}}\r\n        </mat-option>\r\n      </mat-select>\r\n    </mat-form-field> -->\r\n\r\n    <div class=\"col-md-12 float-right\" style=\"padding-bottom:10px;\" *ngIf=\"s1Application?.company?.status === 'FOR_APPROVAL' && isAscUser\">\r\n      <button mat-raised-button class=\"button-red\" (click)=\"openNewCompanyModal('update')\">\r\n        <i class=\"material-icons color__white\">error_outline</i> View/Approve Company\r\n      </button>\r\n      <br>\r\n    </div>\r\n\r\n    <mat-form-field class=\"col-md-7\" appearance=\"outline\">\r\n      <mat-label>Client Company Name\r\n        <span class=\"badge rounded-pill bg-warning\" *ngIf=\"s1Application?.company?.status === 'FOR_APPROVAL' \">\r\n          For Approval\r\n        </span>\r\n        <span class=\"badge rounded-pill bg-danger\" *ngIf=\"s1Application?.company?.delinquent \">\r\n          With Penalty\r\n        </span>\r\n        <span class=\"required\">*</span>\r\n      </mat-label>\r\n      <mat-select [(ngModel)]=\"s1Application.company\" name=\"company\" formControlName=\"company\"\r\n        [compareWith]=\"compareCompanyName\"\r\n        [disabled]=\"(isAscUser && isDisableFieldOnUpdate) || (s2Application?.applicationForm || s1Application?.status === 'FOR_APPROVAL')\">\r\n        <mat-option (click)=\"isNewCompany=true;showCompanyAddress=false\" value=\"\" (click)=\"openNewCompanyModal()\">\r\n          <span class=\"badge bg-success dropdown-badge\">Add New Company</span>\r\n        </mat-option>\r\n        <mat-option *ngFor=\"let i of companyList\" [value]=\"i\" (click)=\"getCompanyAddress(i.companyName)\">\r\n          {{i.companyName}}\r\n        </mat-option>\r\n        <!-- <mat-option >[New\r\n          Company]</mat-option> -->\r\n      </mat-select>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field class=\"col-md-5\" appearance=\"outline\" *ngIf=\"s1Application.company\">\r\n      <mat-label>\r\n        Client Membership Affiliation\r\n        <span class=\"badge rounded-pill bg-danger\"\r\n          *ngIf=\"s1Application?.company?.membersAffiliation?.status === 'INACTIVE' \">\r\n          Inactive\r\n        </span>\r\n      </mat-label>\r\n      <input matInput readonly [value]=\"s1Application?.company?.membersAffiliation?.description\">\r\n    </mat-form-field>\r\n\r\n    <!-- <div class=\"col-md-4\" *ngIf=\"s1Application?.applicationForm?.company?.status === 'FOR_APPROVAL' \">\r\n      <span class=\"badge rounded-pill bg-warning\">\r\n        For Approval\r\n      </span>\r\n    </div> -->\r\n\r\n    <div class=\"row\" *ngIf=\"isNewCompany==true\" [hidden]=\"s1Application?.company?.status !== 'FOR_APPROVAL'\">\r\n      <!-- <mat-form-field class=\"col-md-4\" appearance=\"outline\">\r\n        <mat-label>Client Membership Affiliation</mat-label>\r\n        <mat-select [(ngModel)]=\"company.membersAffiliation\" name=\"membersAffiliation\" [compareWith]=\"compareMembersAffiliation\"\r\n          formControlName=\"membersAffiliation\" matNativeControl required>\r\n          <mat-option *ngFor=\"let i of memberAffiliationList\" [value]=\"i\">\r\n            {{i.description}}\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field> -->\r\n\r\n      <mat-form-field class=\"col-md-4\" appearance=\"outline\" [hidden]=\" company?.country?.id > 1 && company?.country \">\r\n        <mat-label>Country</mat-label>\r\n        <!-- <input matInput disabled value=\"PHIL\"> -->\r\n        <!-- <input matInput disabled [(ngModel)]=\"company.country\" formControlName=\"country\"> -->\r\n        <mat-select [(ngModel)]=\"company.country\" name=\"country\" [compareWith]=\"compareCountry\"\r\n          formControlName=\"country\" matNativeControl required disabled>\r\n          <mat-option *ngFor=\"let i of countryList\" [value]=\"i\">\r\n            {{i.code}} - {{i.name}}\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field class=\"col-md-8\" appearance=\"outline\" [hidden]=\"company?.country?.id > 1 && company?.country \">\r\n        <mat-label>Complete Address</mat-label>\r\n        <textarea matInput [(ngModel)]=\"company.completeAddress\" formControlName=\"companyAddress\" name=\"completeAddress\"\r\n          [readonly]=\"true\"></textarea>\r\n      </mat-form-field>\r\n    </div>\r\n\r\n    <div class=\"row\" *ngIf=\"showCompanyAddress==true\">\r\n      <!-- FOR S1 APPLICATION FORM -->\r\n      <mat-form-field class=\"col-md-8\" appearance=\"outline\">\r\n        <mat-label>Company Address</mat-label>\r\n        <textarea matInput readonly [value]=\"s1Application?.company?.completeAddress\"></textarea>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field class=\"col-md-4\" appearance=\"outline\">\r\n        <mat-label>Country</mat-label>\r\n        <input matInput readonly [value]=\"s1Application?.company?.country?.name\">\r\n      </mat-form-field>\r\n    </div>\r\n\r\n  </div>\r\n\r\n  <div class=\"row\">\r\n    <mat-form-field class=\"col-md-4\" appearance=\"outline\">\r\n      <mat-label>\r\n        Brand\r\n        <span class=\"badge rounded-pill bg-warning\" *ngIf=\"s1Application?.brand?.status === 'FOR_APPROVAL'\">\r\n          For Approval\r\n        </span>\r\n        <span class=\"badge rounded-pill bg-danger\" *ngIf=\"s1Application?.brand?.penalty\">\r\n          With Penalty\r\n        </span>\r\n        <span class=\"required\">*</span>\r\n      </mat-label>\r\n      <mat-select [(ngModel)]=\"s1Application.brand\" name=\"brand\" formControlName=\"brand\" [compareWith]=\"compareBrand\"\r\n        [disabled]=\"(isAscUser && isDisableFieldOnUpdate) || (s2Application?.applicationForm || s1Application?.status === 'FOR_APPROVAL')\" matTooltip=\"Client's Brand\"\r\n        (selectionChange)=\"setBrand()\">\r\n        <mat-option value=\"\" (click)=\"openNewBrandModal()\"><span class=\"badge bg-success dropdown-badge\">Add New Brand</span></mat-option>\r\n        <mat-option *ngFor=\"let i of brandList\" [value]=\"i\">\r\n          {{i.description}}\r\n        </mat-option>\r\n      </mat-select>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field class=\"col-md-4\" appearance=\"outline\">\r\n      <mat-label>\r\n        Product\r\n        <span class=\"badge rounded-pill bg-warning\" *ngIf=\"s1Application?.product?.status === 'FOR_APPROVAL'\">\r\n          For Approval\r\n        </span>\r\n        <span class=\"required\">*</span>\r\n      </mat-label>\r\n      <mat-select [(ngModel)]=\"s1Application.product\" name=\"product\" formControlName=\"product\"\r\n        [compareWith]=\"compareProduct\" (selectionChange)=\"setProductList()\"\r\n        [disabled]=\"(isAscUser && isDisableFieldOnUpdate || (s2Application?.applicationForm || s1Application?.status === 'FOR_APPROVAL')) || !s1Application.brand\">\r\n        <mat-option value=\"\" (click)=\"openNewProductModal()\"><span class=\"badge bg-success dropdown-badge\">Add New Product</span></mat-option>\r\n        <mat-option *ngFor=\"let i of productList\" [value]=\"i\">\r\n          {{i.description}}\r\n        </mat-option>\r\n      </mat-select>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field class=\"col-md-4\" appearance=\"outline\">\r\n      <mat-label>Category</mat-label>\r\n      <input matInput readonly [value]=\"s1Application?.product?.category?.description\" />\r\n    </mat-form-field>\r\n\r\n    <!-- <mat-form-field *ngIf=\"s1Application.brand\" class=\"col-md-4\" appearance=\"outline\">\r\n      <mat-label>Product</mat-label>\r\n      <input matInput [(ngModel)]=\"s1Application.brand.product.description\" name=\"product\" formControlName=\"product\"\r\n        readonly>\r\n    </mat-form-field> -->\r\n\r\n    <!-- <mat-form-field *ngIf=\"s1Application.brand\" class=\"col-md-4\" appearance=\"outline\">\r\n      <mat-label>Category</mat-label>\r\n      <input matInput [(ngModel)]=\"s1Application.brand.category.description\" name=\"category\" formControlName=\"category\"\r\n        readonly>\r\n    </mat-form-field> -->\r\n    <!-- <div class=\"col-md-4\" *ngIf=\"s1Application?.brand?.status === 'FOR_APPROVAL' \">\r\n      <span class=\"badge rounded-pill bg-warning\">\r\n        For Approval\r\n      </span>\r\n    </div> -->\r\n    <div class=\"col-md-12 float-right\" style=\"padding-bottom:10px;\" *ngIf=\"s1Application?.brand?.status === 'FOR_APPROVAL' && isAscUser\">\r\n      <button mat-raised-button class=\"button-red\" (click)=\"openNewBrandModal('update')\">\r\n        <i class=\"material-icons color__white\">error_outline</i> View/Approve Brand\r\n      </button>\r\n    </div>\r\n    <div class=\"col-md-12 float-right\" style=\"padding-bottom:10px;\" *ngIf=\"s1Application?.product?.status === 'FOR_APPROVAL' && isAscUser\">\r\n      <button mat-raised-button class=\"button-red\" (click)=\"openNewProductModal('update')\">\r\n        <i class=\"material-icons color__white\">error_outline</i> View/Approve Product\r\n      </button>\r\n    </div>\r\n  </div>\r\n</form>\r\n\r\n<!-- FOR MULTIPLE/SPECIAL PREVIEW -->\r\n<div class=\"row\" *ngIf=\"multipleApplication?.status === 'APPROVED' || s1Application?.multipleApplication?.submissionStatus === 'UNPROCESSED' || s1Application?.status === 'APPROVED' || s1Application?.status === 'DISAPPROVED' || s1Application?.applicationRequest?.status === 'APPROVED'\">\r\n  <div class=\"row\">\r\n    <!-- <div class=\"col-md-4\" appearance=\"outline\">\r\n        <mat-label>Client Membership Affiliation</mat-label>\r\n        <input matInput [value]=\"previewS1Application?.membersAffiliation?.description\" disabled>\r\n      </div> -->\r\n    <mat-form-field class=\"col-md-4\" appearance=\"outline\">\r\n      <mat-label>Client Company Name</mat-label>\r\n      <input matInput [value]=\"s1Application?.company?.companyName\" readonly>\r\n    </mat-form-field>\r\n    <mat-form-field class=\"col-md-4\" appearance=\"outline\">\r\n      <mat-label>Client Membership Affiliation</mat-label>\r\n      <input matInput [value]=\"s1Application?.company?.membersAffiliation?.description\" readonly>\r\n    </mat-form-field>\r\n  </div>\r\n\r\n  <div class=\"row\">\r\n    <mat-form-field class=\"col-md-4\" appearance=\"outline\">\r\n      <mat-label>Brand</mat-label>\r\n      <input matInput [value]=\"s1Application?.brand?.description\" readonly>\r\n    </mat-form-field>\r\n    <mat-form-field class=\"col-md-4\" appearance=\"outline\">\r\n      <mat-label>Product</mat-label>\r\n      <input matInput [value]=\"s1Application?.product?.description\" readonly>\r\n    </mat-form-field>\r\n    <mat-form-field class=\"col-md-4\" appearance=\"outline\">\r\n      <mat-label>Category</mat-label>\r\n      <input matInput [value]=\"s1Application?.product?.category?.description\" readonly>\r\n    </mat-form-field>\r\n  </div>\r\n</div>\r\n","import { MultiMediaMoving } from './multimedia-moving.model';\r\nexport class MultiMediaMovingConstant {\r\n    data: Array<MultiMediaMoving> = new Array<MultiMediaMoving>();\r\n    constructor(){\r\n        this.data =   [{\r\n            id: 0,\r\n            multimediaMovingMedium: 'cinema',\r\n            hasSelected: false,\r\n          },\r\n          {\r\n            id: 1,\r\n            multimediaMovingMedium: 'collaterals',\r\n            hasSelected: false,\r\n          },\r\n          {\r\n            id: 2,\r\n            multimediaMovingMedium: 'digital video',\r\n            hasSelected: false,\r\n          },\r\n          {\r\n            id: 3,\r\n            multimediaMovingMedium: 'e-ooh',\r\n            hasSelected: false,\r\n          },\r\n          {\r\n            id: 4,\r\n            multimediaMovingMedium: 'television',\r\n            hasSelected: false,\r\n          }\r\n        ]\r\n    }\r\n}","export * from './client-information/client-information.component';\r\nexport * from './material-information/material-information.component';\r\nexport * from './preview-application/preview-application.component';\r\nexport * from './s1-application/add-s1-application/add-s1-application.component';\r\nexport * from './s1-application/list-s1-application/list-s1-application.component';\r\nexport * from './s2-application/add-s2-application/add-s2-application.component';\r\nexport * from './s2-application/list-s2-application/list-s2-application.component';","import { WebSocketService } from \"app/core/services/socket/websocket.service\";\r\nimport { BadgeCounnter } from \"app/core/models/counter\";\r\nimport {\r\n  AfterViewChecked,\r\n  AfterViewInit,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  OnDestroy,\r\n  OnInit,\r\n  ViewChild,\r\n} from \"@angular/core\";\r\nimport { Company, S1Application, UserAccount, Payment } from \"@models\";\r\nimport { FormGroup, FormControl } from \"@angular/forms\";\r\nimport Swal from \"sweetalert2\";\r\nimport {\r\n  ENDPOINTS,\r\n  FORM_TYPE,\r\n  ROLES,\r\n  TYPE_OF_MEDIUM,\r\n  APPLICATION_STATUS,\r\n  COMMON_FUNCTION,\r\n  SUBMISSION_TYPE,\r\n  APPLICATION_STATUS_FOR_COMPLIANCE,\r\n  SPECIAL_APPLICATION,\r\n  APPLICATION_STAGE,\r\n  OTHER_STATUS,\r\n  USER_ROLES,\r\n  APPFORM_TYPE,\r\n  APPLICATION_STATUS_REVISION,\r\n  APP_DECISION_STATUS,\r\n  ATTACHMENT_TYPE,\r\n  STATUSES,\r\n} from \"@shared\";\r\nimport { ApiService, SweetAlertService, DataStorageService } from \"@services\";\r\nimport { MatAccordion } from \"@angular/material/expansion\";\r\nimport { ClientInformationComponent } from \"../../client-information/client-information.component\";\r\nimport { MaterialInformationComponent } from \"../../material-information/material-information.component\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { DatePipe } from \"@angular/common\";\r\nimport { ApplicationSingleMedia } from \"../../../../../core/models/application-single-media.model\";\r\nimport { PreviewApplicationComponent } from \"../../preview-application/preview-application.component\";\r\nimport {\r\n  ApplicationMultimedia,\r\n  ApplicationMultimediaItemsDTO,\r\n} from \"../../../../../core/models/application-multimedia.model\";\r\nimport { DomSanitizer } from \"@angular/platform-browser\";\r\nimport { MultipleApplication } from \"app/core/models/multiple-application.model\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { ApplicationRequest } from \"app/core/models/application-request.model\";\r\nimport { RejectDisapprovedReasonComponent } from \"app/modules/fragments/reject-disapproved-reason/reject-disapproved-reason.component\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { PerformanceMetricsComponent } from \"../../performance-metrics/performance-metrics.component\";\r\nimport { IncompleteDisapprovedRationaleComponent } from \"app/modules/fragments/incomplete-disapproved-rationale/incomplete-disapproved-rationale.component\";\r\nimport { Report } from \"app/core/models/report.model\";\r\nimport { Rationale } from \"app/core/models/rationale.model\";\r\nimport { CommonServices } from \"app/core/services/common-services.service\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { isEqual, format, nextMonday } from \"date-fns\";\r\nimport { MatDatepicker } from \"@angular/material/datepicker\";\r\n\r\nvar activeHolidayDates = [];\r\nvar activeWeekendDates = [];\r\n\r\n@Component({\r\n  selector: \"app-add-s1-application\",\r\n  templateUrl: \"./add-s1-application.component.html\",\r\n  styleUrls: [\"./add-s1-application.component.scss\"],\r\n})\r\nexport class AddS1ApplicationComponent\r\n  implements OnInit, AfterViewChecked, OnDestroy, AfterViewInit {\r\n  @ViewChild(MatAccordion) accordion: MatAccordion;\r\n  @ViewChild(ClientInformationComponent, { static: false })\r\n  clientInformation: ClientInformationComponent;\r\n  @ViewChild(MaterialInformationComponent, { static: false })\r\n  materialInformation: MaterialInformationComponent;\r\n  @ViewChild(PreviewApplicationComponent, { static: false })\r\n  previewApplication: PreviewApplicationComponent;\r\n  // @ViewChild(AttachmentDocumentComponent, { static: false }) materialAttachmentDocument: AttachmentDocumentComponent;\r\n  public exportTime = { hour: 0, minute: 0, meriden: \"AM\", format: 12 };\r\n  @ViewChild(MatDatepicker) datepicker: MatDatepicker<Date>;\r\n\r\n  title = \"ASC Online System\";\r\n  s1Application = new S1Application();\r\n  multipleApplication = new MultipleApplication();\r\n  applicationRequest = new ApplicationRequest();\r\n  company = new Company();\r\n  applicationSingleMedia = new ApplicationSingleMedia();\r\n  presentorDetails = new UserAccount();\r\n  report = new Report();\r\n  rationale = new Rationale();\r\n  affiliationList = [];\r\n  companyList = [];\r\n  isNewCompany = false;\r\n  showCompanyAddress = false;\r\n  formTypeList = [...FORM_TYPE];\r\n  specialApplicationType = [...SPECIAL_APPLICATION];\r\n  applicationTypeList = [];\r\n  attachmentDocuments: any = {};\r\n  originalAttachmentDocuments = [];\r\n  revisionAttachmentDocuments = [];\r\n  complianceAttachmentDocuments = [];\r\n  paymentAttachment: any;\r\n  supportiveDocumentList = [];\r\n  multimediaStaticList = [];\r\n  selectedMultimediaList = [];\r\n  multimediaMovingList = [];\r\n  screenerList = [];\r\n  reviewerList = [];\r\n  applicantList = [];\r\n  mediaTypeListTemp = [];\r\n  rationaleOthersList = [];\r\n  rationaleLists = [];\r\n  adSpecialistList = [];\r\n  applicationSingleMediaTemp = new ApplicationSingleMedia();\r\n  payment = new Payment();\r\n  safeURL: any; // for payment\r\n  isScheduleSendIsEmpty: boolean;\r\n  selectedApplicationOwner: any;\r\n  applicationStage: string;\r\n  revisionLetterAttachment: any;\r\n  currentSizeLength: string;\r\n  currentSizeLengthMultimedia = [];\r\n  toDeleteMultimediaList = [];\r\n  hasMultimediaLengthChange: boolean;\r\n  hasMultimediaLengthToEnableSubmit = false;\r\n  disableSubmitButtonByMedia = false;\r\n  hasErrorsClient = false;\r\n  badgeCounter: BadgeCounnter = new BadgeCounnter();\r\n  hasErrorsMaterial;\r\n  currentUser: any;\r\n  currentUserRole: any;\r\n  id: number;\r\n  multipleId: number;\r\n  isChecked = false;\r\n  isAscUser = false;\r\n  isDisableFieldOnUpdate = false;\r\n  isInactiveAffiliation: boolean;\r\n  isSubmit = false;\r\n  noDocumentAttached = true;\r\n  accordionDisable = false;\r\n  accordionExpanded = false;\r\n  validationMessage = \"\";\r\n  buttonDisabled = true;\r\n  adSpecButtonDisabled = true;\r\n  rationaleDisplay = false;\r\n  submissionType = SUBMISSION_TYPE.ORIGINAL;\r\n  defaultReviewer: any;\r\n  maxSizeLength = 1000;\r\n\r\n  ascUserRoleList = [\r\n    ...ROLES.filter((role: any) => role.ascUser === true).map(\r\n      (role: any) => role.role\r\n    ),\r\n  ];\r\n\r\n  s1ApplicationForm: FormGroup;\r\n  todayDate = new Date();\r\n\r\n  isSuperAdmin = false;\r\n  isAdmin = false;\r\n  isAccounting = false;\r\n  isApplicant = false;\r\n  isEvaluator = false;\r\n  isAdSpecialist = false;\r\n  isScreener = false;\r\n  isReviewer = false;\r\n\r\n  previewAttachmentsList = [];\r\n  previewAttachmentsDisplayedColumns: string[] = [\r\n    \"decisionFormFilename\",\r\n    \"viewDecisionFormIcon\",\r\n    \"stampMaterialFilename\",\r\n    \"viewStampMaterialIcon\",\r\n  ];\r\n  previewAttachmentsListDataSource: MatTableDataSource<object>;\r\n\r\n  selected: any; // in html but not existing in component -- encountered during 'ng serve --aot'\r\n  multimediaDTO: any;\r\n\r\n  activeHolidayDates: Date[] = [];\r\n  activeWeekendDates: Date[] = [];\r\n\r\n  constructor(\r\n    private apiService: ApiService,\r\n    private sweetAlertService: SweetAlertService,\r\n    private dataStorage: DataStorageService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private sanitizer: DomSanitizer,\r\n    public datepipe: DatePipe,\r\n    private spinner: NgxSpinnerService,\r\n    private cd: ChangeDetectorRef,\r\n    private dialog: MatDialog,\r\n    private commonServices: CommonServices,\r\n    private _snackBar: MatSnackBar\r\n  ) {}\r\n\r\n  get submitComplianceEnabled() {\r\n    const hasMain = Boolean(\r\n      this.complianceAttachmentDocuments.find(\r\n        (c) => c.attachmentType === ATTACHMENT_TYPE.MAIN\r\n      )\r\n    );\r\n    const hasSupportive = Boolean(\r\n      this.complianceAttachmentDocuments.find(\r\n        (c) => c.attachmentType === ATTACHMENT_TYPE.SUPPORTIVE\r\n      )\r\n    );\r\n\r\n    return (\r\n      (hasMain && hasSupportive) ||\r\n      (hasMain && this.s1Application.hasNoSupportingDocs)\r\n    );\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.todayDate.getDay() === 0 || this.todayDate.getDay() === 6) {\r\n      this.todayDate = nextMonday(this.todayDate);\r\n    }\r\n\r\n    if (this.dataStorage.getS1FormAndAppType()) {\r\n      this.s1Application.formType = this.dataStorage.getS1FormAndAppType().formType;\r\n      this.getApplicationTypeList(this.s1Application.formType);\r\n      this.s1Application.applicationType = this.dataStorage.getS1FormAndAppType().appType;\r\n    }\r\n\r\n    if (this.dataStorage.getS1Application()) {\r\n      this.s1Application = this.dataStorage.getS1Application();\r\n    }\r\n\r\n    if (this.dataStorage.getSpecialS1Application()) {\r\n      this.applicationRequest = this.dataStorage.getSpecialS1Application();\r\n      this.s1Application.formType = \"INDIVIDUAL\";\r\n      this.s1Application.submissionDate = this.applicationRequest.submissionDate;\r\n      if (this.s1Application.submissionDate) {\r\n        this.isChecked = true;\r\n        this.s1Application.autoSubmit = true;\r\n      }\r\n    }\r\n\r\n    this.setFormValidator();\r\n\r\n    this.currentUser = this.dataStorage.getUserAccount();\r\n    this.currentUserRole = this.currentUser.userRole.name;\r\n    this.initUserRole();\r\n    this.id = Number(this.route.snapshot.paramMap.get(\"id\"));\r\n    if (this.id !== 0) {\r\n      this.viewApplication();\r\n    }\r\n\r\n    this.multipleId = Number(this.route.snapshot.paramMap.get(\"multipleId\"));\r\n    const ctr = Number(this.route.snapshot.paramMap.get(\"nextSequence\"));\r\n\r\n    if (this.multipleId !== 0) {\r\n      this.spinner.show();\r\n      this.apiService\r\n        .findById(ENDPOINTS.multipleApplication, this.multipleId)\r\n        .subscribe(\r\n          (res: any) => {\r\n            this.s1Application.multipleApplication = res.responseData.data;\r\n            this.s1Application.applicationType = this.s1Application.multipleApplication.applicationType;\r\n            this.s1Application.adTitle = this.s1Application.multipleApplication.adTitle;\r\n            this.s1Application.brand = this.s1Application.multipleApplication.brand;\r\n            this.s1Application.product = this.s1Application.multipleApplication.product;\r\n            // this.s1Application.category = this.s1Application.multipleApplication.category;\r\n            this.s1Application.company = this.s1Application.multipleApplication.company;\r\n            this.s1Application.submissionDate = this.s1Application.multipleApplication.dateOfSubmission;\r\n            this.s1Application.autoSubmit = true;\r\n            // this.s1Application.membersAffiliation = this.s1Application.multipleApplication.membersAffiliation;\r\n            this.s1Application.tagLine = this.s1Application.multipleApplication.tagLine;\r\n            this.s1Application.formType = APPFORM_TYPE.MULTIPLE;\r\n            this.s1Application.sequenceOrder = ctr;\r\n            this.spinner.hide();\r\n          },\r\n          (err: any) => {\r\n            this.spinner.hide();\r\n          }\r\n        );\r\n    }\r\n\r\n    this.isAscUser = this.ascUserRoleList.includes(\r\n      this.dataStorage.getUserRole()\r\n    );\r\n    // this.s1Application.autoSubmit = false;\r\n    // this.s1Application.autoSubmitTime = 0;\r\n    // determines if the field will be enabled/disabled on update of s1 app\r\n    this.isDisableFieldOnUpdate =\r\n      ROLES.filter(\r\n        (res: any) =>\r\n          res.disableFieldOnUpdate === true && res.role === this.currentUserRole\r\n      ).length > 0 && this.id > 0\r\n        ? true\r\n        : false;\r\n\r\n    setTimeout(() => {\r\n      this.spinner.hide();\r\n    }, 1);\r\n    if (this.currentUserRole === USER_ROLES.ROLE_ENCODER) {\r\n      this.accordionDisable = false;\r\n      this.getUserTypeForList();\r\n    }\r\n    this.checkSingleMediaChanges();\r\n    this.getAllActiveHolidays();\r\n    this.getAllActiveWeekends();\r\n  }\r\n\r\n  matCalendarDateFilter(that) {\r\n    return (date: Date) => {\r\n      return !that.isDateHoliday(date, that) && date.getDay() !== 7;\r\n    };\r\n  }\r\n\r\n  initUserRole() {\r\n    if (this.currentUser.userRole.name === USER_ROLES.ROLE_SUPER_ADMIN) {\r\n      this.isSuperAdmin = true;\r\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_ADMIN) {\r\n      this.isAdmin = true;\r\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_ACCOUNTING) {\r\n      this.isAccounting = true;\r\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT) {\r\n      this.isApplicant = true;\r\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_SCREENER) {\r\n      this.isScreener = true;\r\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_REVIEWER) {\r\n      this.isReviewer = true;\r\n    } else if (\r\n      this.currentUser.userRole.name === USER_ROLES.ROLE_AD_SPECIALIST\r\n    ) {\r\n      this.isAdSpecialist = true;\r\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_ENCODER) {\r\n      this.isEvaluator = true;\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.checkSingleMediaChanges();\r\n    // this.checkMultimediaChanges();\r\n  }\r\n\r\n  ngAfterViewChecked() {\r\n    if (this.applicationSingleMedia) {\r\n      this.checkSingleMediaChanges();\r\n    }\r\n    if (\r\n      this.materialInformation?.newMultimediaList.length ||\r\n      this.multimediaMovingList.length\r\n    ) {\r\n      // this.checkMultimediaChanges();\r\n    }\r\n    this.cd.detectChanges();\r\n  }\r\n\r\n  getScreenerAssignedAppCount(id: number) {\r\n    return 0;\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    sessionStorage.removeItem(\"FORM_TYPE\");\r\n    sessionStorage.removeItem(\"APP_TYPE\");\r\n    sessionStorage.removeItem(\"NUMBER_OF_APPLICATIONS\");\r\n    sessionStorage.removeItem(\"S1_APPLICATION\");\r\n    sessionStorage.removeItem(\"MULTIPLE_S1_APPLICATION\");\r\n    sessionStorage.removeItem(\"SPECIAL_S1_APPLICATIONS\");\r\n    sessionStorage.removeItem(\"AMOUNT\");\r\n    // alert('destroy')\r\n    // const formAndAppType = {\r\n    //   formType: '',\r\n    //   appType: []\r\n    // }\r\n    // this.dataStorage.setRequestFormAndAppType(formAndAppType);\r\n  }\r\n\r\n  checkInactiveAffiliation() {\r\n    this.isInactiveAffiliation = this.clientInformation.isInactiveAffiliation;\r\n  }\r\n\r\n  viewApplication() {\r\n    this.spinner.show();\r\n    this.apiService.findById(ENDPOINTS.applicationForm, this.id).subscribe(\r\n      (res: any) => {\r\n        this.s1Application = res.responseData.data;\r\n        if (this.s1Application) {\r\n          console.log(\"View App: \", this.s1Application);\r\n\r\n          this.getApplicationTypeList(this.s1Application.formType);\r\n          this.setAppType(this.s1Application.applicationType);\r\n\r\n          this.clientInformation.s1Application = this.s1Application;\r\n          this.materialInformation.s1Application = this.s1Application;\r\n          this.setApplicationStage();\r\n          this.fetchMultimedia();\r\n\r\n          if (\r\n            this.s1Application.refTypeOfMedium === TYPE_OF_MEDIUM.SINGLE_MEDIA\r\n          ) {\r\n            this.getApplicationSingleMedia();\r\n          } else if (\r\n            this.s1Application.refTypeOfMedium ===\r\n            TYPE_OF_MEDIUM.MULTIMEDIA_MOVING\r\n          ) {\r\n            this.getMultimediaMoving();\r\n          } else if (\r\n            this.s1Application.refTypeOfMedium ===\r\n            TYPE_OF_MEDIUM.MULTIMEDIA_STATIC\r\n          ) {\r\n            this.getMultimediaStatic();\r\n          }\r\n\r\n          if (this.s1Application.autoSubmit) {\r\n            this.scheduleSubmission();\r\n            this.onChangeDate(this.s1Application.submissionDate);\r\n          }\r\n\r\n          if (this.currentUser.userRole.name !== USER_ROLES.ROLE_APPLICANT) {\r\n            this.getPresentorDetails();\r\n          }\r\n\r\n          if (\r\n            this.s1Application.mainAttachmentReference ||\r\n            this.s1Application.supportingAttachmentReference ||\r\n            this.s1Application.revisionLetterAttachmentReference\r\n          ) {\r\n            this.getAttachmentDocuments();\r\n          }\r\n\r\n          if (\r\n            this.currentUserRole === USER_ROLES.ROLE_AD_SPECIALIST ||\r\n            this.currentUserRole === USER_ROLES.ROLE_SCREENER ||\r\n            this.currentUserRole === USER_ROLES.ROLE_REVIEWER\r\n          ) {\r\n            this.getUserTypeForList();\r\n          }\r\n\r\n          if (\r\n            (this.s1Application.decisionStatus === \"INCOMPLETE\" ||\r\n              this.s1Application.decisionStatus === \"DISAPPROVED\" ||\r\n              this.s1Application.decisionStatus ===\r\n                APP_DECISION_STATUS.APPROVED ||\r\n              this.s1Application.decisionStatus ===\r\n                APP_DECISION_STATUS.APPROVED_WITH_CAUTION) &&\r\n            this.currentUserRole === USER_ROLES.ROLE_SCREENER\r\n          ) {\r\n            // if ((this.s1Application.internalStatus === APPLICATION_STATUS_FOR_COMPLIANCE.COMPLIANCE_DOCUMENT_VERIFIED_BY_AD_SPE ||\r\n            //   this.s1Application.internalStatus === APPLICATION_STATUS_FOR_COMPLIANCE.COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER)) {\r\n            //     // this.dataStorage.setDecisionStatus(this.s1Application.decisionStatus);\r\n            //     // if(this.rationaleLists.length <= 0){\r\n            //     //   this.s1Application.decisionStatus = \"\";\r\n            //     //   alert(\"BLANK\")\r\n            //     // }else{\r\n            //     //   this.s1Application.decisionStatus = this.dataStorage.getDecisionStatus();\r\n            //     // }\r\n            // }\r\n\r\n            if (\r\n              this.s1Application.internalStatus ===\r\n                APPLICATION_STATUS_FOR_COMPLIANCE.COMPLIANCE_DOCUMENT_VERIFIED_BY_AD_SPE ||\r\n              this.s1Application.internalStatus ===\r\n                APPLICATION_STATUS_REVISION.REVISION_VERIFIED_BY_AD_SPE\r\n            ) {\r\n              if (this.rationaleOthersList || this.rationaleLists) {\r\n                this.getRationaleList();\r\n              }\r\n              // alert(this.dataStorage.getDecisionStatus())\r\n              if (this.dataStorage.getDecisionStatus()) {\r\n                this.s1Application.decisionStatus = this.dataStorage.getDecisionStatus();\r\n              }\r\n              // if (this.s1Application.decisionStatus === APP_DECISION_STATUS.INCOMPLETE ||\r\n              //   this.s1Application.decisionStatus === APP_DECISION_STATUS.DISAPPROVED) {\r\n              // this.getRationaleList();\r\n              // alert('KHFDSKF')\r\n              // console.log(\"HIIAHIIHIFDIFS\", this.rationaleLists);\r\n              // }\r\n            }\r\n          }\r\n\r\n          if (\r\n            this.isAdmin ||\r\n            this.isSuperAdmin ||\r\n            this.isApplicant ||\r\n            this.isAdSpecialist\r\n          ) {\r\n            this.apiService\r\n              .findByParam(\r\n                ENDPOINTS.stampedMaterialAndDecisionForms,\r\n                this.s1Application?.appFormReference\r\n              )\r\n              .subscribe((previewAttachmentsData) => {\r\n                this.previewAttachmentsList =\r\n                  previewAttachmentsData.responseData.data;\r\n                this.previewAttachmentsListDataSource = new MatTableDataSource<object>(\r\n                  this.previewAttachmentsList\r\n                );\r\n              });\r\n          }\r\n\r\n          console.log(\"VIEW APP FORM: \", this.s1Application);\r\n          setTimeout(() => {\r\n            this.spinner.hide();\r\n          }, 1);\r\n\r\n          if (this.s1Application.externalStatus) {\r\n            this.accordionDisable = false;\r\n          }\r\n        }\r\n      },\r\n      (err: any) => {\r\n        this.spinner.hide();\r\n      }\r\n    );\r\n  }\r\n\r\n  setApplicationStage(): void {\r\n    this.clientInformation.applicationStage = APPLICATION_STAGE.S1_APPLICATION;\r\n    this.materialInformation.applicationStage =\r\n      APPLICATION_STAGE.S1_APPLICATION;\r\n  }\r\n\r\n  getPresentorDetails() {\r\n    this.apiService\r\n      .findByParam(\r\n        ENDPOINTS.userLogin,\r\n        this.s1Application.applicationOwner.username\r\n      )\r\n      .subscribe(\r\n        (res: any) => {\r\n          if (res.responseData.data) {\r\n            this.presentorDetails = res.responseData.data;\r\n          }\r\n        },\r\n        (err: any) => {}\r\n      );\r\n  }\r\n\r\n  getApplicationSingleMedia() {\r\n    this.apiService\r\n      .findByParam(\r\n        ENDPOINTS.applicationSingleMedia,\r\n        `app-form-reference/${this.s1Application.appFormReference}`\r\n      )\r\n      .subscribe(\r\n        (res: any) => {\r\n          if (res.responseData.data.length > 0) {\r\n            this.applicationSingleMedia = res.responseData.data[0];\r\n            if (\r\n              this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT &&\r\n              this.s1Application.externalStatus === APPLICATION_STATUS.SAVED\r\n            ) {\r\n              this.materialInformation.applicationSingleMedia = this.applicationSingleMedia;\r\n            }\r\n            if (this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT) {\r\n              this.previewApplication.applicationSingleMedia = this.applicationSingleMedia;\r\n            }\r\n            this.currentSizeLength = this.applicationSingleMedia.sizeLength;\r\n            console.log(\r\n              \"view applicationSingleMedia: \",\r\n              this.applicationSingleMedia\r\n            );\r\n          } else {\r\n            this.applicationSingleMedia = new ApplicationSingleMedia();\r\n          }\r\n        },\r\n        (err: any) => {\r\n          this.applicationSingleMedia = new ApplicationSingleMedia();\r\n        }\r\n      );\r\n  }\r\n\r\n  getMultimediaStatic() {\r\n    this.apiService\r\n      .findByParam(\r\n        ENDPOINTS.applicationMultimedia,\r\n        `app-form-reference/${this.s1Application.appFormReference}`\r\n      )\r\n      .subscribe(\r\n        (res: any) => {\r\n          if (res.responseData.data.length > 0) {\r\n            this.multimediaStaticList = res.responseData.data;\r\n\r\n            if (\r\n              this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT &&\r\n              this.s1Application.externalStatus === APPLICATION_STATUS.SAVED\r\n            ) {\r\n              this.materialInformation.selectedMultimediaList = this.multimediaStaticList;\r\n            }\r\n            if (this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT) {\r\n              this.previewApplication.multimediaStaticList = this.multimediaStaticList;\r\n            }\r\n\r\n            console.log(\r\n              \"view multimediaStaticList: \",\r\n              this.multimediaStaticList\r\n            );\r\n            this.selectedMultimediaList = this.multimediaStaticList;\r\n          } else {\r\n            this.multimediaStaticList = [];\r\n          }\r\n        },\r\n        (err: any) => {\r\n          // this.multimediaStaticList = [];\r\n        }\r\n      );\r\n  }\r\n\r\n  getMultimediaMoving() {\r\n    this.apiService\r\n      .findByParam(\r\n        ENDPOINTS.applicationMultimedia,\r\n        `app-form-reference/${this.s1Application.appFormReference}`\r\n      )\r\n      .subscribe(\r\n        (res: any) => {\r\n          if (res.responseData.data.length > 0) {\r\n            this.multimediaMovingList = res.responseData.data;\r\n            this.currentSizeLengthMultimedia = this.multimediaMovingList.map(\r\n              (mappedMultimedia) => ({\r\n                multimediaSizeLength: mappedMultimedia.multimediaSizeLength,\r\n                typeOfMedium: mappedMultimedia.typeOfMedium.description,\r\n              })\r\n            );\r\n\r\n            if (\r\n              this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT &&\r\n              this.s1Application.externalStatus === APPLICATION_STATUS.SAVED\r\n            ) {\r\n              this.materialInformation.selectedMultimediaList = this.multimediaMovingList;\r\n            }\r\n            if (this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT) {\r\n              this.previewApplication.multimediaMovingList = this.multimediaMovingList;\r\n            }\r\n            console.log(\r\n              \"view multimediaMovingList: \",\r\n              this.multimediaMovingList\r\n            );\r\n            this.selectedMultimediaList = this.multimediaMovingList;\r\n          } else {\r\n            this.multimediaMovingList = [];\r\n          }\r\n        },\r\n        (err: any) => {\r\n          this.multimediaMovingList = [];\r\n        }\r\n      );\r\n  }\r\n\r\n  getAttachmentDocuments() {\r\n    this.apiService\r\n      .findAll(\r\n        ENDPOINTS.attachmentDocumentByAppFormReference +\r\n          this.s1Application.appFormReference\r\n      )\r\n      .subscribe((res: any) => {\r\n        this.attachmentDocuments = res.responseData.data;\r\n\r\n        if (\r\n          this.attachmentDocuments &&\r\n          this.attachmentDocuments.originalAttachmentDocuments.length !== 0\r\n        ) {\r\n          if (\r\n            this.attachmentDocuments.originalAttachmentDocuments.length === 1 &&\r\n            this.attachmentDocuments.originalAttachmentDocuments[0].attachmentType.includes(\r\n              \"SUPPORTIVE\"\r\n            )\r\n          ) {\r\n            this.attachmentDocuments.originalAttachmentDocuments[0] = null;\r\n            this.attachmentDocuments.originalAttachmentDocuments[1] = this.attachmentDocuments[0];\r\n          }\r\n\r\n          if (\r\n            this.attachmentDocuments.originalAttachmentDocuments.length === 2\r\n          ) {\r\n            const mainDoc = this.attachmentDocuments.originalAttachmentDocuments.filter(\r\n              (data) => data?.attachmentType === ATTACHMENT_TYPE.MAIN\r\n            )[0];\r\n\r\n            const suppDoc = this.attachmentDocuments.originalAttachmentDocuments.filter(\r\n              (data) => data?.attachmentType === ATTACHMENT_TYPE.SUPPORTIVE\r\n            )[0];\r\n\r\n            this.attachmentDocuments.originalAttachmentDocuments[0] = mainDoc;\r\n            this.attachmentDocuments.originalAttachmentDocuments[1] = suppDoc;\r\n          }\r\n        }\r\n        // this.revisionLetterAttachment = this.attachmentDocuments.filter(data =>\r\n        //   data?.attachmentType === ATTACHMENT_TYPE.REVISION_LETTER)[0];\r\n\r\n        this.originalAttachmentDocuments = this.attachmentDocuments.originalAttachmentDocuments;\r\n        this.revisionAttachmentDocuments = this.attachmentDocuments.revisionAttachmentDocuments;\r\n        this.complianceAttachmentDocuments =\r\n          this.attachmentDocuments.complianceAttachmentDocuments || [];\r\n\r\n        if (\r\n          this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT &&\r\n          this.s1Application.externalStatus === APPLICATION_STATUS.SAVED\r\n        ) {\r\n          this.materialInformation.originalAttachmentDocuments = this.attachmentDocuments.originalAttachmentDocuments;\r\n          this.materialInformation.revisionAttachmentDocuments = this.attachmentDocuments.revisionAttachmentDocuments;\r\n          this.materialInformation.complianceAttachmentDocuments = this.attachmentDocuments.complianceAttachmentDocuments;\r\n        }\r\n\r\n        if (this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT) {\r\n          this.previewApplication.originalAttachmentDocuments = this.attachmentDocuments.originalAttachmentDocuments;\r\n          this.previewApplication.revisionAttachmentDocuments = this.attachmentDocuments.revisionAttachmentDocuments;\r\n          this.previewApplication.complianceAttachmentDocuments = this.attachmentDocuments.complianceAttachmentDocuments;\r\n        }\r\n        console.log(\"view attachmentDocuments: \", this.attachmentDocuments);\r\n\r\n        // check if there's supporting doc\r\n        if (this.s1Application.supportingAttachmentReference) {\r\n          this.getSupportiveDocuments();\r\n        }\r\n      });\r\n\r\n    // Fetch payment details\r\n    if (this.s1Application.paymentAttachmentReference !== null) {\r\n      this.viewPayment();\r\n    }\r\n  }\r\n\r\n  viewPayment() {\r\n    this.apiService\r\n      .findByParam(\r\n        ENDPOINTS.payment,\r\n        `app-form-reference/${this.s1Application.appFormReference}`\r\n      )\r\n      .subscribe(\r\n        (res: any) => {\r\n          if (res.responseData.data) {\r\n            this.payment = res.responseData.data;\r\n            this.apiService\r\n              .findByParam(\r\n                ENDPOINTS.attachmentDocument,\r\n                `payment-attachment-reference/${this.s1Application.paymentAttachmentReference}`\r\n              )\r\n              .subscribe(\r\n                (res1: any) => {\r\n                  if (res1) {\r\n                    this.paymentAttachment = res1;\r\n                    this.safeURL = this.sanitizer.bypassSecurityTrustResourceUrl(\r\n                      this.paymentAttachment.fileURL\r\n                    );\r\n                    console.log(\r\n                      \"view paymentAttachment: \",\r\n                      this.paymentAttachment\r\n                    );\r\n                  }\r\n                },\r\n                (err: any) => {\r\n                  this.paymentAttachment = [];\r\n                }\r\n              );\r\n          }\r\n        },\r\n        (err: any) => {}\r\n      );\r\n  }\r\n\r\n  getSupportiveDocuments() {\r\n    this.apiService\r\n      .findByParam(\r\n        ENDPOINTS.supportiveDocument,\r\n        `application-form-id/${this.s1Application.id}`\r\n      )\r\n      .subscribe(\r\n        (res: any) => {\r\n          if (res.responseData.data.length > 0) {\r\n            this.supportiveDocumentList = res.responseData.data;\r\n            if (\r\n              this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT &&\r\n              this.s1Application.externalStatus === APPLICATION_STATUS.SAVED\r\n            ) {\r\n              this.materialInformation.supportiveDocumentList = this.supportiveDocumentList;\r\n            }\r\n            if (this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT) {\r\n              this.previewApplication.supportiveDocumentList = this.supportiveDocumentList;\r\n            }\r\n            console.log(\r\n              \"view supportiveDocumentList: \",\r\n              this.supportiveDocumentList\r\n            );\r\n          }\r\n        },\r\n        (err: any) => {\r\n          this.supportiveDocumentList = [];\r\n        }\r\n      );\r\n  }\r\n\r\n  scheduleSubmission() {\r\n    this.isChecked = !this.isChecked;\r\n    this.s1Application.autoSubmit = !this.s1Application.autoSubmit;\r\n    const submissionDateValue = \"submissionDate\";\r\n    this.s1ApplicationForm.controls[submissionDateValue].reset();\r\n    this.disableSaveAndSubmitButton();\r\n  }\r\n\r\n  /* setTime(time) {\r\n    this.s1Application.autoSubmitTime = time;\r\n  } */\r\n\r\n  // noDocumentAttachFunction(): void {\r\n  //   this.noDocumentAttached = !this.noDocumentAttached;\r\n  // }\r\n\r\n  setFormValidator(): void {\r\n    // this.s1ApplicationForm = this.formBuilder.group({\r\n    //   type: ['', Validators.required]\r\n    // });\r\n    this.s1ApplicationForm = new FormGroup({\r\n      formType: new FormControl(),\r\n      applicationType: new FormControl(),\r\n      decision: new FormControl(),\r\n      submissionDate: new FormControl(),\r\n      applicationRequest: new FormControl(),\r\n      actionStatus: new FormControl(),\r\n      assignedUser: new FormControl(),\r\n      decisionStatus: new FormControl(),\r\n    });\r\n  }\r\n\r\n  resetFormValidator(): void {\r\n    this.s1Application = new S1Application();\r\n    this.s1ApplicationForm.markAsUntouched();\r\n    this.s1ApplicationForm.markAsPristine();\r\n  }\r\n\r\n  clear(): void {\r\n    this.s1Application = new S1Application();\r\n  }\r\n\r\n  getApplicationTypeList(formType) {\r\n    this.s1Application.formType = formType;\r\n    this.applicationTypeList = [];\r\n    this.apiService.findAll(ENDPOINTS.applicationType).subscribe(\r\n      (res: any) => {\r\n        // if (formType !== 'MULTIPLE') {\r\n        this.applicationTypeList = res.responseData.data;\r\n        // } else {\r\n        //   this.applicationTypeList.push(res.responseData.data[0]);\r\n        //   this.applicationTypeList.push(res.responseData.data[1]);\r\n        // }\r\n      },\r\n      (err: any) => {}\r\n    );\r\n  }\r\n\r\n  getUserTypeForList() {\r\n    this.apiService.findAll(ENDPOINTS.userAccount).subscribe((res: any) => {\r\n      res.responseData.data.filter((account: any) => {\r\n        if (this.currentUserRole === USER_ROLES.ROLE_AD_SPECIALIST) {\r\n          if (\r\n            account.userRole.name.toUpperCase() === USER_ROLES.ROLE_SCREENER\r\n          ) {\r\n            this.apiService\r\n              .findAll(\r\n                ENDPOINTS.applicationFormScreener +\r\n                  `custom/search?assignedScreenerId=${account.id}&page=1&size=100`\r\n              )\r\n              .subscribe(\r\n                (result: any) => {\r\n                  account.ctr = result.data.length;\r\n                  console.log(\"counter ->\", account);\r\n                  this.screenerList.push(account);\r\n                },\r\n                (err: any) => {}\r\n              );\r\n          }\r\n\r\n          if (\r\n            account.userRole.name.toUpperCase() ===\r\n            USER_ROLES.ROLE_AD_SPECIALIST\r\n          ) {\r\n            this.adSpecialistList.push(account);\r\n          }\r\n        }\r\n        if (this.currentUserRole === USER_ROLES.ROLE_SCREENER) {\r\n          if (\r\n            account.userRole.name.toUpperCase() === USER_ROLES.ROLE_REVIEWER\r\n          ) {\r\n            // start set partner reviewer as default/first\r\n            this.defaultReviewer = res.responseData.data.filter(\r\n              (reviewer: any) =>\r\n                reviewer.userRole.name.toUpperCase() ===\r\n                  USER_ROLES.ROLE_REVIEWER && reviewer.ascDefault === true\r\n            );\r\n\r\n            this.reviewerList = this.defaultReviewer;\r\n            const otherReviewers = res.responseData.data.filter(\r\n              (reviewer: any) =>\r\n                reviewer.userRole.name.toUpperCase() ===\r\n                  USER_ROLES.ROLE_REVIEWER && reviewer.ascDefault === false\r\n            );\r\n            this.reviewerList.push(...otherReviewers);\r\n\r\n            // this.s1Application.assignedUser = this.reviewerList[0];\r\n            this.s1Application.assignedReviewer = this.reviewerList[0];\r\n            // end set partner reviewer as default/first\r\n          }\r\n        }\r\n        this.buttonValidation(\"\");\r\n      });\r\n\r\n      if (this.currentUserRole === USER_ROLES.ROLE_ENCODER) {\r\n        console.log(\"ITS WORKING \");\r\n\r\n        this.applicantList = res.responseData.data.filter(\r\n          (account: any) =>\r\n            account.userRole.name === USER_ROLES.ROLE_APPLICANT &&\r\n            account.status === COMMON_FUNCTION.ACTIVE\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  checkAscRateBeforeSaveOrSubmit(process = \"save\") {\r\n    const sizeLength = +this.applicationSingleMedia?.sizeLength;\r\n    if (sizeLength > this.maxSizeLength) {\r\n      this.sweetAlertService.customErrorMessage(\r\n        `Max input for size/length is ${this.maxSizeLength}`\r\n      );\r\n    } else if (\r\n      this.s1Application.formType === \"MULTIPLE\" &&\r\n      !this.specialApplicationType.includes(\r\n        this.s1Application.applicationType.description.toUpperCase()\r\n      )\r\n    ) {\r\n      this.saveOrUpdateApplication(\"SAVED\");\r\n    } else if (\r\n      this.s1Application?.refTypeOfMedium === \"SINGLE MEDIA\" &&\r\n      this.s1Application.formType !== \"MULTIPLE\"\r\n    ) {\r\n      this.validateAscRates(process);\r\n    } else {\r\n      if (process === \"save\") {\r\n        this.saveOrUpdateApplication(\"SAVED\");\r\n      } else if (process === \"submit\") {\r\n        this.saveStatus(\"presentor\", \"submit\", \"S1_APPLICATION_SUBMITTED\");\r\n      }\r\n    }\r\n  }\r\n\r\n  validateAscRates(process = \"save\") {\r\n    this.apiService\r\n      .save(ENDPOINTS.validateAscRates, this.applicationSingleMedia)\r\n      .subscribe(\r\n        (res) => {\r\n          if (process === \"save\") {\r\n            this.saveOrUpdateApplication(\"SAVED\");\r\n          } else if (process === \"submit\") {\r\n            this.saveStatus(\"presentor\", \"submit\", \"S1_APPLICATION_SUBMITTED\");\r\n          }\r\n        },\r\n        (err) => {\r\n          this.sweetAlertService.error(err);\r\n        }\r\n      );\r\n  }\r\n\r\n  saveOrUpdateApplication(status, process = \"save\") {\r\n    console.log(\"1\");\r\n    console.log(\r\n      \"this.s1Application.appFormReference: \",\r\n      this.s1Application.appFormReference\r\n    );\r\n\r\n    if (\r\n      this.s1Application.formType === \"MULTIPLE\" &&\r\n      !this.s1Application.multipleApplication\r\n    ) {\r\n      Swal.fire({\r\n        text: `Are you sure you want to ${\r\n          process === \"save\" ? \"save\" : \"submit\"\r\n        } this multiple application?`,\r\n        icon: \"question\",\r\n        showCancelButton: true,\r\n        confirmButtonColor: \"#3085d6\",\r\n        cancelButtonColor: \"#d33\",\r\n        confirmButtonText: \"Confirm\",\r\n      }).then((result) => {\r\n        if (result.value) {\r\n          this.spinner.show();\r\n\r\n          this.multipleApplication.numberOfApplication = this.dataStorage.getNumberOfApplications();\r\n          this.multipleApplication.applicationType = this.s1Application.applicationType;\r\n          this.multipleApplication.dateOfSubmission = new Date(\r\n            this.s1Application.submissionDate\r\n          );\r\n          this.multipleApplication.status = this.specialApplicationType.includes(\r\n            this.multipleApplication.applicationType.description.toUpperCase()\r\n          )\r\n            ? OTHER_STATUS.FOR_APPROVAL\r\n            : APPLICATION_STATUS.APPROVED;\r\n          this.multipleApplication.actionBy = this.currentUser.username;\r\n          this.multipleApplication.actionDate = new Date();\r\n          if (this.currentUser.userRole.name === USER_ROLES.ROLE_ENCODER) {\r\n            this.multipleApplication.applicationOwner = this.s1Application.applicationOwner;\r\n          } else {\r\n            this.multipleApplication.applicationOwner = this.currentUser;\r\n          }\r\n          this.multipleApplication.submissionStatus = \"UNPROCESSED\";\r\n          this.multipleApplication.assignedAdSpecialist = null;\r\n          this.multipleApplication.assignedEncoder = null;\r\n          this.multipleApplication.assignedScreener = null;\r\n          this.multipleApplication.assignedReviewer = null;\r\n\r\n          // From Client Info\r\n          // this.multipleApplication.membersAffiliation = this.clientInformation.s1Application.membersAffiliation;\r\n          this.multipleApplication.company = this.clientInformation.s1Application.company;\r\n          this.multipleApplication.brand = this.clientInformation.s1Application.brand;\r\n          this.multipleApplication.product = this.clientInformation.s1Application.product;\r\n          // this.multipleApplication.category = this.clientInformation.s1Application.category;\r\n\r\n          // From Material Info\r\n          this.multipleApplication.adTitle = this.materialInformation.s1Application.adTitle;\r\n          this.multipleApplication.tagLine = this.materialInformation.s1Application.tagLine;\r\n\r\n          this.save();\r\n        }\r\n      });\r\n    } else {\r\n      if (\r\n        this.s1Application.appFormReference &&\r\n        this.s1Application.appFormReference !== \"\" &&\r\n        this.s1Application.appFormReference !== undefined\r\n      ) {\r\n        if (status !== APPLICATION_STATUS.SAVED) {\r\n          this.isSubmit = true;\r\n        }\r\n        console.log(\"APPFORM: \", this.s1Application);\r\n        console.log(\"process :: \", process);\r\n        if (process === \"save\") {\r\n          Swal.fire({\r\n            text: `Are you sure you want to ${process} this application?`,\r\n            icon: \"question\",\r\n            showCancelButton: true,\r\n            confirmButtonColor: \"#3085d6\",\r\n            cancelButtonColor: \"#d33\",\r\n            confirmButtonText: \"Confirm\",\r\n          }).then((result) => {\r\n            if (result.value) {\r\n              this.spinner.show();\r\n              this.setAndSaveS1Data(status);\r\n            }\r\n          });\r\n        } else {\r\n          Swal.fire({\r\n            text: `Are you sure you want to ${process} this application?`,\r\n            icon: \"question\",\r\n            showCancelButton: true,\r\n            confirmButtonColor: \"#3085d6\",\r\n            cancelButtonColor: \"#d33\",\r\n            confirmButtonText: \"Confirm\",\r\n          }).then((result) => {\r\n            if (result.value) {\r\n              this.setAndSaveS1Data(status);\r\n            }\r\n          });\r\n        }\r\n      } else {\r\n        this.sweetAlertService.customErrorMessage(\r\n          \"Missing application form reference.\"\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  setAndSaveS1Data(status): void {\r\n    console.log(\"2\");\r\n\r\n    if (this.s1Application.id === undefined) {\r\n      this.s1Application.id = 0;\r\n      this.s1Application.applicationOwner = this.currentUser;\r\n      // this.s1Application.appFormReference = ''; // ETO PALAAAA!!!!\r\n      this.s1Application.referenceCode = \"\";\r\n    }\r\n\r\n    // From Client Info\r\n    // this.s1Application.membersAffiliation = this.clientInformation.s1Application.membersAffiliation;\r\n    this.s1Application.company = this.clientInformation.s1Application.company;\r\n    this.s1Application.brand = this.clientInformation.s1Application.brand;\r\n    this.s1Application.product = this.clientInformation.s1Application.product;\r\n    // this.s1Application.category = this.clientInformation.s1Application.category;\r\n\r\n    // From Material Info\r\n    this.s1Application.adTitle = this.materialInformation.s1Application.adTitle;\r\n    this.s1Application.referenceCode = this.materialInformation.s1Application.referenceCode;\r\n    this.s1Application.tagLine = this.materialInformation.s1Application.tagLine;\r\n\r\n    // SubmissionType (default: ORIGINAL)\r\n    this.s1Application.submissionType = this.submissionType;\r\n\r\n    // Delete auto submit details if autoSubmit is false\r\n    if (this.s1Application.autoSubmit === false) {\r\n      this.isScheduleSendIsEmpty = false;\r\n      this.s1Application.submissionDate = null;\r\n    }\r\n    console.log(\"Saving...\");\r\n    this.save();\r\n  }\r\n\r\n  save() {\r\n    console.log(\"3\");\r\n    if (\r\n      this.s1Application.formType === \"INDIVIDUAL\" ||\r\n      this.s1Application.formType === \"FOR_PRESENTATION\" ||\r\n      (this.s1Application.formType === \"MULTIPLE\" &&\r\n        this.s1Application.multipleApplication)\r\n    ) {\r\n      this.spinner.show();\r\n      // Save S1 Form\r\n      this.mediaTypeListTemp = this.materialInformation.newMultimediaList;\r\n      this.applicationSingleMediaTemp = this.materialInformation.applicationSingleMedia;\r\n\r\n      this.setTypeOfMediumDisplay();\r\n      //\r\n      if (this.s1Application.refTypeOfMedium === TYPE_OF_MEDIUM.SINGLE_MEDIA) {\r\n        this.saveUpdateApplicationSingleMedia(\"SAVE\", null, null);\r\n      } else {\r\n        this.saveUpdateMultimedia(\"SAVE\", null, null);\r\n      }\r\n    } else if (this.s1Application.formType === \"MULTIPLE\") {\r\n      this.spinner.show();\r\n      this.apiService\r\n        .save(ENDPOINTS.multipleApplication, this.multipleApplication)\r\n        .subscribe(\r\n          (res: any) => {\r\n            this.spinner.hide();\r\n            this.router.navigate([\"asc/page/application/s1/multiple\"]);\r\n            const message = this.specialApplicationType.includes(\r\n              this.multipleApplication.applicationType.description.toUpperCase()\r\n            )\r\n              ? \"Multiple application successfully submitted for approval\"\r\n              : \"Multiple application successfully saved\";\r\n            this.sweetAlertService.customSuccessMessage(message);\r\n            // this.navigateToS1List();\r\n          },\r\n          (err: any) => {\r\n            console.log(err);\r\n            this.spinner.hide();\r\n            this.sweetAlertService.error(err);\r\n          }\r\n        );\r\n    }\r\n  }\r\n\r\n  setTypeOfMediumDisplay() {\r\n    console.log(\"3a\");\r\n    if (this.s1Application.refTypeOfMedium === TYPE_OF_MEDIUM.SINGLE_MEDIA) {\r\n      this.s1Application.typeOfMedium = this.materialInformation?.typeOfMedium?.description;\r\n    } else {\r\n      let movingStatic = \"\";\r\n      if (this.s1Application.typeOfMedium) {\r\n        movingStatic = this.s1Application.typeOfMedium;\r\n      }\r\n\r\n      if (this.mediaTypeListTemp?.length) {\r\n        this.mediaTypeListTemp.forEach((element) => {\r\n          if (movingStatic === \"\") {\r\n            movingStatic = element.description;\r\n          } else if (!movingStatic.includes(element.description)) {\r\n            movingStatic = movingStatic + \"/\" + element.description;\r\n          }\r\n          this.s1Application.typeOfMedium = movingStatic;\r\n        });\r\n      } else {\r\n        if (this.s1Application.refTypeOfMedium === TYPE_OF_MEDIUM.MULTIMEDIA_MOVING) {\r\n          this.s1Application.typeOfMedium = 'DIGITAL VIDEO';\r\n        }\r\n\r\n        if (this.s1Application.refTypeOfMedium === TYPE_OF_MEDIUM.MULTIMEDIA_STATIC) {\r\n          this.s1Application.typeOfMedium = 'DIGITAL STATIC';\r\n        }\r\n      }\r\n      \r\n\r\n\r\n      // removed multimediaToDelete\r\n      if (this.materialInformation?.toDeleteMultimediaList.length > 0) {\r\n        let currentTOM = this.s1Application.typeOfMedium;\r\n        this.materialInformation?.toDeleteMultimediaList?.forEach(\r\n          (multimediaToDelete) => {\r\n            console.log(\r\n              \"REMOVE: \",\r\n              multimediaToDelete.typeOfMedium.description\r\n            );\r\n            currentTOM = currentTOM.replace(\r\n              multimediaToDelete.typeOfMedium.description + \"/\",\r\n              \"\"\r\n            );\r\n            currentTOM = currentTOM.replace(\r\n              \"/\" + multimediaToDelete.typeOfMedium.description,\r\n              \"\"\r\n            );\r\n          }\r\n        );\r\n        this.s1Application.typeOfMedium = currentTOM;\r\n      }\r\n    }\r\n  }\r\n\r\n  saveUpdateApplicationSingleMedia(status, ascUser, action) {\r\n    console.log(\"3b\");\r\n    this.applicationSingleMediaTemp.appFormReference = this.s1Application?.appFormReference;\r\n\r\n    // this.spinner.hide();\r\n    if (this.applicationSingleMediaTemp) {\r\n      // this.spinner.show();\r\n      this.apiService\r\n        .save(ENDPOINTS.applicationSingleMedia, this.applicationSingleMediaTemp)\r\n        .subscribe(\r\n          (res: any) => {\r\n            if (res !== undefined) {\r\n              console.log(\r\n                \"SAVED applicationSingleMedia: \",\r\n                res.responseData.data\r\n              );\r\n            }\r\n          },\r\n          (err: any) => {\r\n            // this.spinner.hide();\r\n            this.sweetAlertService.error(err);\r\n            return;\r\n          },\r\n          () => {\r\n            // this.spinner.hide();\r\n            if (status?.toUpperCase() === COMMON_FUNCTION.SAVE.toUpperCase()) {\r\n              this.saveAppForm();\r\n            } else if (\r\n              status?.toUpperCase() === COMMON_FUNCTION.SUBMIT.toUpperCase()\r\n            ) {\r\n              this.processAppForm(ascUser, action);\r\n            }\r\n          }\r\n        );\r\n    }\r\n  }\r\n\r\n  saveUpdateMultimedia(status, ascUser, action) {\r\n    let typeOfMultimedia = \"\";\r\n    this.multimediaDTO.appFormReference = this.s1Application.appFormReference;\r\n\r\n    if (action === 'submit') {\r\n      if (this.multimediaDTO.applicationMultimediaMovingList) {\r\n        this.multimediaDTO.applicationMultimediaMovingList = this.multimediaDTO.applicationMultimediaMovingList\r\n          .map((e) => {\r\n            return { ...e, id: 0 };\r\n        });\r\n      }\r\n      \r\n      if (this.multimediaDTO.applicationMultimediaStaticList) {\r\n        this.multimediaDTO.applicationMultimediaStaticList = this.multimediaDTO.applicationMultimediaStaticList\r\n          .map((e) => {\r\n            return { ...e, id: 0 };\r\n        });\r\n      }\r\n      console.log(this.multimediaDTO);\r\n    }\r\n\r\n    if (\r\n      this.s1Application.refTypeOfMedium === TYPE_OF_MEDIUM.MULTIMEDIA_MOVING\r\n    ) {\r\n      typeOfMultimedia = \"moving\";\r\n    } else {\r\n      typeOfMultimedia = \"static\";\r\n    }\r\n\r\n    this.apiService\r\n      .save(\r\n        ENDPOINTS.applicationMultimedia + \"-\" + typeOfMultimedia,\r\n        this.multimediaDTO\r\n      )\r\n      .subscribe(\r\n        (res: any) => {},\r\n        (err: any) => {\r\n          // this.spinner.hide();\r\n          this.sweetAlertService.error(err);\r\n        },\r\n        () => {\r\n          // this.spinner.hide();\r\n          if (status?.toUpperCase() === COMMON_FUNCTION.SAVE.toUpperCase()) {\r\n            this.saveAppForm();\r\n          } else if (\r\n            status?.toUpperCase() === COMMON_FUNCTION.SUBMIT.toUpperCase()\r\n          ) {\r\n            this.processAppForm(ascUser, action);\r\n          } else {\r\n            this.spinner.hide();\r\n          }\r\n        }\r\n      );\r\n  }\r\n\r\n  // OLD IMPLEMENTATION - TO BE REMOVED ONCE VERIFIED\r\n  // saveUpdateMultimedia(status, ascUser, action) {\r\n  //   console.log('3c');\r\n  //   const asd = this.multimediaMovingList.concat(this.multimediaStaticList);\r\n\r\n  //   const multimediaList = [];\r\n  //   this.mediaTypeListTemp = this.materialInformation.newMultimediaList;\r\n\r\n  //   this.mediaTypeListTemp.forEach(element => {\r\n  //     if (element.sizeLength !== undefined) {\r\n\r\n  //       const obj = new ApplicationMultimedia();\r\n  //       obj.typeOfMedium = element;\r\n  //       obj.appFormReference = this.s1Application.appFormReference;\r\n  //       obj.multimediaSizeLength = element.sizeLength;\r\n\r\n  //       if (element.multimediaMoving) {\r\n  //         obj.mediaType = TYPE_OF_MEDIUM.MOVING;\r\n  //       }\r\n\r\n  //       if (element.multimediaStatic) {\r\n  //         obj.mediaType = TYPE_OF_MEDIUM.STATIC;\r\n  //       }\r\n\r\n  //       const existingValue = this.selectedMultimediaList.filter(filteredMedia => filteredMedia?.typeOfMedium?.id === obj.typeOfMedium.id);\r\n  //       if (existingValue.length) {\r\n  //         obj.id = existingValue[0].id;\r\n  //       }\r\n\r\n  //       delete element.sizeLength;\r\n  //       multimediaList.push(obj);\r\n  //     }\r\n  //   });\r\n\r\n  //   // this.spinner.show();\r\n  //   this.apiService.save(ENDPOINTS.applicationMultimedia + '/' + COMMON_FUNCTION.BATCH, multimediaList).subscribe(\r\n  //     (res: any) => {\r\n  //       // remove blank multimedia size/length\r\n  //       this.materialInformation?.toDeleteMultimediaList?.forEach(multimediaToDelete => {\r\n  //         this.apiService.deleteById(`${ENDPOINTS.applicationMultimedia}`, multimediaToDelete.id).subscribe();\r\n  //       });\r\n  //       // this.spinner.hide();\r\n  //     }, (err: any) => {\r\n  //       // this.spinner.hide();\r\n  //       this.sweetAlertService.error(err);\r\n  //     }, () => {\r\n  //       // this.spinner.hide();\r\n  //       if (status?.toUpperCase() === COMMON_FUNCTION.SAVE.toUpperCase()) {\r\n  //         this.saveAppForm();\r\n  //       } else if (status?.toUpperCase() === COMMON_FUNCTION.SUBMIT.toUpperCase()) {\r\n  //         this.processAppForm(ascUser, action);\r\n  //       } else {\r\n  //         this.spinner.hide();\r\n  //       }\r\n  //     });\r\n  // }\r\n\r\n  saveAppForm() {\r\n    console.log(\"4.0\");\r\n    console.log(\"TO SAVE: \", this.s1Application);\r\n    this.s1Application.actionBy = this.currentUser;\r\n    // ENDPOINTS.applicationFormEncoder + COMMON_FUNCTION.VERIFY;\r\n    this.apiService\r\n      .save(\r\n        ENDPOINTS.applicationFormPresentor + COMMON_FUNCTION.SAVE,\r\n        this.s1Application\r\n      )\r\n      .subscribe(\r\n        (res: any) => {\r\n          if (res !== undefined) {\r\n            this.id = res.responseData.data.id;\r\n            this.s1Application = res.responseData.data;\r\n            console.log(\"SAVED:\", this.s1Application);\r\n\r\n            // if (this.currentUserRole === USER_ROLES.ROLE_ENCODER) {\r\n            //   this.saveS1ApplicationByEncoder(this.s1Application);\r\n            // }\r\n\r\n            this.spinner.hide();\r\n          }\r\n        },\r\n        (err: any) => {\r\n          this.spinner.hide();\r\n          this.sweetAlertService.error(err);\r\n        },\r\n        () => {\r\n          // actions after subscription\r\n          // this.resetFormValidator();\r\n          if (this.s1Application.id !== undefined && this.isSubmit === false) {\r\n            // this.router.navigate(['asc/page/application/s1/update/', this.id]);\r\n            this.spinner.hide();\r\n            this.sweetAlertService.customSuccessMessage(\r\n              \"Application successfully saved.\"\r\n            );\r\n            if (this.s1Application.multipleApplication) {\r\n              this.router.navigate([\"asc/page/application/s1/multiple\"]);\r\n            } else {\r\n              this.navigateToS1List();\r\n            }\r\n          } else {\r\n            console.log(\"COMMENT OUT: S1_APPLICATION_SUBMITTED\");\r\n            // this.saveStatus('presentor', 'submit', 'S1_APPLICATION_SUBMITTED');\r\n          }\r\n        }\r\n      );\r\n  }\r\n\r\n  saveSupportingDocuments() {\r\n    this.spinner.show();\r\n    const supportingDocuments = [];\r\n\r\n    this.materialInformation.newSupportiveDocumentList = this.materialInformation.newSupportiveDocumentList.map(\r\n      (res: any) => {\r\n        res.applicationForm = this.s1Application;\r\n        supportingDocuments.push(res);\r\n      }\r\n    );\r\n    this.apiService\r\n      .save(\r\n        ENDPOINTS.supportiveDocument + \"/\" + COMMON_FUNCTION.BATCH,\r\n        supportingDocuments\r\n      )\r\n      .subscribe(\r\n        (res: any) => {\r\n          console.log(\"Saved suppoting docs successfully.\");\r\n          this.spinner.hide();\r\n        },\r\n        (err: any) => {\r\n          this.spinner.hide();\r\n          this.sweetAlertService.error(err);\r\n          return;\r\n        }\r\n      );\r\n  }\r\n\r\n  setAppType(type) {\r\n    this.s1Application.applicationType = type;\r\n  }\r\n\r\n  compareFormType(value: any, selected: any): boolean {\r\n    if (value && selected) {\r\n      return value.description === selected;\r\n    }\r\n  }\r\n\r\n  compareApplicationType(value: any, selected: any): boolean {\r\n    if (value && selected) {\r\n      return value.description === selected.description;\r\n    }\r\n  }\r\n\r\n  compareAssignedScreener(value: any, selected: any): boolean {\r\n    if (value && selected) {\r\n      return value.description === selected.description;\r\n    }\r\n  }\r\n\r\n  compareAssignedReviewer(value: any, selected: any): boolean {\r\n    if (value && selected) {\r\n      return value.description === selected.description;\r\n    }\r\n  }\r\n\r\n  compareAssignedAdSpec(value: any, selected: any): boolean {\r\n    if (value && selected) {\r\n      return value.description === selected.description;\r\n    }\r\n  }\r\n\r\n  // onChangeHour(event) {\r\n  //   let timeFetched;\r\n  //   timeFetched = event.hour + ':' + event.minute + event.meriden;\r\n  //   this.s1Application.autoSubmitTime = timeFetched;\r\n  // }\r\n\r\n  onChangeDate(value) {\r\n    console.log(value);\r\n    if (value) {\r\n      const dateFetched = value;\r\n      const dateTransformed = this.datepipe.transform(\r\n        dateFetched,\r\n        \"yyyy-MM-dd\"\r\n      );\r\n      this.s1Application.submissionDate = new Date(dateTransformed);\r\n      this.s1Application.autoSubmit = true;\r\n      this.disableSaveAndSubmitButton();\r\n    }\r\n  }\r\n\r\n  resendDecision() {\r\n    Swal.fire({\r\n      text: \"Are you sure you want to resend decision form?\",\r\n      icon: \"question\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Confirm\",\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.spinner.show();\r\n        this.apiService\r\n          .save(\r\n            ENDPOINTS.api +\r\n              `admin/application-form/id/${this.s1Application.id}/send/decision-form`,\r\n            this.s1Application\r\n          )\r\n          .subscribe(\r\n            (res: any) => {\r\n              if (res.code === 200) {\r\n                this.spinner.hide();\r\n                this.sweetAlertService.customSuccessMessage(\r\n                  \"Successfully resend decision form\"\r\n                );\r\n                this.navigateToS1List();\r\n              }\r\n            },\r\n            (err: any) => {\r\n              this.spinner.hide();\r\n            }\r\n          );\r\n      }\r\n    });\r\n  }\r\n\r\n  returnToScreener() {\r\n    Swal.fire({\r\n      text: \"Are you sure you want to return this application to Screener?\",\r\n      icon: \"question\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Confirm\",\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.spinner.show();\r\n        let endpoint = \"\";\r\n        if (this.currentUser.userRole.name === USER_ROLES.ROLE_AD_SPECIALIST) {\r\n          endpoint =\r\n            ENDPOINTS.api +\r\n            `application-form/id/${this.s1Application.id}/s1/ad-specialist/forward-to-screener`;\r\n        } else if (\r\n          this.currentUser.userRole.name === USER_ROLES.ROLE_ADMIN ||\r\n          this.currentUser.userRole.name === USER_ROLES.ROLE_SUPER_ADMIN\r\n        ) {\r\n          endpoint =\r\n            ENDPOINTS.api +\r\n            `admin/application-form/id/${this.s1Application.id}/forward-to-screener`;\r\n        }\r\n\r\n        this.apiService.save(endpoint, this.s1Application).subscribe(\r\n          (res: any) => {\r\n            if (res.code === 200) {\r\n              console.log(\"RETURN: \", res.responseData.data);\r\n              this.spinner.hide();\r\n              this.sweetAlertService.customSuccessMessage(\r\n                \"Successfully return to Screener\"\r\n              );\r\n              this.navigateToS1List();\r\n            }\r\n          },\r\n          (err: any) => {\r\n            this.spinner.hide();\r\n          }\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  returnTo(ascUser, newStatus): void {\r\n    Swal.fire({\r\n      text:\r\n        \"Are you sure you want to return this application to \" + ascUser + \"?\",\r\n      icon: \"question\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Confirm\",\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.spinner.show();\r\n        let endpoint = \"\";\r\n        this.s1Application.assignedUser = this.s1Application.actionBy;\r\n        this.s1Application.actionBy = this.currentUser;\r\n\r\n        if (this.currentUser.userRole.name === USER_ROLES.ROLE_SCREENER) {\r\n          if (\r\n            this.s1Application.multipleApplication &&\r\n            this.s1Application.submissionType === SUBMISSION_TYPE.ORIGINAL\r\n          ) {\r\n            endpoint = `${ENDPOINTS.multipleApplicationReturnToAdSpe}${this.s1Application.multipleApplication.id}/return`;\r\n          } else {\r\n            endpoint = `${ENDPOINTS.applicationFormScreener}return`;\r\n          }\r\n        } else if (\r\n          this.currentUser.userRole.name === USER_ROLES.ROLE_REVIEWER\r\n        ) {\r\n          if (\r\n            this.s1Application.multipleApplication &&\r\n            this.s1Application.submissionType === SUBMISSION_TYPE.ORIGINAL\r\n          ) {\r\n            endpoint = `${ENDPOINTS.multipleApplicationReturnToScreener}${this.s1Application.multipleApplication.id}/return`;\r\n          } else {\r\n            endpoint = `${ENDPOINTS.applicationFormReviewer}return`;\r\n          }\r\n        }\r\n\r\n        // console.log('TO SAVE: ', this.s1Application);\r\n        this.apiService.save(endpoint, this.s1Application).subscribe(\r\n          (res: any) => {\r\n            if (res.code === 200) {\r\n              // console.log('RETURN: ', res.responseData.data);\r\n              this.spinner.hide();\r\n              this.sweetAlertService.customSuccessMessage(\r\n                \"Successfully returned the application\"\r\n              );\r\n              this.navigateToS1List();\r\n            }\r\n          },\r\n          (err: any) => {\r\n            this.spinner.hide();\r\n          }\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  reassign(): void {\r\n    if (\r\n      this.s1Application.internalStatus ===\r\n      APPLICATION_STATUS.S1_APPLICATION_VERIFIED_BY_AD_SPE\r\n    ) {\r\n      if (this.s1Application.multipleApplication) {\r\n        this.s1Application.multipleApplication.assignedScreener = this.s1Application.assignedScreener;\r\n      } else {\r\n        this.s1Application.assignedUser = this.s1Application.assignedScreener;\r\n      }\r\n    } else if (\r\n      this.s1Application.internalStatus ===\r\n      APPLICATION_STATUS.S1_APPLICATION_SCREENED\r\n    ) {\r\n      if (this.s1Application.multipleApplication) {\r\n        this.s1Application.multipleApplication.assignedReviewer = this.s1Application.assignedReviewer;\r\n      } else {\r\n        this.s1Application.assignedUser = this.s1Application.assignedReviewer;\r\n      }\r\n    }\r\n\r\n    Swal.fire({\r\n      text: \"Are you sure you want to reassign this application?\",\r\n      icon: \"question\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Confirm\",\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.spinner.show();\r\n        let endpoint = \"\";\r\n        let param = {};\r\n        this.s1Application.actionBy = this.currentUser;\r\n\r\n        if (this.currentUserRole === USER_ROLES.ROLE_AD_SPECIALIST) {\r\n          if (this.s1Application.multipleApplication) {\r\n            endpoint = ENDPOINTS.reAssignScreenerForMultipleApplication;\r\n            param = this.s1Application.multipleApplication;\r\n          } else {\r\n            endpoint = `${ENDPOINTS.applicationFormAdSpecialist}re-assign/screener`;\r\n            param = this.s1Application;\r\n          }\r\n        } else {\r\n          if (this.s1Application.multipleApplication) {\r\n            endpoint = ENDPOINTS.reAssignReviewerForMultipleApplication;\r\n            param = this.s1Application.multipleApplication;\r\n          } else {\r\n            endpoint = `${ENDPOINTS.applicationFormScreener}re-assign/reviewer`;\r\n            param = this.s1Application;\r\n          }\r\n        }\r\n\r\n        this.apiService.save(endpoint, param).subscribe(\r\n          (res: any) => {\r\n            console.log(\"SAVED: \", res.responseData.data);\r\n            if (res.code === 200) {\r\n              this.spinner.hide();\r\n              this.sweetAlertService.success(res);\r\n              this.navigateToS1List();\r\n            }\r\n          },\r\n          (err: any) => {\r\n            this.spinner.hide();\r\n          }\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  reassignAdSpecialist(): void {\r\n    Swal.fire({\r\n      text:\r\n        \"Are you sure you want to re-assign this application to \" +\r\n        this.s1Application.assignedAdSpecialist.firstName +\r\n        \" \" +\r\n        this.s1Application.assignedAdSpecialist.lastName,\r\n      icon: \"question\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Confirm\",\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.spinner.show();\r\n        let endpoint = \"\";\r\n        this.s1Application.assignedUser = this.s1Application.assignedAdSpecialist;\r\n\r\n        endpoint = ENDPOINTS.applicationForm;\r\n\r\n        // console.log('TO SAVE: ', this.s1Application);\r\n        this.apiService.update(endpoint, this.s1Application).subscribe(\r\n          (res: any) => {\r\n            // console.log('RETURN: ', res.responseData.data);\r\n            if (res.code === 200) {\r\n              this.spinner.hide();\r\n              this.sweetAlertService.customSuccessMessage(\r\n                \"Application re-assigned successfully.\"\r\n              );\r\n              this.navigateToS1List();\r\n            }\r\n          },\r\n          (err: any) => {\r\n            this.spinner.hide();\r\n          }\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  validateSubmissionTime(status = \"\") {\r\n    const currentDate = new Date();\r\n    // start - for testing purposes only - uncomment lines below during dev (do not push uncomment)\r\n    // currentDate.setHours(11);\r\n    // currentDate.setMinutes(0);\r\n    // const currentHour = currentDate.getHours();\r\n    // const currentMinute = currentDate.getMinutes();\r\n\r\n    // if ((currentHour < 7 || (currentHour >= 11 && currentMinute > 0) || currentHour > 11) && status === 'S1_APPLICATION_SUBMITTED') {\r\n    //   const err = {\r\n    //     error: { message: 'Submission of application is between 7:00 AM to 11:00 AM only.' }\r\n    //   };\r\n    //   this.sweetAlertService.error(err);\r\n    //   return;\r\n    // }\r\n    // end\r\n  }\r\n\r\n  checkNullValues(str) {\r\n    return str ? str : \"\";\r\n  }\r\n\r\n  /////////////////////////// FOR ORIGINAL //////////////////////////////////\r\n  saveStatus(ascUser = \"\", action = \"\", status = \"\") {\r\n    let message: string = \"\";\r\n    if (action === \"submit\") {\r\n      message =\r\n        \"Once submitted and accepted, cancellation of application is not allowed.\" +\r\n        ` Are you sure you want to ${action} this application?`;\r\n    } else message = `Are you sure you want to ${action} this application?`;\r\n    Swal.fire({\r\n      text: message,\r\n      icon: \"question\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Confirm\",\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        let msg = \"\";\r\n        if (status === APPLICATION_STATUS.S1_APPLICATION_SUBMITTED) {\r\n          msg = COMMON_FUNCTION.SUBMIT;\r\n        } else if (status === APPLICATION_STATUS.S1_APPLICATION_CANCELLED) {\r\n          msg = COMMON_FUNCTION.CANCEL;\r\n        } else if (status === APPLICATION_STATUS.S1_APPLICATION_REJECTED) {\r\n          msg = COMMON_FUNCTION.REJECT;\r\n        } else if (\r\n          status === APPLICATION_STATUS.S1_APPLICATION_VERIFIED_BY_AD_SPE\r\n        ) {\r\n          msg = COMMON_FUNCTION.VERIFY;\r\n        } else if (status === APPLICATION_STATUS.S1_APPLICATION_SCREENED) {\r\n          msg = COMMON_FUNCTION.SCREEN;\r\n        } else {\r\n          msg = COMMON_FUNCTION.ACCEPT;\r\n        }\r\n\r\n        this.spinner.show();\r\n        this.dataStorage.setDisplayProgressbar(true);\r\n\r\n        // Check NULL values\r\n        this.s1Application.referenceCode = this.checkNullValues(\r\n          this.s1Application.referenceCode\r\n        );\r\n        this.s1Application.supportingAttachmentReference = this.checkNullValues(\r\n          this.s1Application.supportingAttachmentReference\r\n        );\r\n        this.s1Application.paymentAttachmentReference = this.checkNullValues(\r\n          this.s1Application.paymentAttachmentReference\r\n        );\r\n        this.s1Application.revisionLetterAttachmentReference = this.checkNullValues(\r\n          this.s1Application.revisionLetterAttachmentReference\r\n        );\r\n        this.s1Application.decisionStatus = this.checkNullValues(\r\n          this.s1Application.decisionStatus\r\n        );\r\n        this.s1Application.status = this.specialApplicationType.includes(\r\n          this.s1Application.applicationType.description.toUpperCase()\r\n        )\r\n          ? OTHER_STATUS.FOR_APPROVAL\r\n          : APPLICATION_STATUS.APPROVED;\r\n        // SUBMIT\r\n        if (status === APPLICATION_STATUS.S1_APPLICATION_SUBMITTED) {\r\n          if (this.currentUserRole === USER_ROLES.ROLE_ENCODER) {\r\n            this.s1Application.applicationOwner = this.selectedApplicationOwner;\r\n          } else {\r\n            this.s1Application.applicationOwner = this.dataStorage.getUserAccount();\r\n          }\r\n\r\n          this.s1Application.submissionDate = new Date();\r\n          // Delete auto submit details if autoSubmit was cancelled\r\n          this.s1Application.autoSubmit = false;\r\n        }\r\n\r\n        if (!this.s1Application.company) {\r\n          this.s1Application.company = this.dataStorage.getS1NewCompany();\r\n          sessionStorage.removeItem(\"NEW_COMPANY\");\r\n        }\r\n\r\n        this.s1Application.actionBy = this.dataStorage.getUserAccount();\r\n\r\n        if (status !== APPLICATION_STATUS.S1_APPLICATION_CANCELLED) {\r\n          // FOR ADSPE: Save Supporting Documents\r\n          if (\r\n            this.currentUserRole === USER_ROLES.ROLE_AD_SPECIALIST &&\r\n            this.materialInformation.newSupportiveDocumentList.length > 0\r\n          ) {\r\n            this.saveSupportingDocuments();\r\n          }\r\n\r\n          this.spinner.show();\r\n          if (\r\n            this.s1Application.formType !== APPFORM_TYPE.MULTIPLE ||\r\n            (this.s1Application.multipleApplication &&\r\n              this.s1Application.multipleApplication\r\n                .actualNumberOfApplicationForm ===\r\n                this.s1Application.multipleApplication\r\n                  .countVerifiedApplicationForm -\r\n                  1)\r\n          ) {\r\n            if (\r\n              ascUser === \"ad-specialist\" &&\r\n              action === \"verify\" &&\r\n              status === APPLICATION_STATUS.S1_APPLICATION_VERIFIED_BY_AD_SPE\r\n            ) {\r\n              // this.s1Application.assignedScreener = this.s1Application.assignedUser;\r\n              this.s1Application.assignedUser = this.s1Application.assignedScreener;\r\n            } else if (\r\n              ascUser === \"screener\" &&\r\n              action === \"verify\" &&\r\n              status === APPLICATION_STATUS.S1_APPLICATION_SCREENED\r\n            ) {\r\n              this.s1Application.assignedUser = this.s1Application.assignedReviewer;\r\n            }\r\n          }\r\n\r\n          this.mediaTypeListTemp = this.materialInformation.newMultimediaList;\r\n          this.applicationSingleMediaTemp = this.materialInformation.applicationSingleMedia;\r\n\r\n          console.log(\"mediaTypeListTemp: \", this.mediaTypeListTemp);\r\n          console.log(\r\n            \"applicationSingleMediaTemp: \",\r\n            this.applicationSingleMediaTemp\r\n          );\r\n\r\n          // Encoder: Update Medium details - working in single media\r\n          // Encoder: Encode appform - working in single media\r\n          if (this.currentUserRole === USER_ROLES.ROLE_ENCODER) {\r\n            this.setTypeOfMediumDisplay();\r\n            if (\r\n              this.s1Application.refTypeOfMedium === TYPE_OF_MEDIUM.SINGLE_MEDIA\r\n            ) {\r\n              this.applicationSingleMedia = this.applicationSingleMediaTemp;\r\n              this.applicationSingleMedia.appFormReference = this.s1Application.appFormReference;\r\n              this.saveUpdateApplicationSingleMedia(null, null, null);\r\n            } else {\r\n              this.saveUpdateMultimedia(null, null, null);\r\n            }\r\n          }\r\n\r\n          // working in Single Media\r\n          if (\r\n            msg === COMMON_FUNCTION.SUBMIT &&\r\n            this.currentUserRole === USER_ROLES.ROLE_APPLICANT\r\n          ) {\r\n            this.setTypeOfMediumDisplay();\r\n            if (\r\n              this.s1Application.refTypeOfMedium === TYPE_OF_MEDIUM.SINGLE_MEDIA\r\n            ) {\r\n              this.saveUpdateApplicationSingleMedia(msg, ascUser, action);\r\n            } else {\r\n              this.saveUpdateMultimedia(msg, ascUser, action);\r\n            }\r\n          } else {\r\n            this.processAppForm(ascUser, action);\r\n          }\r\n          // socket here\r\n        } else {\r\n          // CANCEL APPLICATION (PUT method)\r\n\r\n          this.spinner.show();\r\n          this.apiService\r\n            .update(\r\n              `${ENDPOINTS.applicationForm}/s1/${ascUser}/${action}`,\r\n              this.s1Application\r\n            )\r\n            .subscribe(\r\n              (res: any) => {\r\n                console.log(\"SAVED STATUS: \", res.responseData.data);\r\n                this.spinner.hide();\r\n                this.sweetAlertService.customSuccessMessage(\r\n                  \"Application successfully canceled.\"\r\n                );\r\n                this.navigateToS1List();\r\n              },\r\n              (err) => {\r\n                console.log(err);\r\n                this.spinner.hide();\r\n              },\r\n              () => {\r\n                this.dataStorage.setDisplayProgressbar(false);\r\n              }\r\n            );\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  processAppForm(ascUser, action) {\r\n    console.log(\"Process 2\");\r\n\r\n    const {\r\n      appFormReference,\r\n      revisionLetterAttachmentReference,\r\n      supportingAttachmentReference,\r\n    } = this.s1Application;\r\n    this.s1Application.appFormReference = appFormReference\r\n      ? appFormReference\r\n      : \"\";\r\n\r\n    if (revisionLetterAttachmentReference === \"\") {\r\n      delete this.s1Application.revisionLetterAttachmentReference;\r\n    }\r\n    if (supportingAttachmentReference === \"\") {\r\n      delete this.s1Application.supportingAttachmentReference;\r\n    }\r\n\r\n    this.s1Application.status = this.specialApplicationType.includes(\r\n      this.s1Application.applicationType.description.toUpperCase()\r\n    )\r\n      ? OTHER_STATUS.FOR_APPROVAL\r\n      : \"APPROVED\";\r\n    console.log(\"TO PROCESS: \", this.s1Application);\r\n\r\n    this.apiService\r\n      .save(\r\n        `${ENDPOINTS.applicationForm}/s1/${ascUser}/${action}`,\r\n        this.s1Application\r\n      )\r\n      .subscribe(\r\n        (res: any) => {\r\n          if (res) {\r\n            console.log(\"SAVED STATUS 1: \", res);\r\n            if (res.code === 400) {\r\n              this.sweetAlertService.customErrorMessage(res.responseMessage);\r\n            } else {\r\n              console.log(\"SAVED STATUS: \", res.responseData.data);\r\n              this.s1Application = res.responseData.data;\r\n              // saving of media\r\n              // if (this.s1Application.refTypeOfMedium === TYPE_OF_MEDIUM.SINGLE_MEDIA) {\r\n              //   this.saveUpdateApplicationSingleMedia();\r\n              // } else {\r\n              //   this.saveUpdateMultimedia();\r\n              // }\r\n\r\n              // Forward Multiple Application\r\n              if (\r\n                this.s1Application.multipleApplication &&\r\n                this.s1Application.multipleApplication\r\n                  .actualNumberOfApplicationForm ===\r\n                  this.s1Application.multipleApplication\r\n                    .countVerifiedApplicationForm\r\n              ) {\r\n                this.forwardMultipleAppsTo(ascUser);\r\n              } else {\r\n                console.log(\"SAVED STATUS: \", res.responseData.data);\r\n                this.s1Application = res.responseData.data;\r\n                // saving of media\r\n                // if (this.s1Application.refTypeOfMedium === TYPE_OF_MEDIUM.SINGLE_MEDIA) {\r\n                //   this.saveUpdateApplicationSingleMedia();\r\n                // } else {\r\n                //   this.saveUpdateMultimedia();\r\n                // }\r\n\r\n                // Forward Multiple Application\r\n                if (\r\n                  this.s1Application.multipleApplication &&\r\n                  this.s1Application.multipleApplication\r\n                    .actualNumberOfApplicationForm ===\r\n                    this.s1Application.multipleApplication\r\n                      .countVerifiedApplicationForm\r\n                ) {\r\n                  this.forwardMultipleAppsTo(ascUser);\r\n                } else {\r\n                  this.spinner.hide();\r\n                  this.sweetAlertService.success(res);\r\n                }\r\n              }\r\n            }\r\n          }\r\n        },\r\n        (err) => {\r\n          console.log(err);\r\n          this.spinner.hide();\r\n          this.sweetAlertService.error(err);\r\n          this.dataStorage.setDisplayProgressbar(false);\r\n        },\r\n        () => {\r\n          this.spinner.hide();\r\n          this.dataStorage.setDisplayProgressbar(false);\r\n          // if (this.s1Application.multipleApplication) {\r\n          //   this.router.navigate(['/asc/page/application/s1/multiple']);\r\n          // } else {\r\n          this.navigateToS1List();\r\n\r\n          //\r\n          if (\r\n            this.currentUserRole === USER_ROLES.ROLE_APPLICANT &&\r\n            this.checkCutOffTime()\r\n          ) {\r\n            this._snackBar.open(\r\n              \"Cutoff reached. Application will be processed the next day.\",\r\n              \"OK\",\r\n              {\r\n                horizontalPosition: \"right\",\r\n                verticalPosition: \"top\",\r\n                duration: 5000,\r\n              }\r\n            );\r\n          }\r\n          // }\r\n        }\r\n      );\r\n    // if (this.currentUserRole === USER_ROLES.ROLE_ENCODER && this.s1Application.externalStatus === APPLICATION_STATUS.SAVED) {\r\n    //   this.saveS1ApplicationByEncoder(this.s1Application);\r\n    // }\r\n  }\r\n\r\n  submitDecisionAndComment() {\r\n    Swal.fire({\r\n      text: \"Are you sure you want to save changes to this application?\",\r\n      icon: \"question\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Confirm\",\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        let endpoint = \"\";\r\n        if (this.currentUser.userRole.name === USER_ROLES.ROLE_SCREENER) {\r\n          endpoint = ENDPOINTS.submitDecisionAndCommentScreener;\r\n        } else if (\r\n          this.currentUser.userRole.name === USER_ROLES.ROLE_REVIEWER\r\n        ) {\r\n          endpoint = ENDPOINTS.submitDecisionAndCommentReviewer;\r\n        }\r\n\r\n        this.apiService.save(endpoint, this.s1Application).subscribe(\r\n          (res: any) => {\r\n            console.log(res);\r\n            this.sweetAlertService.customSuccessMessage(\r\n              \"Decision and comment successfully submitted.\"\r\n            );\r\n            this.navigateToS1List();\r\n          },\r\n          (err: any) => {}\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  forwardMultipleAppsTo(user) {\r\n    console.log(\"forwardMultipleAppsTo\");\r\n    console.log(this.s1Application);\r\n\r\n    let endpoint = \"\";\r\n    if (user === \"encoder\") {\r\n      this.s1Application.multipleApplication.assignedEncoder = this.s1Application.assignedEncoder;\r\n      endpoint = ENDPOINTS.forwardMultipleAppFormToAdSpe;\r\n    } else if (user === \"ad-specialist\") {\r\n      this.s1Application.multipleApplication.assignedAdSpecialist = this.s1Application.assignedAdSpecialist;\r\n      this.s1Application.multipleApplication.assignedScreener = this.s1Application.assignedScreener;\r\n      endpoint = ENDPOINTS.forwardMultipleAppFormToScreener;\r\n    } else if (user === \"screener\") {\r\n      this.s1Application.multipleApplication.assignedReviewer = this.s1Application.assignedReviewer;\r\n      endpoint = ENDPOINTS.forwardMultipleAppFormToReviewer;\r\n    } else if (user === \"reviewer\") {\r\n      endpoint =\r\n        ENDPOINTS.releaseMultipleApplication +\r\n        this.s1Application.multipleApplication.id +\r\n        `/release`;\r\n    }\r\n\r\n    this.apiService\r\n      .save(endpoint, this.s1Application.multipleApplication)\r\n      .subscribe(\r\n        (res: any) => {\r\n          console.log(\"Forwarded: \", res);\r\n          this.spinner.hide();\r\n          this.sweetAlertService.customSuccessMessage(\r\n            \"Multiple application successfully forwarded to the next user.\"\r\n          );\r\n        },\r\n        (err: any) => {\r\n          this.spinner.hide();\r\n          this.sweetAlertService.error(err);\r\n        },\r\n        () => {\r\n          this.spinner.hide();\r\n        }\r\n      );\r\n  }\r\n\r\n  /////////////////////////// FOR COMPLIANCE //////////////////////////////////\r\n  saveStatusForCompliance(ascUser = \"\", action = \"\", status = \"\") {\r\n    console.log(\"Com > \", this.s1Application);\r\n    let msg;\r\n    if (\r\n      status ===\r\n      APPLICATION_STATUS_FOR_COMPLIANCE.SUBMITTED_DOCUMENT_FOR_COMPLIANCE\r\n    ) {\r\n      msg = COMMON_FUNCTION.SUBMIT;\r\n    } else {\r\n      msg = COMMON_FUNCTION.ACCEPT;\r\n    }\r\n\r\n    if (this.s1Application.submissionType === SUBMISSION_TYPE.REVISION) {\r\n      this.s1Application.submissionType = SUBMISSION_TYPE.REVISION;\r\n    } else {\r\n      this.s1Application.submissionType = SUBMISSION_TYPE.ORIGINAL;\r\n    }\r\n\r\n    Swal.fire({\r\n      text:\r\n        \"Are you sure you want to \" + msg + \" this application for compliance?\",\r\n      icon: \"question\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Confirm\",\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.spinner.show();\r\n        this.dataStorage.setDisplayProgressbar(true);\r\n        console.log(\"TO SAVE: \", this.s1Application);\r\n\r\n        // FOR ADSPE: Save Supporting Documents\r\n        if (this.materialInformation.newSupportiveDocumentList.length > 0) {\r\n          this.saveSupportingDocuments();\r\n        }\r\n\r\n        this.spinner.show();\r\n        this.s1Application.actionBy = this.currentUser;\r\n\r\n        if (\r\n          ascUser === \"ad-specialist\" &&\r\n          action === \"verify\" &&\r\n          status ===\r\n            APPLICATION_STATUS_FOR_COMPLIANCE.COMPLIANCE_DOCUMENT_VERIFIED_BY_AD_SPE\r\n        ) {\r\n          // this.s1Application.assignedScreener = this.s1Application.assignedUser;\r\n          this.s1Application.assignedUser = this.s1Application.assignedScreener;\r\n          console.log(\"ASSINGED SCREENER\", this.s1Application.assignedUser);\r\n        }\r\n\r\n        if (\r\n          ascUser === \"screener\" &&\r\n          action === \"verify\" &&\r\n          status ===\r\n            APPLICATION_STATUS_FOR_COMPLIANCE.COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER\r\n        ) {\r\n          // this.s1Application.assignedScreener = this.s1Application.assignedUser;\r\n          this.s1Application.assignedUser = this.s1Application.assignedReviewer;\r\n          console.log(\"ASSINGED REVIEWER\", this.s1Application.assignedUser);\r\n        }\r\n\r\n        this.apiService\r\n          .save(\r\n            `${ENDPOINTS.applicationForm}/s1/compliance/${ascUser}/${action}`,\r\n            this.s1Application\r\n          )\r\n          .subscribe(\r\n            (res: any) => {\r\n              console.log(\"SAVED STATUS: \", res.responseData.data);\r\n              this.spinner.hide();\r\n              this.sweetAlertService.success(res);\r\n              this.navigateToS1List();\r\n            },\r\n            (err) => {\r\n              console.log(err);\r\n              this.spinner.hide();\r\n              this.sweetAlertService.error(err);\r\n              this.dataStorage.setDisplayProgressbar(false);\r\n            },\r\n            () => {\r\n              this.spinner.hide();\r\n              this.dataStorage.setDisplayProgressbar(false);\r\n            }\r\n          );\r\n      }\r\n    });\r\n  }\r\n\r\n  /////////////////////////// REVISION //////////////////////////////////\r\n  saveStatusRevision(ascUser = \"\", action = \"\", status = \"\") {\r\n    console.log(\"Rev > \", this.s1Application);\r\n    Swal.fire({\r\n      text: \"Are you sure you want to save changes for revision?\",\r\n      icon: \"question\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Confirm\",\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.spinner.show();\r\n        this.dataStorage.setDisplayProgressbar(true);\r\n        if (\r\n          this.s1Application.revisionNo === 2 &&\r\n          this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT\r\n        ) {\r\n          this.spinner.hide();\r\n          this.sweetAlertService.customSuccessMessage(\r\n            \"Presentor can only submit revision no more than 2 times.\"\r\n          );\r\n        } else {\r\n          if (this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT) {\r\n            this.s1Application.submissionType = SUBMISSION_TYPE.REVISION;\r\n          }\r\n\r\n          // FOR ADSPE: Save Supporting Documents\r\n          console.log(\"Save supporting..\");\r\n          if (this.materialInformation.newSupportiveDocumentList.length > 0) {\r\n            this.saveSupportingDocuments();\r\n          }\r\n\r\n          this.s1Application.actionBy = this.dataStorage.getUserAccount();\r\n\r\n          if (\r\n            ascUser === \"ad-specialist\" &&\r\n            action === \"verify\" &&\r\n            status === APPLICATION_STATUS_REVISION.REVISION_VERIFIED_BY_AD_SPE\r\n          ) {\r\n            this.s1Application.assignedUser = this.s1Application.assignedScreener;\r\n          }\r\n\r\n          if (\r\n            ascUser === \"screener\" &&\r\n            action === \"verify\" &&\r\n            status === APPLICATION_STATUS_REVISION.REVISION_SCREENED\r\n          ) {\r\n            this.s1Application.assignedUser = this.s1Application.assignedReviewer;\r\n          }\r\n\r\n          console.log(\"TO SAVE: \", this.s1Application);\r\n\r\n          this.spinner.show();\r\n          this.apiService\r\n            .save(\r\n              `${ENDPOINTS.applicationForm}/s1/revision/${ascUser}/${action}`,\r\n              this.s1Application\r\n            )\r\n            .subscribe(\r\n              (res: any) => {\r\n                console.log(\"SAVED STATUS: \", res.responseData.data);\r\n                this.spinner.hide();\r\n                this.sweetAlertService.success(res);\r\n                this.navigateToS1List();\r\n              },\r\n              (err) => {\r\n                this.spinner.hide();\r\n                console.log(err);\r\n                this.sweetAlertService.error(err);\r\n                this.dataStorage.setDisplayProgressbar(false);\r\n              },\r\n              () => {\r\n                this.dataStorage.setDisplayProgressbar(false);\r\n              }\r\n            );\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  requestSpecialS1ApplicationApproval(): void {\r\n    this.applicationRequest = {\r\n      id: 0,\r\n      adTitle: this.s1Application.adTitle,\r\n      applicationOwner: this.s1Application.applicationOwner,\r\n      applicationType: this.s1Application.applicationType,\r\n      brand: this.s1Application.brand,\r\n      product: this.s1Application.product,\r\n      // category: this.s1Application.category,\r\n      company: this.s1Application.company,\r\n      formType: this.s1Application.formType,\r\n      // membersAffiliation: this.s1Application.membersAffiliation,\r\n      status: OTHER_STATUS.FOR_APPROVAL,\r\n      submissionDate: new Date(this.s1Application.submissionDate),\r\n      tagLine: this.s1Application.tagLine,\r\n      submitApplicationForm: false,\r\n      hasSpecialClearing: false,\r\n      applicationForm: null,\r\n    };\r\n    Swal.fire({\r\n      text: \"Are you sure you want to request this application for approval?\",\r\n      icon: \"question\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Confirm\",\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.spinner.show();\r\n        this.dataStorage.setDisplayProgressbar(true);\r\n        console.log(\"TO SAVE: \", this.applicationRequest);\r\n\r\n        if (this.currentUser.userRole.name === USER_ROLES.ROLE_ENCODER) {\r\n          this.applicationRequest.applicationOwner = this.s1Application.applicationOwner;\r\n        } else {\r\n          this.applicationRequest.applicationOwner = this.currentUser;\r\n        }\r\n        this.apiService\r\n          .save(ENDPOINTS.applicationRequests, this.applicationRequest)\r\n          .subscribe(\r\n            (res: any) => {\r\n              console.log(\"SAVED STATUS: \", res.responseData.data);\r\n              this.spinner.hide();\r\n              this.sweetAlertService.success(res);\r\n              // this.navigateToS1List();\r\n              this.router.navigate([\"asc/page/application/s1/special\"]);\r\n            },\r\n            (err) => {\r\n              this.spinner.hide();\r\n              console.log(err);\r\n              this.sweetAlertService.error(err);\r\n              this.dataStorage.setDisplayProgressbar(false);\r\n            },\r\n            () => {\r\n              this.spinner.hide();\r\n              this.dataStorage.setDisplayProgressbar(false);\r\n            }\r\n          );\r\n      }\r\n    });\r\n  }\r\n\r\n  accordionDisablingFunction(): void {\r\n    if (this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT) {\r\n      // if (this.s1Application.membersAffiliation && this.company && this.s1Application.brand) {\r\n      // this.accordionDisable = !this.accordionDisable;\r\n      this.accordionExpanded = !this.accordionExpanded;\r\n      this.validationMessage = \"\";\r\n      // } else {\r\n      //   this.validationMessage = ' Please provide all the required information...'\r\n      // }\r\n    }\r\n  }\r\n\r\n  disabledWeekEnds(d: Date | null): boolean {\r\n    const day = (d || new Date()).getDay();\r\n    return (\r\n      ((day !== 0 && day !== 6) ||\r\n        activeWeekendDates.find((weekendDate) => {\r\n          return format(d, \"yyyy-MM-dd\") === format(weekendDate, \"yyyy-MM-dd\");\r\n        })) &&\r\n      !Boolean(\r\n        activeHolidayDates.find((holidayDate) => {\r\n          return format(d, \"yyyy-MM-dd\") === format(holidayDate, \"yyyy-MM-dd\");\r\n        })\r\n      )\r\n    );\r\n  }\r\n\r\n  disableSaveAndSubmitButton() {\r\n    if (this.s1Application.autoSubmit === false) {\r\n      this.isScheduleSendIsEmpty = false;\r\n    }\r\n    if (this.s1Application.autoSubmit === true) {\r\n      this.isScheduleSendIsEmpty = true;\r\n      if (\r\n        this.s1Application.submissionDate === null ||\r\n        this.s1Application.submissionDate === undefined\r\n      ) {\r\n        this.isScheduleSendIsEmpty = true;\r\n      } else {\r\n        this.isScheduleSendIsEmpty = false;\r\n      }\r\n    }\r\n  }\r\n\r\n  adSpecValidation(i: any): void {}\r\n\r\n  buttonValidation(i: any): void {\r\n    if (\r\n      this.currentUserRole === USER_ROLES.ROLE_AD_SPECIALIST &&\r\n      this.s1Application.assignedScreener\r\n    ) {\r\n      this.buttonDisabled = false;\r\n    } else if (\r\n      this.currentUserRole === USER_ROLES.ROLE_SCREENER &&\r\n      this.s1Application.assignedReviewer\r\n    ) {\r\n      // if ((i || this.s1Application.assignedUser.userRole.name === USER_ROLES.ROLE_REVIEWER) &&\r\n      //   (i || this.s1Application.assignedUser || this.s1Application.decisionStatus)) {\r\n      this.buttonDisabled = false;\r\n      // }\r\n    }\r\n\r\n    this.dataStorage.setDecisionStatus(i);\r\n\r\n    if (\r\n      (i === \"INCOMPLETE\" || i === \"DISAPPROVED\") &&\r\n      this.currentUserRole === USER_ROLES.ROLE_SCREENER\r\n    ) {\r\n      if (\r\n        this.s1Application.internalStatus ===\r\n          APPLICATION_STATUS_FOR_COMPLIANCE.COMPLIANCE_DOCUMENT_VERIFIED_BY_AD_SPE ||\r\n        this.s1Application.internalStatus ===\r\n          APPLICATION_STATUS_REVISION.REVISION_VERIFIED_BY_AD_SPE\r\n      ) {\r\n        if (\r\n          this.s1Application.decisionStatus ===\r\n            APP_DECISION_STATUS.INCOMPLETE ||\r\n          this.s1Application.decisionStatus === APP_DECISION_STATUS.DISAPPROVED\r\n        ) {\r\n          this.s1Application.decisionStatus = i;\r\n          // if (this.rationaleLists.length === 0) {\r\n          this.incompleteDisapprovedModal(i);\r\n          // }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  selectApplicant(res) {\r\n    this.selectedApplicationOwner = res;\r\n    this.getPresentorDetails();\r\n  }\r\n\r\n  saveS1ApplicationByEncoder(data) {\r\n    this.spinner.show();\r\n    this.apiService\r\n      .save(ENDPOINTS.applicationFormEncoder + COMMON_FUNCTION.VERIFY, data)\r\n      .subscribe(\r\n        (res: any) => {\r\n          this.spinner.hide();\r\n          console.log(\"SAVED BY ENCODER : \", res.responseData.data);\r\n        },\r\n        (err: any) => {\r\n          this.spinner.hide();\r\n        }\r\n      );\r\n  }\r\n\r\n  rejectDisapprovedModal(): void {\r\n    const dialogRef = this.dialog.open(RejectDisapprovedReasonComponent, {\r\n      width: \"50%\",\r\n      height: \"65%\",\r\n      data: {\r\n        s1Application: this.s1Application,\r\n        applicationStage: \"s1\",\r\n      },\r\n    });\r\n  }\r\n\r\n  incompleteDisapprovedModal(decisionStatus): void {\r\n    const dialogRef = this.dialog.open(\r\n      IncompleteDisapprovedRationaleComponent,\r\n      {\r\n        width: \"50%\",\r\n        height: \"65%\",\r\n        data: {\r\n          s1Application: this.s1Application,\r\n          applicationStage: \"s1\",\r\n        },\r\n      }\r\n    );\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      this.getRationaleList();\r\n      if (\r\n        this.rationaleLists.length > 0 ||\r\n        this.rationaleOthersList.length > 0\r\n      ) {\r\n        this.s1Application.decisionStatus = decisionStatus;\r\n      }\r\n      if (result) {\r\n        this.buttonDisabled = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  navigateToS1List() {\r\n    // setTimeout(() => {\r\n    this.router.navigate([\"asc/page/application/s1/lists\"]);\r\n    // }, 2000);\r\n  }\r\n\r\n  openPerformanceMetrics() {\r\n    const dialogRef = this.dialog.open(PerformanceMetricsComponent, {\r\n      data: {\r\n        appFormReference: this.s1Application.appFormReference,\r\n        referenceCode: this.s1Application.referenceCode,\r\n      },\r\n    });\r\n    dialogRef.afterClosed().subscribe((result) => {});\r\n  }\r\n\r\n  viewReport(id, filename) {\r\n    if (filename === \"S1_Decision_Form\" || filename === \"Stamp_Material\") {\r\n      const downloadURL =\r\n        filename === \"S1_Decision_Form\"\r\n          ? this.s1Application?.decisionFormFileURL\r\n          : filename === \"Stamp_Material\"\r\n          ? this.s1Application?.stampMaterialFileURL\r\n          : \"\";\r\n      window.open(downloadURL);\r\n    } else {\r\n      this.report.filename = filename;\r\n      this.report.format = \"pdf\";\r\n      (this.report.module = \"Form\"),\r\n        (this.report.params = { applicationFormId: id });\r\n      console.log(this.report);\r\n      this.spinner.show();\r\n      this.apiService\r\n        .printReport(ENDPOINTS.generateReports, this.report)\r\n        .subscribe(\r\n          (data: any) => {\r\n            const newBlob = new Blob([data], { type: \"application/pdf\" });\r\n            const downloadURL = URL.createObjectURL(newBlob);\r\n            this.spinner.hide();\r\n            window.open(downloadURL);\r\n          },\r\n          (err: any) => {\r\n            this.spinner.hide();\r\n          }\r\n        );\r\n    }\r\n  }\r\n\r\n  getRationaleList(): void {\r\n    // Rationale Object\r\n    this.apiService\r\n      .findByParam(\r\n        ENDPOINTS.applicationRationale,\r\n        `application-form-id/${this.s1Application.id}`\r\n      )\r\n      .subscribe((res: any) => {\r\n        this.rationaleOthersList = res.responseData.data;\r\n      });\r\n    // Rationale List\r\n    this.apiService\r\n      .findByParam(\r\n        ENDPOINTS.rationaleList,\r\n        `application/${this.s1Application.id}`\r\n      )\r\n      .subscribe((res: any) => {\r\n        this.rationaleLists = res;\r\n      });\r\n    this.rationaleDisplay = true;\r\n  }\r\n\r\n  resubmitApplication(id = this.s1Application?.id) {\r\n    this.spinner.show();\r\n    let endpoint = this.hasMultimediaLengthChange\r\n      ? ENDPOINTS.modifyApprovedS1ApplicationFormMultimedia\r\n      : ENDPOINTS.modifyApprovedS1ApplicationFormSingleMedia;\r\n\r\n    endpoint += `=${id}`;\r\n\r\n    const newMedia = this.materialInformation.newMultimediaList[0];\r\n\r\n    const obj = this.hasMultimediaLengthChange\r\n      ? {\r\n          appFormReference: this.s1Application.appFormReference,\r\n          typeOfMedium: newMedia,\r\n          mediaType: \"STATIC\",\r\n          multimediaSizeLength: newMedia.sizeLength,\r\n          amount: 0,\r\n        }\r\n      : this.applicationSingleMedia;\r\n\r\n    this.apiService.save(endpoint, obj).subscribe(\r\n      (res) => {\r\n        this.spinner.hide();\r\n\r\n        if (\r\n          this.s1Application.refTypeOfMedium === TYPE_OF_MEDIUM.SINGLE_MEDIA\r\n        ) {\r\n          this.saveUpdateApplicationSingleMedia(null, null, null);\r\n        } else {\r\n          this.saveUpdateMultimedia(null, null, null);\r\n        }\r\n        this.sweetAlertService.success(res);\r\n\r\n        if (this.s1Application.multipleApplication) {\r\n          this.router.navigate([\"asc/page/application/s1/multiple\"]);\r\n        } else {\r\n          this.navigateToS1List();\r\n        }\r\n      },\r\n      (err: any) => {\r\n        this.spinner.hide();\r\n      }\r\n    );\r\n  }\r\n\r\n  clearDecisionStatus(): void {\r\n    this.s1Application.decisionStatus = \"\";\r\n  }\r\n\r\n  checkSingleMediaChanges() {\r\n    this.applicationSingleMedia = this.materialInformation?.applicationSingleMedia;\r\n    this.disableSubmitButtonByMedia = this.materialInformation?.disableSubmitButtonByMedia;\r\n    this.hasMultimediaLengthToEnableSubmit = true;\r\n  }\r\n\r\n  checkMultimediaChanges() {\r\n    // this.hasMultimediaLengthToEnableSubmit = this.multimediaMovingList.length ? true : false;\r\n    this.disableSubmitButtonByMedia = false;\r\n    this.hasMultimediaLengthToEnableSubmit =\r\n      this.materialInformation?.newMultimediaList.length ||\r\n      this.multimediaMovingList.length ||\r\n      this.multimediaStaticList.length\r\n        ? true\r\n        : false;\r\n\r\n    const multimediaListChanges = this.materialInformation?.newMultimediaList?.map(\r\n      (mappedMultimedia) => ({\r\n        multimediaSizeLength: mappedMultimedia?.sizeLength,\r\n        typeOfMedium: mappedMultimedia?.description,\r\n      })\r\n    );\r\n\r\n    const hasSizeLengthChange = this.currentSizeLengthMultimedia\r\n      .map((media) => ({\r\n        multimediaSizeLength: media.multimediaSizeLength,\r\n        typeOfMedium: media.typeOfMedium,\r\n        multimediaSizeLengthNew: multimediaListChanges?.filter(\r\n          (filteredMedia) => filteredMedia.typeOfMedium === media.typeOfMedium\r\n        )[0]?.multimediaSizeLength,\r\n      }))\r\n      .filter(\r\n        (filteredRes) =>\r\n          +filteredRes.multimediaSizeLength !==\r\n            +filteredRes.multimediaSizeLengthNew &&\r\n          filteredRes.multimediaSizeLengthNew\r\n      );\r\n\r\n    const hasNewMultimediaType = multimediaListChanges\r\n      ?.map((multimedia) =>\r\n        this.currentSizeLengthMultimedia.some(\r\n          (currMedia) => currMedia.typeOfMedium === multimedia.typeOfMedium\r\n        )\r\n      )\r\n      .includes(false);\r\n\r\n    this.hasMultimediaLengthChange =\r\n      hasNewMultimediaType || hasSizeLengthChange.length ? true : false;\r\n  }\r\n\r\n  checkEmittedMultimedia(multimediaDTO): void {\r\n    this.multimediaDTO = multimediaDTO.data;\r\n\r\n    switch (multimediaDTO.type) {\r\n      case TYPE_OF_MEDIUM.MULTIMEDIA_MOVING:\r\n        if (multimediaDTO.data) {\r\n          this.hasMultimediaLengthToEnableSubmit =\r\n            multimediaDTO.data.sizeLength > 0 ? true : false;\r\n          this.disableSubmitButtonByMedia = multimediaDTO.data.applicationMultimediaMovingList.filter(\r\n            (medium: ApplicationMultimediaItemsDTO) =>\r\n              medium.hasSelected === true\r\n          )\r\n            ? false\r\n            : true;\r\n        }\r\n        break;\r\n      case TYPE_OF_MEDIUM.MULTIMEDIA_STATIC:\r\n        if (multimediaDTO.data) {\r\n          this.disableSubmitButtonByMedia = multimediaDTO.data.applicationMultimediaStaticList.filter(\r\n            (medium: ApplicationMultimediaItemsDTO) =>\r\n              medium.hasSelected === true\r\n          )\r\n            ? false\r\n            : true;\r\n\r\n          this.hasMultimediaLengthToEnableSubmit = multimediaDTO.data.applicationMultimediaStaticList.filter(\r\n            (medium: ApplicationMultimediaItemsDTO) =>\r\n              medium.multimediaStaticMedium === \"digital static\" ||\r\n              (medium.hasSelected === true && medium.sizeLength)\r\n          )\r\n            ? true\r\n            : false;\r\n        }\r\n        break;\r\n    }\r\n  }\r\n\r\n  fetchMultimedia(): void {\r\n    console.log(\"S1 APPP::: \", this.s1Application);\r\n    let typeofMedium =\r\n      this.s1Application.refTypeOfMedium === TYPE_OF_MEDIUM.MULTIMEDIA_MOVING\r\n        ? \"moving\"\r\n        : \"static\";\r\n    let endpoint =\r\n      ENDPOINTS.applicationMultimedia +\r\n      \"-\" +\r\n      typeofMedium +\r\n      \"/app-form-reference\";\r\n    this.apiService\r\n      .findByParam(endpoint, this.s1Application.appFormReference)\r\n      .subscribe((multimedia) => {\r\n        console.log(\"Multimedia Response: \", multimedia.responseData.data);\r\n        if (multimedia) this.multimediaDTO = multimedia.responseData.data;\r\n      });\r\n  }\r\n\r\n  submitAppeal() {\r\n    let endpoint;\r\n    if (this.isAdmin) {\r\n      endpoint = ENDPOINTS.admin + `/s1/verify/appeal`;\r\n    } else if (this.isAdSpecialist) {\r\n      endpoint = ENDPOINTS.applicationFormAdSpecialist + `verify/appeal`;\r\n    }\r\n\r\n    this.spinner.show();\r\n    this.apiService.save(endpoint, this.s1Application).subscribe(\r\n      (res: any) => {\r\n        this.spinner.hide();\r\n        this.sweetAlertService.success(res);\r\n        console.log(\"submitAppeal : \", res.responseData.data);\r\n        this.navigateToS1List();\r\n      },\r\n      (err: any) => {\r\n        this.spinner.hide();\r\n      }\r\n    );\r\n  }\r\n\r\n  sendDecisionOrStampMaterialManual(): void {\r\n    Swal.fire({\r\n      text: \"Are you sure you want to send this application form?\",\r\n      icon: \"question\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Confirm\",\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.apiService\r\n          .save(\r\n            ENDPOINTS.s1ManualRelease + `/${this.s1Application.id}`,\r\n            this.s1Application\r\n          )\r\n          .subscribe((res: any) => {\r\n            this.sweetAlertService.customSuccessMessage(res.message);\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  checkCutOffTime(): boolean {\r\n    let regex = new RegExp(\":\", \"g\");\r\n    let startTime = \"11:00:00\";\r\n    let endTime = \"23:59:59\";\r\n    let currentTime = String(\r\n      new Date().getHours() +\r\n        \":\" +\r\n        new Date().getMinutes() +\r\n        \":\" +\r\n        new Date().getSeconds()\r\n    );\r\n\r\n    if (\r\n      parseInt(currentTime.replace(regex, \"\")) >=\r\n        parseInt(startTime.replace(regex, \"\")) &&\r\n      parseInt(currentTime.replace(regex, \"\")) <=\r\n        parseInt(endTime.replace(regex, \"\"))\r\n    ) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  checkMaterialFieldErrors(): boolean {\r\n    return (\r\n      (!this.s1Application?.adTitle ||\r\n        !this.s1Application?.refTypeOfMedium ||\r\n        !this.hasMultimediaLengthToEnableSubmit ||\r\n        this.disableSubmitButtonByMedia) &&\r\n      !this.s1Application.typeOfMedium\r\n    );\r\n  }\r\n\r\n  private getAllActiveHolidays() {\r\n    this.apiService.findAll(ENDPOINTS.holidays).subscribe((res: any) => {\r\n      activeHolidayDates = res.responseData.data\r\n        .filter(\r\n          (holidayDate) =>\r\n            holidayDate.status === \"ACTIVE\" &&\r\n            holidayDate.holidayType !== \"WEEKEND\"\r\n        )\r\n        .map((holidayDate) => new Date(holidayDate.holidayDate));\r\n    });\r\n  }\r\n\r\n  private getAllActiveWeekends() {\r\n    this.apiService.findAll(ENDPOINTS.holidays).subscribe((res: any) => {\r\n      activeWeekendDates = res.responseData.data\r\n        .filter(\r\n          (holidayDate) =>\r\n            holidayDate.status === \"ACTIVE\" &&\r\n            holidayDate.holidayType === \"WEEKEND\"\r\n        )\r\n        .map((holidayDate) => new Date(holidayDate.holidayDate));\r\n    });\r\n  }\r\n\r\n  isSaveAndRequestForApprovalDisabled(): boolean {\r\n    return (\r\n      !this.s1Application?.brand ||\r\n      !this.s1Application?.company ||\r\n      !this.s1Application?.adTitle ||\r\n      this.s1Application?.brand?.penalty ||\r\n      !this.s1Application?.product ||\r\n      this.s1Application?.company?.delinquent ||\r\n      this.isInactiveAffiliation ||\r\n      this.s1Application?.company?.status === \"INACTIVE\" ||\r\n      !this.s1Application.submissionDate\r\n    );\r\n  }\r\n\r\n  isSingleRegularDisabled(): boolean {\r\n    if (\r\n      this.s1Application?.applicationType?.description ===\r\n        \"Special Screening\" ||\r\n      this.s1Application?.applicationType?.description ===\r\n        \"Special Screening and Clearing\"\r\n    ) {\r\n      return this.isSaveAndRequestForApprovalDisabled();\r\n    }\r\n\r\n    return (\r\n      (!this.s1Application?.brand ||\r\n        !this.s1Application?.company ||\r\n        !this.s1Application?.adTitle ||\r\n        !this.s1Application?.refTypeOfMedium ||\r\n        !this.s1Application?.mainAttachmentReference ||\r\n        !this.s1Application?.refTypeOfMedium ||\r\n        (!this.s1Application?.hasNoSupportingDocs &&\r\n          !this.s1Application?.supportingAttachmentReference) ||\r\n        this.s1Application?.brand?.penalty ||\r\n        !this.s1Application?.product ||\r\n        this.s1Application?.company?.delinquent ||\r\n        this.isInactiveAffiliation ||\r\n        this.s1Application?.company?.status === \"INACTIVE\" ||\r\n        this.disableSubmitButtonByMedia ||\r\n        !this.hasMultimediaLengthToEnableSubmit) &&\r\n      !this.s1Application.typeOfMedium\r\n    );\r\n  }\r\n\r\n  isMultipleRegularDisabled(): boolean {\r\n    return (\r\n      !this.s1Application?.brand ||\r\n      !this.s1Application?.company ||\r\n      !this.s1Application?.adTitle ||\r\n      !this.s1Application?.refTypeOfMedium ||\r\n      this.s1Application?.brand?.penalty ||\r\n      !this.s1Application?.product ||\r\n      this.s1Application?.company?.delinquent ||\r\n      this.isInactiveAffiliation ||\r\n      this.s1Application?.company?.status === \"INACTIVE\" ||\r\n      !this.s1Application.submissionDate\r\n    );\r\n  }\r\n}\r\n","<form>\r\n  <div class=\"container-fluid\">\r\n    <!-- <div class=\"spinner\">\r\n      <ngx-spinner bdColor=\"rgba(0, 0, 0, 0.8)\" size=\"large\" color=\"#fff\" type=\"line-spin-fade\" [fullScreen]=\"false\">\r\n        <p *ngIf=\"s1Application.brand != undefined\"> Loading <b>{{s1Application.referenceCode}}</b> S1 Application. </p>\r\n        <p *ngIf=\"s1Application.brand === undefined && company.companyName === undefined\"> Creating new S1\r\n          Application... </p>\r\n      </ngx-spinner>\r\n    </div> -->\r\n    <div class=\"row title\">\r\n      <div class=\"col-md-12\">\r\n        <mat-label\r\n          *ngIf=\"\r\n            isApplicant &&\r\n            (s1Application?.externalStatus == undefined ||\r\n              s1Application?.externalStatus == 'SAVED' ||\r\n              s1Application?.externalStatus == 'S1_APPLICATION_SUBMITTED')\r\n          \"\r\n        >\r\n          <i class=\"material-icons\">note_add</i> NEW S1 APPLICATION <br /><br />\r\n        </mat-label>\r\n\r\n        <mat-label\r\n          [hidden]=\"\r\n            s1Application?.applicationType.description ===\r\n              'Special Screening' ||\r\n            s1Application?.applicationType.description === 'Special Clearing' ||\r\n            s1Application?.applicationType.description ===\r\n              'Special Screening and Clearing'\r\n          \"\r\n          *ngIf=\"\r\n            specialApplicationType.includes(\r\n              s1Application?.applicationType?.description?.toUpperCase()\r\n            ) &&\r\n            !applicationRequest?.status &&\r\n            s1Application.applicationRequest == null &&\r\n            s1Application?.formType !== 'MULTIPLE'\r\n          \"\r\n        >\r\n          <i class=\"material-icons\">note_add</i> REQUEST FOR APPROVAL\r\n        </mat-label>\r\n\r\n        <table>\r\n          <tr>\r\n            <td\r\n              *ngIf=\"\r\n                s1Application?.referenceCode ||\r\n                s1Application?.referenceCodeRejected\r\n              \"\r\n            >\r\n              <span> Reference Code: </span>\r\n            </td>\r\n            <td\r\n              *ngIf=\"\r\n                s1Application?.referenceCode ||\r\n                s1Application?.referenceCodeRejected\r\n              \"\r\n            >\r\n              <span>\r\n                <b>{{\r\n                  s1Application?.externalStatus == \"S1_APPLICATION_REJECTED\"\r\n                    ? s1Application?.referenceCodeRejected\r\n                    : (s1Application?.referenceCode | uppercase)\r\n                }}</b>\r\n                <!-- <b *ngIf=\"s1Application?.revisionNo>0\"> (Revision Number {{s1Application?.revisionNo}})</b> -->\r\n              </span>\r\n            </td>\r\n            <td class=\"no-border\"></td>\r\n            <td class=\"no-border\"></td>\r\n            <td class=\"no-border\"></td>\r\n            <td class=\"no-border\">\r\n              <button\r\n                class=\"button-right button-red\"\r\n                mat-raised-button\r\n                [routerLink]=\"['/asc/page/application/s1/lists']\"\r\n              >\r\n                <i class=\"material-icons color__white\">list</i> VIEW\r\n                APPLICATIONS\r\n              </button>\r\n              <!-- <button class=\"button-right button-red\" mat-raised-button *ngIf=\"s1Application?.formType==='MULTIPLE'\"\r\n              [routerLink]=\"['/asc/page/application/s1/multiple']\">\r\n              <i class=\"material-icons color__white\">list</i> VIEW APPLICATIONS\r\n            </button> -->\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td class=\"no-border\"></td>\r\n          </tr>\r\n          <tr>\r\n            <td\r\n              *ngIf=\"\r\n                (s1Application?.externalStatus != undefined && !isAscUser) ||\r\n                isAscUser\r\n              \"\r\n            >\r\n              <span> Status: </span>\r\n            </td>\r\n            <td\r\n              *ngIf=\"\r\n                (s1Application?.externalStatus != undefined && !isAscUser) ||\r\n                isAscUser\r\n              \"\r\n            >\r\n              <span\r\n                *ngIf=\"s1Application?.externalStatus != undefined && !isAscUser\"\r\n              >\r\n                <b>{{\r\n                  s1Application?.externalStatus?.replaceAll(\"_\", \" \")\r\n                    | uppercase\r\n                }}</b>\r\n              </span>\r\n              <span *ngIf=\"isAscUser\">\r\n                <b>{{\r\n                  s1Application?.internalStatus?.replaceAll(\"_\", \" \")\r\n                    | uppercase\r\n                }}</b>\r\n              </span>\r\n            </td>\r\n            <td class=\"no-border\"></td>\r\n            <td class=\"no-border\"></td>\r\n            <td\r\n              *ngIf=\"\r\n                s1Application?.decisionStatus != undefined &&\r\n                s1Application?.internalStatus == 'S1_APPLICATION_REVIEWED'\r\n              \"\r\n            >\r\n              <span> Decision: </span>\r\n            </td>\r\n            <td\r\n              *ngIf=\"\r\n                s1Application?.decisionStatus != undefined &&\r\n                s1Application?.internalStatus == 'S1_APPLICATION_REVIEWED'\r\n              \"\r\n            >\r\n              <span>\r\n                <b>{{ s1Application?.decisionStatus | uppercase }}</b>\r\n              </span>\r\n            </td>\r\n          </tr>\r\n        </table>\r\n        <hr />\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n      <div class=\"col-md-6\">\r\n        <h3\r\n          *ngIf=\"\r\n            s1Application?.submissionDate &&\r\n            applicationRequest?.status !== 'DISAPPROVED'\r\n          \"\r\n        >\r\n          <b class=\"submission-date\"\r\n            >Submission Date:\r\n            {{ s1Application?.submissionDate | date: \"MMMM d, yyyy\" }}</b\r\n          >\r\n        </h3>\r\n        <h3\r\n          *ngIf=\"\r\n            s1Application?.submissionDate &&\r\n            applicationRequest?.status === 'DISAPPROVED'\r\n          \"\r\n        >\r\n          <b class=\"submission-date\"\r\n            >Submission Date: N/A - Request was disapproved</b\r\n          >\r\n        </h3>\r\n      </div>\r\n\r\n      <div\r\n        class=\"col-md-6\"\r\n        *ngIf=\"\r\n          s1Application?.amount && s1Application?.submissionType === 'ORIGINAL'\r\n        \"\r\n      >\r\n        <span class=\"badge bg-warning text-dark button-right\">\r\n          {{ s1Application?.paymentStatus?.replaceAll(\"_\", \" \") }} : ₱\r\n          {{ s1Application?.amount | number: \"1.2-2\" }}\r\n        </span>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"row\" [formGroup]=\"s1ApplicationForm\">\r\n      <mat-form-field\r\n        class=\"col-md-4\"\r\n        appearance=\"outline\"\r\n        [hidden]=\"s1Application?.formType !== 'MULTIPLE'\"\r\n      >\r\n        <mat-label>Form Type</mat-label>\r\n        <mat-select\r\n          [(ngModel)]=\"s1Application.formType\"\r\n          [compareWith]=\"compareFormType\"\r\n          name=\"formType\"\r\n          formControlName=\"formType\"\r\n          disabled\r\n        >\r\n          <mat-option\r\n            *ngFor=\"let i of formTypeList\"\r\n            [value]=\"i\"\r\n            (click)=\"getApplicationTypeList(i.description)\"\r\n          >\r\n            {{ i?.description | uppercase }}\r\n            <span\r\n              *ngIf=\"\r\n                s1Application?.multipleApplication &&\r\n                s1Application?.multipleApplication?.submissionStatus !==\r\n                  'PROCESSED'\r\n              \"\r\n              >({{ s1Application?.sequenceOrder }}\r\n              of\r\n              {{\r\n                s1Application?.multipleApplication?.numberOfApplication\r\n              }})</span\r\n            >\r\n            <span\r\n              *ngIf=\"\r\n                s1Application?.multipleApplication?.submissionStatus ===\r\n                'PROCESSED'\r\n              \"\r\n            >\r\n              (Sequence Number: {{ s1Application?.sequenceOrder }})</span\r\n            >\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field class=\"col-md-4\" appearance=\"outline\">\r\n        <mat-label>Application Type</mat-label>\r\n        <mat-select\r\n          [(ngModel)]=\"s1Application.applicationType\"\r\n          [compareWith]=\"compareApplicationType\"\r\n          name=\"applicationType\"\r\n          formControlName=\"applicationType\"\r\n          disabled\r\n        >\r\n          <!-- [disabled]=\"s1Application?.internalStatus!='SAVED'&&s1Application?.internalStatus!=undefined\" -->\r\n          <mat-option\r\n            *ngFor=\"let i of applicationTypeList\"\r\n            [value]=\"i\"\r\n            (click)=\"setAppType(i)\"\r\n          >\r\n            {{ i?.description | uppercase }}\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n      <mat-form-field\r\n        class=\"col-md-4\"\r\n        appearance=\"outline\"\r\n        *ngIf=\"s1Application?.submissionType\"\r\n      >\r\n        <mat-label>Submission Type</mat-label>\r\n        <input matInput [value]=\"s1Application?.submissionType\" readonly />\r\n      </mat-form-field>\r\n      <mat-form-field\r\n        class=\"col-md-4\"\r\n        appearance=\"outline\"\r\n        *ngIf=\"s1Application.formType === 'FOR_PRESENTATION'\"\r\n      >\r\n        <mat-label>Form Type</mat-label>\r\n        <input matInput value=\"FOR PRESENTATION\" readonly />\r\n      </mat-form-field>\r\n    </div>\r\n    <hr />\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12\">\r\n        <button\r\n          mat-raised-button\r\n          class=\"button-right button-red\"\r\n          *ngIf=\"\r\n            s1Application?.submissionType === 'ORIGINAL' &&\r\n            s1Application?.internalStatus === 's1 Reviewed'\r\n          \"\r\n          (click)=\"viewReport(s1Application.id, 'S1_Application_Form')\"\r\n        >\r\n          <i class=\"material-icons color__white\">open_in_new</i> VIEW\r\n          APPLICATION REPORT\r\n        </button>\r\n\r\n        <button\r\n          mat-raised-button\r\n          class=\"button-right button-red\"\r\n          (click)=\"openPerformanceMetrics()\"\r\n          *ngIf=\"\r\n            (currentUser?.userRole.name === 'ROLE_ADMIN' ||\r\n              currentUser?.userRole.name === 'ROLE_SUPER_ADMIN') &&\r\n            s1Application?.id\r\n          \"\r\n        >\r\n          <i class=\"material-icons color__white\">trending_up</i> VIEW\r\n          APPLICATION HISTORY\r\n        </button>\r\n\r\n        <!-- <button mat-raised-button class=\"button-right button-red\" *ngIf=\"(currentUser?.userRole.name === 'ROLE_SUPER_ADMIN' || currentUser?.userRole.name === 'ROLE_ADMIN' || currentUser?.userRole.name === 'ROLE_AD_SPECIALIST')\r\n        && (s1Application?.releaseStatus === 'FOR_RELEASE' || s1Application?.releaseStatus === 'RELEASED') && s1Application?.paymentStatus === 'PAID'\"\r\n          (click)=\"viewReport(s1Application.id,'S1_Decision_Form')\"><i\r\n            class=\"material-icons color__white\">open_in_new</i> DECISION FORM</button> -->\r\n\r\n        <!-- <button mat-raised-button class=\"button-right button-red\" *ngIf=\"(currentUser?.userRole.name === 'ROLE_SUPER_ADMIN' || currentUser?.userRole.name === 'ROLE_ADMIN' || currentUser?.userRole.name === 'ROLE_AD_SPECIALIST')\r\n        && (s1Application?.releaseStatus === 'FOR_RELEASE' || s1Application?.releaseStatus === 'RELEASED') && s1Application?.paymentStatus === 'PAID'\"\r\n          (click)=\"viewReport(s1Application.id,'Stamp_Material')\"><i class=\"material-icons color__white\">open_in_new</i>\r\n          STAMPED MATERIAL</button> -->\r\n\r\n        <button\r\n          mat-raised-button\r\n          class=\"button-right button-red\"\r\n          *ngIf=\"\r\n            s1Application?.submissionType === 'revision' &&\r\n            s1Application?.internalStatus === 'revision screened'\r\n          \"\r\n          (click)=\"viewReport(s1Application.id, 'Revision_Form')\"\r\n        >\r\n          <i class=\"material-icons color__white\">open_in_new</i> REVISION FORM\r\n        </button>\r\n\r\n        <button\r\n          mat-raised-button\r\n          class=\"button-right button-red\"\r\n          *ngIf=\"\r\n            (currentUser?.userRole.name === 'ROLE_ADMIN' ||\r\n              currentUser?.userRole.name === 'ROLE_SUPER_ADMIN' ||\r\n              currentUser?.userRole.name === 'ROLE_AD_SPECIALIST') &&\r\n            s1Application?.submissionType === 'COMPLIANCE' &&\r\n            s1Application?.decisionStatus === 'INCOMPLETE' &&\r\n            s1Application?.internalStatus ===\r\n              'COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER'\r\n          \"\r\n          (click)=\"viewReport(s1Application.id, 'S1_Pending_Form')\"\r\n        >\r\n          <i class=\"material-icons color__white\">open_in_new</i> PENDING FORM\r\n        </button>\r\n\r\n        <button\r\n          mat-raised-button\r\n          class=\"button-right button-red\"\r\n          *ngIf=\"\r\n            (currentUser?.userRole.name === 'ROLE_SUPER_ADMIN' ||\r\n              currentUser?.userRole.name === 'ROLE_ADMIN') &&\r\n            (s1Application?.releaseStatus === 'FOR_RELEASE' ||\r\n              s1Application?.releaseStatus === 'RELEASED') &&\r\n            s1Application?.paymentStatus === 'PAID'\r\n          \"\r\n          (click)=\"sendDecisionOrStampMaterialManual()\"\r\n        >\r\n          <i class=\"material-icons color__white\">send</i> SEND DECISION OR\r\n          STAMPED MATERIAL\r\n        </button>\r\n      </div>\r\n\r\n      <!--   <div class=\"col-md-1\">\r\n        <button mat-raised-button class=\"button-right button-red\" (click)=\"viewReport(s1Application.id)\">Pending Form</button>\r\n      </div> -->\r\n    </div>\r\n    <br />\r\n    <div class=\"row\">\r\n      <mat-accordion class=\"headers-align\" multi>\r\n        <mat-expansion-panel\r\n          [expanded]=\"\r\n            ((isApplicant && s1Application?.internalStatus != 'SAVED') ||\r\n              s1Application?.internalStatus == undefined) &&\r\n            !accordionExpanded\r\n          \"\r\n          *ngIf=\"\r\n            (isApplicant && s1Application?.internalStatus == 'SAVED') ||\r\n            !isApplicant ||\r\n            s1Application?.internalStatus == undefined\r\n          \"\r\n        >\r\n          <mat-expansion-panel-header (click)=\"accordionDisablingFunction()\">\r\n            <mat-panel-title>\r\n              <i class=\"material-icons\">label_important</i> &nbsp;Client\r\n              Information\r\n              <i class=\"material-icons error\" *ngIf=\"hasErrorsClient\">error</i>\r\n            </mat-panel-title>\r\n            <mat-panel-description>\r\n              Affiliation and Company details\r\n              <i class=\"material-icons\">perm_contact_calendar</i>\r\n            </mat-panel-description>\r\n          </mat-expansion-panel-header>\r\n          <br />\r\n\r\n          <app-client-information\r\n            [s1Application]=\"s1Application\"\r\n            [isAscUser]=\"isAscUser\"\r\n            (checkInactiveAffiliation)=\"checkInactiveAffiliation()\"\r\n            [isDisableFieldOnUpdate]=\"isDisableFieldOnUpdate\"\r\n            [company]=\"company\"\r\n            (hasErrorFields)=\"hasErrorsClient = $event\"\r\n          ></app-client-information>\r\n          <div *ngIf=\"!isDisableFieldOnUpdate\" class=\"required-fields-note\">\r\n            Note: Fields with * are required\r\n          </div>\r\n          <mat-action-row *ngIf=\"isApplicant\">\r\n            <p *ngIf=\"validationMessage\">\r\n              <span class=\"badge bg-warning text-dark\"\r\n                ><i class=\"material-icons\">warning</i\r\n                >{{ validationMessage }}</span\r\n              >\r\n            </p>\r\n            <button\r\n              mat-raised-button\r\n              color=\"warn\"\r\n              (click)=\"accordionDisablingFunction()\"\r\n            >\r\n              Next\r\n            </button>\r\n          </mat-action-row>\r\n\r\n          <!-- <button mat-raised-button color=\"primary\" (click)=\"accordionDisablingFunction()\" [disabled]=\"!company?.companyName && !s1Application.brand\">Next</button> -->\r\n        </mat-expansion-panel>\r\n\r\n        <!-- FOR ASC Users only -->\r\n        <mat-expansion-panel *ngIf=\"!isApplicant\">\r\n          <mat-expansion-panel-header>\r\n            <mat-panel-title>\r\n              <i class=\"material-icons\">label_important</i> &nbsp;Presentor\r\n              Information\r\n            </mat-panel-title>\r\n            <mat-panel-description>\r\n              Personal Details\r\n              <i class=\"material-icons\">person</i>\r\n            </mat-panel-description>\r\n          </mat-expansion-panel-header>\r\n\r\n          <br />\r\n          <div class=\"row\">\r\n            <div class=\"row\"><br /></div>\r\n\r\n            <div class=\"row\">\r\n              <mat-form-field\r\n                class=\"col-md-4\"\r\n                appearance=\"outline\"\r\n                *ngIf=\"\r\n                  isEvaluator && s1Application?.externalStatus === undefined\r\n                \"\r\n              >\r\n                <mat-label\r\n                  >Assign an Applicant<span class=\"required-field\">\r\n                    <mat-icon>notification_important</mat-icon>\r\n                  </span></mat-label\r\n                >\r\n\r\n                <mat-select\r\n                  [(ngModel)]=\"s1Application.applicationOwner\"\r\n                  name=\"s1Application.applicationOwner\"\r\n                >\r\n                  <mat-option\r\n                    *ngFor=\"let i of applicantList\"\r\n                    [value]=\"i\"\r\n                    (click)=\"selectApplicant(i)\"\r\n                  >\r\n                    {{ i.firstName }} {{ i.lastName }}\r\n                  </mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n\r\n              <mat-form-field\r\n                class=\"col-md-8\"\r\n                appearance=\"outline\"\r\n                *ngIf=\"presentorDetails.id != null\"\r\n              >\r\n                <mat-label>Name of Applicant</mat-label>\r\n                <input\r\n                  matInput\r\n                  [value]=\"\r\n                    presentorDetails?.firstName +\r\n                    ' ' +\r\n                    presentorDetails?.lastName\r\n                  \"\r\n                  readonly\r\n                />\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"row\">\r\n              <mat-form-field class=\"col-md-7\" appearance=\"outline\">\r\n                <mat-label>Company Name</mat-label>\r\n                <input\r\n                  matInput\r\n                  [value]=\"presentorDetails?.company?.companyName\"\r\n                  readonly\r\n                />\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"row\"><br /></div>\r\n\r\n            <div class=\"row\">\r\n              <mat-form-field class=\"col-md-11\" appearance=\"outline\">\r\n                <mat-label>Address</mat-label>\r\n                <input\r\n                  matInput\r\n                  [value]=\"presentorDetails?.company?.completeAddress\"\r\n                  readonly\r\n                />\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"row\"><br /></div>\r\n\r\n            <div class=\"row\" *ngIf=\"presentorDetails.id != null\">\r\n              <mat-form-field class=\"col-md-5\" appearance=\"outline\">\r\n                <mat-label>Mobile Number</mat-label>\r\n                <input\r\n                  matInput\r\n                  [value]=\"presentorDetails?.mobileNumber\"\r\n                  readonly\r\n                />\r\n              </mat-form-field>\r\n              <mat-form-field class=\"col-md-5\" appearance=\"outline\">\r\n                <mat-label>Email Address</mat-label>\r\n                <input matInput [value]=\"presentorDetails?.username\" readonly />\r\n              </mat-form-field>\r\n              <mat-form-field class=\"col-md-5\" appearance=\"outline\">\r\n                <mat-label>Telephone Number</mat-label>\r\n                <input\r\n                  matInput\r\n                  [value]=\"presentorDetails?.company?.companyTelephoneNo\"\r\n                  readonly\r\n                />\r\n              </mat-form-field>\r\n              <mat-form-field class=\"col-md-5\" appearance=\"outline\">\r\n                <mat-label>Alternate Telephone Number</mat-label>\r\n                <input\r\n                  matInput\r\n                  [value]=\"presentorDetails?.company?.companyTelephoneNo2\"\r\n                  readonly\r\n                />\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n        </mat-expansion-panel>\r\n\r\n        <mat-expansion-panel\r\n          *ngIf=\"\r\n            (isApplicant && s1Application?.internalStatus == 'SAVED') ||\r\n            !isApplicant ||\r\n            s1Application?.internalStatus == undefined ||\r\n            ((s1Application?.internalStatus == 'S1_APPLICATION_REVIEWED' ||\r\n              s1Application?.internalStatus ==\r\n                'COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER' ||\r\n              s1Application?.internalStatus == 'REVISION_SCREENED' ||\r\n              s1Application?.internalStatus == 'S1_APPLICATION_REJECTED') &&\r\n              (s1Application?.decisionStatus == 'APPROVED' ||\r\n                s1Application?.decisionStatus == 'APPROVED W/ CAUTION' ||\r\n                s1Application?.decisionStatus == 'INCOMPLETE') &&\r\n              s1Application?.revisionNo < 2 &&\r\n              !s1Application?.appliedS2)\r\n          \"\r\n          [disabled]=\"accordionDisable\"\r\n          [hidden]=\"\r\n            (s1Application?.hasOngoingRevision ||\r\n              s1Application?.hasOngoingCompliance) &&\r\n            isApplicant\r\n          \"\r\n          [expanded]=\"accordionExpanded || isAdSpecialist\"\r\n        >\r\n          <!-- s1Application?.membersAffiliation && s1Application?.company && s1Application?.brand -->\r\n          <mat-expansion-panel-header (click)=\"accordionDisablingFunction()\">\r\n            <mat-panel-title>\r\n              <i class=\"material-icons\">label_important</i> &nbsp;Material\r\n              Information\r\n              <i class=\"material-icons error\" *ngIf=\"checkMaterialFieldErrors()\"\r\n                >error</i\r\n              >\r\n            </mat-panel-title>\r\n            <mat-panel-description>\r\n              Ads Details\r\n              <i class=\"material-icons\">ads_click</i>\r\n            </mat-panel-description>\r\n          </mat-expansion-panel-header>\r\n          <br />\r\n\r\n          <app-material-information\r\n            [s1Application]=\"s1Application\"\r\n            [isAscUser]=\"isAscUser\"\r\n            [multimediaDTO]=\"multimediaDTO\"\r\n            [applicationSingleMedia]=\"applicationSingleMedia\"\r\n            [originalAttachmentDocuments]=\"originalAttachmentDocuments\"\r\n            [revisionAttachmentDocuments]=\"revisionAttachmentDocuments\"\r\n            [(complianceAttachmentDocuments)]=\"complianceAttachmentDocuments\"\r\n            [isDisableFieldOnUpdate]=\"isDisableFieldOnUpdate\"\r\n            [supportiveDocumentList]=\"supportiveDocumentList\"\r\n            (checkSingleMediaChangesFunction)=\"checkSingleMediaChanges()\"\r\n            (checkMultimediaChangesFunction)=\"checkEmittedMultimedia($event)\"\r\n            [toDeleteMultimediaList]=\"toDeleteMultimediaList\"\r\n            [savedTypeOfMedium]=\"s1Application?.typeOfMedium\"\r\n            (hasErrorFields)=\"hasErrorsMaterial = $event\"\r\n          >\r\n          </app-material-information>\r\n          <div *ngIf=\"!isDisableFieldOnUpdate\" class=\"required-fields-note\">\r\n            Note: Fields with * are required\r\n          </div>\r\n          <!-- <mat-action-row>\r\n            <button mat-button color=\"primary\" (click)=\"accordionDisablingFunction()\">Next</button>\r\n          </mat-action-row> -->\r\n        </mat-expansion-panel>\r\n\r\n        <!-- PREVIEW FOR APPLICANT ONCE SUBMITTED -->\r\n        <mat-expansion-panel\r\n          *ngIf=\"isApplicant && s1Application?.internalStatus != undefined\"\r\n          [expanded]=\"\r\n            isApplicant &&\r\n            (s1Application?.externalStatus == 'S1_APPLICATION_SUBMITTED' ||\r\n              s1Application?.externalStatus == 'S1_APPLICATION_IN_PROCESS' ||\r\n              s1Application?.externalStatus ==\r\n                'SUBMITTED_DOCUMENT_FOR_COMPLIANCE' ||\r\n              s1Application?.externalStatus ==\r\n                'COMPLIANCE_DOCUMENT_FOR_REVIEW' ||\r\n              s1Application?.externalStatus == 'REVISION_REVIEW_IN_PROCESS' ||\r\n              s1Application?.externalStatus == 'SUBMITTED_REVISION' ||\r\n              s1Application?.externalStatus == 'S1_APPLICATION_CANCELLED' ||\r\n              s1Application?.externalStatus == 'S1_APPLICATION_REJECTED' ||\r\n              s1Application?.internalStatus == 'REVISION_SCREENED' ||\r\n              s1Application?.hasRevision ||\r\n              s1Application?.appliedS2)\r\n          \"\r\n        >\r\n          <mat-expansion-panel-header>\r\n            <mat-panel-title>\r\n              <i class=\"material-icons\">label_important</i> &nbsp;Preview\r\n            </mat-panel-title>\r\n            <mat-panel-description>\r\n              S1 Application\r\n              <i class=\"material-icons\">visibility</i>\r\n            </mat-panel-description>\r\n          </mat-expansion-panel-header>\r\n          <br />\r\n          <app-preview-application\r\n            [previewS1Application]=\"s1Application\"\r\n            [multimediaDTO]=\"multimediaDTO\"\r\n          ></app-preview-application>\r\n        </mat-expansion-panel>\r\n      </mat-accordion>\r\n      <!-- </form> -->\r\n\r\n      <!-- COMMENTS FOR ASC Users -->\r\n      <div *ngIf=\"s1Application?.externalStatus != undefined && !isApplicant\">\r\n        <br />\r\n        <div class=\"row fields\">\r\n          <h4><i class=\"material-icons\">label_important</i> &nbsp;Comments</h4>\r\n          <br />\r\n          <app-comment [commentS1Application]=\"s1Application\"></app-comment>\r\n          <div class=\"row\"><br /></div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- ATTACHMENTS FOR STAMPED MATERIAL AND DECISION FORM -->\r\n      <div\r\n        *ngIf=\"\r\n          ((isAdmin || isSuperAdmin || isAdSpecialist) &&\r\n            previewAttachmentsList.length) ||\r\n          (isApplicant && s1Application?.paymentStatus === 'PAID')\r\n        \"\r\n      >\r\n        <br />\r\n        <div class=\"row fields\">\r\n          <h4>\r\n            <i class=\"material-icons\">label_important</i> &nbsp;Stamped Material\r\n            and Decision Forms\r\n          </h4>\r\n          <br />\r\n          <app-preview-attachments\r\n            [previewAttachmentsList]=\"previewAttachmentsList\"\r\n            [displayedColumns]=\"previewAttachmentsDisplayedColumns\"\r\n            [dataSource]=\"previewAttachmentsListDataSource\"\r\n          ></app-preview-attachments>\r\n          <div class=\"row\"><br /></div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- DECISION OVERRIDE / APPEAL -->\r\n      <!-- <div *ngIf=\"(isAdmin || isSuperAdmin) &&\r\n      s1Application?.internalStatus === 'S1_APPLICATION_REVIEWED' && s1Application?.releaseStatus === 'RELEASED' &&\r\n      !s1Application?.appliedS2 && !s1Application?.hasOngoingCompliance && !s1Application?.hasOngoingRevision\">\r\n        <br>\r\n        <div class=\"row fields\">\r\n          <h4>\r\n            <i class=\"material-icons\">label_important</i> &nbsp;DECISION OVERRIDING\r\n          </h4>\r\n          <br>\r\n          <app-decision-override [s1Application]=\"s1Application\"></app-decision-override>\r\n          <div class=\"row\"><br></div>\r\n        </div>\r\n      </div> -->\r\n\r\n      <div class=\"row\"><br /></div>\r\n\r\n      <div\r\n        class=\"row\"\r\n        [formGroup]=\"s1ApplicationForm\"\r\n        *ngIf=\"\r\n          s1Application.internalStatus == undefined ||\r\n          s1Application.internalStatus == 'SAVED' ||\r\n          s1Application?.formType === 'MULTIPLE' ||\r\n          specialApplicationType.includes(\r\n            s1Application?.applicationType?.description?.toUpperCase()\r\n          )\r\n        \"\r\n      >\r\n        <div\r\n          *ngIf=\"\r\n            (s1Application.internalStatus == undefined ||\r\n              s1Application.internalStatus == 'SAVED') &&\r\n            (s1Application?.formType === 'MULTIPLE' ||\r\n              specialApplicationType.includes(\r\n                s1Application?.applicationType?.description?.toUpperCase()\r\n              ))\r\n          \"\r\n        >\r\n          <br />\r\n          <div class=\"row fields\">\r\n            <h4>\r\n              <i class=\"material-icons\">calendar_today</i> &nbsp; Submission\r\n              Details\r\n            </h4>\r\n            <div class=\"row\">\r\n              <p>\r\n                Date S1 Form(s) will be submitted:\r\n                <b>\r\n                  <span\r\n                    class=\"submission-date\"\r\n                    *ngIf=\"applicationRequest?.status !== 'DISAPPROVED'\"\r\n                    >{{\r\n                      s1Application?.submissionDate | date: \"MMMM d, y\"\r\n                    }}</span\r\n                  >\r\n                  <span\r\n                    class=\"submission-date\"\r\n                    *ngIf=\"applicationRequest?.status === 'DISAPPROVED'\"\r\n                    >N/A - Request was disapproved</span\r\n                  >\r\n\r\n                  <input\r\n                    matInput\r\n                    [(ngModel)]=\"s1Application.submissionDate\"\r\n                    formControlName=\"submissionDate\"\r\n                    name=\"submissionDate\"\r\n                    [hidden]=\"true\"\r\n                  />\r\n                  <input\r\n                    matInput\r\n                    [(ngModel)]=\"s1Application.applicationRequest\"\r\n                    formControlName=\"applicationRequest\"\r\n                    name=\"applicationRequest\"\r\n                    [hidden]=\"true\"\r\n                  />\r\n                </b>\r\n              </p>\r\n              <div\r\n                class=\"col-md-12\"\r\n                *ngIf=\"!s1Application.applicationRequest\"\r\n                [hidden]=\"s1Application?.multipleApplication\"\r\n              >\r\n                <mat-card class=\"demo-inline-calendar-card\">\r\n                  <mat-calendar\r\n                    [(selected)]=\"s1Application.submissionDate\"\r\n                    [minDate]=\"todayDate\"\r\n                    [dateFilter]=\"disabledWeekEnds\"\r\n                    (selectedChange)=\"\r\n                      onChangeDate(s1Application.submissionDate)\r\n                    \"\r\n                  >\r\n                  </mat-calendar>\r\n                </mat-card>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div\r\n          *ngIf=\"\r\n            (s1Application.internalStatus == undefined ||\r\n              s1Application.internalStatus == 'SAVED') &&\r\n            s1Application?.formType !== 'MULTIPLE' &&\r\n            !s1Application.multipleApplication &&\r\n            !specialApplicationType.includes(\r\n              s1Application?.applicationType?.description?.toUpperCase()\r\n            )\r\n          \"\r\n        >\r\n          <mat-slide-toggle\r\n            color=\"warn\"\r\n            checked\r\n            (change)=\"scheduleSubmission()\"\r\n            *ngIf=\"s1Application.autoSubmit == true\"\r\n          >\r\n            <b>SCHEDULE SUBMISSION</b>\r\n          </mat-slide-toggle>\r\n          <mat-slide-toggle\r\n            color=\"warn\"\r\n            (change)=\"scheduleSubmission()\"\r\n            *ngIf=\"s1Application.autoSubmit != true\"\r\n          >\r\n            <b>SCHEDULE SUBMISSION</b>\r\n          </mat-slide-toggle>\r\n          <div class=\"row\"><br /></div>\r\n\r\n          <div class=\"row fields\" *ngIf=\"isChecked == true\">\r\n            <h4>\r\n              <i class=\"material-icons\">schedule_send</i> &nbsp; Submission\r\n              Details:\r\n            </h4>\r\n            <div class=\"row\">\r\n              <mat-form-field appearance=\"outline\" class=\"col-md-6\">\r\n                <mat-label>Date</mat-label>\r\n                <input\r\n                  matInput\r\n                  placeholder=\"Date\"\r\n                  [matDatepicker]=\"dp3\"\r\n                  [min]=\"todayDate\"\r\n                  (dateChange)=\"onChangeDate($event.value)\"\r\n                  [matDatepickerFilter]=\"disabledWeekEnds\"\r\n                  readonly\r\n                  [(ngModel)]=\"s1Application.submissionDate\"\r\n                  name=\"submissionDate\"\r\n                  formControlName=\"submissionDate\"\r\n                />\r\n                <mat-datepicker-toggle\r\n                  matSuffix\r\n                  [for]=\"dp3\"\r\n                ></mat-datepicker-toggle>\r\n                <mat-datepicker\r\n                  color=\"warn\"\r\n                  #dp3\r\n                  disabled=\"false\"\r\n                ></mat-datepicker>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"row\"><br /></div>\r\n      <hr />\r\n\r\n      <!-- For screener/Reviewer only -->\r\n      <div\r\n        class=\"row\"\r\n        [formGroup]=\"s1ApplicationForm\"\r\n        *ngIf=\"\r\n          (isScreener &&\r\n            (s1Application?.internalStatus ===\r\n              'S1_APPLICATION_VERIFIED_BY_AD_SPE' ||\r\n              s1Application?.internalStatus ===\r\n                'COMPLIANCE_DOCUMENT_VERIFIED_BY_AD_SPE' ||\r\n              s1Application?.internalStatus === 'REVISION_VERIFIED_BY_AD_SPE' ||\r\n              s1Application?.internalStatus === 'S1_APPLICATION_SCREENED' ||\r\n              s1Application?.screenerDecisionComment)) ||\r\n          (isReviewer &&\r\n            (s1Application.internalStatus === 'S1_APPLICATION_SCREENED' ||\r\n              s1Application?.internalStatus ===\r\n                'COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER' ||\r\n              s1Application?.internalStatus === 'REVISION_SCREENED' ||\r\n              s1Application?.internalStatus === 'S1_APPLICATION_REVIEWED' ||\r\n              s1Application?.reviewerDecisionComment)) ||\r\n          (isAdSpecialist && s1Application?.hasOngoingAppeal)\r\n        \"\r\n      >\r\n        <mat-form-field class=\"col-md-6\" appearance=\"outline\">\r\n          <mat-label>Decision:</mat-label>\r\n          <mat-select\r\n            [(ngModel)]=\"s1Application.decisionStatus\"\r\n            name=\"decisionStatus\"\r\n            formControlName=\"decisionStatus\"\r\n            (click)=\"clearDecisionStatus()\"\r\n            (selectionChange)=\"buttonValidation($event.value)\"\r\n          >\r\n            <mat-option value=\"APPROVED\">APPROVED FOR PRODUCTION</mat-option>\r\n            <mat-option value=\"APPROVED W/ CAUTION\"\r\n              >APPROVED WITH CAUTION</mat-option\r\n            >\r\n            <mat-option value=\"INCOMPLETE\">INCOMPLETE</mat-option>\r\n            <mat-option value=\"DISAPPROVED\">DISAPPROVED</mat-option>\r\n            <!-- <mat-option value=\"REFER TO PANEL\">REFER TO PANEL</mat-option> -->\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <!-- For AdSpe only -->\r\n      <span\r\n        *ngIf=\"\r\n          isAdSpecialist &&\r\n          s1Application?.assignedUser?.userRole.name === 'ROLE_SCREENER' &&\r\n          (s1Application?.internalStatus ===\r\n            'S1_APPLICATION_VERIFIED_BY_AD_SPE' ||\r\n            s1Application?.internalStatus ===\r\n              'COMPLIANCE_DOCUMENT_VERIFIED_BY_AD_SPE' ||\r\n            s1Application?.internalStatus === 'REVISION_VERIFIED_BY_AD_SPE')\r\n        \"\r\n        ><b class=\"material-icons\">error_outline</b>&nbsp;\r\n        <b>Assigned Screener:</b>\r\n        {{ s1Application?.assignedScreener?.firstName }}\r\n        {{ s1Application?.assignedScreener?.lastName }}\r\n        <br />\r\n        <br />\r\n      </span>\r\n\r\n      <b\r\n        *ngIf=\"\r\n          s1Application.submissionType === 'ORIGINAL' &&\r\n          isAdSpecialist &&\r\n          s1Application?.multipleApplication &&\r\n          s1Application?.multipleApplication?.countVerifiedApplicationForm !==\r\n            s1Application?.multipleApplication?.actualNumberOfApplicationForm -\r\n              1\r\n        \"\r\n        [hidden]=\"\r\n          s1Application?.internalStatus ===\r\n            'S1_APPLICATION_VERIFIED_BY_AD_SPE' ||\r\n          s1Application?.decisionStatus === 'INCOMPLETE'\r\n        \"\r\n      >\r\n        <b class=\"material-icons\">error_outline</b> Selection of Screener will\r\n        be done in the last form of multiple application.\r\n        <br />\r\n        <br />\r\n      </b>\r\n\r\n      <b\r\n        [hidden]=\"\r\n          s1Application.submissionType === 'ORIGINAL' &&\r\n          s1Application?.multipleApplication &&\r\n          s1Application?.multipleApplication?.countVerifiedApplicationForm !==\r\n            s1Application?.multipleApplication?.actualNumberOfApplicationForm -\r\n              1\r\n        \"\r\n        *ngIf=\"\r\n          isAdSpecialist &&\r\n          (s1Application.internalStatus ==\r\n            'S1_APPLICATION_VERIFIED_BY_ENCODER' ||\r\n            s1Application.internalStatus ==\r\n              'S1_APPLICATION_VERIFIED_BY_AD_SPE' ||\r\n            s1Application.internalStatus ==\r\n              'COMPLIANCE_DOCUMENT_VERIFIED_BY_ENCODER' ||\r\n            s1Application.internalStatus ==\r\n              'COMPLIANCE_DOCUMENT_VERIFIED_BY_AD_SPE' ||\r\n            s1Application.internalStatus == 'REVISION_VERIFIED_BY_ENCODER' ||\r\n            s1Application.internalStatus == 'REVISION_VERIFIED_BY_AD_SPE')\r\n        \"\r\n      >\r\n        <b class=\"material-icons\">error_outline</b> [ x ] are the number of\r\n        assigned S1 applications to the Screener.\r\n        <br />\r\n      </b>\r\n\r\n      <mat-form-field\r\n        class=\"col-md-6\"\r\n        appearance=\"outline\"\r\n        [hidden]=\"\r\n          s1Application.submissionType === 'ORIGINAL' &&\r\n          s1Application?.multipleApplication &&\r\n          s1Application?.decisionStatus !== 'INCOMPLETE' &&\r\n          s1Application?.multipleApplication?.countVerifiedApplicationForm !==\r\n            s1Application?.multipleApplication?.actualNumberOfApplicationForm -\r\n              1 &&\r\n          s1Application.internalStatus !== 'S1_APPLICATION_VERIFIED_BY_AD_SPE'\r\n        \"\r\n        *ngIf=\"\r\n          isAdSpecialist &&\r\n          (s1Application.internalStatus ==\r\n            'S1_APPLICATION_VERIFIED_BY_ENCODER' ||\r\n            s1Application.internalStatus ==\r\n              'S1_APPLICATION_VERIFIED_BY_AD_SPE' ||\r\n            s1Application.internalStatus ==\r\n              'COMPLIANCE_DOCUMENT_VERIFIED_BY_ENCODER' ||\r\n            s1Application.internalStatus ==\r\n              'COMPLIANCE_DOCUMENT_VERIFIED_BY_AD_SPE' ||\r\n            s1Application.internalStatus == 'REVISION_VERIFIED_BY_ENCODER' ||\r\n            s1Application.internalStatus == 'REVISION_VERIFIED_BY_AD_SPE')\r\n        \"\r\n      >\r\n        <mat-label>ASSIGN A SCREENER</mat-label>\r\n        <mat-select\r\n          [(ngModel)]=\"s1Application.assignedScreener\"\r\n          name=\"assignedScreener\"\r\n          (selectionChange)=\"buttonValidation($event.value)\"\r\n          [compareWith]=\"compareAssignedScreener\"\r\n        >\r\n          <mat-option *ngFor=\"let i of screenerList\" [value]=\"i\">\r\n            {{ i.firstName }} {{ i.lastName }}\r\n            <span style=\"float: right\">[ {{ i.ctr }} ]</span>\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n\r\n      <!-- For Screener only -->\r\n      <span\r\n        *ngIf=\"\r\n          s1Application.submissionType === 'ORIGINAL' &&\r\n          isScreener &&\r\n          s1Application?.actionStatus === 'ASSIGN_TO_REVIEWER'\r\n        \"\r\n        ><b class=\"material-icons\">error_outline</b>&nbsp;\r\n        <b>Assigned Reviewer:</b>\r\n        {{\r\n          s1Application?.multipleApplication\r\n            ? s1Application?.multipleApplication?.assignedReviewer?.firstName\r\n            : s1Application?.assignedUser?.firstName\r\n        }}\r\n        {{\r\n          s1Application?.multipleApplication\r\n            ? s1Application?.multipleApplication?.assignedReviewer?.lastName\r\n            : s1Application?.assignedUser?.lastName\r\n        }}\r\n        <br />\r\n        <br />\r\n      </span>\r\n\r\n      <b\r\n        *ngIf=\"\r\n          s1Application.submissionType === 'ORIGINAL' &&\r\n          isScreener &&\r\n          s1Application?.multipleApplication &&\r\n          s1Application?.multipleApplication?.countVerifiedApplicationForm !==\r\n            s1Application?.multipleApplication?.actualNumberOfApplicationForm -\r\n              1\r\n        \"\r\n        [hidden]=\"\r\n          s1Application?.internalStatus === 'S1_APPLICATION_SCREENED' ||\r\n          s1Application?.screenerDecisionComment ||\r\n          s1Application?.reviewerDecisionComment ||\r\n          s1Application?.decisionStatus === 'INCOMPLETE'\r\n        \"\r\n      >\r\n        <b class=\"material-icons\">error_outline</b> Selection of Reviewer will\r\n        be done in the last form of multiple application.\r\n        <br />\r\n        <br />\r\n      </b>\r\n\r\n      <mat-form-field\r\n        class=\"col-md-6\"\r\n        appearance=\"outline\"\r\n        [hidden]=\"\r\n          !s1Application?.screenerDecisionComment &&\r\n          s1Application.submissionType === 'ORIGINAL' &&\r\n          s1Application?.multipleApplication &&\r\n          s1Application?.multipleApplication?.countVerifiedApplicationForm !==\r\n            s1Application?.multipleApplication?.actualNumberOfApplicationForm -\r\n              1 &&\r\n          s1Application.internalStatus !== 'S1_APPLICATION_SCREENED'\r\n        \"\r\n        *ngIf=\"\r\n          isScreener &&\r\n          (s1Application?.internalStatus ===\r\n            'S1_APPLICATION_VERIFIED_BY_AD_SPE' ||\r\n            s1Application?.internalStatus === 'S1_APPLICATION_SCREENED' ||\r\n            s1Application?.screenerDecisionComment ||\r\n            s1Application?.reviewerDecisionComment)\r\n        \"\r\n      >\r\n        <mat-label>ASSIGN A REVIEWER</mat-label>\r\n        <mat-select\r\n          name=\"assignedUserR\"\r\n          [(ngModel)]=\"s1Application.assignedReviewer\"\r\n          (selectionChange)=\"buttonValidation('')\"\r\n          [compareWith]=\"compareAssignedReviewer\"\r\n        >\r\n          <mat-option *ngFor=\"let i of reviewerList\" [value]=\"i\">\r\n            {{ i.firstName }} {{ i.lastName }}\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n\r\n      <!-- For screener/Reviewer only -->\r\n      <div\r\n        class=\"row\"\r\n        [formGroup]=\"s1ApplicationForm\"\r\n        *ngIf=\"\r\n          (isScreener &&\r\n            (s1Application?.internalStatus ===\r\n              'S1_APPLICATION_VERIFIED_BY_AD_SPE' ||\r\n              s1Application?.internalStatus ===\r\n                'COMPLIANCE_DOCUMENT_VERIFIED_BY_AD_SPE' ||\r\n              s1Application?.internalStatus === 'REVISION_VERIFIED_BY_AD_SPE' ||\r\n              s1Application?.internalStatus === 'S1_APPLICATION_SCREENED' ||\r\n              s1Application?.screenerDecisionComment)) ||\r\n          (isReviewer &&\r\n            (s1Application.internalStatus === 'S1_APPLICATION_SCREENED' ||\r\n              s1Application?.internalStatus ===\r\n                'COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER' ||\r\n              s1Application?.internalStatus === 'REVISION_SCREENED' ||\r\n              s1Application?.internalStatus === 'S1_APPLICATION_REVIEWED' ||\r\n              s1Application?.reviewerDecisionComment))\r\n        \"\r\n      >\r\n        <div class=\"rational-other-comment\">\r\n          <div\r\n            class=\"col-md-6 rationale\"\r\n            *ngIf=\"rationaleDisplay\"\r\n            [hidden]=\"\r\n              rationaleLists?.length === 0 && rationaleOthersList?.length === 0\r\n            \"\r\n          >\r\n            <label>RATIONALE</label>\r\n            <div class=\"rationale-list\" [hidden]=\"rationaleLists?.length === 0\">\r\n              <label>Rationale List:</label>\r\n              <div *ngFor=\"let i of rationaleLists\">\r\n                <p>\r\n                  <span class=\"material-icons\">help</span>\r\n                  {{ i?.typeOfRationale?.rationale }}\r\n                </p>\r\n              </div>\r\n            </div>\r\n\r\n            <div\r\n              class=\"rational-other-comment\"\r\n              [hidden]=\"rationaleOthersList?.length === 0\"\r\n            >\r\n              <label>Other comments:</label>\r\n              <p *ngFor=\"let i of rationaleOthersList\">\r\n                <span class=\"material-icons\" [hidden]=\"i?.others === ''\"\r\n                  >help</span\r\n                >\r\n                {{ i?.others }}\r\n              </p>\r\n            </div>\r\n          </div>\r\n          <br />\r\n        </div>\r\n\r\n        <mat-form-field\r\n          class=\"col-md-6\"\r\n          appearance=\"outline\"\r\n          [hidden]=\"\r\n            s1Application.submissionType === 'ORIGINAL' &&\r\n            s1Application?.multipleApplication &&\r\n            s1Application?.multipleApplication?.countVerifiedApplicationForm !==\r\n              s1Application?.multipleApplication\r\n                ?.actualNumberOfApplicationForm -\r\n                1\r\n          \"\r\n          *ngIf=\"\r\n            !applicationSingleMedia?.mediumExecution?.typeOfExecution\r\n              ?.applyForToa &&\r\n            applicationSingleMedia?.mediumExecution?.typeOfExecution?.live\r\n          \"\r\n        >\r\n          <mat-label>Choose validity date</mat-label>\r\n          <input\r\n            matInput\r\n            placeholder=\"Date\"\r\n            [matDatepicker]=\"validityDate\"\r\n            readonly\r\n            [min]=\"todayDate\"\r\n            [(ngModel)]=\"s1Application.validUntil\"\r\n            name=\"expiresOn\"\r\n            formControlName=\"validityDate\"\r\n            [readonly]=\"true\"\r\n          />\r\n          <mat-datepicker-toggle matSuffix [for]=\"validityDate\">\r\n            <mat-datepicker color=\"warn\" #validityDate></mat-datepicker>\r\n          </mat-datepicker-toggle>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n          <!-- ADMIN / SUPERADMIN - RELEASED -->\r\n          <button\r\n            mat-raised-button\r\n            class=\"button-red\"\r\n            (click)=\"resendDecision()\"\r\n            *ngIf=\"\r\n              s1Application?.releaseStatus === 'RELEASED' &&\r\n              (isAdmin || isSuperAdmin)\r\n            \"\r\n          >\r\n            <i class=\"material-icons color__white\">send</i> RESEND DECISION\r\n          </button>\r\n\r\n          <!-- ADMIN / SUPERADMIN -->\r\n          <!-- wala talaga function isa kasi pang mat tool tip lang - start -->\r\n          <button\r\n            mat-raised-button\r\n            class=\"button-red\"\r\n            *ngIf=\"\r\n              (isAdmin || isSuperAdmin) &&\r\n              (!applicationSingleMedia?.sizeLength ||\r\n                +applicationSingleMedia?.sizeLength === +currentSizeLength) &&\r\n              !hasMultimediaLengthChange &&\r\n              (s1Application?.decisionStatus === 'APPROVED' ||\r\n                s1Application?.decisionStatus === 'APPROVED_WITH_CAUTION')\r\n            \"\r\n            matTooltip=\"To enable this button, change the size/length of the application\"\r\n          >\r\n            <i class=\"material-icons color__white\">assignment_return</i>\r\n            &nbsp;SUBMIT FOR MODIFICATION\r\n          </button>\r\n          <button\r\n            mat-raised-button\r\n            class=\"button-red\"\r\n            (click)=\"resubmitApplication()\"\r\n            *ngIf=\"\r\n              (isAdmin || isSuperAdmin) &&\r\n              ((applicationSingleMedia?.sizeLength &&\r\n                +applicationSingleMedia?.sizeLength !== +currentSizeLength) ||\r\n                hasMultimediaLengthChange) &&\r\n              (s1Application?.decisionStatus === 'APPROVED' ||\r\n                s1Application?.decisionStatus === 'APPROVED_WITH_CAUTION')\r\n            \"\r\n          >\r\n            <i class=\"material-icons color__white\">assignment_return</i>\r\n            &nbsp;SUBMIT FOR MODIFICATION\r\n          </button>\r\n          <!-- wala talaga function isa kasi pang mat tool tip lang - end -->\r\n\r\n          <!-- ADMIN / SUPERADMIN - RELEASED -->\r\n          <button\r\n            mat-raised-button\r\n            class=\"button-red\"\r\n            (click)=\"submitAppeal()\"\r\n            *ngIf=\"\r\n              (isAdmin || isSuperAdmin) &&\r\n              s1Application?.internalStatus === 'S1_APPLICATION_REVIEWED' &&\r\n              s1Application?.releaseStatus === 'RELEASED' &&\r\n              !s1Application?.appliedS2 &&\r\n              !s1Application?.hasOngoingCompliance &&\r\n              !s1Application?.hasOngoingRevision &&\r\n              !s1Application?.hasOngoingAppeal\r\n            \"\r\n          >\r\n            <i class=\"material-icons color__white\">report_gmailerrorred</i>\r\n            &nbsp;RETURN TO ADSPE FOR APPEAL\r\n          </button>\r\n\r\n          <!-- APPEAL - ADSPE -->\r\n          <button\r\n            mat-raised-button\r\n            class=\"button-red\"\r\n            (click)=\"submitAppeal()\"\r\n            *ngIf=\"isAdSpecialist && s1Application?.hasOngoingAppeal\"\r\n          >\r\n            <i class=\"material-icons color__white\">report_gmailerrorred</i>\r\n            &nbsp;VERIFY APPEAL\r\n          </button>\r\n\r\n          <!-- ADSPE / ADMIN / SUPERADMIN - FOR RELEASE -->\r\n          <button\r\n            mat-raised-button\r\n            class=\"button-red\"\r\n            (click)=\"returnToScreener()\"\r\n            *ngIf=\"\r\n              (isAdSpecialist || isAdmin || isSuperAdmin) &&\r\n              s1Application?.internalStatus === 'S1_APPLICATION_REVIEWED' &&\r\n              s1Application?.releaseStatus === 'FOR_RELEASE'\r\n            \"\r\n          >\r\n            <i class=\"material-icons color__white\">assignment_return</i>\r\n            &nbsp;RETURN TO SCREENER\r\n          </button>\r\n\r\n          <!-- screenerDecisionComment -->\r\n          <button\r\n            mat-raised-button\r\n            class=\"button-red\"\r\n            (click)=\"submitDecisionAndComment()\"\r\n            *ngIf=\"isScreener && s1Application?.screenerDecisionComment\"\r\n          >\r\n            <i class=\"material-icons color__white\">fact_check</i> SCREENED\r\n          </button>\r\n\r\n          <!-- reviewerDecisionComment -->\r\n          <button\r\n            mat-raised-button\r\n            class=\"button-red\"\r\n            (click)=\"submitDecisionAndComment()\"\r\n            *ngIf=\"isReviewer && s1Application?.reviewerDecisionComment\"\r\n          >\r\n            <i class=\"material-icons color__white\">assignment_turned_in</i>\r\n            REVIEWED\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- //////////////////////////////////////// ORIGINAL //////////////////////////////////////////////////////////// -->\r\n      <div\r\n        class=\"row\"\r\n        *ngIf=\"\r\n          s1Application?.internalStatus == undefined ||\r\n          s1Application?.internalStatus == 'SAVED' ||\r\n          s1Application?.status == 'APPROVED'\r\n        \"\r\n      >\r\n        <div class=\"col-md-12\">\r\n          <!-- <button mat-raised-button color=\"primary\" (click)=\"saveOrUpdateApplication('SAVED')\" -->\r\n          <button\r\n            mat-raised-button\r\n            color=\"primary\"\r\n            (click)=\"checkAscRateBeforeSaveOrSubmit()\"\r\n            *ngIf=\"!isEvaluator\"\r\n            [disabled]=\"\r\n              s1Application?.formType === 'MULTIPLE'\r\n                ? isMultipleRegularDisabled()\r\n                : isSingleRegularDisabled()\r\n            \"\r\n          >\r\n            <i class=\"material-icons color__white\">offline_pin</i> SAVE\r\n          </button>\r\n          &nbsp;\r\n          <!-- (click)=\"saveStatus('presentor', 'submit', 'S1_APPLICATION_SUBMITTED')\" -->\r\n          <button\r\n            mat-raised-button\r\n            class=\"button-red\"\r\n            (click)=\"checkAscRateBeforeSaveOrSubmit('submit')\"\r\n            [hidden]=\"\r\n              specialApplicationType.includes(\r\n                s1Application?.applicationType?.description?.toUpperCase()\r\n              )\r\n            \"\r\n            [disabled]=\"\r\n              s1Application?.formType === 'MULTIPLE'\r\n                ? isMultipleRegularDisabled()\r\n                : isSingleRegularDisabled()\r\n            \"\r\n          >\r\n            <i class=\"material-icons color__white\">send</i> SUBMIT\r\n          </button>\r\n\r\n          <button\r\n            *ngIf=\"\r\n              specialApplicationType.includes(\r\n                s1Application?.applicationType?.description?.toUpperCase()\r\n              ) &&\r\n              !applicationRequest?.status &&\r\n              s1Application.applicationRequest == null\r\n            \"\r\n            mat-raised-button\r\n            class=\"button-red\"\r\n            (click)=\"requestSpecialS1ApplicationApproval()\"\r\n            [disabled]=\"isSaveAndRequestForApprovalDisabled()\"\r\n          >\r\n            <i class=\"material-icons color__white\">send</i> REQUEST FOR APPROVAL\r\n          </button>\r\n        </div>\r\n\r\n        <!-- <div class=\"col-md-12\" *ngIf=\"(s1Application?.formType === 'MULTIPLE' && !s1Application.multipleApplication) \">\r\n          <button mat-raised-button class=\"button-red\" (click)=\"saveOrUpdateApplication('S1_APPLICATION_SUBMITTED')\"\r\n            [disabled]=\"!s1Application?.adTitle || !s1Application.submissionDate\">\r\n            <i class=\"material-icons color__white\">send</i> REQUEST FOR APPROVAL\r\n          </button>\r\n        </div> -->\r\n      </div>\r\n\r\n      <div\r\n        class=\"row\"\r\n        *ngIf=\"\r\n          isApplicant &&\r\n          s1Application?.internalStatus == 'S1_APPLICATION_SUBMITTED'\r\n        \"\r\n      >\r\n        <div class=\"col-md-12\">\r\n          <button\r\n            mat-raised-button\r\n            class=\"button-red\"\r\n            (click)=\"\r\n              saveStatus('presentor', 'cancel', 'S1_APPLICATION_CANCELLED')\r\n            \"\r\n          >\r\n            <i class=\"material-icons color__white\">cancel</i> CANCEL APPLICATION\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div\r\n        class=\"row\"\r\n        *ngIf=\"\r\n          isEvaluator &&\r\n          s1Application.internalStatus == 'S1_APPLICATION_SUBMITTED'\r\n        \"\r\n      >\r\n        <b\r\n          class=\"warning-msg\"\r\n          *ngIf=\"\r\n            s1Application?.company?.status === 'FOR_APPROVAL' ||\r\n            s1Application?.brand?.status === 'FOR_APPROVAL' ||\r\n            s1Application?.product?.status === 'FOR_APPROVAL'\r\n          \"\r\n        >\r\n          <b class=\"material-icons\">error_outline</b> New Company / Brand /\r\n          Product must be approved first before you can forward the application.\r\n        </b>\r\n        <div class=\"col-md-12\">\r\n          <button\r\n            mat-raised-button\r\n            class=\"button-red\"\r\n            [disabled]=\"\r\n              s1Application?.company?.status === 'FOR_APPROVAL' ||\r\n              s1Application?.brand?.status === 'FOR_APPROVAL' ||\r\n              s1Application?.product?.status === 'FOR_APPROVAL'\r\n            \"\r\n            (click)=\"\r\n              saveStatus(\r\n                'encoder',\r\n                'verify',\r\n                'S1_APPLICATION_VERIFIED_BY_ENCODER'\r\n              )\r\n            \"\r\n          >\r\n            <i class=\"material-icons color__white\">verified</i> FORWARD TO AD\r\n            SPECIALIST\r\n          </button>\r\n          &nbsp;\r\n          <button\r\n            mat-raised-button\r\n            class=\"button-red\"\r\n            (click)=\"rejectDisapprovedModal()\"\r\n          >\r\n            <!-- (click)=\"rejectDisapprovedModal('encoder', 'reject', 'S1_APPLICATION_REJECTED')\" -->\r\n            <i class=\"material-icons color__white\">unpublished</i> REJECT\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- MULTIPLE -->\r\n      <div\r\n        class=\"row\"\r\n        *ngIf=\"\r\n          s1Application.submissionType === 'ORIGINAL' &&\r\n          s1Application?.formType === 'MULTIPLE' &&\r\n          s1Application?.decisionStatus !== 'INCOMPLETE'\r\n        \"\r\n      >\r\n        <div class=\"col-md-12\">\r\n          <button\r\n            mat-raised-button\r\n            class=\"button-red\"\r\n            *ngIf=\"\r\n              isAdSpecialist &&\r\n              s1Application?.actionStatus === 'ASSIGN_TO_ADSPE'\r\n            \"\r\n            (click)=\"\r\n              saveStatus(\r\n                'ad-specialist',\r\n                'verify',\r\n                'S1_APPLICATION_VERIFIED_BY_AD_SPE'\r\n              )\r\n            \"\r\n          >\r\n            <i class=\"material-icons color__white\">verified</i> FORWARD TO\r\n            SCREENER\r\n          </button>\r\n          <ng-template\r\n            [ngTemplateOutlet]=\"reAssignAdSpecialistTemp\"\r\n          ></ng-template>\r\n        </div>\r\n      </div>\r\n\r\n      <div\r\n        class=\"row\"\r\n        *ngIf=\"\r\n          isAdSpecialist &&\r\n          (s1Application?.internalStatus ==\r\n            'S1_APPLICATION_VERIFIED_BY_ENCODER' ||\r\n            s1Application?.internalStatus ==\r\n              'S1_APPLICATION_VERIFIED_BY_AD_SPE')\r\n        \"\r\n      >\r\n        <div class=\"col-md-12\">\r\n          <!-- NOT MULTIPLE -->\r\n          <button\r\n            mat-raised-button\r\n            class=\"button-red\"\r\n            *ngIf=\"\r\n              isAdSpecialist &&\r\n              s1Application?.actionStatus === 'ASSIGN_TO_ADSPE'\r\n            \"\r\n            (click)=\"\r\n              saveStatus(\r\n                'ad-specialist',\r\n                'verify',\r\n                'S1_APPLICATION_VERIFIED_BY_AD_SPE'\r\n              )\r\n            \"\r\n            [disabled]=\"buttonDisabled\"\r\n            [hidden]=\"s1Application?.formType === 'MULTIPLE'\"\r\n          >\r\n            <i class=\"material-icons color__white\">verified</i> FORWARD TO\r\n            SCREENER\r\n          </button>\r\n          <ng-template\r\n            [ngTemplateOutlet]=\"reAssignAdSpecialistTemp\"\r\n          ></ng-template>\r\n\r\n          <button\r\n            mat-raised-button\r\n            class=\"button-red\"\r\n            *ngIf=\"\r\n              isAdSpecialist &&\r\n              (s1Application?.actionStatus === 'ASSIGN_TO_SCREENER' ||\r\n                s1Application?.actionStatus === 'ASSIGN_TO_HOLD') &&\r\n              s1Application?.internalStatus ===\r\n                'S1_APPLICATION_VERIFIED_BY_AD_SPE'\r\n            \"\r\n            (click)=\"reassign()\"\r\n            [disabled]=\"buttonDisabled\"\r\n          >\r\n            <i class=\"material-icons color__white\">verified</i> RE-ASSIGN\r\n            SCREENER\r\n          </button>\r\n          &nbsp;\r\n          <!-- <button mat-raised-button class=\"button-red\"\r\n            (click)=\"rejectDisapprovedModal('encoder', 'reject', 'S1_APPLICATION_REJECTED')\">\r\n            (click)=\"saveStatus('ad-specialist','reject','S1_APPLICATION_REJECTED')\">\r\n            <i class=\"material-icons color__white\">unpublished</i> REJECT\r\n          </button> -->\r\n        </div>\r\n      </div>\r\n\r\n      <!-- AD SPECIALIST ONLY-->\r\n      <div class=\"row mt-4\">\r\n        <mat-form-field\r\n          class=\"col-md-6\"\r\n          appearance=\"outline\"\r\n          [hidden]=\"\r\n            s1Application.submissionType === 'ORIGINAL' &&\r\n            s1Application?.multipleApplication &&\r\n            s1Application?.decisionStatus !== 'INCOMPLETE' &&\r\n            s1Application?.multipleApplication?.countVerifiedApplicationForm !==\r\n              s1Application?.multipleApplication\r\n                ?.actualNumberOfApplicationForm -\r\n                1 &&\r\n            s1Application.internalStatus !== 'S1_APPLICATION_VERIFIED_BY_AD_SPE'\r\n          \"\r\n          *ngIf=\"\r\n            isAdSpecialist &&\r\n            (s1Application.internalStatus ==\r\n              'S1_APPLICATION_VERIFIED_BY_ENCODER' ||\r\n              s1Application.internalStatus ==\r\n                'S1_APPLICATION_VERIFIED_BY_AD_SPE' ||\r\n              s1Application.internalStatus ==\r\n                'COMPLIANCE_DOCUMENT_VERIFIED_BY_ENCODER' ||\r\n              s1Application.internalStatus ==\r\n                'COMPLIANCE_DOCUMENT_VERIFIED_BY_AD_SPE' ||\r\n              s1Application.internalStatus == 'REVISION_VERIFIED_BY_ENCODER' ||\r\n              s1Application.internalStatus == 'REVISION_VERIFIED_BY_AD_SPE')\r\n          \"\r\n        >\r\n          <mat-label>REASSIGN AD SPECIALIST</mat-label>\r\n          <mat-select\r\n            [(ngModel)]=\"s1Application.assignedAdSpecialist\"\r\n            name=\"assignedAdSpecialist\"\r\n            (selectionChange)=\"buttonValidation($event.value)\"\r\n            [compareWith]=\"compareAssignedAdSpec\"\r\n          >\r\n            <mat-option *ngFor=\"let i of adSpecialistList\" [value]=\"i\">\r\n              {{ i.firstName }} {{ i.lastName }}\r\n              <span style=\"float: right\">[ {{ i.ctr }} ]</span>\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <!-- MULTIPLE -->\r\n      <div\r\n        class=\"row\"\r\n        *ngIf=\"\r\n          s1Application.submissionType === 'ORIGINAL' &&\r\n          s1Application?.formType === 'MULTIPLE' &&\r\n          s1Application?.internalStatus === 'S1_APPLICATION_VERIFIED_BY_AD_SPE'\r\n        \"\r\n      >\r\n        <div class=\"col-md-12\">\r\n          <button\r\n            mat-raised-button\r\n            class=\"button-red\"\r\n            *ngIf=\"\r\n              isScreener && s1Application?.actionStatus === 'ASSIGN_TO_SCREENER'\r\n            \"\r\n            (click)=\"\r\n              saveStatus('screener', 'verify', 'S1_APPLICATION_SCREENED')\r\n            \"\r\n            [disabled]=\"!s1Application.decisionStatus\"\r\n          >\r\n            <i class=\"material-icons color__white\">fact_check</i> SCREENED\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div\r\n        class=\"row\"\r\n        *ngIf=\"\r\n          isScreener &&\r\n          (s1Application.internalStatus ==\r\n            'S1_APPLICATION_VERIFIED_BY_AD_SPE' ||\r\n            s1Application.internalStatus == 'S1_APPLICATION_SCREENED')\r\n        \"\r\n      >\r\n        <div class=\"col-md-12\">\r\n          <button\r\n            mat-raised-button\r\n            class=\"button-red\"\r\n            *ngIf=\"\r\n              isScreener && s1Application?.actionStatus === 'ASSIGN_TO_SCREENER'\r\n            \"\r\n            (click)=\"\r\n              saveStatus('screener', 'verify', 'S1_APPLICATION_SCREENED')\r\n            \"\r\n            [disabled]=\"buttonDisabled || !s1Application.decisionStatus\"\r\n            [hidden]=\"s1Application?.formType === 'MULTIPLE'\"\r\n          >\r\n            <i class=\"material-icons color__white\">fact_check</i> SCREENED\r\n          </button>\r\n          <button\r\n            mat-raised-button\r\n            class=\"button-red\"\r\n            *ngIf=\"\r\n              isScreener && s1Application?.actionStatus === 'ASSIGN_TO_REVIEWER'\r\n            \"\r\n            (click)=\"reassign()\"\r\n            [disabled]=\"buttonDisabled\"\r\n          >\r\n            <i class=\"material-icons color__white\">fact_check</i> RE-ASSIGN\r\n            REVIEWER\r\n          </button>\r\n          <button\r\n            mat-raised-button\r\n            class=\"button-red\"\r\n            (click)=\"returnTo('ADSPE', 'S1_APPLICATION_VERIFIED_BY_ENCODER')\"\r\n            [disabled]=\"\"\r\n            [hidden]=\"s1Application?.formType === 'MULTIPLE'\"\r\n          >\r\n            <i class=\"material-icons color__white\">assignment_return</i>\r\n            &nbsp;RETURN TO AD SPECIALIST\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div\r\n        class=\"row\"\r\n        *ngIf=\"\r\n          !s1Application?.reviewerDecisionComment &&\r\n          isReviewer &&\r\n          (s1Application?.internalStatus == 'S1_APPLICATION_SCREENED' ||\r\n            s1Application?.internalStatus === 'S1_APPLICATION_REVIEWED' ||\r\n            s1Application?.internalStatus ===\r\n              'COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER')\r\n        \"\r\n      >\r\n        <div class=\"col-md-12\">\r\n          <button\r\n            mat-raised-button\r\n            class=\"button-red\"\r\n            [disabled]=\"!s1Application.decisionStatus\"\r\n            (click)=\"\r\n              saveStatus('reviewer', 'verify', 'S1_APPLICATION_REVIEWED')\r\n            \"\r\n          >\r\n            <i class=\"material-icons color__white\">assignment_turned_in</i>\r\n            REVIEWED\r\n          </button>\r\n          <button\r\n            mat-raised-button\r\n            class=\"button-red\"\r\n            (click)=\"returnTo('SCREENER', 'S1_APPLICATION_VERIFIED_BY_AD_SPE')\"\r\n            [disabled]=\"\"\r\n            [hidden]=\"s1Application?.formType === 'MULTIPLE'\"\r\n          >\r\n            <i class=\"material-icons color__white\">assignment_return</i>\r\n            &nbsp;RETURN TO SCREENER\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- //////////////////////////////////////// FOR COMPLIANCE //////////////////////////////////////////////////////////// -->\r\n      <div\r\n        class=\"row\"\r\n        *ngIf=\"\r\n          isApplicant &&\r\n          !s1Application?.hasOngoingRevision &&\r\n          !s1Application?.hasOngoingCompliance &&\r\n          s1Application?.decisionStatus == 'INCOMPLETE' &&\r\n          (s1Application?.internalStatus == 'S1_APPLICATION_REVIEWED' ||\r\n            s1Application?.internalStatus ==\r\n              'COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER' ||\r\n            s1Application?.internalStatus == 'REVISION_SCREENED' ||\r\n            s1Application?.internalStatus == 'S1_APPLICATION_REJECTED')\r\n        \"\r\n      >\r\n        <b\r\n          ><b class=\"material-icons info-msg\">error_outline</b> Applicant can\r\n          submit updated or additional supporting documents for S1 Forms with\r\n          Incomplete Decision.</b\r\n        >\r\n        <div class=\"col-md-12\">\r\n          <br />\r\n          <button\r\n            mat-raised-button\r\n            class=\"button-red\"\r\n            [disabled]=\"!submitComplianceEnabled\"\r\n            (click)=\"\r\n              saveStatusForCompliance(\r\n                'presentor',\r\n                'submit',\r\n                'SUBMITTED_DOCUMENT_FOR_COMPLIANCE'\r\n              )\r\n            \"\r\n          >\r\n            <i class=\"material-icons color__white\">task_alt</i> SUBMIT FOR\r\n            COMPLIANCE\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div\r\n        class=\"row\"\r\n        *ngIf=\"\r\n          isEvaluator &&\r\n          s1Application.internalStatus == 'SUBMITTED_DOCUMENT_FOR_COMPLIANCE'\r\n        \"\r\n      >\r\n        <div class=\"col-md-12\">\r\n          <button\r\n            mat-raised-button\r\n            class=\"button-red\"\r\n            [disabled]=\"\r\n              s1Application?.company?.status === 'FOR_APPROVAL' ||\r\n              s1Application?.brand?.status === 'FOR_APPROVAL' ||\r\n              s1Application?.product?.status === 'FOR_APPROVAL'\r\n            \"\r\n            (click)=\"\r\n              saveStatusForCompliance(\r\n                'encoder',\r\n                'verify',\r\n                'COMPLIANCE_DOCUMENT_VERIFIED_BY_ENCODER'\r\n              )\r\n            \"\r\n          >\r\n            <i class=\"material-icons color__white\">verified</i> FORWARD TO AD\r\n            SPECIALIST\r\n          </button>\r\n          &nbsp;\r\n          <button\r\n            mat-raised-button\r\n            class=\"button-red\"\r\n            (click)=\"rejectDisapprovedModal()\"\r\n          >\r\n            <!-- (click)=\"rejectDisapprovedModal('encoder','reject','S1_APPLICATION_REJECTED')\" -->\r\n            <i class=\"material-icons color__white\">unpublished</i> REJECT\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div\r\n        class=\"row\"\r\n        *ngIf=\"\r\n          isAdSpecialist &&\r\n          (s1Application?.internalStatus ==\r\n            'COMPLIANCE_DOCUMENT_VERIFIED_BY_ENCODER' ||\r\n            s1Application?.internalStatus ==\r\n              'COMPLIANCE_DOCUMENT_VERIFIED_BY_AD_SPE')\r\n        \"\r\n      >\r\n        <div class=\"col-md-12\">\r\n          <button\r\n            mat-raised-button\r\n            class=\"button-red\"\r\n            (click)=\"\r\n              saveStatusForCompliance(\r\n                'ad-specialist',\r\n                'verify',\r\n                'COMPLIANCE_DOCUMENT_VERIFIED_BY_AD_SPE'\r\n              )\r\n            \"\r\n          >\r\n            <i class=\"material-icons color__white\">verified</i> FORWARD TO\r\n            SCREENER\r\n          </button>\r\n          <ng-template\r\n            [ngTemplateOutlet]=\"reAssignAdSpecialistTemp\"\r\n          ></ng-template>\r\n        </div>\r\n      </div>\r\n\r\n      <div\r\n        class=\"row\"\r\n        *ngIf=\"\r\n          isScreener &&\r\n          s1Application?.internalStatus ==\r\n            'COMPLIANCE_DOCUMENT_VERIFIED_BY_AD_SPE'\r\n        \"\r\n      >\r\n        <div class=\"col-md-12\">\r\n          <button\r\n            mat-raised-button\r\n            class=\"button-red\"\r\n            (click)=\"\r\n              saveStatusForCompliance(\r\n                'screener',\r\n                'verify',\r\n                'COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER'\r\n              )\r\n            \"\r\n          >\r\n            <i class=\"material-icons color__white\">fact_check</i> SCREENED\r\n          </button>\r\n          <button\r\n            mat-raised-button\r\n            class=\"button-red\"\r\n            (click)=\"\r\n              returnTo('ADSPE', 'COMPLIANCE_DOCUMENT_VERIFIED_BY_ENCODER')\r\n            \"\r\n            [disabled]=\"\"\r\n          >\r\n            <i class=\"material-icons color__white\">assignment_return</i>\r\n            &nbsp;RETURN TO AD SPECIALIST\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- //////////////////////////////////////// REVISION //////////////////////////////////////////////////////////// -->\r\n      <div\r\n        class=\"row\"\r\n        *ngIf=\"\r\n          s1Application?.revisionNo !== 2 &&\r\n          s1Application?.submissionType === 'ORIGINAL' &&\r\n          !s1Application?.hasOngoingRevision &&\r\n          !s1Application?.hasOngoingCompliance &&\r\n          !s1Application?.appliedS2 &&\r\n          isApplicant &&\r\n          (s1Application?.internalStatus === 'S1_APPLICATION_REVIEWED' ||\r\n            s1Application?.internalStatus ==\r\n              'COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER') &&\r\n          (s1Application?.decisionStatus == 'APPROVED' ||\r\n            s1Application?.decisionStatus == 'APPROVED W/ CAUTION')\r\n        \"\r\n      >\r\n        <b>\r\n          <br />\r\n          <b class=\"material-icons info-msg\">error_outline</b> Applicant can\r\n          submit Approved S1 Form for Revision Request with revision letter, new\r\n          main document, and new supporting document (if needed).\r\n        </b>\r\n        <div class=\"col-md-12\">\r\n          <br />\r\n          <button\r\n            mat-raised-button\r\n            class=\"button-red\"\r\n            (click)=\"\r\n              saveStatusRevision('presentor', 'submit', 'SUBMITTED_REVISION')\r\n            \"\r\n            [disabled]=\"\r\n              !s1Application?.revisionLetterAttachmentReference &&\r\n              !attachmentDocuments[2]?.revisionLetterAttachmentReference\r\n            \"\r\n          >\r\n            <i class=\"material-icons color__white\">task_alt</i> SUBMIT REVISION\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div\r\n        class=\"row\"\r\n        *ngIf=\"\r\n          isEvaluator && s1Application.internalStatus == 'SUBMITTED_REVISION'\r\n        \"\r\n      >\r\n        <div class=\"col-md-12\">\r\n          <button\r\n            mat-raised-button\r\n            class=\"button-red\"\r\n            [disabled]=\"\r\n              s1Application?.company?.status === 'FOR_APPROVAL' ||\r\n              s1Application?.brand?.status === 'FOR_APPROVAL' ||\r\n              s1Application?.product?.status === 'FOR_APPROVAL'\r\n            \"\r\n            (click)=\"\r\n              saveStatusRevision(\r\n                'encoder',\r\n                'verify',\r\n                'REVISION_VERIFIED_BY_ENCODER'\r\n              )\r\n            \"\r\n          >\r\n            <i class=\"material-icons color__white\">verified</i> FORWARD TO AD\r\n            SPECIALIST\r\n          </button>\r\n          &nbsp;\r\n          <button\r\n            mat-raised-button\r\n            class=\"button-red\"\r\n            (click)=\"rejectDisapprovedModal()\"\r\n          >\r\n            <!-- (click)=\"rejectDisapprovedModal('encoder','reject','S1_APPLICATION_REJECTED')\" -->\r\n            <i class=\"material-icons color__white\">unpublished</i> REJECT\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div\r\n        class=\"row\"\r\n        *ngIf=\"\r\n          isAdSpecialist &&\r\n          (s1Application.internalStatus == 'REVISION_VERIFIED_BY_ENCODER' ||\r\n            s1Application?.internalStatus == 'REVISION_VERIFIED_BY_AD_SPE')\r\n        \"\r\n      >\r\n        <div class=\"col-md-12\">\r\n          <button\r\n            mat-raised-button\r\n            class=\"button-red\"\r\n            (click)=\"\r\n              saveStatusRevision(\r\n                'ad-specialist',\r\n                'verify',\r\n                'REVISION_VERIFIED_BY_AD_SPE'\r\n              )\r\n            \"\r\n          >\r\n            <i class=\"material-icons color__white\">verified</i> FORWARD TO\r\n            SCREENER\r\n          </button>\r\n          <ng-template\r\n            [ngTemplateOutlet]=\"reAssignAdSpecialistTemp\"\r\n          ></ng-template>\r\n          <!--  &nbsp;\r\n          <button mat-raised-button class=\"button-red\"\r\n            (click)=\"saveStatus('ad-specialist','reject','S1_APPLICATION_REJECTED')\">\r\n            <i class=\"material-icons color__white\">unpublished</i> REJECT\r\n          </button> -->\r\n        </div>\r\n      </div>\r\n\r\n      <div\r\n        class=\"row\"\r\n        *ngIf=\"\r\n          isScreener &&\r\n          s1Application.internalStatus == 'REVISION_VERIFIED_BY_AD_SPE'\r\n        \"\r\n      >\r\n        <div class=\"col-md-12\">\r\n          <button\r\n            mat-raised-button\r\n            class=\"button-red\"\r\n            (click)=\"\r\n              saveStatusRevision('screener', 'verify', 'REVISION_SCREENED')\r\n            \"\r\n          >\r\n            <i class=\"material-icons color__white\">fact_check</i> SCREENED\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</form>\r\n<!-- </form> -->\r\n\r\n<ng-template #reAssignAdSpecialistTemp>\r\n  <button\r\n    mat-raised-button\r\n    class=\"button-red\"\r\n    *ngIf=\"isAdSpecialist\"\r\n    (click)=\"reassignAdSpecialist()\"\r\n    [disabled]=\"buttonDisabled\"\r\n    [hidden]=\"s1Application?.formType === 'MULTIPLE'\"\r\n  >\r\n    <i class=\"material-icons color__white\">verified</i> RE-ASSIGN AD SPECIALIST\r\n  </button>\r\n</ng-template>\r\n","import { Component, Inject, OnInit, Optional } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { Company, S1Application } from '@models';\r\nimport { ApiService, DataStorageService, SweetAlertService } from '@services';\r\nimport { ENDPOINTS, ROLES } from '@shared';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-update-special-application',\r\n  templateUrl: './update-special-application.component.html',\r\n  styleUrls: ['./update-special-application.component.scss']\r\n})\r\nexport class UpdateSpecialApplicationComponent implements OnInit {\r\n\r\n  company = new Company();\r\n  s1Application = new S1Application();\r\n\r\n  currentUser: any;\r\n  currentUserRole: any;\r\n\r\n  isAscUser = false;\r\n  isDisableFieldOnUpdate = true;\r\n\r\n  formType = 'INDIVIDUAL';\r\n\r\n  ascUserRoleList = [...ROLES.filter((role: any) => role.ascUser === true).map((role: any) => role.role)];\r\n\r\n  constructor(\r\n    private apiService: ApiService,\r\n    private dataStorage: DataStorageService,\r\n    private sweetAlertService: SweetAlertService,\r\n    private router: Router,\r\n    @Optional() public dialogRef: MatDialogRef<UpdateSpecialApplicationComponent>,\r\n    @Optional() @Inject(MAT_DIALOG_DATA) public data: any,\r\n  ) {\r\n    if (data) {\r\n      this.s1Application = data;\r\n      this.s1Application.submissionDate = data.submissionDate;\r\n      this.s1Application.formType = this.formType;\r\n\r\n\r\n      // Client Info\r\n      // this.s1Application.company = this.multipleS1Application.company;\r\n      // this.company = this.multipleS1Application.company;\r\n      // this.s1Application.membersAffiliation = this.multipleS1Application.membersAffiliation;\r\n      // this.s1Application.brand = this.multipleS1Application.brand;\r\n    }\r\n\r\n\r\n\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.currentUser = this.dataStorage.getUserAccount();\r\n    this.currentUserRole = this.currentUser.userRole.name;\r\n    this.isAscUser = this.ascUserRoleList.includes(this.dataStorage.getUserRole());\r\n  }\r\n\r\n  onApproveOrDisapprove(status = 'APPROVED'): void {\r\n    const displayStatus = status === 'APPROVED' ? 'approve' : 'disapprove';\r\n    Swal.fire({\r\n      text: `Are you sure you want to ${displayStatus} this application?`,\r\n      icon: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Confirm'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        const endpointExtension = status === 'APPROVED' ? '/approve' : '/disapprove';\r\n        // this.s1Application.actionDate = new Date();\r\n        this.s1Application.actionBy = this.currentUser.username;\r\n        this.apiService.save(`${ENDPOINTS.applicationRequests}${endpointExtension}/${this.s1Application.id}`, this.s1Application).subscribe(\r\n          (res: any) => {\r\n            this.sweetAlertService.customSuccessMessage(`Application successfully ${status.toLowerCase()}.`);\r\n          this.router.navigate(['asc/page/application/s1/special']);\r\n          }, (err: any) => {\r\n            console.log(err);\r\n          }, () => {\r\n            this.dialogRef.close(this.s1Application);\r\n          }\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  updateSpecialApplication(): void {\r\n    // TO DO\r\n    // will only redirect to add new S1 application\r\n    // saving or updating is in add-s1-application.component.ts\r\n    this.dialogRef.close();\r\n    this.router.navigate(['asc/page/application/s1/add']);\r\n  }\r\n\r\n}\r\n","<form>\r\n  <div class=\"container-fluid\">\r\n    <div class=\"row title\">\r\n      <div class=\"col-md-12\">\r\n        <table>\r\n          <tr>\r\n            <td *ngIf=\"(s1Application?.status!=undefined&&!isAscUser)||isAscUser\">\r\n              <span>\r\n                Status:\r\n              </span>\r\n            </td>\r\n            <td *ngIf=\"(s1Application?.status !== undefined && !isAscUser) || isAscUser\">\r\n              <span *ngIf=\"s1Application?.status !== undefined && !isAscUser\">\r\n                <b>{{s1Application?.status?.replaceAll('_',' ') | uppercase}}</b>\r\n              </span>\r\n              <span *ngIf=\"isAscUser\">\r\n                <b>{{s1Application?.status?.replaceAll('_',' ') | uppercase}}</b>\r\n              </span>\r\n            </td>\r\n            <td class=\"no-border\">\r\n              <button\r\n                class=\"button-right button-red\"\r\n                mat-raised-button\r\n                (click)=\"dialogRef.close()\"\r\n              >\r\n                <i class=\"material-icons color__white\">list</i> VIEW APPLICATIONS\r\n              </button>\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td class=\"no-border\"></td>\r\n          </tr>\r\n        </table>\r\n\r\n        <hr />\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"row\"><br /></div>\r\n    <div class=\"row\">\r\n      <mat-form-field class=\"col-md-6\" appearance=\"outline\">\r\n        <mat-label>Form Type</mat-label>\r\n        <input matInput [value]=\"formType\" readonly />\r\n      </mat-form-field>\r\n\r\n      <mat-form-field class=\"col-md-6\" appearance=\"outline\">\r\n        <mat-label>Application Type</mat-label>\r\n        <input matInput [value]=\"s1Application?.applicationType?.description\" readonly/>\r\n      </mat-form-field>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n      <mat-accordion class=\"headers-align\" multi>\r\n        <mat-expansion-panel\r\n          [expanded]=\"\r\n            (currentUser?.userRole?.name == 'ROLE_APPLICANT' &&\r\n              s1Application?.internalStatus != 'SAVED') ||\r\n            s1Application?.internalStatus == undefined\r\n              ? true\r\n              : false\r\n          \"\r\n          *ngIf=\"\r\n            (currentUser?.userRole?.name == 'ROLE_APPLICANT' &&\r\n              s1Application?.internalStatus == 'SAVED') ||\r\n            currentUser?.userRole?.name != 'ROLE_APPLICANT' ||\r\n            s1Application?.internalStatus == undefined\r\n          \"\r\n        >\r\n          <mat-expansion-panel-header>\r\n            <mat-panel-title>\r\n              <i class=\"material-icons\">label_important</i> &nbsp;Initial\r\n              Information\r\n            </mat-panel-title>\r\n          </mat-expansion-panel-header>\r\n          <br />\r\n\r\n          <app-client-information\r\n            [s1Application]=\"s1Application\"\r\n            [isAscUser]=\"isAscUser\"\r\n            [isDisableFieldOnUpdate]=\"isDisableFieldOnUpdate\"\r\n            [company]=\"company\"\r\n          ></app-client-information>\r\n\r\n\r\n          <div class=\"row\">\r\n            <mat-form-field class=\"col-md-6\" appearance=\"outline\">\r\n              <mat-label>Ad Title</mat-label>\r\n              <input matInput [value]=\"s1Application?.adTitle\" readonly />\r\n            </mat-form-field>\r\n\r\n            <mat-form-field class=\"col-md-6\" appearance=\"outline\">\r\n              <mat-label>Tag Line</mat-label>\r\n              <input matInput [value]=\"s1Application?.tagLine\" readonly />\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"outline\" class=\"col-md-6\">\r\n              <mat-label>Date of Submission</mat-label>\r\n              <input matInput placeholder=\"Date\" readonly\r\n                [value]=\"s1Application?.submissionDate | date: 'MMMM d, y'\"\r\n                name=\"submissionDate\" *ngIf=\"s1Application?.status !== 'DISAPPROVED'\"/>\r\n                <input matInput placeholder=\"Date\" readonly\r\n                  value=\"N/A - Request was disapproved\"\r\n                  name=\"submissionDate\" *ngIf=\"s1Application?.status === 'DISAPPROVED'\"/>\r\n            </mat-form-field>\r\n          </div>\r\n        </mat-expansion-panel>\r\n\r\n        <!-- FOR Admin Users only -->\r\n        <mat-expansion-panel *ngIf=\"currentUser?.userRole?.name === 'ROLE_ADMIN' || currentUser?.userRole?.name === 'ROLE_SUPER_ADMIN' \">\r\n          <mat-expansion-panel-header>\r\n            <mat-panel-title>\r\n              <i class=\"material-icons\">label_important</i> &nbsp;Presentor Information\r\n            </mat-panel-title>\r\n            <mat-panel-description>\r\n              Personal Details\r\n              <i class=\"material-icons\">person</i>\r\n            </mat-panel-description>\r\n          </mat-expansion-panel-header>\r\n\r\n          <br>\r\n          <div class=\"row\">\r\n            <div class=\"row\">\r\n              <!-- <mat-form-field class=\"col-md-4\" appearance=\"outline\">\r\n                <mat-label>Membership Affiliation</mat-label>\r\n                <input matInput [value]=\"s1Application?.company?.membersAffiliation?.description\" readonly>\r\n              </mat-form-field> -->\r\n              <mat-form-field class=\"col-md-7\" appearance=\"outline\">\r\n                <mat-label>Company Name</mat-label>\r\n                <input matInput [value]=\"s1Application?.company?.companyName\" readonly>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"row\"><br></div>\r\n\r\n            <div class=\"row\">\r\n              <mat-form-field class=\"col-md-11\" appearance=\"outline\">\r\n                <mat-label>Address</mat-label>\r\n                <input matInput [value]=\"s1Application?.company?.completeAddress\" readonly>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"row\"><br></div>\r\n\r\n            <div class=\"row\">\r\n              <mat-form-field class=\"col-md-8\" appearance=\"outline\" *ngIf=\"s1Application.id!= null\">\r\n                <mat-label>Name of Applicant</mat-label>\r\n                <input matInput [value]=\"s1Application?.applicationOwner?.firstName+' '+s1Application?.applicationOwner?.lastName\" readonly>\r\n              </mat-form-field>\r\n\r\n              <!-- <mat-form-field class=\"col-md-8\" appearance=\"outline\" *ngIf=\"currentUser?.userRole?.name =='ROLE_ENCODER' && s1Application.id!= null\">\r\n                <mat-label>Name of Applicant</mat-label>\r\n                <input matInput [value]=\"s1Application?.firstName+' '+s1Application?.lastName\" readonly>\r\n              </mat-form-field> -->\r\n\r\n            </div>\r\n\r\n            <div class=\"row\"><br></div>\r\n\r\n            <div class=\"row\">\r\n              <mat-form-field class=\"col-md-4\" appearance=\"outline\" *ngIf=\"s1Application.id!= null\">\r\n                <mat-label>Mobile Number</mat-label>\r\n                <input matInput [value]=\"s1Application?.applicationOwner?.mobileNumber\" readonly>\r\n              </mat-form-field>\r\n              <mat-form-field class=\"col-md-3\" appearance=\"outline\" *ngIf=\"s1Application.id!= null\">\r\n                <mat-label>Telephone Number</mat-label>\r\n                <input matInput [value]=\"s1Application?.company?.companyTelephoneNo\" readonly>\r\n              </mat-form-field>\r\n              <mat-form-field class=\"col-md-4\" appearance=\"outline\" *ngIf=\"s1Application.id!= null\">\r\n                <mat-label>Email Address</mat-label>\r\n                <input matInput [value]=\"s1Application?.applicationOwner?.username\" readonly>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n          </div>\r\n        </mat-expansion-panel>\r\n      </mat-accordion>\r\n\r\n      <div class=\"row\"><br /></div>\r\n      <hr />\r\n\r\n      <br />\r\n      <!-- //////////////////////////////////////// ACTION BUTTONS //////////////////////////////////////////////////////////// -->\r\n      <div\r\n        class=\"row\"\r\n        *ngIf=\"s1Application?.status === 'FOR_APPROVAL' && isAscUser\"\r\n      >\r\n        <div mat-dialog-actions>\r\n          <div class=\"dialog-button-content\" align=\"end\">\r\n            <button class=\"confirm\" (click)=\"onApproveOrDisapprove()\">\r\n              <i class=\"material-icons color__white\">thumb_up_alt</i> Approve\r\n            </button>\r\n            <button class=\"warn\" (click)=\"onApproveOrDisapprove('DISAPPROVED')\">\r\n              <i class=\"material-icons color__white\">thumb_down_alt</i> Disapprove\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</form>\r\n","// import { WebSocketService } from './../../../../../core/services/socket/websocket.service';\r\nimport { HttpErrorResponse } from \"@angular/common/http\";\r\nimport { BadgeCounnter } from \"./../../../../../core/models/counter\";\r\nimport { Component, Inject, OnInit, ViewChild, OnDestroy } from \"@angular/core\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTable, MatTableDataSource } from \"@angular/material/table\";\r\nimport { S1Application, S2Application } from \"@models\";\r\nimport {\r\n  PAYMENT_STATUS,\r\n  ENDPOINTS,\r\n  APPLICATION_STATUS,\r\n  FORM_STATUS,\r\n  SUBMISSION_TYPE,\r\n  USER_ROLES,\r\n  TYPE_OF_MEDIUM,\r\n  ACTION_STATUS,\r\n} from \"@shared\";\r\nimport { ApiService, DataStorageService, SweetAlertService } from \"@services\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport Swal from \"sweetalert2\";\r\nimport { S1FormTypeComponent } from \"app/modules/fragments/s1-form-type/s1-form-type.component\";\r\nimport {\r\n  MatDialog,\r\n  MatDialogRef,\r\n  MAT_DIALOG_DATA,\r\n} from \"@angular/material/dialog\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { MultipleApplication } from \"app/core/models/multiple-application.model\";\r\nimport { UpdateMultipleApplicationComponent } from \"app/modules/fragments/update-multiple-application/update-multiple-application.component\";\r\nimport { UpdateSpecialApplicationComponent } from \"app/modules/fragments/update-special-application/update-special-application.component\";\r\nimport { ApplicationRequest } from \"app/core/models/application-request.model\";\r\nimport { RequestForSpecialClearingComponent } from \"app/modules/fragments/request-for-special-clearing/request-for-special-clearing.component\";\r\nimport { TypeOfExecution } from \"app/core/models/type-of-execution.model\";\r\nimport { CommonServices } from \"app/core/services/common-services.service\";\r\n\r\nimport { Subscription, timer, merge } from \"rxjs\";\r\nimport { mergeMap } from \"rxjs/operators\";\r\nimport { WebSocketService } from \"app/core/services/socket/websocket.service\";\r\n\r\n@Component({\r\n  selector: \"app-list-s1-application\",\r\n  templateUrl: \"./list-s1-application.component.html\",\r\n  styleUrls: [\"./list-s1-application.component.scss\"],\r\n})\r\nexport class ListS1ApplicationComponent implements OnInit, OnDestroy {\r\n  @ViewChild(MatPaginator, { static: false }) paginatorFalse: MatPaginator;\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  pageSize = 10;\r\n  pageNo = 0;\r\n  pageSizeOptions: number[] = [10, 20, 50];\r\n  @ViewChild(MatSort, { static: false }) sort: MatSort;\r\n  @ViewChild(MatTable, { static: false }) table: MatTable<S1Application>;\r\n\r\n  // individual s1 application list\r\n  dataSource: MatTableDataSource<S1Application>;\r\n  displayedColumns = [];\r\n  totalItems = 0;\r\n  totalPages = 0;\r\n  currentPage = 1; // reuse\r\n  // currentSize = 100;\r\n\r\n  badgeCounter: BadgeCounnter = new BadgeCounnter();\r\n\r\n  returnedApps = [];\r\n  click = 0;\r\n  timeLeft: number = 60;\r\n  interval: any;\r\n  refreshButtonEnabled = true;\r\n  timerDisplay: any;\r\n  isTimerValueDisplay = false;\r\n  // , 'ascStatus', 'awaitingActionFrom'];\r\n\r\n  // multiple s1 application list variables\r\n  multipleApplicationList = [];\r\n  multipleApplicationDataSource: MatTableDataSource<MultipleApplication>;\r\n  multipleApplicationDisplayedColumns = [\r\n    \"adTitle\",\r\n    \"typeOfApplication\",\r\n    \"companyName\",\r\n    \"brand\",\r\n    \"product\",\r\n    \"status\",\r\n  ];\r\n  multipleTotalItems = 0;\r\n\r\n  // end multiple application list variables\r\n\r\n  // special s1 application list variables\r\n  specialApplicationList = [];\r\n  specialApplicationDataSource: MatTableDataSource<S1Application>;\r\n  specialApplicationDisplayedColumns = [\r\n    \"adTitle\",\r\n    \"typeOfApplication\",\r\n    \"companyName\",\r\n    \"brand\",\r\n    \"status\",\r\n  ];\r\n  specialTotalItems = 0;\r\n  // end special application list variables\r\n\r\n  // assigned s1 application list variables\r\n  assignedApplicationList = [];\r\n  assignedApplicationDataSource: MatTableDataSource<S1Application>;\r\n  assignedApplicationDisplayedColumns = [\r\n    \"referenceCode\",\r\n    \"adTitle\",\r\n    \"typeOfApplication\",\r\n    \"companyName\",\r\n    \"brand\",\r\n    \"product\",\r\n    \"status\",\r\n    \"internalStatus\",\r\n    \"icon\",\r\n  ]; // end assigned application list variables\r\n\r\n  forReleaseApplicationsList = [];\r\n  forReleaseTotalItems = 0;\r\n  forReleaseApplicationDataSource: MatTableDataSource<S1Application>;\r\n  forReleaseApplicationDisplayedColumns = [\r\n    \"referenceCode\",\r\n    \"typeOfApplication\",\r\n    \"companyName\",\r\n    \"brand\",\r\n    \"product\",\r\n    \"typeOfMedium\",\r\n    \"status\",\r\n    \"internalStatus\",\r\n    \"decisionStatus\",\r\n  ];\r\n  applicationList = [];\r\n  currentUser: any;\r\n  viewApplicationType: string;\r\n  applicationTypeTitle: string;\r\n  submissionType = SUBMISSION_TYPE.ORIGINAL;\r\n  originalTabDataCount = 0;\r\n  revisionTabDataCount = 0;\r\n  complianceTabDataCount = 0;\r\n  decisionCommentTabDataCount = 0;\r\n  releasedAppealTabDataCount = 0;\r\n\r\n  isSuperAdmin = false;\r\n  isAdmin = false;\r\n  isAccounting = false;\r\n  isApplicant = false;\r\n  isScreener = false;\r\n  isReviewer = false;\r\n  isAdSpecialist = false;\r\n  isEvaluator = false;\r\n\r\n  s1Application = new S1Application();\r\n  s2Application = new S2Application();\r\n  multipleS1Application = new MultipleApplication();\r\n  applicationRequest = new ApplicationRequest();\r\n  s1ApplicationTitle = \"S1 APPLICATION\";\r\n  displayedContent = \"ORIGINAL\";\r\n  paymentStatus = PAYMENT_STATUS;\r\n  retrieveReassignLength: number;\r\n\r\n  counterObservable: Subscription;\r\n\r\n  constructor(\r\n    private apiService: ApiService,\r\n    private dataStorage: DataStorageService,\r\n    private router: Router,\r\n    private sweetAlertService: SweetAlertService,\r\n    private dialog: MatDialog,\r\n    private spinner: NgxSpinnerService,\r\n    private route: ActivatedRoute,\r\n    private commonService: CommonServices,\r\n    private webSocketService: WebSocketService\r\n  ) {}\r\n  ngOnDestroy(): void {\r\n    // if(this.counterObservable){\r\n    // this.counterObservable.unsubscribe();\r\n    // }\r\n  }\r\n  ngOnInit(): void {\r\n    this.webSocketService.listen(\"broadcast\").subscribe((res) => {\r\n      console.log(\"test\");\r\n      this.apiService\r\n        .findAll(ENDPOINTS.badgeCountByAscUser + this.currentUser.id)\r\n        .subscribe((res: any) => {\r\n          this.badgeCounter = res;\r\n          console.log(this.badgeCounter);\r\n        });\r\n    });\r\n    // this.counterObservable = merge(timer(0, 5000))\r\n    // .pipe(mergeMap(_ => this.apiService.findAll(ENDPOINTS.badgeCountByAscUser + this.currentUser.id)))\r\n    // .subscribe(\r\n    //   (res: BadgeCounnter) => {\r\n    //     this.badgeCounter = res;\r\n    //   },\r\n    //   (err: HttpErrorResponse) => {\r\n    //     console.log('Error:', err);\r\n    //   }\r\n    // );\r\n    this.currentUser = this.dataStorage.getUserAccount();\r\n    this.viewApplicationType = this.route.parent.snapshot.url[0].path;\r\n    if (this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT) {\r\n      this.displayedColumns = [\r\n        \"referenceCode\",\r\n        \"typeOfApplication\",\r\n        \"companyName\",\r\n        \"brand\",\r\n        \"typeOfMedium\",\r\n        \"status\",\r\n        \"paymentStatus\",\r\n        \"icon\",\r\n      ];\r\n    } else if (\r\n      this.currentUser.userRole.name === USER_ROLES.ROLE_SCREENER ||\r\n      this.currentUser.userRole.name === USER_ROLES.ROLE_REVIEWER\r\n    ) {\r\n      this.displayedColumns = [\r\n        \"referenceCode\",\r\n        \"typeOfApplication\",\r\n        \"companyName\",\r\n        \"brand\",\r\n        \"typeOfMedium\",\r\n        \"status\",\r\n        \"paymentStatus\",\r\n        \"internalStatus\",\r\n        \"icon\",\r\n      ];\r\n    } else if (\r\n      this.currentUser.userRole.name === USER_ROLES.ROLE_SUPER_ADMIN ||\r\n      this.currentUser.userRole.name === USER_ROLES.ROLE_ADMIN ||\r\n      this.currentUser.userRole.name === USER_ROLES.ROLE_ENCODER\r\n    ) {\r\n      this.displayedColumns = [\r\n        \"referenceCode\",\r\n        \"typeOfApplication\",\r\n        \"companyName\",\r\n        \"brand\",\r\n        \"typeOfMedium\",\r\n        \"status\",\r\n        \"paymentStatus\",\r\n        \"internalStatus\",\r\n      ];\r\n    } else if (\r\n      this.currentUser.userRole.name === USER_ROLES.ROLE_AD_SPECIALIST\r\n    ) {\r\n      this.displayedColumns = [\r\n        \"referenceCode\",\r\n        \"typeOfApplication\",\r\n        \"companyName\",\r\n        \"brand\",\r\n        \"product\",\r\n        \"typeOfMedium\",\r\n        \"status\",\r\n        \"paymentStatus\",\r\n        \"internalStatus\",\r\n        \"icon\",\r\n      ];\r\n    }\r\n    this.getList();\r\n    this.getListCounts();\r\n    this.initUserRole();\r\n    this.refreshApplicationBadgeCount();\r\n  }\r\n\r\n  parseInternalStatus(internalStatus: string, actionBy, element?) {\r\n    let user: string = `${actionBy.firstName} ${actionBy.lastName}`;\r\n    if (internalStatus.match(\"SUBMITTED\")) {\r\n      return `SUBMITTED BY: ${user}`;\r\n    } else if (internalStatus.match(\"REVIEWED\")) return `REVIEWED BY: ${user}`;\r\n    else if (internalStatus.match(\"VERIFIED\")) return `VERIFIED BY: ${user}`;\r\n    else if (internalStatus.match(\"SCREENED\")) return `SCREENED BY: ${user}`;\r\n    else if (internalStatus.match(\"REJECTED\"))\r\n      return `REJECTED BY: ${element.assignedUser.firstName} ${element.assignedUser.lastName}`;\r\n    // return internalStatus;\r\n  }\r\n\r\n  refreshApplicationBadgeCount(): void {\r\n    this.commonService.sendClickEvent();\r\n  }\r\n\r\n  formatTextPayment(status: string): string {\r\n    return status.replace(/_/g, \" \");\r\n  }\r\n\r\n  initUserRole() {\r\n    if (this.currentUser.userRole.name === USER_ROLES.ROLE_SUPER_ADMIN) {\r\n      this.isSuperAdmin = true;\r\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_ADMIN) {\r\n      this.isAdmin = true;\r\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_ACCOUNTING) {\r\n      this.isAccounting = true;\r\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT) {\r\n      this.isApplicant = true;\r\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_SCREENER) {\r\n      this.isScreener = true;\r\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_REVIEWER) {\r\n      this.isReviewer = true;\r\n    } else if (\r\n      this.currentUser.userRole.name === USER_ROLES.ROLE_AD_SPECIALIST\r\n    ) {\r\n      this.isAdSpecialist = true;\r\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_ENCODER) {\r\n      this.isEvaluator = true;\r\n    }\r\n  }\r\n\r\n  getListCounts(): void {\r\n    let endpoint;\r\n    let screenedCount: number = 0;\r\n    if (this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT) {\r\n      endpoint = ENDPOINTS.badgeCountByApplicationOwner;\r\n    } else {\r\n      endpoint = ENDPOINTS.badgeCountByAscUser;\r\n    }\r\n    this.apiService\r\n      .findAll(\r\n        ENDPOINTS.applicationForm +\r\n          `/custom/search?assignedScreenerId=${this.currentUser.id}&page=${this.currentPage}&size=${this.pageSize}`\r\n      )\r\n      .subscribe((response) => {\r\n        screenedCount = response.totalItems;\r\n      });\r\n    this.apiService\r\n      .findAll(endpoint + this.currentUser.id)\r\n      .subscribe((res: any) => {\r\n        this.badgeCounter = res;\r\n        this.apiService\r\n          .findAll(\r\n            ENDPOINTS.applicationForm +\r\n              `/custom/search?assignedScreenerId=${this.currentUser.id}&page=${this.currentPage}&size=${this.pageSize}`\r\n          )\r\n          .subscribe((response) => {\r\n            this.badgeCounter.screenedApplications = response.totalItems;\r\n          });\r\n      });\r\n  }\r\n\r\n  getList(submissionType = \"ORIGINAL\") {\r\n    this.currentPage = this.pageNo;\r\n    this.currentPage++;\r\n    if (this.currentPage === 0) this.currentPage++;\r\n\r\n    if (this.viewApplicationType === \"multiple\") {\r\n      this.applicationTypeTitle = \"MULTIPLE\";\r\n      this.getMultipleS1ApplicationList();\r\n    } else if (this.viewApplicationType === \"special\") {\r\n      this.applicationTypeTitle = \"SPECIAL\";\r\n      this.getSpecialS1ApplicationList();\r\n    } else if (this.viewApplicationType === \"assigned-applications\") {\r\n      this.applicationTypeTitle = \"Assigned Applications\";\r\n      this.getAssignAppFormBy();\r\n    } else if (this.viewApplicationType === \"for-release\") {\r\n      this.applicationTypeTitle = \"For Release Applications\";\r\n      this.getForReleaseApplicationList();\r\n    } else if (this.viewApplicationType === \"released\") {\r\n      this.applicationTypeTitle = \"Released Applications\";\r\n      this.getReleasedApplicationList();\r\n    } else {\r\n      this.applicationTypeTitle = \"INDIVIDUAL\";\r\n      let param = submissionType.toUpperCase();\r\n\r\n      if (\r\n        param === SUBMISSION_TYPE.COMPLIANCE &&\r\n        this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT\r\n      ) {\r\n        param = `&decisionStatus=INCOMPLETE&complianceForm=true`;\r\n      } else if (\r\n        param === SUBMISSION_TYPE.COMPLIANCE &&\r\n        this.currentUser.userRole.name !== USER_ROLES.ROLE_APPLICANT\r\n      ) {\r\n        param = `&complianceForm=true`;\r\n      } else {\r\n        param = `&submissionType=${param}`;\r\n      }\r\n\r\n      let endpoint = `custom/search?page=${this.currentPage}&size=${this.pageSize}${param}`;\r\n\r\n      if (this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT) {\r\n        endpoint =\r\n          ENDPOINTS.applicationFormPresentor +\r\n          endpoint +\r\n          `&applicationOwnerId=${this.currentUser.id}`;\r\n      } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_ENCODER) {\r\n        endpoint =\r\n          ENDPOINTS.applicationFormEncoder +\r\n          endpoint +\r\n          `&assignedUserId=${this.currentUser.id}`;\r\n      } else if (\r\n        this.currentUser.userRole.name === USER_ROLES.ROLE_AD_SPECIALIST\r\n      ) {\r\n        endpoint =\r\n          ENDPOINTS.applicationFormAdSpecialist +\r\n          endpoint +\r\n          `&assignedUserId=${this.currentUser.id}`;\r\n      } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_SCREENER) {\r\n        if (submissionType === \"ORIGINAL\")\r\n          endpoint =\r\n            ENDPOINTS.applicationFormScreener +\r\n            endpoint +\r\n            `&assignedScreenerId=${this.currentUser.id}`;\r\n        else if (submissionType === \"SCREENED APPLICATIONS\")\r\n          endpoint =\r\n            ENDPOINTS.applicationForm +\r\n            `/custom/search?assignedScreenerId=${this.currentUser.id}&page=${this.currentPage}&size=${this.pageSize}`;\r\n        else if (submissionType === \"REVISION\")\r\n          endpoint = ENDPOINTS.applicationFormScreener + endpoint;\r\n        else if (submissionType === \"COMPLIANCE\")\r\n          endpoint = ENDPOINTS.applicationFormScreener + endpoint;\r\n      } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_REVIEWER) {\r\n        endpoint =\r\n          ENDPOINTS.applicationFormReviewer +\r\n          endpoint +\r\n          `&assignedReviewerId=${this.currentUser.id}`;\r\n      } else if (\r\n        this.currentUser.userRole.name === USER_ROLES.ROLE_ADMIN ||\r\n        this.currentUser.userRole.name === USER_ROLES.ROLE_SUPER_ADMIN\r\n      ) {\r\n        endpoint = ENDPOINTS.applicationFormAdmin + endpoint;\r\n      }\r\n\r\n      this.spinner.show();\r\n      this.apiService.findAll(endpoint).subscribe(\r\n        (res: any) => {\r\n          this.applicationList = res.data;\r\n          this.totalItems = res.totalItems;\r\n          console.log(\"applicationList: \", this.applicationList);\r\n\r\n          this.dataSource = new MatTableDataSource<S1Application>(\r\n            this.applicationList\r\n          );\r\n          // this.dataSource.paginator = this.paginator;\r\n\r\n          setTimeout(() => {\r\n            this.spinner.hide();\r\n          }, 1);\r\n        },\r\n        (err) => {\r\n          setTimeout(() => {\r\n            this.spinner.hide();\r\n          }, 1);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  getScreenedApps() {}\r\n\r\n  showStatus(stats: any): string {\r\n    if (\r\n      stats.paymentStatus !== PAYMENT_STATUS.PAID &&\r\n      stats.actionStatus === ACTION_STATUS.ASSIGN_TO_PRESENTOR\r\n    )\r\n      return \"ON PROCESS\";\r\n    else return stats.externalStatus.replaceAll(\"_\", \" \").toUpperCase();\r\n  }\r\n\r\n  pageEvents(event: any) {\r\n    this.pageSize = event.pageSize;\r\n\r\n    if (event.pageIndex > this.pageNo) {\r\n      this.pageNo++;\r\n    } else {\r\n      this.pageNo--;\r\n    }\r\n\r\n    if (event.pageSize > event.length) {\r\n      this.pageNo = 0;\r\n    }\r\n\r\n    this.getList(this.displayedContent.toUpperCase());\r\n  }\r\n\r\n  setPageSizeOptions(setPageSizeOptionsInput: string) {\r\n    if (setPageSizeOptionsInput) {\r\n      this.pageSizeOptions = setPageSizeOptionsInput\r\n        .split(\",\")\r\n        .map((str) => +str);\r\n    }\r\n  }\r\n\r\n  getMultipleS1ApplicationList(): void {\r\n    let endpoint = \"\";\r\n    const ascEndpoint = `/custom/search?page=${this.currentPage}&size=${this.pageSize}`;\r\n    let assignedASCUser = \"\";\r\n    if (\r\n      this.currentUser.userRole.name === USER_ROLES.ROLE_ADMIN ||\r\n      this.currentUser.userRole.name === USER_ROLES.ROLE_SUPER_ADMIN\r\n    ) {\r\n      endpoint = ENDPOINTS.multipleApplication + ascEndpoint;\r\n    } else {\r\n      if (this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT) {\r\n        assignedASCUser = `&applicationOwnerId=${this.currentUser.id}`;\r\n      } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_ENCODER) {\r\n        assignedASCUser = `&assignedEvaluatorId=${this.currentUser.id}`;\r\n      } else if (\r\n        this.currentUser.userRole.name === USER_ROLES.ROLE_AD_SPECIALIST\r\n      ) {\r\n        assignedASCUser = `&assignedAdSpecialistId=${this.currentUser.id}`;\r\n      } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_SCREENER) {\r\n        assignedASCUser = `&assignedScreenerId=${this.currentUser.id}`;\r\n      } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_REVIEWER) {\r\n        assignedASCUser = `&assignedReviewerId=${this.currentUser.id}`;\r\n      }\r\n      endpoint = ENDPOINTS.multipleApplication + ascEndpoint + assignedASCUser;\r\n    }\r\n    console.log(endpoint);\r\n\r\n    this.apiService.findAll(endpoint).subscribe(\r\n      (res: any) => {\r\n        this.multipleApplicationList = res.data;\r\n        console.log(\"multipleApplicationList: \", res);\r\n        this.multipleTotalItems = res.totalItems;\r\n        this.refreshApplicationBadgeCount();\r\n\r\n        this.multipleApplicationDataSource = new MatTableDataSource<MultipleApplication>(\r\n          this.multipleApplicationList\r\n        );\r\n        this.multipleApplicationDataSource.paginator = this.paginator;\r\n        this.multipleApplicationDataSource.sort = this.sort;\r\n        setTimeout(() => {\r\n          this.spinner.hide();\r\n        }, 1);\r\n      },\r\n      (err) => {\r\n        setTimeout(() => {\r\n          this.spinner.hide();\r\n        }, 1);\r\n      }\r\n    );\r\n  }\r\n\r\n  getSpecialS1ApplicationList(): void {\r\n    if (\r\n      this.currentUser.userRole.name === USER_ROLES.ROLE_ADMIN ||\r\n      this.currentUser.userRole.name === USER_ROLES.ROLE_SUPER_ADMIN\r\n    ) {\r\n      const obj = {\r\n        statuses: [\"FOR_APPROVAL\", \"APPROVED\", \"DISAPPROVED\"],\r\n      };\r\n\r\n      this.apiService\r\n        .save(\r\n          `${ENDPOINTS.s1SpecialApplicationRequestsAdmin}?page=${this.currentPage}&size=${this.pageSize}`,\r\n          obj\r\n        )\r\n        .subscribe(\r\n          (res: any) => {\r\n            this.specialApplicationList = res.data;\r\n            this.specialTotalItems = res.totalItems;\r\n            console.log(\"specialApplicationList: \", res);\r\n            this.refreshApplicationBadgeCount();\r\n\r\n            this.specialApplicationDataSource = new MatTableDataSource<S1Application>(\r\n              this.specialApplicationList\r\n            );\r\n            this.specialApplicationDataSource.paginator = this.paginator;\r\n            this.specialApplicationDataSource.sort = this.sort;\r\n            setTimeout(() => {\r\n              this.spinner.hide();\r\n            }, 1);\r\n          },\r\n          (err) => {\r\n            setTimeout(() => {\r\n              this.spinner.hide();\r\n            }, 1);\r\n          }\r\n        );\r\n    } else {\r\n      const obj = {\r\n        applicationOwnerId: this.currentUser.id,\r\n        statuses: [\"FOR_APPROVAL\", \"APPROVED\", \"DISAPPROVED\"],\r\n      };\r\n\r\n      this.apiService\r\n        .save(\r\n          `${ENDPOINTS.s1SpecialApplicationRequests}?page=${this.currentPage}&size=${this.pageSize}`,\r\n          obj\r\n        )\r\n        .subscribe(\r\n          (res: any) => {\r\n            this.specialApplicationList = res.data;\r\n            this.specialTotalItems = res.totalItems;\r\n            console.log(\"specialApplicationList: \", res);\r\n            this.refreshApplicationBadgeCount();\r\n\r\n            this.specialApplicationDataSource = new MatTableDataSource<S1Application>(\r\n              this.specialApplicationList\r\n            );\r\n            this.specialApplicationDataSource.paginator = this.paginator;\r\n            this.specialApplicationDataSource.sort = this.sort;\r\n            setTimeout(() => {\r\n              this.spinner.hide();\r\n            }, 1);\r\n          },\r\n          (err) => {\r\n            setTimeout(() => {\r\n              this.spinner.hide();\r\n            }, 1);\r\n          }\r\n        );\r\n    }\r\n  }\r\n\r\n  getAssignAppFormBy(): void {\r\n    let endpoint = \"\";\r\n    if (this.currentUser.userRole.name === USER_ROLES.ROLE_AD_SPECIALIST) {\r\n      endpoint =\r\n        ENDPOINTS.applicationForm +\r\n        `/adspe-retrieve-reassign?assignedAdSpecialist_Id=${this.currentUser.id}&page=${this.currentPage}&size=${this.pageSize}`;\r\n    } else {\r\n      endpoint =\r\n        ENDPOINTS.applicationForm +\r\n        `/screener-retrieve-reassign?assignedScreener_Id=${this.currentUser.id}&page=${this.currentPage}&size=${this.pageSize}`;\r\n    }\r\n\r\n    this.spinner.show();\r\n    this.apiService.findAll(endpoint).subscribe(\r\n      (res: any) => {\r\n        this.assignedApplicationList = res.data;\r\n        this.retrieveReassignLength = res.totalItems;\r\n        this.refreshApplicationBadgeCount();\r\n\r\n        this.assignedApplicationDataSource = new MatTableDataSource<S1Application>(\r\n          this.assignedApplicationList\r\n        );\r\n        this.assignedApplicationDataSource.sort = this.sort;\r\n\r\n        setTimeout(() => {\r\n          this.spinner.hide();\r\n        }, 1);\r\n      },\r\n      (err) => {\r\n        setTimeout(() => {\r\n          this.spinner.hide();\r\n        }, 1);\r\n      }\r\n    );\r\n  }\r\n\r\n  getForReleaseApplicationList() {\r\n    let endpoint;\r\n    const param = `&page=${this.currentPage}&size=${this.pageSize}`;\r\n    if (this.currentUser.userRole.name === USER_ROLES.ROLE_AD_SPECIALIST) {\r\n      endpoint =\r\n        ENDPOINTS.getForReleaseApplicationAdSpe +\r\n        `?releaseStatus=FOR_RELEASE&assignedAdSpecialistId=${this.currentUser.id}${param}`;\r\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_REVIEWER) {\r\n      endpoint =\r\n        ENDPOINTS.getForReleaseApplicationsReviewer +\r\n        `?releaseStatus=FOR_RELEASE&assignedReviewerId=${this.currentUser.id}${param}`;\r\n    } else if (\r\n      this.currentUser.userRole.name === USER_ROLES.ROLE_ADMIN ||\r\n      USER_ROLES.ROLE_SUPER_ADMIN\r\n    ) {\r\n      endpoint =\r\n        ENDPOINTS.getAdminSuperAdminForReleaseApplication +\r\n        `/custom/search?releaseStatus=FOR_RELEASE${param}`;\r\n    }\r\n\r\n    this.apiService.findAll(endpoint).subscribe(\r\n      (res: any) => {\r\n        this.forReleaseApplicationsList = res.data;\r\n        this.forReleaseTotalItems = res.totalItems;\r\n        this.refreshApplicationBadgeCount();\r\n\r\n        console.log(\r\n          \"getForReleaseApplicationList: \",\r\n          this.forReleaseApplicationsList\r\n        );\r\n\r\n        this.forReleaseApplicationDataSource = new MatTableDataSource<S1Application>(\r\n          this.forReleaseApplicationsList\r\n        );\r\n        this.forReleaseApplicationDataSource.paginator = this.paginatorFalse;\r\n        this.forReleaseApplicationDataSource.sort = this.sort;\r\n\r\n        setTimeout(() => {\r\n          this.spinner.hide();\r\n        }, 1);\r\n      },\r\n      (err) => {\r\n        setTimeout(() => {\r\n          this.spinner.hide();\r\n        }, 1);\r\n      }\r\n    );\r\n  }\r\n\r\n  getReleasedApplicationList() {\r\n    this.apiService\r\n      .findAll(\r\n        ENDPOINTS.getReleaseApplicationsAdSpe +\r\n          `?page=${this.currentPage}&size=${this.pageSize}`\r\n      )\r\n      .subscribe(\r\n        (res: any) => {\r\n          this.forReleaseApplicationsList = res.data;\r\n          console.log(\r\n            \"getReleasedApplicationList: \",\r\n            this.forReleaseApplicationsList\r\n          );\r\n          this.forReleaseTotalItems = res.totalItems;\r\n          this.refreshApplicationBadgeCount();\r\n\r\n          this.forReleaseApplicationDataSource = new MatTableDataSource<S1Application>(\r\n            this.forReleaseApplicationsList\r\n          );\r\n          this.forReleaseApplicationDataSource.paginator = this.paginatorFalse;\r\n          this.forReleaseApplicationDataSource.sort = this.sort;\r\n          setTimeout(() => {\r\n            this.spinner.hide();\r\n          }, 1);\r\n        },\r\n        (err) => {\r\n          setTimeout(() => {\r\n            this.spinner.hide();\r\n          }, 1);\r\n        }\r\n      );\r\n  }\r\n\r\n  getForDecisionAndComment(displayedContent) {\r\n    let endpoint = \"\";\r\n\r\n    // APPEAL\r\n    if (this.isAdSpecialist) {\r\n      endpoint =\r\n        ENDPOINTS.applicationFormAdSpecialist +\r\n        `custom/search?assignedUserId=${this.currentUser.id}&hasOngoingAppeal=true&page=${this.currentPage}&size=${this.pageSize}&submissionType=ORIGINAL`;\r\n    }\r\n    // RETURN TO SCREENER\r\n    else if (this.isScreener) {\r\n      endpoint =\r\n        ENDPOINTS.s1ApplicationForm +\r\n        `screener/assigned-user-id/${this.currentUser.id}/forwarded-for-decision-and-comment`;\r\n    } else if (this.isReviewer) {\r\n      endpoint =\r\n        ENDPOINTS.s1ApplicationForm +\r\n        `reviewer/assigned-user-id/${this.currentUser.id}/forwarded-for-decision-and-comment`;\r\n    } else if (this.isAdmin || this.isSuperAdmin) {\r\n      if (displayedContent === \"For Appeal\") {\r\n        endpoint =\r\n          ENDPOINTS.applicationFormAdmin +\r\n          `custom/search?hasOngoingAppeal=true&page=${this.currentPage}&size=${this.pageSize}`;\r\n      } else {\r\n        endpoint =\r\n          ENDPOINTS.admin + `/s1/for-decision-comment/reviewer-screener`;\r\n      }\r\n    }\r\n    this.spinner.show();\r\n    this.apiService.findAll(endpoint).subscribe(\r\n      (res: any) => {\r\n        if (res) {\r\n          if (res?.data) {\r\n            this.applicationList = res?.data;\r\n          } else {\r\n            this.applicationList = res?.responseData?.data;\r\n          }\r\n          console.log(displayedContent + \": \", this.applicationList);\r\n          this.refreshApplicationBadgeCount();\r\n\r\n          this.dataSource = new MatTableDataSource<S1Application>(\r\n            this.applicationList\r\n          );\r\n          this.dataSource.paginator = this.paginatorFalse;\r\n          this.dataSource.sort = this.sort;\r\n          setTimeout(() => {\r\n            this.spinner.hide();\r\n          }, 1);\r\n        } else {\r\n          this.applicationList = [];\r\n        }\r\n      },\r\n      (err) => {\r\n        setTimeout(() => {\r\n          this.spinner.hide();\r\n        }, 1);\r\n      }\r\n    );\r\n  }\r\n\r\n  public doFilter = (value: string) => {\r\n    this.dataSource.filter = value.trim().toLocaleLowerCase();\r\n  };\r\n\r\n  public doFilterS1MultipleApplicationList = (value: string) => {\r\n    this.multipleApplicationDataSource.filter = value\r\n      .trim()\r\n      .toLocaleLowerCase();\r\n  };\r\n\r\n  public doFilterSpecialS1ApplicationList = (value: string) => {\r\n    this.specialApplicationDataSource.filter = value.trim().toLocaleLowerCase();\r\n  };\r\n\r\n  public doFilterAssignedS1ApplicationList = (value: string) => {\r\n    this.assignedApplicationDataSource.filter = value\r\n      .trim()\r\n      .toLocaleLowerCase();\r\n  };\r\n\r\n  public doFilterForReleaseApplicationList = (value: string) => {\r\n    this.forReleaseApplicationDataSource.filter = value\r\n      .trim()\r\n      .toLocaleLowerCase();\r\n  };\r\n\r\n  viewApplication(data: any): void {\r\n    this.s1Application = data;\r\n    console.log(\"S1 FORM: \", this.s1Application);\r\n    if (\r\n      this.viewApplicationType === \"released\" ||\r\n      this.viewApplicationType === \"for-release\" ||\r\n      this.viewApplicationType === \"assigned-applications\" ||\r\n      this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT ||\r\n      this.currentUser.userRole.name === USER_ROLES.ROLE_ADMIN ||\r\n      this.currentUser.userRole.name === USER_ROLES.ROLE_SUPER_ADMIN\r\n    ) {\r\n      this.router.navigate([\"asc/page/application/s1/update/\", data.id]);\r\n    } else if (\r\n      data.formStatus === FORM_STATUS.OPEN &&\r\n      this.s1Application.internalStatus !==\r\n        APPLICATION_STATUS.S1_APPLICATION_REJECTED\r\n    ) {\r\n      Swal.fire({\r\n        text:\r\n          \"Are you sure you want to open this application? This application will be LOCKED on your account.\",\r\n        icon: \"question\",\r\n        showCancelButton: true,\r\n        confirmButtonColor: \"#3085d6\",\r\n        cancelButtonColor: \"#d33\",\r\n        confirmButtonText: \"Confirm\",\r\n      }).then((result) => {\r\n        if (result.value) {\r\n          if (this.currentUser.userRole.name === USER_ROLES.ROLE_ENCODER) {\r\n            this.s1Application.assignedEncoder = this.currentUser;\r\n          } else if (\r\n            this.currentUser.userRole.name === USER_ROLES.ROLE_AD_SPECIALIST\r\n          ) {\r\n            this.s1Application.assignedAdSpecialist = this.currentUser;\r\n          } else if (\r\n            this.currentUser.userRole.name === USER_ROLES.ROLE_SCREENER\r\n          ) {\r\n            this.s1Application.assignedScreener = this.currentUser;\r\n          } else if (\r\n            this.currentUser.userRole.name === USER_ROLES.ROLE_REVIEWER\r\n          ) {\r\n            this.s1Application.assignedReviewer = this.currentUser;\r\n          }\r\n          this.s1Application.currentAssignee = this.currentUser.userRole.name;\r\n\r\n          let endpoint = \"\";\r\n          if (this.currentUser.userRole.name === USER_ROLES.ROLE_ENCODER) {\r\n            endpoint = ENDPOINTS.applicationFormEncoder;\r\n          } else {\r\n            endpoint = ENDPOINTS.applicationFormAdSpecialist;\r\n          }\r\n\r\n          this.apiService\r\n            .save(endpoint + ENDPOINTS.takeApplication, this.s1Application)\r\n            .subscribe(\r\n              (res: any) => {\r\n                this.sweetAlertService.customSuccessMessage(\r\n                  \"Application successfully assigned to you.\",\r\n                  3\r\n                );\r\n                this.router.navigate([\r\n                  \"asc/page/application/s1/update/\",\r\n                  data.id,\r\n                ]);\r\n                this.refreshApplicationBadgeCount();\r\n              },\r\n              (err: any) => {\r\n                console.log(\"error deep\");\r\n                let lockedBy = \"\";\r\n                if (this.s1Application.assignedUser) {\r\n                  lockedBy = ` by ${this.s1Application.assignedUser.firstName} ${this.s1Application.assignedUser.lastName} `;\r\n                }\r\n\r\n                err.error.message = `Application has been locked${lockedBy} for processing. Kindly select another application to process.`;\r\n                this.sweetAlertService.error(err, 5);\r\n                // location.reload();\r\n              }\r\n            );\r\n        }\r\n      });\r\n    } else {\r\n      if (this.s1Application.assignedUser) {\r\n        if (\r\n          this.s1Application.assignedUser.username === this.currentUser.username\r\n        ) {\r\n          this.router.navigate([\"asc/page/application/s1/update/\", data.id]);\r\n          this.refreshApplicationBadgeCount();\r\n        } else {\r\n          console.log(\"error out\");\r\n          let lockedBy = \"\";\r\n          if (this.s1Application.assignedUser) {\r\n            lockedBy = ` by ${this.s1Application.assignedUser.firstName} ${this.s1Application.assignedUser.lastName} `;\r\n          }\r\n          this.sweetAlertService.customErrorMessage(\r\n            `Application has been locked${lockedBy} for processing.Kindly select another application to process.`,\r\n            5\r\n          );\r\n          this.refreshApplicationBadgeCount();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  viewMultipleApplication(data: any): void {\r\n    this.multipleS1Application = data;\r\n    console.log(\"multipleS1Application: \", this.multipleS1Application);\r\n\r\n    let dialogRef;\r\n\r\n    if (\r\n      this.currentUser.userRole.name === USER_ROLES.ROLE_ADMIN ||\r\n      this.currentUser.userRole.name === USER_ROLES.ROLE_SUPER_ADMIN\r\n    ) {\r\n      dialogRef = this.dialog.open(UpdateMultipleApplicationComponent, {\r\n        width: \"80%\",\r\n        height: \"85%\",\r\n        data: this.multipleS1Application,\r\n      });\r\n    } else {\r\n      dialogRef = this.dialog.open(UpdateMultipleApplicationComponent, {\r\n        width: \"80%\",\r\n        height: \"85%\",\r\n        data: this.multipleS1Application,\r\n      });\r\n    }\r\n\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if (result) {\r\n        this.getMultipleS1ApplicationList();\r\n      }\r\n    });\r\n  }\r\n\r\n  viewSpecialApplication(data: any): void {\r\n    this.applicationRequest = data;\r\n    this.s1Application = new S1Application();\r\n    this.s1Application.adTitle = data.adTitle;\r\n    this.s1Application.applicationOwner = data.applicationOwner;\r\n    this.s1Application.applicationType = data.applicationType;\r\n    this.s1Application.brand = data.brand;\r\n    this.s1Application.product = data.product;\r\n    // this.s1Application.category = data.category;\r\n    this.s1Application.company = data.company;\r\n    // this.s1Application.membersAffiliation = data.membersAffiliation;\r\n    this.s1Application.submissionDate = data.submissionDate;\r\n    this.s1Application.tagLine = data.tagLine;\r\n    this.s1Application.status = data.status;\r\n    this.s1Application.submissionType = SUBMISSION_TYPE.ORIGINAL;\r\n    this.s1Application.appFormReference = \"\";\r\n    this.s1Application.formType = data.formType;\r\n    this.s1Application.applicationRequest = data;\r\n    this.s1Application.id = 0;\r\n\r\n    let dialogRef;\r\n    if (\r\n      this.currentUser.userRole.name === USER_ROLES.ROLE_ADMIN ||\r\n      this.currentUser.userRole.name === USER_ROLES.ROLE_SUPER_ADMIN ||\r\n      (this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT &&\r\n        this.applicationRequest.status === \"FOR_APPROVAL\")\r\n    ) {\r\n      dialogRef = this.dialog.open(UpdateSpecialApplicationComponent, {\r\n        width: \"80%\",\r\n        height: \"85%\",\r\n        data: this.applicationRequest,\r\n      });\r\n    } else {\r\n      this.dataStorage.setS1Application(this.s1Application);\r\n      this.dataStorage.setSpecialS1Application(this.applicationRequest);\r\n      this.router.navigate([\"asc/page/application/s1/add\"]);\r\n      // dialogRef = this.dialog.open(UpdateSpecialApplicationComponent, {\r\n      //   width: '80%',\r\n      //   height: '85%',\r\n      //   data: this.applicationRequest\r\n      // });\r\n    }\r\n\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if (result) {\r\n        this.getSpecialS1ApplicationList();\r\n      }\r\n    });\r\n  }\r\n\r\n  getCompanyById(id): Promise<any> {\r\n    // updates company details in data storage\r\n    const promise = new Promise((resolve, reject) => {\r\n      this.apiService.findById(ENDPOINTS.company, id).subscribe(\r\n        (res: any) => {\r\n          if (res) {\r\n            this.currentUser.company = res.responseData.data;\r\n            this.dataStorage.saveUserAccount(this.currentUser);\r\n            resolve(this.currentUser);\r\n          }\r\n        },\r\n        (err) => {\r\n          reject(err);\r\n        }\r\n      );\r\n    });\r\n    return promise;\r\n  }\r\n\r\n  openFormTypeModal() {\r\n    this.getCompanyById(this.currentUser.company.id).then((res) => {\r\n      if (res.company.membersAffiliation.status === \"INACTIVE\") {\r\n        this.sweetAlertService.customErrorMessage(\r\n          `Your Company's membership affiliation is no longer active. Cannot proceed with new application. Please contact ASC admin`\r\n        );\r\n      } else {\r\n        const dialogRef = this.dialog.open(S1FormTypeComponent, {\r\n          // width: '30%',\r\n          // height: '25%',\r\n        });\r\n\r\n        dialogRef.afterClosed().subscribe((result) => {\r\n          if (result) {\r\n            console.log(result);\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  applyForS2(data) {\r\n    let typeOfExecution;\r\n    if (data.refTypeOfMedium === TYPE_OF_MEDIUM.SINGLE_MEDIA) {\r\n      this.apiService\r\n        .findByParam(\r\n          ENDPOINTS.applicationSingleMedia,\r\n          `app-form-reference/${data.appFormReference}`\r\n        )\r\n        .subscribe(\r\n          (res: any) => {\r\n            if (res.responseData.data.length > 0) {\r\n              typeOfExecution =\r\n                res.responseData.data[0].mediumExecution.typeOfExecution;\r\n              data.typeOfExecution = typeOfExecution;\r\n              const dialogRef = this.dialog.open(ListS1Dialog, {\r\n                data: {\r\n                  s2Application: data,\r\n                },\r\n              });\r\n            }\r\n          },\r\n          (err: any) => {}\r\n        );\r\n    } else {\r\n      const dialogRef = this.dialog.open(ListS1Dialog, {\r\n        data: {\r\n          s2Application: data,\r\n        },\r\n      });\r\n    }\r\n  }\r\n\r\n  returnTo(process, s1App): void {\r\n    this.s1Application = s1App;\r\n    Swal.fire({\r\n      text: \"Are you sure you want to \" + process + \" this application?\",\r\n      icon: \"question\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Confirm\",\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.spinner.show();\r\n        let endpoint = \"\";\r\n        this.s1Application.actionBy = this.currentUser;\r\n\r\n        if (this.currentUser.userRole.name === USER_ROLES.ROLE_SCREENER) {\r\n          this.s1Application.currentAssignee = USER_ROLES.ROLE_AD_SPECIALIST;\r\n          if (\r\n            this.s1Application.multipleApplication &&\r\n            this.s1Application.submissionType === SUBMISSION_TYPE.ORIGINAL\r\n          ) {\r\n            endpoint = `${ENDPOINTS.multipleApplicationReturnToAdSpe}${this.s1Application.multipleApplication.id}/return`;\r\n          } else {\r\n            endpoint = `${ENDPOINTS.applicationFormScreener}return`;\r\n          }\r\n        } else {\r\n          if (\r\n            this.s1Application.multipleApplication &&\r\n            this.s1Application.submissionType === SUBMISSION_TYPE.ORIGINAL\r\n          ) {\r\n            endpoint = `${ENDPOINTS.multipleApplicationReturnToScreener}${this.s1Application.multipleApplication.id}/return`;\r\n          } else {\r\n            endpoint = `${ENDPOINTS.applicationFormReviewer}return`;\r\n          }\r\n        }\r\n\r\n        // console.log('TO SAVE: ', this.s1Application);\r\n        this.apiService.save(endpoint, this.s1Application).subscribe(\r\n          (res: any) => {\r\n            // console.log('RETURN: ', res.responseData.data);\r\n            if (res.code === 200) {\r\n              this.spinner.hide();\r\n              this.getList();\r\n              this.sweetAlertService.customSuccessMessage(\r\n                \"Successfully returned the application\"\r\n              );\r\n              this.refreshApplicationBadgeCount();\r\n            }\r\n          },\r\n          (err: any) => {\r\n            this.spinner.hide();\r\n          }\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  saveStatus(ascUser = \"\", action = \"\", status = \"\", application: any) {\r\n    let fetchedData;\r\n    this.apiService\r\n      .findAll(`${ENDPOINTS.applicationForm}/id/${application.id}`)\r\n      .subscribe((validateApp) => {\r\n        console.log(\"validate => \", validateApp);\r\n        fetchedData = validateApp.responseData.data;\r\n      });\r\n    Swal.fire({\r\n      text: \"Are you sure you want to cancel this application?\",\r\n      icon: \"question\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Confirm\",\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.dataStorage.setDisplayProgressbar(true);\r\n        if (\r\n          fetchedData.assignedUser &&\r\n          fetchedData.formStatus === FORM_STATUS.LOCKED\r\n        ) {\r\n          this.sweetAlertService.customErrorMessage(\r\n            \"This form is already in process\"\r\n          );\r\n          return;\r\n        }\r\n        this.apiService\r\n          .update(\r\n            `${ENDPOINTS.applicationForm}/s1/${ascUser}/${action}`,\r\n            application\r\n          )\r\n          .subscribe(\r\n            (res: any) => {\r\n              console.log(\"SAVED STATUS: \", res.responseData.data);\r\n              this.sweetAlertService.customSuccessMessage(\r\n                \"Application successfully canceled.\"\r\n              );\r\n              this.getList();\r\n              this.refreshApplicationBadgeCount();\r\n              // this.router.navigate(['asc/page/application/s1/lists']);\r\n            },\r\n            (err) => {\r\n              console.log(err);\r\n              this.sweetAlertService.error(err);\r\n              this.dataStorage.setDisplayProgressbar(false);\r\n            },\r\n            () => {\r\n              this.dataStorage.setDisplayProgressbar(false);\r\n            }\r\n          );\r\n      }\r\n    });\r\n  }\r\n\r\n  changeTab(evt) {\r\n    console.log(\"tab ---  \", evt);\r\n    if (evt.tab.textLabel !== \"For Decision and Comments\") {\r\n      this.getListCounts();\r\n    }\r\n    if (evt.tab) {\r\n      this.displayedContent = evt.tab.textLabel;\r\n      if (\r\n        this.displayedContent === \"For Decision and Comments\" ||\r\n        this.displayedContent === \"For Appeal\"\r\n      ) {\r\n        this.getForDecisionAndComment(this.displayedContent);\r\n      } else if (this.displayedContent === \"Returned Application\") {\r\n        console.log(\"returneeed\");\r\n        const userType = this.isAdSpecialist ? \"adSpeId\" : \"screenerId\";\r\n        this.spinner.show();\r\n        this.apiService\r\n          .findAll(\r\n            `${\r\n              this.isAdSpecialist\r\n                ? ENDPOINTS.getAllAdSpeReturnedApps\r\n                : ENDPOINTS.getAllScreenerReturnedApps\r\n            }/?&${userType}=${this.currentUser.id}&page=${\r\n              this.currentPage - 1\r\n            }&size=${this.pageSize}`\r\n          )\r\n          .subscribe(\r\n            (respose) => {\r\n              this.applicationList = respose.data;\r\n              this.totalItems = respose.totalItems;\r\n              console.log(\"applicationList: \", this.applicationList);\r\n\r\n              this.dataSource = new MatTableDataSource<S1Application>(\r\n                this.applicationList\r\n              );\r\n              this.dataSource.paginator = this.paginator;\r\n              this.assignedApplicationDisplayedColumns.splice(\r\n                this.assignedApplicationDisplayedColumns.indexOf(\"icon\"),\r\n                1\r\n              );\r\n              setTimeout(() => {\r\n                this.spinner.hide();\r\n              }, 1);\r\n            },\r\n            (err) => {\r\n              setTimeout(() => {\r\n                this.spinner.hide();\r\n              }, 1);\r\n            }\r\n          );\r\n      } else if (this.displayedContent === \"Screened Applications\") {\r\n        this.getList(this.displayedContent.toUpperCase());\r\n      } else {\r\n        this.getList(this.displayedContent.toUpperCase());\r\n      }\r\n    }\r\n  }\r\n\r\n  sortEvent() {\r\n    this.click++;\r\n    if (this.click % 2 === 0) {\r\n      console.log(\"even\", this.click);\r\n      this.dataSource = new MatTableDataSource<S1Application>(\r\n        this.applicationList\r\n      );\r\n      this.dataSource.paginator = this.paginator;\r\n      return this.dataSource.data.sort((a, b) => a.id - b.id);\r\n    } else {\r\n      console.log(\"odd\", this.click);\r\n      this.dataSource = new MatTableDataSource<S1Application>(\r\n        this.applicationList\r\n      );\r\n      this.dataSource.paginator = this.paginator;\r\n      return this.dataSource.data.reverse();\r\n    }\r\n    // this.dataSource.data.sort(() => Math.random() - 0.5)\r\n  }\r\n\r\n  unlockApplication(process, s1App): void {\r\n    this.s1Application = s1App;\r\n    Swal.fire({\r\n      text: \"Are you sure you want to \" + process + \" this application?\",\r\n      icon: \"question\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Confirm\",\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.spinner.show();\r\n        let endpoint = \"\";\r\n        this.s1Application.actionBy = this.currentUser;\r\n        this.s1Application.formStatus = FORM_STATUS.OPEN;\r\n\r\n        endpoint = ENDPOINTS.applicationForm;\r\n\r\n        // console.log('TO SAVE: ', this.s1Application);\r\n        this.apiService.update(endpoint, this.s1Application).subscribe(\r\n          (res: any) => {\r\n            // console.log('RETURN: ', res.responseData.data);\r\n            if (res.code === 200) {\r\n              this.spinner.hide();\r\n              this.getList();\r\n              this.sweetAlertService.customSuccessMessage(\r\n                \"Successfully unlocked the application\"\r\n              );\r\n              this.refreshApplicationBadgeCount();\r\n            }\r\n          },\r\n          (err: any) => {\r\n            this.spinner.hide();\r\n          }\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  refresh() {\r\n    this.commonService.sendClickEvent();\r\n    this.startTimer();\r\n  }\r\n\r\n  startTimer() {\r\n    this.interval = setInterval(() => {\r\n      this.timeLeft--;\r\n      if (this.timeLeft > 0) {\r\n        this.refreshButtonEnabled = false;\r\n        this.isTimerValueDisplay = true;\r\n      } else {\r\n        this.refreshButtonEnabled = true;\r\n        this.isTimerValueDisplay = false;\r\n        this.timeLeft = 60;\r\n        clearInterval(this.interval);\r\n      }\r\n      this.timerDisplay = this.transform(this.timeLeft);\r\n    }, 1000);\r\n  }\r\n\r\n  transform(value: number): string {\r\n    const minutes: number = Math.floor(value / 60);\r\n    return minutes + \":\" + (value - minutes * 60);\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: \"list-s1-dialog\",\r\n  templateUrl: \"list-s1-dialog.html\",\r\n  styleUrls: [\"./list-s1-application.component.scss\"],\r\n})\r\nexport class ListS1Dialog implements OnInit {\r\n  s2Application = new S2Application();\r\n  s1Application = new S1Application();\r\n  applicationRequest = new ApplicationRequest();\r\n  typeOfExecution = new TypeOfExecution();\r\n\r\n  constructor(\r\n    private apiService: ApiService,\r\n    private sweetAlertService: SweetAlertService,\r\n    private router: Router,\r\n    private dataStorage: DataStorageService,\r\n    public dialog: MatDialog,\r\n    public dialogRef: MatDialogRef<ListS1ApplicationComponent>,\r\n    private commonService: CommonServices,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.typeOfExecution = this.data.s2Application.typeOfExecution;\r\n    this.s2Application.applicationForm = this.data.s2Application;\r\n    this.s1Application = this.data.s2Application;\r\n  }\r\n\r\n  // Used for S2 or TOA\r\n  proceedToS2(isS2) {\r\n    Swal.fire({\r\n      text: `Are you sure you want to apply for ${isS2 ? \"S2\" : \"TOA\"}?`,\r\n      icon: \"question\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Confirm\",\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.s2Application.submissionType = this.data.s2Application.submissionType;\r\n        this.s2Application.applicationForm = this.data.s2Application;\r\n        this.s2Application.submissionType = SUBMISSION_TYPE.ORIGINAL; // this.s2Application.applicationForm.submissionType;\r\n        if (!isS2) {\r\n          this.s2Application.hasToa = true;\r\n          // this.s2Application.submissionType = SUBMISSION_TYPE.TOA;\r\n        }\r\n        this.s2Application.internalStatus = \"SAVED\";\r\n        this.s2Application.externalStatus = \"SAVED\";\r\n        console.log(\"View S2:\", this.data.s2Application);\r\n        this.apiService\r\n          .save(\r\n            ENDPOINTS.s2ApplicationFormPresentorSave,\r\n            this.s2Application\r\n          )\r\n          .subscribe(\r\n            (res: any) => {\r\n              console.log(res);\r\n              this.router.navigate([\r\n                \"asc/page/application/s2/update\",\r\n                res.responseData.data.id,\r\n              ]);\r\n              this.commonService.sendClickEvent();\r\n              this.dialogRef.close();\r\n            },\r\n            (err: any) => {}\r\n          );\r\n      }\r\n    });\r\n  }\r\n\r\n  requestForClearingAndClearance(): void {\r\n    Swal.fire({\r\n      text: \"Are you sure you want to request approval for special clearing?\",\r\n      icon: \"question\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Confirm\",\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.dialogRef.close();\r\n        let dialogRef;\r\n        this.applicationRequest.hasSpecialClearing = true;\r\n        this.applicationRequest.applicationForm = this.s1Application;\r\n        dialogRef = this.dialog.open(RequestForSpecialClearingComponent, {\r\n          width: \"80%\",\r\n          height: \"85%\",\r\n          data: {\r\n            applicationRequest: this.applicationRequest,\r\n            applicationType: \"Request for Special Clearing\",\r\n          },\r\n        });\r\n        this.commonService.sendClickEvent();\r\n      }\r\n    });\r\n  }\r\n}\r\n","<form (keydown.enter)=\"$event.preventDefault()\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12 title\">\r\n        <mat-label>\r\n          <i class=\"material-icons icon-black\">view_list</i>\r\n          <span\r\n            [hidden]=\"\r\n              viewApplicationType === 'assigned-applications' ||\r\n              viewApplicationType === 'for-release' ||\r\n              viewApplicationType === 'released'\r\n            \"\r\n          >\r\n            {{ s1ApplicationTitle }} -</span\r\n          >\r\n          &nbsp;<span>{{\r\n            applicationTypeTitle?.replace(\"Assigned\", \"Retrieve/Re-assign\")\r\n              | uppercase\r\n          }}</span>\r\n        </mat-label>\r\n        <button\r\n          class=\"button-right\"\r\n          type=\"submit\"\r\n          mat-raised-button\r\n          color=\"primary\"\r\n          (click)=\"refresh()\"\r\n          [disabled]=\"!refreshButtonEnabled\"\r\n        >\r\n          <span class=\"material-icons\">sync</span>\r\n          <label *ngIf=\"isTimerValueDisplay\"> &nbsp;{{ timerDisplay }}</label>\r\n        </button>\r\n        <button\r\n          class=\"button-right button-red\"\r\n          type=\"submit\"\r\n          mat-raised-button\r\n          *ngIf=\"\r\n            currentUser?.userRole?.name == 'ROLE_APPLICANT' ||\r\n            currentUser?.userRole?.name == 'ROLE_ENCODER'\r\n          \"\r\n          [hidden]=\"viewApplicationType === 'multiple'\"\r\n          (click)=\"openFormTypeModal()\"\r\n        >\r\n          <i class=\"material-icons color__white\">add</i> NEW APPLICATION\r\n        </button>\r\n      </div>\r\n    </div>\r\n    <hr />\r\n    <!-- ADMIN - INCLUDES LIST FOR MULTIPLE APPLICATIONS -->\r\n    <!-- TEMP: SHOW multiple application tab for all roles -->\r\n    <!-- <mat-tab-group>\r\n      <mat-tab  >\r\n        <ng-container *ngTemplateOutlet=\"individualS1ApplicationList\"></ng-container>\r\n      </mat-tab>\r\n      <mat-tab>\r\n        <ng-container *ngTemplateOutlet=\"multipleS1ApplicationList\"></ng-container>\r\n      </mat-tab>\r\n      <mat-tab >\r\n        <ng-container *ngTemplateOutlet=\"specialS1ApplicationList\"></ng-container>\r\n      </mat-tab>\r\n      <mat-tab  >\r\n        <ng-container *ngTemplateOutlet=\"assignedToScreenerS1ApplicationList\"></ng-container>\r\n      </mat-tab>\r\n    </mat-tab-group> -->\r\n\r\n    <div *ngIf=\"applicationTypeTitle === 'INDIVIDUAL'\">\r\n      <ng-container\r\n        *ngTemplateOutlet=\"individualS1ApplicationList\"\r\n      ></ng-container>\r\n    </div>\r\n    <div *ngIf=\"viewApplicationType === 'multiple'\">\r\n      <ng-container\r\n        *ngTemplateOutlet=\"multipleS1ApplicationList\"\r\n      ></ng-container>\r\n    </div>\r\n    <div\r\n      *ngIf=\"\r\n        (currentUser.userRole.name === 'ROLE_APPLICANT' ||\r\n          currentUser.userRole.name === 'ROLE_ENCODER' ||\r\n          currentUser.userRole.name === 'ROLE_ADMIN' ||\r\n          currentUser?.userRole.name === 'ROLE_SUPER_ADMIN') &&\r\n        viewApplicationType === 'special'\r\n      \"\r\n    >\r\n      <ng-container *ngTemplateOutlet=\"specialS1ApplicationList\"></ng-container>\r\n    </div>\r\n    <div\r\n      *ngIf=\"\r\n        currentUser.userRole.name == 'ROLE_AD_SPECIALIST' ||\r\n        currentUser.userRole.name == 'ROLE_SCREENER'\r\n      \"\r\n    >\r\n      <ng-container\r\n        *ngTemplateOutlet=\"assignedToScreenerS1ApplicationList\"\r\n      ></ng-container>\r\n    </div>\r\n    <div\r\n      *ngIf=\"\r\n        currentUser.userRole.name == 'ROLE_AD_SPECIALIST' ||\r\n        currentUser.userRole.name == 'ROLE_REVIEWER' ||\r\n        currentUser.userRole.name === 'ROLE_ADMIN' ||\r\n        currentUser?.userRole.name === 'ROLE_SUPER_ADMIN'\r\n      \"\r\n    >\r\n      <ng-container\r\n        *ngTemplateOutlet=\"forReleaseApplicationList\"\r\n      ></ng-container>\r\n    </div>\r\n\r\n    <!-- OTHER USERS - DISPLAY ONLY S1 APPLICATIONS -->\r\n    <!-- <ng-container *ngIf=\"!showMultipleS1Application\">\r\n      <ng-container *ngTemplateOutlet=\"individualS1ApplicationList\"></ng-container>\r\n    </ng-container> -->\r\n  </div>\r\n</form>\r\n\r\n<!-- TEMPLATE FOR INDIVIDUAL S1 APPLICATION LIST -->\r\n<ng-template #individualS1ApplicationList>\r\n  <br />\r\n  <div class=\"row\" fxLayout fxLayoutAlign=\"center center\">\r\n    <mat-form-field class=\"col-md-9\" appearance=\"outline\">\r\n      <mat-label\r\n        ><i class=\"material-icons\">search</i> Search Applications</mat-label\r\n      >\r\n      <input matInput type=\"text\" (keyup)=\"doFilter($event.target.value)\" />\r\n      <input type=\"hidden\" />\r\n    </mat-form-field>\r\n\r\n    <!-- <div class=\"row\">\r\n    <div class=\"col-md-2\">LEGEND:</div>\r\n    <div class=\"col-md-1 legend legend-blue\">ORIGINAL</div>\r\n    <div class=\"col-md-1 legend legend-green\">REVISION</div>\r\n    <div class=\"col-md-1 legend legend-orange\">FOR COMPLIANCE</div>\r\n    <div class=\"col-md-1\" style=\"background-color:lightpink;border-radius:8px;width:20%;\">Rejected</div>\r\n  </div> -->\r\n\r\n    <div class=\"col\" *ngIf=\"currentUser.userRole.name === 'ROLE_AD_SPECIALIST'\">\r\n      <div class=\"legend-content\">\r\n        <table class=\"legend-table\">\r\n          <tr>\r\n            <td>LEGEND:</td>\r\n          </tr>\r\n          <tr>\r\n            <td>\r\n              <div class=\"legend-box legend-yellow\"></div>\r\n              LOCKED\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td>\r\n              <div class=\"legend-box legend-white\"></div>\r\n              OPEN\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td>\r\n              <div class=\"legend-box legend-blue\"></div>\r\n              ORIGINAL\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td>\r\n              <div class=\"legend-box legend-orange\"></div>\r\n              FOR COMPLIANCE\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td>\r\n              <div class=\"legend-box legend-green\"></div>\r\n              REVISION\r\n            </td>\r\n          </tr>\r\n          <!--     <tr>\r\n            <td>\r\n              <div class=\"legend-box legend-orange\"></div> FOR COMPLIANCE\r\n            </td>\r\n          </tr> -->\r\n        </table>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"col\" *ngIf=\"currentUser.userRole.name != 'ROLE_AD_SPECIALIST'\">\r\n      <div class=\"legend-content\">\r\n        <table class=\"legend-table\">\r\n          <tr>\r\n            <td>LEGEND:</td>\r\n          </tr>\r\n          <tr>\r\n            <td>\r\n              <div class=\"legend-box legend-blue\"></div>\r\n              ORIGINAL\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td>\r\n              <div class=\"legend-box legend-orange\"></div>\r\n              FOR COMPLIANCE\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td>\r\n              <div class=\"legend-box legend-green\"></div>\r\n              REVISION\r\n            </td>\r\n          </tr>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <br />\r\n  <!--\r\n  <mat-tab-group mat-align-tabs=\"start\" (selectedTabChange)=\"changeTab($event)\">\r\n    <mat-tab label=\"\">\r\n      <ng-template mat-tab-label>\r\n        Original\r\n        <div matBadge={{dataSource?.data?.length}} class=\"c-badge\" matBadgeColor=\"warn\"></div>\r\n      </ng-template>\r\n    </mat-tab>\r\n    <mat-tab label=\"\">\r\n      <ng-template mat-tab-label>\r\n        Revision\r\n        <div matBadge={{dataSource?.data?.length}} class=\"c-badge\" matBadgeColor=\"warn\"></div>\r\n      </ng-template>\r\n    </mat-tab>\r\n    <mat-tab label=\"\">\r\n      <ng-template mat-tab-label>\r\n        Compliance\r\n        <div matBadge={{dataSource?.data?.length}} class=\"c-badge\" matBadgeColor=\"warn\"></div>\r\n      </ng-template>\r\n    </mat-tab>\r\n  </mat-tab-group> -->\r\n  <mat-tab-group mat-align-tabs=\"start\" (selectedTabChange)=\"changeTab($event)\">\r\n    <mat-tab label=\"Original\">\r\n      <ng-template mat-tab-label>\r\n        Original\r\n        <div\r\n          matBadge=\"{{ badgeCounter.countOriginal }}\"\r\n          class=\"c-badge\"\r\n          matBadgeColor=\"warn\"\r\n        ></div>\r\n      </ng-template>\r\n    </mat-tab>\r\n    <mat-tab label=\"Revision\" *ngIf=\"!isReviewer\">\r\n      <ng-template mat-tab-label>\r\n        Revision\r\n        <div\r\n          matBadge=\"{{ badgeCounter.countRevision }}\"\r\n          class=\"c-badge\"\r\n          matBadgeColor=\"warn\"\r\n        ></div>\r\n      </ng-template>\r\n    </mat-tab>\r\n    <mat-tab label=\"Compliance\" *ngIf=\"!isReviewer\">\r\n      <ng-template mat-tab-label>\r\n        Compliance\r\n        <div\r\n          matBadge=\"{{ badgeCounter.countCompliance }}\"\r\n          class=\"c-badge\"\r\n          matBadgeColor=\"warn\"\r\n        ></div>\r\n      </ng-template>\r\n    </mat-tab>\r\n    <mat-tab\r\n      label=\"For Appeal\"\r\n      *ngIf=\"isAdSpecialist || isAdmin || isSuperAdmin\"\r\n    >\r\n      <ng-template mat-tab-label>\r\n        Released Appeal\r\n        <div\r\n          matBadge=\"{{ badgeCounter.countTotalOngoingAppeal }}\"\r\n          class=\"c-badge\"\r\n          matBadgeColor=\"warn\"\r\n        ></div>\r\n      </ng-template>\r\n    </mat-tab>\r\n    <mat-tab label=\"Returned Application\" *ngIf=\"isAdSpecialist || isScreener\">\r\n      <ng-template mat-tab-label>\r\n        Returned Application\r\n        <div\r\n          matBadge=\"{{ badgeCounter.returnedApplications }}\"\r\n          class=\"c-badge\"\r\n          matBadgeColor=\"warn\"\r\n        ></div>\r\n      </ng-template>\r\n    </mat-tab>\r\n    <mat-tab\r\n      label=\"For Decision and Comments\"\r\n      *ngIf=\"isScreener || isReviewer || isAdmin || isSuperAdmin\"\r\n    >\r\n      <ng-template mat-tab-label>\r\n        For Decision and Comments\r\n        <div\r\n          matBadge=\"{{\r\n            badgeCounter.countTotalScreenerAndReviewerDecisionComment\r\n          }}\"\r\n          class=\"c-badge\"\r\n          matBadgeColor=\"warn\"\r\n        ></div>\r\n      </ng-template>\r\n    </mat-tab>\r\n\r\n    <mat-tab\r\n      label=\"Screened Applications\"\r\n      *ngIf=\"isScreener || isReviewer || isAdmin || isSuperAdmin\"\r\n    >\r\n      <ng-template mat-tab-label>\r\n        Screened Applications\r\n        <div\r\n          matBadge=\"{{ badgeCounter.screenedApplications }}\"\r\n          class=\"c-badge\"\r\n          matBadgeColor=\"warn\"\r\n        ></div>\r\n      </ng-template>\r\n    </mat-tab>\r\n  </mat-tab-group>\r\n\r\n  <div class=\"mat-elevation-z8 fields\">\r\n    <table mat-table [dataSource]=\"dataSource\" matSort>\r\n      <ng-container matColumnDef=\"referenceCode\">\r\n        <th mat-header-cell *matHeaderCellDef>\r\n          REFERENCE CODE\r\n          <mat-icon\r\n            class=\"cursor\"\r\n            (click)=\"sortEvent()\"\r\n            style=\"color: black\"\r\n            [hidden]=\"currentUser.userRole.name === 'ROLE_ENCODER'\"\r\n            >swap_vert</mat-icon\r\n          >\r\n        </th>\r\n        <td\r\n          mat-cell\r\n          *matCellDef=\"let element; let i = index\"\r\n          (click)=\"viewApplication(element)\"\r\n          [ngStyle]=\"{\r\n            'pointer-events':\r\n              i !== 0 && currentUser.userRole.name === 'ROLE_ENCODER'\r\n                ? 'none'\r\n                : '',\r\n            'background-color':\r\n              currentUser.userRole.name === 'ROLE_ENCODER' && i > 0\r\n                ? '#beb8b8'\r\n                : (element.submissionType === 'ORIGINAL' &&\r\n                    element.decisionStatus !== 'INCOMPLETE') ||\r\n                  element.decisionStatus === 'INCOMPLETE'\r\n                ? 'lightblue'\r\n                : element.submissionType === 'FOR COMPLIANCE'\r\n                ? '#fca402'\r\n                : element.submissionType === 'REVISION'\r\n                ? '#8fcf8f'\r\n                : ''\r\n          }\"\r\n        >\r\n          {{\r\n            element?.submissionType === \"ORIGINAL\" &&\r\n            element?.internalStatus == \"S1_APPLICATION_REJECTED\"\r\n              ? element?.referenceCodeRejected\r\n              : (element?.referenceCode | uppercase)\r\n          }}\r\n        </td>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"typeOfApplication\">\r\n        <th mat-header-cell *matHeaderCellDef>TYPE OF APPLICATION</th>\r\n        <td\r\n          mat-cell\r\n          *matCellDef=\"let element; let i = index\"\r\n          (click)=\"viewApplication(element)\"\r\n          [ngStyle]=\"{\r\n            'pointer-events':\r\n              i !== 0 && currentUser.userRole.name === 'ROLE_ENCODER'\r\n                ? 'none'\r\n                : '',\r\n            'background-color':\r\n              currentUser.userRole.name === 'ROLE_ENCODER' && i > 0\r\n                ? '#beb8b8'\r\n                : currentUser.userRole.name === 'ROLE_AD_SPECIALIST' &&\r\n                  element?.formStatus === 'LOCKED'\r\n                ? 'yellow'\r\n                : ''\r\n          }\"\r\n        >\r\n          {{ element?.formType.replaceAll(\"_\", \" \") | uppercase }} -\r\n          {{ element?.applicationType?.description | uppercase }}\r\n        </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"companyName\">\r\n        <th mat-header-cell *matHeaderCellDef>COMPANY NAME</th>\r\n        <td\r\n          mat-cell\r\n          *matCellDef=\"let element; let i = index\"\r\n          (click)=\"viewApplication(element)\"\r\n          [ngStyle]=\"{\r\n            'pointer-events':\r\n              i !== 0 && currentUser.userRole.name === 'ROLE_ENCODER'\r\n                ? 'none'\r\n                : '',\r\n            'background-color':\r\n              currentUser.userRole.name === 'ROLE_ENCODER' && i > 0\r\n                ? '#beb8b8'\r\n                : currentUser.userRole.name === 'ROLE_AD_SPECIALIST' &&\r\n                  element?.formStatus === 'LOCKED'\r\n                ? 'yellow'\r\n                : ''\r\n          }\"\r\n        >\r\n          {{ element?.company?.companyName | uppercase }}\r\n        </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"brand\">\r\n        <th mat-header-cell *matHeaderCellDef>BRAND</th>\r\n        <td\r\n          mat-cell\r\n          *matCellDef=\"let element; let i = index\"\r\n          (click)=\"viewApplication(element)\"\r\n          [ngStyle]=\"{\r\n            'pointer-events':\r\n              i !== 0 && currentUser.userRole.name === 'ROLE_ENCODER'\r\n                ? 'none'\r\n                : '',\r\n            'background-color':\r\n              currentUser.userRole.name === 'ROLE_ENCODER' && i > 0\r\n                ? '#beb8b8'\r\n                : currentUser.userRole.name === 'ROLE_AD_SPECIALIST' &&\r\n                  element?.formStatus === 'LOCKED'\r\n                ? 'yellow'\r\n                : ''\r\n          }\"\r\n        >\r\n          {{ element?.brand?.description | uppercase }}\r\n        </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"product\">\r\n        <th mat-header-cell *matHeaderCellDef>PRODUCT</th>\r\n        <td\r\n          mat-cell\r\n          *matCellDef=\"let element; let i = index\"\r\n          (click)=\"viewApplication(element)\"\r\n          [ngStyle]=\"{\r\n            'pointer-events':\r\n              i !== 0 && currentUser.userRole.name === 'ROLE_ENCODER'\r\n                ? 'none'\r\n                : '',\r\n            'background-color':\r\n              currentUser.userRole.name === 'ROLE_ENCODER' && i > 0\r\n                ? '#beb8b8'\r\n                : currentUser.userRole.name === 'ROLE_AD_SPECIALIST' &&\r\n                  element?.formStatus === 'LOCKED'\r\n                ? 'yellow'\r\n                : ''\r\n          }\"\r\n        >\r\n          {{ element?.product?.description | uppercase }}\r\n        </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"typeOfMedium\">\r\n        <th mat-header-cell *matHeaderCellDef>TYPE OF MEDIUM</th>\r\n        <td\r\n          mat-cell\r\n          *matCellDef=\"let element; let i = index\"\r\n          (click)=\"viewApplication(element)\"\r\n          [ngStyle]=\"{\r\n            'pointer-events':\r\n              i !== 0 && currentUser.userRole.name === 'ROLE_ENCODER'\r\n                ? 'none'\r\n                : '',\r\n            'background-color':\r\n              currentUser.userRole.name === 'ROLE_ENCODER' && i > 0\r\n                ? '#beb8b8'\r\n                : currentUser.userRole.name === 'ROLE_AD_SPECIALIST' &&\r\n                  element?.formStatus === 'LOCKED'\r\n                ? 'yellow'\r\n                : ''\r\n          }\"\r\n        >\r\n          {{ element?.typeOfMedium | uppercase }}\r\n        </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"status\">\r\n        <th mat-header-cell *matHeaderCellDef>APPLICATION STATUS</th>\r\n        <td\r\n          mat-cell\r\n          *matCellDef=\"let element; let i = index\"\r\n          class=\"\"\r\n          (click)=\"viewApplication(element)\"\r\n          [ngStyle]=\"{\r\n            'pointer-events':\r\n              i !== 0 && currentUser.userRole.name === 'ROLE_ENCODER'\r\n                ? 'none'\r\n                : '',\r\n            'background-color':\r\n              currentUser.userRole.name === 'ROLE_ENCODER' && i > 0\r\n                ? '#beb8b8'\r\n                : element?.internalStatus === 'S1_APPLICATION_REJECTED' ||\r\n                  element?.internalStatus === 'S1_APPLICATION_CANCELLED'\r\n                ? 'lightpink'\r\n                : currentUser.userRole.name === 'ROLE_AD_SPECIALIST' &&\r\n                  element?.formStatus === 'LOCKED'\r\n                ? 'yellow'\r\n                : ''\r\n          }\"\r\n        >\r\n          {{\r\n            showStatus({\r\n              paymentStatus: element?.paymentStatus,\r\n              externalStatus: element?.externalStatus,\r\n              actionStatus: element?.actionStatus\r\n            })\r\n          }}\r\n        </td>\r\n      </ng-container>\r\n\r\n      <ng-continer matColumnDef=\"paymentStatus\">\r\n        <th mat-header-cell *matHeaderCellDef>PAYMENT STATUS</th>\r\n        <td\r\n          mat-cell\r\n          *matCellDef=\"let element; let i = index\"\r\n          (click)=\"viewApplication(element)\"\r\n          [ngStyle]=\"{\r\n            'pointer-events':\r\n              i !== 0 && currentUser.userRole.name === 'ROLE_ENCODER'\r\n                ? 'none'\r\n                : '',\r\n            'background-color':\r\n              currentUser.userRole.name === 'ROLE_ENCODER' && i > 0\r\n                ? '#beb8b8'\r\n                : currentUser.userRole.name === 'ROLE_AD_SPECIALIST' &&\r\n                  element?.formStatus === 'LOCKED'\r\n                ? 'yellow'\r\n                : ''\r\n          }\"\r\n        >\r\n          <div\r\n            class=\"payment-status-chip\"\r\n            [ngClass]=\"{\r\n              'payment-status-chip--paid':\r\n                element?.paymentStatus === paymentStatus.PAID,\r\n              'payment-status-chip--unpaid':\r\n                element?.paymentStatus === paymentStatus.UNPAID,\r\n              'payment-status-chip--for-approval':\r\n                element?.paymentStatus === paymentStatus.FOR_APPROVAL,\r\n              'payment-status-chip--for-payment':\r\n                element?.paymentStatus === paymentStatus.FOR_PAYMENT\r\n            }\"\r\n          >\r\n            {{ formatTextPayment(element?.paymentStatus) }}\r\n          </div>\r\n        </td>\r\n      </ng-continer>\r\n\r\n      <ng-container matColumnDef=\"internalStatus\">\r\n        <th mat-header-cell *matHeaderCellDef>INTERNAL STATUS</th>\r\n        <td\r\n          mat-cell\r\n          *matCellDef=\"let element; let i = index\"\r\n          class=\"\"\r\n          [ngStyle]=\"{\r\n            'pointer-events':\r\n              i !== 0 && currentUser.userRole.name === 'ROLE_ENCODER'\r\n                ? 'none'\r\n                : '',\r\n            'background-color':\r\n              currentUser.userRole.name === 'ROLE_ENCODER' && i > 0\r\n                ? '#beb8b8'\r\n                : currentUser.userRole.name === 'ROLE_AD_SPECIALIST' &&\r\n                  element?.formStatus === 'LOCKED'\r\n                ? 'yellow'\r\n                : ''\r\n          }\"\r\n        >\r\n          {{\r\n            parseInternalStatus(\r\n              element?.internalStatus,\r\n              element?.actionBy,\r\n              element\r\n            )\r\n          }}\r\n        </td>\r\n      </ng-container>\r\n\r\n      <!-- For ASC Users only 'background-color': ((currentUser.userRole.name === 'ROLE_AD_SPECIALIST' && i > 0 && element?.formStatus==='LOCKED' ? 'yellow' : ''))-->\r\n      <!-- <ng-container matColumnDef=\"status\" *ngIf=\"currentUser.userRole.name!='ROLE_APPLICANT'\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> APPLICATION STATUS </th>\r\n        <td mat-cell *matCellDef=\"let element; let i = index\" class=\"applicantStatus\"\r\n          [ngStyle]=\"{'background-color':\r\n          ((element.submissionType=='ORIGINAL'&&element.decisionStatus!='INCOMPLETE') ? 'lightblue' :\r\n          ((element.submissionType=='FOR COMPLIANCE'||element.decisionStatus=='INCOMPLETE'||element.submissionType=='COMPLIANCE') ? '#ebd79b' :\r\n          (element.submissionType=='REVISION' ? '#8fcf8f' : '' )))}\"\r\n          (click)=\"viewApplication(element)\"> {{\r\n          element?.internalStatus?.replaceAll('_',' ') | uppercase }}</td>\r\n      </ng-container> -->\r\n\r\n      <ng-container matColumnDef=\"icon\">\r\n        <th mat-header-cell *matHeaderCellDef></th>\r\n        <td mat-cell *matCellDef=\"let element\" class=\"icon\">\r\n          <!-- FOR APPLICANT -------------------------------------------------- -->\r\n          <button\r\n            mat-raised-button\r\n            class=\"button-red\"\r\n            matTooltip=\"Cancel Application\"\r\n            [disabled]=\"element.formStatus === 'LOCKED'\"\r\n            (click)=\"\r\n              saveStatus(\r\n                'presentor',\r\n                'cancel',\r\n                'S1_APPLICATION_CANCELLED',\r\n                element\r\n              )\r\n            \"\r\n            *ngIf=\"\r\n              currentUser?.userRole?.name == 'ROLE_APPLICANT' &&\r\n              element?.internalStatus == 'S1_APPLICATION_SUBMITTED'\r\n            \"\r\n          >\r\n            <i class=\"material-icons color__white\">cancel</i>\r\n          </button>\r\n\r\n          <button\r\n            mat-raised-button\r\n            class=\"button-red\"\r\n            matTooltip=\"Submit For Compliance\"\r\n            (click)=\"viewApplication(element)\"\r\n            *ngIf=\"\r\n              !element?.appliedS2 &&\r\n              !element?.hasOngoingCompliance &&\r\n              !element?.hasOngoingRevision &&\r\n              element?.decisionStatus == 'INCOMPLETE' &&\r\n              !s1Application?.hasOngoingAppeal &&\r\n              element?.paymentStatus === 'PAID' &&\r\n              element?.releaseStatus === 'RELEASED' &&\r\n              (element?.internalStatus == 'S1_APPLICATION_REVIEWED' ||\r\n                element?.internalStatus ==\r\n                  'COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER' ||\r\n                element?.internalStatus == 'REVISION_SCREENED' ||\r\n                element?.internalStatus == 'S1_APPLICATION_REJECTED')\r\n            \"\r\n          >\r\n            <i class=\"material-icons\">warning_amber</i>\r\n          </button>\r\n\r\n          <button\r\n            mat-raised-button\r\n            class=\"button-red\"\r\n            matTooltip=\"Submit Revision\"\r\n            (click)=\"viewApplication(element)\"\r\n            *ngIf=\"\r\n              element?.revisionNo !== 2 &&\r\n              currentUser?.userRole?.name == 'ROLE_APPLICANT' &&\r\n              !element?.appliedS2 &&\r\n              element?.paymentStatus === 'PAID' &&\r\n              element?.releaseStatus === 'RELEASED' &&\r\n              !element?.hasOngoingCompliance &&\r\n              !element?.hasOngoingRevision &&\r\n              element?.submissionType === 'ORIGINAL' &&\r\n              !s1Application?.hasOngoingAppeal &&\r\n              (element?.internalStatus == 'S1_APPLICATION_REVIEWED' ||\r\n                element?.internalStatus ==\r\n                  'COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER') &&\r\n                (element?.decisionStatus == 'APPROVED' ||\r\n                  element?.decisionStatus == 'APPROVED W/ CAUTION')\r\n            \"\r\n          >\r\n            <i class=\"material-icons\">task_alt</i>\r\n          </button>\r\n\r\n          <button\r\n            mat-raised-button\r\n            class=\"button-red\"\r\n            matTooltip=\"Apply for S2 Application\"\r\n            *ngIf=\"\r\n              currentUser?.userRole?.name == 'ROLE_APPLICANT' &&\r\n              !element?.appliedS2 &&\r\n              !element?.hasOngoingRevision &&\r\n              !element?.hasOngoingCompliance &&\r\n              element?.paymentStatus === 'PAID' &&\r\n              element?.releaseStatus === 'RELEASED' &&\r\n              !s1Application?.hasOngoingAppeal &&\r\n              (element?.internalStatus == 'S1_APPLICATION_REVIEWED' ||\r\n                element?.internalStatus ==\r\n                  'COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER' ||\r\n                element?.internalStatus == 'REVISION_SCREENED') &&\r\n                (element?.decisionStatus == 'APPROVED' ||\r\n                  element?.decisionStatus == 'APPROVED W/ CAUTION')\r\n            \"\r\n            (click)=\"applyForS2(element)\"\r\n          >\r\n            <i class=\"material-icons color__white\"> queue_play_next</i>\r\n          </button>\r\n\r\n          <!-- FOR ASC USERS -------------------------------------------------- -->\r\n          <button\r\n            mat-raised-button\r\n            class=\"button-red\"\r\n            matTooltip=\"Return to Ad Specialist\"\r\n            (click)=\"returnTo('RETURN', element)\"\r\n            *ngIf=\"\r\n              currentUser?.userRole?.name == 'ROLE_SCREENER' &&\r\n              element?.internalStatus == 'S1_APPLICATION_VERIFIED_BY_AD_SPE'\r\n            \"\r\n          >\r\n            <i class=\"material-icons color__white\">assignment_return</i>\r\n          </button>\r\n          <button\r\n            mat-raised-button\r\n            class=\"button-red\"\r\n            matTooltip=\"Return to Ad Specialist\"\r\n            (click)=\"returnTo('RETURN', element)\"\r\n            *ngIf=\"\r\n              currentUser?.userRole?.name == 'ROLE_SCREENER' &&\r\n              element?.internalStatus ==\r\n                'COMPLIANCE_DOCUMENT_VERIFIED_BY_AD_SPE'\r\n            \"\r\n          >\r\n            <i class=\"material-icons color__white\">assignment_return</i>\r\n          </button>\r\n          <button\r\n            mat-raised-button\r\n            class=\"button-red\"\r\n            matTooltip=\"Return to Ad Specialist\"\r\n            (click)=\"returnTo('RETURN', element)\"\r\n            *ngIf=\"\r\n              currentUser?.userRole?.name == 'ROLE_SCREENER' &&\r\n              element?.internalStatus == 'REVISION_VERIFIED_BY_AD_SPE'\r\n            \"\r\n          >\r\n            <i class=\"material-icons color__white\">assignment_return</i>\r\n          </button>\r\n\r\n          <button\r\n            mat-raised-button\r\n            class=\"button-red\"\r\n            matTooltip=\"Return to Screener\"\r\n            (click)=\"returnTo('RETURN', element)\"\r\n            *ngIf=\"\r\n              currentUser?.userRole?.name == 'ROLE_REVIEWER' &&\r\n              element.internalStatus == 'S1_APPLICATION_SCREENED'\r\n            \"\r\n          >\r\n            <i class=\"material-icons color__white\">assignment_return</i>\r\n          </button>\r\n\r\n          <!-- FOR ADSPECIALIST USERS -------------------------------------------------- -->\r\n          <button\r\n            mat-raised-button\r\n            class=\"button-red\"\r\n            matTooltip=\"Unlock\"\r\n            (click)=\"unlockApplication('UNLOCK', element)\"\r\n            *ngIf=\"\r\n              currentUser?.userRole?.name == 'ROLE_AD_SPECIALIST' &&\r\n              element.formStatus == 'LOCKED' &&\r\n              displayedContent !== 'Returned Application'\r\n            \"\r\n          >\r\n            <i class=\"material-icons color__white\">lock</i>\r\n          </button>\r\n        </td>\r\n      </ng-container>\r\n\r\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n    </table>\r\n    <div\r\n      class=\"no-record\"\r\n      [hidden]=\"dataSource && dataSource?.data?.length > 0\"\r\n    >\r\n      No record found.\r\n    </div>\r\n    <!-- <div style=\"float:right\"\r\n      *ngIf=\"currentUser?.userRole?.name!=='ROLE_ADMIN'&&currentUser?.userRole?.name!=='ROLE_SUPER_ADMIN'\">\r\n      <button mat-stroked-button color=\"primary\">Total Items: {{totalItems}}</button>\r\n      <button mat-stroked-button color=\"primary\">{{currentPage}} of {{totalPages==0 ? '1' : totalPages}}</button>\r\n      <button mat-stroked-button color=\"warn\" (click)=\"prevPage()\"\r\n        [disabled]=\"dataSource && dataSource?.data?.length === 0\">\r\n        < Prev</button> <button mat-stroked-button color=\"warn\" (click)=\"nextPage()\"\r\n          [disabled]=\"dataSource && dataSource?.data?.length === 0\">Next >\r\n      </button>\r\n    </div> -->\r\n    <!-- <mat-paginator [length]=\"resultsLength\"></mat-paginator> -->\r\n    <!-- <mat-paginator [pageSizeOptions]=\"[10, 20, 50]\" showFirstLastButtons> -->\r\n    <!-- </mat-paginator> -->\r\n    <mat-paginator\r\n      [pageSize]=\"pageSize\"\r\n      [pageIndex]=\"pageNo\"\r\n      [length]=\"totalItems\"\r\n      [pageSizeOptions]=\"pageSizeOptions\"\r\n      (page)=\"pageEvents($event)\"\r\n    >\r\n    </mat-paginator>\r\n  </div>\r\n  <br />\r\n</ng-template>\r\n\r\n<!-- TEMPLATE FOR MULTIPLE S1 APPLICATION LIST -->\r\n<ng-template #multipleS1ApplicationList>\r\n  <br />\r\n  <div class=\"row\" fxLayout fxLayoutAlign=\"center center\">\r\n    <mat-form-field class=\"col-md-9\" appearance=\"outline\">\r\n      <mat-label\r\n        ><i class=\"material-icons\">search</i> Search Applications</mat-label\r\n      >\r\n      <input\r\n        matInput\r\n        type=\"text\"\r\n        (keyup)=\"doFilterS1MultipleApplicationList($event.target.value)\"\r\n      />\r\n    </mat-form-field>\r\n\r\n    <div class=\"col\">\r\n      <div class=\"legend-content\">\r\n        <table class=\"legend-table\">\r\n          <tr>\r\n            <td>\r\n              <div class=\"legend-box legend-orange\"></div>\r\n              FOR APPROVAL\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td>\r\n              <div class=\"legend-box legend-green\"></div>\r\n              APPROVED\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td>\r\n              <div class=\"legend-box legend-red\"></div>\r\n              DISAPPROVED\r\n            </td>\r\n          </tr>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- <div class=\"row\">\r\n\r\n    <div class=\"col-md-2\">LEGEND:</div>\r\n    <div class=\"col-md-1 legend legend-orange\">FOR APPROVAL</div>\r\n    <div class=\"col-md-1 legend legend-green\">APPROVED</div>\r\n    <div class=\"col-md-1 legend legend-red\">DISAPPROVED</div>\r\n    <div class=\"col-md-1\" style=\"background-color:lightpink;border-radius:8px;width:20%;\">Rejected</div>\r\n  </div> -->\r\n\r\n  <br />\r\n\r\n  <div class=\"mat-elevation-z8 fields\">\r\n    <table mat-table [dataSource]=\"multipleApplicationDataSource\" matSort>\r\n      <ng-container matColumnDef=\"adTitle\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>AD TITLE</th>\r\n        <td\r\n          mat-cell\r\n          *matCellDef=\"let element\"\r\n          (click)=\"viewMultipleApplication(element)\"\r\n        >\r\n          {{ element?.adTitle | uppercase }}\r\n        </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"typeOfApplication\">\r\n        <th mat-header-cell *matHeaderCellDef>TYPE OF APPLICATION</th>\r\n        <td\r\n          mat-cell\r\n          *matCellDef=\"let element\"\r\n          (click)=\"viewMultipleApplication(element)\"\r\n        >\r\n          {{\r\n            element?.applicationType?.description.replaceAll(\"_\", \" \")\r\n              | uppercase\r\n          }}\r\n        </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"companyName\">\r\n        <th mat-header-cell *matHeaderCellDef>COMPANY NAME</th>\r\n        <td\r\n          mat-cell\r\n          *matCellDef=\"let element\"\r\n          (click)=\"viewMultipleApplication(element)\"\r\n        >\r\n          {{ element?.company?.companyName | uppercase }}\r\n        </td>\r\n      </ng-container>\r\n\r\n      <!-- <ng-container matColumnDef=\"membersAffiliation\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> MEMBER'S AFFILIATION </th>\r\n        <td mat-cell *matCellDef=\"let element\" (click)=\"viewMultipleApplication(element)\">\r\n          {{ element?.membersAffiliation?.description | uppercase }} </td>\r\n      </ng-container> -->\r\n\r\n      <ng-container matColumnDef=\"brand\">\r\n        <th mat-header-cell *matHeaderCellDef>BRAND</th>\r\n        <td\r\n          mat-cell\r\n          *matCellDef=\"let element\"\r\n          (click)=\"viewMultipleApplication(element)\"\r\n        >\r\n          {{ element?.brand?.description | uppercase }}\r\n        </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"product\">\r\n        <th\r\n          mat-header-cell\r\n          *matHeaderCellDef\r\n          [hidden]=\"currentUser.userRole.name !== 'ROLE_AD_SPECIALIST'\"\r\n        >\r\n          PRODUCT\r\n        </th>\r\n        <td\r\n          mat-cell\r\n          [hidden]=\"currentUser.userRole.name !== 'ROLE_AD_SPECIALIST'\"\r\n          *matCellDef=\"let element\"\r\n        >\r\n          {{ element?.product?.description | uppercase }}\r\n        </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"status\">\r\n        <th mat-header-cell *matHeaderCellDef>APPLICATION STATUS</th>\r\n        <td\r\n          mat-cell\r\n          *matCellDef=\"let element\"\r\n          class=\"applicantStatus\"\r\n          [ngStyle]=\"{\r\n            'background-color':\r\n              element?.status === 'FOR_APPROVAL'\r\n                ? '#fca402'\r\n                : element?.status === 'APPROVED'\r\n                ? '#8fcf8f'\r\n                : element?.status === 'DISAPPROVED'\r\n                ? '#ff8a7b'\r\n                : ''\r\n          }\"\r\n          (click)=\"viewMultipleApplication(element)\"\r\n        >\r\n          {{ element?.status?.replaceAll(\"_\", \" \") | uppercase }}\r\n        </td>\r\n      </ng-container>\r\n\r\n      <tr\r\n        mat-header-row\r\n        *matHeaderRowDef=\"multipleApplicationDisplayedColumns\"\r\n      ></tr>\r\n      <tr\r\n        mat-row\r\n        *matRowDef=\"let row; columns: multipleApplicationDisplayedColumns\"\r\n      ></tr>\r\n    </table>\r\n    <div\r\n      class=\"no-record\"\r\n      [hidden]=\"\r\n        multipleApplicationDataSource &&\r\n        multipleApplicationDataSource?.data?.length > 0\r\n      \"\r\n    >\r\n      No record found.\r\n    </div>\r\n    <!-- <mat-paginator [pageSizeOptions]=\"[10, 20, 50]\" showFirstLastButtons></mat-paginator> -->\r\n    <mat-paginator\r\n      [pageSize]=\"pageSize\"\r\n      [pageIndex]=\"pageNo\"\r\n      [length]=\"multipleTotalItems\"\r\n      [pageSizeOptions]=\"pageSizeOptions\"\r\n      (page)=\"pageEvents($event)\"\r\n    >\r\n    </mat-paginator>\r\n  </div>\r\n</ng-template>\r\n\r\n<!-- TEMPLATE FOR SPECIAL S1 APPLICATION LIST -->\r\n<ng-template #specialS1ApplicationList>\r\n  <b\r\n    *ngIf=\"\r\n      currentUser.userRole.name === 'ROLE_APPLICANT' ||\r\n      currentUser.userRole.name === 'ROLE_ENCODER'\r\n    \"\r\n    ><b class=\"material-icons info-msg\">error_outline</b> This page contain list\r\n    of Request for Approval and allows you to create S1 application from\r\n    approved request only.</b\r\n  >\r\n  <b\r\n    *ngIf=\"\r\n      currentUser.userRole.name === 'ROLE_ADMIN' ||\r\n      currentUser?.userRole.name === 'ROLE_SUPER_ADMIN'\r\n    \"\r\n    ><b class=\"material-icons info-msg\">error_outline</b> This page contain list\r\n    of Request for Approval and allows you to approve or disapprove request.</b\r\n  >\r\n  <br />\r\n  <div class=\"row\" fxLayout fxLayoutAlign=\"center center\">\r\n    <mat-form-field class=\"col-md-8\" appearance=\"outline\">\r\n      <mat-label\r\n        ><i class=\"material-icons\">search</i> Search Applications</mat-label\r\n      >\r\n      <input\r\n        matInput\r\n        type=\"text\"\r\n        (keyup)=\"doFilterS1MultipleApplicationList($event.target.value)\"\r\n      />\r\n    </mat-form-field>\r\n\r\n    <div class=\"col\">\r\n      <div class=\"legend-content\">\r\n        <table class=\"legend-table\">\r\n          <tr>\r\n            <td>\r\n              <div class=\"legend-box legend-orange\"></div>\r\n              FOR APPROVAL\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td>\r\n              <div class=\"legend-box legend-green\"></div>\r\n              APPROVED\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td>\r\n              <div class=\"legend-box legend-red\"></div>\r\n              DISAPPROVED\r\n            </td>\r\n          </tr>\r\n          <!-- <tr>\r\n            <td>\r\n              <div class=\"legend-box legend-pink\"></div> REJECTED\r\n            </td>\r\n          </tr> -->\r\n        </table>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- <div class=\"row\">\r\n\r\n    <div class=\"col-md-2\">LEGEND:</div>\r\n    <div class=\"col-md-1 legend legend-orange\">FOR APPROVAL</div>\r\n    <div class=\"col-md-1 legend legend-green\">APPROVED</div>\r\n    <div class=\"col-md-1 legend legend-red\">DISAPPROVED</div>\r\n    <div class=\"col-md-1\" style=\"background-color:lightpink;border-radius:8px;width:20%;\">Rejected</div>\r\n  </div> -->\r\n  <br />\r\n\r\n  <div class=\"mat-elevation-z8 fields\">\r\n    <table mat-table [dataSource]=\"specialApplicationDataSource\" matSort>\r\n      <ng-container matColumnDef=\"adTitle\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>AD TITLE</th>\r\n        <td\r\n          mat-cell\r\n          *matCellDef=\"let element\"\r\n          (click)=\"viewSpecialApplication(element)\"\r\n        >\r\n          {{ element?.adTitle | uppercase }}\r\n        </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"typeOfApplication\">\r\n        <th mat-header-cell *matHeaderCellDef>TYPE OF APPLICATION</th>\r\n        <td\r\n          mat-cell\r\n          *matCellDef=\"let element\"\r\n          (click)=\"viewSpecialApplication(element)\"\r\n        >\r\n          {{\r\n            element?.applicationType?.description.replaceAll(\"_\", \" \")\r\n              | uppercase\r\n          }}\r\n        </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"companyName\">\r\n        <th mat-header-cell *matHeaderCellDef>COMPANY NAME</th>\r\n        <td\r\n          mat-cell\r\n          *matCellDef=\"let element\"\r\n          (click)=\"viewSpecialApplication(element)\"\r\n        >\r\n          {{ element?.company?.companyName | uppercase }}\r\n        </td>\r\n      </ng-container>\r\n\r\n      <!-- <ng-container matColumnDef=\"membersAffiliation\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> MEMBER'S AFFILIATION </th>\r\n        <td mat-cell *matCellDef=\"let element\" (click)=\"viewSpecialApplication(element)\">\r\n          {{ element?.membersAffiliation?.description | uppercase }} </td>\r\n      </ng-container> -->\r\n\r\n      <ng-container matColumnDef=\"brand\">\r\n        <th mat-header-cell *matHeaderCellDef>BRAND</th>\r\n        <td\r\n          mat-cell\r\n          *matCellDef=\"let element\"\r\n          (click)=\"viewSpecialApplication(element)\"\r\n        >\r\n          {{ element?.brand?.description | uppercase }}\r\n        </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"status\">\r\n        <th mat-header-cell *matHeaderCellDef>APPLICATION STATUS</th>\r\n        <td\r\n          mat-cell\r\n          *matCellDef=\"let element\"\r\n          class=\"applicantStatus\"\r\n          [ngStyle]=\"{\r\n            'background-color':\r\n              element?.status === 'FOR_APPROVAL'\r\n                ? '#fca402'\r\n                : element?.status === 'APPROVED'\r\n                ? '#8fcf8f'\r\n                : element?.status === 'DISAPPROVED'\r\n                ? '#ff8a7b'\r\n                : ''\r\n          }\"\r\n          (click)=\"viewSpecialApplication(element)\"\r\n        >\r\n          {{ element?.status?.replaceAll(\"_\", \" \") | uppercase }}\r\n        </td>\r\n      </ng-container>\r\n\r\n      <tr\r\n        mat-header-row\r\n        *matHeaderRowDef=\"specialApplicationDisplayedColumns\"\r\n      ></tr>\r\n      <tr\r\n        mat-row\r\n        *matRowDef=\"let row; columns: specialApplicationDisplayedColumns\"\r\n      ></tr>\r\n    </table>\r\n    <div\r\n      class=\"no-record\"\r\n      [hidden]=\"\r\n        specialApplicationDataSource &&\r\n        specialApplicationDataSource?.data?.length > 0\r\n      \"\r\n    >\r\n      No record found.\r\n    </div>\r\n    <!-- <mat-paginator [pageSizeOptions]=\"[10, 20, 50]\" showFirstLastButtons></mat-paginator> -->\r\n    <mat-paginator\r\n      [pageSize]=\"pageSize\"\r\n      [pageIndex]=\"pageNo\"\r\n      [length]=\"specialTotalItems\"\r\n      [pageSizeOptions]=\"pageSizeOptions\"\r\n      (page)=\"pageEvents($event)\"\r\n    >\r\n    </mat-paginator>\r\n  </div>\r\n</ng-template>\r\n\r\n<!-- TEMPLATE FOR ASSIGNED TO SCREENER S1 APPLICATION LIST -->\r\n<ng-template #assignedToScreenerS1ApplicationList>\r\n  <div *ngIf=\"viewApplicationType === 'assigned-applications'\">\r\n    <b\r\n      ><b class=\"material-icons info-msg\">error_outline</b> This page allows you\r\n      to view or retrieve application to re-assign only.</b\r\n    >\r\n    <br />\r\n    <div class=\"row\" fxLayout fxLayoutAlign=\"center center\">\r\n      <mat-form-field class=\"col-md-8\" appearance=\"outline\">\r\n        <mat-label\r\n          ><i class=\"material-icons\">search</i> Search Applications</mat-label\r\n        >\r\n        <input\r\n          matInput\r\n          type=\"text\"\r\n          (keyup)=\"doFilterAssignedS1ApplicationList($event.target.value)\"\r\n        />\r\n      </mat-form-field>\r\n\r\n      <div class=\"col\">\r\n        <div class=\"legend-content\">\r\n          <table class=\"legend-table\">\r\n            <tr>\r\n              <td>\r\n                <div class=\"legend-box legend-blue\"></div>\r\n                ORIGINAL\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                <div class=\"legend-box legend-green\"></div>\r\n                REVISION\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                <div class=\"legend-box legend-orange\"></div>\r\n                FOR COMPLIANCE\r\n              </td>\r\n            </tr>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- <div class=\"row\">\r\n\r\n    <div class=\"col-md-2\">LEGEND:</div>\r\n    <div class=\"col-md-1 legend legend-blue\">ORIGINAL</div>\r\n    <div class=\"col-md-1 legend legend-green\">REVISION</div>\r\n    <div class=\"col-md-1 legend legend-orange\">FOR COMPLIANCE</div>\r\n    <div class=\"col-md-1\" style=\"background-color:lightpink;border-radius:8px;width:20%;\">Rejected</div>\r\n  </div> -->\r\n    <br />\r\n\r\n    <div class=\"mat-elevation-z8 fields\">\r\n      <table mat-table [dataSource]=\"assignedApplicationDataSource\" matSort>\r\n        <ng-container matColumnDef=\"referenceCode\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n            REFERENCE CODE\r\n          </th>\r\n          <td\r\n            mat-cell\r\n            *matCellDef=\"let element; let i = index\"\r\n            [ngStyle]=\"{\r\n              'background-color':\r\n                (element.submissionType == 'ORIGINAL' &&\r\n                  element.decisionStatus != 'INCOMPLETE') ||\r\n                element.decisionStatus == 'INCOMPLETE'\r\n                  ? 'lightblue'\r\n                  : element.submissionType == 'FOR COMPLIANCE' ||\r\n                    element.submissionType == 'COMPLIANCE'\r\n                  ? '#ebd79b'\r\n                  : element.submissionType == 'REVISION'\r\n                  ? '#8fcf8f'\r\n                  : ''\r\n            }\"\r\n          >\r\n            {{\r\n              element?.internalStatus == \"S1_APPLICATION_REJECTED\"\r\n                ? element?.referenceCodeRejected\r\n                : (element?.referenceCode | uppercase)\r\n            }}\r\n          </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"adTitle\">\r\n          <th mat-header-cell *matHeaderCellDef>AD TITLE</th>\r\n          <td mat-cell *matCellDef=\"let element\">\r\n            {{ element?.adTitle.replaceAll(\"_\", \" \") | uppercase }}\r\n          </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"typeOfApplication\">\r\n          <th mat-header-cell *matHeaderCellDef>TYPE OF APPLICATION</th>\r\n          <td mat-cell *matCellDef=\"let element\">\r\n            {{ element?.formType.replaceAll(\"_\", \" \") | uppercase }} -\r\n            {{ element?.applicationType?.description | uppercase }}\r\n          </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"companyName\">\r\n          <th mat-header-cell *matHeaderCellDef>COMPANY NAME</th>\r\n          <td mat-cell *matCellDef=\"let element\">\r\n            {{ element?.company?.companyName | uppercase }}\r\n          </td>\r\n        </ng-container>\r\n\r\n        <!-- <ng-container matColumnDef=\"membersAffiliation\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> MEMBER'S AFFILIATION </th>\r\n          <td mat-cell *matCellDef=\"let element\">\r\n            {{ element?.membersAffiliation?.description | uppercase }} </td>\r\n        </ng-container> -->\r\n\r\n        <ng-container matColumnDef=\"brand\">\r\n          <th mat-header-cell *matHeaderCellDef>BRAND</th>\r\n          <td mat-cell *matCellDef=\"let element\">\r\n            {{ element?.brand?.description | uppercase }}\r\n          </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"product\">\r\n          <th\r\n            mat-header-cell\r\n            *matHeaderCellDef\r\n            [hidden]=\"currentUser.userRole.name !== 'ROLE_AD_SPECIALIST'\"\r\n          >\r\n            PRODUCT\r\n          </th>\r\n          <td\r\n            mat-cell\r\n            [hidden]=\"currentUser.userRole.name !== 'ROLE_AD_SPECIALIST'\"\r\n            *matCellDef=\"let element\"\r\n          >\r\n            {{ element?.product?.description | uppercase }}\r\n          </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"status\">\r\n          <th mat-header-cell *matHeaderCellDef>APPLICATION STATUS</th>\r\n          <td\r\n            mat-cell\r\n            *matCellDef=\"let element; let i = index\"\r\n            class=\"applicantStatus\"\r\n            [ngStyle]=\"{\r\n              'background-color':\r\n                element?.internalStatus === 'S1_APPLICATION_REJECTED'\r\n                  ? 'lightpink'\r\n                  : ''\r\n            }\"\r\n          >\r\n            {{ element?.externalStatus?.replaceAll(\"_\", \" \") | uppercase }}\r\n          </td>\r\n        </ng-container>\r\n\r\n        <ng-container\r\n          matColumnDef=\"internalStatus\"\r\n          *ngIf=\"currentUser.userRole.name !== 'ROLE_APPLICANT'\"\r\n        >\r\n          <th mat-header-cell *matHeaderCellDef>INTERNAL STATUS</th>\r\n          <td\r\n            mat-cell\r\n            *matCellDef=\"let element; let i = index\"\r\n            class=\"applicantStatus\"\r\n            [ngStyle]=\"{\r\n              'pointer-events':\r\n                i !== 0 &&\r\n                currentUser.userRole.name !== 'ROLE_ADMIN' &&\r\n                  currentUser.userRole.name !== 'ROLE_AD_SPECIALIST' &&\r\n                  currentUser.userRole.name !== 'ROLE_SUPER_ADMIN' &&\r\n                  currentUser.userRole.name !== 'ROLE_APPLICANT'\r\n                  ? 'none'\r\n                  : '',\r\n              'background-color':\r\n                element?.internalStatus === 'S1_APPLICATION_REJECTED'\r\n                  ? 'lightpink'\r\n                  : ''\r\n            }\"\r\n          >\r\n            {{ element?.internalStatus?.replaceAll(\"_\", \" \") | uppercase }}\r\n          </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"icon\">\r\n          <th mat-header-cell *matHeaderCellDef></th>\r\n          <td mat-cell *matCellDef=\"let element\" class=\"icon\">\r\n            <button\r\n              mat-raised-button\r\n              class=\"button-red\"\r\n              matTooltip=\"Re-assignment\"\r\n              (click)=\"viewApplication(element)\"\r\n              *ngIf=\"\r\n                (currentUser?.userRole?.name == 'ROLE_AD_SPECIALIST' &&\r\n                  element?.internalStatus ==\r\n                    'S1_APPLICATION_VERIFIED_BY_AD_SPE') ||\r\n                (currentUser?.userRole?.name == 'ROLE_AD_SPECIALIST' &&\r\n                  element?.internalStatus ==\r\n                    'COMPLIANCE_DOCUMENT_VERIFIED_BY_AD_SPE') ||\r\n                (currentUser?.userRole?.name == 'ROLE_AD_SPECIALIST' &&\r\n                  element?.internalStatus == 'REVISION_VERIFIED_BY_AD_SPE') ||\r\n                (currentUser?.userRole?.name == 'ROLE_SCREENER' &&\r\n                  element.internalStatus == 'S1_APPLICATION_SCREENED')\r\n              \"\r\n            >\r\n              <i class=\"material-icons color__white\">assignment_return</i\r\n              ><span> Re-assignment </span>\r\n            </button>\r\n          </td>\r\n        </ng-container>\r\n\r\n        <tr\r\n          mat-header-row\r\n          *matHeaderRowDef=\"assignedApplicationDisplayedColumns\"\r\n        ></tr>\r\n        <tr\r\n          mat-row\r\n          *matRowDef=\"let row; columns: assignedApplicationDisplayedColumns\"\r\n        ></tr>\r\n      </table>\r\n      <div\r\n        class=\"no-record\"\r\n        [hidden]=\"\r\n          assignedApplicationDataSource &&\r\n          assignedApplicationDataSource?.data?.length > 0\r\n        \"\r\n      >\r\n        No record found.\r\n      </div>\r\n      <!-- <mat-paginator [pageSizeOptions]=\"[10, 20, 30]\" showFirstLastButtons></mat-paginator> -->\r\n      <mat-paginator\r\n        [pageSize]=\"pageSize\"\r\n        [pageIndex]=\"pageNo\"\r\n        [length]=\"retrieveReassignLength\"\r\n        (page)=\"pageEvents($event)\"\r\n      ></mat-paginator>\r\n    </div>\r\n  </div>\r\n</ng-template>\r\n\r\n<!-- TEMPLATE \"FOR RELEASE\" APPLICATION LIST -->\r\n<ng-template #forReleaseApplicationList>\r\n  <div\r\n    *ngIf=\"\r\n      viewApplicationType === 'for-release' ||\r\n      viewApplicationType === 'released'\r\n    \"\r\n  >\r\n    <!-- <b><b class=\"material-icons info-msg\">error_outline</b> This page allows you to resend decision form.</b> -->\r\n    <br />\r\n    <div class=\"row\" fxLayout fxLayoutAlign=\"center center\">\r\n      <mat-form-field class=\"col-md-8\" appearance=\"outline\">\r\n        <mat-label\r\n          ><i class=\"material-icons\">search</i> Search Applications</mat-label\r\n        >\r\n        <input\r\n          matInput\r\n          type=\"text\"\r\n          (keyup)=\"doFilterForReleaseApplicationList($event.target.value)\"\r\n        />\r\n      </mat-form-field>\r\n      <br />\r\n\r\n      <div class=\"mat-elevation-z8 fields\">\r\n        <table mat-table [dataSource]=\"forReleaseApplicationDataSource\" matSort>\r\n          <ng-container matColumnDef=\"referenceCode\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n              REFERENCE CODE\r\n            </th>\r\n            <td\r\n              mat-cell\r\n              *matCellDef=\"let element; let i = index\"\r\n              [ngStyle]=\"{\r\n                'background-color':\r\n                  (element.submissionType == 'ORIGINAL' &&\r\n                    element.decisionStatus != 'INCOMPLETE') ||\r\n                  element.decisionStatus == 'INCOMPLETE'\r\n                    ? 'lightblue'\r\n                    : element.submissionType == 'FOR COMPLIANCE' ||\r\n                      element.submissionType == 'COMPLIANCE'\r\n                    ? '#ebd79b'\r\n                    : element.submissionType == 'REVISION'\r\n                    ? '#8fcf8f'\r\n                    : ''\r\n              }\"\r\n              (click)=\"viewApplication(element)\"\r\n            >\r\n              {{\r\n                element?.internalStatus == \"S1_APPLICATION_REJECTED\"\r\n                  ? element?.referenceCodeRejected\r\n                  : (element?.referenceCode | uppercase)\r\n              }}\r\n            </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"adTitle\">\r\n            <th mat-header-cell *matHeaderCellDef>AD TITLE</th>\r\n            <td\r\n              mat-cell\r\n              *matCellDef=\"let element\"\r\n              (click)=\"viewApplication(element)\"\r\n            >\r\n              {{ element?.adTitle.replaceAll(\"_\", \" \") | uppercase }}\r\n            </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"typeOfApplication\">\r\n            <th mat-header-cell *matHeaderCellDef>TYPE OF APPLICATION</th>\r\n            <td\r\n              mat-cell\r\n              *matCellDef=\"let element\"\r\n              (click)=\"viewApplication(element)\"\r\n            >\r\n              {{ element?.formType.replaceAll(\"_\", \" \") | uppercase }} -\r\n              {{ element?.applicationType?.description | uppercase }}\r\n            </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"companyName\">\r\n            <th mat-header-cell *matHeaderCellDef>COMPANY NAME</th>\r\n            <td\r\n              mat-cell\r\n              *matCellDef=\"let element\"\r\n              (click)=\"viewApplication(element)\"\r\n            >\r\n              {{ element?.company?.companyName | uppercase }}\r\n            </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"brand\">\r\n            <th mat-header-cell *matHeaderCellDef>BRAND</th>\r\n            <td\r\n              mat-cell\r\n              *matCellDef=\"let element\"\r\n              (click)=\"viewApplication(element)\"\r\n            >\r\n              {{ element?.brand?.description | uppercase }}\r\n            </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"product\">\r\n            <th\r\n              mat-header-cell\r\n              *matHeaderCellDef\r\n              [hidden]=\"currentUser.userRole.name !== 'ROLE_AD_SPECIALIST'\"\r\n            >\r\n              PRODUCT\r\n            </th>\r\n            <td\r\n              mat-cell\r\n              [hidden]=\"currentUser.userRole.name !== 'ROLE_AD_SPECIALIST'\"\r\n              *matCellDef=\"let element\"\r\n            >\r\n              {{ element?.product?.description | uppercase }}\r\n            </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"typeOfMedium\">\r\n            <th mat-header-cell *matHeaderCellDef>TYPE OF MEDIUM</th>\r\n            <td\r\n              mat-cell\r\n              *matCellDef=\"let element; let i = index\"\r\n              (click)=\"viewApplication(element)\"\r\n            >\r\n              {{ element?.typeOfMedium | uppercase }}\r\n            </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"status\">\r\n            <th mat-header-cell *matHeaderCellDef>APPLICATION STATUS</th>\r\n            <td\r\n              mat-cell\r\n              *matCellDef=\"let element; let i = index\"\r\n              class=\"applicantStatus\"\r\n              (click)=\"viewApplication(element)\"\r\n              [ngStyle]=\"{\r\n                'background-color':\r\n                  element?.internalStatus === 'S1_APPLICATION_REJECTED'\r\n                    ? 'lightpink'\r\n                    : ''\r\n              }\"\r\n            >\r\n              {{ element?.externalStatus?.replaceAll(\"_\", \" \") | uppercase }}\r\n            </td>\r\n          </ng-container>\r\n\r\n          <ng-container\r\n            matColumnDef=\"internalStatus\"\r\n            *ngIf=\"currentUser.userRole.name !== 'ROLE_APPLICANT'\"\r\n          >\r\n            <th mat-header-cell *matHeaderCellDef>INTERNAL STATUS</th>\r\n            <td\r\n              mat-cell\r\n              *matCellDef=\"let element; let i = index\"\r\n              class=\"applicantStatus\"\r\n              [ngStyle]=\"{\r\n                'pointer-events':\r\n                  i !== 0 &&\r\n                  currentUser.userRole.name !== 'ROLE_ADMIN' &&\r\n                    currentUser.userRole.name !== 'ROLE_AD_SPECIALIST' &&\r\n                    currentUser.userRole.name !== 'ROLE_SUPER_ADMIN' &&\r\n                    currentUser.userRole.name !== 'ROLE_APPLICANT'\r\n                    ? 'none'\r\n                    : '',\r\n                'background-color':\r\n                  element?.internalStatus === 'S1_APPLICATION_REJECTED'\r\n                    ? 'lightpink'\r\n                    : ''\r\n              }\"\r\n              (click)=\"viewApplication(element)\"\r\n            >\r\n              {{ element?.internalStatus?.replaceAll(\"_\", \" \") | uppercase }}\r\n            </td>\r\n          </ng-container>\r\n\r\n          <ng-container\r\n            matColumnDef=\"decisionStatus\"\r\n            *ngIf=\"currentUser.userRole.name !== 'ROLE_APPLICANT'\"\r\n          >\r\n            <th mat-header-cell *matHeaderCellDef>DECISION STATUS</th>\r\n            <td\r\n              mat-cell\r\n              *matCellDef=\"let element; let i = index\"\r\n              class=\"applicantStatus\"\r\n              [ngStyle]=\"{\r\n                'pointer-events':\r\n                  i !== 0 &&\r\n                  currentUser.userRole.name !== 'ROLE_ADMIN' &&\r\n                    currentUser.userRole.name !== 'ROLE_AD_SPECIALIST' &&\r\n                    currentUser.userRole.name !== 'ROLE_SUPER_ADMIN' &&\r\n                    currentUser.userRole.name !== 'ROLE_APPLICANT'\r\n                    ? 'none'\r\n                    : '',\r\n                'background-color':\r\n                  element?.internalStatus === 'S1_APPLICATION_REJECTED'\r\n                    ? 'lightpink'\r\n                    : ''\r\n              }\"\r\n              (click)=\"viewApplication(element)\"\r\n            >\r\n              {{ element?.decisionStatus?.replaceAll(\"_\", \" \") | uppercase }}\r\n            </td>\r\n          </ng-container>\r\n\r\n          <tr\r\n            mat-header-row\r\n            *matHeaderRowDef=\"forReleaseApplicationDisplayedColumns\"\r\n          ></tr>\r\n          <tr\r\n            mat-row\r\n            *matRowDef=\"let row; columns: forReleaseApplicationDisplayedColumns\"\r\n          ></tr>\r\n        </table>\r\n        <div\r\n          class=\"no-record\"\r\n          [hidden]=\"\r\n            forReleaseApplicationDataSource &&\r\n            forReleaseApplicationDataSource?.data?.length > 0\r\n          \"\r\n        >\r\n          No record found.\r\n        </div>\r\n        <!-- <mat-paginator [pageSizeOptions]=\"[10, 20, 30]\" showFirstLastButtons></mat-paginator> -->\r\n        <mat-paginator\r\n          [pageSize]=\"pageSize\"\r\n          [pageIndex]=\"pageNo\"\r\n          [length]=\"forReleaseTotalItems\"\r\n          [pageSizeOptions]=\"pageSizeOptions\"\r\n          (page)=\"pageEvents($event)\"\r\n        >\r\n        </mat-paginator>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</ng-template>\r\n","<div class=\"list-dialog-content\">\r\n    <div class=\"row head-icon\">\r\n      <i class=\"material-icons\">live_help</i>\r\n      <p>{{s2Application.applicationForm.referenceCode}}</p>\r\n      <p class=\"sub-title\">Reference Code</p>\r\n      <p class=\"warning-msg\" *ngIf=\"!typeOfExecution?.applyForToa && typeOfExecution?.live\">This application is valid for S1 only.</p>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n        <div class=\"col-md-4\">\r\n            <button mat-raised-button class=\"button-red action-button\" (click)=\"proceedToS2(true)\"\r\n            [disabled]=\"typeOfExecution?.live\">\r\n                <i class=\"material-icons color__white\">summarize</i> PROCEED TO S2 APPLICATION\r\n            </button>\r\n        </div>\r\n        <div class=\"col-md-4\">\r\n            <button mat-raised-button class=\"button-red action-button\" (click)=\"proceedToS2(false)\"\r\n            [disabled]=\"!typeOfExecution?.applyForToa\">\r\n                <i class=\"material-icons color__white\">done_all</i> APPLY FOR TOA\r\n            </button>\r\n        </div>\r\n        <div class=\"col-md-4\">\r\n            <button mat-raised-button class=\"button-red action-button\" (click)=\"requestForClearingAndClearance()\"\r\n            [disabled]=\"s1Application?.applicationType?.description == 'Special Screening and Clearing'||typeOfExecution?.live\">\r\n                <i class=\"material-icons color__white\">sticky_note_2</i> REQUEST FOR SPECIAL CLEARING APPROVAL\r\n            </button>\r\n        </div>\r\n    </div><br>\r\n    <!-- <div class=\"row\">\r\n        <div class=\" col-md-12 form-check\">\r\n            <input class=\"form-check-input\" type=\"checkbox\" (change)=\"hasToa($event.target.checked)\" value=\"\" id=\"flexCheckDefault\">\r\n            <label class=\"form-check-label\" for=\"flexCheckDefault\">\r\n              Apply for TOA\r\n            </label>\r\n          </div>\r\n    </div> -->\r\n</div>\r\n\r\n<!-- *ngIf=\"s2Application?.applicationForm?.applicationType?.description === 'SPECIAL SCREENING AND CLEARING'\" -->\r\n\r\n","export * from './affiliation/affiliation.component';\r\nexport * from './brands/brands.component';\r\nexport * from './payment-type/payment-type.component';\r\nexport * from './type-of-document/type-of-document.component';\r\nexport * from './type-of-medium/type-of-medium.component';\r\nexport * from './type-of-reason/type-of-reason.component';\r\nexport * from './category/category.component';\r\nexport * from './product/product.component';\r\nexport * from './asc-rates/asc-rates.component';\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { CompanyRoutingModule } from './company-routing.module';;\r\n\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule,\r\n    CompanyRoutingModule,\r\n  ]\r\n})\r\nexport class CompanyModule { }\r\n","import { UserAccount } from './user-account.model';\r\n\r\nexport class CopyClaims {\r\n    id: number;\r\n    description: string;\r\n    role: string;\r\n    appFormReference: string;\r\n    actionDate: Date;\r\n    actionBy: UserAccount;\r\n}\r\n","import { MultiMediaMovingConstant } from './../../../../core/models/media-models/multimedia-moving.const';\r\nimport { CommonServices } from 'app/core/services/common-services.service';\r\nimport { Component, OnInit, Input, ViewChild, OnChanges, AfterViewChecked, ChangeDetectorRef, Output, EventEmitter, ChangeDetectionStrategy, SimpleChanges } from '@angular/core';\r\nimport { ApiService, SweetAlertService, DataStorageService, FileStorageService, ValidateFieldService } from '@services';\r\nimport { ENDPOINTS, ATTACHMENT_TYPE, TYPE_OF_MEDIUM, SPECIAL_APPLICATION, APPLICATION_STATUSES, APPLICATION_STAGE, USER_ROLES, MULTIMEDIA_STATIC } from '@shared';\r\nimport { MatTableDataSource, MatTable } from '@angular/material/table';\r\nimport {\r\n  S1Application,\r\n  S2Application,\r\n  TypeOfDocument,\r\n  TypeOfMedium,\r\n  SupportingDocument,\r\n  ApplicationSingleMedia,\r\n  ApplicationRequest,\r\n  ApplicationMultimedia,\r\n  ApplicationMultimediaMovingDTO,\r\n  ApplicationMultimediaStaticDTO,\r\n} from '@models';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport Swal from 'sweetalert2';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { MultiMediaStaticConst } from 'app/core/models/media-models/mulstimedia-static.const';\r\n\r\n@Component({\r\n  selector: 'app-material-information',\r\n  templateUrl: './material-information.component.html',\r\n  styleUrls: ['./material-information.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class MaterialInformationComponent implements OnInit, OnChanges, AfterViewChecked {\r\n  @ViewChild(MatPaginator, { static: false }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: false }) sort: MatSort;\r\n  @ViewChild(MatTable, { static: false }) table: MatTable<S1Application>;\r\n  // @ViewChild(AttachmentDocumentComponent, { static: false }) materialAttachmentDocument: AttachmentDocumentComponent;\r\n\r\n  @Output() checkSingleMediaChangesFunction: EventEmitter<any> = new EventEmitter();\r\n  @Output() checkMultimediaChangesFunction: EventEmitter<any> = new EventEmitter();\r\n\r\n  // @ViewChild('mainFile')\r\n  // myMainFile: ElementRef;\r\n  // @ViewChild('mainInput')\r\n  // myMainInput: ElementRef;\r\n  // @ViewChild('supportiveFile')\r\n  // mySupportiveFile: ElementRef;\r\n  // @ViewChild('revisionLetterFile')\r\n  // myRevisionLetterFile: ElementRef;\r\n\r\n  @Input() s1Application = new S1Application();\r\n  @Input() s2Application = new S2Application();\r\n  @Input() originalAttachmentDocuments = [];\r\n  @Input() revisionAttachmentDocuments = [];\r\n  @Input() complianceAttachmentDocuments = [];\r\n  @Input() revisionLetterAttachment: any;\r\n  @Input() newMultimediaList = [];\r\n  @Input() typeOfMediumList = []; // single and multimedia\r\n  @Input() supportiveDocumentList = [];\r\n  @Input() applicationSingleMedia = new ApplicationSingleMedia();\r\n  @Input() isAscUser = false;\r\n  @Input() isDisableFieldOnUpdate = false;\r\n\r\n  dataSource: MatTableDataSource<S1Application>;\r\n  displayedColumns: string[];\r\n  todayDate: Date = new Date();\r\n  materialInformationForm: FormGroup;\r\n\r\n  executionList = [];\r\n  dialectList = [];\r\n  newSupportiveDocumentList = [];\r\n  typeOfDocumentList = [];\r\n  specialApplicationType = [...SPECIAL_APPLICATION];\r\n\r\n  setMultimediaList = [];\r\n  @Input() selectedMultimediaList = [];\r\n  selectedMultimediaStringList = [];\r\n  @Input() toDeleteMultimediaList = [];\r\n  // singleMedia = new SingleMedia();\r\n  typeOfMedium = new TypeOfMedium();\r\n  typeOfDocument = new TypeOfDocument();\r\n  // attachmentDocument = new AttachmentDocument();\r\n  supportingDocument = new SupportingDocument();\r\n  applicationMultimedia = new ApplicationMultimedia();\r\n  applicationRequest = new ApplicationRequest();\r\n  newApplicationSingleMedia = new ApplicationSingleMedia();\r\n\r\n  selectMultimedia = false;\r\n  // showMainDocumentUploadButton = false;\r\n  // showMainDocumentViewButton = false;\r\n  // showMainDocumentDownloadButton = false;\r\n  // showSupportDocumentFrame = false;\r\n  // showMainDocumentRemoveButton = false;\r\n  // showRevisionLetterViewButton = false;\r\n\r\n  previewMainDocument = false;\r\n  disableSubmitButtonByMedia = false;\r\n\r\n  showSupportiveDocumentUploadButton = false;\r\n  showSupportiveDocumentViewButton = false;\r\n  showSupportiveDocumentDownloadButton = false;\r\n  showRevisionLetterDownloadButton = false;\r\n  previewSupportiveDocument = false;\r\n\r\n  attachmentSize: number;\r\n  safeURLMainDoc: any;\r\n  safeURLSupportDoc: any;\r\n  currentUser: any;\r\n  applicationStage: string;\r\n  safeURLRevisionLetter: any;\r\n  supportingDocumentIndex: any;\r\n  showRevisionLetterUploadButton = false;\r\n  isDigitalStatic = false;\r\n  isUpdate = false;\r\n\r\n  // validations\r\n  hiddenValidation: string;\r\n  readonlyValidation: string;\r\n  disabledValidation: string;\r\n\r\n  attachmentType = ATTACHMENT_TYPE.MAIN;\r\n  selectedFiles: FileList;\r\n  currentFileUpload: File;\r\n  progress: { percentage: number } = { percentage: 0 };\r\n  uploadedFileMain: any;\r\n  uploadedFileSupportive: any;\r\n  uploadedFileRevision: any;\r\n  mediaType = '';\r\n  labelMainDocument = 'MAIN DOCUMENT';\r\n  @Input() savedTypeOfMedium = '';\r\n  private ngUnsubscribe = new Subject();\r\n  selectedTypeOfMedium = 'SINGLE MEDIA';\r\n  @Input() multimediaDTO: any = {};\r\n  multimediaMovingDTO = new ApplicationMultimediaMovingDTO();\r\n  multimediaStaticDTO = new ApplicationMultimediaStaticDTO();\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private apiService: ApiService,\r\n    private sweetAlertService: SweetAlertService,\r\n    private sanitizer: DomSanitizer,\r\n    public dataStorage: DataStorageService,\r\n    private fileStorageService: FileStorageService,\r\n    private cd: ChangeDetectorRef,\r\n    public validateFieldService: ValidateFieldService,\r\n    private spinner: NgxSpinnerService,\r\n    public util: CommonServices\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.currentUser = this.dataStorage.getUserAccount();\r\n    if (this.currentUser.userRole.name === USER_ROLES.ROLE_AD_SPECIALIST) {\r\n      this.displayedColumns = ['typeOfDocument', 'input', 'variant', 'expiresOn', 'basedOn', 'remarks', 'action'];\r\n    } else {\r\n      this.displayedColumns = ['typeOfDocument', 'input', 'variant', 'expiresOn', 'basedOn', 'remarks'];\r\n    }\r\n\r\n    this.setFormValidator();\r\n    this.getTypeOfDocumentList();\r\n\r\n    if (this.dataStorage.getSpecialS1Application()) {\r\n      this.applicationRequest = this.dataStorage.getSpecialS1Application();\r\n    }\r\n    this.emitSingleMediaChanges();\r\n    this.initializeMultimediaMovingObj();\r\n    this.initializeMultimediaStaticObj();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes) {\r\n      if (this.multimediaDTO) {\r\n        if (this.s1Application.refTypeOfMedium === TYPE_OF_MEDIUM.MULTIMEDIA_MOVING) this.multimediaMovingDTO = this.multimediaDTO;\r\n        if (this.s1Application.refTypeOfMedium === TYPE_OF_MEDIUM.MULTIMEDIA_STATIC) this.multimediaStaticDTO = this.multimediaDTO;\r\n      }\r\n    }\r\n    \r\n    if (this.s1Application.refTypeOfMedium === undefined) {\r\n      this.s1Application.refTypeOfMedium = TYPE_OF_MEDIUM.SINGLE_MEDIA;\r\n      this.getTypeOfMedium(TYPE_OF_MEDIUM.SINGLE_MEDIA);\r\n    } else if (!this.applicationSingleMedia || this.s1Application.refTypeOfMedium?.includes('MULTIMEDIA')) {\r\n      this.getTypeOfMedium(this.s1Application.refTypeOfMedium);\r\n    } else if (this.applicationSingleMedia) {\r\n      if (this.applicationSingleMedia.mediumExecution) {\r\n        this.typeOfMedium = this.applicationSingleMedia.mediumExecution.typeOfMedium;\r\n        if (this.typeOfMedium.id) {\r\n          this.getExecutionDialectList();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  ngAfterViewChecked() {\r\n    this.cd.detectChanges();\r\n  }\r\n\r\n  setFormValidator() {\r\n    this.materialInformationForm = this.formBuilder.group({\r\n      adTitle: ['', Validators.required],\r\n      referenceCode: [''],\r\n      previousRefCode: [''],\r\n      tagLine: [''],\r\n      refTypeOfMedium: [''],\r\n      appFormReference: [''],\r\n\r\n      // this.attachmentDocumentForm = this.formBuilder.group({\r\n      attachmentReference: [''],\r\n      hasNoSupportingDocs: [''],\r\n      typeOfDocument: [''],\r\n      basedOn: [''],\r\n      variant: [''],\r\n      dateOfLaunch: [''],\r\n      expiresOn: [''],\r\n      remarks: [''],\r\n      input: [''],\r\n\r\n      typeOfMedium: [''],\r\n      mediumExecution: [''],\r\n      language: [''],\r\n      dialect: [''],\r\n      others: [''],\r\n      sizeLength: [''],\r\n      width: ['0'],\r\n\r\n      multimediaLength: [''],\r\n      multimediaSize: [''],\r\n      applicationSingleMedia: [''],\r\n      applicationMultimediaStatic: [''],\r\n      applicationMultimediaMoving: [''],\r\n\r\n    });\r\n  }\r\n\r\n  getTypeOfMedium(type) {\r\n    this.typeOfMediumList = [];\r\n    let endpoint = '';\r\n    if (type === TYPE_OF_MEDIUM.SINGLE_MEDIA) {\r\n      this.applicationSingleMedia = new ApplicationSingleMedia();\r\n      endpoint = ENDPOINTS.typeOfMediumSingleMedia;\r\n      this.selectMultimedia = false;\r\n      this.s1Application.refTypeOfMedium = TYPE_OF_MEDIUM.SINGLE_MEDIA;\r\n      this.selectedTypeOfMedium = TYPE_OF_MEDIUM.SINGLE_MEDIA;\r\n    } else if (type === TYPE_OF_MEDIUM.MULTIMEDIA_MOVING) {\r\n      endpoint = ENDPOINTS.typeOfMediumMultiMediaMoving;\r\n      this.selectMultimedia = true;\r\n      this.s1Application.refTypeOfMedium = TYPE_OF_MEDIUM.MULTIMEDIA_MOVING;\r\n      this.initializeMultimediaStaticObj();\r\n      this.selectedTypeOfMedium = TYPE_OF_MEDIUM.MULTIMEDIA;\r\n    } else {\r\n      endpoint = ENDPOINTS.typeOfMediumMultiMediaStatic;\r\n      this.selectMultimedia = true;\r\n      this.s1Application.refTypeOfMedium = TYPE_OF_MEDIUM.MULTIMEDIA_STATIC;\r\n      this.initializeMultimediaMovingObj();\r\n      this.selectedTypeOfMedium = TYPE_OF_MEDIUM.MULTIMEDIA;\r\n    }\r\n\r\n    // console.log('Selected: ', this.selectedTypeOfMedium)\r\n    this.apiService.findAll(endpoint).subscribe((res: any) => {\r\n      this.typeOfMediumList = res.responseData.data;\r\n      if (type === TYPE_OF_MEDIUM.SINGLE_MEDIA) {\r\n        this.typeOfMedium = this.typeOfMediumList.filter(medium => medium.description === this.savedTypeOfMedium)[0];\r\n      }\r\n\r\n      // if (this.selectedMultimediaList.length > 0) {\r\n      //   this.selectedMultimediaStringList = this.selectedMultimediaList.map(mappedList => mappedList?.typeOfMedium?.description);\r\n      //   this.emitMultimediaChanges();\r\n      // }\r\n      // this.typeOfMediumList = this.typeOfMediumList.map((medium, index) => {\r\n      //   const sampleList = this.selectedMultimediaList.filter(filteredMedium => filteredMedium.typeOfMedium.id === medium.id);\r\n      //   if (sampleList.length) {\r\n      //     medium.sizeLength = sampleList[0].multimediaSizeLength;\r\n      //   } else {\r\n      //     medium.sizeLength = null;\r\n      //   }\r\n      //   return medium;\r\n      // });\r\n    }, (err: any) => {\r\n    });\r\n  }\r\n\r\n  resetValues() {\r\n    this.applicationSingleMedia.dialect = null;\r\n    this.applicationSingleMedia.language = null;\r\n    this.applicationSingleMedia.others = '';\r\n    this.applicationSingleMedia.sizeLength = '0';\r\n    this.applicationSingleMedia.amount = 0;\r\n    this.applicationSingleMedia.mediumExecution = null;\r\n    this.applicationSingleMedia.width = '0';\r\n  }\r\n\r\n  setSingleMedia(typeofMedium: any) {\r\n    this.resetValues();\r\n    this.typeOfMedium = typeofMedium;\r\n    this.labelMainDocument = this.typeOfMedium.typeOfMainDocument.typeOfMainDocument;\r\n    this.getExecutionDialectList();\r\n    this.emitSingleMediaChanges();\r\n  }\r\n\r\n  emitSingleMediaChanges() {\r\n    if (\r\n      (this.typeOfMedium?.executionEnable && !this.applicationSingleMedia.mediumExecution) ||\r\n      (this.typeOfMedium?.lengthEnable && !this.applicationSingleMedia.sizeLength) ||\r\n      (this.typeOfMedium?.sizeLengthEnable && !this.applicationSingleMedia.sizeLength) ||\r\n      ((!this.typeOfMedium?.id && !this.applicationSingleMedia.id) && !this.savedTypeOfMedium)\r\n    ) {\r\n      this.disableSubmitButtonByMedia = true;\r\n    } else {\r\n      this.disableSubmitButtonByMedia = false;\r\n    }\r\n\r\n    this.checkSingleMediaChangesFunction.emit();\r\n  }\r\n\r\n  // addMultimedia(obj: any, evt) {\r\n  //   if (evt.target.value) {\r\n  //     obj.sizeLength = evt.target.value;\r\n  //     const existingValue = this.newMultimediaList.filter(filteredList => filteredList === obj);\r\n  //     if (existingValue.length) {\r\n  //       existingValue[0] = obj;\r\n  //     } else {\r\n  //       this.newMultimediaList.push(obj);\r\n  //       this.selectedMultimediaList.push(obj);\r\n  //     }\r\n  //     if (obj?.id) {\r\n  //       this.toDeleteMultimediaList = this.toDeleteMultimediaList.filter(filtered => filtered.id !== obj?.id);\r\n  //     }\r\n  //   } else {\r\n  //     const deleteExisting = this.selectedMultimediaList.filter(filteredMedia => filteredMedia?.typeOfMedium?.id === obj?.id);\r\n  //     if (deleteExisting.length) {\r\n  //       this.toDeleteMultimediaList.push(deleteExisting[0]);\r\n  //     }\r\n\r\n  //     this.newMultimediaList = this.newMultimediaList.filter(filteredMultimedia => filteredMultimedia.id !== obj.id);\r\n  //     this.selectedMultimediaList = this.selectedMultimediaList.filter(filteredMultimedia => filteredMultimedia.id !== obj.id);\r\n  //   }\r\n  //   const toDeleteMultimediaSet = this.toDeleteMultimediaList.filter((item, i, ar) => ar.indexOf(item) === i);\r\n  //   this.toDeleteMultimediaList = toDeleteMultimediaSet;\r\n  //   this.emitMultimediaChanges();\r\n  // }\r\n\r\n  emitMultimediaChanges() {\r\n    this.disableSubmitButtonByMedia = false;\r\n    let data = {\r\n      type: this.s1Application.refTypeOfMedium,\r\n      data: this.s1Application.refTypeOfMedium === TYPE_OF_MEDIUM.MULTIMEDIA_MOVING ? this.multimediaMovingDTO : this.multimediaStaticDTO\r\n    }\r\n    this.checkMultimediaChangesFunction.emit(data);\r\n  }\r\n\r\n  getTypeOfDocumentList() {\r\n    this.apiService.findAll(ENDPOINTS.typeOfDocument).subscribe((res: any) => {\r\n      this.typeOfDocumentList = res.responseData.data;\r\n    }, (err: any) => {\r\n    });\r\n  }\r\n\r\n  setTypeOfDocument(type) {\r\n    this.typeOfDocument = type;\r\n  }\r\n\r\n  compareSingleMedia(value: any, selected: any): boolean {\r\n    if (value && selected) {\r\n      return value.description === selected.description;\r\n    }\r\n  }\r\n\r\n  compareMediumExecution(value: any, selected: any): boolean {\r\n    if (value && selected) {\r\n      return value.typeOfExecution.typeOfExecution === selected.typeOfExecution.typeOfExecution;\r\n    }\r\n  }\r\n\r\n  compareDialect(value: any, selected: any): boolean {\r\n    if (value && selected) {\r\n      return value.dialect === selected.dialect;\r\n    }\r\n  }\r\n\r\n  getExecutionDialectList() {\r\n    if (this.typeOfMedium.id) {\r\n      this.apiService.findAll(`${ENDPOINTS.typeOfExecutionsByMedium}${this.typeOfMedium.id}`).subscribe((res: any) => {\r\n        if (this.typeOfMedium.executionEnable) {\r\n          this.executionList = res.responseData.data;\r\n        } else {\r\n          if (res.responseData.data.length === 0) {\r\n            this.sweetAlertService.customErrorMessage('The selected type of medium has no execution.');\r\n          } else {\r\n            this.applicationSingleMedia.mediumExecution = res.responseData.data[0];\r\n          }\r\n        }\r\n        this.emitSingleMediaChanges();\r\n      }, (err: any) => {\r\n      });\r\n    }\r\n\r\n    this.apiService.findAll(ENDPOINTS.dialects).subscribe((res: any) => {\r\n      this.dialectList = res.responseData.data;\r\n    }, (err: any) => {\r\n    });\r\n  }\r\n\r\n  removeTypeOfDocument(index) {\r\n    const keepValues = [];\r\n\r\n    Swal.fire({\r\n      text: 'Are you sure you want to delete this TYPE OF DOCUMENT?',\r\n      icon: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Confirm'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.supportiveDocumentList.forEach((element, key) => {\r\n          if (key !== index) {\r\n            keepValues.push(element);\r\n          }\r\n        });\r\n        this.supportiveDocumentList = keepValues;\r\n        this.dataSource.data = keepValues;\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  addSupportiveDocument(supportingDocument) {\r\n\r\n    const checkIfDocumentAlreadyExist = this.supportiveDocumentList.filter(data =>\r\n      data.typeOfDocument.id === supportingDocument.typeOfDocument.id);\r\n\r\n    // if (checkIfDocumentAlreadyExist.length === 1) {\r\n    //   this.sweetAlertService.customErrorMessage('Type of Document that is being added is already on the list.', 5);\r\n    // } else {\r\n    this.newSupportiveDocumentList.push(supportingDocument);\r\n    this.supportiveDocumentList.push(supportingDocument);\r\n    this.dataSource = new MatTableDataSource<S1Application>(this.supportiveDocumentList);\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n    // }\r\n    this.supportingDocument = new SupportingDocument();\r\n    this.typeOfDocument = new TypeOfDocument();\r\n  }\r\n\r\n  getTypeOfDocument(res, index) {\r\n    this.isUpdate = true;\r\n    this.apiService.findById(ENDPOINTS.typeOfDocument, res.typeOfDocument.id).subscribe((data: any) => {\r\n      if (data) {\r\n        this.typeOfDocument = data.responseData.data;\r\n      }\r\n    });\r\n    this.supportingDocument.typeOfDocument = res.typeOfDocument;\r\n    if (res.typeOfDocument.description === 'DOH-FDA PERMIT') {\r\n      this.typeOfDocument.expiresOnEnable = true;\r\n      this.supportingDocument.expiresOn = res.expiresOn;\r\n      this.supportingDocumentIndex = index;\r\n    } else if (res.typeOfDocument.description === 'NMIS') {\r\n      this.typeOfDocument.expiresOnEnable = false;\r\n      this.supportingDocument.expiresOn = null;\r\n      this.supportingDocumentIndex = index;\r\n    } else if (res.typeOfDocument.description === 'DOLE PERMIT') {\r\n      this.typeOfDocument.expiresOnEnable = false;\r\n      this.supportingDocument.expiresOn = null;\r\n      this.supportingDocumentIndex = index;\r\n    }\r\n  }\r\n\r\n  modifyTypeOfDocument(res, id) {\r\n    const checkIfDocumentAlreadyExist = this.supportiveDocumentList.filter(data => data.typeOfDocument.id === res.typeOfDocument.id);\r\n    //  if(checkIfDocumentAlreadyExist.length === 1){\r\n    //   console.log(\"ALREADY EXIST\");\r\n    //  }else{\r\n    //   console.log(\"SUCCESSFULLY UPDATE\");\r\n    //   this.supportiveDocumentList.forEach((element, key) => {\r\n    //     if (key === id) {\r\n    //       this.supportiveDocumentList[key] = res;\r\n    //     }\r\n    //   });\r\n    //  }\r\n    // console.log(\"count\", checkIfDocumentAlreadyExist);\r\n    // if (checkIfDocumentAlreadyExist.length === 1) {\r\n    //   this.isUpdate = false;\r\n    //   this.supportiveDocumentList.forEach((element, key) => {\r\n    //     if (key === id) {\r\n    //       this.supportiveDocumentList.splice(key);\r\n    //     }\r\n    //   });\r\n    // } else {\r\n    //   this.sweetAlertService.customErrorMessage(`Type of Document already exist.`);\r\n    // }\r\n    this.isUpdate = false;\r\n    this.dataSource.data = this.supportiveDocumentList;\r\n    this.supportingDocument = new SupportingDocument();\r\n    this.supportingDocumentIndex = '';\r\n  }\r\n\r\n  initializeMultimediaMovingObj(): void {\r\n    this.multimediaMovingDTO = new ApplicationMultimediaMovingDTO();\r\n    let multimediaMovingList = new MultiMediaMovingConstant().data\r\n    this.multimediaMovingDTO = {\r\n      applicationMultimediaMovingList: multimediaMovingList,\r\n      appFormReference: '',\r\n      amount: 0,\r\n      id: 0,\r\n      sizeLength: 0,\r\n      typeOfMedium: null,\r\n    }\r\n  }\r\n  \r\n  initializeMultimediaStaticObj(): void {\r\n    this.multimediaStaticDTO = new ApplicationMultimediaStaticDTO();\r\n    let multimediaStaticList = new MultiMediaStaticConst().data\r\n    this.multimediaStaticDTO = {\r\n      applicationMultimediaStaticList: multimediaStaticList,\r\n      appFormReference: '',\r\n      amount: 0,\r\n      id: 0,\r\n      typeOfMedium: null,\r\n    }\r\n  }\r\n\r\n  isNumber(number): boolean {\r\n    if (number) return this.validateFieldService.numbersOnly(number);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.ngUnsubscribe.next();\r\n    this.ngUnsubscribe.complete();\r\n  }\r\n}\r\n","<!-- <form [formGroup]=\"materialInformationForm\"> -->\r\n<div\r\n  class=\"row fields\"\r\n  [hidden]=\"\r\n    (currentUser?.userRole?.name == 'ROLE_APPLICANT' &&\r\n      (s1Application?.decisionStatus == 'INCOMPLETE' ||\r\n        s1Application?.decisionStatus == 'APPROVED' ||\r\n        s1Application?.decisionStatus == 'APPROVED W/ CAUTION')) ||\r\n    (s1Application?.submissionType === 'REVISION' &&\r\n      s1Application?.internalStatus === 'S1_APPLICATION_REJECTED') ||\r\n    (s1Application?.submissionType === 'COMPLIANCE' &&\r\n      s1Application?.internalStatus === 'S1_APPLICATION_REJECTED')\r\n  \"\r\n>\r\n  <div class=\"row\">\r\n    <!-- FOR S1 APPLICATION -->\r\n    <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n      <mat-label\r\n        >Ad Title\r\n        <span class=\"required\">*</span>\r\n      </mat-label>\r\n      <input\r\n        matInput\r\n        [(ngModel)]=\"s1Application.adTitle\"\r\n        name=\"adTitle\"\r\n        (ngModelChange)=\"util.toUpperCase(s1Application, 'adTitle', $event)\"\r\n        [readonly]=\"\r\n          (isAscUser && isDisableFieldOnUpdate) ||\r\n          s1Application?.applicationRequest?.status === 'APPROVED'\r\n        \"\r\n      />\r\n    </mat-form-field>\r\n  </div>\r\n\r\n  <!-- FOR S1 APPLICATION -->\r\n  <div class=\"row\">\r\n    <mat-form-field\r\n      class=\"col-md-6\"\r\n      appearance=\"outline\"\r\n      *ngIf=\"\r\n        s1Application?.formType !== 'MULTIPLE' ||\r\n        (s1Application?.formType === 'MULTIPLE' &&\r\n          s1Application.multipleApplication)\r\n      \"\r\n      [hidden]=\"\r\n        specialApplicationType.includes(\r\n          s1Application?.applicationType?.description?.toUpperCase()\r\n        ) && s1Application?.applicationRequest?.status !== 'APPROVED'\r\n      \"\r\n    >\r\n      <mat-label>Reference Code of Previously-Approved Material</mat-label>\r\n      <input\r\n        matInput\r\n        [(ngModel)]=\"s1Application.previousRefCode\"\r\n        name=\"previousRefCode\"\r\n        (ngModelChange)=\"\r\n          util.toUpperCase(s1Application, 'previousRefCode', $event)\r\n        \"\r\n        [readonly]=\"isAscUser && isDisableFieldOnUpdate\"\r\n      />\r\n    </mat-form-field>\r\n\r\n    <mat-form-field class=\"col-md-6\" appearance=\"outline\">\r\n      <mat-label>Tag Line (Optional)</mat-label>\r\n      <input\r\n        matInput\r\n        [(ngModel)]=\"s1Application.tagLine\"\r\n        name=\"tagLine\"\r\n        (ngModelChange)=\"util.toUpperCase(s1Application, 'tagLine', $event)\"\r\n        [readonly]=\"\r\n          (isAscUser && isDisableFieldOnUpdate) ||\r\n          s1Application?.applicationRequest?.status === 'APPROVED'\r\n        \"\r\n      />\r\n    </mat-form-field>\r\n  </div>\r\n</div>\r\n\r\n<!-- MULTIMEDIA SELECTION SECTION -->\r\n<!-- FOR S1 APPLICATION -->\r\n<div\r\n  class=\"row fields\"\r\n  *ngIf=\"\r\n    ((!specialApplicationType.includes(\r\n      s1Application?.applicationType?.description?.toUpperCase()\r\n    ) ||\r\n      (specialApplicationType.includes(\r\n        s1Application?.applicationType?.description?.toUpperCase()\r\n      ) &&\r\n        s1Application?.applicationRequest?.status == 'APPROVED') ||\r\n      (s1Application?.formType === 'MULTIPLE' &&\r\n        s1Application?.multipleApplication)) &&\r\n      s1Application?.formType !== 'MULTIPLE') ||\r\n    (s1Application?.formType === 'MULTIPLE' &&\r\n      s1Application?.multipleApplication)\r\n  \"\r\n  [hidden]=\"\r\n    (s1Application?.formType === 'MULTIPLE' &&\r\n      !s1Application.multipleApplication) ||\r\n    (currentUser?.userRole?.name == 'ROLE_APPLICANT' &&\r\n      (s1Application?.decisionStatus == 'INCOMPLETE' ||\r\n        s1Application?.decisionStatus == 'APPROVED' ||\r\n        s1Application?.decisionStatus == 'APPROVED W/ CAUTION')) ||\r\n    (s1Application?.submissionType === 'REVISION' &&\r\n      s1Application?.internalStatus === 'S1_APPLICATION_REJECTED') ||\r\n    (s1Application?.submissionType === 'COMPLIANCE' &&\r\n      s1Application?.internalStatus === 'S1_APPLICATION_REJECTED')\r\n  \"\r\n>\r\n  <h4><mat-icon>bookmark</mat-icon> &nbsp;Type of Medium</h4>\r\n\r\n  <mat-radio-group\r\n    class=\"col-md-12\"\r\n    aria-label=\"Select an option\"\r\n    [(ngModel)]=\"selectedTypeOfMedium\"\r\n    [disabled]=\"isAscUser && isDisableFieldOnUpdate\"\r\n    name=\"applicationTypeOfMedium\"\r\n    [hidden]=\"isAscUser && isDisableFieldOnUpdate\"\r\n  >\r\n    <mat-radio-button\r\n      value=\"SINGLE MEDIA\"\r\n      (click)=\"getTypeOfMedium('SINGLE MEDIA'); emitSingleMediaChanges()\"\r\n    >\r\n      SINGLE MEDIA\r\n    </mat-radio-button>\r\n    &nbsp;&nbsp;\r\n    <mat-radio-button\r\n      value=\"MULTIMEDIA\"\r\n      (click)=\"getTypeOfMedium('MULTIMEDIA-MOVING'); emitMultimediaChanges()\"\r\n    >\r\n      MULTIMEDIA\r\n    </mat-radio-button>\r\n    <br /><br />\r\n  </mat-radio-group>\r\n\r\n  <mat-form-field\r\n    class=\"col-md-11\"\r\n    appearance=\"outline\"\r\n    *ngIf=\"isAscUser && isDisableFieldOnUpdate\"\r\n  >\r\n    <mat-label>Media Type</mat-label>\r\n    <input\r\n      matInput\r\n      [(ngModel)]=\"s1Application.refTypeOfMedium\"\r\n      name=\"refTypeOfMedium\"\r\n      readonly=\"isAscUser && isDisableFieldOnUpdate\"\r\n    />\r\n  </mat-form-field>\r\n\r\n  <!-- SELCETED: SINGLE MEDIA -->\r\n  <mat-form-field\r\n    class=\"col-md-11\"\r\n    appearance=\"outline\"\r\n    *ngIf=\"s1Application?.refTypeOfMedium == 'SINGLE MEDIA'\"\r\n  >\r\n    <mat-label>Single Media <span class=\"required\">*</span></mat-label>\r\n    <mat-select\r\n      [(ngModel)]=\"typeOfMedium\"\r\n      name=\"typeOfMedium\"\r\n      [compareWith]=\"compareSingleMedia\"\r\n      [disabled]=\"isAscUser && isDisableFieldOnUpdate\"\r\n      (selectionChange)=\"setSingleMedia(typeOfMedium)\"\r\n    >\r\n      <mat-option *ngFor=\"let i of typeOfMediumList\" [value]=\"i\">\r\n        {{ i.description }}\r\n      </mat-option>\r\n    </mat-select>\r\n  </mat-form-field>\r\n\r\n  <!-- <section class=\"example-section\" *ngIf=\"isDigitalStatic\">\r\n      <mat-checkbox class=\"example-margin\" [(ngModel)]=\"checked\" [checked]=\"isDigitalStatic\">With landing page\r\n      </mat-checkbox>\r\n    </section> -->\r\n\r\n  <br /><br />\r\n\r\n  <div *ngIf=\"s1Application.refTypeOfMedium == 'SINGLE MEDIA'\">\r\n    <mat-form-field\r\n      class=\"col-md-4 media-info\"\r\n      appearance=\"outline\"\r\n      *ngIf=\"\r\n        typeOfMedium?.executionEnable === true ||\r\n        (applicationSingleMedia?.mediumExecution &&\r\n          typeOfMedium?.executionEnable === undefined)\r\n      \"\r\n    >\r\n      <mat-label>Execution <span class=\"required\">*</span></mat-label>\r\n      <mat-select\r\n        [(ngModel)]=\"applicationSingleMedia.mediumExecution\"\r\n        name=\"mediumExecution\"\r\n        [compareWith]=\"compareMediumExecution\"\r\n        [disabled]=\"isAscUser && isDisableFieldOnUpdate\"\r\n        (selectionChange)=\"emitSingleMediaChanges()\"\r\n      >\r\n        <mat-option *ngFor=\"let i of executionList\" [value]=\"i\">\r\n          {{ i.typeOfExecution.typeOfExecution }}\r\n        </mat-option>\r\n      </mat-select>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field\r\n      class=\"col-md-4 media-info\"\r\n      appearance=\"outline\"\r\n      *ngIf=\"\r\n        typeOfMedium?.languageEnable == true ||\r\n        (applicationSingleMedia?.dialect != null &&\r\n          typeOfMedium?.languageEnable == undefined)\r\n      \"\r\n    >\r\n      <mat-label>Language/Dialect</mat-label>\r\n      <mat-select\r\n        [(ngModel)]=\"applicationSingleMedia.dialect\"\r\n        name=\"dialect\"\r\n        [compareWith]=\"compareDialect\"\r\n        [disabled]=\"isAscUser && isDisableFieldOnUpdate\"\r\n      >\r\n        <mat-option *ngFor=\"let i of dialectList\" [value]=\"i\">\r\n          {{ i.dialect }}\r\n        </mat-option>\r\n      </mat-select>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field\r\n      class=\"col-md-4 media-info\"\r\n      appearance=\"outline\"\r\n      *ngIf=\"\r\n        typeOfMedium?.othersEnable == true ||\r\n        (applicationSingleMedia?.others &&\r\n          typeOfMedium?.othersEnable == undefined)\r\n      \"\r\n    >\r\n      <mat-label>Others</mat-label>\r\n      <input\r\n        matInput\r\n        [(ngModel)]=\"applicationSingleMedia.others\"\r\n        name=\"others\"\r\n        [readonly]=\"isAscUser && isDisableFieldOnUpdate\"\r\n      />\r\n    </mat-form-field>\r\n\r\n    <!-- <mat-form-field class=\"col-md-3 media-info\" appearance=\"outline\"\r\n        *ngIf=\"typeOfMedium.sizeLengthEnable==true||(applicationSingleMedia.sizeLength&&typeOfMedium.sizeLengthEnable==undefined)\">\r\n        <mat-label>Size Length</mat-label>\r\n        <input matInput [(ngModel)]=\"applicationSingleMedia.sizeLength\" formControlName=\"sizeLength\"\r\n          [readonly]=\"isAscUser && isDisableFieldOnUpdate\">\r\n      </mat-form-field> -->\r\n    <mat-form-field\r\n      class=\"col-md-3 media-info\"\r\n      appearance=\"outline\"\r\n      *ngIf=\"\r\n        typeOfMedium?.lengthEnable == true ||\r\n        typeOfMedium?.sizeLengthEnable == true ||\r\n        (applicationSingleMedia?.sizeLength &&\r\n          typeOfMedium?.sizeLengthEnable == undefined)\r\n      \"\r\n    >\r\n      <mat-label>Size / Length (in seconds)</mat-label>\r\n      <input\r\n        matInput\r\n        [(ngModel)]=\"applicationSingleMedia.sizeLength\"\r\n        name=\"sizeLength\"\r\n        (keydown)=\"isNumber($event)\"\r\n        (keyup)=\"emitSingleMediaChanges()\"\r\n        [readonly]=\"\r\n          isAscUser &&\r\n          isDisableFieldOnUpdate &&\r\n          currentUser?.userRole?.name !== 'ROLE_ADMIN' &&\r\n          currentUser?.userRole?.name !== 'ROLE_SUPER_ADMIN'\r\n        \"\r\n        (blur)=\"emitSingleMediaChanges()\"\r\n        maxlength=\"4\"\r\n      />\r\n    </mat-form-field>\r\n\r\n    <mat-form-field\r\n      class=\"col-md-4 media-info\"\r\n      appearance=\"outline\"\r\n      *ngIf=\"\r\n        typeOfMedium?.widthEnable == true ||\r\n        (applicationSingleMedia?.width &&\r\n          typeOfMedium?.othersEnable == undefined)\r\n      \"\r\n    >\r\n      <mat-label>Width</mat-label>\r\n      <input\r\n        matInput\r\n        [(ngModel)]=\"applicationSingleMedia.width\"\r\n        name=\"width\"\r\n        [readonly]=\"isAscUser && isDisableFieldOnUpdate\"\r\n      />\r\n    </mat-form-field>\r\n  </div>\r\n\r\n  <!-- SELCETED: MULTIMEDIA -->\r\n  <div\r\n    *ngIf=\"\r\n      s1Application.refTypeOfMedium == 'MULTIMEDIA-MOVING' ||\r\n      s1Application.refTypeOfMedium == 'MULTIMEDIA-STATIC'\r\n    \"\r\n  >\r\n    <mat-radio-group\r\n      class=\"col-md-12\"\r\n      aria-label=\"Select an option\"\r\n      [(ngModel)]=\"s1Application.refTypeOfMedium\"\r\n      name=\"refTypeOfMedium\"\r\n      [disabled]=\"isAscUser && isDisableFieldOnUpdate\"\r\n      (change)=\"\r\n        getTypeOfMedium(s1Application.refTypeOfMedium); emitMultimediaChanges()\r\n      \"\r\n    >\r\n      <mat-radio-button\r\n        value=\"MULTIMEDIA-MOVING\"\r\n        [checked]=\"s1Application.refTypeOfMedium == 'MULTIMEDIA-MOVING'\"\r\n        [disabled]=\"isAscUser && isDisableFieldOnUpdate\"\r\n      >\r\n        MULTIMEDIA-MOVING\r\n      </mat-radio-button>\r\n      &nbsp;&nbsp;\r\n      <mat-radio-button\r\n        value=\"MULTIMEDIA-STATIC\"\r\n        [checked]=\"s1Application.refTypeOfMedium == 'MULTIMEDIA-STATIC'\"\r\n        [disabled]=\"isAscUser && isDisableFieldOnUpdate\"\r\n      >\r\n        MULTIMEDIA-STATIC(MAX OF 5 LAYOUT)</mat-radio-button\r\n      >\r\n    </mat-radio-group>\r\n\r\n    <span *ngIf=\"!isAscUser && !isDisableFieldOnUpdate\"> <br /><br /> </span>\r\n\r\n    <div\r\n      class=\"row\"\r\n      *ngIf=\"\r\n        selectMultimedia ||\r\n        s1Application.refTypeOfMedium == 'MULTIMEDIA-MOVING' ||\r\n        s1Application.refTypeOfMedium == 'MULTIMEDIA-STATIC'\r\n      \"\r\n    >\r\n      <div class=\"col-md-12\" appearance=\"outline\">\r\n        <!-- <span  *ngFor=\"let s of selectedMultimediaList;\">\r\n              <table *ngIf=\"i?.description==s.typeOfMedium?.description\">\r\n                <tr>\r\n                  <td>\r\n                    <mat-checkbox [checked]=\"true\"\r\n                      [disabled]=\"isAscUser && isDisableFieldOnUpdate\">\r\n                      {{i?.description}}{{i?.sizeLength}}</mat-checkbox>\r\n                  </td>\r\n                  <td>{{s?.multimediaSizeLength}}\r\n                    <input type=\"text\" class=\"form-control\" [(ngModel)]=\"i.sizeLength\" (blur)=\"addMultimedia(i)\" formControlName=\"sizeLength\"\r\n                      name=\"sizeLength\" maxlength=\"200\" placeholder=\"Size/Length\">\r\n                  </td>\r\n                </tr>\r\n              </table>\r\n          </span> -->\r\n        <table>\r\n          <!-- <tr *ngFor=\"let i of typeOfMediumList; let index = index\">\r\n              <td>\r\n                <mat-checkbox [checked]=\"selectedMultimediaStringList.includes(i?.description)\"\r\n                  [disabled]=\"isAscUser && isDisableFieldOnUpdate\">\r\n                  {{i?.description}}</mat-checkbox>\r\n              </td>\r\n              <td>\r\n                  <input type=\"text\" class=\"form-control\" [value]=\"i?.sizeLength ? i?.sizeLength : 0\" (blur)=\"emitMultimediaChanges()\" (keyup)=\"addMultimedia(i, $event); emitMultimediaChanges()\"\r\n                    name=\"sizeLength\" maxlength=\"4\" placeholder=\"Size/Length (in seconds)\" (keydown)=\"validateFieldService.numbersOnly($event)\"\r\n                    [readonly]=\"((isAscUser && isDisableFieldOnUpdate) && (currentUser?.userRole?.name !== 'ROLE_ADMIN' && currentUser?.userRole?.name !== 'ROLE_SUPER_ADMIN')) && (s1Application?.decisionStatus !== 'APPROVED' || s1Application?.decisionStatus !== 'APPROVED_WITH_CAUTION') \">\r\n              </td>\r\n            </tr> -->\r\n\r\n          <ng-container\r\n            *ngIf=\"s1Application.refTypeOfMedium == 'MULTIMEDIA-MOVING'\"\r\n          >\r\n            <tr\r\n              *ngFor=\"\r\n                let item of multimediaMovingDTO.applicationMultimediaMovingList;\r\n                let i = index\r\n              \"\r\n              style=\"height: 40px\"\r\n            >\r\n              <td>\r\n                <mat-checkbox\r\n                  [(ngModel)]=\"item.hasSelected\"\r\n                  [disabled]=\"isAscUser && isDisableFieldOnUpdate\"\r\n                  (click)=\"emitMultimediaChanges()\"\r\n                >\r\n                  {{ item.multimediaMovingMedium | uppercase }}\r\n                </mat-checkbox>\r\n              </td>\r\n              <td *ngIf=\"i === 0\">\r\n                <input\r\n                  type=\"text\"\r\n                  class=\"form-control\"\r\n                  name=\"sizeLength\"\r\n                  maxlength=\"4\"\r\n                  placeholder=\"Size/Length (in seconds)\"\r\n                  (keydown)=\"isNumber($event)\"\r\n                  (blur)=\"emitMultimediaChanges()\"\r\n                  (keyup)=\"emitMultimediaChanges()\"\r\n                  [(ngModel)]=\"multimediaMovingDTO.sizeLength\"\r\n                  [readonly]=\"\r\n                    isAscUser &&\r\n                    isDisableFieldOnUpdate &&\r\n                    currentUser?.userRole?.name !== 'ROLE_ADMIN' &&\r\n                    currentUser?.userRole?.name !== 'ROLE_SUPER_ADMIN' &&\r\n                    (s1Application?.decisionStatus !== 'APPROVED' ||\r\n                      s1Application?.decisionStatus !== 'APPROVED_WITH_CAUTION')\r\n                  \"\r\n                />\r\n              </td>\r\n            </tr>\r\n          </ng-container>\r\n          <ng-container\r\n            *ngIf=\"s1Application.refTypeOfMedium == 'MULTIMEDIA-STATIC'\"\r\n          >\r\n            <tr\r\n              *ngFor=\"\r\n                let item of multimediaStaticDTO.applicationMultimediaStaticList;\r\n                let i = index\r\n              \"\r\n              style=\"height: 40px\"\r\n            >\r\n              <td>\r\n                <mat-checkbox\r\n                  [(ngModel)]=\"item.hasSelected\"\r\n                  [disabled]=\"isAscUser && isDisableFieldOnUpdate\"\r\n                >\r\n                  {{ item.multimediaStaticMedium | uppercase }}\r\n                </mat-checkbox>\r\n              </td>\r\n              <td *ngIf=\"item.multimediaStaticMedium !== 'digital static'\">\r\n                <input\r\n                  type=\"text\"\r\n                  class=\"form-control\"\r\n                  [name]=\"item.multimediaStaticMedium\"\r\n                  placeholder=\"Dimension\"\r\n                  (blur)=\"emitMultimediaChanges()\"\r\n                  [(ngModel)]=\"item.sizeLength\"\r\n                  (keyup)=\"emitMultimediaChanges()\"\r\n                  [readonly]=\"\r\n                    isAscUser &&\r\n                    isDisableFieldOnUpdate &&\r\n                    (currentUser?.userRole?.name !== 'ROLE_ADMIN' ||\r\n                    currentUser?.userRole?.name !== 'ROLE_SUPER_ADMIN') &&\r\n                    (s1Application?.decisionStatus !== 'APPROVED' ||\r\n                      s1Application?.decisionStatus !== 'APPROVED_WITH_CAUTION')\r\n                  \"\r\n                />\r\n              </td>\r\n            </tr>\r\n          </ng-container>\r\n        </table>\r\n      </div>\r\n\r\n      <!-- <div class=\"col-md-5\" *ngIf=\"s1Application.refTypeOfMedium=='MULTIMEDIA-MOVING'\">\r\n            <mat-form-field class=\"col-md-4\" appearance=\"outline\">\r\n              <mat-label>Length-{{mt}}++{{i.id}}</mat-label>\r\n              <input matInput [(ngModel)]=\"multimediaLength\" (change)=\"updateSizeLength(mt,multimediaLength)\"\r\n                formControlName=\"multimediaLength\" [readonly]=\"isAscUser\">\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"col-md-5\" *ngIf=\"s1Application.refTypeOfMedium=='MULTIMEDIA-STATIC'\">\r\n            <mat-form-field class=\"col-md-4\" appearance=\"outline\">\r\n              <mat-label>Size</mat-label>\r\n              <input matInput [(ngModel)]=\"applicationMultimediaStatic.multimediaSize\"  (change)=\"updateSizeLength(i)\"\r\n               formControlName=\"multimediaSize\" [readonly]=\"isAscUser\">\r\n            </mat-form-field>\r\n          </div> -->\r\n    </div>\r\n\r\n    <div class=\"row\"><br /></div>\r\n  </div>\r\n  <br /><br />\r\n</div>\r\n<!-- END OF FOR S1 APPLICATION -->\r\n\r\n<!-- ATTACHMENT SECTION -->\r\n<!-- FOR S1 APPLICATION -->\r\n<span\r\n  class=\"row fields\"\r\n  *ngIf=\"\r\n    (((!specialApplicationType.includes(\r\n      s1Application?.applicationType?.description?.toUpperCase()\r\n    ) ||\r\n      (specialApplicationType.includes(\r\n        s1Application?.applicationType?.description?.toUpperCase()\r\n      ) &&\r\n        s1Application?.applicationRequest?.status == 'APPROVED') ||\r\n      (s1Application?.formType === 'MULTIPLE' &&\r\n        s1Application?.multipleApplication)) &&\r\n      s1Application?.formType !== 'MULTIPLE') ||\r\n      (s1Application?.formType === 'MULTIPLE' &&\r\n        s1Application?.multipleApplication)) &&\r\n    applicationStage !== 'S2-APPLICATION'\r\n  \"\r\n>\r\n  <app-attachment-document\r\n    [s1Application]=\"s1Application\"\r\n    [labelMainDocument]=\"labelMainDocument\"\r\n    [isAscUser]=\"isAscUser\"\r\n    [isDisableFieldOnUpdate]=\"isDisableFieldOnUpdate\"\r\n    [originalAttachmentDocuments]=\"originalAttachmentDocuments\"\r\n    [revisionAttachmentDocuments]=\"revisionAttachmentDocuments\"\r\n    [complianceAttachmentDocuments]=\"complianceAttachmentDocuments\"\r\n    [applicationStage]=\"applicationStage\"\r\n  >\r\n  </app-attachment-document>\r\n\r\n  <!--  [showMainDocumentUploadButton]=\"showMainDocumentUploadButton\" [showMainDocumentViewButton]=\"showMainDocumentViewButton\" [safeURLMainDoc]=\"safeURLMainDoc\"\r\n     [showSupportDocumentFrame]=\"showSupportDocumentFrame\" [showSupportiveDocumentUploadButton]=\"showSupportiveDocumentUploadButton\" [showSupportiveDocumentViewButton]=\"showSupportiveDocumentViewButton\" [safeURLSupportDoc]=\"safeURLSupportDoc\"\r\n      [revisionLetterAttachment]=\"revisionLetterAttachment\" [showRevisionLetterUploadButton]=\"showRevisionLetterUploadButton\" [showRevisionLetterViewButton]=\"showRevisionLetterViewButton\" [safeURLRevisionLetter]=\"safeURLRevisionLetter\" -->\r\n\r\n  <!-- FOR S1 APPLICATION -->\r\n  <div class=\"row\">\r\n    <!-- <b *ngIf=\"currentUser?.userRole?.name=='ROLE_APPLICANT'\"><b class=\"material-icons\">error_outline</b> Attachments' total file size should not exceed 15MB.</b> -->\r\n\r\n    <!-- MAIN DOCUMENT -->\r\n    <!-- <div class=\"row\">\r\n        <h4>\r\n          <i class=\"material-icons\">bookmark</i> &nbsp;{{labelMainDocument}}\r\n        </h4>\r\n        <br>\r\n        <div class=\"col-md-12\" appearance=\"outline\">\r\n          <mat-label *ngIf=\"attachmentDocuments[0]?.originalFilename\">Filename: </mat-label>\r\n          <input #mainInput matInput [value]=\"attachmentDocuments[0]?.originalFilename\" disabled\r\n            *ngIf=\"attachmentDocuments[0]?.originalFilename\"><br>\r\n          <input #mainFile class=\"file-upload\" type=\"file\" accept=\".pdf\" (change)=\"selectFile($event, 'MAIN')\"\r\n            [hidden]=\"(isAscUser && isDisableFieldOnUpdate) || attachmentDocuments[0]?.originalFilename != null\"\r\n            *ngIf=\"attachmentDocuments?.length==0 || (attachmentDocuments?.length>=1 && attachmentDocuments[0]===null) || s1Application?.internalStatus=='SAVED'|| attachmentDocuments[0]?.originalFilename != null ||\r\n            ((s1Application?.internalStatus=='S1_APPLICATION_REVIEWED' || s1Application?.internalStatus=='COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER')\r\n              &&(s1Application?.decisionStatus=='INCOMPLETE'||s1Application?.decisionStatus=='APPROVED'||s1Application?.decisionStatus=='APPROVED W/ CAUTION'))\" />\r\n        </div>\r\n\r\n        <div class=\"row\"><br></div>\r\n        <div class=\"col-md-12\" appearance=\"outline\"\r\n          *ngIf=\"showMainDocumentUploadButton==true||attachmentDocuments?.length>0\">\r\n          <button mat-raised-button class=\"button-red button-right\" (click)=\"viewDocument('MAIN')\"\r\n            *ngIf=\"showMainDocumentViewButton||s1Application?.mainAttachmentReference\">\r\n            <i class=\"material-icons add-document\">open_in_new</i> VIEW DOCUMENT\r\n          </button>\r\n          &nbsp; &nbsp;\r\n          <button mat-raised-button class=\"button-red button-right\" (click)=\"deleteUploadedFile('MAIN')\"\r\n            [hidden]=\"!showMainDocumentViewButton&&!s1Application?.mainAttachmentReference||(currentUser?.userRole?.name!='ROLE_APPLICANT'&&currentUser?.userRole?.name!='ROLE_ENCODER')\"\r\n            *ngIf=\"showMainDocumentViewButton||s1Application?.mainAttachmentReference||(s1Application?.internalStatus=='SAVED'||\r\n            ((s1Application?.internalStatus=='S1_APPLICATION_REVIEWED' || s1Application?.internalStatus=='COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER')\r\n              &&(s1Application?.decisionStatus=='INCOMPLETE'||s1Application?.decisionStatus=='APPROVED'||s1Application?.decisionStatus=='APPROVED W/ CAUTION')))\">\r\n            <i class=\"material-icons add-document\">delete</i> DELETE ATTACHMENT\r\n          </button>\r\n          &nbsp; &nbsp;\r\n          <button mat-raised-button class=\"button-red button-right\" (click)=\"uploadDocument()\"\r\n            [disabled]=\"!safeURLMainDoc||!showMainDocumentUploadButton\" [hidden]=\"(isAscUser && isDisableFieldOnUpdate)\"\r\n            *ngIf=\"attachmentDocuments[0]?.originalFilename == null\">\r\n            <i class=\"material-icons add-document\">upload</i> UPLOAD\r\n          </button>\r\n        </div>\r\n        <div class=\"col-md-12\">\r\n          <hr>\r\n        </div>\r\n      </div> -->\r\n\r\n    <!-- SUPPORTING DOC -->\r\n    <!-- <div class=\"row\" *ngIf=\"showSupportDocumentFrame==true || originalAttachmentDocuments?.length>0 || revisionAttachmentDocuments?.length>0 || complianceAttachmentDocuments?.length>0\"> -->\r\n    <!-- <h4>\r\n          <i class=\"material-icons\">bookmark</i> &nbsp;SUPPORT DOCUMENTS\r\n        </h4>\r\n\r\n        <div class=\"col-md-12\" appearance=\"outline\"\r\n          [hidden]=\"(isAscUser && isDisableFieldOnUpdate)||attachmentDocuments[1]?.originalFilename||s1Application?.supportingAttachmentReference\"\r\n          *ngIf=\"(attachmentDocuments?.length<2||attachmentDocuments?.length!=2)\">\r\n\r\n          <mat-checkbox (click)=\"verifyNoDocumentAttached()\" [(ngModel)]=\"s1Application.hasNoSupportingDocs\"\r\n            (checked)=\"s1Application.hasNoSupportingDocs\" formControlName=\"hasNoSupportingDocs\"\r\n            *ngIf=\"currentUser.userRole.name=='ROLE_APPLICANT' || (currentUser.userRole.name=='ROLE_ENCODER' && s1Application?.internalStatus === undefined )\">\r\n            I certify that no supporting document is attached to this S1 application.</mat-checkbox>\r\n          <br>\r\n        </div>\r\n\r\n        <p *ngIf=\"(currentUser.userRole.name!='ROLE_APPLICANT'&&s1Application.hasNoSupportingDocs)\r\n        ||(currentUser.userRole.name=='ROLE_AD_SPECIALIST'&&s1Application.hasNoSupportingDocs)\">\r\n          Supporting Document was not submitted.\r\n        </p>\r\n        <div class=\"col-md-12\"><br></div> -->\r\n\r\n    <!-- <div *ngIf=\"!s1Application.hasNoSupportingDocs\">\r\n          <div class=\"col-md-12\" appearance=\"outline\">\r\n            <mat-label *ngIf=\"attachmentDocuments[1]?.originalFilename\">Filename: </mat-label>\r\n            <input matInput [value]=\"attachmentDocuments[1]?.originalFilename\" disabled\r\n              *ngIf=\"attachmentDocuments[1]?.originalFilename\"><br>\r\n\r\n            <input #supportiveFile class=\"file-upload\" type=\"file\" accept=\".pdf\"\r\n              (change)=\"selectFile($event, 'SUPPORTIVE')\"\r\n              [hidden]=\"(isAscUser && isDisableFieldOnUpdate) || attachmentDocuments[1]?.originalFilename\"\r\n              *ngIf=\"attachmentDocuments?.length<2|| (attachmentDocuments?.length>=2 && attachmentDocuments[1]===null) ||s1Application?.internalStatus=='SAVED'|| attachmentDocuments[1]?.originalFilename != null ||\r\n              ((s1Application?.internalStatus=='S1_APPLICATION_REVIEWED' || s1Application?.internalStatus=='COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER')\r\n               &&(s1Application?.decisionStatus=='INCOMPLETE'||s1Application?.decisionStatus=='APPROVED'||s1Application?.decisionStatus=='APPROVED W/ CAUTION'))\" />\r\n          </div>\r\n\r\n          <div class=\"row\"><br></div>\r\n          <div class=\"col-md-12\" appearance=\"outline\"\r\n            *ngIf=\"showSupportiveDocumentUploadButton==true||attachmentDocuments?.length>1\">\r\n            <button mat-raised-button class=\"button-red button-right\" (click)=\"viewDocument('SUPPORTIVE')\"\r\n              *ngIf=\"showSupportiveDocumentViewButton||s1Application?.supportingAttachmentReference\">\r\n              <i class=\"material-icons add-document\">open_in_new</i> VIEW DOCUMENT\r\n            </button>\r\n            &nbsp; &nbsp;\r\n            <button mat-raised-button class=\"button-red button-right\" (click)=\"deleteUploadedFile('SUPPORTIVE')\"\r\n              [hidden]=\"!showSupportiveDocumentViewButton&&!s1Application?.supportingAttachmentReference||(currentUser?.userRole?.name!='ROLE_APPLICANT'&&currentUser?.userRole?.name!='ROLE_ENCODER')\"\r\n              *ngIf=\"showSupportiveDocumentViewButton||s1Application?.supportingAttachmentReference||(s1Application?.internalStatus=='SAVED'||\r\n              ((s1Application?.internalStatus=='S1_APPLICATION_REVIEWED' || s1Application?.internalStatus=='COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER')\r\n                &&(s1Application?.decisionStatus=='INCOMPLETE'||s1Application?.decisionStatus=='APPROVED'||s1Application?.decisionStatus=='APPROVED W/ CAUTION')))\">\r\n              <i class=\"material-icons add-document\">delete</i> DELETE ATTACHMENT\r\n            </button>\r\n            &nbsp; &nbsp;\r\n            <button mat-raised-button class=\"button-red button-right\" (click)=\"uploadDocument()\"\r\n              [disabled]=\"!safeURLSupportDoc||!showSupportiveDocumentUploadButton\"\r\n              [hidden]=\"(isAscUser && isDisableFieldOnUpdate)\"\r\n              *ngIf=\"s1Application?.supportingAttachmentReference==null||showSupportiveDocumentUploadButton||attachmentDocuments[1]?.originalFilename === null\">\r\n              <i class=\"material-icons add-document\">upload</i> UPLOAD\r\n            </button>\r\n          </div>\r\n          <div class=\"row\"><br></div>\r\n          <br>\r\n        </div> -->\r\n\r\n    <!-- FOR ADSPE / SCREENER / REVIEWER -->\r\n    <!-- <div class=\"row fields\"> -->\r\n    <div\r\n      class=\"col-md-12\"\r\n      appearance=\"outline\"\r\n      *ngIf=\"\r\n        currentUser.userRole.name == 'ROLE_AD_SPECIALIST' &&\r\n        (s1Application?.internalStatus ===\r\n          'S1_APPLICATION_VERIFIED_BY_ENCODER' ||\r\n          s1Application?.internalStatus ==\r\n            'COMPLIANCE_DOCUMENT_VERIFIED_BY_ENCODER' ||\r\n          s1Application?.internalStatus === 'REVISION_VERIFIED_BY_ENCODER') &&\r\n        s1Application.supportingAttachmentReference !== null\r\n      \"\r\n    >\r\n      <!-- *ngIf=\"showSupportiveDocumentDownloadButton==true||attachmentDocuments?.length>1\" -->\r\n      <div class=\"row\"><br /></div>\r\n      <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n        <mat-label>Type of Document</mat-label>\r\n        <mat-select\r\n          [(ngModel)]=\"supportingDocument.typeOfDocument\"\r\n          name=\"typeOfDocument\"\r\n        >\r\n          <mat-option\r\n            *ngFor=\"let i of typeOfDocumentList\"\r\n            [value]=\"i\"\r\n            (click)=\"setTypeOfDocument(i)\"\r\n          >\r\n            {{ i.description }}\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field\r\n        class=\"col-md-6 hideIndex\"\r\n        appearance=\"outline\"\r\n        style=\"display: none\"\r\n      >\r\n        <mat-label>index</mat-label>\r\n        <input matInput [value]=\"supportingDocumentIndex\" />\r\n      </mat-form-field>\r\n\r\n      <mat-form-field\r\n        class=\"col-md-6 document-form-margin\"\r\n        appearance=\"outline\"\r\n        *ngIf=\"typeOfDocument?.inputEnable\"\r\n      >\r\n        <input matInput [(ngModel)]=\"supportingDocument.input\" name=\"input\" />\r\n      </mat-form-field>\r\n\r\n      <mat-form-field\r\n        class=\"col-md-6 document-form-margin\"\r\n        appearance=\"outline\"\r\n        *ngIf=\"typeOfDocument?.variantEnable\"\r\n      >\r\n        <mat-label>Variant</mat-label>\r\n        <input\r\n          matInput\r\n          [(ngModel)]=\"supportingDocument.variant\"\r\n          name=\"variant\"\r\n        />\r\n      </mat-form-field>\r\n\r\n      <mat-form-field\r\n        class=\"col-md-6 document-form-margin\"\r\n        appearance=\"outline\"\r\n        *ngIf=\"typeOfDocument?.expiresOnEnable\"\r\n      >\r\n        <mat-label>Expires on</mat-label>\r\n        <input\r\n          matInput\r\n          placeholder=\"Date\"\r\n          [matDatepicker]=\"expiresOn\"\r\n          readonly\r\n          [min]=\"todayDate\"\r\n          [(ngModel)]=\"supportingDocument.expiresOn\"\r\n          name=\"expiresOn\"\r\n          [readonly]=\"true\"\r\n        />\r\n        <mat-datepicker-toggle matSuffix [for]=\"expiresOn\">\r\n          <mat-datepicker color=\"warn\" #expiresOn></mat-datepicker>\r\n        </mat-datepicker-toggle>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field\r\n        class=\"col-md-6 document-form-margin\"\r\n        appearance=\"outline\"\r\n        *ngIf=\"typeOfDocument?.basedOnEnable\"\r\n      >\r\n        <mat-label>Based on</mat-label>\r\n        <input\r\n          matInput\r\n          [(ngModel)]=\"supportingDocument.basedOn\"\r\n          name=\"basedOn\"\r\n          required\r\n        />\r\n      </mat-form-field>\r\n\r\n      <mat-form-field\r\n        class=\"col-md-6 document-form-margin\"\r\n        appearance=\"outline\"\r\n        *ngIf=\"typeOfDocument?.dateOfLaunchEnable\"\r\n      >\r\n        <mat-label>Date of Launch</mat-label>\r\n        <input\r\n          matInput\r\n          placeholder=\"Date\"\r\n          [matDatepicker]=\"dateOfLaunch\"\r\n          readonly\r\n          [min]=\"todayDate\"\r\n          [(ngModel)]=\"supportingDocument.dateOfLaunch\"\r\n          name=\"dateOfLaunch\"\r\n          [readonly]=\"true\"\r\n        />\r\n        <mat-datepicker-toggle matSuffix [for]=\"dateOfLaunch\">\r\n          <mat-datepicker color=\"warn\" #dateOfLaunch></mat-datepicker>\r\n        </mat-datepicker-toggle>\r\n        <!-- <input matInput [(ngModel)]=\"supportingDocument.dateOfLaunch\" formControlName=\"dateOfLaunch\" name=\"dateOfLaunch\"> -->\r\n      </mat-form-field>\r\n\r\n      <mat-form-field\r\n        class=\"col-md-6 document-form-margin\"\r\n        appearance=\"outline\"\r\n        *ngIf=\"typeOfDocument?.remarksEnable\"\r\n      >\r\n        <mat-label>Remarks</mat-label>\r\n        <textarea\r\n          matInput\r\n          [(ngModel)]=\"supportingDocument.remarks\"\r\n          name=\"remarks\"\r\n        ></textarea>\r\n      </mat-form-field>\r\n      <br />\r\n\r\n      <div class=\"col-md-12\" *ngIf=\"!isUpdate\">\r\n        <button\r\n          mat-raised-button\r\n          class=\"col-md-12 button-red\"\r\n          [disabled]=\"\r\n            supportingDocument.typeOfDocument === undefined ||\r\n            (typeOfDocument?.variantEnable &&\r\n              (supportingDocument.variant === undefined ||\r\n                supportingDocument.variant === '')) ||\r\n            (typeOfDocument?.expiresOnEnable &&\r\n              supportingDocument.expiresOn === undefined) ||\r\n            (typeOfDocument?.basedOnEnable &&\r\n              supportingDocument.basedOn === undefined) ||\r\n            (typeOfDocument?.dateOfLaunchEnable &&\r\n              supportingDocument.dateOfLaunch === undefined) ||\r\n            (typeOfDocument?.remarksEnable &&\r\n              supportingDocument.remarks === undefined)\r\n          \"\r\n          (click)=\"addSupportiveDocument(supportingDocument)\"\r\n        >\r\n          <i class=\"material-icons add-document\">task_alt</i> ADD TO LIST\r\n        </button>\r\n      </div>\r\n      &nbsp;&nbsp;\r\n      <div class=\"col-md-12\" *ngIf=\"isUpdate\">\r\n        <button\r\n          mat-raised-button\r\n          class=\"col-md-12 button-red\"\r\n          (click)=\"\r\n            modifyTypeOfDocument(supportingDocument, supportingDocumentIndex)\r\n          \"\r\n          [disabled]=\"supportingDocument.typeOfDocument === undefined\"\r\n        >\r\n          <i class=\"material-icons add-document\">task_alt</i> Update\r\n        </button>\r\n      </div>\r\n      <div class=\"row\"><br /></div>\r\n      <hr />\r\n    </div>\r\n\r\n    <div class=\"col-md-12\">\r\n      <div\r\n        class=\"col-md-12 mat-elevation-z8 fields\"\r\n        appearance=\"outline\"\r\n        *ngIf=\"supportiveDocumentList?.length > 0\"\r\n      >\r\n        <table\r\n          mat-table\r\n          [dataSource]=\"dataSource || supportiveDocumentList\"\r\n          matSort\r\n        >\r\n          <ng-container matColumnDef=\"id\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n              TYPE OF DOCUMENT\r\n            </th>\r\n            <td mat-cell *matCellDef=\"let element; let i = index\">{{ i }}</td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"typeOfDocument\">\r\n            <th mat-header-cell *matHeaderCellDef>TYPE OF DOCUMENT</th>\r\n            <td mat-cell *matCellDef=\"let element\">\r\n              {{ element?.typeOfDocument?.description }}\r\n            </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"input\">\r\n            <th mat-header-cell *matHeaderCellDef>INPUT</th>\r\n            <td mat-cell *matCellDef=\"let element\">\r\n              {{ element?.input == undefined ? \"N/A\" : element?.input }}\r\n            </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"variant\">\r\n            <th mat-header-cell *matHeaderCellDef>VARIANT</th>\r\n            <td mat-cell *matCellDef=\"let element\">\r\n              {{ element?.variant == undefined ? \"N/A\" : element?.variant }}\r\n            </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"expiresOn\">\r\n            <th mat-header-cell *matHeaderCellDef>EXPIRES ON</th>\r\n            <td mat-cell *matCellDef=\"let element\">\r\n              {{\r\n                element?.expiresOn == undefined\r\n                  ? \"N/A\"\r\n                  : (element?.expiresOn | date: \"yyyy-MM-dd\")\r\n              }}\r\n            </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"basedOn\">\r\n            <th mat-header-cell *matHeaderCellDef>BASED ON</th>\r\n            <td mat-cell *matCellDef=\"let element\">\r\n              {{\r\n                element?.basedOn == undefined\r\n                  ? \"N/A\"\r\n                  : (element?.basedOn | date: \"yyyy-MM-dd\")\r\n              }}\r\n            </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"remarks\">\r\n            <th mat-header-cell *matHeaderCellDef>REMARKS</th>\r\n            <td mat-cell *matCellDef=\"let element\">\r\n              {{ element?.remarks == undefined ? \"N/A\" : element?.remarks }}\r\n            </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"action\">\r\n            <th mat-header-cell *matHeaderCellDef>ACTIONS</th>\r\n            <td mat-cell *matCellDef=\"let element; let i = index\">\r\n              <!-- <span class=\"a-icon\">\r\n                    <i class=\"material-icons\" style=\"color:blue\" (click)=\"getTypeOfDocument(element, i)\">edit</i>\r\n                  </span> -->\r\n              <span\r\n                class=\"a-icon\"\r\n                [hidden]=\"s1Application?.hasOngoingAppeal\"\r\n                *ngIf=\"\r\n                  s1Application?.internalStatus ===\r\n                    'S1_APPLICATION_VERIFIED_BY_ENCODER' ||\r\n                  s1Application?.internalStatus ==\r\n                    'COMPLIANCE_DOCUMENT_VERIFIED_BY_ENCODER' ||\r\n                  s1Application?.internalStatus ===\r\n                    'REVISION_VERIFIED_BY_ENCODER'\r\n                \"\r\n              >\r\n                <i class=\"material-icons\" (click)=\"removeTypeOfDocument(i)\"\r\n                  >delete</i\r\n                >\r\n              </span>\r\n\r\n              <!-- <button >\r\n                      <i class=\"material-icons\" style=\"color:blue\">edit</i>\r\n                    </button> -->\r\n              <!-- <button (click)=\"removeTypeOfDocument(i)\">\r\n                      <i class=\"material-icons\">delete</i>\r\n                    </button> -->\r\n            </td>\r\n          </ng-container>\r\n\r\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n          <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n        </table>\r\n        <div\r\n          class=\"no-record\"\r\n          [hidden]=\"dataSource && dataSource?.data?.length > 0\"\r\n          *ngIf=\"supportiveDocumentList?.length == 0\"\r\n        >\r\n          No supporting document found.\r\n        </div>\r\n        <!-- <mat-paginator [pageSizeOptions]=\"[10, 20, 50]\" showFirstLastButtons></mat-paginator> -->\r\n      </div>\r\n    </div>\r\n\r\n    <!-- </div> -->\r\n\r\n    <!-- FOR REVISION - REVISION LETTER -->\r\n    <!-- <div class=\"row\" *ngIf=\"(s1Application?.internalStatus==='S1_APPLICATION_REVIEWED'&&(s1Application?.decisionStatus=='APPROVED'||s1Application?.decisionStatus=='APPROVED W/ CAUTION'))\r\n      ||s1Application?.revisionLetterAttachmentReference\" [hidden]=\"s1Application?.appliedS2 && s1Application?.revisionLetterAttachmentReference === ''\">\r\n        <div class=\"col-md-12\">\r\n          <hr>\r\n        </div>\r\n        <h4>\r\n          <i class=\"material-icons\">bookmark</i> &nbsp;REVISION LETTER\r\n        </h4>\r\n        <br>\r\n        <div class=\"col-md-12\" appearance=\"outline\">\r\n          <mat-label\r\n            *ngIf=\"revisionLetterAttachment?.originalFilename||attachmentDocuments[1]?.revisionLetterAttachmentReference\">\r\n            Filename: </mat-label>\r\n          <input matInput\r\n            [value]=\"revisionLetterAttachment?.originalFilename||attachmentDocuments[1]?.revisionLetterAttachmentReference||attachmentDocuments[2]?.revisionLetterAttachmentReference\"\r\n            disabled *ngIf=\"revisionLetterAttachment?.originalFilename\"><br>\r\n\r\n          <input #revisionLetterFile class=\"file-upload\" type=\"file\" accept=\".pdf\"\r\n            (change)=\"selectFile($event, 'REVISION_LETTER')\"\r\n            [hidden]=\"(isAscUser && isDisableFieldOnUpdate)||revisionLetterAttachment?.originalFilename\"\r\n            *ngIf=\"attachmentDocuments?.length==0||s1Application?.internalStatus=='SAVED'||\r\n            ((s1Application?.internalStatus=='S1_APPLICATION_REVIEWED' || s1Application?.internalStatus=='COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER')\r\n              &&(s1Application?.decisionStatus=='INCOMPLETE'||s1Application?.decisionStatus=='APPROVED'||s1Application?.decisionStatus=='APPROVED W/ CAUTION'))\" />\r\n        </div>\r\n\r\n        <div class=\"row\"><br></div>\r\n        <div class=\"col-md-12\" appearance=\"outline\"\r\n          *ngIf=\"showRevisionLetterUploadButton==true||attachmentDocuments?.length>1||s1Application?.revisionLetterAttachmentReference\">\r\n          <button mat-raised-button class=\"button-red button-right\" (click)=\"viewDocument('REVISION_LETTER')\"\r\n            *ngIf=\"showRevisionLetterViewButton==true||s1Application?.revisionLetterAttachmentReference\">\r\n            <i class=\"material-icons add-document\">open_in_new</i> VIEW DOCUMENT\r\n          </button>\r\n          &nbsp; &nbsp;\r\n          <button mat-raised-button class=\"button-red button-right\" (click)=\"deleteUploadedFile('REVISION_LETTER')\"\r\n            [hidden]=\"!showRevisionLetterViewButton&&!s1Application?.revisionLetterAttachmentReference||(currentUser?.userRole?.name!='ROLE_APPLICANT'&&currentUser?.userRole?.name!='ROLE_ENCODER')\"\r\n            *ngIf=\"showRevisionLetterViewButton||s1Application?.revisionLetterAttachmentReference||(s1Application?.internalStatus=='SAVED'||\r\n            ((s1Application?.internalStatus=='S1_APPLICATION_REVIEWED' || s1Application?.internalStatus=='COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER')\r\n              &&(s1Application?.decisionStatus=='INCOMPLETE'||s1Application?.decisionStatus=='APPROVED'||s1Application?.decisionStatus=='APPROVED W/ CAUTION')))\">\r\n            <i class=\"material-icons add-document\">delete</i> DELETE ATTACHMENT\r\n          </button>\r\n          &nbsp; &nbsp;\r\n          <button mat-raised-button class=\"button-red button-right\" (click)=\"uploadDocument()\"\r\n            [disabled]=\"!safeURLRevisionLetter||!showRevisionLetterUploadButton\"\r\n            [hidden]=\"(isAscUser && isDisableFieldOnUpdate)\" *ngIf=\"showRevisionLetterUploadButton\">\r\n            <i class=\"material-icons add-document\">upload</i> UPLOAD\r\n          </button>\r\n        </div>\r\n        <div class=\"row\"><br></div>\r\n        <br>\r\n        <br>\r\n      </div> -->\r\n  </div>\r\n</span>\r\n\r\n<!--  //////////////////////////////////////// S2 APPLCIATION ///////////////////////////////////////////////////////////// -->\r\n\r\n<!-- FOR S2 APPLICATION -->\r\n<div class=\"row fields\" *ngIf=\"applicationStage === 'S2-APPLICATION'\">\r\n  <div class=\"row\">\r\n    <!-- FOR S1 APPLICATION -->\r\n    <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n      <mat-label>Ad Title</mat-label>\r\n      <input\r\n        matInput\r\n        [value]=\"s1Application.adTitle\"\r\n        name=\"adTitle\"\r\n        [readonly]=\"\r\n          (isAscUser && isDisableFieldOnUpdate) ||\r\n          applicationStage === 'S2-APPLICATION'\r\n        \"\r\n      />\r\n    </mat-form-field>\r\n  </div>\r\n\r\n  <div class=\"row\">\r\n    <mat-form-field\r\n      class=\"col-md-6\"\r\n      appearance=\"outline\"\r\n      *ngIf=\"\r\n        s1Application?.formType !== 'MULTIPLE' ||\r\n        (s1Application?.formType === 'MULTIPLE' &&\r\n          s1Application.multipleApplication)\r\n      \"\r\n    >\r\n      <mat-label>Reference Code of Previously-Approved Material</mat-label>\r\n      <input\r\n        matInput\r\n        [value]=\"s1Application.previousRefCode\"\r\n        name=\"previousRefCode\"\r\n        [readonly]=\"\r\n          (isAscUser && isDisableFieldOnUpdate) ||\r\n          applicationStage === 'S2-APPLICATION'\r\n        \"\r\n      />\r\n    </mat-form-field>\r\n\r\n    <mat-form-field class=\"col-md-6\" appearance=\"outline\">\r\n      <mat-label>Tag Line</mat-label>\r\n      <input\r\n        matInput\r\n        [value]=\"s1Application.tagLine\"\r\n        name=\"tagLine\"\r\n        [readonly]=\"\r\n          (isAscUser && isDisableFieldOnUpdate) ||\r\n          applicationStage === 'S2-APPLICATION'\r\n        \"\r\n      />\r\n    </mat-form-field>\r\n  </div>\r\n</div>\r\n\r\n<!-- FOR S2 APPLICATION -->\r\n<div class=\"row fields\" *ngIf=\"applicationStage === 'S2-APPLICATION'\">\r\n  <h4><mat-icon>bookmark</mat-icon> &nbsp;TYPE OF MEDIUM</h4>\r\n\r\n  <mat-radio-group\r\n    class=\"col-md-12\"\r\n    aria-label=\"Select an option\"\r\n    [value]=\"s1Application.refTypeOfMedium\"\r\n    [disabled]=\"true\"\r\n  >\r\n    <mat-radio-button\r\n      value=\"SINGLE MEDIA\"\r\n      [checked]=\"\r\n        s2Application?.applicationForm?.refTypeOfMedium == 'SINGLE MEDIA'\r\n      \"\r\n    >\r\n      SINGLE MEDIA\r\n    </mat-radio-button>\r\n    &nbsp;&nbsp;\r\n    <mat-radio-button\r\n      value=\"MULTIMEDIA\"\r\n      [checked]=\"\r\n        selectMultimedia ||\r\n        s1Application.refTypeOfMedium == 'MULTIMEDIA' ||\r\n        s1Application.refTypeOfMedium == 'MULTIMEDIA-STATIC' ||\r\n        s1Application.refTypeOfMedium == 'MULTIMEDIA-MOVING'\r\n      \"\r\n    >\r\n      MULTIMEDIA</mat-radio-button\r\n    >\r\n    <br /><br />\r\n  </mat-radio-group>\r\n  <mat-form-field\r\n    class=\"col-md-11\"\r\n    appearance=\"outline\"\r\n    *ngIf=\"s1Application.refTypeOfMedium == 'SINGLE MEDIA'\"\r\n  >\r\n    <mat-label>Single Media <span class=\"required\">*</span></mat-label>\r\n    <input\r\n      matInput\r\n      name=\"singleMedia\"\r\n      [value]=\"\r\n        applicationSingleMedia?.mediumExecution?.typeOfMedium?.description\r\n      \"\r\n      [readonly]=\"true\"\r\n    />\r\n  </mat-form-field>\r\n\r\n  <div *ngIf=\"s1Application.refTypeOfMedium == 'SINGLE MEDIA'\">\r\n    <mat-form-field\r\n      class=\"col-md-4 media-info\"\r\n      appearance=\"outline\"\r\n      *ngIf=\"\r\n        typeOfMedium?.executionEnable == true ||\r\n        applicationSingleMedia?.mediumExecution ||\r\n        applicationSingleMedia?.mediumExecution?.typeOfExecution\r\n          ?.typeOfExecution === 'NO EXECUTION'\r\n      \"\r\n    >\r\n      <mat-label>Execution <span class=\"required\">*</span></mat-label>\r\n      <input\r\n        matInput\r\n        name=\"execution\"\r\n        [value]=\"\r\n          applicationSingleMedia?.mediumExecution?.typeOfExecution\r\n            ?.typeOfExecution\r\n        \"\r\n        [readonly]=\"true\"\r\n      />\r\n    </mat-form-field>\r\n\r\n    <mat-form-field\r\n      class=\"col-md-4 media-info\"\r\n      appearance=\"outline\"\r\n      *ngIf=\"\r\n        typeOfMedium?.languageEnable == true || applicationSingleMedia?.dialect\r\n      \"\r\n    >\r\n      <mat-label>Language/Dialect</mat-label>\r\n      <input\r\n        matInput\r\n        name=\"language\"\r\n        [value]=\"applicationSingleMedia?.dialect?.dialect\"\r\n        [readonly]=\"isAscUser && isDisableFieldOnUpdate\"\r\n      />\r\n    </mat-form-field>\r\n\r\n    <mat-form-field\r\n      class=\"col-md-4 media-info\"\r\n      appearance=\"outline\"\r\n      *ngIf=\"\r\n        typeOfMedium?.othersEnable == true || applicationSingleMedia?.others\r\n      \"\r\n    >\r\n      <mat-label>Others</mat-label>\r\n      <input\r\n        matInput\r\n        name=\"others\"\r\n        [value]=\"applicationSingleMedia?.others\"\r\n        [readonly]=\"isAscUser && isDisableFieldOnUpdate\"\r\n      />\r\n    </mat-form-field>\r\n\r\n    <mat-form-field\r\n      class=\"col-md-3 media-info\"\r\n      appearance=\"outline\"\r\n      *ngIf=\"\r\n        typeOfMedium?.sizeLengthEnable == true ||\r\n        typeOfMedium?.lengthEnable == true ||\r\n        applicationSingleMedia?.sizeLength\r\n      \"\r\n    >\r\n      <mat-label>Size / Length (in seconds)</mat-label>\r\n      <input\r\n        matInput\r\n        name=\"sizeLength\"\r\n        [value]=\"\r\n          applicationSingleMedia?.sizeLength\r\n            ? applicationSingleMedia?.sizeLength\r\n            : 0\r\n        \"\r\n        [readonly]=\"true\"\r\n      />\r\n    </mat-form-field>\r\n\r\n    <mat-form-field\r\n      class=\"col-md-4 media-info\"\r\n      appearance=\"outline\"\r\n      *ngIf=\"typeOfMedium?.widthEnable == true || applicationSingleMedia?.width\"\r\n    >\r\n      <mat-label>Width</mat-label>\r\n      <input\r\n        matInput\r\n        name=\"width\"\r\n        [value]=\"\r\n          applicationSingleMedia?.width ? applicationSingleMedia?.width : 0\r\n        \"\r\n        [readonly]=\"isAscUser && isDisableFieldOnUpdate\"\r\n      />\r\n    </mat-form-field>\r\n  </div>\r\n\r\n  <div\r\n    *ngIf=\"\r\n      selectMultimedia == true ||\r\n      s1Application.refTypeOfMedium == 'MULTIMEDIA-MOVING' ||\r\n      s1Application.refTypeOfMedium == 'MULTIMEDIA-STATIC'\r\n    \"\r\n  >\r\n    <mat-radio-group\r\n      class=\"col-md-12\"\r\n      aria-label=\"Select an option\"\r\n      [value]=\"s1Application.refTypeOfMedium\"\r\n      [disabled]=\"true\"\r\n    >\r\n      <mat-radio-button\r\n        value=\"MULTIMEDIA-MOVING\"\r\n        [checked]=\"s1Application.refTypeOfMedium == 'MULTIMEDIA-MOVING'\"\r\n      >\r\n        MULTIMEDIA-MOVING\r\n      </mat-radio-button>\r\n      &nbsp;&nbsp;\r\n      <mat-radio-button\r\n        value=\"MULTIMEDIA-STATIC\"\r\n        [checked]=\"s1Application.refTypeOfMedium == 'MULTIMEDIA-STATIC'\"\r\n      >\r\n        MULTIMEDIA-STATIC(MAX OF 5 LAYOUT)</mat-radio-button\r\n      >\r\n    </mat-radio-group>\r\n\r\n    <br /><br />\r\n    <div\r\n      class=\"row\"\r\n      *ngIf=\"\r\n        s1Application?.refTypeOfMedium == 'MULTIMEDIA-MOVING' ||\r\n        s1Application?.refTypeOfMedium == 'MULTIMEDIA-STATIC' ||\r\n        s1Application?.refTypeOfMedium == 'MULTIMEDIA'\r\n      \"\r\n    >\r\n      <!-- *ngIf=\"multimediaStaticList?.length==0&&multimediaMovingList?.length==0\"> -->\r\n      <div class=\"col-md-12\" appearance=\"outline\">\r\n        <span *ngFor=\"let i of typeOfMediumList; let mt = index\">\r\n          <table>\r\n            <tr>\r\n              <td>\r\n                <!-- <mat-checkbox [checked]=\"selectedMultimediaList.includes(i?.description)\"\r\n                    [disabled]=\"true\">\r\n                    {{i?.description}}</mat-checkbox> -->\r\n                <mat-checkbox\r\n                  [checked]=\"\r\n                    selectedMultimediaStringList.includes(i?.description)\r\n                  \"\r\n                  [disabled]=\"true\"\r\n                >\r\n                  {{ i?.description }}\r\n                </mat-checkbox>\r\n              </td>\r\n              <td>\r\n                <!--  -->\r\n                <input\r\n                  type=\"text\"\r\n                  class=\"form-control\"\r\n                  [value]=\"i.sizeLength ? i.sizeLength : 0\"\r\n                  name=\"sizeLength\"\r\n                  maxlength=\"4\"\r\n                  placeholder=\"Size/Length (in seconds)\"\r\n                  *ngIf=\"\r\n                    s1Application?.id == undefined &&\r\n                    (s1Application?.refTypeOfMedium == 'MULTIMEDIA-STATIC' ||\r\n                      s1Application?.refTypeOfMedium == 'MULTIMEDIA-MOVING')\r\n                  \"\r\n                />\r\n\r\n                <!-- static -->\r\n                <!-- <input type=\"text\" class=\"form-control\" [value]=\" i.multimediaSize ? i.multimediaSize : '' \"\r\n                    name=\"sizeLength\" maxlength=\"200\" placeholder=\"Size\"\r\n                    *ngIf=\"s1Application?.id!=undefined&&s1Application?.refTypeOfMedium=='MULTIMEDIA-STATIC'\"\r\n                    [disabled]=\"true\"> -->\r\n\r\n                <!-- moving -->\r\n                <!-- <input type=\"text\" class=\"form-control\" [value]=\" i.multimediaLength ? i.multimediaLength : '' \"\r\n                    name=\"sizeLength\" maxlength=\"200\" placeholder=\"Length\"\r\n                    *ngIf=\"s1Application?.id!=undefined&&s1Application?.refTypeOfMedium=='MULTIMEDIA-MOVING'\"\r\n                    [disabled]=\"true\"> -->\r\n\r\n                <input\r\n                  type=\"text\"\r\n                  class=\"form-control\"\r\n                  [value]=\"i.sizeLength ? i.sizeLength : 0\"\r\n                  *ngIf=\"\r\n                    s1Application?.id !== undefined &&\r\n                    (s1Application?.refTypeOfMedium === 'MULTIMEDIA-STATIC' ||\r\n                      s1Application?.refTypeOfMedium === 'MULTIMEDIA-MOVING')\r\n                  \"\r\n                  name=\"sizeLength\"\r\n                  maxlength=\"4\"\r\n                  placeholder=\"Size/Length (in seconds)\"\r\n                  [disabled]=\"true\"\r\n                />\r\n              </td>\r\n            </tr>\r\n          </table>\r\n          <br />\r\n        </span>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"row\"><br /></div>\r\n  </div>\r\n  <br /><br />\r\n</div>\r\n\r\n<!-- FOR S2 APPLICATION  MAIN DOC-->\r\n<div *ngIf=\"applicationStage === 'S2-APPLICATION'\">\r\n  <span class=\"row fields\">\r\n    <app-attachment-document\r\n      [originalAttachmentDocuments]=\"originalAttachmentDocuments\"\r\n      [revisionAttachmentDocuments]=\"revisionAttachmentDocuments\"\r\n      [(complianceAttachmentDocuments)]=\"complianceAttachmentDocuments\"\r\n      [s1Application]=\"s1Application\"\r\n      [labelMainDocument]=\"labelMainDocument\"\r\n      [isAscUser]=\"isAscUser\"\r\n      [isDisableFieldOnUpdate]=\"isDisableFieldOnUpdate\"\r\n      [applicationStage]=\"applicationStage\"\r\n    ></app-attachment-document>\r\n\r\n    <!-- [showMainDocumentUploadButton]=\"showMainDocumentUploadButton\" [showMainDocumentViewButton]=\"showMainDocumentViewButton\" [safeURLMainDoc]=\"safeURLMainDoc\"\r\n      [showSupportDocumentFrame]=\"showSupportDocumentFrame\" [showSupportiveDocumentUploadButton]=\"showSupportiveDocumentUploadButton\" [showSupportiveDocumentViewButton]=\"showSupportiveDocumentViewButton\" [safeURLSupportDoc]=\"safeURLSupportDoc\"\r\n      [revisionLetterAttachment]=\"revisionLetterAttachment\" [showRevisionLetterUploadButton]=\"showRevisionLetterUploadButton\" [showRevisionLetterViewButton]=\"showRevisionLetterViewButton\" [safeURLRevisionLetter]=\"safeURLRevisionLetter\" -->\r\n  </span>\r\n</div>\r\n\r\n<!-- </form> -->\r\n","import { Component, Inject, OnInit, Optional, ViewChild } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTable, MatTableDataSource } from '@angular/material/table';\r\nimport { PerformanceMetrics } from '@models';\r\nimport { ApiService } from '@services';\r\nimport { ENDPOINTS } from '@shared';\r\n\r\n@Component({\r\n  selector: 'app-performance-metrics',\r\n  templateUrl: './performance-metrics.component.html',\r\n  styleUrls: ['./performance-metrics.component.scss']\r\n})\r\nexport class PerformanceMetricsComponent implements OnInit {\r\n  @ViewChild(MatPaginator, { static: false }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: false }) sort: MatSort;\r\n  @ViewChild(MatTable, { static: false }) table: MatTable<PerformanceMetrics>;\r\n\r\n  dataSource: MatTableDataSource<PerformanceMetrics>;\r\n  displayedColumns: string[] = [\r\n    // 'referenceCode',\r\n    // 'appFormReference',\r\n    'movement',\r\n    'lastUpdate',\r\n    'duration',\r\n    'actionBy'\r\n  ];\r\n\r\n  performanceMetricsList = [];\r\n  referenceCode: any;\r\n\r\n  constructor(\r\n    private apiService: ApiService,\r\n    @Optional() public dialogRef: MatDialogRef<PerformanceMetricsComponent>,\r\n    @Optional() @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {\r\n    if (data) {\r\n      this.getPerformanceMatricsList(data.appFormReference);\r\n      this.referenceCode = data.referenceCode;\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  getPerformanceMatricsList(appFormReference) {\r\n    this.apiService.findByParam(ENDPOINTS.performanceMetrics, appFormReference).subscribe((res: any) => {\r\n      this.performanceMetricsList = res;\r\n      this.dataSource = new MatTableDataSource<PerformanceMetrics>(this.performanceMetricsList);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    });\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","<button mat-raised-button class=\"button-left button-red\">\r\n    <span class=\"material-icons\">new_releases</span> {{referenceCode}} </button>\r\n<button mat-raised-button class=\"button-right button-red\" (click)=\"closeDialog()\">\r\n    <i class=\"material-icons color__white\">close</i> CLOSE\r\n</button>\r\n<br>\r\n<div class=\"mat-elevation-z8\">\r\n    <table mat-table [dataSource]=\"dataSource\" matSort>\r\n\r\n        <!-- <ng-container matColumnDef=\"referenceCode\">\r\n            <th mat-header-cell *matHeaderCellDef> Reference Code </th>\r\n            <td mat-cell *matCellDef=\"let element\">\r\n                {{ element?.referenceCode }}\r\n            </td>\r\n        </ng-container> -->\r\n\r\n        <ng-container matColumnDef=\"appFormReference\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Application Form Reference </th>\r\n            <td mat-cell *matCellDef=\"let element\">\r\n                {{ element?.appFormReference }}\r\n            </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"movement\">\r\n            <th mat-header-cell *matHeaderCellDef> Movement </th>\r\n            <td mat-cell *matCellDef=\"let element\">\r\n                {{ element?.movement.replaceAll('_', ' ') }}\r\n            </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"lastUpdate\">\r\n            <th mat-header-cell *matHeaderCellDef> Date of Action </th>\r\n            <td mat-cell *matCellDef=\"let element\">\r\n                {{ element?.previousDateTime | date:'MM/dd/yyyy hh:mm a' }}\r\n            </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"duration\">\r\n            <th mat-header-cell *matHeaderCellDef> Duration </th>\r\n            <td mat-cell *matCellDef=\"let element\">\r\n                {{ element?.duration }}\r\n            </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"actionBy\">\r\n            <th mat-header-cell *matHeaderCellDef> Action By </th>\r\n            <td mat-cell *matCellDef=\"let element\">\r\n                {{ element?.actionBy }}\r\n            </td>\r\n        </ng-container>\r\n\r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n    </table>\r\n    <div class=\"no-record\" [hidden]=\"dataSource && dataSource?.data?.length > 0\">\r\n        No record found.\r\n    </div>\r\n    <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons></mat-paginator>\r\n\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { ReassignmentRoutingModule } from './reassignment-routing.module';\r\nimport { ReassignmentComponent } from './reassignment.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { AngularMaterialModule } from '@shared';\r\nimport { FragmentsModule } from 'app/modules/fragments/fragments.module';\r\n\r\n\r\n@NgModule({\r\n  declarations: [ReassignmentComponent],\r\n  imports: [\r\n    CommonModule,\r\n    ReassignmentRoutingModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule,\r\n    AngularMaterialModule,\r\n    FragmentsModule,\r\n  ]\r\n})\r\nexport class ReassignmentModule { }\r\n","export * from './company.module';\r\nexport * from './add-company/add-company.component';\r\nexport * from './add-company/add-company.module';\r\nexport * from './list-company/list-company.component';\r\nexport * from './list-company/list-company.module';"]}