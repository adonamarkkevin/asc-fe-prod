{"version":3,"sources":["webpack:///src/app/modules/pages/applications/schedule-of-fees/special-applications/special-applications.component.ts","webpack:///src/app/modules/pages/applications/schedule-of-fees/special-applications/special-applications.component.html","webpack:///src/app/core/models/multiple-application.model.ts","webpack:///src/app/core/models/comment.model.ts","webpack:///src/app/modules/pages/applications/preview-attachments/preview-attachments.component.ts","webpack:///src/app/modules/pages/applications/preview-attachments/preview-attachments.component.html","webpack:///src/app/modules/pages/applications/preview-application/preview-application.component.ts","webpack:///src/app/modules/pages/applications/preview-application/preview-application.component.html","webpack:///src/app/modules/pages/applications/schedule-of-fees/multiple-applications/modal-multiple-applications/modal-multiple-applications.component.ts","webpack:///src/app/modules/pages/applications/schedule-of-fees/multiple-applications/modal-multiple-applications/modal-multiple-applications.component.html","webpack:///src/app/modules/pages/applications/reassignment/reassignment.component.ts","webpack:///src/app/modules/pages/applications/reassignment/reassignment.component.html","webpack:///src/app/modules/pages/applications/applications.module.ts","webpack:///src/app/modules/fragments/update-multiple-application/update-multiple-application.component.ts","webpack:///src/app/modules/fragments/update-multiple-application/update-multiple-application.component.html","webpack:///src/app/modules/pages/company/company-routing.module.ts","webpack:///src/app/modules/pages/company/add-company/add-company-routing.module.ts","webpack:///src/app/modules/pages/applications/schedule-of-fees/single-application/single-application.component.ts","webpack:///src/app/modules/pages/applications/schedule-of-fees/single-application/single-application.component.html","webpack:///src/app/modules/pages/applications/schedule-of-fees/multiple-applications/multiple-applications.component.ts","webpack:///src/app/modules/pages/applications/schedule-of-fees/multiple-applications/multiple-applications.component.html","webpack:///src/app/modules/pages/applications/schedule-of-fees/single-application/modal-single-application/modal-single-application.component.ts","webpack:///src/app/modules/pages/applications/schedule-of-fees/single-application/modal-single-application/modal-single-application.component.html","webpack:///src/app/modules/pages/applications/schedule-of-fees/special-applications/modal-special-applications/modal-special-applications.component.ts","webpack:///src/app/modules/pages/applications/schedule-of-fees/special-applications/modal-special-applications/modal-special-applications.component.html","webpack:///src/app/core/models/media-models/mulstimedia-static.const.ts","webpack:///src/app/modules/pages/accounting/index.ts","webpack:///src/app/modules/pages/applications/applications-routing.module.ts","webpack:///src/app/modules/pages/applications/s2-application/add-s2-application/add-s2-application.component.ts","webpack:///src/app/modules/pages/applications/s2-application/add-s2-application/add-s2-application.component.html","webpack:///src/app/modules/pages/applications/attachment-document/attachment-document.component.ts","webpack:///src/app/modules/pages/applications/attachment-document/attachment-document.component.html","webpack:///src/app/modules/pages/accounting/upload-payment/upload-payment.component.ts","webpack:///src/app/modules/pages/accounting/upload-payment/upload-payment.component.html","webpack:///src/app/modules/fragments/s1-form-type/s1-form-type.component.ts","webpack:///src/app/modules/fragments/s1-form-type/s1-form-type.component.html","webpack:///src/app/modules/pages/applications/reassignment/reassignment-routing.module.ts","webpack:///src/app/modules/pages/applications/comment/comment.component.ts","webpack:///src/app/modules/pages/applications/comment/comment.component.html","webpack:///src/app/core/models/comments.model.ts","webpack:///src/app/modules/pages/company/add-company/add-company.module.ts","webpack:///src/app/modules/pages/applications/s2-application/list-s2-application/list-s2-application.component.ts","webpack:///src/app/modules/pages/applications/s2-application/list-s2-application/list-s2-application.component.html","webpack:///src/app/modules/pages/applications/client-information/client-information.component.ts","webpack:///src/app/modules/pages/applications/client-information/client-information.component.html","webpack:///src/app/core/models/media-models/multimedia-moving.const.ts","webpack:///src/app/modules/pages/applications/index.ts","webpack:///src/app/modules/pages/applications/s1-application/add-s1-application/add-s1-application.component.ts","webpack:///src/app/modules/pages/applications/s1-application/add-s1-application/add-s1-application.component.html","webpack:///src/app/modules/fragments/update-special-application/update-special-application.component.ts","webpack:///src/app/modules/fragments/update-special-application/update-special-application.component.html","webpack:///src/app/modules/pages/applications/s1-application/list-s1-application/list-s1-application.component.ts","webpack:///src/app/modules/pages/applications/s1-application/list-s1-application/list-s1-application.component.html","webpack:///src/app/modules/pages/applications/s1-application/list-s1-application/list-s1-dialog.html","webpack:///src/app/modules/pages/maintenance/index.ts","webpack:///src/app/modules/pages/company/company.module.ts","webpack:///src/app/core/models/copy-claims.model.ts","webpack:///src/app/modules/pages/applications/material-information/material-information.component.ts","webpack:///src/app/modules/pages/applications/material-information/material-information.component.html","webpack:///src/app/modules/pages/applications/performance-metrics/performance-metrics.component.ts","webpack:///src/app/modules/pages/applications/performance-metrics/performance-metrics.component.html","webpack:///src/app/modules/pages/applications/reassignment/reassignment.module.ts","webpack:///src/app/modules/pages/company/index.ts"],"names":["SpecialApplicationsComponent","apiService","dialog","dataStorage","displayedColumns","paymentList","currentUser","getUserAccount","getS2PaymentList","findAll","scheduleOfFeesS2Special","subscribe","res","dataSource","paginator","sort","dialogRef","open","width","height","data","afterClosed","result","ngOnInit","MultipleApplication","MultipleApplicationId","Comment","PreviewAttachmentsComponent","previewAttachmentsList","attachmentUrl","window","PreviewApplicationComponent","attachmentDocuments","originalAttachmentDocuments","revisionAttachmentDocuments","complianceAttachmentDocuments","applicationSingleMedia","multimediaDTO","supportiveDocumentList","multimediaMovingList","multimediaStaticList","typeOfDocument","previewS1Application","submissionType","ORIGINAL","REVISION","revisionLetterAttachment","COMPLIANCE","decisionStatus","INCOMPLETE","MAIN","mainDoc","filter","attachmentType","fileURL","SUPPORTIVE","supportiveDoc","REVISION_LETTER","revisionLetterDoc","ELEMENT_DATA","referenceCode","amount","ModalMultipleApplicationsComponent","sanitizer","fileStorageService","sweetAlertService","router","multipleApplicationList","s1Application","payment","previewDocument","attachmentDocument","isSubmitted","paymentTypeList","multipleApplication","isDisabled","typeOfMediumDisplay","paymentStatus","FOR_PAYMENT","getPaymentDetails","getMultipleApplicationList","getPaymentList","multiplePaymentDetails","id","paymentDetails","getMultipleAppFormsWithNoRejected","responseData","console","log","forEach","refTypeOfMedium","applicationFormS2","applicationForm","getApplicationSingleMedia","appFormReference","getMultimediaMoving","getMultimediaStatic","err","error","message","under_maintenance","paymentType","userRole","name","ROLE_APPLICANT","creditCardIndex","findIndex","element","paymentDescription","splice","event","attachmentSize","target","files","size","type","customErrorMessage","value","pdfURL","URL","createObjectURL","safeURLProofOfPayment","bypassSecurityTrustResourceUrl","reader","FileReader","file","readAsDataURL","onload","selectedFiles","fire","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","setDisplayProgressbar","params","PAYMENT","pushFileToStorage","item","obj","paymentAttachmentReference","amountDue","totalAmount","filename","saveProofOfPayment","undefined","FOR_APPROVAL","officialReceiptNo","paymentMethod","save","applicationFormPresentor","customSuccessMessage","closeModal","close","navigate","findByParam","length","mediumExecution","typeOfMedium","description","sizeLength","index","applicationMultimedia","multimediaList","Set","map","mappedList","multimediaSizeLength","mediaCtrl","media","selectFile","ReassignmentComponent","formBuilder","spinner","s2Application","userList","s1ApplicationList","s1ApplicationDisplayedColumns","s2ApplicationList","s2ApplicationDisplayedColumns","applicationOwnerName","displayedContent","getS1ApplicationList","setFormValidator","getUserList","applicationType","show","admin","filteredS1List","appliedS2","s1ApplicationDataSource","formListComponent","hide","s2ApplicationDataSource","findById","idForUpdate","applicationOwner","lastName","firstName","assignedUser","endpoint","currentObj","applicationReassignment","s2ApplicationReassignment","actionStatus","assignedEncoder","assignedAdSpecialist","success","resetFormValidator","s1ApplicationForm","group","adTitle","assignedReviewer","assignedScreener","markAsUntouched","markAsPristine","userAccount","filteredUsers","selected","evt","tab","textLabel","changeTab","ApplicationsModule","UpdateMultipleApplicationComponent","datepipe","company","multipleS1Application","multipleS1ApplicationList","isAscUser","isDisableFieldOnUpdate","isDisabledSubmitButton","canForwardMultipleApp","isAllApplicationsHasMainDoc","warningNote","formType","MULTIPLE","ascUserRoleList","role","ascUser","brand","product","currentUserRole","includes","getUserRole","getS1FormsByMultipleApplication","ROLE_ADMIN","ROLE_SUPER_ADMIN","getMultipleAppForms","filteredList","mainAttachmentReference","supportingAttachmentReference","hasNoSupportingDocs","today","transform","Date","approvedDate","dateOfSubmission","submissionStatus","status","checkForwardStatus","countVerifiedApplicationForm","actualNumberOfApplicationForm","displayStatus","endpointExtension","actionDate","actionBy","username","update","multipleId","ctr","numberOfApplication","result2","user","forwardMultipleAppFormToScreener","forwardMultipleAppFormToReviewer","filteredS1App","routes","path","children","LIST_COMPANY","loadChildren","m","ListCompanyModule","ADD_COMPANY","AddCompanyModule","UPDATE_COMPANY","CompanyRoutingModule","forChild","component","AddCompanyRoutingModule","SingleApplicationComponent","getS1PaymentList","maxHeight","MultipleApplicationsComponent","getS1MultiplePaymentList","ModalSingleApplicationComponent","vat","toFixed","navigateByUrl","uploadDocument","ModalSpecialApplicationsComponent","specialPaymentDetails","UNPAID","s2ApplicationFormPresentor","MultiMediaStaticConst","Array","multimediaStaticMedium","hasSelected","S1_APPLICATION","S1ApplicationModule","S2_APPLICATION","S2ApplicationModule","SCHEDULE_OF_FEES_SINGLE_APPLICATION","SingleApplicationModule","SCHEDULE_OF_FEES_MULTIPLE_APPLICATIONS","MultipleApplicationsModule","SCHEDULE_OF_FEES_SPECIAL_APPLICATIONS","SpecialApplicationsModule","ACCOUNTS_PAYABLE","AccountsPayableModule","APPLICATION_REASSIGNMENT","ReassignmentModule","ApplicationsRoutingModule","AddS2ApplicationComponent","route","spinnerMessageEmitter","title","rationaleS2","report","s2OriginalAttachmentDocuments","s2OriginalAttachmentObservable","s2ComplianceAttachmentDocuments","affiliationList","companyList","selectedMultimediaList","rationaleOthersList","rationaleLists","isNewCompany","showCompanyAddress","spinnerMessage","todayDate","tempCompliance","audioVideo","isAudioVideo","isShowUploadButton","rationaleDisplay","isSuperAdmin","isAdmin","isAccounting","isApplicant","isEvaluator","isAdSpecialist","isScreener","isReviewer","previewAttachmentsDisplayedColumns","applicationStage","Number","snapshot","paramMap","get","initUserRole","getAffiliationList","getCompanyList","viewS2Application","ROLE_ACCOUNTING","ROLE_SCREENER","ROLE_REVIEWER","ROLE_AD_SPECIALIST","ROLE_ENCODER","clientInformation","materialInformation","finalMaterialAttachmentReference","getS2AttachmentDocument","setApplicationStage","hideSpinner","SINGLE_MEDIA","MULTIMEDIA_MOVING","MULTIMEDIA_STATIC","getAttachmentDocuments","DISAPPROVED","internalStatus","getRationaleList","clearanceAndToa","previewAttachmentsData","previewAttachmentsListDataSource","comment","getCommentsS2","swalMessage","s2ApplicationFormPresentorSubmit","s2ApplicationFormEncoderVerify","s2ApplicationFormAdSpe","APPROVED","navigateToS2List","s2ApplicationForm","externalStatus","action","attachmentDocumentByAppFormReference","SAVED","next","supportiveDocument","i","validityDate","incompleteDisapprovedRationale","activeMembersAffiliation","activeCompanies","companyName","affiliation","required","attachmentComponent","eventParam","byteToMegaByte","finalMaterialType","maxFileSize","fileSize","toLowerCase","safeURLFile","selectedFile","appFormRef","FINAL_MATERIAL","uploadedFinalMaterialFile","addToAttachmentDocuments","myFinalMaterialFileInputC","nativeElement","myFinalMaterialFileC","myFinalMaterialFileInput","myFinalMaterialFile","originalFilename","fileExtension","documentFormat","createdBy","createdDate","attachmentDocumentByS2AppFormReference","setTimeout","applicationRationaleS2","others","rationaleListS2","format","module","applicationFormS2Id","printReport","generateReports","newBlob","Blob","downloadURL","s2ManualRelease","accordion","AttachmentDocumentComponent","dataStorageService","s2DocObservable","s2SupportDocument","S2SupportDoc","tempRevisionAttachmentDocuments","tempComplianceAttachmentDocuments","s2Appplication","labelMainDocument","showMainDocumentUploadButton","showMainDocumentUploadButtonR","showMainDocumentUploadButtonC","showMainDocumentViewButton","showMainDocumentViewButtonR","showMainDocumentViewButtonC","showSupportDocumentFrame","showSupportDocumentFrameR","showSupportDocumentFrameC","showSupportiveDocumentUploadButton","showSupportiveDocumentUploadButtonR","showSupportiveDocumentUploadButtonC","showSupportiveDocumentViewButton","showSupportiveDocumentViewButtonR","showSupportiveDocumentViewButtonC","showRevisionLetterViewButton","showRevisionLetterUploadButton","mainDocAttachmentSize","supportDocAttachmentSize","revisionDocAttachmentSize","progress","percentage","changes","r","s2SupportAttchmentDocuments","accountType","label","attachmentSizeForUpload","safeURLSupportDoc","safeURLMainDoc","safeURLRevisionLetter","S1_APPLICATION_REVIEWED","COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER","safeURLMainDocR","safeURLSupportDocR","revisionLetterAttachmentReference","safeURLMainDocC","safeURLSupportDocC","replaceAll","currentFileUpload","uploadedFileSupportive","s2SupportDocAddToAttachmentDocument","uploadedFileMain","uploadedFileRevision","push","JSON","parse","stringify","myMainFile","myMainInput","isOriginal","documentType","currentSubType","REVISION_SCREENED","S1_APPLICATION_REJECTED","mySupportiveFile","mySupportiveInput","myRevisionLetterFile","attachmentDocumentForm","attachmentReference","language","dialect","multimediaLength","multimediaSize","applicationMultimediaStatic","applicationMultimediaMoving","UploadPaymentComponent","paymentForm","remarks","pt","S1FormTypeComponent","numberOfMultipleApplicationAllowed","applicationTypeList","formTypeList","showNumberOfApplications","isMultiple","isSpecial","isPresentation","getApplicationTypeList","getNoOfMultipleApplicationsAllowed","noOfMultipleApplicationAllowed","INDIVIDUAL","toLocaleLowerCase","apptype","formtype","numberOfApplications","min","parseInt","minimum","toString","max","maximum","navigateToS1Application","formAndAppType","appType","setS1FormAndAppType","setNumberOfApplications","FOR_PRESENTATION","proceedS1Application","checkType","setAsMultiple","setAsForPresentation","ReassignmentRoutingModule","CommentComponent","commentS1Application","commentS2Application","internalComment","externalComment","copyClaims","commentList","internalCommentList","externalCommentList","replyInternalComment","copyClaimsList","commentId","commentTypeList","commentType","internalCommentProcess","externalCommentProcess","copyClaimesProcess","disabledComment","editCopyClaimsComment","editExternalComment","replyEditorConfig","editable","spellcheck","minHeight","minWidth","translate","enableToolbar","showToolbar","placeholder","defaultParagraphSeparator","defaultFontName","defaultFontSize","fonts","customClasses","tag","uploadUrl","uploadWithCredentials","sanitize","toolbarPosition","toolbarHiddenButtons","editorConfig","screenerDecisionComment","reviewerDecisionComment","releaseStatus","getComments","getCopyClaims","commentS2","applicationFormType","S2","S1","setHtml5Value","dateTransformed","isReply","parentId","addInternalComment","replyEditorIsEnabled","deleteById","commentForm","internalComments","externalComments","commentBody","commentHtmlOutput","cancel","CommentThread","parent","ListS2ApplicationComponent","commonService","pageSize","pageNo","pageSizeOptions","s2TotalItems","s2ApplicationListForClearance","forClearanceDisplayedColumns","s2SpecialTotalItems","s2SpecialApplicationList","s2SpecialApplicationDisplayedColumns","applicationRequest","currentPage","originalTabDataCount","complianceTabDataCount","releasedAppealTabDataCount","toaTabDataCount","click","timeLeft","refreshButtonEnabled","isTimerValueDisplay","s2ApplicationCountList","applicationCountS2","viewApplicationType","url","getListCount","applicationTypeTitle","getSpecialS2ApplicationList","getList","badgeCountByApplicationOwnerS2","badgeCountByAscUserS2","param","toUpperCase","TOA","s2ApplicationFormEncoder","s2ApplicationFormAdmin","totalItems","statuses","s2SpecialClearingApplicationRequestsAdmin","applicationOwnerId","s2SpecialClearingApplicationRequests","s2SpecialApplicationDataSource","pageIndex","setPageSizeOptionsInput","split","str","formStatus","OPEN","takeApplication","specialClearing","elementId","getForDecisionAndComment","paginatorFalse","a","b","reverse","sendClickEvent","startTimer","interval","setInterval","clearInterval","timerDisplay","minutes","Math","floor","refresh","ClientInformationComponent","addressService","checkInactiveAffiliation","hasErrorFields","memberAffiliationList","brandList","productList","regionsList","provinceList","cityMunicipalityList","barangayList","countryList","notInSelection","ngUnsubscribe","getBrandList","getCountries","setProductList","clientInformationForm","category","companyAddress","country","membersAffiliation","valueChanges","pipe","checkInvalidFields","activeBrands","productsByBrand","INACTIVE","checkInactiveAffiliationFunction","dataForModal","isFromModal","isUpdate","getDefaultCountry","setS1NewCompany","getS1NewCompany","getS1NewBrand","currentStatus","getS1NewProduct","code","countries","setDefaultCountry","isInactiveAffiliation","emit","complete","MultiMediaMovingConstant","multimediaMovingMedium","AddS1ApplicationComponent","cd","commonServices","_snackBar","exportTime","hour","minute","meriden","presentorDetails","rationale","specialApplicationType","screenerList","reviewerList","applicantList","mediaTypeListTemp","adSpecialistList","applicationSingleMediaTemp","currentSizeLengthMultimedia","toDeleteMultimediaList","hasMultimediaLengthToEnableSubmit","disableSubmitButtonByMedia","hasErrorsClient","badgeCounter","isChecked","isSubmit","noDocumentAttached","accordionDisable","accordionExpanded","validationMessage","buttonDisabled","adSpecButtonDisabled","maxSizeLength","disabledWeekEnds","d","day","getDay","isDateActiveWeekend","isDateHoliday","getS1FormAndAppType","getS1Application","getSpecialS1Application","submissionDate","autoSubmit","viewApplication","tagLine","sequenceOrder","disableFieldOnUpdate","getUserTypeForList","checkSingleMediaChanges","getAllActiveHolidays","getAllActiveWeekends","date","newMultimediaList","detectChanges","sessionStorage","removeItem","setAppType","fetchMultimedia","scheduleSubmission","onChangeDate","getPresentorDetails","APPROVED_WITH_CAUTION","COMPLIANCE_DOCUMENT_VERIFIED_BY_AD_SPE","REVISION_VERIFIED_BY_AD_SPE","getDecisionStatus","stampedMaterialAndDecisionForms","userLogin","previewApplication","currentSizeLength","mappedMultimedia","suppDoc","getSupportiveDocuments","viewPayment","res1","paymentAttachment","safeURL","submissionDateValue","controls","reset","disableSaveAndSubmitButton","decision","account","applicationFormScreener","defaultReviewer","reviewer","ascDefault","otherReviewers","buttonValidation","ACTIVE","process","saveOrUpdateApplication","validateAscRates","saveStatus","getNumberOfApplications","setAndSaveS1Data","isScheduleSendIsEmpty","setTypeOfMediumDisplay","saveUpdateApplicationSingleMedia","saveUpdateMultimedia","movingStatic","currentTOM","multimediaToDelete","replace","SAVE","saveAppForm","SUBMIT","processAppForm","typeOfMultimedia","navigateToS1List","supportingDocuments","newSupportiveDocumentList","BATCH","dateFetched","api","newStatus","multipleApplicationReturnToAdSpe","multipleApplicationReturnToScreener","applicationFormReviewer","S1_APPLICATION_VERIFIED_BY_AD_SPE","S1_APPLICATION_SCREENED","reAssignScreenerForMultipleApplication","applicationFormAdSpecialist","reAssignReviewerForMultipleApplication","currentDate","msg","S1_APPLICATION_SUBMITTED","S1_APPLICATION_CANCELLED","CANCEL","REJECT","VERIFY","SCREEN","ACCEPT","checkNullValues","selectedApplicationOwner","saveSupportingDocuments","responseMessage","forwardMultipleAppsTo","checkCutOffTime","horizontalPosition","verticalPosition","duration","submitDecisionAndCommentScreener","submitDecisionAndCommentReviewer","forwardMultipleAppFormToAdSpe","releaseMultipleApplication","SUBMITTED_DOCUMENT_FOR_COMPLIANCE","revisionNo","submitApplicationForm","hasSpecialClearing","applicationRequests","Boolean","activeHolidayDates","find","holidayDate","activeWeekendDates","weekendDate","setDecisionStatus","incompleteDisapprovedModal","applicationFormEncoder","decisionFormFileURL","stampMaterialFileURL","applicationFormId","applicationRationale","rationaleList","hasMultimediaLengthChange","modifyApprovedS1ApplicationFormMultimedia","modifyApprovedS1ApplicationFormSingleMedia","newMedia","mediaType","multimediaListChanges","hasSizeLengthChange","multimediaSizeLengthNew","filteredMedia","filteredRes","hasNewMultimediaType","multimedia","some","currMedia","applicationMultimediaMovingList","medium","applicationMultimediaStaticList","typeofMedium","s1ManualRelease","regex","RegExp","startTime","endTime","currentTime","String","getHours","getMinutes","getSeconds","holidays","holidayType","penalty","delinquent","UpdateSpecialApplicationComponent","ListS1ApplicationComponent","webSocketService","totalPages","returnedApps","multipleApplicationDisplayedColumns","multipleTotalItems","specialApplicationList","specialApplicationDisplayedColumns","specialTotalItems","assignedApplicationList","assignedApplicationDisplayedColumns","forReleaseApplicationsList","forReleaseTotalItems","forReleaseApplicationDisplayedColumns","applicationList","revisionTabDataCount","decisionCommentTabDataCount","s1ApplicationTitle","doFilter","trim","doFilterS1MultipleApplicationList","multipleApplicationDataSource","doFilterSpecialS1ApplicationList","specialApplicationDataSource","doFilterAssignedS1ApplicationList","assignedApplicationDataSource","doFilterForReleaseApplicationList","forReleaseApplicationDataSource","listen","badgeCountByAscUser","getListCounts","refreshApplicationBadgeCount","match","screenedCount","badgeCountByApplicationOwner","response","screenedApplications","getMultipleS1ApplicationList","getSpecialS1ApplicationList","getAssignAppFormBy","getForReleaseApplicationList","getReleasedApplicationList","applicationFormAdmin","stats","PAID","ASSIGN_TO_PRESENTOR","ascEndpoint","assignedASCUser","s1SpecialApplicationRequestsAdmin","s1SpecialApplicationRequests","getForReleaseApplicationAdSpe","getForReleaseApplicationsReviewer","getAdminSuperAdminForReleaseApplication","getReleaseApplicationsAdSpe","currentAssignee","lockedBy","setS1Application","setSpecialS1Application","promise","Promise","resolve","reject","saveUserAccount","getCompanyById","typeOfExecution","ListS1Dialog","s1App","application","fetchedData","validateApp","LOCKED","userType","getAllAdSpeReturnedApps","getAllScreenerReturnedApps","respose","indexOf","$event","preventDefault","isS2","hasToa","s2ApplicationFormPresentorSave","proceedToS2","requestForClearingAndClearance","CompanyModule","CopyClaims","util","MaterialInformationComponent","validateFieldService","checkSingleMediaChangesFunction","checkMultimediaChangesFunction","typeOfMediumList","executionList","dialectList","typeOfDocumentList","setMultimediaList","selectedMultimediaStringList","supportingDocument","newApplicationSingleMedia","selectMultimedia","previewMainDocument","showSupportiveDocumentDownloadButton","showRevisionLetterDownloadButton","previewSupportiveDocument","isDigitalStatic","savedTypeOfMedium","selectedTypeOfMedium","multimediaMovingDTO","multimediaStaticDTO","getTypeOfDocumentList","emitSingleMediaChanges","initializeMultimediaMovingObj","initializeMultimediaStaticObj","getTypeOfMedium","getExecutionDialectList","materialInformationForm","previousRefCode","basedOn","variant","dateOfLaunch","expiresOn","input","typeOfMediumSingleMedia","typeOfMediumMultiMediaMoving","MULTIMEDIA","typeOfMediumMultiMediaStatic","resetValues","typeOfMainDocument","executionEnable","lengthEnable","sizeLengthEnable","typeOfExecutionsByMedium","dialects","keepValues","key","checkIfDocumentAlreadyExist","expiresOnEnable","supportingDocumentIndex","number","numbersOnly","PerformanceMetricsComponent","performanceMetricsList","getPerformanceMatricsList","performanceMetrics","closeDialog"],"mappings":"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","file":"applications-applications-module-es5.js","sourcesContent":["import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTable, MatTableDataSource } from '@angular/material/table';\nimport { ApiService, DataStorageService, SweetAlertService } from '@services';\nimport { ENDPOINTS } from '@shared';\nimport { ModalSpecialApplicationsComponent } from './modal-special-applications/modal-special-applications.component';\n\n\n@Component({\n  selector: 'app-special-applications',\n  templateUrl: './special-applications.component.html',\n  styleUrls: ['./special-applications.component.scss']\n})\nexport class SpecialApplicationsComponent implements OnInit {\n\n  @ViewChild(MatPaginator, { static: false }) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: false }) sort: MatSort;\n  @ViewChild(MatTable, { static: false }) table: MatTable<Object>;\n\n  dataSource: MatTableDataSource<any>\n  displayedColumns: string[] = ['referenceCode', 'typeOfApplication', 'brand', 'medium', 'applicantCompanyName', 'paymentStatus'];\n  paymentList = [];\n\n  currentUser: any;\n  constructor(\n    private apiService: ApiService,\n    private dialog: MatDialog,\n    private dataStorage: DataStorageService,\n  ) { }\n\n  ngOnInit(): void {\n    this.currentUser = this.dataStorage.getUserAccount();\n    this.getS2PaymentList();\n  }\n\n  getS2PaymentList() {\n    this.apiService.findAll(ENDPOINTS.scheduleOfFeesS2Special).subscribe((res: any) => {\n      this.paymentList = res;\n\n      this.dataSource = new MatTableDataSource<any>(this.paymentList);\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n    });\n  }\n\n  openModal(res) {\n\n    const dialogRef = this.dialog.open(ModalSpecialApplicationsComponent, {\n      width: '60%',\n      height: '85%',\n      data: res\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      this.ngOnInit();\n    });\n\n  }\n}\n","<form>\n  <div class=\"container-fluid\">\n    <div class=\"row\">\n      <div class=\"col-md-12 title\">\n        <mat-label>\n          <mat-icon>view_list</mat-icon> Special Clearing - For Payment\n        </mat-label>\n      </div>\n    </div>\n    <hr>\n    <br>\n    <div class=\"col-md-12\" fxLayout fxLayoutAlign=\"center center\">\n      <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n        <input matInput type=\"text\" placeholder=\"Company Name\">\n      </mat-form-field>\n    </div>\n\n    <div class=\"mat-elevation-z8 fields\">\n      <table mat-table [dataSource]=\"dataSource\" matSort>\n        <ng-container matColumnDef=\"referenceCode\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> REFERENCE CODE </th>\n          <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"openModal(element)\"> {{element?.applicationForm?.referenceCode | uppercase}}</td>\n        </ng-container>\n        <ng-container matColumnDef=\"typeOfApplication\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> TYPE OF APPLICATION</th>\n          <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"openModal(element)\">{{element?.applicationForm?.applicationType.description | uppercase}}</td>\n        </ng-container>\n        <ng-container matColumnDef=\"brand\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> BRAND</th>\n          <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"openModal(element)\">{{element?.applicationForm?.brand.description | uppercase}}</td>\n        </ng-container>\n        <ng-container matColumnDef=\"medium\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> MEDIUM</th>\n          <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"openModal(element)\">{{element?.applicationForm?.typeOfMedium | uppercase}}</td>\n        </ng-container>\n        <ng-container matColumnDef=\"applicantCompanyName\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> APPLICANT COMPANY NAME</th>\n          <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"openModal(element)\">{{element?.applicationForm?.company.companyName | uppercase}}</td>\n        </ng-container>\n        <ng-container matColumnDef=\"paymentStatus\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> PAYMENT STATUS</th>\n          <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"openModal(element)\">{{element?.paymentStatus?.replaceAll('_',' ') | uppercase}}</td>\n        </ng-container>\n\n\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n      </table>\n      <div class=\"no-record\" [hidden]=\"dataSource && dataSource?.data?.length > 0\">\n        No record found.\n      </div>\n      <mat-paginator [pageSizeOptions]=\"[10, 20, 50]\" showFirstLastButtons></mat-paginator>\n    </div>\n    <br>\n  </div>\n</form>\n","import { Company } from './company.model';\nimport { Brand } from './brand.model';\nimport { ApplicationType } from './application-type.model';\nimport { UserAccount } from './user-account.model';\nimport { Product } from './product.model';\nimport { Category } from '@models';\n\nexport class MultipleApplication {\n    id: number;\n    actionBy: string;\n    actionDate: Date;\n    adTitle: string;\n    applicationOwner: UserAccount;\n    applicationType: ApplicationType;\n    brand: Brand;\n    company: Company;\n    dateOfSubmission: Date;\n    numberOfApplication: number;\n    status: string;\n    tagLine: string;\n\n    actionStatus: string;\n    submissionStatus: string;\n    assignedAdSpecialist: UserAccount;\n    assignedEncoder: UserAccount;\n    assignedScreener: UserAccount;\n    assignedReviewer: UserAccount;\n    actualNumberOfApplicationForm: number;\n    countVerifiedApplicationForm: number;\n\n    totalAmount: number;\n    paymentStatus: string;\n\n    product: Product;\n\n}\n\nexport class MultipleApplicationId {\n  id: number;\n}\n\n","import { S2Application } from './s2-application.model';\nimport { UserAccount } from './user-account.model';\n\nexport class Comment {\n    id: number;\n    comment: string;\n    revisionNo: number;\n    actionBy: UserAccount;\n    role: string;\n    actionDate: Date;\n    commentType: string; // INTERNAL, EXTERNAL, EMAIL, REJECT\n    applicationFormType: string; // S1, S2\n    appFormReference: string;\n    applicationFormS2: S2Application;\n    // modifiedBy: string;\n    // modifiedDate: Date;\n}\n","import { AfterViewInit, Component, Input, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTable, MatTableDataSource } from '@angular/material/table';\n\n@Component({\n  selector: 'app-preview-attachments',\n  templateUrl: './preview-attachments.component.html',\n  styleUrls: ['./preview-attachments.component.scss']\n})\nexport class PreviewAttachmentsComponent implements OnInit, AfterViewInit {\n\n  @ViewChild(MatPaginator, { static: false }) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: false }) sort: MatSort;\n  @ViewChild(MatTable, { static: false }) table: MatTable<object>;\n  @Input() previewAttachmentsList = [];\n  @Input() dataSource: MatTableDataSource<object>;\n  @Input() displayedColumns = '';\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  ngAfterViewInit(): void {\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n  viewFormOrMaterial(attachmentUrl) {\n    if (attachmentUrl) {\n      window.open(attachmentUrl);\n    }\n  }\n\n}\n","<div class=\"mat-elevation-z8\">\n    <table mat-table [dataSource]=\"dataSource\" matSort>\n\n        <ng-container matColumnDef=\"decisionFormFilename\">\n            <th mat-header-cell *matHeaderCellDef> Decision Form Filename </th>\n            <td mat-cell *matCellDef=\"let element\"> {{ element?.decisionFormFilename }} </td>\n        </ng-container>\n\n        <!-- VIEW ICON START -->\n        <ng-container matColumnDef=\"viewDecisionFormIcon\">\n            <th mat-header-cell *matHeaderCellDef> View Decision Form </th>\n            <td mat-cell *matCellDef=\"let element\">\n                <span class=\"material-icons\" *ngIf=\"element?.decisionFormFileURL\" matTooltip=\"View Decision Form\"\n                    (click)=\"viewFormOrMaterial(element?.decisionFormFileURL)\">open_in_new</span>\n            </td>\n        </ng-container>\n        <!-- VIEW ICON END -->\n\n        <ng-container matColumnDef=\"stampMaterialFilename\">\n            <th mat-header-cell *matHeaderCellDef> Stamp Material Filename </th>\n            <td mat-cell *matCellDef=\"let element\"> {{ element?.stampMaterialFilename }} </td>\n        </ng-container>\n\n        <!-- VIEW ICON START -->\n        <ng-container matColumnDef=\"viewStampMaterialIcon\">\n            <th mat-header-cell *matHeaderCellDef> View Stamp Material </th>\n            <td mat-cell *matCellDef=\"let element\">\n                <span class=\"material-icons\" *ngIf=\"element?.stampMaterialFileURL\" matTooltip=\"View Stamp Material\"\n                    (click)=\"viewFormOrMaterial(element?.stampMaterialFileURL)\">open_in_new</span>\n            </td>\n        </ng-container>\n        <!-- VIEW ICON END -->\n\n        <ng-container matColumnDef=\"clearanceToaFilename\">\n            <th mat-header-cell *matHeaderCellDef> Clearance TOA Filename </th>\n            <td mat-cell *matCellDef=\"let element\"> {{ element?.clearanceToaFilename }} </td>\n        </ng-container>\n\n        <!-- VIEW ICON START -->\n        <ng-container matColumnDef=\"viewClearanceToaIcon\">\n            <th mat-header-cell *matHeaderCellDef> View Clearance TOA </th>\n            <td mat-cell *matCellDef=\"let element\">\n                <span class=\"material-icons\" *ngIf=\"element?.clearanceToaFileUrl\" matTooltip=\"View Clearance TOA\"\n                    (click)=\"viewFormOrMaterial(element?.clearanceToaFileUrl)\">open_in_new</span>\n            </td>\n        </ng-container>\n        <!-- VIEW ICON END -->\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n    <div class=\"no-record\" [hidden]=\"dataSource && dataSource?.data?.length > 0\">\n        No record found.\n    </div>\n    <mat-paginator [pageSizeOptions]=\"[10, 20, 30]\" showFirstLastButtons></mat-paginator>\n\n</div>","import { Component, Input, OnInit, ViewChild } from '@angular/core';\nimport { S1Application } from '@models';\nimport { ApiService } from '@services';\nimport { APP_DECISION_STATUS, ATTACHMENT_TYPE, SUBMISSION_TYPE } from '@shared';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { ApplicationSingleMedia } from '../../../../core/models/application-single-media.model';\nimport { AttachmentDocumentComponent } from '../attachment-document/attachment-document.component';\n\n@Component({\n  selector: 'app-preview-application',\n  templateUrl: './preview-application.component.html',\n  styleUrls: ['./preview-application.component.scss']\n})\nexport class PreviewApplicationComponent implements OnInit {\n  @ViewChild(MatPaginator, { static: false }) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: false }) sort: MatSort;\n  dataSource: MatTableDataSource<any>;\n  displayedColumns: string[] = ['typeOfDocument', 'variant', 'expiresOn', 'basedOn', 'remarks'];\n  @ViewChild(AttachmentDocumentComponent, { static: false }) materialAttachmentDocument: AttachmentDocumentComponent\n    ;\n\n  @Input() previewS1Application: any;// = new S1Application();\n  attachmentDocuments = [];\n  @Input() originalAttachmentDocuments = [];\n  @Input() revisionAttachmentDocuments = [];\n  @Input() complianceAttachmentDocuments = [];\n  @Input() applicationSingleMedia = new ApplicationSingleMedia();\n  @Input() revisionLetterAttachment: any;\n  @Input() multimediaDTO: any = {};\n\n  supportiveDocumentList = [];\n  multimediaMovingList = [];\n  multimediaStaticList = [];\n\n  constructor(\n    private apiService: ApiService\n  ) { }\n\n  ngOnInit(): void {\n    // console.log('Preview..', this.previewS1Application);\n  }\n\n\n  viewDocument(typeOfDocument) {\n    if (this.previewS1Application.submissionType === SUBMISSION_TYPE.ORIGINAL) {\n      this.attachmentDocuments = this.originalAttachmentDocuments;\n    } else if (this.previewS1Application.submissionType === SUBMISSION_TYPE.REVISION) {\n      this.attachmentDocuments = this.revisionLetterAttachment;\n    } else if (this.previewS1Application.submissionType === SUBMISSION_TYPE.COMPLIANCE\n      || this.previewS1Application.decisionStatus === APP_DECISION_STATUS.INCOMPLETE) {\n      this.attachmentDocuments = this.complianceAttachmentDocuments;\n    }\n\n    if (typeOfDocument === ATTACHMENT_TYPE.MAIN) {\n      const mainDoc = this.attachmentDocuments.filter(res => res.attachmentType === ATTACHMENT_TYPE.MAIN)[0];\n      window.open(this.attachmentDocuments[0].fileURL);\n    } else if (typeOfDocument === ATTACHMENT_TYPE.SUPPORTIVE) {\n      const supportiveDoc = this.attachmentDocuments.filter(res => res.attachmentType === ATTACHMENT_TYPE.SUPPORTIVE)[0];\n      window.open(supportiveDoc.fileURL);\n    } else if (typeOfDocument === ATTACHMENT_TYPE.REVISION_LETTER) {\n      // this.attachmentDocuments.filter(res => res.attachmentType === ATTACHMENT_TYPE.REVISION_LETTER)[0];\n      const revisionLetterDoc = this.revisionLetterAttachment;\n      window.open(revisionLetterDoc.fileURL);\n    }\n  }\n\n}\n","<!--  -->\n<div class=\"row fields\">\n  <h4>\n    <i class=\"material-icons\">preview</i> &nbsp;<b>CLIENT'S INFORMATION</b>\n    <hr>\n  </h4>\n  <div class=\"row\">\n    <div class=\"col-md-4\" appearance=\"outline\">\n      <mat-label>Client Company Name</mat-label>\n      <input matInput [value]=\"previewS1Application?.company?.companyName\" disabled>\n    </div>\n    <div class=\"col-md-4\" appearance=\"outline\">\n      <mat-label>Client Membership Affiliation</mat-label>\n      <input matInput [value]=\"previewS1Application?.company?.membersAffiliation?.description\" disabled>\n    </div>\n    <div class=\"col-md-4\" appearance=\"outline\"></div>\n  </div>\n\n  <div class=\"row\"><br></div>\n\n  <div class=\"row\">\n    <div class=\"col-md-4\" appearance=\"outline\">\n      <mat-label>Brand</mat-label>\n      <input matInput [value]=\"previewS1Application?.brand?.description\" disabled>\n    </div>\n    <div class=\"col-md-4\" appearance=\"outline\">\n      <mat-label>Product</mat-label>\n      <input matInput [value]=\"previewS1Application?.product?.description\" disabled>\n    </div>\n    <div class=\"col-md-4\" appearance=\"outline\">\n      <mat-label>Category</mat-label>\n      <input matInput [value]=\"previewS1Application?.product?.category?.description\" disabled>\n    </div>\n  </div>\n\n  <br><br><br>\n</div>\n\n<!--  -->\n<div class=\"row fields\">\n  <h4>\n    <i class=\"material-icons\">preview</i> &nbsp;<b>MATERIAL INFORMATION</b>\n    <hr>\n  </h4>\n  <div class=\"row\">\n    <div class=\"col-md-12\" appearance=\"outline\">\n      <mat-label>Ad Title</mat-label>\n      <input matInput [value]=\"previewS1Application?.adTitle\" disabled>\n    </div>\n  </div>\n\n  <div class=\"row\"><br></div>\n\n  <div class=\"row\">\n    <div class=\"col-md-6\" appearance=\"outline\">\n      <mat-label>Reference Code of Previously-Approved Material</mat-label>\n      <input matInput [value]=\"previewS1Application?.previousRefCode\" disabled>\n    </div>\n    <div class=\"col-md-6\" appearance=\"outline\">\n      <mat-label>Tag line</mat-label>\n      <input matInput [value]=\"previewS1Application?.tagLine\" disabled>\n    </div>\n  </div>\n\n  <div class=\"row\" *ngIf=\"previewS1Application?.refTypeOfMedium\">\n    <div class=\"col-md-12\">\n      <hr>\n    </div>\n  </div>\n  <div class=\"row\" *ngIf=\"previewS1Application?.refTypeOfMedium\">\n    <div class=\"col-md-6\" appearance=\"outline\">\n      <mat-label>Media Type</mat-label>\n      <input matInput [value]=\"previewS1Application?.refTypeOfMedium\" disabled>\n    </div>\n  </div>\n  <div class=\"row\"><br></div>\n  <div class=\"row\" *ngIf=\"applicationSingleMedia\">\n    <div class=\"col-md-3\" appearance=\"outline\" *ngIf=\"applicationSingleMedia?.mediumExecution?.typeOfMedium?.description\">\n      <mat-label>Type of Medium</mat-label>\n      <input matInput [value]=\"applicationSingleMedia?.mediumExecution?.typeOfMedium?.description\" disabled>\n    </div>\n    <div class=\"col-md-3\" appearance=\"outline\" *ngIf=\"applicationSingleMedia?.mediumExecution\">\n      <mat-label>Execution</mat-label>\n      <input matInput [value]=\"applicationSingleMedia?.mediumExecution?.typeOfExecution?.typeOfExecution\" disabled>\n    </div>\n    <div class=\"col-md-3\" appearance=\"outline\" *ngIf=\"applicationSingleMedia?.dialect\">\n      <mat-label>Language/Dialect</mat-label>\n      <input matInput [value]=\"applicationSingleMedia?.dialect?.dialect\" disabled>\n    </div>\n    <div class=\"col-md-3\" appearance=\"outline\" *ngIf=\"applicationSingleMedia?.others\">\n      <mat-label>Others</mat-label>\n      <input matInput [value]=\"applicationSingleMedia?.others\" disabled>\n    </div>\n    <div class=\"col-md-3\" appearance=\"outline\" *ngIf=\"applicationSingleMedia?.sizeLength\">\n      <mat-label>Size Length</mat-label>\n      <input matInput [value]=\"applicationSingleMedia?.sizeLength\" disabled>\n    </div>\n    <div class=\"col-md-3\" appearance=\"outline\" *ngIf=\"applicationSingleMedia?.width\">\n      <mat-label>Width</mat-label>\n      <input matInput [value]=\"applicationSingleMedia?.width\" disabled>\n    </div>\n  </div>\n\n  <!-- TO BE DELETED ONCE VERIFIED -->\n  <!-- <div class=\"row\" *ngIf=\"multimediaMovingList?.length>0\">\n    <span *ngFor=\"let i of multimediaMovingList\">\n      <table>\n        <tr>\n          <td class=\"col-md-4\">\n            <mat-checkbox [checked]=\"true\" disabled>{{i?.typeOfMedium?.description}}</mat-checkbox>\n          </td>\n          <td class=\"col-md-1\">Length:</td>\n          <td class=\"col-md-2\">\n            <input matInput [value]=\"i?.multimediaSizeLength\" disabled>\n          </td>\n          <td class=\"col-md-5\"></td>\n        </tr>\n      </table>\n    </span>\n  </div>\n\n  <div class=\"row\" *ngIf=\"multimediaStaticList?.length>0\">\n    <span *ngFor=\"let i of multimediaStaticList\">\n      <table>\n        <tr>\n          <td class=\"col-md-4\">\n            <mat-checkbox [checked]=\"true\" disabled>{{i?.typeOfMedium?.description}}</mat-checkbox>\n          </td>\n          <td class=\"col-md-1\">Size</td>\n          <td class=\"col-md-2\">\n            <input matInput [value]=\"i?.multimediaSizeLength\" disabled>\n          </td>\n          <td class=\"col-md-5\"></td>\n        </tr>\n      </table>\n    </span>\n  </div> -->\n\n  <!-- New Multimedia List -->\n  <div class=\"row\" *ngIf=\"multimediaDTO\">\n    <table class=\"mx-3 mb-3\">\n      <ng-container *ngIf=\"previewS1Application?.refTypeOfMedium === 'MULTIMEDIA-STATIC'\">\n        <ng-container *ngFor=\"let i of multimediaDTO.applicationMultimediaStaticList\">\n          <tr *ngIf=\"i?.hasSelected\" style=\"height: 30px;\">\n            <td class=\"col-md-4\">\n              <mat-checkbox [checked]=\"i?.hasSelected\" disabled>\n                {{i?.multimediaStaticMedium | uppercase}}\n              </mat-checkbox>\n            </td>\n            <td class=\"col-md-1\" \n              *ngIf=\"previewS1Application?.refTypeOfMedium === 'MULTIMEDIA-STATIC' && i?.multimediaStaticMedium !== 'digital static'\">\n              Size\n            </td>\n            <td class=\"col-md-2\">\n              <input matInput \n                *ngIf=\"previewS1Application?.refTypeOfMedium === 'MULTIMEDIA-STATIC' && i?.multimediaStaticMedium !== 'digital static'\" \n                [value]=\"i?.sizeLength\" disabled>\n            </td>\n            <td class=\"col-md-5\"></td>\n          </tr>\n        </ng-container>\n      </ng-container>\n\n      <ng-container *ngIf=\"previewS1Application?.refTypeOfMedium === 'MULTIMEDIA-MOVING'\">\n        <ng-container *ngFor=\"let i of multimediaDTO.applicationMultimediaMovingList\" style=\"height: 30px;\">\n          <tr *ngIf=\"i?.hasSelected\">\n            <td class=\"col-md-4\">\n              <mat-checkbox [checked]=\"true\" disabled>\n                {{i?.multimediaMovingMedium | uppercase}}\n              </mat-checkbox>\n            </td>\n            <td class=\"col-md-1\" *ngIf=\"previewS1Application?.refTypeOfMedium === 'MULTIMEDIA-MOVING'\">Length</td>\n            <td class=\"col-md-2\">\n              <input matInput *ngIf=\"previewS1Application?.refTypeOfMedium === 'MULTIMEDIA-MOVING'\" [value]=\"multimediaDTO?.sizeLength\" disabled>\n            </td>\n            <td class=\"col-md-5\"></td>\n          </tr>\n        </ng-container>\n      </ng-container>\n    </table>\n  </div>\n\n  <app-attachment-document [s1Application]=\"previewS1Application\" [applicationStage]=\"'S1-Preview'\"\n  [isAscUser]=\"'true'\" [isDisableFieldOnUpdate]=\"'true'\"\n  [originalAttachmentDocuments]=\"originalAttachmentDocuments\" [revisionAttachmentDocuments]=\"revisionAttachmentDocuments\" [complianceAttachmentDocuments]=\"complianceAttachmentDocuments\"></app-attachment-document>\n\n  <div class=\"row\" *ngIf=\"supportiveDocumentList.length>0\">\n    <div class=\"col-md-12\" appearance=\"outline\">\n      <div class=\"mat-elevation-z8 fields\">\n        <table mat-table [dataSource]=\"dataSource||supportiveDocumentList\" matSort>\n\n          <ng-container matColumnDef=\"typeOfDocument\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> TYPE OF DOCUMENT </th>\n            <td mat-cell *matCellDef=\"let element\"> {{ element?.typeOfDocument?.description }} </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"variant\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> VARIANT </th>\n            <td mat-cell *matCellDef=\"let element\"> {{ element?.variant==undefined ? 'N/A' : element?.variant }} </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"expiresOn\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> EXPIRES ON </th>\n            <td mat-cell *matCellDef=\"let element\">\n              {{ element?.expiresOn==undefined ? 'N/A' : element?.expiresOn | date:'yyyy-MM-dd' }}\n            </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"basedOn\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> BASED ON </th>\n            <td mat-cell *matCellDef=\"let element\">\n              {{ element?.basedOn ==undefined ? 'N/A' : element?.basedOn | date:'yyyy-MM-dd' }}\n            </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"remarks\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> REMARKS </th>\n            <td mat-cell *matCellDef=\"let element\"> {{ element?.remarks==undefined ? 'N/A' : element?.remarks }} </td>\n          </ng-container>\n\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n          <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n        </table>\n        <div class=\"no-record\" [hidden]=\"dataSource && dataSource?.data?.length > 0\"\n          *ngIf=\"supportiveDocumentList.length==0\">\n          No supporting document found.\n        </div>\n        <!-- <mat-paginator [pageSizeOptions]=\"[10, 20, 50]\" showFirstLastButtons></mat-paginator> -->\n      </div>\n      <div class=\"row\"><br></div>\n    </div>\n  </div>\n</div>\n\n<!--  -->\n<div class=\"row fields\" *ngIf=\"previewS1Application.autoSubmit==true&&previewS1Application?.externalStatus!='SAVED'\">\n  <h4>\n    <i class=\"material-icons\">schedule_send</i> &nbsp;<b>AUTO-SUBMISSION DETAILS</b>\n    <hr>\n    <div class=\"row\">\n      <div class=\"col-md-6\" appearance=\"outline\">\n        <mat-label>Date</mat-label>\n        <input matInput [value]=\"previewS1Application.submissionDate\" disabled>\n      </div>\n      <!-- <div class=\"col-md-3\" appearance=\"outline\">\n        <mat-label>Time</mat-label>\n        <input matInput [value]=\"previewS1Application.autoSubmitTime+' AM'\" disabled>\n      </div> -->\n    </div>\n  </h4>\n</div>\n","import { Component, Inject, Input, OnDestroy, OnInit, Optional, ViewChild } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTable, MatTableDataSource } from '@angular/material/table';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { Router } from '@angular/router';\nimport { AttachmentDocument, Payment, S1Application } from '@models';\nimport { ApiService, DataStorageService, SweetAlertService } from '@services';\nimport { ATTACHMENT_TYPE, ENDPOINTS, ERROR_MESSAGES, PAYMENT_STATUS, SUBMISSION_TYPE, USER_ROLES } from '@shared';\nimport { ApplicationSingleMedia } from 'app/core/models/application-single-media.model';\nimport { MultipleApplication } from 'app/core/models/multiple-application.model';\nimport { FileStorageService } from 'app/core/services/file.storage.service';\nimport Swal from 'sweetalert2';\n\nexport interface companyDetails {\n  referenceCode: string;\n  amount: number;\n}\n\nconst ELEMENT_DATA: companyDetails[] = [\n  { referenceCode: 'Company one ', amount: 3000, },\n  { referenceCode: 'Company two ', amount: 4000, },\n  { referenceCode: 'Company three ', amount: 5000, },\n  { referenceCode: 'Company two ', amount: 6000, },\n  { referenceCode: 'Company three ', amount: 7000, },\n];\n\n@Component({\n  selector: 'app-modal-multiple-applications',\n  templateUrl: './modal-multiple-applications.component.html',\n  styleUrls: ['./modal-multiple-applications.component.scss']\n})\nexport class ModalMultipleApplicationsComponent implements OnInit, OnDestroy {\n\n  @ViewChild(MatPaginator, { static: false }) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: false }) sort: MatSort;\n  @ViewChild(MatTable, { static: false }) table: MatTable<ModalMultipleApplicationsComponent>;\n  dataSource: MatTableDataSource<any>\n  displayedColumns: string[] = ['referenceCode', 'adTitle', 'mediumAndLength', 'amount'];\n  multipleApplicationList = [];\n\n  @Input() s1Application = new S1Application();\n  payment = new Payment();\n  safeURLProofOfPayment: any;\n  selectedFiles: any;\n  previewDocument = false;\n  attachmentDocument = new AttachmentDocument();\n  applicationSingleMedia = new ApplicationSingleMedia();\n  currentUser: any;\n  attachmentDocuments = [];\n  isSubmitted = false;\n  paymentTypeList = [];\n  paymentType: any;\n  attachment: any;\n  multipleApplication = new MultipleApplication();\n  totalAmount: any;\n  paymentDetails: any;\n  isDisabled = false;\n  typeOfMediumDisplay = '';\n\n  constructor(\n    private sanitizer: DomSanitizer,\n    private apiService: ApiService,\n    public dataStorage: DataStorageService,\n    private fileStorageService: FileStorageService,\n    private sweetAlertService: SweetAlertService,\n    private router: Router,\n    @Optional() public dialogRef: MatDialogRef<ModalMultipleApplicationsComponent>,\n    @Optional() @Inject(MAT_DIALOG_DATA) public data: any\n  ) {\n    if (data) {\n      this.multipleApplication = data;\n      if (this.multipleApplication.paymentStatus !== PAYMENT_STATUS.FOR_PAYMENT) {\n        this.isDisabled = true;\n      }\n      this.getPaymentDetails();\n    }\n  }\n\n  ngOnInit(): void {\n    this.getMultipleApplicationList();\n    this.getPaymentList();\n  }\n\n  getPaymentDetails() {\n    this.apiService.findAll(ENDPOINTS.multiplePaymentDetails + this.multipleApplication.id).subscribe((res: any) => {\n      this.paymentDetails = res;\n    });\n  }\n\n\n  getMultipleApplicationList() {\n    this.apiService.findAll(ENDPOINTS.getMultipleAppFormsWithNoRejected + this.multipleApplication.id).subscribe((res: any) => {\n      this.multipleApplicationList = res.responseData.data;\n      console.log(this.multipleApplicationList);\n      // this.totalAmount = this.multipleApplicationList.map(mapped => mapped.amount).reduce((previousValue, currentValue) =>\n      //   previousValue + currentValue,\n      //   0);\n\n      this.multipleApplicationList.forEach((multipleApplication) => {\n        switch (multipleApplication?.refTypeOfMedium || multipleApplication?.applicationFormS2?.applicationForm?.refTypeOfMedium) {\n          case 'SINGLE MEDIA':\n            this.getApplicationSingleMedia(multipleApplication?.appFormReference);\n            break;\n          case 'MULTIMEDIA-MOVING':\n            this.getMultimediaMoving(multipleApplication?.appFormReference);\n            break;\n          case 'MULTIMEDIA-STATIC':\n            this.getMultimediaStatic(multipleApplication?.appFormReference);\n            break;\n          default:\n            break;\n        }\n      });\n\n\n      this.dataSource = new MatTableDataSource<any>(this.multipleApplicationList);\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n\n    }, (err: any) => {\n      err.error.message = ERROR_MESSAGES.under_maintenance;\n      this.sweetAlertService.error(err);\n    });\n  }\n\n  getPaymentList() {\n    this.apiService.findAll(ENDPOINTS.paymentType).subscribe((res: any) => {\n      if (this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT) {\n        const creditCardIndex = this.paymentTypeList\n          .findIndex((element) => element.paymentDescription === 'Credit Card');\n        this.paymentTypeList.splice(creditCardIndex, 1);\n      }\n      this.paymentTypeList = res.responseData.data;\n    });\n  }\n\n  selectFile(event) {\n    const attachmentSize = event.target.files[0].size;\n\n    if (event.target.files[0].type === 'application/pdf') {\n      if (attachmentSize > 15000000) { // 1MB = 1M\n        this.sweetAlertService.customErrorMessage(`Attachments' total file size should not exceed 15MB.`);\n        event.target.value = '';\n        return;\n      } else {\n        const pdfURL = URL.createObjectURL(event.target.files[0]);\n        this.safeURLProofOfPayment = this.sanitizer.bypassSecurityTrustResourceUrl(pdfURL);\n        this.previewDocument = true;\n\n        // env.showSpinner = true;\n        const reader = new FileReader();\n        const [file] = event.target.files;\n\n        reader.readAsDataURL(file);\n        reader.onload = () => {\n        };\n      }\n\n      this.selectedFiles = event.target.files;\n    } else {\n      this.sweetAlertService.customErrorMessage('Attachment should be in PDF format only.');\n      event.target.value = '';\n      return;\n    }\n  }\n\n  uploadDocument(multipleApplication) {\n    Swal.fire({\n      text: 'Are you sure you want to submit this PROOF OF PAYMENT?',\n      icon: 'question',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Confirm'\n    }).then((result) => {\n      if (result.value) {\n        this.dataStorage.setDisplayProgressbar(true);\n        let params = '';\n        params = '?&attachmentType=' + ATTACHMENT_TYPE.PAYMENT + '&submissionType=' + SUBMISSION_TYPE.ORIGINAL;\n        this.fileStorageService.pushFileToStorage(ENDPOINTS.attachmentDocument, this.selectedFiles.item(0), params)\n          .subscribe(res => {\n            const obj = res.responseData.data;\n            console.log(obj);\n            this.s1Application.paymentAttachmentReference = obj.paymentAttachmentReference;\n            this.payment.paymentAttachmentReference = obj.paymentAttachmentReference;\n            this.payment.amountDue = this.totalAmount;\n            this.payment.multipleApplication = multipleApplication;\n            this.payment.filename = obj.filename;\n            this.saveProofOfPayment();\n            this.selectedFiles = undefined;\n          }, (err: any) => {\n            this.sweetAlertService.error(err);\n          }, () => {\n            // actions after subscription\n            this.dataStorage.setDisplayProgressbar(false);\n          });\n      }\n    });\n  }\n\n  saveProofOfPayment() {\n    console.log('Saving payment...');\n    this.dataStorage.setDisplayProgressbar(true);\n    this.payment.paymentStatus = PAYMENT_STATUS.FOR_APPROVAL;\n    this.payment.id = 0;\n    this.payment.officialReceiptNo = '';\n    this.payment.paymentMethod = null;\n    this.payment.amountDue = this.multipleApplication.totalAmount;\n    console.log('PAYMENT : ', this.payment);\n    console.log(this.paymentType.id);\n\n\n    this.apiService.save(`${ENDPOINTS.applicationFormPresentor}payment-type-id/${this.paymentType.id}/payment-multiple/submit`, this.payment)\n      .subscribe((res: any) => {\n        console.log('SAVED STATUS: ', res.responseData.data);\n\n        this.safeURLProofOfPayment = this.sanitizer.bypassSecurityTrustResourceUrl(res.responseData.data.fileURL);\n        this.isSubmitted = true;\n        this.sweetAlertService.customSuccessMessage('Proof of payment successfully submitted.');\n        this.closeModal();\n      }, (err) => {\n        console.log(err);\n        this.sweetAlertService.error(err);\n        this.dataStorage.setDisplayProgressbar(false);\n      }, () => {\n        this.dataStorage.setDisplayProgressbar(false);\n      });\n  }\n\n  closeModal(): void {\n    this.dialogRef.close();\n    this.router.navigate(['asc/page/application/multiple-applications']);\n  }\n  ngOnDestroy(): void {\n    // this.s1Application = null;\n  }\n\n  getApplicationSingleMedia(appFormReference = this.payment?.applicationForm?.appFormReference) {\n    if (this.payment?.applicationFormS2?.applicationForm?.refTypeOfMedium) {\n      appFormReference = this.payment?.applicationFormS2?.applicationForm?.appFormReference;\n    }\n    this.apiService.findByParam(ENDPOINTS.applicationSingleMedia,\n      `app-form-reference/${appFormReference}`).subscribe(\n        (res: any) => {\n          if (res.responseData.data.length > 0) {\n            this.applicationSingleMedia = res.responseData.data[0];\n\n            this.typeOfMediumDisplay = `${this.applicationSingleMedia?.mediumExecution?.typeOfMedium?.description} (${this.applicationSingleMedia?.sizeLength})`;\n            console.log('view applicationSingleMedia: ', this.typeOfMediumDisplay);\n\n            this.multipleApplicationList.forEach((element, index) => {\n              if (element.appFormReference === appFormReference) {\n                this.multipleApplicationList[index] = {\n                  ...this.multipleApplicationList[index],\n                  typeOfMediumDisplay: this.typeOfMediumDisplay\n                };\n              }\n            });\n            this.dataSource = new MatTableDataSource<any>(this.multipleApplicationList);\n            this.dataSource.paginator = this.paginator;\n\n          } else {\n            this.applicationSingleMedia = new ApplicationSingleMedia();\n            this.typeOfMediumDisplay = '';\n          }\n        }, (err: any) => {\n          this.applicationSingleMedia = new ApplicationSingleMedia();\n          this.typeOfMediumDisplay = '';\n        });\n  }\n\n  getMultimediaStatic(appFormReference = this.payment?.applicationForm?.appFormReference) {\n    this.apiService.findByParam(ENDPOINTS.applicationMultimedia,\n      `app-form-reference/${appFormReference}`).subscribe(\n        (res: any) => {\n          if (res.responseData.data.length > 0) {\n            const multimediaList = new Set(res.responseData.data.map(mappedList => `${mappedList?.typeOfMedium?.description} (${mappedList?.multimediaSizeLength})`));\n\n            this.typeOfMediumDisplay = '';\n            let mediaCtrl = 1;\n            for (const media of multimediaList) {\n              if (mediaCtrl !== multimediaList.size) {\n                this.typeOfMediumDisplay += `${media}, `;\n                mediaCtrl++;\n              } else {\n                this.typeOfMediumDisplay += media;\n              }\n            }\n\n            this.multipleApplicationList.forEach((element, index) => {\n              console.log(element);\n              if (element.appFormReference === appFormReference) {\n                this.multipleApplicationList[index] = {\n                  ...this.multipleApplicationList[index],\n                  typeOfMediumDisplay: this.typeOfMediumDisplay\n                };\n              }\n            });\n            this.dataSource = new MatTableDataSource<any>(this.multipleApplicationList);\n            this.dataSource.paginator = this.paginator;\n\n          } else {\n            this.typeOfMediumDisplay = '';\n          }\n        }, (err: any) => {\n          this.typeOfMediumDisplay = '';\n        });\n  }\n\n  getMultimediaMoving(appFormReference = this.payment?.applicationForm?.appFormReference) {\n    this.apiService.findByParam(ENDPOINTS.applicationMultimedia,\n      `app-form-reference/${appFormReference}`).subscribe(\n        (res: any) => {\n          if (res.responseData.data.length > 0) {\n            const multimediaList = new Set(res.responseData.data.map(mappedList => `${mappedList?.typeOfMedium?.description} (${mappedList?.multimediaSizeLength})`));\n\n            this.typeOfMediumDisplay = '';\n            let mediaCtrl = 1;\n            for (const media of multimediaList) {\n              if (mediaCtrl !== multimediaList.size) {\n                this.typeOfMediumDisplay += `${media}, `;\n                mediaCtrl++;\n              } else {\n                this.typeOfMediumDisplay += media;\n              }\n            }\n\n            this.multipleApplicationList.forEach((element, index) => {\n              console.log(element);\n              if (element.appFormReference === appFormReference) {\n                this.multipleApplicationList[index] = {\n                  ...this.multipleApplicationList[index],\n                  typeOfMediumDisplay: this.typeOfMediumDisplay\n                };\n              }\n            });\n            this.dataSource = new MatTableDataSource<any>(this.multipleApplicationList);\n            this.dataSource.paginator = this.paginator;\n\n          } else {\n            this.typeOfMediumDisplay = '';\n          }\n        }, (err: any) => {\n          this.typeOfMediumDisplay = '';\n        });\n  }\n}\n","<div class=\"container-fluid\">\n    <div class=\"row\">\n        <div class=\"col-md-12 title\">\n            <mat-label>\n                <mat-icon>view_list</mat-icon> Schedule of Fees - Multiple Applications\n            </mat-label>\n        </div>\n    </div>\n    <hr>\n    <br>\n    <div class=\"row col-md-12\">\n        <div class=\"row col-md-6\">\n            <div>\n                <mat-label>Proof of Payment: &nbsp;&nbsp;&nbsp;<span>PDF file only!</span></mat-label><br>\n                <input class=\"file-upload\" type=\"file\" [(ngModel)]=\"attachment\" [ngModelOptions]=\"{standalone: true}\"\n                    accept=\".pdf\" (change)=\"selectFile($event)\" [disabled]=\"isDisabled\">\n            </div>\n            <div *ngIf=\"previewDocument===true && !isDisabled\">\n                <div class=\"file-upload\">\n                    <object [data]=\"safeURLProofOfPayment\" type=\"application/pdf\" width=\"100%\" height=\"500\">\n                        <iframe [src]=\"safeURLProofOfPayment\" width=\"100%\" height=\"500\">\n                            <p>This browser does not support PDF!</p>\n                        </iframe>\n                    </object>\n                </div>\n            </div>\n        </div>\n        <div class=\"row col-md-6\">\n\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n            <mat-label>Advertiser</mat-label>\n            <input matInput name=\"companyName\" [value]=\"multipleApplication?.company?.companyName\" readonly>\n        </mat-form-field>\n\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n            <mat-label>Vatable Sales</mat-label>\n            <input matInput class=\"numbers-input\" name=\"amount\" [value]=\"paymentDetails?.basicRate | number : '1.2-2'\" readonly>\n        </mat-form-field>\n\n\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n            <mat-label>VAT</mat-label>\n            <input matInput class=\"numbers-input\" name=\"amount\" [value]=\"paymentDetails?.vat | number : '1.2-2'\" readonly>\n        </mat-form-field>\n\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n            <mat-label>Total Sales (VAT Inclusive)</mat-label>\n            <input matInput class=\"numbers-input total\" name=\"amount\" [value]=\"paymentDetails?.amountDue | number : '1.2-2'\" readonly>\n        </mat-form-field>\n\n        <div>\n          <table mat-table [dataSource]=\"dataSource\" matSort>\n              <ng-container matColumnDef=\"referenceCode\">\n                  <th mat-header-cell *matHeaderCellDef> Reference Code </th>\n                  <td mat-cell *matCellDef=\"let element; let i = index\">{{element?.referenceCode}}</td>\n              </ng-container>\n              <ng-container matColumnDef=\"adTitle\">\n                  <th mat-header-cell *matHeaderCellDef> Ad Title </th>\n                  <td mat-cell *matCellDef=\"let element; let i = index\">{{element?.adTitle}}</td>\n              </ng-container>\n              <ng-container matColumnDef=\"mediumAndLength\">\n                <th mat-header-cell *matHeaderCellDef> Medium And Length</th>\n                <td mat-cell *matCellDef=\"let element; let i = index\">{{ element?.typeOfMediumDisplay }}</td>\n              </ng-container>\n              <ng-container matColumnDef=\"amount\">\n                  <th mat-header-cell *matHeaderCellDef> Amount</th>\n                  <td mat-cell *matCellDef=\"let element; let i = index\" class=\"numbers-input\">{{element?.amount | number : '1.2-2'}}</td>\n              </ng-container>\n              <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n              <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n          </table>\n          <div class=\"no-record\" [hidden]=\"dataSource && dataSource?.data?.length > 0\">\n              No record found.\n          </div>\n          <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons></mat-paginator>\n          <!-- <div class=\"grandTotal\">\n            <mat-label>TOTAL: &nbsp;&nbsp;&nbsp;<span>{{multipleApplication?.totalAmount | number : '1.2-2'}}</span></mat-label>\n          </div> -->\n        </div>\n\n        <div><br><hr><br></div>\n\n            <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n                <mat-label>Payment Mode</mat-label>\n                <mat-select [(ngModel)]=\"paymentType\" [ngModelOptions]=\"{standalone: true}\" [disabled]=\"multipleApplication?.paymentStatus !== 'FOR_PAYMENT'\">\n                    <mat-option *ngFor=\"let i of paymentTypeList\" [value]=\"i\" name=\"paymentType\">\n                        {{i?.paymentDescription | uppercase}}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n\n            <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n                <mat-label>Remarks</mat-label>\n                <textarea matInput name=\"remarks\" [(ngModel)]=\"payment.remarks\" [readonly]=\"multipleApplication?.paymentStatus !== 'FOR_PAYMENT'\"></textarea>\n            </mat-form-field>\n\n        </div>\n    </div>\n\n    <div class=\"row\" *ngIf=\"!isDisabled || multipleApplication?.paymentStatus === undefined || multipleApplication?.totalAmount === 0\">\n        <div class=\"col-md-10\"><span *ngIf=\"multipleApplication && multipleApplication?.totalAmount === 0\">\n          <i>Please contact ASC admin to check the Maintenance of Fees.</i></span></div>\n        <div class=\"col-md-2\">\n            <button mat-raised-button class=\"button-red\" [disabled]=\"!paymentType || !previewDocument || multipleApplication?.totalAmount === 0\" (click)=\"uploadDocument(multipleApplication)\">\n                <i class=\"material-icons color__white\">task_alt</i> SUBMIT\n            </button>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { FormListComponent } from '@fragments';\nimport { S1Application, S2Application } from '@models';\nimport { ApiService, SweetAlertService } from '@services';\nimport { ENDPOINTS, USER_ROLES } from '@shared';\nimport { NgxSpinnerService } from 'ngx-spinner';\n\n@Component({\n  selector: 'app-reassignment',\n  templateUrl: './reassignment.component.html',\n  styleUrls: ['./reassignment.component.scss']\n})\nexport class ReassignmentComponent implements OnInit {\n  @ViewChild(FormListComponent) formListComponent: FormListComponent;\n\n  // ojects\n  s1Application = new S1Application();\n  s2Application = new S2Application();\n\n  // lists\n  userList = [];\n\n  // for displayed list\n  // s1\n  s1ApplicationList = [];\n  s1ApplicationDataSource: MatTableDataSource<S1Application>;\n  s1ApplicationDisplayedColumns = [\n    'referenceCode',\n    'adTitle',\n    'applicationOwner',\n    'assignedEncoder',\n    'assignedAdSpecialist',\n    'assignedScreener',\n    'assignedReviewer',\n    'assignedUser',\n  ];\n\n  // s2\n  // TODO update when endpoint is available\n  s2ApplicationList = [];\n  s2ApplicationDataSource: MatTableDataSource<S2Application>;\n  s2ApplicationDisplayedColumns = [\n    'referenceCode',\n    'adTitle',\n    'applicationOwner',\n    'assignedEncoder',\n    'assignedAdSpecialist',\n    // 'assignedScreener',\n    // 'assignedReviewer',\n    'assignedUser',\n  ];\n\n  // form\n  s1ApplicationForm: FormGroup;\n\n  // others\n  applicationOwnerName = '';\n  displayedContent = 'S1';\n\n  constructor(\n    private apiService: ApiService,\n    private formBuilder: FormBuilder,\n    private sweetAlertService: SweetAlertService,\n    private spinner: NgxSpinnerService,\n  ) { }\n\n  ngOnInit() {\n    this.getS1ApplicationList();\n    this.setFormValidator();\n    this.getUserList();\n  }\n\n  getS1ApplicationList(applicationType = 'S1'): void {\n    this.spinner.show();\n    if (applicationType === 'S1') {\n      this.apiService.findAll(ENDPOINTS.admin).subscribe((res: any) => {\n        this.s1ApplicationList = res.responseData.data;\n        this.s1ApplicationList = this.s1ApplicationList.filter(filteredS1List => !filteredS1List.appliedS2);\n\n        this.s1ApplicationDataSource = new MatTableDataSource<S1Application>(this.s1ApplicationList);\n        this.s1ApplicationDataSource.paginator = this.formListComponent.paginator;\n        this.s1ApplicationDataSource.sort = this.formListComponent.sort;\n      }, (err) => {\n        console.error(err);\n        this.spinner.hide();\n      }, () => {\n        this.spinner.hide();\n      });\n    } else if (applicationType === 'S2') {\n      this.apiService.findAll(ENDPOINTS.s2Application).subscribe((res: any) => {\n        this.s2ApplicationList = res.responseData.data;\n\n        this.s2ApplicationDataSource = new MatTableDataSource<S2Application>(this.s2ApplicationList);\n        this.s2ApplicationDataSource.paginator = this.formListComponent.paginator;\n        this.s2ApplicationDataSource.sort = this.formListComponent.sort;\n      }, (err) => {\n        console.error(err);\n        this.spinner.hide();\n      }, () => {\n        this.spinner.hide();\n      });\n    }\n  }\n\n  getS1Application(): void {\n    this.apiService.findById(ENDPOINTS.applicationForm, this.formListComponent.idForUpdate).subscribe((res: any) => {\n      if (res) {\n        this.s1Application = res.responseData.data;\n        this.applicationOwnerName = this.s1Application.applicationOwner\n          ? this.s1Application.applicationOwner.lastName + ', ' + this.s1Application.applicationOwner.firstName\n          : '';\n        if (this.s1Application.assignedUser) {\n          this.getUserList(this.s1Application.assignedUser.userRole.name);\n        } else {\n          this.getUserList('N/A');\n        }\n\n      }\n    });\n  }\n\n  getS2Application(): void {\n    this.apiService.findById(ENDPOINTS.applicationFormS2, this.formListComponent.idForUpdate).subscribe((res: any) => {\n      if (res) {\n\n        this.s2Application = res.responseData.data;\n        if (this.s2Application.applicationForm) {\n          this.applicationOwnerName = this.s2Application.applicationForm.applicationOwner\n            ? this.s2Application.applicationForm.applicationOwner.lastName + ', '\n            + this.s2Application.applicationForm.applicationOwner.firstName\n            : '';\n        }\n        if (this.s2Application.assignedUser) {\n          this.getUserList(this.s2Application.assignedUser.userRole.name);\n        } else {\n          this.getUserList('N/A');\n        }\n\n      }\n    });\n  }\n\n  update(): void {\n    this.spinner.show();\n\n    let endpoint = '';\n    let currentObj: any;\n    if (this.displayedContent === 'S1') {\n      endpoint = ENDPOINTS.applicationReassignment\n      currentObj = this.s1Application;\n    } else if (this.displayedContent === 'S2') {\n      endpoint = ENDPOINTS.s2ApplicationReassignment;\n      // endpoint = ENDPOINTS.applicationFormS2;\n      if (this.s2Application.actionStatus === 'ASSIGN_TO_ENCODER') {\n        this.s2Application.assignedEncoder = this.s2Application.assignedUser;\n      } else if (this.s2Application.actionStatus === 'ASSIGN_TO_ADSPE') {\n        this.s2Application.assignedAdSpecialist = this.s2Application.assignedUser;\n      }\n\n      currentObj = this.s2Application;\n    }\n\n    this.apiService.save(endpoint, currentObj).subscribe(\n      (res: any) => {\n        if (res) {\n          this.spinner.hide();\n          this.sweetAlertService.success(res);\n        }\n      }, (err: any) => {\n        this.spinner.hide();\n        this.sweetAlertService.error(err);\n      }, () => {\n        // actions after subscription\n        this.spinner.hide();\n        this.getUserList();\n        this.resetFormValidator();\n        if (this.displayedContent === 'S1') {\n          this.getS1ApplicationList();\n        } else if (this.displayedContent === 'S2') {\n          this.getS1ApplicationList('S2');\n        }\n      });\n  }\n\n  setFormValidator(): void {\n    this.s1ApplicationForm = this.formBuilder.group({\n      referenceCode: [''],\n      adTitle: [''],\n      applicationOwner: [''],\n      assignedAdSpecialist: [''],\n      assignedEncoder: [''],\n      assignedReviewer: [''],\n      assignedScreener: [''],\n      assignedUser: [''],\n    });\n  }\n\n  resetFormValidator(): void {\n    this.s1Application = new S1Application();\n    this.s2Application = new S2Application();\n    this.s1ApplicationForm.markAsUntouched();\n    this.s1ApplicationForm.markAsPristine();\n  }\n\n\n  getUserList(userRole = '') {\n    this.apiService.findAll(ENDPOINTS.userAccount).subscribe(\n      (res: any) => {\n        this.userList = res.responseData.data;\n        this.userList = this.userList.filter(\n          filteredUsers => filteredUsers?.userRole?.name !== USER_ROLES.ROLE_APPLICANT);\n        if (userRole) {\n          this.userList = this.userList.filter(\n            filteredUsers => filteredUsers?.userRole?.name === userRole);\n        }\n      }\n    );\n  }\n\n  compareAssignedUser(value: any, selected: any): boolean {\n    if (value && selected) {\n      return value.id === selected.id;\n    }\n  }\n\n  changeTab(evt) {\n    if (evt.tab) {\n      this.displayedContent = evt.tab.textLabel;\n    }\n\n    if (evt.index === 0) {\n      this.getS1ApplicationList();\n    } else if (evt.index === 1) {\n      this.getS1ApplicationList('S2');\n    }\n  }\n\n}\n","<form>\n    <!-- <div class=\"spinner\">\n        <ngx-spinner bdColor=\"rgba(0, 0, 0, 0.8)\" size=\"large\" color=\"#fff\" type=\"line-spin-fade\" [fullScreen]=\"false\">\n            <p> Loading list of Applications </p>\n        </ngx-spinner>\n    </div> -->\n    <div class=\"container-fluid\">\n        <div class=\"row\">\n            <div class=\"col-md-12 title\">\n                <mat-label>\n                    <mat-icon>view_list</mat-icon> Application Reassignment\n                </mat-label>\n            </div>\n        </div>\n        <hr>\n        <mat-tab-group mat-align-tabs=\"start\" (selectedTabChange)=\"changeTab($event)\">\n            <mat-tab label=\"S1\">\n                <ng-container *ngTemplateOutlet=\"s1ApplicationFormDisplay\"></ng-container>\n            </mat-tab>\n            <mat-tab label=\"S2\">\n                <ng-container *ngTemplateOutlet=\"s2ApplicationFormDisplay\"></ng-container>\n            </mat-tab>\n        </mat-tab-group>\n\n        <span *ngIf=\"displayedContent === 'S1' \">\n            <ng-container *ngTemplateOutlet=\"s1ApplicationList\"></ng-container>\n        </span>\n        <span *ngIf=\"displayedContent === 'S2' \">\n            <ng-container *ngTemplateOutlet=\"s2ApplicationList\"></ng-container>\n        </span>\n\n    </div>\n</form>\n\n\n<!-- ****************************** FORM ****************************** -->\n\n<ng-template #s1ApplicationFormDisplay>\n    <form [formGroup]=\"s1ApplicationForm\" *ngIf=\"s1Application?.id\">\n        <div class=\"row\">\n            <mat-form-field class=\"col-md-6\" appearance=\"outline\">\n                <mat-label>Reference Code</mat-label>\n                <input matInput [(ngModel)]=\"s1Application.referenceCode\" name=\"referenceCode\"\n                    formControlName=\"referenceCode\" readonly\n                    *ngIf=\"s1Application?.internalStatus!=='S1_APPLICATION_REJECTED'\">\n                <input matInput [(ngModel)]=\"s1Application.referenceCodeRejected\" name=\"referenceCode\"\n                    formControlName=\"referenceCode\" readonly\n                    *ngIf=\"s1Application?.internalStatus==='S1_APPLICATION_REJECTED'\">\n            </mat-form-field>\n\n            <mat-form-field class=\"col-md-6\" appearance=\"outline\">\n                <mat-label>Application Owner</mat-label>\n                <input matInput [(ngModel)]=\"applicationOwnerName \" name=\"applicationOwner\"\n                    formControlName=\"applicationOwner\" readonly>\n            </mat-form-field>\n\n            <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n                <mat-label>AD Title</mat-label>\n                <input matInput [(ngModel)]=\"s1Application.adTitle\" name=\"adTitle\" formControlName=\"adTitle\" readonly>\n            </mat-form-field>\n\n            <mat-form-field class=\"col-md-6\" appearance=\"outline\">\n                <mat-label>Assigned User</mat-label>\n                <mat-select [(ngModel)]=\"s1Application.assignedUser\" name=\"assignedUser\" formControlName=\"assignedUser\"\n                    [compareWith]=\"compareAssignedUser\">\n                    <mat-option *ngFor=\"let i of userList\" [value]=\"i\">\n                        {{ i?.firstName }} {{ i?.lastName }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <app-form-action-buttons [childObject]=\"s1Application\" [childForm]=\"s1ApplicationForm\"\n            (updateFunction)=\"update()\" (cancelFunction)=\"resetFormValidator()\"></app-form-action-buttons>\n    </form>\n</ng-template>\n\n<ng-template #s2ApplicationFormDisplay>\n    <form [formGroup]=\"s1ApplicationForm\" *ngIf=\"s2Application?.id\">\n        <div class=\"row\">\n            <mat-form-field class=\"col-md-6\" appearance=\"outline\">\n                <mat-label>Reference Code</mat-label>\n                <input matInput [(ngModel)]=\"s2Application.applicationForm.referenceCode\" name=\"referenceCode\"\n                    formControlName=\"referenceCode\" readonly\n                    *ngIf=\"s2Application?.internalStatus!=='S1_APPLICATION_REJECTED'\">\n                <input matInput [(ngModel)]=\"s1Application.referenceCodeRejected\" name=\"referenceCode\"\n                    formControlName=\"referenceCode\" readonly\n                    *ngIf=\"s2Application?.internalStatus==='S1_APPLICATION_REJECTED'\">\n            </mat-form-field>\n\n            <mat-form-field class=\"col-md-6\" appearance=\"outline\">\n                <mat-label>Application Owner</mat-label>\n                <input matInput [(ngModel)]=\"applicationOwnerName\" name=\"applicationOwner\"\n                    formControlName=\"applicationOwner\" readonly>\n            </mat-form-field>\n\n            <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n                <mat-label>AD Title</mat-label>\n                <input matInput [(ngModel)]=\"s2Application.applicationForm.adTitle\" name=\"adTitle\" formControlName=\"adTitle\" readonly>\n            </mat-form-field>\n\n            <mat-form-field class=\"col-md-6\" appearance=\"outline\">\n                <mat-label>Assigned User</mat-label>\n                <mat-select [(ngModel)]=\"s2Application.assignedUser\" name=\"assignedUser\" formControlName=\"assignedUser\"\n                    [compareWith]=\"compareAssignedUser\">\n                    <mat-option *ngFor=\"let i of userList\" [value]=\"i\">\n                        {{ i?.firstName }} {{ i?.lastName }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <app-form-action-buttons [childObject]=\"s2Application\" [childForm]=\"s1ApplicationForm\"\n            (updateFunction)=\"update()\" (cancelFunction)=\"resetFormValidator()\"></app-form-action-buttons>\n    </form>\n</ng-template>\n\n\n\n\n<!-- ****************************** LISTING ****************************** -->\n\n<ng-template #s1ApplicationList>\n    <br>\n    <app-form-list [dataSource]=\"s1ApplicationDataSource\" [displayedColumns]=\"s1ApplicationDisplayedColumns\"\n        (selectInListFunction)=\"getS1Application()\"></app-form-list>\n</ng-template>\n\n<ng-template #s2ApplicationList>\n    <br>\n    <app-form-list [dataSource]=\"s2ApplicationDataSource\" [displayedColumns]=\"s2ApplicationDisplayedColumns\"\n        (selectInListFunction)=\"getS2Application()\"></app-form-list>\n</ng-template>\n","import { CustomAngularEditorModule } from './editor/lib/angular-editor.module';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApplicationsRoutingModule } from './applications-routing.module';\nimport { AngularMaterialModule } from '@shared';\nimport { CommentComponent } from './comment/comment.component';\nimport { ClientInformationComponent, MaterialInformationComponent, PreviewApplicationComponent } from '@applications';\nimport { UploadPaymentComponent } from '../accounting/upload-payment/upload-payment.component';\nimport { AddPaymentModule } from '@accounting';\nimport { SingleApplicationComponent } from './schedule-of-fees/single-application/single-application.component';\nimport { MultipleApplicationsComponent } from './schedule-of-fees/multiple-applications/multiple-applications.component';\nimport { ReassignmentModule } from './reassignment/reassignment.module';\nimport { PerformanceMetricsComponent } from './performance-metrics/performance-metrics.component';\nimport { SpecialApplicationsComponent } from './schedule-of-fees/special-applications/special-applications.component';\nimport { AttachmentDocumentComponent } from './attachment-document/attachment-document.component';\nimport { PreviewAttachmentsComponent } from './preview-attachments/preview-attachments.component';\n\n\n@NgModule({\n  declarations: [\n    PreviewApplicationComponent,\n    ClientInformationComponent,\n    MaterialInformationComponent,\n    CommentComponent,\n    UploadPaymentComponent,\n    SingleApplicationComponent,\n    MultipleApplicationsComponent,\n    PerformanceMetricsComponent,\n    SpecialApplicationsComponent,\n    AttachmentDocumentComponent,\n    PreviewAttachmentsComponent,\n  ],\n  imports: [\n    CommonModule,\n    ApplicationsRoutingModule,\n    AngularMaterialModule,\n    AddPaymentModule,\n    ReassignmentModule,\n    CustomAngularEditorModule\n  ],\n  exports: [\n    PreviewApplicationComponent,\n    ClientInformationComponent,\n    MaterialInformationComponent,\n    CommentComponent,\n    UploadPaymentComponent,\n    PerformanceMetricsComponent,\n    AttachmentDocumentComponent,\n    PreviewAttachmentsComponent,\n  ]\n})\nexport class ApplicationsModule { }\n","import { DatePipe } from \"@angular/common\";\nimport { Component, Inject, OnInit, Optional, ViewChild } from \"@angular/core\";\nimport { MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { Router } from \"@angular/router\";\nimport { Company, S1Application } from \"@models\";\nimport { ApiService, DataStorageService, SweetAlertService } from \"@services\";\nimport {\n  APPFORM_TYPE,\n  ENDPOINTS,\n  ERROR_MESSAGES,\n  FORM_TYPE,\n  ROLES,\n  USER_ROLES,\n} from \"@shared\";\nimport { ApplicationSingleMedia } from \"app/core/models/application-single-media.model\";\nimport { MultipleApplication } from \"app/core/models/multiple-application.model\";\nimport { NgxSpinnerService } from \"ngx-spinner\";\nimport Swal from \"sweetalert2\";\n\n@Component({\n  selector: \"app-update-multiple-application\",\n  templateUrl: \"./update-multiple-application.component.html\",\n  styleUrls: [\"./update-multiple-application.component.scss\"],\n})\nexport class UpdateMultipleApplicationComponent implements OnInit {\n  @ViewChild(MatPaginator, { static: false }) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: false }) sort: MatSort;\n\n  company = new Company();\n  s1Application = new S1Application();\n  multipleS1Application = new MultipleApplication();\n  applicationSingleMedia = new ApplicationSingleMedia();\n  multipleS1ApplicationList = [];\n  dataSource: MatTableDataSource<S1Application>;\n  displayedColumns: string[] = [\n    \"referenceCode\",\n    \"typeOfMediumDisplay\",\n    \"mainAttachmentReference\",\n    \"supportingAttachmentReference\",\n    \"brand\",\n    \"status\",\n    \"decisionStatus\",\n  ];\n\n  currentUser: any;\n  currentUserRole: any;\n\n  isAscUser = false;\n  isDisableFieldOnUpdate = true;\n  isDisabledSubmitButton = true;\n  canForwardMultipleApp = false;\n  isAllApplicationsHasMainDoc = false;\n  warningNote =\n    \"Note: To submit multiple application, please make sure that every application has complete details and has necessary attachments.\";\n  typeOfMediumDisplay = \"\";\n\n  formType = APPFORM_TYPE.MULTIPLE;\n\n  ascUserRoleList = [\n    ...ROLES.filter((role: any) => role.ascUser === true).map(\n      (role: any) => role.role\n    ),\n  ];\n\n  constructor(\n    private apiService: ApiService,\n    private sweetAlertService: SweetAlertService,\n    private dataStorage: DataStorageService,\n    private router: Router,\n    private spinner: NgxSpinnerService,\n    private datepipe: DatePipe,\n    @Optional()\n    public dialogRef: MatDialogRef<UpdateMultipleApplicationComponent>,\n    @Optional() @Inject(MAT_DIALOG_DATA) public data: any\n  ) {\n    if (data) {\n      this.multipleS1Application = data;\n      this.s1Application.formType = this.formType;\n\n      // Client Info\n      this.s1Application.company = this.multipleS1Application.company;\n      this.company = this.multipleS1Application.company;\n      // this.s1Application.membersAffiliation = this.multipleS1Application.membersAffiliation;\n      this.s1Application.brand = this.multipleS1Application.brand;\n      this.s1Application.product = this.multipleS1Application.product;\n      // this.s1Application.category = this.multipleS1Application.category;\n    }\n  }\n\n  ngOnInit(): void {\n    this.currentUser = this.dataStorage.getUserAccount();\n    this.currentUserRole = this.currentUser.userRole.name;\n    this.isAscUser = this.ascUserRoleList.includes(\n      this.dataStorage.getUserRole()\n    );\n    this.getS1FormsByMultipleApplication();\n    if (this.currentUserRole !== USER_ROLES.ROLE_APPLICANT) {\n      this.displayedColumns = [\n        \"referenceCode\",\n        \"typeOfMediumDisplay\",\n        \"mainAttachmentReference\",\n        \"supportingAttachmentReference\",\n        \"brand\",\n        \"status\",\n        \"ASCstatus\",\n        \"decisionStatus\",\n      ];\n    }\n  }\n\n  getS1FormsByMultipleApplication() {\n    let endpoint = \"\";\n    if (\n      this.currentUserRole === USER_ROLES.ROLE_APPLICANT ||\n      this.currentUserRole === USER_ROLES.ROLE_ADMIN ||\n      this.currentUserRole === USER_ROLES.ROLE_SUPER_ADMIN\n    ) {\n      endpoint = ENDPOINTS.getMultipleAppForms + this.multipleS1Application.id;\n    } else {\n      endpoint =\n        ENDPOINTS.getMultipleAppFormsWithNoRejected +\n        this.multipleS1Application.id;\n    }\n    // this.apiService.findAll(ENDPOINTS.applicationFormPresentor + `multiple-application/${this.multipleS1Application.id}/applications`)\n    this.apiService.findAll(endpoint).subscribe(\n      (res: any) => {\n        this.multipleS1ApplicationList = res.responseData.data;\n\n        this.isAllApplicationsHasMainDoc = this.multipleS1ApplicationList.filter(\n          (filteredList) => !filteredList.mainAttachmentReference\n        ).length\n          ? false\n          : true;\n\n        this.multipleS1ApplicationList.forEach((value, index) => {\n          this.s1Application = value;\n          this.multipleS1ApplicationList[index] = value;\n          switch (\n            value?.refTypeOfMedium ||\n            value?.applicationFormS2?.applicationForm?.refTypeOfMedium\n          ) {\n            case \"SINGLE MEDIA\":\n              this.getApplicationSingleMedia();\n              break;\n            case \"MULTIMEDIA-MOVING\":\n              this.getMultimediaMoving();\n              break;\n            case \"MULTIMEDIA-STATIC\":\n              this.getMultimediaStatic();\n              break;\n            default:\n              break;\n          }\n        });\n\n        this.dataSource = new MatTableDataSource<S1Application>(\n          this.multipleS1ApplicationList\n        );\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n\n        // will be disabled if there's an application without main doc uploaded\n        this.isDisabledSubmitButton = this.multipleS1ApplicationList.filter(\n          (filteredList) => !filteredList.mainAttachmentReference\n        ).length\n          ? true\n          : false;\n\n        this.isDisabledSubmitButton = this.multipleS1ApplicationList.filter(\n          (filteredList) =>\n            !filteredList.supportingAttachmentReference &&\n            !filteredList.hasNoSupportingDocs\n        ).length\n          ? true\n          : false;\n\n        // if earlier or later than the approved date\n\n        const today = this.datepipe.transform(new Date(), \"yyyy-MM-dd\");\n        const approvedDate = this.datepipe.transform(\n          this.multipleS1Application.dateOfSubmission,\n          \"yyyy-MM-dd\"\n        );\n\n        if (\n          this.multipleS1Application.submissionStatus !== \"PROCESSED\" &&\n          approvedDate !== today &&\n          this.multipleS1Application.status !== \"DISAPPROVED\"\n        ) {\n          this.isDisabledSubmitButton = true;\n          this.warningNote =\n            \"Note: Applicant can only submit multiple application on approved date.\";\n        }\n\n        this.checkForwardStatus();\n      },\n      (err: any) => {\n        err.error.message = ERROR_MESSAGES.under_maintenance;\n        this.sweetAlertService.error(err);\n      }\n    );\n  }\n\n  checkForwardStatus() {\n    if (\n      this.multipleS1Application.countVerifiedApplicationForm ===\n      this.multipleS1Application.actualNumberOfApplicationForm\n    ) {\n      this.canForwardMultipleApp = true;\n    }\n  }\n\n  viewApplication(data) {\n    this.dialogRef.close();\n    this.router.navigate([`asc/page/application/s1/update/${data.id}`]);\n  }\n\n  onApproveOrDisapprove(status = \"APPROVED\"): void {\n    const displayStatus = status === \"APPROVED\" ? \"approve\" : \"disapprove\";\n    Swal.fire({\n      text: `Are you sure you want to ${displayStatus} this application?`,\n      icon: \"question\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Confirm\",\n    }).then((result) => {\n      if (result.value) {\n        const endpointExtension =\n          status === \"APPROVED\" ? \"/approve\" : \"/disapprove\";\n        this.multipleS1Application.actionDate = new Date();\n        this.multipleS1Application.actionBy = this.currentUser.username;\n        this.apiService\n          .update(\n            `${ENDPOINTS.multipleApplication}${endpointExtension}`,\n            this.multipleS1Application\n          )\n          .subscribe(\n            (res: any) => {\n              this.sweetAlertService.customSuccessMessage(\n                \"Multiple application submission request has been \" +\n                  displayStatus +\n                  \"d.\"\n              );\n            },\n            (err: any) => {\n              err.error.message = ERROR_MESSAGES.under_maintenance;\n              this.sweetAlertService.error(err);\n            },\n            () => {\n              this.dialogRef.close(this.multipleS1Application);\n            }\n          );\n      }\n    });\n  }\n\n  updateMultipleApplications(multipleId): void {\n    // TO DO\n    // will only redirect to add new S1 application\n    // saving or updating is in add-s1-application.component.ts\n    const ctr =\n      this.multipleS1ApplicationList.length === 0\n        ? 1\n        : this.multipleS1ApplicationList.length + 1;\n\n    this.dialogRef.close();\n    this.router.navigate([\n      `asc/page/application/s1/add/multiple/${multipleId}/${ctr}`,\n    ]);\n  }\n\n  compareProduct(value: any, selected: any): boolean {\n    if (value && selected) {\n      return value.description === selected.description;\n    }\n  }\n\n  // compareCategory(value: any, selected: any): boolean {\n  //   if (value && selected) {\n  //     return value.description === selected.description;\n  //   }\n  // }\n\n  submitMultiple() {\n    Swal.fire({\n      text: `Are you sure you want to submit this multiple application?`,\n      icon: \"question\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Confirm\",\n    }).then((result) => {\n      if (result.value) {\n        if (\n          this.multipleS1Application.numberOfApplication >\n          this.multipleS1ApplicationList.length\n        ) {\n          Swal.fire({\n            text: `Are you sure you want to submit ${this.multipleS1ApplicationList.length} out ${this.multipleS1Application.numberOfApplication} applications only?`,\n            icon: \"question\",\n            showCancelButton: true,\n            confirmButtonColor: \"#3085d6\",\n            cancelButtonColor: \"#d33\",\n            confirmButtonText: \"Confirm\",\n          }).then((result2) => {\n            if (result2.value) {\n              const endpoint = `${ENDPOINTS.applicationFormPresentor}group-id/${this.multipleS1Application.id}/application-type-id/\n                ${this.multipleS1Application.applicationType.id}/batch-multiple-app-form/submit`;\n              this.apiService.save(endpoint, null).subscribe(\n                (res: any) => {\n                  this.sweetAlertService.customSuccessMessage(\n                    \"Multiple application successfully submitted.\"\n                  );\n                  this.getS1FormsByMultipleApplication();\n                },\n                (err: any) => {\n                  err.error.message = ERROR_MESSAGES.under_maintenance;\n                  this.sweetAlertService.error(err);\n                },\n                () => {\n                  this.dialogRef.close(this.multipleS1Application);\n                }\n              );\n            }\n          });\n        } else {\n          const endpoint = `${ENDPOINTS.applicationFormPresentor}group-id/${this.multipleS1Application.id}/application-type-id/\n        ${this.multipleS1Application.applicationType.id}/batch-multiple-app-form/submit`;\n          this.apiService.save(endpoint, null).subscribe(\n            (res: any) => {\n              this.sweetAlertService.customSuccessMessage(\n                \"Multiple application successfully submitted.\"\n              );\n              this.getS1FormsByMultipleApplication();\n            },\n            (err: any) => {\n              err.error.message = ERROR_MESSAGES.under_maintenance;\n              this.sweetAlertService.error(err);\n            },\n            () => {\n              this.dialogRef.close(this.multipleS1Application);\n            }\n          );\n        }\n      }\n    });\n  }\n\n  forwardMultipleAppsTo(user) {\n    Swal.fire({\n      text: `Are you sure you want to forward this multiple application?`,\n      icon: \"question\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Confirm\",\n    }).then((result) => {\n      if (result.value) {\n        this.spinner.show();\n        let endpoint = \"\";\n\n        if (user === \"encoder\") {\n          this.multipleS1Application.assignedEncoder = this.multipleS1ApplicationList[0].assignedEncoder;\n          // endpoint = ENDPOINTS.forwardMultipleAppFormToAdSpe;\n          endpoint = `${ENDPOINTS.s1ApplicationForm}encoder/group-id/${this.multipleS1Application.id}/forward-multiple-app-form`;\n        } else if (user === \"ad-specialist\") {\n          this.multipleS1Application.assignedAdSpecialist = this.multipleS1ApplicationList[0].assignedAdSpecialist;\n          this.multipleS1Application.assignedScreener = this.multipleS1ApplicationList[0].assignedScreener;\n          endpoint = ENDPOINTS.forwardMultipleAppFormToScreener;\n        } else if (user === \"screener\") {\n          this.multipleS1Application.assignedReviewer = this.multipleS1ApplicationList[0].assignedReviewer;\n          endpoint = ENDPOINTS.forwardMultipleAppFormToReviewer;\n        }\n\n        this.apiService.save(endpoint, this.multipleS1Application).subscribe(\n          (res: any) => {\n            console.log(res);\n            this.spinner.hide();\n            this.sweetAlertService.customSuccessMessage(\n              \"Multiple application successfully forwarded to the next user.\"\n            );\n          },\n          (err: any) => {\n            this.spinner.hide();\n            err.error.message = ERROR_MESSAGES.under_maintenance;\n            this.sweetAlertService.error(err);\n          },\n          () => {\n            this.spinner.hide();\n            this.dialogRef.close(this.multipleS1Application);\n          }\n        );\n      }\n    });\n  }\n\n  getApplicationSingleMedia(\n    appFormReference = this.s1Application?.appFormReference\n  ) {\n    this.apiService\n      .findByParam(\n        ENDPOINTS.applicationSingleMedia,\n        `app-form-reference/${appFormReference}`\n      )\n      .subscribe(\n        (res: any) => {\n          if (res.responseData.data.length > 0) {\n            this.applicationSingleMedia = res.responseData.data[0];\n\n            this.typeOfMediumDisplay = `${this.applicationSingleMedia?.mediumExecution?.typeOfMedium?.description} (${this.applicationSingleMedia?.sizeLength})`;\n\n            this.multipleS1ApplicationList.forEach((element, index) => {\n              if (element.appFormReference === appFormReference) {\n                this.multipleS1ApplicationList[index] = {\n                  ...this.multipleS1ApplicationList[index],\n                  typeOfMediumDisplay:\n                    this.typeOfMediumDisplay === \"undefined (0)\"\n                      ? \"\"\n                      : this.typeOfMediumDisplay,\n                };\n              }\n            });\n\n            this.isDisabledSubmitButton = this.multipleS1ApplicationList.filter(\n              (filteredS1App) => filteredS1App.typeOfMediumDisplay === \"\"\n            ).length\n              ? true\n              : false;\n\n            this.dataSource = new MatTableDataSource<any>(\n              this.multipleS1ApplicationList\n            );\n            this.dataSource.paginator = this.paginator;\n          } else {\n            this.applicationSingleMedia = new ApplicationSingleMedia();\n            this.typeOfMediumDisplay = \"\";\n          }\n        },\n        (err: any) => {\n          this.applicationSingleMedia = new ApplicationSingleMedia();\n          this.typeOfMediumDisplay = \"\";\n        }\n      );\n  }\n\n  getMultimediaStatic(appFormReference = this.s1Application?.appFormReference) {\n    this.apiService\n      .findByParam(\n        ENDPOINTS.applicationMultimedia,\n        `app-form-reference/${appFormReference}`\n      )\n      .subscribe(\n        (res: any) => {\n          if (res.responseData.data.length > 0) {\n            const multimediaList = new Set(\n              res.responseData.data.map(\n                (mappedList) =>\n                  `${mappedList?.typeOfMedium?.description} (${mappedList?.multimediaSizeLength})`\n              )\n            );\n\n            this.typeOfMediumDisplay = \"\";\n            let mediaCtrl = 1;\n            for (const media of multimediaList) {\n              if (mediaCtrl !== multimediaList.size) {\n                this.typeOfMediumDisplay += `${media}, `;\n                mediaCtrl++;\n              } else {\n                this.typeOfMediumDisplay += media;\n              }\n            }\n\n            this.multipleS1ApplicationList.forEach((element, index) => {\n              if (element.appFormReference === appFormReference) {\n                this.multipleS1ApplicationList[index] = {\n                  ...this.multipleS1ApplicationList[index],\n                  typeOfMediumDisplay: this.typeOfMediumDisplay,\n                };\n              }\n            });\n            this.dataSource = new MatTableDataSource<any>(\n              this.multipleS1ApplicationList\n            );\n            this.dataSource.paginator = this.paginator;\n\n            this.isDisabledSubmitButton = this.multipleS1ApplicationList.filter(\n              (filteredList) => !filteredList.typeOfMediumDisplay\n            ).length\n              ? true\n              : false;\n          } else {\n            this.typeOfMediumDisplay = \"\";\n          }\n        },\n        (err: any) => {\n          this.typeOfMediumDisplay = \"\";\n        }\n      );\n  }\n\n  getMultimediaMoving(appFormReference = this.s1Application?.appFormReference) {\n    this.apiService\n      .findByParam(\n        ENDPOINTS.applicationMultimedia,\n        `app-form-reference/${appFormReference}`\n      )\n      .subscribe(\n        (res: any) => {\n          if (res.responseData.data.length > 0) {\n            const multimediaList = new Set(\n              res.responseData.data.map(\n                (mappedList) =>\n                  `${mappedList?.typeOfMedium?.description} (${mappedList?.multimediaSizeLength})`\n              )\n            );\n\n            this.typeOfMediumDisplay = \"\";\n            let mediaCtrl = 1;\n            for (const media of multimediaList) {\n              if (mediaCtrl !== multimediaList.size) {\n                this.typeOfMediumDisplay += `${media}, `;\n                mediaCtrl++;\n              } else {\n                this.typeOfMediumDisplay += media;\n              }\n            }\n\n            this.multipleS1ApplicationList.forEach((element, index) => {\n              if (element.appFormReference === appFormReference) {\n                this.multipleS1ApplicationList[index] = {\n                  ...this.multipleS1ApplicationList[index],\n                  typeOfMediumDisplay: this.typeOfMediumDisplay,\n                };\n              }\n            });\n            this.dataSource = new MatTableDataSource<any>(\n              this.multipleS1ApplicationList\n            );\n            this.dataSource.paginator = this.paginator;\n\n            this.isDisabledSubmitButton = this.multipleS1ApplicationList.filter(\n              (filteredList) => !filteredList.typeOfMediumDisplay\n            ).length\n              ? true\n              : false;\n          } else {\n            this.typeOfMediumDisplay = \"\";\n          }\n        },\n        (err: any) => {\n          this.typeOfMediumDisplay = \"\";\n        }\n      );\n  }\n}\n","<form>\n  <div class=\"container-fluid\">\n    <div class=\"row title\">\n      <div class=\"col-md-12\">\n\n        <table class=\"application-details\">\n          <tr>\n            <td *ngIf=\"multipleS1Application?.status\">\n              <span>\n                Status:\n              </span>\n            </td>\n            <td *ngIf=\"multipleS1Application?.status\">\n              <span>\n                <b>{{multipleS1Application?.status?.replaceAll('_',' ') | uppercase}}</b>\n              </span>\n            </td>\n            <!-- <td class=\"no-border\">\n                        <button class=\"button-right button-red\" mat-raised-button\n                        (click)=\"dialogRef.close()\">\n                          <i class=\"material-icons color__white\">list</i> VIEW APPLICATIONS\n                        </button>\n                      </td> -->\n          <tr>\n            <td class=\"no-border\">\n            </td>\n          </tr>\n          <tr>\n            <td *ngIf=\"multipleS1Application?.numberOfApplication\">\n              <span>\n                Number of Applications:\n              </span>\n            </td>\n            <td>\n              <span>\n                <b *ngIf=\"(multipleS1Application?.status === 'FOR_APPROVAL' || multipleS1Application?.submissionStatus==='PROCESSED' || multipleS1Application?.status === 'DISAPPROVED') &&\n                (currentUser.userRole.name==='ROLE_ADMIN' || currentUser.userRole.name === 'ROLE_SUPER_ADMIN' || currentUser.userRole.name === 'ROLE_APPLICANT')\">\n                  {{multipleS1Application?.submissionStatus==='PROCESSED' && multipleS1Application?.status !== 'DISAPPROVED' && multipleS1Application?.status !== 'FOR_APPROVAL'\n                  ? multipleS1Application.actualNumberOfApplicationForm\n                  : multipleS1Application?.numberOfApplication}}</b>\n\n                  <b *ngIf=\"multipleS1Application?.submissionStatus==='PROCESSED'\">\n                    {{currentUser.userRole.name !== 'ROLE_APPLICANT' && currentUser.userRole.name!=='ROLE_ADMIN' && currentUser.userRole.name !== 'ROLE_SUPER_ADMIN' ? multipleS1Application?.countVerifiedApplicationForm : ''}}\n                     of {{multipleS1Application?.actualNumberOfApplicationForm}}</b>\n\n                <b *ngIf=\"multipleS1Application?.status === 'APPROVED' && (currentUser.userRole.name==='ROLE_ADMIN' || currentUser.userRole.name === 'ROLE_SUPER_ADMIN' || currentUser.userRole.name === 'ROLE_APPLICANT') && multipleS1Application?.submissionStatus!=='PROCESSED'\">\n                  {{multipleS1ApplicationList.length}} of {{multipleS1Application?.numberOfApplication}}</b>\n              </span>\n            </td>\n            <td class=\"no-border\"\n              *ngIf=\"multipleS1Application?.status==='APPROVED'&&currentUser.userRole.name==='ROLE_APPLICANT'\"\n              [hidden]=\"multipleS1Application?.submissionStatus==='PROCESSED'\">\n              <button class=\"button-right button-red\" mat-raised-button\n              [disabled]=\"multipleS1Application?.actualNumberOfApplicationForm === multipleS1Application?.numberOfApplication\"\n                (click)=\"updateMultipleApplications(multipleS1Application?.id)\">\n                <i class=\"material-icons color__white\">add</i> ADD APPLICATION\n              </button>\n            </td>\n          </tr>\n        </table>\n\n        <hr>\n      </div>\n    </div>\n\n    <div class=\"row\"><br></div>\n    <div class=\"row\">\n      <mat-form-field class=\"col-md-6\" appearance=\"outline\">\n        <mat-label>Form Type</mat-label>\n        <input matInput [value]=\"formType\" readonly>\n      </mat-form-field>\n\n      <mat-form-field class=\"col-md-6\" appearance=\"outline\">\n        <mat-label>Application Type</mat-label>\n        <input matInput [value]=\"multipleS1Application?.applicationType?.description\" readonly>\n      </mat-form-field>\n    </div>\n\n    <div class=\"row\">\n      <mat-accordion class=\"headers-align\" multi>\n        <mat-expansion-panel [expanded]=\"\n                  ((currentUser?.userRole?.name=='ROLE_APPLICANT'&&s1Application?.internalStatus!='SAVED')\n                  ||(s1Application?.internalStatus==undefined))\n                  &&((multipleS1Application?.status !== 'APPROVED')\n                  ||(multipleS1Application?.status === 'APPROVED' && multipleS1ApplicationList.length==0))\" *ngIf=\"\n                  (currentUser?.userRole?.name=='ROLE_APPLICANT'&&s1Application?.internalStatus=='SAVED')\n                  ||(currentUser?.userRole?.name!='ROLE_APPLICANT')\n                  ||(s1Application?.internalStatus==undefined)\">\n\n          <mat-expansion-panel-header>\n            <mat-panel-title>\n              <i class=\"material-icons\">label_important</i> &nbsp;Initial Information\n            </mat-panel-title>\n          </mat-expansion-panel-header>\n          <br>\n\n          <app-client-information [multipleApplication]=\"multipleS1Application\" [s1Application]=\"s1Application\" [isAscUser]=\"isAscUser\"\n            [isDisableFieldOnUpdate]=\"isDisableFieldOnUpdate\" [company]=\"company\"></app-client-information>\n\n          <div class=\"row\">\n            <mat-form-field class=\"col-md-6\" appearance=\"outline\">\n              <mat-label>Ad Title</mat-label>\n              <input matInput [value]=\"multipleS1Application?.adTitle\" readonly>\n            </mat-form-field>\n\n            <mat-form-field class=\"col-md-6\" appearance=\"outline\">\n              <mat-label>Tag Line</mat-label>\n              <input matInput [value]=\"multipleS1Application?.tagLine\" readonly>\n            </mat-form-field>\n          </div>\n\n          <div class=\"row\">\n            <mat-form-field appearance=\"outline\" class=\"col-md-6\">\n              <mat-label>Date of Submission</mat-label>\n                <input matInput placeholder=\"Date\" readonly\n                  [value]=\"multipleS1Application?.dateOfSubmission | date: 'MMMM d, y'\"\n                  name=\"dateOfSubmission\" *ngIf=\"multipleS1Application?.status !== 'DISAPPROVED'\"/>\n                <input matInput placeholder=\"Date\" readonly\n                  value=\"N/A - Request was disapproved\"\n                  name=\"dateOfSubmission\" *ngIf=\"multipleS1Application?.status === 'DISAPPROVED'\"/>\n            </mat-form-field>\n          </div>\n        </mat-expansion-panel>\n\n        <!-- FOR Admin Users only -->\n        <mat-expansion-panel *ngIf=\"currentUser?.userRole?.name === 'ROLE_ADMIN' || currentUser?.userRole?.name === 'ROLE_SUPER_ADMIN' \">\n          <mat-expansion-panel-header>\n            <mat-panel-title>\n              <i class=\"material-icons\">label_important</i> &nbsp;Presentor Information\n            </mat-panel-title>\n            <mat-panel-description>\n              Personal Details\n              <i class=\"material-icons\">person</i>\n            </mat-panel-description>\n          </mat-expansion-panel-header>\n\n          <br>\n          <div class=\"row\">\n            <div class=\"row\">\n              <mat-form-field class=\"col-md-7\" appearance=\"outline\">\n                <mat-label>Company Name</mat-label>\n                <input matInput [value]=\"multipleS1Application?.company?.companyName\" readonly>\n              </mat-form-field>\n            </div>\n\n            <div class=\"row\"><br></div>\n\n            <div class=\"row\">\n              <mat-form-field class=\"col-md-11\" appearance=\"outline\">\n                <mat-label>Address</mat-label>\n                <input matInput [value]=\"multipleS1Application?.company?.completeAddress\" readonly>\n              </mat-form-field>\n            </div>\n\n            <div class=\"row\"><br></div>\n\n            <div class=\"row\">\n              <mat-form-field class=\"col-md-8\" appearance=\"outline\" *ngIf=\"multipleS1Application.id!= null\">\n                <mat-label>Name of Applicant</mat-label>\n                <input matInput [value]=\"multipleS1Application?.applicationOwner?.firstName+' '+multipleS1Application?.applicationOwner?.lastName\" readonly>\n              </mat-form-field>\n            </div>\n\n            <div class=\"row\"><br></div>\n\n            <div class=\"row\">\n              <mat-form-field class=\"col-md-4\" appearance=\"outline\" *ngIf=\"multipleS1Application.id!= null\">\n                <mat-label>Mobile Number</mat-label>\n                <input matInput [value]=\"multipleS1Application?.applicationOwner?.mobileNumber\" readonly>\n              </mat-form-field>\n              <mat-form-field class=\"col-md-3\" appearance=\"outline\" *ngIf=\"multipleS1Application.id!= null\">\n                <mat-label>Telephone Number</mat-label>\n                <input matInput [value]=\"multipleS1Application?.company?.companyTelephoneNo\" readonly>\n              </mat-form-field>\n              <mat-form-field class=\"col-md-4\" appearance=\"outline\" *ngIf=\"multipleS1Application.id!= null\">\n                <mat-label>Email Address</mat-label>\n                <input matInput [value]=\"multipleS1Application?.applicationOwner?.username\" readonly>\n              </mat-form-field>\n            </div>\n\n          </div>\n        </mat-expansion-panel>\n\n      </mat-accordion>\n      <!-- </form> -->\n\n      <div class=\"row\"><br></div>\n      <!-- ADD TABLE HERE -->\n      <div class=\"mat-elevation-z8 fields\" *ngIf=\"multipleS1Application?.status==='APPROVED'\">\n        <table mat-table [dataSource]=\"dataSource||multipleS1ApplicationList\" matSort>\n\n          <ng-container matColumnDef=\"referenceCode\">\n            <th mat-header-cell class=\"center-table-text\" *matHeaderCellDef mat-sort-header> REFERENCE CODE </th>\n            <td mat-cell *matCellDef=\"let element\" (click)=\"viewApplication(element)\">\n              {{ element?.referenceCode ? element?.referenceCode : '-' | uppercase}} </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"typeOfMediumDisplay\">\n            <th mat-header-cell class=\"center-table-text\" *matHeaderCellDef> MEDIUM (Length) </th>\n            <td mat-cell *matCellDef=\"let element\" (click)=\"viewApplication(element)\"> {{ element?.typeOfMediumDisplay }} </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"mainAttachmentReference\">\n            <th mat-header-cell class=\"center-table-text\" *matHeaderCellDef> HAS MAIN DOC </th>\n            <td mat-cell *matCellDef=\"let element\" (click)=\"viewApplication(element)\">\n              <i *ngIf=\"element?.mainAttachmentReference\" class=\"material-icons\">check_circle</i>\n              <i *ngIf=\"!element?.mainAttachmentReference\" class=\"material-icons cancel\">cancel</i>\n            </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"supportingAttachmentReference\">\n            <th mat-header-cell class=\"center-table-text\" *matHeaderCellDef> HAS SUPPORT DOC </th>\n            <td mat-cell *matCellDef=\"let element\" (click)=\"viewApplication(element)\">\n              <i *ngIf=\"element?.supportingAttachmentReference\" class=\"material-icons\">check_circle</i>\n              <i *ngIf=\"!element?.supportingAttachmentReference && !element?.hasNoSupportingDocs\" class=\"material-icons cancel\">cancel</i>\n              <i *ngIf=\"element?.hasNoSupportingDocs\" class=\"material-icons\">cancel</i>\n            </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"brand\">\n            <th mat-header-cell class=\"center-table-text\" *matHeaderCellDef> BRAND </th>\n            <td mat-cell *matCellDef=\"let element\" (click)=\"viewApplication(element)\">\n              {{ element?.brand?.description | uppercase }}\n            </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"status\">\n            <th mat-header-cell class=\"center-table-text\" *matHeaderCellDef> APPLICATION STATUS </th>\n            <td mat-cell *matCellDef=\"let element\" (click)=\"viewApplication(element)\"\n            [ngStyle]=\"{'background-color': element?.internalStatus === 'S1_APPLICATION_REJECTED' ? 'lightpink' : '' }\">\n              {{ element?.externalStatus?.replaceAll('_',' ') | uppercase }}\n          </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"ASCstatus\">\n            <th mat-header-cell class=\"center-table-text\" *matHeaderCellDef> INTERNAL STATUS </th>\n            <td mat-cell *matCellDef=\"let element\" (click)=\"viewApplication(element)\"\n            [ngStyle]=\"{'background-color': element?.internalStatus === 'S1_APPLICATION_REJECTED' ? 'lightpink' : '' }\"> {{\n              element?.internalStatus?.replaceAll('_',' ') | uppercase }}</td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"decisionStatus\">\n            <th mat-header-cell class=\"center-table-text\" *matHeaderCellDef> DECISION STATUS </th>\n            <td mat-cell *matCellDef=\"let element\" (click)=\"viewApplication(element)\"\n            [ngStyle]=\"{'background-color': element?.internalStatus === 'S1_APPLICATION_REJECTED' ? 'lightpink' : '' }\">\n              {{ element?.decisionStatus ? element?.decisionStatus : '-' | uppercase }}\n          </td>\n          </ng-container>\n\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n          <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n        </table>\n        <div class=\"no-record\" [hidden]=\"dataSource && dataSource?.data?.length > 0\"\n          *ngIf=\"multipleS1ApplicationList.length==0\">\n          No results found.\n        </div>\n        <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons></mat-paginator>\n        <div class=\"row\"><br></div>\n      </div>\n      <hr>\n\n      <div class=\"row\"><br>\n      <b *ngIf=\"isDisabledSubmitButton && currentUser.userRole.name==='ROLE_APPLICANT'\"><b class=\"material-icons\">error_outline</b> {{warningNote}}</b>\n      </div>\n\n      <div class=\"row\"><br></div>\n      <div class=\"no-border\" [hidden]=\"multipleS1Application?.submissionStatus==='PROCESSED'\"\n      *ngIf=\"multipleS1ApplicationList.length>0 && currentUser.userRole.name==='ROLE_APPLICANT' &&\n            multipleS1Application?.status !== 'FOR_APPROVAL' && isAllApplicationsHasMainDoc\">\n        <button class=\"button-right button-red\" mat-raised-button [disabled]=\"isDisabledSubmitButton\"\n          (click)=\"submitMultiple()\">\n          <i class=\"material-icons color__white\">send</i> SUBMIT\n          <br>\n        </button>\n      </div>\n      <br>\n      <!-- //////////////////////////////////////// ACTION BUTTONS //////////////////////////////////////////////////////////// -->\n      <div class=\"row\" *ngIf=\"multipleS1Application?.status === 'FOR_APPROVAL' && isAscUser && !multipleS1Application?.assignedReviewer\">\n        <div mat-dialog-actions>\n          <div class=\"dialog-button-content\" align=\"end\">\n            <button class=\"confirm\" (click)=\"onApproveOrDisapprove()\"><i\n                class=\"material-icons\">thumb_up_alt</i>Approve</button>\n            <button class=\"warn\" (click)=\"onApproveOrDisapprove('DISAPPROVED')\"><i\n                class=\"material-icons\">thumb_down_alt</i>Disapprove</button>\n          </div>\n        </div>\n      </div>\n    <!-- //////////////////////////////////////// ASC USERS //////////////////////////////////////////////////////////// -->\n      <!-- <div class=\"no-border\"\n        *ngIf=\"currentUser.userRole.name==='ROLE_ENCODER'&&canForwardMultipleApp && !multipleS1Application?.assignedReviewer\">\n        <button class=\"button-right button-red\" mat-raised-button (click)=\"forwardMultipleAppsTo('encoder')\">\n          <i class=\"material-icons color__white\">verified</i> FORWARD TO AD SPECIALIST\n        </button>\n      </div>\n\n      <div class=\"no-border\"\n        *ngIf=\"currentUser.userRole.name==='ROLE_AD_SPECIALIST'&&canForwardMultipleApp && !multipleS1Application?.assignedReviewer\">\n        <button class=\"button-right button-red\" mat-raised-button (click)=\"forwardMultipleAppsTo('ad-specialist')\">\n          <i class=\"material-icons color__white\">verified</i> FORWARD TO SCREENER\n        </button>\n      </div>\n\n      <div class=\"no-border\"\n        *ngIf=\"currentUser.userRole.name==='ROLE_SCREENER'&&canForwardMultipleApp && !multipleS1Application?.assignedReviewer\">\n        <button class=\"button-right button-red\" mat-raised-button (click)=\"forwardMultipleAppsTo('screener')\">\n          <i class=\"material-icons color__white\">fact_check</i> SCREENED\n        </button>\n      </div> -->\n\n      <!-- <div class=\"no-border\"\n        *ngIf=\"currentUser.userRole.name==='ROLE_REVIEWER'&&canForwardMultipleApp\">\n        <button class=\"button-right button-red\" mat-raised-button (click)=\"forwardMultipleAppsTo('reviewer')\">\n          <i class=\"material-icons color__white\">assignment_turned_in</i> REVIEWED\n        </button>\n      </div> -->\n\n      <br>\n    </div>\n  </div>\n</form>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { URL_PATHS } from '@shared';\n\nconst routes: Routes = [\n  {\n    path: '',\n    children: [\n      {\n        path: URL_PATHS.LIST_COMPANY,\n        loadChildren: () => import('./list-company/list-company.module')\n          .then(m => m.ListCompanyModule)\n      },\n      {\n        path: URL_PATHS.ADD_COMPANY,\n        loadChildren: () => import('./add-company/add-company.module')\n          .then(m => m.AddCompanyModule)\n      },\n      {\n        path: URL_PATHS.UPDATE_COMPANY + '/:id',\n        loadChildren: () => import('./add-company/add-company.module')\n          .then(m => m.AddCompanyModule)\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class CompanyRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AddCompanyComponent } from './add-company.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AddCompanyComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AddCompanyRoutingModule { }\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTable, MatTableDataSource } from '@angular/material/table';\nimport { ApiService, DataStorageService, SweetAlertService } from '@services';\nimport { ENDPOINTS } from '@shared';\nimport { ModalSingleApplicationComponent } from './modal-single-application/modal-single-application.component';\n\n@Component({\n  selector: 'app-single-application',\n  templateUrl: './single-application.component.html',\n  styleUrls: ['./single-application.component.scss']\n})\nexport class SingleApplicationComponent implements OnInit {\n\n  @ViewChild(MatPaginator, { static: false }) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: false }) sort: MatSort;\n  @ViewChild(MatTable, { static: false }) table: MatTable<Object>;\n\n  dataSource: MatTableDataSource<any>\n  displayedColumns: string[] = ['referenceCode', 'typeOfApplication', 'brand', 'medium', 'applicantCompanyName', 'paymentStatus'];\n  paymentList = [];\n\n  currentUser: any;\n  constructor(\n    private apiService: ApiService,\n    private dialog: MatDialog,\n    private dataStorage: DataStorageService,\n  ) { }\n\n  ngOnInit(): void {\n    this.currentUser = this.dataStorage.getUserAccount();\n    this.getS1PaymentList();\n  }\n\n  getS1PaymentList() {\n    this.apiService.findByParam(ENDPOINTS.applicationFormPresentor + this.currentUser.id,\n      'payment-status/FOR_PAYMENT/schedule-of-fees').subscribe((res: any) => {\n        this.paymentList = res.responseData.data;\n        this.dataSource = new MatTableDataSource<any>(this.paymentList);\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n      });\n  }\n\n  openModal(res) {\n\n    const dialogRef = this.dialog.open(ModalSingleApplicationComponent, {\n      width: '80%',\n      height: 'fit-content',\n      maxHeight: '85vh',\n      data: res\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      this.ngOnInit();\n    });\n\n  }\n}\n","<form>\n    <div class=\"container-fluid\">\n      <div class=\"row\">\n        <div class=\"col-md-12 title\">\n          <mat-label>\n            <mat-icon>view_list</mat-icon> Individual Applications - For Payment\n          </mat-label>\n        </div>\n      </div>\n      <hr>\n      <br>\n      <div class=\"col-md-12\" fxLayout fxLayoutAlign=\"center center\">\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n          <input matInput type=\"text\" placeholder=\"Company Name\">\n        </mat-form-field>\n      </div>\n\n      <div class=\"mat-elevation-z8 fields\">\n        <table mat-table [dataSource]=\"dataSource\" matSort>\n          <ng-container matColumnDef=\"referenceCode\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> REFERENCE CODE </th>\n            <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"openModal(element)\"> {{element?.referenceCode | uppercase}}</td>\n          </ng-container>\n          <ng-container matColumnDef=\"typeOfApplication\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> TYPE OF APPLICATION</th>\n            <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"openModal(element)\">{{element?.applicationType.description | uppercase}} - {{element?.formType?.replaceAll('_',' ') | uppercase}}</td>\n          </ng-container>\n          <ng-container matColumnDef=\"brand\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> BRAND</th>\n            <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"openModal(element)\">{{element?.brand.description | uppercase}}</td>\n          </ng-container>\n          <ng-container matColumnDef=\"medium\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> MEDIUM</th>\n            <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"openModal(element)\">{{element?.typeOfMedium | uppercase}}</td>\n          </ng-container>\n          <ng-container matColumnDef=\"applicantCompanyName\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> APPLICANT COMPANY NAME</th>\n            <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"openModal(element)\">{{element?.company.companyName | uppercase}}</td>\n          </ng-container>\n          <ng-container matColumnDef=\"paymentStatus\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> PAYMENT STATUS</th>\n            <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"openModal(element)\">{{element?.paymentStatus?.replaceAll('_',' ') | uppercase}}</td>\n          </ng-container>\n\n\n\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n          <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n        </table>\n        <div class=\"no-record\" [hidden]=\"dataSource && dataSource?.data?.length > 0\">\n          No record found.\n        </div>\n        <mat-paginator [pageSizeOptions]=\"[10, 20, 50]\" showFirstLastButtons></mat-paginator>\n      </div>\n      <br>\n    </div>\n  </form>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTable, MatTableDataSource } from '@angular/material/table';\nimport { ApiService, DataStorageService } from '@services';\nimport { ENDPOINTS } from '@shared';\nimport { ModalMultipleApplicationsComponent } from './modal-multiple-applications/modal-multiple-applications.component';\n\n\nexport interface companyDetails {\n  referenceCode: string;\n  amount: number;\n}\n\nconst ELEMENT_DATA: companyDetails[] = [\n  { referenceCode: 'Company one ', amount: 3000, },\n  { referenceCode: 'Company two ', amount: 4000, },\n  { referenceCode: 'Company three ', amount: 5000, },\n  { referenceCode: 'Company two ', amount: 6000, },\n  { referenceCode: 'Company three ', amount: 7000, },\n];\n\n@Component({\n  selector: 'app-multiple-applications',\n  templateUrl: './multiple-applications.component.html',\n  styleUrls: ['./multiple-applications.component.scss']\n})\nexport class MultipleApplicationsComponent implements OnInit {\n\n  @ViewChild(MatPaginator, { static: false }) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: false }) sort: MatSort;\n  @ViewChild(MatTable, { static: false }) table: MatTable<Object>;\n\n  dataSource: MatTableDataSource<any>\n  displayedColumns: string[] = ['adTitle', 'typeOfApplication', 'brand', 'product', 'applicantCompanyName', 'paymentStatus'];\n  paymentList = [];\n  currentUser: any;\n\n\n  constructor(\n    private apiService: ApiService,\n    private dialog: MatDialog,\n    private dataStorage: DataStorageService,\n  ) { }\n\n  ngOnInit(): void {\n    this.currentUser = this.dataStorage.getUserAccount();\n    this.getS1MultiplePaymentList();\n  }\n\n  getS1MultiplePaymentList() {\n    this.apiService.findAll(ENDPOINTS.applicationFormPresentor + `${this.currentUser.id}/multiple-application?paymentStatus=FOR_PAYMENT`)\n    .subscribe((res: any) => {\n      this.paymentList = res.responseData.data;\n\n      this.dataSource = new MatTableDataSource<any>(this.paymentList);\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n    }, (err: any) => {\n    });\n  }\n\n  openModal(res) {\n    const dialogRef = this.dialog.open(ModalMultipleApplicationsComponent, {\n      width: '60%',\n      height: '85%',\n      data: res\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        console.log(result);\n        this.getS1MultiplePaymentList();\n      }\n    });\n\n  }\n\n\n}\n","<form>\n    <div class=\"container-fluid\">\n      <div class=\"row\">\n        <div class=\"col-md-12 title\">\n          <mat-label>\n            <mat-icon>view_list</mat-icon> Multiple Applications - For Payment\n          </mat-label>\n        </div>\n      </div>\n      <hr>\n      <br>\n      <div class=\"col-md-12\" fxLayout fxLayoutAlign=\"center center\">\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n          <input matInput type=\"text\" placeholder=\"Company Name\">\n        </mat-form-field>\n      </div>\n\n      <div class=\"mat-elevation-z8 fields\">\n        <table mat-table [dataSource]=\"dataSource\" matSort>\n          <ng-container matColumnDef=\"adTitle\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> REFERENCE CODE </th>\n            <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"openModal(element)\"> {{element?.adTitle | uppercase}}</td>\n          </ng-container>\n          <ng-container matColumnDef=\"typeOfApplication\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> TYPE OF APPLICATION</th>\n            <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"openModal(element)\">{{element?.applicationType?.description | uppercase}}</td>\n          </ng-container>\n          <ng-container matColumnDef=\"brand\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> BRAND</th>\n            <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"openModal(element)\">{{element?.brand?.description | uppercase}}</td>\n          </ng-container>\n          <ng-container matColumnDef=\"product\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> PRODUCT</th>\n            <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"openModal(element)\">{{element?.product?.description | uppercase}}</td>\n          </ng-container>\n          <ng-container matColumnDef=\"applicantCompanyName\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> APPLICANT COMPANY NAME</th>\n            <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"openModal(element)\">{{element?.company.companyName | uppercase}}</td>\n          </ng-container>\n          <!-- <ng-container matColumnDef=\"countVerifiedApplicationForm\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> NUMBER OF VERIFIED APPLICATIONS</th>\n            <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"openModal(element)\">{{element?.countVerifiedApplicationForm}}</td>\n          </ng-container> -->\n          <ng-container matColumnDef=\"paymentStatus\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> PAYMENT STATUS</th>\n            <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"openModal(element)\">{{element?.paymentStatus?.replaceAll('_',' ') | uppercase}}</td>\n          </ng-container>\n\n\n\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n          <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n        </table>\n        <div class=\"no-record\" [hidden]=\"dataSource && dataSource?.data?.length > 0\">\n          No record found.\n        </div>\n        <mat-paginator [pageSizeOptions]=\"[10, 20, 50]\" showFirstLastButtons></mat-paginator>\n      </div>\n      <br>\n    </div>\n  </form>\n","import { USER_ROLES } from './../../../../../../shared/utils/constants';\nimport { Component, Inject, Input, OnDestroy, OnInit, Optional } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { Router } from '@angular/router';\nimport { AttachmentDocument, Payment, S1Application } from '@models';\nimport { ApiService, DataStorageService, SweetAlertService } from '@services';\nimport { ATTACHMENT_TYPE, ENDPOINTS, PAYMENT_STATUS } from '@shared';\nimport { ApplicationSingleMedia } from 'app/core/models/application-single-media.model';\nimport { FileStorageService } from 'app/core/services/file.storage.service';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-modal-single-application',\n  templateUrl: './modal-single-application.component.html',\n  styleUrls: ['./modal-single-application.component.scss']\n})\nexport class ModalSingleApplicationComponent implements OnInit, OnDestroy {\n\n  @Input() s1Application = new S1Application();\n  attachmentDocument = new AttachmentDocument();\n  applicationSingleMedia = new ApplicationSingleMedia();\n  payment = new Payment();\n\n  paymentTypeList = [];\n  attachmentDocuments = [];\n\n\n  paymentType: any;\n  safeURLProofOfPayment: any;\n  selectedFiles: any;\n  currentUser: any;\n  attachment: any;\n  previewDocument = false;\n  isSubmitted = false;\n  paymentDetails: any;\n  typeOfMediumDisplay = '';\n\n  paymentForm: FormGroup;\n\n  constructor(\n    private sanitizer: DomSanitizer,\n    private apiService: ApiService,\n    public dataStorage: DataStorageService,\n    private fileStorageService: FileStorageService,\n    private sweetAlertService: SweetAlertService,\n    private router: Router,\n    private spinner: NgxSpinnerService,\n    @Optional() public dialogRef: MatDialogRef<ModalSingleApplicationComponent>,\n    @Optional() @Inject(MAT_DIALOG_DATA) public data: any\n  ) {\n    if (data) {\n      if (data) {\n        this.s1Application = data;\n        console.log('S1', this.s1Application);\n\n        switch (this.s1Application?.refTypeOfMedium || this.payment?.applicationFormS2?.applicationForm?.refTypeOfMedium) {\n          case 'SINGLE MEDIA':\n            this.getApplicationSingleMedia();\n            break;\n          case 'MULTIMEDIA-MOVING':\n            this.getMultimediaMoving();\n            break;\n          case 'MULTIMEDIA-STATIC':\n            this.getMultimediaStatic();\n            break;\n          default:\n            break;\n        }\n        this.getPaymentDetails();\n      }\n    }\n  }\n\n  ngOnInit(): void {\n    this.currentUser = this.dataStorage.getUserAccount();\n    this.getPaymentList();\n  }\n\n  getPaymentDetails() {\n    this.apiService.findAll(ENDPOINTS.paymentDetails + this.s1Application.id).subscribe((res: any) => {\n      this.paymentDetails = res;\n      this.paymentDetails.vat = this.paymentDetails.vat.toFixed(2);\n    });\n  }\n\n  getPaymentList() {\n    this.apiService.findAll(ENDPOINTS.paymentType).subscribe((res: any) => {\n      this.paymentTypeList = res.responseData.data;\n      if (this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT) {\n        const creditCardIndex = this.paymentTypeList\n          .findIndex((element) => element.paymentDescription === 'Credit Card');\n        this.paymentTypeList.splice(creditCardIndex, 1);\n      }\n    });\n  }\n\n  selectFile(event) {\n    const attachmentSize = event.target.files[0].size;\n\n    if (event.target.files[0].type === 'application/pdf') {\n      if (attachmentSize > 15000000) { // 1MB = 1M\n        this.sweetAlertService.customErrorMessage(`Attachments' total file size should not exceed 15MB.`);\n        event.target.value = '';\n        return;\n      } else {\n        const pdfURL = URL.createObjectURL(event.target.files[0]);\n        this.safeURLProofOfPayment = this.sanitizer.bypassSecurityTrustResourceUrl(pdfURL);\n        this.previewDocument = true;\n        // env.showSpinner = true;\n        const reader = new FileReader();\n        const [file] = event.target.files;\n\n        reader.readAsDataURL(file);\n        reader.onload = () => {\n        };\n      }\n\n      this.selectedFiles = event.target.files;\n    } else {\n      this.sweetAlertService.customErrorMessage('Attachment should be in PDF format only.');\n      event.target.value = '';\n      return;\n    }\n  }\n\n  uploadDocument(s1Application) {\n    Swal.fire({\n      text: 'Are you sure you want to submit this PROOF OF PAYMENT?',\n      icon: 'question',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Confirm'\n    }).then((result) => {\n      if (result.value) {\n        this.spinner.show();\n        let params = '';\n        params = '?&attachmentType=' + ATTACHMENT_TYPE.PAYMENT + '&submissionType=ORIGINAL';\n\n        this.fileStorageService.pushFileToStorage(ENDPOINTS.attachmentDocument, this.selectedFiles.item(0), params)\n          .subscribe(res => {\n            const obj = res.responseData.data;\n            console.log(obj);\n            this.s1Application.paymentAttachmentReference = obj.paymentAttachmentReference;\n            this.payment.paymentAttachmentReference = obj.paymentAttachmentReference;\n            this.payment.amountDue = s1Application.amount;\n            this.payment.applicationForm = s1Application;\n            this.payment.appFormReference = s1Application.appFormReference;\n            this.payment.filename = obj.filename;\n            this.saveProofOfPayment();\n          }, (err: any) => {\n            this.spinner.hide();\n            this.sweetAlertService.error(err);\n          }, () => {\n            // actions after subscription\n            this.spinner.hide();\n          });\n      }\n    });\n  }\n\n  saveProofOfPayment() {\n    this.spinner.show();\n    console.log('Saving payment...');\n    this.payment.id = 0;\n    this.payment.officialReceiptNo = '';\n    this.payment.paymentMethod = null;\n    console.log('PAYMENT : ', this.payment);\n    this.apiService.save(`${ENDPOINTS.applicationFormPresentor}payment-type-id/${this.paymentType.id}/payment/submit`, this.payment)\n      .subscribe((res: any) => {\n        console.log('SAVED STATUS: ', res);\n        if (res.responseData.data) {\n          this.safeURLProofOfPayment = this.sanitizer.bypassSecurityTrustResourceUrl(res.responseData.data.fileURL);\n          this.isSubmitted = true;\n          this.sweetAlertService.customSuccessMessage('Proof of payment successfully submitted.');\n          this.closeModal();\n        } else {\n          this.sweetAlertService.customErrorMessage('Error saving payment.');\n        }\n\n        this.spinner.hide();\n        // this.previewDocument = true;\n        this.selectedFiles = undefined;\n        this.router.navigateByUrl('asc/page/application/single-application');\n      }, (err) => {\n        console.log(err);\n        this.sweetAlertService.error(err);\n        this.spinner.hide();\n      }, () => {\n        this.spinner.hide();\n      });\n  }\n\n  closeModal(): void {\n    this.dialogRef.close();\n    this.router.navigate(['asc/page/application/single-application']);\n  }\n  ngOnDestroy(): void {\n    // this.s1Application = null;\n  }\n\n  getApplicationSingleMedia() {\n    this.apiService.findByParam(ENDPOINTS.applicationSingleMedia,\n      `app-form-reference/${this.s1Application?.appFormReference}`).subscribe(\n        (res: any) => {\n          if (res.responseData.data.length > 0) {\n            this.applicationSingleMedia = res.responseData.data[0];\n            this.typeOfMediumDisplay = `${this.applicationSingleMedia?.mediumExecution?.typeOfMedium?.description} (${this.applicationSingleMedia?.sizeLength})`;\n          } else {\n            this.typeOfMediumDisplay = '';\n          }\n        }, (err: any) => {\n          this.typeOfMediumDisplay = '';\n        });\n  }\n\n  getMultimediaStatic() {\n    this.apiService.findByParam(ENDPOINTS.applicationMultimedia,\n      `app-form-reference/${this.s1Application?.appFormReference}`).subscribe(\n        (res: any) => {\n          if (res.responseData.data.length > 0) {\n            const multimediaList = new Set(res.responseData.data.map(mappedList => `${mappedList?.typeOfMedium?.description} (${mappedList?.multimediaSizeLength})`));\n\n            this.typeOfMediumDisplay = '';\n            let mediaCtrl = 1;\n            for (const media of multimediaList) {\n              if (mediaCtrl !== multimediaList.size) {\n                this.typeOfMediumDisplay += `${media}, `;\n                mediaCtrl++;\n              } else {\n                this.typeOfMediumDisplay += media;\n              }\n            }\n          } else {\n            this.typeOfMediumDisplay = '';\n          }\n        }, (err: any) => {\n          this.typeOfMediumDisplay = '';\n        });\n  }\n\n  getMultimediaMoving() {\n    this.apiService.findByParam(ENDPOINTS.applicationMultimedia,\n      `app-form-reference/${this.s1Application?.appFormReference}`).subscribe(\n        (res: any) => {\n          if (res.responseData.data.length > 0) {\n            const multimediaList = new Set(res.responseData.data.map(mappedList => `${mappedList?.typeOfMedium?.description} (${mappedList?.multimediaSizeLength})`));\n\n            this.typeOfMediumDisplay = '';\n            let mediaCtrl = 1;\n            for (const media of multimediaList) {\n              if (mediaCtrl !== multimediaList.size) {\n                this.typeOfMediumDisplay += `${media}, `;\n                mediaCtrl++;\n              } else {\n                this.typeOfMediumDisplay += media;\n              }\n            }\n          } else {\n            this.typeOfMediumDisplay = '';\n          }\n        }, (err: any) => {\n          this.typeOfMediumDisplay = '';\n        });\n  }\n}\n","<div class=\"container-fluid\">\n    <div class=\"row\">\n        <div class=\"col-md-12 title\">\n            <mat-label>\n                <mat-icon>view_list</mat-icon>  <b>Schedule of Fees - Individual Application</b>\n            </mat-label>\n        </div>\n    </div>\n    <hr>\n    <div class=\"row col-md-12 mt-4\">\n        <div class=\"col-md-6\">\n            <div>\n                <mat-label>Proof of Payment: &nbsp;&nbsp;&nbsp;<span>PDF file only!</span></mat-label><br>\n                <input class=\"file-upload\" type=\"file\" [(ngModel)]=\"attachment\" [ngModelOptions]=\"{standalone: true}\"\n                    accept=\".pdf\" (change)=\"selectFile($event)\">\n            </div>\n            <div *ngIf=\"previewDocument===true\">\n                <div class=\"file-upload\">\n                    <object [data]=\"safeURLProofOfPayment\" type=\"application/pdf\" width=\"100%\" height=\"400\">\n                        <iframe [src]=\"safeURLProofOfPayment\" width=\"100%\" height=\"500\">\n                            <p>This browser does not support PDF!</p>\n                        </iframe>\n                    </object>\n                </div>\n            </div>\n        </div>\n        <div class=\"col-md-3\">\n            <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n                <mat-label>Reference Code</mat-label>\n                <input matInput [value]= \"s1Application?.referenceCode\" readonly>\n            </mat-form-field>\n\n            <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n                <mat-label>Advertiser</mat-label>\n                <input matInput name=\"companyName\" [value]=\"s1Application?.company?.companyName\" readonly>\n            </mat-form-field>\n\n            <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n                <mat-label>Ad Title - Medium (Length)</mat-label>\n                <textarea matInput name=\"refTypeOfMedium\"\n                  [value]=\"s1Application?.adTitle + ' - ' + typeOfMediumDisplay\"\n                  readonly></textarea>\n            </mat-form-field>\n        </div>\n\n        <div class=\"col-md-3\">\n            <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n                <mat-label>Vatable Sales</mat-label>\n                <input matInput class=\"numbers-input\" name=\"amount\" [value]=\"paymentDetails?.basicRate | number : '1.2-2'\" readonly>\n            </mat-form-field>\n\n            <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n                <mat-label>VAT</mat-label>\n                <input matInput class=\"numbers-input\" name=\"amount\" [value]=\"paymentDetails?.vat | number : '1.2-2'\" readonly>\n            </mat-form-field>\n\n            <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n                <mat-label>Total Sales (VAT Inclusive)</mat-label>\n                <input matInput class=\"numbers-input total\" name=\"amount\" [value]=\"paymentDetails?.amountDue | number : '1.2-2'\" readonly>\n            </mat-form-field>\n\n            <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n                <mat-label>Payment Mode <span class=\"required-field\">\n                  <mat-icon>notification_important</mat-icon>\n                </span></mat-label>\n                <mat-select [(ngModel)]=\"paymentType\" [ngModelOptions]=\"{standalone: true}\">\n                    <div *ngFor=\"let i of paymentTypeList\">\n                        <mat-option *ngIf=\"i?.status === 'ACTIVE'\" [value]=\"i\" name=\"paymentType\">\n                            {{i?.paymentDescription | uppercase}}\n                        </mat-option>\n                    </div>\n                </mat-select>\n            </mat-form-field>\n            <hr style=\"margin-top: 2px;\">\n            <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n                <mat-label>Remarks</mat-label>\n                <textarea matInput name=\"remarks\" [(ngModel)]=\"payment.remarks\"></textarea>\n            </mat-form-field>\n        </div>\n    </div>\n\n    <div class=\"row col-md-12\">\n        <div class=\"col-md-10\"><span *ngIf=\"paymentType && paymentDetails?.amountDue === 0\">\n          <i>Please contact ASC admin to check the Maintenance of Fees.</i></span></div>\n        <div class=\"col-md-2 text-end\">\n            <button mat-raised-button class=\"button-red m-0\" [disabled]=\"!paymentType || !previewDocument || paymentDetails?.amountDue === 0\" (click)=\"uploadDocument(s1Application)\">\n                <i class=\"material-icons color__white\" >task_alt</i> SUBMIT\n            </button>\n        </div>\n    </div>\n</div>\n","import { USER_ROLES } from './../../../../../../shared/utils/constants';\nimport { Component, Inject, Input, OnDestroy, OnInit, Optional } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { Router } from '@angular/router';\nimport { AttachmentDocument, Payment, S2Application } from '@models';\nimport { ApiService, DataStorageService, SweetAlertService } from '@services';\nimport { ATTACHMENT_TYPE, ENDPOINTS, PAYMENT_STATUS } from '@shared';\nimport { ApplicationSingleMedia } from 'app/core/models/application-single-media.model';\nimport { FileStorageService } from 'app/core/services/file.storage.service';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-modal-special-applications',\n  templateUrl: './modal-special-applications.component.html',\n  styleUrls: ['./modal-special-applications.component.scss']\n})\nexport class ModalSpecialApplicationsComponent implements OnInit, OnDestroy {\n\n  @Input() s2Application = new S2Application();\n  attachmentDocument = new AttachmentDocument();\n  payment = new Payment();\n  applicationSingleMedia = new ApplicationSingleMedia();\n\n\n  paymentTypeList = [];\n  attachmentDocuments = [];\n\n\n  paymentType: any;\n  safeURLProofOfPayment: any;\n  selectedFiles: any;\n  currentUser: any;\n  attachment: any;\n  previewDocument = false;\n  isSubmitted = false;\n  paymentDetails: any;\n  typeOfMediumDisplay = '';\n\n  paymentForm: FormGroup;\n\n  constructor(\n    private sanitizer: DomSanitizer,\n    private apiService: ApiService,\n    public dataStorage: DataStorageService,\n    private fileStorageService: FileStorageService,\n    private sweetAlertService: SweetAlertService,\n    private router: Router,\n    private spinner: NgxSpinnerService,\n    @Optional() public dialogRef: MatDialogRef<ModalSpecialApplicationsComponent>,\n    @Optional() @Inject(MAT_DIALOG_DATA) public data: any\n  ) {\n    if (data) {\n      if (data) {\n        this.s2Application = data;\n        console.log('S2', this.s2Application);\n        switch (this.s2Application?.applicationForm?.refTypeOfMedium || this.payment?.applicationFormS2?.applicationForm?.refTypeOfMedium) {\n          case 'SINGLE MEDIA':\n            this.getApplicationSingleMedia();\n            break;\n          case 'MULTIMEDIA-MOVING':\n            this.getMultimediaMoving();\n            break;\n          case 'MULTIMEDIA-STATIC':\n            this.getMultimediaStatic();\n            break;\n          default:\n            break;\n        }\n        this.getPaymentDetails();\n      }\n    }\n  }\n\n  ngOnInit(): void {\n    this.currentUser = this.dataStorage.getUserAccount();\n    this.getPaymentList();\n  }\n\n  getPaymentDetails() {\n    this.apiService.findAll(ENDPOINTS.specialPaymentDetails + this.s2Application.id).subscribe((res: any) => {\n      this.paymentDetails = res;\n      this.paymentDetails.vat = this.paymentDetails.vat.toFixed(2);\n    });\n  }\n\n  getPaymentList() {\n    this.apiService.findAll(ENDPOINTS.paymentType).subscribe((res: any) => {\n      this.paymentTypeList = res.responseData.data;\n      if (this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT) {\n        const creditCardIndex = this.paymentTypeList\n          .findIndex((element) => element.paymentDescription === 'Credit Card');\n        this.paymentTypeList.splice(creditCardIndex, 1);\n      }\n    });\n  }\n\n  selectFile(event) {\n    const attachmentSize = event.target.files[0].size;\n\n    if (event.target.files[0].type === 'application/pdf') {\n      if (attachmentSize > 15000000) { // 1MB = 1M\n        this.sweetAlertService.customErrorMessage(`Attachments' total file size should not exceed 15MB.`);\n        event.target.value = '';\n        return;\n      } else {\n        const pdfURL = URL.createObjectURL(event.target.files[0]);\n        this.safeURLProofOfPayment = this.sanitizer.bypassSecurityTrustResourceUrl(pdfURL);\n        this.previewDocument = true;\n        // env.showSpinner = true;\n        const reader = new FileReader();\n        const [file] = event.target.files;\n\n        reader.readAsDataURL(file);\n        reader.onload = () => {\n        };\n      }\n\n      this.selectedFiles = event.target.files;\n    } else {\n      this.sweetAlertService.customErrorMessage('Attachment should be in PDF format only.');\n      event.target.value = '';\n      return;\n    }\n  }\n\n  uploadDocument(s2Application) {\n    Swal.fire({\n      text: 'Are you sure you want to submit this PROOF OF PAYMENT?',\n      icon: 'question',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Confirm'\n    }).then((result) => {\n      if (result.value) {\n        this.spinner.show();\n        let params = '';\n        params = '?&attachmentType=' + ATTACHMENT_TYPE.PAYMENT + '&submissionType=' + s2Application.submissionType;\n        this.fileStorageService.pushFileToStorage(ENDPOINTS.attachmentDocument, this.selectedFiles.item(0), params)\n          .subscribe(res => {\n            const obj = res.responseData.data;\n            console.log(obj);\n            this.s2Application.paymentAttachmentReference = obj.paymentAttachmentReference;\n            this.payment.paymentAttachmentReference = obj.paymentAttachmentReference;\n            this.payment.amountDue = s2Application.amount;\n            this.payment.applicationFormS2 = s2Application;\n            this.payment.appFormReference = s2Application.appFormReference;\n            this.payment.filename = obj.filename;\n            this.saveProofOfPayment();\n            // this.previewDocument = true;\n            this.selectedFiles = undefined;\n            this.spinner.hide();\n            this.router.navigateByUrl('asc/page/application/special-applications');\n          }, (err: any) => {\n            this.spinner.hide();\n            this.sweetAlertService.error(err);\n          }, () => {\n            // actions after subscription\n            this.spinner.hide();\n          });\n      }\n    });\n  }\n\n  saveProofOfPayment() {\n    console.log('Saving payment...');\n    this.dataStorage.setDisplayProgressbar(true);\n    this.payment.paymentStatus = PAYMENT_STATUS.UNPAID;\n    this.payment.id = 0;\n    this.payment.officialReceiptNo = '';\n    this.payment.paymentMethod = null;\n    console.log('PAYMENT : ', this.payment);\n\n    this.apiService.save(`${ENDPOINTS.s2ApplicationFormPresentor}payment-type-id/${this.paymentType.id}\n    /payment-special-clearing/submit`, this.payment).subscribe((res: any) => {\n      console.log('SAVED STATUS: ', res.responseData.data);\n\n      this.safeURLProofOfPayment = this.sanitizer.bypassSecurityTrustResourceUrl(res.responseData.data.fileURL);\n      this.isSubmitted = true;\n      this.sweetAlertService.customSuccessMessage('Proof of payment successfully submitted.');\n      this.closeModal();\n    }, (err) => {\n      console.log(err);\n      this.sweetAlertService.error(err);\n      this.dataStorage.setDisplayProgressbar(false);\n    }, () => {\n      this.dataStorage.setDisplayProgressbar(false);\n    });\n  }\n\n  closeModal(): void {\n    this.dialogRef.close();\n    this.router.navigate(['asc/page/application/special-applications']);\n  }\n  ngOnDestroy(): void {\n    // this.s2Application = null;\n  }\n\n  getApplicationSingleMedia() {\n    this.apiService.findByParam(ENDPOINTS.applicationSingleMedia,\n      `app-form-reference/${this.s2Application?.applicationForm?.appFormReference}`).subscribe(\n        (res: any) => {\n          if (res.responseData.data.length > 0) {\n            this.applicationSingleMedia = res.responseData.data[0];\n            this.typeOfMediumDisplay = `${this.applicationSingleMedia?.mediumExecution?.typeOfMedium?.description} (${this.applicationSingleMedia?.sizeLength})`;\n          } else {\n            this.typeOfMediumDisplay = '';\n          }\n        }, (err: any) => {\n          this.typeOfMediumDisplay = '';\n        });\n  }\n\n  getMultimediaStatic() {\n    this.apiService.findByParam(ENDPOINTS.applicationMultimedia,\n      `app-form-reference/${this.s2Application?.applicationForm?.appFormReference}`).subscribe(\n        (res: any) => {\n          if (res.responseData.data.length > 0) {\n            const multimediaList = new Set(res.responseData.data.map(mappedList => `${mappedList?.typeOfMedium?.description} (${mappedList?.multimediaSizeLength})`));\n\n            this.typeOfMediumDisplay = '';\n            let mediaCtrl = 1;\n            for (const media of multimediaList) {\n              if (mediaCtrl !== multimediaList.size) {\n                this.typeOfMediumDisplay += `${media}, `;\n                mediaCtrl++;\n              } else {\n                this.typeOfMediumDisplay += media;\n              }\n            }\n          } else {\n            this.typeOfMediumDisplay = '';\n          }\n        }, (err: any) => {\n          this.typeOfMediumDisplay = '';\n        });\n  }\n\n  getMultimediaMoving() {\n    this.apiService.findByParam(ENDPOINTS.applicationMultimedia,\n      `app-form-reference/${this.s2Application?.applicationForm?.appFormReference}`).subscribe(\n        (res: any) => {\n          if (res.responseData.data.length > 0) {\n            const multimediaList = new Set(res.responseData.data.map(mappedList => `${mappedList?.typeOfMedium?.description} (${mappedList?.multimediaSizeLength})`));\n\n            this.typeOfMediumDisplay = '';\n            let mediaCtrl = 1;\n            for (const media of multimediaList) {\n              if (mediaCtrl !== multimediaList.size) {\n                this.typeOfMediumDisplay += `${media}, `;\n                mediaCtrl++;\n              } else {\n                this.typeOfMediumDisplay += media;\n              }\n            }\n          } else {\n            this.typeOfMediumDisplay = '';\n          }\n        }, (err: any) => {\n          this.typeOfMediumDisplay = '';\n        });\n  }\n\n}\n","<div class=\"container-fluid\">\n    <div class=\"row\">\n        <div class=\"col-md-12 title\">\n            <mat-label>\n                <mat-icon>view_list</mat-icon> <b>Schedule of Fees - Special Application</b>\n            </mat-label>\n        </div>\n    </div>\n    <hr>\n    <br>\n    <div class=\"row col-md-12\">\n        <div class=\"row col-md-6\">\n            <div>\n                <mat-label>Proof of Payment: &nbsp;&nbsp;&nbsp;<span>PDF file only!</span></mat-label><br>\n                <input class=\"file-upload\" type=\"file\" [(ngModel)]=\"attachment\" [ngModelOptions]=\"{standalone: true}\"\n                    accept=\".pdf\" (change)=\"selectFile($event)\">\n            </div>\n            <div *ngIf=\"previewDocument===true\">\n                <div class=\"file-upload\">\n                    <object [data]=\"safeURLProofOfPayment\" type=\"application/pdf\" width=\"100%\" height=\"500\">\n                        <iframe [src]=\"safeURLProofOfPayment\" width=\"100%\" height=\"500\">\n                            <p>This browser does not support PDF!</p>\n                        </iframe>\n                    </object>\n                </div>\n            </div>\n        </div>\n        <div class=\"row col-md-6\">\n\n            <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n                <mat-label>Reference Code</mat-label>\n                <input matInput [value]=\"s2Application?.applicationForm?.referenceCode\" readonly>\n            </mat-form-field>\n\n            <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n                <mat-label>Advertiser</mat-label>\n                <input matInput name=\"companyName\" [value]=\"s2Application?.applicationForm?.company?.companyName\"\n                    readonly>\n            </mat-form-field>\n\n            <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n                <mat-label>Ad Title - Medium (Length)</mat-label>\n                <input matInput name=\"refTypeOfMedium\"\n                    [value]=\"s2Application?.applicationForm?.adTitle + ' - ' + typeOfMediumDisplay\" readonly>\n            </mat-form-field>\n\n            <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n                <mat-label>Vatable Sales</mat-label>\n                <input matInput class=\"numbers-input\" name=\"amount\"\n                    [value]=\"paymentDetails?.basicRate | number : '1.2-2'\" readonly>\n            </mat-form-field>\n\n\n            <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n                <mat-label>VAT</mat-label>\n                <input matInput class=\"numbers-input\" name=\"amount\" [value]=\"paymentDetails?.vat | number : '1.2-2'\"\n                    readonly>\n            </mat-form-field>\n\n            <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n                <mat-label>Total Sales (VAT Inclusive)</mat-label>\n                <input matInput class=\"numbers-input total\" name=\"amount\"\n                    [value]=\"paymentDetails?.amountDue | number : '1.2-2'\" readonly>\n            </mat-form-field>\n\n            <hr>\n\n            <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n                <mat-label>Payment Mode <span class=\"required-field\">\n                        <mat-icon>notification_important</mat-icon>\n                    </span></mat-label>\n                <mat-select [(ngModel)]=\"paymentType\" [ngModelOptions]=\"{standalone: true}\">\n                    <mat-option *ngFor=\"let i of paymentTypeList\" [value]=\"i\" name=\"paymentType\">\n                        {{i?.paymentDescription | uppercase}}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n\n            <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n                <mat-label>Remarks</mat-label>\n                <textarea matInput name=\"remarks\" [(ngModel)]=\"payment.remarks\"></textarea>\n            </mat-form-field>\n\n        </div>\n    </div>\n\n    <div class=\"row\">\n        <div class=\"col-md-10\"><span *ngIf=\"paymentType && paymentDetails?.amountDue === 0\">\n                <i>Please contact ASC admin to check the Maintenance of Fees.</i></span></div>\n        <div class=\"col-md-2\">\n            <button mat-raised-button class=\"button-red\"\n                [disabled]=\"!paymentType || !previewDocument || paymentDetails?.amountDue === 0\"\n                (click)=\"uploadDocument(s2Application)\">\n                <i class=\"material-icons color__white\">task_alt</i> SUBMIT\n            </button>\n        </div>\n    </div>\n</div>\n","import { MultiMediaStatic } from './multimedia-static.model';\nexport class MultiMediaStaticConst{\n    data: Array<MultiMediaStatic> = new Array<MultiMediaStatic>();\n    constructor(){\n        this.data = [\n            {\n                id: 0,\n                multimediaStaticMedium: 'collaterals',\n                hasSelected: false,\n                sizeLength: 0\n              },\n              {\n                id: 1,\n                multimediaStaticMedium: 'digital static',\n                hasSelected: false,\n                sizeLength: 0\n              },\n              {\n                id: 2,\n                multimediaStaticMedium: 'ooh',\n                hasSelected: false,\n                sizeLength: 0\n              },\n              {\n                id: 3,\n                multimediaStaticMedium: 'print',\n                hasSelected: false,\n                sizeLength: 0\n              }\n        ]\n    }\n}","export * from './accounting.module';\nexport * from './add-payment/add-payment.component';\nexport * from './add-payment/add-payment.module';\nexport * from './list-payment/list-payment.component';\nexport * from './list-payment/list-payment.module';","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { URL_PATHS } from '@shared';\n\nconst routes: Routes = [\n  {\n    path: URL_PATHS.S1_APPLICATION,\n    loadChildren: () => import('./s1-application/s1-application.module')\n      .then(m => m.S1ApplicationModule)\n  },\n  {\n    path: URL_PATHS.S2_APPLICATION,\n    loadChildren: () => import('./s2-application/s2-application.module')\n      .then(m => m.S2ApplicationModule)\n  },\n  {\n    path: URL_PATHS.SCHEDULE_OF_FEES_SINGLE_APPLICATION,\n    loadChildren: () => import('./schedule-of-fees/single-application/single-application.module')\n      .then(m => m.SingleApplicationModule)\n  },\n  {\n    path: URL_PATHS.SCHEDULE_OF_FEES_SINGLE_APPLICATION + '/:id',\n    loadChildren: () => import('./schedule-of-fees/single-application/single-application.module')\n      .then(m => m.SingleApplicationModule)\n  },\n  {\n    path: URL_PATHS.SCHEDULE_OF_FEES_MULTIPLE_APPLICATIONS,\n    loadChildren: () => import('./schedule-of-fees/multiple-applications/multiple-applications.module')\n      .then(m => m.MultipleApplicationsModule)\n  },\n  {\n    path: URL_PATHS.SCHEDULE_OF_FEES_MULTIPLE_APPLICATIONS + '/:id',\n    loadChildren: () => import('./schedule-of-fees/multiple-applications/multiple-applications.module')\n      .then(m => m.MultipleApplicationsModule)\n  },\n  {\n    path: URL_PATHS.SCHEDULE_OF_FEES_SPECIAL_APPLICATIONS,\n    loadChildren: () => import('./schedule-of-fees/special-applications/special-applications.module')\n      .then(m => m.SpecialApplicationsModule)\n  },\n  {\n    path: URL_PATHS.ACCOUNTS_PAYABLE,\n    loadChildren: () => import('./schedule-of-fees/accounts-payable/accounts-payable.module')\n      .then(m => m.AccountsPayableModule)\n  },\n  {\n    path: URL_PATHS.SCHEDULE_OF_FEES_SPECIAL_APPLICATIONS + '/:id',\n    loadChildren: () => import('./schedule-of-fees/special-applications/special-applications.module')\n      .then(m => m.SpecialApplicationsModule)\n  },\n  {\n    path: URL_PATHS.APPLICATION_REASSIGNMENT,\n    loadChildren: () => import('./reassignment/reassignment.module')\n      .then(m => m.ReassignmentModule)\n  }\n];\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ApplicationsRoutingModule { }\n","import { Observable, Subject } from \"rxjs\";\nimport { AttachmentDocumentComponent } from \"./../../attachment-document/attachment-document.component\";\nimport { DatePipe } from \"@angular/common\";\nimport {\n  Component,\n  ElementRef,\n  EventEmitter,\n  OnInit,\n  Output,\n  ViewChild,\n} from \"@angular/core\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { MatAccordion } from \"@angular/material/expansion\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { DomSanitizer } from \"@angular/platform-browser\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport {\n  AttachmentDocument,\n  Company,\n  S1Application,\n  S2Application,\n} from \"@models\";\nimport { ApiService, DataStorageService, SweetAlertService } from \"@services\";\nimport {\n  APPLICATION_STAGE,\n  APPLICATION_STATUS_S2,\n  ENDPOINTS,\n  USER_ROLES,\n  ATTACHMENT_TYPE,\n  TYPE_OF_MEDIUM,\n  APPLICATION_STATUS,\n  APP_DECISION_STATUS,\n  APPLICATION_STATUS_FOR_COMPLIANCE,\n  SUBMISSION_TYPE,\n  ROLES,\n} from \"@shared\";\nimport { ApplicationSingleMedia } from \"app/core/models/application-single-media.model\";\nimport { RationaleS2 } from \"app/core/models/rationale-s2.model\";\nimport { Report } from \"app/core/models/report.model\";\nimport { CommonServices } from \"app/core/services/common-services.service\";\nimport { FileStorageService } from \"app/core/services/file.storage.service\";\nimport { IncompleteDisapprovedRationaleComponent } from \"app/modules/fragments/incomplete-disapproved-rationale/incomplete-disapproved-rationale.component\";\nimport { RejectDisapprovedReasonComponent } from \"app/modules/fragments/reject-disapproved-reason/reject-disapproved-reason.component\";\nimport { NgxSpinnerService } from \"ngx-spinner\";\nimport Swal from \"sweetalert2\";\nimport { ClientInformationComponent } from \"../../client-information/client-information.component\";\nimport { CommentComponent } from \"../../comment/comment.component\";\nimport { MaterialInformationComponent } from \"../../material-information/material-information.component\";\n\n@Component({\n  selector: \"app-add-s2-application\",\n  templateUrl: \"./add-s2-application.component.html\",\n  styleUrls: [\"./add-s2-application.component.scss\"],\n})\nexport class AddS2ApplicationComponent implements OnInit {\n  @ViewChild(MatAccordion) accordion: MatAccordion;\n  @ViewChild(ClientInformationComponent, { static: false })\n  clientInformation: ClientInformationComponent;\n  @ViewChild(MaterialInformationComponent, { static: false })\n  materialInformation: MaterialInformationComponent;\n  @ViewChild(CommentComponent, { static: false }) comment: CommentComponent;\n  // @ViewChild(LayoutComponent, { static: false }) layoutComponent: LayoutComponent;\n\n  @ViewChild(\"finalMaterialFileInput\") myFinalMaterialFileInput: ElementRef;\n  @ViewChild(\"finalMaterialFile\") myFinalMaterialFile: ElementRef;\n\n  @ViewChild(\"finalMaterialFileInputC\") myFinalMaterialFileInputC: ElementRef;\n  @ViewChild(\"finalMaterialFileC\") myFinalMaterialFileC: ElementRef;\n\n  @ViewChild(AttachmentDocumentComponent, { static: false })\n  attachmentComponent: AttachmentDocumentComponent;\n\n  @Output() spinnerMessageEmitter = new EventEmitter<string>();\n\n  title = \"ASC Online System\";\n  s2Application = new S2Application();\n  s1Application = new S1Application();\n  company = new Company();\n  rationaleS2 = new RationaleS2();\n  attachmentDocument = new AttachmentDocument();\n  applicationSingleMedia = new ApplicationSingleMedia();\n  report = new Report();\n  attachmentDocuments: any = {};\n  originalAttachmentDocuments = [];\n  revisionAttachmentDocuments = [];\n  complianceAttachmentDocuments = [];\n  s2OriginalAttachmentDocuments = [];\n  s2OriginalAttachmentObservable: Subject<any> = new Subject();\n  s2ComplianceAttachmentDocuments = [];\n  supportiveDocumentList = [];\n  affiliationList = [];\n  companyList = [];\n  multimediaStaticList = [];\n  multimediaMovingList = [];\n  selectedMultimediaList = [];\n  rationaleOthersList = [];\n  rationaleLists = [];\n  isNewCompany = false;\n  showCompanyAddress = false;\n  id: number;\n  spinnerMessage = \"\";\n  todayDate: Date = new Date();\n  s2ApplicationForm: FormGroup;\n  selectedFile: File;\n  tempCompliance = new AttachmentDocument();\n\n  selected: any; // in html but not existing in component -- encountered during 'ng serve --aot'\n  currentUser: any;\n  currentUserRole: any;\n  decisionStatus = \"\";\n  audioVideo = \"Video\";\n  isAudioVideo = false;\n  isShowUploadButton = false;\n  rationaleDisplay = false;\n  fileSize: number;\n  safeURLFile: any;\n  uploadedFinalMaterialFile: any;\n\n  isSuperAdmin = false;\n  isAdmin = false;\n  isAccounting = false;\n  isApplicant = false;\n  isEvaluator = false;\n  isAdSpecialist = false;\n  isScreener = false;\n  isReviewer = false;\n\n  previewAttachmentsList = [];\n  previewAttachmentsDisplayedColumns: string[] = [\n    \"clearanceToaFilename\",\n    \"viewClearanceToaIcon\",\n  ];\n  previewAttachmentsListDataSource: MatTableDataSource<object>;\n  isAscUser: boolean = false;\n  ascUserRoleList = [\n    ...ROLES.filter((role: any) => role.ascUser === true).map(\n      (role: any) => role.role\n    ),\n  ];\n  applicationStage: string = \"S2-APPLICATION\";\n  constructor(\n    private apiService: ApiService,\n    private formBuilder: FormBuilder,\n    private sweetAlertService: SweetAlertService,\n    private dataStorage: DataStorageService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private sanitizer: DomSanitizer,\n    public datepipe: DatePipe,\n    private spinner: NgxSpinnerService,\n    private fileStorageService: FileStorageService,\n    private dialog: MatDialog\n  ) {}\n\n  ngOnInit(): void {\n    this.setFormValidator();\n    this.currentUser = this.dataStorage.getUserAccount();\n    this.isAscUser = this.ascUserRoleList.includes(\n      this.dataStorage.getUserRole()\n    );\n    this.currentUserRole = this.currentUser.userRole.name;\n    this.id = Number(this.route.snapshot.paramMap.get(\"id\"));\n    this.initUserRole();\n    this.getAffiliationList();\n    this.getCompanyList();\n    if (this.id) {\n      this.viewS2Application();\n    }\n  }\n\n  initUserRole() {\n    if (this.currentUser.userRole.name === USER_ROLES.ROLE_SUPER_ADMIN) {\n      this.isSuperAdmin = true;\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_ADMIN) {\n      this.isAdmin = true;\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_ACCOUNTING) {\n      this.isAccounting = true;\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT) {\n      this.isApplicant = true;\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_SCREENER) {\n      this.isScreener = true;\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_REVIEWER) {\n      this.isReviewer = true;\n    } else if (\n      this.currentUser.userRole.name === USER_ROLES.ROLE_AD_SPECIALIST\n    ) {\n      this.isAdSpecialist = true;\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_ENCODER) {\n      this.isEvaluator = true;\n    }\n  }\n\n  viewS2Application(): void {\n    this.spinner.show();\n    this.spinnerMessage = \"Loading S2 Application\";\n    this.apiService.findById(ENDPOINTS.applicationFormS2, this.id).subscribe(\n      (res: any) => {\n        console.log(\"s2 = \");\n        this.s2Application = res.responseData.data;\n        console.log(\"S2 Form: \", this.s2Application);\n\n        this.s1Application = this.s2Application.applicationForm;\n        this.clientInformation.s1Application = this.s2Application.applicationForm;\n        this.materialInformation.s1Application = this.s2Application.applicationForm;\n\n        if (this.s2Application.finalMaterialAttachmentReference) {\n          this.isShowUploadButton = true;\n          this.getS2AttachmentDocument();\n        }\n\n        this.setApplicationStage(this.s2Application);\n        this.hideSpinner();\n        if (\n          this.s2Application.applicationForm.refTypeOfMedium ===\n          TYPE_OF_MEDIUM.SINGLE_MEDIA\n        ) {\n          this.getApplicationSingleMedia();\n        } else if (\n          this.s2Application.applicationForm.refTypeOfMedium ===\n          TYPE_OF_MEDIUM.MULTIMEDIA_MOVING\n        ) {\n          this.getMultimediaMoving();\n        } else if (\n          this.s2Application.applicationForm.refTypeOfMedium ===\n          TYPE_OF_MEDIUM.MULTIMEDIA_STATIC\n        ) {\n          this.getMultimediaStatic();\n        }\n        this.getAttachmentDocuments();\n        // this.getSupportiveDocuments();\n\n        if (\n          (this.s2Application.decisionStatus ===\n            APP_DECISION_STATUS.INCOMPLETE ||\n            this.s2Application.decisionStatus ===\n              APP_DECISION_STATUS.DISAPPROVED) &&\n          this.currentUserRole === USER_ROLES.ROLE_AD_SPECIALIST\n        ) {\n          if (\n            this.s2Application.internalStatus ===\n              \"RE_SUBMITTED_S2_APPLICATION_VERIFIED_BY_ENCODER\" &&\n            this.s2Application.decisionStatus === APP_DECISION_STATUS.INCOMPLETE\n          ) {\n            this.getRationaleList();\n          }\n        }\n\n        if (\n          this.isAdmin ||\n          this.isSuperAdmin ||\n          this.isApplicant ||\n          this.isAdSpecialist\n        ) {\n          console.log(\n            ENDPOINTS.clearanceAndToa + this.s2Application?.appFormReference\n          );\n          this.apiService\n            .findByParam(\n              ENDPOINTS.clearanceAndToa,\n              this.s2Application?.appFormReference\n            )\n            .subscribe((previewAttachmentsData) => {\n              console.log(previewAttachmentsData);\n\n              this.previewAttachmentsList =\n                previewAttachmentsData.responseData.data;\n              this.previewAttachmentsListDataSource = new MatTableDataSource<object>(\n                this.previewAttachmentsList\n              );\n            });\n        }\n      },\n      (err: any) => {\n        this.hideSpinner();\n      }\n    );\n  }\n\n  setApplicationStage(data): void {\n    this.clientInformation.applicationStage = APPLICATION_STAGE.S2_APPLICATION;\n    this.materialInformation.applicationStage =\n      APPLICATION_STAGE.S2_APPLICATION;\n    if (this.currentUserRole !== USER_ROLES.ROLE_APPLICANT) {\n      this.comment.applicationStage = APPLICATION_STAGE.S2_APPLICATION;\n      this.comment.getCommentsS2(data);\n    }\n  }\n\n  saveStatus(): void {\n    if (\n      this.s2Application.appFormReference &&\n      this.s2Application.appFormReference !== \"\" &&\n      this.s2Application.appFormReference !== undefined\n    ) {\n      let endpoint;\n      let swalMessage;\n\n      if (this.currentUserRole === USER_ROLES.ROLE_APPLICANT) {\n        endpoint = ENDPOINTS.s2ApplicationFormPresentorSubmit;\n        swalMessage = \"S2 application has been submitted.\";\n      } else if (this.currentUserRole === USER_ROLES.ROLE_ENCODER) {\n        endpoint = ENDPOINTS.s2ApplicationFormEncoderVerify;\n        swalMessage = \"S2 application has been verified.\";\n        this.s2Application.assignedUser = this.s2Application.applicationForm.assignedAdSpecialist;\n      } else if (this.currentUserRole === USER_ROLES.ROLE_AD_SPECIALIST) {\n        if (this.decisionStatus === APPLICATION_STATUS_S2.INCOMPLETE) {\n          endpoint = ENDPOINTS.s2ApplicationFormAdSpe + \"incomplete\";\n          swalMessage = \"S2 Application Incomplete\";\n        } else if (this.decisionStatus === APPLICATION_STATUS_S2.DISAPPROVED) {\n          endpoint = ENDPOINTS.s2ApplicationFormAdSpe + \"disapproved\";\n          swalMessage = \"S2 Application Disapproved\";\n        } else if (this.decisionStatus === APPLICATION_STATUS_S2.APPROVED) {\n          endpoint = ENDPOINTS.s2ApplicationFormAdSpe + \"approved\";\n          swalMessage = \"S2 Application Approved!\";\n        }\n      }\n\n      // this.s2Application.modifiedBy = this.currentUser;\n      // this.s2Application.modifiedDate = this.todayDate;\n\n      Swal.fire({\n        text: \"Are you sure you want to submit the application?\",\n        icon: \"question\",\n        showCancelButton: true,\n        confirmButtonColor: \"#3085d6\",\n        cancelButtonColor: \"#d33\",\n        confirmButtonText: \"Confirm\",\n      }).then((result) => {\n        if (result.value) {\n          this.spinner.show();\n          if (this.decisionStatus === APPLICATION_STATUS_S2.INCOMPLETE) {\n            this.s2Application.submissionType = SUBMISSION_TYPE.ORIGINAL;\n            this.s2Application.decisionStatus =\n              APPLICATION_STATUS_S2.INCOMPLETE;\n          } else if (this.decisionStatus === APPLICATION_STATUS_S2.APPROVED) {\n            this.s2Application.decisionStatus = APPLICATION_STATUS_S2.APPROVED;\n          } else if (\n            this.decisionStatus === APPLICATION_STATUS_S2.DISAPPROVED\n          ) {\n            this.s2Application.decisionStatus =\n              APPLICATION_STATUS_S2.DISAPPROVED;\n          }\n          this.apiService.save(endpoint, this.s2Application).subscribe(\n            (res: any) => {\n              this.spinner.hide();\n              this.sweetAlertService.customSuccessMessage(swalMessage);\n              this.navigateToS2List();\n            },\n            (err: any) => {\n              this.spinner.hide();\n            }\n          );\n        }\n      });\n    } else {\n      this.sweetAlertService.customErrorMessage(\n        \"Missing application form reference.\"\n      );\n    }\n  } // in html but not existing in component -- encountered during 'ng serve --aot'\n\n  saveStatusForCompliance(): void {\n    let endpoint;\n    let swalMessage;\n\n    if (this.currentUserRole === USER_ROLES.ROLE_APPLICANT) {\n      endpoint = ENDPOINTS.s2ApplicationForm + \"compliance/presentor/submit\";\n      swalMessage = \"S2 Application has been re-submitted successfully\";\n    } else if (this.currentUserRole === USER_ROLES.ROLE_ENCODER) {\n      endpoint = ENDPOINTS.s2ApplicationForm + \"compliance/encoder/verify\";\n      swalMessage =\n        \"S2 Application has been re-submitted successfully verified by ENCODER\";\n    } else if (this.currentUserRole === USER_ROLES.ROLE_AD_SPECIALIST) {\n      if (this.decisionStatus === APPLICATION_STATUS_S2.INCOMPLETE) {\n        endpoint = ENDPOINTS.s2ApplicationFormAdSpe + \"incomplete\";\n        swalMessage = \"S2 Application Incomplete\";\n      } else if (this.decisionStatus === APPLICATION_STATUS_S2.DISAPPROVED) {\n        endpoint = ENDPOINTS.s2ApplicationFormAdSpe + \"disapproved\";\n        swalMessage = \"S2 Application Disapproved\";\n      } else if (this.decisionStatus === APPLICATION_STATUS_S2.APPROVED) {\n        endpoint =\n          ENDPOINTS.s2ApplicationForm + \"compliance/ad-specialist/verify\";\n        swalMessage = \"S2 Application has been verified by AD-SPECIALIST\";\n        // this.s2Application.decisionStatus = APPLICATION_STATUS_S2.APPROVED;\n      }\n    }\n\n    Swal.fire({\n      text: \"Are you sure you want to re-submit this application?\",\n      icon: \"question\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Confirm\",\n    }).then((result) => {\n      if (result.value) {\n        this.spinner.show();\n        if (this.decisionStatus === APPLICATION_STATUS_S2.INCOMPLETE) {\n          this.s2Application.submissionType = SUBMISSION_TYPE.ORIGINAL;\n          this.s2Application.decisionStatus = APPLICATION_STATUS_S2.INCOMPLETE;\n        } else if (this.decisionStatus === APPLICATION_STATUS_S2.APPROVED) {\n          this.s2Application.decisionStatus = APPLICATION_STATUS_S2.APPROVED;\n        } else if (this.decisionStatus === APPLICATION_STATUS_S2.DISAPPROVED) {\n          this.s2Application.decisionStatus = APPLICATION_STATUS_S2.DISAPPROVED;\n        }\n        this.s2Application.submissionType = SUBMISSION_TYPE.ORIGINAL;\n        this.apiService.save(endpoint, this.s2Application).subscribe(\n          (res: any) => {\n            this.spinner.hide();\n            this.sweetAlertService.customSuccessMessage(swalMessage);\n            this.navigateToS2List();\n          },\n          (err: any) => {\n            this.spinner.hide();\n          }\n        );\n      }\n    });\n  }\n\n  saveStatusForClearance(): void {\n    let endpoint;\n    let swalMessage;\n\n    if (this.currentUserRole === USER_ROLES.ROLE_APPLICANT) {\n      endpoint = ENDPOINTS.s2ApplicationForm + \"clearance/presentor/submit\";\n      swalMessage = \"S2 Application clearance has been submitted successfully\";\n    } else if (this.currentUserRole === USER_ROLES.ROLE_ENCODER) {\n      endpoint = ENDPOINTS.s2ApplicationForm + \"clearance/encoder/verify\";\n      swalMessage =\n        \"S2 Application clearance has been verified successfully by ENCODER\";\n    } else if (this.currentUserRole === USER_ROLES.ROLE_AD_SPECIALIST) {\n      if (this.decisionStatus === APPLICATION_STATUS_S2.DISAPPROVED) {\n        endpoint = ENDPOINTS.s2ApplicationFormAdSpe + \"disapproved\";\n        swalMessage = \"S2 Application clearance Disapproved\";\n      } else if (this.decisionStatus === APPLICATION_STATUS_S2.APPROVED) {\n        endpoint =\n          ENDPOINTS.s2ApplicationForm + \"clearance/ad-specialist/verify\";\n        swalMessage =\n          \"S2 Application clearance has been approved by AD-SPECIALIST\";\n        this.s2Application.internalStatus = APPLICATION_STATUS_S2.APPROVED;\n        this.s2Application.externalStatus = APPLICATION_STATUS_S2.APPROVED;\n      }\n    }\n\n    Swal.fire({\n      text: \"Are you sure you want to submit this application clearance?\",\n      icon: \"question\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Confirm\",\n    }).then((result) => {\n      if (result.value) {\n        if (this.decisionStatus === APPLICATION_STATUS_S2.DISAPPROVED) {\n          this.s2Application.decisionStatus = APPLICATION_STATUS_S2.DISAPPROVED;\n        }\n        this.spinner.show();\n        this.apiService.save(endpoint, this.s2Application).subscribe(\n          (res: any) => {\n            this.hideSpinner();\n            this.sweetAlertService.customSuccessMessage(swalMessage);\n            this.navigateToS2List();\n          },\n          (err: any) => {\n            this.hideSpinner();\n          }\n        );\n      }\n    });\n  }\n\n  applyApplicationForClearance(): void {\n    Swal.fire({\n      text: \"Are you sure you want to apply this application to Clearance?\",\n      icon: \"question\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Confirm\",\n    }).then((result) => {\n      if (result.value) {\n        this.spinner.show();\n        this.apiService\n          .save(\n            ENDPOINTS.s2ApplicationForm + \"clearance/presentor/submit\",\n            this.s2Application\n          )\n          .subscribe(\n            (res: any) => {\n              this.hideSpinner();\n              this.sweetAlertService.customSuccessMessage(\n                this.sweetAlertService.customSuccessMessage(\n                  \"Application with reference no is applied for Clearance successfully.\"\n                )\n              );\n              this.navigateToS2List();\n            },\n            (err: any) => {\n              this.hideSpinner();\n            }\n          );\n      }\n    });\n  }\n\n  rejectDisapprovedModal(ascUser = \"\", action = \"\", status = \"\"): void {\n    // Swal.fire({\n    //   text: 'Are you sure you want to REJECT this application?',\n    //   icon: 'question',\n    //   showCancelButton: true,\n    //   confirmButtonColor: '#3085d6',\n    //   cancelButtonColor: '#d33',\n    //   confirmButtonText: 'Confirm'\n    // }).then((result) => {\n    //   if (result.value) {\n    //     this.apiService.save(ENDPOINTS.s2ApplicationFormEncoderReject, this.s2Application).subscribe(\n    //       (res: any) => {\n    //         this.sweetAlertService.customSuccessMessage('Application has been rejected successfully');\n    //         this.router.navigateByUrl('asc/page/application/s2/lists');\n    //       }\n    //     );\n    //   }\n    // })\n    const dialogRef = this.dialog.open(RejectDisapprovedReasonComponent, {\n      width: \"40%\",\n      height: \"45%\",\n      data: {\n        s2Application: this.s2Application,\n        ascUser: ascUser,\n        action: action,\n        status: status,\n        applicationStage: \"s2\",\n      },\n    });\n  }\n\n  incompleteDisapprovedRationale(ascUser = \"\", action = \"\", status = \"\"): void {\n    const dialogRef = this.dialog.open(\n      IncompleteDisapprovedRationaleComponent,\n      {\n        width: \"40%\",\n        height: \"65%\",\n        data: {\n          s2Application: this.s2Application,\n          ascUser: ascUser,\n          action: action,\n          status: status,\n          applicationStage: \"s2\",\n        },\n      }\n    );\n    dialogRef.afterClosed().subscribe((result) => {\n      console.log(\"The dialog was closed\", result);\n      if (result) {\n        this.getRationaleList();\n      }\n    });\n  }\n\n  getApplicationSingleMedia() {\n    this.spinner.show();\n    this.apiService\n      .findByParam(\n        ENDPOINTS.applicationSingleMedia,\n        `app-form-reference/${this.s2Application.applicationForm.appFormReference}`\n      )\n      .subscribe(\n        (res: any) => {\n          if (res.responseData.data.length > 0) {\n            this.applicationSingleMedia = res.responseData.data[0];\n          } else {\n            this.applicationSingleMedia = new ApplicationSingleMedia();\n          }\n          this.hideSpinner();\n        },\n        (err: any) => {\n          this.applicationSingleMedia = new ApplicationSingleMedia();\n          this.hideSpinner();\n        }\n      );\n  }\n\n  getAttachmentDocuments() {\n    console.log(\"apForm\", this.s2Application.applicationForm);\n    this.apiService\n      .findAll(\n        ENDPOINTS.attachmentDocumentByAppFormReference +\n          this.s2Application.applicationForm.appFormReference\n      )\n      .subscribe((res: any) => {\n        this.attachmentDocuments = res.responseData.data;\n\n        this.originalAttachmentDocuments = this.attachmentDocuments.originalAttachmentDocuments;\n        this.revisionAttachmentDocuments = this.attachmentDocuments.revisionAttachmentDocuments;\n        this.complianceAttachmentDocuments = this.attachmentDocuments.complianceAttachmentDocuments;\n\n        if (\n          this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT &&\n          this.s1Application.externalStatus === APPLICATION_STATUS.SAVED\n        ) {\n          this.materialInformation.originalAttachmentDocuments = this.attachmentDocuments.originalAttachmentDocuments;\n          this.materialInformation.revisionAttachmentDocuments = this.attachmentDocuments.revisionAttachmentDocuments;\n          this.materialInformation.complianceAttachmentDocuments = this.attachmentDocuments.complianceAttachmentDocuments;\n        }\n        console.log(\"view S2 attachmentDocuments: \", this.attachmentDocuments);\n        this.s2OriginalAttachmentObservable.next({\n          type: \"document\",\n          value: this.originalAttachmentDocuments,\n        });\n        this.s2OriginalAttachmentObservable.next({\n          type: \"application\",\n          value: this.s2Application,\n        });\n      });\n  }\n\n  getSupportiveDocuments() {\n    this.spinner.show();\n    this.apiService\n      .findByParam(\n        ENDPOINTS.supportiveDocument,\n        `application-form-id/${this.s2Application.applicationForm.id}`\n      )\n      .subscribe(\n        (res: any) => {\n          console.log(\"getSupportiveDocuments() \", res);\n          if (res.responseData.data.length > 0) {\n            this.supportiveDocumentList = res.responseData.data;\n          }\n          this.hideSpinner();\n        },\n        (err: any) => {\n          this.hideSpinner();\n          this.supportiveDocumentList = [];\n        }\n      );\n  }\n\n  getMultimediaStatic() {\n    this.apiService\n      .findByParam(\n        ENDPOINTS.applicationMultimedia,\n        `app-form-reference/${this.s2Application.applicationForm.appFormReference}`\n      )\n      .subscribe(\n        (res: any) => {\n          if (res.responseData.data.length > 0) {\n            this.multimediaStaticList = res.responseData.data;\n\n            if (\n              this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT &&\n              this.s2Application.applicationForm.externalStatus ===\n                APPLICATION_STATUS.SAVED\n            ) {\n              this.materialInformation.selectedMultimediaList = this.multimediaStaticList;\n            }\n\n            this.selectedMultimediaList = this.multimediaStaticList;\n          } else {\n            this.multimediaStaticList = [];\n          }\n        },\n        (err: any) => {\n          // this.multimediaStaticList = [];\n        }\n      );\n  }\n\n  getMultimediaMoving() {\n    this.apiService\n      .findByParam(\n        ENDPOINTS.applicationMultimedia,\n        `app-form-reference/${this.s2Application.applicationForm.appFormReference}`\n      )\n      .subscribe(\n        (res: any) => {\n          if (res.responseData.data.length > 0) {\n            this.multimediaMovingList = res.responseData.data;\n\n            if (\n              this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT &&\n              this.s2Application.applicationForm.externalStatus ===\n                APPLICATION_STATUS.SAVED\n            ) {\n              this.materialInformation.selectedMultimediaList = this.multimediaMovingList;\n            }\n            this.selectedMultimediaList = this.multimediaMovingList;\n          } else {\n            this.multimediaMovingList = [];\n          }\n        },\n        (err: any) => {\n          this.multimediaMovingList = [];\n        }\n      );\n  }\n\n  setDecisionStatus(i) {\n    this.decisionStatus = i;\n    // if (e === APPLICATION_STATUS_S2.DISAPPROVED) {\n    //   this.incompleteDisapprovedRationale('ad-specialist', 'disapproved', 'S2 APPLICATION DISAPPROVED');\n    // }else if(e === APPLICATION_STATUS_S2.INCOMPLETE) {\n    //   this.incompleteDisapprovedRationale('ad-specialist', 'incomplete', 'INCOMPLETE');\n    // }\n\n    if (\n      (i === APP_DECISION_STATUS.INCOMPLETE ||\n        i === APP_DECISION_STATUS.DISAPPROVED) &&\n      this.currentUserRole === USER_ROLES.ROLE_AD_SPECIALIST\n    ) {\n      if (\n        this.s2Application.internalStatus ===\n          \"RE_SUBMITTED_S2_APPLICATION_VERIFIED_BY_ENCODER\" &&\n        this.s2Application.decisionStatus === APP_DECISION_STATUS.INCOMPLETE\n      ) {\n        this.s2Application.validityDate = null;\n        // this.s2Application.decisionStatus = i;\n        this.incompleteDisapprovedRationale();\n      }\n    }\n  }\n\n  getAffiliationList() {\n    this.spinner.show();\n    this.apiService.findAll(ENDPOINTS.activeMembersAffiliation).subscribe(\n      (res: any) => {\n        this.affiliationList = res.responseData.data;\n        this.hideSpinner();\n      },\n      (err: any) => {\n        this.hideSpinner();\n      }\n    );\n  }\n\n  getCompanyList() {\n    this.spinner.show();\n    this.apiService.findAll(ENDPOINTS.activeCompanies).subscribe(\n      (res: any) => {\n        this.companyList = res.responseData.data;\n        this.hideSpinner();\n      },\n      (err: any) => {\n        this.hideSpinner();\n      }\n    );\n  }\n\n  getCompanyAddress(companyName) {\n    this.spinner.show();\n    this.showCompanyAddress = true;\n    this.isNewCompany = false;\n    this.apiService\n      .findByParam(\n        ENDPOINTS.company,\n        `/custom/search?companyName=` + companyName\n      )\n      .subscribe(\n        (res: any) => {\n          this.company = res.responseData.data;\n          this.hideSpinner();\n        },\n        (err: any) => {\n          this.hideSpinner();\n        }\n      );\n  }\n\n  clear(): void {\n    this.s2Application = new S2Application();\n    this.s1Application = new S1Application();\n  }\n\n  setFormValidator(): void {\n    this.s2ApplicationForm = this.formBuilder.group({\n      affiliation: [\"\", Validators.required],\n      validityDate: [\"\", Validators.required],\n      company: [\"\"],\n      decisionStatus: [\"\", Validators.required],\n    });\n  }\n\n  resetFormValidator(): void {\n    this.s2Application = new S2Application();\n    this.s1Application = new S1Application();\n    this.s2ApplicationForm.markAsUntouched();\n    this.s2ApplicationForm.markAsPristine();\n  }\n\n  showAudioVideo() {\n    this.isAudioVideo = !this.isAudioVideo;\n    this.audioVideo = this.isAudioVideo ? \"Audio\" : \"Video\";\n  }\n\n  selectFile(event, typeOfDocument) {\n    this.attachmentComponent.selectFile(event, typeOfDocument);\n  }\n\n  onAddFile(eventParam) {\n    const byteToMegaByte = 1000000; // 1 million byte = 1 mega byte\n\n    let finalMaterialType = \"\"; // temporary variable; TODO: remove\n    finalMaterialType = \"video\";\n    const maxFileSize =\n      finalMaterialType === \"video\"\n        ? 50\n        : finalMaterialType === \"audio\"\n        ? 20\n        : finalMaterialType === \"layout\"\n        ? 10\n        : 0;\n\n    if (eventParam.target.files) {\n      this.isShowUploadButton = false;\n      this.fileSize = eventParam.target.files[0].size;\n\n      // TODO validation of file size\n      if (\n        (this.fileSize > 50 * byteToMegaByte &&\n          finalMaterialType.toLowerCase() === \"video\") ||\n        (this.fileSize > 20 * byteToMegaByte &&\n          finalMaterialType.toLowerCase() === \"audio\") ||\n        (this.fileSize > 10 * byteToMegaByte &&\n          finalMaterialType.toLowerCase() === \"layout\")\n      ) {\n        this.sweetAlertService.customErrorMessage(\n          `Attachments total file size should not exceed ${maxFileSize}MB.`\n        );\n        eventParam.target.value = \"\";\n        return;\n      } else {\n        this.isShowUploadButton = true;\n        const fileURL = URL.createObjectURL(eventParam.target.files[0]);\n        this.safeURLFile = this.sanitizer.bypassSecurityTrustResourceUrl(\n          fileURL\n        );\n\n        const reader = new FileReader();\n        const [file] = eventParam.target.files;\n\n        reader.readAsDataURL(file);\n        reader.onload = () => {};\n\n        this.selectedFile = eventParam.target.files[0];\n      }\n    }\n  }\n\n  uploadAudioOrVideo() {\n    Swal.fire({\n      text: `Are you sure you want to upload this Final Material?`,\n      icon: \"question\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Confirm\",\n    }).then((result) => {\n      if (result.value) {\n        this.spinner.show();\n        let params = \"\";\n        let appFormRef = \"\";\n\n        if (this.s2Application.appFormReference) {\n          appFormRef = `&appFormReference=${this.s2Application.appFormReference}`;\n        }\n\n        if (\n          this.s2Application.internalStatus ===\n            APPLICATION_STATUS_FOR_COMPLIANCE.INCOMPLETE ||\n          this.s2Application.internalStatus === \"S2_APPLICATION_REJECTED\"\n        ) {\n          this.s2Application.submissionType = SUBMISSION_TYPE.COMPLIANCE;\n        }\n\n        params =\n          \"?&attachmentType=\" +\n          ATTACHMENT_TYPE.FINAL_MATERIAL +\n          \"&submissionType=\" +\n          this.s2Application.submissionType +\n          appFormRef;\n        this.fileStorageService\n          .pushFileToStorage(\n            ENDPOINTS.attachmentDocument,\n            this.selectedFile,\n            params\n          )\n          .subscribe(\n            (res: any) => {\n              console.log(res);\n\n              if (\n                !this.s2Application.appFormReference ||\n                this.s2Application.appFormReference === \"\"\n              ) {\n                this.s2Application.appFormReference =\n                  res.responseData.data.appFormReference;\n              }\n\n              if (\n                this.s2Application.submissionType === SUBMISSION_TYPE.COMPLIANCE\n              ) {\n                this.s2Application.submissionType = SUBMISSION_TYPE.ORIGINAL;\n                this.tempCompliance = res.responseData.data;\n                this.s2Application.finalMaterialAttachmentReference = this.tempCompliance?.finalMaterialAttachmentReference;\n              } else {\n                this.uploadedFinalMaterialFile = res.responseData.data;\n                this.addToAttachmentDocuments(this.uploadedFinalMaterialFile);\n                this.s2Application.finalMaterialAttachmentReference = this.uploadedFinalMaterialFile?.finalMaterialAttachmentReference;\n\n                if (this.s2Application.finalMaterialAttachmentReference) {\n                  this.getS2AttachmentDocument();\n                }\n              }\n              this.spinner.hide();\n              this.sweetAlertService.customSuccessMessage(\n                \"Attachment successfully uploaded.\"\n              );\n              this.selectedFile = null;\n            },\n            (err: any) => {\n              this.spinner.hide();\n              this.sweetAlertService.error(err);\n            },\n            () => {\n              // actions after subscription\n              this.spinner.hide();\n            }\n          );\n      } else {\n        this.selectedFile = null;\n      }\n    });\n  }\n\n  deleteUploadedFile2(obj) {\n    Swal.fire({\n      text: \"Are you sure you want to delete this document permanently?\",\n      icon: \"question\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Confirm\",\n    }).then((result) => {\n      if (result.value) {\n        this.spinner.show();\n        this.tempCompliance = null;\n        this.isShowUploadButton = false;\n        this.safeURLFile = null;\n        this.apiService\n          .save(ENDPOINTS.attachmentDocument + `/id/${obj.id}`, null)\n          .subscribe(\n            (res) => {\n              this.spinner.hide();\n              if (\n                obj.submissionType === SUBMISSION_TYPE.COMPLIANCE ||\n                obj.decisionStatus === APP_DECISION_STATUS.INCOMPLETE\n              ) {\n                this.s2ComplianceAttachmentDocuments = this.s2ComplianceAttachmentDocuments.filter(\n                  (data) => data?.id !== obj.id\n                );\n                this.myFinalMaterialFileInputC.nativeElement.value = \"\";\n                this.myFinalMaterialFileC.nativeElement.value = \"\";\n                this.tempCompliance = null;\n              } else {\n                this.s2OriginalAttachmentDocuments = this.s2OriginalAttachmentDocuments.filter(\n                  (data) => data?.id !== obj.id\n                );\n                this.myFinalMaterialFileInput.nativeElement.value = \"\";\n                this.myFinalMaterialFile.nativeElement.value = \"\";\n                console.log(\n                  \"s2 orig => \",\n                  this.s2ComplianceAttachmentDocuments\n                );\n              }\n              console.log(\"Attachment successfully deleted.\");\n\n              this.s2Application.finalMaterialAttachmentReference = null;\n              this.isShowUploadButton = false;\n              this.selectedFile = null;\n            },\n            (err: any) => {\n              this.spinner.hide();\n              this.sweetAlertService.error(err);\n            }\n          );\n      }\n    });\n  }\n\n  deleteUploadedFile() {\n    if (\n      this.s2Application.internalStatus === APPLICATION_STATUS.INCOMPLETE ||\n      this.s2Application.internalStatus === \"S2_APPLICATION_REJECTED\"\n    ) {\n      this.tempCompliance = null;\n      this.myFinalMaterialFileInputC.nativeElement.value = \"\";\n      this.myFinalMaterialFileC.nativeElement.value = \"\";\n    } else {\n      this.s2OriginalAttachmentDocuments[0] = null;\n      this.myFinalMaterialFileInput.nativeElement.value = \"\";\n      this.myFinalMaterialFile.nativeElement.value = \"\";\n    }\n    this.s2Application.finalMaterialAttachmentReference = null;\n    this.isShowUploadButton = false;\n    this.selectedFile = null;\n  }\n\n  addToAttachmentDocuments(obj: any) {\n    if (obj) {\n      this.attachmentDocument.finalMaterialAttachmentReference =\n        obj.finalMaterialAttachmentReference;\n      this.attachmentDocument.id = obj.id;\n      this.attachmentDocument.originalFilename = obj.originalFilename;\n      this.attachmentDocument.filename = obj.filename;\n      this.attachmentDocument.fileExtension = obj.fileExtension;\n      this.attachmentDocument.fileURL = obj.fileURL;\n      this.attachmentDocument.attachmentType = obj.attachmentType;\n      this.attachmentDocument.documentFormat = obj.documentFormat;\n      this.attachmentDocument.createdBy = this.currentUser.username;\n      this.attachmentDocument.createdDate = this.todayDate;\n\n      // if (this.s2Application.submissionType === SUBMISSION_TYPE.COMPLIANCE) {\n      //   this.tempCompliance = res.responseData.data;\n      //   this.addToAttachmentDocuments(this.tempCompliance);\n      // } else {\n      // }\n    } else {\n      this.spinner.hide();\n      console.log(\"Null attachment.\");\n      this.myFinalMaterialFile.nativeElement.value = \"\";\n      this.sweetAlertService.customErrorMessage(\n        \"Attachment cannot be uploaded.\"\n      );\n    }\n  }\n\n  getS2AttachmentDocument() {\n    this.spinner.show();\n    // TODO: Fetch list of existing compliance attachments\n    console.log(\n      ENDPOINTS.attachmentDocumentByS2AppFormReference +\n        this.s2Application.appFormReference\n    );\n    this.apiService\n      .findAll(\n        ENDPOINTS.attachmentDocumentByS2AppFormReference +\n          this.s2Application.appFormReference\n      )\n      .subscribe(\n        (res: any) => {\n          if (res.responseData.data) {\n            console.log(\n              \"S2 attachments: \",\n              res.responseData.data.originalAttachmentDocuments\n            );\n\n            this.attachmentDocuments = res.responseData.data;\n            this.s2OriginalAttachmentDocuments =\n              res.responseData.data.originalAttachmentDocuments;\n            // this.s2OriginalAttachmentObservable.next(this.s2OriginalAttachmentDocuments);\n            this.s2ComplianceAttachmentDocuments =\n              res.responseData.data.complianceAttachmentDocuments;\n            this.s2ComplianceAttachmentDocuments = this.s2ComplianceAttachmentDocuments?.filter(\n              (data) => data?.status !== \"UNPROCESSED\"\n            );\n            console.log(\"s2 Original => \", this.attachmentDocuments);\n            if (this.attachmentDocument.filename) {\n              this.isAudioVideo = this.attachmentDocument.documentFormat.includes(\n                \"audio\"\n              )\n                ? false\n                : true;\n            }\n          }\n          this.hideSpinner();\n        },\n        (err: any) => {\n          this.hideSpinner();\n          console.error(err);\n        }\n      );\n  }\n\n  viewFinalMedia(obj) {\n    window.open(obj.fileURL);\n  }\n\n  hideSpinner() {\n    setTimeout(() => {\n      this.spinner.hide();\n    }, 1);\n  }\n\n  navigateToS2List() {\n    setTimeout(() => {\n      this.router.navigateByUrl(\"asc/page/application/s2/lists\");\n    }, 2000);\n  }\n\n  getRationaleList(): void {\n    // Rationale Object\n    this.apiService\n      .findByParam(\n        ENDPOINTS.applicationRationaleS2,\n        `application-form-id/${this.s2Application.id}`\n      )\n      .subscribe((res: any) => {\n        this.rationaleOthersList = res.responseData.data;\n        this.rationaleOthersList = this.rationaleOthersList.filter(\n          (data) => data.others !== \"\"\n        );\n        console.log(\"RATIONALE LIST\", this.rationaleOthersList);\n      });\n    this.apiService\n      .findByParam(\n        ENDPOINTS.rationaleListS2,\n        `application-s2/${this.s2Application.id}`\n      )\n      .subscribe((res: any) => {\n        this.rationaleLists = res;\n        console.log(\"APPLICATION RATIONALE\", this.rationaleLists);\n      });\n  }\n\n  viewReport(id, filename) {\n    this.report.filename = filename;\n    this.report.format = \"pdf\";\n    (this.report.module = \"Form\"),\n      (this.report.params = { applicationFormS2Id: id });\n    console.log(this.report);\n    this.spinner.show();\n    this.apiService\n      .printReport(ENDPOINTS.generateReports, this.report)\n      .subscribe(\n        (data: any) => {\n          const newBlob = new Blob([data], { type: \"application/pdf\" });\n          const downloadURL = URL.createObjectURL(newBlob);\n          this.spinner.hide();\n          window.open(downloadURL);\n        },\n        (err: any) => {\n          this.spinner.hide();\n        }\n      );\n  }\n\n  submitAppeal() {\n    let endpoint;\n    if (this.isAdmin) {\n      endpoint = ENDPOINTS.admin + `/s2/verify/appeal`;\n    } else if (this.isAdSpecialist) {\n      endpoint = ENDPOINTS.s2ApplicationFormAdSpe + `verify/appeal`;\n    }\n\n    this.spinner.show();\n    this.apiService.save(endpoint, this.s2Application).subscribe(\n      (res: any) => {\n        this.spinner.hide();\n        this.sweetAlertService.success(res);\n        console.log(\"submitAppeal : \", res.responseData.data);\n        this.navigateToS2List();\n      },\n      (err: any) => {\n        this.spinner.hide();\n      }\n    );\n  }\n\n  sendDecisionOrStampMaterialManual(): void {\n    Swal.fire({\n      text: \"Are you sure you want to send this application form?\",\n      icon: \"question\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Confirm\",\n    }).then((result) => {\n      if (result.value) {\n        this.apiService\n          .save(\n            ENDPOINTS.s2ManualRelease + `/${this.s2Application.id}`,\n            this.s2Application\n          )\n          .subscribe((res: any) => {\n            this.sweetAlertService.customSuccessMessage(res.message);\n          });\n      }\n    });\n  }\n}\n","<form>\n  <div class=\"container-fluid\">\n    <!-- <div class=\"spinner\">\n      <ngx-spinner bdColor=\"rgba(0, 0, 0, 0.8)\" size=\"large\" color=\"#fff\" type=\"line-spin-fade\" [fullScreen]=\"false\">\n        <p> {{spinnerMessage}} </p>\n      </ngx-spinner>\n    </div> -->\n    <!-- <div class=\"row\">\n      <div class=\"col-md-12 title\">\n        <mat-label>\n          <mat-icon>list_alt</mat-icon> S2 APPLICATION\n        </mat-label>\n      </div>\n    </div> -->\n    <table>\n      <tr>\n        <td class=\"details-title\">\n          Reference Code:\n        </td>\n        <td class=\"details\">\n          <span>{{ s2Application?.externalStatus=='S2_APPLICATION_REJECTED' ? s2Application?.referenceCodeRejected :\n            s2Application?.applicationForm?.referenceCode | uppercase}}</span>\n        </td>\n        <td>\n          <div class=\"action-buttons\">\n            <button mat-button class=\"button-red\" (click)=\"accordion.openAll()\">\n              <mat-icon>open_in_full</mat-icon>\n            </button>\n            &nbsp;\n            <button mat-button class=\"button-red\" (click)=\"accordion.closeAll()\">\n              <mat-icon>close_fullscreen</mat-icon>\n            </button>\n          </div>\n          <button class=\"button-right button-red\" mat-raised-button [routerLink]=\"['/asc/page/application/s2/lists']\">\n            <mat-icon>list</mat-icon> VIEW APPLICATIONS\n          </button>\n        </td>\n      </tr>\n      <tr>\n        <td class=\"details-title\">\n          Status:\n        </td>\n        <td class=\"details\">\n          <span>{{s2Application?.externalStatus?.replaceAll('_',' ') | uppercase}}</span>\n        </td>\n        <!-- <td class=\"action-buttons\" *ngIf=\"s2Application?.internalStatus=='APPROVED' || s2Application?.internalStatus=='RE_SUBMITTED_S2_APPLICATION_VERIFIED_BY_AD_SPE' || s2Application?.internalStatus=='FOR_CLEARANCE_S2_APPLICATION' ||\n        s2Application?.internalStatus=='FOR_CLEARANCE_S2_APPLICATION_VERIFIED_BY_ENCODER'\"><span\n            class=\"badge bg-warning text-dark\">\n            <i class=\"material-icons\">domain_verification</i> APPLICATION FOR TOA/CLEARANCE</span></td> -->\n        <td class=\"action-buttons\" *ngIf=\"s2Application?.amount && s2Application?.submissionType === 'ORIGINAL'\">\n          <span class=\"badge bg-warning text-dark\">\n            <i class=\"material-icons\">paid</i> {{s2Application?.paymentStatus?.replaceAll('_',' ')}} : ₱ {{ s2Application?.amount }} </span>\n        </td>\n        <td class=\"action-buttons\" *ngIf=\"s2Application?.specialClearing\">\n          <span class=\"badge bg-warning text-dark\">\n            <i class=\"material-icons\">domain_verification</i> SPECIAL CLEARING</span>\n        </td>\n        <td class=\"action-buttons\" *ngIf=\"s2Application?.hasToa\">\n          <span class=\"badge bg-warning text-dark\">\n            <i class=\"material-icons\">domain_verification</i> Apply for TOA</span>\n        </td>\n        <td class=\"action-buttons\" *ngIf=\"s2Application?.decisionStatus==='APPROVED'\">\n          <span class=\"badge bg-warning text-dark\">\n            <i class=\"material-icons\">check</i> Valid Until: {{ s2Application?.validityDate | date:'MM/dd/yyyy'}}</span>\n        </td>\n      </tr>\n    </table>\n    <hr>\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <button mat-raised-button class=\"button-right button-red\"\n          *ngIf=\"(isAdmin || isSuperAdmin || isAdSpecialist) &&\n          s2Application?.internalStatus === 'APPROVED'\"\n          (click)=\"viewReport(s2Application.id, 'S2_Clearance')\"><i class=\"material-icons color__white\">open_in_new</i> CLEARANCE</button>\n\n        <button mat-raised-button class=\"button-right button-red\"\n          *ngIf=\"(isAdmin || isSuperAdmin || isAdSpecialist) &&\n          s2Application?.internalStatus === 'RE_SUBMITTED_S2_APPLICATION_VERIFIED_BY_ENCODER'\"\n          (click)=\"viewReport(s2Application.id, 'S2_Clearance')\"><i class=\"material-icons color__white\">open_in_new</i> PENDING FORM</button>\n        \n        <button mat-raised-button class=\"button-right button-red\" *ngIf=\"(currentUser?.userRole.name === 'ROLE_SUPER_ADMIN' || currentUser?.userRole.name === 'ROLE_ADMIN')\n        && (s2Application?.releaseStatus === 'FOR_RELEASE' || s2Application?.releaseStatus === 'RELEASED')\"\n          (click)=\"sendDecisionOrStampMaterialManual()\"><i class=\"material-icons color__white\">send</i>\n          SEND CLEARANCE OR TOA</button>\n      </div>\n    </div>\n    <form>\n      <mat-accordion class=\"headers-align\" multi>\n        <mat-expansion-panel>\n          <mat-expansion-panel-header>\n            <mat-panel-title>\n              <mat-icon>label_important</mat-icon> &nbsp;Client Information\n            </mat-panel-title>\n            <mat-panel-description>\n              Affiliation and Company details\n              <mat-icon>perm_contact_calendar</mat-icon>\n            </mat-panel-description>\n          </mat-expansion-panel-header>\n          <br>\n\n          <app-client-information [s2Application]=\"s2Application\">\n\n          </app-client-information>\n\n        </mat-expansion-panel>\n\n\n        <mat-expansion-panel>\n          <mat-expansion-panel-header>\n            <mat-panel-title>\n              <mat-icon>label_important</mat-icon> &nbsp;Material Information\n            </mat-panel-title>\n            <mat-panel-description>\n              Ads Details\n              <mat-icon>ads_click</mat-icon>\n            </mat-panel-description>\n          </mat-expansion-panel-header>\n          <br>\n          <app-material-information [s1Application]=\"s1Application\" [s2Application]=\"s2Application\"\n            [originalAttachmentDocuments]=\"originalAttachmentDocuments\" [revisionAttachmentDocuments]=\"revisionAttachmentDocuments\" [complianceAttachmentDocuments]=\"complianceAttachmentDocuments\"\n            [selectedMultimediaList]=\"selectedMultimediaList\" [applicationSingleMedia]=\"applicationSingleMedia\">\n          </app-material-information>\n\n        </mat-expansion-panel>\n\n        <!-- PREVIEW -->\n        <mat-expansion-panel [expanded]=\"true\">\n          <mat-expansion-panel-header>\n            <mat-panel-title>\n              <mat-icon>label_important</mat-icon> &nbsp;Final Material\n            </mat-panel-title>\n            <mat-panel-description>\n              Audio, Video, or Layout\n              <mat-icon>upload</mat-icon>\n            </mat-panel-description>\n          </mat-expansion-panel-header>\n          <br>\n\n          <div class=\"row\">\n            <div class=\"col-md-12\" appearance=\"outline\">\n              <div class=\"row fields\">\n                <h4>\n                  <i class=\"material-icons\">upload</i> &nbsp;Final Material\n                </h4>\n                <br>\n\n                <!-- FOR COMPLIANCE -->\n                <div *ngIf=\"s2Application?.internalStatus === 'INCOMPLETE' || s2Application?.internalStatus === 'S2_APPLICATION_REJECTED'\">\n                  <div class=\"col-md-12\" appearance=\"outline\">\n                    <b>FOR COMPLIANCE</b><br>\n                    <mat-label *ngIf=\"tempCompliance?.originalFilename\">Filename: </mat-label>\n\n                    <input #finalMaterialFileInputC matInput [value]=\"tempCompliance?.originalFilename\"\n                      *ngIf=\"tempCompliance?.originalFilename\" disabled>\n\n                    <input #finalMaterialFileC class=\"file-upload\"\n                      *ngIf=\"isApplicant && (s2Application?.decisionStatus === 'INCOMPLETE' || s2Application?.internalStatus === 'S2_APPLICATION_REJECTED')\"\n                      type=\"file\" accept=\"video/mp4, audio/mp3, image/jpg, image/jpeg, application/pdf, image/gif\"\n                      (change)=\"onAddFile($event)\" [hidden]=\"tempCompliance?.finalMaterialAttachmentReference\"/>\n\n                  </div>\n                  <div class=\"col-md-12\"><br></div>\n                  <div class=\"col-md-12\" appearance=\"outline\">\n\n                    <button mat-raised-button\n                      *ngIf=\"tempCompliance?.finalMaterialAttachmentReference\"\n                      class=\"button-red button-right\" (click)=\"viewFinalMedia(tempCompliance)\">\n                      <i class=\"material-icons color__white\">open_in_new</i> VIEW MATERIAL\n                    </button>\n                    &nbsp; &nbsp;\n                    <button mat-raised-button class=\"button-red button-right\" (click)=\"deleteUploadedFile2(tempCompliance)\"\n                      *ngIf=\"isApplicant &&\n                      (s2Application?.internalStatus === 'INCOMPLETE' || s2Application?.internalStatus === 'S2_APPLICATION_REJECTED') &&\n                      tempCompliance?.finalMaterialAttachmentReference\">\n                      <i class=\"material-icons color__white\">delete</i> DELETE ATTACHMENT\n                    </button>\n                    &nbsp; &nbsp;\n                    <button mat-raised-button class=\"button-red button-right\" (click)=\"uploadAudioOrVideo()\"\n                    *ngIf=\"isApplicant && safeURLFile\"\n                    [hidden]=\"tempCompliance?.finalMaterialAttachmentReference\">\n                      <i class=\"material-icons color__white\">upload</i> UPLOAD\n                    </button>\n                  </div>\n                  <div class=\"row\"><br><br></div>\n                  <div class=\"row\"><hr></div>\n                </div>\n                <!-- END OF FOR COMPLIANCE -->\n\n                <!-- FOR ORIGINAL ONLY -->\n                <div class=\"col-md-12\" appearance=\"outline\">\n                  <!-- <b>{{s2OriginalAttachmentDocuments[0]?.submissionType | uppercase}}</b><br> -->\n                  <mat-label *ngIf=\"s2OriginalAttachmentDocuments[0]?.originalFilename\">Filename: </mat-label>\n                  <input #finalMaterialFileInput matInput [value]=\"s2OriginalAttachmentDocuments[0]?.originalFilename\"\n                    *ngIf=\"s2OriginalAttachmentDocuments[0]?.originalFilename\" disabled>\n\n                  <input #finalMaterialFile class=\"file-upload\"\n                    *ngIf=\"isApplicant&&(s2Application?.internalStatus==='SAVED'||s2Application?.internalStatus==='INCOMPLETE'||s2Application?.internalStatus==='S2_APPLICATION_REJECTED')\"\n                    type=\"file\" accept=\"video/mp4, audio/mp3, image/jpg, image/jpeg, application/pdf, image/gif\"\n                    (change)=\"onAddFile($event)\" [hidden]=\"s2Application?.decisionStatus === 'INCOMPLETE' || s2Application?.finalMaterialAttachmentReference\"/>\n                </div>\n                <div class=\"col-md-12\"><br></div>\n                <div class=\"col-md-12\" appearance=\"outline\"\n                  *ngIf=\"isShowUploadButton||s2Application?.decisionStatus === 'INCOMPLETE'\">\n                  <button mat-raised-button\n                    *ngIf=\"s2Application?.finalMaterialAttachmentReference || s2Application?.internalStatus==='INCOMPLETE'||s2Application?.internalStatus==='S2_APPLICATION_REJECTED'\"\n                    class=\"button-red button-right\" (click)=\"viewFinalMedia(s2OriginalAttachmentDocuments[0])\">\n                    <i class=\"material-icons color__white\">open_in_new</i> VIEW MATERIAL\n                  </button>\n                  &nbsp; &nbsp;\n                  <button mat-raised-button class=\"button-red button-right\" (click)=\"deleteUploadedFile2(s2OriginalAttachmentDocuments[0])\"\n                    *ngIf=\"isApplicant &&\n                    (s2Application?.internalStatus==='SAVED' || s2Application?.internalStatus==='INCOMPLETE'||s2Application?.internalStatus==='S2_APPLICATION_REJECTED') &&\n                    s2Application?.finalMaterialAttachmentReference\"\n                    [hidden]=\"s2Application?.decisionStatus === 'INCOMPLETE'\">\n                    <i class=\"material-icons color__white\">delete</i> DELETE ATTACHMENT\n                  </button>\n                  &nbsp; &nbsp;\n                  <button mat-raised-button class=\"button-red button-right\" (click)=\"uploadAudioOrVideo()\" *ngIf=\"isApplicant &&\n                    (s2Application?.internalStatus==='SAVED' || s2Application?.internalStatus==='INCOMPLETE'||s2Application?.internalStatus==='S2_APPLICATION_REJECTED') &&\n                    !s2Application?.finalMaterialAttachmentReference\">\n                    <i class=\"material-icons color__white\">upload</i> UPLOAD\n                  </button>\n                </div>\n                <!-- END OF ORIGINAL ONLY -->\n\n                <div class=\"col-md-12\"><br></div>\n\n                <!---------- EXISTING COMPLIANCE ---------->\n                <div *ngIf=\"s2Application?.decisionStatus === 'INCOMPLETE'\">\n                  <div class=\"row\"><hr></div>\n                      <h4>\n                        <i class=\"material-icons\">bookmark</i> &nbsp;ATTACHMENTS FOR COMPLIANCE\n                      </h4>\n                      <br>\n                      <div class=\"row\" *ngFor=\"let i of s2ComplianceAttachmentDocuments; let index = index\">\n                        <div *ngIf=\"i !== null\">\n                          <div class=\"col-md-12\" appearance=\"outline\">\n                            <mat-label *ngIf=\"i?.originalFilename\">Filename: </mat-label>\n                            <input #mainInput matInput [value]=\"i?.originalFilename\" disabled *ngIf=\"i?.originalFilename\"><br>\n                          </div>\n\n                          <div class=\"row\"><br></div>\n                          <div class=\"col-md-12\" appearance=\"outline\">\n                            <button mat-raised-button class=\"button-red button-right\" (click)=\"viewFinalMedia(i)\">\n                              <i class=\"material-icons add-document\">open_in_new</i> VIEW DOCUMENT\n                            </button>\n                            &nbsp; &nbsp;\n                            <button mat-raised-button class=\"button-red button-right\" (click)=\"deleteUploadedFile2(i)\" *ngIf=\"i?.status === 'UNPROCESSED'\">\n                              <i class=\"material-icons add-document\">delete</i> DELETE ATTACHMENT\n                            </button>\n                            &nbsp; &nbsp;\n                          </div>\n                          <div class=\"col-md-12\"><br></div>\n                          <div class=\"col-md-12\">\n                            <hr>\n                          </div>\n                      </div>\n                    </div>\n                  <div class=\"no-record\" *ngIf=\"(s2ComplianceAttachmentDocuments?.length === 0 && s2ComplianceAttachmentDocuments[0]?.originalFilename === undefined) || s2ComplianceAttachmentDocuments?.length===null\">\n                    No existing attachments for compliance.\n                  </div>\n                </div>\n           </div>\n\n              <!-- /////////////////////////////// -->\n\n              <!-- FOR AD SPE - S2 APP -->\n              <!-- <mat-form-field class=\"col-md-6\" appearance=\"outline\">\n                <mat-label>Valid Until</mat-label>\n                <input type=\"tel\" matInput placeholder=\"Search\">\n                <mat-icon matSuffix>calendar_today</mat-icon>\n              </mat-form-field> -->\n            </div>\n          </div>\n\n        </mat-expansion-panel>\n\n\n        <!--\n\n          SUPPORT DOCUMENT\n          -->\n          <mat-expansion-panel [expanded]=\"true\">\n            <mat-expansion-panel-header>\n              <mat-panel-title>\n                <mat-icon>label_important</mat-icon> &nbsp;Support Document\n              </mat-panel-title>\n              <mat-panel-description>\n                PDF\n                <mat-icon>upload</mat-icon>\n              </mat-panel-description>\n            </mat-expansion-panel-header>\n            <br>\n\n          \n            <app-attachment-document [s1Application]=\"s1Application\" [labelMainDocument]=\"'Support Document'\"\n            [isAscUser]=\"isAscUser\"  [s2Appplication]=\"s2Application\" \n            [complianceAttachmentDocuments]=\"complianceAttachmentDocuments\" [s2SupportAttchmentDocuments]=\"originalAttachmentDocuments\" [s2DocObservable]=\"s2OriginalAttachmentObservable\"\n            [applicationStage]=\"applicationStage\" [S2SupportDoc]=\"true\"></app-attachment-document>\n \n                      <!-- \n    \n                        START UPLOAD SUPPORTING\n    \n    \n                       -->\n    \n\n        </mat-expansion-panel>\n          <!-- END SUPPORT -->\n\n        \n        <app-comment *ngIf=\"!isApplicant\" [commentS2Application]=\"s2Application\">\n        </app-comment>\n      </mat-accordion>\n\n      <!-- ATTACHMENTS FOR STAMPED MATERIAL AND DECISION FORM -->\n      <div *ngIf=\"(isAdmin || isSuperAdmin || isApplicant || isAdSpecialist) && previewAttachmentsList.length\">\n        <br>\n        <div class=\"row fields\">\n          <h4>\n            <i class=\"material-icons\">label_important</i> &nbsp;Clearance and TOA\n          </h4>\n          <br>\n          <app-preview-attachments [previewAttachmentsList]=\"previewAttachmentsList\"\n            [displayedColumns]=\"previewAttachmentsDisplayedColumns\"\n            [dataSource]=\"previewAttachmentsListDataSource\"></app-preview-attachments>\n          <div class=\"row\"><br></div>\n        </div>\n      </div>\n\n    </form>\n\n    <hr>\n\n    <!-- For adSpe only -->\n    <div class=\"row\" [hidden]=\"s2Application?.internalStatus === 'RE_SUBMITTED_S2_APPLICATION_VERIFIED_BY_AD_SPE' ||\n    s2Application?.internalStatus === 'S2_APPLICATION_VERIFIED_BY_AD_SPE'\" [formGroup]=\"s2ApplicationForm\">\n      <mat-form-field class=\"col-md-6\" appearance=\"outline\" *ngIf=\"isAdSpecialist || (isAdSpecialist && s2Application?.hasOngoingAppeal)\">\n        <mat-label>Decision:</mat-label>\n        <mat-select (selectionChange)=\"setDecisionStatus($event.value)\" name=\"decisionStatus\"\n          formControlName=\"decisionStatus\">\n          <mat-option value=\"APPROVED\">APPROVED</mat-option>\n          <mat-option *ngIf=\"s2Application?.internalStatus !='FOR_CLEARANCE_S2_APPLICATION_VERIFIED_BY_ENCODER'\"\n            value=\"INCOMPLETE\">INCOMPLETE</mat-option>\n          <mat-option value=\"DISAPPROVED\">DISAPPROVED</mat-option>\n        </mat-select>\n      </mat-form-field>\n      <mat-form-field class=\"col-md-6\" appearance=\"outline\"\n        *ngIf=\"isAdSpecialist &&\n        s2Application?.internalStatus != 'FOR_CLEARANCE_S2_APPLICATION_VERIFIED_BY_ENCODER' && decisionStatus === 'APPROVED'\">\n        <mat-label>Choose validity date</mat-label>\n        <input matInput placeholder=\"Date\" [matDatepicker]=\"validityDate\" readonly [min]=\"todayDate\"\n          [(ngModel)]=\"s2Application.validityDate\" name=\"expiresOn\" formControlName=\"validityDate\" [readonly]=\"true\">\n        <mat-datepicker-toggle matSuffix [for]=\"validityDate\">\n          <mat-datepicker color=\"warn\" #validityDate></mat-datepicker>\n        </mat-datepicker-toggle>\n      </mat-form-field>\n\n      <div class=\"row\" *ngIf=\"rationaleLists?.length > 0 || rationaleOthersList?.length > 0\" [hidden]=\"rationaleLists?.length === 0 && rationaleOthersList.length === 0\">\n        <div class=\"col-md-6 rationale\">\n          <label>RATIONALE</label>\n          <div class=\"rationale-list\" *ngIf=\"rationaleLists.length > 0\">\n            <label>Rationale List:</label>\n            <div *ngFor=\"let i of rationaleLists\">\n              <p><span class=\"material-icons\">help</span> {{i?.typeOfRationale?.rationale}}</p>\n            </div>\n          </div>\n\n          <div class=\"rational-other-comment\" *ngIf=\"rationaleOthersList?.length > 0\">\n            <label>Other comments:</label>\n            <div *ngFor=\"let i of rationaleOthersList\">\n              <p><span class=\"material-icons\">help</span> {{i?.others}}</p>\n            </div>\n\n          </div>\n        </div>\n      </div>\n\n    </div>\n\n    <br>\n    <div class=\"row\">\n      <b\n        *ngIf=\"isAdSpecialist && s2Application?.decisionStatus === 'APPROVED' && s2Application?.validityDate === null\"><b\n          class=\"material-icons\">error_outline</b> Note: To submit approve application, please add validity\n        date.</b><br>\n    </div>\n    <div class=\"row\">\n      <div class=\"col\">\n        <!-- ORIGINAL -->\n        <button *ngIf=\"s2Application?.decisionStatus !== 'INCOMPLETE' && s2Application?.internalStatus !== 'S2_APPLICATION_REJECTED'\"\n          mat-raised-button class=\"button-red\" (click)=\"saveStatus()\" [hidden]=\"\n          s2Application?.internalStatus === 'RE_SUBMITTED_S2_APPLICATION_VERIFIED_BY_AD_SPE' ||\n          s2Application?.internalStatus === 'S2_APPLICATION_VERIFIED_BY_AD_SPE' || s2Application?.internalStatus === 'APPROVED' ||\n          s2Application?.internalStatus == 'FOR_CLEARANCE_S2_APPLICATION' || s2Application?.internalStatus == 'FOR_CLEARANCE_S2_APPLICATION_VERIFIED_BY_ENCODER' ||\n          s2Application?.internalStatus == 'FOR_CLEARANCE_S2_APPLICATION_VERIFIED_BY_AD_SPE' ||\n          s2Application?.hasOngoingAppeal\"\n          [disabled]=\"s2Application?.finalMaterialAttachmentReference === null ||\n          (isAdSpecialist && s2Application?.decisionStatus === 'APPROVED' && s2Application?.validityDate === null)\">\n\n          <div\n            *ngIf=\"isApplicant&&(s2Application?.internalStatus==='SAVED')\">\n            <i class=\"material-icons\">verified</i> SUBMIT\n          </div>\n          <div *ngIf=\"isEvaluator\"><i class=\"material-icons\">verified</i> FORWARD TO\n            AD SPECIALIST</div>\n          <div *ngIf=\"isAdSpecialist\"><i class=\"material-icons\">check</i> SUBMIT\n          </div>\n        </button>\n\n        <!-- INCOMPLETE -->\n        <button mat-raised-button *ngIf=\"s2Application?.decisionStatus ==='INCOMPLETE' || s2Application?.decisionStatus === 'S2_APPLICATION_REJECTED'\" class=\"button-red\"\n          (click)=\"saveStatusForCompliance()\"\n          [disabled]=\"!s2Application?.decisionStatus ||\n          (isAdSpecialist && decisionStatus === '') ||\n          (isAdSpecialist && decisionStatus === 'APPROVED' && s2Application?.validityDate === null) ||\n          (isAdSpecialist && (decisionStatus === 'INCOMPLETE' || decisionStatus === 'DISAPPROVED') && rationaleLists.length === 0 && rationaleOthersList.length === 0)\">\n          <div *ngIf=\"isApplicant\"\n            [hidden]=\"s2Application?.decisionStatus !== 'INCOMPLETE' || s2Application?.internalStatus === 'RE_SUBMITTED_S2_APPLICATION' || s2Application?.internalStatus ==='RE_SUBMITTED_S2_APPLICATION_VERIFIED_BY_ENCODER'\">\n            <i class=\"material-icons\">fact_check</i> SUBMIT FOR COMPLIANCE\n          </div>\n          <div *ngIf=\"isEvaluator\"><i class=\"material-icons\">fact_check</i> FORWARD\n            TO AD SPECIALIST FOR COMPLIANCE</div>\n          <div *ngIf=\"isAdSpecialist\"><i class=\"material-icons\">fact_check</i>\n            SUBMIT COMPLIANCE</div>\n        </button>\n\n        <button mat-raised-button\n          *ngIf=\"isEvaluator && s2Application?.internalStatus != 'FOR_CLEARANCE_S2_APPLICATION'\"\n          class=\"button-red\" (click)=\"rejectDisapprovedModal('encoder', 'reject', 'S2 APPLICATION REJECTED')\">\n          <i class=\"material-icons color__white\">cancel</i> REJECT\n        </button>\n\n        <!-- ADMIN / SUPERADMIN - RELEASED -->\n        <button mat-raised-button class=\"button-red\" (click)=\"submitAppeal()\"  *ngIf=\"(isAdmin || isSuperAdmin) &&\n        s2Application?.externalStatus === 'APPROVED' && s1Application?.releaseStatus === 'RELEASED' &&\n        !s1Application?.hasOngoingCompliance && !s1Application?.hasOngoingAppeal\">\n          <i class=\"material-icons color__white\">report_gmailerrorred</i> &nbsp;RETURN TO ADSPE FOR APPEAL\n        </button>\n\n        <!-- APPEAL - ADSPE -->\n        <button mat-raised-button class=\"button-red\" (click)=\"submitAppeal()\"  *ngIf=\"isAdSpecialist && s2Application?.hasOngoingAppeal\">\n          <i class=\"material-icons color__white\">report_gmailerrorred</i> &nbsp;VERIFY APPEAL\n        </button>\n      </div>\n    </div>\n\n    <!-- <div class=\"row\">\n      <div class=\"col\">\n        <button mat-raised-button *ngIf=\"s2Application?.internalStatus == 'APPROVED' ||\n         s2Application?.internalStatus == 'RE_SUBMITTED_S2_APPLICATION_VERIFIED_BY_AD_SPE' ||\n         s2Application?.internalStatus == 'FOR_CLEARANCE_S2_APPLICATION' ||\n         s2Application?.internalStatus == 'FOR_CLEARANCE_S2_APPLICATION_VERIFIED_BY_ENCODER' \" class=\"button-red\"\n          (click)=\"saveStatusForClearance()\" [hidden]=\"\">\n          <div *ngIf=\"isApplicant\"><i class=\"material-icons\">fact_check</i> SUBMIT\n            APPLICATION FOR CLEARANCE</div>\n          <div *ngIf=\"isEvaluator\"><i class=\"material-icons\">fact_check</i> FORWARD\n            TO AD SPECIALIST FOR CLEARANCE</div>\n          <div *ngIf=\"isAdSpecialist\"><i class=\"material-icons\">fact_check</i>\n            SUBMIT CLEARANCE</div>\n        </button>\n        <button mat-raised-button\n          *ngIf=\"isEvaluator && s2Application?.internalStatus == 'FOR_CLEARANCE_S2_APPLICATION'\"\n          class=\"button-red\" (click)=\"rejectApplication()\">\n          <i class=\"material-icons color__white\">cancel</i> REJECT\n        </button>\n      </div>\n    </div> -->\n\n    <!-- <div class=\"row\">\n      <div class=\"col\">\n        <button mat-raised-button\n          *ngIf=\"isApplicant && s2Application?.internalStatus == 'APPROVED' || s2Application?.internalStatus == 'RE_SUBMITTED_S2_APPLICATION_VERIFIED_BY_AD_SPE'\"\n          [hidden]=\"isAdSpecialist\" class=\"button-red\"\n          (click)=\"applyApplicationForClearance()\">\n          <i class=\"material-icons color__white\">fact_check</i> APPLY FOR TOA\n        </button>\n      </div>\n    </div> -->\n\n  </div>\n</form>\n","import { Observable, Subject } from \"rxjs\";\nimport { DatePipe } from \"@angular/common\";\nimport {\n  Component,\n  ElementRef,\n  Inject,\n  Input,\n  OnInit,\n  ViewChild,\n  OnChanges,\n  SimpleChanges,\n} from \"@angular/core\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport {\n  ATTACHMENT_TYPE,\n  APP_DECISION_STATUS,\n  SUBMISSION_TYPE,\n  APPLICATION_STATUS,\n  APPLICATION_STATUS_REVISION,\n  APPLICATION_STATUS_FOR_COMPLIANCE,\n} from \"@shared\";\nimport {\n  AttachmentDocument,\n  S1Application,\n  S2Application,\n  UserAccount,\n} from \"@models\";\nimport { ApiService, DataStorageService, SweetAlertService } from \"@services\";\nimport { ENDPOINTS } from \"@shared\";\nimport Swal from \"sweetalert2\";\nimport { NgxSpinnerService } from \"ngx-spinner\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport {\n  MatDialog,\n  MatDialogRef,\n  MAT_DIALOG_DATA,\n} from \"@angular/material/dialog\";\nimport { DomSanitizer } from \"@angular/platform-browser\";\nimport { FileStorageService } from \"app/core/services/file.storage.service\";\n\n@Component({\n  selector: \"app-attachment-document\",\n  templateUrl: \"./attachment-document.component.html\",\n  styleUrls: [\"./attachment-document.component.scss\"],\n})\nexport class AttachmentDocumentComponent implements OnInit, OnChanges {\n  attachmentDocuments = [];\n  @Input() originalAttachmentDocuments = [];\n  @Input() revisionAttachmentDocuments = [];\n  @Input() complianceAttachmentDocuments = [];\n  @Input() s2SupportAttchmentDocuments;\n  @Input() s2DocObservable: Subject<any> = new Subject();\n  s2SupportDocument: any = {};\n  @Input() S2SupportDoc: Boolean = false;\n\n  tempRevisionAttachmentDocuments = [];\n  tempComplianceAttachmentDocuments = [];\n\n  @Input() s2Appplication = new S2Application();\n  @Input() s1Application = new S1Application();\n  @Input() labelMainDocument = \"\";\n  @Input() isAscUser = false;\n  @Input() isDisableFieldOnUpdate = false;\n  @Input() applicationStage = \"\";\n\n  showMainDocumentUploadButton = false;\n  showMainDocumentUploadButtonR = false;\n  showMainDocumentUploadButtonC = false;\n\n  showMainDocumentViewButton = false;\n  showMainDocumentViewButtonR = false;\n  showMainDocumentViewButtonC = false;\n\n  safeURLMainDoc: any;\n  safeURLMainDocR: any;\n  safeURLMainDocC: any;\n\n  uploadedFileMain: any;\n  @ViewChild(\"mainFile\")\n  myMainFile: ElementRef;\n  @ViewChild(\"mainInput\")\n  myMainInput: ElementRef;\n\n  showSupportDocumentFrame = false;\n  showSupportDocumentFrameR = false;\n  showSupportDocumentFrameC = false;\n\n  showSupportiveDocumentUploadButton = false;\n  showSupportiveDocumentUploadButtonR = false;\n  showSupportiveDocumentUploadButtonC = false;\n\n  showSupportiveDocumentViewButton = false;\n  showSupportiveDocumentViewButtonR = false;\n  showSupportiveDocumentViewButtonC = false;\n\n  safeURLSupportDoc: any;\n  safeURLSupportDocR: any;\n  safeURLSupportDocC: any;\n\n  uploadedFileSupportive: any;\n  @ViewChild(\"supportiveFile\")\n  mySupportiveFile: ElementRef;\n  @ViewChild(\"supportiveInput\")\n  mySupportiveInput: ElementRef;\n\n  revisionLetterAttachment: any;\n  showRevisionLetterViewButton = false;\n  showRevisionLetterUploadButton = false;\n  safeURLRevisionLetter: any;\n  uploadedFileRevision: any;\n\n  @ViewChild(\"revisionLetterFile\")\n  myRevisionLetterFile: ElementRef;\n  @ViewChild(\"revisionLetterInput\")\n  myRevisionLetterInput: ElementRef;\n\n  todayDate: Date = new Date();\n  attachmentType = ATTACHMENT_TYPE.MAIN;\n  submissionType = SUBMISSION_TYPE.ORIGINAL;\n  mainDocAttachmentSize = 0;\n  supportDocAttachmentSize = 0;\n  revisionDocAttachmentSize = 0;\n  attachmentSizeForUpload: number;\n  selectedFiles: FileList;\n  currentFileUpload: File;\n  progress: { percentage: number } = { percentage: 0 };\n\n  attachmentDocumentForm: FormGroup;\n  id: any;\n  currentUser: UserAccount;\n  attachmentDocument = new AttachmentDocument();\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private dataStorageService: DataStorageService,\n    private sweetAlertService: SweetAlertService,\n    private dataStorage: DataStorageService,\n    private apiService: ApiService,\n    public datepipe: DatePipe,\n    private spinner: NgxSpinnerService,\n    private route: ActivatedRoute,\n    private dialog: MatDialog,\n    private sanitizer: DomSanitizer,\n    private fileStorageService: FileStorageService,\n    private router: Router\n  ) {}\n  ngOnChanges(changes: SimpleChanges): void {}\n\n  ngOnInit(): void {\n    this.id = Number(this.route.snapshot.paramMap.get(\"id\"));\n    this.currentUser = this.dataStorage.getUserAccount();\n    this.setFormValidator();\n    console.log(\"----1 => \", this.s2Appplication);\n    this.s2DocObservable.subscribe((res) => {\n      if (res.type === \"application\") {\n        this.s2Appplication = res.value;\n      } else if (res.type === \"document\") {\n        console.log(\"s2 document\", res.value);\n        this.s2SupportDocument = res.value.filter(\n          (r) => r.attachmentType === ATTACHMENT_TYPE.SUPPORTIVE\n        )[this.s1Application.hasNoSupportingDocs ? 0 : 1];\n      }\n    });\n    console.log(\"S2222 => \", this.s2SupportAttchmentDocuments);\n  }\n\n  validateDeleteBtn(): boolean {\n    if (\n      this.currentUser.accountType === \"APPLICANT\" &&\n      this.s2Appplication.internalStatus &&\n      this.s2SupportDocument &&\n      this.s2SupportAttchmentDocuments.filter(\n        (r) => r.attachmentType === ATTACHMENT_TYPE.SUPPORTIVE\n      )[this.s1Application.hasNoSupportingDocs ? 0 : 1]\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  changeTab(evt) {\n    if (evt.tab) {\n      const label = evt.tab.textLabel;\n      if (label === \"REVISION\" || label === \"COMPLIANCE\") {\n        this.s1Application.hasNoSupportingDocs = false;\n      }\n    }\n  }\n  selectS2SupprtDoc(event) {\n    console.log(\"================= \", this.s2SupportAttchmentDocuments);\n    // checking of file type;\n    if (event.target.files[0].type !== \"application/pdf\") {\n      this.sweetAlertService.customErrorMessage(\n        \"Attachment should be in PDF format only.\"\n      );\n      event.target.value = \"\";\n      return;\n    }\n\n    // getting the file size.\n    this.attachmentType = ATTACHMENT_TYPE.SUPPORTIVE;\n    console.log(\"S2 Support Doc =>\", event.target.files);\n    this.supportDocAttachmentSize = event.target.files[0].size;\n\n    let attachmentSize =\n      this.mainDocAttachmentSize +\n      this.supportDocAttachmentSize +\n      this.revisionDocAttachmentSize;\n\n    // file size checking and validation\n    if (attachmentSize > 15000000) {\n      // 1MB = 1M : FOR INTEGRATION\n      this.sweetAlertService.customErrorMessage(\n        `Attachments' total file size should not exceed 15MB.`\n      );\n      event.target.value = \"\";\n      return;\n    } else {\n      // creating document object url\n      const pdfURL = URL.createObjectURL(event.target.files[0]);\n      this.attachmentSizeForUpload = event.target.files[0].size;\n      this.safeURLSupportDoc = this.sanitizer.bypassSecurityTrustResourceUrl(\n        pdfURL\n      );\n      this.showSupportiveDocumentUploadButton = true;\n\n      const reader = new FileReader();\n      const [file] = event.target.files;\n\n      reader.readAsDataURL(file);\n      reader.onload = () => {};\n    }\n    this.selectedFiles = event.target.files;\n  }\n  selectFile(event, typeOfDocument) {\n    this.attachmentType = typeOfDocument;\n    if (event.target.files[0].type === \"application/pdf\") {\n      if (this.attachmentType === ATTACHMENT_TYPE.MAIN) {\n        this.mainDocAttachmentSize = event.target.files[0].size;\n      } else if (this.attachmentType === ATTACHMENT_TYPE.SUPPORTIVE) {\n        this.supportDocAttachmentSize = event.target.files[0].size;\n      } else if (this.attachmentType === ATTACHMENT_TYPE.REVISION_LETTER) {\n        this.revisionDocAttachmentSize = event.target.files[0].size;\n      }\n      let attachmentSize =\n        this.mainDocAttachmentSize +\n        this.supportDocAttachmentSize +\n        this.revisionDocAttachmentSize;\n\n      if (attachmentSize > 15000000) {\n        // 1MB = 1M : FOR INTEGRATION\n        this.sweetAlertService.customErrorMessage(\n          `Attachments' total file size should not exceed 15MB.`\n        );\n        event.target.value = \"\";\n        return;\n      } else {\n        const pdfURL = URL.createObjectURL(event.target.files[0]);\n\n        this.attachmentSizeForUpload = event.target.files[0].size;\n\n        if (this.attachmentType === ATTACHMENT_TYPE.MAIN) {\n          this.safeURLMainDoc = this.sanitizer.bypassSecurityTrustResourceUrl(\n            pdfURL\n          );\n          this.showMainDocumentUploadButton = true;\n        } else if (this.attachmentType === ATTACHMENT_TYPE.SUPPORTIVE) {\n          this.safeURLSupportDoc = this.sanitizer.bypassSecurityTrustResourceUrl(\n            pdfURL\n          );\n          this.showSupportiveDocumentUploadButton = true;\n        } else if (this.attachmentType === ATTACHMENT_TYPE.REVISION_LETTER) {\n          this.safeURLRevisionLetter = this.sanitizer.bypassSecurityTrustResourceUrl(\n            pdfURL\n          );\n          this.showRevisionLetterUploadButton = true;\n        }\n\n        // original-approved - for revision\n        // revision\n        if (\n          (this.submissionType === SUBMISSION_TYPE.REVISION &&\n            this.s1Application.decisionStatus !==\n              APP_DECISION_STATUS.INCOMPLETE) ||\n          ((this.s1Application.internalStatus ===\n            APPLICATION_STATUS.S1_APPLICATION_REVIEWED ||\n            this.s1Application.internalStatus ===\n              APPLICATION_STATUS_FOR_COMPLIANCE.COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER) &&\n            (this.s1Application.decisionStatus ===\n              APPLICATION_STATUS.APPROVED ||\n              this.s1Application.decisionStatus === \"APPROVED W/ CAUTION\"))\n        ) {\n          this.safeURLMainDocR = this.safeURLMainDoc;\n          this.safeURLSupportDocR = this.safeURLSupportDoc;\n\n          this.showMainDocumentUploadButtonR = this.showMainDocumentUploadButton;\n          this.showSupportiveDocumentUploadButtonR = this.showSupportiveDocumentUploadButton;\n\n          if (this.tempRevisionAttachmentDocuments.length === 0) {\n            this.s1Application.mainAttachmentReference = null;\n            this.s1Application.supportingAttachmentReference = null;\n            this.s1Application.revisionLetterAttachmentReference = null;\n          }\n        }\n\n        // original-incomplete - original\n        // revision-incomplete\n        // for compliance\n        else if (\n          this.submissionType === SUBMISSION_TYPE.COMPLIANCE ||\n          (this.s1Application.internalStatus ===\n            APPLICATION_STATUS.S1_APPLICATION_REVIEWED &&\n            this.s1Application.decisionStatus ===\n              APPLICATION_STATUS.INCOMPLETE) ||\n          (this.submissionType === SUBMISSION_TYPE.REVISION &&\n            this.s1Application.decisionStatus ===\n              APP_DECISION_STATUS.INCOMPLETE)\n        ) {\n          this.safeURLMainDocC = this.safeURLMainDoc;\n          this.safeURLSupportDocC = this.safeURLSupportDoc;\n\n          this.showMainDocumentUploadButtonC = this.showMainDocumentUploadButton;\n          this.showSupportiveDocumentUploadButtonC = this.showSupportiveDocumentUploadButton;\n\n          if (this.tempComplianceAttachmentDocuments.length === 0) {\n            this.s1Application.mainAttachmentReference = null;\n            this.s1Application.supportingAttachmentReference = null;\n            this.s1Application.revisionLetterAttachmentReference = null;\n          }\n        }\n\n        const reader = new FileReader();\n        const [file] = event.target.files;\n\n        reader.readAsDataURL(file);\n        reader.onload = () => {};\n      }\n\n      this.selectedFiles = event.target.files;\n    } else {\n      this.sweetAlertService.customErrorMessage(\n        \"Attachment should be in PDF format only.\"\n      );\n      event.target.value = \"\";\n      return;\n    }\n  }\n\n  uploadS2SupportDoc() {\n    let attachmentType;\n    let appFormReference = \"\";\n    attachmentType = \"SUPPORTING\";\n    this.submissionType = SUBMISSION_TYPE.ORIGINAL;\n    Swal.fire({\n      text:\n        \"Are you sure you want to upload the \" +\n        attachmentType.replaceAll(\"_\", \" \") +\n        \" DOCUMENT?\",\n      icon: \"question\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Confirm\",\n    }).then((result) => {\n      if (result.value) {\n        this.spinner.show();\n\n        this.progress.percentage = 0;\n        this.currentFileUpload = this.selectedFiles.item(0);\n        let params = \"\";\n        let appFormRef = \"\";\n\n        // set appFormReference\n        if (this.s2Appplication.appFormReference) {\n          console.log(\"------------------------------\");\n          appFormRef = `&appFormReference=${this.s2Appplication.appFormReference}`;\n        }\n\n        params = `?&attachmentType=${this.attachmentType}&submissionType=${this.submissionType}${appFormReference}&fileSize=${this.attachmentSizeForUpload}${appFormRef}`;\n        this.fileStorageService\n          .pushFileToStorage(\n            ENDPOINTS.attachmentDocument,\n            this.currentFileUpload,\n            params\n          )\n          .subscribe(\n            (res) => {\n              console.log(this.attachmentType, \" \", res.responseData.data);\n\n              if (\n                !this.s2Appplication.appFormReference ||\n                this.s2Appplication.appFormReference === \"\"\n              ) {\n                this.s2Appplication.appFormReference =\n                  res.responseData.data.appFormReference;\n                console.log(\n                  \"SET APPFORMREF: \",\n                  this.s1Application.appFormReference\n                );\n              }\n\n              this.uploadedFileSupportive = res.responseData.data;\n              this.s2SupportDocAddToAttachmentDocument(\n                this.uploadedFileSupportive\n              );\n              this.showSupportiveDocumentUploadButton = false;\n              this.showSupportiveDocumentViewButton = true;\n              this.s2Appplication.supportingAttachmentReference = this.uploadedFileSupportive.supportingAttachmentReference;\n\n              this.spinner.hide();\n              this.sweetAlertService.customSuccessMessage(\n                \"Attachment successfully uploaded.\"\n              );\n              this.selectedFiles = undefined;\n            },\n            (err: any) => {\n              this.spinner.hide();\n              this.sweetAlertService.error(err);\n            },\n            () => {\n              // actions after subscription\n              this.spinner.hide();\n            }\n          );\n      } else {\n        this.currentFileUpload = null;\n      }\n    });\n    console.log(\"uploaded =======> \", this.s2SupportAttchmentDocuments);\n  }\n\n  uploadDocument() {\n    console.log(\"type: \", this.attachmentType);\n    let attachmentType;\n    let appFormReference = \"\";\n    if (\n      this.attachmentType === ATTACHMENT_TYPE.SUPPORTIVE ||\n      this.S2SupportDoc\n    ) {\n      attachmentType = \"SUPPORTING\";\n    } else {\n      attachmentType = this.attachmentType;\n    }\n\n    if (!this.S2SupportDoc) {\n      // set submission type and appFormReference\n      if (\n        attachmentType === ATTACHMENT_TYPE.REVISION_LETTER ||\n        (this.s1Application.submissionType === SUBMISSION_TYPE.ORIGINAL &&\n          (this.s1Application.decisionStatus === APPLICATION_STATUS.APPROVED ||\n            this.s1Application.decisionStatus === \"APPROVED W/ CAUTION\"))\n      ) {\n        this.submissionType = SUBMISSION_TYPE.REVISION;\n        // appFormReference = `&appFormReference=${this.s1Application.appFormReference}`;\n      } else if (\n        this.s1Application.decisionStatus === APP_DECISION_STATUS.INCOMPLETE\n      ) {\n        this.submissionType = SUBMISSION_TYPE.COMPLIANCE;\n        // appFormReference = `&appFormReference=${this.s1Application.appFormReference}&applicationFormId=${this.s1Application.id}`;\n        appFormReference = `&applicationFormId=${this.s1Application.id}`;\n      } else {\n        this.submissionType = SUBMISSION_TYPE.ORIGINAL;\n      }\n    } else {\n      this.submissionType = SUBMISSION_TYPE.ORIGINAL;\n    }\n\n    console.log(\"NEW SUTYPE: \", this.submissionType);\n\n    Swal.fire({\n      text:\n        \"Are you sure you want to upload the \" +\n        attachmentType.replaceAll(\"_\", \" \") +\n        \" DOCUMENT?\",\n      icon: \"question\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Confirm\",\n    }).then((result) => {\n      if (result.value) {\n        this.spinner.show();\n\n        this.progress.percentage = 0;\n        this.currentFileUpload = this.selectedFiles.item(0);\n        let params = \"\";\n        let appFormRef = \"\";\n\n        // set appFormReference\n        if (this.s1Application.appFormReference) {\n          appFormRef = `&appFormReference=${this.s1Application.appFormReference}`;\n        }\n        if (this.s2Appplication.appFormReference) {\n          appFormRef = `&appFormReference=${this.s2Appplication.appFormReference}`;\n        }\n\n        params = `?&attachmentType=${this.attachmentType}&submissionType=${this.submissionType}${appFormReference}&fileSize=${this.attachmentSizeForUpload}${appFormRef}`;\n        this.fileStorageService\n          .pushFileToStorage(\n            ENDPOINTS.attachmentDocument,\n            this.currentFileUpload,\n            params\n          )\n          .subscribe(\n            (res) => {\n              console.log(this.attachmentType, \" \", res.responseData.data);\n\n              if (\n                !this.s1Application.appFormReference ||\n                this.s1Application.appFormReference === \"\"\n              ) {\n                this.s1Application.appFormReference =\n                  res.responseData.data.appFormReference;\n                console.log(\n                  \"SET APPFORMREF: \",\n                  this.s1Application.appFormReference\n                );\n              }\n\n              if (!this.S2SupportDoc) {\n                if (this.attachmentType === ATTACHMENT_TYPE.MAIN) {\n                  this.uploadedFileMain = res.responseData.data;\n                  this.addToAttachmentDocuments(this.uploadedFileMain);\n                  this.showMainDocumentUploadButton = false;\n                  this.showMainDocumentViewButton = true;\n                  this.showSupportDocumentFrame = true;\n                  this.s1Application.mainAttachmentReference = this.uploadedFileMain.mainAttachmentReference;\n                } else if (this.attachmentType === ATTACHMENT_TYPE.SUPPORTIVE) {\n                  this.uploadedFileSupportive = res.responseData.data;\n                  this.addToAttachmentDocuments(this.uploadedFileSupportive);\n                  this.showSupportiveDocumentUploadButton = false;\n                  this.showSupportiveDocumentViewButton = true;\n                  this.s1Application.supportingAttachmentReference = this.uploadedFileSupportive.supportingAttachmentReference;\n                } else if (\n                  this.attachmentType === ATTACHMENT_TYPE.REVISION_LETTER\n                ) {\n                  this.uploadedFileRevision = res.responseData.data;\n                  this.addToAttachmentDocuments(this.uploadedFileRevision);\n                  this.showRevisionLetterViewButton = true;\n                  this.showRevisionLetterUploadButton = false;\n                  this.s1Application.revisionLetterAttachmentReference = this.uploadedFileRevision.revisionLetterAttachmentReference;\n                  this.revisionLetterAttachment = this.attachmentDocuments.filter(\n                    (data) =>\n                      data?.attachmentType === ATTACHMENT_TYPE.REVISION_LETTER\n                  )[0];\n                }\n              } else {\n                this.uploadedFileSupportive = res.responseData.data;\n                this.s2SupportDocAddToAttachmentDocument(\n                  this.uploadedFileSupportive\n                );\n                this.showSupportiveDocumentUploadButton = false;\n                this.showSupportiveDocumentViewButton = true;\n                this.s2Appplication.supportingAttachmentReference = this.uploadedFileSupportive.supportingAttachmentReference;\n              }\n\n              if (\n                (this.submissionType === SUBMISSION_TYPE.ORIGINAL &&\n                  (this.s1Application.decisionStatus ===\n                    APPLICATION_STATUS.APPROVED ||\n                    this.s1Application.decisionStatus ===\n                      \"APPROVED W/ CAUTION\")) ||\n                this.submissionType === SUBMISSION_TYPE.REVISION\n              ) {\n                if (this.attachmentType === ATTACHMENT_TYPE.MAIN) {\n                  this.showMainDocumentUploadButtonR = this.showMainDocumentUploadButton;\n                  this.showMainDocumentViewButtonR = this.showMainDocumentViewButton;\n                } else if (this.attachmentType === ATTACHMENT_TYPE.SUPPORTIVE) {\n                  this.showSupportDocumentFrameR = this.showSupportDocumentFrame;\n                  this.showSupportiveDocumentUploadButtonR = this.showSupportiveDocumentUploadButton;\n                  this.showSupportiveDocumentViewButtonR = this.showSupportiveDocumentViewButton;\n                }\n              } else if (\n                (this.submissionType === SUBMISSION_TYPE.ORIGINAL &&\n                  this.s1Application.decisionStatus ===\n                    APP_DECISION_STATUS.INCOMPLETE) ||\n                (this.submissionType === SUBMISSION_TYPE.REVISION &&\n                  this.s1Application.decisionStatus ===\n                    APP_DECISION_STATUS.INCOMPLETE) ||\n                this.submissionType === SUBMISSION_TYPE.COMPLIANCE\n              ) {\n                if (this.attachmentType === ATTACHMENT_TYPE.MAIN) {\n                  this.showMainDocumentUploadButtonC = this.showMainDocumentUploadButton;\n                  this.showMainDocumentViewButtonC = this.showMainDocumentViewButton;\n                } else if (this.attachmentType === ATTACHMENT_TYPE.SUPPORTIVE) {\n                  this.showSupportDocumentFrameC = this.showSupportDocumentFrame;\n                  this.showSupportiveDocumentUploadButtonC = this.showSupportiveDocumentUploadButton;\n                  this.showSupportiveDocumentViewButtonC = this.showSupportiveDocumentViewButton;\n                }\n              }\n\n              this.spinner.hide();\n              this.sweetAlertService.customSuccessMessage(\n                \"Attachment successfully uploaded.\"\n              );\n              this.selectedFiles = undefined;\n            },\n            (err: any) => {\n              this.spinner.hide();\n              this.sweetAlertService.error(err);\n            },\n            () => {\n              // actions after subscription\n              this.spinner.hide();\n            }\n          );\n      } else {\n        this.currentFileUpload = null;\n      }\n    });\n  }\n  s2SupportDocAddToAttachmentDocument(obj: any) {\n    if (obj.supportingAttachmentReference) {\n      this.attachmentDocument.mainAttachmentReference =\n        obj.mainAttachmentReference;\n      this.attachmentDocument.supportingAttachmentReference =\n        obj.supportingAttachmentReference;\n      this.attachmentDocument.revisionLetterAttachmentReference =\n        obj.revisionLetterAttachmentReference;\n      this.attachmentDocument.id = obj.id;\n      this.attachmentDocument.originalFilename = obj.originalFilename;\n      this.attachmentDocument.filename = obj.filename;\n      this.attachmentDocument.fileSize = obj.fileSize;\n      this.attachmentDocument.fileExtension = obj.fileExtension;\n      this.attachmentDocument.fileURL = obj.fileURL;\n      this.attachmentDocument.attachmentType = obj.attachmentType;\n      this.attachmentDocument.documentFormat = obj.documentFormat;\n      this.attachmentDocument.createdBy = this.currentUser.username;\n      this.attachmentDocument.createdDate = this.todayDate;\n      console.log(this.attachmentDocuments);\n      this.attachmentDocuments[0] = this.attachmentDocument;\n      this.s2SupportAttchmentDocuments = this.attachmentDocuments;\n      this.s2SupportDocument = obj;\n      this.s2SupportAttchmentDocuments.push(obj);\n      console.log(\"s2support => \", obj);\n\n      console.log(this.s2Appplication);\n      console.log(\"s2 app\", this.attachmentDocuments);\n    }\n  }\n\n  addToAttachmentDocuments(obj: any) {\n    if (obj) {\n      console.log(\"addToAttachmentDocuments\");\n\n      if (\n        this.s1Application.submissionType === SUBMISSION_TYPE.ORIGINAL &&\n        (this.s1Application.internalStatus === APPLICATION_STATUS.SAVED ||\n          this.s1Application.internalStatus === \"\" ||\n          this.s1Application.internalStatus === undefined)\n      ) {\n        this.attachmentDocuments = JSON.parse(\n          JSON.stringify(this.originalAttachmentDocuments)\n        );\n      }\n\n      this.attachmentDocument.mainAttachmentReference =\n        obj.mainAttachmentReference;\n      this.attachmentDocument.supportingAttachmentReference =\n        obj.supportingAttachmentReference;\n      this.attachmentDocument.revisionLetterAttachmentReference =\n        obj.revisionLetterAttachmentReference;\n      this.attachmentDocument.id = obj.id;\n      this.attachmentDocument.originalFilename = obj.originalFilename;\n      this.attachmentDocument.filename = obj.filename;\n      this.attachmentDocument.fileSize = obj.fileSize;\n      this.attachmentDocument.fileExtension = obj.fileExtension;\n      this.attachmentDocument.fileURL = obj.fileURL;\n      this.attachmentDocument.attachmentType = obj.attachmentType;\n      this.attachmentDocument.documentFormat = obj.documentFormat;\n      this.attachmentDocument.createdBy = this.currentUser.username;\n      this.attachmentDocument.createdDate = this.todayDate;\n      console.log(this.attachmentDocuments);\n\n      if (this.attachmentDocument.attachmentType === \"MAIN\") {\n        this.attachmentDocuments[0] = this.attachmentDocument;\n      } else if (this.attachmentDocument.attachmentType === \"SUPPORTIVE\") {\n        this.attachmentDocuments[1] = this.attachmentDocument;\n      } else if (this.attachmentDocument.attachmentType === \"REVISION_LETTER\") {\n        this.attachmentDocuments[2] = this.attachmentDocument;\n      }\n\n      if (\n        (this.s1Application.submissionType === SUBMISSION_TYPE.REVISION &&\n          this.s1Application.decisionStatus !==\n            APP_DECISION_STATUS.INCOMPLETE) ||\n        (this.s1Application.submissionType === SUBMISSION_TYPE.ORIGINAL &&\n          (this.s1Application.decisionStatus === APPLICATION_STATUS.APPROVED ||\n            this.s1Application.decisionStatus === \"APPROVED W/ CAUTION\"))\n      ) {\n        // this.revisionAttachmentDocuments = this.attachmentDocuments;\n        this.tempRevisionAttachmentDocuments = JSON.parse(\n          JSON.stringify(this.attachmentDocuments)\n        );\n      } else if (\n        this.s1Application.decisionStatus === APP_DECISION_STATUS.INCOMPLETE\n      ) {\n        // this.complianceAttachmentDocuments = this.attachmentDocuments;\n        this.tempComplianceAttachmentDocuments = JSON.parse(\n          JSON.stringify(this.attachmentDocuments)\n        );\n      } else {\n        this.originalAttachmentDocuments = JSON.parse(\n          JSON.stringify(this.attachmentDocuments)\n        );\n      }\n\n      console.log(this.attachmentDocuments);\n      this.attachmentDocument = new AttachmentDocument();\n    } else {\n      this.spinner.hide();\n      console.log(\"Null attachment.\");\n      this.myMainFile.nativeElement.value = null;\n      this.myMainInput.nativeElement.value = null;\n      this.sweetAlertService.customErrorMessage(\n        \"Attachment cannot be uploaded.\"\n      );\n    }\n  }\n\n  viewS2SupportDoc() {\n    console.log(\"uploaded\", this.uploadedFileSupportive);\n    console.log(\"uploaded\", this.attachmentDocuments);\n    console.log(\"s2Upport\", this.s2SupportAttchmentDocuments);\n    console.log(\"s2\", this.s2Appplication);\n    console.log(\"s1\", this.s1Application);\n    // console.log(\"S2 SUPPORTIVE\", );\n    console.log(\"S2 SUPPORTIVE!! \", this.s2SupportDocument);\n    let fileURL: string = this.s2SupportDocument.fileURL;\n    window.open(fileURL);\n  }\n\n  viewDocument(typeOfDocument, isOriginal = true) {\n    if (this.s1Application.submissionType === SUBMISSION_TYPE.ORIGINAL) {\n      this.attachmentDocuments = JSON.parse(\n        JSON.stringify(this.originalAttachmentDocuments)\n      );\n    } else if (\n      this.s1Application.submissionType === SUBMISSION_TYPE.REVISION &&\n      this.s1Application.decisionStatus !== APP_DECISION_STATUS.INCOMPLETE\n    ) {\n      this.attachmentDocuments = JSON.parse(\n        JSON.stringify(this.revisionAttachmentDocuments)\n      );\n    } else if (\n      this.s1Application.submissionType === SUBMISSION_TYPE.COMPLIANCE ||\n      this.s1Application.decisionStatus === APP_DECISION_STATUS.INCOMPLETE\n    ) {\n      this.attachmentDocuments = JSON.parse(\n        JSON.stringify(this.complianceAttachmentDocuments)\n      );\n    }\n\n    if (typeOfDocument === ATTACHMENT_TYPE.MAIN) {\n      console.log(isOriginal, this.uploadedFileMain);\n      if (this.uploadedFileMain && !isOriginal) {\n        window.open(this.uploadedFileMain.fileURL);\n      } else {\n        window.open(this.attachmentDocuments[0].fileURL);\n      }\n    } else if (typeOfDocument === ATTACHMENT_TYPE.SUPPORTIVE) {\n      if (this.uploadedFileSupportive && !isOriginal) {\n        window.open(this.uploadedFileSupportive.fileURL);\n      } else {\n        const supportiveDoc = this.attachmentDocuments.filter(\n          (res) => res.attachmentType === ATTACHMENT_TYPE.SUPPORTIVE\n        )[0];\n        window.open(supportiveDoc.fileURL);\n      }\n    } else if (typeOfDocument === ATTACHMENT_TYPE.REVISION_LETTER) {\n      if (this.uploadedFileRevision && !isOriginal) {\n        window.open(this.uploadedFileRevision.fileURL);\n      } else {\n        // const revisionLetterDoc = this.revisionLetterAttachment;\n        const revisionLetterDoc = this.attachmentDocuments.filter(\n          (res) => res.attachmentType === ATTACHMENT_TYPE.REVISION_LETTER\n        )[0];\n        window.open(revisionLetterDoc.fileURL);\n      }\n    }\n  }\n\n  viewDocument2(i) {\n    window.open(i?.fileURL);\n  }\n\n  deleteUploadedFile2(obj) {\n    Swal.fire({\n      text: \"Are you sure you want to delete this document permanently?\",\n      icon: \"question\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Confirm\",\n    }).then((result) => {\n      if (result.value) {\n        this.spinner.show();\n        if (\n          obj.submissionType === SUBMISSION_TYPE.REVISION &&\n          obj.decisionStatus !== APP_DECISION_STATUS.INCOMPLETE\n        ) {\n          this.revisionAttachmentDocuments = this.revisionAttachmentDocuments.filter(\n            (data) => data?.id !== obj.id\n          );\n        } else if (\n          obj.submissionType === SUBMISSION_TYPE.COMPLIANCE ||\n          obj.decisionStatus === APP_DECISION_STATUS.INCOMPLETE\n        ) {\n          this.complianceAttachmentDocuments = this.complianceAttachmentDocuments.filter(\n            (data) => data?.id !== obj.id\n          );\n        }\n        this.apiService\n          .save(ENDPOINTS.attachmentDocument + `/id/${obj.id}`, null)\n          .subscribe(\n            (res) => {\n              this.spinner.hide();\n              console.log(\"Attachment successfully deleted.\");\n            },\n            (err: any) => {\n              this.spinner.hide();\n              this.sweetAlertService.error(err);\n            }\n          );\n      }\n    });\n  }\n\n  deleteS2SupportDoc() {\n    Swal.fire({\n      text: \"Are you sure you want to delete this document permanently?\",\n      icon: \"question\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Confirm\",\n    }).then((result) => {\n      if (result.value) {\n        if (\n          this.s2Appplication.submissionType === SUBMISSION_TYPE.ORIGINAL &&\n          (this.s2Appplication.internalStatus === APPLICATION_STATUS.SAVED ||\n            this.s2Appplication.internalStatus === \"\" ||\n            this.s2Appplication.internalStatus === undefined)\n        ) {\n          this.attachmentDocuments = this.s2SupportAttchmentDocuments;\n        }\n        let id = this.attachmentDocuments.filter(\n          (r) => r.attachmentType === ATTACHMENT_TYPE.SUPPORTIVE\n        )[this.s1Application.hasNoSupportingDocs ? 0 : 1].id;\n        this.supportDocAttachmentSize = 0;\n        // this.attachmentDocuments[this.s1Application.hasNoSupportingDocs? 0 : 1] = null;\n        this.s2SupportDocument = {};\n        this.s2Appplication.supportingAttachmentReference = null;\n        // this.showSupportiveDocumentViewButton = false;\n        // this.showSupportiveDocumentUploadButton = false;\n        // this.mySupportiveFile.nativeElement.value = null;\n        // this.mySupportiveInput.nativeElement.value = null;\n        // this.s1Application.supportingAttachmentReference = null;\n        console.log(\"result\", result);\n\n        this.apiService\n          .save(ENDPOINTS.attachmentDocument + `/id/${id}`, null)\n          .subscribe(\n            (res) => {\n              this.spinner.hide();\n              console.log(\"Attachment successfully deleted.\");\n            },\n            (err: any) => {\n              this.spinner.hide();\n              this.sweetAlertService.error(err);\n            }\n          );\n      }\n    });\n  }\n\n  deleteUploadedFile(documentType) {\n    console.log(\"DELETE...\");\n\n    let currentSubType = SUBMISSION_TYPE.ORIGINAL;\n\n    Swal.fire({\n      text: \"Are you sure you want to delete this document permanently?\",\n      icon: \"question\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Confirm\",\n    }).then((result) => {\n      if (result.value) {\n        let id = \"\";\n        // this.spinner.show();\n\n        // new appform - original\n        if (\n          this.s1Application.submissionType === SUBMISSION_TYPE.ORIGINAL &&\n          (this.s1Application.internalStatus === APPLICATION_STATUS.SAVED ||\n            this.s1Application.internalStatus === \"\" ||\n            this.s1Application.internalStatus === undefined)\n        ) {\n          this.attachmentDocuments = this.originalAttachmentDocuments;\n        }\n\n        // approved - original = for revision\n        else if (\n          this.s1Application.submissionType === SUBMISSION_TYPE.ORIGINAL &&\n          (this.s1Application.internalStatus ===\n            APPLICATION_STATUS.S1_APPLICATION_REVIEWED ||\n            this.s1Application.internalStatus ===\n              APPLICATION_STATUS_FOR_COMPLIANCE.COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER) &&\n          (this.s1Application.decisionStatus === APPLICATION_STATUS.APPROVED ||\n            this.s1Application.decisionStatus === \"APPROVED W/ CAUTION\")\n        ) {\n          this.attachmentDocuments = this.tempRevisionAttachmentDocuments;\n          currentSubType = SUBMISSION_TYPE.REVISION;\n        }\n\n        // incomplete - original = for compliance\n        // incomplete - compliance = for compliance\n        // incomplete - revision = for compliance\n        else if (\n          this.s1Application.decisionStatus === APPLICATION_STATUS.INCOMPLETE &&\n          (this.s1Application.internalStatus ===\n            APPLICATION_STATUS.S1_APPLICATION_REVIEWED ||\n            this.s1Application.internalStatus ===\n              APPLICATION_STATUS_FOR_COMPLIANCE.COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER ||\n            this.s1Application.internalStatus ===\n              APPLICATION_STATUS_REVISION.REVISION_SCREENED ||\n            this.s1Application.internalStatus ===\n              APPLICATION_STATUS_FOR_COMPLIANCE.COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER ||\n            this.s1Application.internalStatus ===\n              APPLICATION_STATUS.S1_APPLICATION_REJECTED)\n        ) {\n          this.attachmentDocuments = this.tempComplianceAttachmentDocuments;\n          currentSubType = SUBMISSION_TYPE.COMPLIANCE;\n        }\n        console.log(this.attachmentDocuments);\n        console.log(\"currentSubType \", currentSubType);\n\n        if (documentType === ATTACHMENT_TYPE.MAIN) {\n          id = this.attachmentDocuments[0].id;\n          this.mainDocAttachmentSize = 0;\n          this.attachmentDocuments[0] = null;\n          this.s1Application.mainAttachmentReference = null;\n          this.showMainDocumentViewButton = false;\n          this.myMainFile.nativeElement.value = null;\n          this.myMainInput.nativeElement.value = null;\n          this.showSupportDocumentFrame = false;\n          this.showMainDocumentUploadButton = false;\n          this.s1Application.mainAttachmentReference = null;\n        } else if (documentType === ATTACHMENT_TYPE.SUPPORTIVE) {\n          id = this.attachmentDocuments[1].id;\n          this.supportDocAttachmentSize = 0;\n          this.attachmentDocuments[1] = null;\n          // this.attachmentDocuments[1].originalFilename = null;\n          this.s1Application.supportingAttachmentReference = null;\n          this.showSupportiveDocumentViewButton = false;\n          this.showSupportiveDocumentUploadButton = false;\n          this.mySupportiveFile.nativeElement.value = null;\n          this.mySupportiveInput.nativeElement.value = null;\n          this.s1Application.supportingAttachmentReference = null;\n        } else {\n          id = this.attachmentDocuments[2].id;\n          this.revisionDocAttachmentSize = 0;\n          this.attachmentDocuments[2] = null;\n          // this.attachmentDocuments[2].originalFilename = null;\n          this.revisionLetterAttachment = null;\n          this.s1Application.revisionLetterAttachmentReference = null;\n          this.showRevisionLetterViewButton = false;\n          this.showRevisionLetterUploadButton = false;\n          this.myRevisionLetterFile.nativeElement.value = null;\n          // this.myRevisionLetterInput.nativeElement.value = null;\n          // this.attachmentDocuments = this.attachmentDocuments.filter((doc) =>\n          //   !doc.attachmentType.includes(ATTACHMENT_TYPE.REVISION_LETTER));\n        }\n\n        console.log(this.attachmentDocuments);\n\n        if (currentSubType === SUBMISSION_TYPE.REVISION) {\n          this.tempRevisionAttachmentDocuments = this.attachmentDocuments;\n        } else if (currentSubType === SUBMISSION_TYPE.COMPLIANCE) {\n          this.tempComplianceAttachmentDocuments = this.attachmentDocuments;\n        } else {\n          this.originalAttachmentDocuments = this.attachmentDocuments;\n        }\n\n        if (\n          // new - original\n          this.s1Application.internalStatus === undefined ||\n          this.s1Application.internalStatus === APPLICATION_STATUS.SAVED ||\n          // reviewed - approved - for revision\n          ((this.s1Application.internalStatus ===\n            APPLICATION_STATUS.S1_APPLICATION_REVIEWED ||\n            this.s1Application.internalStatus ===\n              APPLICATION_STATUS_FOR_COMPLIANCE.COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER) &&\n            (this.s1Application.decisionStatus ===\n              APPLICATION_STATUS.APPROVED ||\n              this.s1Application.decisionStatus === \"APPROVED W/ CAUTION\")) ||\n          // reviewed - incomplete - for compliance\n          // incomplete - incomplete - for compliance\n          ((this.s1Application.internalStatus ===\n            APPLICATION_STATUS.S1_APPLICATION_REVIEWED ||\n            this.s1Application.internalStatus ===\n              APPLICATION_STATUS_FOR_COMPLIANCE.COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER) &&\n            this.s1Application.decisionStatus === APPLICATION_STATUS.INCOMPLETE)\n        ) {\n          console.log(\"Trigger delete...\");\n\n          this.apiService\n            .save(ENDPOINTS.attachmentDocument + `/id/${id}`, null)\n            .subscribe(\n              (res) => {\n                this.spinner.hide();\n                console.log(\"Attachment successfully deleted.\");\n              },\n              (err: any) => {\n                this.spinner.hide();\n                this.sweetAlertService.error(err);\n              }\n            );\n        }\n      }\n    });\n  }\n\n  verifyNoDocumentAttached() {\n    this.s1Application.supportingAttachmentReference =\n      this.s1Application.supportingAttachmentReference === null ? \"\" : null;\n    this.safeURLSupportDoc = null;\n  }\n\n  setFormValidator() {\n    this.attachmentDocumentForm = this.formBuilder.group({\n      attachmentReference: [\"\"],\n      hasNoSupportingDocs: [\"\"],\n      typeOfMedium: [\"\"],\n      mediumExecution: [\"\"],\n      language: [\"\"],\n      dialect: [\"\"],\n      others: [\"\"],\n      sizeLength: [\"\"],\n      width: [\"\"],\n\n      multimediaLength: [\"\"],\n      multimediaSize: [\"\"],\n      applicationSingleMedia: [\"\"],\n      applicationMultimediaStatic: [\"\"],\n      applicationMultimediaMoving: [\"\"],\n    });\n  }\n}\n","<div class=\"row\">\n  <b\n    *ngIf=\"\n      currentUser?.userRole?.name == 'ROLE_APPLICANT' &&\n      applicationStage === 'S1-APPLICATION'\n    \"\n    ><b class=\"material-icons\">error_outline</b> Attachments' total file size\n    should not exceed 15MB.</b\n  >\n\n  <form [formGroup]=\"attachmentDocumentForm\">\n    <mat-tab-group\n      mat-align-tabs=\"center\"\n      class=\"mat-tab-group\"\n      (selectedTabChange)=\"changeTab($event)\"\n    >\n      <mat-tab label=\"SUPPORT DOCUMENT\" *ngIf=\"S2SupportDoc\">\n        <div class=\"mat-tab\">\n          <div class=\"col comment\">\n            <label>SUPPORT DOCUMENT</label>\n            <div class=\"row\">\n              <!-- <h4>\n                <i class=\"material-icons\">bookmark</i> &nbsp;{{labelMainDocument}}\n              </h4> -->\n              <br />\n              <div class=\"col-md-12\" appearance=\"outline\">\n                <mat-label *ngIf=\"s2SupportDocument\">Filename: </mat-label>\n                <input\n                  #mainInput\n                  matInput\n                  [value]=\"s2SupportDocument?.originalFilename\"\n                  disabled\n                  *ngIf=\"s2SupportDocument\"\n                /><br />\n\n                <input\n                  #mainFile\n                  class=\"file-upload\"\n                  type=\"file\"\n                  accept=\".pdf\"\n                  (change)=\"selectS2SupprtDoc($event)\"\n                  [hidden]=\"\n                    (isAscUser && isDisableFieldOnUpdate) ||\n                    s2SupportDocument?.originalFilename != null\n                  \"\n                  *ngIf=\"\n                    s2SupportAttchmentDocuments?.length >= 0 ||\n                    (originalAttachmentDocuments?.length >= 1 &&\n                      originalAttachmentDocuments[0] === null) ||\n                    s1Application?.internalStatus == 'SAVED' ||\n                    originalAttachmentDocuments[0]?.originalFilename != null\n                  \"\n                />\n              </div>\n              <div class=\"row\"><br /></div>\n              <div class=\"col-md-12\" appearance=\"outline\">\n                <button\n                  mat-raised-button\n                  class=\"button-red button-right\"\n                  (click)=\"viewS2SupportDoc()\"\n                  *ngIf=\"validateDeleteBtn() || s2SupportDocument\"\n                >\n                  <i class=\"material-icons add-document\">open_in_new</i> VIEW\n                  DOCUMENT\n                </button>\n                &nbsp; &nbsp;\n                <button\n                  mat-raised-button\n                  class=\"button-red button-right\"\n                  (click)=\"deleteS2SupportDoc()\"\n                  *ngIf=\"validateDeleteBtn()\"\n                >\n                  <i class=\"material-icons add-document\">delete</i> DELETE\n                  ATTACHMENT\n                </button>\n                <!-- [hidden]=\"(!showMainDocumentViewButton) ||\n                  (currentUser?.userRole?.name!='ROLE_APPLICANT' && currentUser?.userRole?.name!='ROLE_ENCODER') ||\n                  (currentUser.userRole.name=='ROLE_ENCODER' && s1Application?.internalStatus !== undefined ) ||\n                  applicationStage === 'S2-APPLICATION' || applicationStage === 'S1-Preview' || s1Application?.decisionStatus=='APPROVED'||s1Application?.decisionStatus=='APPROVED W/ CAUTION'\" -->\n\n                &nbsp; &nbsp;\n                <button\n                  mat-raised-button\n                  class=\"button-red button-right\"\n                  (click)=\"uploadDocument()\"\n                  [disabled]=\"!safeURLSupportDoc\"\n                  [hidden]=\"isAscUser && isDisableFieldOnUpdate\"\n                  *ngIf=\"safeURLSupportDoc\"\n                >\n                  <i class=\"material-icons add-document\">upload</i> UPLOAD\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </mat-tab>\n\n      <!-- TAB FOR ORIGINAL -->\n      <mat-tab label=\"ORIGINAL\" *ngIf=\"!S2SupportDoc\">\n        <div class=\"mat-tab\">\n          <div class=\"col comment\">\n            <label>ORIGINAL</label>\n            <!-- MAIN DOCUMENT -->\n            <div class=\"row\">\n              <h4>\n                <i class=\"material-icons\">bookmark</i> &nbsp;{{\n                  labelMainDocument ? labelMainDocument : \"MAIN DOCUMENT\"\n                }}\n              </h4>\n              <br />\n              <div class=\"col-md-12\" appearance=\"outline\">\n                <mat-label\n                  *ngIf=\"originalAttachmentDocuments[0]?.originalFilename\"\n                  >Filename:\n                </mat-label>\n                <input\n                  #mainInput\n                  matInput\n                  [value]=\"originalAttachmentDocuments[0]?.originalFilename\"\n                  disabled\n                  *ngIf=\"originalAttachmentDocuments[0]?.originalFilename\"\n                /><br />\n\n                <input\n                  #mainFile\n                  class=\"file-upload\"\n                  type=\"file\"\n                  accept=\".pdf\"\n                  (change)=\"selectFile($event, 'MAIN')\"\n                  [hidden]=\"\n                    (isAscUser && isDisableFieldOnUpdate) ||\n                    originalAttachmentDocuments[0]?.originalFilename != null\n                  \"\n                  *ngIf=\"\n                    originalAttachmentDocuments?.length == 0 ||\n                    (originalAttachmentDocuments?.length >= 1 &&\n                      originalAttachmentDocuments[0] === null) ||\n                    s1Application?.internalStatus == 'SAVED' ||\n                    originalAttachmentDocuments[0]?.originalFilename != null\n                  \"\n                />\n              </div>\n\n              <div class=\"row\"><br /></div>\n              <div class=\"col-md-12\" appearance=\"outline\">\n                <button\n                  mat-raised-button\n                  class=\"button-red button-right\"\n                  (click)=\"viewDocument('MAIN')\"\n                  *ngIf=\"\n                    showMainDocumentViewButton ||\n                    originalAttachmentDocuments[0]?.originalFilename\n                  \"\n                >\n                  <i class=\"material-icons add-document\">open_in_new</i> VIEW\n                  DOCUMENT\n                </button>\n                &nbsp; &nbsp;\n                <button\n                  mat-raised-button\n                  class=\"button-red button-right\"\n                  (click)=\"deleteUploadedFile('MAIN')\"\n                  [hidden]=\"\n                    (currentUser?.userRole?.name != 'ROLE_APPLICANT' &&\n                      currentUser?.userRole?.name != 'ROLE_ENCODER') ||\n                    (currentUser.userRole.name == 'ROLE_ENCODER' &&\n                      s1Application?.internalStatus !== undefined) ||\n                    applicationStage === 'S2-APPLICATION' ||\n                    applicationStage === 'S1-Preview' ||\n                    s1Application?.decisionStatus == 'APPROVED' ||\n                    s1Application?.decisionStatus == 'APPROVED W/ CAUTION' ||\n                    s1Application?.decisionStatus == 'INCOMPLETE'\n                  \"\n                  *ngIf=\"\n                    showMainDocumentViewButton ||\n                    originalAttachmentDocuments[0]?.originalFilename\n                  \"\n                >\n                  <i class=\"material-icons add-document\">delete</i> DELETE\n                  ATTACHMENT\n                </button>\n                <!-- [hidden]=\"(!showMainDocumentViewButton) ||\n                  (currentUser?.userRole?.name!='ROLE_APPLICANT' && currentUser?.userRole?.name!='ROLE_ENCODER') ||\n                  (currentUser.userRole.name=='ROLE_ENCODER' && s1Application?.internalStatus !== undefined ) ||\n                  applicationStage === 'S2-APPLICATION' || applicationStage === 'S1-Preview' || s1Application?.decisionStatus=='APPROVED'||s1Application?.decisionStatus=='APPROVED W/ CAUTION'\" -->\n\n                &nbsp; &nbsp;\n                <button\n                  mat-raised-button\n                  class=\"button-red button-right\"\n                  (click)=\"uploadDocument()\"\n                  [disabled]=\"!safeURLMainDoc || !showMainDocumentUploadButton\"\n                  [hidden]=\"\n                    (isAscUser && isDisableFieldOnUpdate) ||\n                    (s1Application?.submissionType === 'ORIGINAL' &&\n                      (s1Application?.decisionStatus == 'APPROVED' ||\n                        s1Application?.decisionStatus ==\n                          'APPROVED W/ CAUTION' ||\n                        s1Application?.decisionStatus == 'INCOMPLETE'))\n                  \"\n                  *ngIf=\"\n                    originalAttachmentDocuments[0]?.originalFilename == null ||\n                    showMainDocumentUploadButton\n                  \"\n                >\n                  <i class=\"material-icons add-document\">upload</i> UPLOAD\n                </button>\n              </div>\n              <div class=\"col-md-12\">\n                <hr />\n              </div>\n            </div>\n\n            <!-- SUPPORTING DOC -->\n            <div\n              class=\"row\"\n              *ngIf=\"\n                showSupportDocumentFrame == true ||\n                originalAttachmentDocuments?.length > 0\n              \"\n            >\n              <h4>\n                <i class=\"material-icons\">bookmark</i> &nbsp;SUPPORT DOCUMENTS\n              </h4>\n\n              <!-- Display if no support document was attached -->\n              <div\n                class=\"col-md-12\"\n                appearance=\"outline\"\n                [hidden]=\"\n                  (isAscUser && isDisableFieldOnUpdate) ||\n                  applicationStage === 'S2-APPLICATION'\n                \"\n                *ngIf=\"\n                  ((s1Application?.internalStatus ===\n                    'S1_APPLICATION_REVIEWED' ||\n                    s1Application?.internalStatus ===\n                      'COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER') &&\n                    (s1Application?.decisionStatus == 'APPROVED' ||\n                      s1Application?.decisionStatus == 'APPROVED W/ CAUTION' ||\n                      s1Application?.decisionStatus === 'INCOMPLETE')) ||\n                  originalAttachmentDocuments?.length > 0\n                \"\n              >\n                <mat-checkbox\n                  (click)=\"verifyNoDocumentAttached()\"\n                  [(ngModel)]=\"s1Application.hasNoSupportingDocs\"\n                  (checked)=\"(s1Application.hasNoSupportingDocs)\"\n                  formControlName=\"hasNoSupportingDocs\"\n                  [hidden]=\"\n                    originalAttachmentDocuments[1]?.originalFilename ||\n                    s1Application?.internalStatus ===\n                      'S1_APPLICATION_REVIEWED' ||\n                    s1Application?.internalStatus ===\n                      'COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER' ||\n                    s1Application?.internalStatus === 'REVISION_SCREENED' ||\n                    (s1Application?.internalStatus ===\n                      'S1_APPLICATION_REJECTED' &&\n                      (s1Application?.decisionStatus == 'APPROVED' ||\n                        s1Application?.decisionStatus ==\n                          'APPROVED W/ CAUTION' ||\n                        s1Application?.decisionStatus == 'INCOMPLETE'))\n                  \"\n                  *ngIf=\"\n                    (currentUser.userRole.name == 'ROLE_APPLICANT' &&\n                      originalAttachmentDocuments?.length > 0) ||\n                    (currentUser.userRole.name == 'ROLE_ENCODER' &&\n                      s1Application?.internalStatus === undefined)\n                  \"\n                >\n                  I certify that no supporting document is attached to this S1\n                  application.</mat-checkbox\n                >\n                <br />\n              </div>\n\n              <p\n                [hidden]=\"\n                  originalAttachmentDocuments[1]?.originalFilename ||\n                  (currentUser.userRole.name == 'ROLE_ENCODER' &&\n                    s1Application?.internalStatus === undefined)\n                \"\n                *ngIf=\"\n                  isAscUser ||\n                  currentUser.userRole.name == 'ROLE_ADMIN' ||\n                  currentUser.userRole.name == 'ROLE_SUPER_ADMIN' ||\n                  applicationStage === 'S2-APPLICATION' ||\n                  applicationStage === 'S1-Preview' ||\n                  (s1Application?.internalStatus ===\n                    'S1_APPLICATION_REVIEWED' &&\n                    (s1Application?.decisionStatus == 'APPROVED' ||\n                      s1Application?.decisionStatus ==\n                        'APPROVED W/ CAUTION')) ||\n                  (s1Application?.internalStatus ===\n                    'COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER' &&\n                    s1Application?.decisionStatus === 'INCOMPLETE') ||\n                  (s1Application?.internalStatus === 'REVISION_SCREENED' &&\n                    s1Application?.decisionStatus === 'INCOMPLETE') ||\n                  (currentUser.userRole.name == 'ROLE_APPLICANT' &&\n                    s1Application?.hasNoSupportingDocs &&\n                    s1Application?.internalStatus !== 'SAVED' &&\n                    s1Application?.internalStatus !== undefined)\n                \"\n              >\n                Supporting Document was not submitted.\n              </p>\n              <div class=\"col-md-12\"><br /></div>\n\n              <div\n                *ngIf=\"\n                  !s1Application.hasNoSupportingDocs ||\n                  originalAttachmentDocuments[1]?.originalFilename === null\n                \"\n              >\n                <div class=\"col-md-12\" appearance=\"outline\">\n                  <mat-label\n                    *ngIf=\"originalAttachmentDocuments[1]?.originalFilename\"\n                    >Filename:\n                  </mat-label>\n                  <input\n                    #supportiveInput\n                    matInput\n                    [value]=\"originalAttachmentDocuments[1]?.originalFilename\"\n                    disabled\n                    *ngIf=\"originalAttachmentDocuments[1]?.originalFilename\"\n                  /><br />\n\n                  <input\n                    #supportiveFile\n                    class=\"file-upload\"\n                    type=\"file\"\n                    accept=\".pdf\"\n                    (change)=\"selectFile($event, 'SUPPORTIVE')\"\n                    [hidden]=\"\n                      (isAscUser && isDisableFieldOnUpdate) ||\n                      s1Application.hasNoSupportingDocs ||\n                      originalAttachmentDocuments[1]?.originalFilename !=\n                        null ||\n                      s1Application?.internalStatus ===\n                        'S1_APPLICATION_REVIEWED' ||\n                      (s1Application?.internalStatus ===\n                        'COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER' &&\n                        (s1Application?.decisionStatus === 'APPROVED' ||\n                          s1Application?.decisionStatus ===\n                            'APPROVED W/ CAUTION' ||\n                          s1Application?.decisionStatus === 'INCOMPLETE')) ||\n                      (currentUser.userRole.name == 'ROLE_ENCODER' &&\n                        s1Application?.internalStatus !== undefined) ||\n                      s1Application?.submissionType === 'REVISION' ||\n                      s1Application?.submissionType === 'COMPLIANCE'\n                    \"\n                    *ngIf=\"\n                      originalAttachmentDocuments?.length == 1 ||\n                      (originalAttachmentDocuments?.length > 1 &&\n                        originalAttachmentDocuments[1] === null) ||\n                      originalAttachmentDocuments[1]?.originalFilename !=\n                        null ||\n                      !safeURLSupportDoc ||\n                      !showSupportiveDocumentUploadButton\n                    \"\n                  />\n                </div>\n\n                <div class=\"row\"><br /></div>\n                <div class=\"col-md-12\" appearance=\"outline\">\n                  <button\n                    mat-raised-button\n                    class=\"button-red button-right\"\n                    (click)=\"viewDocument('SUPPORTIVE')\"\n                    *ngIf=\"\n                      showSupportiveDocumentViewButton ||\n                      originalAttachmentDocuments[1]?.originalFilename\n                    \"\n                  >\n                    <i class=\"material-icons add-document\">open_in_new</i> VIEW\n                    DOCUMENT\n                  </button>\n                  &nbsp; &nbsp;\n                  <button\n                    mat-raised-button\n                    class=\"button-red button-right\"\n                    (click)=\"deleteUploadedFile('SUPPORTIVE')\"\n                    [hidden]=\"\n                      (currentUser?.userRole?.name != 'ROLE_APPLICANT' &&\n                        currentUser?.userRole?.name != 'ROLE_ENCODER') ||\n                      (currentUser.userRole.name == 'ROLE_ENCODER' &&\n                        s1Application?.internalStatus !== undefined) ||\n                      applicationStage === 'S2-APPLICATION' ||\n                      applicationStage === 'S1-Preview' ||\n                      s1Application?.decisionStatus == 'APPROVED' ||\n                      s1Application?.decisionStatus == 'APPROVED W/ CAUTION' ||\n                      s1Application?.decisionStatus == 'INCOMPLETE'\n                    \"\n                    *ngIf=\"\n                      showSupportiveDocumentViewButton ||\n                      originalAttachmentDocuments[1]?.originalFilename\n                    \"\n                  >\n                    <i class=\"material-icons add-document\">delete</i> DELETE\n                    ATTACHMENT\n                  </button>\n                  &nbsp; &nbsp;\n                  <button\n                    mat-raised-button\n                    class=\"button-red button-right\"\n                    (click)=\"uploadDocument()\"\n                    [disabled]=\"\n                      !safeURLSupportDoc || !showSupportiveDocumentUploadButton\n                    \"\n                    [hidden]=\"\n                      (isAscUser && isDisableFieldOnUpdate) ||\n                      (s1Application?.submissionType === 'ORIGINAL' &&\n                        (s1Application?.decisionStatus == 'APPROVED' ||\n                          s1Application?.decisionStatus ==\n                            'APPROVED W/ CAUTION' ||\n                          s1Application?.decisionStatus == 'INCOMPLETE'))\n                    \"\n                    *ngIf=\"showSupportiveDocumentUploadButton\"\n                  >\n                    <i class=\"material-icons add-document\">upload</i> UPLOAD\n                  </button>\n                </div>\n                <div class=\"row\"><br /></div>\n                <br />\n              </div>\n            </div>\n\n            <div\n              class=\"no-record\"\n              *ngIf=\"\n                originalAttachmentDocuments?.length === 0 &&\n                originalAttachmentDocuments[0]?.originalFilename === undefined\n              \"\n            >\n              No results found.\n            </div>\n          </div>\n        </div>\n      </mat-tab>\n      <!-- END OF TAB FOR ORIGINAL -->\n\n      <!-- ////////////////////////////////////////// DYNAMIC ////////////////////////////////////////// -->\n\n      <!-- TAB FOR REVISION -->\n      <mat-tab\n        label=\"REVISION\"\n        *ngIf=\"\n          revisionAttachmentDocuments?.length > 0 ||\n          ((s1Application?.internalStatus === 'S1_APPLICATION_REVIEWED' ||\n            s1Application?.internalStatus ===\n              'COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER') &&\n            (s1Application?.decisionStatus == 'APPROVED' ||\n              s1Application?.decisionStatus === 'APPROVED W/ CAUTION') &&\n            applicationStage !== 'S2-APPLICATION')\n        \"\n      >\n        <div class=\"mat-tab\">\n          <div class=\"col comment\">\n            <label>REVISION</label>\n            <!---------- NEW ATTACHMENTS ---------->\n\n            <!-- MAIN DOCUMENT -->\n            <div\n              class=\"row\"\n              [hidden]=\"\n                (isAscUser && isDisableFieldOnUpdate) ||\n                applicationStage === 'S2-APPLICATION' ||\n                (currentUser.userRole.name == 'ROLE_ENCODER' &&\n                  s1Application?.internalStatus !== undefined)\n              \"\n              *ngIf=\"\n                showSupportDocumentFrameR ||\n                tempRevisionAttachmentDocuments?.length > 0 ||\n                ((s1Application?.internalStatus === 'S1_APPLICATION_REVIEWED' ||\n                  s1Application?.internalStatus ===\n                    'COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER') &&\n                  (s1Application?.decisionStatus === 'APPROVED' ||\n                    s1Application?.decisionStatus === 'APPROVED W/ CAUTION'))\n              \"\n            >\n              <h4>\n                <i class=\"material-icons\">bookmark</i> &nbsp;{{\n                  labelMainDocument ? labelMainDocument : \"MAIN DOCUMENT\"\n                }}\n              </h4>\n              <br />\n              <div class=\"col-md-12\" appearance=\"outline\">\n                <mat-label\n                  *ngIf=\"\n                    tempRevisionAttachmentDocuments?.length > 0 &&\n                    tempRevisionAttachmentDocuments[0]?.originalFilename\n                  \"\n                  >Filename:\n                </mat-label>\n                <input\n                  #mainInput\n                  matInput\n                  *ngIf=\"!s1Application?.hasOngoingRevision\"\n                  [value]=\"tempRevisionAttachmentDocuments[0]?.originalFilename\"\n                  disabled\n                /><br />\n\n                <input\n                  #mainFile\n                  class=\"file-upload\"\n                  type=\"file\"\n                  accept=\".pdf\"\n                  (change)=\"selectFile($event, 'MAIN')\"\n                  [hidden]=\"\n                    (isAscUser && isDisableFieldOnUpdate) ||\n                    tempRevisionAttachmentDocuments[0]?.originalFilename\n                  \"\n                  *ngIf=\"\n                    (s1Application?.internalStatus ===\n                      'S1_APPLICATION_REVIEWED' ||\n                      s1Application?.internalStatus ===\n                        'COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER') &&\n                    (s1Application?.decisionStatus === 'APPROVED' ||\n                      s1Application?.decisionStatus === 'APPROVED W/ CAUTION')\n                  \"\n                />\n              </div>\n\n              <div class=\"row\"><br /></div>\n              <div class=\"col-md-12\" appearance=\"outline\">\n                <button\n                  mat-raised-button\n                  class=\"button-red button-right\"\n                  (click)=\"viewDocument('MAIN', false)\"\n                  *ngIf=\"\n                    showMainDocumentViewButton ||\n                    tempRevisionAttachmentDocuments[0]?.originalFilename\n                  \"\n                >\n                  <i class=\"material-icons add-document\">open_in_new</i> VIEW\n                  DOCUMENT\n                </button>\n                &nbsp; &nbsp;\n                <button\n                  mat-raised-button\n                  class=\"button-red button-right\"\n                  (click)=\"deleteUploadedFile('MAIN')\"\n                  *ngIf=\"\n                    showMainDocumentViewButton ||\n                    tempRevisionAttachmentDocuments[0]?.originalFilename\n                  \"\n                >\n                  <i class=\"material-icons add-document\">delete</i> DELETE\n                  ATTACHMENT\n                </button>\n                &nbsp; &nbsp;\n\n                <button\n                  mat-raised-button\n                  class=\"button-red button-right\"\n                  (click)=\"uploadDocument()\"\n                  [disabled]=\"\n                    !safeURLMainDocR || !showMainDocumentUploadButtonR\n                  \"\n                  [hidden]=\"isAscUser && isDisableFieldOnUpdate\"\n                  *ngIf=\"showMainDocumentUploadButtonR\"\n                >\n                  <i class=\"material-icons add-document\">upload</i> UPLOAD\n                </button>\n              </div>\n              <div class=\"col-md-12\">\n                <hr />\n              </div>\n            </div>\n\n            <!-- SUPPORTING DOC -->\n            <div\n              class=\"row\"\n              [hidden]=\"\n                (isAscUser && isDisableFieldOnUpdate) ||\n                applicationStage === 'S2-APPLICATION' ||\n                (currentUser.userRole.name == 'ROLE_ENCODER' &&\n                  s1Application?.internalStatus !== undefined)\n              \"\n              *ngIf=\"\n                showSupportDocumentFrameR ||\n                tempRevisionAttachmentDocuments?.length > 0 ||\n                ((s1Application?.internalStatus === 'S1_APPLICATION_REVIEWED' ||\n                  s1Application?.internalStatus ===\n                    'COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER') &&\n                  (s1Application?.decisionStatus === 'APPROVED' ||\n                    s1Application?.decisionStatus === 'APPROVED W/ CAUTION'))\n              \"\n            >\n              <h4>\n                <i class=\"material-icons\">bookmark</i> &nbsp;SUPPORT DOCUMENTS\n              </h4>\n\n              <!-- Display if no support document was attached -->\n              <div\n                class=\"col-md-12\"\n                appearance=\"outline\"\n                [hidden]=\"\n                  (isAscUser && isDisableFieldOnUpdate) ||\n                  applicationStage === 'S2-APPLICATION'\n                \"\n                *ngIf=\"\n                  tempRevisionAttachmentDocuments?.length < 2 ||\n                  tempRevisionAttachmentDocuments?.length != 2 ||\n                  ((s1Application?.internalStatus ===\n                    'S1_APPLICATION_REVIEWED' ||\n                    s1Application?.internalStatus ===\n                      'COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER') &&\n                    s1Application?.decisionStatus === 'INCOMPLETE')\n                \"\n              >\n                <mat-checkbox\n                  (click)=\"verifyNoDocumentAttached()\"\n                  [(ngModel)]=\"s1Application.hasNoSupportingDocs\"\n                  (checked)=\"(s1Application.hasNoSupportingDocs)\"\n                  formControlName=\"hasNoSupportingDocs\"\n                  [hidden]=\"\n                    tempRevisionAttachmentDocuments[1]?.originalFilename\n                  \"\n                  *ngIf=\"\n                    currentUser.userRole.name == 'ROLE_APPLICANT' ||\n                    (currentUser.userRole.name == 'ROLE_ENCODER' &&\n                      s1Application?.internalStatus === undefined)\n                  \"\n                >\n                  I certify that no supporting document is attached to this S1\n                  application.</mat-checkbox\n                >\n                <br />\n              </div>\n\n              <p\n                *ngIf=\"\n                  (s1Application?.submissionType === 'REVISION' &&\n                    s1Application?.hasNoSupportingDocs &&\n                    s1Application?.internalStatus !== undefined &&\n                    s1Application?.internalStatus !==\n                      'S1_APPLICATION_REVIEWED' &&\n                    s1Application?.decisionStatus !== 'INCOMPLETE') ||\n                  (s1Application?.hasNoSupportingDocs &&\n                    applicationStage === 'S1-Preview')\n                \"\n              >\n                Supporting Document was not submitted.\n              </p>\n              <div class=\"col-md-12\"><br /></div>\n\n              <div *ngIf=\"!s1Application?.hasNoSupportingDocs\">\n                <div class=\"col-md-12\" appearance=\"outline\">\n                  <mat-label\n                    *ngIf=\"\n                      tempRevisionAttachmentDocuments?.length > 0 &&\n                      tempRevisionAttachmentDocuments[1]?.originalFilename\n                    \"\n                    >Filename:\n                  </mat-label>\n                  <input\n                    #supportiveInput\n                    matInput\n                    [value]=\"\n                      tempRevisionAttachmentDocuments[1]?.originalFilename\n                    \"\n                    disabled\n                    *ngIf=\"\n                      tempRevisionAttachmentDocuments?.length > 0 &&\n                      tempRevisionAttachmentDocuments[1]?.originalFilename\n                    \"\n                  /><br />\n\n                  <input\n                    #supportiveFile\n                    class=\"file-upload\"\n                    type=\"file\"\n                    accept=\".pdf\"\n                    (change)=\"selectFile($event, 'SUPPORTIVE')\"\n                    [hidden]=\"\n                      (isAscUser && isDisableFieldOnUpdate) ||\n                      tempRevisionAttachmentDocuments[1]?.originalFilename\n                    \"\n                    *ngIf=\"\n                      tempRevisionAttachmentDocuments?.length <= 2 ||\n                      (tempRevisionAttachmentDocuments?.length == 2 &&\n                        tempRevisionAttachmentDocuments[1] === null) ||\n                      s1Application?.internalStatus == 'SAVED' ||\n                      tempRevisionAttachmentDocuments[1]?.originalFilename !=\n                        null ||\n                      ((s1Application?.internalStatus ==\n                        'S1_APPLICATION_REVIEWED' ||\n                        s1Application?.internalStatus ==\n                          'COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER') &&\n                        (s1Application?.decisionStatus == 'INCOMPLETE' ||\n                          s1Application?.decisionStatus == 'APPROVED' ||\n                          s1Application?.decisionStatus ==\n                            'APPROVED W/ CAUTION'))\n                    \"\n                  />\n                </div>\n\n                <div class=\"row\"><br /></div>\n                <div class=\"col-md-12\" appearance=\"outline\">\n                  <button\n                    mat-raised-button\n                    class=\"button-red button-right\"\n                    (click)=\"viewDocument('SUPPORTIVE', false)\"\n                    *ngIf=\"\n                      showSupportiveDocumentViewButton ||\n                      tempRevisionAttachmentDocuments[1]?.originalFilename\n                    \"\n                  >\n                    <i class=\"material-icons add-document\">open_in_new</i> VIEW\n                    DOCUMENT\n                  </button>\n                  &nbsp; &nbsp;\n                  <button\n                    mat-raised-button\n                    class=\"button-red button-right\"\n                    (click)=\"deleteUploadedFile('SUPPORTIVE')\"\n                    *ngIf=\"\n                      showSupportiveDocumentViewButton ||\n                      tempRevisionAttachmentDocuments[1]?.originalFilename\n                    \"\n                  >\n                    <i class=\"material-icons add-document\">delete</i> DELETE\n                    ATTACHMENT\n                  </button>\n                  &nbsp; &nbsp;\n                  <button\n                    mat-raised-button\n                    class=\"button-red button-right\"\n                    (click)=\"uploadDocument()\"\n                    [hidden]=\"isAscUser && isDisableFieldOnUpdate\"\n                    *ngIf=\"showSupportiveDocumentUploadButton\"\n                  >\n                    <i class=\"material-icons add-document\">upload</i> UPLOAD\n                  </button>\n                  <!-- [disabled]=\"!safeURLSupportDocR||!showSupportiveDocumentUploadButtonR\" -->\n                </div>\n                <div class=\"row\"><br /></div>\n                <br />\n              </div>\n            </div>\n\n            <!-- FOR REVISION - REVISION LETTER -->\n            <div\n              class=\"row\"\n              [hidden]=\"\n                (isAscUser && isDisableFieldOnUpdate) ||\n                applicationStage === 'S2-APPLICATION' ||\n                (currentUser.userRole.name == 'ROLE_ENCODER' &&\n                  s1Application?.internalStatus !== undefined)\n              \"\n              *ngIf=\"\n                (s1Application?.internalStatus === 'S1_APPLICATION_REVIEWED' ||\n                  s1Application?.internalStatus ===\n                    'COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER') &&\n                (s1Application?.decisionStatus == 'APPROVED' ||\n                  s1Application?.decisionStatus == 'APPROVED W/ CAUTION')\n              \"\n              [hidden]=\"\n                s1Application?.appliedS2 || applicationStage === 'S1-Preview'\n              \"\n            >\n              <div class=\"col-md-12\">\n                <hr />\n              </div>\n              <h4>\n                <i class=\"material-icons\">bookmark</i> &nbsp;REVISION LETTER\n              </h4>\n              <br />\n              <div class=\"col-md-12\" appearance=\"outline\">\n                <mat-label\n                  *ngIf=\"\n                    revisionLetterAttachment?.originalFilename ||\n                    (tempRevisionAttachmentDocuments?.length > 0 &&\n                      tempRevisionAttachmentDocuments[1]\n                        ?.revisionLetterAttachmentReference)\n                  \"\n                >\n                  Filename:\n                </mat-label>\n                <input\n                  #revisionLetterInput\n                  matInput\n                  [value]=\"\n                    revisionLetterAttachment?.originalFilename ||\n                    tempRevisionAttachmentDocuments[1]\n                      ?.revisionLetterAttachmentReference ||\n                    tempRevisionAttachmentDocuments[2]\n                      ?.revisionLetterAttachmentReference\n                  \"\n                  disabled\n                  *ngIf=\"revisionLetterAttachment?.originalFilename\"\n                /><br />\n\n                <input\n                  #revisionLetterFile\n                  class=\"file-upload\"\n                  type=\"file\"\n                  accept=\".pdf\"\n                  (change)=\"selectFile($event, 'REVISION_LETTER')\"\n                  [hidden]=\"\n                    (isAscUser && isDisableFieldOnUpdate) ||\n                    revisionLetterAttachment?.originalFilename\n                  \"\n                  *ngIf=\"\n                    tempRevisionAttachmentDocuments?.length == 0 ||\n                    s1Application?.internalStatus == 'SAVED' ||\n                    ((s1Application?.internalStatus ==\n                      'S1_APPLICATION_REVIEWED' ||\n                      s1Application?.internalStatus ==\n                        'COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER') &&\n                      (s1Application?.decisionStatus == 'INCOMPLETE' ||\n                        s1Application?.decisionStatus == 'APPROVED' ||\n                        s1Application?.decisionStatus == 'APPROVED W/ CAUTION'))\n                  \"\n                />\n              </div>\n\n              <div class=\"row\"><br /></div>\n              <div class=\"col-md-12\" appearance=\"outline\">\n                <button\n                  mat-raised-button\n                  class=\"button-red button-right\"\n                  (click)=\"viewDocument('REVISION_LETTER', false)\"\n                  *ngIf=\"showRevisionLetterViewButton\"\n                >\n                  <i class=\"material-icons add-document\">open_in_new</i> VIEW\n                  DOCUMENT\n                </button>\n                &nbsp; &nbsp;\n                <button\n                  mat-raised-button\n                  class=\"button-red button-right\"\n                  (click)=\"deleteUploadedFile('REVISION_LETTER')\"\n                  [hidden]=\"\n                    (currentUser?.userRole?.name != 'ROLE_APPLICANT' &&\n                      currentUser?.userRole?.name != 'ROLE_ENCODER') ||\n                    (currentUser.userRole.name == 'ROLE_ENCODER' &&\n                      s1Application?.internalStatus !== undefined) ||\n                    applicationStage === 'S2-APPLICATION' ||\n                    applicationStage === 'S1-Preview'\n                  \"\n                  *ngIf=\"showRevisionLetterViewButton\"\n                >\n                  <i class=\"material-icons add-document\">delete</i> DELETE\n                  ATTACHMENT\n                </button>\n                &nbsp; &nbsp;\n\n                <button\n                  mat-raised-button\n                  class=\"button-red button-right\"\n                  (click)=\"uploadDocument()\"\n                  [disabled]=\"\n                    !safeURLRevisionLetter || !showRevisionLetterUploadButton\n                  \"\n                  [hidden]=\"isAscUser && isDisableFieldOnUpdate\"\n                  *ngIf=\"showRevisionLetterUploadButton\"\n                >\n                  <i class=\"material-icons add-document\">upload</i> UPLOAD\n                </button>\n              </div>\n              <div class=\"row\"><br /></div>\n              <br />\n              <br />\n            </div>\n\n            <div class=\"row\"><hr /></div>\n\n            <!---------- EXISTING ---------->\n            <div\n              class=\"row\"\n              *ngFor=\"let i of revisionAttachmentDocuments; let index = index\"\n            >\n              <div *ngIf=\"i !== null\">\n                <h4>\n                  <i class=\"material-icons\">bookmark</i> &nbsp;{{\n                    i?.attachmentType\n                      ?.replaceAll(\"SUPPORTIVE\", \"SUPPORTING\")\n                      ?.replaceAll(\"_\", \" \")\n                  }}\n                  DOCUMENT\n                </h4>\n                <br />\n                <div class=\"col-md-12\" appearance=\"outline\">\n                  <mat-label *ngIf=\"i?.originalFilename\">Filename: </mat-label>\n                  <input\n                    #mainInput\n                    matInput\n                    [value]=\"i?.originalFilename\"\n                    disabled\n                    *ngIf=\"i?.originalFilename\"\n                  /><br />\n                </div>\n\n                <div class=\"row\"><br /></div>\n                <div\n                  class=\"col-md-12\"\n                  appearance=\"outline\"\n                  *ngIf=\"\n                    showMainDocumentViewButton ||\n                    i?.mainAttachmentReference ||\n                    i?.supportingAttachmentReference ||\n                    i?.revisionLetterAttachmentReference\n                  \"\n                >\n                  <button\n                    mat-raised-button\n                    class=\"button-red button-right\"\n                    (click)=\"viewDocument2(i)\"\n                  >\n                    <i class=\"material-icons add-document\">open_in_new</i> VIEW\n                    DOCUMENT\n                  </button>\n                  &nbsp; &nbsp;\n                  <button\n                    mat-raised-button\n                    class=\"button-red button-right\"\n                    (click)=\"deleteUploadedFile2(i)\"\n                    *ngIf=\"i?.status === 'UNPROCESSED'\"\n                  >\n                    <i class=\"material-icons add-document\">delete</i> DELETE\n                    ATTACHMENT\n                  </button>\n                  &nbsp; &nbsp;\n                </div>\n                <div class=\"row\"><br /></div>\n                <div class=\"col-md-12\">\n                  <hr />\n                </div>\n              </div>\n            </div>\n\n            <div\n              class=\"no-record\"\n              *ngIf=\"\n                (revisionAttachmentDocuments?.length === 0 &&\n                  revisionAttachmentDocuments[0]?.originalFilename ===\n                    undefined) ||\n                revisionAttachmentDocuments?.length === null\n              \"\n            >\n              No existing attachments for revision.\n            </div>\n          </div>\n        </div>\n      </mat-tab>\n\n      <!-- TAB FOR COMPLIANCE -->\n      <mat-tab\n        label=\"COMPLIANCE\"\n        *ngIf=\"\n          complianceAttachmentDocuments?.length > 0 ||\n          ((s1Application?.internalStatus === 'S1_APPLICATION_REVIEWED' ||\n            s1Application?.internalStatus ===\n              'COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER' ||\n            s1Application?.internalStatus == 'REVISION_SCREENED' ||\n            s1Application?.internalStatus == 'S1_APPLICATION_REJECTED') &&\n            s1Application?.decisionStatus == 'INCOMPLETE' &&\n            applicationStage !== 'S2-APPLICATION')\n        \"\n      >\n        <div class=\"mat-tab\">\n          <div class=\"col comment\">\n            <label>COMPLIANCE</label>\n            <!---------- NEW ATTACHMENTS ---------->\n\n            <!-- MAIN DOCUMENT -->\n            <div\n              class=\"row\"\n              [hidden]=\"\n                (isAscUser && isDisableFieldOnUpdate) ||\n                applicationStage === 'S2-APPLICATION' ||\n                (currentUser.userRole.name == 'ROLE_ENCODER' &&\n                  s1Application?.internalStatus !== undefined)\n              \"\n              *ngIf=\"\n                (s1Application?.internalStatus === 'S1_APPLICATION_REVIEWED' ||\n                  s1Application?.internalStatus ===\n                    'COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER' ||\n                  s1Application?.internalStatus == 'REVISION_SCREENED' ||\n                  s1Application?.internalStatus == 'S1_APPLICATION_REJECTED') &&\n                s1Application?.decisionStatus == 'INCOMPLETE'\n              \"\n            >\n              <h4>\n                <i class=\"material-icons\">bookmark</i> &nbsp;{{\n                  labelMainDocument ? labelMainDocument : \"MAIN DOCUMENT\"\n                }}\n              </h4>\n              <br />\n              <div class=\"col-md-12\" appearance=\"outline\">\n                <mat-label\n                  *ngIf=\"\n                    tempComplianceAttachmentDocuments?.length > 0 &&\n                    tempComplianceAttachmentDocuments[0]?.originalFilename\n                  \"\n                  >Filename:\n                </mat-label>\n                <input\n                  #mainInput\n                  matInput\n                  *ngIf=\"\n                    !s1Application?.hasOngoingRevision ||\n                    tempComplianceAttachmentDocuments?.length == 0\n                  \"\n                  [value]=\"\n                    tempComplianceAttachmentDocuments[0]?.originalFilename\n                  \"\n                  disabled\n                /><br />\n\n                <input\n                  #mainFile\n                  class=\"file-upload\"\n                  type=\"file\"\n                  accept=\".pdf\"\n                  (change)=\"selectFile($event, 'MAIN')\"\n                  [hidden]=\"\n                    (isAscUser && isDisableFieldOnUpdate) ||\n                    tempComplianceAttachmentDocuments[0]?.originalFilename\n                  \"\n                  *ngIf=\"\n                    (s1Application?.internalStatus ===\n                      'S1_APPLICATION_REVIEWED' ||\n                      s1Application?.internalStatus ===\n                        'COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER' ||\n                      s1Application?.internalStatus == 'REVISION_SCREENED' ||\n                      s1Application?.internalStatus ==\n                        'S1_APPLICATION_REJECTED') &&\n                    s1Application?.decisionStatus === 'INCOMPLETE'\n                  \"\n                />\n              </div>\n\n              <div class=\"row\"><br /></div>\n              <div class=\"col-md-12\" appearance=\"outline\">\n                <button\n                  mat-raised-button\n                  class=\"button-red button-right\"\n                  (click)=\"viewDocument('MAIN', false)\"\n                  [hidden]=\"\n                    tempComplianceAttachmentDocuments[0]?.originalFilename ===\n                    null\n                  \"\n                  *ngIf=\"\n                    showMainDocumentViewButtonC ||\n                    tempComplianceAttachmentDocuments[0]?.originalFilename\n                  \"\n                >\n                  <i class=\"material-icons add-document\">open_in_new</i> VIEW\n                  DOCUMENT\n                </button>\n                &nbsp; &nbsp;\n                <button\n                  mat-raised-button\n                  class=\"button-red button-right\"\n                  (click)=\"deleteUploadedFile('MAIN')\"\n                  [hidden]=\"\n                    tempComplianceAttachmentDocuments[0]?.originalFilename ===\n                    null\n                  \"\n                  *ngIf=\"\n                    showMainDocumentViewButtonC ||\n                    tempComplianceAttachmentDocuments[0]?.originalFilename\n                  \"\n                >\n                  <i class=\"material-icons add-document\">delete</i> DELETE\n                  ATTACHMENT\n                </button>\n                &nbsp; &nbsp;\n\n                <button\n                  mat-raised-button\n                  class=\"button-red button-right\"\n                  (click)=\"uploadDocument()\"\n                  [disabled]=\"!safeURLMainDoc || !showMainDocumentUploadButton\"\n                  [hidden]=\"isAscUser && isDisableFieldOnUpdate\"\n                  *ngIf=\"showMainDocumentUploadButton\"\n                >\n                  <i class=\"material-icons add-document\">upload</i> UPLOAD\n                </button>\n              </div>\n              <div class=\"col-md-12\">\n                <hr />\n              </div>\n            </div>\n\n            <!-- SUPPORTING DOC -->\n            <div\n              class=\"row\"\n              [hidden]=\"\n                (isAscUser && isDisableFieldOnUpdate) ||\n                applicationStage === 'S2-APPLICATION' ||\n                (currentUser.userRole.name == 'ROLE_ENCODER' &&\n                  s1Application?.internalStatus !== undefined)\n              \"\n              *ngIf=\"\n                showSupportDocumentFrameC ||\n                tempComplianceAttachmentDocuments?.length > 0 ||\n                ((s1Application?.internalStatus === 'S1_APPLICATION_REVIEWED' ||\n                  s1Application?.internalStatus ===\n                    'COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER' ||\n                  s1Application?.internalStatus == 'REVISION_SCREENED' ||\n                  s1Application?.internalStatus == 'S1_APPLICATION_REJECTED') &&\n                  s1Application?.decisionStatus == 'INCOMPLETE')\n              \"\n            >\n              <h4>\n                <i class=\"material-icons\">bookmark</i> &nbsp;SUPPORT DOCUMENTS\n              </h4>\n\n              <!-- Display if no support document was attached -->\n              <div class=\"col-md-12\" appearance=\"outline\">\n                <mat-checkbox\n                  (click)=\"verifyNoDocumentAttached()\"\n                  [(ngModel)]=\"s1Application.hasNoSupportingDocs\"\n                  (checked)=\"(s1Application.hasNoSupportingDocs)\"\n                  formControlName=\"hasNoSupportingDocs\"\n                  [hidden]=\"\n                    tempComplianceAttachmentDocuments[1]?.originalFilename\n                  \"\n                  *ngIf=\"\n                    currentUser.userRole.name == 'ROLE_APPLICANT' ||\n                    (currentUser.userRole.name == 'ROLE_ENCODER' &&\n                      s1Application?.internalStatus === undefined)\n                  \"\n                >\n                  I certify that no supporting document is attached to this S1\n                  application.</mat-checkbox\n                >\n                <br />\n              </div>\n\n              <p\n                *ngIf=\"\n                  (s1Application?.submissionType === 'COMPLIANCE' &&\n                    s1Application?.hasNoSupportingDocs &&\n                    s1Application?.internalStatus !== undefined &&\n                    s1Application?.internalStatus !==\n                      'S1_APPLICATION_REVIEWED' &&\n                    s1Application?.decisionStatus !== 'INCOMPLETE') ||\n                  (s1Application?.hasNoSupportingDocs &&\n                    applicationStage === 'S1-Preview')\n                \"\n              >\n                Supporting Document was not submitted.\n              </p>\n              <div class=\"col-md-12\"><br /></div>\n\n              <div *ngIf=\"!s1Application?.hasNoSupportingDocs\">\n                <div class=\"col-md-12\" appearance=\"outline\">\n                  <mat-label\n                    *ngIf=\"\n                      tempComplianceAttachmentDocuments?.length > 0 &&\n                      tempComplianceAttachmentDocuments[1]?.originalFilename\n                    \"\n                    >Filename:\n                  </mat-label>\n                  <input\n                    #supportiveInput\n                    matInput\n                    [value]=\"\n                      tempComplianceAttachmentDocuments[1]?.originalFilename\n                    \"\n                    disabled\n                    *ngIf=\"\n                      tempComplianceAttachmentDocuments?.length > 0 &&\n                      tempComplianceAttachmentDocuments[1]?.originalFilename\n                    \"\n                  /><br />\n\n                  <input\n                    #supportiveFile\n                    class=\"file-upload\"\n                    type=\"file\"\n                    accept=\".pdf\"\n                    (change)=\"selectFile($event, 'SUPPORTIVE')\"\n                    [hidden]=\"\n                      (isAscUser && isDisableFieldOnUpdate) ||\n                      tempComplianceAttachmentDocuments[1]?.originalFilename\n                    \"\n                    *ngIf=\"\n                      tempComplianceAttachmentDocuments?.length <= 2 ||\n                      (tempComplianceAttachmentDocuments?.length == 2 &&\n                        tempComplianceAttachmentDocuments[1] === null) ||\n                      s1Application?.internalStatus == 'SAVED' ||\n                      tempComplianceAttachmentDocuments[1]?.originalFilename !=\n                        null ||\n                      ((s1Application?.internalStatus ==\n                        'S1_APPLICATION_REVIEWED' ||\n                        s1Application?.internalStatus ==\n                          'COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER' ||\n                        s1Application?.internalStatus == 'REVISION_SCREENED' ||\n                        s1Application?.internalStatus ==\n                          'S1_APPLICATION_REJECTED') &&\n                        s1Application?.decisionStatus == 'INCOMPLETE')\n                    \"\n                  />\n                </div>\n\n                <div class=\"row\"><br /></div>\n                <div class=\"col-md-12\" appearance=\"outline\">\n                  <button\n                    mat-raised-button\n                    class=\"button-red button-right\"\n                    (click)=\"viewDocument('SUPPORTIVE', false)\"\n                    [hidden]=\"\n                      tempComplianceAttachmentDocuments[1]?.originalFilename ===\n                      null\n                    \"\n                    *ngIf=\"\n                      showSupportiveDocumentViewButtonC ||\n                      tempComplianceAttachmentDocuments[1]?.originalFilename\n                    \"\n                  >\n                    <i class=\"material-icons add-document\">open_in_new</i> VIEW\n                    DOCUMENT\n                  </button>\n                  &nbsp; &nbsp;\n                  <button\n                    mat-raised-button\n                    class=\"button-red button-right\"\n                    (click)=\"deleteUploadedFile('SUPPORTIVE')\"\n                    [hidden]=\"\n                      tempComplianceAttachmentDocuments[1]?.originalFilename ===\n                      null\n                    \"\n                    *ngIf=\"\n                      showSupportiveDocumentViewButtonC ||\n                      tempComplianceAttachmentDocuments[1]?.originalFilename\n                    \"\n                  >\n                    <i class=\"material-icons add-document\">delete</i> DELETE\n                    ATTACHMENT\n                  </button>\n                  &nbsp; &nbsp;\n                  <button\n                    mat-raised-button\n                    class=\"button-red button-right\"\n                    (click)=\"uploadDocument()\"\n                    [hidden]=\"isAscUser && isDisableFieldOnUpdate\"\n                    *ngIf=\"showSupportiveDocumentUploadButton\"\n                  >\n                    <i class=\"material-icons add-document\">upload</i> UPLOAD\n                  </button>\n                </div>\n                <div class=\"row\"><br /></div>\n                <br />\n              </div>\n            </div>\n\n            <div class=\"row\"><hr /></div>\n\n            <!---------- EXISTING ---------->\n            <div\n              class=\"row\"\n              *ngFor=\"let i of complianceAttachmentDocuments; let index = index\"\n            >\n              <div *ngIf=\"i !== null\">\n                <h4>\n                  <i class=\"material-icons\">bookmark</i> &nbsp;{{\n                    i?.attachmentType\n                      ?.replaceAll(\"SUPPORTIVE\", \"SUPPORTING\")\n                      ?.replaceAll(\"_\", \" \")\n                  }}\n                  DOCUMENT\n                </h4>\n                <br />\n                <div class=\"col-md-12\" appearance=\"outline\">\n                  <mat-label *ngIf=\"i?.originalFilename\">Filename: </mat-label>\n                  <input\n                    #mainInput\n                    matInput\n                    [value]=\"i?.originalFilename\"\n                    disabled\n                    *ngIf=\"i?.originalFilename\"\n                  /><br />\n                </div>\n\n                <div class=\"row\"><br /></div>\n                <div\n                  class=\"col-md-12\"\n                  appearance=\"outline\"\n                  *ngIf=\"\n                    showMainDocumentViewButton ||\n                    i?.mainAttachmentReference ||\n                    i?.supportingAttachmentReference ||\n                    i?.revisionLetterAttachmentReference\n                  \"\n                >\n                  <button\n                    mat-raised-button\n                    class=\"button-red button-right\"\n                    (click)=\"viewDocument(i.attachmentType)\"\n                  >\n                    <i class=\"material-icons add-document\">open_in_new</i> VIEW\n                    DOCUMENT\n                  </button>\n                  &nbsp; &nbsp;\n                  <button\n                    mat-raised-button\n                    class=\"button-red button-right\"\n                    (click)=\"deleteUploadedFile2(i)\"\n                    *ngIf=\"i?.status === 'UNPROCESSED'\"\n                  >\n                    <i class=\"material-icons add-document\">delete</i> DELETE\n                    ATTACHMENT\n                  </button>\n                  &nbsp; &nbsp;\n                </div>\n                <div class=\"col-md-12\"><br /></div>\n                <div class=\"col-md-12\">\n                  <hr />\n                </div>\n              </div>\n            </div>\n\n            <div\n              class=\"no-record\"\n              *ngIf=\"\n                (complianceAttachmentDocuments?.length === 0 &&\n                  complianceAttachmentDocuments[0]?.originalFilename ===\n                    undefined) ||\n                complianceAttachmentDocuments?.length === null\n              \"\n            >\n              No existing attachments for compliance.\n            </div>\n          </div>\n        </div>\n      </mat-tab>\n      <!-- END OF TAB FOR COMPLIANCE -->\n    </mat-tab-group>\n  </form>\n</div>\n","import { USER_ROLES } from './../../../../shared/utils/constants';\nimport { Component, OnInit, Input } from '@angular/core';\nimport { S1Application, AttachmentDocument, Payment, PaymentType } from '@models';\nimport { ATTACHMENT_TYPE, ENDPOINTS, PAYMENT_STATUS, SUBMISSION_TYPE } from '@shared';\nimport { SweetAlertService, DataStorageService, ApiService } from '@services';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport Swal from 'sweetalert2';\nimport { FileStorageService } from '../../../../core/services/file.storage.service';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'app-upload-payment',\n  templateUrl: './upload-payment.component.html',\n  styleUrls: ['./upload-payment.component.scss']\n})\nexport class UploadPaymentComponent implements OnInit {\n  @Input() s1Application = new S1Application();\n  payment = new Payment();\n  safeURLProofOfPayment: any;\n  selectedFiles: any;\n  previewDocument = false;\n  attachmentDocument = new AttachmentDocument();\n  currentUser: any;\n  attachmentDocuments = [];\n  isSubmitted = false;\n  paymentTypeList = [];\n  paymentType : any;\n  paymentForm: FormGroup;\n\n  constructor(\n    private sanitizer: DomSanitizer,\n    private apiService: ApiService,\n    public dataStorage: DataStorageService,\n    private fileStorageService: FileStorageService,\n    private router: Router,\n    private formBuilder: FormBuilder,\n    private sweetAlertService: SweetAlertService\n  ) { }\n\n  ngOnInit(): void {\n    console.log('Upload Payment');\n    this.currentUser = this.dataStorage.getUserAccount();\n    this.getPaymentList();\n    this.setFormValidator();\n  }\n\n  setFormValidator(): void {\n    this.paymentForm = this.formBuilder.group({\n      remarks: ['']\n    });\n  }\n\n  selectFile(event) {\n    const attachmentSize = event.target.files[0].size;\n\n    if (event.target.files[0].type === 'application/pdf') {\n      if (attachmentSize > 15000000) { // 1MB = 1M\n        this.sweetAlertService.customErrorMessage(`Attachments' total file size should not exceed 15MB.`);\n        event.target.value = '';\n        return;\n      } else {\n        const pdfURL = URL.createObjectURL(event.target.files[0]);\n        this.safeURLProofOfPayment = this.sanitizer.bypassSecurityTrustResourceUrl(pdfURL);\n        this.previewDocument = true;\n\n        // env.showSpinner = true;\n        const reader = new FileReader();\n        const [file] = event.target.files;\n\n        reader.readAsDataURL(file);\n        reader.onload = () => {\n        };\n      }\n\n      this.selectedFiles = event.target.files;\n    } else {\n      this.sweetAlertService.customErrorMessage('Attachment should be in PDF format only.');\n      event.target.value = '';\n      return;\n    }\n  }\n\n  uploadDocument(s1Application) {\n    Swal.fire({\n      text: 'Are you sure you want to submit this PROOF OF PAYMENT?',\n      icon: 'question',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Confirm'\n    }).then((result) => {\n      if (result.value) {\n        this.dataStorage.setDisplayProgressbar(true);\n        let params = '';\n        params = '?&attachmentType=' + ATTACHMENT_TYPE.PAYMENT + '&submissionType=' + SUBMISSION_TYPE.ORIGINAL;\n        this.fileStorageService.pushFileToStorage(ENDPOINTS.attachmentDocument, this.selectedFiles.item(0), params)\n        .subscribe(res => {\n            const obj = res.responseData.data;\n            console.log(obj);\n            this.s1Application.paymentAttachmentReference = obj.paymentAttachmentReference;\n            this.payment.paymentAttachmentReference = obj.paymentAttachmentReference;\n            this.payment.amountDue = s1Application.amount;\n            this.payment.applicationForm = s1Application;\n            this.payment.appFormReference = s1Application.appFormReference;\n            this.payment.filename = obj.filename;\n            this.saveProofOfPayment();\n            // this.previewDocument = true;\n            this.selectedFiles = undefined;\n          }, (err: any) => {\n            this.sweetAlertService.error(err);\n          }, () => {\n            // actions after subscription\n            this.dataStorage.setDisplayProgressbar(false);\n          });\n      }\n    });\n  }\n\n  saveProofOfPayment() {\n    console.log('Saving payment...');\n    this.dataStorage.setDisplayProgressbar(true);\n    this.payment.paymentStatus = PAYMENT_STATUS.UNPAID;\n    this.s1Application.paymentStatus = PAYMENT_STATUS.UNPAID;\n    this.payment.id = 0;\n    this.payment.officialReceiptNo = '';\n    this.payment.paymentMethod = null;\n    console.log('PAYMENT : ', this.payment);\n    console.log('S1 ',this.s1Application);\n\nreturn false\n    this.apiService.save(`${ENDPOINTS.applicationFormPresentor}payment-type-id/${this.paymentType.id}/payment/submit`, this.payment)\n    .subscribe((res: any) => {\n        console.log('SAVED STATUS: ', res.responseData.data);\n\n      this.safeURLProofOfPayment = this.sanitizer.bypassSecurityTrustResourceUrl(res.responseData.data.fileURL);\n      this.router.navigate(['asc/page/application/s1/lists']);\n        this.isSubmitted = true;\n        this.sweetAlertService.customSuccessMessage('Proof of payment successfully submitted.');\n      }, (err) => {\n        console.log(err);\n        this.sweetAlertService.error(err);\n        this.dataStorage.setDisplayProgressbar(false);\n      }, () => {\n        this.dataStorage.setDisplayProgressbar(false);\n      });\n  }\n\n  getPaymentList() {\n    this.apiService.findAll(ENDPOINTS.paymentType).subscribe((res: any) => {\n      this.paymentTypeList = res.responseData.data;\n      if (this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT) {\n        const creditCardIndex = this.paymentTypeList\n          .findIndex((element) => element.paymentDescription === 'Credit Card');\n        this.paymentTypeList.splice(creditCardIndex, 1);\n      }\n    });\n  }\n  selectedPaymentType(res){\n    let pt = new PaymentType();\n    pt  = res;\n    this.paymentType = pt;\n  }\n\n}\n","\n  <div class=\"row fields\">\n    <h4>\n      <i class=\"material-icons\">label_important</i> &nbsp;Proof of Payment\n    </h4>\n    <br>\n    <div class=\"col-md-4\" appearance=\"outline\">\n      <mat-label>Filename: </mat-label><br>\n      <input class=\"file-upload\" type=\"file\" accept=\".pdf\" (change)=\"selectFile($event)\" [hidden]=\"isSubmitted==true\"><br><br>\n\n      <div class=\"col-md-10\">\n        <div class=\"col-md-5\" appearance=\"outline\">\n          <mat-label>Amount Due:</mat-label>\n            <input type=\"text\" [(ngModel)]=\"s1Application.amount\" class=\"form-control amountDue\" [disabled]=\"true\" name=\"amountDue\">\n        </div>\n        <br>\n        <mat-form-field class=\"col-md-8\" appearance=\"outline\">\n          <mat-label>Payment Mode<span class=\"required-field\"> <mat-icon>notification_important</mat-icon>\n          </span></mat-label>\n          <mat-select [(ngModel)]=\"payment.paymentMethod\" name=\"paymentMethod\">\n            <mat-option *ngFor=\"let i of paymentTypeList\" [value]=\"i\" (click)=\"selectedPaymentType(i)\">\n              {{i.paymentDescription}}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n        <br>\n        <form [formGroup]=\"paymentForm\">\n        <div class=\"col-md-12\" appearance=\"outline\">\n          <mat-label>Remarks:</mat-label>\n          <textarea width=\"20\"  height=\"20\" [(ngModel)]=\"payment.remarks\" class=\"form-control\" name=\"remarks\" formControlName=\"remarks\"></textarea>\n        </div>\n\n</form>\n\n      </div>\n      <br><br>\n      <!-- <button mat-raised-button class=\"button-red button-right\" (click)=\"uploadDocument()\" *ngIf=\"enableUploadButton==true\">\n        <i class=\"material-icons add-document\">upload</i> UPLOAD\n      </button> -->\n    </div>\n    <div class=\"col-md-8\" appearance=\"outline\" *ngIf=\"previewDocument==true\">\n      <div class=\"file-upload\">\n        <object [data]=\"safeURLProofOfPayment\" type=\"application/pdf\" width=\"100%\" height=\"400\">\n          <iframe [src]=\"safeURLProofOfPayment\" width=\"100%\" height=\"400\">\n            <p>This browser does not support PDF!</p>\n          </iframe>\n        </object>\n      </div>\n    </div>\n    <div class=\"row\"><br></div>\n    <div class=\"col-md-12\" appearance=\"outline\" [hidden]=\"isSubmitted==true\">\n        <button mat-raised-button class=\"button-red button-right\" (click)=\"uploadDocument(s1Application)\" *ngIf=\"previewDocument==true\" [disabled]=\"!paymentType\">\n            <i class=\"material-icons add-document\">save</i> SUBMIT\n        </button>\n    </div>\n    <div class=\"row\"><br></div>\n  </div>\n","import { Component, ElementRef, Inject, OnInit, Optional, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { S1Application } from '@models';\nimport { ApiService, DataStorageService } from '@services';\nimport { APPFORM_TYPE, ENDPOINTS, FORM_TYPE } from '@shared';\nimport { NumberOfMultipleApplicationAllowed } from 'app/core/models/numberOfMultipleApplicationAllowed.model';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-s1-form-type',\n  templateUrl: './s1-form-type.component.html',\n  styleUrls: ['./s1-form-type.component.scss']\n})\nexport class S1FormTypeComponent implements OnInit {\n\n  s1Application = new S1Application();\n  numberOfMultipleApplicationAllowed = new NumberOfMultipleApplicationAllowed();\n  applicationTypeList = [];\n  formTypeList = [...FORM_TYPE];\n\n  s1ApplicationForm: FormGroup;\n\n  numberOfApplications: number;\n  showNumberOfApplications = false;\n  isMultiple = false;\n  isSpecial = false;\n  isPresentation = false;\n\n  constructor(\n    private apiService: ApiService,\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private dataStorage: DataStorageService,\n    private dialog: MatDialog,\n    @Optional() public dialogRef: MatDialogRef<S1FormTypeComponent>,\n    @Optional() @Inject(MAT_DIALOG_DATA) public data: any\n  ) { }\n\n  ngOnInit(): void {\n    this.setFormValidator('');\n    this.getApplicationTypeList();\n    this.s1Application.formType = 'INDIVIDUAL';\n    this.getNoOfMultipleApplicationsAllowed();\n  }\n\n  getNoOfMultipleApplicationsAllowed(): void {\n    this.apiService.findAll(ENDPOINTS.noOfMultipleApplicationAllowed).subscribe((res: any) => {\n      this.numberOfMultipleApplicationAllowed = res.responseData.data[0];\n    });\n  }\n\n  getApplicationTypeList() {\n    this.s1Application.applicationType = null;\n    this.applicationTypeList = [];\n    this.apiService.findAll(ENDPOINTS.applicationType).subscribe((res: any) => {\n      this.applicationTypeList = res.responseData.data;\n    });\n  }\n\n  setAsMultiple() {\n    this.isMultiple = !this.isMultiple;\n    this.showNumberOfApplications = !this.showNumberOfApplications;\n    if (this.isMultiple) {\n      this.s1Application.formType = APPFORM_TYPE.MULTIPLE;\n      this.setFormValidator('multiple')\n    } else {\n      this.setFormValidator('');\n      this.s1Application.formType = APPFORM_TYPE.INDIVIDUAL;\n    }\n  }\n\n  checkType() {\n    if (this.s1Application.applicationType.description.toLocaleLowerCase().includes('special')) {\n      this.isSpecial = true;\n    } else {\n      this.isSpecial = false;\n    }\n\n    if (this.isMultiple) {\n      this.setFormValidator('multiple');\n    }\n\n  }\n\n  setFormValidator(apptype): void {\n    let formtype;\n    if (this.s1Application.formType) {\n      formtype = this.s1Application.formType;\n    }\n\n    if (apptype === 'multiple') {\n      this.s1ApplicationForm = this.formBuilder.group({\n        formType: [formtype, Validators.required],\n        applicationType: [this.s1Application.applicationType, Validators.required],\n        numberOfApplications: [\n          '', [\n            Validators.required,\n            Validators.min(parseInt(this.numberOfMultipleApplicationAllowed.minimum.toString(), null)),\n            Validators.max(parseInt(this.numberOfMultipleApplicationAllowed.maximum.toString(), null))\n          ]\n        ],\n      });\n    } else {\n      this.s1ApplicationForm = this.formBuilder.group({\n        applicationType: [this.s1Application.applicationType, Validators.required],\n      });\n      this.showNumberOfApplications = false;\n    }\n  }\n\n  proceedS1Application(): void {\n    if (!this.isMultiple) {\n      Swal.fire({\n        text: 'Note: The application to be created is an individual application',\n        icon: 'info',\n        showCancelButton: true,\n        confirmButtonColor: '#3085d6',\n        cancelButtonColor: '#d33',\n        confirmButtonText: 'PROCEED'\n      }).then((result) => {\n        if (result.value) {\n          this.navigateToS1Application();\n        }\n      });\n      return;\n    }\n\n    this.navigateToS1Application();\n  }\n\n  navigateToS1Application(): void {\n    this.router.navigate(['/asc/page/application/s1/add']);\n    const formAndAppType = {\n      formType: this.s1Application.formType,\n      appType: this.s1Application.applicationType\n    }\n\n    this.dataStorage.setS1FormAndAppType(formAndAppType);\n    this.dataStorage.setNumberOfApplications(this.numberOfApplications);\n    this.closeModal();\n  }\n\n  setAsForPresentation() {\n    this.isPresentation = !this.isPresentation;\n    if (this.isPresentation) {\n      Swal.fire({\n        text: 'Note: Please be present or available during presentation period.',\n        icon: 'info',\n        showCancelButton: true,\n        confirmButtonColor: '#3085d6',\n        cancelButtonColor: '#d33',\n        confirmButtonText: 'PROCEED'\n      }).then((result) => {\n        if (result.value) {\n          this.s1Application.formType = APPFORM_TYPE.FOR_PRESENTATION;\n          this.proceedS1Application();\n        }\n      });\n    }\n  }\n\n  closeModal(): void {\n    this.dialogRef.close();\n  }\n\n}\n","<div id=\"form-type-modal\" class=\"row\" [formGroup]=\"s1ApplicationForm\">\n    <h1>New S1 Application</h1>\n    <hr>\n    <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n        <mat-label>Application Type</mat-label>\n        <mat-select [(ngModel)]=\"s1Application.applicationType\" name=\"applicationType\" formControlName=\"applicationType\"\n            [disabled]=\"s1Application?.internalStatus!='SAVED'&&s1Application?.internalStatus!=undefined\" (selectionChange)=\"checkType()\">\n            <mat-option *ngFor=\"let i of applicationTypeList\" [value]=\"i\">\n                {{i?.description | uppercase}}\n            </mat-option>\n        </mat-select>\n    </mat-form-field>\n\n    <div class=\"col-md-6\">\n      <mat-checkbox (click)=\"setAsMultiple()\" [disabled]=\"isPresentation || s1Application.applicationType === null || s1Application.applicationType === undefined\"\n      [ngStyle]=\"{'pointer-events': (isPresentation || s1Application.applicationType === null || s1Application.applicationType === undefined) ? 'none' : ''}\">\n      Multiple Application</mat-checkbox>\n    </div>\n    <div class=\"col-md-6\">\n      <mat-checkbox  (click)=\"setAsForPresentation()\" [disabled]=\"isMultiple || (s1Application.applicationType === null || s1Application.applicationType === undefined)\"\n      [ngStyle]=\"{'pointer-events': (isMultiple || (s1Application.applicationType === null || s1Application.applicationType === undefined ) ) ? 'none' : ''}\"\n      >For Presentation</mat-checkbox>\n    </div>\n\n    <!-- <mat-form-field class=\"col-md-12\" appearance=\"outline\" *ngIf=\"isMultiple\">\n      <mat-label>Form Type</mat-label>\n      <mat-select [(ngModel)]=\"s1Application.formType\" name=\"formType\" formControlName=\"formType\"\n      [disabled]=\"s1Application?.internalStatus!='SAVED'&&s1Application?.internalStatus!=undefined\">\n      <mat-option *ngFor=\"let i of formTypeList\" [value]=\"i.description\" (click)=\"getApplicationTypeList()\">\n        {{i?.description | uppercase}}\n      </mat-option>\n    </mat-select>\n  </mat-form-field> -->\n\n  <mat-form-field class=\"col-md-12\" appearance=\"outline\" *ngIf=\"showNumberOfApplications && s1Application?.applicationType?.description\">\n    <mat-label>Number of Applications</mat-label>\n    <input matInput [(ngModel)]=\"numberOfApplications\" formControlName=\"numberOfApplications\">\n    <mat-hint>{{numberOfMultipleApplicationAllowed.minimum}} - {{numberOfMultipleApplicationAllowed.maximum}} only</mat-hint>\n  </mat-form-field>\n\n  <div class=\"col-md-12 mt-2\" *ngIf=\"isMultiple||isSpecial\">\n    <i>Note: This application type needs Request for Approval.</i>\n  </div>\n\n  <div class=\"col-md-12\"><br></div>\n\n  <div class=\"col-md-12 action_items\">\n    <button class=\"button-red col-md-5\" mat-raised-button\n            (click)=\"proceedS1Application()\" [disabled]=\"!s1ApplicationForm.valid||!s1Application.applicationType\">\n            <i class=\"material-icons color__white\">send</i> Proceed\n        </button>\n\n        <button class=\"button-red col-md-5\" mat-raised-button (click)=\"closeModal()\">\n            <i class=\"material-icons color__white\">cancel</i> Cancel\n        </button>\n    </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ReassignmentComponent } from './reassignment.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ReassignmentComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ReassignmentRoutingModule { }\n","import { AngularEditorConfig } from './../editor/lib/config';\nimport { CommentThread } from './../../../../core/models/comments.model';\nimport { DatePipe } from '@angular/common';\nimport { Component, Inject, Input, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { COMMENT_TYPE, APPFORM_TYPE, APPLICATION_STAGE, APPLICATION_STATUS_FOR_COMPLIANCE, APPLICATION_STATUS } from '@shared';\nimport { S1Application, S2Application } from '@models';\nimport { ApiService, DataStorageService, SweetAlertService } from '@services';\nimport { ENDPOINTS } from '@shared';\nimport Swal from 'sweetalert2';\nimport { Comment } from '../../../../core/models/comment.model';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CopyClaims } from 'app/core/models/copy-claims.model';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-comment',\n  templateUrl: './comment.component.html',\n  styleUrls: ['./comment.component.scss']\n})\nexport class CommentComponent implements OnInit {\n  @Input() commentS1Application = new S1Application();\n  @Input() commentS2Application = new S2Application();\n  @Input() sampleDataTransfer;\n\n\n  comment = new Comment();\n  internalComment:CommentThread = new CommentThread();\n  externalComment:CommentThread = new CommentThread();\n  copyClaims = new CopyClaims();\n  commentForm: FormGroup;\n  todayDate: Date = new Date();\n  commentList = [];\n  internalCommentList:Array<CommentThread> = new Array<CommentThread>();\n  externalCommentList:Array<CommentThread> = new Array<CommentThread>();\n  replyInternalComment:CommentThread = new CommentThread();\n  copyClaimsList = [];\n  commentId: number = 0;\n  commentTypeList = [...COMMENT_TYPE];\n  commentType = '';\n  applicationStage: string;\n  internalCommentProcess = 'Save';\n  externalCommentProcess = 'Save';\n  copyClaimesProcess = 'Save';\n  id: any;\n  commentHtmlOutput: string;\n  disabledComment = false;\n\n  currentUser: any;\n  editCopyClaimsComment = false;\n  editExternalComment = false;\n\n  replyEditorConfig: AngularEditorConfig = {\n    editable: true,\n    spellcheck: true,\n    height: '13m',\n    minHeight: '0',\n    maxHeight: 'auto',\n    width: 'auto',\n    minWidth: '0',\n    translate: 'no',\n    enableToolbar: true,\n    showToolbar: true,\n    placeholder: 'Enter reply here...',\n    defaultParagraphSeparator: 'p',\n    defaultFontName: 'Calibri',\n    defaultFontSize: '3',\n    fonts: [\n      { class: 'arial', name: 'Arial' },\n      { class: 'times-new-roman', name: 'Times New Roman' },\n      { class: 'calibri', name: 'Calibri' },\n      { class: 'comic-sans-ms', name: 'Comic Sans MS' }\n    ],\n\n    customClasses: [\n      {\n        name: 'quote',\n        class: 'quote',\n      },\n      {\n        name: 'redText',\n        class: 'redText'\n      },\n      {\n        name: 'titleText',\n        class: 'titleText',\n        tag: 'h1',\n      },\n    ],\n    uploadUrl: 'v1/image',\n    // upload: (file: File) => { ... }\n    uploadWithCredentials: false,\n    sanitize: true,\n    toolbarPosition: 'top',\n    toolbarHiddenButtons: [\n      ['link',\n        'unlink',\n        'insertImage',\n        'insertVideo',],\n    ]\n  }\n\n  editorConfig: AngularEditorConfig = {\n    editable: true,\n    spellcheck: true,\n    height: '15em',\n    minHeight: '0',\n    maxHeight: 'auto',\n    width: 'auto',\n    minWidth: '0',\n    translate: 'no',\n    enableToolbar: true,\n    showToolbar: true,\n    placeholder: 'Enter text here...',\n    defaultParagraphSeparator: 'p',\n    defaultFontName: 'Calibri',\n    defaultFontSize: '3',\n    fonts: [\n      { class: 'arial', name: 'Arial' },\n      { class: 'times-new-roman', name: 'Times New Roman' },\n      { class: 'calibri', name: 'Calibri' },\n      { class: 'comic-sans-ms', name: 'Comic Sans MS' }\n    ],\n\n    customClasses: [\n      {\n        name: 'quote',\n        class: 'quote',\n      },\n      {\n        name: 'redText',\n        class: 'redText'\n      },\n      {\n        name: 'titleText',\n        class: 'titleText',\n        tag: 'h1',\n      },\n    ],\n    uploadUrl: 'v1/image',\n    // upload: (file: File) => { ... }\n    uploadWithCredentials: false,\n    sanitize: true,\n    toolbarPosition: 'top',\n    toolbarHiddenButtons: [\n      ['link',\n        'unlink',\n        'insertImage',\n        'insertVideo',],\n    ]\n  };\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private dataStorageService: DataStorageService,\n    private sweetAlertService: SweetAlertService,\n    private dataStorage: DataStorageService,\n    private apiService: ApiService,\n    public datepipe: DatePipe,\n    private spinner: NgxSpinnerService,\n    private route: ActivatedRoute,\n    private dialog: MatDialog,\n  ) { }\n\n  ngOnInit(): void {\n\n    this.setFormValidator();\n    this.id = Number(this.route.snapshot.paramMap.get('id'));\n    this.currentUser = this.dataStorage.getUserAccount();\n    console.log(this.applicationStage);\n\n    if ((!this.commentS1Application.screenerDecisionComment && !this.commentS1Application.reviewerDecisionComment &&\n      (this.commentS1Application.releaseStatus === 'FOR_RELEASE' || this.commentS1Application.releaseStatus === 'RELEASED') &&\n      this.currentUser.userRole.name !== 'ROLE_REVIEWER')\n      || this.commentS1Application.internalStatus === APPLICATION_STATUS.S1_APPLICATION_REJECTED) {\n      this.disabledComment = true;\n    }\n\n\n    // if(this.applicationStage != APPLICATION_STAGE.S2_APPLICATION){\n    //     this.getComments('');\n    // }\n    this.getComments();\n    this.getCopyClaims();\n  }\n\n  addInternalComment(comment: CommentThread): void {\n    let endpoint;\n    if (this.applicationStage === APPLICATION_STAGE.S2_APPLICATION) {\n      endpoint = ENDPOINTS.commentS2\n      this.internalComment.applicationFormType = APPFORM_TYPE.S2;\n      this.internalComment.applicationFormS2 = this.commentS2Application;\n      console.log('S2 Comment Object', this.internalComment);\n    } else {\n      endpoint = ENDPOINTS.comment\n      this.internalComment.applicationFormType = APPFORM_TYPE.S1;\n      this.internalComment.appFormReference = this.commentS1Application.appFormReference;\n      console.log('S1 Comment Object', this.internalComment);\n    }\n\n    if (this.internalCommentProcess === 'Save') {\n      this.spinner.show();\n      comment.actionBy = this.currentUser;\n      comment.role = this.dataStorageService.getUserRole();\n      comment.actionDate = new Date();\n      comment.commentType = 'INTERNAL';\n      comment.comment = this.setHtml5Value(comment.comment);\n      this.internalCommentList.push(comment);\n\n      this.apiService.save(endpoint, comment).subscribe(\n        (res: any) => {\n          console.log('RES', res);\n          if (res !== undefined) {\n            this.spinner.hide();\n            this.sweetAlertService.customSuccessMessage('Internal Comment has been added!');\n            this.internalComment = new CommentThread();\n            this.getComments();\n            this.getCommentsS2(res.responseData.data.applicationFormS2);\n          }\n        }, (err: any) => {\n          this.spinner.hide();\n          console.log('errrrrrrrr:::', err);\n\n          this.sweetAlertService.error(err);\n        }, () => {\n          this.spinner.hide();\n          this.comment = new Comment();\n        })\n\n    } else {\n      let dateTransformed = this.datepipe.transform(new Date(), 'yyyy-MM-dd')\n\n      Swal.fire({\n        text: 'Are you sure you want to update this comment?',\n        icon: 'question',\n        showCancelButton: true,\n        confirmButtonColor: '#3085d6',\n        cancelButtonColor: '#d33',\n        confirmButtonText: 'Confirm'\n      }).then((result) => {\n        if (result.value) {\n          this.spinner.show();\n          // this.internalComment.modifiedBy = this.currentUser.username\n          // this.internalComment.modifiedDate = new Date();\n          this.internalComment.comment = this.setHtml5Value(this.internalComment.comment);\n          this.apiService.update(endpoint, this.internalComment).subscribe(\n            (res: any) => {\n              // this.internalCommentList = res.responseData.data;\n              this.spinner.hide();\n              this.sweetAlertService.customSuccessMessage('Internal Comment has been Updated!');\n              this.internalComment = new CommentThread();\n              this.internalCommentProcess = 'Save';\n              this.getComments();\n              this.getCommentsS2(res.responseData.data.applicationFormS2);\n            }, (err: any) => {\n              this.spinner.hide();\n            });\n        }\n\n      });\n    }\n\n  }\n\n  sendReply(comment: CommentThread){\n    \n    console.log(this.replyInternalComment)\n    // this.replyInternalComment.parent = comment;\n    this.replyInternalComment.isReply = true;\n    this.replyInternalComment.parentId = comment.id;\n    this.addInternalComment(this.replyInternalComment);\n\n  }\n  cancelReply(comment: CommentThread){\n    comment = new CommentThread();\n    comment.replyEditorIsEnabled = false;\n  }\n\n  addExternalComment(): void {\n    let endpoint;\n    if (this.applicationStage === APPLICATION_STAGE.S2_APPLICATION) {\n      endpoint = ENDPOINTS.commentS2\n      this.externalComment.applicationFormType = APPFORM_TYPE.S2;\n      this.externalComment.applicationFormS2 = this.commentS2Application;\n    } else {\n      endpoint = ENDPOINTS.comment\n      this.externalComment.applicationFormType = APPFORM_TYPE.S1;\n      this.externalComment.appFormReference = this.commentS1Application.appFormReference;\n    }\n\n    if (this.externalCommentProcess === 'Save') {\n      this.spinner.show();\n      this.externalComment.actionBy = this.currentUser;\n      this.externalComment.role = this.dataStorageService.getUserRole();\n      this.externalComment.actionDate = new Date();\n      this.externalComment.commentType = 'EXTERNAL';\n      this.externalComment.comment = this.setHtml5Value(this.externalComment.comment);\n      this.externalCommentList.push(this.externalComment);\n\n      this.apiService.save(endpoint, this.externalComment).subscribe(\n        (res: any) => {\n          if (res !== undefined) {\n            this.spinner.hide();\n            this.sweetAlertService.customSuccessMessage('External Comment has been added!');\n            this.externalComment = new CommentThread();\n            this.editExternalComment = false;\n            this.getComments();\n            this.getCommentsS2(res.responseData.data.applicationFormS2);\n          }\n        }, (err: any) => {\n          this.spinner.hide();\n          console.log('errrrrrrrr:::', err);\n\n          this.sweetAlertService.error(err);\n        }, () => {\n          this.spinner.hide();\n          this.comment = new Comment();\n        })\n\n    } else {\n      let dateTransformed = this.datepipe.transform(new Date(), 'yyyy-MM-dd')\n\n      Swal.fire({\n        text: 'Are you sure you want to update this comment?',\n        icon: 'question',\n        showCancelButton: true,\n        confirmButtonColor: '#3085d6',\n        cancelButtonColor: '#d33',\n        confirmButtonText: 'Confirm'\n      }).then((result) => {\n        if (result.value) {\n          this.spinner.show();\n          // this.externalComment.modifiedBy = this.currentUser.username;\n          // this.externalComment.modifiedDate = new Date();\n          this.externalComment.comment = this.setHtml5Value(this.externalComment.comment);\n          this.apiService.update(endpoint, this.externalComment).subscribe(\n            (res: any) => {\n              this.spinner.hide();\n              // this.externalCommentList = res.responseData.data;\n              this.sweetAlertService.customSuccessMessage('External Comment has been Updated!');\n              this.externalComment = new CommentThread();\n              this.externalCommentProcess = 'Save'\n              this.editExternalComment = false;\n              this.getComments();\n              this.getCommentsS2(res.responseData.data.applicationFormS2);\n            }, (err: any) => {\n              this.spinner.hide();\n            });\n        }\n\n      });\n    }\n  }\n\n  addCopyClaims(): void {\n    if (this.copyClaimesProcess === 'Save') {\n      this.spinner.show();\n      this.copyClaims.actionBy = this.currentUser;\n      this.copyClaims.role = this.dataStorageService.getUserRole();\n      this.copyClaims.actionDate = new Date();\n      this.copyClaims.appFormReference = this.commentS1Application.appFormReference;\n      this.copyClaims.description = this.setHtml5Value(this.copyClaims.description);\n\n      this.apiService.save(ENDPOINTS.copyClaims, this.copyClaims).subscribe(\n        (res: any) => {\n          if (res !== undefined) {\n            this.spinner.hide();\n            this.sweetAlertService.customSuccessMessage('Copy claims description has been added!');\n            this.copyClaims = new CopyClaims();\n            this.getCopyClaims();\n            this.editCopyClaimsComment = false;\n          }\n        }, (err: any) => {\n          this.spinner.hide();\n          // console.log('errrrrrrrr:::', err);\n\n          this.sweetAlertService.error(err);\n        }, () => {\n          this.spinner.hide();\n          this.copyClaims = new CopyClaims();\n        })\n    } else {\n      Swal.fire({\n        text: 'Are you sure you want to update copy claim?',\n        icon: 'question',\n        showCancelButton: true,\n        confirmButtonColor: '#3085d6',\n        cancelButtonColor: '#d33',\n        confirmButtonText: 'Confirm'\n      }).then((result) => {\n        if (result.value) {\n          this.spinner.show();\n          this.copyClaims.description = this.setHtml5Value(this.copyClaims.description);\n          this.apiService.update(ENDPOINTS.copyClaims, this.copyClaims).subscribe(\n            (res: any) => {\n              this.spinner.hide();\n              this.sweetAlertService.customSuccessMessage('Copy claims description has been Updated!');\n              this.copyClaims = new CopyClaims();\n              this.copyClaimesProcess = 'Save'\n              this.editCopyClaimsComment = false;\n              this.getCopyClaims();\n\n            }, (err: any) => {\n              this.spinner.hide();\n            });\n        }\n\n      });\n    }\n  }\n\n  getComments(): void { // comments for S1\n    if (this.commentS1Application) {\n      this.apiService.findByParam(ENDPOINTS.comment + '/app-form-reference', this.commentS1Application.appFormReference).subscribe(\n        (res: any) => {\n          this.commentList = res.responseData.data;\n          // get internal comments\n          this.internalCommentList = this.commentList.filter(internalComment => internalComment.commentType === 'INTERNAL');\n          console.log('INTERNAL', this.internalCommentList);\n          // get external comments\n          this.externalCommentList = this.commentList.filter(externalComment => externalComment.commentType === 'EXTERNAL');\n          console.log('EXTERNAL', this.externalCommentList);\n          this.spinner.hide();\n        }, (err: any) => {\n        });\n    }\n  }\n\n  getCommentsS2(data): void { // comments for S2\n    if (data) {\n      this.apiService.findByParam(ENDPOINTS.commentS2 + '/application-form-s2', data.id).subscribe(\n        (res: any) => {\n          this.commentList = res.responseData.data;\n          // get internal comments\n          this.internalCommentList = this.commentList.filter(internalComment => internalComment.commentType === 'INTERNAL');\n          // get external comments\n          this.externalCommentList = this.commentList.filter(externalComment => externalComment.commentType === 'EXTERNAL');\n        }, (err: any) => {\n        });\n    }\n  }\n\n  getCopyClaims(): void {\n    this.apiService.findByParam(ENDPOINTS.copyClaims + '/app-form-reference', this.commentS1Application.appFormReference).subscribe(\n      (res: any) => {\n        this.copyClaimsList = res.responseData.data;\n      }, (err: any) => {\n      });\n  }\n\n  modifyCopyClaims(data) {\n    this.copyClaimesProcess = 'Update';\n    this.copyClaims = data;\n    this.editCopyClaimsComment = true;\n    this.getCopyClaims();\n  }\n\n  modifyInternalComment(data): void {\n    this.internalCommentProcess = 'Update';\n    this.internalComment = data;\n    this.getComments();\n    this.getCommentsS2(data);\n  }\n\n  deleteComment(data): void {\n    let endpoint;\n    if (this.applicationStage === APPLICATION_STAGE.S2_APPLICATION) {\n      endpoint = ENDPOINTS.commentS2\n    } else {\n      endpoint = ENDPOINTS.comment\n    }\n    Swal.fire({\n      text: 'Are you sure you want to delete this comment?',\n      icon: 'question',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Confirm'\n    }).then((result) => {\n      if (result.value) {\n        this.spinner.show();\n        this.apiService.deleteById(endpoint, data.id).subscribe(\n          (res: any) => {\n            if (data?.applicationFormType === 'S1') {\n              this.getComments();\n            } else {\n              this.getCommentsS2(data);\n            }\n            this.sweetAlertService.customSuccessMessage('Comment has been Deleted!');\n          }, (err: any) => {\n            this.spinner.hide()\n          });\n      }\n    });\n  }\n\n  deleteCopyClaims(data): void {\n\n    Swal.fire({\n      text: 'Are you sure you want to delete this copy claims?',\n      icon: 'question',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Confirm'\n    }).then((result) => {\n      if (result.value) {\n        this.apiService.deleteById(ENDPOINTS.copyClaims, data.id).subscribe(\n          (res: any) => {\n            this.sweetAlertService.customSuccessMessage('Copy claim has been Deleted!');\n            this.getCopyClaims();\n          }, (err: any) => {\n          });\n      }\n    });\n  }\n\n  modifyExternalComment(data): void {\n    this.externalCommentProcess = 'Update';\n    this.externalComment = data;\n    this.editExternalComment = true;\n    this.getComments();\n    this.getCommentsS2(data);\n  }\n\n  cancel(): void {\n    this.internalComment = new CommentThread();\n    this.externalComment = new CommentThread();\n    this.copyClaims = new CopyClaims();\n    this.internalCommentProcess = 'Save';\n    this.externalCommentProcess = 'Save';\n    this.copyClaimesProcess = 'Save';\n    this.editCopyClaimsComment = false;\n    this.editExternalComment = false;\n    this.getComments();\n    this.getCopyClaims();\n\n  }\n\n  setFormValidator(): void {\n    this.commentForm = this.formBuilder.group({\n      internalComments: [''],\n      externalComments: [''],\n      commentType: [''],\n      description: [''],\n    });\n  }\n\n  setHtml5Value(commentBody: any) {\n    this.commentHtmlOutput = \"<!DOCTYPE html><html lang=\" + \"en\" + \"><meta charset=\" + \"utf-8\" + \"><body>\" + commentBody + \"</body></html>\"\n    return this.commentHtmlOutput;\n  }\n\n}\n","<form [formGroup]=\"commentForm\">\n  <mat-tab-group mat-align-tabs=\"center\" class=\"mat-tab-group\">\n    <!-- TAB FOR INTERNAL COMMENTS -->\n    <mat-tab label=\"Internal Comments Tab\">\n      <div class=\"mat-tab\">\n        <div class=\"col comment\">\n          <label>INTERNAL</label>\n          <angular-editor #editorToolBar [(ngModel)]=\"internalComment.comment\" [config]=\"editorConfig\" name=\"internalComments\"\n          formControlName=\"internalComments\"\n          [hidden]=\"disabledComment\"></angular-editor><br>\n\n          <div class=\"\">\n            <button mat-raised-button color=\"primary\" (click)=\"addInternalComment(internalComment)\" [disabled]=\"!internalComment.comment\"\n            [hidden]=\"disabledComment\">\n              <i class=\"material-icons color__white\">comment_bank</i> &nbsp;{{internalCommentProcess}}\n            </button>\n            <button mat-raised-button color=\"primary\" (click)=\"cancel()\" [disabled]=\"!internalComment.comment\"\n            [hidden]=\"disabledComment\">\n              <i class=\"material-icons color__white\">cancel</i> &nbsp;Cancel\n            </button>\n            <div >\n              <!-- CURRENT COMMENT -->\n              <div class=\"comment-list\">\n                <form class=\"comments\" *ngFor=\"let comment of internalCommentList\">\n                  <div class=\"row username-content\">\n                    <p> <i class=\"material-icons\">comment</i> {{comment?.actionBy?.firstName}}\n                      {{comment.actionBy.lastName}}<b> ({{comment.role.replaceAll('_', ' ').replaceAll('ROLE' , '')}}) |\n                        {{comment.actionDate | date:'fullDate'}} | {{comment.actionDate | date:'hh:mm:ss aa'}} </b>\n  \n                      <b *ngIf=\"comment?.modifiedBy != undefined && comment?.modifiedDate != undefined\"> | Modified by:\n                        {{comment.modifiedBy}} ({{comment.modifiedDate}}) </b>\n  \n                      <span class=\"a-icon\" *ngIf=\"comment?.actionBy?.id === currentUser?.id || currentUser?.userRole?.name === 'ROLE_REVIEWER'\"\n                      [hidden]=\"disabledComment\">\n                        <i class=\"material-icons\" (click)=\"deleteComment(comment)\" matTooltip=\"Delete\">delete</i>\n                      </span>\n                      <span class=\"a-icon\" *ngIf=\"comment?.actionBy?.id === currentUser?.id || currentUser?.userRole?.name === 'ROLE_REVIEWER'\"\n                        [hidden]=\"disabledComment\">\n                        <i class=\"material-icons\" style=\"color:blue\" (click)=\"modifyInternalComment(comment)\" matTooltip=\"Edit\">edit</i>\n                      </span>\n  \n                    </p>\n                  </div>\n                  <div class=\"comment-content\">\n                    <div [innerHTML]=\"comment.comment\"></div>\n                  </div>\n                </form>\n              </div>\n\n\n              <!-- CURRENT COMMENT END -->\n\n              <!-- NEW COMMENT IMPL -->\n              \n              <!-- NEW COMMENT IMPL END -->\n              <div class=\"no-record\" *ngIf=\"internalCommentList.length==0 && disabledComment\">\n                No results found.\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </mat-tab>\n    <!-- END OF TAB FOR INTERNAL COMMENTS -->\n\n    <!-- TAB FOR COPY CLAIMS -->\n    <mat-tab label=\"Copy Claims Tab\"\n      *ngIf=\"currentUser?.userRole?.name != 'ROLE_ENCODER' && commentS1Application.appliedS2 === false\">\n      <div class=\"col comment\">\n        <label>COPY/CLAIMS</label>\n        <div class=\"\">\n          <ng-container *ngIf=\"editCopyClaimsComment || (!editCopyClaimsComment && copyClaimsList?.length === 0)\">\n            <angular-editor [(ngModel)]=\"copyClaims.description\" [config]=\"editorConfig\" name=\"description\"\n              formControlName=\"description\"\n              [hidden]=\"disabledComment\">\n            </angular-editor><br>\n            <button mat-raised-button color=\"primary\" (click)=\"addCopyClaims()\" [disabled]=\"!copyClaims.description\"\n              [hidden]=\"disabledComment\">\n              <i class=\"material-icons color__white\">comment_bank</i> &nbsp;{{copyClaimesProcess}}\n            </button>\n            <button mat-raised-button color=\"primary\" (click)=\"cancel()\" [disabled]=\"!copyClaims.description\"\n              [hidden]=\"disabledComment\">\n              <i class=\"material-icons color__white\">cancel</i> &nbsp;Cancel\n            </button>\n          </ng-container>\n          <div class=\"comment-list\">\n            <form class=\"comments\" *ngFor=\"let copyClaims of copyClaimsList\">\n              <div class=\"row username-content\">\n                <p> <i class=\"material-icons color__white\">comment</i> {{copyClaims?.actionBy?.firstName}}\n                  {{copyClaims.actionBy.lastName}}<b> ({{copyClaims.role.replaceAll('_', ' ').replaceAll('ROLE', '')}})\n                    | {{copyClaims.actionDate | date:'fullDate'}} | {{copyClaims.actionDate | date:'hh:mm:ss aa'}} </b>\n\n                    <b *ngIf=\"copyClaims?.modifiedBy != undefined && copyClaims?.modifiedDate != undefined\"> | Modified by:\n                      {{copyClaims.modifiedBy}} ({{copyClaims.modifiedDate}}) </b>\n\n                    <!-- <span class=\"a-icon\" *ngIf=\"copyClaims?.actionBy?.id === currentUser?.id || currentUser?.userRole?.name === 'ROLE_REVIEWER'\"\n                    [hidden]=\"disabledComment\">\n                      <i class=\"material-icons\" (click)=\"deleteCopyClaims(copyClaims)\" matTooltip=\"Delete\">delete</i>\n                    </span> -->\n                    <span class=\"a-icon\" *ngIf=\"copyClaims?.actionBy?.id === currentUser?.id || currentUser?.userRole?.name === 'ROLE_REVIEWER'\"\n                      [hidden]=\"disabledComment\">\n                      <i class=\"material-icons\" style=\"color:blue\" (click)=\"modifyCopyClaims(copyClaims)\" matTooltip=\"Edit\">edit</i>\n                    </span>\n              </div>\n              <div class=\"comment-content\">\n                <div [innerHTML]=\"copyClaims.description\"></div>\n              </div>\n            </form>\n            <div class=\"no-record\"\n              *ngIf=\"copyClaimsList.length==0 && disabledComment\">\n              No results found.\n            </div>\n          </div>\n        </div>\n      </div>\n    </mat-tab>\n    <!-- END OF TAB FOR COPY CLAIMS -->\n\n    <!-- TAB FOR EXTERNAL COMMENTS -->\n    <mat-tab label=\"External Comments Tab\">\n      <div class=\"col comment\">\n        <label>EXTERNAL</label>\n        <div class=\"\">\n          <ng-container *ngIf=\"editExternalComment || (!editExternalComment && externalCommentList?.length === 0)\">\n            <angular-editor [(ngModel)]=\"externalComment.comment\" [config]=\"editorConfig\" name=\"externalComments\"\n              formControlName=\"externalComments\"\n              [hidden]=\"commentS2Application?.internalStatus === 'S1_APPLICATION_REVIEWED' ||\n              (disabledComment)\">\n            </angular-editor><br>\n            <button mat-raised-button color=\"primary\" (click)=\"addExternalComment()\" [disabled]=\"!externalComment.comment\"\n              [hidden]=\"commentS2Application?.internalStatus === 'S1_APPLICATION_REVIEWED' ||\n              (disabledComment)\">\n              <i class=\"material-icons\">comment_bank</i> &nbsp;{{externalCommentProcess}}\n            </button>\n            <button mat-raised-button color=\"primary\" (click)=\"cancel()\" [disabled]=\"!externalComment.comment\"\n              [hidden]=\"commentS2Application?.internalStatus === 'S1_APPLICATION_REVIEWED' ||\n              (disabledComment)\">\n              <i class=\"material-icons\">cancel</i> &nbsp;Cancel\n            </button>\n          </ng-container>\n          <div class=\"comment-list\">\n            <form class=\"comments\" *ngFor=\"let excomment of externalCommentList\">\n              <div class=\"row username-content\">\n                <p> <i class=\"material-icons\">comment</i> {{excomment?.actionBy?.firstName}}\n                  {{excomment.actionBy.lastName}}<b> ({{excomment.role.replaceAll('_', ' ').replaceAll('ROLE' , '')}}) |\n                    {{excomment.actionDate | date:'fullDate'}} | {{excomment.actionDate | date:'hh:mm:ss aa'}} </b>\n\n                    <b *ngIf=\"excomment?.modifiedBy != undefined && excomment?.modifiedDate != undefined\"> | Modified by:\n                      {{excomment.modifiedBy}} ({{excomment.modifiedDate}}) </b>\n\n                    <!-- <span class=\"a-icon\" *ngIf=\"excomment?.actionBy?.id === currentUser?.id || currentUser?.userRole?.name === 'ROLE_REVIEWER'\"\n                    [hidden]=\"disabledComment\">\n                      <i class=\"material-icons\" (click)=\"deleteComment(excomment)\" matTooltip=\"Delete\">delete</i>\n                    </span> -->\n                    <span class=\"a-icon\" *ngIf=\"excomment?.actionBy?.id === currentUser?.id || currentUser?.userRole?.name === 'ROLE_REVIEWER'\"\n                      [hidden]=\"disabledComment\">\n                      <i class=\"material-icons\" style=\"color:blue\" (click)=\"modifyExternalComment(excomment)\" matTooltip=\"Edit\">edit</i>\n                    </span>\n                  </p>\n              </div>\n              <div class=\"comment-content\">\n                <div class=\"inner-html\" [innerHTML]=\"excomment.comment\"></div>\n              </div>\n            </form>\n            <div class=\"no-record\"\n              *ngIf=\"externalCommentList.length==0 && disabledComment\">\n              No results found.\n            </div>\n          </div>\n        </div>\n      </div>\n    </mat-tab>\n    <!-- END OF TAB FOR EXTERNAL COMMENTS -->\n  </mat-tab-group>\n</form>\n","import { S2Application, UserAccount } from '@models';\nexport class CommentThread {\n    id:                  number;\n    appFormReference:    string;\n    applicationFormType: string;\n    comment:             string;\n    actionBy:            UserAccount;\n    commentType:         string;\n    role:                string;\n    actionDate:          Date;\n    isReply:             boolean;\n    replies:             Array<CommentThread>;\n    parentId:            number;\n    parent:              any;\n    replyEditorIsEnabled: boolean;\n    applicationFormS2: S2Application;\n    constructor(){\n        this.parent = {};\n        this.replyEditorIsEnabled = false;\n        this.isReply = false;\n    }\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AddCompanyRoutingModule } from './add-company-routing.module';\nimport { AngularMaterialModule } from '@shared';\nimport { AddCompanyComponent } from './add-company.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n\n@NgModule({\n  declarations: [ AddCompanyComponent ],\n  imports: [\n    CommonModule,\n    AddCompanyRoutingModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    AngularMaterialModule,\n  ]\n})\nexport class AddCompanyModule { }\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTable, MatTableDataSource } from '@angular/material/table';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { S2Application } from '@models';\nimport { ApiService, DataStorageService, SweetAlertService } from '@services';\nimport { APPLICATION_STATUS, ENDPOINTS, FORM_STATUS, ROLES, SUBMISSION_TYPE, USER_ROLES } from '@shared';\nimport { ApplicationRequest } from 'app/core/models/application-request.model';\nimport { ApplicationCountS2 } from 'app/core/models/applicationCountS2.model';\nimport { MultipleApplication } from 'app/core/models/multiple-application.model';\nimport { CommonServices } from 'app/core/services/common-services.service';\nimport { RequestForSpecialClearingComponent } from 'app/modules/fragments/request-for-special-clearing/request-for-special-clearing.component';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-list-s2-application',\n  templateUrl: './list-s2-application.component.html',\n  styleUrls: ['./list-s2-application.component.scss']\n})\nexport class ListS2ApplicationComponent implements OnInit {\n  @ViewChild(MatPaginator, { static: false }) paginatorFalse: MatPaginator;\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  pageSize = 10;\n  pageNo = 0;\n  pageSizeOptions: number[] = [10, 20, 50];\n  @ViewChild(MatSort, { static: false }) sort: MatSort;\n  @ViewChild(MatTable, { static: false }) table: MatTable<S2Application>;\n  dataSource: MatTableDataSource<S2Application>; // in html but not existing in component -- encountered during 'ng serve --aot'\n  displayedColumns = ['referenceCode', 'typeOfApplication', 'companyName', 'brand', 'typeOfMedium', 'status', 'internalStatus', 'icon'];\n  s2ApplicationList = [];\n  s2TotalItems = 0;\n  isAscUser: boolean = false\n\n  // For clearance list\n  forClearanceDataSource: MatTableDataSource<S2Application>;\n  s2ApplicationListForClearance = [];\n  forClearanceDisplayedColumns = ['referenceCode', 'typeOfApplication', 'companyName', 'brand', 'typeOfMedium', 'status', 'icon'];\n  s2SpecialTotalItems = 0;\n\n  s2SpecialApplicationDataSource: MatTableDataSource<MultipleApplication>;\n  s2SpecialApplicationList = []\n  s2SpecialApplicationDisplayedColumns = ['adTitle', 'typeOfApplication', 'companyName', 'brand', 'status'];\n\n  applicationRequest = new ApplicationRequest();\n\n  currentUser: any;\n  viewApplicationType: string;\n  applicationTypeTitle: string;\n  currentPage = 1;\n  // currentSize = 100;\n  originalTabDataCount = 0;\n  complianceTabDataCount = 0;\n  releasedAppealTabDataCount = 0;\n  toaTabDataCount = 0;\n  click = 0;\n  timeLeft: number = 60;\n  interval: any;\n  refreshButtonEnabled = true;\n  timerDisplay: any;\n  isTimerValueDisplay = false;\n  s2ApplicationCountList = [];\n\n  displayedContent = 'ORIGINAL';\n\n  s2Application = new S2Application();\n  applicationCountS2 = new ApplicationCountS2();\n\n  isSuperAdmin = false;\n  isAdmin = false;\n  isAccounting = false;\n  isApplicant = false;\n  isScreener = false;\n  isReviewer = false;\n  isAdSpecialist = false;\n  isEvaluator = false;\n  ascUserRoleList = [...ROLES.filter((role: any) => role.ascUser === true).map((role: any) => role.role)];\n  constructor(\n    private apiService: ApiService,\n    private dataStorage: DataStorageService,\n    private router: Router,\n    private sweetAlertService: SweetAlertService,\n    private dialog: MatDialog,\n    private spinner: NgxSpinnerService,\n    private route: ActivatedRoute,\n    private commonService: CommonServices\n  ) { }\n\n  ngOnInit(): void {\n    this.isAscUser = this.ascUserRoleList.includes(this.dataStorage.getUserRole());\n    this.currentUser = this.dataStorage.getUserAccount();\n    this.viewApplicationType = this.route.parent.snapshot.url[0].path;\n    this.getListCount();\n    if (this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT) {\n      this.displayedColumns = ['referenceCode', 'typeOfApplication', 'companyName', 'brand', 'typeOfMedium', 'status', 'icon'];\n    }\n\n    if (this.viewApplicationType === 'special') {\n      this.applicationTypeTitle = 'SPECIAL CLEARING';\n      this.getSpecialS2ApplicationList();\n    } else {\n      this.applicationTypeTitle = 'INDIVIDUAL';\n      this.getList();\n    }\n\n    this.initUserRole();\n  }\n\n\n  initUserRole() {\n    if (this.currentUser.userRole.name === USER_ROLES.ROLE_SUPER_ADMIN) {\n      this.isSuperAdmin = true;\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_ADMIN) {\n      this.isAdmin = true;\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_ACCOUNTING) {\n      this.isAccounting = true;\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT) {\n      this.isApplicant = true;\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_SCREENER) {\n      this.isScreener = true;\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_REVIEWER) {\n      this.isReviewer = true;\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_AD_SPECIALIST) {\n      this.isAdSpecialist = true;\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_ENCODER) {\n      this.isEvaluator = true;\n    }\n  }\n\n\n  getListCount(): void {\n    let endpoint;\n    if (this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT) {\n      endpoint = ENDPOINTS.badgeCountByApplicationOwnerS2;\n    } else {\n      endpoint = ENDPOINTS.badgeCountByAscUserS2;\n    }\n    this.apiService.findAll(endpoint + this.currentUser.id).subscribe(\n      (res: any) => {\n        this.applicationCountS2 = res;\n      })\n  }\n\n  getList(submissionType = 'ORIGINAL'): void {\n\n    this.currentPage = this.pageNo;\n    this.currentPage++;\n    if (this.currentPage === 0) this.currentPage++;\n    let param = submissionType.toUpperCase();\n\n    if (param === SUBMISSION_TYPE.COMPLIANCE && this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT) {\n      param = `&complianceForm=true`;\n    } else if (param === SUBMISSION_TYPE.COMPLIANCE && this.currentUser.userRole.name !== USER_ROLES.ROLE_APPLICANT) {\n      param = `&complianceForm=true`;\n    } else if (param === SUBMISSION_TYPE.TOA) {\n      param = `&hasToa=true`;\n    } else {\n      param = `&submissionType=${param}&complianceForm=false`;\n    }\n\n    this.spinner.show();\n    let endpoint = `custom/search?page=${this.currentPage}&size=${this.pageSize}${param}`;\n\n    if (this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT) {\n      endpoint = ENDPOINTS.s2ApplicationFormPresentor + endpoint + `&applicationOwnerId=${this.currentUser.id}`;\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_ENCODER) {\n      endpoint = ENDPOINTS.s2ApplicationFormEncoder + endpoint + `&assignedEncoderId=${this.currentUser.id}`;\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_AD_SPECIALIST) {\n      endpoint = ENDPOINTS.s2ApplicationFormAdSpe + endpoint + `&assignedAdSpecialistId=${this.currentUser.id}`;\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_ADMIN || this.currentUser.userRole.name === USER_ROLES.ROLE_SUPER_ADMIN) {\n      endpoint = ENDPOINTS.s2ApplicationFormAdmin + endpoint;\n    } else {\n      endpoint = ENDPOINTS.s2Application + endpoint + `&applicationOwnerId=${this.currentUser.id}`;\n    }\n\n    // console.log(endpoint);\n    this.apiService.findAll(endpoint).subscribe(\n      (res: any) => {\n        this.s2ApplicationList = res.data;\n\n        this.s2TotalItems = res.totalItems;\n        console.log('s2ApplicationList: ', res);\n        this.dataSource = new MatTableDataSource<S2Application>(this.s2ApplicationList);\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n        this.hideSpinner();\n      }, (err: any) => {\n        this.hideSpinner();\n      }\n    )\n  }\n\n  hideSpinner() {\n    setTimeout(() => {\n      this.spinner.hide();\n    }, 1);\n  }\n\n  getSpecialS2ApplicationList(): void {\n    let endpoint = ''; let obj;\n    if (this.currentUser.userRole.name === USER_ROLES.ROLE_ADMIN || this.currentUser.userRole.name === USER_ROLES.ROLE_SUPER_ADMIN) {\n      obj = {\n        statuses: ['FOR_APPROVAL', 'APPROVED', 'DISAPPROVED']\n      }\n      endpoint = ENDPOINTS.s2SpecialClearingApplicationRequestsAdmin;\n    } else {\n      obj = {\n        applicationOwnerId: this.currentUser.id,\n        statuses: ['FOR_APPROVAL', 'APPROVED', 'DISAPPROVED']\n      }\n      endpoint = ENDPOINTS.s2SpecialClearingApplicationRequests;\n    }\n\n    this.currentPage = this.pageNo;\n    this.currentPage++;\n    if (this.currentPage === 0) this.currentPage++;\n\n    this.apiService.save(`${endpoint}?page=${this.currentPage}&size=${this.pageSize}`, obj)\n      .subscribe((res: any) => {\n        this.s2SpecialApplicationList = res.data;\n\n        console.log('s2SpecialApplicationList: ', res);\n        this.s2SpecialTotalItems = res.totalItems;\n        this.s2SpecialApplicationDataSource = new MatTableDataSource<MultipleApplication>(this.s2SpecialApplicationList);\n        this.s2SpecialApplicationDataSource.paginator = this.paginator;\n        this.s2SpecialApplicationDataSource.sort = this.sort;\n        setTimeout(() => {\n          this.spinner.hide();\n        }, 1);\n      }, (err: any) => {\n        this.spinner.hide();\n      });\n  }\n\n\n  pageEvents(event: any) {\n    this.pageSize = event.pageSize;\n\n    if (event.pageIndex > this.pageNo) {\n      this.pageNo++;\n    } else {\n      this.pageNo--;\n    }\n\n    if (event.pageSize > event.length) {\n      this.pageNo = 0;\n    }\n\n    this.getList();\n  }\n\n  setPageSizeOptions(setPageSizeOptionsInput: string) {\n    if (setPageSizeOptionsInput) {\n      this.pageSizeOptions = setPageSizeOptionsInput.split(',').map(str => +str);\n    }\n  }\n\n  viewApplication(data: any): void {\n    this.s2Application = data;\n    console.log('S2 FORM: ', this.s2Application);\n\n    if (data.formStatus === FORM_STATUS.OPEN && this.s2Application.internalStatus !== APPLICATION_STATUS.S1_APPLICATION_REJECTED\n      && (this.currentUser.userRole.name !== USER_ROLES.ROLE_APPLICANT && this.currentUser.userRole.name !== USER_ROLES.ROLE_ADMIN\n        && this.currentUser.userRole.name !== USER_ROLES.ROLE_SUPER_ADMIN\n        && this.currentUser.userRole.name !== USER_ROLES.ROLE_AD_SPECIALIST) // s2form will be assigned to s1form adspe\n    ) {\n      Swal.fire({\n        text: 'Are you sure you want to open this application? This application will be LOCKED on your account.',\n        icon: 'question',\n        showCancelButton: true,\n        confirmButtonColor: '#3085d6',\n        cancelButtonColor: '#d33',\n        confirmButtonText: 'Confirm'\n      }).then((result) => {\n        if (result.value) {\n          this.spinner.show();\n          this.s2Application.assignedEncoder = this.currentUser;\n          // wait for BE\n          this.apiService.save(ENDPOINTS.s2ApplicationFormEncoder + ENDPOINTS.takeApplication, this.s2Application).subscribe(\n            (res: any) => {\n              this.spinner.hide();\n              this.sweetAlertService.customSuccessMessage('Application successfully assigned to you.', 3);\n              this.router.navigate(['asc/page/application/s2/update/', data.id]);\n            }, (err: any) => {\n              this.spinner.hide();\n            });\n        }\n      });\n    } else {\n      this.router.navigate(['asc/page/application/s2/update/', data.id]);\n    }\n\n  }\n\n  applyApplicationForToa(data: any): void {\n    Swal.fire({\n      text: 'Are you sure you want to apply this application to TOA?',\n      icon: 'question',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Confirm'\n    }).then((result) => {\n      if (result.value) {\n        this.spinner.show();\n        this.apiService.save(ENDPOINTS.s2ApplicationForm + 'clearance/presentor/submit', data).subscribe(\n          (res: any) => {\n            this.spinner.hide();\n            this.sweetAlertService.customSuccessMessage('Application is applied for TOA successfully');\n            this.router.navigateByUrl('asc/page/application/s2/lists');\n          }, (err: any) => {\n            this.spinner.hide();\n          });\n      }\n    })\n  }\n\n  viewSpecialApplication(data: any): void {\n    this.applicationRequest = data;\n    this.s2Application = new S2Application();\n    this.s2Application.specialClearing = true;\n    this.s2Application.applicationForm = data;\n\n    let dialogRef;\n    dialogRef = this.dialog.open(RequestForSpecialClearingComponent, {\n      width: '80%',\n      height: '85%',\n      data: {\n        applicationRequest: this.applicationRequest,\n        applicationType: 'Request for Special Clearing'\n      }\n    });\n  }\n\n  doFilterS1MultipleApplicationList(event) { } // in html but not existing in component -- encountered during 'ng serve --aot'\n\n  getCompany(elementId) { } // in html but not existing in component -- encountered during 'ng serve --aot'\n\n  doFilter(event) { } // in html but not existing in component -- encountered during 'ng serve --aot'\n\n  changeTab(evt) {\n    if (evt.tab) {\n      this.displayedContent = evt.tab.textLabel;\n      if (this.displayedContent === 'For Appeal') {\n        this.getForDecisionAndComment();\n      } else {\n        this.getList(this.displayedContent);\n      }\n    }\n  }\n\n\n  getForDecisionAndComment() {\n    let endpoint = '';\n\n    // APPEAL\n    if (this.isAdSpecialist) {\n      endpoint = ENDPOINTS.s2ApplicationFormAdSpe + `custom/search?assignedAdSpecialistId=${this.currentUser.id}&hasOngoingAppeal=true&page=${this.currentPage}&size=${this.pageSize}&submissionType=ORIGINAL`;\n    }\n    else if (this.isAdmin || this.isSuperAdmin) {\n      endpoint = ENDPOINTS.s2ApplicationFormAdmin + `custom/search?hasOngoingAppeal=true&page=${this.currentPage}&size=${this.pageSize}`;\n    }\n\n    this.apiService.findAll(endpoint)\n      .subscribe((res: any) => {\n        if (res) {\n          this.s2ApplicationList = res?.data;\n          console.log('Appeal: ', this.s2ApplicationList);\n\n          this.s2TotalItems = res.totalItems;\n          this.dataSource = new MatTableDataSource<S2Application>(this.s2ApplicationList);\n          this.dataSource.paginator = this.paginatorFalse;\n          this.dataSource.sort = this.sort;\n          setTimeout(() => {\n            this.spinner.hide();\n          }, 1);\n        } else {\n          this.s2ApplicationList = [];\n        }\n      }, (err) => {\n        setTimeout(() => {\n          this.spinner.hide();\n        }, 1);\n      });\n  }\n\n  sortEvent() {\n    this.click++;\n    if (this.click % 2 === 0) {\n      this.dataSource = new MatTableDataSource<S2Application>(this.s2ApplicationList);\n      this.dataSource.paginator = this.paginator;\n      return this.dataSource.data.sort((a, b) => a.id - b.id);\n    } else {\n      this.dataSource = new MatTableDataSource<S2Application>(this.s2ApplicationList);\n      this.dataSource.paginator = this.paginator;\n      return this.dataSource.data.reverse();\n    }\n    // for random sort\n    // this.dataSource.data.sort(() => Math.random() - 0.5)\n  }\n\n  refresh() {\n    this.commonService.sendClickEvent();\n    this.startTimer();\n  }\n\n  startTimer() {\n    this.interval = setInterval(() => {\n      this.timeLeft--;\n      if(this.timeLeft > 0){\n        this.refreshButtonEnabled = false;\n        this.isTimerValueDisplay = true;\n      }else{\n        this.refreshButtonEnabled = true;\n        this.isTimerValueDisplay = false;\n        this.timeLeft = 60;\n        clearInterval(this.interval)\n      }\n      this.timerDisplay=this.transform(this.timeLeft)\n    },1000)\n  }\n\n  transform(value: number): string {\n    const minutes: number = Math.floor(value / 60);\n    return minutes + ':' + (value - minutes * 60);\n  }\n\n}\n","<form>\n  <div class=\"container-fluid\">\n\n    <div class=\"row\">\n      <div class=\"col-md-12 title\">\n        <mat-label>\n          <i class=\"material-icons\">file_copy</i> S2 APPLICATION - <b>{{applicationTypeTitle}}</b>\n        </mat-label>\n        <button class=\"button-right\" type=\"submit\" mat-raised-button color=\"primary\" (click)=\"refresh()\" [disabled]=\"!refreshButtonEnabled\">\n          <span class=\"material-icons\">sync</span>\n          <label *ngIf=\"isTimerValueDisplay\"> &nbsp;{{timerDisplay}}</label>\n        </button>\n      </div>\n    </div>\n    <hr>\n\n    <div *ngIf=\"applicationTypeTitle === 'INDIVIDUAL'\">\n      <ng-container *ngTemplateOutlet=\"individualS2ApplicationList\"></ng-container>\n    </div>\n    <div\n      *ngIf=\"(currentUser.userRole.name === 'ROLE_APPLICANT' || currentUser.userRole.name === 'ROLE_ADMIN' || currentUser.userRole.name === 'ROLE_SUPER_ADMIN') && viewApplicationType === 'special'\">\n      <ng-container *ngTemplateOutlet=\"specialS1ApplicationList\"></ng-container>\n    </div>\n\n    <ng-template #individualS2ApplicationList>\n      <div class=\"row\">\n        <div class=\"col-lg-9\">\n          <div class=\" search\" fxLayout fxLayoutAlign=\"center center\">\n            <mat-form-field class=\"col-md-9\" appearance=\"outline\">\n              <input matInput type=\"text\" (keyup)=\"doFilter($event.target.value)\" placeholder=\"Search\">\n            </mat-form-field>\n          </div>\n        </div>\n\n        <!-- <div class=\"col\">\n          <div class=\"legend-content\">\n            <table class=\"legend-table\">\n              <tr>\n                <td><div class=\"legend-box legend-blue\"></div> ORIGINAL</td>\n              </tr>\n              <tr>\n                <td><div class=\"legend-box legend-green\"></div> REVISION</td>\n              </tr>\n              <tr>\n                <td><div class=\"legend-box legend-orange\"></div> FOR COMPLIANCE</td>\n              </tr>\n            </table>\n          </div>\n        </div> -->\n\n\n      </div><br>\n\n      <mat-tab-group mat-align-tabs=\"start\" (selectedTabChange)=\"changeTab($event)\">\n        <mat-tab label=\"Original\">\n          <ng-template mat-tab-label>\n            Original\n            <div matBadge={{applicationCountS2.countOriginal}} class=\"c-badge\" matBadgeColor=\"warn\"></div>\n          </ng-template>\n        </mat-tab>\n        <mat-tab label=\"Compliance\">\n          <ng-template mat-tab-label>\n            Compliance\n            <div matBadge={{applicationCountS2.countCompliance}} class=\"c-badge\" matBadgeColor=\"warn\"></div>\n          </ng-template>\n        </mat-tab>\n        <mat-tab label=\"TOA\">\n          <ng-template mat-tab-label>\n            TOA\n            <div matBadge={{applicationCountS2.countToa}} class=\"c-badge\" matBadgeColor=\"warn\"></div>\n          </ng-template>\n        </mat-tab>\n        <mat-tab label=\"For Appeal\" *ngIf=\"isAdSpecialist || isAdmin || isSuperAdmin\">\n          <ng-template mat-tab-label>\n            Released Appeal\n            <div matBadge={{releasedAppealTabDataCount}} class=\"c-badge\" matBadgeColor=\"warn\"></div>\n          </ng-template>\n        </mat-tab>\n      </mat-tab-group>\n\n      <div class=\"mat-elevation-z8 fields main-table \" fxLayout fxLayoutAlign=\"center center\">\n        <table mat-table [dataSource]=\"dataSource\" matSort>\n\n          <ng-container matColumnDef=\"referenceCode\">\n            <th mat-header-cell *matHeaderCellDef > REFERENCE CODE <mat-icon class=\"cursor\" (click)=\"sortEvent()\" style=\"color:black\">swap_vert</mat-icon></th>\n            <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"viewApplication(element)\"\n             [ngStyle]=\"{'pointer-events': ((i != 0 && currentUser.userRole.name === 'ROLE_ENCODER') ? 'none' : ''),\n                  'background-color':\n                  ((element?.submissionType=='ORIGINAL'&&element.decisionStatus!='INCOMPLETE') ? 'lightblue' :\n                  ((element?.submissionType=='FOR COMPLIANCE'||element.decisionStatus=='INCOMPLETE'||element.submissionType=='COMPLIANCE') ? '#ebd79b' :\n                  (element?.submissionType=='REVISION' ? '#8fcf8f' : '' )))}\">\n              {{ element?.submissionType === 'ORIGINAL' && element?.internalStatus=='S2_APPLICATION_REJECTED' ? element?.referenceCodeRejected : element?.applicationForm?.referenceCode | uppercase}}\n            </td>\n          </ng-container>\n          <ng-container matColumnDef=\"typeOfApplication\">\n            <th mat-header-cell *matHeaderCellDef > TYPE OF APPLICATION </th>\n            <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"viewApplication(element)\"\n              [ngStyle]=\"{'pointer-events': ((i != 0 && currentUser.userRole.name === 'ROLE_ENCODER') ? 'none' : ''),\n                  'background-color': ((currentUser.userRole.name  === 'ROLE_ENCODER' && i > 0 ? '#beb8b8' : ''))}\">\n              <!--  'background-color':\n                  ((element?.applicationForm?.applicationType.description=='Regular') ? 'lightblue' :\n                  (element?.applicationForm?.applicationType.description=='Batch') ? '#8fcf8f' :\n                  (element?.applicationForm?.applicationType.description=='Special Screening') ? '#fca402' :\n                  (element?.applicationForm?.applicationType.description=='Special Clearing') ? '#ff8a7b' :\n                  (element?.applicationForm?.applicationType.description=='Special Screening and Clearing') ? 'violet' :\n                  (element?.applicationForm?.applicationType.description=='For Presentation') ? 'yellow' :\n                  (currentUser.userRole.name === 'ROLE_ENCODER'&&i>0 ? '#beb8b8' : ''))}\"> -->\n              {{ element?.applicationForm?.applicationType.description.replaceAll('_',' ') | uppercase }}\n              {{ element?.specialClearing ? '- SPECIAL CLEARING' : '' }}\n              {{ element?.hasToa ? '- TOA' : '' }}\n            </td>\n          </ng-container>\n          <ng-container matColumnDef=\"companyName\">\n            <th mat-header-cell *matHeaderCellDef > COMPANY NAME </th>\n            <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"viewApplication(element)\"\n              [ngStyle]=\"{'pointer-events': ((i != 0 && currentUser.userRole.name === 'ROLE_ENCODER') ? 'none' : ''),\n                  'background-color': ((currentUser.userRole.name === 'ROLE_ENCODER' && i > 0? '#beb8b8' : ''))}\">\n              {{ element?.applicationForm?.company.companyName }} </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"brand\">\n            <th mat-header-cell *matHeaderCellDef > BRAND </th>\n            <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"viewApplication(element)\"\n              [ngStyle]=\"{'pointer-events': ((i != 0 && currentUser.userRole.name === 'ROLE_ENCODER') ? 'none' : ''),\n                  'background-color': ((currentUser.userRole.name === 'ROLE_ENCODER' && i > 0? '#beb8b8' : ''))}\">\n              {{ element?.applicationForm?.brand.description }} </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"typeOfMedium\">\n            <th mat-header-cell *matHeaderCellDef > TYPE OF MEDIUM </th>\n            <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"viewApplication(element)\"\n              [ngStyle]=\"{'pointer-events': ((i != 0 && currentUser.userRole.name === 'ROLE_ENCODER') ? 'none' : ''),\n                  'background-color': ((currentUser.userRole.name === 'ROLE_ENCODER' && i > 0? '#beb8b8' : ''))}\">\n              {{ element?.applicationForm?.typeOfMedium }} </td>\n          </ng-container>\n\n          <!-- [ngStyle]=\"{'pointer-events': ((i != 0 && (currentUser.userRole.name === 'ROLE_ENCODER')) ? 'none' : ''),\n                  'background-color': ((currentUser.userRole.name === 'ROLE_ENCODER'&&i>0 ? '#beb8b8' : ''))}\" -->\n          <ng-container matColumnDef=\"status\">\n            <th mat-header-cell *matHeaderCellDef > APPLICATION STATUS </th>\n            <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"viewApplication(element)\"\n              [ngStyle]=\"{'pointer-events': ((i != 0 && currentUser.userRole.name === 'ROLE_ENCODER') ? 'none' : ''),\n                  'background-color': ((currentUser.userRole.name === 'ROLE_ENCODER' && i > 0? '#beb8b8' : ''))}\">\n              {{ element?.externalStatus?.replaceAll('_',' ') | uppercase }} </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"internalStatus\">\n            <th mat-header-cell *matHeaderCellDef > INTERNAL STATUS </th>\n            <td mat-cell *matCellDef=\"let element; let i = index\" class=\"applicantStatus\"\n              [ngStyle]=\"{'pointer-events': ((i != 0 && currentUser.userRole.name === 'ROLE_ENCODER') ? 'none' : ''),\n                  'background-color': ((currentUser.userRole.name === 'ROLE_ENCODER' && i > 0? '#beb8b8' : ''))}\">\n              {{ element?.internalStatus?.replaceAll('_',' ') | uppercase }} </td>\n          </ng-container>\n          <!-- For ASC Users only -->\n          <!-- <ng-container matColumnDef=\"ascStatus\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> ASC STATUS </th>\n                  <td mat-cell *matCellDef=\"let element\" (click)=\"getCompany(element?.id)\"> {{ element?.ascStatus }} </td>\n                </ng-container> -->\n\n          <ng-container matColumnDef=\"icon\">\n            <th mat-header-cell *matHeaderCellDef > </th>\n            <td mat-cell *matCellDef=\"let element; let i = index\" class=\"icon\"\n              [hidden]=\"currentUser?.userRole?.name != 'ROLE_APPLICANT'\"\n              [ngStyle]=\"{'pointer-events': ((i != 0 && currentUser.userRole.name === 'ROLE_ENCODER') ? 'none' : ''),\n                  'background-color': ((currentUser.userRole.name != 'ROLE_APPLICANT'&&currentUser.userRole.name != 'ROLE_AD_SPECIALIST'&&i>0 ? '#beb8b8' : ''))}\">\n\n                  <!-- <button mat-raised-button class=\"button-red\" matTooltip=\"Submit S2 for Clearance \"\n                    (click)=\"applyApplicationForToa(element)\" *ngIf=\"currentUser?.userRole?.name=='ROLE_APPLICANT'&&element?.\n                        internalStatus=='APPROVED' || element?.internalStatus=='S2_APPLICATION_VERIFIED_BY_AD_SPE'\n                        || element?.internalStatus=='RE_SUBMITTED_S2_APPLICATION_VERIFIED_BY_AD_SPE'\">\n                    <i class=\"material-icons color__white\">queue_play_next</i>\n                  </button> -->\n\n                  <button mat-raised-button class=\"button-red\" matTooltip=\"Submit For Compliance\"\n                  (click)=\"viewApplication(element)\"\n                  *ngIf=\"(currentUser?.userRole?.name=='ROLE_APPLICANT' && element?.decisionStatus=='INCOMPLETE' &&\n                          (element?.internalStatus=='INCOMPLETE' || element?.internalStatus=='S2_APPLICATION_VERIFIED_BY_AD_SPE' || element?.internalStatus=='RE_SUBMITTED_S2_APPLICATION_VERIFIED_BY_AD_SPE' ||\n                          element?.internalStatus=='S2_APPLICATION_REJECTED'))\">\n                  <i class=\"material-icons\">warning_amber</i>\n                </button>\n\n              <!--  <button mat-raised-button class=\"button-red\" matTooltip=\"Submit For Compliance\" *ngIf=\"currentUser?.userRole?.name=='ROLE_APPLICANT'&&element?.\n                    internalStatus=='RE_SUBMITTED_S2_APPLICATION_VERIFIED_BY_AD_SPE' || element?.internalStatus=='S2_APPLICATION_VERIFIED_BY_AD_SPE'\n                    || element?.internalStatus=='APPROVED'\">\n                    <i class=\"material-icons color__white\">warning_amber</i>\n                    </button>-->\n            </td>\n          </ng-container>\n\n\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n          <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n        </table>\n        <div class=\"no-record\" [hidden]=\"dataSource && dataSource?.data?.length > 0\">\n          No record found.\n        </div>\n        <!-- <mat-paginator [pageSizeOptions]=\"[10, 20, 50]\" showFirstLastButtons></mat-paginator> -->\n        <mat-paginator [pageSize]=\"pageSize\" [pageIndex]=\"pageNo\" [length]=\"s2TotalItems\"\n          [pageSizeOptions]=\"pageSizeOptions\" (page)=\"pageEvents($event)\">\n        </mat-paginator>\n\n      </div>\n      <!-- </mat-tab> -->\n    </ng-template>\n\n\n\n\n\n    <ng-template #specialS1ApplicationList>\n        <b *ngIf=\"currentUser.userRole.name === 'ROLE_APPLICANT'\"><b class=\"material-icons info-msg\">error_outline</b> This\n          page contain list of Request for Approval and allows you to create S2 application from approved request only.</b>\n        <b *ngIf=\"currentUser.userRole.name === 'ROLE_ADMIN' || currentUser?.userRole.name === 'ROLE_SUPER_ADMIN' \"><b\n            class=\"material-icons info-msg\">error_outline</b> This page\n            contain list of Request for Approval and allows you to approve or disapprove request.</b>\n      <div class=\"row\" fxLayout fxLayoutAlign=\"center center\">\n        <mat-form-field class=\"col-md-8\" appearance=\"outline\">\n          <mat-label><i class=\"material-icons\">search</i> Search Applications</mat-label>\n          <input matInput type=\"text\" (keyup)=\"doFilterS1MultipleApplicationList($event.target.value)\">\n        </mat-form-field>\n\n        <div class=\"col\">\n          <div class=\"legend-content\">\n            <table class=\"legend-table\">\n              <tr>\n                <td>\n                  <div class=\"legend-box legend-orange\"></div> FOR APPROVAL\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <div class=\"legend-box legend-green\"></div> APPROVED\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <div class=\"legend-box legend-red\"></div> DISAPPROVED\n                </td>\n              </tr>\n              <!-- <tr>\n                    <td>\n                      <div class=\"legend-box legend-pink\"></div> REJECTED\n                    </td>\n                  </tr> -->\n            </table>\n          </div>\n        </div>\n      </div>\n\n      <!-- <div class=\"row\">\n\n            <div class=\"col-md-2\">LEGEND:</div>\n            <div class=\"col-md-1 legend legend-orange\">FOR APPROVAL</div>\n            <div class=\"col-md-1 legend legend-green\">APPROVED</div>\n            <div class=\"col-md-1 legend legend-red\">DISAPPROVED</div>\n            <div class=\"col-md-1\" style=\"background-color:lightpink;border-radius:8px;width:20%;\">Rejected</div>\n          </div> -->\n      <br>\n\n      <div class=\"mat-elevation-z8 fields\">\n        <table mat-table [dataSource]=\"s2SpecialApplicationDataSource\" matSort>\n\n          <ng-container matColumnDef=\"adTitle\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> AD TITLE </th>\n            <td mat-cell *matCellDef=\"let element\" (click)=\"viewSpecialApplication(element)\">\n              {{ element?.adTitle | uppercase }} </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"typeOfApplication\">\n            <th mat-header-cell *matHeaderCellDef > TYPE OF APPLICATION </th>\n            <td mat-cell *matCellDef=\"let element\" (click)=\"viewSpecialApplication(element)\">\n              {{ element?.applicationType?.description.replaceAll('_',' ') | uppercase }}\n              {{ element?.hasSpecialClearing ? '- SPECIAL CLEARING' : ''}}\n              {{ element?.hasToa ? '- TOA' : '' }} </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"companyName\">\n            <th mat-header-cell *matHeaderCellDef > COMPANY NAME </th>\n            <td mat-cell *matCellDef=\"let element\" (click)=\"viewSpecialApplication(element)\">\n              {{ element?.company?.companyName | uppercase }} </td>\n          </ng-container>\n\n          <!-- <ng-container matColumnDef=\"membersAffiliation\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> MEMBER'S AFFILIATION </th>\n                <td mat-cell *matCellDef=\"let element\" (click)=\"viewSpecialApplication(element)\">\n                  {{ element?.membersAffiliation?.description | uppercase }} </td>\n              </ng-container> -->\n\n          <ng-container matColumnDef=\"brand\">\n            <th mat-header-cell *matHeaderCellDef> BRAND </th>\n            <td mat-cell *matCellDef=\"let element\" (click)=\"viewSpecialApplication(element)\">\n              {{ element?.brand?.description | uppercase }} </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"status\">\n            <th mat-header-cell *matHeaderCellDef > APPLICATION STATUS </th>\n            <td mat-cell *matCellDef=\"let element\" class=\"applicantStatus\" [ngStyle]=\"{'background-color':\n                element?.status === 'FOR_APPROVAL' ? '#ebd79b' :\n                element?.status === 'APPROVED' ? '#8fcf8f' :\n                element?.status === 'DISAPPROVED' ? '#ebb89b' : '' }\" (click)=\"viewSpecialApplication(element)\">\n              {{ element?.status?.replaceAll('_',' ') | uppercase }} </td>\n          </ng-container>\n\n          <tr mat-header-row *matHeaderRowDef=\"s2SpecialApplicationDisplayedColumns\"></tr>\n          <tr mat-row *matRowDef=\"let row; columns: s2SpecialApplicationDisplayedColumns;\"></tr>\n        </table>\n        <div class=\"no-record\"\n          [hidden]=\"s2SpecialApplicationDataSource && s2SpecialApplicationDataSource?.data?.length > 0\">\n          No record found.\n        </div>\n        <!-- <mat-paginator [pageSizeOptions]=\"[10, 20, 50]\" showFirstLastButtons></mat-paginator> -->\n        <mat-paginator [pageSize]=\"pageSize\" [pageIndex]=\"pageNo\" [length]=\"s2SpecialTotalItems\"\n          [pageSizeOptions]=\"pageSizeOptions\" (page)=\"pageEvents($event)\">\n        </mat-paginator>\n      </div>\n    </ng-template>\n\n\n\n\n    <!-- FOR CLEARANCE TABLE -->\n    <!-- <mat-tab label=\"FOR CLEARANCE\">\n          <div class=\"mat-elevation-z8 fields toa-tab\">\n            <table mat-table [dataSource]=\"forClearanceDataSource\" matSort>\n\n                <ng-container matColumnDef=\"referenceCode\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> REFERENCE CODE </th>\n                  <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"viewApplication(element)\"\n                  [ngStyle]=\"{'pointer-events': ((i != 0 && (currentUser.userRole.name === 'ROLE_ENCODER')) ? 'none' : ''),\n                  'background-color': ((currentUser.userRole.name === 'ROLE_ENCODER'&&i>0 ? '#beb8b8' : ''))}\"> {{ element?.applicationForm?.referenceCode }} </td>\n                </ng-container>\n                <ng-container matColumnDef=\"typeOfApplication\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> TYPE OF APPLICATION </th>\n                  <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"viewApplication(element)\"\n                  [ngStyle]=\"{'pointer-events': ((i != 0 && (currentUser.userRole.name === 'ROLE_ENCODER')) ? 'none' : ''),\n                  'background-color': ((currentUser.userRole.name === 'ROLE_ENCODER'&&i>0 ? '#beb8b8' : ''))}\"> {{ element?.applicationForm?.applicationType.description }} </td>\n                </ng-container>\n                <ng-container matColumnDef=\"companyName\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> COMPANY NAME </th>\n                  <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"viewApplication(element)\"\n                  [ngStyle]=\"{'pointer-events': ((i != 0 && (currentUser.userRole.name === 'ROLE_ENCODER')) ? 'none' : ''),\n                  'background-color': ((currentUser.userRole.name === 'ROLE_ENCODER'&&i>0 ? '#beb8b8' : ''))}\"> {{ element?.applicationForm?.company.companyName }} </td>\n                </ng-container>\n\n                <ng-container matColumnDef=\"brand\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> BRAND </th>\n                  <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"viewApplication(element)\"\n                  [ngStyle]=\"{'pointer-events': ((i != 0 && (currentUser.userRole.name === 'ROLE_ENCODER')) ? 'none' : ''),\n                  'background-color': ((currentUser.userRole.name === 'ROLE_ENCODER'&&i>0 ? '#beb8b8' : ''))}\"> {{ element?.applicationForm?.brand.description }} </td>\n                </ng-container>\n\n                <ng-container matColumnDef=\"typeOfMedium\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> TYPE OF MEDIUM </th>\n                  <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"viewApplication(element)\"\n                  [ngStyle]=\"{'pointer-events': ((i != 0 && (currentUser.userRole.name === 'ROLE_ENCODER')) ? 'none' : ''),\n                  'background-color': ((currentUser.userRole.name === 'ROLE_ENCODER'&&i>0 ? '#beb8b8' : ''))}\"> {{ element?.applicationForm?.refTypeOfMedium }} </td>\n                </ng-container>\n\n                <ng-container matColumnDef=\"status\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> APPLICATION STATUS </th>\n                  <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"viewApplication(element)\"\n                  [ngStyle]=\"{'pointer-events': ((i != 0 && (currentUser.userRole.name === 'ROLE_ENCODER')) ? 'none' : ''),\n                  'background-color': ((currentUser.userRole.name === 'ROLE_ENCODER'&&i>0 ? '#beb8b8' : ''))}\"> {{ element?.internalStatus?.replaceAll('_',' ') | uppercase }} </td>\n                </ng-container> -->\n\n    <!-- For ASC Users only -->\n    <!-- <ng-container matColumnDef=\"ascStatus\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> ASC STATUS </th>\n                  <td mat-cell *matCellDef=\"let element\" (click)=\"getCompany(element?.id)\"> {{ element?.ascStatus }} </td>\n                </ng-container> -->\n\n    <!-- <ng-container matColumnDef=\"icon\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> </th>\n                  <td mat-cell *matCellDef=\"let element\" class=\"icon\">\n                    <button mat-raised-button class=\"button-red\" matTooltip=\"Submit S2 for Clearance\" (click)=\"applyApplicationForToa(element)\" *ngIf=\"currentUser?.userRole?.name=='ROLE_APPLICANT'&&element?.\n                    internalStatus=='RE_SUBMITTED_S2_APPLICATION_VERIFIED_BY_AD_SPE' || element?.internalStatus=='S2_APPLICATION_VERIFIED_BY_AD_SPE'\n                    || element?.internalStatus=='APPROVED'\">\n                      <i class=\"material-icons\">queue_play_next</i>\n                    </button> -->\n\n    <!-- <button mat-raised-button class=\"button-red\" matTooltip=\"Submit For Compliance\" (click)=\"viewApplication(element)\" *ngIf=\"currentUser?.userRole?.name=='ROLE_APPLICANT'&&element?.\n                    internalStatus=='RE_SUBMITTED_S2_APPLICATION_VERIFIED_BY_AD_SPE' || element?.internalStatus=='S2_APPLICATION_VERIFIED_BY_AD_SPE'\n                    || element?.internalStatus=='APPROVED'\"><i class=\"material-icons color__white\">warning_amber</i>\n                    </button> -->\n    <!-- </td>\n                </ng-container> -->\n\n\n    <!-- <tr mat-header-row *matHeaderRowDef=\"forClearanceDisplayedColumns\"></tr>\n                <tr mat-row *matRowDef=\"let row; columns: forClearanceDisplayedColumns;\"></tr>\n            </table>\n            <div class=\"no-record\" [hidden]=\"forClearanceDataSource && forClearanceDataSource?.data?.length > 0\">\n              No record found.\n            </div>\n            <mat-paginator [pageSizeOptions]=\"[10, 20, 50]\" showFirstLastButtons></mat-paginator>\n\n          </div>\n        </mat-tab> -->\n    <!-- </mat-tab-group> -->\n","import { Component, OnInit, Input, Output, EventEmitter, OnChanges, SimpleChanges, OnDestroy } from '@angular/core';\nimport { Company, S1Application, S2Application } from '@models';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { COMMON_FUNCTION, ENDPOINTS } from '@shared';\nimport { ApiService, DataStorageService, SweetAlertService } from '@services';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { AddCompanyComponent } from '@company';\nimport { ActivatedRoute } from '@angular/router';\nimport { BrandsComponent } from '@maintenance';\nimport { AddressService } from '../../../../core/services/address/address.service';\nimport { ProductComponent } from '../../maintenance/product/product.component';\nimport { MultipleApplication } from 'app/core/models/multiple-application.model';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-client-information',\n  templateUrl: './client-information.component.html',\n  styleUrls: ['./client-information.component.scss']\n})\nexport class ClientInformationComponent implements OnInit, OnChanges, OnDestroy {\n  @Input() s1Application = new S1Application();\n  @Input() s2Application = new S2Application();\n  @Input() multipleApplication = new MultipleApplication();\n  @Input() isAscUser = false;\n  @Input() isDisableFieldOnUpdate = false;\n  @Input() company = new Company();\n  @Output() checkInactiveAffiliation: EventEmitter<any> = new EventEmitter();\n  @Output() isInactiveAffiliation: boolean;\n  @Output() hasErrorFields: EventEmitter<any> = new EventEmitter();\n\n  memberAffiliationList = [];\n  companyList = [];\n  brandList = [];\n  productList = [];\n  // categoryList = [];\n  regionsList = [];\n  provinceList = [];\n  cityMunicipalityList = [];\n  barangayList = [];\n  countryList = [];\n\n  notInSelection = ['INACTIVE', 'DISAPPROVED'];\n\n  isNewCompany = false;\n  showCompanyAddress = false;\n  dataSource: MatTableDataSource<S1Application>;\n  clientInformationForm: FormGroup;\n\n  applicationStage: string;\n  fullAddress: string;\n  currentUser: any;\n  ngModelValue: any;\n  private ngUnsubscribe = new Subject();\n\n  constructor(\n    private apiService: ApiService,\n    private addressService: AddressService,\n    private dialog: MatDialog,\n    public dataStorage: DataStorageService,\n    private formBuilder: FormBuilder,\n    private sweetAlertService: SweetAlertService,\n    private route: ActivatedRoute,\n  ) { }\n\n  ngOnInit(): void {\n    // console.log('Clientinfo');\n    this.currentUser = this.dataStorage.getUserAccount();\n    this.setFormValidator();\n    this.getBrandList();\n    this.getCompanyList();\n    this.getAffiliationList();\n    this.getCountries();\n  }\n\n  ngOnChanges(): void {\n    if (this.s1Application.brand) {\n      this.setProductList();\n    }\n  }\n\n  setFormValidator(): void {\n    this.clientInformationForm = this.formBuilder.group({\n      brand: ['', Validators.required],\n      product: ['', Validators.required],\n      category: ['', Validators.required],\n      company: [''],\n      companyAddress: [''],\n      country: [''],\n      companyName: [''],\n      membersAffiliation: ['', Validators.required],\n    });\n\n    if (this.currentUser?.accountType === 'APPLICANT') {\n      this.clientInformationForm.valueChanges.pipe(takeUntil(this.ngUnsubscribe)).subscribe(value => {\n        this.checkInvalidFields(value);\n      });\n    }\n  }\n\n\n  getBrandList() {\n    this.apiService.findAll(ENDPOINTS.activeBrands).subscribe((res: any) => {\n      this.brandList = res.responseData.data; // .filter((brand) => !this.notInSelection.includes(brand.status));\n      this.productList = [];\n    }, (err: any) => {\n    });\n    if (this.s1Application.brand) {\n      this.setProductList();\n    }\n  }\n\n  setBrand() {\n    this.setProductList();\n    if (this.s1Application?.product?.status !== COMMON_FUNCTION.FOR_APPROVAL) {\n      this.s1Application.product = null;\n    }\n  }\n\n  setProductList() {\n    // const endpoint = this.s1Application.brand ? ENDPOINTS.productsByBrand + this.s1Application.brand.id : ENDPOINTS.product;\n    this.apiService.findAll(ENDPOINTS.productsByBrand + this.s1Application.brand.id).subscribe((res: any) => {\n      this.productList = res.responseData.data.filter((product) =>\n        product.status !== COMMON_FUNCTION.DISAPPROVED.toUpperCase()\n        && product.status !== COMMON_FUNCTION.INACTIVE.toUpperCase()\n      );\n    }, (err: any) => {\n    });\n  }\n\n  getCompanyList() {\n    this.apiService.findAll(ENDPOINTS.activeCompanies).subscribe((res: any) => {\n      this.companyList = res.responseData.data; // .filter((company) => !this.notInSelection.includes(company.status));\n    }, (err: any) => {\n    });\n  }\n\n  getAffiliationList(): void {\n    this.apiService.findAll(ENDPOINTS.activeMembersAffiliation).subscribe((res: any) => {\n      this.memberAffiliationList = res.responseData.data;\n    }, (err: any) => {\n    });\n  }\n\n  getCompanyAddress(companyName) {\n    this.showCompanyAddress = false;\n    this.isNewCompany = false;\n    this.apiService.findByParam(ENDPOINTS.company, `custom/search?companyName=${companyName}`).subscribe((res: any) => {\n      this.company = res.data[0];\n      if (this.company.membersAffiliation.status === 'INACTIVE') {\n        this.checkInactiveAffiliationFunction();\n        this.sweetAlertService.customErrorMessage(`Cannot proceed with the application. Company's membership affiliation is no longer active. Please contact ASC admin`);\n      }\n\n      if (this.company.status === 'FOR_APPROVAL') {\n        this.isNewCompany = true;\n      }\n\n    }, (err: any) => {\n    });\n  }\n\n  compareCompanyName(value: any, selected: any): boolean {\n    if (value && selected && value.id === selected.id) {\n      return value.companyName === selected.companyName;\n    }\n  }\n\n  compareBrand(value: any, selected: any): boolean {\n    if (value && selected) {\n      return value.description === selected.description;\n    }\n  }\n\n  compareMembersAffiliation(value: any, selected: any): boolean {\n    if (value && selected) {\n      return value.description === selected.description;\n    }\n  }\n\n  compareProduct(value: any, selected: any): boolean {\n    if (value && selected) {\n      return value.description === selected.description;\n    }\n  }\n\n  // compareCategory(value: any, selected: any): boolean {\n  //   if (value && selected) {\n  //     return value.description === selected.description;\n  //   }\n  // }\n\n  openNewCompanyModal(status = 'new') {\n    let dataForModal: any;\n    if (status === 'new') {\n      dataForModal = {\n        isFromModal: true,\n        isUpdate: false,\n        country: this.dataStorage.getDefaultCountry()\n      }\n    } else if (status === 'update' && this.s1Application.company) {\n      dataForModal = {\n        isFromModal: true,\n        isUpdate: true,\n        company: this.s1Application.company\n      }\n    }\n\n    const dialogRef = this.dialog.open(AddCompanyComponent, {\n      width: '80%',\n      height: '85%',\n      data: {\n        dataForModal\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      this.isNewCompany = result ? true : false;\n      if (result) {\n        this.getCompanyList();\n        this.company = result;\n        this.dataStorage.setS1NewCompany(this.company);\n        this.s1Application.company = this.dataStorage.getS1NewCompany();\n      }\n    });\n  }\n\n  openNewBrandModal(status = 'new') {\n    let dataForModal: any;\n    if (status === 'new') {\n      dataForModal = {\n        isFromModal: true,\n        isUpdate: false,\n      }\n    } else if (status === 'update') {\n      dataForModal = {\n        isFromModal: true,\n        isUpdate: true,\n        brand: this.s1Application.brand\n      }\n    }\n\n    const dialogRef = this.dialog.open(BrandsComponent, {\n      width: '80%',\n      height: '85%',\n      data: {\n        dataForModal\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.getBrandList();\n        this.s1Application.brand = this.dataStorage.getS1NewBrand();\n        this.s1Application.product = this.s1Application.product;\n      }\n    });\n  }\n\n  openNewProductModal(status = 'new') {\n    let dataForModal: any;\n    if (status === 'new') {\n      dataForModal = {\n        isFromModal: true,\n        isUpdate: false,\n        brand: this.s1Application?.brand,\n      }\n    } else if (status === 'update') {\n      dataForModal = {\n        isFromModal: true,\n        isUpdate: true,\n        product: this.s1Application?.product,\n        currentStatus: 'FOR_APPROVAL'\n      }\n    }\n\n    const dialogRef = this.dialog.open(ProductComponent, {\n      width: '80%',\n      height: '85%',\n      data: {\n        dataForModal\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        // this.getBrandList();\n        this.setProductList();\n        this.s1Application.product = this.dataStorage.getS1NewProduct();\n      }\n    });\n  }\n\n  compareCountry(value: any, selected: any): boolean {\n    if (value && selected) {\n      return value.code === selected.code;\n    }\n  }\n\n  getCountries() {\n    this.apiService.findAll(ENDPOINTS.countries).subscribe((res: any) => {\n      this.countryList = res.responseData.data;\n      this.dataStorage.setDefaultCountry(res.responseData.data[0]);\n    }, (err: any) => {\n    });\n  }\n\n  checkInactiveAffiliationFunction() {\n    this.isInactiveAffiliation = this.s1Application?.company?.membersAffiliation?.status === 'INACTIVE';\n    this.checkInactiveAffiliation.emit();\n  }\n  \n  checkInvalidFields(s1Application: any): void {\n    if (s1Application?.company && s1Application?.brand && s1Application?.product) {\n      this.hasErrorFields.emit(false)\n    } else {\n      this.hasErrorFields.emit(true);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.ngUnsubscribe.next();\n    this.ngUnsubscribe.complete();\n  }\n}\n","<form [formGroup]=\"clientInformationForm\"\n*ngIf=\"s1Application?.multipleApplication?.submissionStatus !== 'UNPROCESSED' &&\n        s1Application?.status !== 'DISAPPROVED' &&\n        s1Application?.status !== 'APPROVED' &&\n        s1Application?.status !== 'APPROVED' &&\n        multipleApplication?.status !== 'APPROVED' &&\n        s1Application?.applicationRequest?.status !== 'APPROVED'\">\n\n  <div class=\"row\">\n    <!-- <mat-form-field class=\"col-md-5\" appearance=\"outline\">\n      <mat-label>Client Membership Affiliation</mat-label>\n      <mat-select [(ngModel)]=\"s1Application.membersAffiliation\" name=\"membersAffiliation\" formControlName=\"membersAffiliation\"\n        [compareWith]=\"compareMembersAffiliation\" [disabled]=\"isAscUser && isDisableFieldOnUpdate\">\n        <mat-option *ngFor=\"let i of memberAffiliationList\" [value]=\"i\">\n          {{i.description}}\n        </mat-option>\n      </mat-select>\n    </mat-form-field> -->\n\n    <div class=\"col-md-12 float-right\" style=\"padding-bottom:10px;\" *ngIf=\"s1Application?.company?.status === 'FOR_APPROVAL' && isAscUser\">\n      <button mat-raised-button class=\"button-red\" (click)=\"openNewCompanyModal('update')\">\n        <i class=\"material-icons color__white\">error_outline</i> View/Approve Company\n      </button>\n      <br>\n    </div>\n\n    <mat-form-field class=\"col-md-7\" appearance=\"outline\">\n      <mat-label>Client Company Name\n        <span class=\"badge rounded-pill bg-warning\" *ngIf=\"s1Application?.company?.status === 'FOR_APPROVAL' \">\n          For Approval\n        </span>\n        <span class=\"badge rounded-pill bg-danger\" *ngIf=\"s1Application?.company?.delinquent \">\n          With Penalty\n        </span>\n        <span class=\"required\">*</span>\n      </mat-label>\n      <mat-select [(ngModel)]=\"s1Application.company\" name=\"company\" formControlName=\"company\"\n        [compareWith]=\"compareCompanyName\"\n        [disabled]=\"(isAscUser && isDisableFieldOnUpdate) || (s2Application?.applicationForm || s1Application?.status === 'FOR_APPROVAL')\">\n        <mat-option (click)=\"isNewCompany=true;showCompanyAddress=false\" value=\"\" (click)=\"openNewCompanyModal()\">\n          <span class=\"badge bg-success dropdown-badge\">Add New Company</span>\n        </mat-option>\n        <mat-option *ngFor=\"let i of companyList\" [value]=\"i\" (click)=\"getCompanyAddress(i.companyName)\">\n          {{i.companyName}}\n        </mat-option>\n        <!-- <mat-option >[New\n          Company]</mat-option> -->\n      </mat-select>\n    </mat-form-field>\n\n    <mat-form-field class=\"col-md-5\" appearance=\"outline\" *ngIf=\"s1Application.company\">\n      <mat-label>\n        Client Membership Affiliation\n        <span class=\"badge rounded-pill bg-danger\"\n          *ngIf=\"s1Application?.company?.membersAffiliation?.status === 'INACTIVE' \">\n          Inactive\n        </span>\n      </mat-label>\n      <input matInput readonly [value]=\"s1Application?.company?.membersAffiliation?.description\">\n    </mat-form-field>\n\n    <!-- <div class=\"col-md-4\" *ngIf=\"s1Application?.applicationForm?.company?.status === 'FOR_APPROVAL' \">\n      <span class=\"badge rounded-pill bg-warning\">\n        For Approval\n      </span>\n    </div> -->\n\n    <div class=\"row\" *ngIf=\"isNewCompany==true\" [hidden]=\"s1Application?.company?.status !== 'FOR_APPROVAL'\">\n      <!-- <mat-form-field class=\"col-md-4\" appearance=\"outline\">\n        <mat-label>Client Membership Affiliation</mat-label>\n        <mat-select [(ngModel)]=\"company.membersAffiliation\" name=\"membersAffiliation\" [compareWith]=\"compareMembersAffiliation\"\n          formControlName=\"membersAffiliation\" matNativeControl required>\n          <mat-option *ngFor=\"let i of memberAffiliationList\" [value]=\"i\">\n            {{i.description}}\n          </mat-option>\n        </mat-select>\n      </mat-form-field> -->\n\n      <mat-form-field class=\"col-md-4\" appearance=\"outline\" [hidden]=\" company?.country?.id > 1 && company?.country \">\n        <mat-label>Country</mat-label>\n        <!-- <input matInput disabled value=\"PHIL\"> -->\n        <!-- <input matInput disabled [(ngModel)]=\"company.country\" formControlName=\"country\"> -->\n        <mat-select [(ngModel)]=\"company.country\" name=\"country\" [compareWith]=\"compareCountry\"\n          formControlName=\"country\" matNativeControl required disabled>\n          <mat-option *ngFor=\"let i of countryList\" [value]=\"i\">\n            {{i.code}} - {{i.name}}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n\n      <mat-form-field class=\"col-md-8\" appearance=\"outline\" [hidden]=\"company?.country?.id > 1 && company?.country \">\n        <mat-label>Complete Address</mat-label>\n        <textarea matInput [(ngModel)]=\"company.completeAddress\" formControlName=\"companyAddress\" name=\"completeAddress\"\n          [readonly]=\"true\"></textarea>\n      </mat-form-field>\n    </div>\n\n    <div class=\"row\" *ngIf=\"showCompanyAddress==true\">\n      <!-- FOR S1 APPLICATION FORM -->\n      <mat-form-field class=\"col-md-8\" appearance=\"outline\">\n        <mat-label>Company Address</mat-label>\n        <textarea matInput readonly [value]=\"s1Application?.company?.completeAddress\"></textarea>\n      </mat-form-field>\n\n      <mat-form-field class=\"col-md-4\" appearance=\"outline\">\n        <mat-label>Country</mat-label>\n        <input matInput readonly [value]=\"s1Application?.company?.country?.name\">\n      </mat-form-field>\n    </div>\n\n  </div>\n\n  <div class=\"row\">\n    <mat-form-field class=\"col-md-4\" appearance=\"outline\">\n      <mat-label>\n        Brand\n        <span class=\"badge rounded-pill bg-warning\" *ngIf=\"s1Application?.brand?.status === 'FOR_APPROVAL'\">\n          For Approval\n        </span>\n        <span class=\"badge rounded-pill bg-danger\" *ngIf=\"s1Application?.brand?.penalty\">\n          With Penalty\n        </span>\n        <span class=\"required\">*</span>\n      </mat-label>\n      <mat-select [(ngModel)]=\"s1Application.brand\" name=\"brand\" formControlName=\"brand\" [compareWith]=\"compareBrand\"\n        [disabled]=\"(isAscUser && isDisableFieldOnUpdate) || (s2Application?.applicationForm || s1Application?.status === 'FOR_APPROVAL')\" matTooltip=\"Client's Brand\"\n        (selectionChange)=\"setBrand()\">\n        <mat-option value=\"\" (click)=\"openNewBrandModal()\"><span class=\"badge bg-success dropdown-badge\">Add New Brand</span></mat-option>\n        <mat-option *ngFor=\"let i of brandList\" [value]=\"i\">\n          {{i.description}}\n        </mat-option>\n      </mat-select>\n    </mat-form-field>\n\n    <mat-form-field class=\"col-md-4\" appearance=\"outline\">\n      <mat-label>\n        Product\n        <span class=\"badge rounded-pill bg-warning\" *ngIf=\"s1Application?.product?.status === 'FOR_APPROVAL'\">\n          For Approval\n        </span>\n        <span class=\"required\">*</span>\n      </mat-label>\n      <mat-select [(ngModel)]=\"s1Application.product\" name=\"product\" formControlName=\"product\"\n        [compareWith]=\"compareProduct\" (selectionChange)=\"setProductList()\"\n        [disabled]=\"(isAscUser && isDisableFieldOnUpdate || (s2Application?.applicationForm || s1Application?.status === 'FOR_APPROVAL')) || !s1Application.brand\">\n        <mat-option value=\"\" (click)=\"openNewProductModal()\"><span class=\"badge bg-success dropdown-badge\">Add New Product</span></mat-option>\n        <mat-option *ngFor=\"let i of productList\" [value]=\"i\">\n          {{i.description}}\n        </mat-option>\n      </mat-select>\n    </mat-form-field>\n\n    <mat-form-field class=\"col-md-4\" appearance=\"outline\">\n      <mat-label>Category</mat-label>\n      <input matInput readonly [value]=\"s1Application?.product?.category?.description\" />\n    </mat-form-field>\n\n    <!-- <mat-form-field *ngIf=\"s1Application.brand\" class=\"col-md-4\" appearance=\"outline\">\n      <mat-label>Product</mat-label>\n      <input matInput [(ngModel)]=\"s1Application.brand.product.description\" name=\"product\" formControlName=\"product\"\n        readonly>\n    </mat-form-field> -->\n\n    <!-- <mat-form-field *ngIf=\"s1Application.brand\" class=\"col-md-4\" appearance=\"outline\">\n      <mat-label>Category</mat-label>\n      <input matInput [(ngModel)]=\"s1Application.brand.category.description\" name=\"category\" formControlName=\"category\"\n        readonly>\n    </mat-form-field> -->\n    <!-- <div class=\"col-md-4\" *ngIf=\"s1Application?.brand?.status === 'FOR_APPROVAL' \">\n      <span class=\"badge rounded-pill bg-warning\">\n        For Approval\n      </span>\n    </div> -->\n    <div class=\"col-md-12 float-right\" style=\"padding-bottom:10px;\" *ngIf=\"s1Application?.brand?.status === 'FOR_APPROVAL' && isAscUser\">\n      <button mat-raised-button class=\"button-red\" (click)=\"openNewBrandModal('update')\">\n        <i class=\"material-icons color__white\">error_outline</i> View/Approve Brand\n      </button>\n    </div>\n    <div class=\"col-md-12 float-right\" style=\"padding-bottom:10px;\" *ngIf=\"s1Application?.product?.status === 'FOR_APPROVAL' && isAscUser\">\n      <button mat-raised-button class=\"button-red\" (click)=\"openNewProductModal('update')\">\n        <i class=\"material-icons color__white\">error_outline</i> View/Approve Product\n      </button>\n    </div>\n  </div>\n</form>\n\n<!-- FOR MULTIPLE/SPECIAL PREVIEW -->\n<div class=\"row\" *ngIf=\"multipleApplication?.status === 'APPROVED' || s1Application?.multipleApplication?.submissionStatus === 'UNPROCESSED' || s1Application?.status === 'APPROVED' || s1Application?.status === 'DISAPPROVED' || s1Application?.applicationRequest?.status === 'APPROVED'\">\n  <div class=\"row\">\n    <!-- <div class=\"col-md-4\" appearance=\"outline\">\n        <mat-label>Client Membership Affiliation</mat-label>\n        <input matInput [value]=\"previewS1Application?.membersAffiliation?.description\" disabled>\n      </div> -->\n    <mat-form-field class=\"col-md-4\" appearance=\"outline\">\n      <mat-label>Client Company Name</mat-label>\n      <input matInput [value]=\"s1Application?.company?.companyName\" readonly>\n    </mat-form-field>\n    <mat-form-field class=\"col-md-4\" appearance=\"outline\">\n      <mat-label>Client Membership Affiliation</mat-label>\n      <input matInput [value]=\"s1Application?.company?.membersAffiliation?.description\" readonly>\n    </mat-form-field>\n  </div>\n\n  <div class=\"row\">\n    <mat-form-field class=\"col-md-4\" appearance=\"outline\">\n      <mat-label>Brand</mat-label>\n      <input matInput [value]=\"s1Application?.brand?.description\" readonly>\n    </mat-form-field>\n    <mat-form-field class=\"col-md-4\" appearance=\"outline\">\n      <mat-label>Product</mat-label>\n      <input matInput [value]=\"s1Application?.product?.description\" readonly>\n    </mat-form-field>\n    <mat-form-field class=\"col-md-4\" appearance=\"outline\">\n      <mat-label>Category</mat-label>\n      <input matInput [value]=\"s1Application?.product?.category?.description\" readonly>\n    </mat-form-field>\n  </div>\n</div>\n","import { MultiMediaMoving } from './multimedia-moving.model';\nexport class MultiMediaMovingConstant {\n    data: Array<MultiMediaMoving> = new Array<MultiMediaMoving>();\n    constructor(){\n        this.data =   [{\n            id: 0,\n            multimediaMovingMedium: 'cinema',\n            hasSelected: false,\n          },\n          {\n            id: 1,\n            multimediaMovingMedium: 'collaterals',\n            hasSelected: false,\n          },\n          {\n            id: 2,\n            multimediaMovingMedium: 'digital video',\n            hasSelected: false,\n          },\n          {\n            id: 3,\n            multimediaMovingMedium: 'e-ooh',\n            hasSelected: false,\n          },\n          {\n            id: 4,\n            multimediaMovingMedium: 'television',\n            hasSelected: false,\n          }\n        ]\n    }\n}","export * from './client-information/client-information.component';\nexport * from './material-information/material-information.component';\nexport * from './preview-application/preview-application.component';\nexport * from './s1-application/add-s1-application/add-s1-application.component';\nexport * from './s1-application/list-s1-application/list-s1-application.component';\nexport * from './s2-application/add-s2-application/add-s2-application.component';\nexport * from './s2-application/list-s2-application/list-s2-application.component';","import { WebSocketService } from \"app/core/services/socket/websocket.service\";\nimport { BadgeCounnter } from \"app/core/models/counter\";\nimport {\n  AfterViewChecked,\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n} from \"@angular/core\";\nimport { Company, S1Application, UserAccount, Payment } from \"@models\";\nimport { FormGroup, FormControl } from \"@angular/forms\";\nimport Swal from \"sweetalert2\";\nimport {\n  ENDPOINTS,\n  FORM_TYPE,\n  ROLES,\n  TYPE_OF_MEDIUM,\n  APPLICATION_STATUS,\n  COMMON_FUNCTION,\n  SUBMISSION_TYPE,\n  APPLICATION_STATUS_FOR_COMPLIANCE,\n  SPECIAL_APPLICATION,\n  APPLICATION_STAGE,\n  OTHER_STATUS,\n  USER_ROLES,\n  APPFORM_TYPE,\n  APPLICATION_STATUS_REVISION,\n  APP_DECISION_STATUS,\n  ATTACHMENT_TYPE,\n  STATUSES,\n} from \"@shared\";\nimport { ApiService, SweetAlertService, DataStorageService } from \"@services\";\nimport { MatAccordion } from \"@angular/material/expansion\";\nimport { ClientInformationComponent } from \"../../client-information/client-information.component\";\nimport { MaterialInformationComponent } from \"../../material-information/material-information.component\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { DatePipe } from \"@angular/common\";\nimport { ApplicationSingleMedia } from \"../../../../../core/models/application-single-media.model\";\nimport { PreviewApplicationComponent } from \"../../preview-application/preview-application.component\";\nimport {\n  ApplicationMultimedia,\n  ApplicationMultimediaItemsDTO,\n} from \"../../../../../core/models/application-multimedia.model\";\nimport { DomSanitizer } from \"@angular/platform-browser\";\nimport { MultipleApplication } from \"app/core/models/multiple-application.model\";\nimport { NgxSpinnerService } from \"ngx-spinner\";\nimport { ApplicationRequest } from \"app/core/models/application-request.model\";\nimport { RejectDisapprovedReasonComponent } from \"app/modules/fragments/reject-disapproved-reason/reject-disapproved-reason.component\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { PerformanceMetricsComponent } from \"../../performance-metrics/performance-metrics.component\";\nimport { IncompleteDisapprovedRationaleComponent } from \"app/modules/fragments/incomplete-disapproved-rationale/incomplete-disapproved-rationale.component\";\nimport { Report } from \"app/core/models/report.model\";\nimport { Rationale } from \"app/core/models/rationale.model\";\nimport { CommonServices } from \"app/core/services/common-services.service\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\nimport { isEqual, format } from \"date-fns\";\n\n@Component({\n  selector: \"app-add-s1-application\",\n  templateUrl: \"./add-s1-application.component.html\",\n  styleUrls: [\"./add-s1-application.component.scss\"],\n})\nexport class AddS1ApplicationComponent\n  implements OnInit, AfterViewChecked, OnDestroy, AfterViewInit {\n  @ViewChild(MatAccordion) accordion: MatAccordion;\n  @ViewChild(ClientInformationComponent, { static: false })\n  clientInformation: ClientInformationComponent;\n  @ViewChild(MaterialInformationComponent, { static: false })\n  materialInformation: MaterialInformationComponent;\n  @ViewChild(PreviewApplicationComponent, { static: false })\n  previewApplication: PreviewApplicationComponent;\n  // @ViewChild(AttachmentDocumentComponent, { static: false }) materialAttachmentDocument: AttachmentDocumentComponent;\n  public exportTime = { hour: 0, minute: 0, meriden: \"AM\", format: 12 };\n\n  title = \"ASC Online System\";\n  s1Application = new S1Application();\n  multipleApplication = new MultipleApplication();\n  applicationRequest = new ApplicationRequest();\n  company = new Company();\n  applicationSingleMedia = new ApplicationSingleMedia();\n  presentorDetails = new UserAccount();\n  report = new Report();\n  rationale = new Rationale();\n  affiliationList = [];\n  companyList = [];\n  isNewCompany = false;\n  showCompanyAddress = false;\n  formTypeList = [...FORM_TYPE];\n  specialApplicationType = [...SPECIAL_APPLICATION];\n  applicationTypeList = [];\n  attachmentDocuments: any = {};\n  originalAttachmentDocuments = [];\n  revisionAttachmentDocuments = [];\n  complianceAttachmentDocuments = [];\n  paymentAttachment: any;\n  supportiveDocumentList = [];\n  multimediaStaticList = [];\n  selectedMultimediaList = [];\n  multimediaMovingList = [];\n  screenerList = [];\n  reviewerList = [];\n  applicantList = [];\n  mediaTypeListTemp = [];\n  rationaleOthersList = [];\n  rationaleLists = [];\n  adSpecialistList = [];\n  applicationSingleMediaTemp = new ApplicationSingleMedia();\n  payment = new Payment();\n  safeURL: any; // for payment\n  isScheduleSendIsEmpty: boolean;\n  selectedApplicationOwner: any;\n  applicationStage: string;\n  revisionLetterAttachment: any;\n  currentSizeLength: string;\n  currentSizeLengthMultimedia = [];\n  toDeleteMultimediaList = [];\n  hasMultimediaLengthChange: boolean;\n  hasMultimediaLengthToEnableSubmit = false;\n  disableSubmitButtonByMedia = false;\n  hasErrorsClient = false;\n  badgeCounter: BadgeCounnter = new BadgeCounnter();\n  hasErrorsMaterial;\n  currentUser: any;\n  currentUserRole: any;\n  id: number;\n  multipleId: number;\n  isChecked = false;\n  isAscUser = false;\n  isDisableFieldOnUpdate = false;\n  isInactiveAffiliation: boolean;\n  isSubmit = false;\n  noDocumentAttached = true;\n  accordionDisable = false;\n  accordionExpanded = false;\n  validationMessage = \"\";\n  buttonDisabled = true;\n  adSpecButtonDisabled = true;\n  rationaleDisplay = false;\n  submissionType = SUBMISSION_TYPE.ORIGINAL;\n  defaultReviewer: any;\n  maxSizeLength = 1000;\n\n  ascUserRoleList = [\n    ...ROLES.filter((role: any) => role.ascUser === true).map(\n      (role: any) => role.role\n    ),\n  ];\n\n  s1ApplicationForm: FormGroup;\n  todayDate = new Date();\n\n  isSuperAdmin = false;\n  isAdmin = false;\n  isAccounting = false;\n  isApplicant = false;\n  isEvaluator = false;\n  isAdSpecialist = false;\n  isScreener = false;\n  isReviewer = false;\n\n  previewAttachmentsList = [];\n  previewAttachmentsDisplayedColumns: string[] = [\n    \"decisionFormFilename\",\n    \"viewDecisionFormIcon\",\n    \"stampMaterialFilename\",\n    \"viewStampMaterialIcon\",\n  ];\n  previewAttachmentsListDataSource: MatTableDataSource<object>;\n\n  selected: any; // in html but not existing in component -- encountered during 'ng serve --aot'\n  multimediaDTO: any;\n\n  activeHolidayDates: Date[];\n  activeWeekendDates: Date[];\n\n  constructor(\n    private apiService: ApiService,\n    private sweetAlertService: SweetAlertService,\n    private dataStorage: DataStorageService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private sanitizer: DomSanitizer,\n    public datepipe: DatePipe,\n    private spinner: NgxSpinnerService,\n    private cd: ChangeDetectorRef,\n    private dialog: MatDialog,\n    private commonServices: CommonServices,\n    private _snackBar: MatSnackBar\n  ) {}\n\n  ngOnInit() {\n    if (this.dataStorage.getS1FormAndAppType()) {\n      this.s1Application.formType = this.dataStorage.getS1FormAndAppType().formType;\n      this.getApplicationTypeList(this.s1Application.formType);\n      this.s1Application.applicationType = this.dataStorage.getS1FormAndAppType().appType;\n    }\n\n    if (this.dataStorage.getS1Application()) {\n      this.s1Application = this.dataStorage.getS1Application();\n    }\n\n    if (this.dataStorage.getSpecialS1Application()) {\n      this.applicationRequest = this.dataStorage.getSpecialS1Application();\n      this.s1Application.formType = \"INDIVIDUAL\";\n      this.s1Application.submissionDate = this.applicationRequest.submissionDate;\n      if (this.s1Application.submissionDate) {\n        this.isChecked = true;\n        this.s1Application.autoSubmit = true;\n      }\n    }\n\n    this.setFormValidator();\n\n    this.currentUser = this.dataStorage.getUserAccount();\n    this.currentUserRole = this.currentUser.userRole.name;\n    this.initUserRole();\n    this.id = Number(this.route.snapshot.paramMap.get(\"id\"));\n    if (this.id !== 0) {\n      this.viewApplication();\n    }\n\n    this.multipleId = Number(this.route.snapshot.paramMap.get(\"multipleId\"));\n    const ctr = Number(this.route.snapshot.paramMap.get(\"nextSequence\"));\n\n    if (this.multipleId !== 0) {\n      this.spinner.show();\n      this.apiService\n        .findById(ENDPOINTS.multipleApplication, this.multipleId)\n        .subscribe(\n          (res: any) => {\n            this.s1Application.multipleApplication = res.responseData.data;\n            this.s1Application.applicationType = this.s1Application.multipleApplication.applicationType;\n            this.s1Application.adTitle = this.s1Application.multipleApplication.adTitle;\n            this.s1Application.brand = this.s1Application.multipleApplication.brand;\n            this.s1Application.product = this.s1Application.multipleApplication.product;\n            // this.s1Application.category = this.s1Application.multipleApplication.category;\n            this.s1Application.company = this.s1Application.multipleApplication.company;\n            this.s1Application.submissionDate = this.s1Application.multipleApplication.dateOfSubmission;\n            this.s1Application.autoSubmit = true;\n            // this.s1Application.membersAffiliation = this.s1Application.multipleApplication.membersAffiliation;\n            this.s1Application.tagLine = this.s1Application.multipleApplication.tagLine;\n            this.s1Application.formType = APPFORM_TYPE.MULTIPLE;\n            this.s1Application.sequenceOrder = ctr;\n            this.spinner.hide();\n          },\n          (err: any) => {\n            this.spinner.hide();\n          }\n        );\n    }\n\n    this.isAscUser = this.ascUserRoleList.includes(\n      this.dataStorage.getUserRole()\n    );\n    // this.s1Application.autoSubmit = false;\n    // this.s1Application.autoSubmitTime = 0;\n    // determines if the field will be enabled/disabled on update of s1 app\n    this.isDisableFieldOnUpdate =\n      ROLES.filter(\n        (res: any) =>\n          res.disableFieldOnUpdate === true && res.role === this.currentUserRole\n      ).length > 0 && this.id > 0\n        ? true\n        : false;\n\n    setTimeout(() => {\n      this.spinner.hide();\n    }, 1);\n    if (this.currentUserRole === USER_ROLES.ROLE_ENCODER) {\n      this.accordionDisable = false;\n      this.getUserTypeForList();\n    }\n    this.checkSingleMediaChanges();\n    this.getAllActiveHolidays();\n    this.getAllActiveWeekends();\n  }\n\n  matCalendarDateFilter(date: Date) {\n    return !this.isDateHoliday(date) && date.getDay() !== 7;\n  }\n\n  initUserRole() {\n    if (this.currentUser.userRole.name === USER_ROLES.ROLE_SUPER_ADMIN) {\n      this.isSuperAdmin = true;\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_ADMIN) {\n      this.isAdmin = true;\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_ACCOUNTING) {\n      this.isAccounting = true;\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT) {\n      this.isApplicant = true;\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_SCREENER) {\n      this.isScreener = true;\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_REVIEWER) {\n      this.isReviewer = true;\n    } else if (\n      this.currentUser.userRole.name === USER_ROLES.ROLE_AD_SPECIALIST\n    ) {\n      this.isAdSpecialist = true;\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_ENCODER) {\n      this.isEvaluator = true;\n    }\n  }\n\n  ngAfterViewInit(): void {\n    this.checkSingleMediaChanges();\n    // this.checkMultimediaChanges();\n  }\n\n  ngAfterViewChecked() {\n    if (this.applicationSingleMedia) {\n      this.checkSingleMediaChanges();\n    }\n    if (\n      this.materialInformation?.newMultimediaList.length ||\n      this.multimediaMovingList.length\n    ) {\n      // this.checkMultimediaChanges();\n    }\n    this.cd.detectChanges();\n  }\n\n  getScreenerAssignedAppCount(id: number) {\n    return 0;\n  }\n\n  ngOnDestroy(): void {\n    sessionStorage.removeItem(\"FORM_TYPE\");\n    sessionStorage.removeItem(\"APP_TYPE\");\n    sessionStorage.removeItem(\"NUMBER_OF_APPLICATIONS\");\n    sessionStorage.removeItem(\"S1_APPLICATION\");\n    sessionStorage.removeItem(\"MULTIPLE_S1_APPLICATION\");\n    sessionStorage.removeItem(\"SPECIAL_S1_APPLICATIONS\");\n    sessionStorage.removeItem(\"AMOUNT\");\n    // alert('destroy')\n    // const formAndAppType = {\n    //   formType: '',\n    //   appType: []\n    // }\n    // this.dataStorage.setRequestFormAndAppType(formAndAppType);\n  }\n\n  checkInactiveAffiliation() {\n    this.isInactiveAffiliation = this.clientInformation.isInactiveAffiliation;\n  }\n\n  viewApplication() {\n    this.spinner.show();\n    this.apiService.findById(ENDPOINTS.applicationForm, this.id).subscribe(\n      (res: any) => {\n        this.s1Application = res.responseData.data;\n        if (this.s1Application) {\n          console.log(\"View App: \", this.s1Application);\n\n          this.getApplicationTypeList(this.s1Application.formType);\n          this.setAppType(this.s1Application.applicationType);\n\n          this.clientInformation.s1Application = this.s1Application;\n          this.materialInformation.s1Application = this.s1Application;\n          this.setApplicationStage();\n          this.fetchMultimedia();\n\n          if (\n            this.s1Application.refTypeOfMedium === TYPE_OF_MEDIUM.SINGLE_MEDIA\n          ) {\n            this.getApplicationSingleMedia();\n          } else if (\n            this.s1Application.refTypeOfMedium ===\n            TYPE_OF_MEDIUM.MULTIMEDIA_MOVING\n          ) {\n            this.getMultimediaMoving();\n          } else if (\n            this.s1Application.refTypeOfMedium ===\n            TYPE_OF_MEDIUM.MULTIMEDIA_STATIC\n          ) {\n            this.getMultimediaStatic();\n          }\n\n          if (this.s1Application.autoSubmit) {\n            this.scheduleSubmission();\n            this.onChangeDate(this.s1Application.submissionDate);\n          }\n\n          if (this.currentUser.userRole.name !== USER_ROLES.ROLE_APPLICANT) {\n            this.getPresentorDetails();\n          }\n\n          if (\n            this.s1Application.mainAttachmentReference ||\n            this.s1Application.supportingAttachmentReference ||\n            this.s1Application.revisionLetterAttachmentReference\n          ) {\n            this.getAttachmentDocuments();\n          }\n\n          if (\n            this.currentUserRole === USER_ROLES.ROLE_AD_SPECIALIST ||\n            this.currentUserRole === USER_ROLES.ROLE_SCREENER ||\n            this.currentUserRole === USER_ROLES.ROLE_REVIEWER\n          ) {\n            this.getUserTypeForList();\n          }\n\n          if (\n            (this.s1Application.decisionStatus === \"INCOMPLETE\" ||\n              this.s1Application.decisionStatus === \"DISAPPROVED\" ||\n              this.s1Application.decisionStatus ===\n                APP_DECISION_STATUS.APPROVED ||\n              this.s1Application.decisionStatus ===\n                APP_DECISION_STATUS.APPROVED_WITH_CAUTION) &&\n            this.currentUserRole === USER_ROLES.ROLE_SCREENER\n          ) {\n            // if ((this.s1Application.internalStatus === APPLICATION_STATUS_FOR_COMPLIANCE.COMPLIANCE_DOCUMENT_VERIFIED_BY_AD_SPE ||\n            //   this.s1Application.internalStatus === APPLICATION_STATUS_FOR_COMPLIANCE.COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER)) {\n            //     // this.dataStorage.setDecisionStatus(this.s1Application.decisionStatus);\n            //     // if(this.rationaleLists.length <= 0){\n            //     //   this.s1Application.decisionStatus = \"\";\n            //     //   alert(\"BLANK\")\n            //     // }else{\n            //     //   this.s1Application.decisionStatus = this.dataStorage.getDecisionStatus();\n            //     // }\n            // }\n\n            if (\n              this.s1Application.internalStatus ===\n                APPLICATION_STATUS_FOR_COMPLIANCE.COMPLIANCE_DOCUMENT_VERIFIED_BY_AD_SPE ||\n              this.s1Application.internalStatus ===\n                APPLICATION_STATUS_REVISION.REVISION_VERIFIED_BY_AD_SPE\n            ) {\n              if (this.rationaleOthersList || this.rationaleLists) {\n                this.getRationaleList();\n              }\n              // alert(this.dataStorage.getDecisionStatus())\n              if (this.dataStorage.getDecisionStatus()) {\n                this.s1Application.decisionStatus = this.dataStorage.getDecisionStatus();\n              }\n              // if (this.s1Application.decisionStatus === APP_DECISION_STATUS.INCOMPLETE ||\n              //   this.s1Application.decisionStatus === APP_DECISION_STATUS.DISAPPROVED) {\n              // this.getRationaleList();\n              // alert('KHFDSKF')\n              // console.log(\"HIIAHIIHIFDIFS\", this.rationaleLists);\n              // }\n            }\n          }\n\n          if (\n            this.isAdmin ||\n            this.isSuperAdmin ||\n            this.isApplicant ||\n            this.isAdSpecialist\n          ) {\n            this.apiService\n              .findByParam(\n                ENDPOINTS.stampedMaterialAndDecisionForms,\n                this.s1Application?.appFormReference\n              )\n              .subscribe((previewAttachmentsData) => {\n                this.previewAttachmentsList =\n                  previewAttachmentsData.responseData.data;\n                this.previewAttachmentsListDataSource = new MatTableDataSource<object>(\n                  this.previewAttachmentsList\n                );\n              });\n          }\n\n          console.log(\"VIEW APP FORM: \", this.s1Application);\n          setTimeout(() => {\n            this.spinner.hide();\n          }, 1);\n\n          if (this.s1Application.externalStatus) {\n            this.accordionDisable = false;\n          }\n        }\n      },\n      (err: any) => {\n        this.spinner.hide();\n      }\n    );\n  }\n\n  setApplicationStage(): void {\n    this.clientInformation.applicationStage = APPLICATION_STAGE.S1_APPLICATION;\n    this.materialInformation.applicationStage =\n      APPLICATION_STAGE.S1_APPLICATION;\n  }\n\n  getPresentorDetails() {\n    this.apiService\n      .findByParam(\n        ENDPOINTS.userLogin,\n        this.s1Application.applicationOwner.username\n      )\n      .subscribe(\n        (res: any) => {\n          if (res.responseData.data) {\n            this.presentorDetails = res.responseData.data;\n          }\n        },\n        (err: any) => {}\n      );\n  }\n\n  getApplicationSingleMedia() {\n    this.apiService\n      .findByParam(\n        ENDPOINTS.applicationSingleMedia,\n        `app-form-reference/${this.s1Application.appFormReference}`\n      )\n      .subscribe(\n        (res: any) => {\n          if (res.responseData.data.length > 0) {\n            this.applicationSingleMedia = res.responseData.data[0];\n            if (\n              this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT &&\n              this.s1Application.externalStatus === APPLICATION_STATUS.SAVED\n            ) {\n              this.materialInformation.applicationSingleMedia = this.applicationSingleMedia;\n            }\n            if (this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT) {\n              this.previewApplication.applicationSingleMedia = this.applicationSingleMedia;\n            }\n            this.currentSizeLength = this.applicationSingleMedia.sizeLength;\n            console.log(\n              \"view applicationSingleMedia: \",\n              this.applicationSingleMedia\n            );\n          } else {\n            this.applicationSingleMedia = new ApplicationSingleMedia();\n          }\n        },\n        (err: any) => {\n          this.applicationSingleMedia = new ApplicationSingleMedia();\n        }\n      );\n  }\n\n  getMultimediaStatic() {\n    this.apiService\n      .findByParam(\n        ENDPOINTS.applicationMultimedia,\n        `app-form-reference/${this.s1Application.appFormReference}`\n      )\n      .subscribe(\n        (res: any) => {\n          if (res.responseData.data.length > 0) {\n            this.multimediaStaticList = res.responseData.data;\n\n            if (\n              this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT &&\n              this.s1Application.externalStatus === APPLICATION_STATUS.SAVED\n            ) {\n              this.materialInformation.selectedMultimediaList = this.multimediaStaticList;\n            }\n            if (this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT) {\n              this.previewApplication.multimediaStaticList = this.multimediaStaticList;\n            }\n\n            console.log(\n              \"view multimediaStaticList: \",\n              this.multimediaStaticList\n            );\n            this.selectedMultimediaList = this.multimediaStaticList;\n          } else {\n            this.multimediaStaticList = [];\n          }\n        },\n        (err: any) => {\n          // this.multimediaStaticList = [];\n        }\n      );\n  }\n\n  getMultimediaMoving() {\n    this.apiService\n      .findByParam(\n        ENDPOINTS.applicationMultimedia,\n        `app-form-reference/${this.s1Application.appFormReference}`\n      )\n      .subscribe(\n        (res: any) => {\n          if (res.responseData.data.length > 0) {\n            this.multimediaMovingList = res.responseData.data;\n            this.currentSizeLengthMultimedia = this.multimediaMovingList.map(\n              (mappedMultimedia) => ({\n                multimediaSizeLength: mappedMultimedia.multimediaSizeLength,\n                typeOfMedium: mappedMultimedia.typeOfMedium.description,\n              })\n            );\n\n            if (\n              this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT &&\n              this.s1Application.externalStatus === APPLICATION_STATUS.SAVED\n            ) {\n              this.materialInformation.selectedMultimediaList = this.multimediaMovingList;\n            }\n            if (this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT) {\n              this.previewApplication.multimediaMovingList = this.multimediaMovingList;\n            }\n            console.log(\n              \"view multimediaMovingList: \",\n              this.multimediaMovingList\n            );\n            this.selectedMultimediaList = this.multimediaMovingList;\n          } else {\n            this.multimediaMovingList = [];\n          }\n        },\n        (err: any) => {\n          this.multimediaMovingList = [];\n        }\n      );\n  }\n\n  getAttachmentDocuments() {\n    this.apiService\n      .findAll(\n        ENDPOINTS.attachmentDocumentByAppFormReference +\n          this.s1Application.appFormReference\n      )\n      .subscribe((res: any) => {\n        this.attachmentDocuments = res.responseData.data;\n\n        if (\n          this.attachmentDocuments &&\n          this.attachmentDocuments.originalAttachmentDocuments.length !== 0\n        ) {\n          if (\n            this.attachmentDocuments.originalAttachmentDocuments.length === 1 &&\n            this.attachmentDocuments.originalAttachmentDocuments[0].attachmentType.includes(\n              \"SUPPORTIVE\"\n            )\n          ) {\n            this.attachmentDocuments.originalAttachmentDocuments[0] = null;\n            this.attachmentDocuments.originalAttachmentDocuments[1] = this.attachmentDocuments[0];\n          }\n\n          if (\n            this.attachmentDocuments.originalAttachmentDocuments.length === 2\n          ) {\n            const mainDoc = this.attachmentDocuments.originalAttachmentDocuments.filter(\n              (data) => data?.attachmentType === ATTACHMENT_TYPE.MAIN\n            )[0];\n\n            const suppDoc = this.attachmentDocuments.originalAttachmentDocuments.filter(\n              (data) => data?.attachmentType === ATTACHMENT_TYPE.SUPPORTIVE\n            )[0];\n\n            this.attachmentDocuments.originalAttachmentDocuments[0] = mainDoc;\n            this.attachmentDocuments.originalAttachmentDocuments[1] = suppDoc;\n          }\n        }\n        // this.revisionLetterAttachment = this.attachmentDocuments.filter(data =>\n        //   data?.attachmentType === ATTACHMENT_TYPE.REVISION_LETTER)[0];\n\n        this.originalAttachmentDocuments = this.attachmentDocuments.originalAttachmentDocuments;\n        this.revisionAttachmentDocuments = this.attachmentDocuments.revisionAttachmentDocuments;\n        this.complianceAttachmentDocuments = this.attachmentDocuments.complianceAttachmentDocuments;\n\n        if (\n          this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT &&\n          this.s1Application.externalStatus === APPLICATION_STATUS.SAVED\n        ) {\n          this.materialInformation.originalAttachmentDocuments = this.attachmentDocuments.originalAttachmentDocuments;\n          this.materialInformation.revisionAttachmentDocuments = this.attachmentDocuments.revisionAttachmentDocuments;\n          this.materialInformation.complianceAttachmentDocuments = this.attachmentDocuments.complianceAttachmentDocuments;\n        }\n\n        if (this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT) {\n          this.previewApplication.originalAttachmentDocuments = this.attachmentDocuments.originalAttachmentDocuments;\n          this.previewApplication.revisionAttachmentDocuments = this.attachmentDocuments.revisionAttachmentDocuments;\n          this.previewApplication.complianceAttachmentDocuments = this.attachmentDocuments.complianceAttachmentDocuments;\n        }\n        console.log(\"view attachmentDocuments: \", this.attachmentDocuments);\n\n        // check if there's supporting doc\n        if (this.s1Application.supportingAttachmentReference) {\n          this.getSupportiveDocuments();\n        }\n      });\n\n    // Fetch payment details\n    if (this.s1Application.paymentAttachmentReference !== null) {\n      this.viewPayment();\n    }\n  }\n\n  viewPayment() {\n    this.apiService\n      .findByParam(\n        ENDPOINTS.payment,\n        `app-form-reference/${this.s1Application.appFormReference}`\n      )\n      .subscribe(\n        (res: any) => {\n          if (res.responseData.data) {\n            this.payment = res.responseData.data;\n            this.apiService\n              .findByParam(\n                ENDPOINTS.attachmentDocument,\n                `payment-attachment-reference/${this.s1Application.paymentAttachmentReference}`\n              )\n              .subscribe(\n                (res1: any) => {\n                  if (res1) {\n                    this.paymentAttachment = res1;\n                    this.safeURL = this.sanitizer.bypassSecurityTrustResourceUrl(\n                      this.paymentAttachment.fileURL\n                    );\n                    console.log(\n                      \"view paymentAttachment: \",\n                      this.paymentAttachment\n                    );\n                  }\n                },\n                (err: any) => {\n                  this.paymentAttachment = [];\n                }\n              );\n          }\n        },\n        (err: any) => {}\n      );\n  }\n\n  getSupportiveDocuments() {\n    this.apiService\n      .findByParam(\n        ENDPOINTS.supportiveDocument,\n        `application-form-id/${this.s1Application.id}`\n      )\n      .subscribe(\n        (res: any) => {\n          if (res.responseData.data.length > 0) {\n            this.supportiveDocumentList = res.responseData.data;\n            if (\n              this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT &&\n              this.s1Application.externalStatus === APPLICATION_STATUS.SAVED\n            ) {\n              this.materialInformation.supportiveDocumentList = this.supportiveDocumentList;\n            }\n            if (this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT) {\n              this.previewApplication.supportiveDocumentList = this.supportiveDocumentList;\n            }\n            console.log(\n              \"view supportiveDocumentList: \",\n              this.supportiveDocumentList\n            );\n          }\n        },\n        (err: any) => {\n          this.supportiveDocumentList = [];\n        }\n      );\n  }\n\n  scheduleSubmission() {\n    this.isChecked = !this.isChecked;\n    this.s1Application.autoSubmit = !this.s1Application.autoSubmit;\n    const submissionDateValue = \"submissionDate\";\n    this.s1ApplicationForm.controls[submissionDateValue].reset();\n    this.disableSaveAndSubmitButton();\n  }\n\n  /* setTime(time) {\n    this.s1Application.autoSubmitTime = time;\n  } */\n\n  // noDocumentAttachFunction(): void {\n  //   this.noDocumentAttached = !this.noDocumentAttached;\n  // }\n\n  setFormValidator(): void {\n    // this.s1ApplicationForm = this.formBuilder.group({\n    //   type: ['', Validators.required]\n    // });\n    this.s1ApplicationForm = new FormGroup({\n      formType: new FormControl(),\n      applicationType: new FormControl(),\n      decision: new FormControl(),\n      submissionDate: new FormControl(),\n      applicationRequest: new FormControl(),\n      actionStatus: new FormControl(),\n      assignedUser: new FormControl(),\n      decisionStatus: new FormControl(),\n    });\n  }\n\n  resetFormValidator(): void {\n    this.s1Application = new S1Application();\n    this.s1ApplicationForm.markAsUntouched();\n    this.s1ApplicationForm.markAsPristine();\n  }\n\n  clear(): void {\n    this.s1Application = new S1Application();\n  }\n\n  getApplicationTypeList(formType) {\n    this.s1Application.formType = formType;\n    this.applicationTypeList = [];\n    this.apiService.findAll(ENDPOINTS.applicationType).subscribe(\n      (res: any) => {\n        // if (formType !== 'MULTIPLE') {\n        this.applicationTypeList = res.responseData.data;\n        // } else {\n        //   this.applicationTypeList.push(res.responseData.data[0]);\n        //   this.applicationTypeList.push(res.responseData.data[1]);\n        // }\n      },\n      (err: any) => {}\n    );\n  }\n\n  getUserTypeForList() {\n    this.apiService.findAll(ENDPOINTS.userAccount).subscribe((res: any) => {\n      res.responseData.data.filter((account: any) => {\n        if (this.currentUserRole === USER_ROLES.ROLE_AD_SPECIALIST) {\n          if (\n            account.userRole.name.toUpperCase() === USER_ROLES.ROLE_SCREENER\n          ) {\n            this.apiService\n              .findAll(\n                ENDPOINTS.applicationFormScreener +\n                  `custom/search?assignedScreenerId=${account.id}&page=1&size=100`\n              )\n              .subscribe(\n                (result: any) => {\n                  account.ctr = result.data.length;\n                  console.log(\"counter ->\", account);\n                  this.screenerList.push(account);\n                },\n                (err: any) => {}\n              );\n          }\n\n          if (\n            account.userRole.name.toUpperCase() ===\n            USER_ROLES.ROLE_AD_SPECIALIST\n          ) {\n            this.adSpecialistList.push(account);\n          }\n        }\n        if (this.currentUserRole === USER_ROLES.ROLE_SCREENER) {\n          if (\n            account.userRole.name.toUpperCase() === USER_ROLES.ROLE_REVIEWER\n          ) {\n            // start set partner reviewer as default/first\n            this.defaultReviewer = res.responseData.data.filter(\n              (reviewer: any) =>\n                reviewer.userRole.name.toUpperCase() ===\n                  USER_ROLES.ROLE_REVIEWER && reviewer.ascDefault === true\n            );\n\n            this.reviewerList = this.defaultReviewer;\n            const otherReviewers = res.responseData.data.filter(\n              (reviewer: any) =>\n                reviewer.userRole.name.toUpperCase() ===\n                  USER_ROLES.ROLE_REVIEWER && reviewer.ascDefault === false\n            );\n            this.reviewerList.push(...otherReviewers);\n\n            // this.s1Application.assignedUser = this.reviewerList[0];\n            this.s1Application.assignedReviewer = this.reviewerList[0];\n            // end set partner reviewer as default/first\n          }\n        }\n        this.buttonValidation(\"\");\n      });\n\n      if (this.currentUserRole === USER_ROLES.ROLE_ENCODER) {\n        console.log(\"ITS WORKING \");\n\n        this.applicantList = res.responseData.data.filter(\n          (account: any) =>\n            account.userRole.name === USER_ROLES.ROLE_APPLICANT &&\n            account.status === COMMON_FUNCTION.ACTIVE\n        );\n      }\n    });\n  }\n\n  checkAscRateBeforeSaveOrSubmit(process = \"save\") {\n    const sizeLength = +this.applicationSingleMedia?.sizeLength;\n    if (sizeLength > this.maxSizeLength) {\n      this.sweetAlertService.customErrorMessage(\n        `Max input for size/length is ${this.maxSizeLength}`\n      );\n    } else if (\n      this.s1Application.formType === \"MULTIPLE\" &&\n      !this.specialApplicationType.includes(\n        this.s1Application.applicationType.description.toUpperCase()\n      )\n    ) {\n      this.saveOrUpdateApplication(\"SAVED\");\n    } else if (\n      this.s1Application?.refTypeOfMedium === \"SINGLE MEDIA\" &&\n      this.s1Application.formType !== \"MULTIPLE\"\n    ) {\n      this.validateAscRates(process);\n    } else {\n      if (process === \"save\") {\n        this.saveOrUpdateApplication(\"SAVED\");\n      } else if (process === \"submit\") {\n        this.saveStatus(\"presentor\", \"submit\", \"S1_APPLICATION_SUBMITTED\");\n      }\n    }\n  }\n\n  validateAscRates(process = \"save\") {\n    this.apiService\n      .save(ENDPOINTS.validateAscRates, this.applicationSingleMedia)\n      .subscribe(\n        (res) => {\n          if (process === \"save\") {\n            this.saveOrUpdateApplication(\"SAVED\");\n          } else if (process === \"submit\") {\n            this.saveStatus(\"presentor\", \"submit\", \"S1_APPLICATION_SUBMITTED\");\n          }\n        },\n        (err) => {\n          this.sweetAlertService.error(err);\n        }\n      );\n  }\n\n  saveOrUpdateApplication(status, process = \"save\") {\n    console.log(\"1\");\n    console.log(\n      \"this.s1Application.appFormReference: \",\n      this.s1Application.appFormReference\n    );\n\n    if (\n      this.s1Application.formType === \"MULTIPLE\" &&\n      !this.s1Application.multipleApplication\n    ) {\n      Swal.fire({\n        text: `Are you sure you want to ${\n          process === \"save\" ? \"save\" : \"submit\"\n        } this multiple application?`,\n        icon: \"question\",\n        showCancelButton: true,\n        confirmButtonColor: \"#3085d6\",\n        cancelButtonColor: \"#d33\",\n        confirmButtonText: \"Confirm\",\n      }).then((result) => {\n        if (result.value) {\n          this.spinner.show();\n\n          this.multipleApplication.numberOfApplication = this.dataStorage.getNumberOfApplications();\n          this.multipleApplication.applicationType = this.s1Application.applicationType;\n          this.multipleApplication.dateOfSubmission = new Date(\n            this.s1Application.submissionDate\n          );\n          this.multipleApplication.status = this.specialApplicationType.includes(\n            this.multipleApplication.applicationType.description.toUpperCase()\n          )\n            ? OTHER_STATUS.FOR_APPROVAL\n            : APPLICATION_STATUS.APPROVED;\n          this.multipleApplication.actionBy = this.currentUser.username;\n          this.multipleApplication.actionDate = new Date();\n          if (this.currentUser.userRole.name === USER_ROLES.ROLE_ENCODER) {\n            this.multipleApplication.applicationOwner = this.s1Application.applicationOwner;\n          } else {\n            this.multipleApplication.applicationOwner = this.currentUser;\n          }\n          this.multipleApplication.submissionStatus = \"UNPROCESSED\";\n          this.multipleApplication.assignedAdSpecialist = null;\n          this.multipleApplication.assignedEncoder = null;\n          this.multipleApplication.assignedScreener = null;\n          this.multipleApplication.assignedReviewer = null;\n\n          // From Client Info\n          // this.multipleApplication.membersAffiliation = this.clientInformation.s1Application.membersAffiliation;\n          this.multipleApplication.company = this.clientInformation.s1Application.company;\n          this.multipleApplication.brand = this.clientInformation.s1Application.brand;\n          this.multipleApplication.product = this.clientInformation.s1Application.product;\n          // this.multipleApplication.category = this.clientInformation.s1Application.category;\n\n          // From Material Info\n          this.multipleApplication.adTitle = this.materialInformation.s1Application.adTitle;\n          this.multipleApplication.tagLine = this.materialInformation.s1Application.tagLine;\n\n          this.save();\n        }\n      });\n    } else {\n      if (\n        this.s1Application.appFormReference &&\n        this.s1Application.appFormReference !== \"\" &&\n        this.s1Application.appFormReference !== undefined\n      ) {\n        if (status !== APPLICATION_STATUS.SAVED) {\n          this.isSubmit = true;\n        }\n        console.log(\"APPFORM: \", this.s1Application);\n        console.log(\"process :: \", process);\n        if (process === \"save\") {\n          Swal.fire({\n            text: `Are you sure you want to ${process} this application?`,\n            icon: \"question\",\n            showCancelButton: true,\n            confirmButtonColor: \"#3085d6\",\n            cancelButtonColor: \"#d33\",\n            confirmButtonText: \"Confirm\",\n          }).then((result) => {\n            if (result.value) {\n              this.spinner.show();\n              this.setAndSaveS1Data(status);\n            }\n          });\n        } else {\n          Swal.fire({\n            text: `Are you sure you want to ${process} this application?`,\n            icon: \"question\",\n            showCancelButton: true,\n            confirmButtonColor: \"#3085d6\",\n            cancelButtonColor: \"#d33\",\n            confirmButtonText: \"Confirm\",\n          }).then((result) => {\n            if (result.value) {\n              this.setAndSaveS1Data(status);\n            }\n          });\n        }\n      } else {\n        this.sweetAlertService.customErrorMessage(\n          \"Missing application form reference.\"\n        );\n      }\n    }\n  }\n\n  setAndSaveS1Data(status): void {\n    console.log(\"2\");\n\n    if (this.s1Application.id === undefined) {\n      this.s1Application.id = 0;\n      this.s1Application.applicationOwner = this.currentUser;\n      // this.s1Application.appFormReference = ''; // ETO PALAAAA!!!!\n      this.s1Application.referenceCode = \"\";\n    }\n\n    // From Client Info\n    // this.s1Application.membersAffiliation = this.clientInformation.s1Application.membersAffiliation;\n    this.s1Application.company = this.clientInformation.s1Application.company;\n    this.s1Application.brand = this.clientInformation.s1Application.brand;\n    this.s1Application.product = this.clientInformation.s1Application.product;\n    // this.s1Application.category = this.clientInformation.s1Application.category;\n\n    // From Material Info\n    this.s1Application.adTitle = this.materialInformation.s1Application.adTitle;\n    this.s1Application.referenceCode = this.materialInformation.s1Application.referenceCode;\n    this.s1Application.tagLine = this.materialInformation.s1Application.tagLine;\n\n    // SubmissionType (default: ORIGINAL)\n    this.s1Application.submissionType = this.submissionType;\n\n    // Delete auto submit details if autoSubmit is false\n    if (this.s1Application.autoSubmit === false) {\n      this.isScheduleSendIsEmpty = false;\n      this.s1Application.submissionDate = null;\n    }\n    console.log(\"Saving...\");\n    this.save();\n  }\n\n  save() {\n    console.log(\"3\");\n    if (\n      this.s1Application.formType === \"INDIVIDUAL\" ||\n      this.s1Application.formType === \"FOR_PRESENTATION\" ||\n      (this.s1Application.formType === \"MULTIPLE\" &&\n        this.s1Application.multipleApplication)\n    ) {\n      this.spinner.show();\n      // Save S1 Form\n      this.mediaTypeListTemp = this.materialInformation.newMultimediaList;\n      this.applicationSingleMediaTemp = this.materialInformation.applicationSingleMedia;\n\n      this.setTypeOfMediumDisplay();\n      //\n      if (this.s1Application.refTypeOfMedium === TYPE_OF_MEDIUM.SINGLE_MEDIA) {\n        this.saveUpdateApplicationSingleMedia(\"SAVE\", null, null);\n      } else {\n        this.saveUpdateMultimedia(\"SAVE\", null, null);\n      }\n    } else if (this.s1Application.formType === \"MULTIPLE\") {\n      this.spinner.show();\n      this.apiService\n        .save(ENDPOINTS.multipleApplication, this.multipleApplication)\n        .subscribe(\n          (res: any) => {\n            this.spinner.hide();\n            this.router.navigate([\"asc/page/application/s1/multiple\"]);\n            const message = this.specialApplicationType.includes(\n              this.multipleApplication.applicationType.description.toUpperCase()\n            )\n              ? \"Multiple application successfully submitted for approval\"\n              : \"Multiple application successfully saved\";\n            this.sweetAlertService.customSuccessMessage(message);\n            // this.navigateToS1List();\n          },\n          (err: any) => {\n            console.log(err);\n            this.spinner.hide();\n            this.sweetAlertService.error(err);\n          }\n        );\n    }\n  }\n\n  setTypeOfMediumDisplay() {\n    console.log(\"3a\");\n    if (this.s1Application.refTypeOfMedium === TYPE_OF_MEDIUM.SINGLE_MEDIA) {\n      this.s1Application.typeOfMedium = this.materialInformation?.typeOfMedium?.description;\n    } else {\n      let movingStatic = \"\";\n      if (this.s1Application.typeOfMedium) {\n        movingStatic = this.s1Application.typeOfMedium;\n      }\n\n      this.mediaTypeListTemp.forEach((element) => {\n        if (movingStatic === \"\") {\n          movingStatic = element.description;\n        } else if (!movingStatic.includes(element.description)) {\n          movingStatic = movingStatic + \"/\" + element.description;\n        }\n        this.s1Application.typeOfMedium = movingStatic;\n      });\n\n      // removed multimediaToDelete\n      if (this.materialInformation?.toDeleteMultimediaList.length > 0) {\n        let currentTOM = this.s1Application.typeOfMedium;\n        this.materialInformation?.toDeleteMultimediaList?.forEach(\n          (multimediaToDelete) => {\n            console.log(\n              \"REMOVE: \",\n              multimediaToDelete.typeOfMedium.description\n            );\n            currentTOM = currentTOM.replace(\n              multimediaToDelete.typeOfMedium.description + \"/\",\n              \"\"\n            );\n            currentTOM = currentTOM.replace(\n              \"/\" + multimediaToDelete.typeOfMedium.description,\n              \"\"\n            );\n          }\n        );\n        this.s1Application.typeOfMedium = currentTOM;\n      }\n    }\n  }\n\n  saveUpdateApplicationSingleMedia(status, ascUser, action) {\n    console.log(\"3b\");\n    this.applicationSingleMediaTemp.appFormReference = this.s1Application?.appFormReference;\n\n    // this.spinner.hide();\n    if (this.applicationSingleMediaTemp) {\n      // this.spinner.show();\n      this.apiService\n        .save(ENDPOINTS.applicationSingleMedia, this.applicationSingleMediaTemp)\n        .subscribe(\n          (res: any) => {\n            if (res !== undefined) {\n              console.log(\n                \"SAVED applicationSingleMedia: \",\n                res.responseData.data\n              );\n            }\n          },\n          (err: any) => {\n            // this.spinner.hide();\n            this.sweetAlertService.error(err);\n            return;\n          },\n          () => {\n            // this.spinner.hide();\n            if (status?.toUpperCase() === COMMON_FUNCTION.SAVE.toUpperCase()) {\n              this.saveAppForm();\n            } else if (\n              status?.toUpperCase() === COMMON_FUNCTION.SUBMIT.toUpperCase()\n            ) {\n              this.processAppForm(ascUser, action);\n            }\n          }\n        );\n    }\n  }\n\n  saveUpdateMultimedia(status, ascUser, action) {\n    let typeOfMultimedia = \"\";\n    this.multimediaDTO.appFormReference = this.s1Application.appFormReference;\n\n    if (\n      this.s1Application.refTypeOfMedium === TYPE_OF_MEDIUM.MULTIMEDIA_MOVING\n    ) {\n      typeOfMultimedia = \"moving\";\n    } else {\n      typeOfMultimedia = \"static\";\n    }\n\n    this.apiService\n      .save(\n        ENDPOINTS.applicationMultimedia + \"-\" + typeOfMultimedia,\n        this.multimediaDTO\n      )\n      .subscribe(\n        (res: any) => {},\n        (err: any) => {\n          // this.spinner.hide();\n          this.sweetAlertService.error(err);\n        },\n        () => {\n          // this.spinner.hide();\n          if (status?.toUpperCase() === COMMON_FUNCTION.SAVE.toUpperCase()) {\n            this.saveAppForm();\n          } else if (\n            status?.toUpperCase() === COMMON_FUNCTION.SUBMIT.toUpperCase()\n          ) {\n            this.processAppForm(ascUser, action);\n          } else {\n            this.spinner.hide();\n          }\n        }\n      );\n  }\n\n  // OLD IMPLEMENTATION - TO BE REMOVED ONCE VERIFIED\n  // saveUpdateMultimedia(status, ascUser, action) {\n  //   console.log('3c');\n  //   const asd = this.multimediaMovingList.concat(this.multimediaStaticList);\n\n  //   const multimediaList = [];\n  //   this.mediaTypeListTemp = this.materialInformation.newMultimediaList;\n\n  //   this.mediaTypeListTemp.forEach(element => {\n  //     if (element.sizeLength !== undefined) {\n\n  //       const obj = new ApplicationMultimedia();\n  //       obj.typeOfMedium = element;\n  //       obj.appFormReference = this.s1Application.appFormReference;\n  //       obj.multimediaSizeLength = element.sizeLength;\n\n  //       if (element.multimediaMoving) {\n  //         obj.mediaType = TYPE_OF_MEDIUM.MOVING;\n  //       }\n\n  //       if (element.multimediaStatic) {\n  //         obj.mediaType = TYPE_OF_MEDIUM.STATIC;\n  //       }\n\n  //       const existingValue = this.selectedMultimediaList.filter(filteredMedia => filteredMedia?.typeOfMedium?.id === obj.typeOfMedium.id);\n  //       if (existingValue.length) {\n  //         obj.id = existingValue[0].id;\n  //       }\n\n  //       delete element.sizeLength;\n  //       multimediaList.push(obj);\n  //     }\n  //   });\n\n  //   // this.spinner.show();\n  //   this.apiService.save(ENDPOINTS.applicationMultimedia + '/' + COMMON_FUNCTION.BATCH, multimediaList).subscribe(\n  //     (res: any) => {\n  //       // remove blank multimedia size/length\n  //       this.materialInformation?.toDeleteMultimediaList?.forEach(multimediaToDelete => {\n  //         this.apiService.deleteById(`${ENDPOINTS.applicationMultimedia}`, multimediaToDelete.id).subscribe();\n  //       });\n  //       // this.spinner.hide();\n  //     }, (err: any) => {\n  //       // this.spinner.hide();\n  //       this.sweetAlertService.error(err);\n  //     }, () => {\n  //       // this.spinner.hide();\n  //       if (status?.toUpperCase() === COMMON_FUNCTION.SAVE.toUpperCase()) {\n  //         this.saveAppForm();\n  //       } else if (status?.toUpperCase() === COMMON_FUNCTION.SUBMIT.toUpperCase()) {\n  //         this.processAppForm(ascUser, action);\n  //       } else {\n  //         this.spinner.hide();\n  //       }\n  //     });\n  // }\n\n  saveAppForm() {\n    console.log(\"4.0\");\n    console.log(\"TO SAVE: \", this.s1Application);\n    this.s1Application.actionBy = this.currentUser;\n    // ENDPOINTS.applicationFormEncoder + COMMON_FUNCTION.VERIFY;\n    this.apiService\n      .save(\n        ENDPOINTS.applicationFormPresentor + COMMON_FUNCTION.SAVE,\n        this.s1Application\n      )\n      .subscribe(\n        (res: any) => {\n          if (res !== undefined) {\n            this.id = res.responseData.data.id;\n            this.s1Application = res.responseData.data;\n            console.log(\"SAVED:\", this.s1Application);\n\n            // if (this.currentUserRole === USER_ROLES.ROLE_ENCODER) {\n            //   this.saveS1ApplicationByEncoder(this.s1Application);\n            // }\n\n            this.spinner.hide();\n          }\n        },\n        (err: any) => {\n          this.spinner.hide();\n          this.sweetAlertService.error(err);\n        },\n        () => {\n          // actions after subscription\n          // this.resetFormValidator();\n          if (this.s1Application.id !== undefined && this.isSubmit === false) {\n            // this.router.navigate(['asc/page/application/s1/update/', this.id]);\n            this.spinner.hide();\n            this.sweetAlertService.customSuccessMessage(\n              \"Application successfully saved.\"\n            );\n            if (this.s1Application.multipleApplication) {\n              this.router.navigate([\"asc/page/application/s1/multiple\"]);\n            } else {\n              this.navigateToS1List();\n            }\n          } else {\n            console.log(\"COMMENT OUT: S1_APPLICATION_SUBMITTED\");\n            // this.saveStatus('presentor', 'submit', 'S1_APPLICATION_SUBMITTED');\n          }\n        }\n      );\n  }\n\n  saveSupportingDocuments() {\n    this.spinner.show();\n    const supportingDocuments = [];\n\n    this.materialInformation.newSupportiveDocumentList = this.materialInformation.newSupportiveDocumentList.map(\n      (res: any) => {\n        res.applicationForm = this.s1Application;\n        supportingDocuments.push(res);\n      }\n    );\n    this.apiService\n      .save(\n        ENDPOINTS.supportiveDocument + \"/\" + COMMON_FUNCTION.BATCH,\n        supportingDocuments\n      )\n      .subscribe(\n        (res: any) => {\n          console.log(\"Saved suppoting docs successfully.\");\n          this.spinner.hide();\n        },\n        (err: any) => {\n          this.spinner.hide();\n          this.sweetAlertService.error(err);\n          return;\n        }\n      );\n  }\n\n  setAppType(type) {\n    this.s1Application.applicationType = type;\n  }\n\n  compareFormType(value: any, selected: any): boolean {\n    if (value && selected) {\n      return value.description === selected;\n    }\n  }\n\n  compareApplicationType(value: any, selected: any): boolean {\n    if (value && selected) {\n      return value.description === selected.description;\n    }\n  }\n\n  compareAssignedScreener(value: any, selected: any): boolean {\n    if (value && selected) {\n      return value.description === selected.description;\n    }\n  }\n\n  compareAssignedReviewer(value: any, selected: any): boolean {\n    if (value && selected) {\n      return value.description === selected.description;\n    }\n  }\n\n  compareAssignedAdSpec(value: any, selected: any): boolean {\n    if (value && selected) {\n      return value.description === selected.description;\n    }\n  }\n\n  // onChangeHour(event) {\n  //   let timeFetched;\n  //   timeFetched = event.hour + ':' + event.minute + event.meriden;\n  //   this.s1Application.autoSubmitTime = timeFetched;\n  // }\n\n  onChangeDate(value) {\n    if (value) {\n      const dateFetched = value;\n      const dateTransformed = this.datepipe.transform(\n        dateFetched,\n        \"yyyy-MM-dd\"\n      );\n      this.s1Application.submissionDate = new Date(dateTransformed);\n      this.s1Application.autoSubmit = true;\n      this.disableSaveAndSubmitButton();\n    }\n  }\n\n  resendDecision() {\n    Swal.fire({\n      text: \"Are you sure you want to resend decision form?\",\n      icon: \"question\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Confirm\",\n    }).then((result) => {\n      if (result.value) {\n        this.spinner.show();\n        this.apiService\n          .save(\n            ENDPOINTS.api +\n              `admin/application-form/id/${this.s1Application.id}/send/decision-form`,\n            this.s1Application\n          )\n          .subscribe(\n            (res: any) => {\n              if (res.code === 200) {\n                this.spinner.hide();\n                this.sweetAlertService.customSuccessMessage(\n                  \"Successfully resend decision form\"\n                );\n                this.navigateToS1List();\n              }\n            },\n            (err: any) => {\n              this.spinner.hide();\n            }\n          );\n      }\n    });\n  }\n\n  returnToScreener() {\n    Swal.fire({\n      text: \"Are you sure you want to return this application to Screener?\",\n      icon: \"question\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Confirm\",\n    }).then((result) => {\n      if (result.value) {\n        this.spinner.show();\n        let endpoint = \"\";\n        if (this.currentUser.userRole.name === USER_ROLES.ROLE_AD_SPECIALIST) {\n          endpoint =\n            ENDPOINTS.api +\n            `application-form/id/${this.s1Application.id}/s1/ad-specialist/forward-to-screener`;\n        } else if (\n          this.currentUser.userRole.name === USER_ROLES.ROLE_ADMIN ||\n          this.currentUser.userRole.name === USER_ROLES.ROLE_SUPER_ADMIN\n        ) {\n          endpoint =\n            ENDPOINTS.api +\n            `admin/application-form/id/${this.s1Application.id}/forward-to-screener`;\n        }\n\n        this.apiService.save(endpoint, this.s1Application).subscribe(\n          (res: any) => {\n            if (res.code === 200) {\n              console.log(\"RETURN: \", res.responseData.data);\n              this.spinner.hide();\n              this.sweetAlertService.customSuccessMessage(\n                \"Successfully return to Screener\"\n              );\n              this.navigateToS1List();\n            }\n          },\n          (err: any) => {\n            this.spinner.hide();\n          }\n        );\n      }\n    });\n  }\n\n  returnTo(ascUser, newStatus): void {\n    Swal.fire({\n      text:\n        \"Are you sure you want to return this application to \" + ascUser + \"?\",\n      icon: \"question\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Confirm\",\n    }).then((result) => {\n      if (result.value) {\n        this.spinner.show();\n        let endpoint = \"\";\n        this.s1Application.assignedUser = this.s1Application.actionBy;\n        this.s1Application.actionBy = this.currentUser;\n\n        if (this.currentUser.userRole.name === USER_ROLES.ROLE_SCREENER) {\n          if (\n            this.s1Application.multipleApplication &&\n            this.s1Application.submissionType === SUBMISSION_TYPE.ORIGINAL\n          ) {\n            endpoint = `${ENDPOINTS.multipleApplicationReturnToAdSpe}${this.s1Application.multipleApplication.id}/return`;\n          } else {\n            endpoint = `${ENDPOINTS.applicationFormScreener}return`;\n          }\n        } else if (\n          this.currentUser.userRole.name === USER_ROLES.ROLE_REVIEWER\n        ) {\n          if (\n            this.s1Application.multipleApplication &&\n            this.s1Application.submissionType === SUBMISSION_TYPE.ORIGINAL\n          ) {\n            endpoint = `${ENDPOINTS.multipleApplicationReturnToScreener}${this.s1Application.multipleApplication.id}/return`;\n          } else {\n            endpoint = `${ENDPOINTS.applicationFormReviewer}return`;\n          }\n        }\n\n        // console.log('TO SAVE: ', this.s1Application);\n        this.apiService.save(endpoint, this.s1Application).subscribe(\n          (res: any) => {\n            if (res.code === 200) {\n              // console.log('RETURN: ', res.responseData.data);\n              this.spinner.hide();\n              this.sweetAlertService.customSuccessMessage(\n                \"Successfully returned the application\"\n              );\n              this.navigateToS1List();\n            }\n          },\n          (err: any) => {\n            this.spinner.hide();\n          }\n        );\n      }\n    });\n  }\n\n  reassign(): void {\n    if (\n      this.s1Application.internalStatus ===\n      APPLICATION_STATUS.S1_APPLICATION_VERIFIED_BY_AD_SPE\n    ) {\n      if (this.s1Application.multipleApplication) {\n        this.s1Application.multipleApplication.assignedScreener = this.s1Application.assignedScreener;\n      } else {\n        this.s1Application.assignedUser = this.s1Application.assignedScreener;\n      }\n    } else if (\n      this.s1Application.internalStatus ===\n      APPLICATION_STATUS.S1_APPLICATION_SCREENED\n    ) {\n      if (this.s1Application.multipleApplication) {\n        this.s1Application.multipleApplication.assignedReviewer = this.s1Application.assignedReviewer;\n      } else {\n        this.s1Application.assignedUser = this.s1Application.assignedReviewer;\n      }\n    }\n\n    Swal.fire({\n      text: \"Are you sure you want to reassign this application?\",\n      icon: \"question\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Confirm\",\n    }).then((result) => {\n      if (result.value) {\n        this.spinner.show();\n        let endpoint = \"\";\n        let param = {};\n        this.s1Application.actionBy = this.currentUser;\n\n        if (this.currentUserRole === USER_ROLES.ROLE_AD_SPECIALIST) {\n          if (this.s1Application.multipleApplication) {\n            endpoint = ENDPOINTS.reAssignScreenerForMultipleApplication;\n            param = this.s1Application.multipleApplication;\n          } else {\n            endpoint = `${ENDPOINTS.applicationFormAdSpecialist}re-assign/screener`;\n            param = this.s1Application;\n          }\n        } else {\n          if (this.s1Application.multipleApplication) {\n            endpoint = ENDPOINTS.reAssignReviewerForMultipleApplication;\n            param = this.s1Application.multipleApplication;\n          } else {\n            endpoint = `${ENDPOINTS.applicationFormScreener}re-assign/reviewer`;\n            param = this.s1Application;\n          }\n        }\n\n        this.apiService.save(endpoint, param).subscribe(\n          (res: any) => {\n            console.log(\"SAVED: \", res.responseData.data);\n            if (res.code === 200) {\n              this.spinner.hide();\n              this.sweetAlertService.success(res);\n              this.navigateToS1List();\n            }\n          },\n          (err: any) => {\n            this.spinner.hide();\n          }\n        );\n      }\n    });\n  }\n\n  reassignAdSpecialist(): void {\n    Swal.fire({\n      text:\n        \"Are you sure you want to re-assign this application to \" +\n        this.s1Application.assignedAdSpecialist.firstName +\n        \" \" +\n        this.s1Application.assignedAdSpecialist.lastName,\n      icon: \"question\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Confirm\",\n    }).then((result) => {\n      if (result.value) {\n        this.spinner.show();\n        let endpoint = \"\";\n        this.s1Application.assignedUser = this.s1Application.assignedAdSpecialist;\n\n        endpoint = ENDPOINTS.applicationForm;\n\n        // console.log('TO SAVE: ', this.s1Application);\n        this.apiService.update(endpoint, this.s1Application).subscribe(\n          (res: any) => {\n            // console.log('RETURN: ', res.responseData.data);\n            if (res.code === 200) {\n              this.spinner.hide();\n              this.sweetAlertService.customSuccessMessage(\n                \"Application re-assigned successfully.\"\n              );\n              this.navigateToS1List();\n            }\n          },\n          (err: any) => {\n            this.spinner.hide();\n          }\n        );\n      }\n    });\n  }\n\n  validateSubmissionTime(status = \"\") {\n    const currentDate = new Date();\n    // start - for testing purposes only - uncomment lines below during dev (do not push uncomment)\n    // currentDate.setHours(11);\n    // currentDate.setMinutes(0);\n    // const currentHour = currentDate.getHours();\n    // const currentMinute = currentDate.getMinutes();\n\n    // if ((currentHour < 7 || (currentHour >= 11 && currentMinute > 0) || currentHour > 11) && status === 'S1_APPLICATION_SUBMITTED') {\n    //   const err = {\n    //     error: { message: 'Submission of application is between 7:00 AM to 11:00 AM only.' }\n    //   };\n    //   this.sweetAlertService.error(err);\n    //   return;\n    // }\n    // end\n  }\n\n  checkNullValues(str) {\n    return str ? str : \"\";\n  }\n\n  /////////////////////////// FOR ORIGINAL //////////////////////////////////\n  saveStatus(ascUser = \"\", action = \"\", status = \"\") {\n    let message: string = \"\";\n    if (action === \"submit\") {\n      message =\n        \"Once submitted and accepted, cancellation of application is not allowed.\" +\n        `Are you sure you want to ${action} this application?`;\n    } else message = `Are you sure you want to ${action} this application?`;\n    Swal.fire({\n      text: message,\n      icon: \"question\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Confirm\",\n    }).then((result) => {\n      if (result.value) {\n        let msg = \"\";\n        if (status === APPLICATION_STATUS.S1_APPLICATION_SUBMITTED) {\n          msg = COMMON_FUNCTION.SUBMIT;\n        } else if (status === APPLICATION_STATUS.S1_APPLICATION_CANCELLED) {\n          msg = COMMON_FUNCTION.CANCEL;\n        } else if (status === APPLICATION_STATUS.S1_APPLICATION_REJECTED) {\n          msg = COMMON_FUNCTION.REJECT;\n        } else if (\n          status === APPLICATION_STATUS.S1_APPLICATION_VERIFIED_BY_AD_SPE\n        ) {\n          msg = COMMON_FUNCTION.VERIFY;\n        } else if (status === APPLICATION_STATUS.S1_APPLICATION_SCREENED) {\n          msg = COMMON_FUNCTION.SCREEN;\n        } else {\n          msg = COMMON_FUNCTION.ACCEPT;\n        }\n\n        this.spinner.show();\n        this.dataStorage.setDisplayProgressbar(true);\n\n        // Check NULL values\n        this.s1Application.referenceCode = this.checkNullValues(\n          this.s1Application.referenceCode\n        );\n        this.s1Application.supportingAttachmentReference = this.checkNullValues(\n          this.s1Application.supportingAttachmentReference\n        );\n        this.s1Application.paymentAttachmentReference = this.checkNullValues(\n          this.s1Application.paymentAttachmentReference\n        );\n        this.s1Application.revisionLetterAttachmentReference = this.checkNullValues(\n          this.s1Application.revisionLetterAttachmentReference\n        );\n        this.s1Application.decisionStatus = this.checkNullValues(\n          this.s1Application.decisionStatus\n        );\n        this.s1Application.status = this.specialApplicationType.includes(\n          this.s1Application.applicationType.description.toUpperCase()\n        )\n          ? OTHER_STATUS.FOR_APPROVAL\n          : APPLICATION_STATUS.APPROVED;\n        // SUBMIT\n        if (status === APPLICATION_STATUS.S1_APPLICATION_SUBMITTED) {\n          if (this.currentUserRole === USER_ROLES.ROLE_ENCODER) {\n            this.s1Application.applicationOwner = this.selectedApplicationOwner;\n          } else {\n            this.s1Application.applicationOwner = this.dataStorage.getUserAccount();\n          }\n\n          this.s1Application.submissionDate = new Date();\n          // Delete auto submit details if autoSubmit was cancelled\n          this.s1Application.autoSubmit = false;\n        }\n\n        if (!this.s1Application.company) {\n          this.s1Application.company = this.dataStorage.getS1NewCompany();\n          sessionStorage.removeItem(\"NEW_COMPANY\");\n        }\n\n        this.s1Application.actionBy = this.dataStorage.getUserAccount();\n\n        if (status !== APPLICATION_STATUS.S1_APPLICATION_CANCELLED) {\n          // FOR ADSPE: Save Supporting Documents\n          if (\n            this.currentUserRole === USER_ROLES.ROLE_AD_SPECIALIST &&\n            this.materialInformation.newSupportiveDocumentList.length > 0\n          ) {\n            this.saveSupportingDocuments();\n          }\n\n          this.spinner.show();\n          if (\n            this.s1Application.formType !== APPFORM_TYPE.MULTIPLE ||\n            (this.s1Application.multipleApplication &&\n              this.s1Application.multipleApplication\n                .actualNumberOfApplicationForm ===\n                this.s1Application.multipleApplication\n                  .countVerifiedApplicationForm -\n                  1)\n          ) {\n            if (\n              ascUser === \"ad-specialist\" &&\n              action === \"verify\" &&\n              status === APPLICATION_STATUS.S1_APPLICATION_VERIFIED_BY_AD_SPE\n            ) {\n              // this.s1Application.assignedScreener = this.s1Application.assignedUser;\n              this.s1Application.assignedUser = this.s1Application.assignedScreener;\n            } else if (\n              ascUser === \"screener\" &&\n              action === \"verify\" &&\n              status === APPLICATION_STATUS.S1_APPLICATION_SCREENED\n            ) {\n              this.s1Application.assignedUser = this.s1Application.assignedReviewer;\n            }\n          }\n\n          this.mediaTypeListTemp = this.materialInformation.newMultimediaList;\n          this.applicationSingleMediaTemp = this.materialInformation.applicationSingleMedia;\n\n          console.log(\"mediaTypeListTemp: \", this.mediaTypeListTemp);\n          console.log(\n            \"applicationSingleMediaTemp: \",\n            this.applicationSingleMediaTemp\n          );\n\n          // Encoder: Update Medium details - working in single media\n          // Encoder: Encode appform - working in single media\n          if (this.currentUserRole === USER_ROLES.ROLE_ENCODER) {\n            this.setTypeOfMediumDisplay();\n            if (\n              this.s1Application.refTypeOfMedium === TYPE_OF_MEDIUM.SINGLE_MEDIA\n            ) {\n              this.applicationSingleMedia = this.applicationSingleMediaTemp;\n              this.applicationSingleMedia.appFormReference = this.s1Application.appFormReference;\n              this.saveUpdateApplicationSingleMedia(null, null, null);\n            } else {\n              this.saveUpdateMultimedia(null, null, null);\n            }\n          }\n\n          // working in Single Media\n          if (\n            msg === COMMON_FUNCTION.SUBMIT &&\n            this.currentUserRole === USER_ROLES.ROLE_APPLICANT\n          ) {\n            this.setTypeOfMediumDisplay();\n            if (\n              this.s1Application.refTypeOfMedium === TYPE_OF_MEDIUM.SINGLE_MEDIA\n            ) {\n              this.saveUpdateApplicationSingleMedia(msg, ascUser, action);\n            } else {\n              this.saveUpdateMultimedia(msg, ascUser, action);\n            }\n          } else {\n            this.processAppForm(ascUser, action);\n          }\n          // socket here\n        } else {\n          // CANCEL APPLICATION (PUT method)\n\n          this.spinner.show();\n          this.apiService\n            .update(\n              `${ENDPOINTS.applicationForm}/s1/${ascUser}/${action}`,\n              this.s1Application\n            )\n            .subscribe(\n              (res: any) => {\n                console.log(\"SAVED STATUS: \", res.responseData.data);\n                this.spinner.hide();\n                this.sweetAlertService.customSuccessMessage(\n                  \"Application successfully canceled.\"\n                );\n                this.navigateToS1List();\n              },\n              (err) => {\n                console.log(err);\n                this.spinner.hide();\n              },\n              () => {\n                this.dataStorage.setDisplayProgressbar(false);\n              }\n            );\n        }\n      }\n    });\n  }\n\n  processAppForm(ascUser, action) {\n    console.log(\"Process 2\");\n\n    const {\n      appFormReference,\n      revisionLetterAttachmentReference,\n      supportingAttachmentReference,\n    } = this.s1Application;\n    this.s1Application.appFormReference = appFormReference\n      ? appFormReference\n      : \"\";\n\n    if (revisionLetterAttachmentReference === \"\") {\n      delete this.s1Application.revisionLetterAttachmentReference;\n    }\n    if (supportingAttachmentReference === \"\") {\n      delete this.s1Application.supportingAttachmentReference;\n    }\n\n    this.s1Application.status = this.specialApplicationType.includes(\n      this.s1Application.applicationType.description.toUpperCase()\n    )\n      ? OTHER_STATUS.FOR_APPROVAL\n      : \"APPROVED\";\n    console.log(\"TO PROCESS: \", this.s1Application);\n\n    this.apiService\n      .save(\n        `${ENDPOINTS.applicationForm}/s1/${ascUser}/${action}`,\n        this.s1Application\n      )\n      .subscribe(\n        (res: any) => {\n          if (res) {\n            console.log(\"SAVED STATUS 1: \", res);\n            if (res.code === 400) {\n              this.sweetAlertService.customErrorMessage(res.responseMessage);\n            } else {\n              console.log(\"SAVED STATUS: \", res.responseData.data);\n              this.s1Application = res.responseData.data;\n              // saving of media\n              // if (this.s1Application.refTypeOfMedium === TYPE_OF_MEDIUM.SINGLE_MEDIA) {\n              //   this.saveUpdateApplicationSingleMedia();\n              // } else {\n              //   this.saveUpdateMultimedia();\n              // }\n\n              // Forward Multiple Application\n              if (\n                this.s1Application.multipleApplication &&\n                this.s1Application.multipleApplication\n                  .actualNumberOfApplicationForm ===\n                  this.s1Application.multipleApplication\n                    .countVerifiedApplicationForm\n              ) {\n                this.forwardMultipleAppsTo(ascUser);\n              } else {\n                console.log(\"SAVED STATUS: \", res.responseData.data);\n                this.s1Application = res.responseData.data;\n                // saving of media\n                // if (this.s1Application.refTypeOfMedium === TYPE_OF_MEDIUM.SINGLE_MEDIA) {\n                //   this.saveUpdateApplicationSingleMedia();\n                // } else {\n                //   this.saveUpdateMultimedia();\n                // }\n\n                // Forward Multiple Application\n                if (\n                  this.s1Application.multipleApplication &&\n                  this.s1Application.multipleApplication\n                    .actualNumberOfApplicationForm ===\n                    this.s1Application.multipleApplication\n                      .countVerifiedApplicationForm\n                ) {\n                  this.forwardMultipleAppsTo(ascUser);\n                } else {\n                  this.spinner.hide();\n                  this.sweetAlertService.success(res);\n                }\n              }\n            }\n          }\n        },\n        (err) => {\n          console.log(err);\n          this.spinner.hide();\n          this.sweetAlertService.error(err);\n          this.dataStorage.setDisplayProgressbar(false);\n        },\n        () => {\n          this.spinner.hide();\n          this.dataStorage.setDisplayProgressbar(false);\n          // if (this.s1Application.multipleApplication) {\n          //   this.router.navigate(['/asc/page/application/s1/multiple']);\n          // } else {\n          this.navigateToS1List();\n\n          //\n          if (\n            this.currentUserRole === USER_ROLES.ROLE_APPLICANT &&\n            this.checkCutOffTime()\n          ) {\n            this._snackBar.open(\n              \"Cutoff reached. Application will be processed the next day.\",\n              \"OK\",\n              {\n                horizontalPosition: \"right\",\n                verticalPosition: \"top\",\n                duration: 5000,\n              }\n            );\n          }\n          // }\n        }\n      );\n    // if (this.currentUserRole === USER_ROLES.ROLE_ENCODER && this.s1Application.externalStatus === APPLICATION_STATUS.SAVED) {\n    //   this.saveS1ApplicationByEncoder(this.s1Application);\n    // }\n  }\n\n  submitDecisionAndComment() {\n    Swal.fire({\n      text: \"Are you sure you want to save changes to this application?\",\n      icon: \"question\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Confirm\",\n    }).then((result) => {\n      if (result.value) {\n        let endpoint = \"\";\n        if (this.currentUser.userRole.name === USER_ROLES.ROLE_SCREENER) {\n          endpoint = ENDPOINTS.submitDecisionAndCommentScreener;\n        } else if (\n          this.currentUser.userRole.name === USER_ROLES.ROLE_REVIEWER\n        ) {\n          endpoint = ENDPOINTS.submitDecisionAndCommentReviewer;\n        }\n\n        this.apiService.save(endpoint, this.s1Application).subscribe(\n          (res: any) => {\n            console.log(res);\n            this.sweetAlertService.customSuccessMessage(\n              \"Decision and comment successfully submitted.\"\n            );\n            this.navigateToS1List();\n          },\n          (err: any) => {}\n        );\n      }\n    });\n  }\n\n  forwardMultipleAppsTo(user) {\n    console.log(\"forwardMultipleAppsTo\");\n    console.log(this.s1Application);\n\n    let endpoint = \"\";\n    if (user === \"encoder\") {\n      this.s1Application.multipleApplication.assignedEncoder = this.s1Application.assignedEncoder;\n      endpoint = ENDPOINTS.forwardMultipleAppFormToAdSpe;\n    } else if (user === \"ad-specialist\") {\n      this.s1Application.multipleApplication.assignedAdSpecialist = this.s1Application.assignedAdSpecialist;\n      this.s1Application.multipleApplication.assignedScreener = this.s1Application.assignedScreener;\n      endpoint = ENDPOINTS.forwardMultipleAppFormToScreener;\n    } else if (user === \"screener\") {\n      this.s1Application.multipleApplication.assignedReviewer = this.s1Application.assignedReviewer;\n      endpoint = ENDPOINTS.forwardMultipleAppFormToReviewer;\n    } else if (user === \"reviewer\") {\n      endpoint =\n        ENDPOINTS.releaseMultipleApplication +\n        this.s1Application.multipleApplication.id +\n        `/release`;\n    }\n\n    this.apiService\n      .save(endpoint, this.s1Application.multipleApplication)\n      .subscribe(\n        (res: any) => {\n          console.log(\"Forwarded: \", res);\n          this.spinner.hide();\n          this.sweetAlertService.customSuccessMessage(\n            \"Multiple application successfully forwarded to the next user.\"\n          );\n        },\n        (err: any) => {\n          this.spinner.hide();\n          this.sweetAlertService.error(err);\n        },\n        () => {\n          this.spinner.hide();\n        }\n      );\n  }\n\n  /////////////////////////// FOR COMPLIANCE //////////////////////////////////\n  saveStatusForCompliance(ascUser = \"\", action = \"\", status = \"\") {\n    console.log(\"Com > \", this.s1Application);\n    let msg;\n    if (\n      status ===\n      APPLICATION_STATUS_FOR_COMPLIANCE.SUBMITTED_DOCUMENT_FOR_COMPLIANCE\n    ) {\n      msg = COMMON_FUNCTION.SUBMIT;\n    } else {\n      msg = COMMON_FUNCTION.ACCEPT;\n    }\n\n    if (this.s1Application.submissionType === SUBMISSION_TYPE.REVISION) {\n      this.s1Application.submissionType = SUBMISSION_TYPE.REVISION;\n    } else {\n      this.s1Application.submissionType = SUBMISSION_TYPE.ORIGINAL;\n    }\n\n    Swal.fire({\n      text:\n        \"Are you sure you want to \" + msg + \" this application for compliance?\",\n      icon: \"question\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Confirm\",\n    }).then((result) => {\n      if (result.value) {\n        this.spinner.show();\n        this.dataStorage.setDisplayProgressbar(true);\n        console.log(\"TO SAVE: \", this.s1Application);\n\n        // FOR ADSPE: Save Supporting Documents\n        if (this.materialInformation.newSupportiveDocumentList.length > 0) {\n          this.saveSupportingDocuments();\n        }\n\n        this.spinner.show();\n        this.s1Application.actionBy = this.currentUser;\n\n        if (\n          ascUser === \"ad-specialist\" &&\n          action === \"verify\" &&\n          status ===\n            APPLICATION_STATUS_FOR_COMPLIANCE.COMPLIANCE_DOCUMENT_VERIFIED_BY_AD_SPE\n        ) {\n          // this.s1Application.assignedScreener = this.s1Application.assignedUser;\n          this.s1Application.assignedUser = this.s1Application.assignedScreener;\n          console.log(\"ASSINGED SCREENER\", this.s1Application.assignedUser);\n        }\n\n        if (\n          ascUser === \"screener\" &&\n          action === \"verify\" &&\n          status ===\n            APPLICATION_STATUS_FOR_COMPLIANCE.COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER\n        ) {\n          // this.s1Application.assignedScreener = this.s1Application.assignedUser;\n          this.s1Application.assignedUser = this.s1Application.assignedReviewer;\n          console.log(\"ASSINGED REVIEWER\", this.s1Application.assignedUser);\n        }\n\n        this.apiService\n          .save(\n            `${ENDPOINTS.applicationForm}/s1/compliance/${ascUser}/${action}`,\n            this.s1Application\n          )\n          .subscribe(\n            (res: any) => {\n              console.log(\"SAVED STATUS: \", res.responseData.data);\n              this.spinner.hide();\n              this.sweetAlertService.success(res);\n              this.navigateToS1List();\n            },\n            (err) => {\n              console.log(err);\n              this.spinner.hide();\n              this.sweetAlertService.error(err);\n              this.dataStorage.setDisplayProgressbar(false);\n            },\n            () => {\n              this.spinner.hide();\n              this.dataStorage.setDisplayProgressbar(false);\n            }\n          );\n      }\n    });\n  }\n\n  /////////////////////////// REVISION //////////////////////////////////\n  saveStatusRevision(ascUser = \"\", action = \"\", status = \"\") {\n    console.log(\"Rev > \", this.s1Application);\n    Swal.fire({\n      text: \"Are you sure you want to save changes for revision?\",\n      icon: \"question\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Confirm\",\n    }).then((result) => {\n      if (result.value) {\n        this.spinner.show();\n        this.dataStorage.setDisplayProgressbar(true);\n        if (\n          this.s1Application.revisionNo === 2 &&\n          this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT\n        ) {\n          this.spinner.hide();\n          this.sweetAlertService.customSuccessMessage(\n            \"Presentor can only submit revision no more than 2 times.\"\n          );\n        } else {\n          if (this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT) {\n            this.s1Application.submissionType = SUBMISSION_TYPE.REVISION;\n          }\n\n          // FOR ADSPE: Save Supporting Documents\n          console.log(\"Save supporting..\");\n          if (this.materialInformation.newSupportiveDocumentList.length > 0) {\n            this.saveSupportingDocuments();\n          }\n\n          this.s1Application.actionBy = this.dataStorage.getUserAccount();\n\n          if (\n            ascUser === \"ad-specialist\" &&\n            action === \"verify\" &&\n            status === APPLICATION_STATUS_REVISION.REVISION_VERIFIED_BY_AD_SPE\n          ) {\n            this.s1Application.assignedUser = this.s1Application.assignedScreener;\n          }\n\n          if (\n            ascUser === \"screener\" &&\n            action === \"verify\" &&\n            status === APPLICATION_STATUS_REVISION.REVISION_SCREENED\n          ) {\n            this.s1Application.assignedUser = this.s1Application.assignedReviewer;\n          }\n\n          console.log(\"TO SAVE: \", this.s1Application);\n\n          this.spinner.show();\n          this.apiService\n            .save(\n              `${ENDPOINTS.applicationForm}/s1/revision/${ascUser}/${action}`,\n              this.s1Application\n            )\n            .subscribe(\n              (res: any) => {\n                console.log(\"SAVED STATUS: \", res.responseData.data);\n                this.spinner.hide();\n                this.sweetAlertService.success(res);\n                this.navigateToS1List();\n              },\n              (err) => {\n                this.spinner.hide();\n                console.log(err);\n                this.sweetAlertService.error(err);\n                this.dataStorage.setDisplayProgressbar(false);\n              },\n              () => {\n                this.dataStorage.setDisplayProgressbar(false);\n              }\n            );\n        }\n      }\n    });\n  }\n\n  requestSpecialS1ApplicationApproval(): void {\n    this.applicationRequest = {\n      id: 0,\n      adTitle: this.s1Application.adTitle,\n      applicationOwner: this.s1Application.applicationOwner,\n      applicationType: this.s1Application.applicationType,\n      brand: this.s1Application.brand,\n      product: this.s1Application.product,\n      // category: this.s1Application.category,\n      company: this.s1Application.company,\n      formType: this.s1Application.formType,\n      // membersAffiliation: this.s1Application.membersAffiliation,\n      status: OTHER_STATUS.FOR_APPROVAL,\n      submissionDate: new Date(this.s1Application.submissionDate),\n      tagLine: this.s1Application.tagLine,\n      submitApplicationForm: false,\n      hasSpecialClearing: false,\n      applicationForm: null,\n    };\n    Swal.fire({\n      text: \"Are you sure you want to request this application for approval?\",\n      icon: \"question\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Confirm\",\n    }).then((result) => {\n      if (result.value) {\n        this.spinner.show();\n        this.dataStorage.setDisplayProgressbar(true);\n        console.log(\"TO SAVE: \", this.applicationRequest);\n\n        if (this.currentUser.userRole.name === USER_ROLES.ROLE_ENCODER) {\n          this.applicationRequest.applicationOwner = this.s1Application.applicationOwner;\n        } else {\n          this.applicationRequest.applicationOwner = this.currentUser;\n        }\n        this.apiService\n          .save(ENDPOINTS.applicationRequests, this.applicationRequest)\n          .subscribe(\n            (res: any) => {\n              console.log(\"SAVED STATUS: \", res.responseData.data);\n              this.spinner.hide();\n              this.sweetAlertService.success(res);\n              // this.navigateToS1List();\n              this.router.navigate([\"asc/page/application/s1/special\"]);\n            },\n            (err) => {\n              this.spinner.hide();\n              console.log(err);\n              this.sweetAlertService.error(err);\n              this.dataStorage.setDisplayProgressbar(false);\n            },\n            () => {\n              this.spinner.hide();\n              this.dataStorage.setDisplayProgressbar(false);\n            }\n          );\n      }\n    });\n  }\n\n  accordionDisablingFunction(): void {\n    if (this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT) {\n      // if (this.s1Application.membersAffiliation && this.company && this.s1Application.brand) {\n      // this.accordionDisable = !this.accordionDisable;\n      this.accordionExpanded = !this.accordionExpanded;\n      this.validationMessage = \"\";\n      // } else {\n      //   this.validationMessage = ' Please provide all the required information...'\n      // }\n    }\n  }\n\n  disabledWeekEnds = (d: Date | null): boolean => {\n    const day = (d || new Date()).getDay();\n    return (\n      ((day !== 0 && day !== 6) || this.isDateActiveWeekend(d)) &&\n      !this.isDateHoliday(d)\n    );\n  };\n\n  isDateHoliday(date: Date) {\n    return Boolean(\n      this.activeHolidayDates.find((holidayDate) => {\n        return format(date, \"yyyy-MM-dd\") === format(holidayDate, \"yyyy-MM-dd\");\n      })\n    );\n  }\n\n  isDateActiveWeekend(date: Date) {\n    return Boolean(\n      this.activeWeekendDates.find((weekendDate) => {\n        return format(date, \"yyyy-MM-dd\") === format(weekendDate, \"yyyy-MM-dd\");\n      })\n    );\n  }\n\n  disableSaveAndSubmitButton() {\n    if (this.s1Application.autoSubmit === false) {\n      this.isScheduleSendIsEmpty = false;\n    }\n    if (this.s1Application.autoSubmit === true) {\n      this.isScheduleSendIsEmpty = true;\n      if (\n        this.s1Application.submissionDate === null ||\n        this.s1Application.submissionDate === undefined\n      ) {\n        this.isScheduleSendIsEmpty = true;\n      } else {\n        this.isScheduleSendIsEmpty = false;\n      }\n    }\n  }\n\n  adSpecValidation(i: any): void {}\n\n  buttonValidation(i: any): void {\n    if (\n      this.currentUserRole === USER_ROLES.ROLE_AD_SPECIALIST &&\n      this.s1Application.assignedScreener\n    ) {\n      this.buttonDisabled = false;\n    } else if (\n      this.currentUserRole === USER_ROLES.ROLE_SCREENER &&\n      this.s1Application.assignedReviewer\n    ) {\n      // if ((i || this.s1Application.assignedUser.userRole.name === USER_ROLES.ROLE_REVIEWER) &&\n      //   (i || this.s1Application.assignedUser || this.s1Application.decisionStatus)) {\n      this.buttonDisabled = false;\n      // }\n    }\n\n    this.dataStorage.setDecisionStatus(i);\n\n    if (\n      (i === \"INCOMPLETE\" || i === \"DISAPPROVED\") &&\n      this.currentUserRole === USER_ROLES.ROLE_SCREENER\n    ) {\n      if (\n        this.s1Application.internalStatus ===\n          APPLICATION_STATUS_FOR_COMPLIANCE.COMPLIANCE_DOCUMENT_VERIFIED_BY_AD_SPE ||\n        this.s1Application.internalStatus ===\n          APPLICATION_STATUS_REVISION.REVISION_VERIFIED_BY_AD_SPE\n      ) {\n        if (\n          this.s1Application.decisionStatus ===\n            APP_DECISION_STATUS.INCOMPLETE ||\n          this.s1Application.decisionStatus === APP_DECISION_STATUS.DISAPPROVED\n        ) {\n          this.s1Application.decisionStatus = i;\n          // if (this.rationaleLists.length === 0) {\n          this.incompleteDisapprovedModal(i);\n          // }\n        }\n      }\n    }\n  }\n\n  selectApplicant(res) {\n    this.selectedApplicationOwner = res;\n    this.getPresentorDetails();\n  }\n\n  saveS1ApplicationByEncoder(data) {\n    this.spinner.show();\n    this.apiService\n      .save(ENDPOINTS.applicationFormEncoder + COMMON_FUNCTION.VERIFY, data)\n      .subscribe(\n        (res: any) => {\n          this.spinner.hide();\n          console.log(\"SAVED BY ENCODER : \", res.responseData.data);\n        },\n        (err: any) => {\n          this.spinner.hide();\n        }\n      );\n  }\n\n  rejectDisapprovedModal(): void {\n    const dialogRef = this.dialog.open(RejectDisapprovedReasonComponent, {\n      width: \"50%\",\n      height: \"65%\",\n      data: {\n        s1Application: this.s1Application,\n        applicationStage: \"s1\",\n      },\n    });\n  }\n\n  incompleteDisapprovedModal(decisionStatus): void {\n    const dialogRef = this.dialog.open(\n      IncompleteDisapprovedRationaleComponent,\n      {\n        width: \"50%\",\n        height: \"65%\",\n        data: {\n          s1Application: this.s1Application,\n          applicationStage: \"s1\",\n        },\n      }\n    );\n    dialogRef.afterClosed().subscribe((result) => {\n      this.getRationaleList();\n      if (\n        this.rationaleLists.length > 0 ||\n        this.rationaleOthersList.length > 0\n      ) {\n        this.s1Application.decisionStatus = decisionStatus;\n      }\n      if (result) {\n        this.buttonDisabled = false;\n      }\n    });\n  }\n\n  navigateToS1List() {\n    // setTimeout(() => {\n    this.router.navigate([\"asc/page/application/s1/lists\"]);\n    // }, 2000);\n  }\n\n  openPerformanceMetrics() {\n    const dialogRef = this.dialog.open(PerformanceMetricsComponent, {\n      data: {\n        appFormReference: this.s1Application.appFormReference,\n        referenceCode: this.s1Application.referenceCode,\n      },\n    });\n    dialogRef.afterClosed().subscribe((result) => {});\n  }\n\n  viewReport(id, filename) {\n    if (filename === \"S1_Decision_Form\" || filename === \"Stamp_Material\") {\n      const downloadURL =\n        filename === \"S1_Decision_Form\"\n          ? this.s1Application?.decisionFormFileURL\n          : filename === \"Stamp_Material\"\n          ? this.s1Application?.stampMaterialFileURL\n          : \"\";\n      window.open(downloadURL);\n    } else {\n      this.report.filename = filename;\n      this.report.format = \"pdf\";\n      (this.report.module = \"Form\"),\n        (this.report.params = { applicationFormId: id });\n      console.log(this.report);\n      this.spinner.show();\n      this.apiService\n        .printReport(ENDPOINTS.generateReports, this.report)\n        .subscribe(\n          (data: any) => {\n            const newBlob = new Blob([data], { type: \"application/pdf\" });\n            const downloadURL = URL.createObjectURL(newBlob);\n            this.spinner.hide();\n            window.open(downloadURL);\n          },\n          (err: any) => {\n            this.spinner.hide();\n          }\n        );\n    }\n  }\n\n  getRationaleList(): void {\n    // Rationale Object\n    this.apiService\n      .findByParam(\n        ENDPOINTS.applicationRationale,\n        `application-form-id/${this.s1Application.id}`\n      )\n      .subscribe((res: any) => {\n        this.rationaleOthersList = res.responseData.data;\n      });\n    // Rationale List\n    this.apiService\n      .findByParam(\n        ENDPOINTS.rationaleList,\n        `application/${this.s1Application.id}`\n      )\n      .subscribe((res: any) => {\n        this.rationaleLists = res;\n      });\n    this.rationaleDisplay = true;\n  }\n\n  resubmitApplication(id = this.s1Application?.id) {\n    this.spinner.show();\n    let endpoint = this.hasMultimediaLengthChange\n      ? ENDPOINTS.modifyApprovedS1ApplicationFormMultimedia\n      : ENDPOINTS.modifyApprovedS1ApplicationFormSingleMedia;\n\n    endpoint += `=${id}`;\n\n    const newMedia = this.materialInformation.newMultimediaList[0];\n\n    const obj = this.hasMultimediaLengthChange\n      ? {\n          appFormReference: this.s1Application.appFormReference,\n          typeOfMedium: newMedia,\n          mediaType: \"STATIC\",\n          multimediaSizeLength: newMedia.sizeLength,\n          amount: 0,\n        }\n      : this.applicationSingleMedia;\n\n    this.apiService.save(endpoint, obj).subscribe(\n      (res) => {\n        this.spinner.hide();\n\n        if (\n          this.s1Application.refTypeOfMedium === TYPE_OF_MEDIUM.SINGLE_MEDIA\n        ) {\n          this.saveUpdateApplicationSingleMedia(null, null, null);\n        } else {\n          this.saveUpdateMultimedia(null, null, null);\n        }\n        this.sweetAlertService.success(res);\n\n        if (this.s1Application.multipleApplication) {\n          this.router.navigate([\"asc/page/application/s1/multiple\"]);\n        } else {\n          this.navigateToS1List();\n        }\n      },\n      (err: any) => {\n        this.spinner.hide();\n      }\n    );\n  }\n\n  clearDecisionStatus(): void {\n    this.s1Application.decisionStatus = \"\";\n  }\n\n  checkSingleMediaChanges() {\n    this.applicationSingleMedia = this.materialInformation?.applicationSingleMedia;\n    this.disableSubmitButtonByMedia = this.materialInformation?.disableSubmitButtonByMedia;\n    this.hasMultimediaLengthToEnableSubmit = true;\n  }\n\n  checkMultimediaChanges() {\n    // this.hasMultimediaLengthToEnableSubmit = this.multimediaMovingList.length ? true : false;\n    this.disableSubmitButtonByMedia = false;\n    this.hasMultimediaLengthToEnableSubmit =\n      this.materialInformation?.newMultimediaList.length ||\n      this.multimediaMovingList.length ||\n      this.multimediaStaticList.length\n        ? true\n        : false;\n\n    const multimediaListChanges = this.materialInformation?.newMultimediaList?.map(\n      (mappedMultimedia) => ({\n        multimediaSizeLength: mappedMultimedia?.sizeLength,\n        typeOfMedium: mappedMultimedia?.description,\n      })\n    );\n\n    const hasSizeLengthChange = this.currentSizeLengthMultimedia\n      .map((media) => ({\n        multimediaSizeLength: media.multimediaSizeLength,\n        typeOfMedium: media.typeOfMedium,\n        multimediaSizeLengthNew: multimediaListChanges?.filter(\n          (filteredMedia) => filteredMedia.typeOfMedium === media.typeOfMedium\n        )[0]?.multimediaSizeLength,\n      }))\n      .filter(\n        (filteredRes) =>\n          +filteredRes.multimediaSizeLength !==\n            +filteredRes.multimediaSizeLengthNew &&\n          filteredRes.multimediaSizeLengthNew\n      );\n\n    const hasNewMultimediaType = multimediaListChanges\n      ?.map((multimedia) =>\n        this.currentSizeLengthMultimedia.some(\n          (currMedia) => currMedia.typeOfMedium === multimedia.typeOfMedium\n        )\n      )\n      .includes(false);\n\n    this.hasMultimediaLengthChange =\n      hasNewMultimediaType || hasSizeLengthChange.length ? true : false;\n  }\n\n  checkEmittedMultimedia(multimediaDTO): void {\n    this.multimediaDTO = multimediaDTO.data;\n\n    switch (multimediaDTO.type) {\n      case TYPE_OF_MEDIUM.MULTIMEDIA_MOVING:\n        if (multimediaDTO.data) {\n          this.hasMultimediaLengthToEnableSubmit =\n            multimediaDTO.data.sizeLength > 0 ? true : false;\n          this.disableSubmitButtonByMedia = multimediaDTO.data.applicationMultimediaMovingList.filter(\n            (medium: ApplicationMultimediaItemsDTO) =>\n              medium.hasSelected === true\n          )\n            ? false\n            : true;\n        }\n        break;\n      case TYPE_OF_MEDIUM.MULTIMEDIA_STATIC:\n        if (multimediaDTO.data) {\n          this.disableSubmitButtonByMedia = multimediaDTO.data.applicationMultimediaStaticList.filter(\n            (medium: ApplicationMultimediaItemsDTO) =>\n              medium.hasSelected === true\n          )\n            ? false\n            : true;\n\n          this.hasMultimediaLengthToEnableSubmit = multimediaDTO.data.applicationMultimediaStaticList.filter(\n            (medium: ApplicationMultimediaItemsDTO) =>\n              medium.multimediaStaticMedium === \"digital static\" ||\n              (medium.hasSelected === true && medium.sizeLength)\n          )\n            ? true\n            : false;\n        }\n        break;\n    }\n  }\n\n  fetchMultimedia(): void {\n    console.log(\"S1 APPP::: \", this.s1Application);\n    let typeofMedium =\n      this.s1Application.refTypeOfMedium === TYPE_OF_MEDIUM.MULTIMEDIA_MOVING\n        ? \"moving\"\n        : \"static\";\n    let endpoint =\n      ENDPOINTS.applicationMultimedia +\n      \"-\" +\n      typeofMedium +\n      \"/app-form-reference\";\n    this.apiService\n      .findByParam(endpoint, this.s1Application.appFormReference)\n      .subscribe((multimedia) => {\n        console.log(\"Multimedia Response: \", multimedia.responseData.data);\n        if (multimedia) this.multimediaDTO = multimedia.responseData.data;\n      });\n  }\n\n  submitAppeal() {\n    let endpoint;\n    if (this.isAdmin) {\n      endpoint = ENDPOINTS.admin + `/s1/verify/appeal`;\n    } else if (this.isAdSpecialist) {\n      endpoint = ENDPOINTS.applicationFormAdSpecialist + `verify/appeal`;\n    }\n\n    this.spinner.show();\n    this.apiService.save(endpoint, this.s1Application).subscribe(\n      (res: any) => {\n        this.spinner.hide();\n        this.sweetAlertService.success(res);\n        console.log(\"submitAppeal : \", res.responseData.data);\n        this.navigateToS1List();\n      },\n      (err: any) => {\n        this.spinner.hide();\n      }\n    );\n  }\n\n  sendDecisionOrStampMaterialManual(): void {\n    Swal.fire({\n      text: \"Are you sure you want to send this application form?\",\n      icon: \"question\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Confirm\",\n    }).then((result) => {\n      if (result.value) {\n        this.apiService\n          .save(\n            ENDPOINTS.s1ManualRelease + `/${this.s1Application.id}`,\n            this.s1Application\n          )\n          .subscribe((res: any) => {\n            this.sweetAlertService.customSuccessMessage(res.message);\n          });\n      }\n    });\n  }\n\n  checkCutOffTime(): boolean {\n    let regex = new RegExp(\":\", \"g\");\n    let startTime = \"11:00:00\";\n    let endTime = \"23:59:59\";\n    let currentTime = String(\n      new Date().getHours() +\n        \":\" +\n        new Date().getMinutes() +\n        \":\" +\n        new Date().getSeconds()\n    );\n\n    if (\n      parseInt(currentTime.replace(regex, \"\")) >=\n        parseInt(startTime.replace(regex, \"\")) &&\n      parseInt(currentTime.replace(regex, \"\")) <=\n        parseInt(endTime.replace(regex, \"\"))\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  checkMaterialFieldErrors(): boolean {\n    return (\n      (!this.s1Application?.adTitle ||\n        !this.s1Application?.refTypeOfMedium ||\n        !this.hasMultimediaLengthToEnableSubmit ||\n        this.disableSubmitButtonByMedia) &&\n      !this.s1Application.typeOfMedium\n    );\n  }\n\n  private getAllActiveHolidays() {\n    this.apiService.findAll(ENDPOINTS.holidays).subscribe((res: any) => {\n      this.activeHolidayDates = res.responseData.data\n        .filter(\n          (holidayDate) =>\n            holidayDate.status === \"ACTIVE\" &&\n            holidayDate.holidayType !== \"WEEKEND\"\n        )\n        .map((holidayDate) => new Date(holidayDate.holidayDate));\n    });\n  }\n\n  private getAllActiveWeekends() {\n    this.apiService.findAll(ENDPOINTS.holidays).subscribe((res: any) => {\n      this.activeWeekendDates = res.responseData.data\n        .filter(\n          (holidayDate) =>\n            holidayDate.status === \"ACTIVE\" &&\n            holidayDate.holidayType === \"WEEKEND\"\n        )\n        .map((holidayDate) => new Date(holidayDate.holidayDate));\n    });\n  }\n\n  isSingleRegularDisabled(): boolean {\n    return (\n      (!this.s1Application?.brand ||\n        !this.s1Application?.company ||\n        !this.s1Application?.adTitle ||\n        !this.s1Application?.refTypeOfMedium ||\n        !this.s1Application?.mainAttachmentReference ||\n        !this.s1Application?.refTypeOfMedium ||\n        (!this.s1Application?.hasNoSupportingDocs &&\n          !this.s1Application?.supportingAttachmentReference) ||\n        this.s1Application?.brand?.penalty ||\n        !this.s1Application?.product ||\n        this.s1Application?.company?.delinquent ||\n        this.isInactiveAffiliation ||\n        this.s1Application?.company?.status === \"INACTIVE\" ||\n        this.disableSubmitButtonByMedia ||\n        !this.hasMultimediaLengthToEnableSubmit) &&\n      !this.s1Application.typeOfMedium\n    );\n  }\n\n  isMultipleRegularDisabled(): boolean {\n    return (\n      !this.s1Application?.brand ||\n      !this.s1Application?.company ||\n      !this.s1Application?.adTitle ||\n      !this.s1Application?.refTypeOfMedium ||\n      this.s1Application?.brand?.penalty ||\n      !this.s1Application?.product ||\n      this.s1Application?.company?.delinquent ||\n      this.isInactiveAffiliation ||\n      this.s1Application?.company?.status === \"INACTIVE\" ||\n      !this.s1Application.submissionDate\n    );\n  }\n}\n","<form>\n  <div class=\"container-fluid\">\n    <!-- <div class=\"spinner\">\n      <ngx-spinner bdColor=\"rgba(0, 0, 0, 0.8)\" size=\"large\" color=\"#fff\" type=\"line-spin-fade\" [fullScreen]=\"false\">\n        <p *ngIf=\"s1Application.brand != undefined\"> Loading <b>{{s1Application.referenceCode}}</b> S1 Application. </p>\n        <p *ngIf=\"s1Application.brand === undefined && company.companyName === undefined\"> Creating new S1\n          Application... </p>\n      </ngx-spinner>\n    </div> -->\n    <div class=\"row title\">\n      <div class=\"col-md-12\">\n\n        <mat-label\n          *ngIf=\"isApplicant&&(s1Application?.externalStatus==undefined||s1Application?.externalStatus=='SAVED'||s1Application?.externalStatus=='S1_APPLICATION_SUBMITTED')\">\n          <i class=\"material-icons\">note_add</i> NEW S1 APPLICATION\n          <br><br>\n        </mat-label>\n\n        <mat-label\n          [hidden]=\"s1Application?.applicationType.description === 'Special Screening' || s1Application?.applicationType.description === 'Special Clearing' || s1Application?.applicationType.description === 'Special Screening and Clearing'\"\n          *ngIf=\"specialApplicationType.includes(s1Application?.applicationType?.description?.toUpperCase()) && (!applicationRequest?.status && s1Application.applicationRequest==null) && s1Application?.formType !== 'MULTIPLE'\">\n          <i class=\"material-icons\">note_add</i> REQUEST FOR APPROVAL\n        </mat-label>\n\n        <table>\n          <tr>\n            <td *ngIf=\"s1Application?.referenceCode||s1Application?.referenceCodeRejected\">\n              <span>\n                Reference Code:\n              </span>\n            </td>\n            <td *ngIf=\"s1Application?.referenceCode||s1Application?.referenceCodeRejected\">\n              <span>\n                <b>{{s1Application?.externalStatus=='S1_APPLICATION_REJECTED' ? s1Application?.referenceCodeRejected :\n                  s1Application?.referenceCode | uppercase}}</b>\n                <!-- <b *ngIf=\"s1Application?.revisionNo>0\"> (Revision Number {{s1Application?.revisionNo}})</b> -->\n              </span>\n            </td>\n            <td class=\"no-border\"></td>\n            <td class=\"no-border\"></td>\n            <td class=\"no-border\"></td>\n            <td class=\"no-border\">\n              <button class=\"button-right button-red\" mat-raised-button\n                [routerLink]=\"['/asc/page/application/s1/lists']\">\n                <i class=\"material-icons color__white\">list</i> VIEW APPLICATIONS\n              </button>\n              <!-- <button class=\"button-right button-red\" mat-raised-button *ngIf=\"s1Application?.formType==='MULTIPLE'\"\n              [routerLink]=\"['/asc/page/application/s1/multiple']\">\n              <i class=\"material-icons color__white\">list</i> VIEW APPLICATIONS\n            </button> -->\n            </td>\n          </tr>\n          <tr>\n            <td class=\"no-border\">\n            </td>\n          </tr>\n          <tr>\n            <td *ngIf=\"(s1Application?.externalStatus!=undefined&&!isAscUser)||isAscUser\">\n              <span>\n                Status:\n              </span>\n            </td>\n            <td *ngIf=\"(s1Application?.externalStatus!=undefined&&!isAscUser)||isAscUser\">\n              <span *ngIf=\"s1Application?.externalStatus!=undefined&&!isAscUser\">\n                <b>{{s1Application?.externalStatus?.replaceAll('_',' ') | uppercase}}</b>\n              </span>\n              <span *ngIf=\"isAscUser\">\n                <b>{{s1Application?.internalStatus?.replaceAll('_',' ') | uppercase}}</b>\n              </span>\n            </td>\n            <td class=\"no-border\"></td>\n            <td class=\"no-border\"></td>\n            <td\n              *ngIf=\"s1Application?.decisionStatus!=undefined&&s1Application?.internalStatus=='S1_APPLICATION_REVIEWED'\">\n              <span>\n                Decision:\n              </span>\n            </td>\n            <td\n              *ngIf=\"s1Application?.decisionStatus!=undefined&&s1Application?.internalStatus=='S1_APPLICATION_REVIEWED'\">\n              <span>\n                <b>{{s1Application?.decisionStatus | uppercase}}</b>\n              </span>\n            </td>\n          </tr>\n        </table>\n        <hr>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-md-6\">\n        <h3 *ngIf=\"s1Application?.submissionDate && applicationRequest?.status !== 'DISAPPROVED'\"><b\n            class=\"submission-date\">Submission Date:\n            {{s1Application?.submissionDate | date: 'MMMM d, yyyy'}}</b></h3>\n        <h3 *ngIf=\"s1Application?.submissionDate && applicationRequest?.status === 'DISAPPROVED'\"><b\n            class=\"submission-date\">Submission Date:\n            N/A - Request was disapproved</b></h3>\n      </div>\n\n      <div class=\"col-md-6\" *ngIf=\"s1Application?.amount && s1Application?.submissionType === 'ORIGINAL'\">\n        <span class=\"badge bg-warning text-dark button-right\">\n          {{s1Application?.paymentStatus?.replaceAll('_',' ')}} : ₱ {{\n          s1Application?.amount | number : '1.2-2'}} </span>\n      </div>\n    </div>\n\n    <div class=\"row\" [formGroup]=\"s1ApplicationForm\">\n      <mat-form-field class=\"col-md-4\" appearance=\"outline\" [hidden]=\"s1Application?.formType!=='MULTIPLE'\">\n        <mat-label>Form Type</mat-label>\n        <mat-select [(ngModel)]=\"s1Application.formType\" [compareWith]=\"compareFormType\" name=\"formType\"\n          formControlName=\"formType\" disabled>\n          <mat-option *ngFor=\"let i of formTypeList\" [value]=\"i\" (click)=\"getApplicationTypeList(i.description)\">\n            {{i?.description | uppercase}}\n            <span\n              *ngIf=\"s1Application?.multipleApplication&&s1Application?.multipleApplication?.submissionStatus!=='PROCESSED'\">({{s1Application?.sequenceOrder}}\n              of\n              {{s1Application?.multipleApplication?.numberOfApplication}})</span>\n            <span *ngIf=\"s1Application?.multipleApplication?.submissionStatus==='PROCESSED'\">\n              (Sequence Number: {{s1Application?.sequenceOrder}})</span>\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n\n      <mat-form-field class=\"col-md-4\" appearance=\"outline\">\n        <mat-label>Application Type</mat-label>\n        <mat-select [(ngModel)]=\"s1Application.applicationType\" [compareWith]=\"compareApplicationType\"\n          name=\"applicationType\" formControlName=\"applicationType\" disabled>\n          <!-- [disabled]=\"s1Application?.internalStatus!='SAVED'&&s1Application?.internalStatus!=undefined\" -->\n          <mat-option *ngFor=\"let i of applicationTypeList\" [value]=\"i\" (click)=\"setAppType(i)\">\n            {{i?.description | uppercase}}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n      <mat-form-field class=\"col-md-4\" appearance=\"outline\" *ngIf=\"s1Application?.submissionType\">\n        <mat-label>Submission Type</mat-label>\n        <input matInput [value]=\"s1Application?.submissionType\" readonly>\n      </mat-form-field>\n      <mat-form-field class=\"col-md-4\" appearance=\"outline\" *ngIf=\"s1Application.formType === 'FOR_PRESENTATION'\">\n        <mat-label>Form Type</mat-label>\n        <input matInput value=\"FOR PRESENTATION\" readonly>\n      </mat-form-field>\n    </div>\n    <hr>\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <button mat-raised-button class=\"button-right button-red\"\n          *ngIf=\"s1Application?.submissionType === 'ORIGINAL' && s1Application?.internalStatus === 's1 Reviewed' \"\n          (click)=\"viewReport(s1Application.id,'S1_Application_Form')\"><i\n            class=\"material-icons color__white\">open_in_new</i> VIEW APPLICATION REPORT </button>\n\n        <button mat-raised-button class=\"button-right button-red\" (click)=\"openPerformanceMetrics()\"\n          *ngIf=\"(currentUser?.userRole.name === 'ROLE_ADMIN' || currentUser?.userRole.name === 'ROLE_SUPER_ADMIN') && s1Application?.id\">\n          <i class=\"material-icons color__white\">trending_up</i> VIEW APPLICATION HISTORY </button>\n\n        <!-- <button mat-raised-button class=\"button-right button-red\" *ngIf=\"(currentUser?.userRole.name === 'ROLE_SUPER_ADMIN' || currentUser?.userRole.name === 'ROLE_ADMIN' || currentUser?.userRole.name === 'ROLE_AD_SPECIALIST')\n        && (s1Application?.releaseStatus === 'FOR_RELEASE' || s1Application?.releaseStatus === 'RELEASED') && s1Application?.paymentStatus === 'PAID'\"\n          (click)=\"viewReport(s1Application.id,'S1_Decision_Form')\"><i\n            class=\"material-icons color__white\">open_in_new</i> DECISION FORM</button> -->\n\n        <!-- <button mat-raised-button class=\"button-right button-red\" *ngIf=\"(currentUser?.userRole.name === 'ROLE_SUPER_ADMIN' || currentUser?.userRole.name === 'ROLE_ADMIN' || currentUser?.userRole.name === 'ROLE_AD_SPECIALIST')\n        && (s1Application?.releaseStatus === 'FOR_RELEASE' || s1Application?.releaseStatus === 'RELEASED') && s1Application?.paymentStatus === 'PAID'\"\n          (click)=\"viewReport(s1Application.id,'Stamp_Material')\"><i class=\"material-icons color__white\">open_in_new</i>\n          STAMPED MATERIAL</button> -->\n\n        <button mat-raised-button class=\"button-right button-red\"\n          *ngIf=\"s1Application?.submissionType === 'revision' && s1Application?.internalStatus === 'revision screened' \"\n          (click)=\"viewReport(s1Application.id, 'Revision_Form')\"><i class=\"material-icons color__white\">open_in_new</i>\n          REVISION FORM</button>\n\n        <button mat-raised-button class=\"button-right button-red\"\n          *ngIf=\"(currentUser?.userRole.name === 'ROLE_ADMIN' || currentUser?.userRole.name === 'ROLE_SUPER_ADMIN' || currentUser?.userRole.name === 'ROLE_AD_SPECIALIST')\n        && s1Application?.submissionType === 'COMPLIANCE' && s1Application?.decisionStatus === 'INCOMPLETE' && s1Application?.internalStatus === 'COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER'\"\n          (click)=\"viewReport(s1Application.id, 'S1_Pending_Form')\"><i\n            class=\"material-icons color__white\">open_in_new</i> PENDING FORM</button>\n            \n        <button mat-raised-button class=\"button-right button-red\" *ngIf=\"(currentUser?.userRole.name === 'ROLE_SUPER_ADMIN' || currentUser?.userRole.name === 'ROLE_ADMIN')\n        && (s1Application?.releaseStatus === 'FOR_RELEASE' || s1Application?.releaseStatus === 'RELEASED') && s1Application?.paymentStatus === 'PAID'\"\n          (click)=\"sendDecisionOrStampMaterialManual()\"><i class=\"material-icons color__white\">send</i>\n          SEND DECISION OR STAMPED MATERIAL</button>\n      </div>\n\n     \n\n      <!--   <div class=\"col-md-1\">\n        <button mat-raised-button class=\"button-right button-red\" (click)=\"viewReport(s1Application.id)\">Pending Form</button>\n      </div> -->\n    </div>\n    <br>\n    <div class=\"row\">\n      <mat-accordion class=\"headers-align\" multi>\n        <mat-expansion-panel [expanded]=\"\n        ((isApplicant&&s1Application?.internalStatus!='SAVED')\n        ||(s1Application?.internalStatus==undefined)) && !accordionExpanded\" *ngIf=\"\n        (isApplicant&&s1Application?.internalStatus=='SAVED')\n        ||(!isApplicant)\n        ||(s1Application?.internalStatus==undefined)\">\n\n          <mat-expansion-panel-header (click)=\"accordionDisablingFunction()\">\n            <mat-panel-title>\n              <i class=\"material-icons\">label_important</i> &nbsp;Client Information \n              <i class=\"material-icons error\" *ngIf=\"hasErrorsClient\">error</i>\n            </mat-panel-title>\n            <mat-panel-description>\n              Affiliation and Company details\n              <i class=\"material-icons\">perm_contact_calendar</i>\n            </mat-panel-description>\n          </mat-expansion-panel-header>\n          <br>\n\n          <app-client-information [s1Application]=\"s1Application\" [isAscUser]=\"isAscUser\"\n            (checkInactiveAffiliation)=\"checkInactiveAffiliation()\" [isDisableFieldOnUpdate]=\"isDisableFieldOnUpdate\"\n            [company]=\"company\" (hasErrorFields)=\"hasErrorsClient = $event\"></app-client-information>\n          <div *ngIf=\"!isDisableFieldOnUpdate\" class=\"required-fields-note\">Note: Fields with * are required</div>\n          <mat-action-row *ngIf=\"isApplicant\">\n            <p *ngIf=\"validationMessage\"><span class=\"badge bg-warning text-dark\"><i\n                  class=\"material-icons\">warning</i>{{validationMessage}}</span></p>\n            <button mat-raised-button color=\"warn\" (click)=\"accordionDisablingFunction()\">Next</button>\n          </mat-action-row>\n\n          <!-- <button mat-raised-button color=\"primary\" (click)=\"accordionDisablingFunction()\" [disabled]=\"!company?.companyName && !s1Application.brand\">Next</button> -->\n        </mat-expansion-panel>\n\n        <!-- FOR ASC Users only -->\n        <mat-expansion-panel *ngIf=\"!isApplicant\">\n          <mat-expansion-panel-header>\n            <mat-panel-title>\n              <i class=\"material-icons\">label_important</i> &nbsp;Presentor Information\n            </mat-panel-title>\n            <mat-panel-description>\n              Personal Details\n              <i class=\"material-icons\">person</i>\n            </mat-panel-description>\n          </mat-expansion-panel-header>\n\n          <br>\n          <div class=\"row\">\n\n            <div class=\"row\"><br></div>\n\n            <div class=\"row\">\n              <mat-form-field class=\"col-md-4\" appearance=\"outline\"\n                *ngIf=\"isEvaluator && s1Application?.externalStatus === undefined\">\n                <mat-label>Assign an Applicant<span class=\"required-field\">\n                    <mat-icon>notification_important</mat-icon>\n                  </span></mat-label>\n\n                <mat-select [(ngModel)]=\"s1Application.applicationOwner\" name=\"s1Application.applicationOwner\">\n                  <mat-option *ngFor=\"let i of applicantList\" [value]=\"i\" (click)=\"selectApplicant(i)\">\n                    {{i.firstName}} {{i.lastName}}\n                  </mat-option>\n                </mat-select>\n              </mat-form-field>\n\n              <mat-form-field class=\"col-md-8\" appearance=\"outline\" *ngIf=\"presentorDetails.id!= null\">\n                <mat-label>Name of Applicant</mat-label>\n                <input matInput [value]=\"presentorDetails?.firstName+' '+presentorDetails?.lastName\" readonly>\n              </mat-form-field>\n            </div>\n\n            <div class=\"row\">\n              <mat-form-field class=\"col-md-7\" appearance=\"outline\">\n                <mat-label>Company Name</mat-label>\n                <input matInput [value]=\"presentorDetails?.company?.companyName\" readonly>\n              </mat-form-field>\n            </div>\n\n            <div class=\"row\"><br></div>\n\n            <div class=\"row\">\n              <mat-form-field class=\"col-md-11\" appearance=\"outline\">\n                <mat-label>Address</mat-label>\n                <input matInput [value]=\"presentorDetails?.company?.completeAddress\" readonly>\n              </mat-form-field>\n            </div>\n\n            <div class=\"row\"><br></div>\n\n            <div class=\"row\" *ngIf=\"presentorDetails.id!= null\">\n              <mat-form-field class=\"col-md-5\" appearance=\"outline\">\n                <mat-label>Mobile Number</mat-label>\n                <input matInput [value]=\"presentorDetails?.mobileNumber\" readonly>\n              </mat-form-field>\n              <mat-form-field class=\"col-md-5\" appearance=\"outline\">\n                <mat-label>Email Address</mat-label>\n                <input matInput [value]=\"presentorDetails?.username\" readonly>\n              </mat-form-field>\n              <mat-form-field class=\"col-md-5\" appearance=\"outline\">\n                <mat-label>Telephone Number</mat-label>\n                <input matInput [value]=\"presentorDetails?.company?.companyTelephoneNo\" readonly>\n              </mat-form-field>\n              <mat-form-field class=\"col-md-5\" appearance=\"outline\">\n                <mat-label>Alternate Telephone Number</mat-label>\n                <input matInput [value]=\"presentorDetails?.company?.companyTelephoneNo2\" readonly>\n              </mat-form-field>\n            </div>\n\n          </div>\n        </mat-expansion-panel>\n\n        <mat-expansion-panel *ngIf=\"\n          (isApplicant && s1Application?.internalStatus=='SAVED')\n          ||(!isApplicant)\n          ||(s1Application?.internalStatus==undefined)\n          ||((s1Application?.internalStatus=='S1_APPLICATION_REVIEWED' || s1Application?.internalStatus=='COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER' || s1Application?.internalStatus=='REVISION_SCREENED' || s1Application?.internalStatus=='S1_APPLICATION_REJECTED')\n             && (s1Application?.decisionStatus=='APPROVED' || s1Application?.decisionStatus=='APPROVED W/ CAUTION' || s1Application?.decisionStatus=='INCOMPLETE')\n             && s1Application?.revisionNo < 2\n             && !s1Application?.appliedS2)\n          \" [disabled]=\"accordionDisable\"\n          [hidden]=\"(s1Application?.hasOngoingRevision || s1Application?.hasOngoingCompliance) && isApplicant\"\n          [expanded]=\"accordionExpanded || isAdSpecialist\">\n          <!-- s1Application?.membersAffiliation && s1Application?.company && s1Application?.brand -->\n          <mat-expansion-panel-header (click)=\"accordionDisablingFunction()\">\n            <mat-panel-title>\n              <i class=\"material-icons\">label_important</i> &nbsp;Material Information\n              <i class=\"material-icons error\" *ngIf=\"checkMaterialFieldErrors()\">error</i>\n            </mat-panel-title>\n            <mat-panel-description>\n              Ads Details\n              <i class=\"material-icons\">ads_click</i>\n            </mat-panel-description>\n          </mat-expansion-panel-header>\n          <br>\n\n          <app-material-information [s1Application]=\"s1Application\" [isAscUser]=\"isAscUser\"\n            [multimediaDTO]=\"multimediaDTO\" [applicationSingleMedia]=\"applicationSingleMedia\"\n            [originalAttachmentDocuments]=\"originalAttachmentDocuments\"\n            [revisionAttachmentDocuments]=\"revisionAttachmentDocuments\"\n            [complianceAttachmentDocuments]=\"complianceAttachmentDocuments\"\n            [isDisableFieldOnUpdate]=\"isDisableFieldOnUpdate\" [supportiveDocumentList]=\"supportiveDocumentList\"\n            (checkSingleMediaChangesFunction)=\"checkSingleMediaChanges()\"\n            (checkMultimediaChangesFunction)=\"checkEmittedMultimedia($event)\"\n            [toDeleteMultimediaList]=\"toDeleteMultimediaList\" [savedTypeOfMedium]=\"s1Application?.typeOfMedium\" \n            (hasErrorFields)=\"hasErrorsMaterial = $event\">\n          </app-material-information>\n          <div *ngIf=\"!isDisableFieldOnUpdate\" class=\"required-fields-note\">Note: Fields with * are required</div>\n          <!-- <mat-action-row>\n            <button mat-button color=\"primary\" (click)=\"accordionDisablingFunction()\">Next</button>\n          </mat-action-row> -->\n        </mat-expansion-panel>\n\n        <!-- PREVIEW FOR APPLICANT ONCE SUBMITTED -->\n        <mat-expansion-panel *ngIf=\"isApplicant&& s1Application?.internalStatus!=undefined\" [expanded]=\"isApplicant&&\n            (s1Application?.externalStatus=='S1_APPLICATION_SUBMITTED'\n            ||s1Application?.externalStatus=='S1_APPLICATION_IN_PROCESS'\n            ||s1Application?.externalStatus=='SUBMITTED_DOCUMENT_FOR_COMPLIANCE'\n            ||s1Application?.externalStatus=='COMPLIANCE_DOCUMENT_FOR_REVIEW'\n            ||s1Application?.externalStatus=='REVISION_REVIEW_IN_PROCESS'\n            ||s1Application?.externalStatus=='SUBMITTED_REVISION'\n            ||s1Application?.externalStatus=='S1_APPLICATION_CANCELLED'\n            ||s1Application?.externalStatus=='S1_APPLICATION_REJECTED'\n            ||s1Application?.internalStatus=='REVISION_SCREENED'\n            ||s1Application?.hasRevision\n            ||s1Application?.appliedS2)\">\n          <mat-expansion-panel-header>\n            <mat-panel-title>\n              <i class=\"material-icons\">label_important</i> &nbsp;Preview\n            </mat-panel-title>\n            <mat-panel-description>\n              S1 Application\n              <i class=\"material-icons\">visibility</i>\n            </mat-panel-description>\n          </mat-expansion-panel-header>\n          <br>\n          <app-preview-application [previewS1Application]=\"s1Application\" [multimediaDTO]=\"multimediaDTO\"></app-preview-application>\n        </mat-expansion-panel>\n\n      </mat-accordion>\n      <!-- </form> -->\n\n      <!-- COMMENTS FOR ASC Users -->\n      <div *ngIf=\"s1Application?.externalStatus != undefined && !isApplicant\">\n        <br>\n        <div class=\"row fields\">\n          <h4>\n            <i class=\"material-icons\">label_important</i> &nbsp;Comments\n          </h4>\n          <br>\n          <app-comment [commentS1Application]=\"s1Application\"></app-comment>\n          <div class=\"row\"><br></div>\n        </div>\n      </div>\n\n      <!-- ATTACHMENTS FOR STAMPED MATERIAL AND DECISION FORM -->\n      <div *ngIf=\"(isAdmin || isSuperAdmin || isApplicant || isAdSpecialist) && previewAttachmentsList.length\">\n        <br>\n        <div class=\"row fields\">\n          <h4>\n            <i class=\"material-icons\">label_important</i> &nbsp;Stamped Material and Decision Forms\n          </h4>\n          <br>\n          <app-preview-attachments [previewAttachmentsList]=\"previewAttachmentsList\"\n            [displayedColumns]=\"previewAttachmentsDisplayedColumns\"\n            [dataSource]=\"previewAttachmentsListDataSource\"></app-preview-attachments>\n          <div class=\"row\"><br></div>\n        </div>\n      </div>\n\n      <!-- DECISION OVERRIDE / APPEAL -->\n      <!-- <div *ngIf=\"(isAdmin || isSuperAdmin) &&\n      s1Application?.internalStatus === 'S1_APPLICATION_REVIEWED' && s1Application?.releaseStatus === 'RELEASED' &&\n      !s1Application?.appliedS2 && !s1Application?.hasOngoingCompliance && !s1Application?.hasOngoingRevision\">\n        <br>\n        <div class=\"row fields\">\n          <h4>\n            <i class=\"material-icons\">label_important</i> &nbsp;DECISION OVERRIDING\n          </h4>\n          <br>\n          <app-decision-override [s1Application]=\"s1Application\"></app-decision-override>\n          <div class=\"row\"><br></div>\n        </div>\n      </div> -->\n\n      <div class=\"row\"><br></div>\n\n      <div class=\"row\" [formGroup]=\"s1ApplicationForm\"\n        *ngIf=\"(s1Application.internalStatus==undefined || s1Application.internalStatus=='SAVED') ||\n      (s1Application?.formType === 'MULTIPLE' || specialApplicationType.includes(s1Application?.applicationType?.description?.toUpperCase()))\">\n\n        <div\n          *ngIf=\"(s1Application.internalStatus==undefined || s1Application.internalStatus=='SAVED') &&\n        (s1Application?.formType === 'MULTIPLE' || specialApplicationType.includes(s1Application?.applicationType?.description?.toUpperCase()))\">\n          <br>\n          <div class=\"row fields\">\n            <h4><i class=\"material-icons\">calendar_today</i> &nbsp; Submission Details</h4>\n            <div class=\"row\">\n              <p>\n                Date S1 Form(s) will be submitted:\n                <b>\n                  <span class=\"submission-date\" *ngIf=\"applicationRequest?.status !== 'DISAPPROVED'\">{{\n                    s1Application?.submissionDate | date: 'MMMM d, y' }}</span>\n                  <span class=\"submission-date\" *ngIf=\"applicationRequest?.status === 'DISAPPROVED'\">N/A - Request was\n                    disapproved</span>\n\n                  <input matInput [(ngModel)]=\"s1Application.submissionDate\" formControlName=\"submissionDate\"\n                    name=\"submissionDate\" [hidden]=\"true\">\n                  <input matInput [(ngModel)]=\"s1Application.applicationRequest\" formControlName=\"applicationRequest\"\n                    name=\"applicationRequest\" [hidden]=\"true\">\n                </b>\n              </p>\n              <div class=\"col-md-12\" *ngIf=\"!s1Application.applicationRequest\"\n                [hidden]=\"s1Application?.multipleApplication\">\n                <mat-card class=\"demo-inline-calendar-card\">\n                  <mat-calendar [(selected)]=\"s1Application.submissionDate\" [minDate]=\"todayDate\"\n                    [dateFilter]=\"matCalendarDateFilter\" (click)=\"onChangeDate(s1Application.submissionDate)\">\n                  </mat-calendar>\n                </mat-card>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div\n          *ngIf=\"(s1Application.internalStatus==undefined || s1Application.internalStatus=='SAVED') &&\n           (s1Application?.formType !== 'MULTIPLE' && !s1Application.multipleApplication && !(specialApplicationType.includes(s1Application?.applicationType?.description?.toUpperCase())))\">\n\n          <mat-slide-toggle color=\"warn\" checked (change)=\"scheduleSubmission()\" *ngIf=\"s1Application.autoSubmit==true\">\n            <b>SCHEDULE SUBMISSION</b>\n          </mat-slide-toggle>\n          <mat-slide-toggle color=\"warn\" (change)=\"scheduleSubmission()\" *ngIf=\"s1Application.autoSubmit!=true\">\n            <b>SCHEDULE SUBMISSION</b>\n          </mat-slide-toggle>\n          <div class=\"row\"><br></div>\n\n          <div class=\"row fields\" *ngIf=\"isChecked==true\">\n            <h4><i class=\"material-icons\">schedule_send</i> &nbsp; Submission Details:</h4>\n            <div class=\"row\">\n              <mat-form-field appearance=\"outline\" class=\"col-md-6\">\n                <mat-label>Date</mat-label>\n                <input matInput placeholder=\"Date\" [matDatepicker]=\"dp3\" [min]=\"todayDate\"\n                  (dateChange)=\"onChangeDate($event.value)\" [matDatepickerFilter]=\"disabledWeekEnds\" readonly\n                  [(ngModel)]=\"s1Application.submissionDate\" name=\"submissionDate\" formControlName=\"submissionDate\">\n                <mat-datepicker-toggle matSuffix [for]=\"dp3\"></mat-datepicker-toggle>\n                <mat-datepicker color=\"warn\" #dp3 disabled=\"false\"></mat-datepicker>\n              </mat-form-field>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"row\"><br></div>\n      <hr>\n\n\n      <!-- For screener/Reviewer only -->\n      <div class=\"row\" [formGroup]=\"s1ApplicationForm\"\n      *ngIf=\"isScreener &&\n              (s1Application?.internalStatus === 'S1_APPLICATION_VERIFIED_BY_AD_SPE'||\n              s1Application?.internalStatus === 'COMPLIANCE_DOCUMENT_VERIFIED_BY_AD_SPE'||\n              s1Application?.internalStatus === 'REVISION_VERIFIED_BY_AD_SPE'||\n              s1Application?.internalStatus === 'S1_APPLICATION_SCREENED'||\n              s1Application?.screenerDecisionComment)\n            || isReviewer &&\n              (s1Application.internalStatus === 'S1_APPLICATION_SCREENED'||\n              s1Application?.internalStatus === 'COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER'||\n              s1Application?.internalStatus === 'REVISION_SCREENED'||\n              s1Application?.internalStatus === 'S1_APPLICATION_REVIEWED'||\n              s1Application?.reviewerDecisionComment)\n            || isAdSpecialist && s1Application?.hasOngoingAppeal\n            \">\n        <mat-form-field class=\"col-md-6\" appearance=\"outline\">\n          <mat-label>Decision:</mat-label>\n          <mat-select [(ngModel)]=\"s1Application.decisionStatus\" name=\"decisionStatus\" formControlName=\"decisionStatus\"\n            (click)=\"clearDecisionStatus()\" (selectionChange)=\"buttonValidation($event.value)\">\n            <mat-option value=\"APPROVED\">APPROVED FOR PRODUCTION</mat-option>\n            <mat-option value=\"APPROVED W/ CAUTION\">APPROVED WITH CAUTION</mat-option>\n            <mat-option value=\"INCOMPLETE\">INCOMPLETE</mat-option>\n            <mat-option value=\"DISAPPROVED\">DISAPPROVED</mat-option>\n            <!-- <mat-option value=\"REFER TO PANEL\">REFER TO PANEL</mat-option> -->\n          </mat-select>\n        </mat-form-field>\n      </div>\n\n\n      <!-- For AdSpe only -->\n      <span *ngIf=\"isAdSpecialist && s1Application?.assignedUser?.userRole.name === 'ROLE_SCREENER' &&\n        (s1Application?.internalStatus === 'S1_APPLICATION_VERIFIED_BY_AD_SPE'\n        ||s1Application?.internalStatus === 'COMPLIANCE_DOCUMENT_VERIFIED_BY_AD_SPE'\n        ||s1Application?.internalStatus === 'REVISION_VERIFIED_BY_AD_SPE')\"><b\n          class=\"material-icons\">error_outline</b>&nbsp;\n        <b>Assigned Screener:</b> {{s1Application?.assignedScreener?.firstName}}\n        {{s1Application?.assignedScreener?.lastName}}\n        <br>\n        <br>\n      </span>\n\n      <b *ngIf=\"s1Application.submissionType === 'ORIGINAL' && isAdSpecialist && s1Application?.multipleApplication && s1Application?.multipleApplication?.countVerifiedApplicationForm !== s1Application?.multipleApplication?.actualNumberOfApplicationForm-1\"\n        [hidden]=\"s1Application?.internalStatus === 'S1_APPLICATION_VERIFIED_BY_AD_SPE' || s1Application?.decisionStatus === 'INCOMPLETE'\">\n        <b class=\"material-icons\">error_outline</b> Selection of Screener will be done in the last form of multiple\n        application.\n        <br>\n        <br>\n      </b>\n\n      <b [hidden]=\"s1Application.submissionType === 'ORIGINAL' && s1Application?.multipleApplication && s1Application?.multipleApplication?.countVerifiedApplicationForm !== s1Application?.multipleApplication?.actualNumberOfApplicationForm-1\"\n        *ngIf=\"isAdSpecialist &&\n      (s1Application.internalStatus=='S1_APPLICATION_VERIFIED_BY_ENCODER'||s1Application.internalStatus=='S1_APPLICATION_VERIFIED_BY_AD_SPE'||\n      s1Application.internalStatus=='COMPLIANCE_DOCUMENT_VERIFIED_BY_ENCODER'||s1Application.internalStatus=='COMPLIANCE_DOCUMENT_VERIFIED_BY_AD_SPE'||\n      s1Application.internalStatus=='REVISION_VERIFIED_BY_ENCODER'||s1Application.internalStatus=='REVISION_VERIFIED_BY_AD_SPE')\">\n        <b class=\"material-icons\">error_outline</b> [ x ] are the number of assigned S1 applications to the\n        Screener.\n        <br>\n      </b>\n      \n\n      <mat-form-field class=\"col-md-6\" appearance=\"outline\" [hidden]=\"s1Application.submissionType === 'ORIGINAL' && s1Application?.multipleApplication && s1Application?.decisionStatus !== 'INCOMPLETE' && s1Application?.multipleApplication?.countVerifiedApplicationForm !== s1Application?.multipleApplication?.actualNumberOfApplicationForm-1\n      && s1Application.internalStatus!=='S1_APPLICATION_VERIFIED_BY_AD_SPE'\"\n        *ngIf=\"isAdSpecialist &&\n      (s1Application.internalStatus=='S1_APPLICATION_VERIFIED_BY_ENCODER'||s1Application.internalStatus=='S1_APPLICATION_VERIFIED_BY_AD_SPE'||\n      s1Application.internalStatus=='COMPLIANCE_DOCUMENT_VERIFIED_BY_ENCODER'||s1Application.internalStatus=='COMPLIANCE_DOCUMENT_VERIFIED_BY_AD_SPE'||\n      s1Application.internalStatus=='REVISION_VERIFIED_BY_ENCODER'||s1Application.internalStatus=='REVISION_VERIFIED_BY_AD_SPE')\">\n        <mat-label>ASSIGN A SCREENER</mat-label>\n        <mat-select [(ngModel)]=\"s1Application.assignedScreener\" name=\"assignedScreener\"\n          (selectionChange)=\"buttonValidation($event.value)\" [compareWith]=\"compareAssignedScreener\">\n          <mat-option *ngFor=\"let i of screenerList\" [value]=\"i\">\n            {{i.firstName}} {{i.lastName}} <span style=\"float:right;\">[ {{i.ctr}} ]</span>\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n\n      <!-- For Screener only -->\n      <span\n        *ngIf=\"s1Application.submissionType === 'ORIGINAL' && isScreener && s1Application?.actionStatus === 'ASSIGN_TO_REVIEWER'\"><b\n          class=\"material-icons\">error_outline</b>&nbsp;\n        <b>Assigned Reviewer:</b>\n        {{s1Application?.multipleApplication ? s1Application?.multipleApplication?.assignedReviewer?.firstName :\n        s1Application?.assignedUser?.firstName}}\n        {{s1Application?.multipleApplication ? s1Application?.multipleApplication?.assignedReviewer?.lastName :\n        s1Application?.assignedUser?.lastName}}\n        <br>\n        <br>\n      </span>\n\n\n      <b *ngIf=\"s1Application.submissionType === 'ORIGINAL' && isScreener && s1Application?.multipleApplication && s1Application?.multipleApplication?.countVerifiedApplicationForm !== s1Application?.multipleApplication?.actualNumberOfApplicationForm-1\"\n        [hidden]=\"s1Application?.internalStatus === 'S1_APPLICATION_SCREENED' || s1Application?.screenerDecisionComment || s1Application?.reviewerDecisionComment || s1Application?.decisionStatus === 'INCOMPLETE'\">\n        <b class=\"material-icons\">error_outline</b> Selection of Reviewer will be done in the last form of multiple\n        application.\n        <br>\n        <br>\n      </b>\n\n      <mat-form-field class=\"col-md-6\" appearance=\"outline\" [hidden]=\"!s1Application?.screenerDecisionComment && s1Application.submissionType === 'ORIGINAL' && s1Application?.multipleApplication && s1Application?.multipleApplication?.countVerifiedApplicationForm !== s1Application?.multipleApplication?.actualNumberOfApplicationForm-1\n      && s1Application.internalStatus!=='S1_APPLICATION_SCREENED'\" *ngIf=\"isScreener &&\n        (s1Application?.internalStatus === 'S1_APPLICATION_VERIFIED_BY_AD_SPE' || s1Application?.internalStatus === 'S1_APPLICATION_SCREENED' ||\n        s1Application?.screenerDecisionComment || s1Application?.reviewerDecisionComment)\">\n        <mat-label>ASSIGN A REVIEWER</mat-label>\n        <mat-select name=\"assignedUserR\" [(ngModel)]=\"s1Application.assignedReviewer\"\n          (selectionChange)=\"buttonValidation('')\" [compareWith]=\"compareAssignedReviewer\">\n          <mat-option *ngFor=\"let i of reviewerList\" [value]=\"i\">\n            {{i.firstName}} {{i.lastName}}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n\n      <!-- For screener/Reviewer only -->\n      <div class=\"row\" [formGroup]=\"s1ApplicationForm\" *ngIf=\"isScreener&&\n              (s1Application?.internalStatus === 'S1_APPLICATION_VERIFIED_BY_AD_SPE'||\n              s1Application?.internalStatus === 'COMPLIANCE_DOCUMENT_VERIFIED_BY_AD_SPE'||\n              s1Application?.internalStatus === 'REVISION_VERIFIED_BY_AD_SPE'||\n              s1Application?.internalStatus === 'S1_APPLICATION_SCREENED'||\n              s1Application?.screenerDecisionComment)\n            ||isReviewer&&\n              (s1Application.internalStatus === 'S1_APPLICATION_SCREENED'||\n              s1Application?.internalStatus === 'COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER'||\n              s1Application?.internalStatus === 'REVISION_SCREENED'||\n              s1Application?.internalStatus === 'S1_APPLICATION_REVIEWED'||\n              s1Application?.reviewerDecisionComment)\n            \">\n\n        <div class=\"rational-other-comment\">\n          <div class=\"col-md-6 rationale\" *ngIf=\"rationaleDisplay\"\n            [hidden]=\"rationaleLists?.length === 0 && rationaleOthersList?.length === 0\">\n            <label>RATIONALE</label>\n            <div class=\"rationale-list\" [hidden]=\"rationaleLists?.length === 0\">\n              <label>Rationale List:</label>\n              <div *ngFor=\"let i of rationaleLists\">\n                <p><span class=\"material-icons\">help</span> {{i?.typeOfRationale?.rationale}}</p>\n              </div>\n            </div>\n\n            <div class=\"rational-other-comment\" [hidden]=\"rationaleOthersList?.length === 0\">\n              <label>Other comments:</label>\n              <p *ngFor=\"let i of rationaleOthersList\"><span class=\"material-icons\"\n                  [hidden]=\"i?.others === ''\">help</span> {{i?.others}}</p>\n            </div>\n          </div>\n          <br>\n        </div>\n\n        <mat-form-field class=\"col-md-6\" appearance=\"outline\"\n          [hidden]=\"s1Application.submissionType === 'ORIGINAL' && s1Application?.multipleApplication && s1Application?.multipleApplication?.countVerifiedApplicationForm !== s1Application?.multipleApplication?.actualNumberOfApplicationForm-1\"\n          *ngIf=\"!applicationSingleMedia?.mediumExecution?.typeOfExecution?.applyForToa && applicationSingleMedia?.mediumExecution?.typeOfExecution?.live\">\n          <mat-label>Choose validity date</mat-label>\n          <input matInput placeholder=\"Date\" [matDatepicker]=\"validityDate\" readonly [min]=\"todayDate\"\n            [(ngModel)]=\"s1Application.validUntil\" name=\"expiresOn\" formControlName=\"validityDate\" [readonly]=\"true\">\n          <mat-datepicker-toggle matSuffix [for]=\"validityDate\">\n            <mat-datepicker color=\"warn\" #validityDate></mat-datepicker>\n          </mat-datepicker-toggle>\n        </mat-form-field>\n      </div>\n\n\n      <div class=\"row\">\n        <div class=\"col-md-12\">\n          <!-- ADMIN / SUPERADMIN - RELEASED -->\n          <button mat-raised-button class=\"button-red\" (click)=\"resendDecision()\"\n            *ngIf=\"s1Application?.releaseStatus === 'RELEASED' && (isAdmin || isSuperAdmin)\">\n            <i class=\"material-icons color__white\">send</i> RESEND DECISION\n          </button>\n\n          <!-- ADMIN / SUPERADMIN -->\n          <!-- wala talaga function isa kasi pang mat tool tip lang - start -->\n          <button mat-raised-button class=\"button-red\"\n            *ngIf=\"(isAdmin || isSuperAdmin) && ((!applicationSingleMedia?.sizeLength || +applicationSingleMedia?.sizeLength === +currentSizeLength) && !hasMultimediaLengthChange) && (s1Application?.decisionStatus === 'APPROVED' || s1Application?.decisionStatus === 'APPROVED_WITH_CAUTION') \"\n            matTooltip=\"To enable this button, change the size/length of the application\">\n            <i class=\"material-icons color__white\">assignment_return</i> &nbsp;SUBMIT FOR MODIFICATION\n          </button>\n          <button mat-raised-button class=\"button-red\" (click)=\"resubmitApplication()\"\n            *ngIf=\"(isAdmin || isSuperAdmin) && ((applicationSingleMedia?.sizeLength && +applicationSingleMedia?.sizeLength !== +currentSizeLength) || hasMultimediaLengthChange) && (s1Application?.decisionStatus === 'APPROVED' || s1Application?.decisionStatus === 'APPROVED_WITH_CAUTION') \">\n            <i class=\"material-icons color__white\">assignment_return</i> &nbsp;SUBMIT FOR MODIFICATION\n          </button>\n          <!-- wala talaga function isa kasi pang mat tool tip lang - end -->\n\n          <!-- ADMIN / SUPERADMIN - RELEASED -->\n          <button mat-raised-button class=\"button-red\" (click)=\"submitAppeal()\" *ngIf=\"(isAdmin || isSuperAdmin) &&\n           s1Application?.internalStatus === 'S1_APPLICATION_REVIEWED' && s1Application?.releaseStatus === 'RELEASED' &&\n           !s1Application?.appliedS2 && !s1Application?.hasOngoingCompliance && !s1Application?.hasOngoingRevision && !s1Application?.hasOngoingAppeal\">\n             <i class=\"material-icons color__white\">report_gmailerrorred</i> &nbsp;RETURN TO ADSPE FOR APPEAL\n           </button>\n\n          <!-- APPEAL - ADSPE -->\n          <button mat-raised-button class=\"button-red\" (click)=\"submitAppeal()\"  *ngIf=\"isAdSpecialist && s1Application?.hasOngoingAppeal\">\n            <i class=\"material-icons color__white\">report_gmailerrorred</i> &nbsp;VERIFY APPEAL\n          </button>\n\n          <!-- ADSPE / ADMIN / SUPERADMIN - FOR RELEASE -->\n          <button mat-raised-button class=\"button-red\" (click)=\"returnToScreener()\"\n            *ngIf=\"(isAdSpecialist || isAdmin || isSuperAdmin) &&\n          s1Application?.internalStatus === 'S1_APPLICATION_REVIEWED' && s1Application?.releaseStatus === 'FOR_RELEASE'\">\n            <i class=\"material-icons color__white\">assignment_return</i> &nbsp;RETURN TO SCREENER\n          </button>\n\n          <!-- screenerDecisionComment -->\n          <button mat-raised-button class=\"button-red\" (click)=\"submitDecisionAndComment()\"\n            *ngIf=\"isScreener && s1Application?.screenerDecisionComment\">\n            <i class=\"material-icons color__white\">fact_check</i> SCREENED\n          </button>\n\n          <!-- reviewerDecisionComment -->\n          <button mat-raised-button class=\"button-red\" (click)=\"submitDecisionAndComment()\"\n            *ngIf=\"isReviewer && s1Application?.reviewerDecisionComment\">\n            <i class=\"material-icons color__white\">assignment_turned_in</i> REVIEWED\n          </button>\n\n        </div>\n      </div>\n\n\n      <!-- //////////////////////////////////////// ORIGINAL //////////////////////////////////////////////////////////// -->\n      <div class=\"row\"\n        *ngIf=\"s1Application?.internalStatus==undefined || s1Application?.internalStatus=='SAVED' || s1Application?.status=='APPROVED'\">\n        <div class=\"col-md-12\">\n\n          <!-- <button mat-raised-button color=\"primary\" (click)=\"saveOrUpdateApplication('SAVED')\" -->\n          <button mat-raised-button color=\"primary\" (click)=\"checkAscRateBeforeSaveOrSubmit()\" *ngIf=\"!isEvaluator\"\n            [disabled]=\"s1Application?.formType === 'MULTIPLE' ? isMultipleRegularDisabled() : isSingleRegularDisabled()\">\n            <i class=\"material-icons color__white\">offline_pin</i> SAVE\n          </button>\n          &nbsp;\n          <!-- (click)=\"saveStatus('presentor', 'submit', 'S1_APPLICATION_SUBMITTED')\" -->\n          <button mat-raised-button class=\"button-red\" (click)=\"checkAscRateBeforeSaveOrSubmit('submit')\"\n            [hidden]=\"specialApplicationType.includes(s1Application?.applicationType?.description?.toUpperCase())\" \n            [disabled]=\"s1Application?.formType === 'MULTIPLE' ? isMultipleRegularDisabled() : isSingleRegularDisabled()\"\n          >\n\n            <i class=\"material-icons color__white\">send</i> SUBMIT\n          </button>\n\n          \n          <button \n            *ngIf=\"specialApplicationType.includes(s1Application?.applicationType?.description?.toUpperCase()) \n              && (!applicationRequest?.status \n              && s1Application.applicationRequest==null)\"\n            mat-raised-button class=\"button-red\" \n            (click)=\"requestSpecialS1ApplicationApproval()\"\n            [disabled]=\"!s1Application?.adTitle || !s1Application.submissionDate\"\n          >\n            <i class=\"material-icons color__white\">send</i> REQUEST FOR APPROVAL\n          </button>\n        </div>\n\n        <!-- <div class=\"col-md-12\" *ngIf=\"(s1Application?.formType === 'MULTIPLE' && !s1Application.multipleApplication) \">\n          <button mat-raised-button class=\"button-red\" (click)=\"saveOrUpdateApplication('S1_APPLICATION_SUBMITTED')\"\n            [disabled]=\"!s1Application?.adTitle || !s1Application.submissionDate\">\n            <i class=\"material-icons color__white\">send</i> REQUEST FOR APPROVAL\n          </button>\n        </div> -->\n      </div>\n\n      <div class=\"row\" *ngIf=\"isApplicant&&s1Application?.internalStatus=='S1_APPLICATION_SUBMITTED'\">\n        <div class=\"col-md-12\">\n          <button mat-raised-button class=\"button-red\"\n            (click)=\"saveStatus('presentor','cancel', 'S1_APPLICATION_CANCELLED')\">\n            <i class=\"material-icons color__white\">cancel</i> CANCEL APPLICATION\n          </button>\n        </div>\n      </div>\n\n      <div class=\"row\" *ngIf=\"isEvaluator&&s1Application.internalStatus=='S1_APPLICATION_SUBMITTED'\">\n        <b class=\"warning-msg\"\n          *ngIf=\"s1Application?.company?.status === 'FOR_APPROVAL' || s1Application?.brand?.status === 'FOR_APPROVAL' || s1Application?.product?.status === 'FOR_APPROVAL' \">\n          <b class=\"material-icons\">error_outline</b> New Company / Brand / Product must be approved first before you\n          can forward the application.\n        </b>\n        <div class=\"col-md-12\">\n          <button mat-raised-button class=\"button-red\"\n            [disabled]=\"s1Application?.company?.status === 'FOR_APPROVAL' || s1Application?.brand?.status === 'FOR_APPROVAL' || s1Application?.product?.status === 'FOR_APPROVAL' \"\n            (click)=\"saveStatus('encoder','verify','S1_APPLICATION_VERIFIED_BY_ENCODER')\">\n            <i class=\"material-icons color__white\">verified</i> FORWARD TO AD SPECIALIST\n          </button>\n          &nbsp;\n          <button mat-raised-button class=\"button-red\" (click)=\"rejectDisapprovedModal()\">\n            <!-- (click)=\"rejectDisapprovedModal('encoder', 'reject', 'S1_APPLICATION_REJECTED')\" -->\n            <i class=\"material-icons color__white\">unpublished</i> REJECT\n          </button>\n        </div>\n      </div>\n\n      <!-- MULTIPLE -->\n      <div class=\"row\"\n        *ngIf=\"s1Application.submissionType === 'ORIGINAL' && s1Application?.formType==='MULTIPLE' && s1Application?.decisionStatus !== 'INCOMPLETE'\">\n        <div class=\"col-md-12\">\n          <button mat-raised-button class=\"button-red\"\n            *ngIf=\"isAdSpecialist&&s1Application?.actionStatus==='ASSIGN_TO_ADSPE'\"\n            (click)=\"saveStatus('ad-specialist','verify','S1_APPLICATION_VERIFIED_BY_AD_SPE')\">\n            <i class=\"material-icons color__white\">verified</i> FORWARD TO SCREENER\n          </button>\n        </div>\n      </div>\n\n\n      <div class=\"row\"\n        *ngIf=\"isAdSpecialist&&\n        (s1Application?.internalStatus=='S1_APPLICATION_VERIFIED_BY_ENCODER'||s1Application?.internalStatus=='S1_APPLICATION_VERIFIED_BY_AD_SPE')\">\n        <div class=\"col-md-12\">\n\n          <!-- NOT MULTIPLE -->\n          <button mat-raised-button class=\"button-red\"\n            *ngIf=\"isAdSpecialist&&s1Application?.actionStatus==='ASSIGN_TO_ADSPE'\"\n            (click)=\"saveStatus('ad-specialist','verify','S1_APPLICATION_VERIFIED_BY_AD_SPE')\"\n            [disabled]=\"buttonDisabled\" [hidden]=\"s1Application?.formType==='MULTIPLE'\">\n            <i class=\"material-icons color__white\">verified</i> FORWARD TO SCREENER\n          </button>\n\n          <button mat-raised-button class=\"button-red\" *ngIf=\"isAdSpecialist&&\n            (s1Application?.actionStatus==='ASSIGN_TO_SCREENER'||s1Application?.actionStatus==='ASSIGN_TO_HOLD')&&\n            s1Application?.internalStatus === 'S1_APPLICATION_VERIFIED_BY_AD_SPE'\" (click)=\"reassign()\"\n            [disabled]=\"buttonDisabled\">\n            <i class=\"material-icons color__white\">verified</i> RE-ASSIGN SCREENER\n          </button>\n          &nbsp;\n          <!-- <button mat-raised-button class=\"button-red\"\n            (click)=\"rejectDisapprovedModal('encoder', 'reject', 'S1_APPLICATION_REJECTED')\">\n            (click)=\"saveStatus('ad-specialist','reject','S1_APPLICATION_REJECTED')\">\n            <i class=\"material-icons color__white\">unpublished</i> REJECT\n          </button> -->\n        </div>\n      </div>\n\n      <!-- AD SPECIALIST ONLY-->\n      <div class=\"row mt-4\">\n        <mat-form-field class=\"col-md-6\" appearance=\"outline\" [hidden]=\"s1Application.submissionType === 'ORIGINAL' && s1Application?.multipleApplication && s1Application?.decisionStatus !== 'INCOMPLETE' && s1Application?.multipleApplication?.countVerifiedApplicationForm !== s1Application?.multipleApplication?.actualNumberOfApplicationForm-1\n        && s1Application.internalStatus!=='S1_APPLICATION_VERIFIED_BY_AD_SPE'\"\n          *ngIf=\"isAdSpecialist &&\n        (s1Application.internalStatus=='S1_APPLICATION_VERIFIED_BY_ENCODER'||s1Application.internalStatus=='S1_APPLICATION_VERIFIED_BY_AD_SPE'||\n        s1Application.internalStatus=='COMPLIANCE_DOCUMENT_VERIFIED_BY_ENCODER'||s1Application.internalStatus=='COMPLIANCE_DOCUMENT_VERIFIED_BY_AD_SPE'||\n        s1Application.internalStatus=='REVISION_VERIFIED_BY_ENCODER'||s1Application.internalStatus=='REVISION_VERIFIED_BY_AD_SPE')\">\n          <mat-label>REASSIGN AD SPECIALIST</mat-label>\n          <mat-select [(ngModel)]=\"s1Application.assignedAdSpecialist\" name=\"assignedAdSpecialist\"\n            (selectionChange)=\"buttonValidation($event.value)\" [compareWith]=\"compareAssignedAdSpec\">\n            <mat-option *ngFor=\"let i of adSpecialistList\" [value]=\"i\">\n              {{i.firstName}} {{i.lastName}} <span style=\"float:right;\">[ {{i.ctr}} ]</span>\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n\n        <div class=\"col-md-12\">\n          <button mat-raised-button class=\"button-red\" *ngIf=\"isAdSpecialist\" (click)=\"reassignAdSpecialist()\" \n          [disabled]=\"buttonDisabled\" [hidden]=\"s1Application?.formType==='MULTIPLE'\" >\n            <i class=\"material-icons color__white\">verified</i> RE-ASSIGN AD SPECIALIST\n          </button>\n        </div>\n      </div>\n\n      <!-- MULTIPLE -->\n      <div class=\"row\"\n        *ngIf=\"s1Application.submissionType === 'ORIGINAL' && s1Application?.formType==='MULTIPLE' && s1Application?.internalStatus === 'S1_APPLICATION_VERIFIED_BY_AD_SPE'\">\n        <div class=\"col-md-12\">\n          <button mat-raised-button class=\"button-red\"\n            *ngIf=\"isScreener&&s1Application?.actionStatus==='ASSIGN_TO_SCREENER'\"\n            (click)=\"saveStatus('screener','verify','S1_APPLICATION_SCREENED')\"\n            [disabled]=\"!s1Application.decisionStatus\">\n            <i class=\"material-icons color__white\">fact_check</i> SCREENED\n          </button>\n        </div>\n      </div>\n\n      <div class=\"row\"\n        *ngIf=\"isScreener&&\n        (s1Application.internalStatus=='S1_APPLICATION_VERIFIED_BY_AD_SPE'||s1Application.internalStatus=='S1_APPLICATION_SCREENED')\">\n        <div class=\"col-md-12\">\n          <button mat-raised-button class=\"button-red\"\n            *ngIf=\"isScreener&&s1Application?.actionStatus==='ASSIGN_TO_SCREENER'\"\n            (click)=\"saveStatus('screener','verify','S1_APPLICATION_SCREENED')\"\n            [disabled]=\"buttonDisabled || !s1Application.decisionStatus\"\n            [hidden]=\"s1Application?.formType==='MULTIPLE'\">\n            <i class=\"material-icons color__white\">fact_check</i> SCREENED\n          </button>\n          <button mat-raised-button class=\"button-red\"\n            *ngIf=\"isScreener&&s1Application?.actionStatus==='ASSIGN_TO_REVIEWER'\" (click)=\"reassign()\"\n            [disabled]=\"buttonDisabled\">\n            <i class=\"material-icons color__white\">fact_check</i> RE-ASSIGN REVIEWER\n          </button>\n          <button mat-raised-button class=\"button-red\" (click)=\"returnTo('ADSPE','S1_APPLICATION_VERIFIED_BY_ENCODER')\"\n            [disabled]=\"\" [hidden]=\"s1Application?.formType === 'MULTIPLE'\">\n            <i class=\"material-icons color__white\">assignment_return</i> &nbsp;RETURN TO AD SPECIALIST\n          </button>\n        </div>\n      </div>\n\n      <div class=\"row\" *ngIf=\"!s1Application?.reviewerDecisionComment && isReviewer && (s1Application?.internalStatus=='S1_APPLICATION_SCREENED'||\n        s1Application?.internalStatus === 'S1_APPLICATION_REVIEWED' ||\n        s1Application?.internalStatus === 'COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER')\">\n        <div class=\"col-md-12\">\n          <button mat-raised-button class=\"button-red\" [disabled]=\"!s1Application.decisionStatus\"\n            (click)=\"saveStatus('reviewer','verify', 'S1_APPLICATION_REVIEWED')\">\n            <i class=\"material-icons color__white\">assignment_turned_in</i> REVIEWED\n          </button>\n          <button mat-raised-button class=\"button-red\"\n            (click)=\"returnTo('SCREENER', 'S1_APPLICATION_VERIFIED_BY_AD_SPE')\" [disabled]=\"\"\n            [hidden]=\"s1Application?.formType === 'MULTIPLE'\">\n            <i class=\"material-icons color__white\">assignment_return</i> &nbsp;RETURN TO SCREENER\n          </button>\n        </div>\n      </div>\n\n\n      <!-- //////////////////////////////////////// FOR COMPLIANCE //////////////////////////////////////////////////////////// -->\n      <div class=\"row\"\n        *ngIf=\"(isApplicant && !s1Application?.hasOngoingRevision && !s1Application?.hasOngoingCompliance && s1Application?.decisionStatus=='INCOMPLETE'\n        && (s1Application?.internalStatus=='S1_APPLICATION_REVIEWED' || s1Application?.internalStatus=='COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER' || s1Application?.internalStatus=='REVISION_SCREENED' || s1Application?.internalStatus=='S1_APPLICATION_REJECTED'))\">\n        <b><b class=\"material-icons info-msg\">error_outline</b> Applicant can submit updated or additional supporting\n          documents for S1 Forms with Incomplete Decision.</b>\n        <div class=\"col-md-12\">\n          <br>\n          <button mat-raised-button class=\"button-red\"\n            (click)=\"saveStatusForCompliance('presentor','submit', 'SUBMITTED_DOCUMENT_FOR_COMPLIANCE')\">\n            <i class=\"material-icons color__white\">task_alt</i> SUBMIT FOR COMPLIANCE\n          </button>\n        </div>\n      </div>\n\n      <div class=\"row\" *ngIf=\"isEvaluator&&s1Application.internalStatus=='SUBMITTED_DOCUMENT_FOR_COMPLIANCE'\">\n        <div class=\"col-md-12\">\n          <button mat-raised-button class=\"button-red\"\n            [disabled]=\"s1Application?.company?.status === 'FOR_APPROVAL' || s1Application?.brand?.status === 'FOR_APPROVAL' || s1Application?.product?.status === 'FOR_APPROVAL'  \"\n            (click)=\"saveStatusForCompliance('encoder','verify','COMPLIANCE_DOCUMENT_VERIFIED_BY_ENCODER')\">\n            <i class=\"material-icons color__white\">verified</i> FORWARD TO AD SPECIALIST\n          </button>\n          &nbsp;\n          <button mat-raised-button class=\"button-red\" (click)=\"rejectDisapprovedModal()\">\n            <!-- (click)=\"rejectDisapprovedModal('encoder','reject','S1_APPLICATION_REJECTED')\" -->\n            <i class=\"material-icons color__white\">unpublished</i> REJECT\n          </button>\n        </div>\n      </div>\n\n      <div class=\"row\"\n        *ngIf=\"isAdSpecialist&&\n        (s1Application?.internalStatus=='COMPLIANCE_DOCUMENT_VERIFIED_BY_ENCODER'||s1Application?.internalStatus=='COMPLIANCE_DOCUMENT_VERIFIED_BY_AD_SPE')\">\n        <div class=\"col-md-12\">\n          <button mat-raised-button class=\"button-red\"\n            (click)=\"saveStatusForCompliance('ad-specialist','verify','COMPLIANCE_DOCUMENT_VERIFIED_BY_AD_SPE')\">\n            <i class=\"material-icons color__white\">verified</i> FORWARD TO SCREENER\n          </button>\n        </div>\n      </div>\n\n      <div class=\"row\" *ngIf=\"isScreener&&s1Application?.internalStatus=='COMPLIANCE_DOCUMENT_VERIFIED_BY_AD_SPE'\">\n        <div class=\"col-md-12\">\n          <button mat-raised-button class=\"button-red\"\n            (click)=\"saveStatusForCompliance('screener','verify','COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER')\">\n            <i class=\"material-icons color__white\">fact_check</i> SCREENED\n          </button>\n          <button mat-raised-button class=\"button-red\"\n            (click)=\"returnTo('ADSPE','COMPLIANCE_DOCUMENT_VERIFIED_BY_ENCODER')\" [disabled]=\"\">\n            <i class=\"material-icons color__white\">assignment_return</i> &nbsp;RETURN TO AD SPECIALIST\n          </button>\n        </div>\n      </div>\n\n\n      <!-- //////////////////////////////////////// REVISION //////////////////////////////////////////////////////////// -->\n      <div class=\"row\"\n        *ngIf=\"(s1Application?.revisionNo !== 2 && s1Application?.submissionType === 'ORIGINAL'\n                && !s1Application?.hasOngoingRevision && !s1Application?.hasOngoingCompliance && !s1Application?.appliedS2\n                && isApplicant\n                && (s1Application?.internalStatus === 'S1_APPLICATION_REVIEWED' || s1Application?.internalStatus=='COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER')\n                && (s1Application?.decisionStatus=='APPROVED' || s1Application?.decisionStatus=='APPROVED W/ CAUTION'))\">\n        <b>\n          <br>\n          <b class=\"material-icons info-msg\">error_outline</b> Applicant can submit Approved S1 Form for Revision\n          Request with revision letter, new main document, and new\n          supporting document (if needed).\n        </b>\n        <div class=\"col-md-12\">\n          <br>\n          <button mat-raised-button class=\"button-red\"\n            (click)=\"saveStatusRevision('presentor','submit', 'SUBMITTED_REVISION')\"\n            [disabled]=\"!s1Application?.revisionLetterAttachmentReference && !attachmentDocuments[2]?.revisionLetterAttachmentReference\">\n            <i class=\"material-icons color__white\">task_alt</i> SUBMIT REVISION\n          </button>\n        </div>\n      </div>\n\n      <div class=\"row\" *ngIf=\"isEvaluator&&s1Application.internalStatus=='SUBMITTED_REVISION'\">\n        <div class=\"col-md-12\">\n          <button mat-raised-button class=\"button-red\"\n            [disabled]=\"s1Application?.company?.status === 'FOR_APPROVAL' || s1Application?.brand?.status === 'FOR_APPROVAL' || s1Application?.product?.status === 'FOR_APPROVAL' \"\n            (click)=\"saveStatusRevision('encoder','verify','REVISION_VERIFIED_BY_ENCODER')\">\n            <i class=\"material-icons color__white\">verified</i> FORWARD TO AD SPECIALIST\n          </button>\n          &nbsp;\n          <button mat-raised-button class=\"button-red\" (click)=\"rejectDisapprovedModal()\">\n            <!-- (click)=\"rejectDisapprovedModal('encoder','reject','S1_APPLICATION_REJECTED')\" -->\n            <i class=\"material-icons color__white\">unpublished</i> REJECT\n          </button>\n        </div>\n      </div>\n\n\n      <div class=\"row\"\n        *ngIf=\"isAdSpecialist&&\n        (s1Application.internalStatus=='REVISION_VERIFIED_BY_ENCODER'||s1Application?.internalStatus=='REVISION_VERIFIED_BY_AD_SPE')\">\n        <div class=\"col-md-12\">\n          <button mat-raised-button class=\"button-red\"\n            (click)=\"saveStatusRevision('ad-specialist','verify','REVISION_VERIFIED_BY_AD_SPE')\">\n            <i class=\"material-icons color__white\">verified</i> FORWARD TO SCREENER\n          </button>\n          <!--  &nbsp;\n          <button mat-raised-button class=\"button-red\"\n            (click)=\"saveStatus('ad-specialist','reject','S1_APPLICATION_REJECTED')\">\n            <i class=\"material-icons color__white\">unpublished</i> REJECT\n          </button> -->\n        </div>\n      </div>\n\n      <div class=\"row\" *ngIf=\"isScreener&&s1Application.internalStatus=='REVISION_VERIFIED_BY_AD_SPE'\">\n        <div class=\"col-md-12\">\n          <button mat-raised-button class=\"button-red\"\n            (click)=\"saveStatusRevision('screener','verify','REVISION_SCREENED')\">\n            <i class=\"material-icons color__white\">fact_check</i> SCREENED\n          </button>\n        </div>\n      </div>\n\n    </div>\n  </div>\n</form>\n<!-- </form> -->\n","import { Component, Inject, OnInit, Optional } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { Company, S1Application } from '@models';\nimport { ApiService, DataStorageService, SweetAlertService } from '@services';\nimport { ENDPOINTS, ROLES } from '@shared';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-update-special-application',\n  templateUrl: './update-special-application.component.html',\n  styleUrls: ['./update-special-application.component.scss']\n})\nexport class UpdateSpecialApplicationComponent implements OnInit {\n\n  company = new Company();\n  s1Application = new S1Application();\n\n  currentUser: any;\n  currentUserRole: any;\n\n  isAscUser = false;\n  isDisableFieldOnUpdate = true;\n\n  formType = 'INDIVIDUAL';\n\n  ascUserRoleList = [...ROLES.filter((role: any) => role.ascUser === true).map((role: any) => role.role)];\n\n  constructor(\n    private apiService: ApiService,\n    private dataStorage: DataStorageService,\n    private sweetAlertService: SweetAlertService,\n    private router: Router,\n    @Optional() public dialogRef: MatDialogRef<UpdateSpecialApplicationComponent>,\n    @Optional() @Inject(MAT_DIALOG_DATA) public data: any,\n  ) {\n    if (data) {\n      this.s1Application = data;\n      this.s1Application.submissionDate = data.submissionDate;\n      this.s1Application.formType = this.formType;\n\n\n      // Client Info\n      // this.s1Application.company = this.multipleS1Application.company;\n      // this.company = this.multipleS1Application.company;\n      // this.s1Application.membersAffiliation = this.multipleS1Application.membersAffiliation;\n      // this.s1Application.brand = this.multipleS1Application.brand;\n    }\n\n\n\n\n  }\n\n  ngOnInit(): void {\n    this.currentUser = this.dataStorage.getUserAccount();\n    this.currentUserRole = this.currentUser.userRole.name;\n    this.isAscUser = this.ascUserRoleList.includes(this.dataStorage.getUserRole());\n  }\n\n  onApproveOrDisapprove(status = 'APPROVED'): void {\n    const displayStatus = status === 'APPROVED' ? 'approve' : 'disapprove';\n    Swal.fire({\n      text: `Are you sure you want to ${displayStatus} this application?`,\n      icon: 'question',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Confirm'\n    }).then((result) => {\n      if (result.value) {\n        const endpointExtension = status === 'APPROVED' ? '/approve' : '/disapprove';\n        // this.s1Application.actionDate = new Date();\n        this.s1Application.actionBy = this.currentUser.username;\n        this.apiService.save(`${ENDPOINTS.applicationRequests}${endpointExtension}/${this.s1Application.id}`, this.s1Application).subscribe(\n          (res: any) => {\n            this.sweetAlertService.customSuccessMessage(`Application successfully ${status.toLowerCase()}.`);\n          this.router.navigate(['asc/page/application/s1/special']);\n          }, (err: any) => {\n            console.log(err);\n          }, () => {\n            this.dialogRef.close(this.s1Application);\n          }\n        );\n      }\n    });\n  }\n\n  updateSpecialApplication(): void {\n    // TO DO\n    // will only redirect to add new S1 application\n    // saving or updating is in add-s1-application.component.ts\n    this.dialogRef.close();\n    this.router.navigate(['asc/page/application/s1/add']);\n  }\n\n}\n","<form>\n  <div class=\"container-fluid\">\n    <div class=\"row title\">\n      <div class=\"col-md-12\">\n        <table>\n          <tr>\n            <td *ngIf=\"(s1Application?.status!=undefined&&!isAscUser)||isAscUser\">\n              <span>\n                Status:\n              </span>\n            </td>\n            <td *ngIf=\"(s1Application?.status !== undefined && !isAscUser) || isAscUser\">\n              <span *ngIf=\"s1Application?.status !== undefined && !isAscUser\">\n                <b>{{s1Application?.status?.replaceAll('_',' ') | uppercase}}</b>\n              </span>\n              <span *ngIf=\"isAscUser\">\n                <b>{{s1Application?.status?.replaceAll('_',' ') | uppercase}}</b>\n              </span>\n            </td>\n            <td class=\"no-border\">\n              <button\n                class=\"button-right button-red\"\n                mat-raised-button\n                (click)=\"dialogRef.close()\"\n              >\n                <i class=\"material-icons color__white\">list</i> VIEW APPLICATIONS\n              </button>\n            </td>\n          </tr>\n          <tr>\n            <td class=\"no-border\"></td>\n          </tr>\n        </table>\n\n        <hr />\n      </div>\n    </div>\n\n    <div class=\"row\"><br /></div>\n    <div class=\"row\">\n      <mat-form-field class=\"col-md-6\" appearance=\"outline\">\n        <mat-label>Form Type</mat-label>\n        <input matInput [value]=\"formType\" readonly />\n      </mat-form-field>\n\n      <mat-form-field class=\"col-md-6\" appearance=\"outline\">\n        <mat-label>Application Type</mat-label>\n        <input matInput [value]=\"s1Application?.applicationType?.description\" readonly/>\n      </mat-form-field>\n    </div>\n\n    <div class=\"row\">\n      <mat-accordion class=\"headers-align\" multi>\n        <mat-expansion-panel\n          [expanded]=\"\n            (currentUser?.userRole?.name == 'ROLE_APPLICANT' &&\n              s1Application?.internalStatus != 'SAVED') ||\n            s1Application?.internalStatus == undefined\n              ? true\n              : false\n          \"\n          *ngIf=\"\n            (currentUser?.userRole?.name == 'ROLE_APPLICANT' &&\n              s1Application?.internalStatus == 'SAVED') ||\n            currentUser?.userRole?.name != 'ROLE_APPLICANT' ||\n            s1Application?.internalStatus == undefined\n          \"\n        >\n          <mat-expansion-panel-header>\n            <mat-panel-title>\n              <i class=\"material-icons\">label_important</i> &nbsp;Initial\n              Information\n            </mat-panel-title>\n          </mat-expansion-panel-header>\n          <br />\n\n          <app-client-information\n            [s1Application]=\"s1Application\"\n            [isAscUser]=\"isAscUser\"\n            [isDisableFieldOnUpdate]=\"isDisableFieldOnUpdate\"\n            [company]=\"company\"\n          ></app-client-information>\n\n\n          <div class=\"row\">\n            <mat-form-field class=\"col-md-6\" appearance=\"outline\">\n              <mat-label>Ad Title</mat-label>\n              <input matInput [value]=\"s1Application?.adTitle\" readonly />\n            </mat-form-field>\n\n            <mat-form-field class=\"col-md-6\" appearance=\"outline\">\n              <mat-label>Tag Line</mat-label>\n              <input matInput [value]=\"s1Application?.tagLine\" readonly />\n            </mat-form-field>\n\n            <mat-form-field appearance=\"outline\" class=\"col-md-6\">\n              <mat-label>Date of Submission</mat-label>\n              <input matInput placeholder=\"Date\" readonly\n                [value]=\"s1Application?.submissionDate | date: 'MMMM d, y'\"\n                name=\"submissionDate\" *ngIf=\"s1Application?.status !== 'DISAPPROVED'\"/>\n                <input matInput placeholder=\"Date\" readonly\n                  value=\"N/A - Request was disapproved\"\n                  name=\"submissionDate\" *ngIf=\"s1Application?.status === 'DISAPPROVED'\"/>\n            </mat-form-field>\n          </div>\n        </mat-expansion-panel>\n\n        <!-- FOR Admin Users only -->\n        <mat-expansion-panel *ngIf=\"currentUser?.userRole?.name === 'ROLE_ADMIN' || currentUser?.userRole?.name === 'ROLE_SUPER_ADMIN' \">\n          <mat-expansion-panel-header>\n            <mat-panel-title>\n              <i class=\"material-icons\">label_important</i> &nbsp;Presentor Information\n            </mat-panel-title>\n            <mat-panel-description>\n              Personal Details\n              <i class=\"material-icons\">person</i>\n            </mat-panel-description>\n          </mat-expansion-panel-header>\n\n          <br>\n          <div class=\"row\">\n            <div class=\"row\">\n              <!-- <mat-form-field class=\"col-md-4\" appearance=\"outline\">\n                <mat-label>Membership Affiliation</mat-label>\n                <input matInput [value]=\"s1Application?.company?.membersAffiliation?.description\" readonly>\n              </mat-form-field> -->\n              <mat-form-field class=\"col-md-7\" appearance=\"outline\">\n                <mat-label>Company Name</mat-label>\n                <input matInput [value]=\"s1Application?.company?.companyName\" readonly>\n              </mat-form-field>\n            </div>\n\n            <div class=\"row\"><br></div>\n\n            <div class=\"row\">\n              <mat-form-field class=\"col-md-11\" appearance=\"outline\">\n                <mat-label>Address</mat-label>\n                <input matInput [value]=\"s1Application?.company?.completeAddress\" readonly>\n              </mat-form-field>\n            </div>\n\n            <div class=\"row\"><br></div>\n\n            <div class=\"row\">\n              <mat-form-field class=\"col-md-8\" appearance=\"outline\" *ngIf=\"s1Application.id!= null\">\n                <mat-label>Name of Applicant</mat-label>\n                <input matInput [value]=\"s1Application?.applicationOwner?.firstName+' '+s1Application?.applicationOwner?.lastName\" readonly>\n              </mat-form-field>\n\n              <!-- <mat-form-field class=\"col-md-8\" appearance=\"outline\" *ngIf=\"currentUser?.userRole?.name =='ROLE_ENCODER' && s1Application.id!= null\">\n                <mat-label>Name of Applicant</mat-label>\n                <input matInput [value]=\"s1Application?.firstName+' '+s1Application?.lastName\" readonly>\n              </mat-form-field> -->\n\n            </div>\n\n            <div class=\"row\"><br></div>\n\n            <div class=\"row\">\n              <mat-form-field class=\"col-md-4\" appearance=\"outline\" *ngIf=\"s1Application.id!= null\">\n                <mat-label>Mobile Number</mat-label>\n                <input matInput [value]=\"s1Application?.applicationOwner?.mobileNumber\" readonly>\n              </mat-form-field>\n              <mat-form-field class=\"col-md-3\" appearance=\"outline\" *ngIf=\"s1Application.id!= null\">\n                <mat-label>Telephone Number</mat-label>\n                <input matInput [value]=\"s1Application?.company?.companyTelephoneNo\" readonly>\n              </mat-form-field>\n              <mat-form-field class=\"col-md-4\" appearance=\"outline\" *ngIf=\"s1Application.id!= null\">\n                <mat-label>Email Address</mat-label>\n                <input matInput [value]=\"s1Application?.applicationOwner?.username\" readonly>\n              </mat-form-field>\n            </div>\n\n          </div>\n        </mat-expansion-panel>\n      </mat-accordion>\n\n      <div class=\"row\"><br /></div>\n      <hr />\n\n      <br />\n      <!-- //////////////////////////////////////// ACTION BUTTONS //////////////////////////////////////////////////////////// -->\n      <div\n        class=\"row\"\n        *ngIf=\"s1Application?.status === 'FOR_APPROVAL' && isAscUser\"\n      >\n        <div mat-dialog-actions>\n          <div class=\"dialog-button-content\" align=\"end\">\n            <button class=\"confirm\" (click)=\"onApproveOrDisapprove()\">\n              <i class=\"material-icons color__white\">thumb_up_alt</i> Approve\n            </button>\n            <button class=\"warn\" (click)=\"onApproveOrDisapprove('DISAPPROVED')\">\n              <i class=\"material-icons color__white\">thumb_down_alt</i> Disapprove\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","\n// import { WebSocketService } from './../../../../../core/services/socket/websocket.service';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { BadgeCounnter } from './../../../../../core/models/counter';\nimport { Component, Inject, OnInit, ViewChild, OnDestroy } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTable, MatTableDataSource } from '@angular/material/table';\nimport { S1Application, S2Application } from '@models';\nimport { PAYMENT_STATUS, ENDPOINTS, APPLICATION_STATUS, FORM_STATUS, SUBMISSION_TYPE, USER_ROLES, TYPE_OF_MEDIUM, ACTION_STATUS } from '@shared';\nimport { ApiService, DataStorageService, SweetAlertService } from '@services';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport Swal from 'sweetalert2';\nimport { S1FormTypeComponent } from 'app/modules/fragments/s1-form-type/s1-form-type.component';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { MultipleApplication } from 'app/core/models/multiple-application.model';\nimport { UpdateMultipleApplicationComponent }\n  from 'app/modules/fragments/update-multiple-application/update-multiple-application.component';\nimport { UpdateSpecialApplicationComponent } from 'app/modules/fragments/update-special-application/update-special-application.component';\nimport { ApplicationRequest } from 'app/core/models/application-request.model';\nimport { RequestForSpecialClearingComponent } from 'app/modules/fragments/request-for-special-clearing/request-for-special-clearing.component';\nimport { TypeOfExecution } from 'app/core/models/type-of-execution.model';\nimport { CommonServices } from 'app/core/services/common-services.service';\n\nimport { Subscription, timer, merge } from 'rxjs';\nimport { mergeMap } from 'rxjs/operators';\nimport { WebSocketService } from 'app/core/services/socket/websocket.service';\n\n\n@Component({\n  selector: 'app-list-s1-application',\n  templateUrl: './list-s1-application.component.html',\n  styleUrls: ['./list-s1-application.component.scss']\n})\nexport class ListS1ApplicationComponent implements OnInit, OnDestroy {\n  @ViewChild(MatPaginator, { static: false }) paginatorFalse: MatPaginator;\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  pageSize = 10;\n  pageNo = 0;\n  pageSizeOptions: number[] = [10, 20, 50];\n  @ViewChild(MatSort, { static: false }) sort: MatSort;\n  @ViewChild(MatTable, { static: false }) table: MatTable<S1Application>;\n\n  // individual s1 application list\n  dataSource: MatTableDataSource<S1Application>;\n  displayedColumns = [];\n  totalItems = 0;\n  totalPages = 0;\n  currentPage = 1; // reuse\n  // currentSize = 100;\n\n  badgeCounter: BadgeCounnter = new BadgeCounnter();\n\n  returnedApps = [];\n  click = 0;\n  timeLeft: number = 60;\n  interval: any;\n  refreshButtonEnabled = true;\n  timerDisplay: any;\n  isTimerValueDisplay = false;\n  // , 'ascStatus', 'awaitingActionFrom'];\n\n  // multiple s1 application list variables\n  multipleApplicationList = [];\n  multipleApplicationDataSource: MatTableDataSource<MultipleApplication>;\n  multipleApplicationDisplayedColumns = ['adTitle', 'typeOfApplication', 'companyName', 'brand', 'product', 'status'];\n  multipleTotalItems = 0;\n\n  // end multiple application list variables\n\n  // special s1 application list variables\n  specialApplicationList = [];\n  specialApplicationDataSource: MatTableDataSource<S1Application>;\n  specialApplicationDisplayedColumns = ['adTitle', 'typeOfApplication', 'companyName', 'brand', 'status'];\n  specialTotalItems = 0;\n  // end special application list variables\n\n  // assigned s1 application list variables\n  assignedApplicationList = [];\n  assignedApplicationDataSource: MatTableDataSource<S1Application>;\n  assignedApplicationDisplayedColumns = ['referenceCode', 'adTitle', 'typeOfApplication', 'companyName', 'brand', 'product', 'status', 'internalStatus', 'icon'];  // end assigned application list variables\n\n  forReleaseApplicationsList = [];\n  forReleaseTotalItems = 0;\n  forReleaseApplicationDataSource: MatTableDataSource<S1Application>;\n  forReleaseApplicationDisplayedColumns = ['referenceCode', 'typeOfApplication', 'companyName', 'brand', 'product', 'typeOfMedium', 'status', 'internalStatus', 'decisionStatus']\n  applicationList = [];\n  currentUser: any;\n  viewApplicationType: string;\n  applicationTypeTitle: string;\n  submissionType = SUBMISSION_TYPE.ORIGINAL;\n  originalTabDataCount = 0;\n  revisionTabDataCount = 0;\n  complianceTabDataCount = 0;\n  decisionCommentTabDataCount = 0;\n  releasedAppealTabDataCount = 0;\n\n  isSuperAdmin = false;\n  isAdmin = false;\n  isAccounting = false;\n  isApplicant = false;\n  isScreener = false;\n  isReviewer = false;\n  isAdSpecialist = false;\n  isEvaluator = false;\n\n  s1Application = new S1Application();\n  s2Application = new S2Application();\n  multipleS1Application = new MultipleApplication();\n  applicationRequest = new ApplicationRequest();\n  s1ApplicationTitle = 'S1 APPLICATION';\n  displayedContent = 'ORIGINAL';\n  paymentStatus = PAYMENT_STATUS;\n\n  counterObservable: Subscription;\n\n  constructor(\n    private apiService: ApiService,\n    private dataStorage: DataStorageService,\n    private router: Router,\n    private sweetAlertService: SweetAlertService,\n    private dialog: MatDialog,\n    private spinner: NgxSpinnerService,\n    private route: ActivatedRoute,\n    private commonService: CommonServices,\n    private webSocketService: WebSocketService\n  ) { }\n  ngOnDestroy(): void {\n    // if(this.counterObservable){\n      // this.counterObservable.unsubscribe();\n    // }\n  }\n  ngOnInit(): void {\n    this.webSocketService.listen(\"broadcast\").subscribe( res =>{\n      console.log('test')\n      this.apiService.findAll(ENDPOINTS.badgeCountByAscUser + this.currentUser.id).subscribe(\n        (res: any) => {\n          this.badgeCounter = res;\n          console.log(this.badgeCounter);\n         }\n      )\n    })\n    // this.counterObservable = merge(timer(0, 5000))\n    // .pipe(mergeMap(_ => this.apiService.findAll(ENDPOINTS.badgeCountByAscUser + this.currentUser.id)))\n    // .subscribe(\n    //   (res: BadgeCounnter) => {\n    //     this.badgeCounter = res;\n    //   },\n    //   (err: HttpErrorResponse) => {\n    //     console.log('Error:', err);\n    //   }\n    // );\n    this.currentUser = this.dataStorage.getUserAccount();\n    this.viewApplicationType = this.route.parent.snapshot.url[0].path;\n    if (this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT) {\n      this.displayedColumns = ['referenceCode', 'typeOfApplication', 'companyName', 'brand', 'typeOfMedium', 'status', 'paymentStatus', 'icon'];\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_SCREENER || this.currentUser.userRole.name === USER_ROLES.ROLE_REVIEWER) {\n      this.displayedColumns = ['referenceCode', 'typeOfApplication', 'companyName', 'brand', 'typeOfMedium', 'status', 'paymentStatus', 'internalStatus', 'icon'];\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_SUPER_ADMIN || this.currentUser.userRole.name === USER_ROLES.ROLE_ADMIN\n      || this.currentUser.userRole.name === USER_ROLES.ROLE_ENCODER) {\n      this.displayedColumns = ['referenceCode', 'typeOfApplication', 'companyName', 'brand', 'typeOfMedium', 'status', 'paymentStatus', 'internalStatus'];\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_AD_SPECIALIST){\n      this.displayedColumns = ['referenceCode', 'typeOfApplication', 'companyName', 'brand', 'product', 'typeOfMedium', 'status', 'paymentStatus', 'internalStatus', 'icon'];\n    }\n    this.getList();\n    this.getListCounts();\n    this.initUserRole();\n    this.refreshApplicationBadgeCount();\n  }\n\n  parseInternalStatus(internalStatus: string, actionBy){\n    let user: string = `${actionBy.firstName} ${actionBy.lastName}`;\n    if(internalStatus.match(\"SUBMITTED\")){\n      return `SUBMITTED BY: ${user}`;\n    } else if(internalStatus.match(\"REVIEWED\")) return `REVIEWED BY: ${user}`;\n    else if(internalStatus.match(\"VERIFIED\")) return `VERIFIED BY: ${user}`;\n    else if(internalStatus.match(\"SCREENED\")) return `SCREENED BY: ${user}`;\n    else if(internalStatus.match(\"REJECTED\")) return `REJECTED BY: ${user}`;\n    // return internalStatus;\n  }\n\n\n  refreshApplicationBadgeCount(): void {\n    this.commonService.sendClickEvent();\n  }\n\n  formatTextPayment(status: string): string {\n    return status.replace(/_/g, ' ');\n  }\n\n\n  initUserRole() {\n    if (this.currentUser.userRole.name === USER_ROLES.ROLE_SUPER_ADMIN) {\n      this.isSuperAdmin = true;\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_ADMIN) {\n      this.isAdmin = true;\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_ACCOUNTING) {\n      this.isAccounting = true;\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT) {\n      this.isApplicant = true;\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_SCREENER) {\n      this.isScreener = true;\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_REVIEWER) {\n      this.isReviewer = true;\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_AD_SPECIALIST) {\n      this.isAdSpecialist = true;\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_ENCODER) {\n      this.isEvaluator = true;\n    }\n  }\n\n  getListCounts(): void {\n    let endpoint\n    let screenedCount: number = 0;\n    if (this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT) {\n      endpoint = ENDPOINTS.badgeCountByApplicationOwner;\n    } else {\n      endpoint = ENDPOINTS.badgeCountByAscUser;\n    }\n    this.apiService.findAll(ENDPOINTS.applicationForm + `/custom/search?assignedScreenerId=${this.currentUser.id}&page=${this.currentPage}&size=${this.pageSize}`)\n    .subscribe( response => {\n      screenedCount = response.totalItems;\n    })\n    this.apiService.findAll(endpoint + this.currentUser.id).subscribe(\n      (res: any) => {\n        this.badgeCounter = res;\n        this.apiService.findAll(ENDPOINTS.applicationForm + `/custom/search?assignedScreenerId=${this.currentUser.id}&page=${this.currentPage}&size=${this.pageSize}`)\n        .subscribe( response => {\n          this.badgeCounter.screenedApplications = response.totalItems;\n        })\n       }\n    )\n\n  }\n\n  getList(submissionType = 'ORIGINAL') {\n\n    this.currentPage = this.pageNo;\n    this.currentPage++;\n    if (this.currentPage === 0) this.currentPage++;\n\n    if (this.viewApplicationType === 'multiple') {\n      this.applicationTypeTitle = 'MULTIPLE';\n      this.getMultipleS1ApplicationList();\n    } else if (this.viewApplicationType === 'special') {\n      this.applicationTypeTitle = 'SPECIAL';\n      this.getSpecialS1ApplicationList();\n    } else if (this.viewApplicationType === 'assigned-applications') {\n      this.applicationTypeTitle = 'Assigned Applications';\n      this.getAssignAppFormBy();\n    } else if (this.viewApplicationType === 'for-release') {\n      this.applicationTypeTitle = 'For Release Applications';\n      this.getForReleaseApplicationList();\n    } else if (this.viewApplicationType === 'released') {\n      this.applicationTypeTitle = 'Released Applications';\n      this.getReleasedApplicationList();\n    } else {\n\n      this.applicationTypeTitle = 'INDIVIDUAL';\n      let param = submissionType.toUpperCase();\n\n      if (param === SUBMISSION_TYPE.COMPLIANCE && this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT) {\n        param = `&decisionStatus=INCOMPLETE&complianceForm=true`;\n      } else if (param === SUBMISSION_TYPE.COMPLIANCE && this.currentUser.userRole.name !== USER_ROLES.ROLE_APPLICANT) {\n        param = `&complianceForm=true`;\n      } else {\n        param = `&submissionType=${param}`;\n      }\n\n      let endpoint = `custom/search?page=${this.currentPage}&size=${this.pageSize}${param}`;\n\n      if (this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT) {\n        endpoint = ENDPOINTS.applicationFormPresentor + endpoint + `&applicationOwnerId=${this.currentUser.id}`;\n      } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_ENCODER) {\n        endpoint = ENDPOINTS.applicationFormEncoder + endpoint + `&assignedUserId=${this.currentUser.id}`;\n      } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_AD_SPECIALIST) {\n        endpoint = ENDPOINTS.applicationFormAdSpecialist + endpoint + `&assignedUserId=${this.currentUser.id}`;\n      } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_SCREENER) {\n        if (submissionType ===  'ORIGINAL')endpoint = ENDPOINTS.applicationFormScreener + endpoint + `&assignedScreenerId=${this.currentUser.id}`;\n        else if(submissionType === 'SCREENED APPLICATIONS') endpoint = ENDPOINTS.applicationForm + `/custom/search?assignedScreenerId=${this.currentUser.id}&page=${this.currentPage}&size=${this.pageSize}`;\n      } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_REVIEWER) {\n        endpoint = ENDPOINTS.applicationFormReviewer + endpoint + `&assignedReviewerId=${this.currentUser.id}`;\n      } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_ADMIN ||\n        this.currentUser.userRole.name === USER_ROLES.ROLE_SUPER_ADMIN) {\n        endpoint = ENDPOINTS.applicationFormAdmin + endpoint;\n      }\n\n      // console.log(endpoint);\n      this.spinner.show()\n      this.apiService.findAll(endpoint).subscribe((res: any) => {\n        this.applicationList = res.data;\n        this.totalItems = res.totalItems;\n        console.log('applicationList: ', this.applicationList);\n\n        this.dataSource = new MatTableDataSource<S1Application>(this.applicationList);\n        // this.dataSource.paginator = this.paginator;\n\n        setTimeout(() => {\n          this.spinner.hide();\n        }, 1);\n      }, (err) => {\n        setTimeout(() => {\n          this.spinner.hide();\n        }, 1);\n      });\n    }\n  }\n\n\n  getScreenedApps(){\n\n  }\n\n\n  showStatus(stats: any): string{\n    if(stats.paymentStatus !== PAYMENT_STATUS.PAID && stats.actionStatus === ACTION_STATUS.ASSIGN_TO_PRESENTOR) return \"ON PROCESS\";\n    else return stats.externalStatus.replace(\"_\", \" \").toUpperCase();\n  }\n\n  pageEvents(event: any) {\n    this.pageSize = event.pageSize;\n\n    if (event.pageIndex > this.pageNo) {\n      this.pageNo++;\n    } else {\n      this.pageNo--;\n    }\n\n    if (event.pageSize > event.length) {\n      this.pageNo = 0;\n    }\n\n    this.getList(this.displayedContent.toUpperCase());\n  }\n\n  setPageSizeOptions(setPageSizeOptionsInput: string) {\n    if (setPageSizeOptionsInput) {\n      this.pageSizeOptions = setPageSizeOptionsInput.split(',').map(str => +str);\n    }\n  }\n\n  getMultipleS1ApplicationList(): void {\n    let endpoint = ''; const ascEndpoint = `/custom/search?page=${this.currentPage}&size=${this.pageSize}`; let assignedASCUser = '';\n    if (this.currentUser.userRole.name === USER_ROLES.ROLE_ADMIN || this.currentUser.userRole.name === USER_ROLES.ROLE_SUPER_ADMIN) {\n      endpoint = ENDPOINTS.multipleApplication + ascEndpoint;\n    } else {\n      if (this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT) {\n        assignedASCUser = `&applicationOwnerId=${this.currentUser.id}`;\n      } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_ENCODER) {\n        assignedASCUser = `&assignedEvaluatorId=${this.currentUser.id}`;\n      } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_AD_SPECIALIST) {\n        assignedASCUser = `&assignedAdSpecialistId=${this.currentUser.id}`;\n      } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_SCREENER) {\n        assignedASCUser = `&assignedScreenerId=${this.currentUser.id}`;\n      } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_REVIEWER) {\n        assignedASCUser = `&assignedReviewerId=${this.currentUser.id}`;\n      }\n      endpoint = ENDPOINTS.multipleApplication + ascEndpoint + assignedASCUser;\n    }\n    console.log(endpoint);\n\n    this.apiService.findAll(endpoint).subscribe((res: any) => {\n      this.multipleApplicationList = res.data;\n      console.log('multipleApplicationList: ', res);\n      this.multipleTotalItems = res.totalItems;\n      this.refreshApplicationBadgeCount();\n\n      this.multipleApplicationDataSource = new MatTableDataSource<MultipleApplication>(this.multipleApplicationList);\n      this.multipleApplicationDataSource.paginator = this.paginator;\n      this.multipleApplicationDataSource.sort = this.sort;\n      setTimeout(() => {\n        this.spinner.hide();\n      }, 1);\n    }, (err) => {\n      setTimeout(() => {\n        this.spinner.hide();\n      }, 1);\n    });\n  }\n\n  getSpecialS1ApplicationList(): void {\n    if (this.currentUser.userRole.name === USER_ROLES.ROLE_ADMIN || this.currentUser.userRole.name === USER_ROLES.ROLE_SUPER_ADMIN) {\n      const obj = {\n        statuses: ['FOR_APPROVAL', 'APPROVED', 'DISAPPROVED']\n      }\n\n      this.apiService.save(`${ENDPOINTS.s1SpecialApplicationRequestsAdmin}?page=${this.currentPage}&size=${this.pageSize}`, obj)\n        .subscribe((res: any) => {\n          this.specialApplicationList = res.data;\n          this.specialTotalItems = res.totalItems;\n          console.log('specialApplicationList: ', res);\n          this.refreshApplicationBadgeCount();\n\n          this.specialApplicationDataSource = new MatTableDataSource<S1Application>(this.specialApplicationList);\n          this.specialApplicationDataSource.paginator = this.paginator;\n          this.specialApplicationDataSource.sort = this.sort;\n          setTimeout(() => {\n            this.spinner.hide();\n          }, 1);\n        }, (err) => {\n          setTimeout(() => {\n            this.spinner.hide();\n          }, 1);\n        });\n    } else {\n      const obj = {\n        applicationOwnerId: this.currentUser.id,\n        statuses: ['FOR_APPROVAL', 'APPROVED', 'DISAPPROVED']\n      }\n\n      this.apiService.save(`${ENDPOINTS.s1SpecialApplicationRequests}?page=${this.currentPage}&size=${this.pageSize}`, obj)\n        .subscribe((res: any) => {\n          this.specialApplicationList = res.data;\n          this.specialTotalItems = res.totalItems;\n          console.log('specialApplicationList: ', res);\n          this.refreshApplicationBadgeCount();\n\n          this.specialApplicationDataSource = new MatTableDataSource<S1Application>(this.specialApplicationList);\n          this.specialApplicationDataSource.paginator = this.paginator;\n          this.specialApplicationDataSource.sort = this.sort;\n          setTimeout(() => {\n            this.spinner.hide();\n          }, 1);\n        }, (err) => {\n          setTimeout(() => {\n            this.spinner.hide();\n          }, 1);\n        });\n    }\n  }\n\n  getAssignAppFormBy(): void {\n    let endpoint = '';\n\n    if (this.currentUser.userRole.name === USER_ROLES.ROLE_AD_SPECIALIST) {\n      endpoint = `${ENDPOINTS.applicationFormAdSpecialist}assigned/screener`;\n    } else {\n      endpoint = `${ENDPOINTS.applicationFormScreener}assigned/reviewer`;\n    }\n\n    this.apiService.findAll(endpoint).subscribe((res: any) => {\n      this.assignedApplicationList = res.responseData.data;\n      this.refreshApplicationBadgeCount();\n\n      this.assignedApplicationDataSource = new MatTableDataSource<S1Application>(this.assignedApplicationList);\n      this.assignedApplicationDataSource.paginator = this.paginatorFalse;\n      this.assignedApplicationDataSource.sort = this.sort;\n\n      setTimeout(() => {\n        this.spinner.hide();\n      }, 1);\n    }, (err) => {\n      setTimeout(() => {\n        this.spinner.hide();\n      }, 1);\n    });\n  }\n\n  getForReleaseApplicationList() {\n\n    let endpoint; const param = `&page=${this.currentPage}&size=${this.pageSize}`;\n    if (this.currentUser.userRole.name === USER_ROLES.ROLE_AD_SPECIALIST) {\n      endpoint = ENDPOINTS.getForReleaseApplicationAdSpe + `?releaseStatus=FOR_RELEASE&assignedAdSpecialistId=${this.currentUser.id}${param}`;\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_REVIEWER) {\n      endpoint = ENDPOINTS.getForReleaseApplicationsReviewer + `?releaseStatus=FOR_RELEASE&assignedReviewerId=${this.currentUser.id}${param}`;\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_ADMIN || USER_ROLES.ROLE_SUPER_ADMIN) {\n      endpoint = ENDPOINTS.getAdminSuperAdminForReleaseApplication + `/custom/search?releaseStatus=FOR_RELEASE${param}`;\n    }\n\n    this.apiService.findAll(endpoint).subscribe((res: any) => {\n      this.forReleaseApplicationsList = res.data;\n      this.forReleaseTotalItems = res.totalItems;\n      this.refreshApplicationBadgeCount();\n\n      console.log('getForReleaseApplicationList: ', this.forReleaseApplicationsList);\n\n      this.forReleaseApplicationDataSource = new MatTableDataSource<S1Application>(this.forReleaseApplicationsList);\n      this.forReleaseApplicationDataSource.paginator = this.paginatorFalse;\n      this.forReleaseApplicationDataSource.sort = this.sort;\n\n      setTimeout(() => {\n        this.spinner.hide();\n      }, 1);\n    }, (err) => {\n      setTimeout(() => {\n        this.spinner.hide();\n      }, 1);\n    });\n  }\n\n\n  getReleasedApplicationList() {\n    this.apiService.findAll(ENDPOINTS.getReleaseApplicationsAdSpe + `?page=${this.currentPage}&size=${this.pageSize}`)\n      .subscribe((res: any) => {\n\n        this.forReleaseApplicationsList = res.data;\n        console.log('getReleasedApplicationList: ', this.forReleaseApplicationsList);\n        this.forReleaseTotalItems = res.totalItems;\n        this.refreshApplicationBadgeCount();\n\n        this.forReleaseApplicationDataSource = new MatTableDataSource<S1Application>(this.forReleaseApplicationsList);\n        this.forReleaseApplicationDataSource.paginator = this.paginatorFalse;\n        this.forReleaseApplicationDataSource.sort = this.sort;\n        setTimeout(() => {\n          this.spinner.hide();\n        }, 1);\n      }, (err) => {\n        setTimeout(() => {\n          this.spinner.hide();\n        }, 1);\n      });\n  }\n\n\n  getForDecisionAndComment(displayedContent) {\n    let endpoint = '';\n\n    // APPEAL\n    if (this.isAdSpecialist) {\n      endpoint = ENDPOINTS.applicationFormAdSpecialist + `custom/search?assignedUserId=${this.currentUser.id}&hasOngoingAppeal=true&page=${this.currentPage}&size=${this.pageSize}&submissionType=ORIGINAL`;\n    }\n    // RETURN TO SCREENER\n    else if (this.isScreener) {\n      endpoint = ENDPOINTS.s1ApplicationForm + `screener/assigned-user-id/${this.currentUser.id}/forwarded-for-decision-and-comment`;\n    } else if (this.isReviewer) {\n      endpoint = ENDPOINTS.s1ApplicationForm + `reviewer/assigned-user-id/${this.currentUser.id}/forwarded-for-decision-and-comment`;\n    }\n\n    else if (this.isAdmin || this.isSuperAdmin) {\n      if (displayedContent === 'For Appeal') {\n        endpoint = ENDPOINTS.applicationFormAdmin + `custom/search?hasOngoingAppeal=true&page=${this.currentPage}&size=${this.pageSize}`;\n      } else {\n        endpoint = ENDPOINTS.admin + `/s1/for-decision-comment/reviewer-screener`;\n      }\n    }\n    this.spinner.show()\n    this.apiService.findAll(endpoint)\n      .subscribe((res: any) => {\n        if (res) {\n          if (res?.data) {\n            this.applicationList = res?.data;\n          } else {\n            this.applicationList = res?.responseData?.data;\n          }\n          console.log(displayedContent + ': ', this.applicationList);\n          this.refreshApplicationBadgeCount();\n\n          this.dataSource = new MatTableDataSource<S1Application>(this.applicationList);\n          this.dataSource.paginator = this.paginatorFalse;\n          this.dataSource.sort = this.sort;\n          setTimeout(() => {\n            this.spinner.hide();\n          }, 1);\n        } else {\n          this.applicationList = [];\n        }\n      }, (err) => {\n        setTimeout(() => {\n          this.spinner.hide();\n        }, 1);\n      });\n  }\n\n\n  public doFilter = (value: string) => {\n    this.dataSource.filter = value.trim().toLocaleLowerCase();\n  }\n\n  public doFilterS1MultipleApplicationList = (value: string) => {\n    this.multipleApplicationDataSource.filter = value.trim().toLocaleLowerCase();\n  }\n\n  public doFilterSpecialS1ApplicationList = (value: string) => {\n    this.specialApplicationDataSource.filter = value.trim().toLocaleLowerCase();\n  }\n\n  public doFilterAssignedS1ApplicationList = (value: string) => {\n    this.assignedApplicationDataSource.filter = value.trim().toLocaleLowerCase();\n  }\n\n  public doFilterForReleaseApplicationList = (value: string) => {\n    this.forReleaseApplicationDataSource.filter = value.trim().toLocaleLowerCase();\n  }\n\n  viewApplication(data: any): void {\n    this.s1Application = data;\n    console.log('S1 FORM: ', this.s1Application);\n    if (this.viewApplicationType === 'released' || this.viewApplicationType === 'for-release' || this.viewApplicationType === 'assigned-applications' ||\n      this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT || this.currentUser.userRole.name === USER_ROLES.ROLE_ADMIN ||\n      this.currentUser.userRole.name === USER_ROLES.ROLE_SUPER_ADMIN) {\n      this.router.navigate(['asc/page/application/s1/update/', data.id]);\n    }\n    else if (data.formStatus === FORM_STATUS.OPEN && this.s1Application.internalStatus !== APPLICATION_STATUS.S1_APPLICATION_REJECTED) {\n      Swal.fire({\n        text: 'Are you sure you want to open this application? This application will be LOCKED on your account.',\n        icon: 'question',\n        showCancelButton: true,\n        confirmButtonColor: '#3085d6',\n        cancelButtonColor: '#d33',\n        confirmButtonText: 'Confirm'\n      }).then((result) => {\n        if (result.value) {\n          if (this.currentUser.userRole.name === USER_ROLES.ROLE_ENCODER) {\n            this.s1Application.assignedEncoder = this.currentUser;\n          } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_AD_SPECIALIST) {\n            this.s1Application.assignedAdSpecialist = this.currentUser;\n          } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_SCREENER) {\n            this.s1Application.assignedScreener = this.currentUser;\n          } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_REVIEWER) {\n            this.s1Application.assignedReviewer = this.currentUser;\n          }\n          this.s1Application.currentAssignee = this.currentUser.userRole.name;\n\n          let endpoint = '';\n          if (this.currentUser.userRole.name === USER_ROLES.ROLE_ENCODER) {\n            endpoint = ENDPOINTS.applicationFormEncoder;\n          } else {\n            endpoint = ENDPOINTS.applicationFormAdSpecialist;\n          }\n\n          this.apiService.save(endpoint + ENDPOINTS.takeApplication, this.s1Application).subscribe(\n            (res: any) => {\n              this.sweetAlertService.customSuccessMessage('Application successfully assigned to you.', 3);\n              this.router.navigate(['asc/page/application/s1/update/', data.id]);\n              this.refreshApplicationBadgeCount();\n            }, (err: any) => {\n              console.log('error deep');\n              let lockedBy = '';\n              if (this.s1Application.assignedUser) {\n                lockedBy = ` by ${this.s1Application.assignedUser.firstName} ${this.s1Application.assignedUser.lastName} `;\n              }\n\n              err.error.message = `Application has been locked${lockedBy} for processing. Kindly select another application to process.`;\n              this.sweetAlertService.error(err, 5);\n              // location.reload();\n            });\n        }\n      });\n    } else {\n      if (this.s1Application.assignedUser) {\n        if (this.s1Application.assignedUser.username === this.currentUser.username) {\n          this.router.navigate(['asc/page/application/s1/update/', data.id]);\n          this.refreshApplicationBadgeCount();\n        } else {\n          console.log('error out');\n          let lockedBy = '';\n          if (this.s1Application.assignedUser) {\n            lockedBy = ` by ${this.s1Application.assignedUser.firstName} ${this.s1Application.assignedUser.lastName} `;\n          }\n          this.sweetAlertService.customErrorMessage(`Application has been locked${lockedBy} for processing.Kindly select another application to process.`, 5);\n          this.refreshApplicationBadgeCount();\n        }\n      }\n    }\n\n  }\n\n  viewMultipleApplication(data: any): void {\n    this.multipleS1Application = data;\n    console.log('multipleS1Application: ', this.multipleS1Application);\n\n    let dialogRef;\n\n    if (this.currentUser.userRole.name === USER_ROLES.ROLE_ADMIN || this.currentUser.userRole.name === USER_ROLES.ROLE_SUPER_ADMIN) {\n      dialogRef = this.dialog.open(UpdateMultipleApplicationComponent, {\n        width: '80%',\n        height: '85%',\n        data: this.multipleS1Application\n      });\n    } else {\n      dialogRef = this.dialog.open(UpdateMultipleApplicationComponent, {\n        width: '80%',\n        height: '85%',\n        data: this.multipleS1Application\n      });\n    }\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.getMultipleS1ApplicationList();\n      }\n    });\n  }\n\n  viewSpecialApplication(data: any): void {\n    this.applicationRequest = data;\n    this.s1Application = new S1Application();\n    this.s1Application.adTitle = data.adTitle;\n    this.s1Application.applicationOwner = data.applicationOwner;\n    this.s1Application.applicationType = data.applicationType;\n    this.s1Application.brand = data.brand;\n    this.s1Application.product = data.product;\n    // this.s1Application.category = data.category;\n    this.s1Application.company = data.company;\n    // this.s1Application.membersAffiliation = data.membersAffiliation;\n    this.s1Application.submissionDate = data.submissionDate;\n    this.s1Application.tagLine = data.tagLine;\n    this.s1Application.status = data.status;\n    this.s1Application.submissionType = SUBMISSION_TYPE.ORIGINAL;\n    this.s1Application.appFormReference = '';\n    this.s1Application.formType = data.formType;\n    this.s1Application.applicationRequest = data;\n    this.s1Application.id = 0;\n\n\n    let dialogRef;\n    if (this.currentUser.userRole.name === USER_ROLES.ROLE_ADMIN || this.currentUser.userRole.name === USER_ROLES.ROLE_SUPER_ADMIN\n      || this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT &&\n      this.applicationRequest.status === 'FOR_APPROVAL') {\n      dialogRef = this.dialog.open(UpdateSpecialApplicationComponent, {\n        width: '80%',\n        height: '85%',\n        data: this.applicationRequest\n      });\n    } else {\n      this.dataStorage.setS1Application(this.s1Application);\n      this.dataStorage.setSpecialS1Application(this.applicationRequest);\n      this.router.navigate(['asc/page/application/s1/add']);\n      // dialogRef = this.dialog.open(UpdateSpecialApplicationComponent, {\n      //   width: '80%',\n      //   height: '85%',\n      //   data: this.applicationRequest\n      // });\n    }\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.getSpecialS1ApplicationList();\n      }\n    });\n  }\n\n  getCompanyById(id): Promise<any> {\n    // updates company details in data storage\n    const promise = new Promise((resolve, reject) => {\n      this.apiService.findById(ENDPOINTS.company, id).subscribe((res: any) => {\n        if (res) {\n          this.currentUser.company = res.responseData.data;\n          this.dataStorage.saveUserAccount(this.currentUser);\n          resolve(this.currentUser);\n        }\n      }, err => {\n        reject(err);\n      });\n    });\n    return promise;\n  }\n\n  openFormTypeModal() {\n    this.getCompanyById(this.currentUser.company.id).then(\n      (res) => {\n        if (res.company.membersAffiliation.status === 'INACTIVE') {\n          this.sweetAlertService.customErrorMessage(`Your Company's membership affiliation is no longer active. Cannot proceed with new application. Please contact ASC admin`);\n        } else {\n          const dialogRef = this.dialog.open(S1FormTypeComponent, {\n            // width: '30%',\n            // height: '25%',\n          });\n\n          dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n              console.log(result);\n            }\n          });\n        }\n      }\n    );\n  }\n\n  applyForS2(data) {\n    let typeOfExecution;\n    if (data.refTypeOfMedium === TYPE_OF_MEDIUM.SINGLE_MEDIA) {\n      this.apiService.findByParam(ENDPOINTS.applicationSingleMedia, `app-form-reference/${data.appFormReference}`).subscribe(\n        (res: any) => {\n          if (res.responseData.data.length > 0) {\n            typeOfExecution = res.responseData.data[0].mediumExecution.typeOfExecution;\n            data.typeOfExecution = typeOfExecution;\n            const dialogRef = this.dialog.open(ListS1Dialog, {\n              data: {\n                s2Application: data\n              }\n            });\n          }\n        }, (err: any) => {\n        })\n    } else {\n      const dialogRef = this.dialog.open(ListS1Dialog, {\n        data: {\n          s2Application: data\n        }\n      });\n    }\n  }\n\n\n  returnTo(process, s1App): void {\n    this.s1Application = s1App;\n    Swal.fire({\n      text: 'Are you sure you want to ' + process + ' this application?',\n      icon: 'question',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Confirm'\n    }).then((result) => {\n      if (result.value) {\n        this.spinner.show();\n        let endpoint = '';\n        this.s1Application.actionBy = this.currentUser;\n\n        if (this.currentUser.userRole.name === USER_ROLES.ROLE_SCREENER) {\n          this.s1Application.currentAssignee = USER_ROLES.ROLE_AD_SPECIALIST;\n          if (this.s1Application.multipleApplication && this.s1Application.submissionType === SUBMISSION_TYPE.ORIGINAL) {\n            endpoint = `${ENDPOINTS.multipleApplicationReturnToAdSpe}${this.s1Application.multipleApplication.id}/return`;\n            \n          } else {\n            endpoint = `${ENDPOINTS.applicationFormScreener}return`;\n          }\n        } else {\n          if (this.s1Application.multipleApplication && this.s1Application.submissionType === SUBMISSION_TYPE.ORIGINAL) {\n            endpoint = `${ENDPOINTS.multipleApplicationReturnToScreener}${this.s1Application.multipleApplication.id}/return`;\n          } else {\n            endpoint = `${ENDPOINTS.applicationFormReviewer}return`;\n          }\n        }\n\n        // console.log('TO SAVE: ', this.s1Application);\n        this.apiService.save(endpoint, this.s1Application).subscribe(\n          (res: any) => {\n            // console.log('RETURN: ', res.responseData.data);\n            if (res.code === 200) {\n              this.spinner.hide();\n              this.getList();\n              this.sweetAlertService.customSuccessMessage('Successfully returned the application');\n              this.refreshApplicationBadgeCount();\n            }\n          }, (err: any) => {\n            this.spinner.hide();\n          })\n      }\n    });\n  }\n\n  saveStatus(ascUser = '', action = '', status = '', application: any) {\n    let fetchedData;\n    this.apiService.findAll(`${ENDPOINTS.applicationForm}/id/${application.id}`).subscribe(validateApp=>{\n      console.log('validate => ', validateApp)\n      fetchedData = validateApp.responseData.data;\n    })\n    Swal.fire({\n      text: 'Are you sure you want to cancel this application?',\n      icon: 'question',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Confirm'\n    }).then((result) => {\n      if (result.value) {\n        this.dataStorage.setDisplayProgressbar(true);\n        if(fetchedData.assignedUser && fetchedData.formStatus === FORM_STATUS.LOCKED) {\n          this.sweetAlertService.customErrorMessage(\"This form is already in process\");\n          return\n        }\n        this.apiService.update(`${ENDPOINTS.applicationForm}/s1/${ascUser}/${action}`, application).subscribe(\n          (res: any) => {\n            console.log('SAVED STATUS: ', res.responseData.data);\n            this.sweetAlertService.customSuccessMessage('Application successfully canceled.');\n            this.getList();\n            this.refreshApplicationBadgeCount();\n            // this.router.navigate(['asc/page/application/s1/lists']);\n          }, (err) => {\n            console.log(err);\n            this.sweetAlertService.error(err);\n            this.dataStorage.setDisplayProgressbar(false);\n          }, () => {\n            this.dataStorage.setDisplayProgressbar(false);\n          });\n\n      }\n    });\n  }\n\n  changeTab(evt) {\n    console.log('tab ---  ', evt);\n    if (evt.tab.textLabel !== 'For Decision and Comments') {\n      this.getListCounts();\n    }\n    if (evt.tab) {\n      this.displayedContent = evt.tab.textLabel;\n      if (this.displayedContent === 'For Decision and Comments' || this.displayedContent === 'For Appeal') {\n        this.getForDecisionAndComment(this.displayedContent);\n      }else if(this.displayedContent === 'Returned Application'){\n        console.log('returneeed')\n        const userType = this.isAdSpecialist ? 'adSpeId' : 'screenerId'\n        this.spinner.show()\n        this.apiService.findAll(`${this.isAdSpecialist ? ENDPOINTS.getAllAdSpeReturnedApps : ENDPOINTS.getAllScreenerReturnedApps}/?&${ userType }=${ this.currentUser.id }&page=${this.currentPage-1}&size=${this.pageSize}`)\n        .subscribe( respose =>{\n          this.applicationList = respose.data;\n          this.totalItems = respose.totalItems;\n          console.log('applicationList: ', this.applicationList);\n  \n          this.dataSource = new MatTableDataSource<S1Application>(this.applicationList);\n          this.dataSource.paginator = this.paginator;\n          this.assignedApplicationDisplayedColumns.splice(this.assignedApplicationDisplayedColumns.indexOf(\"icon\"),1);\n          setTimeout(() => {\n            this.spinner.hide();\n          }, 1);\n        }, err=>{\n          setTimeout(() => {\n            this.spinner.hide();\n          }, 1);\n        })\n      } else if(this.displayedContent === 'Screened Applications'){\n        this.getList(this.displayedContent.toUpperCase());\n      }\n      \n      else {\n        this.getList(this.displayedContent.toUpperCase());\n      }\n    }\n  }\n\n  sortEvent() {\n    this.click++;\n    if (this.click % 2 === 0) {\n      console.log('even', this.click);\n      this.dataSource = new MatTableDataSource<S1Application>(this.applicationList);\n      this.dataSource.paginator = this.paginator;\n      return this.dataSource.data.sort((a, b) => a.id - b.id);\n    } else {\n      console.log('odd', this.click);\n      this.dataSource = new MatTableDataSource<S1Application>(this.applicationList);\n      this.dataSource.paginator = this.paginator;\n      return this.dataSource.data.reverse();\n    }\n    // this.dataSource.data.sort(() => Math.random() - 0.5)\n  }\n\n  unlockApplication(process, s1App): void {\n    this.s1Application = s1App;\n    Swal.fire({\n      text: 'Are you sure you want to ' + process + ' this application?',\n      icon: 'question',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Confirm'\n    }).then((result) => {\n      if (result.value) {\n        this.spinner.show();\n        let endpoint = '';\n        this.s1Application.actionBy = this.currentUser;\n        this.s1Application.formStatus = FORM_STATUS.OPEN;\n\n        endpoint = ENDPOINTS.applicationForm;\n\n        // console.log('TO SAVE: ', this.s1Application);\n        this.apiService.update(endpoint, this.s1Application).subscribe(\n          (res: any) => {\n            // console.log('RETURN: ', res.responseData.data);\n            if (res.code === 200) {\n              this.spinner.hide();\n              this.getList();\n              this.sweetAlertService.customSuccessMessage('Successfully unlocked the application');\n              this.refreshApplicationBadgeCount();\n            }\n          }, (err: any) => {\n            this.spinner.hide();\n          })\n      }\n    });\n  }\n\n\n  refresh() {\n    this.commonService.sendClickEvent();\n    this.startTimer();\n  }\n\n  startTimer() {\n    this.interval = setInterval(() => {\n      this.timeLeft--;\n      if(this.timeLeft > 0){\n        this.refreshButtonEnabled = false;\n        this.isTimerValueDisplay = true;\n      }else{\n        this.refreshButtonEnabled = true;\n        this.isTimerValueDisplay = false;\n        this.timeLeft = 60;\n        clearInterval(this.interval)\n      }\n      this.timerDisplay=this.transform(this.timeLeft)\n    },1000)\n  }\n\n  transform(value: number): string {\n    const minutes: number = Math.floor(value / 60);\n    return minutes + ':' + (value - minutes * 60);\n  }\n\n}\n\n\n\n\n\n\n@Component({\n  selector: 'list-s1-dialog',\n  templateUrl: 'list-s1-dialog.html',\n  styleUrls: ['./list-s1-application.component.scss']\n})\nexport class ListS1Dialog implements OnInit {\n\n  s2Application = new S2Application();\n  s1Application = new S1Application();\n  applicationRequest = new ApplicationRequest();\n  typeOfExecution = new TypeOfExecution();\n\n\n  constructor(private apiService: ApiService,\n    private sweetAlertService: SweetAlertService,\n    private router: Router,\n    private dataStorage: DataStorageService,\n    public dialog: MatDialog,\n    public dialogRef: MatDialogRef<ListS1ApplicationComponent>,\n    private commonService: CommonServices,\n    @Inject(MAT_DIALOG_DATA) public data: any) { }\n\n  ngOnInit(): void {\n    this.typeOfExecution = this.data.s2Application.typeOfExecution;\n    this.s2Application.applicationForm = this.data.s2Application;\n    this.s1Application = this.data.s2Application;\n  }\n\n  // Used for S2 or TOA\n  proceedToS2(isS2) {\n    Swal.fire({\n      text: `Are you sure you want to apply for ${isS2 ? 'S2' : 'TOA'}?`,\n      icon: 'question',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Confirm'\n    }).then((result) => {\n      if (result.value) {\n        this.s2Application.submissionType = this.data.s2Application.submissionType;\n        this.s2Application.applicationForm = this.data.s2Application;\n        this.s2Application.submissionType = SUBMISSION_TYPE.ORIGINAL; // this.s2Application.applicationForm.submissionType;\n        if (!isS2) {\n          this.s2Application.hasToa = true;\n          // this.s2Application.submissionType = SUBMISSION_TYPE.TOA;\n        }\n        this.s2Application.internalStatus = 'SAVED';\n        this.s2Application.externalStatus = 'SAVED';\n        console.log('View S2:', this.data.s2Application);\n        this.apiService.save(ENDPOINTS.s2ApplicationFormPresentorSave, this.s2Application).subscribe(\n          (res: any) => {\n            console.log(res);\n            this.router.navigate(['asc/page/application/s2/update', res.responseData.data.id]);\n            this.commonService.sendClickEvent();\n            this.dialogRef.close();\n          }, (err: any) => {\n          })\n      }\n    })\n  }\n\n  requestForClearingAndClearance(): void {\n    Swal.fire({\n      text: 'Are you sure you want to request approval for special clearing?',\n      icon: 'question',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Confirm'\n    }).then((result) => {\n      if (result.value) {\n        this.dialogRef.close();\n        let dialogRef;\n        this.applicationRequest.hasSpecialClearing = true;\n        this.applicationRequest.applicationForm = this.s1Application;\n        dialogRef = this.dialog.open(RequestForSpecialClearingComponent, {\n          width: '80%',\n          height: '85%',\n          data: {\n            applicationRequest: this.applicationRequest,\n            applicationType: 'Request for Special Clearing'\n          }\n        });\n        this.commonService.sendClickEvent();\n      }\n    })\n  }\n\n\n}\n","<form (keydown.enter)=\"$event.preventDefault()\">\n  <div class=\"container-fluid\">\n    <div class=\"row\">\n      <div class=\"col-md-12 title\">\n        <mat-label>\n          <i class=\"material-icons icon-black\">view_list</i> <span\n            [hidden]=\"viewApplicationType === 'assigned-applications' || viewApplicationType === 'for-release' || viewApplicationType === 'released'\"> {{s1ApplicationTitle}} -</span> &nbsp;<span>{{\n            applicationTypeTitle?.replace('Assigned', 'Retrieve/Re-assign') | uppercase}}</span>\n        </mat-label>\n        <button class=\"button-right\" type=\"submit\" mat-raised-button color=\"primary\" (click)=\"refresh()\" [disabled]=\"!refreshButtonEnabled\">\n          <span class=\"material-icons\">sync</span>\n          <label *ngIf=\"isTimerValueDisplay\"> &nbsp;{{timerDisplay}}</label>\n        </button>\n        <button class=\"button-right button-red\" type=\"submit\" mat-raised-button\n          *ngIf=\"currentUser?.userRole?.name=='ROLE_APPLICANT' || currentUser?.userRole?.name=='ROLE_ENCODER'\"\n          [hidden]=\"viewApplicationType === 'multiple'\"\n          (click)=\"openFormTypeModal()\">\n          <i class=\"material-icons color__white\">add</i> NEW APPLICATION\n        </button>\n      </div>\n    </div>\n    <hr>\n    <!-- ADMIN - INCLUDES LIST FOR MULTIPLE APPLICATIONS -->\n    <!-- TEMP: SHOW multiple application tab for all roles -->\n    <!-- <mat-tab-group>\n      <mat-tab  >\n        <ng-container *ngTemplateOutlet=\"individualS1ApplicationList\"></ng-container>\n      </mat-tab>\n      <mat-tab>\n        <ng-container *ngTemplateOutlet=\"multipleS1ApplicationList\"></ng-container>\n      </mat-tab>\n      <mat-tab >\n        <ng-container *ngTemplateOutlet=\"specialS1ApplicationList\"></ng-container>\n      </mat-tab>\n      <mat-tab  >\n        <ng-container *ngTemplateOutlet=\"assignedToScreenerS1ApplicationList\"></ng-container>\n      </mat-tab>\n    </mat-tab-group> -->\n\n    <div *ngIf=\"applicationTypeTitle === 'INDIVIDUAL'\">\n      <ng-container *ngTemplateOutlet=\"individualS1ApplicationList\"></ng-container>\n    </div>\n    <div *ngIf=\"viewApplicationType === 'multiple'\">\n      <ng-container *ngTemplateOutlet=\"multipleS1ApplicationList\"></ng-container>\n    </div>\n    <div\n      *ngIf=\"(currentUser.userRole.name === 'ROLE_APPLICANT' || currentUser.userRole.name === 'ROLE_ENCODER' || currentUser.userRole.name === 'ROLE_ADMIN' || currentUser?.userRole.name === 'ROLE_SUPER_ADMIN') && viewApplicationType === 'special'\">\n      <ng-container *ngTemplateOutlet=\"specialS1ApplicationList\"></ng-container>\n    </div>\n    <div *ngIf=\"(currentUser.userRole.name=='ROLE_AD_SPECIALIST'||currentUser.userRole.name=='ROLE_SCREENER')\">\n      <ng-container *ngTemplateOutlet=\"assignedToScreenerS1ApplicationList\"></ng-container>\n    </div>\n    <div *ngIf=\"currentUser.userRole.name=='ROLE_AD_SPECIALIST' || currentUser.userRole.name=='ROLE_REVIEWER' || currentUser.userRole.name === 'ROLE_ADMIN' || currentUser?.userRole.name === 'ROLE_SUPER_ADMIN'\">\n      <ng-container *ngTemplateOutlet=\"forReleaseApplicationList\"></ng-container>\n    </div>\n\n    <!-- OTHER USERS - DISPLAY ONLY S1 APPLICATIONS -->\n    <!-- <ng-container *ngIf=\"!showMultipleS1Application\">\n      <ng-container *ngTemplateOutlet=\"individualS1ApplicationList\"></ng-container>\n    </ng-container> -->\n  </div>\n\n</form>\n\n<!-- TEMPLATE FOR INDIVIDUAL S1 APPLICATION LIST -->\n<ng-template #individualS1ApplicationList>\n  <br>\n  <div class=\"row\" fxLayout fxLayoutAlign=\"center center\">\n    <mat-form-field class=\"col-md-9\" appearance=\"outline\">\n      <mat-label><i class=\"material-icons\">search</i> Search Applications</mat-label>\n      <input matInput type=\"text\" (keyup)=\"doFilter($event.target.value)\">\n      <input type=\"hidden\">\n    </mat-form-field>\n\n\n    <!-- <div class=\"row\">\n    <div class=\"col-md-2\">LEGEND:</div>\n    <div class=\"col-md-1 legend legend-blue\">ORIGINAL</div>\n    <div class=\"col-md-1 legend legend-green\">REVISION</div>\n    <div class=\"col-md-1 legend legend-orange\">FOR COMPLIANCE</div>\n    <div class=\"col-md-1\" style=\"background-color:lightpink;border-radius:8px;width:20%;\">Rejected</div>\n  </div> -->\n\n    <div class=\"col\" *ngIf=\"currentUser.userRole.name==='ROLE_AD_SPECIALIST'\">\n      <div class=\"legend-content\">\n        <table class=\"legend-table\">\n          <tr>\n            <td>\n              LEGEND:\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <div class=\"legend-box legend-yellow\"></div> LOCKED\n            </td>\n          </tr>\n         <tr>\n            <td>\n              <div class=\"legend-box legend-white\"></div> OPEN\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <div class=\"legend-box legend-blue\"></div> ORIGINAL\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <div class=\"legend-box legend-orange\"></div> FOR COMPLIANCE\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <div class=\"legend-box legend-green\"></div> REVISION\n            </td>\n          </tr>\n       <!--     <tr>\n            <td>\n              <div class=\"legend-box legend-orange\"></div> FOR COMPLIANCE\n            </td>\n          </tr> -->\n        </table>\n      </div>\n    </div>\n\n    <div class=\"col\" *ngIf=\"currentUser.userRole.name !='ROLE_AD_SPECIALIST'\">\n      <div class=\"legend-content\">\n        <table class=\"legend-table\">\n          <tr>\n            <td>\n              LEGEND:\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <div class=\"legend-box legend-blue\"></div> ORIGINAL\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <div class=\"legend-box legend-orange\"></div> FOR COMPLIANCE\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <div class=\"legend-box legend-green\"></div> REVISION\n            </td>\n          </tr>\n        </table>\n      </div>\n    </div>\n  </div>\n\n\n  <br>\n<!--\n  <mat-tab-group mat-align-tabs=\"start\" (selectedTabChange)=\"changeTab($event)\">\n    <mat-tab label=\"\">\n      <ng-template mat-tab-label>\n        Original\n        <div matBadge={{dataSource?.data?.length}} class=\"c-badge\" matBadgeColor=\"warn\"></div>\n      </ng-template>\n    </mat-tab>\n    <mat-tab label=\"\">\n      <ng-template mat-tab-label>\n        Revision\n        <div matBadge={{dataSource?.data?.length}} class=\"c-badge\" matBadgeColor=\"warn\"></div>\n      </ng-template>\n    </mat-tab>\n    <mat-tab label=\"\">\n      <ng-template mat-tab-label>\n        Compliance\n        <div matBadge={{dataSource?.data?.length}} class=\"c-badge\" matBadgeColor=\"warn\"></div>\n      </ng-template>\n    </mat-tab>\n  </mat-tab-group> -->\n  <mat-tab-group mat-align-tabs=\"start\" (selectedTabChange)=\"changeTab($event)\">\n    <mat-tab label=\"Original\">\n      <ng-template mat-tab-label>\n        Original\n        <div matBadge={{badgeCounter.countOriginal}} class=\"c-badge\" matBadgeColor=\"warn\"></div>\n      </ng-template>\n    </mat-tab>\n    <mat-tab label=\"Revision\" *ngIf=\"!isReviewer\">\n      <ng-template mat-tab-label>\n        Revision\n        <div matBadge={{badgeCounter.countRevision}} class=\"c-badge\" matBadgeColor=\"warn\"></div>\n      </ng-template>\n    </mat-tab>\n    <mat-tab label=\"Compliance\" *ngIf=\"!isReviewer\">\n      <ng-template mat-tab-label>\n        Compliance\n        <div matBadge={{badgeCounter.countCompliance}} class=\"c-badge\" matBadgeColor=\"warn\"></div>\n      </ng-template>\n    </mat-tab>\n    <mat-tab label=\"For Appeal\" *ngIf=\"isAdSpecialist || isAdmin || isSuperAdmin\">\n      <ng-template mat-tab-label>\n        Released Appeal\n        <div matBadge={{badgeCounter.countTotalOngoingAppeal}} class=\"c-badge\" matBadgeColor=\"warn\"></div>\n      </ng-template>\n    </mat-tab>\n    <mat-tab label=\"Returned Application\" *ngIf=\"isAdSpecialist || isScreener\">\n      <ng-template mat-tab-label>\n        Returned Application\n        <div matBadge={{badgeCounter.returnedApplications}} class=\"c-badge\" matBadgeColor=\"warn\"></div>\n      </ng-template>\n    </mat-tab>\n      <mat-tab label=\"For Decision and Comments\" *ngIf=\"isScreener || isReviewer || isAdmin || isSuperAdmin\">\n        <ng-template mat-tab-label>\n          For Decision and Comments\n          <div matBadge={{badgeCounter.countTotalScreenerAndReviewerDecisionComment}} class=\"c-badge\" matBadgeColor=\"warn\"></div>\n        </ng-template>\n      </mat-tab>\n  \n      <mat-tab label=\"Screened Applications\" *ngIf=\"isScreener || isReviewer || isAdmin || isSuperAdmin\">\n        <ng-template mat-tab-label>\n          Screened Applications\n          <div matBadge={{badgeCounter.screenedApplications}} class=\"c-badge\" matBadgeColor=\"warn\"></div>\n        </ng-template>\n      </mat-tab>\n  </mat-tab-group>\n\n  <div class=\"mat-elevation-z8 fields\">\n\n\n    <table mat-table [dataSource]=\"dataSource\" matSort>\n      <ng-container matColumnDef=\"referenceCode\">\n        <th mat-header-cell *matHeaderCellDef>REFERENCE CODE <mat-icon class=\"cursor\" (click)=\"sortEvent()\" style=\"color:black\" [hidden]=\"currentUser.userRole.name === 'ROLE_ENCODER'\">swap_vert</mat-icon></th>\n        <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"viewApplication(element)\" [ngStyle]=\"{'pointer-events': ((i !== 0 && currentUser.userRole.name === 'ROLE_ENCODER') ? 'none' : ''),\n        'background-color': (\n          (currentUser.userRole.name === 'ROLE_ENCODER' && i > 0 ? '#beb8b8' :\n            (((element.submissionType === 'ORIGINAL' && element.decisionStatus !== 'INCOMPLETE') || element.decisionStatus === 'INCOMPLETE') ? 'lightblue' :\n            ((element.submissionType === 'FOR COMPLIANCE') ? '#fca402' :\n            (element.submissionType === 'REVISION' ? '#8fcf8f' : '' )))\n          )\n          )}\">\n          {{ element?.submissionType === 'ORIGINAL' && element?.internalStatus=='S1_APPLICATION_REJECTED' ? element?.referenceCodeRejected : element?.referenceCode | uppercase}}\n        </td>\n      </ng-container>\n      <ng-container matColumnDef=\"typeOfApplication\">\n        <th mat-header-cell *matHeaderCellDef > TYPE OF APPLICATION </th>\n        <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"viewApplication(element)\"\n          [ngStyle]=\"{'pointer-events': ((i !== 0 && currentUser.userRole.name === 'ROLE_ENCODER') ? 'none' : ''),\n          'background-color': ((currentUser.userRole.name === 'ROLE_ENCODER' && i > 0 ? '#beb8b8' : currentUser.userRole.name === 'ROLE_AD_SPECIALIST' && element?.formStatus==='LOCKED' ? 'yellow' : ''))}\">\n          {{element?.formType.replaceAll('_',' ') | uppercase}} - {{\n          element?.applicationType?.description | uppercase }}</td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"companyName\">\n        <th mat-header-cell *matHeaderCellDef > COMPANY NAME </th>\n        <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"viewApplication(element)\"\n        [ngStyle]=\"{'pointer-events': ((i !== 0 && currentUser.userRole.name === 'ROLE_ENCODER') ? 'none' : ''),\n          'background-color': ((currentUser.userRole.name === 'ROLE_ENCODER' && i > 0 ? '#beb8b8'\n          : currentUser.userRole.name === 'ROLE_AD_SPECIALIST' && element?.formStatus==='LOCKED' ? 'yellow' : ''))}\">\n          {{ element?.company?.companyName | uppercase }}</td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"brand\">\n        <th mat-header-cell *matHeaderCellDef > BRAND </th>\n        <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"viewApplication(element)\"\n        [ngStyle]=\"{'pointer-events': ((i !== 0 && currentUser.userRole.name === 'ROLE_ENCODER') ? 'none' : ''),\n          'background-color': ((currentUser.userRole.name === 'ROLE_ENCODER' && i > 0 ? '#beb8b8'\n          : currentUser.userRole.name === 'ROLE_AD_SPECIALIST' && element?.formStatus==='LOCKED' ? 'yellow' : ''))}\">\n          {{ element?.brand?.description | uppercase }} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"product\">\n        <th mat-header-cell *matHeaderCellDef > PRODUCT </th>\n        <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"viewApplication(element)\"\n        [ngStyle]=\"{'pointer-events': ((i !== 0 && currentUser.userRole.name === 'ROLE_ENCODER') ? 'none' : ''),\n          'background-color': ((currentUser.userRole.name === 'ROLE_ENCODER' && i > 0 ? '#beb8b8'\n          : currentUser.userRole.name === 'ROLE_AD_SPECIALIST' && element?.formStatus==='LOCKED' ? 'yellow' : ''))}\">\n          {{ element?.product?.description | uppercase }} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"typeOfMedium\">\n        <th mat-header-cell *matHeaderCellDef> TYPE OF MEDIUM</th>\n        <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"viewApplication(element)\"\n        [ngStyle]=\"{'pointer-events': ((i !== 0 && currentUser.userRole.name === 'ROLE_ENCODER') ? 'none' : ''),\n          'background-color': ((currentUser.userRole.name === 'ROLE_ENCODER' && i > 0 ? '#beb8b8'\n          : currentUser.userRole.name === 'ROLE_AD_SPECIALIST' && element?.formStatus==='LOCKED' ? 'yellow' : ''))}\">\n          {{ element?.typeOfMedium | uppercase }}</td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"status\">\n        <th mat-header-cell *matHeaderCellDef > APPLICATION STATUS </th>\n        <td mat-cell *matCellDef=\"let element; let i = index\" class=\"\" (click)=\"viewApplication(element)\"\n          [ngStyle]=\"{'pointer-events': ((i !== 0 && currentUser.userRole.name === 'ROLE_ENCODER') ? 'none' : ''),\n        'background-color': ((currentUser.userRole.name === 'ROLE_ENCODER' && i > 0\n        ? '#beb8b8' : element?.internalStatus === 'S1_APPLICATION_REJECTED' || element?.internalStatus === 'S1_APPLICATION_CANCELLED' ? 'lightpink' : currentUser.userRole.name === 'ROLE_AD_SPECIALIST' && element?.formStatus==='LOCKED' ? 'yellow' : ''))}\">\n          {{ showStatus({'paymentStatus': element?.paymentStatus, 'externalStatus': element?.externalStatus, 'actionStatus': element?.actionStatus}) }} </td>\n      </ng-container>\n\n      <ng-continer matColumnDef=\"paymentStatus\">\n        <th mat-header-cell *matHeaderCellDef>PAYMENT STATUS</th>\n        <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"viewApplication(element)\"\n          [ngStyle]=\"{\n            'pointer-events': ((i !== 0 && currentUser.userRole.name === 'ROLE_ENCODER') ? 'none' : ''),\n            'background-color': ((currentUser.userRole.name === 'ROLE_ENCODER' && i > 0 ? '#beb8b8' : currentUser.userRole.name === 'ROLE_AD_SPECIALIST' && element?.formStatus==='LOCKED' ? 'yellow' : ''))\n          }\"\n        >\n          <div\n            class=\"payment-status-chip\"\n            [ngClass]=\"{\n              'payment-status-chip--paid': element?.paymentStatus === paymentStatus.PAID,\n              'payment-status-chip--unpaid': element?.paymentStatus === paymentStatus.UNPAID,\n              'payment-status-chip--for-approval': element?.paymentStatus === paymentStatus.FOR_APPROVAL,\n              'payment-status-chip--for-payment': element?.paymentStatus === paymentStatus.FOR_PAYMENT\n            }\"\n          >\n            {{formatTextPayment(element?.paymentStatus)}}\n          </div>\n        </td>\n      </ng-continer>\n\n      <ng-container matColumnDef=\"internalStatus\">\n        <th mat-header-cell *matHeaderCellDef > INTERNAL STATUS </th>\n        <td mat-cell *matCellDef=\"let element; let i = index\" class=\"\"\n          [ngStyle]=\"{'pointer-events': ((i !== 0 && currentUser.userRole.name === 'ROLE_ENCODER') ? 'none' : ''),\n        'background-color': ((currentUser.userRole.name === 'ROLE_ENCODER' && i > 0 ? '#beb8b8' : currentUser.userRole.name === 'ROLE_AD_SPECIALIST' && element?.formStatus==='LOCKED' ? 'yellow' : ''))}\">\n          {{ parseInternalStatus(element?.internalStatus, element?.actionBy) }}</td>\n      </ng-container>\n\n      <!-- For ASC Users only 'background-color': ((currentUser.userRole.name === 'ROLE_AD_SPECIALIST' && i > 0 && element?.formStatus==='LOCKED' ? 'yellow' : ''))-->\n      <!-- <ng-container matColumnDef=\"status\" *ngIf=\"currentUser.userRole.name!='ROLE_APPLICANT'\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> APPLICATION STATUS </th>\n        <td mat-cell *matCellDef=\"let element; let i = index\" class=\"applicantStatus\"\n          [ngStyle]=\"{'background-color':\n          ((element.submissionType=='ORIGINAL'&&element.decisionStatus!='INCOMPLETE') ? 'lightblue' :\n          ((element.submissionType=='FOR COMPLIANCE'||element.decisionStatus=='INCOMPLETE'||element.submissionType=='COMPLIANCE') ? '#ebd79b' :\n          (element.submissionType=='REVISION' ? '#8fcf8f' : '' )))}\"\n          (click)=\"viewApplication(element)\"> {{\n          element?.internalStatus?.replaceAll('_',' ') | uppercase }}</td>\n      </ng-container> -->\n\n      <ng-container matColumnDef=\"icon\">\n        <th mat-header-cell *matHeaderCellDef > </th>\n        <td mat-cell *matCellDef=\"let element\" class=\"icon\">\n          <!-- FOR APPLICANT -------------------------------------------------- -->\n          <button mat-raised-button class=\"button-red\" matTooltip=\"Cancel Application\" [disabled]=\"element.formStatus === 'LOCKED'\"\n            (click)=\"saveStatus('presentor','cancel', 'S1_APPLICATION_CANCELLED', element)\"\n            *ngIf=\"currentUser?.userRole?.name=='ROLE_APPLICANT'&&element?.internalStatus=='S1_APPLICATION_SUBMITTED'\">\n            <i class=\"material-icons color__white\">cancel</i>\n          </button>\n\n          <button mat-raised-button class=\"button-red\" matTooltip=\"Submit For Compliance\"\n            (click)=\"viewApplication(element)\"\n            *ngIf=\"(!element?.appliedS2 && !element?.hasOngoingCompliance && !element?.hasOngoingRevision && element?.decisionStatus=='INCOMPLETE' &&\n            !s1Application?.hasOngoingAppeal && element?.paymentStatus === 'PAID' && element?.releaseStatus === 'RELEASED' &&\n                    (element?.internalStatus=='S1_APPLICATION_REVIEWED' || element?.internalStatus=='COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER' || element?.internalStatus=='REVISION_SCREENED' ||\n                    element?.internalStatus=='S1_APPLICATION_REJECTED'))\">\n            <i class=\"material-icons\">warning_amber</i>\n          </button>\n\n          <button mat-raised-button class=\"button-red\" matTooltip=\"Submit Revision\"\n            (click)=\"viewApplication(element)\"\n            *ngIf=\"(element?.revisionNo !== 2 && currentUser?.userRole?.name=='ROLE_APPLICANT' && !element?.appliedS2 &&\n            element?.paymentStatus === 'PAID' && element?.releaseStatus === 'RELEASED' && !element?.hasOngoingCompliance &&\n            !element?.hasOngoingRevision && element?.submissionType === 'ORIGINAL' && !s1Application?.hasOngoingAppeal &&\n                    (\n                      (element?.internalStatus=='S1_APPLICATION_REVIEWED' || element?.internalStatus=='COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER') &&\n                      (element?.decisionStatus=='APPROVED' || element?.decisionStatus=='APPROVED W/ CAUTION')\n                    )\n                  )\">\n            <i class=\"material-icons\">task_alt</i>\n          </button>\n\n          <button mat-raised-button class=\"button-red\" matTooltip=\"Apply for S2 Application\"\n            *ngIf=\"currentUser?.userRole?.name=='ROLE_APPLICANT' && !element?.appliedS2 && !element?.hasOngoingRevision&& !element?.hasOngoingCompliance &&\n            element?.paymentStatus === 'PAID' && element?.releaseStatus === 'RELEASED' && !s1Application?.hasOngoingAppeal &&\n            ((element?.internalStatus=='S1_APPLICATION_REVIEWED'|| element?.internalStatus=='COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER'|| element?.internalStatus=='REVISION_SCREENED') &&\n             (element?.decisionStatus=='APPROVED'||element?.decisionStatus=='APPROVED W/ CAUTION'))\"\n            (click)=\"applyForS2(element)\">\n              <i class=\"material-icons color__white\"> queue_play_next</i>\n          </button>\n\n          <!-- FOR ASC USERS -------------------------------------------------- -->\n          <button mat-raised-button class=\"button-red\" matTooltip=\"Return to Ad Specialist\"\n            (click)=\"returnTo('RETURN', element)\"\n            *ngIf=\"currentUser?.userRole?.name=='ROLE_SCREENER'&&element?.internalStatus=='S1_APPLICATION_VERIFIED_BY_AD_SPE'\">\n            <i class=\"material-icons color__white\">assignment_return</i>\n          </button>\n          <button mat-raised-button class=\"button-red\" matTooltip=\"Return to Ad Specialist\"\n            (click)=\"returnTo('RETURN', element)\"\n            *ngIf=\"currentUser?.userRole?.name=='ROLE_SCREENER'&&element?.internalStatus=='COMPLIANCE_DOCUMENT_VERIFIED_BY_AD_SPE'\">\n            <i class=\"material-icons color__white\">assignment_return</i>\n          </button>\n          <button mat-raised-button class=\"button-red\" matTooltip=\"Return to Ad Specialist\"\n            (click)=\"returnTo('RETURN', element)\"\n            *ngIf=\"currentUser?.userRole?.name=='ROLE_SCREENER'&&element?.internalStatus=='REVISION_VERIFIED_BY_AD_SPE'\">\n            <i class=\"material-icons color__white\">assignment_return</i>\n          </button>\n\n          <button mat-raised-button class=\"button-red\" matTooltip=\"Return to Screener\"\n            (click)=\"returnTo('RETURN', element)\"\n            *ngIf=\"currentUser?.userRole?.name=='ROLE_REVIEWER'&&element.internalStatus=='S1_APPLICATION_SCREENED'\">\n            <i class=\"material-icons color__white\">assignment_return</i>\n          </button>\n\n          <!-- FOR ADSPECIALIST USERS -------------------------------------------------- -->\n          <button mat-raised-button class=\"button-red\" matTooltip=\"Unlock\"\n            (click)=\"unlockApplication('UNLOCK', element)\"\n            *ngIf=\"currentUser?.userRole?.name=='ROLE_AD_SPECIALIST' && element.formStatus == 'LOCKED' && displayedContent !== 'Returned Application'\">\n            <i class=\"material-icons color__white\">lock</i>\n          </button>\n          \n\n        </td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n    <div class=\"no-record\" [hidden]=\"dataSource && dataSource?.data?.length > 0\">\n      No record found.\n    </div>\n    <!-- <div style=\"float:right\"\n      *ngIf=\"currentUser?.userRole?.name!=='ROLE_ADMIN'&&currentUser?.userRole?.name!=='ROLE_SUPER_ADMIN'\">\n      <button mat-stroked-button color=\"primary\">Total Items: {{totalItems}}</button>\n      <button mat-stroked-button color=\"primary\">{{currentPage}} of {{totalPages==0 ? '1' : totalPages}}</button>\n      <button mat-stroked-button color=\"warn\" (click)=\"prevPage()\"\n        [disabled]=\"dataSource && dataSource?.data?.length === 0\">\n        < Prev</button> <button mat-stroked-button color=\"warn\" (click)=\"nextPage()\"\n          [disabled]=\"dataSource && dataSource?.data?.length === 0\">Next >\n      </button>\n    </div> -->\n    <!-- <mat-paginator [length]=\"resultsLength\"></mat-paginator> -->\n    <!-- <mat-paginator [pageSizeOptions]=\"[10, 20, 50]\" showFirstLastButtons> -->\n    <!-- </mat-paginator> -->\n    <mat-paginator [pageSize]=\"pageSize\" [pageIndex]=\"pageNo\" [length]=\"totalItems\"\n      [pageSizeOptions]=\"pageSizeOptions\" (page)=\"pageEvents($event)\">\n  </mat-paginator>\n  </div>\n  <br>\n</ng-template>\n\n\n<!-- TEMPLATE FOR MULTIPLE S1 APPLICATION LIST -->\n<ng-template #multipleS1ApplicationList>\n  <br>\n  <div class=\"row\" fxLayout fxLayoutAlign=\"center center\">\n    <mat-form-field class=\"col-md-9\" appearance=\"outline\">\n      <mat-label><i class=\"material-icons\">search</i> Search Applications</mat-label>\n      <input matInput type=\"text\" (keyup)=\"doFilterS1MultipleApplicationList($event.target.value)\">\n    </mat-form-field>\n\n    <div class=\"col\">\n      <div class=\"legend-content\">\n        <table class=\"legend-table\">\n          <tr>\n            <td>\n              <div class=\"legend-box legend-orange\"></div> FOR APPROVAL\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <div class=\"legend-box legend-green\"></div> APPROVED\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <div class=\"legend-box legend-red\"></div> DISAPPROVED\n            </td>\n          </tr>\n        </table>\n      </div>\n    </div>\n  </div>\n\n  <!-- <div class=\"row\">\n\n    <div class=\"col-md-2\">LEGEND:</div>\n    <div class=\"col-md-1 legend legend-orange\">FOR APPROVAL</div>\n    <div class=\"col-md-1 legend legend-green\">APPROVED</div>\n    <div class=\"col-md-1 legend legend-red\">DISAPPROVED</div>\n    <div class=\"col-md-1\" style=\"background-color:lightpink;border-radius:8px;width:20%;\">Rejected</div>\n  </div> -->\n\n  <br>\n\n  <div class=\"mat-elevation-z8 fields\">\n    <table mat-table [dataSource]=\"multipleApplicationDataSource\" matSort>\n\n      <ng-container matColumnDef=\"adTitle\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> AD TITLE </th>\n        <td mat-cell *matCellDef=\"let element\" (click)=\"viewMultipleApplication(element)\">\n          {{ element?.adTitle | uppercase }} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"typeOfApplication\">\n        <th mat-header-cell *matHeaderCellDef > TYPE OF APPLICATION </th>\n        <td mat-cell *matCellDef=\"let element\" (click)=\"viewMultipleApplication(element)\">\n          {{element?.applicationType?.description.replaceAll('_',' ') | uppercase }}</td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"companyName\">\n        <th mat-header-cell *matHeaderCellDef > COMPANY NAME </th>\n        <td mat-cell *matCellDef=\"let element\" (click)=\"viewMultipleApplication(element)\">\n          {{ element?.company?.companyName | uppercase }} </td>\n      </ng-container>\n\n      <!-- <ng-container matColumnDef=\"membersAffiliation\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> MEMBER'S AFFILIATION </th>\n        <td mat-cell *matCellDef=\"let element\" (click)=\"viewMultipleApplication(element)\">\n          {{ element?.membersAffiliation?.description | uppercase }} </td>\n      </ng-container> -->\n\n      <ng-container matColumnDef=\"brand\">\n        <th mat-header-cell *matHeaderCellDef > BRAND </th>\n        <td mat-cell *matCellDef=\"let element\" (click)=\"viewMultipleApplication(element)\">\n          {{ element?.brand?.description | uppercase }} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"product\">\n        <th mat-header-cell *matHeaderCellDef [hidden]=\"currentUser.userRole.name !== 'ROLE_AD_SPECIALIST'\" > PRODUCT </th>\n        <td mat-cell [hidden]=\"currentUser.userRole.name !== 'ROLE_AD_SPECIALIST'\" *matCellDef=\"let element\">\n          {{ element?.product?.description | uppercase }} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"status\">\n        <th mat-header-cell *matHeaderCellDef > APPLICATION STATUS </th>\n        <td mat-cell *matCellDef=\"let element\" class=\"applicantStatus\" [ngStyle]=\"{'background-color':\n        element?.status === 'FOR_APPROVAL' ? '#fca402' :\n        element?.status === 'APPROVED' ? '#8fcf8f' :\n        element?.status === 'DISAPPROVED' ? '#ff8a7b' : '' }\" (click)=\"viewMultipleApplication(element)\">\n          {{ element?.status?.replaceAll('_',' ') | uppercase }} </td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"multipleApplicationDisplayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: multipleApplicationDisplayedColumns;\"></tr>\n    </table>\n    <div class=\"no-record\" [hidden]=\"multipleApplicationDataSource && multipleApplicationDataSource?.data?.length > 0\">\n      No record found.\n    </div>\n    <!-- <mat-paginator [pageSizeOptions]=\"[10, 20, 50]\" showFirstLastButtons></mat-paginator> -->\n    <mat-paginator [pageSize]=\"pageSize\" [pageIndex]=\"pageNo\" [length]=\"multipleTotalItems\"\n      [pageSizeOptions]=\"pageSizeOptions\" (page)=\"pageEvents($event)\">\n    </mat-paginator>\n  </div>\n</ng-template>\n\n<!-- TEMPLATE FOR SPECIAL S1 APPLICATION LIST -->\n<ng-template #specialS1ApplicationList>\n  <b *ngIf=\"currentUser.userRole.name === 'ROLE_APPLICANT' || currentUser.userRole.name === 'ROLE_ENCODER'\"><b class=\"material-icons info-msg\">error_outline</b> This\n    page contain list of Request for Approval and allows you to create S1 application from approved request only.</b>\n  <b *ngIf=\"currentUser.userRole.name === 'ROLE_ADMIN' || currentUser?.userRole.name === 'ROLE_SUPER_ADMIN' \"><b\n      class=\"material-icons info-msg\">error_outline</b> This page\n    contain list of Request for Approval and allows you to approve or disapprove request.</b>\n  <br>\n  <div class=\"row\" fxLayout fxLayoutAlign=\"center center\">\n    <mat-form-field class=\"col-md-8\" appearance=\"outline\">\n      <mat-label><i class=\"material-icons\">search</i> Search Applications</mat-label>\n      <input matInput type=\"text\" (keyup)=\"doFilterS1MultipleApplicationList($event.target.value)\">\n    </mat-form-field>\n\n    <div class=\"col\">\n      <div class=\"legend-content\">\n        <table class=\"legend-table\">\n          <tr>\n            <td>\n              <div class=\"legend-box legend-orange\"></div> FOR APPROVAL\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <div class=\"legend-box legend-green\"></div> APPROVED\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <div class=\"legend-box legend-red\"></div> DISAPPROVED\n            </td>\n          </tr>\n          <!-- <tr>\n            <td>\n              <div class=\"legend-box legend-pink\"></div> REJECTED\n            </td>\n          </tr> -->\n        </table>\n      </div>\n    </div>\n  </div>\n\n  <!-- <div class=\"row\">\n\n    <div class=\"col-md-2\">LEGEND:</div>\n    <div class=\"col-md-1 legend legend-orange\">FOR APPROVAL</div>\n    <div class=\"col-md-1 legend legend-green\">APPROVED</div>\n    <div class=\"col-md-1 legend legend-red\">DISAPPROVED</div>\n    <div class=\"col-md-1\" style=\"background-color:lightpink;border-radius:8px;width:20%;\">Rejected</div>\n  </div> -->\n  <br>\n\n  <div class=\"mat-elevation-z8 fields\">\n    <table mat-table [dataSource]=\"specialApplicationDataSource\" matSort>\n\n      <ng-container matColumnDef=\"adTitle\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> AD TITLE </th>\n        <td mat-cell *matCellDef=\"let element\" (click)=\"viewSpecialApplication(element)\">\n          {{ element?.adTitle | uppercase }} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"typeOfApplication\">\n        <th mat-header-cell *matHeaderCellDef > TYPE OF APPLICATION </th>\n        <td mat-cell *matCellDef=\"let element\" (click)=\"viewSpecialApplication(element)\">\n          {{ element?.applicationType?.description.replaceAll('_',' ') | uppercase }} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"companyName\">\n        <th mat-header-cell *matHeaderCellDef > COMPANY NAME </th>\n        <td mat-cell *matCellDef=\"let element\" (click)=\"viewSpecialApplication(element)\">\n          {{ element?.company?.companyName | uppercase }} </td>\n      </ng-container>\n\n      <!-- <ng-container matColumnDef=\"membersAffiliation\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> MEMBER'S AFFILIATION </th>\n        <td mat-cell *matCellDef=\"let element\" (click)=\"viewSpecialApplication(element)\">\n          {{ element?.membersAffiliation?.description | uppercase }} </td>\n      </ng-container> -->\n\n      <ng-container matColumnDef=\"brand\">\n        <th mat-header-cell *matHeaderCellDef > BRAND </th>\n        <td mat-cell *matCellDef=\"let element\" (click)=\"viewSpecialApplication(element)\">\n          {{ element?.brand?.description | uppercase }} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"status\">\n        <th mat-header-cell *matHeaderCellDef> APPLICATION STATUS </th>\n        <td mat-cell *matCellDef=\"let element\" class=\"applicantStatus\" [ngStyle]=\"{'background-color':\n        element?.status === 'FOR_APPROVAL' ? '#fca402' :\n        element?.status === 'APPROVED' ? '#8fcf8f' :\n        element?.status === 'DISAPPROVED' ? '#ff8a7b' : '' }\" (click)=\"viewSpecialApplication(element)\">\n          {{ element?.status?.replaceAll('_',' ') | uppercase }} </td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"specialApplicationDisplayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: specialApplicationDisplayedColumns;\"></tr>\n    </table>\n    <div class=\"no-record\" [hidden]=\"specialApplicationDataSource && specialApplicationDataSource?.data?.length > 0\">\n      No record found.\n    </div>\n    <!-- <mat-paginator [pageSizeOptions]=\"[10, 20, 50]\" showFirstLastButtons></mat-paginator> -->\n    <mat-paginator [pageSize]=\"pageSize\" [pageIndex]=\"pageNo\" [length]=\"specialTotalItems\"\n      [pageSizeOptions]=\"pageSizeOptions\" (page)=\"pageEvents($event)\">\n    </mat-paginator>\n  </div>\n</ng-template>\n\n<!-- TEMPLATE FOR ASSIGNED TO SCREENER S1 APPLICATION LIST -->\n<ng-template #assignedToScreenerS1ApplicationList>\n  <div *ngIf=\"viewApplicationType === 'assigned-applications'\">\n    <b><b class=\"material-icons info-msg\">error_outline</b> This page allows you to view or retrieve application to\n      re-assign only.</b>\n    <br>\n    <div class=\"row\" fxLayout fxLayoutAlign=\"center center\">\n      <mat-form-field class=\"col-md-8\" appearance=\"outline\">\n        <mat-label><i class=\"material-icons\">search</i> Search Applications</mat-label>\n        <input matInput type=\"text\" (keyup)=\"doFilterAssignedS1ApplicationList($event.target.value)\">\n      </mat-form-field>\n\n      <div class=\"col\">\n        <div class=\"legend-content\">\n          <table class=\"legend-table\">\n            <tr>\n              <td>\n                <div class=\"legend-box legend-blue\"></div> ORIGINAL\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <div class=\"legend-box legend-green\"></div> REVISION\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <div class=\"legend-box legend-orange\"></div> FOR COMPLIANCE\n              </td>\n            </tr>\n          </table>\n        </div>\n      </div>\n    </div>\n\n    <!-- <div class=\"row\">\n\n    <div class=\"col-md-2\">LEGEND:</div>\n    <div class=\"col-md-1 legend legend-blue\">ORIGINAL</div>\n    <div class=\"col-md-1 legend legend-green\">REVISION</div>\n    <div class=\"col-md-1 legend legend-orange\">FOR COMPLIANCE</div>\n    <div class=\"col-md-1\" style=\"background-color:lightpink;border-radius:8px;width:20%;\">Rejected</div>\n  </div> -->\n    <br>\n\n    <div class=\"mat-elevation-z8 fields\">\n      <table mat-table [dataSource]=\"assignedApplicationDataSource\" matSort>\n\n        <ng-container matColumnDef=\"referenceCode\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> REFERENCE CODE </th>\n          <td mat-cell *matCellDef=\"let element; let i = index\" [ngStyle]=\"{'background-color':\n        (((element.submissionType=='ORIGINAL'&&element.decisionStatus!='INCOMPLETE') || element.decisionStatus=='INCOMPLETE') ? 'lightblue' :\n        ((element.submissionType=='FOR COMPLIANCE'||element.submissionType=='COMPLIANCE') ? '#ebd79b' :\n        (element.submissionType=='REVISION' ? '#8fcf8f' : '' )))}\">\n            {{ element?.internalStatus=='S1_APPLICATION_REJECTED' ? element?.referenceCodeRejected :\n            element?.referenceCode | uppercase}}</td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"adTitle\">\n          <th mat-header-cell *matHeaderCellDef > AD TITLE </th>\n          <td mat-cell *matCellDef=\"let element\">\n            {{ element?.adTitle.replaceAll('_',' ') | uppercase }} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"typeOfApplication\">\n          <th mat-header-cell *matHeaderCellDef > TYPE OF APPLICATION </th>\n          <td mat-cell *matCellDef=\"let element\">\n            {{element?.formType.replaceAll('_',' ') | uppercase}} - {{\n            element?.applicationType?.description | uppercase }}</td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"companyName\">\n          <th mat-header-cell *matHeaderCellDef > COMPANY NAME </th>\n          <td mat-cell *matCellDef=\"let element\">\n            {{ element?.company?.companyName | uppercase }} </td>\n        </ng-container>\n\n        <!-- <ng-container matColumnDef=\"membersAffiliation\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> MEMBER'S AFFILIATION </th>\n          <td mat-cell *matCellDef=\"let element\">\n            {{ element?.membersAffiliation?.description | uppercase }} </td>\n        </ng-container> -->\n\n        <ng-container matColumnDef=\"brand\">\n          <th mat-header-cell *matHeaderCellDef > BRAND </th>\n          <td mat-cell *matCellDef=\"let element\">\n            {{ element?.brand?.description | uppercase }} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"product\">\n          <th mat-header-cell *matHeaderCellDef [hidden]=\"currentUser.userRole.name !== 'ROLE_AD_SPECIALIST'\" > PRODUCT </th>\n          <td mat-cell [hidden]=\"currentUser.userRole.name !== 'ROLE_AD_SPECIALIST'\" *matCellDef=\"let element\">\n            {{ element?.product?.description | uppercase }} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"status\">\n          <th mat-header-cell *matHeaderCellDef > APPLICATION STATUS </th>\n          <td mat-cell *matCellDef=\"let element; let i = index\" class=\"applicantStatus\"\n            [ngStyle]=\"{'background-color': element?.internalStatus === 'S1_APPLICATION_REJECTED' ? 'lightpink' : '' }\">\n            {{\n            element?.externalStatus?.replaceAll('_',' ') | uppercase }}</td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"internalStatus\" *ngIf=\"currentUser.userRole.name !== 'ROLE_APPLICANT'\">\n          <th mat-header-cell *matHeaderCellDef > INTERNAL STATUS </th>\n          <td mat-cell *matCellDef=\"let element; let i = index\" class=\"applicantStatus\" [ngStyle]=\"{'pointer-events': ((i !== 0 && (currentUser.userRole.name !== 'ROLE_ADMIN' && currentUser.userRole.name !== 'ROLE_AD_SPECIALIST' && currentUser.userRole.name !== 'ROLE_SUPER_ADMIN' && currentUser.userRole.name !== 'ROLE_APPLICANT')) ? 'none' : ''),\n            'background-color': element?.internalStatus === 'S1_APPLICATION_REJECTED' ? 'lightpink' : '' }\" >\n            {{ element?.internalStatus?.replaceAll('_',' ') | uppercase }} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"icon\">\n          <th mat-header-cell *matHeaderCellDef > </th>\n          <td mat-cell *matCellDef=\"let element\" class=\"icon\">\n            <button mat-raised-button class=\"button-red\" matTooltip=\"Re-assignment\" (click)=\"viewApplication(element)\"\n              *ngIf=\"\n          (currentUser?.userRole?.name=='ROLE_AD_SPECIALIST'&&element?.internalStatus=='S1_APPLICATION_VERIFIED_BY_AD_SPE')\n          ||(currentUser?.userRole?.name=='ROLE_AD_SPECIALIST'&&element?.internalStatus=='COMPLIANCE_DOCUMENT_VERIFIED_BY_AD_SPE')\n          ||(currentUser?.userRole?.name=='ROLE_AD_SPECIALIST'&&element?.internalStatus=='REVISION_VERIFIED_BY_AD_SPE')\n          ||(currentUser?.userRole?.name=='ROLE_SCREENER'&&element.internalStatus=='S1_APPLICATION_SCREENED')\">\n              <i class=\"material-icons color__white\">assignment_return</i><span> Re-assignment </span>\n            </button>\n\n          </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"assignedApplicationDisplayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: assignedApplicationDisplayedColumns;\"></tr>\n      </table>\n      <div class=\"no-record\"\n        [hidden]=\"assignedApplicationDataSource && assignedApplicationDataSource?.data?.length > 0\">\n        No record found.\n      </div>\n      <mat-paginator [pageSizeOptions]=\"[10, 20, 30]\" showFirstLastButtons></mat-paginator>\n    </div>\n  </div>\n</ng-template>\n\n<!-- TEMPLATE \"FOR RELEASE\" APPLICATION LIST -->\n<ng-template #forReleaseApplicationList>\n  <div *ngIf=\"viewApplicationType === 'for-release' || viewApplicationType === 'released'\">\n    <!-- <b><b class=\"material-icons info-msg\">error_outline</b> This page allows you to resend decision form.</b> -->\n    <br>\n    <div class=\"row\" fxLayout fxLayoutAlign=\"center center\">\n      <mat-form-field class=\"col-md-8\" appearance=\"outline\">\n        <mat-label><i class=\"material-icons\">search</i> Search Applications</mat-label>\n        <input matInput type=\"text\" (keyup)=\"doFilterForReleaseApplicationList($event.target.value)\">\n      </mat-form-field>\n      <br>\n\n      <div class=\"mat-elevation-z8 fields\">\n        <table mat-table [dataSource]=\"forReleaseApplicationDataSource\" matSort>\n\n          <ng-container matColumnDef=\"referenceCode\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> REFERENCE CODE </th>\n            <td mat-cell *matCellDef=\"let element; let i = index\" [ngStyle]=\"{'background-color':\n          (((element.submissionType=='ORIGINAL'&&element.decisionStatus!='INCOMPLETE') || element.decisionStatus=='INCOMPLETE') ? 'lightblue' :\n          ((element.submissionType=='FOR COMPLIANCE'||element.submissionType=='COMPLIANCE') ? '#ebd79b' :\n          (element.submissionType=='REVISION' ? '#8fcf8f' : '' )))}\"\n          (click)=\"viewApplication(element)\">\n              {{ element?.internalStatus=='S1_APPLICATION_REJECTED' ? element?.referenceCodeRejected :\n              element?.referenceCode | uppercase}}</td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"adTitle\">\n            <th mat-header-cell *matHeaderCellDef > AD TITLE </th>\n            <td mat-cell *matCellDef=\"let element\" (click)=\"viewApplication(element)\">\n              {{ element?.adTitle.replaceAll('_',' ') | uppercase }} </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"typeOfApplication\">\n            <th mat-header-cell *matHeaderCellDef > TYPE OF APPLICATION </th>\n            <td mat-cell *matCellDef=\"let element\" (click)=\"viewApplication(element)\">\n              {{element?.formType.replaceAll('_',' ') | uppercase}} - {{\n              element?.applicationType?.description | uppercase }}</td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"companyName\">\n            <th mat-header-cell *matHeaderCellDef > COMPANY NAME </th>\n            <td mat-cell *matCellDef=\"let element\" (click)=\"viewApplication(element)\">\n              {{ element?.company?.companyName | uppercase }} </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"brand\">\n            <th mat-header-cell *matHeaderCellDef > BRAND </th>\n            <td mat-cell *matCellDef=\"let element\" (click)=\"viewApplication(element)\">\n              {{ element?.brand?.description | uppercase }} </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"product\">\n            <th mat-header-cell *matHeaderCellDef [hidden]=\"currentUser.userRole.name !== 'ROLE_AD_SPECIALIST'\" > PRODUCT </th>\n            <td mat-cell [hidden]=\"currentUser.userRole.name !== 'ROLE_AD_SPECIALIST'\" *matCellDef=\"let element\">\n              {{ element?.product?.description | uppercase }} </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"typeOfMedium\">\n            <th mat-header-cell *matHeaderCellDef > TYPE OF MEDIUM</th>\n            <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"viewApplication(element)\">\n              {{ element?.typeOfMedium | uppercase }}</td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"status\">\n            <th mat-header-cell *matHeaderCellDef > APPLICATION STATUS </th>\n            <td mat-cell *matCellDef=\"let element; let i = index\" class=\"applicantStatus\" (click)=\"viewApplication(element)\"\n              [ngStyle]=\"{'background-color': element?.internalStatus === 'S1_APPLICATION_REJECTED' ? 'lightpink' : '' }\">\n              {{ element?.externalStatus?.replaceAll('_',' ') | uppercase }}</td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"internalStatus\" *ngIf=\"currentUser.userRole.name !== 'ROLE_APPLICANT'\">\n            <th mat-header-cell *matHeaderCellDef > INTERNAL STATUS </th>\n            <td mat-cell *matCellDef=\"let element; let i = index\" class=\"applicantStatus\" [ngStyle]=\"{'pointer-events': ((i !== 0 && (currentUser.userRole.name !== 'ROLE_ADMIN' && currentUser.userRole.name !== 'ROLE_AD_SPECIALIST' && currentUser.userRole.name !== 'ROLE_SUPER_ADMIN' && currentUser.userRole.name !== 'ROLE_APPLICANT')) ? 'none' : ''),\n              'background-color': element?.internalStatus === 'S1_APPLICATION_REJECTED' ? 'lightpink' : '' }\"\n              (click)=\"viewApplication(element)\">\n              {{ element?.internalStatus?.replaceAll('_',' ') | uppercase }} </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"decisionStatus\" *ngIf=\"currentUser.userRole.name !== 'ROLE_APPLICANT'\">\n            <th mat-header-cell *matHeaderCellDef > DECISION STATUS </th>\n            <td mat-cell *matCellDef=\"let element; let i = index\" class=\"applicantStatus\" [ngStyle]=\"{'pointer-events': ((i !== 0 && (currentUser.userRole.name !== 'ROLE_ADMIN' && currentUser.userRole.name !== 'ROLE_AD_SPECIALIST' && currentUser.userRole.name !== 'ROLE_SUPER_ADMIN' && currentUser.userRole.name !== 'ROLE_APPLICANT')) ? 'none' : ''),\n              'background-color': element?.internalStatus === 'S1_APPLICATION_REJECTED' ? 'lightpink' : '' }\"\n              (click)=\"viewApplication(element)\">\n              {{ element?.decisionStatus?.replaceAll('_',' ') | uppercase }} </td>\n          </ng-container>\n\n\n          <tr mat-header-row *matHeaderRowDef=\"forReleaseApplicationDisplayedColumns\"></tr>\n          <tr mat-row *matRowDef=\"let row; columns: forReleaseApplicationDisplayedColumns;\"></tr>\n        </table>\n        <div class=\"no-record\"\n          [hidden]=\"forReleaseApplicationDataSource && forReleaseApplicationDataSource?.data?.length > 0 \">\n          No record found.\n        </div>\n        <!-- <mat-paginator [pageSizeOptions]=\"[10, 20, 30]\" showFirstLastButtons></mat-paginator> -->\n        <mat-paginator [pageSize]=\"pageSize\" [pageIndex]=\"pageNo\" [length]=\"forReleaseTotalItems\"\n          [pageSizeOptions]=\"pageSizeOptions\" (page)=\"pageEvents($event)\">\n        </mat-paginator>\n      </div>\n    </div>\n  </div>\n\n</ng-template>\n","<div class=\"list-dialog-content\">\n    <div class=\"row head-icon\">\n      <i class=\"material-icons\">live_help</i>\n      <p>{{s2Application.applicationForm.referenceCode}}</p>\n      <p class=\"sub-title\">Reference Code</p>\n      <p class=\"warning-msg\" *ngIf=\"!typeOfExecution?.applyForToa && typeOfExecution?.live\">This application is valid for S1 only.</p>\n    </div>\n\n    <div class=\"row\">\n        <div class=\"col-md-4\">\n            <button mat-raised-button class=\"button-red action-button\" (click)=\"proceedToS2(true)\"\n            [disabled]=\"typeOfExecution?.live\">\n                <i class=\"material-icons color__white\">summarize</i> PROCEED TO S2 APPLICATION\n            </button>\n        </div>\n        <div class=\"col-md-4\">\n            <button mat-raised-button class=\"button-red action-button\" (click)=\"proceedToS2(false)\"\n            [disabled]=\"!typeOfExecution?.applyForToa\">\n                <i class=\"material-icons color__white\">done_all</i> APPLY FOR TOA\n            </button>\n        </div>\n        <div class=\"col-md-4\">\n            <button mat-raised-button class=\"button-red action-button\" (click)=\"requestForClearingAndClearance()\"\n            [disabled]=\"s1Application?.applicationType?.description == 'Special Screening and Clearing'||typeOfExecution?.live\">\n                <i class=\"material-icons color__white\">sticky_note_2</i> REQUEST FOR SPECIAL CLEARING APPROVAL\n            </button>\n        </div>\n    </div><br>\n    <!-- <div class=\"row\">\n        <div class=\" col-md-12 form-check\">\n            <input class=\"form-check-input\" type=\"checkbox\" (change)=\"hasToa($event.target.checked)\" value=\"\" id=\"flexCheckDefault\">\n            <label class=\"form-check-label\" for=\"flexCheckDefault\">\n              Apply for TOA\n            </label>\n          </div>\n    </div> -->\n</div>\n\n<!-- *ngIf=\"s2Application?.applicationForm?.applicationType?.description === 'SPECIAL SCREENING AND CLEARING'\" -->\n\n","export * from './affiliation/affiliation.component';\nexport * from './brands/brands.component';\nexport * from './payment-type/payment-type.component';\nexport * from './type-of-document/type-of-document.component';\nexport * from './type-of-medium/type-of-medium.component';\nexport * from './type-of-reason/type-of-reason.component';\nexport * from './category/category.component';\nexport * from './product/product.component';\nexport * from './asc-rates/asc-rates.component';\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { CompanyRoutingModule } from './company-routing.module';;\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    CompanyRoutingModule,\n  ]\n})\nexport class CompanyModule { }\n","import { UserAccount } from './user-account.model';\n\nexport class CopyClaims {\n    id: number;\n    description: string;\n    role: string;\n    appFormReference: string;\n    actionDate: Date;\n    actionBy: UserAccount;\n}\n","import { MultiMediaMovingConstant } from './../../../../core/models/media-models/multimedia-moving.const';\nimport { CommonServices } from 'app/core/services/common-services.service';\nimport { Component, OnInit, Input, ViewChild, OnChanges, AfterViewChecked, ChangeDetectorRef, Output, EventEmitter, ChangeDetectionStrategy, SimpleChanges } from '@angular/core';\nimport { ApiService, SweetAlertService, DataStorageService, FileStorageService, ValidateFieldService } from '@services';\nimport { ENDPOINTS, ATTACHMENT_TYPE, TYPE_OF_MEDIUM, SPECIAL_APPLICATION, APPLICATION_STATUSES, APPLICATION_STAGE, USER_ROLES, MULTIMEDIA_STATIC } from '@shared';\nimport { MatTableDataSource, MatTable } from '@angular/material/table';\nimport {\n  S1Application,\n  S2Application,\n  TypeOfDocument,\n  TypeOfMedium,\n  SupportingDocument,\n  ApplicationSingleMedia,\n  ApplicationRequest,\n  ApplicationMultimedia,\n  ApplicationMultimediaMovingDTO,\n  ApplicationMultimediaStaticDTO,\n} from '@models';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { MatSort } from '@angular/material/sort';\nimport { MatPaginator } from '@angular/material/paginator';\nimport Swal from 'sweetalert2';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { MultiMediaStaticConst } from 'app/core/models/media-models/mulstimedia-static.const';\n\n@Component({\n  selector: 'app-material-information',\n  templateUrl: './material-information.component.html',\n  styleUrls: ['./material-information.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MaterialInformationComponent implements OnInit, OnChanges, AfterViewChecked {\n  @ViewChild(MatPaginator, { static: false }) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: false }) sort: MatSort;\n  @ViewChild(MatTable, { static: false }) table: MatTable<S1Application>;\n  // @ViewChild(AttachmentDocumentComponent, { static: false }) materialAttachmentDocument: AttachmentDocumentComponent;\n\n  @Output() checkSingleMediaChangesFunction: EventEmitter<any> = new EventEmitter();\n  @Output() checkMultimediaChangesFunction: EventEmitter<any> = new EventEmitter();\n\n  // @ViewChild('mainFile')\n  // myMainFile: ElementRef;\n  // @ViewChild('mainInput')\n  // myMainInput: ElementRef;\n  // @ViewChild('supportiveFile')\n  // mySupportiveFile: ElementRef;\n  // @ViewChild('revisionLetterFile')\n  // myRevisionLetterFile: ElementRef;\n\n  @Input() s1Application = new S1Application();\n  @Input() s2Application = new S2Application();\n  @Input() originalAttachmentDocuments = [];\n  @Input() revisionAttachmentDocuments = [];\n  @Input() complianceAttachmentDocuments = [];\n  @Input() revisionLetterAttachment: any;\n  @Input() newMultimediaList = [];\n  @Input() typeOfMediumList = []; // single and multimedia\n  @Input() supportiveDocumentList = [];\n  @Input() applicationSingleMedia = new ApplicationSingleMedia();\n  @Input() isAscUser = false;\n  @Input() isDisableFieldOnUpdate = false;\n\n  dataSource: MatTableDataSource<S1Application>;\n  displayedColumns: string[];\n  todayDate: Date = new Date();\n  materialInformationForm: FormGroup;\n\n  executionList = [];\n  dialectList = [];\n  newSupportiveDocumentList = [];\n  typeOfDocumentList = [];\n  specialApplicationType = [...SPECIAL_APPLICATION];\n\n  setMultimediaList = [];\n  @Input() selectedMultimediaList = [];\n  selectedMultimediaStringList = [];\n  @Input() toDeleteMultimediaList = [];\n  // singleMedia = new SingleMedia();\n  typeOfMedium = new TypeOfMedium();\n  typeOfDocument = new TypeOfDocument();\n  // attachmentDocument = new AttachmentDocument();\n  supportingDocument = new SupportingDocument();\n  applicationMultimedia = new ApplicationMultimedia();\n  applicationRequest = new ApplicationRequest();\n  newApplicationSingleMedia = new ApplicationSingleMedia();\n\n  selectMultimedia = false;\n  // showMainDocumentUploadButton = false;\n  // showMainDocumentViewButton = false;\n  // showMainDocumentDownloadButton = false;\n  // showSupportDocumentFrame = false;\n  // showMainDocumentRemoveButton = false;\n  // showRevisionLetterViewButton = false;\n\n  previewMainDocument = false;\n  disableSubmitButtonByMedia = false;\n\n  showSupportiveDocumentUploadButton = false;\n  showSupportiveDocumentViewButton = false;\n  showSupportiveDocumentDownloadButton = false;\n  showRevisionLetterDownloadButton = false;\n  previewSupportiveDocument = false;\n\n  attachmentSize: number;\n  safeURLMainDoc: any;\n  safeURLSupportDoc: any;\n  currentUser: any;\n  applicationStage: string;\n  safeURLRevisionLetter: any;\n  supportingDocumentIndex: any;\n  showRevisionLetterUploadButton = false;\n  isDigitalStatic = false;\n  isUpdate = false;\n\n  // validations\n  hiddenValidation: string;\n  readonlyValidation: string;\n  disabledValidation: string;\n\n  attachmentType = ATTACHMENT_TYPE.MAIN;\n  selectedFiles: FileList;\n  currentFileUpload: File;\n  progress: { percentage: number } = { percentage: 0 };\n  uploadedFileMain: any;\n  uploadedFileSupportive: any;\n  uploadedFileRevision: any;\n  mediaType = '';\n  labelMainDocument = 'MAIN DOCUMENT';\n  @Input() savedTypeOfMedium = '';\n  private ngUnsubscribe = new Subject();\n  selectedTypeOfMedium = 'SINGLE MEDIA';\n  @Input() multimediaDTO: any = {};\n  multimediaMovingDTO = new ApplicationMultimediaMovingDTO();\n  multimediaStaticDTO = new ApplicationMultimediaStaticDTO();\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private apiService: ApiService,\n    private sweetAlertService: SweetAlertService,\n    private sanitizer: DomSanitizer,\n    public dataStorage: DataStorageService,\n    private fileStorageService: FileStorageService,\n    private cd: ChangeDetectorRef,\n    public validateFieldService: ValidateFieldService,\n    private spinner: NgxSpinnerService,\n    public util: CommonServices\n  ) { }\n\n  ngOnInit(): void {\n    this.currentUser = this.dataStorage.getUserAccount();\n    if (this.currentUser.userRole.name === USER_ROLES.ROLE_AD_SPECIALIST) {\n      this.displayedColumns = ['typeOfDocument', 'input', 'variant', 'expiresOn', 'basedOn', 'remarks', 'action'];\n    } else {\n      this.displayedColumns = ['typeOfDocument', 'input', 'variant', 'expiresOn', 'basedOn', 'remarks'];\n    }\n\n    this.setFormValidator();\n    this.getTypeOfDocumentList();\n\n    if (this.dataStorage.getSpecialS1Application()) {\n      this.applicationRequest = this.dataStorage.getSpecialS1Application();\n    }\n    this.emitSingleMediaChanges();\n    this.initializeMultimediaMovingObj();\n    this.initializeMultimediaStaticObj();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes) {\n      if (this.multimediaDTO) {\n        if (this.s1Application.refTypeOfMedium === TYPE_OF_MEDIUM.MULTIMEDIA_MOVING) this.multimediaMovingDTO = this.multimediaDTO;\n        if (this.s1Application.refTypeOfMedium === TYPE_OF_MEDIUM.MULTIMEDIA_STATIC) this.multimediaStaticDTO = this.multimediaDTO;\n      }\n    }\n    \n    if (this.s1Application.refTypeOfMedium === undefined) {\n      this.s1Application.refTypeOfMedium = TYPE_OF_MEDIUM.SINGLE_MEDIA;\n      this.getTypeOfMedium(TYPE_OF_MEDIUM.SINGLE_MEDIA);\n    } else if (!this.applicationSingleMedia || this.s1Application.refTypeOfMedium?.includes('MULTIMEDIA')) {\n      this.getTypeOfMedium(this.s1Application.refTypeOfMedium);\n    } else if (this.applicationSingleMedia) {\n      if (this.applicationSingleMedia.mediumExecution) {\n        this.typeOfMedium = this.applicationSingleMedia.mediumExecution.typeOfMedium;\n        if (this.typeOfMedium.id) {\n          this.getExecutionDialectList();\n        }\n      }\n    }\n  }\n\n  ngAfterViewChecked() {\n    this.cd.detectChanges();\n  }\n\n  setFormValidator() {\n    this.materialInformationForm = this.formBuilder.group({\n      adTitle: ['', Validators.required],\n      referenceCode: [''],\n      previousRefCode: [''],\n      tagLine: [''],\n      refTypeOfMedium: [''],\n      appFormReference: [''],\n\n      // this.attachmentDocumentForm = this.formBuilder.group({\n      attachmentReference: [''],\n      hasNoSupportingDocs: [''],\n      typeOfDocument: [''],\n      basedOn: [''],\n      variant: [''],\n      dateOfLaunch: [''],\n      expiresOn: [''],\n      remarks: [''],\n      input: [''],\n\n      typeOfMedium: [''],\n      mediumExecution: [''],\n      language: [''],\n      dialect: [''],\n      others: [''],\n      sizeLength: ['0'],\n      width: ['0'],\n\n      multimediaLength: [''],\n      multimediaSize: [''],\n      applicationSingleMedia: [''],\n      applicationMultimediaStatic: [''],\n      applicationMultimediaMoving: [''],\n\n    });\n  }\n\n  getTypeOfMedium(type) {\n    this.typeOfMediumList = [];\n    let endpoint = '';\n    if (type === TYPE_OF_MEDIUM.SINGLE_MEDIA) {\n      this.applicationSingleMedia = new ApplicationSingleMedia();\n      endpoint = ENDPOINTS.typeOfMediumSingleMedia;\n      this.selectMultimedia = false;\n      this.s1Application.refTypeOfMedium = TYPE_OF_MEDIUM.SINGLE_MEDIA;\n      this.selectedTypeOfMedium = TYPE_OF_MEDIUM.SINGLE_MEDIA;\n    } else if (type === TYPE_OF_MEDIUM.MULTIMEDIA_MOVING) {\n      endpoint = ENDPOINTS.typeOfMediumMultiMediaMoving;\n      this.selectMultimedia = true;\n      this.s1Application.refTypeOfMedium = TYPE_OF_MEDIUM.MULTIMEDIA_MOVING;\n      this.initializeMultimediaStaticObj();\n      this.selectedTypeOfMedium = TYPE_OF_MEDIUM.MULTIMEDIA;\n    } else {\n      endpoint = ENDPOINTS.typeOfMediumMultiMediaStatic;\n      this.selectMultimedia = true;\n      this.s1Application.refTypeOfMedium = TYPE_OF_MEDIUM.MULTIMEDIA_STATIC;\n      this.initializeMultimediaMovingObj();\n      this.selectedTypeOfMedium = TYPE_OF_MEDIUM.MULTIMEDIA;\n    }\n\n    // console.log('Selected: ', this.selectedTypeOfMedium)\n    this.apiService.findAll(endpoint).subscribe((res: any) => {\n      this.typeOfMediumList = res.responseData.data;\n      if (type === TYPE_OF_MEDIUM.SINGLE_MEDIA) {\n        this.typeOfMedium = this.typeOfMediumList.filter(medium => medium.description === this.savedTypeOfMedium)[0];\n      }\n\n      // if (this.selectedMultimediaList.length > 0) {\n      //   this.selectedMultimediaStringList = this.selectedMultimediaList.map(mappedList => mappedList?.typeOfMedium?.description);\n      //   this.emitMultimediaChanges();\n      // }\n      // this.typeOfMediumList = this.typeOfMediumList.map((medium, index) => {\n      //   const sampleList = this.selectedMultimediaList.filter(filteredMedium => filteredMedium.typeOfMedium.id === medium.id);\n      //   if (sampleList.length) {\n      //     medium.sizeLength = sampleList[0].multimediaSizeLength;\n      //   } else {\n      //     medium.sizeLength = null;\n      //   }\n      //   return medium;\n      // });\n    }, (err: any) => {\n    });\n  }\n\n  resetValues() {\n    this.applicationSingleMedia.dialect = null;\n    this.applicationSingleMedia.language = null;\n    this.applicationSingleMedia.others = '';\n    this.applicationSingleMedia.sizeLength = '0';\n    this.applicationSingleMedia.amount = 0;\n    this.applicationSingleMedia.mediumExecution = null;\n    this.applicationSingleMedia.width = '0';\n  }\n\n  setSingleMedia(typeofMedium: any) {\n    this.resetValues();\n    this.typeOfMedium = typeofMedium;\n    this.labelMainDocument = this.typeOfMedium.typeOfMainDocument.typeOfMainDocument;\n    this.getExecutionDialectList();\n    this.emitSingleMediaChanges();\n  }\n\n  emitSingleMediaChanges() {\n    if (\n      (this.typeOfMedium?.executionEnable && !this.applicationSingleMedia.mediumExecution) ||\n      (this.typeOfMedium?.lengthEnable && !this.applicationSingleMedia.sizeLength) ||\n      (this.typeOfMedium?.sizeLengthEnable && !this.applicationSingleMedia.sizeLength) ||\n      ((!this.typeOfMedium?.id && !this.applicationSingleMedia.id) && !this.savedTypeOfMedium)\n    ) {\n      this.disableSubmitButtonByMedia = true;\n    } else {\n      this.disableSubmitButtonByMedia = false;\n    }\n\n    this.checkSingleMediaChangesFunction.emit();\n  }\n\n  // addMultimedia(obj: any, evt) {\n  //   if (evt.target.value) {\n  //     obj.sizeLength = evt.target.value;\n  //     const existingValue = this.newMultimediaList.filter(filteredList => filteredList === obj);\n  //     if (existingValue.length) {\n  //       existingValue[0] = obj;\n  //     } else {\n  //       this.newMultimediaList.push(obj);\n  //       this.selectedMultimediaList.push(obj);\n  //     }\n  //     if (obj?.id) {\n  //       this.toDeleteMultimediaList = this.toDeleteMultimediaList.filter(filtered => filtered.id !== obj?.id);\n  //     }\n  //   } else {\n  //     const deleteExisting = this.selectedMultimediaList.filter(filteredMedia => filteredMedia?.typeOfMedium?.id === obj?.id);\n  //     if (deleteExisting.length) {\n  //       this.toDeleteMultimediaList.push(deleteExisting[0]);\n  //     }\n\n  //     this.newMultimediaList = this.newMultimediaList.filter(filteredMultimedia => filteredMultimedia.id !== obj.id);\n  //     this.selectedMultimediaList = this.selectedMultimediaList.filter(filteredMultimedia => filteredMultimedia.id !== obj.id);\n  //   }\n  //   const toDeleteMultimediaSet = this.toDeleteMultimediaList.filter((item, i, ar) => ar.indexOf(item) === i);\n  //   this.toDeleteMultimediaList = toDeleteMultimediaSet;\n  //   this.emitMultimediaChanges();\n  // }\n\n  emitMultimediaChanges() {\n    this.disableSubmitButtonByMedia = false;\n    let data = {\n      type: this.s1Application.refTypeOfMedium,\n      data: this.s1Application.refTypeOfMedium === TYPE_OF_MEDIUM.MULTIMEDIA_MOVING ? this.multimediaMovingDTO : this.multimediaStaticDTO\n    }\n    this.checkMultimediaChangesFunction.emit(data);\n  }\n\n  getTypeOfDocumentList() {\n    this.apiService.findAll(ENDPOINTS.typeOfDocument).subscribe((res: any) => {\n      this.typeOfDocumentList = res.responseData.data;\n    }, (err: any) => {\n    });\n  }\n\n  setTypeOfDocument(type) {\n    this.typeOfDocument = type;\n  }\n\n  compareSingleMedia(value: any, selected: any): boolean {\n    if (value && selected) {\n      return value.description === selected.description;\n    }\n  }\n\n  compareMediumExecution(value: any, selected: any): boolean {\n    if (value && selected) {\n      return value.typeOfExecution.typeOfExecution === selected.typeOfExecution.typeOfExecution;\n    }\n  }\n\n  compareDialect(value: any, selected: any): boolean {\n    if (value && selected) {\n      return value.dialect === selected.dialect;\n    }\n  }\n\n  getExecutionDialectList() {\n    if (this.typeOfMedium.id) {\n      this.apiService.findAll(`${ENDPOINTS.typeOfExecutionsByMedium}${this.typeOfMedium.id}`).subscribe((res: any) => {\n        if (this.typeOfMedium.executionEnable) {\n          this.executionList = res.responseData.data;\n        } else {\n          if (res.responseData.data.length === 0) {\n            this.sweetAlertService.customErrorMessage('The selected type of medium has no execution.');\n          } else {\n            this.applicationSingleMedia.mediumExecution = res.responseData.data[0];\n          }\n        }\n        this.emitSingleMediaChanges();\n      }, (err: any) => {\n      });\n    }\n\n    this.apiService.findAll(ENDPOINTS.dialects).subscribe((res: any) => {\n      this.dialectList = res.responseData.data;\n    }, (err: any) => {\n    });\n  }\n\n  removeTypeOfDocument(index) {\n    const keepValues = [];\n\n    Swal.fire({\n      text: 'Are you sure you want to delete this TYPE OF DOCUMENT?',\n      icon: 'question',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Confirm'\n    }).then((result) => {\n      if (result.value) {\n        this.supportiveDocumentList.forEach((element, key) => {\n          if (key !== index) {\n            keepValues.push(element);\n          }\n        });\n        this.supportiveDocumentList = keepValues;\n        this.dataSource.data = keepValues;\n      }\n    });\n\n  }\n\n  addSupportiveDocument(supportingDocument) {\n\n    const checkIfDocumentAlreadyExist = this.supportiveDocumentList.filter(data =>\n      data.typeOfDocument.id === supportingDocument.typeOfDocument.id);\n\n    // if (checkIfDocumentAlreadyExist.length === 1) {\n    //   this.sweetAlertService.customErrorMessage('Type of Document that is being added is already on the list.', 5);\n    // } else {\n    this.newSupportiveDocumentList.push(supportingDocument);\n    this.supportiveDocumentList.push(supportingDocument);\n    this.dataSource = new MatTableDataSource<S1Application>(this.supportiveDocumentList);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n    // }\n    this.supportingDocument = new SupportingDocument();\n    this.typeOfDocument = new TypeOfDocument();\n  }\n\n  getTypeOfDocument(res, index) {\n    this.isUpdate = true;\n    this.apiService.findById(ENDPOINTS.typeOfDocument, res.typeOfDocument.id).subscribe((data: any) => {\n      if (data) {\n        this.typeOfDocument = data.responseData.data;\n      }\n    });\n    this.supportingDocument.typeOfDocument = res.typeOfDocument;\n    if (res.typeOfDocument.description === 'DOH-FDA PERMIT') {\n      this.typeOfDocument.expiresOnEnable = true;\n      this.supportingDocument.expiresOn = res.expiresOn;\n      this.supportingDocumentIndex = index;\n    } else if (res.typeOfDocument.description === 'NMIS') {\n      this.typeOfDocument.expiresOnEnable = false;\n      this.supportingDocument.expiresOn = null;\n      this.supportingDocumentIndex = index;\n    } else if (res.typeOfDocument.description === 'DOLE PERMIT') {\n      this.typeOfDocument.expiresOnEnable = false;\n      this.supportingDocument.expiresOn = null;\n      this.supportingDocumentIndex = index;\n    }\n  }\n\n  modifyTypeOfDocument(res, id) {\n    const checkIfDocumentAlreadyExist = this.supportiveDocumentList.filter(data => data.typeOfDocument.id === res.typeOfDocument.id);\n    //  if(checkIfDocumentAlreadyExist.length === 1){\n    //   console.log(\"ALREADY EXIST\");\n    //  }else{\n    //   console.log(\"SUCCESSFULLY UPDATE\");\n    //   this.supportiveDocumentList.forEach((element, key) => {\n    //     if (key === id) {\n    //       this.supportiveDocumentList[key] = res;\n    //     }\n    //   });\n    //  }\n    // console.log(\"count\", checkIfDocumentAlreadyExist);\n    // if (checkIfDocumentAlreadyExist.length === 1) {\n    //   this.isUpdate = false;\n    //   this.supportiveDocumentList.forEach((element, key) => {\n    //     if (key === id) {\n    //       this.supportiveDocumentList.splice(key);\n    //     }\n    //   });\n    // } else {\n    //   this.sweetAlertService.customErrorMessage(`Type of Document already exist.`);\n    // }\n    this.isUpdate = false;\n    this.dataSource.data = this.supportiveDocumentList;\n    this.supportingDocument = new SupportingDocument();\n    this.supportingDocumentIndex = '';\n  }\n\n  initializeMultimediaMovingObj(): void {\n    this.multimediaMovingDTO = new ApplicationMultimediaMovingDTO();\n    let multimediaMovingList = new MultiMediaMovingConstant().data\n    this.multimediaMovingDTO = {\n      applicationMultimediaMovingList: multimediaMovingList,\n      appFormReference: '',\n      amount: 0,\n      id: 0,\n      sizeLength: 0,\n      typeOfMedium: null,\n    }\n  }\n  \n  initializeMultimediaStaticObj(): void {\n    this.multimediaStaticDTO = new ApplicationMultimediaStaticDTO();\n    let multimediaStaticList = new MultiMediaStaticConst().data\n    this.multimediaStaticDTO = {\n      applicationMultimediaStaticList: multimediaStaticList,\n      appFormReference: '',\n      amount: 0,\n      id: 0,\n      typeOfMedium: null,\n    }\n  }\n\n  isNumber(number): boolean {\n    if (number) return this.validateFieldService.numbersOnly(number);\n  }\n\n  ngOnDestroy(): void {\n    this.ngUnsubscribe.next();\n    this.ngUnsubscribe.complete();\n  }\n}\n","<!-- <form [formGroup]=\"materialInformationForm\"> -->\n<div class=\"row fields\"\n  [hidden]=\"currentUser?.userRole?.name=='ROLE_APPLICANT'&&(s1Application?.decisionStatus=='INCOMPLETE'||s1Application?.decisionStatus=='APPROVED'||s1Application?.decisionStatus=='APPROVED W/ CAUTION')\n    || (s1Application?.submissionType === 'REVISION' && s1Application?.internalStatus === 'S1_APPLICATION_REJECTED')\n    || (s1Application?.submissionType === 'COMPLIANCE' && s1Application?.internalStatus === 'S1_APPLICATION_REJECTED')\">\n  <div class=\"row\">\n    <!-- FOR S1 APPLICATION -->\n    <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n      <mat-label>Ad Title\n        <span class=\"required\">*</span>\n      </mat-label>\n      <input matInput [(ngModel)]=\"s1Application.adTitle\" name=\"adTitle\"\n        (ngModelChange)=\"util.toUpperCase(s1Application, 'adTitle', $event)\"\n        [readonly]=\"(isAscUser && isDisableFieldOnUpdate) || (s1Application?.applicationRequest?.status === 'APPROVED')\">\n    </mat-form-field>\n  </div>\n\n  <!-- FOR S1 APPLICATION -->\n  <div class=\"row\">\n    <mat-form-field class=\"col-md-6\" appearance=\"outline\"\n      *ngIf=\"(s1Application?.formType !== 'MULTIPLE' || (s1Application?.formType === 'MULTIPLE' && s1Application.multipleApplication))\"\n      [hidden]=\"specialApplicationType.includes(s1Application?.applicationType?.description?.toUpperCase()) && s1Application?.applicationRequest?.status !== 'APPROVED'\">\n      <mat-label>Reference Code of Previously-Approved Material</mat-label>\n      <input matInput [(ngModel)]=\"s1Application.previousRefCode\" name=\"previousRefCode\"\n        (ngModelChange)=\"util.toUpperCase(s1Application, 'previousRefCode', $event)\"\n        [readonly]=\"isAscUser && isDisableFieldOnUpdate\">\n    </mat-form-field>\n\n    <mat-form-field class=\"col-md-6\" appearance=\"outline\">\n      <mat-label>Tag Line (Optional)</mat-label>\n      <input matInput [(ngModel)]=\"s1Application.tagLine\" name=\"tagLine\"\n        (ngModelChange)=\"util.toUpperCase(s1Application, 'tagLine', $event)\"\n        [readonly]=\"(isAscUser && isDisableFieldOnUpdate) || (s1Application?.applicationRequest?.status === 'APPROVED')\">\n    </mat-form-field>\n  </div>\n</div>\n\n<!-- MULTIMEDIA SELECTION SECTION -->\n<!-- FOR S1 APPLICATION -->\n<div class=\"row fields\"\n  *ngIf=\"(\n    !specialApplicationType.includes(s1Application?.applicationType?.description?.toUpperCase())\n    ||(specialApplicationType.includes(s1Application?.applicationType?.description?.toUpperCase()) && s1Application?.applicationRequest?.status == 'APPROVED')\n    ||(s1Application?.formType === 'MULTIPLE' && s1Application?.multipleApplication)\n  )\n  &&\n    s1Application?.formType !== 'MULTIPLE'||(s1Application?.formType === 'MULTIPLE' && s1Application?.multipleApplication)\"\n  [hidden]=\"(s1Application?.formType === 'MULTIPLE' && !s1Application.multipleApplication)\n        || currentUser?.userRole?.name=='ROLE_APPLICANT'&&(s1Application?.decisionStatus=='INCOMPLETE'||s1Application?.decisionStatus=='APPROVED'||s1Application?.decisionStatus=='APPROVED W/ CAUTION')\n        || (s1Application?.submissionType === 'REVISION' && s1Application?.internalStatus === 'S1_APPLICATION_REJECTED')\n        || (s1Application?.submissionType === 'COMPLIANCE' && s1Application?.internalStatus === 'S1_APPLICATION_REJECTED')\">\n  <h4>\n    <mat-icon>bookmark</mat-icon> &nbsp;Type of Medium\n  </h4>\n\n  <mat-radio-group class=\"col-md-12\" aria-label=\"Select an option\" [(ngModel)]=\"selectedTypeOfMedium\"\n    [disabled]=\"isAscUser && isDisableFieldOnUpdate\" name=\"applicationTypeOfMedium\"\n    [hidden]=\"isAscUser && isDisableFieldOnUpdate\">\n    <mat-radio-button value=\"SINGLE MEDIA\" (click)=\"getTypeOfMedium('SINGLE MEDIA'); emitSingleMediaChanges()\">\n      SINGLE MEDIA\n    </mat-radio-button>\n    &nbsp;&nbsp;\n    <mat-radio-button value=\"MULTIMEDIA\" (click)=\"getTypeOfMedium('MULTIMEDIA-MOVING'); emitMultimediaChanges()\">\n      MULTIMEDIA\n    </mat-radio-button>\n    <br><br>\n  </mat-radio-group>\n\n  <mat-form-field class=\"col-md-11\" appearance=\"outline\" *ngIf=\"isAscUser && isDisableFieldOnUpdate\">\n    <mat-label>Media Type</mat-label>\n    <input matInput [(ngModel)]=\"s1Application.refTypeOfMedium\" name=\"refTypeOfMedium\"\n      readonly=\"isAscUser && isDisableFieldOnUpdate\">\n  </mat-form-field>\n\n  <!-- SELCETED: SINGLE MEDIA -->\n  <mat-form-field class=\"col-md-11\" appearance=\"outline\" *ngIf=\"s1Application?.refTypeOfMedium=='SINGLE MEDIA'\">\n    <mat-label>Single Media</mat-label>\n    <mat-select [(ngModel)]=\"typeOfMedium\" name=\"typeOfMedium\" [compareWith]=\"compareSingleMedia\"\n      [disabled]=\"isAscUser && isDisableFieldOnUpdate\" (selectionChange)=\"setSingleMedia(typeOfMedium)\">\n      <mat-option *ngFor=\"let i of typeOfMediumList\" [value]=\"i\">\n        {{i.description}}\n      </mat-option>\n    </mat-select>\n  </mat-form-field>\n\n  <!-- <section class=\"example-section\" *ngIf=\"isDigitalStatic\">\n      <mat-checkbox class=\"example-margin\" [(ngModel)]=\"checked\" [checked]=\"isDigitalStatic\">With landing page\n      </mat-checkbox>\n    </section> -->\n\n  <br><br>\n\n  <div *ngIf=\"s1Application.refTypeOfMedium=='SINGLE MEDIA'\">\n    <mat-form-field class=\"col-md-4 media-info\" appearance=\"outline\"\n      *ngIf=\"typeOfMedium?.executionEnable === true || (applicationSingleMedia?.mediumExecution && typeOfMedium?.executionEnable === undefined)\">\n      <mat-label>Execution</mat-label>\n      <mat-select [(ngModel)]=\"applicationSingleMedia.mediumExecution\" name=\"mediumExecution\"\n        [compareWith]=\"compareMediumExecution\" [disabled]=\"isAscUser && isDisableFieldOnUpdate\"\n        (selectionChange)=\"emitSingleMediaChanges()\">\n        <mat-option *ngFor=\"let i of executionList\" [value]=\"i\">\n          {{i.typeOfExecution.typeOfExecution}}\n        </mat-option>\n      </mat-select>\n    </mat-form-field>\n\n    <mat-form-field class=\"col-md-4 media-info\" appearance=\"outline\"\n      *ngIf=\"typeOfMedium?.languageEnable==true||(applicationSingleMedia?.dialect!=null&&typeOfMedium?.languageEnable==undefined)\">\n      <mat-label>Language/Dialect</mat-label>\n      <mat-select [(ngModel)]=\"applicationSingleMedia.dialect\" name=\"dialect\" [compareWith]=\"compareDialect\"\n        [disabled]=\"isAscUser && isDisableFieldOnUpdate\">\n        <mat-option *ngFor=\"let i of dialectList\" [value]=\"i\">\n          {{i.dialect}}\n        </mat-option>\n      </mat-select>\n    </mat-form-field>\n\n    <mat-form-field class=\"col-md-4 media-info\" appearance=\"outline\"\n      *ngIf=\"typeOfMedium?.othersEnable==true||(applicationSingleMedia?.others&&typeOfMedium?.othersEnable==undefined)\">\n      <mat-label>Others</mat-label>\n      <input matInput [(ngModel)]=\"applicationSingleMedia.others\" name=\"others\"\n        [readonly]=\"isAscUser && isDisableFieldOnUpdate\">\n    </mat-form-field>\n\n\n    <!-- <mat-form-field class=\"col-md-3 media-info\" appearance=\"outline\"\n        *ngIf=\"typeOfMedium.sizeLengthEnable==true||(applicationSingleMedia.sizeLength&&typeOfMedium.sizeLengthEnable==undefined)\">\n        <mat-label>Size Length</mat-label>\n        <input matInput [(ngModel)]=\"applicationSingleMedia.sizeLength\" formControlName=\"sizeLength\"\n          [readonly]=\"isAscUser && isDisableFieldOnUpdate\">\n      </mat-form-field> -->\n    <mat-form-field class=\"col-md-3 media-info\" appearance=\"outline\"\n      *ngIf=\"typeOfMedium?.lengthEnable==true||typeOfMedium?.sizeLengthEnable==true||(applicationSingleMedia?.sizeLength&&typeOfMedium?.sizeLengthEnable==undefined)\">\n      <mat-label>Size Length (in seconds)</mat-label>\n      <input matInput [(ngModel)]=\"applicationSingleMedia.sizeLength\" name=\"sizeLength\"\n        (keydown)=\"isNumber($event)\" (keyup)=\"emitSingleMediaChanges()\"\n        [readonly]=\"(isAscUser && isDisableFieldOnUpdate) && (currentUser?.userRole?.name !== 'ROLE_ADMIN' && currentUser?.userRole?.name !== 'ROLE_SUPER_ADMIN')\"\n        (blur)=\"emitSingleMediaChanges()\" maxlength=\"4\">\n    </mat-form-field>\n\n    <mat-form-field class=\"col-md-4 media-info\" appearance=\"outline\"\n      *ngIf=\"typeOfMedium?.widthEnable==true||(applicationSingleMedia?.width&&typeOfMedium?.othersEnable==undefined)\">\n      <mat-label>Width</mat-label>\n      <input matInput [(ngModel)]=\"applicationSingleMedia.width\" name=\"width\"\n        [readonly]=\"isAscUser && isDisableFieldOnUpdate\">\n    </mat-form-field>\n  </div>\n\n  <!-- SELCETED: MULTIMEDIA -->\n  <div *ngIf=\"s1Application.refTypeOfMedium=='MULTIMEDIA-MOVING'||s1Application.refTypeOfMedium=='MULTIMEDIA-STATIC'\">\n    <mat-radio-group class=\"col-md-12\" aria-label=\"Select an option\" \n      [(ngModel)]=\"s1Application.refTypeOfMedium\"\n      name=\"refTypeOfMedium\" \n      [disabled]=\"isAscUser && isDisableFieldOnUpdate\" \n      (change)=\"getTypeOfMedium(s1Application.refTypeOfMedium); emitMultimediaChanges()\"\n    >\n      <mat-radio-button value=\"MULTIMEDIA-MOVING\" [checked]=\"s1Application.refTypeOfMedium=='MULTIMEDIA-MOVING'\"\n        [disabled]=\"isAscUser && isDisableFieldOnUpdate\">\n        MULTIMEDIA-MOVING\n      </mat-radio-button>\n      &nbsp;&nbsp;\n      <mat-radio-button value=\"MULTIMEDIA-STATIC\" [checked]=\"s1Application.refTypeOfMedium=='MULTIMEDIA-STATIC'\"\n        [disabled]=\"isAscUser && isDisableFieldOnUpdate\">\n        MULTIMEDIA-STATIC(MAX OF 5 LAYOUT)</mat-radio-button>\n    </mat-radio-group>\n\n    <span *ngIf=\"!isAscUser && !isDisableFieldOnUpdate\">\n      <br><br>\n    </span>\n\n    <div class=\"row\"\n      *ngIf=\"selectMultimedia||s1Application.refTypeOfMedium=='MULTIMEDIA-MOVING'||s1Application.refTypeOfMedium=='MULTIMEDIA-STATIC'\">\n      <div class=\"col-md-12\" appearance=\"outline\">\n        <!-- <span  *ngFor=\"let s of selectedMultimediaList;\">\n              <table *ngIf=\"i?.description==s.typeOfMedium?.description\">\n                <tr>\n                  <td>\n                    <mat-checkbox [checked]=\"true\"\n                      [disabled]=\"isAscUser && isDisableFieldOnUpdate\">\n                      {{i?.description}}{{i?.sizeLength}}</mat-checkbox>\n                  </td>\n                  <td>{{s?.multimediaSizeLength}}\n                    <input type=\"text\" class=\"form-control\" [(ngModel)]=\"i.sizeLength\" (blur)=\"addMultimedia(i)\" formControlName=\"sizeLength\"\n                      name=\"sizeLength\" maxlength=\"200\" placeholder=\"Size/Length\">\n                  </td>\n                </tr>\n              </table>\n          </span> -->\n        <table>\n          <!-- <tr *ngFor=\"let i of typeOfMediumList; let index = index\">\n              <td>\n                <mat-checkbox [checked]=\"selectedMultimediaStringList.includes(i?.description)\"\n                  [disabled]=\"isAscUser && isDisableFieldOnUpdate\">\n                  {{i?.description}}</mat-checkbox>\n              </td>\n              <td>\n                  <input type=\"text\" class=\"form-control\" [value]=\"i?.sizeLength ? i?.sizeLength : 0\" (blur)=\"emitMultimediaChanges()\" (keyup)=\"addMultimedia(i, $event); emitMultimediaChanges()\"\n                    name=\"sizeLength\" maxlength=\"4\" placeholder=\"Size/Length (in seconds)\" (keydown)=\"validateFieldService.numbersOnly($event)\"\n                    [readonly]=\"((isAscUser && isDisableFieldOnUpdate) && (currentUser?.userRole?.name !== 'ROLE_ADMIN' && currentUser?.userRole?.name !== 'ROLE_SUPER_ADMIN')) && (s1Application?.decisionStatus !== 'APPROVED' || s1Application?.decisionStatus !== 'APPROVED_WITH_CAUTION') \">\n              </td>\n            </tr> -->\n\n          <ng-container *ngIf=\"s1Application.refTypeOfMedium=='MULTIMEDIA-MOVING'\">\n            <tr *ngFor=\"let item of multimediaMovingDTO.applicationMultimediaMovingList; let i = index\"\n              style=\"height: 40px;\">\n              <td>\n                <mat-checkbox [(ngModel)]=\"item.hasSelected\" [disabled]=\"isAscUser && isDisableFieldOnUpdate\" (click)=\"emitMultimediaChanges()\">\n                  {{item.multimediaMovingMedium | uppercase}}\n                </mat-checkbox>\n              </td>\n              <td *ngIf=\"i === 0\">\n                <input type=\"text\" class=\"form-control\" name=\"sizeLength\" maxlength=\"4\"\n                  placeholder=\"Size/Length (in seconds)\" (keydown)=\"isNumber($event)\"\n                  (blur)=\"emitMultimediaChanges()\" (keyup)=\"emitMultimediaChanges()\"\n                  [(ngModel)]=\"multimediaMovingDTO.sizeLength\" [readonly]=\"\n                    ((isAscUser && isDisableFieldOnUpdate) && \n                    (currentUser?.userRole?.name !== 'ROLE_ADMIN' && currentUser?.userRole?.name !== 'ROLE_SUPER_ADMIN')) && \n                    (s1Application?.decisionStatus !== 'APPROVED' || s1Application?.decisionStatus !== 'APPROVED_WITH_CAUTION')\n                  \">\n              </td>\n            </tr>\n          </ng-container>\n          <ng-container *ngIf=\"s1Application.refTypeOfMedium=='MULTIMEDIA-STATIC'\">\n            <tr *ngFor=\"let item of multimediaStaticDTO.applicationMultimediaStaticList; let i = index\"\n              style=\"height: 40px;\">\n              <td>\n                <mat-checkbox [(ngModel)]=\"item.hasSelected\" [disabled]=\"isAscUser && isDisableFieldOnUpdate\">\n                  {{item.multimediaStaticMedium | uppercase}}\n                </mat-checkbox>\n              </td>\n              <td *ngIf=\"item.multimediaStaticMedium !== 'digital static'\">\n                <input type=\"text\" class=\"form-control\" [name]=\"item.multimediaStaticMedium\" maxlength=\"4\"\n                  placeholder=\"Size/Length (in seconds)\" (keydown)=\"isNumber($event)\"\n                  (blur)=\"emitMultimediaChanges()\" (keyup)=\"emitMultimediaChanges()\"\n                  [(ngModel)]=\"item.sizeLength\" [readonly]=\"\n                      ((isAscUser && isDisableFieldOnUpdate) && \n                      (currentUser?.userRole?.name !== 'ROLE_ADMIN' && currentUser?.userRole?.name !== 'ROLE_SUPER_ADMIN')) && \n                      (s1Application?.decisionStatus !== 'APPROVED' || s1Application?.decisionStatus !== 'APPROVED_WITH_CAUTION')\n                    \">\n              </td>\n            </tr>\n          </ng-container>\n        </table>\n      </div>\n\n      <!-- <div class=\"col-md-5\" *ngIf=\"s1Application.refTypeOfMedium=='MULTIMEDIA-MOVING'\">\n            <mat-form-field class=\"col-md-4\" appearance=\"outline\">\n              <mat-label>Length-{{mt}}++{{i.id}}</mat-label>\n              <input matInput [(ngModel)]=\"multimediaLength\" (change)=\"updateSizeLength(mt,multimediaLength)\"\n                formControlName=\"multimediaLength\" [readonly]=\"isAscUser\">\n            </mat-form-field>\n          </div>\n          <div class=\"col-md-5\" *ngIf=\"s1Application.refTypeOfMedium=='MULTIMEDIA-STATIC'\">\n            <mat-form-field class=\"col-md-4\" appearance=\"outline\">\n              <mat-label>Size</mat-label>\n              <input matInput [(ngModel)]=\"applicationMultimediaStatic.multimediaSize\"  (change)=\"updateSizeLength(i)\"\n               formControlName=\"multimediaSize\" [readonly]=\"isAscUser\">\n            </mat-form-field>\n          </div> -->\n    </div>\n\n    <div class=\"row\"><br></div>\n\n\n  </div>\n  <br><br>\n</div>\n<!-- END OF FOR S1 APPLICATION -->\n\n<!-- ATTACHMENT SECTION -->\n<!-- FOR S1 APPLICATION -->\n<span class=\"row fields\" *ngIf=\"(\n    !specialApplicationType.includes(s1Application?.applicationType?.description?.toUpperCase())\n    ||(specialApplicationType.includes(s1Application?.applicationType?.description?.toUpperCase()) && s1Application?.applicationRequest?.status == 'APPROVED')\n    ||(s1Application?.formType === 'MULTIPLE' && s1Application?.multipleApplication)\n    ) && s1Application?.formType !== 'MULTIPLE'||(s1Application?.formType === 'MULTIPLE' && s1Application?.multipleApplication) &&\n    applicationStage !== 'S2-APPLICATION'\">\n\n  <app-attachment-document [s1Application]=\"s1Application\" [labelMainDocument]=\"labelMainDocument\"\n    [isAscUser]=\"isAscUser\" [isDisableFieldOnUpdate]=\"isDisableFieldOnUpdate\"\n    [originalAttachmentDocuments]=\"originalAttachmentDocuments\"\n    [revisionAttachmentDocuments]=\"revisionAttachmentDocuments\"\n    [complianceAttachmentDocuments]=\"complianceAttachmentDocuments\" [applicationStage]=\"applicationStage\">\n  </app-attachment-document>\n\n  <!--  [showMainDocumentUploadButton]=\"showMainDocumentUploadButton\" [showMainDocumentViewButton]=\"showMainDocumentViewButton\" [safeURLMainDoc]=\"safeURLMainDoc\"\n     [showSupportDocumentFrame]=\"showSupportDocumentFrame\" [showSupportiveDocumentUploadButton]=\"showSupportiveDocumentUploadButton\" [showSupportiveDocumentViewButton]=\"showSupportiveDocumentViewButton\" [safeURLSupportDoc]=\"safeURLSupportDoc\"\n      [revisionLetterAttachment]=\"revisionLetterAttachment\" [showRevisionLetterUploadButton]=\"showRevisionLetterUploadButton\" [showRevisionLetterViewButton]=\"showRevisionLetterViewButton\" [safeURLRevisionLetter]=\"safeURLRevisionLetter\" -->\n\n\n  <!-- FOR S1 APPLICATION -->\n  <div class=\"row\">\n    <!-- <b *ngIf=\"currentUser?.userRole?.name=='ROLE_APPLICANT'\"><b class=\"material-icons\">error_outline</b> Attachments' total file size should not exceed 15MB.</b> -->\n\n    <!-- MAIN DOCUMENT -->\n    <!-- <div class=\"row\">\n        <h4>\n          <i class=\"material-icons\">bookmark</i> &nbsp;{{labelMainDocument}}\n        </h4>\n        <br>\n        <div class=\"col-md-12\" appearance=\"outline\">\n          <mat-label *ngIf=\"attachmentDocuments[0]?.originalFilename\">Filename: </mat-label>\n          <input #mainInput matInput [value]=\"attachmentDocuments[0]?.originalFilename\" disabled\n            *ngIf=\"attachmentDocuments[0]?.originalFilename\"><br>\n          <input #mainFile class=\"file-upload\" type=\"file\" accept=\".pdf\" (change)=\"selectFile($event, 'MAIN')\"\n            [hidden]=\"(isAscUser && isDisableFieldOnUpdate) || attachmentDocuments[0]?.originalFilename != null\"\n            *ngIf=\"attachmentDocuments?.length==0 || (attachmentDocuments?.length>=1 && attachmentDocuments[0]===null) || s1Application?.internalStatus=='SAVED'|| attachmentDocuments[0]?.originalFilename != null ||\n            ((s1Application?.internalStatus=='S1_APPLICATION_REVIEWED' || s1Application?.internalStatus=='COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER')\n              &&(s1Application?.decisionStatus=='INCOMPLETE'||s1Application?.decisionStatus=='APPROVED'||s1Application?.decisionStatus=='APPROVED W/ CAUTION'))\" />\n        </div>\n\n        <div class=\"row\"><br></div>\n        <div class=\"col-md-12\" appearance=\"outline\"\n          *ngIf=\"showMainDocumentUploadButton==true||attachmentDocuments?.length>0\">\n          <button mat-raised-button class=\"button-red button-right\" (click)=\"viewDocument('MAIN')\"\n            *ngIf=\"showMainDocumentViewButton||s1Application?.mainAttachmentReference\">\n            <i class=\"material-icons add-document\">open_in_new</i> VIEW DOCUMENT\n          </button>\n          &nbsp; &nbsp;\n          <button mat-raised-button class=\"button-red button-right\" (click)=\"deleteUploadedFile('MAIN')\"\n            [hidden]=\"!showMainDocumentViewButton&&!s1Application?.mainAttachmentReference||(currentUser?.userRole?.name!='ROLE_APPLICANT'&&currentUser?.userRole?.name!='ROLE_ENCODER')\"\n            *ngIf=\"showMainDocumentViewButton||s1Application?.mainAttachmentReference||(s1Application?.internalStatus=='SAVED'||\n            ((s1Application?.internalStatus=='S1_APPLICATION_REVIEWED' || s1Application?.internalStatus=='COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER')\n              &&(s1Application?.decisionStatus=='INCOMPLETE'||s1Application?.decisionStatus=='APPROVED'||s1Application?.decisionStatus=='APPROVED W/ CAUTION')))\">\n            <i class=\"material-icons add-document\">delete</i> DELETE ATTACHMENT\n          </button>\n          &nbsp; &nbsp;\n          <button mat-raised-button class=\"button-red button-right\" (click)=\"uploadDocument()\"\n            [disabled]=\"!safeURLMainDoc||!showMainDocumentUploadButton\" [hidden]=\"(isAscUser && isDisableFieldOnUpdate)\"\n            *ngIf=\"attachmentDocuments[0]?.originalFilename == null\">\n            <i class=\"material-icons add-document\">upload</i> UPLOAD\n          </button>\n        </div>\n        <div class=\"col-md-12\">\n          <hr>\n        </div>\n      </div> -->\n\n    <!-- SUPPORTING DOC -->\n    <!-- <div class=\"row\" *ngIf=\"showSupportDocumentFrame==true || originalAttachmentDocuments?.length>0 || revisionAttachmentDocuments?.length>0 || complianceAttachmentDocuments?.length>0\"> -->\n    <!-- <h4>\n          <i class=\"material-icons\">bookmark</i> &nbsp;SUPPORT DOCUMENTS\n        </h4>\n\n        <div class=\"col-md-12\" appearance=\"outline\"\n          [hidden]=\"(isAscUser && isDisableFieldOnUpdate)||attachmentDocuments[1]?.originalFilename||s1Application?.supportingAttachmentReference\"\n          *ngIf=\"(attachmentDocuments?.length<2||attachmentDocuments?.length!=2)\">\n\n          <mat-checkbox (click)=\"verifyNoDocumentAttached()\" [(ngModel)]=\"s1Application.hasNoSupportingDocs\"\n            (checked)=\"s1Application.hasNoSupportingDocs\" formControlName=\"hasNoSupportingDocs\"\n            *ngIf=\"currentUser.userRole.name=='ROLE_APPLICANT' || (currentUser.userRole.name=='ROLE_ENCODER' && s1Application?.internalStatus === undefined )\">\n            I certify that no supporting document is attached to this S1 application.</mat-checkbox>\n          <br>\n        </div>\n\n        <p *ngIf=\"(currentUser.userRole.name!='ROLE_APPLICANT'&&s1Application.hasNoSupportingDocs)\n        ||(currentUser.userRole.name=='ROLE_AD_SPECIALIST'&&s1Application.hasNoSupportingDocs)\">\n          Supporting Document was not submitted.\n        </p>\n        <div class=\"col-md-12\"><br></div> -->\n\n    <!-- <div *ngIf=\"!s1Application.hasNoSupportingDocs\">\n          <div class=\"col-md-12\" appearance=\"outline\">\n            <mat-label *ngIf=\"attachmentDocuments[1]?.originalFilename\">Filename: </mat-label>\n            <input matInput [value]=\"attachmentDocuments[1]?.originalFilename\" disabled\n              *ngIf=\"attachmentDocuments[1]?.originalFilename\"><br>\n\n            <input #supportiveFile class=\"file-upload\" type=\"file\" accept=\".pdf\"\n              (change)=\"selectFile($event, 'SUPPORTIVE')\"\n              [hidden]=\"(isAscUser && isDisableFieldOnUpdate) || attachmentDocuments[1]?.originalFilename\"\n              *ngIf=\"attachmentDocuments?.length<2|| (attachmentDocuments?.length>=2 && attachmentDocuments[1]===null) ||s1Application?.internalStatus=='SAVED'|| attachmentDocuments[1]?.originalFilename != null ||\n              ((s1Application?.internalStatus=='S1_APPLICATION_REVIEWED' || s1Application?.internalStatus=='COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER')\n               &&(s1Application?.decisionStatus=='INCOMPLETE'||s1Application?.decisionStatus=='APPROVED'||s1Application?.decisionStatus=='APPROVED W/ CAUTION'))\" />\n          </div>\n\n          <div class=\"row\"><br></div>\n          <div class=\"col-md-12\" appearance=\"outline\"\n            *ngIf=\"showSupportiveDocumentUploadButton==true||attachmentDocuments?.length>1\">\n            <button mat-raised-button class=\"button-red button-right\" (click)=\"viewDocument('SUPPORTIVE')\"\n              *ngIf=\"showSupportiveDocumentViewButton||s1Application?.supportingAttachmentReference\">\n              <i class=\"material-icons add-document\">open_in_new</i> VIEW DOCUMENT\n            </button>\n            &nbsp; &nbsp;\n            <button mat-raised-button class=\"button-red button-right\" (click)=\"deleteUploadedFile('SUPPORTIVE')\"\n              [hidden]=\"!showSupportiveDocumentViewButton&&!s1Application?.supportingAttachmentReference||(currentUser?.userRole?.name!='ROLE_APPLICANT'&&currentUser?.userRole?.name!='ROLE_ENCODER')\"\n              *ngIf=\"showSupportiveDocumentViewButton||s1Application?.supportingAttachmentReference||(s1Application?.internalStatus=='SAVED'||\n              ((s1Application?.internalStatus=='S1_APPLICATION_REVIEWED' || s1Application?.internalStatus=='COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER')\n                &&(s1Application?.decisionStatus=='INCOMPLETE'||s1Application?.decisionStatus=='APPROVED'||s1Application?.decisionStatus=='APPROVED W/ CAUTION')))\">\n              <i class=\"material-icons add-document\">delete</i> DELETE ATTACHMENT\n            </button>\n            &nbsp; &nbsp;\n            <button mat-raised-button class=\"button-red button-right\" (click)=\"uploadDocument()\"\n              [disabled]=\"!safeURLSupportDoc||!showSupportiveDocumentUploadButton\"\n              [hidden]=\"(isAscUser && isDisableFieldOnUpdate)\"\n              *ngIf=\"s1Application?.supportingAttachmentReference==null||showSupportiveDocumentUploadButton||attachmentDocuments[1]?.originalFilename === null\">\n              <i class=\"material-icons add-document\">upload</i> UPLOAD\n            </button>\n          </div>\n          <div class=\"row\"><br></div>\n          <br>\n        </div> -->\n\n    <!-- FOR ADSPE / SCREENER / REVIEWER -->\n    <!-- <div class=\"row fields\"> -->\n    <div class=\"col-md-12\" appearance=\"outline\" *ngIf=\"currentUser.userRole.name=='ROLE_AD_SPECIALIST'\n          && (s1Application?.internalStatus === 'S1_APPLICATION_VERIFIED_BY_ENCODER' || s1Application?.internalStatus == 'COMPLIANCE_DOCUMENT_VERIFIED_BY_ENCODER' || s1Application?.internalStatus === 'REVISION_VERIFIED_BY_ENCODER')\n          && s1Application.supportingAttachmentReference !== null\">\n      <!-- *ngIf=\"showSupportiveDocumentDownloadButton==true||attachmentDocuments?.length>1\" -->\n      <div class=\"row\"><br></div>\n      <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n        <mat-label>Type of Document</mat-label>\n        <mat-select [(ngModel)]=\"supportingDocument.typeOfDocument\" name=\"typeOfDocument\">\n          <mat-option *ngFor=\"let i of typeOfDocumentList\" [value]=\"i\" (click)=\"setTypeOfDocument(i)\">\n            {{i.description}}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n\n      <mat-form-field class=\"col-md-6 hideIndex\" appearance=\"outline\" style=\"display: none;\">\n        <mat-label>index</mat-label>\n        <input matInput [value]=\"supportingDocumentIndex\">\n      </mat-form-field>\n\n      <mat-form-field class=\"col-md-6 document-form-margin\" appearance=\"outline\" *ngIf=\"typeOfDocument?.inputEnable\">\n        <input matInput [(ngModel)]=\"supportingDocument.input\" name=\"input\">\n      </mat-form-field>\n\n      <mat-form-field class=\"col-md-6 document-form-margin\" appearance=\"outline\" *ngIf=\"typeOfDocument?.variantEnable\">\n        <mat-label>Variant</mat-label>\n        <input matInput [(ngModel)]=\"supportingDocument.variant\" name=\"variant\">\n      </mat-form-field>\n\n      <mat-form-field class=\"col-md-6 document-form-margin\" appearance=\"outline\"\n        *ngIf=\"typeOfDocument?.expiresOnEnable\">\n        <mat-label>Expires on</mat-label>\n        <input matInput placeholder=\"Date\" [matDatepicker]=\"expiresOn\" readonly [min]=\"todayDate\"\n          [(ngModel)]=\"supportingDocument.expiresOn\" name=\"expiresOn\" [readonly]=\"true\">\n        <mat-datepicker-toggle matSuffix [for]=\"expiresOn\">\n          <mat-datepicker color=\"warn\" #expiresOn></mat-datepicker>\n        </mat-datepicker-toggle>\n      </mat-form-field>\n\n      <mat-form-field class=\"col-md-6 document-form-margin\" appearance=\"outline\" *ngIf=\"typeOfDocument?.basedOnEnable\">\n        <mat-label>Based on</mat-label>\n        <input matInput [(ngModel)]=\"supportingDocument.basedOn\" name=\"basedOn\" required>\n      </mat-form-field>\n\n      <mat-form-field class=\"col-md-6 document-form-margin\" appearance=\"outline\"\n        *ngIf=\"typeOfDocument?.dateOfLaunchEnable\">\n        <mat-label>Date of Launch</mat-label>\n        <input matInput placeholder=\"Date\" [matDatepicker]=\"dateOfLaunch\" readonly [min]=\"todayDate\"\n          [(ngModel)]=\"supportingDocument.dateOfLaunch\" name=\"dateOfLaunch\" [readonly]=\"true\">\n        <mat-datepicker-toggle matSuffix [for]=\"dateOfLaunch\">\n          <mat-datepicker color=\"warn\" #dateOfLaunch></mat-datepicker>\n        </mat-datepicker-toggle>\n        <!-- <input matInput [(ngModel)]=\"supportingDocument.dateOfLaunch\" formControlName=\"dateOfLaunch\" name=\"dateOfLaunch\"> -->\n      </mat-form-field>\n\n      <mat-form-field class=\"col-md-6 document-form-margin\" appearance=\"outline\" *ngIf=\"typeOfDocument?.remarksEnable\">\n        <mat-label>Remarks</mat-label>\n        <textarea matInput [(ngModel)]=\"supportingDocument.remarks\" name=\"remarks\"></textarea>\n      </mat-form-field>\n      <br>\n\n      <div class=\"col-md-12\" *ngIf=\"!isUpdate\">\n        <button mat-raised-button class=\"col-md-12 button-red\" [disabled]=\"supportingDocument.typeOfDocument === undefined ||\n              (typeOfDocument?.variantEnable && (supportingDocument.variant === undefined || supportingDocument.variant === '')) ||\n              (typeOfDocument?.expiresOnEnable && supportingDocument.expiresOn === undefined) ||\n              (typeOfDocument?.basedOnEnable && supportingDocument.basedOn === undefined) ||\n              (typeOfDocument?.dateOfLaunchEnable && supportingDocument.dateOfLaunch === undefined) ||\n              (typeOfDocument?.remarksEnable && supportingDocument.remarks === undefined)\n              \" (click)=\"addSupportiveDocument(supportingDocument)\">\n          <i class=\"material-icons add-document\">task_alt</i> ADD TO LIST\n        </button>\n      </div>\n      &nbsp;&nbsp;\n      <div class=\"col-md-12\" *ngIf=\"isUpdate\">\n        <button mat-raised-button class=\"col-md-12 button-red\"\n          (click)=\"modifyTypeOfDocument(supportingDocument,supportingDocumentIndex)\"\n          [disabled]=\"supportingDocument.typeOfDocument === undefined\">\n          <i class=\"material-icons add-document\">task_alt</i> Update\n        </button>\n      </div>\n      <div class=\"row\"><br></div>\n      <hr>\n    </div>\n\n    <div class=\"col-md-12\">\n      <div class=\"col-md-12 mat-elevation-z8 fields\" appearance=\"outline\" *ngIf=\"supportiveDocumentList?.length>0\">\n        <table mat-table [dataSource]=\"dataSource||supportiveDocumentList\" matSort>\n\n          <ng-container matColumnDef=\"id\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> TYPE OF DOCUMENT </th>\n            <td mat-cell *matCellDef=\"let element; let i = index\"> {{i}} </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"typeOfDocument\">\n            <th mat-header-cell *matHeaderCellDef> TYPE OF DOCUMENT </th>\n            <td mat-cell *matCellDef=\"let element\"> {{ element?.typeOfDocument?.description }} </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"input\">\n            <th mat-header-cell *matHeaderCellDef> INPUT </th>\n            <td mat-cell *matCellDef=\"let element\"> {{ element?.input==undefined ? 'N/A' : element?.input }}\n            </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"variant\">\n            <th mat-header-cell *matHeaderCellDef> VARIANT </th>\n            <td mat-cell *matCellDef=\"let element\"> {{ element?.variant==undefined ? 'N/A' : element?.variant }}\n            </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"expiresOn\">\n            <th mat-header-cell *matHeaderCellDef> EXPIRES ON </th>\n            <td mat-cell *matCellDef=\"let element\">\n              {{ element?.expiresOn==undefined ? 'N/A' : element?.expiresOn | date:'yyyy-MM-dd' }}\n            </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"basedOn\">\n            <th mat-header-cell *matHeaderCellDef> BASED ON </th>\n            <td mat-cell *matCellDef=\"let element\">\n              {{ element?.basedOn ==undefined ? 'N/A' : element?.basedOn | date:'yyyy-MM-dd' }}\n            </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"remarks\">\n            <th mat-header-cell *matHeaderCellDef> REMARKS </th>\n            <td mat-cell *matCellDef=\"let element\"> {{ element?.remarks==undefined ? 'N/A' : element?.remarks }}\n            </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"action\">\n            <th mat-header-cell *matHeaderCellDef> ACTIONS </th>\n            <td mat-cell *matCellDef=\"let element;let i = index\">\n\n              <!-- <span class=\"a-icon\">\n                    <i class=\"material-icons\" style=\"color:blue\" (click)=\"getTypeOfDocument(element, i)\">edit</i>\n                  </span> -->\n              <span class=\"a-icon\" [hidden]=\"s1Application?.hasOngoingAppeal\"\n                *ngIf=\"(s1Application?.internalStatus === 'S1_APPLICATION_VERIFIED_BY_ENCODER' || s1Application?.internalStatus == 'COMPLIANCE_DOCUMENT_VERIFIED_BY_ENCODER' || s1Application?.internalStatus === 'REVISION_VERIFIED_BY_ENCODER')\">\n                <i class=\"material-icons\" (click)=\"removeTypeOfDocument(i)\">delete</i>\n              </span>\n\n              <!-- <button >\n                      <i class=\"material-icons\" style=\"color:blue\">edit</i>\n                    </button> -->\n              <!-- <button (click)=\"removeTypeOfDocument(i)\">\n                      <i class=\"material-icons\">delete</i>\n                    </button> -->\n            </td>\n          </ng-container>\n\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n          <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n        </table>\n        <div class=\"no-record\" [hidden]=\"dataSource && dataSource?.data?.length > 0\"\n          *ngIf=\"supportiveDocumentList?.length==0\">\n          No supporting document found.\n        </div>\n        <!-- <mat-paginator [pageSizeOptions]=\"[10, 20, 50]\" showFirstLastButtons></mat-paginator> -->\n      </div>\n    </div>\n\n\n    <!-- </div> -->\n\n    <!-- FOR REVISION - REVISION LETTER -->\n    <!-- <div class=\"row\" *ngIf=\"(s1Application?.internalStatus==='S1_APPLICATION_REVIEWED'&&(s1Application?.decisionStatus=='APPROVED'||s1Application?.decisionStatus=='APPROVED W/ CAUTION'))\n      ||s1Application?.revisionLetterAttachmentReference\" [hidden]=\"s1Application?.appliedS2 && s1Application?.revisionLetterAttachmentReference === ''\">\n        <div class=\"col-md-12\">\n          <hr>\n        </div>\n        <h4>\n          <i class=\"material-icons\">bookmark</i> &nbsp;REVISION LETTER\n        </h4>\n        <br>\n        <div class=\"col-md-12\" appearance=\"outline\">\n          <mat-label\n            *ngIf=\"revisionLetterAttachment?.originalFilename||attachmentDocuments[1]?.revisionLetterAttachmentReference\">\n            Filename: </mat-label>\n          <input matInput\n            [value]=\"revisionLetterAttachment?.originalFilename||attachmentDocuments[1]?.revisionLetterAttachmentReference||attachmentDocuments[2]?.revisionLetterAttachmentReference\"\n            disabled *ngIf=\"revisionLetterAttachment?.originalFilename\"><br>\n\n          <input #revisionLetterFile class=\"file-upload\" type=\"file\" accept=\".pdf\"\n            (change)=\"selectFile($event, 'REVISION_LETTER')\"\n            [hidden]=\"(isAscUser && isDisableFieldOnUpdate)||revisionLetterAttachment?.originalFilename\"\n            *ngIf=\"attachmentDocuments?.length==0||s1Application?.internalStatus=='SAVED'||\n            ((s1Application?.internalStatus=='S1_APPLICATION_REVIEWED' || s1Application?.internalStatus=='COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER')\n              &&(s1Application?.decisionStatus=='INCOMPLETE'||s1Application?.decisionStatus=='APPROVED'||s1Application?.decisionStatus=='APPROVED W/ CAUTION'))\" />\n        </div>\n\n        <div class=\"row\"><br></div>\n        <div class=\"col-md-12\" appearance=\"outline\"\n          *ngIf=\"showRevisionLetterUploadButton==true||attachmentDocuments?.length>1||s1Application?.revisionLetterAttachmentReference\">\n          <button mat-raised-button class=\"button-red button-right\" (click)=\"viewDocument('REVISION_LETTER')\"\n            *ngIf=\"showRevisionLetterViewButton==true||s1Application?.revisionLetterAttachmentReference\">\n            <i class=\"material-icons add-document\">open_in_new</i> VIEW DOCUMENT\n          </button>\n          &nbsp; &nbsp;\n          <button mat-raised-button class=\"button-red button-right\" (click)=\"deleteUploadedFile('REVISION_LETTER')\"\n            [hidden]=\"!showRevisionLetterViewButton&&!s1Application?.revisionLetterAttachmentReference||(currentUser?.userRole?.name!='ROLE_APPLICANT'&&currentUser?.userRole?.name!='ROLE_ENCODER')\"\n            *ngIf=\"showRevisionLetterViewButton||s1Application?.revisionLetterAttachmentReference||(s1Application?.internalStatus=='SAVED'||\n            ((s1Application?.internalStatus=='S1_APPLICATION_REVIEWED' || s1Application?.internalStatus=='COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER')\n              &&(s1Application?.decisionStatus=='INCOMPLETE'||s1Application?.decisionStatus=='APPROVED'||s1Application?.decisionStatus=='APPROVED W/ CAUTION')))\">\n            <i class=\"material-icons add-document\">delete</i> DELETE ATTACHMENT\n          </button>\n          &nbsp; &nbsp;\n          <button mat-raised-button class=\"button-red button-right\" (click)=\"uploadDocument()\"\n            [disabled]=\"!safeURLRevisionLetter||!showRevisionLetterUploadButton\"\n            [hidden]=\"(isAscUser && isDisableFieldOnUpdate)\" *ngIf=\"showRevisionLetterUploadButton\">\n            <i class=\"material-icons add-document\">upload</i> UPLOAD\n          </button>\n        </div>\n        <div class=\"row\"><br></div>\n        <br>\n        <br>\n      </div> -->\n  </div>\n</span>\n\n\n<!--  //////////////////////////////////////// S2 APPLCIATION ///////////////////////////////////////////////////////////// -->\n\n<!-- FOR S2 APPLICATION -->\n<div class=\"row fields\" *ngIf=\"applicationStage === 'S2-APPLICATION'\">\n  <div class=\"row\">\n    <!-- FOR S1 APPLICATION -->\n    <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n      <mat-label>Ad Title</mat-label>\n      <input matInput [value]=\"s1Application.adTitle\" name=\"adTitle\"\n        [readonly]=\"isAscUser && isDisableFieldOnUpdate || applicationStage === 'S2-APPLICATION'\">\n    </mat-form-field>\n  </div>\n\n  <div class=\"row\">\n    <mat-form-field class=\"col-md-6\" appearance=\"outline\"\n      *ngIf=\"s1Application?.formType !== 'MULTIPLE'||(s1Application?.formType === 'MULTIPLE' && s1Application.multipleApplication)\">\n      <mat-label>Reference Code of Previously-Approved Material</mat-label>\n      <input matInput [value]=\"s1Application.previousRefCode\" name=\"previousRefCode\"\n        [readonly]=\"isAscUser && isDisableFieldOnUpdate || applicationStage === 'S2-APPLICATION'\">\n    </mat-form-field>\n\n    <mat-form-field class=\"col-md-6\" appearance=\"outline\">\n      <mat-label>Tag Line</mat-label>\n      <input matInput [value]=\"s1Application.tagLine\" name=\"tagLine\"\n        [readonly]=\"isAscUser && isDisableFieldOnUpdate || applicationStage === 'S2-APPLICATION'\">\n    </mat-form-field>\n  </div>\n</div>\n\n<!-- FOR S2 APPLICATION -->\n<div class=\"row fields\" *ngIf=\"applicationStage === 'S2-APPLICATION'\">\n  <h4>\n    <mat-icon>bookmark</mat-icon> &nbsp;TYPE OF MEDIUM\n  </h4>\n\n  <mat-radio-group class=\"col-md-12\" aria-label=\"Select an option\" [value]=\"s1Application.refTypeOfMedium\"\n    [disabled]=\"true\">\n    <mat-radio-button value=\"SINGLE MEDIA\" [checked]=\"s2Application?.applicationForm?.refTypeOfMedium=='SINGLE MEDIA'\">\n      SINGLE MEDIA\n    </mat-radio-button>\n    &nbsp;&nbsp;\n    <mat-radio-button value=\"MULTIMEDIA\"\n      [checked]=\"selectMultimedia||s1Application.refTypeOfMedium=='MULTIMEDIA'||s1Application.refTypeOfMedium=='MULTIMEDIA-STATIC'||s1Application.refTypeOfMedium=='MULTIMEDIA-MOVING'\">\n      MULTIMEDIA</mat-radio-button>\n    <br><br>\n  </mat-radio-group>\n  <mat-form-field class=\"col-md-11\" appearance=\"outline\" *ngIf=\"s1Application.refTypeOfMedium=='SINGLE MEDIA'\">\n    <mat-label>Single Media</mat-label>\n    <input matInput name=\"singleMedia\" [value]=\"applicationSingleMedia?.mediumExecution?.typeOfMedium?.description\"\n      [readonly]=\"true\">\n  </mat-form-field>\n\n  <div *ngIf=\"s1Application.refTypeOfMedium=='SINGLE MEDIA'\">\n    <mat-form-field class=\"col-md-4 media-info\" appearance=\"outline\"\n      *ngIf=\"typeOfMedium?.executionEnable==true || applicationSingleMedia?.mediumExecution || applicationSingleMedia?.mediumExecution?.typeOfExecution?.typeOfExecution === 'NO EXECUTION'\">\n      <mat-label>Execution</mat-label>\n      <input matInput name=\"execution\"\n        [value]=\"applicationSingleMedia?.mediumExecution?.typeOfExecution?.typeOfExecution\" [readonly]=\"true\">\n    </mat-form-field>\n\n    <mat-form-field class=\"col-md-4 media-info\" appearance=\"outline\"\n      *ngIf=\"typeOfMedium?.languageEnable==true||applicationSingleMedia?.dialect\">\n      <mat-label>Language/Dialect</mat-label>\n      <input matInput name=\"language\" [value]=\"applicationSingleMedia?.dialect?.dialect\"\n        [readonly]=\"isAscUser && isDisableFieldOnUpdate\">\n    </mat-form-field>\n\n    <mat-form-field class=\"col-md-4 media-info\" appearance=\"outline\"\n      *ngIf=\"typeOfMedium?.othersEnable==true||applicationSingleMedia?.others\">\n      <mat-label>Others</mat-label>\n      <input matInput name=\"others\" [value]=\"applicationSingleMedia?.others\"\n        [readonly]=\"isAscUser && isDisableFieldOnUpdate\">\n    </mat-form-field>\n\n    <mat-form-field class=\"col-md-3 media-info\" appearance=\"outline\"\n      *ngIf=\"typeOfMedium?.sizeLengthEnable==true||typeOfMedium?.lengthEnable==true||applicationSingleMedia?.sizeLength\">\n      <mat-label>Size Length (in seconds)</mat-label>\n      <input matInput name=\"sizeLength\"\n        [value]=\"applicationSingleMedia?.sizeLength ? applicationSingleMedia?.sizeLength : 0\" [readonly]=\"true\">\n    </mat-form-field>\n\n    <mat-form-field class=\"col-md-4 media-info\" appearance=\"outline\"\n      *ngIf=\"typeOfMedium?.widthEnable==true||applicationSingleMedia?.width\">\n      <mat-label>Width</mat-label>\n      <input matInput name=\"width\" [value]=\"applicationSingleMedia?.width ? applicationSingleMedia?.width : 0\"\n        [readonly]=\"isAscUser && isDisableFieldOnUpdate\">\n    </mat-form-field>\n  </div>\n\n  <div\n    *ngIf=\"selectMultimedia==true||s1Application.refTypeOfMedium=='MULTIMEDIA-MOVING'||s1Application.refTypeOfMedium=='MULTIMEDIA-STATIC'\">\n    <mat-radio-group class=\"col-md-12\" aria-label=\"Select an option\" [value]=\"s1Application.refTypeOfMedium\"\n      [disabled]=\"true\">\n      <mat-radio-button value=\"MULTIMEDIA-MOVING\" [checked]=\"s1Application.refTypeOfMedium=='MULTIMEDIA-MOVING'\">\n        MULTIMEDIA-MOVING\n      </mat-radio-button>\n      &nbsp;&nbsp;\n      <mat-radio-button value=\"MULTIMEDIA-STATIC\" [checked]=\"s1Application.refTypeOfMedium=='MULTIMEDIA-STATIC'\">\n        MULTIMEDIA-STATIC(MAX OF 5 LAYOUT)</mat-radio-button>\n    </mat-radio-group>\n\n    <br><br>\n    <div class=\"row\"\n      *ngIf=\"s1Application?.refTypeOfMedium=='MULTIMEDIA-MOVING'||s1Application?.refTypeOfMedium=='MULTIMEDIA-STATIC'||s1Application?.refTypeOfMedium=='MULTIMEDIA'\">\n      <!-- *ngIf=\"multimediaStaticList?.length==0&&multimediaMovingList?.length==0\"> -->\n      <div class=\"col-md-12\" appearance=\"outline\">\n        <span *ngFor=\"let i of typeOfMediumList; let mt = index\">\n          <table>\n            <tr>\n              <td>\n                <!-- <mat-checkbox [checked]=\"selectedMultimediaList.includes(i?.description)\"\n                    [disabled]=\"true\">\n                    {{i?.description}}</mat-checkbox> -->\n                <mat-checkbox [checked]=\"selectedMultimediaStringList.includes(i?.description)\" [disabled]=\"true\">\n                  {{i?.description}}\n                </mat-checkbox>\n              </td>\n              <td>\n                <!--  -->\n                <input type=\"text\" class=\"form-control\" [value]=\"i.sizeLength ? i.sizeLength : 0\" name=\"sizeLength\"\n                  maxlength=\"4\" placeholder=\"Size/Length (in seconds)\"\n                  *ngIf=\"s1Application?.id==undefined&&(s1Application?.refTypeOfMedium=='MULTIMEDIA-STATIC'|| s1Application?.refTypeOfMedium=='MULTIMEDIA-MOVING')\">\n\n                <!-- static -->\n                <!-- <input type=\"text\" class=\"form-control\" [value]=\" i.multimediaSize ? i.multimediaSize : '' \"\n                    name=\"sizeLength\" maxlength=\"200\" placeholder=\"Size\"\n                    *ngIf=\"s1Application?.id!=undefined&&s1Application?.refTypeOfMedium=='MULTIMEDIA-STATIC'\"\n                    [disabled]=\"true\"> -->\n\n                <!-- moving -->\n                <!-- <input type=\"text\" class=\"form-control\" [value]=\" i.multimediaLength ? i.multimediaLength : '' \"\n                    name=\"sizeLength\" maxlength=\"200\" placeholder=\"Length\"\n                    *ngIf=\"s1Application?.id!=undefined&&s1Application?.refTypeOfMedium=='MULTIMEDIA-MOVING'\"\n                    [disabled]=\"true\"> -->\n\n                <input type=\"text\" class=\"form-control\" [value]=\"i.sizeLength ? i.sizeLength : 0\"\n                  *ngIf=\"s1Application?.id!==undefined && (s1Application?.refTypeOfMedium === 'MULTIMEDIA-STATIC' || s1Application?.refTypeOfMedium === 'MULTIMEDIA-MOVING') \"\n                  name=\"sizeLength\" maxlength=\"4\" placeholder=\"Size/Length (in seconds)\" [disabled]=\"true\">\n              </td>\n            </tr>\n          </table><br>\n        </span>\n      </div>\n    </div>\n\n    <div class=\"row\"><br></div>\n\n\n  </div>\n  <br><br>\n</div>\n\n<!-- FOR S2 APPLICATION  MAIN DOC-->\n<div *ngIf=\"applicationStage === 'S2-APPLICATION'\">\n  <span class=\"row fields\">\n\n    <app-attachment-document [originalAttachmentDocuments]=\"originalAttachmentDocuments\"\n      [revisionAttachmentDocuments]=\"revisionAttachmentDocuments\"\n      [complianceAttachmentDocuments]=\"complianceAttachmentDocuments\" [s1Application]=\"s1Application\"\n      [labelMainDocument]=\"labelMainDocument\" [isAscUser]=\"isAscUser\" [isDisableFieldOnUpdate]=\"isDisableFieldOnUpdate\"\n      [applicationStage]=\"applicationStage\"></app-attachment-document>\n\n    <!-- [showMainDocumentUploadButton]=\"showMainDocumentUploadButton\" [showMainDocumentViewButton]=\"showMainDocumentViewButton\" [safeURLMainDoc]=\"safeURLMainDoc\"\n      [showSupportDocumentFrame]=\"showSupportDocumentFrame\" [showSupportiveDocumentUploadButton]=\"showSupportiveDocumentUploadButton\" [showSupportiveDocumentViewButton]=\"showSupportiveDocumentViewButton\" [safeURLSupportDoc]=\"safeURLSupportDoc\"\n      [revisionLetterAttachment]=\"revisionLetterAttachment\" [showRevisionLetterUploadButton]=\"showRevisionLetterUploadButton\" [showRevisionLetterViewButton]=\"showRevisionLetterViewButton\" [safeURLRevisionLetter]=\"safeURLRevisionLetter\" -->\n  </span>\n</div>\n\n<!-- </form> -->","import { Component, Inject, OnInit, Optional, ViewChild } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTable, MatTableDataSource } from '@angular/material/table';\nimport { PerformanceMetrics } from '@models';\nimport { ApiService } from '@services';\nimport { ENDPOINTS } from '@shared';\n\n@Component({\n  selector: 'app-performance-metrics',\n  templateUrl: './performance-metrics.component.html',\n  styleUrls: ['./performance-metrics.component.scss']\n})\nexport class PerformanceMetricsComponent implements OnInit {\n  @ViewChild(MatPaginator, { static: false }) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: false }) sort: MatSort;\n  @ViewChild(MatTable, { static: false }) table: MatTable<PerformanceMetrics>;\n\n  dataSource: MatTableDataSource<PerformanceMetrics>;\n  displayedColumns: string[] = [\n    // 'referenceCode',\n    // 'appFormReference',\n    'movement',\n    'lastUpdate',\n    'duration',\n    'actionBy'\n  ];\n\n  performanceMetricsList = [];\n  referenceCode: any;\n\n  constructor(\n    private apiService: ApiService,\n    @Optional() public dialogRef: MatDialogRef<PerformanceMetricsComponent>,\n    @Optional() @Inject(MAT_DIALOG_DATA) public data: any\n  ) {\n    if (data) {\n      this.getPerformanceMatricsList(data.appFormReference);\n      this.referenceCode = data.referenceCode;\n    }\n  }\n\n  ngOnInit(): void {\n  }\n\n  getPerformanceMatricsList(appFormReference) {\n    this.apiService.findByParam(ENDPOINTS.performanceMetrics, appFormReference).subscribe((res: any) => {\n      this.performanceMetricsList = res;\n      this.dataSource = new MatTableDataSource<PerformanceMetrics>(this.performanceMetricsList);\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n    });\n  }\n\n  closeDialog() {\n    this.dialogRef.close();\n  }\n\n}\n","<button mat-raised-button class=\"button-left button-red\">\n    <span class=\"material-icons\">new_releases</span> {{referenceCode}} </button>\n<button mat-raised-button class=\"button-right button-red\" (click)=\"closeDialog()\">\n    <i class=\"material-icons color__white\">close</i> CLOSE\n</button>\n<br>\n<div class=\"mat-elevation-z8\">\n    <table mat-table [dataSource]=\"dataSource\" matSort>\n\n        <!-- <ng-container matColumnDef=\"referenceCode\">\n            <th mat-header-cell *matHeaderCellDef> Reference Code </th>\n            <td mat-cell *matCellDef=\"let element\">\n                {{ element?.referenceCode }}\n            </td>\n        </ng-container> -->\n\n        <ng-container matColumnDef=\"appFormReference\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Application Form Reference </th>\n            <td mat-cell *matCellDef=\"let element\">\n                {{ element?.appFormReference }}\n            </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"movement\">\n            <th mat-header-cell *matHeaderCellDef> Movement </th>\n            <td mat-cell *matCellDef=\"let element\">\n                {{ element?.movement.replaceAll('_', ' ') }}\n            </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"lastUpdate\">\n            <th mat-header-cell *matHeaderCellDef> Date of Action </th>\n            <td mat-cell *matCellDef=\"let element\">\n                {{ element?.previousDateTime | date:'MM/dd/yyyy hh:mm a' }}\n            </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"duration\">\n            <th mat-header-cell *matHeaderCellDef> Duration </th>\n            <td mat-cell *matCellDef=\"let element\">\n                {{ element?.duration }}\n            </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"actionBy\">\n            <th mat-header-cell *matHeaderCellDef> Action By </th>\n            <td mat-cell *matCellDef=\"let element\">\n                {{ element?.actionBy }}\n            </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n    <div class=\"no-record\" [hidden]=\"dataSource && dataSource?.data?.length > 0\">\n        No record found.\n    </div>\n    <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons></mat-paginator>\n\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ReassignmentRoutingModule } from './reassignment-routing.module';\nimport { ReassignmentComponent } from './reassignment.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { AngularMaterialModule } from '@shared';\nimport { FragmentsModule } from 'app/modules/fragments/fragments.module';\n\n\n@NgModule({\n  declarations: [ReassignmentComponent],\n  imports: [\n    CommonModule,\n    ReassignmentRoutingModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    AngularMaterialModule,\n    FragmentsModule,\n  ]\n})\nexport class ReassignmentModule { }\n","export * from './company.module';\nexport * from './add-company/add-company.component';\nexport * from './add-company/add-company.module';\nexport * from './list-company/list-company.component';\nexport * from './list-company/list-company.module';"]}