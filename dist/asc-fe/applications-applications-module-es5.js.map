{"version":3,"sources":["webpack:///src/app/modules/pages/applications/s1-application/list-s1-application/list-s1-application.component.scss","webpack:///src/app/modules/pages/applications/schedule-of-fees/special-applications/special-applications.component.ts","webpack:///src/app/modules/pages/applications/attachment-document/attachment-document.component.html","webpack:///src/app/core/models/multiple-application.model.ts","webpack:///src/app/core/models/comment.model.ts","webpack:///src/app/modules/pages/applications/s2-application/add-s2-application/add-s2-application.component.scss","webpack:///src/app/modules/pages/applications/preview-attachments/preview-attachments.component.ts","webpack:///src/app/modules/pages/applications/preview-attachments/preview-attachments.component.scss","webpack:///src/app/modules/pages/applications/preview-application/preview-application.component.ts","webpack:///src/app/modules/pages/applications/s1-application/list-s1-application/list-s1-dialog.html","webpack:///src/app/modules/pages/applications/schedule-of-fees/single-application/modal-single-application/modal-single-application.component.html","webpack:///src/app/modules/pages/applications/material-information/material-information.component.html","webpack:///src/app/modules/pages/applications/schedule-of-fees/multiple-applications/modal-multiple-applications/modal-multiple-applications.component.ts","webpack:///src/app/modules/pages/applications/reassignment/reassignment.component.scss","webpack:///src/app/modules/pages/applications/reassignment/reassignment.component.ts","webpack:///src/app/modules/pages/applications/applications.module.ts","webpack:///src/app/modules/pages/applications/s1-application/add-s1-application/add-s1-application.component.scss","webpack:///src/app/modules/pages/applications/preview-application/preview-application.component.scss","webpack:///src/app/modules/fragments/update-multiple-application/update-multiple-application.component.ts","webpack:///src/app/modules/pages/company/company-routing.module.ts","webpack:///src/app/modules/pages/company/add-company/add-company-routing.module.ts","webpack:///src/app/modules/pages/applications/s1-application/add-s1-application/add-s1-application.component.html","webpack:///src/app/modules/pages/applications/schedule-of-fees/multiple-applications/modal-multiple-applications/modal-multiple-applications.component.scss","webpack:///src/app/modules/fragments/s1-form-type/s1-form-type.component.html","webpack:///src/app/modules/fragments/update-multiple-application/update-multiple-application.component.scss","webpack:///src/app/modules/fragments/s1-form-type/s1-form-type.component.scss","webpack:///src/app/modules/pages/applications/schedule-of-fees/single-application/single-application.component.ts","webpack:///src/app/modules/pages/applications/comment/comment.component.html","webpack:///src/app/modules/pages/applications/client-information/client-information.component.scss","webpack:///src/app/modules/pages/applications/schedule-of-fees/multiple-applications/multiple-applications.component.ts","webpack:///src/app/modules/pages/applications/schedule-of-fees/single-application/modal-single-application/modal-single-application.component.ts","webpack:///src/app/modules/pages/applications/schedule-of-fees/special-applications/modal-special-applications/modal-special-applications.component.scss","webpack:///src/app/modules/pages/applications/schedule-of-fees/special-applications/modal-special-applications/modal-special-applications.component.ts","webpack:///src/app/modules/pages/applications/performance-metrics/performance-metrics.component.scss","webpack:///src/app/modules/pages/applications/schedule-of-fees/special-applications/special-applications.component.scss","webpack:///src/app/core/models/media-models/mulstimedia-static.const.ts","webpack:///src/app/modules/pages/applications/client-information/client-information.component.html","webpack:///src/app/modules/pages/accounting/index.ts","webpack:///src/app/modules/pages/applications/schedule-of-fees/single-application/single-application.component.html","webpack:///src/app/modules/pages/accounting/upload-payment/upload-payment.component.html","webpack:///src/app/modules/pages/applications/applications-routing.module.ts","webpack:///src/app/modules/pages/applications/s2-application/list-s2-application/list-s2-application.component.scss","webpack:///src/app/modules/fragments/update-special-application/update-special-application.component.scss","webpack:///src/app/modules/pages/applications/preview-attachments/preview-attachments.component.html","webpack:///src/app/modules/pages/applications/s2-application/add-s2-application/add-s2-application.component.ts","webpack:///src/app/modules/pages/applications/attachment-document/attachment-document.component.ts","webpack:///src/app/modules/pages/applications/preview-application/preview-application.component.html","webpack:///src/app/modules/pages/applications/schedule-of-fees/special-applications/special-applications.component.html","webpack:///src/app/modules/pages/applications/schedule-of-fees/multiple-applications/multiple-applications.component.scss","webpack:///src/app/modules/pages/applications/schedule-of-fees/multiple-applications/modal-multiple-applications/modal-multiple-applications.component.html","webpack:///src/app/modules/pages/accounting/upload-payment/upload-payment.component.ts","webpack:///src/app/modules/pages/applications/material-information/material-information.component.scss","webpack:///src/app/modules/fragments/s1-form-type/s1-form-type.component.ts","webpack:///src/app/modules/pages/applications/comment/comment.component.scss","webpack:///src/app/modules/pages/applications/reassignment/reassignment-routing.module.ts","webpack:///src/app/modules/pages/accounting/upload-payment/upload-payment.component.scss","webpack:///src/app/modules/pages/applications/comment/comment.component.ts","webpack:///src/app/core/models/comments.model.ts","webpack:///src/app/modules/pages/applications/reassignment/reassignment.component.html","webpack:///src/app/modules/pages/company/add-company/add-company.module.ts","webpack:///src/app/modules/pages/applications/schedule-of-fees/single-application/modal-single-application/modal-single-application.component.scss","webpack:///src/app/modules/pages/applications/schedule-of-fees/multiple-applications/multiple-applications.component.html","webpack:///src/app/modules/pages/applications/s2-application/list-s2-application/list-s2-application.component.ts","webpack:///src/app/modules/pages/applications/performance-metrics/performance-metrics.component.html","webpack:///src/app/modules/pages/applications/client-information/client-information.component.ts","webpack:///src/app/modules/pages/applications/s2-application/list-s2-application/list-s2-application.component.html","webpack:///src/app/modules/pages/applications/schedule-of-fees/special-applications/modal-special-applications/modal-special-applications.component.html","webpack:///src/app/modules/pages/applications/s2-application/add-s2-application/add-s2-application.component.html","webpack:///src/app/modules/pages/applications/attachment-document/attachment-document.component.scss","webpack:///src/app/core/models/media-models/multimedia-moving.const.ts","webpack:///src/app/modules/pages/applications/index.ts","webpack:///src/app/modules/fragments/update-special-application/update-special-application.component.html","webpack:///src/app/modules/pages/applications/s1-application/add-s1-application/add-s1-application.component.ts","webpack:///src/app/modules/fragments/update-special-application/update-special-application.component.ts","webpack:///src/app/modules/pages/applications/s1-application/list-s1-application/list-s1-application.component.ts","webpack:///src/app/modules/pages/maintenance/index.ts","webpack:///src/app/modules/pages/company/company.module.ts","webpack:///src/app/modules/pages/applications/s1-application/list-s1-application/list-s1-application.component.html","webpack:///src/app/modules/fragments/update-multiple-application/update-multiple-application.component.html","webpack:///src/app/core/models/copy-claims.model.ts","webpack:///src/app/modules/pages/applications/material-information/material-information.component.ts","webpack:///src/app/modules/pages/applications/performance-metrics/performance-metrics.component.ts","webpack:///src/app/modules/pages/applications/reassignment/reassignment.module.ts","webpack:///src/app/modules/pages/company/index.ts","webpack:///src/app/modules/pages/applications/schedule-of-fees/single-application/single-application.component.scss"],"names":["SpecialApplicationsComponent","apiService","dialog","dataStorage","displayedColumns","paymentList","currentUser","getUserAccount","getS2PaymentList","findAll","scheduleOfFeesS2Special","subscribe","res","dataSource","paginator","sort","dialogRef","open","width","height","data","afterClosed","result","ngOnInit","selector","template","MultipleApplication","MultipleApplicationId","Comment","PreviewAttachmentsComponent","previewAttachmentsList","attachmentUrl","window","PreviewApplicationComponent","attachmentDocuments","originalAttachmentDocuments","revisionAttachmentDocuments","complianceAttachmentDocuments","applicationSingleMedia","multimediaDTO","supportiveDocumentList","multimediaMovingList","multimediaStaticList","typeOfDocument","previewS1Application","submissionType","ORIGINAL","REVISION","revisionLetterAttachment","COMPLIANCE","decisionStatus","INCOMPLETE","MAIN","mainDoc","filter","attachmentType","fileURL","SUPPORTIVE","supportiveDoc","REVISION_LETTER","revisionLetterDoc","ELEMENT_DATA","referenceCode","amount","ModalMultipleApplicationsComponent","sanitizer","fileStorageService","sweetAlertService","router","multipleApplicationList","s1Application","payment","previewDocument","attachmentDocument","isSubmitted","paymentTypeList","multipleApplication","isDisabled","typeOfMediumDisplay","paymentStatus","FOR_PAYMENT","getPaymentDetails","getMultipleApplicationList","getPaymentList","multiplePaymentDetails","id","paymentDetails","getMultipleAppFormsWithNoRejected","responseData","console","log","forEach","refTypeOfMedium","applicationFormS2","applicationForm","getApplicationSingleMedia","appFormReference","getMultimediaMoving","getMultimediaStatic","err","error","message","under_maintenance","paymentType","userRole","name","ROLE_APPLICANT","creditCardIndex","findIndex","element","paymentDescription","splice","event","attachmentSize","target","files","size","type","customErrorMessage","value","pdfURL","URL","createObjectURL","safeURLProofOfPayment","bypassSecurityTrustResourceUrl","reader","FileReader","file","readAsDataURL","onload","selectedFiles","fire","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","setDisplayProgressbar","params","PAYMENT","pushFileToStorage","item","obj","paymentAttachmentReference","amountDue","totalAmount","filename","saveProofOfPayment","undefined","FOR_APPROVAL","officialReceiptNo","paymentMethod","save","applicationFormPresentor","customSuccessMessage","closeModal","close","navigate","findByParam","length","mediumExecution","typeOfMedium","description","sizeLength","index","applicationMultimedia","multimediaList","Set","map","mappedList","multimediaSizeLength","mediaCtrl","media","ReassignmentComponent","formBuilder","spinner","s2Application","userList","s1ApplicationList","s1ApplicationDisplayedColumns","s2ApplicationList","s2ApplicationDisplayedColumns","applicationOwnerName","displayedContent","getS1ApplicationList","setFormValidator","getUserList","applicationType","show","admin","filteredS1List","appliedS2","s1ApplicationDataSource","formListComponent","hide","s2ApplicationDataSource","findById","idForUpdate","applicationOwner","lastName","firstName","assignedUser","endpoint","currentObj","applicationReassignment","s2ApplicationReassignment","actionStatus","assignedEncoder","assignedAdSpecialist","success","resetFormValidator","s1ApplicationForm","group","adTitle","assignedReviewer","assignedScreener","markAsUntouched","markAsPristine","userAccount","filteredUsers","selected","evt","tab","textLabel","ApplicationsModule","declarations","imports","exports","UpdateMultipleApplicationComponent","datepipe","company","multipleS1Application","multipleS1ApplicationList","isAscUser","isDisableFieldOnUpdate","isDisabledSubmitButton","canForwardMultipleApp","isAllApplicationsHasMainDoc","warningNote","formType","MULTIPLE","ascUserRoleList","role","ascUser","brand","product","currentUserRole","includes","getUserRole","getS1FormsByMultipleApplication","ROLE_ADMIN","ROLE_SUPER_ADMIN","getMultipleAppForms","filteredList","mainAttachmentReference","supportingAttachmentReference","hasNoSupportingDocs","today","transform","Date","approvedDate","dateOfSubmission","submissionStatus","status","checkForwardStatus","countVerifiedApplicationForm","actualNumberOfApplicationForm","displayStatus","endpointExtension","actionDate","actionBy","username","update","multipleId","ctr","numberOfApplication","result2","user","forwardMultipleAppFormToScreener","forwardMultipleAppFormToReviewer","filteredS1App","routes","path","children","LIST_COMPANY","loadChildren","m","ListCompanyModule","ADD_COMPANY","AddCompanyModule","UPDATE_COMPANY","CompanyRoutingModule","forChild","component","AddCompanyRoutingModule","SingleApplicationComponent","getS1PaymentList","maxHeight","MultipleApplicationsComponent","getS1MultiplePaymentList","ModalSingleApplicationComponent","vat","toFixed","navigateByUrl","ModalSpecialApplicationsComponent","specialPaymentDetails","UNPAID","s2ApplicationFormPresentor","MultiMediaStaticConst","Array","multimediaStaticMedium","hasSelected","S1_APPLICATION","S1ApplicationModule","S2_APPLICATION","S2ApplicationModule","SCHEDULE_OF_FEES_SINGLE_APPLICATION","SingleApplicationModule","SCHEDULE_OF_FEES_MULTIPLE_APPLICATIONS","MultipleApplicationsModule","SCHEDULE_OF_FEES_SPECIAL_APPLICATIONS","SpecialApplicationsModule","ACCOUNTS_PAYABLE","AccountsPayableModule","APPLICATION_REASSIGNMENT","ReassignmentModule","ApplicationsRoutingModule","AddS2ApplicationComponent","route","spinnerMessageEmitter","title","rationaleS2","report","s2OriginalAttachmentDocuments","s2OriginalAttachmentObservable","s2ComplianceAttachmentDocuments","affiliationList","companyList","selectedMultimediaList","rationaleOthersList","rationaleLists","isNewCompany","showCompanyAddress","spinnerMessage","todayDate","tempCompliance","audioVideo","isAudioVideo","isShowUploadButton","rationaleDisplay","isSuperAdmin","isAdmin","isAccounting","isApplicant","isEvaluator","isAdSpecialist","isScreener","isReviewer","previewAttachmentsDisplayedColumns","applicationStage","Number","snapshot","paramMap","get","initUserRole","getAffiliationList","getCompanyList","viewS2Application","ROLE_ACCOUNTING","ROLE_SCREENER","ROLE_REVIEWER","ROLE_AD_SPECIALIST","ROLE_ENCODER","clientInformation","materialInformation","finalMaterialAttachmentReference","getS2AttachmentDocument","setApplicationStage","hideSpinner","SINGLE_MEDIA","MULTIMEDIA_MOVING","MULTIMEDIA_STATIC","getAttachmentDocuments","DISAPPROVED","internalStatus","getRationaleList","clearanceAndToa","previewAttachmentsData","previewAttachmentsListDataSource","comment","getCommentsS2","swalMessage","s2ApplicationFormPresentorSubmit","s2ApplicationFormEncoderVerify","s2ApplicationFormAdSpe","APPROVED","navigateToS2List","s2ApplicationForm","externalStatus","action","attachmentDocumentByAppFormReference","SAVED","next","supportiveDocument","i","validityDate","incompleteDisapprovedRationale","activeMembersAffiliation","activeCompanies","companyName","affiliation","required","attachmentComponent","selectFile","eventParam","byteToMegaByte","finalMaterialType","maxFileSize","fileSize","toLowerCase","safeURLFile","selectedFile","appFormRef","FINAL_MATERIAL","uploadedFinalMaterialFile","addToAttachmentDocuments","myFinalMaterialFileInputC","nativeElement","myFinalMaterialFileC","myFinalMaterialFileInput","myFinalMaterialFile","originalFilename","fileExtension","documentFormat","createdBy","createdDate","attachmentDocumentByS2AppFormReference","setTimeout","applicationRationaleS2","others","rationaleListS2","format","module","applicationFormS2Id","printReport","generateReports","newBlob","Blob","downloadURL","s2ManualRelease","AttachmentDocumentComponent","dataStorageService","s2DocObservable","s2SupportDocument","S2SupportDoc","tempRevisionAttachmentDocuments","tempComplianceAttachmentDocuments","s2Appplication","labelMainDocument","showMainDocumentUploadButton","showMainDocumentUploadButtonR","showMainDocumentUploadButtonC","showMainDocumentViewButton","showMainDocumentViewButtonR","showMainDocumentViewButtonC","showSupportDocumentFrame","showSupportDocumentFrameR","showSupportDocumentFrameC","showSupportiveDocumentUploadButton","showSupportiveDocumentUploadButtonR","showSupportiveDocumentUploadButtonC","showSupportiveDocumentViewButton","showSupportiveDocumentViewButtonR","showSupportiveDocumentViewButtonC","showRevisionLetterViewButton","showRevisionLetterUploadButton","mainDocAttachmentSize","supportDocAttachmentSize","revisionDocAttachmentSize","progress","percentage","changes","r","s2SupportAttchmentDocuments","accountType","label","attachmentSizeForUpload","safeURLSupportDoc","safeURLMainDoc","safeURLRevisionLetter","S1_APPLICATION_REVIEWED","COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER","safeURLMainDocR","safeURLSupportDocR","revisionLetterAttachmentReference","safeURLMainDocC","safeURLSupportDocC","replaceAll","currentFileUpload","uploadedFileSupportive","s2SupportDocAddToAttachmentDocument","uploadedFileMain","uploadedFileRevision","push","JSON","parse","stringify","myMainFile","myMainInput","isOriginal","documentType","currentSubType","REVISION_SCREENED","S1_APPLICATION_REJECTED","mySupportiveFile","mySupportiveInput","myRevisionLetterFile","attachmentDocumentForm","attachmentReference","language","dialect","multimediaLength","multimediaSize","applicationMultimediaStatic","applicationMultimediaMoving","UploadPaymentComponent","paymentForm","remarks","pt","S1FormTypeComponent","numberOfMultipleApplicationAllowed","applicationTypeList","formTypeList","showNumberOfApplications","isMultiple","isSpecial","isPresentation","getApplicationTypeList","getNoOfMultipleApplicationsAllowed","noOfMultipleApplicationAllowed","INDIVIDUAL","toLocaleLowerCase","apptype","formtype","numberOfApplications","min","parseInt","minimum","toString","max","maximum","navigateToS1Application","formAndAppType","appType","setS1FormAndAppType","setNumberOfApplications","FOR_PRESENTATION","proceedS1Application","ReassignmentRoutingModule","CommentComponent","commentS1Application","commentS2Application","internalComment","externalComment","copyClaims","commentList","internalCommentList","externalCommentList","replyInternalComment","copyClaimsList","commentId","commentTypeList","commentType","internalCommentProcess","externalCommentProcess","copyClaimesProcess","disabledComment","editCopyClaimsComment","editExternalComment","replyEditorConfig","editable","spellcheck","minHeight","minWidth","translate","enableToolbar","showToolbar","placeholder","defaultParagraphSeparator","defaultFontName","defaultFontSize","fonts","customClasses","tag","uploadUrl","uploadWithCredentials","sanitize","toolbarPosition","toolbarHiddenButtons","editorConfig","screenerDecisionComment","reviewerDecisionComment","releaseStatus","getComments","getCopyClaims","commentS2","applicationFormType","S2","S1","setHtml5Value","dateTransformed","isReply","parentId","addInternalComment","replyEditorIsEnabled","deleteById","commentForm","internalComments","externalComments","commentBody","commentHtmlOutput","CommentThread","parent","ListS2ApplicationComponent","commonService","pageSize","pageNo","pageSizeOptions","s2TotalItems","s2ApplicationListForClearance","forClearanceDisplayedColumns","s2SpecialTotalItems","s2SpecialApplicationList","s2SpecialApplicationDisplayedColumns","applicationRequest","currentPage","originalTabDataCount","complianceTabDataCount","releasedAppealTabDataCount","toaTabDataCount","click","timeLeft","refreshButtonEnabled","isTimerValueDisplay","s2ApplicationCountList","applicationCountS2","viewApplicationType","url","getListCount","applicationTypeTitle","getSpecialS2ApplicationList","getList","badgeCountByApplicationOwnerS2","badgeCountByAscUserS2","param","toUpperCase","TOA","s2ApplicationFormEncoder","s2ApplicationFormAdmin","totalItems","statuses","s2SpecialClearingApplicationRequestsAdmin","applicationOwnerId","s2SpecialClearingApplicationRequests","s2SpecialApplicationDataSource","pageIndex","setPageSizeOptionsInput","split","str","formStatus","OPEN","takeApplication","specialClearing","elementId","getForDecisionAndComment","paginatorFalse","a","b","reverse","sendClickEvent","startTimer","interval","setInterval","clearInterval","timerDisplay","minutes","Math","floor","ClientInformationComponent","addressService","checkInactiveAffiliation","hasErrorFields","memberAffiliationList","brandList","productList","regionsList","provinceList","cityMunicipalityList","barangayList","countryList","notInSelection","ngUnsubscribe","getBrandList","getCountries","setProductList","clientInformationForm","category","companyAddress","country","membersAffiliation","valueChanges","pipe","checkInvalidFields","activeBrands","productsByBrand","INACTIVE","checkInactiveAffiliationFunction","dataForModal","isFromModal","isUpdate","getDefaultCountry","setS1NewCompany","getS1NewCompany","getS1NewBrand","currentStatus","getS1NewProduct","code","countries","setDefaultCountry","isInactiveAffiliation","emit","complete","MultiMediaMovingConstant","multimediaMovingMedium","activeHolidayDates","activeWeekendDates","AddS1ApplicationComponent","cd","commonServices","_snackBar","exportTime","hour","minute","meriden","presentorDetails","rationale","specialApplicationType","screenerList","reviewerList","applicantList","mediaTypeListTemp","adSpecialistList","applicationSingleMediaTemp","currentSizeLengthMultimedia","toDeleteMultimediaList","hasMultimediaLengthToEnableSubmit","disableSubmitButtonByMedia","hasErrorsClient","badgeCounter","isChecked","isSubmit","noDocumentAttached","accordionDisable","accordionExpanded","validationMessage","buttonDisabled","adSpecButtonDisabled","maxSizeLength","getDay","getS1FormAndAppType","getS1Application","getSpecialS1Application","submissionDate","autoSubmit","viewApplication","tagLine","sequenceOrder","disableFieldOnUpdate","getUserTypeForList","checkSingleMediaChanges","getAllActiveHolidays","getAllActiveWeekends","that","date","isDateHoliday","newMultimediaList","detectChanges","sessionStorage","removeItem","setAppType","fetchMultimedia","scheduleSubmission","onChangeDate","getPresentorDetails","APPROVED_WITH_CAUTION","COMPLIANCE_DOCUMENT_VERIFIED_BY_AD_SPE","REVISION_VERIFIED_BY_AD_SPE","getDecisionStatus","stampedMaterialAndDecisionForms","userLogin","previewApplication","currentSizeLength","mappedMultimedia","suppDoc","getSupportiveDocuments","viewPayment","res1","paymentAttachment","safeURL","submissionDateValue","controls","reset","disableSaveAndSubmitButton","decision","account","applicationFormScreener","defaultReviewer","reviewer","ascDefault","otherReviewers","buttonValidation","ACTIVE","process","saveOrUpdateApplication","validateAscRates","saveStatus","getNumberOfApplications","setAndSaveS1Data","isScheduleSendIsEmpty","setTypeOfMediumDisplay","saveUpdateApplicationSingleMedia","saveUpdateMultimedia","movingStatic","currentTOM","multimediaToDelete","replace","SAVE","saveAppForm","SUBMIT","processAppForm","typeOfMultimedia","navigateToS1List","supportingDocuments","newSupportiveDocumentList","BATCH","dateFetched","api","newStatus","multipleApplicationReturnToAdSpe","multipleApplicationReturnToScreener","applicationFormReviewer","S1_APPLICATION_VERIFIED_BY_AD_SPE","S1_APPLICATION_SCREENED","reAssignScreenerForMultipleApplication","applicationFormAdSpecialist","reAssignReviewerForMultipleApplication","currentDate","msg","S1_APPLICATION_SUBMITTED","S1_APPLICATION_CANCELLED","CANCEL","REJECT","VERIFY","SCREEN","ACCEPT","checkNullValues","selectedApplicationOwner","saveSupportingDocuments","responseMessage","forwardMultipleAppsTo","checkCutOffTime","horizontalPosition","verticalPosition","duration","submitDecisionAndCommentScreener","submitDecisionAndCommentReviewer","forwardMultipleAppFormToAdSpe","releaseMultipleApplication","SUBMITTED_DOCUMENT_FOR_COMPLIANCE","revisionNo","submitApplicationForm","hasSpecialClearing","applicationRequests","d","day","find","weekendDate","Boolean","holidayDate","setDecisionStatus","incompleteDisapprovedModal","applicationFormEncoder","decisionFormFileURL","stampMaterialFileURL","applicationFormId","applicationRationale","rationaleList","hasMultimediaLengthChange","modifyApprovedS1ApplicationFormMultimedia","modifyApprovedS1ApplicationFormSingleMedia","newMedia","mediaType","multimediaListChanges","hasSizeLengthChange","multimediaSizeLengthNew","filteredMedia","filteredRes","hasNewMultimediaType","multimedia","some","currMedia","applicationMultimediaMovingList","medium","applicationMultimediaStaticList","typeofMedium","s1ManualRelease","regex","RegExp","startTime","endTime","currentTime","String","getHours","getMinutes","getSeconds","holidays","holidayType","penalty","delinquent","isSaveAndRequestForApprovalDisabled","UpdateSpecialApplicationComponent","ListS1ApplicationComponent","webSocketService","totalPages","returnedApps","multipleApplicationDisplayedColumns","multipleTotalItems","specialApplicationList","specialApplicationDisplayedColumns","specialTotalItems","assignedApplicationList","assignedApplicationDisplayedColumns","forReleaseApplicationsList","forReleaseTotalItems","forReleaseApplicationDisplayedColumns","applicationList","revisionTabDataCount","decisionCommentTabDataCount","s1ApplicationTitle","doFilter","trim","doFilterS1MultipleApplicationList","multipleApplicationDataSource","doFilterSpecialS1ApplicationList","specialApplicationDataSource","doFilterAssignedS1ApplicationList","assignedApplicationDataSource","doFilterForReleaseApplicationList","forReleaseApplicationDataSource","listen","badgeCountByAscUser","getListCounts","refreshApplicationBadgeCount","match","screenedCount","badgeCountByApplicationOwner","response","screenedApplications","getMultipleS1ApplicationList","getSpecialS1ApplicationList","getAssignAppFormBy","getForReleaseApplicationList","getReleasedApplicationList","applicationFormAdmin","stats","PAID","ASSIGN_TO_PRESENTOR","ascEndpoint","assignedASCUser","s1SpecialApplicationRequestsAdmin","s1SpecialApplicationRequests","retrieveReassignLength","getForReleaseApplicationAdSpe","getForReleaseApplicationsReviewer","getAdminSuperAdminForReleaseApplication","getReleaseApplicationsAdSpe","currentAssignee","lockedBy","setS1Application","setSpecialS1Application","promise","Promise","resolve","reject","saveUserAccount","getCompanyById","typeOfExecution","ListS1Dialog","s1App","application","fetchedData","validateApp","LOCKED","userType","getAllAdSpeReturnedApps","getAllScreenerReturnedApps","respose","indexOf","isS2","hasToa","s2ApplicationFormPresentorSave","CompanyModule","CopyClaims","MaterialInformationComponent","validateFieldService","util","checkSingleMediaChangesFunction","checkMultimediaChangesFunction","typeOfMediumList","executionList","dialectList","typeOfDocumentList","setMultimediaList","selectedMultimediaStringList","supportingDocument","newApplicationSingleMedia","selectMultimedia","previewMainDocument","showSupportiveDocumentDownloadButton","showRevisionLetterDownloadButton","previewSupportiveDocument","isDigitalStatic","savedTypeOfMedium","selectedTypeOfMedium","multimediaMovingDTO","multimediaStaticDTO","getTypeOfDocumentList","emitSingleMediaChanges","initializeMultimediaMovingObj","initializeMultimediaStaticObj","getTypeOfMedium","getExecutionDialectList","materialInformationForm","previousRefCode","basedOn","variant","dateOfLaunch","expiresOn","input","typeOfMediumSingleMedia","typeOfMediumMultiMediaMoving","MULTIMEDIA","typeOfMediumMultiMediaStatic","resetValues","typeOfMainDocument","executionEnable","lengthEnable","sizeLengthEnable","typeOfExecutionsByMedium","dialects","keepValues","key","checkIfDocumentAlreadyExist","expiresOnEnable","supportingDocumentIndex","number","numbersOnly","changeDetection","OnPush","PerformanceMetricsComponent","performanceMetricsList","getPerformanceMatricsList","performanceMetrics"],"mappings":"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","file":"applications-applications-module-es5.js","sourcesContent":["export default \".applicantStatus,\\ntd.mat-cell:last-of-type {\\n  padding-right: 0;\\n}\\n\\nth {\\n  background-color: rgba(202, 202, 202, 0.438);\\n  font-weight: 500;\\n  color: black;\\n}\\n\\n.row {\\n  align-items: center;\\n}\\n\\n.material-icons {\\n  color: white;\\n}\\n\\n.icon-red {\\n  color: red;\\n}\\n\\n.legend-content {\\n  padding: 5px 10px;\\n  border: #dadada solid 2px;\\n  border-radius: 5px;\\n}\\n\\n.legend-table {\\n  width: 100%;\\n  font-size: 10px;\\n  font-weight: 600;\\n}\\n\\n.legend-table .legend-box {\\n  padding: 5px;\\n  display: inline-block;\\n  margin-right: 4%;\\n  vertical-align: sub;\\n  border: solid 1px #8a8a8a;\\n}\\n\\n.legend-table td {\\n  margin: auto;\\n}\\n\\n.legend-table td .legend-orange {\\n  background-color: #fca402;\\n}\\n\\n.legend-table td .legend-green {\\n  background-color: #8fcf8f;\\n}\\n\\n.legend-table td .legend-blue {\\n  background-color: lightblue;\\n}\\n\\n.legend-table td .legend-red {\\n  background-color: #ff8a7b;\\n}\\n\\n.legend-table td .legend-purple {\\n  background-color: violet;\\n}\\n\\n.legend-table td .legend-yellow {\\n  background-color: yellow;\\n}\\n\\n.legend-table td .legend-pink {\\n  background-color: lightpink;\\n}\\n\\n.icon-black, .info-msg {\\n  color: black;\\n}\\n\\n.list-dialog-content {\\n  margin: auto;\\n  vertical-align: middle;\\n  overflow-x: hidden;\\n}\\n\\n.list-dialog-content button {\\n  width: 100%;\\n  border: none;\\n  height: 70px;\\n  white-space: normal;\\n}\\n\\n.list-dialog-content .head-icon {\\n  text-align: center;\\n  margin-bottom: 5px;\\n}\\n\\n.list-dialog-content .head-icon p {\\n  font-weight: 700;\\n  font-size: 20px;\\n}\\n\\n.list-dialog-content .head-icon .sub-title {\\n  color: gray;\\n  font-style: italic;\\n  font-size: 12px;\\n  font-weight: 400;\\n  line-height: 2px;\\n}\\n\\n.list-dialog-content .head-icon .material-icons {\\n  color: #910000;\\n  font-size: 4em;\\n}\\n\\n.list-dialog-content .head-icon .warning-msg {\\n  text-align: center;\\n  font-size: 18px;\\n  font-weight: 500;\\n  padding-top: 15px;\\n  color: #910000;\\n}\\n\\n.form-check {\\n  margin: 0px 10px;\\n}\\n\\n.form-check label {\\n  font-weight: 600;\\n}\\n\\n.ng-template {\\n  text-align: end;\\n  background-color: red;\\n}\\n\\nspan {\\n  padding: 0;\\n  width: auto;\\n}\\n\\n.c-badge {\\n  position: relative;\\n  top: -10px;\\n  padding-left: 20px;\\n  z-index: 10;\\n}\\n\\n.payment-status-chip {\\n  text-align: center;\\n  border-radius: 20px;\\n  padding: 2px 10px;\\n  color: #fff;\\n  font-size: 9px;\\n  white-space: nowrap;\\n  max-width: 90px;\\n  margin: 0 auto;\\n}\\n\\n.payment-status-chip--paid {\\n  background-color: #28a745;\\n}\\n\\n.payment-status-chip--unpaid {\\n  background-color: #dc3545;\\n}\\n\\n.payment-status-chip--for-approval {\\n  background-color: #17a2b8;\\n}\\n\\n.payment-status-chip--for-payment {\\n  background-color: #ffc107;\\n}\\n\\n.mat-column-icon button {\\n  margin: 3px !important;\\n}\\n\\n.mat-column-paymentStatus {\\n  text-align: center;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9wYWdlcy9hcHBsaWNhdGlvbnMvczEtYXBwbGljYXRpb24vbGlzdC1zMS1hcHBsaWNhdGlvbi9saXN0LXMxLWFwcGxpY2F0aW9uLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztFQUdFLGdCQUFBO0FBQUY7O0FBR0E7RUFDRSw0Q0FBQTtFQUNBLGdCQUFBO0VBQ0EsWUFBQTtBQUFGOztBQUdBO0VBQ0UsbUJBQUE7QUFBRjs7QUFHQTtFQUNFLFlBQUE7QUFBRjs7QUFHQTtFQUNFLFVBQUE7QUFBRjs7QUFHQTtFQUNFLGlCQUFBO0VBQ0EseUJBQUE7RUFDQSxrQkFBQTtBQUFGOztBQUVBO0VBQ0UsV0FBQTtFQUNBLGVBQUE7RUFDQSxnQkFBQTtBQUNGOztBQUFFO0VBQ0UsWUFBQTtFQUNBLHFCQUFBO0VBQ0EsZ0JBQUE7RUFDQSxtQkFBQTtFQUNBLHlCQUFBO0FBRUo7O0FBQUU7RUFDRSxZQUFBO0FBRUo7O0FBREk7RUFDRSx5QkFBQTtBQUdOOztBQURJO0VBQ0kseUJBQUE7QUFHUjs7QUFBSTtFQUNJLDJCQUFBO0FBRVI7O0FBQ0k7RUFDSSx5QkFBQTtBQUNSOztBQUVJO0VBQ0ksd0JBQUE7QUFBUjs7QUFHSTtFQUNJLHdCQUFBO0FBRFI7O0FBSUk7RUFDSSwyQkFBQTtBQUZSOztBQVNBO0VBQ0UsWUFBQTtBQU5GOztBQVNBO0VBQ0UsWUFBQTtFQUNBLHNCQUFBO0VBQ0Esa0JBQUE7QUFORjs7QUFRRTtFQUNFLFdBQUE7RUFDQSxZQUFBO0VBQ0EsWUFBQTtFQUNBLG1CQUFBO0FBTko7O0FBU0U7RUFDRSxrQkFBQTtFQUNBLGtCQUFBO0FBUEo7O0FBUUk7RUFDRSxnQkFBQTtFQUNBLGVBQUE7QUFOTjs7QUFTSTtFQUNFLFdBQUE7RUFDQSxrQkFBQTtFQUNBLGVBQUE7RUFDQSxnQkFBQTtFQUNBLGdCQUFBO0FBUE47O0FBU0k7RUFDRSxjQUFBO0VBQ0EsY0FBQTtBQVBOOztBQVNJO0VBQ0Usa0JBQUE7RUFDQSxlQUFBO0VBQ0EsZ0JBQUE7RUFDQSxpQkFBQTtFQUNBLGNBQUE7QUFQTjs7QUFZQTtFQUNFLGdCQUFBO0FBVEY7O0FBVUU7RUFDRSxnQkFBQTtBQVJKOztBQVlBO0VBQ0UsZUFBQTtFQUNBLHFCQUFBO0FBVEY7O0FBWUE7RUFDRSxVQUFBO0VBQ0EsV0FBQTtBQVRGOztBQWFBO0VBQ0Usa0JBQUE7RUFDRSxVQUFBO0VBRUEsa0JBQUE7RUFDQSxXQUFBO0FBWEo7O0FBY0E7RUFDRSxrQkFBQTtFQUNBLG1CQUFBO0VBQ0EsaUJBQUE7RUFDQSxXQUFBO0VBQ0EsY0FBQTtFQUNBLG1CQUFBO0VBQ0EsZUFBQTtFQUNBLGNBQUE7QUFYRjs7QUFhRTtFQUNFLHlCQUFBO0FBWEo7O0FBY0U7RUFDRSx5QkFBQTtBQVpKOztBQWVFO0VBQ0UseUJBQUE7QUFiSjs7QUFnQkU7RUFDRSx5QkFBQTtBQWRKOztBQWtCQTtFQUNFLHNCQUFBO0FBZkY7O0FBa0JBO0VBQ0Usa0JBQUE7QUFmRiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcGFnZXMvYXBwbGljYXRpb25zL3MxLWFwcGxpY2F0aW9uL2xpc3QtczEtYXBwbGljYXRpb24vbGlzdC1zMS1hcHBsaWNhdGlvbi5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5hcHBsaWNhbnRTdGF0dXMsXHJcbnRkLm1hdC1jZWxsOmxhc3Qtb2YtdHlwZSB7XHJcbiAgLy8gdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIHBhZGRpbmctcmlnaHQ6IDA7XHJcbn1cclxuXHJcbnRoIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDIwMiwgMjAyLCAyMDIsIDAuNDM4KTtcclxuICBmb250LXdlaWdodDogNTAwO1xyXG4gIGNvbG9yOiBibGFjaztcclxufVxyXG5cclxuLnJvdyB7XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxufVxyXG5cclxuLm1hdGVyaWFsLWljb25zIHtcclxuICBjb2xvcjogd2hpdGU7XHJcbn1cclxuXHJcbi5pY29uLXJlZCB7XHJcbiAgY29sb3I6IHJlZDtcclxufVxyXG5cclxuLmxlZ2VuZC1jb250ZW50e1xyXG4gIHBhZGRpbmc6IDVweCAxMHB4O1xyXG4gIGJvcmRlcjogcmdiKDIxOCwgMjE4LCAyMTgpIHNvbGlkIDJweDtcclxuICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbn1cclxuLmxlZ2VuZC10YWJsZXtcclxuICB3aWR0aDogMTAwJTtcclxuICBmb250LXNpemU6IDEwcHg7XHJcbiAgZm9udC13ZWlnaHQ6IDYwMDtcclxuICAubGVnZW5kLWJveHtcclxuICAgIHBhZGRpbmc6IDVweDtcclxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgIG1hcmdpbi1yaWdodDogNCU7XHJcbiAgICB2ZXJ0aWNhbC1hbGlnbjogc3ViO1xyXG4gICAgYm9yZGVyOiBzb2xpZCAxcHggcmdiKDEzOCwgMTM4LCAxMzgpO1xyXG4gIH1cclxuICB0ZHtcclxuICAgIG1hcmdpbjogYXV0bztcclxuICAgIC5sZWdlbmQtb3JhbmdlIHtcclxuICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZjYTQwMjtcclxuICAgIH1cclxuICAgIC5sZWdlbmQtZ3JlZW4ge1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICM4ZmNmOGY7XHJcbiAgICB9XHJcblxyXG4gICAgLmxlZ2VuZC1ibHVlIHtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiBsaWdodGJsdWU7XHJcbiAgICB9XHJcblxyXG4gICAgLmxlZ2VuZC1yZWQge1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmZjhhN2I7XHJcbiAgICB9XHJcblxyXG4gICAgLmxlZ2VuZC1wdXJwbGUge1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IHZpb2xldDtcclxuICAgIH1cclxuXHJcbiAgICAubGVnZW5kLXllbGxvdyB7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogeWVsbG93O1xyXG4gICAgfVxyXG5cclxuICAgIC5sZWdlbmQtcGluayB7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjpsaWdodHBpbms7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuXHJcbn1cclxuXHJcbi5pY29uLWJsYWNrLCAuaW5mby1tc2d7XHJcbiAgY29sb3I6IGJsYWNrO1xyXG59XHJcblxyXG4ubGlzdC1kaWFsb2ctY29udGVudHtcclxuICBtYXJnaW46IGF1dG87XHJcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcclxuICBvdmVyZmxvdy14OiBoaWRkZW47XHJcblxyXG4gIGJ1dHRvbntcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgYm9yZGVyOiBub25lO1xyXG4gICAgaGVpZ2h0OiA3MHB4O1xyXG4gICAgd2hpdGUtc3BhY2U6IG5vcm1hbDtcclxuICB9XHJcblxyXG4gIC5oZWFkLWljb257XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBtYXJnaW4tYm90dG9tOiA1cHg7XHJcbiAgICBwe1xyXG4gICAgICBmb250LXdlaWdodDogNzAwO1xyXG4gICAgICBmb250LXNpemU6IDIwcHg7XHJcblxyXG4gICAgfVxyXG4gICAgLnN1Yi10aXRsZXtcclxuICAgICAgY29sb3I6IGdyYXk7XHJcbiAgICAgIGZvbnQtc3R5bGU6IGl0YWxpYztcclxuICAgICAgZm9udC1zaXplOiAxMnB4O1xyXG4gICAgICBmb250LXdlaWdodDogNDAwO1xyXG4gICAgICBsaW5lLWhlaWdodDogMnB4O1xyXG4gICAgfVxyXG4gICAgLm1hdGVyaWFsLWljb25ze1xyXG4gICAgICBjb2xvcjogcmdiKDE0NSwgMCwgMCk7XHJcbiAgICAgIGZvbnQtc2l6ZTogNGVtO1xyXG4gICAgfVxyXG4gICAgLndhcm5pbmctbXNne1xyXG4gICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgIGZvbnQtc2l6ZTogMThweDtcclxuICAgICAgZm9udC13ZWlnaHQ6IDUwMDtcclxuICAgICAgcGFkZGluZy10b3A6IDE1cHg7XHJcbiAgICAgIGNvbG9yOiByZ2IoMTQ1LCAwLCAwKTtcclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcbi5mb3JtLWNoZWNre1xyXG4gIG1hcmdpbjogMHB4IDEwcHg7XHJcbiAgbGFiZWx7XHJcbiAgICBmb250LXdlaWdodDogNjAwO1xyXG4gIH1cclxufVxyXG5cclxuLm5nLXRlbXBsYXRle1xyXG4gIHRleHQtYWxpZ246IGVuZDtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZWQ7XHJcbn1cclxuXHJcbnNwYW57XHJcbiAgcGFkZGluZzogMDtcclxuICB3aWR0aDogYXV0bztcclxuXHJcbn1cclxuXHJcbi5jLWJhZGdle1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIHRvcDogLTEwcHg7XHJcbiAgICAvLyBsZWZ0OiAyMnB4O1xyXG4gICAgcGFkZGluZy1sZWZ0OiAyMHB4O1xyXG4gICAgei1pbmRleDogMTA7XHJcbn1cclxuXHJcbi5wYXltZW50LXN0YXR1cy1jaGlwIHtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgYm9yZGVyLXJhZGl1czogMjBweDtcclxuICBwYWRkaW5nOiAycHggMTBweDtcclxuICBjb2xvcjogI2ZmZjtcclxuICBmb250LXNpemU6IDlweDtcclxuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xyXG4gIG1heC13aWR0aDogOTBweDtcclxuICBtYXJnaW46IDAgYXV0bztcclxuXHJcbiAgJi0tcGFpZCB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjhhNzQ1O1xyXG4gIH1cclxuXHJcbiAgJi0tdW5wYWlkIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNkYzM1NDU7XHJcbiAgfVxyXG5cclxuICAmLS1mb3ItYXBwcm92YWwge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzE3YTJiODtcclxuICB9XHJcblxyXG4gICYtLWZvci1wYXltZW50IHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmMxMDc7XHJcbiAgfVxyXG59XHJcblxyXG4ubWF0LWNvbHVtbi1pY29uIGJ1dHRvbiB7XHJcbiAgbWFyZ2luOiAzcHggIWltcG9ydGFudDtcclxufVxyXG5cclxuLm1hdC1jb2x1bW4tcGF5bWVudFN0YXR1cyB7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG59XHJcbiJdfQ== */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTable, MatTableDataSource } from '@angular/material/table';\r\nimport { ApiService, DataStorageService, SweetAlertService } from '@services';\r\nimport { ENDPOINTS } from '@shared';\r\nimport { ModalSpecialApplicationsComponent } from './modal-special-applications/modal-special-applications.component';\r\n\r\n\r\n@Component({\r\n  selector: 'app-special-applications',\r\n  templateUrl: './special-applications.component.html',\r\n  styleUrls: ['./special-applications.component.scss']\r\n})\r\nexport class SpecialApplicationsComponent implements OnInit {\r\n\r\n  @ViewChild(MatPaginator, { static: false }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: false }) sort: MatSort;\r\n  @ViewChild(MatTable, { static: false }) table: MatTable<Object>;\r\n\r\n  dataSource: MatTableDataSource<any>\r\n  displayedColumns: string[] = ['referenceCode', 'typeOfApplication', 'brand', 'medium', 'applicantCompanyName', 'paymentStatus'];\r\n  paymentList = [];\r\n\r\n  currentUser: any;\r\n  constructor(\r\n    private apiService: ApiService,\r\n    private dialog: MatDialog,\r\n    private dataStorage: DataStorageService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.currentUser = this.dataStorage.getUserAccount();\r\n    this.getS2PaymentList();\r\n  }\r\n\r\n  getS2PaymentList() {\r\n    this.apiService.findAll(ENDPOINTS.scheduleOfFeesS2Special).subscribe((res: any) => {\r\n      this.paymentList = res;\r\n\r\n      this.dataSource = new MatTableDataSource<any>(this.paymentList);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    });\r\n  }\r\n\r\n  openModal(res) {\r\n\r\n    const dialogRef = this.dialog.open(ModalSpecialApplicationsComponent, {\r\n      width: '60%',\r\n      height: '85%',\r\n      data: res\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.ngOnInit();\r\n    });\r\n\r\n  }\r\n}\r\n","export default \"<div class=\\\"row\\\">\\r\\n  <b\\r\\n    *ngIf=\\\"\\r\\n      currentUser?.userRole?.name == 'ROLE_APPLICANT' &&\\r\\n      applicationStage === 'S1-APPLICATION'\\r\\n    \\\"\\r\\n    ><b class=\\\"material-icons\\\">error_outline</b> Attachments' total file size\\r\\n    should not exceed 15MB.</b\\r\\n  >\\r\\n\\r\\n  <form [formGroup]=\\\"attachmentDocumentForm\\\">\\r\\n    <mat-tab-group\\r\\n      mat-align-tabs=\\\"center\\\"\\r\\n      class=\\\"mat-tab-group\\\"\\r\\n      (selectedTabChange)=\\\"changeTab($event)\\\"\\r\\n    >\\r\\n      <mat-tab label=\\\"SUPPORT DOCUMENT\\\" *ngIf=\\\"S2SupportDoc\\\">\\r\\n        <div class=\\\"mat-tab\\\">\\r\\n          <div class=\\\"col comment\\\">\\r\\n            <label>SUPPORT DOCUMENT</label>\\r\\n            <div class=\\\"row\\\">\\r\\n              <!-- <h4>\\r\\n                <i class=\\\"material-icons\\\">bookmark</i> &nbsp;{{labelMainDocument}}\\r\\n              </h4> -->\\r\\n              <br />\\r\\n              <div class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label *ngIf=\\\"s2SupportDocument\\\">Filename: </mat-label>\\r\\n                <input\\r\\n                  #mainInput\\r\\n                  matInput\\r\\n                  [value]=\\\"s2SupportDocument?.originalFilename\\\"\\r\\n                  disabled\\r\\n                  *ngIf=\\\"s2SupportDocument\\\"\\r\\n                /><br />\\r\\n\\r\\n                <input\\r\\n                  #mainFile\\r\\n                  class=\\\"file-upload\\\"\\r\\n                  type=\\\"file\\\"\\r\\n                  accept=\\\".pdf\\\"\\r\\n                  (change)=\\\"selectS2SupprtDoc($event)\\\"\\r\\n                  [hidden]=\\\"\\r\\n                    (isAscUser && isDisableFieldOnUpdate) ||\\r\\n                    s2SupportDocument?.originalFilename != null\\r\\n                  \\\"\\r\\n                  *ngIf=\\\"\\r\\n                    s2SupportAttchmentDocuments?.length >= 0 ||\\r\\n                    (originalAttachmentDocuments?.length >= 1 &&\\r\\n                      originalAttachmentDocuments[0] === null) ||\\r\\n                    s1Application?.internalStatus == 'SAVED' ||\\r\\n                    originalAttachmentDocuments[0]?.originalFilename != null\\r\\n                  \\\"\\r\\n                />\\r\\n              </div>\\r\\n              <div class=\\\"row\\\"><br /></div>\\r\\n              <div class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n                <button\\r\\n                  mat-raised-button\\r\\n                  class=\\\"button-red button-right\\\"\\r\\n                  (click)=\\\"viewS2SupportDoc()\\\"\\r\\n                  *ngIf=\\\"validateDeleteBtn() || s2SupportDocument\\\"\\r\\n                >\\r\\n                  <i class=\\\"material-icons add-document\\\">open_in_new</i> VIEW\\r\\n                  DOCUMENT\\r\\n                </button>\\r\\n                &nbsp; &nbsp;\\r\\n                <button\\r\\n                  mat-raised-button\\r\\n                  class=\\\"button-red button-right\\\"\\r\\n                  (click)=\\\"deleteS2SupportDoc()\\\"\\r\\n                  *ngIf=\\\"validateDeleteBtn()\\\"\\r\\n                >\\r\\n                  <i class=\\\"material-icons add-document\\\">delete</i> DELETE\\r\\n                  ATTACHMENT\\r\\n                </button>\\r\\n                <!-- [hidden]=\\\"(!showMainDocumentViewButton) ||\\r\\n                  (currentUser?.userRole?.name!='ROLE_APPLICANT' && currentUser?.userRole?.name!='ROLE_ENCODER') ||\\r\\n                  (currentUser.userRole.name=='ROLE_ENCODER' && s1Application?.internalStatus !== undefined ) ||\\r\\n                  applicationStage === 'S2-APPLICATION' || applicationStage === 'S1-Preview' || s1Application?.decisionStatus=='APPROVED'||s1Application?.decisionStatus=='APPROVED W/ CAUTION'\\\" -->\\r\\n\\r\\n                &nbsp; &nbsp;\\r\\n                <button\\r\\n                  mat-raised-button\\r\\n                  class=\\\"button-red button-right\\\"\\r\\n                  (click)=\\\"uploadDocument()\\\"\\r\\n                  [disabled]=\\\"!safeURLSupportDoc\\\"\\r\\n                  [hidden]=\\\"isAscUser && isDisableFieldOnUpdate\\\"\\r\\n                  *ngIf=\\\"safeURLSupportDoc\\\"\\r\\n                >\\r\\n                  <i class=\\\"material-icons add-document\\\">upload</i> UPLOAD\\r\\n                </button>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </mat-tab>\\r\\n\\r\\n      <!-- TAB FOR ORIGINAL -->\\r\\n      <mat-tab label=\\\"ORIGINAL\\\" *ngIf=\\\"!S2SupportDoc\\\">\\r\\n        <div class=\\\"mat-tab\\\">\\r\\n          <div class=\\\"col comment\\\">\\r\\n            <label>ORIGINAL</label>\\r\\n            <!-- MAIN DOCUMENT -->\\r\\n            <div class=\\\"row\\\">\\r\\n              <h4>\\r\\n                <i class=\\\"material-icons\\\">bookmark</i> &nbsp;{{\\r\\n                  labelMainDocument ? labelMainDocument : \\\"MAIN DOCUMENT\\\"\\r\\n                }}\\r\\n              </h4>\\r\\n              <br />\\r\\n              <div class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label\\r\\n                  *ngIf=\\\"originalAttachmentDocuments[0]?.originalFilename\\\"\\r\\n                  >Filename:\\r\\n                </mat-label>\\r\\n                <input\\r\\n                  #mainInput\\r\\n                  matInput\\r\\n                  [value]=\\\"originalAttachmentDocuments[0]?.originalFilename\\\"\\r\\n                  disabled\\r\\n                  *ngIf=\\\"originalAttachmentDocuments[0]?.originalFilename\\\"\\r\\n                /><br />\\r\\n\\r\\n                <input\\r\\n                  #mainFile\\r\\n                  class=\\\"file-upload\\\"\\r\\n                  type=\\\"file\\\"\\r\\n                  accept=\\\".pdf\\\"\\r\\n                  (change)=\\\"selectFile($event, 'MAIN')\\\"\\r\\n                  [hidden]=\\\"\\r\\n                    (isAscUser && isDisableFieldOnUpdate) ||\\r\\n                    originalAttachmentDocuments[0]?.originalFilename != null\\r\\n                  \\\"\\r\\n                  *ngIf=\\\"\\r\\n                    originalAttachmentDocuments?.length == 0 ||\\r\\n                    (originalAttachmentDocuments?.length >= 1 &&\\r\\n                      originalAttachmentDocuments[0] === null) ||\\r\\n                    s1Application?.internalStatus == 'SAVED' ||\\r\\n                    originalAttachmentDocuments[0]?.originalFilename != null\\r\\n                  \\\"\\r\\n                />\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"row\\\"><br /></div>\\r\\n              <div class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n                <button\\r\\n                  mat-raised-button\\r\\n                  class=\\\"button-red button-right\\\"\\r\\n                  (click)=\\\"viewDocument('MAIN')\\\"\\r\\n                  *ngIf=\\\"\\r\\n                    showMainDocumentViewButton ||\\r\\n                    originalAttachmentDocuments[0]?.originalFilename\\r\\n                  \\\"\\r\\n                >\\r\\n                  <i class=\\\"material-icons add-document\\\">open_in_new</i> VIEW\\r\\n                  DOCUMENT\\r\\n                </button>\\r\\n                &nbsp; &nbsp;\\r\\n                <button\\r\\n                  mat-raised-button\\r\\n                  class=\\\"button-red button-right\\\"\\r\\n                  (click)=\\\"deleteUploadedFile('MAIN')\\\"\\r\\n                  [hidden]=\\\"\\r\\n                    (currentUser?.userRole?.name != 'ROLE_APPLICANT' &&\\r\\n                      currentUser?.userRole?.name != 'ROLE_ENCODER') ||\\r\\n                    (currentUser.userRole.name == 'ROLE_ENCODER' &&\\r\\n                      s1Application?.internalStatus !== undefined) ||\\r\\n                    applicationStage === 'S2-APPLICATION' ||\\r\\n                    applicationStage === 'S1-Preview' ||\\r\\n                    s1Application?.decisionStatus == 'APPROVED' ||\\r\\n                    s1Application?.decisionStatus == 'APPROVED W/ CAUTION' ||\\r\\n                    s1Application?.decisionStatus == 'INCOMPLETE'\\r\\n                  \\\"\\r\\n                  *ngIf=\\\"\\r\\n                    showMainDocumentViewButton ||\\r\\n                    originalAttachmentDocuments[0]?.originalFilename\\r\\n                  \\\"\\r\\n                >\\r\\n                  <i class=\\\"material-icons add-document\\\">delete</i> DELETE\\r\\n                  ATTACHMENT\\r\\n                </button>\\r\\n                <!-- [hidden]=\\\"(!showMainDocumentViewButton) ||\\r\\n                  (currentUser?.userRole?.name!='ROLE_APPLICANT' && currentUser?.userRole?.name!='ROLE_ENCODER') ||\\r\\n                  (currentUser.userRole.name=='ROLE_ENCODER' && s1Application?.internalStatus !== undefined ) ||\\r\\n                  applicationStage === 'S2-APPLICATION' || applicationStage === 'S1-Preview' || s1Application?.decisionStatus=='APPROVED'||s1Application?.decisionStatus=='APPROVED W/ CAUTION'\\\" -->\\r\\n\\r\\n                &nbsp; &nbsp;\\r\\n                <button\\r\\n                  mat-raised-button\\r\\n                  class=\\\"button-red button-right\\\"\\r\\n                  (click)=\\\"uploadDocument()\\\"\\r\\n                  [disabled]=\\\"!safeURLMainDoc || !showMainDocumentUploadButton\\\"\\r\\n                  [hidden]=\\\"\\r\\n                    (isAscUser && isDisableFieldOnUpdate) ||\\r\\n                    (s1Application?.submissionType === 'ORIGINAL' &&\\r\\n                      (s1Application?.decisionStatus == 'APPROVED' ||\\r\\n                        s1Application?.decisionStatus ==\\r\\n                          'APPROVED W/ CAUTION' ||\\r\\n                        s1Application?.decisionStatus == 'INCOMPLETE'))\\r\\n                  \\\"\\r\\n                  *ngIf=\\\"\\r\\n                    originalAttachmentDocuments[0]?.originalFilename == null ||\\r\\n                    showMainDocumentUploadButton\\r\\n                  \\\"\\r\\n                >\\r\\n                  <i class=\\\"material-icons add-document\\\">upload</i> UPLOAD\\r\\n                </button>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-12\\\">\\r\\n                <hr />\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <!-- SUPPORTING DOC -->\\r\\n            <div\\r\\n              class=\\\"row\\\"\\r\\n              *ngIf=\\\"\\r\\n                showSupportDocumentFrame == true ||\\r\\n                originalAttachmentDocuments?.length > 0\\r\\n              \\\"\\r\\n            >\\r\\n              <h4>\\r\\n                <i class=\\\"material-icons\\\">bookmark</i> &nbsp;SUPPORT DOCUMENTS\\r\\n              </h4>\\r\\n\\r\\n              <!-- Display if no support document was attached -->\\r\\n              <div\\r\\n                class=\\\"col-md-12\\\"\\r\\n                appearance=\\\"outline\\\"\\r\\n                [hidden]=\\\"\\r\\n                  (isAscUser && isDisableFieldOnUpdate) ||\\r\\n                  applicationStage === 'S2-APPLICATION'\\r\\n                \\\"\\r\\n                *ngIf=\\\"\\r\\n                  ((s1Application?.internalStatus ===\\r\\n                    'S1_APPLICATION_REVIEWED' ||\\r\\n                    s1Application?.internalStatus ===\\r\\n                      'COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER') &&\\r\\n                    (s1Application?.decisionStatus == 'APPROVED' ||\\r\\n                      s1Application?.decisionStatus == 'APPROVED W/ CAUTION' ||\\r\\n                      s1Application?.decisionStatus === 'INCOMPLETE')) ||\\r\\n                  originalAttachmentDocuments?.length > 0\\r\\n                \\\"\\r\\n              >\\r\\n                <mat-checkbox\\r\\n                  (click)=\\\"verifyNoDocumentAttached()\\\"\\r\\n                  [(ngModel)]=\\\"s1Application.hasNoSupportingDocs\\\"\\r\\n                  (checked)=\\\"(s1Application.hasNoSupportingDocs)\\\"\\r\\n                  formControlName=\\\"hasNoSupportingDocs\\\"\\r\\n                  [hidden]=\\\"\\r\\n                    originalAttachmentDocuments[1]?.originalFilename ||\\r\\n                    s1Application?.internalStatus ===\\r\\n                      'S1_APPLICATION_REVIEWED' ||\\r\\n                    s1Application?.internalStatus ===\\r\\n                      'COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER' ||\\r\\n                    s1Application?.internalStatus === 'REVISION_SCREENED' ||\\r\\n                    (s1Application?.internalStatus ===\\r\\n                      'S1_APPLICATION_REJECTED' &&\\r\\n                      (s1Application?.decisionStatus == 'APPROVED' ||\\r\\n                        s1Application?.decisionStatus ==\\r\\n                          'APPROVED W/ CAUTION' ||\\r\\n                        s1Application?.decisionStatus == 'INCOMPLETE'))\\r\\n                  \\\"\\r\\n                  *ngIf=\\\"\\r\\n                    (currentUser.userRole.name == 'ROLE_APPLICANT' &&\\r\\n                      originalAttachmentDocuments?.length > 0) ||\\r\\n                    (currentUser.userRole.name == 'ROLE_ENCODER' &&\\r\\n                      s1Application?.internalStatus === undefined)\\r\\n                  \\\"\\r\\n                >\\r\\n                  I certify that no supporting document is attached to this S1\\r\\n                  application.</mat-checkbox\\r\\n                >\\r\\n                <br />\\r\\n              </div>\\r\\n\\r\\n              <p\\r\\n                [hidden]=\\\"\\r\\n                  originalAttachmentDocuments[1]?.originalFilename ||\\r\\n                  (currentUser.userRole.name == 'ROLE_ENCODER' &&\\r\\n                    s1Application?.internalStatus === undefined)\\r\\n                \\\"\\r\\n                *ngIf=\\\"\\r\\n                  isAscUser ||\\r\\n                  currentUser.userRole.name == 'ROLE_ADMIN' ||\\r\\n                  currentUser.userRole.name == 'ROLE_SUPER_ADMIN' ||\\r\\n                  applicationStage === 'S2-APPLICATION' ||\\r\\n                  applicationStage === 'S1-Preview' ||\\r\\n                  (s1Application?.internalStatus ===\\r\\n                    'S1_APPLICATION_REVIEWED' &&\\r\\n                    (s1Application?.decisionStatus == 'APPROVED' ||\\r\\n                      s1Application?.decisionStatus ==\\r\\n                        'APPROVED W/ CAUTION')) ||\\r\\n                  (s1Application?.internalStatus ===\\r\\n                    'COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER' &&\\r\\n                    s1Application?.decisionStatus === 'INCOMPLETE') ||\\r\\n                  (s1Application?.internalStatus === 'REVISION_SCREENED' &&\\r\\n                    s1Application?.decisionStatus === 'INCOMPLETE') ||\\r\\n                  (currentUser.userRole.name == 'ROLE_APPLICANT' &&\\r\\n                    s1Application?.hasNoSupportingDocs &&\\r\\n                    s1Application?.internalStatus !== 'SAVED' &&\\r\\n                    s1Application?.internalStatus !== undefined)\\r\\n                \\\"\\r\\n              >\\r\\n                Supporting Document was not submitted.\\r\\n              </p>\\r\\n              <div class=\\\"col-md-12\\\"><br /></div>\\r\\n\\r\\n              <div\\r\\n                *ngIf=\\\"\\r\\n                  !s1Application.hasNoSupportingDocs ||\\r\\n                  originalAttachmentDocuments[1]?.originalFilename === null\\r\\n                \\\"\\r\\n              >\\r\\n                <div class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n                  <mat-label\\r\\n                    *ngIf=\\\"originalAttachmentDocuments[1]?.originalFilename\\\"\\r\\n                    >Filename:\\r\\n                  </mat-label>\\r\\n                  <input\\r\\n                    #supportiveInput\\r\\n                    matInput\\r\\n                    [value]=\\\"originalAttachmentDocuments[1]?.originalFilename\\\"\\r\\n                    disabled\\r\\n                    *ngIf=\\\"originalAttachmentDocuments[1]?.originalFilename\\\"\\r\\n                  /><br />\\r\\n\\r\\n                  <input\\r\\n                    #supportiveFile\\r\\n                    class=\\\"file-upload\\\"\\r\\n                    type=\\\"file\\\"\\r\\n                    accept=\\\".pdf\\\"\\r\\n                    (change)=\\\"selectFile($event, 'SUPPORTIVE')\\\"\\r\\n                    [hidden]=\\\"\\r\\n                      (isAscUser && isDisableFieldOnUpdate) ||\\r\\n                      s1Application.hasNoSupportingDocs ||\\r\\n                      originalAttachmentDocuments[1]?.originalFilename !=\\r\\n                        null ||\\r\\n                      s1Application?.internalStatus ===\\r\\n                        'S1_APPLICATION_REVIEWED' ||\\r\\n                      (s1Application?.internalStatus ===\\r\\n                        'COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER' &&\\r\\n                        (s1Application?.decisionStatus === 'APPROVED' ||\\r\\n                          s1Application?.decisionStatus ===\\r\\n                            'APPROVED W/ CAUTION' ||\\r\\n                          s1Application?.decisionStatus === 'INCOMPLETE')) ||\\r\\n                      (currentUser.userRole.name == 'ROLE_ENCODER' &&\\r\\n                        s1Application?.internalStatus !== undefined) ||\\r\\n                      s1Application?.submissionType === 'REVISION' ||\\r\\n                      s1Application?.submissionType === 'COMPLIANCE'\\r\\n                    \\\"\\r\\n                    *ngIf=\\\"\\r\\n                      originalAttachmentDocuments?.length == 1 ||\\r\\n                      (originalAttachmentDocuments?.length > 1 &&\\r\\n                        originalAttachmentDocuments[1] === null) ||\\r\\n                      originalAttachmentDocuments[1]?.originalFilename !=\\r\\n                        null ||\\r\\n                      !safeURLSupportDoc ||\\r\\n                      !showSupportiveDocumentUploadButton\\r\\n                    \\\"\\r\\n                  />\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"row\\\"><br /></div>\\r\\n                <div class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n                  <button\\r\\n                    mat-raised-button\\r\\n                    class=\\\"button-red button-right\\\"\\r\\n                    (click)=\\\"viewDocument('SUPPORTIVE')\\\"\\r\\n                    *ngIf=\\\"\\r\\n                      showSupportiveDocumentViewButton ||\\r\\n                      originalAttachmentDocuments[1]?.originalFilename\\r\\n                    \\\"\\r\\n                  >\\r\\n                    <i class=\\\"material-icons add-document\\\">open_in_new</i> VIEW\\r\\n                    DOCUMENT\\r\\n                  </button>\\r\\n                  &nbsp; &nbsp;\\r\\n                  <button\\r\\n                    mat-raised-button\\r\\n                    class=\\\"button-red button-right\\\"\\r\\n                    (click)=\\\"deleteUploadedFile('SUPPORTIVE')\\\"\\r\\n                    [hidden]=\\\"\\r\\n                      (currentUser?.userRole?.name != 'ROLE_APPLICANT' &&\\r\\n                        currentUser?.userRole?.name != 'ROLE_ENCODER') ||\\r\\n                      (currentUser.userRole.name == 'ROLE_ENCODER' &&\\r\\n                        s1Application?.internalStatus !== undefined) ||\\r\\n                      applicationStage === 'S2-APPLICATION' ||\\r\\n                      applicationStage === 'S1-Preview' ||\\r\\n                      s1Application?.decisionStatus == 'APPROVED' ||\\r\\n                      s1Application?.decisionStatus == 'APPROVED W/ CAUTION' ||\\r\\n                      s1Application?.decisionStatus == 'INCOMPLETE'\\r\\n                    \\\"\\r\\n                    *ngIf=\\\"\\r\\n                      showSupportiveDocumentViewButton ||\\r\\n                      originalAttachmentDocuments[1]?.originalFilename\\r\\n                    \\\"\\r\\n                  >\\r\\n                    <i class=\\\"material-icons add-document\\\">delete</i> DELETE\\r\\n                    ATTACHMENT\\r\\n                  </button>\\r\\n                  &nbsp; &nbsp;\\r\\n                  <button\\r\\n                    mat-raised-button\\r\\n                    class=\\\"button-red button-right\\\"\\r\\n                    (click)=\\\"uploadDocument()\\\"\\r\\n                    [disabled]=\\\"\\r\\n                      !safeURLSupportDoc || !showSupportiveDocumentUploadButton\\r\\n                    \\\"\\r\\n                    [hidden]=\\\"\\r\\n                      (isAscUser && isDisableFieldOnUpdate) ||\\r\\n                      (s1Application?.submissionType === 'ORIGINAL' &&\\r\\n                        (s1Application?.decisionStatus == 'APPROVED' ||\\r\\n                          s1Application?.decisionStatus ==\\r\\n                            'APPROVED W/ CAUTION' ||\\r\\n                          s1Application?.decisionStatus == 'INCOMPLETE'))\\r\\n                    \\\"\\r\\n                    *ngIf=\\\"showSupportiveDocumentUploadButton\\\"\\r\\n                  >\\r\\n                    <i class=\\\"material-icons add-document\\\">upload</i> UPLOAD\\r\\n                  </button>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\"><br /></div>\\r\\n                <br />\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div\\r\\n              class=\\\"no-record\\\"\\r\\n              *ngIf=\\\"\\r\\n                originalAttachmentDocuments?.length === 0 &&\\r\\n                originalAttachmentDocuments[0]?.originalFilename === undefined\\r\\n              \\\"\\r\\n            >\\r\\n              No results found.\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </mat-tab>\\r\\n      <!-- END OF TAB FOR ORIGINAL -->\\r\\n\\r\\n      <!-- ////////////////////////////////////////// DYNAMIC ////////////////////////////////////////// -->\\r\\n\\r\\n      <!-- TAB FOR REVISION -->\\r\\n      <mat-tab\\r\\n        label=\\\"REVISION\\\"\\r\\n        *ngIf=\\\"\\r\\n          revisionAttachmentDocuments?.length > 0 ||\\r\\n          ((s1Application?.internalStatus === 'S1_APPLICATION_REVIEWED' ||\\r\\n            s1Application?.internalStatus ===\\r\\n              'COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER') &&\\r\\n            (s1Application?.decisionStatus == 'APPROVED' ||\\r\\n              s1Application?.decisionStatus === 'APPROVED W/ CAUTION') &&\\r\\n            applicationStage !== 'S2-APPLICATION')\\r\\n        \\\"\\r\\n      >\\r\\n        <div class=\\\"mat-tab\\\">\\r\\n          <div class=\\\"col comment\\\">\\r\\n            <label>REVISION</label>\\r\\n            <!---------- NEW ATTACHMENTS ---------->\\r\\n\\r\\n            <!-- MAIN DOCUMENT -->\\r\\n            <div\\r\\n              class=\\\"row\\\"\\r\\n              [hidden]=\\\"\\r\\n                (isAscUser && isDisableFieldOnUpdate) ||\\r\\n                applicationStage === 'S2-APPLICATION' ||\\r\\n                (currentUser.userRole.name == 'ROLE_ENCODER' &&\\r\\n                  s1Application?.internalStatus !== undefined)\\r\\n              \\\"\\r\\n              *ngIf=\\\"\\r\\n                showSupportDocumentFrameR ||\\r\\n                tempRevisionAttachmentDocuments?.length > 0 ||\\r\\n                ((s1Application?.internalStatus === 'S1_APPLICATION_REVIEWED' ||\\r\\n                  s1Application?.internalStatus ===\\r\\n                    'COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER') &&\\r\\n                  (s1Application?.decisionStatus === 'APPROVED' ||\\r\\n                    s1Application?.decisionStatus === 'APPROVED W/ CAUTION'))\\r\\n              \\\"\\r\\n            >\\r\\n              <h4>\\r\\n                <i class=\\\"material-icons\\\">bookmark</i> &nbsp;{{\\r\\n                  labelMainDocument ? labelMainDocument : \\\"MAIN DOCUMENT\\\"\\r\\n                }}\\r\\n              </h4>\\r\\n              <br />\\r\\n              <div class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label\\r\\n                  *ngIf=\\\"\\r\\n                    tempRevisionAttachmentDocuments?.length > 0 &&\\r\\n                    tempRevisionAttachmentDocuments[0]?.originalFilename\\r\\n                  \\\"\\r\\n                  >Filename:\\r\\n                </mat-label>\\r\\n                <input\\r\\n                  #mainInput\\r\\n                  matInput\\r\\n                  *ngIf=\\\"!s1Application?.hasOngoingRevision\\\"\\r\\n                  [value]=\\\"tempRevisionAttachmentDocuments[0]?.originalFilename\\\"\\r\\n                  disabled\\r\\n                /><br />\\r\\n\\r\\n                <input\\r\\n                  #mainFile\\r\\n                  class=\\\"file-upload\\\"\\r\\n                  type=\\\"file\\\"\\r\\n                  accept=\\\".pdf\\\"\\r\\n                  (change)=\\\"selectFile($event, 'MAIN')\\\"\\r\\n                  [hidden]=\\\"\\r\\n                    (isAscUser && isDisableFieldOnUpdate) ||\\r\\n                    tempRevisionAttachmentDocuments[0]?.originalFilename\\r\\n                  \\\"\\r\\n                  *ngIf=\\\"\\r\\n                    (s1Application?.internalStatus ===\\r\\n                      'S1_APPLICATION_REVIEWED' ||\\r\\n                      s1Application?.internalStatus ===\\r\\n                        'COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER') &&\\r\\n                    (s1Application?.decisionStatus === 'APPROVED' ||\\r\\n                      s1Application?.decisionStatus === 'APPROVED W/ CAUTION')\\r\\n                  \\\"\\r\\n                />\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"row\\\"><br /></div>\\r\\n              <div class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n                <button\\r\\n                  mat-raised-button\\r\\n                  class=\\\"button-red button-right\\\"\\r\\n                  (click)=\\\"viewDocument('MAIN', false)\\\"\\r\\n                  *ngIf=\\\"\\r\\n                    showMainDocumentViewButton ||\\r\\n                    tempRevisionAttachmentDocuments[0]?.originalFilename\\r\\n                  \\\"\\r\\n                >\\r\\n                  <i class=\\\"material-icons add-document\\\">open_in_new</i> VIEW\\r\\n                  DOCUMENT\\r\\n                </button>\\r\\n                &nbsp; &nbsp;\\r\\n                <button\\r\\n                  mat-raised-button\\r\\n                  class=\\\"button-red button-right\\\"\\r\\n                  (click)=\\\"deleteUploadedFile('MAIN')\\\"\\r\\n                  *ngIf=\\\"\\r\\n                    showMainDocumentViewButton ||\\r\\n                    tempRevisionAttachmentDocuments[0]?.originalFilename\\r\\n                  \\\"\\r\\n                >\\r\\n                  <i class=\\\"material-icons add-document\\\">delete</i> DELETE\\r\\n                  ATTACHMENT\\r\\n                </button>\\r\\n                &nbsp; &nbsp;\\r\\n\\r\\n                <button\\r\\n                  mat-raised-button\\r\\n                  class=\\\"button-red button-right\\\"\\r\\n                  (click)=\\\"uploadDocument()\\\"\\r\\n                  [disabled]=\\\"\\r\\n                    !safeURLMainDocR || !showMainDocumentUploadButtonR\\r\\n                  \\\"\\r\\n                  [hidden]=\\\"isAscUser && isDisableFieldOnUpdate\\\"\\r\\n                  *ngIf=\\\"showMainDocumentUploadButtonR\\\"\\r\\n                >\\r\\n                  <i class=\\\"material-icons add-document\\\">upload</i> UPLOAD\\r\\n                </button>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-12\\\">\\r\\n                <hr />\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <!-- SUPPORTING DOC -->\\r\\n            <div\\r\\n              class=\\\"row\\\"\\r\\n              [hidden]=\\\"\\r\\n                (isAscUser && isDisableFieldOnUpdate) ||\\r\\n                applicationStage === 'S2-APPLICATION' ||\\r\\n                (currentUser.userRole.name == 'ROLE_ENCODER' &&\\r\\n                  s1Application?.internalStatus !== undefined)\\r\\n              \\\"\\r\\n              *ngIf=\\\"\\r\\n                showSupportDocumentFrameR ||\\r\\n                tempRevisionAttachmentDocuments?.length > 0 ||\\r\\n                ((s1Application?.internalStatus === 'S1_APPLICATION_REVIEWED' ||\\r\\n                  s1Application?.internalStatus ===\\r\\n                    'COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER') &&\\r\\n                  (s1Application?.decisionStatus === 'APPROVED' ||\\r\\n                    s1Application?.decisionStatus === 'APPROVED W/ CAUTION'))\\r\\n              \\\"\\r\\n            >\\r\\n              <h4>\\r\\n                <i class=\\\"material-icons\\\">bookmark</i> &nbsp;SUPPORT DOCUMENTS\\r\\n              </h4>\\r\\n\\r\\n              <!-- Display if no support document was attached -->\\r\\n              <div\\r\\n                class=\\\"col-md-12\\\"\\r\\n                appearance=\\\"outline\\\"\\r\\n                [hidden]=\\\"\\r\\n                  (isAscUser && isDisableFieldOnUpdate) ||\\r\\n                  applicationStage === 'S2-APPLICATION'\\r\\n                \\\"\\r\\n                *ngIf=\\\"\\r\\n                  tempRevisionAttachmentDocuments?.length < 2 ||\\r\\n                  tempRevisionAttachmentDocuments?.length != 2 ||\\r\\n                  ((s1Application?.internalStatus ===\\r\\n                    'S1_APPLICATION_REVIEWED' ||\\r\\n                    s1Application?.internalStatus ===\\r\\n                      'COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER') &&\\r\\n                    s1Application?.decisionStatus === 'INCOMPLETE')\\r\\n                \\\"\\r\\n              >\\r\\n                <mat-checkbox\\r\\n                  (click)=\\\"verifyNoDocumentAttached()\\\"\\r\\n                  [(ngModel)]=\\\"s1Application.hasNoSupportingDocs\\\"\\r\\n                  (checked)=\\\"(s1Application.hasNoSupportingDocs)\\\"\\r\\n                  formControlName=\\\"hasNoSupportingDocs\\\"\\r\\n                  [hidden]=\\\"\\r\\n                    tempRevisionAttachmentDocuments[1]?.originalFilename\\r\\n                  \\\"\\r\\n                  *ngIf=\\\"\\r\\n                    currentUser.userRole.name == 'ROLE_APPLICANT' ||\\r\\n                    (currentUser.userRole.name == 'ROLE_ENCODER' &&\\r\\n                      s1Application?.internalStatus === undefined)\\r\\n                  \\\"\\r\\n                >\\r\\n                  I certify that no supporting document is attached to this S1\\r\\n                  application.</mat-checkbox\\r\\n                >\\r\\n                <br />\\r\\n              </div>\\r\\n\\r\\n              <p\\r\\n                *ngIf=\\\"\\r\\n                  (s1Application?.submissionType === 'REVISION' &&\\r\\n                    s1Application?.hasNoSupportingDocs &&\\r\\n                    s1Application?.internalStatus !== undefined &&\\r\\n                    s1Application?.internalStatus !==\\r\\n                      'S1_APPLICATION_REVIEWED' &&\\r\\n                    s1Application?.decisionStatus !== 'INCOMPLETE') ||\\r\\n                  (s1Application?.hasNoSupportingDocs &&\\r\\n                    applicationStage === 'S1-Preview')\\r\\n                \\\"\\r\\n              >\\r\\n                Supporting Document was not submitted.\\r\\n              </p>\\r\\n              <div class=\\\"col-md-12\\\"><br /></div>\\r\\n\\r\\n              <div *ngIf=\\\"!s1Application?.hasNoSupportingDocs\\\">\\r\\n                <div class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n                  <mat-label\\r\\n                    *ngIf=\\\"\\r\\n                      tempRevisionAttachmentDocuments?.length > 0 &&\\r\\n                      tempRevisionAttachmentDocuments[1]?.originalFilename\\r\\n                    \\\"\\r\\n                    >Filename:\\r\\n                  </mat-label>\\r\\n                  <input\\r\\n                    #supportiveInput\\r\\n                    matInput\\r\\n                    [value]=\\\"\\r\\n                      tempRevisionAttachmentDocuments[1]?.originalFilename\\r\\n                    \\\"\\r\\n                    disabled\\r\\n                    *ngIf=\\\"\\r\\n                      tempRevisionAttachmentDocuments?.length > 0 &&\\r\\n                      tempRevisionAttachmentDocuments[1]?.originalFilename\\r\\n                    \\\"\\r\\n                  /><br />\\r\\n\\r\\n                  <input\\r\\n                    #supportiveFile\\r\\n                    class=\\\"file-upload\\\"\\r\\n                    type=\\\"file\\\"\\r\\n                    accept=\\\".pdf\\\"\\r\\n                    (change)=\\\"selectFile($event, 'SUPPORTIVE')\\\"\\r\\n                    [hidden]=\\\"\\r\\n                      (isAscUser && isDisableFieldOnUpdate) ||\\r\\n                      tempRevisionAttachmentDocuments[1]?.originalFilename\\r\\n                    \\\"\\r\\n                    *ngIf=\\\"\\r\\n                      tempRevisionAttachmentDocuments?.length <= 2 ||\\r\\n                      (tempRevisionAttachmentDocuments?.length == 2 &&\\r\\n                        tempRevisionAttachmentDocuments[1] === null) ||\\r\\n                      s1Application?.internalStatus == 'SAVED' ||\\r\\n                      tempRevisionAttachmentDocuments[1]?.originalFilename !=\\r\\n                        null ||\\r\\n                      ((s1Application?.internalStatus ==\\r\\n                        'S1_APPLICATION_REVIEWED' ||\\r\\n                        s1Application?.internalStatus ==\\r\\n                          'COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER') &&\\r\\n                        (s1Application?.decisionStatus == 'INCOMPLETE' ||\\r\\n                          s1Application?.decisionStatus == 'APPROVED' ||\\r\\n                          s1Application?.decisionStatus ==\\r\\n                            'APPROVED W/ CAUTION'))\\r\\n                    \\\"\\r\\n                  />\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"row\\\"><br /></div>\\r\\n                <div class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n                  <button\\r\\n                    mat-raised-button\\r\\n                    class=\\\"button-red button-right\\\"\\r\\n                    (click)=\\\"viewDocument('SUPPORTIVE', false)\\\"\\r\\n                    *ngIf=\\\"\\r\\n                      showSupportiveDocumentViewButton ||\\r\\n                      tempRevisionAttachmentDocuments[1]?.originalFilename\\r\\n                    \\\"\\r\\n                  >\\r\\n                    <i class=\\\"material-icons add-document\\\">open_in_new</i> VIEW\\r\\n                    DOCUMENT\\r\\n                  </button>\\r\\n                  &nbsp; &nbsp;\\r\\n                  <button\\r\\n                    mat-raised-button\\r\\n                    class=\\\"button-red button-right\\\"\\r\\n                    (click)=\\\"deleteUploadedFile('SUPPORTIVE')\\\"\\r\\n                    *ngIf=\\\"\\r\\n                      showSupportiveDocumentViewButton ||\\r\\n                      tempRevisionAttachmentDocuments[1]?.originalFilename\\r\\n                    \\\"\\r\\n                  >\\r\\n                    <i class=\\\"material-icons add-document\\\">delete</i> DELETE\\r\\n                    ATTACHMENT\\r\\n                  </button>\\r\\n                  &nbsp; &nbsp;\\r\\n                  <button\\r\\n                    mat-raised-button\\r\\n                    class=\\\"button-red button-right\\\"\\r\\n                    (click)=\\\"uploadDocument()\\\"\\r\\n                    [hidden]=\\\"isAscUser && isDisableFieldOnUpdate\\\"\\r\\n                    *ngIf=\\\"showSupportiveDocumentUploadButton\\\"\\r\\n                  >\\r\\n                    <i class=\\\"material-icons add-document\\\">upload</i> UPLOAD\\r\\n                  </button>\\r\\n                  <!-- [disabled]=\\\"!safeURLSupportDocR||!showSupportiveDocumentUploadButtonR\\\" -->\\r\\n                </div>\\r\\n                <div class=\\\"row\\\"><br /></div>\\r\\n                <br />\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <!-- FOR REVISION - REVISION LETTER -->\\r\\n            <div\\r\\n              class=\\\"row\\\"\\r\\n              [hidden]=\\\"\\r\\n                (isAscUser && isDisableFieldOnUpdate) ||\\r\\n                applicationStage === 'S2-APPLICATION' ||\\r\\n                (currentUser.userRole.name == 'ROLE_ENCODER' &&\\r\\n                  s1Application?.internalStatus !== undefined)\\r\\n              \\\"\\r\\n              *ngIf=\\\"\\r\\n                (s1Application?.internalStatus === 'S1_APPLICATION_REVIEWED' ||\\r\\n                  s1Application?.internalStatus ===\\r\\n                    'COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER') &&\\r\\n                (s1Application?.decisionStatus == 'APPROVED' ||\\r\\n                  s1Application?.decisionStatus == 'APPROVED W/ CAUTION')\\r\\n              \\\"\\r\\n              [hidden]=\\\"\\r\\n                s1Application?.appliedS2 || applicationStage === 'S1-Preview'\\r\\n              \\\"\\r\\n            >\\r\\n              <div class=\\\"col-md-12\\\">\\r\\n                <hr />\\r\\n              </div>\\r\\n              <h4>\\r\\n                <i class=\\\"material-icons\\\">bookmark</i> &nbsp;REVISION LETTER\\r\\n              </h4>\\r\\n              <br />\\r\\n              <div class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label\\r\\n                  *ngIf=\\\"\\r\\n                    revisionLetterAttachment?.originalFilename ||\\r\\n                    (tempRevisionAttachmentDocuments?.length > 0 &&\\r\\n                      tempRevisionAttachmentDocuments[1]\\r\\n                        ?.revisionLetterAttachmentReference)\\r\\n                  \\\"\\r\\n                >\\r\\n                  Filename:\\r\\n                </mat-label>\\r\\n                <input\\r\\n                  #revisionLetterInput\\r\\n                  matInput\\r\\n                  [value]=\\\"\\r\\n                    revisionLetterAttachment?.originalFilename ||\\r\\n                    tempRevisionAttachmentDocuments[1]\\r\\n                      ?.revisionLetterAttachmentReference ||\\r\\n                    tempRevisionAttachmentDocuments[2]\\r\\n                      ?.revisionLetterAttachmentReference\\r\\n                  \\\"\\r\\n                  disabled\\r\\n                  *ngIf=\\\"revisionLetterAttachment?.originalFilename\\\"\\r\\n                /><br />\\r\\n\\r\\n                <input\\r\\n                  #revisionLetterFile\\r\\n                  class=\\\"file-upload\\\"\\r\\n                  type=\\\"file\\\"\\r\\n                  accept=\\\".pdf\\\"\\r\\n                  (change)=\\\"selectFile($event, 'REVISION_LETTER')\\\"\\r\\n                  [hidden]=\\\"\\r\\n                    (isAscUser && isDisableFieldOnUpdate) ||\\r\\n                    revisionLetterAttachment?.originalFilename\\r\\n                  \\\"\\r\\n                  *ngIf=\\\"\\r\\n                    tempRevisionAttachmentDocuments?.length == 0 ||\\r\\n                    s1Application?.internalStatus == 'SAVED' ||\\r\\n                    ((s1Application?.internalStatus ==\\r\\n                      'S1_APPLICATION_REVIEWED' ||\\r\\n                      s1Application?.internalStatus ==\\r\\n                        'COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER') &&\\r\\n                      (s1Application?.decisionStatus == 'INCOMPLETE' ||\\r\\n                        s1Application?.decisionStatus == 'APPROVED' ||\\r\\n                        s1Application?.decisionStatus == 'APPROVED W/ CAUTION'))\\r\\n                  \\\"\\r\\n                />\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"row\\\"><br /></div>\\r\\n              <div class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n                <button\\r\\n                  mat-raised-button\\r\\n                  class=\\\"button-red button-right\\\"\\r\\n                  (click)=\\\"viewDocument('REVISION_LETTER', false)\\\"\\r\\n                  *ngIf=\\\"showRevisionLetterViewButton\\\"\\r\\n                >\\r\\n                  <i class=\\\"material-icons add-document\\\">open_in_new</i> VIEW\\r\\n                  DOCUMENT\\r\\n                </button>\\r\\n                &nbsp; &nbsp;\\r\\n                <button\\r\\n                  mat-raised-button\\r\\n                  class=\\\"button-red button-right\\\"\\r\\n                  (click)=\\\"deleteUploadedFile('REVISION_LETTER')\\\"\\r\\n                  [hidden]=\\\"\\r\\n                    (currentUser?.userRole?.name != 'ROLE_APPLICANT' &&\\r\\n                      currentUser?.userRole?.name != 'ROLE_ENCODER') ||\\r\\n                    (currentUser.userRole.name == 'ROLE_ENCODER' &&\\r\\n                      s1Application?.internalStatus !== undefined) ||\\r\\n                    applicationStage === 'S2-APPLICATION' ||\\r\\n                    applicationStage === 'S1-Preview'\\r\\n                  \\\"\\r\\n                  *ngIf=\\\"showRevisionLetterViewButton\\\"\\r\\n                >\\r\\n                  <i class=\\\"material-icons add-document\\\">delete</i> DELETE\\r\\n                  ATTACHMENT\\r\\n                </button>\\r\\n                &nbsp; &nbsp;\\r\\n\\r\\n                <button\\r\\n                  mat-raised-button\\r\\n                  class=\\\"button-red button-right\\\"\\r\\n                  (click)=\\\"uploadDocument()\\\"\\r\\n                  [disabled]=\\\"\\r\\n                    !safeURLRevisionLetter || !showRevisionLetterUploadButton\\r\\n                  \\\"\\r\\n                  [hidden]=\\\"isAscUser && isDisableFieldOnUpdate\\\"\\r\\n                  *ngIf=\\\"showRevisionLetterUploadButton\\\"\\r\\n                >\\r\\n                  <i class=\\\"material-icons add-document\\\">upload</i> UPLOAD\\r\\n                </button>\\r\\n              </div>\\r\\n              <div class=\\\"row\\\"><br /></div>\\r\\n              <br />\\r\\n              <br />\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row\\\"><hr /></div>\\r\\n\\r\\n            <!---------- EXISTING ---------->\\r\\n            <div\\r\\n              class=\\\"row\\\"\\r\\n              *ngFor=\\\"let i of revisionAttachmentDocuments; let index = index\\\"\\r\\n            >\\r\\n              <div *ngIf=\\\"i !== null\\\">\\r\\n                <h4>\\r\\n                  <i class=\\\"material-icons\\\">bookmark</i> &nbsp;{{\\r\\n                    i?.attachmentType\\r\\n                      ?.replaceAll(\\\"SUPPORTIVE\\\", \\\"SUPPORTING\\\")\\r\\n                      ?.replaceAll(\\\"_\\\", \\\" \\\")\\r\\n                  }}\\r\\n                  DOCUMENT\\r\\n                </h4>\\r\\n                <br />\\r\\n                <div class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n                  <mat-label *ngIf=\\\"i?.originalFilename\\\">Filename: </mat-label>\\r\\n                  <input\\r\\n                    #mainInput\\r\\n                    matInput\\r\\n                    [value]=\\\"i?.originalFilename\\\"\\r\\n                    disabled\\r\\n                    *ngIf=\\\"i?.originalFilename\\\"\\r\\n                  /><br />\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"row\\\"><br /></div>\\r\\n                <div\\r\\n                  class=\\\"col-md-12\\\"\\r\\n                  appearance=\\\"outline\\\"\\r\\n                  *ngIf=\\\"\\r\\n                    showMainDocumentViewButton ||\\r\\n                    i?.mainAttachmentReference ||\\r\\n                    i?.supportingAttachmentReference ||\\r\\n                    i?.revisionLetterAttachmentReference\\r\\n                  \\\"\\r\\n                >\\r\\n                  <button\\r\\n                    mat-raised-button\\r\\n                    class=\\\"button-red button-right\\\"\\r\\n                    (click)=\\\"viewDocument2(i)\\\"\\r\\n                  >\\r\\n                    <i class=\\\"material-icons add-document\\\">open_in_new</i> VIEW\\r\\n                    DOCUMENT\\r\\n                  </button>\\r\\n                  &nbsp; &nbsp;\\r\\n                  <button\\r\\n                    mat-raised-button\\r\\n                    class=\\\"button-red button-right\\\"\\r\\n                    (click)=\\\"deleteUploadedFile2(i)\\\"\\r\\n                    *ngIf=\\\"i?.status === 'UNPROCESSED'\\\"\\r\\n                  >\\r\\n                    <i class=\\\"material-icons add-document\\\">delete</i> DELETE\\r\\n                    ATTACHMENT\\r\\n                  </button>\\r\\n                  &nbsp; &nbsp;\\r\\n                </div>\\r\\n                <div class=\\\"row\\\"><br /></div>\\r\\n                <div class=\\\"col-md-12\\\">\\r\\n                  <hr />\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div\\r\\n              class=\\\"no-record\\\"\\r\\n              *ngIf=\\\"\\r\\n                (revisionAttachmentDocuments?.length === 0 &&\\r\\n                  revisionAttachmentDocuments[0]?.originalFilename ===\\r\\n                    undefined) ||\\r\\n                revisionAttachmentDocuments?.length === null\\r\\n              \\\"\\r\\n            >\\r\\n              No existing attachments for revision.\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </mat-tab>\\r\\n\\r\\n      <!-- TAB FOR COMPLIANCE -->\\r\\n      <mat-tab\\r\\n        label=\\\"COMPLIANCE\\\"\\r\\n        *ngIf=\\\"\\r\\n          complianceAttachmentDocuments?.length > 0 ||\\r\\n          ((s1Application?.internalStatus === 'S1_APPLICATION_REVIEWED' ||\\r\\n            s1Application?.internalStatus ===\\r\\n              'COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER' ||\\r\\n            s1Application?.internalStatus == 'REVISION_SCREENED' ||\\r\\n            s1Application?.internalStatus == 'S1_APPLICATION_REJECTED') &&\\r\\n            s1Application?.decisionStatus == 'INCOMPLETE' &&\\r\\n            applicationStage !== 'S2-APPLICATION')\\r\\n        \\\"\\r\\n      >\\r\\n        <div class=\\\"mat-tab\\\">\\r\\n          <div class=\\\"col comment\\\">\\r\\n            <label>COMPLIANCE</label>\\r\\n            <!---------- NEW ATTACHMENTS ---------->\\r\\n\\r\\n            <!-- MAIN DOCUMENT -->\\r\\n            <div\\r\\n              class=\\\"row\\\"\\r\\n              [hidden]=\\\"\\r\\n                (isAscUser && isDisableFieldOnUpdate) ||\\r\\n                applicationStage === 'S2-APPLICATION' ||\\r\\n                (currentUser.userRole.name == 'ROLE_ENCODER' &&\\r\\n                  s1Application?.internalStatus !== undefined)\\r\\n              \\\"\\r\\n              *ngIf=\\\"\\r\\n                (s1Application?.internalStatus === 'S1_APPLICATION_REVIEWED' ||\\r\\n                  s1Application?.internalStatus ===\\r\\n                    'COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER' ||\\r\\n                  s1Application?.internalStatus == 'REVISION_SCREENED' ||\\r\\n                  s1Application?.internalStatus == 'S1_APPLICATION_REJECTED') &&\\r\\n                s1Application?.decisionStatus == 'INCOMPLETE'\\r\\n              \\\"\\r\\n            >\\r\\n              <h4>\\r\\n                <i class=\\\"material-icons\\\">bookmark</i> &nbsp;{{\\r\\n                  labelMainDocument ? labelMainDocument : \\\"MAIN DOCUMENT\\\"\\r\\n                }}\\r\\n              </h4>\\r\\n              <br />\\r\\n              <div class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label\\r\\n                  *ngIf=\\\"\\r\\n                    tempComplianceAttachmentDocuments?.length > 0 &&\\r\\n                    tempComplianceAttachmentDocuments[0]?.originalFilename\\r\\n                  \\\"\\r\\n                  >Filename:\\r\\n                </mat-label>\\r\\n                <input\\r\\n                  #mainInput\\r\\n                  matInput\\r\\n                  *ngIf=\\\"\\r\\n                    !s1Application?.hasOngoingRevision ||\\r\\n                    tempComplianceAttachmentDocuments?.length == 0\\r\\n                  \\\"\\r\\n                  [value]=\\\"\\r\\n                    tempComplianceAttachmentDocuments[0]?.originalFilename\\r\\n                  \\\"\\r\\n                  disabled\\r\\n                /><br />\\r\\n\\r\\n                <input\\r\\n                  #mainFile\\r\\n                  class=\\\"file-upload\\\"\\r\\n                  type=\\\"file\\\"\\r\\n                  accept=\\\".pdf\\\"\\r\\n                  (change)=\\\"selectFile($event, 'MAIN')\\\"\\r\\n                  [hidden]=\\\"\\r\\n                    (isAscUser && isDisableFieldOnUpdate) ||\\r\\n                    tempComplianceAttachmentDocuments[0]?.originalFilename\\r\\n                  \\\"\\r\\n                  *ngIf=\\\"\\r\\n                    (s1Application?.internalStatus ===\\r\\n                      'S1_APPLICATION_REVIEWED' ||\\r\\n                      s1Application?.internalStatus ===\\r\\n                        'COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER' ||\\r\\n                      s1Application?.internalStatus == 'REVISION_SCREENED' ||\\r\\n                      s1Application?.internalStatus ==\\r\\n                        'S1_APPLICATION_REJECTED') &&\\r\\n                    s1Application?.decisionStatus === 'INCOMPLETE'\\r\\n                  \\\"\\r\\n                />\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"row\\\"><br /></div>\\r\\n              <div class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n                <button\\r\\n                  mat-raised-button\\r\\n                  class=\\\"button-red button-right\\\"\\r\\n                  (click)=\\\"viewDocument('MAIN', false)\\\"\\r\\n                  [hidden]=\\\"\\r\\n                    tempComplianceAttachmentDocuments[0]?.originalFilename ===\\r\\n                    null\\r\\n                  \\\"\\r\\n                  *ngIf=\\\"\\r\\n                    showMainDocumentViewButtonC ||\\r\\n                    tempComplianceAttachmentDocuments[0]?.originalFilename\\r\\n                  \\\"\\r\\n                >\\r\\n                  <i class=\\\"material-icons add-document\\\">open_in_new</i> VIEW\\r\\n                  DOCUMENT\\r\\n                </button>\\r\\n                &nbsp; &nbsp;\\r\\n                <button\\r\\n                  mat-raised-button\\r\\n                  class=\\\"button-red button-right\\\"\\r\\n                  (click)=\\\"deleteUploadedFile('MAIN')\\\"\\r\\n                  [hidden]=\\\"\\r\\n                    tempComplianceAttachmentDocuments[0]?.originalFilename ===\\r\\n                    null\\r\\n                  \\\"\\r\\n                  *ngIf=\\\"\\r\\n                    showMainDocumentViewButtonC ||\\r\\n                    tempComplianceAttachmentDocuments[0]?.originalFilename\\r\\n                  \\\"\\r\\n                >\\r\\n                  <i class=\\\"material-icons add-document\\\">delete</i> DELETE\\r\\n                  ATTACHMENT\\r\\n                </button>\\r\\n                &nbsp; &nbsp;\\r\\n\\r\\n                <button\\r\\n                  mat-raised-button\\r\\n                  class=\\\"button-red button-right\\\"\\r\\n                  (click)=\\\"uploadDocument()\\\"\\r\\n                  [disabled]=\\\"!safeURLMainDoc || !showMainDocumentUploadButton\\\"\\r\\n                  [hidden]=\\\"isAscUser && isDisableFieldOnUpdate\\\"\\r\\n                  *ngIf=\\\"showMainDocumentUploadButton\\\"\\r\\n                >\\r\\n                  <i class=\\\"material-icons add-document\\\">upload</i> UPLOAD\\r\\n                </button>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-12\\\">\\r\\n                <hr />\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <!-- SUPPORTING DOC -->\\r\\n            <div\\r\\n              class=\\\"row\\\"\\r\\n              [hidden]=\\\"\\r\\n                (isAscUser && isDisableFieldOnUpdate) ||\\r\\n                applicationStage === 'S2-APPLICATION' ||\\r\\n                (currentUser.userRole.name == 'ROLE_ENCODER' &&\\r\\n                  s1Application?.internalStatus !== undefined)\\r\\n              \\\"\\r\\n              *ngIf=\\\"\\r\\n                showSupportDocumentFrameC ||\\r\\n                tempComplianceAttachmentDocuments?.length > 0 ||\\r\\n                ((s1Application?.internalStatus === 'S1_APPLICATION_REVIEWED' ||\\r\\n                  s1Application?.internalStatus ===\\r\\n                    'COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER' ||\\r\\n                  s1Application?.internalStatus == 'REVISION_SCREENED' ||\\r\\n                  s1Application?.internalStatus == 'S1_APPLICATION_REJECTED') &&\\r\\n                  s1Application?.decisionStatus == 'INCOMPLETE')\\r\\n              \\\"\\r\\n            >\\r\\n              <h4>\\r\\n                <i class=\\\"material-icons\\\">bookmark</i> &nbsp;SUPPORT DOCUMENTS\\r\\n              </h4>\\r\\n\\r\\n              <!-- Display if no support document was attached -->\\r\\n              <div class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n                <mat-checkbox\\r\\n                  (click)=\\\"verifyNoDocumentAttached()\\\"\\r\\n                  [(ngModel)]=\\\"s1Application.hasNoSupportingDocs\\\"\\r\\n                  (checked)=\\\"(s1Application.hasNoSupportingDocs)\\\"\\r\\n                  formControlName=\\\"hasNoSupportingDocs\\\"\\r\\n                  [hidden]=\\\"\\r\\n                    tempComplianceAttachmentDocuments[1]?.originalFilename\\r\\n                  \\\"\\r\\n                  *ngIf=\\\"\\r\\n                    currentUser.userRole.name == 'ROLE_APPLICANT' ||\\r\\n                    (currentUser.userRole.name == 'ROLE_ENCODER' &&\\r\\n                      s1Application?.internalStatus === undefined)\\r\\n                  \\\"\\r\\n                >\\r\\n                  I certify that no supporting document is attached to this S1\\r\\n                  application.</mat-checkbox\\r\\n                >\\r\\n                <br />\\r\\n              </div>\\r\\n\\r\\n              <p\\r\\n                *ngIf=\\\"\\r\\n                  (s1Application?.submissionType === 'COMPLIANCE' &&\\r\\n                    s1Application?.hasNoSupportingDocs &&\\r\\n                    s1Application?.internalStatus !== undefined &&\\r\\n                    s1Application?.internalStatus !==\\r\\n                      'S1_APPLICATION_REVIEWED' &&\\r\\n                    s1Application?.decisionStatus !== 'INCOMPLETE') ||\\r\\n                  (s1Application?.hasNoSupportingDocs &&\\r\\n                    applicationStage === 'S1-Preview')\\r\\n                \\\"\\r\\n              >\\r\\n                Supporting Document was not submitted.\\r\\n              </p>\\r\\n              <div class=\\\"col-md-12\\\"><br /></div>\\r\\n\\r\\n              <div *ngIf=\\\"!s1Application?.hasNoSupportingDocs\\\">\\r\\n                <div class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n                  <mat-label\\r\\n                    *ngIf=\\\"\\r\\n                      tempComplianceAttachmentDocuments?.length > 0 &&\\r\\n                      tempComplianceAttachmentDocuments[1]?.originalFilename\\r\\n                    \\\"\\r\\n                    >Filename:\\r\\n                  </mat-label>\\r\\n                  <input\\r\\n                    #supportiveInput\\r\\n                    matInput\\r\\n                    [value]=\\\"\\r\\n                      tempComplianceAttachmentDocuments[1]?.originalFilename\\r\\n                    \\\"\\r\\n                    disabled\\r\\n                    *ngIf=\\\"\\r\\n                      tempComplianceAttachmentDocuments?.length > 0 &&\\r\\n                      tempComplianceAttachmentDocuments[1]?.originalFilename\\r\\n                    \\\"\\r\\n                  /><br />\\r\\n\\r\\n                  <input\\r\\n                    #supportiveFile\\r\\n                    class=\\\"file-upload\\\"\\r\\n                    type=\\\"file\\\"\\r\\n                    accept=\\\".pdf\\\"\\r\\n                    (change)=\\\"selectFile($event, 'SUPPORTIVE')\\\"\\r\\n                    [hidden]=\\\"\\r\\n                      (isAscUser && isDisableFieldOnUpdate) ||\\r\\n                      tempComplianceAttachmentDocuments[1]?.originalFilename\\r\\n                    \\\"\\r\\n                    *ngIf=\\\"\\r\\n                      tempComplianceAttachmentDocuments?.length <= 2 ||\\r\\n                      (tempComplianceAttachmentDocuments?.length == 2 &&\\r\\n                        tempComplianceAttachmentDocuments[1] === null) ||\\r\\n                      s1Application?.internalStatus == 'SAVED' ||\\r\\n                      tempComplianceAttachmentDocuments[1]?.originalFilename !=\\r\\n                        null ||\\r\\n                      ((s1Application?.internalStatus ==\\r\\n                        'S1_APPLICATION_REVIEWED' ||\\r\\n                        s1Application?.internalStatus ==\\r\\n                          'COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER' ||\\r\\n                        s1Application?.internalStatus == 'REVISION_SCREENED' ||\\r\\n                        s1Application?.internalStatus ==\\r\\n                          'S1_APPLICATION_REJECTED') &&\\r\\n                        s1Application?.decisionStatus == 'INCOMPLETE')\\r\\n                    \\\"\\r\\n                  />\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"row\\\"><br /></div>\\r\\n                <div class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n                  <button\\r\\n                    mat-raised-button\\r\\n                    class=\\\"button-red button-right\\\"\\r\\n                    (click)=\\\"viewDocument('SUPPORTIVE', false)\\\"\\r\\n                    [hidden]=\\\"\\r\\n                      tempComplianceAttachmentDocuments[1]?.originalFilename ===\\r\\n                      null\\r\\n                    \\\"\\r\\n                    *ngIf=\\\"\\r\\n                      showSupportiveDocumentViewButtonC ||\\r\\n                      tempComplianceAttachmentDocuments[1]?.originalFilename\\r\\n                    \\\"\\r\\n                  >\\r\\n                    <i class=\\\"material-icons add-document\\\">open_in_new</i> VIEW\\r\\n                    DOCUMENT\\r\\n                  </button>\\r\\n                  &nbsp; &nbsp;\\r\\n                  <button\\r\\n                    mat-raised-button\\r\\n                    class=\\\"button-red button-right\\\"\\r\\n                    (click)=\\\"deleteUploadedFile('SUPPORTIVE')\\\"\\r\\n                    [hidden]=\\\"\\r\\n                      tempComplianceAttachmentDocuments[1]?.originalFilename ===\\r\\n                      null\\r\\n                    \\\"\\r\\n                    *ngIf=\\\"\\r\\n                      showSupportiveDocumentViewButtonC ||\\r\\n                      tempComplianceAttachmentDocuments[1]?.originalFilename\\r\\n                    \\\"\\r\\n                  >\\r\\n                    <i class=\\\"material-icons add-document\\\">delete</i> DELETE\\r\\n                    ATTACHMENT\\r\\n                  </button>\\r\\n                  &nbsp; &nbsp;\\r\\n                  <button\\r\\n                    mat-raised-button\\r\\n                    class=\\\"button-red button-right\\\"\\r\\n                    (click)=\\\"uploadDocument()\\\"\\r\\n                    [hidden]=\\\"isAscUser && isDisableFieldOnUpdate\\\"\\r\\n                    *ngIf=\\\"showSupportiveDocumentUploadButton\\\"\\r\\n                  >\\r\\n                    <i class=\\\"material-icons add-document\\\">upload</i> UPLOAD\\r\\n                  </button>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\"><br /></div>\\r\\n                <br />\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row\\\"><hr /></div>\\r\\n\\r\\n            <!---------- EXISTING ---------->\\r\\n            <div\\r\\n              class=\\\"row\\\"\\r\\n              *ngFor=\\\"let i of complianceAttachmentDocuments; let index = index\\\"\\r\\n            >\\r\\n              <div *ngIf=\\\"i !== null\\\">\\r\\n                <h4>\\r\\n                  <i class=\\\"material-icons\\\">bookmark</i> &nbsp;{{\\r\\n                    i?.attachmentType\\r\\n                      ?.replaceAll(\\\"SUPPORTIVE\\\", \\\"SUPPORTING\\\")\\r\\n                      ?.replaceAll(\\\"_\\\", \\\" \\\")\\r\\n                  }}\\r\\n                  DOCUMENT\\r\\n                </h4>\\r\\n                <br />\\r\\n                <div class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n                  <mat-label *ngIf=\\\"i?.originalFilename\\\">Filename: </mat-label>\\r\\n                  <input\\r\\n                    #mainInput\\r\\n                    matInput\\r\\n                    [value]=\\\"i?.originalFilename\\\"\\r\\n                    disabled\\r\\n                    *ngIf=\\\"i?.originalFilename\\\"\\r\\n                  /><br />\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"row\\\"><br /></div>\\r\\n                <div\\r\\n                  class=\\\"col-md-12\\\"\\r\\n                  appearance=\\\"outline\\\"\\r\\n                  *ngIf=\\\"\\r\\n                    showMainDocumentViewButton ||\\r\\n                    i?.mainAttachmentReference ||\\r\\n                    i?.supportingAttachmentReference ||\\r\\n                    i?.revisionLetterAttachmentReference\\r\\n                  \\\"\\r\\n                >\\r\\n                  <button\\r\\n                    mat-raised-button\\r\\n                    class=\\\"button-red button-right\\\"\\r\\n                    (click)=\\\"viewDocument(i.attachmentType)\\\"\\r\\n                  >\\r\\n                    <i class=\\\"material-icons add-document\\\">open_in_new</i> VIEW\\r\\n                    DOCUMENT\\r\\n                  </button>\\r\\n                  &nbsp; &nbsp;\\r\\n                  <button\\r\\n                    mat-raised-button\\r\\n                    class=\\\"button-red button-right\\\"\\r\\n                    (click)=\\\"deleteUploadedFile2(i)\\\"\\r\\n                    *ngIf=\\\"i?.status === 'UNPROCESSED'\\\"\\r\\n                  >\\r\\n                    <i class=\\\"material-icons add-document\\\">delete</i> DELETE\\r\\n                    ATTACHMENT\\r\\n                  </button>\\r\\n                  &nbsp; &nbsp;\\r\\n                </div>\\r\\n                <div class=\\\"col-md-12\\\"><br /></div>\\r\\n                <div class=\\\"col-md-12\\\">\\r\\n                  <hr />\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div\\r\\n              class=\\\"no-record\\\"\\r\\n              *ngIf=\\\"\\r\\n                (complianceAttachmentDocuments?.length === 0 &&\\r\\n                  complianceAttachmentDocuments[0]?.originalFilename ===\\r\\n                    undefined) ||\\r\\n                complianceAttachmentDocuments?.length === null\\r\\n              \\\"\\r\\n            >\\r\\n              No existing attachments for compliance.\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </mat-tab>\\r\\n      <!-- END OF TAB FOR COMPLIANCE -->\\r\\n    </mat-tab-group>\\r\\n  </form>\\r\\n</div>\\r\\n\";","import { Company } from './company.model';\r\nimport { Brand } from './brand.model';\r\nimport { ApplicationType } from './application-type.model';\r\nimport { UserAccount } from './user-account.model';\r\nimport { Product } from './product.model';\r\nimport { Category } from '@models';\r\n\r\nexport class MultipleApplication {\r\n    id: number;\r\n    actionBy: string;\r\n    actionDate: Date;\r\n    adTitle: string;\r\n    applicationOwner: UserAccount;\r\n    applicationType: ApplicationType;\r\n    brand: Brand;\r\n    company: Company;\r\n    dateOfSubmission: Date;\r\n    numberOfApplication: number;\r\n    status: string;\r\n    tagLine: string;\r\n\r\n    actionStatus: string;\r\n    submissionStatus: string;\r\n    assignedAdSpecialist: UserAccount;\r\n    assignedEncoder: UserAccount;\r\n    assignedScreener: UserAccount;\r\n    assignedReviewer: UserAccount;\r\n    actualNumberOfApplicationForm: number;\r\n    countVerifiedApplicationForm: number;\r\n\r\n    totalAmount: number;\r\n    paymentStatus: string;\r\n\r\n    product: Product;\r\n\r\n}\r\n\r\nexport class MultipleApplicationId {\r\n  id: number;\r\n}\r\n\r\n","import { S2Application } from './s2-application.model';\r\nimport { UserAccount } from './user-account.model';\r\n\r\nexport class Comment {\r\n    id: number;\r\n    comment: string;\r\n    revisionNo: number;\r\n    actionBy: UserAccount;\r\n    role: string;\r\n    actionDate: Date;\r\n    commentType: string; // INTERNAL, EXTERNAL, EMAIL, REJECT\r\n    applicationFormType: string; // S1, S2\r\n    appFormReference: string;\r\n    applicationFormS2: S2Application;\r\n    // modifiedBy: string;\r\n    // modifiedDate: Date;\r\n}\r\n","export default \"/* Accordion */\\n.action-buttons {\\n  float: right;\\n}\\n.headers-align .mat-expansion-panel-header-title,\\n.headers-align .mat-expansion-panel-header-description {\\n  flex-basis: 0;\\n  font-size: 1.25em;\\n  align-items: center;\\n}\\n.headers-align .mat-expansion-panel-header-description {\\n  justify-content: space-between;\\n  align-items: center;\\n}\\n.headers-align .mat-form-field + .mat-form-field {\\n  margin-left: 8px;\\n}\\n.tooltip .tooltiptext {\\n  width: 120px;\\n  bottom: 100%;\\n  left: 50%;\\n  margin-left: -60px;\\n  /* Use half of the width (120/2 = 60), to center the tooltip */\\n}\\n.mat-expansion-panel-header {\\n  border: 1px solid #BFBFBF;\\n}\\n/* input[type=\\\"file\\\"] {\\n  display: none;\\n} */\\n.custom-file-upload {\\n  border: 1px solid #ccc;\\n  display: inline-block;\\n  padding: 6px 12px;\\n  cursor: pointer;\\n}\\n.mat-expansion-panel-header.mat-expanded:hover,\\n.mat-expansion-panel-header {\\n  background: #bad9ff;\\n}\\n.mat-expansion-panel .mat-expansion-panel-header.cdk-keyboard-focused:not([aria-disabled=true]),\\n.mat-expansion-panel .mat-expansion-panel-header.cdk-program-focused:not([aria-disabled=true]),\\n.mat-expansion-panel:not(.mat-expanded) .mat-expansion-panel-header:hover:not([aria-disabled=true]) {\\n  background: #cfe5ff;\\n}\\n.file-upload {\\n  width: 100%;\\n  background-color: #bad9ff;\\n  border: 1px solid gray;\\n}\\n.pdf-border {\\n  width: 100%;\\n  height: 300px;\\n  border: 2px solid gray;\\n}\\ntable {\\n  width: 100%;\\n  border-collapse: separate;\\n  border-spacing: 0 5px;\\n}\\ntable td {\\n  height: 40px;\\n  font-weight: 500;\\n  padding: 0px 15px;\\n}\\ntable .details-title {\\n  background-color: #ff5252;\\n  color: white;\\n  border: 1px solid white;\\n  border-radius: 5px;\\n}\\ntable .details {\\n  color: #ff5252;\\n  border: 1px solid #0000001f;\\n  font-weight: 600;\\n}\\n.badge {\\n  width: auto;\\n}\\n.color__white {\\n  color: white;\\n}\\n.rationale {\\n  border: solid gray 2px;\\n  border-radius: 5px;\\n  padding: 10px;\\n  background-color: #eee1e1;\\n}\\n.rationale label {\\n  font-size: 15px;\\n  font-weight: 600;\\n  color: #ac0000;\\n  margin-bottom: 10px;\\n}\\n.rationale .rationale-list {\\n  background-color: #f1eaea;\\n  border: solid gray 1px;\\n  height: auto;\\n  max-height: 15em;\\n  padding: 10px;\\n  margin-bottom: 5px;\\n}\\n.rationale .rationale-list label {\\n  font-size: 10px;\\n}\\n.rationale .rationale-list p {\\n  font-size: 10px;\\n  font-weight: 600;\\n  line-height: 10px;\\n}\\n.rationale .rationale-list p span {\\n  font-size: 7px;\\n  color: #ac0000;\\n  margin: auto;\\n}\\n.rationale .rational-other-comment {\\n  background-color: #f1eaea;\\n  border: solid gray 1px;\\n  height: auto;\\n  padding: 10px;\\n}\\n.rationale .rational-other-comment label {\\n  font-size: 10px;\\n}\\n.rationale .rational-other-comment p {\\n  font-size: 10px;\\n  font-weight: 600;\\n  line-height: 2px;\\n}\\n.rationale .rational-other-comment p span {\\n  font-size: 7px;\\n  color: #ac0000;\\n  margin: auto;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9wYWdlcy9hcHBsaWNhdGlvbnMvczItYXBwbGljYXRpb24vYWRkLXMyLWFwcGxpY2F0aW9uL2FkZC1zMi1hcHBsaWNhdGlvbi5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxjQUFBO0FBQ0E7RUFFRSxZQUFBO0FBQUY7QUFHQTs7RUFFRSxhQUFBO0VBQ0EsaUJBQUE7RUFDQSxtQkFBQTtBQUFGO0FBR0E7RUFDRSw4QkFBQTtFQUNBLG1CQUFBO0FBQUY7QUFHQTtFQUNFLGdCQUFBO0FBQUY7QUFHQTtFQUNFLFlBQUE7RUFDQSxZQUFBO0VBQ0EsU0FBQTtFQUNBLGtCQUFBO0VBQ0EsOERBQUE7QUFBRjtBQUdBO0VBQ0UseUJBQUE7QUFBRjtBQUlBOztHQUFBO0FBSUE7RUFDRSxzQkFBQTtFQUNBLHFCQUFBO0VBQ0EsaUJBQUE7RUFDQSxlQUFBO0FBRkY7QUFLQTs7RUFFRSxtQkFBQTtBQUZGO0FBS0E7OztFQUdFLG1CQUFBO0FBRkY7QUFNQTtFQUNFLFdBQUE7RUFDQSx5QkFBQTtFQUNBLHNCQUFBO0FBSEY7QUFNQTtFQUNFLFdBQUE7RUFDQSxhQUFBO0VBQ0Esc0JBQUE7QUFIRjtBQU9BO0VBRUUsV0FBQTtFQUNBLHlCQUFBO0VBQ0EscUJBQUE7QUFMRjtBQVFFO0VBQ0UsWUFBQTtFQUNBLGdCQUFBO0VBQ0EsaUJBQUE7QUFOSjtBQVNFO0VBQ0UseUJBQUE7RUFDQSxZQUFBO0VBQ0EsdUJBQUE7RUFDQSxrQkFBQTtBQVBKO0FBVUU7RUFDRSxjQUFBO0VBQ0EsMkJBQUE7RUFDQSxnQkFBQTtBQVJKO0FBWUE7RUFDRSxXQUFBO0FBVEY7QUFZQTtFQUNFLFlBQUE7QUFURjtBQVlBO0VBQ0Usc0JBQUE7RUFDQSxrQkFBQTtFQUNBLGFBQUE7RUFDQSx5QkFBQTtBQVRGO0FBVUk7RUFDRSxlQUFBO0VBQ0EsZ0JBQUE7RUFDQSxjQUFBO0VBQ0EsbUJBQUE7QUFSTjtBQVVJO0VBQ0UseUJBQUE7RUFDQSxzQkFBQTtFQUNBLFlBQUE7RUFDQSxnQkFBQTtFQUNBLGFBQUE7RUFDQSxrQkFBQTtBQVJOO0FBU007RUFDRSxlQUFBO0FBUFI7QUFVTTtFQUNFLGVBQUE7RUFDQSxnQkFBQTtFQUNBLGlCQUFBO0FBUlI7QUFTUTtFQUNFLGNBQUE7RUFDQSxjQUFBO0VBQ0EsWUFBQTtBQVBWO0FBV0k7RUFDRSx5QkFBQTtFQUNBLHNCQUFBO0VBQ0EsWUFBQTtFQUNBLGFBQUE7QUFUTjtBQVVNO0VBQ0UsZUFBQTtBQVJSO0FBVU07RUFDRSxlQUFBO0VBQ0EsZ0JBQUE7RUFDQSxnQkFBQTtBQVJSO0FBU1E7RUFDRSxjQUFBO0VBQ0EsY0FBQTtFQUNBLFlBQUE7QUFQViIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcGFnZXMvYXBwbGljYXRpb25zL3MyLWFwcGxpY2F0aW9uL2FkZC1zMi1hcHBsaWNhdGlvbi9hZGQtczItYXBwbGljYXRpb24uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBBY2NvcmRpb24gKi9cclxuLmFjdGlvbi1idXR0b25zIHtcclxuICAvLyBwYWRkaW5nLWJvdHRvbTogMjBweDtcclxuICBmbG9hdDogcmlnaHQ7XHJcbn1cclxuXHJcbi5oZWFkZXJzLWFsaWduIC5tYXQtZXhwYW5zaW9uLXBhbmVsLWhlYWRlci10aXRsZSxcclxuLmhlYWRlcnMtYWxpZ24gLm1hdC1leHBhbnNpb24tcGFuZWwtaGVhZGVyLWRlc2NyaXB0aW9uIHtcclxuICBmbGV4LWJhc2lzOiAwO1xyXG4gIGZvbnQtc2l6ZTogMS4yNWVtO1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbn1cclxuXHJcbi5oZWFkZXJzLWFsaWduIC5tYXQtZXhwYW5zaW9uLXBhbmVsLWhlYWRlci1kZXNjcmlwdGlvbiB7XHJcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbn1cclxuXHJcbi5oZWFkZXJzLWFsaWduIC5tYXQtZm9ybS1maWVsZCsubWF0LWZvcm0tZmllbGQge1xyXG4gIG1hcmdpbi1sZWZ0OiA4cHg7XHJcbn1cclxuXHJcbi50b29sdGlwIC50b29sdGlwdGV4dCB7XHJcbiAgd2lkdGg6IDEyMHB4O1xyXG4gIGJvdHRvbTogMTAwJTtcclxuICBsZWZ0OiA1MCU7XHJcbiAgbWFyZ2luLWxlZnQ6IC02MHB4O1xyXG4gIC8qIFVzZSBoYWxmIG9mIHRoZSB3aWR0aCAoMTIwLzIgPSA2MCksIHRvIGNlbnRlciB0aGUgdG9vbHRpcCAqL1xyXG59XHJcblxyXG4ubWF0LWV4cGFuc2lvbi1wYW5lbC1oZWFkZXIge1xyXG4gIGJvcmRlcjogMXB4IHNvbGlkICNCRkJGQkY7XHJcbn1cclxuXHJcbi8vIHVwbG9hZCBidXR0b25cclxuLyogaW5wdXRbdHlwZT1cImZpbGVcIl0ge1xyXG4gIGRpc3BsYXk6IG5vbmU7XHJcbn0gKi9cclxuXHJcbi5jdXN0b20tZmlsZS11cGxvYWQge1xyXG4gIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7XHJcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gIHBhZGRpbmc6IDZweCAxMnB4O1xyXG4gIGN1cnNvcjogcG9pbnRlcjtcclxufVxyXG5cclxuLm1hdC1leHBhbnNpb24tcGFuZWwtaGVhZGVyLm1hdC1leHBhbmRlZDpob3ZlcixcclxuLm1hdC1leHBhbnNpb24tcGFuZWwtaGVhZGVyIHtcclxuICBiYWNrZ3JvdW5kOiAjYmFkOWZmO1xyXG59XHJcblxyXG4ubWF0LWV4cGFuc2lvbi1wYW5lbCAubWF0LWV4cGFuc2lvbi1wYW5lbC1oZWFkZXIuY2RrLWtleWJvYXJkLWZvY3VzZWQ6bm90KFthcmlhLWRpc2FibGVkPXRydWVdKSxcclxuLm1hdC1leHBhbnNpb24tcGFuZWwgLm1hdC1leHBhbnNpb24tcGFuZWwtaGVhZGVyLmNkay1wcm9ncmFtLWZvY3VzZWQ6bm90KFthcmlhLWRpc2FibGVkPXRydWVdKSxcclxuLm1hdC1leHBhbnNpb24tcGFuZWw6bm90KC5tYXQtZXhwYW5kZWQpIC5tYXQtZXhwYW5zaW9uLXBhbmVsLWhlYWRlcjpob3Zlcjpub3QoW2FyaWEtZGlzYWJsZWQ9dHJ1ZV0pIHtcclxuICBiYWNrZ3JvdW5kOiAjY2ZlNWZmO1xyXG59XHJcblxyXG4vLyBGb3IgdXBsb2FkIGJvcmRlclxyXG4uZmlsZS11cGxvYWQge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICNiYWQ5ZmY7XHJcbiAgYm9yZGVyOiAxcHggc29saWQgZ3JheTtcclxufVxyXG5cclxuLnBkZi1ib3JkZXIge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIGhlaWdodDogMzAwcHg7XHJcbiAgYm9yZGVyOiAycHggc29saWQgZ3JheTtcclxufVxyXG5cclxuXHJcbnRhYmxlIHtcclxuICAvLyBib3JkZXI6IHNvbGlkIGJsYWNrIDFweDtcclxuICB3aWR0aDogMTAwJTtcclxuICBib3JkZXItY29sbGFwc2U6IHNlcGFyYXRlO1xyXG4gIGJvcmRlci1zcGFjaW5nOiAwIDVweDtcclxuXHJcblxyXG4gIHRkIHtcclxuICAgIGhlaWdodDogNDBweDtcclxuICAgIGZvbnQtd2VpZ2h0OiA1MDA7XHJcbiAgICBwYWRkaW5nOiAwcHggMTVweDtcclxuICB9XHJcblxyXG4gIC5kZXRhaWxzLXRpdGxlIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZjUyNTI7XHJcbiAgICBjb2xvcjogd2hpdGU7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCB3aGl0ZTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICB9XHJcblxyXG4gIC5kZXRhaWxzIHtcclxuICAgIGNvbG9yOiAjZmY1MjUyO1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgIzAwMDAwMDFmO1xyXG4gICAgZm9udC13ZWlnaHQ6IDYwMDtcclxuICB9XHJcbn1cclxuXHJcbi5iYWRnZSB7XHJcbiAgd2lkdGg6IGF1dG87XHJcbn1cclxuXHJcbi5jb2xvcl9fd2hpdGUge1xyXG4gIGNvbG9yOiB3aGl0ZTtcclxufVxyXG5cclxuLnJhdGlvbmFsZXtcclxuICBib3JkZXI6IHNvbGlkIGdyYXkgMnB4O1xyXG4gIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICBwYWRkaW5nOiAxMHB4O1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICNlZWUxZTE7XHJcbiAgICBsYWJlbHtcclxuICAgICAgZm9udC1zaXplOiAxNXB4O1xyXG4gICAgICBmb250LXdlaWdodDogNjAwO1xyXG4gICAgICBjb2xvcjogcmdiKDE3MiwgMCwgMCk7XHJcbiAgICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XHJcbiAgICB9XHJcbiAgICAucmF0aW9uYWxlLWxpc3R7XHJcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmMWVhZWE7XHJcbiAgICAgIGJvcmRlcjogc29saWQgZ3JheSAxcHg7XHJcbiAgICAgIGhlaWdodDogYXV0bztcclxuICAgICAgbWF4LWhlaWdodDogMTVlbTtcclxuICAgICAgcGFkZGluZzogMTBweDtcclxuICAgICAgbWFyZ2luLWJvdHRvbTogNXB4O1xyXG4gICAgICBsYWJlbHtcclxuICAgICAgICBmb250LXNpemU6IDEwcHg7XHJcbiAgICAgICAgXHJcbiAgICAgIH1cclxuICAgICAgcHtcclxuICAgICAgICBmb250LXNpemU6IDEwcHg7XHJcbiAgICAgICAgZm9udC13ZWlnaHQ6IDYwMDsgXHJcbiAgICAgICAgbGluZS1oZWlnaHQ6IDEwcHg7XHJcbiAgICAgICAgc3BhbntcclxuICAgICAgICAgIGZvbnQtc2l6ZTogN3B4O1xyXG4gICAgICAgICAgY29sb3I6IHJnYigxNzIsIDAsIDApO1xyXG4gICAgICAgICAgbWFyZ2luOiBhdXRvO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgLnJhdGlvbmFsLW90aGVyLWNvbW1lbnR7XHJcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmMWVhZWE7XHJcbiAgICAgIGJvcmRlcjogc29saWQgZ3JheSAxcHg7XHJcbiAgICAgIGhlaWdodDogYXV0bztcclxuICAgICAgcGFkZGluZzogMTBweDtcclxuICAgICAgbGFiZWx7XHJcbiAgICAgICAgZm9udC1zaXplOiAxMHB4O1xyXG4gICAgICB9XHJcbiAgICAgIHB7XHJcbiAgICAgICAgZm9udC1zaXplOiAxMHB4O1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiA2MDA7XHJcbiAgICAgICAgbGluZS1oZWlnaHQ6IDJweDtcclxuICAgICAgICBzcGFue1xyXG4gICAgICAgICAgZm9udC1zaXplOiA3cHg7XHJcbiAgICAgICAgICBjb2xvcjogcmdiKDE3MiwgMCwgMCk7XHJcbiAgICAgICAgICBtYXJnaW46IGF1dG87XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICBcclxufSJdfQ== */\";","import { AfterViewInit, Component, Input, OnInit, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTable, MatTableDataSource } from '@angular/material/table';\r\n\r\n@Component({\r\n  selector: 'app-preview-attachments',\r\n  templateUrl: './preview-attachments.component.html',\r\n  styleUrls: ['./preview-attachments.component.scss']\r\n})\r\nexport class PreviewAttachmentsComponent implements OnInit, AfterViewInit {\r\n\r\n  @ViewChild(MatPaginator, { static: false }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: false }) sort: MatSort;\r\n  @ViewChild(MatTable, { static: false }) table: MatTable<object>;\r\n  @Input() previewAttachmentsList = [];\r\n  @Input() dataSource: MatTableDataSource<object>;\r\n  @Input() displayedColumns = '';\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  viewFormOrMaterial(attachmentUrl) {\r\n    if (attachmentUrl) {\r\n      window.open(attachmentUrl);\r\n    }\r\n  }\r\n\r\n}\r\n","export default \"table.mat-table {\\n  width: 100%;\\n}\\ntable.mat-table tr.mat-row:hover {\\n  background-color: #edf1f7;\\n  cursor: auto;\\n}\\ntable.mat-table tr.mat-row span:hover {\\n  background-color: #edf1f7;\\n  cursor: pointer;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9wYWdlcy9hcHBsaWNhdGlvbnMvcHJldmlldy1hdHRhY2htZW50cy9wcmV2aWV3LWF0dGFjaG1lbnRzLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksV0FBQTtBQUNKO0FBQ0k7RUFDSSx5QkFBQTtFQUNBLFlBQUE7QUFDUjtBQUVJO0VBQ0EseUJBQUE7RUFDQSxlQUFBO0FBQUoiLCJmaWxlIjoic3JjL2FwcC9tb2R1bGVzL3BhZ2VzL2FwcGxpY2F0aW9ucy9wcmV2aWV3LWF0dGFjaG1lbnRzL3ByZXZpZXctYXR0YWNobWVudHMuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0YWJsZS5tYXQtdGFibGUge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcblxyXG4gICAgdHIubWF0LXJvdzpob3ZlciB7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2VkZjFmNztcclxuICAgICAgICBjdXJzb3I6IGF1dG87XHJcbiAgICB9XHJcblxyXG4gICAgdHIubWF0LXJvdyBzcGFuOmhvdmVyIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNlZGYxZjc7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICB9XHJcbiAgfSJdfQ== */\";","import { Component, Input, OnInit, ViewChild } from '@angular/core';\r\nimport { S1Application } from '@models';\r\nimport { ApiService } from '@services';\r\nimport { APP_DECISION_STATUS, ATTACHMENT_TYPE, SUBMISSION_TYPE } from '@shared';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { ApplicationSingleMedia } from '../../../../core/models/application-single-media.model';\r\nimport { AttachmentDocumentComponent } from '../attachment-document/attachment-document.component';\r\n\r\n@Component({\r\n  selector: 'app-preview-application',\r\n  templateUrl: './preview-application.component.html',\r\n  styleUrls: ['./preview-application.component.scss']\r\n})\r\nexport class PreviewApplicationComponent implements OnInit {\r\n  @ViewChild(MatPaginator, { static: false }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: false }) sort: MatSort;\r\n  dataSource: MatTableDataSource<any>;\r\n  displayedColumns: string[] = ['typeOfDocument', 'variant', 'expiresOn', 'basedOn', 'remarks'];\r\n  @ViewChild(AttachmentDocumentComponent, { static: false }) materialAttachmentDocument: AttachmentDocumentComponent\r\n    ;\r\n\r\n  @Input() previewS1Application: any;// = new S1Application();\r\n  attachmentDocuments = [];\r\n  @Input() originalAttachmentDocuments = [];\r\n  @Input() revisionAttachmentDocuments = [];\r\n  @Input() complianceAttachmentDocuments = [];\r\n  @Input() applicationSingleMedia = new ApplicationSingleMedia();\r\n  @Input() revisionLetterAttachment: any;\r\n  @Input() multimediaDTO: any = {};\r\n\r\n  supportiveDocumentList = [];\r\n  multimediaMovingList = [];\r\n  multimediaStaticList = [];\r\n\r\n  constructor(\r\n    private apiService: ApiService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    // console.log('Preview..', this.previewS1Application);\r\n  }\r\n\r\n\r\n  viewDocument(typeOfDocument) {\r\n    if (this.previewS1Application.submissionType === SUBMISSION_TYPE.ORIGINAL) {\r\n      this.attachmentDocuments = this.originalAttachmentDocuments;\r\n    } else if (this.previewS1Application.submissionType === SUBMISSION_TYPE.REVISION) {\r\n      this.attachmentDocuments = this.revisionLetterAttachment;\r\n    } else if (this.previewS1Application.submissionType === SUBMISSION_TYPE.COMPLIANCE\r\n      || this.previewS1Application.decisionStatus === APP_DECISION_STATUS.INCOMPLETE) {\r\n      this.attachmentDocuments = this.complianceAttachmentDocuments;\r\n    }\r\n\r\n    if (typeOfDocument === ATTACHMENT_TYPE.MAIN) {\r\n      const mainDoc = this.attachmentDocuments.filter(res => res.attachmentType === ATTACHMENT_TYPE.MAIN)[0];\r\n      window.open(this.attachmentDocuments[0].fileURL);\r\n    } else if (typeOfDocument === ATTACHMENT_TYPE.SUPPORTIVE) {\r\n      const supportiveDoc = this.attachmentDocuments.filter(res => res.attachmentType === ATTACHMENT_TYPE.SUPPORTIVE)[0];\r\n      window.open(supportiveDoc.fileURL);\r\n    } else if (typeOfDocument === ATTACHMENT_TYPE.REVISION_LETTER) {\r\n      // this.attachmentDocuments.filter(res => res.attachmentType === ATTACHMENT_TYPE.REVISION_LETTER)[0];\r\n      const revisionLetterDoc = this.revisionLetterAttachment;\r\n      window.open(revisionLetterDoc.fileURL);\r\n    }\r\n  }\r\n\r\n}\r\n","export default \"<div class=\\\"list-dialog-content\\\">\\r\\n    <div class=\\\"row head-icon\\\">\\r\\n      <i class=\\\"material-icons\\\">live_help</i>\\r\\n      <p>{{s2Application.applicationForm.referenceCode}}</p>\\r\\n      <p class=\\\"sub-title\\\">Reference Code</p>\\r\\n      <p class=\\\"warning-msg\\\" *ngIf=\\\"!typeOfExecution?.applyForToa && typeOfExecution?.live\\\">This application is valid for S1 only.</p>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-4\\\">\\r\\n            <button mat-raised-button class=\\\"button-red action-button\\\" (click)=\\\"proceedToS2(true)\\\"\\r\\n            [disabled]=\\\"typeOfExecution?.live\\\">\\r\\n                <i class=\\\"material-icons color__white\\\">summarize</i> PROCEED TO S2 APPLICATION\\r\\n            </button>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-4\\\">\\r\\n            <button mat-raised-button class=\\\"button-red action-button\\\" (click)=\\\"proceedToS2(false)\\\"\\r\\n            [disabled]=\\\"!typeOfExecution?.applyForToa\\\">\\r\\n                <i class=\\\"material-icons color__white\\\">done_all</i> APPLY FOR TOA\\r\\n            </button>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-4\\\">\\r\\n            <button mat-raised-button class=\\\"button-red action-button\\\" (click)=\\\"requestForClearingAndClearance()\\\"\\r\\n            [disabled]=\\\"s1Application?.applicationType?.description == 'Special Screening and Clearing'||typeOfExecution?.live\\\">\\r\\n                <i class=\\\"material-icons color__white\\\">sticky_note_2</i> REQUEST FOR SPECIAL CLEARING APPROVAL\\r\\n            </button>\\r\\n        </div>\\r\\n    </div><br>\\r\\n    <!-- <div class=\\\"row\\\">\\r\\n        <div class=\\\" col-md-12 form-check\\\">\\r\\n            <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" (change)=\\\"hasToa($event.target.checked)\\\" value=\\\"\\\" id=\\\"flexCheckDefault\\\">\\r\\n            <label class=\\\"form-check-label\\\" for=\\\"flexCheckDefault\\\">\\r\\n              Apply for TOA\\r\\n            </label>\\r\\n          </div>\\r\\n    </div> -->\\r\\n</div>\\r\\n\\r\\n<!-- *ngIf=\\\"s2Application?.applicationForm?.applicationType?.description === 'SPECIAL SCREENING AND CLEARING'\\\" -->\\r\\n\\r\\n\";","export default \"<div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-12 title\\\">\\r\\n            <mat-label>\\r\\n                <mat-icon>view_list</mat-icon>  <b>Schedule of Fees - Individual Application</b>\\r\\n            </mat-label>\\r\\n        </div>\\r\\n    </div>\\r\\n    <hr>\\r\\n    <div class=\\\"row col-md-12 mt-4\\\">\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n            <div>\\r\\n                <mat-label>Proof of Payment: &nbsp;&nbsp;&nbsp;<span>PDF file only!</span></mat-label><br>\\r\\n                <input class=\\\"file-upload\\\" type=\\\"file\\\" [(ngModel)]=\\\"attachment\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n                    accept=\\\".pdf\\\" (change)=\\\"selectFile($event)\\\">\\r\\n            </div>\\r\\n            <div *ngIf=\\\"previewDocument===true\\\">\\r\\n                <div class=\\\"file-upload\\\">\\r\\n                    <object [data]=\\\"safeURLProofOfPayment\\\" type=\\\"application/pdf\\\" width=\\\"100%\\\" height=\\\"400\\\">\\r\\n                        <iframe [src]=\\\"safeURLProofOfPayment\\\" width=\\\"100%\\\" height=\\\"500\\\">\\r\\n                            <p>This browser does not support PDF!</p>\\r\\n                        </iframe>\\r\\n                    </object>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n            <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label>Reference Code</mat-label>\\r\\n                <input matInput [value]= \\\"s1Application?.referenceCode\\\" readonly>\\r\\n            </mat-form-field>\\r\\n\\r\\n            <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label>Advertiser</mat-label>\\r\\n                <input matInput name=\\\"companyName\\\" [value]=\\\"s1Application?.company?.companyName\\\" readonly>\\r\\n            </mat-form-field>\\r\\n\\r\\n            <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label>Ad Title - Medium (Length)</mat-label>\\r\\n                <textarea matInput name=\\\"refTypeOfMedium\\\"\\r\\n                  [value]=\\\"s1Application?.adTitle + ' - ' + typeOfMediumDisplay\\\"\\r\\n                  readonly></textarea>\\r\\n            </mat-form-field>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n            <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label>Vatable Sales</mat-label>\\r\\n                <input matInput class=\\\"numbers-input\\\" name=\\\"amount\\\" [value]=\\\"paymentDetails?.basicRate | number : '1.2-2'\\\" readonly>\\r\\n            </mat-form-field>\\r\\n\\r\\n            <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label>VAT</mat-label>\\r\\n                <input matInput class=\\\"numbers-input\\\" name=\\\"amount\\\" [value]=\\\"paymentDetails?.vat | number : '1.2-2'\\\" readonly>\\r\\n            </mat-form-field>\\r\\n\\r\\n            <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label>Total Sales (VAT Inclusive)</mat-label>\\r\\n                <input matInput class=\\\"numbers-input total\\\" name=\\\"amount\\\" [value]=\\\"paymentDetails?.amountDue | number : '1.2-2'\\\" readonly>\\r\\n            </mat-form-field>\\r\\n\\r\\n            <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label>Payment Mode <span class=\\\"required-field\\\">\\r\\n                  <mat-icon>notification_important</mat-icon>\\r\\n                </span></mat-label>\\r\\n                <mat-select [(ngModel)]=\\\"paymentType\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                    <div *ngFor=\\\"let i of paymentTypeList\\\">\\r\\n                        <mat-option *ngIf=\\\"i?.status === 'ACTIVE'\\\" [value]=\\\"i\\\" name=\\\"paymentType\\\">\\r\\n                            {{i?.paymentDescription | uppercase}}\\r\\n                        </mat-option>\\r\\n                    </div>\\r\\n                </mat-select>\\r\\n            </mat-form-field>\\r\\n            <hr style=\\\"margin-top: 2px;\\\">\\r\\n            <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label>Remarks</mat-label>\\r\\n                <textarea matInput name=\\\"remarks\\\" [(ngModel)]=\\\"payment.remarks\\\"></textarea>\\r\\n            </mat-form-field>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row col-md-12\\\">\\r\\n        <div class=\\\"col-md-10\\\"><span *ngIf=\\\"paymentType && paymentDetails?.amountDue === 0\\\">\\r\\n          <i>Please contact ASC admin to check the Maintenance of Fees.</i></span></div>\\r\\n        <div class=\\\"col-md-2 text-end\\\">\\r\\n            <button mat-raised-button class=\\\"button-red m-0\\\" [disabled]=\\\"!paymentType || !previewDocument || paymentDetails?.amountDue === 0\\\" (click)=\\\"uploadDocument(s1Application)\\\">\\r\\n                <i class=\\\"material-icons color__white\\\" >task_alt</i> SUBMIT\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\";","export default \"<!-- <form [formGroup]=\\\"materialInformationForm\\\"> -->\\r\\n<div class=\\\"row fields\\\"\\r\\n  [hidden]=\\\"currentUser?.userRole?.name=='ROLE_APPLICANT'&&(s1Application?.decisionStatus=='INCOMPLETE'||s1Application?.decisionStatus=='APPROVED'||s1Application?.decisionStatus=='APPROVED W/ CAUTION')\\r\\n    || (s1Application?.submissionType === 'REVISION' && s1Application?.internalStatus === 'S1_APPLICATION_REJECTED')\\r\\n    || (s1Application?.submissionType === 'COMPLIANCE' && s1Application?.internalStatus === 'S1_APPLICATION_REJECTED')\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <!-- FOR S1 APPLICATION -->\\r\\n    <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n      <mat-label>Ad Title\\r\\n        <span class=\\\"required\\\">*</span>\\r\\n      </mat-label>\\r\\n      <input matInput [(ngModel)]=\\\"s1Application.adTitle\\\" name=\\\"adTitle\\\"\\r\\n        (ngModelChange)=\\\"util.toUpperCase(s1Application, 'adTitle', $event)\\\"\\r\\n        [readonly]=\\\"(isAscUser && isDisableFieldOnUpdate) || (s1Application?.applicationRequest?.status === 'APPROVED')\\\">\\r\\n    </mat-form-field>\\r\\n  </div>\\r\\n\\r\\n  <!-- FOR S1 APPLICATION -->\\r\\n  <div class=\\\"row\\\">\\r\\n    <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\"\\r\\n      *ngIf=\\\"(s1Application?.formType !== 'MULTIPLE' || (s1Application?.formType === 'MULTIPLE' && s1Application.multipleApplication))\\\"\\r\\n      [hidden]=\\\"specialApplicationType.includes(s1Application?.applicationType?.description?.toUpperCase()) && s1Application?.applicationRequest?.status !== 'APPROVED'\\\">\\r\\n      <mat-label>Reference Code of Previously-Approved Material</mat-label>\\r\\n      <input matInput [(ngModel)]=\\\"s1Application.previousRefCode\\\" name=\\\"previousRefCode\\\"\\r\\n        (ngModelChange)=\\\"util.toUpperCase(s1Application, 'previousRefCode', $event)\\\"\\r\\n        [readonly]=\\\"isAscUser && isDisableFieldOnUpdate\\\">\\r\\n    </mat-form-field>\\r\\n\\r\\n    <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\">\\r\\n      <mat-label>Tag Line (Optional)</mat-label>\\r\\n      <input matInput [(ngModel)]=\\\"s1Application.tagLine\\\" name=\\\"tagLine\\\"\\r\\n        (ngModelChange)=\\\"util.toUpperCase(s1Application, 'tagLine', $event)\\\"\\r\\n        [readonly]=\\\"(isAscUser && isDisableFieldOnUpdate) || (s1Application?.applicationRequest?.status === 'APPROVED')\\\">\\r\\n    </mat-form-field>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<!-- MULTIMEDIA SELECTION SECTION -->\\r\\n<!-- FOR S1 APPLICATION -->\\r\\n<div class=\\\"row fields\\\"\\r\\n  *ngIf=\\\"(\\r\\n    !specialApplicationType.includes(s1Application?.applicationType?.description?.toUpperCase())\\r\\n    ||(specialApplicationType.includes(s1Application?.applicationType?.description?.toUpperCase()) && s1Application?.applicationRequest?.status == 'APPROVED')\\r\\n    ||(s1Application?.formType === 'MULTIPLE' && s1Application?.multipleApplication)\\r\\n  )\\r\\n  &&\\r\\n    s1Application?.formType !== 'MULTIPLE'||(s1Application?.formType === 'MULTIPLE' && s1Application?.multipleApplication)\\\"\\r\\n  [hidden]=\\\"(s1Application?.formType === 'MULTIPLE' && !s1Application.multipleApplication)\\r\\n        || currentUser?.userRole?.name=='ROLE_APPLICANT'&&(s1Application?.decisionStatus=='INCOMPLETE'||s1Application?.decisionStatus=='APPROVED'||s1Application?.decisionStatus=='APPROVED W/ CAUTION')\\r\\n        || (s1Application?.submissionType === 'REVISION' && s1Application?.internalStatus === 'S1_APPLICATION_REJECTED')\\r\\n        || (s1Application?.submissionType === 'COMPLIANCE' && s1Application?.internalStatus === 'S1_APPLICATION_REJECTED')\\\">\\r\\n  <h4>\\r\\n    <mat-icon>bookmark</mat-icon> &nbsp;Type of Medium\\r\\n  </h4>\\r\\n\\r\\n  <mat-radio-group class=\\\"col-md-12\\\" aria-label=\\\"Select an option\\\" [(ngModel)]=\\\"selectedTypeOfMedium\\\"\\r\\n    [disabled]=\\\"isAscUser && isDisableFieldOnUpdate\\\" name=\\\"applicationTypeOfMedium\\\"\\r\\n    [hidden]=\\\"isAscUser && isDisableFieldOnUpdate\\\">\\r\\n    <mat-radio-button value=\\\"SINGLE MEDIA\\\" (click)=\\\"getTypeOfMedium('SINGLE MEDIA'); emitSingleMediaChanges()\\\">\\r\\n      SINGLE MEDIA\\r\\n    </mat-radio-button>\\r\\n    &nbsp;&nbsp;\\r\\n    <mat-radio-button value=\\\"MULTIMEDIA\\\" (click)=\\\"getTypeOfMedium('MULTIMEDIA-MOVING'); emitMultimediaChanges()\\\">\\r\\n      MULTIMEDIA\\r\\n    </mat-radio-button>\\r\\n    <br><br>\\r\\n  </mat-radio-group>\\r\\n\\r\\n  <mat-form-field class=\\\"col-md-11\\\" appearance=\\\"outline\\\" *ngIf=\\\"isAscUser && isDisableFieldOnUpdate\\\">\\r\\n    <mat-label>Media Type</mat-label>\\r\\n    <input matInput [(ngModel)]=\\\"s1Application.refTypeOfMedium\\\" name=\\\"refTypeOfMedium\\\"\\r\\n      readonly=\\\"isAscUser && isDisableFieldOnUpdate\\\">\\r\\n  </mat-form-field>\\r\\n\\r\\n  <!-- SELCETED: SINGLE MEDIA -->\\r\\n  <mat-form-field class=\\\"col-md-11\\\" appearance=\\\"outline\\\" *ngIf=\\\"s1Application?.refTypeOfMedium=='SINGLE MEDIA'\\\">\\r\\n    <mat-label>Single Media <span class=\\\"required\\\">*</span></mat-label>\\r\\n    <mat-select [(ngModel)]=\\\"typeOfMedium\\\" name=\\\"typeOfMedium\\\" [compareWith]=\\\"compareSingleMedia\\\"\\r\\n      [disabled]=\\\"isAscUser && isDisableFieldOnUpdate\\\" (selectionChange)=\\\"setSingleMedia(typeOfMedium)\\\">\\r\\n      <mat-option *ngFor=\\\"let i of typeOfMediumList\\\" [value]=\\\"i\\\">\\r\\n        {{i.description}}\\r\\n      </mat-option>\\r\\n    </mat-select>\\r\\n  </mat-form-field>\\r\\n\\r\\n  <!-- <section class=\\\"example-section\\\" *ngIf=\\\"isDigitalStatic\\\">\\r\\n      <mat-checkbox class=\\\"example-margin\\\" [(ngModel)]=\\\"checked\\\" [checked]=\\\"isDigitalStatic\\\">With landing page\\r\\n      </mat-checkbox>\\r\\n    </section> -->\\r\\n\\r\\n  <br><br>\\r\\n\\r\\n  <div *ngIf=\\\"s1Application.refTypeOfMedium=='SINGLE MEDIA'\\\">\\r\\n    <mat-form-field class=\\\"col-md-4 media-info\\\" appearance=\\\"outline\\\"\\r\\n      *ngIf=\\\"typeOfMedium?.executionEnable === true || (applicationSingleMedia?.mediumExecution && typeOfMedium?.executionEnable === undefined)\\\">\\r\\n      <mat-label>Execution <span class=\\\"required\\\">*</span></mat-label>\\r\\n      <mat-select [(ngModel)]=\\\"applicationSingleMedia.mediumExecution\\\" name=\\\"mediumExecution\\\"\\r\\n        [compareWith]=\\\"compareMediumExecution\\\" [disabled]=\\\"isAscUser && isDisableFieldOnUpdate\\\"\\r\\n        (selectionChange)=\\\"emitSingleMediaChanges()\\\">\\r\\n        <mat-option *ngFor=\\\"let i of executionList\\\" [value]=\\\"i\\\">\\r\\n          {{i.typeOfExecution.typeOfExecution}}\\r\\n        </mat-option>\\r\\n      </mat-select>\\r\\n    </mat-form-field>\\r\\n\\r\\n    <mat-form-field class=\\\"col-md-4 media-info\\\" appearance=\\\"outline\\\"\\r\\n      *ngIf=\\\"typeOfMedium?.languageEnable==true||(applicationSingleMedia?.dialect!=null&&typeOfMedium?.languageEnable==undefined)\\\">\\r\\n      <mat-label>Language/Dialect</mat-label>\\r\\n      <mat-select [(ngModel)]=\\\"applicationSingleMedia.dialect\\\" name=\\\"dialect\\\" [compareWith]=\\\"compareDialect\\\"\\r\\n        [disabled]=\\\"isAscUser && isDisableFieldOnUpdate\\\">\\r\\n        <mat-option *ngFor=\\\"let i of dialectList\\\" [value]=\\\"i\\\">\\r\\n          {{i.dialect}}\\r\\n        </mat-option>\\r\\n      </mat-select>\\r\\n    </mat-form-field>\\r\\n\\r\\n    <mat-form-field class=\\\"col-md-4 media-info\\\" appearance=\\\"outline\\\"\\r\\n      *ngIf=\\\"typeOfMedium?.othersEnable==true||(applicationSingleMedia?.others&&typeOfMedium?.othersEnable==undefined)\\\">\\r\\n      <mat-label>Others</mat-label>\\r\\n      <input matInput [(ngModel)]=\\\"applicationSingleMedia.others\\\" name=\\\"others\\\"\\r\\n        [readonly]=\\\"isAscUser && isDisableFieldOnUpdate\\\">\\r\\n    </mat-form-field>\\r\\n\\r\\n\\r\\n    <!-- <mat-form-field class=\\\"col-md-3 media-info\\\" appearance=\\\"outline\\\"\\r\\n        *ngIf=\\\"typeOfMedium.sizeLengthEnable==true||(applicationSingleMedia.sizeLength&&typeOfMedium.sizeLengthEnable==undefined)\\\">\\r\\n        <mat-label>Size Length</mat-label>\\r\\n        <input matInput [(ngModel)]=\\\"applicationSingleMedia.sizeLength\\\" formControlName=\\\"sizeLength\\\"\\r\\n          [readonly]=\\\"isAscUser && isDisableFieldOnUpdate\\\">\\r\\n      </mat-form-field> -->\\r\\n    <mat-form-field class=\\\"col-md-3 media-info\\\" appearance=\\\"outline\\\"\\r\\n      *ngIf=\\\"typeOfMedium?.lengthEnable==true||typeOfMedium?.sizeLengthEnable==true||(applicationSingleMedia?.sizeLength&&typeOfMedium?.sizeLengthEnable==undefined)\\\">\\r\\n      <mat-label>Size Length (in seconds)</mat-label>\\r\\n      <input matInput [(ngModel)]=\\\"applicationSingleMedia.sizeLength\\\" name=\\\"sizeLength\\\"\\r\\n        (keydown)=\\\"isNumber($event)\\\" (keyup)=\\\"emitSingleMediaChanges()\\\"\\r\\n        [readonly]=\\\"(isAscUser && isDisableFieldOnUpdate) && (currentUser?.userRole?.name !== 'ROLE_ADMIN' && currentUser?.userRole?.name !== 'ROLE_SUPER_ADMIN')\\\"\\r\\n        (blur)=\\\"emitSingleMediaChanges()\\\" maxlength=\\\"4\\\">\\r\\n    </mat-form-field>\\r\\n\\r\\n    <mat-form-field class=\\\"col-md-4 media-info\\\" appearance=\\\"outline\\\"\\r\\n      *ngIf=\\\"typeOfMedium?.widthEnable==true||(applicationSingleMedia?.width&&typeOfMedium?.othersEnable==undefined)\\\">\\r\\n      <mat-label>Width</mat-label>\\r\\n      <input matInput [(ngModel)]=\\\"applicationSingleMedia.width\\\" name=\\\"width\\\"\\r\\n        [readonly]=\\\"isAscUser && isDisableFieldOnUpdate\\\">\\r\\n    </mat-form-field>\\r\\n  </div>\\r\\n\\r\\n  <!-- SELCETED: MULTIMEDIA -->\\r\\n  <div *ngIf=\\\"s1Application.refTypeOfMedium=='MULTIMEDIA-MOVING'||s1Application.refTypeOfMedium=='MULTIMEDIA-STATIC'\\\">\\r\\n    <mat-radio-group class=\\\"col-md-12\\\" aria-label=\\\"Select an option\\\" \\r\\n      [(ngModel)]=\\\"s1Application.refTypeOfMedium\\\"\\r\\n      name=\\\"refTypeOfMedium\\\" \\r\\n      [disabled]=\\\"isAscUser && isDisableFieldOnUpdate\\\" \\r\\n      (change)=\\\"getTypeOfMedium(s1Application.refTypeOfMedium); emitMultimediaChanges()\\\"\\r\\n    >\\r\\n      <mat-radio-button value=\\\"MULTIMEDIA-MOVING\\\" [checked]=\\\"s1Application.refTypeOfMedium=='MULTIMEDIA-MOVING'\\\"\\r\\n        [disabled]=\\\"isAscUser && isDisableFieldOnUpdate\\\">\\r\\n        MULTIMEDIA-MOVING\\r\\n      </mat-radio-button>\\r\\n      &nbsp;&nbsp;\\r\\n      <mat-radio-button value=\\\"MULTIMEDIA-STATIC\\\" [checked]=\\\"s1Application.refTypeOfMedium=='MULTIMEDIA-STATIC'\\\"\\r\\n        [disabled]=\\\"isAscUser && isDisableFieldOnUpdate\\\">\\r\\n        MULTIMEDIA-STATIC(MAX OF 5 LAYOUT)</mat-radio-button>\\r\\n    </mat-radio-group>\\r\\n\\r\\n    <span *ngIf=\\\"!isAscUser && !isDisableFieldOnUpdate\\\">\\r\\n      <br><br>\\r\\n    </span>\\r\\n\\r\\n    <div class=\\\"row\\\"\\r\\n      *ngIf=\\\"selectMultimedia||s1Application.refTypeOfMedium=='MULTIMEDIA-MOVING'||s1Application.refTypeOfMedium=='MULTIMEDIA-STATIC'\\\">\\r\\n      <div class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n        <!-- <span  *ngFor=\\\"let s of selectedMultimediaList;\\\">\\r\\n              <table *ngIf=\\\"i?.description==s.typeOfMedium?.description\\\">\\r\\n                <tr>\\r\\n                  <td>\\r\\n                    <mat-checkbox [checked]=\\\"true\\\"\\r\\n                      [disabled]=\\\"isAscUser && isDisableFieldOnUpdate\\\">\\r\\n                      {{i?.description}}{{i?.sizeLength}}</mat-checkbox>\\r\\n                  </td>\\r\\n                  <td>{{s?.multimediaSizeLength}}\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"i.sizeLength\\\" (blur)=\\\"addMultimedia(i)\\\" formControlName=\\\"sizeLength\\\"\\r\\n                      name=\\\"sizeLength\\\" maxlength=\\\"200\\\" placeholder=\\\"Size/Length\\\">\\r\\n                  </td>\\r\\n                </tr>\\r\\n              </table>\\r\\n          </span> -->\\r\\n        <table>\\r\\n          <!-- <tr *ngFor=\\\"let i of typeOfMediumList; let index = index\\\">\\r\\n              <td>\\r\\n                <mat-checkbox [checked]=\\\"selectedMultimediaStringList.includes(i?.description)\\\"\\r\\n                  [disabled]=\\\"isAscUser && isDisableFieldOnUpdate\\\">\\r\\n                  {{i?.description}}</mat-checkbox>\\r\\n              </td>\\r\\n              <td>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" [value]=\\\"i?.sizeLength ? i?.sizeLength : 0\\\" (blur)=\\\"emitMultimediaChanges()\\\" (keyup)=\\\"addMultimedia(i, $event); emitMultimediaChanges()\\\"\\r\\n                    name=\\\"sizeLength\\\" maxlength=\\\"4\\\" placeholder=\\\"Size/Length (in seconds)\\\" (keydown)=\\\"validateFieldService.numbersOnly($event)\\\"\\r\\n                    [readonly]=\\\"((isAscUser && isDisableFieldOnUpdate) && (currentUser?.userRole?.name !== 'ROLE_ADMIN' && currentUser?.userRole?.name !== 'ROLE_SUPER_ADMIN')) && (s1Application?.decisionStatus !== 'APPROVED' || s1Application?.decisionStatus !== 'APPROVED_WITH_CAUTION') \\\">\\r\\n              </td>\\r\\n            </tr> -->\\r\\n\\r\\n          <ng-container *ngIf=\\\"s1Application.refTypeOfMedium=='MULTIMEDIA-MOVING'\\\">\\r\\n            <tr *ngFor=\\\"let item of multimediaMovingDTO.applicationMultimediaMovingList; let i = index\\\"\\r\\n              style=\\\"height: 40px;\\\">\\r\\n              <td>\\r\\n                <mat-checkbox [(ngModel)]=\\\"item.hasSelected\\\" [disabled]=\\\"isAscUser && isDisableFieldOnUpdate\\\" (click)=\\\"emitMultimediaChanges()\\\">\\r\\n                  {{item.multimediaMovingMedium | uppercase}}\\r\\n                </mat-checkbox>\\r\\n              </td>\\r\\n              <td *ngIf=\\\"i === 0\\\">\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"sizeLength\\\" maxlength=\\\"4\\\"\\r\\n                  placeholder=\\\"Size/Length (in seconds)\\\" (keydown)=\\\"isNumber($event)\\\"\\r\\n                  (blur)=\\\"emitMultimediaChanges()\\\" (keyup)=\\\"emitMultimediaChanges()\\\"\\r\\n                  [(ngModel)]=\\\"multimediaMovingDTO.sizeLength\\\" [readonly]=\\\"\\r\\n                    ((isAscUser && isDisableFieldOnUpdate) && \\r\\n                    (currentUser?.userRole?.name !== 'ROLE_ADMIN' && currentUser?.userRole?.name !== 'ROLE_SUPER_ADMIN')) && \\r\\n                    (s1Application?.decisionStatus !== 'APPROVED' || s1Application?.decisionStatus !== 'APPROVED_WITH_CAUTION')\\r\\n                  \\\">\\r\\n              </td>\\r\\n            </tr>\\r\\n          </ng-container>\\r\\n          <ng-container *ngIf=\\\"s1Application.refTypeOfMedium=='MULTIMEDIA-STATIC'\\\">\\r\\n            <tr *ngFor=\\\"let item of multimediaStaticDTO.applicationMultimediaStaticList; let i = index\\\"\\r\\n              style=\\\"height: 40px;\\\">\\r\\n              <td>\\r\\n                <mat-checkbox [(ngModel)]=\\\"item.hasSelected\\\" [disabled]=\\\"isAscUser && isDisableFieldOnUpdate\\\">\\r\\n                  {{item.multimediaStaticMedium | uppercase}}\\r\\n                </mat-checkbox>\\r\\n              </td>\\r\\n              <td *ngIf=\\\"item.multimediaStaticMedium !== 'digital static'\\\">\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" [name]=\\\"item.multimediaStaticMedium\\\" maxlength=\\\"4\\\"\\r\\n                  placeholder=\\\"Size/Length (in seconds)\\\" (keydown)=\\\"isNumber($event)\\\"\\r\\n                  (blur)=\\\"emitMultimediaChanges()\\\" (keyup)=\\\"emitMultimediaChanges()\\\"\\r\\n                  [(ngModel)]=\\\"item.sizeLength\\\" [readonly]=\\\"\\r\\n                      ((isAscUser && isDisableFieldOnUpdate) && \\r\\n                      (currentUser?.userRole?.name !== 'ROLE_ADMIN' && currentUser?.userRole?.name !== 'ROLE_SUPER_ADMIN')) && \\r\\n                      (s1Application?.decisionStatus !== 'APPROVED' || s1Application?.decisionStatus !== 'APPROVED_WITH_CAUTION')\\r\\n                    \\\">\\r\\n              </td>\\r\\n            </tr>\\r\\n          </ng-container>\\r\\n        </table>\\r\\n      </div>\\r\\n\\r\\n      <!-- <div class=\\\"col-md-5\\\" *ngIf=\\\"s1Application.refTypeOfMedium=='MULTIMEDIA-MOVING'\\\">\\r\\n            <mat-form-field class=\\\"col-md-4\\\" appearance=\\\"outline\\\">\\r\\n              <mat-label>Length-{{mt}}++{{i.id}}</mat-label>\\r\\n              <input matInput [(ngModel)]=\\\"multimediaLength\\\" (change)=\\\"updateSizeLength(mt,multimediaLength)\\\"\\r\\n                formControlName=\\\"multimediaLength\\\" [readonly]=\\\"isAscUser\\\">\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <div class=\\\"col-md-5\\\" *ngIf=\\\"s1Application.refTypeOfMedium=='MULTIMEDIA-STATIC'\\\">\\r\\n            <mat-form-field class=\\\"col-md-4\\\" appearance=\\\"outline\\\">\\r\\n              <mat-label>Size</mat-label>\\r\\n              <input matInput [(ngModel)]=\\\"applicationMultimediaStatic.multimediaSize\\\"  (change)=\\\"updateSizeLength(i)\\\"\\r\\n               formControlName=\\\"multimediaSize\\\" [readonly]=\\\"isAscUser\\\">\\r\\n            </mat-form-field>\\r\\n          </div> -->\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\"><br></div>\\r\\n\\r\\n\\r\\n  </div>\\r\\n  <br><br>\\r\\n</div>\\r\\n<!-- END OF FOR S1 APPLICATION -->\\r\\n\\r\\n<!-- ATTACHMENT SECTION -->\\r\\n<!-- FOR S1 APPLICATION -->\\r\\n<span class=\\\"row fields\\\" *ngIf=\\\"(\\r\\n    !specialApplicationType.includes(s1Application?.applicationType?.description?.toUpperCase())\\r\\n    ||(specialApplicationType.includes(s1Application?.applicationType?.description?.toUpperCase()) && s1Application?.applicationRequest?.status == 'APPROVED')\\r\\n    ||(s1Application?.formType === 'MULTIPLE' && s1Application?.multipleApplication)\\r\\n    ) && s1Application?.formType !== 'MULTIPLE'||(s1Application?.formType === 'MULTIPLE' && s1Application?.multipleApplication) &&\\r\\n    applicationStage !== 'S2-APPLICATION'\\\">\\r\\n\\r\\n  <app-attachment-document [s1Application]=\\\"s1Application\\\" [labelMainDocument]=\\\"labelMainDocument\\\"\\r\\n    [isAscUser]=\\\"isAscUser\\\" [isDisableFieldOnUpdate]=\\\"isDisableFieldOnUpdate\\\"\\r\\n    [originalAttachmentDocuments]=\\\"originalAttachmentDocuments\\\"\\r\\n    [revisionAttachmentDocuments]=\\\"revisionAttachmentDocuments\\\"\\r\\n    [complianceAttachmentDocuments]=\\\"complianceAttachmentDocuments\\\" [applicationStage]=\\\"applicationStage\\\">\\r\\n  </app-attachment-document>\\r\\n\\r\\n  <!--  [showMainDocumentUploadButton]=\\\"showMainDocumentUploadButton\\\" [showMainDocumentViewButton]=\\\"showMainDocumentViewButton\\\" [safeURLMainDoc]=\\\"safeURLMainDoc\\\"\\r\\n     [showSupportDocumentFrame]=\\\"showSupportDocumentFrame\\\" [showSupportiveDocumentUploadButton]=\\\"showSupportiveDocumentUploadButton\\\" [showSupportiveDocumentViewButton]=\\\"showSupportiveDocumentViewButton\\\" [safeURLSupportDoc]=\\\"safeURLSupportDoc\\\"\\r\\n      [revisionLetterAttachment]=\\\"revisionLetterAttachment\\\" [showRevisionLetterUploadButton]=\\\"showRevisionLetterUploadButton\\\" [showRevisionLetterViewButton]=\\\"showRevisionLetterViewButton\\\" [safeURLRevisionLetter]=\\\"safeURLRevisionLetter\\\" -->\\r\\n\\r\\n\\r\\n  <!-- FOR S1 APPLICATION -->\\r\\n  <div class=\\\"row\\\">\\r\\n    <!-- <b *ngIf=\\\"currentUser?.userRole?.name=='ROLE_APPLICANT'\\\"><b class=\\\"material-icons\\\">error_outline</b> Attachments' total file size should not exceed 15MB.</b> -->\\r\\n\\r\\n    <!-- MAIN DOCUMENT -->\\r\\n    <!-- <div class=\\\"row\\\">\\r\\n        <h4>\\r\\n          <i class=\\\"material-icons\\\">bookmark</i> &nbsp;{{labelMainDocument}}\\r\\n        </h4>\\r\\n        <br>\\r\\n        <div class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n          <mat-label *ngIf=\\\"attachmentDocuments[0]?.originalFilename\\\">Filename: </mat-label>\\r\\n          <input #mainInput matInput [value]=\\\"attachmentDocuments[0]?.originalFilename\\\" disabled\\r\\n            *ngIf=\\\"attachmentDocuments[0]?.originalFilename\\\"><br>\\r\\n          <input #mainFile class=\\\"file-upload\\\" type=\\\"file\\\" accept=\\\".pdf\\\" (change)=\\\"selectFile($event, 'MAIN')\\\"\\r\\n            [hidden]=\\\"(isAscUser && isDisableFieldOnUpdate) || attachmentDocuments[0]?.originalFilename != null\\\"\\r\\n            *ngIf=\\\"attachmentDocuments?.length==0 || (attachmentDocuments?.length>=1 && attachmentDocuments[0]===null) || s1Application?.internalStatus=='SAVED'|| attachmentDocuments[0]?.originalFilename != null ||\\r\\n            ((s1Application?.internalStatus=='S1_APPLICATION_REVIEWED' || s1Application?.internalStatus=='COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER')\\r\\n              &&(s1Application?.decisionStatus=='INCOMPLETE'||s1Application?.decisionStatus=='APPROVED'||s1Application?.decisionStatus=='APPROVED W/ CAUTION'))\\\" />\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"row\\\"><br></div>\\r\\n        <div class=\\\"col-md-12\\\" appearance=\\\"outline\\\"\\r\\n          *ngIf=\\\"showMainDocumentUploadButton==true||attachmentDocuments?.length>0\\\">\\r\\n          <button mat-raised-button class=\\\"button-red button-right\\\" (click)=\\\"viewDocument('MAIN')\\\"\\r\\n            *ngIf=\\\"showMainDocumentViewButton||s1Application?.mainAttachmentReference\\\">\\r\\n            <i class=\\\"material-icons add-document\\\">open_in_new</i> VIEW DOCUMENT\\r\\n          </button>\\r\\n          &nbsp; &nbsp;\\r\\n          <button mat-raised-button class=\\\"button-red button-right\\\" (click)=\\\"deleteUploadedFile('MAIN')\\\"\\r\\n            [hidden]=\\\"!showMainDocumentViewButton&&!s1Application?.mainAttachmentReference||(currentUser?.userRole?.name!='ROLE_APPLICANT'&&currentUser?.userRole?.name!='ROLE_ENCODER')\\\"\\r\\n            *ngIf=\\\"showMainDocumentViewButton||s1Application?.mainAttachmentReference||(s1Application?.internalStatus=='SAVED'||\\r\\n            ((s1Application?.internalStatus=='S1_APPLICATION_REVIEWED' || s1Application?.internalStatus=='COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER')\\r\\n              &&(s1Application?.decisionStatus=='INCOMPLETE'||s1Application?.decisionStatus=='APPROVED'||s1Application?.decisionStatus=='APPROVED W/ CAUTION')))\\\">\\r\\n            <i class=\\\"material-icons add-document\\\">delete</i> DELETE ATTACHMENT\\r\\n          </button>\\r\\n          &nbsp; &nbsp;\\r\\n          <button mat-raised-button class=\\\"button-red button-right\\\" (click)=\\\"uploadDocument()\\\"\\r\\n            [disabled]=\\\"!safeURLMainDoc||!showMainDocumentUploadButton\\\" [hidden]=\\\"(isAscUser && isDisableFieldOnUpdate)\\\"\\r\\n            *ngIf=\\\"attachmentDocuments[0]?.originalFilename == null\\\">\\r\\n            <i class=\\\"material-icons add-document\\\">upload</i> UPLOAD\\r\\n          </button>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n          <hr>\\r\\n        </div>\\r\\n      </div> -->\\r\\n\\r\\n    <!-- SUPPORTING DOC -->\\r\\n    <!-- <div class=\\\"row\\\" *ngIf=\\\"showSupportDocumentFrame==true || originalAttachmentDocuments?.length>0 || revisionAttachmentDocuments?.length>0 || complianceAttachmentDocuments?.length>0\\\"> -->\\r\\n    <!-- <h4>\\r\\n          <i class=\\\"material-icons\\\">bookmark</i> &nbsp;SUPPORT DOCUMENTS\\r\\n        </h4>\\r\\n\\r\\n        <div class=\\\"col-md-12\\\" appearance=\\\"outline\\\"\\r\\n          [hidden]=\\\"(isAscUser && isDisableFieldOnUpdate)||attachmentDocuments[1]?.originalFilename||s1Application?.supportingAttachmentReference\\\"\\r\\n          *ngIf=\\\"(attachmentDocuments?.length<2||attachmentDocuments?.length!=2)\\\">\\r\\n\\r\\n          <mat-checkbox (click)=\\\"verifyNoDocumentAttached()\\\" [(ngModel)]=\\\"s1Application.hasNoSupportingDocs\\\"\\r\\n            (checked)=\\\"s1Application.hasNoSupportingDocs\\\" formControlName=\\\"hasNoSupportingDocs\\\"\\r\\n            *ngIf=\\\"currentUser.userRole.name=='ROLE_APPLICANT' || (currentUser.userRole.name=='ROLE_ENCODER' && s1Application?.internalStatus === undefined )\\\">\\r\\n            I certify that no supporting document is attached to this S1 application.</mat-checkbox>\\r\\n          <br>\\r\\n        </div>\\r\\n\\r\\n        <p *ngIf=\\\"(currentUser.userRole.name!='ROLE_APPLICANT'&&s1Application.hasNoSupportingDocs)\\r\\n        ||(currentUser.userRole.name=='ROLE_AD_SPECIALIST'&&s1Application.hasNoSupportingDocs)\\\">\\r\\n          Supporting Document was not submitted.\\r\\n        </p>\\r\\n        <div class=\\\"col-md-12\\\"><br></div> -->\\r\\n\\r\\n    <!-- <div *ngIf=\\\"!s1Application.hasNoSupportingDocs\\\">\\r\\n          <div class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n            <mat-label *ngIf=\\\"attachmentDocuments[1]?.originalFilename\\\">Filename: </mat-label>\\r\\n            <input matInput [value]=\\\"attachmentDocuments[1]?.originalFilename\\\" disabled\\r\\n              *ngIf=\\\"attachmentDocuments[1]?.originalFilename\\\"><br>\\r\\n\\r\\n            <input #supportiveFile class=\\\"file-upload\\\" type=\\\"file\\\" accept=\\\".pdf\\\"\\r\\n              (change)=\\\"selectFile($event, 'SUPPORTIVE')\\\"\\r\\n              [hidden]=\\\"(isAscUser && isDisableFieldOnUpdate) || attachmentDocuments[1]?.originalFilename\\\"\\r\\n              *ngIf=\\\"attachmentDocuments?.length<2|| (attachmentDocuments?.length>=2 && attachmentDocuments[1]===null) ||s1Application?.internalStatus=='SAVED'|| attachmentDocuments[1]?.originalFilename != null ||\\r\\n              ((s1Application?.internalStatus=='S1_APPLICATION_REVIEWED' || s1Application?.internalStatus=='COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER')\\r\\n               &&(s1Application?.decisionStatus=='INCOMPLETE'||s1Application?.decisionStatus=='APPROVED'||s1Application?.decisionStatus=='APPROVED W/ CAUTION'))\\\" />\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"row\\\"><br></div>\\r\\n          <div class=\\\"col-md-12\\\" appearance=\\\"outline\\\"\\r\\n            *ngIf=\\\"showSupportiveDocumentUploadButton==true||attachmentDocuments?.length>1\\\">\\r\\n            <button mat-raised-button class=\\\"button-red button-right\\\" (click)=\\\"viewDocument('SUPPORTIVE')\\\"\\r\\n              *ngIf=\\\"showSupportiveDocumentViewButton||s1Application?.supportingAttachmentReference\\\">\\r\\n              <i class=\\\"material-icons add-document\\\">open_in_new</i> VIEW DOCUMENT\\r\\n            </button>\\r\\n            &nbsp; &nbsp;\\r\\n            <button mat-raised-button class=\\\"button-red button-right\\\" (click)=\\\"deleteUploadedFile('SUPPORTIVE')\\\"\\r\\n              [hidden]=\\\"!showSupportiveDocumentViewButton&&!s1Application?.supportingAttachmentReference||(currentUser?.userRole?.name!='ROLE_APPLICANT'&&currentUser?.userRole?.name!='ROLE_ENCODER')\\\"\\r\\n              *ngIf=\\\"showSupportiveDocumentViewButton||s1Application?.supportingAttachmentReference||(s1Application?.internalStatus=='SAVED'||\\r\\n              ((s1Application?.internalStatus=='S1_APPLICATION_REVIEWED' || s1Application?.internalStatus=='COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER')\\r\\n                &&(s1Application?.decisionStatus=='INCOMPLETE'||s1Application?.decisionStatus=='APPROVED'||s1Application?.decisionStatus=='APPROVED W/ CAUTION')))\\\">\\r\\n              <i class=\\\"material-icons add-document\\\">delete</i> DELETE ATTACHMENT\\r\\n            </button>\\r\\n            &nbsp; &nbsp;\\r\\n            <button mat-raised-button class=\\\"button-red button-right\\\" (click)=\\\"uploadDocument()\\\"\\r\\n              [disabled]=\\\"!safeURLSupportDoc||!showSupportiveDocumentUploadButton\\\"\\r\\n              [hidden]=\\\"(isAscUser && isDisableFieldOnUpdate)\\\"\\r\\n              *ngIf=\\\"s1Application?.supportingAttachmentReference==null||showSupportiveDocumentUploadButton||attachmentDocuments[1]?.originalFilename === null\\\">\\r\\n              <i class=\\\"material-icons add-document\\\">upload</i> UPLOAD\\r\\n            </button>\\r\\n          </div>\\r\\n          <div class=\\\"row\\\"><br></div>\\r\\n          <br>\\r\\n        </div> -->\\r\\n\\r\\n    <!-- FOR ADSPE / SCREENER / REVIEWER -->\\r\\n    <!-- <div class=\\\"row fields\\\"> -->\\r\\n    <div class=\\\"col-md-12\\\" appearance=\\\"outline\\\" *ngIf=\\\"currentUser.userRole.name=='ROLE_AD_SPECIALIST'\\r\\n          && (s1Application?.internalStatus === 'S1_APPLICATION_VERIFIED_BY_ENCODER' || s1Application?.internalStatus == 'COMPLIANCE_DOCUMENT_VERIFIED_BY_ENCODER' || s1Application?.internalStatus === 'REVISION_VERIFIED_BY_ENCODER')\\r\\n          && s1Application.supportingAttachmentReference !== null\\\">\\r\\n      <!-- *ngIf=\\\"showSupportiveDocumentDownloadButton==true||attachmentDocuments?.length>1\\\" -->\\r\\n      <div class=\\\"row\\\"><br></div>\\r\\n      <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n        <mat-label>Type of Document</mat-label>\\r\\n        <mat-select [(ngModel)]=\\\"supportingDocument.typeOfDocument\\\" name=\\\"typeOfDocument\\\">\\r\\n          <mat-option *ngFor=\\\"let i of typeOfDocumentList\\\" [value]=\\\"i\\\" (click)=\\\"setTypeOfDocument(i)\\\">\\r\\n            {{i.description}}\\r\\n          </mat-option>\\r\\n        </mat-select>\\r\\n      </mat-form-field>\\r\\n\\r\\n      <mat-form-field class=\\\"col-md-6 hideIndex\\\" appearance=\\\"outline\\\" style=\\\"display: none;\\\">\\r\\n        <mat-label>index</mat-label>\\r\\n        <input matInput [value]=\\\"supportingDocumentIndex\\\">\\r\\n      </mat-form-field>\\r\\n\\r\\n      <mat-form-field class=\\\"col-md-6 document-form-margin\\\" appearance=\\\"outline\\\" *ngIf=\\\"typeOfDocument?.inputEnable\\\">\\r\\n        <input matInput [(ngModel)]=\\\"supportingDocument.input\\\" name=\\\"input\\\">\\r\\n      </mat-form-field>\\r\\n\\r\\n      <mat-form-field class=\\\"col-md-6 document-form-margin\\\" appearance=\\\"outline\\\" *ngIf=\\\"typeOfDocument?.variantEnable\\\">\\r\\n        <mat-label>Variant</mat-label>\\r\\n        <input matInput [(ngModel)]=\\\"supportingDocument.variant\\\" name=\\\"variant\\\">\\r\\n      </mat-form-field>\\r\\n\\r\\n      <mat-form-field class=\\\"col-md-6 document-form-margin\\\" appearance=\\\"outline\\\"\\r\\n        *ngIf=\\\"typeOfDocument?.expiresOnEnable\\\">\\r\\n        <mat-label>Expires on</mat-label>\\r\\n        <input matInput placeholder=\\\"Date\\\" [matDatepicker]=\\\"expiresOn\\\" readonly [min]=\\\"todayDate\\\"\\r\\n          [(ngModel)]=\\\"supportingDocument.expiresOn\\\" name=\\\"expiresOn\\\" [readonly]=\\\"true\\\">\\r\\n        <mat-datepicker-toggle matSuffix [for]=\\\"expiresOn\\\">\\r\\n          <mat-datepicker color=\\\"warn\\\" #expiresOn></mat-datepicker>\\r\\n        </mat-datepicker-toggle>\\r\\n      </mat-form-field>\\r\\n\\r\\n      <mat-form-field class=\\\"col-md-6 document-form-margin\\\" appearance=\\\"outline\\\" *ngIf=\\\"typeOfDocument?.basedOnEnable\\\">\\r\\n        <mat-label>Based on</mat-label>\\r\\n        <input matInput [(ngModel)]=\\\"supportingDocument.basedOn\\\" name=\\\"basedOn\\\" required>\\r\\n      </mat-form-field>\\r\\n\\r\\n      <mat-form-field class=\\\"col-md-6 document-form-margin\\\" appearance=\\\"outline\\\"\\r\\n        *ngIf=\\\"typeOfDocument?.dateOfLaunchEnable\\\">\\r\\n        <mat-label>Date of Launch</mat-label>\\r\\n        <input matInput placeholder=\\\"Date\\\" [matDatepicker]=\\\"dateOfLaunch\\\" readonly [min]=\\\"todayDate\\\"\\r\\n          [(ngModel)]=\\\"supportingDocument.dateOfLaunch\\\" name=\\\"dateOfLaunch\\\" [readonly]=\\\"true\\\">\\r\\n        <mat-datepicker-toggle matSuffix [for]=\\\"dateOfLaunch\\\">\\r\\n          <mat-datepicker color=\\\"warn\\\" #dateOfLaunch></mat-datepicker>\\r\\n        </mat-datepicker-toggle>\\r\\n        <!-- <input matInput [(ngModel)]=\\\"supportingDocument.dateOfLaunch\\\" formControlName=\\\"dateOfLaunch\\\" name=\\\"dateOfLaunch\\\"> -->\\r\\n      </mat-form-field>\\r\\n\\r\\n      <mat-form-field class=\\\"col-md-6 document-form-margin\\\" appearance=\\\"outline\\\" *ngIf=\\\"typeOfDocument?.remarksEnable\\\">\\r\\n        <mat-label>Remarks</mat-label>\\r\\n        <textarea matInput [(ngModel)]=\\\"supportingDocument.remarks\\\" name=\\\"remarks\\\"></textarea>\\r\\n      </mat-form-field>\\r\\n      <br>\\r\\n\\r\\n      <div class=\\\"col-md-12\\\" *ngIf=\\\"!isUpdate\\\">\\r\\n        <button mat-raised-button class=\\\"col-md-12 button-red\\\" [disabled]=\\\"supportingDocument.typeOfDocument === undefined ||\\r\\n              (typeOfDocument?.variantEnable && (supportingDocument.variant === undefined || supportingDocument.variant === '')) ||\\r\\n              (typeOfDocument?.expiresOnEnable && supportingDocument.expiresOn === undefined) ||\\r\\n              (typeOfDocument?.basedOnEnable && supportingDocument.basedOn === undefined) ||\\r\\n              (typeOfDocument?.dateOfLaunchEnable && supportingDocument.dateOfLaunch === undefined) ||\\r\\n              (typeOfDocument?.remarksEnable && supportingDocument.remarks === undefined)\\r\\n              \\\" (click)=\\\"addSupportiveDocument(supportingDocument)\\\">\\r\\n          <i class=\\\"material-icons add-document\\\">task_alt</i> ADD TO LIST\\r\\n        </button>\\r\\n      </div>\\r\\n      &nbsp;&nbsp;\\r\\n      <div class=\\\"col-md-12\\\" *ngIf=\\\"isUpdate\\\">\\r\\n        <button mat-raised-button class=\\\"col-md-12 button-red\\\"\\r\\n          (click)=\\\"modifyTypeOfDocument(supportingDocument,supportingDocumentIndex)\\\"\\r\\n          [disabled]=\\\"supportingDocument.typeOfDocument === undefined\\\">\\r\\n          <i class=\\\"material-icons add-document\\\">task_alt</i> Update\\r\\n        </button>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\"><br></div>\\r\\n      <hr>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <div class=\\\"col-md-12 mat-elevation-z8 fields\\\" appearance=\\\"outline\\\" *ngIf=\\\"supportiveDocumentList?.length>0\\\">\\r\\n        <table mat-table [dataSource]=\\\"dataSource||supportiveDocumentList\\\" matSort>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"id\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> TYPE OF DOCUMENT </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element; let i = index\\\"> {{i}} </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"typeOfDocument\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef> TYPE OF DOCUMENT </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{ element?.typeOfDocument?.description }} </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"input\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef> INPUT </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{ element?.input==undefined ? 'N/A' : element?.input }}\\r\\n            </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"variant\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef> VARIANT </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{ element?.variant==undefined ? 'N/A' : element?.variant }}\\r\\n            </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"expiresOn\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef> EXPIRES ON </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n              {{ element?.expiresOn==undefined ? 'N/A' : element?.expiresOn | date:'yyyy-MM-dd' }}\\r\\n            </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"basedOn\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef> BASED ON </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n              {{ element?.basedOn ==undefined ? 'N/A' : element?.basedOn | date:'yyyy-MM-dd' }}\\r\\n            </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"remarks\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef> REMARKS </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{ element?.remarks==undefined ? 'N/A' : element?.remarks }}\\r\\n            </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"action\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef> ACTIONS </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element;let i = index\\\">\\r\\n\\r\\n              <!-- <span class=\\\"a-icon\\\">\\r\\n                    <i class=\\\"material-icons\\\" style=\\\"color:blue\\\" (click)=\\\"getTypeOfDocument(element, i)\\\">edit</i>\\r\\n                  </span> -->\\r\\n              <span class=\\\"a-icon\\\" [hidden]=\\\"s1Application?.hasOngoingAppeal\\\"\\r\\n                *ngIf=\\\"(s1Application?.internalStatus === 'S1_APPLICATION_VERIFIED_BY_ENCODER' || s1Application?.internalStatus == 'COMPLIANCE_DOCUMENT_VERIFIED_BY_ENCODER' || s1Application?.internalStatus === 'REVISION_VERIFIED_BY_ENCODER')\\\">\\r\\n                <i class=\\\"material-icons\\\" (click)=\\\"removeTypeOfDocument(i)\\\">delete</i>\\r\\n              </span>\\r\\n\\r\\n              <!-- <button >\\r\\n                      <i class=\\\"material-icons\\\" style=\\\"color:blue\\\">edit</i>\\r\\n                    </button> -->\\r\\n              <!-- <button (click)=\\\"removeTypeOfDocument(i)\\\">\\r\\n                      <i class=\\\"material-icons\\\">delete</i>\\r\\n                    </button> -->\\r\\n            </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n          <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n        </table>\\r\\n        <div class=\\\"no-record\\\" [hidden]=\\\"dataSource && dataSource?.data?.length > 0\\\"\\r\\n          *ngIf=\\\"supportiveDocumentList?.length==0\\\">\\r\\n          No supporting document found.\\r\\n        </div>\\r\\n        <!-- <mat-paginator [pageSizeOptions]=\\\"[10, 20, 50]\\\" showFirstLastButtons></mat-paginator> -->\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <!-- </div> -->\\r\\n\\r\\n    <!-- FOR REVISION - REVISION LETTER -->\\r\\n    <!-- <div class=\\\"row\\\" *ngIf=\\\"(s1Application?.internalStatus==='S1_APPLICATION_REVIEWED'&&(s1Application?.decisionStatus=='APPROVED'||s1Application?.decisionStatus=='APPROVED W/ CAUTION'))\\r\\n      ||s1Application?.revisionLetterAttachmentReference\\\" [hidden]=\\\"s1Application?.appliedS2 && s1Application?.revisionLetterAttachmentReference === ''\\\">\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n          <hr>\\r\\n        </div>\\r\\n        <h4>\\r\\n          <i class=\\\"material-icons\\\">bookmark</i> &nbsp;REVISION LETTER\\r\\n        </h4>\\r\\n        <br>\\r\\n        <div class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n          <mat-label\\r\\n            *ngIf=\\\"revisionLetterAttachment?.originalFilename||attachmentDocuments[1]?.revisionLetterAttachmentReference\\\">\\r\\n            Filename: </mat-label>\\r\\n          <input matInput\\r\\n            [value]=\\\"revisionLetterAttachment?.originalFilename||attachmentDocuments[1]?.revisionLetterAttachmentReference||attachmentDocuments[2]?.revisionLetterAttachmentReference\\\"\\r\\n            disabled *ngIf=\\\"revisionLetterAttachment?.originalFilename\\\"><br>\\r\\n\\r\\n          <input #revisionLetterFile class=\\\"file-upload\\\" type=\\\"file\\\" accept=\\\".pdf\\\"\\r\\n            (change)=\\\"selectFile($event, 'REVISION_LETTER')\\\"\\r\\n            [hidden]=\\\"(isAscUser && isDisableFieldOnUpdate)||revisionLetterAttachment?.originalFilename\\\"\\r\\n            *ngIf=\\\"attachmentDocuments?.length==0||s1Application?.internalStatus=='SAVED'||\\r\\n            ((s1Application?.internalStatus=='S1_APPLICATION_REVIEWED' || s1Application?.internalStatus=='COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER')\\r\\n              &&(s1Application?.decisionStatus=='INCOMPLETE'||s1Application?.decisionStatus=='APPROVED'||s1Application?.decisionStatus=='APPROVED W/ CAUTION'))\\\" />\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"row\\\"><br></div>\\r\\n        <div class=\\\"col-md-12\\\" appearance=\\\"outline\\\"\\r\\n          *ngIf=\\\"showRevisionLetterUploadButton==true||attachmentDocuments?.length>1||s1Application?.revisionLetterAttachmentReference\\\">\\r\\n          <button mat-raised-button class=\\\"button-red button-right\\\" (click)=\\\"viewDocument('REVISION_LETTER')\\\"\\r\\n            *ngIf=\\\"showRevisionLetterViewButton==true||s1Application?.revisionLetterAttachmentReference\\\">\\r\\n            <i class=\\\"material-icons add-document\\\">open_in_new</i> VIEW DOCUMENT\\r\\n          </button>\\r\\n          &nbsp; &nbsp;\\r\\n          <button mat-raised-button class=\\\"button-red button-right\\\" (click)=\\\"deleteUploadedFile('REVISION_LETTER')\\\"\\r\\n            [hidden]=\\\"!showRevisionLetterViewButton&&!s1Application?.revisionLetterAttachmentReference||(currentUser?.userRole?.name!='ROLE_APPLICANT'&&currentUser?.userRole?.name!='ROLE_ENCODER')\\\"\\r\\n            *ngIf=\\\"showRevisionLetterViewButton||s1Application?.revisionLetterAttachmentReference||(s1Application?.internalStatus=='SAVED'||\\r\\n            ((s1Application?.internalStatus=='S1_APPLICATION_REVIEWED' || s1Application?.internalStatus=='COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER')\\r\\n              &&(s1Application?.decisionStatus=='INCOMPLETE'||s1Application?.decisionStatus=='APPROVED'||s1Application?.decisionStatus=='APPROVED W/ CAUTION')))\\\">\\r\\n            <i class=\\\"material-icons add-document\\\">delete</i> DELETE ATTACHMENT\\r\\n          </button>\\r\\n          &nbsp; &nbsp;\\r\\n          <button mat-raised-button class=\\\"button-red button-right\\\" (click)=\\\"uploadDocument()\\\"\\r\\n            [disabled]=\\\"!safeURLRevisionLetter||!showRevisionLetterUploadButton\\\"\\r\\n            [hidden]=\\\"(isAscUser && isDisableFieldOnUpdate)\\\" *ngIf=\\\"showRevisionLetterUploadButton\\\">\\r\\n            <i class=\\\"material-icons add-document\\\">upload</i> UPLOAD\\r\\n          </button>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\"><br></div>\\r\\n        <br>\\r\\n        <br>\\r\\n      </div> -->\\r\\n  </div>\\r\\n</span>\\r\\n\\r\\n\\r\\n<!--  //////////////////////////////////////// S2 APPLCIATION ///////////////////////////////////////////////////////////// -->\\r\\n\\r\\n<!-- FOR S2 APPLICATION -->\\r\\n<div class=\\\"row fields\\\" *ngIf=\\\"applicationStage === 'S2-APPLICATION'\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <!-- FOR S1 APPLICATION -->\\r\\n    <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n      <mat-label>Ad Title</mat-label>\\r\\n      <input matInput [value]=\\\"s1Application.adTitle\\\" name=\\\"adTitle\\\"\\r\\n        [readonly]=\\\"isAscUser && isDisableFieldOnUpdate || applicationStage === 'S2-APPLICATION'\\\">\\r\\n    </mat-form-field>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\"\\r\\n      *ngIf=\\\"s1Application?.formType !== 'MULTIPLE'||(s1Application?.formType === 'MULTIPLE' && s1Application.multipleApplication)\\\">\\r\\n      <mat-label>Reference Code of Previously-Approved Material</mat-label>\\r\\n      <input matInput [value]=\\\"s1Application.previousRefCode\\\" name=\\\"previousRefCode\\\"\\r\\n        [readonly]=\\\"isAscUser && isDisableFieldOnUpdate || applicationStage === 'S2-APPLICATION'\\\">\\r\\n    </mat-form-field>\\r\\n\\r\\n    <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\">\\r\\n      <mat-label>Tag Line</mat-label>\\r\\n      <input matInput [value]=\\\"s1Application.tagLine\\\" name=\\\"tagLine\\\"\\r\\n        [readonly]=\\\"isAscUser && isDisableFieldOnUpdate || applicationStage === 'S2-APPLICATION'\\\">\\r\\n    </mat-form-field>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<!-- FOR S2 APPLICATION -->\\r\\n<div class=\\\"row fields\\\" *ngIf=\\\"applicationStage === 'S2-APPLICATION'\\\">\\r\\n  <h4>\\r\\n    <mat-icon>bookmark</mat-icon> &nbsp;TYPE OF MEDIUM\\r\\n  </h4>\\r\\n\\r\\n  <mat-radio-group class=\\\"col-md-12\\\" aria-label=\\\"Select an option\\\" [value]=\\\"s1Application.refTypeOfMedium\\\"\\r\\n    [disabled]=\\\"true\\\">\\r\\n    <mat-radio-button value=\\\"SINGLE MEDIA\\\" [checked]=\\\"s2Application?.applicationForm?.refTypeOfMedium=='SINGLE MEDIA'\\\">\\r\\n      SINGLE MEDIA\\r\\n    </mat-radio-button>\\r\\n    &nbsp;&nbsp;\\r\\n    <mat-radio-button value=\\\"MULTIMEDIA\\\"\\r\\n      [checked]=\\\"selectMultimedia||s1Application.refTypeOfMedium=='MULTIMEDIA'||s1Application.refTypeOfMedium=='MULTIMEDIA-STATIC'||s1Application.refTypeOfMedium=='MULTIMEDIA-MOVING'\\\">\\r\\n      MULTIMEDIA</mat-radio-button>\\r\\n    <br><br>\\r\\n  </mat-radio-group>\\r\\n  <mat-form-field class=\\\"col-md-11\\\" appearance=\\\"outline\\\" *ngIf=\\\"s1Application.refTypeOfMedium=='SINGLE MEDIA'\\\">\\r\\n    <mat-label>Single Media <span class=\\\"required\\\">*</span></mat-label>\\r\\n    <input matInput name=\\\"singleMedia\\\" [value]=\\\"applicationSingleMedia?.mediumExecution?.typeOfMedium?.description\\\"\\r\\n      [readonly]=\\\"true\\\">\\r\\n  </mat-form-field>\\r\\n\\r\\n  <div *ngIf=\\\"s1Application.refTypeOfMedium=='SINGLE MEDIA'\\\">\\r\\n    <mat-form-field class=\\\"col-md-4 media-info\\\" appearance=\\\"outline\\\"\\r\\n      *ngIf=\\\"typeOfMedium?.executionEnable==true || applicationSingleMedia?.mediumExecution || applicationSingleMedia?.mediumExecution?.typeOfExecution?.typeOfExecution === 'NO EXECUTION'\\\">\\r\\n      <mat-label>Execution <span class=\\\"required\\\">*</span></mat-label>\\r\\n      <input matInput name=\\\"execution\\\"\\r\\n        [value]=\\\"applicationSingleMedia?.mediumExecution?.typeOfExecution?.typeOfExecution\\\" [readonly]=\\\"true\\\">\\r\\n    </mat-form-field>\\r\\n\\r\\n    <mat-form-field class=\\\"col-md-4 media-info\\\" appearance=\\\"outline\\\"\\r\\n      *ngIf=\\\"typeOfMedium?.languageEnable==true||applicationSingleMedia?.dialect\\\">\\r\\n      <mat-label>Language/Dialect</mat-label>\\r\\n      <input matInput name=\\\"language\\\" [value]=\\\"applicationSingleMedia?.dialect?.dialect\\\"\\r\\n        [readonly]=\\\"isAscUser && isDisableFieldOnUpdate\\\">\\r\\n    </mat-form-field>\\r\\n\\r\\n    <mat-form-field class=\\\"col-md-4 media-info\\\" appearance=\\\"outline\\\"\\r\\n      *ngIf=\\\"typeOfMedium?.othersEnable==true||applicationSingleMedia?.others\\\">\\r\\n      <mat-label>Others</mat-label>\\r\\n      <input matInput name=\\\"others\\\" [value]=\\\"applicationSingleMedia?.others\\\"\\r\\n        [readonly]=\\\"isAscUser && isDisableFieldOnUpdate\\\">\\r\\n    </mat-form-field>\\r\\n\\r\\n    <mat-form-field class=\\\"col-md-3 media-info\\\" appearance=\\\"outline\\\"\\r\\n      *ngIf=\\\"typeOfMedium?.sizeLengthEnable==true||typeOfMedium?.lengthEnable==true||applicationSingleMedia?.sizeLength\\\">\\r\\n      <mat-label>Size Length (in seconds)</mat-label>\\r\\n      <input matInput name=\\\"sizeLength\\\"\\r\\n        [value]=\\\"applicationSingleMedia?.sizeLength ? applicationSingleMedia?.sizeLength : 0\\\" [readonly]=\\\"true\\\">\\r\\n    </mat-form-field>\\r\\n\\r\\n    <mat-form-field class=\\\"col-md-4 media-info\\\" appearance=\\\"outline\\\"\\r\\n      *ngIf=\\\"typeOfMedium?.widthEnable==true||applicationSingleMedia?.width\\\">\\r\\n      <mat-label>Width</mat-label>\\r\\n      <input matInput name=\\\"width\\\" [value]=\\\"applicationSingleMedia?.width ? applicationSingleMedia?.width : 0\\\"\\r\\n        [readonly]=\\\"isAscUser && isDisableFieldOnUpdate\\\">\\r\\n    </mat-form-field>\\r\\n  </div>\\r\\n\\r\\n  <div\\r\\n    *ngIf=\\\"selectMultimedia==true||s1Application.refTypeOfMedium=='MULTIMEDIA-MOVING'||s1Application.refTypeOfMedium=='MULTIMEDIA-STATIC'\\\">\\r\\n    <mat-radio-group class=\\\"col-md-12\\\" aria-label=\\\"Select an option\\\" [value]=\\\"s1Application.refTypeOfMedium\\\"\\r\\n      [disabled]=\\\"true\\\">\\r\\n      <mat-radio-button value=\\\"MULTIMEDIA-MOVING\\\" [checked]=\\\"s1Application.refTypeOfMedium=='MULTIMEDIA-MOVING'\\\">\\r\\n        MULTIMEDIA-MOVING\\r\\n      </mat-radio-button>\\r\\n      &nbsp;&nbsp;\\r\\n      <mat-radio-button value=\\\"MULTIMEDIA-STATIC\\\" [checked]=\\\"s1Application.refTypeOfMedium=='MULTIMEDIA-STATIC'\\\">\\r\\n        MULTIMEDIA-STATIC(MAX OF 5 LAYOUT)</mat-radio-button>\\r\\n    </mat-radio-group>\\r\\n\\r\\n    <br><br>\\r\\n    <div class=\\\"row\\\"\\r\\n      *ngIf=\\\"s1Application?.refTypeOfMedium=='MULTIMEDIA-MOVING'||s1Application?.refTypeOfMedium=='MULTIMEDIA-STATIC'||s1Application?.refTypeOfMedium=='MULTIMEDIA'\\\">\\r\\n      <!-- *ngIf=\\\"multimediaStaticList?.length==0&&multimediaMovingList?.length==0\\\"> -->\\r\\n      <div class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n        <span *ngFor=\\\"let i of typeOfMediumList; let mt = index\\\">\\r\\n          <table>\\r\\n            <tr>\\r\\n              <td>\\r\\n                <!-- <mat-checkbox [checked]=\\\"selectedMultimediaList.includes(i?.description)\\\"\\r\\n                    [disabled]=\\\"true\\\">\\r\\n                    {{i?.description}}</mat-checkbox> -->\\r\\n                <mat-checkbox [checked]=\\\"selectedMultimediaStringList.includes(i?.description)\\\" [disabled]=\\\"true\\\">\\r\\n                  {{i?.description}}\\r\\n                </mat-checkbox>\\r\\n              </td>\\r\\n              <td>\\r\\n                <!--  -->\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" [value]=\\\"i.sizeLength ? i.sizeLength : 0\\\" name=\\\"sizeLength\\\"\\r\\n                  maxlength=\\\"4\\\" placeholder=\\\"Size/Length (in seconds)\\\"\\r\\n                  *ngIf=\\\"s1Application?.id==undefined&&(s1Application?.refTypeOfMedium=='MULTIMEDIA-STATIC'|| s1Application?.refTypeOfMedium=='MULTIMEDIA-MOVING')\\\">\\r\\n\\r\\n                <!-- static -->\\r\\n                <!-- <input type=\\\"text\\\" class=\\\"form-control\\\" [value]=\\\" i.multimediaSize ? i.multimediaSize : '' \\\"\\r\\n                    name=\\\"sizeLength\\\" maxlength=\\\"200\\\" placeholder=\\\"Size\\\"\\r\\n                    *ngIf=\\\"s1Application?.id!=undefined&&s1Application?.refTypeOfMedium=='MULTIMEDIA-STATIC'\\\"\\r\\n                    [disabled]=\\\"true\\\"> -->\\r\\n\\r\\n                <!-- moving -->\\r\\n                <!-- <input type=\\\"text\\\" class=\\\"form-control\\\" [value]=\\\" i.multimediaLength ? i.multimediaLength : '' \\\"\\r\\n                    name=\\\"sizeLength\\\" maxlength=\\\"200\\\" placeholder=\\\"Length\\\"\\r\\n                    *ngIf=\\\"s1Application?.id!=undefined&&s1Application?.refTypeOfMedium=='MULTIMEDIA-MOVING'\\\"\\r\\n                    [disabled]=\\\"true\\\"> -->\\r\\n\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" [value]=\\\"i.sizeLength ? i.sizeLength : 0\\\"\\r\\n                  *ngIf=\\\"s1Application?.id!==undefined && (s1Application?.refTypeOfMedium === 'MULTIMEDIA-STATIC' || s1Application?.refTypeOfMedium === 'MULTIMEDIA-MOVING') \\\"\\r\\n                  name=\\\"sizeLength\\\" maxlength=\\\"4\\\" placeholder=\\\"Size/Length (in seconds)\\\" [disabled]=\\\"true\\\">\\r\\n              </td>\\r\\n            </tr>\\r\\n          </table><br>\\r\\n        </span>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\"><br></div>\\r\\n\\r\\n\\r\\n  </div>\\r\\n  <br><br>\\r\\n</div>\\r\\n\\r\\n<!-- FOR S2 APPLICATION  MAIN DOC-->\\r\\n<div *ngIf=\\\"applicationStage === 'S2-APPLICATION'\\\">\\r\\n  <span class=\\\"row fields\\\">\\r\\n\\r\\n    <app-attachment-document [originalAttachmentDocuments]=\\\"originalAttachmentDocuments\\\"\\r\\n      [revisionAttachmentDocuments]=\\\"revisionAttachmentDocuments\\\"\\r\\n      [complianceAttachmentDocuments]=\\\"complianceAttachmentDocuments\\\" [s1Application]=\\\"s1Application\\\"\\r\\n      [labelMainDocument]=\\\"labelMainDocument\\\" [isAscUser]=\\\"isAscUser\\\" [isDisableFieldOnUpdate]=\\\"isDisableFieldOnUpdate\\\"\\r\\n      [applicationStage]=\\\"applicationStage\\\"></app-attachment-document>\\r\\n\\r\\n    <!-- [showMainDocumentUploadButton]=\\\"showMainDocumentUploadButton\\\" [showMainDocumentViewButton]=\\\"showMainDocumentViewButton\\\" [safeURLMainDoc]=\\\"safeURLMainDoc\\\"\\r\\n      [showSupportDocumentFrame]=\\\"showSupportDocumentFrame\\\" [showSupportiveDocumentUploadButton]=\\\"showSupportiveDocumentUploadButton\\\" [showSupportiveDocumentViewButton]=\\\"showSupportiveDocumentViewButton\\\" [safeURLSupportDoc]=\\\"safeURLSupportDoc\\\"\\r\\n      [revisionLetterAttachment]=\\\"revisionLetterAttachment\\\" [showRevisionLetterUploadButton]=\\\"showRevisionLetterUploadButton\\\" [showRevisionLetterViewButton]=\\\"showRevisionLetterViewButton\\\" [safeURLRevisionLetter]=\\\"safeURLRevisionLetter\\\" -->\\r\\n  </span>\\r\\n</div>\\r\\n\\r\\n<!-- </form> -->\";","import { Component, Inject, Input, OnDestroy, OnInit, Optional, ViewChild } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTable, MatTableDataSource } from '@angular/material/table';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { Router } from '@angular/router';\r\nimport { AttachmentDocument, Payment, S1Application } from '@models';\r\nimport { ApiService, DataStorageService, SweetAlertService } from '@services';\r\nimport { ATTACHMENT_TYPE, ENDPOINTS, ERROR_MESSAGES, PAYMENT_STATUS, SUBMISSION_TYPE, USER_ROLES } from '@shared';\r\nimport { ApplicationSingleMedia } from 'app/core/models/application-single-media.model';\r\nimport { MultipleApplication } from 'app/core/models/multiple-application.model';\r\nimport { FileStorageService } from 'app/core/services/file.storage.service';\r\nimport Swal from 'sweetalert2';\r\n\r\nexport interface companyDetails {\r\n  referenceCode: string;\r\n  amount: number;\r\n}\r\n\r\nconst ELEMENT_DATA: companyDetails[] = [\r\n  { referenceCode: 'Company one ', amount: 3000, },\r\n  { referenceCode: 'Company two ', amount: 4000, },\r\n  { referenceCode: 'Company three ', amount: 5000, },\r\n  { referenceCode: 'Company two ', amount: 6000, },\r\n  { referenceCode: 'Company three ', amount: 7000, },\r\n];\r\n\r\n@Component({\r\n  selector: 'app-modal-multiple-applications',\r\n  templateUrl: './modal-multiple-applications.component.html',\r\n  styleUrls: ['./modal-multiple-applications.component.scss']\r\n})\r\nexport class ModalMultipleApplicationsComponent implements OnInit, OnDestroy {\r\n\r\n  @ViewChild(MatPaginator, { static: false }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: false }) sort: MatSort;\r\n  @ViewChild(MatTable, { static: false }) table: MatTable<ModalMultipleApplicationsComponent>;\r\n  dataSource: MatTableDataSource<any>\r\n  displayedColumns: string[] = ['referenceCode', 'adTitle', 'mediumAndLength', 'amount'];\r\n  multipleApplicationList = [];\r\n\r\n  @Input() s1Application = new S1Application();\r\n  payment = new Payment();\r\n  safeURLProofOfPayment: any;\r\n  selectedFiles: any;\r\n  previewDocument = false;\r\n  attachmentDocument = new AttachmentDocument();\r\n  applicationSingleMedia = new ApplicationSingleMedia();\r\n  currentUser: any;\r\n  attachmentDocuments = [];\r\n  isSubmitted = false;\r\n  paymentTypeList = [];\r\n  paymentType: any;\r\n  attachment: any;\r\n  multipleApplication = new MultipleApplication();\r\n  totalAmount: any;\r\n  paymentDetails: any;\r\n  isDisabled = false;\r\n  typeOfMediumDisplay = '';\r\n\r\n  constructor(\r\n    private sanitizer: DomSanitizer,\r\n    private apiService: ApiService,\r\n    public dataStorage: DataStorageService,\r\n    private fileStorageService: FileStorageService,\r\n    private sweetAlertService: SweetAlertService,\r\n    private router: Router,\r\n    @Optional() public dialogRef: MatDialogRef<ModalMultipleApplicationsComponent>,\r\n    @Optional() @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {\r\n    if (data) {\r\n      this.multipleApplication = data;\r\n      if (this.multipleApplication.paymentStatus !== PAYMENT_STATUS.FOR_PAYMENT) {\r\n        this.isDisabled = true;\r\n      }\r\n      this.getPaymentDetails();\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getMultipleApplicationList();\r\n    this.getPaymentList();\r\n  }\r\n\r\n  getPaymentDetails() {\r\n    this.apiService.findAll(ENDPOINTS.multiplePaymentDetails + this.multipleApplication.id).subscribe((res: any) => {\r\n      this.paymentDetails = res;\r\n    });\r\n  }\r\n\r\n\r\n  getMultipleApplicationList() {\r\n    this.apiService.findAll(ENDPOINTS.getMultipleAppFormsWithNoRejected + this.multipleApplication.id).subscribe((res: any) => {\r\n      this.multipleApplicationList = res.responseData.data;\r\n      console.log(this.multipleApplicationList);\r\n      // this.totalAmount = this.multipleApplicationList.map(mapped => mapped.amount).reduce((previousValue, currentValue) =>\r\n      //   previousValue + currentValue,\r\n      //   0);\r\n\r\n      this.multipleApplicationList.forEach((multipleApplication) => {\r\n        switch (multipleApplication?.refTypeOfMedium || multipleApplication?.applicationFormS2?.applicationForm?.refTypeOfMedium) {\r\n          case 'SINGLE MEDIA':\r\n            this.getApplicationSingleMedia(multipleApplication?.appFormReference);\r\n            break;\r\n          case 'MULTIMEDIA-MOVING':\r\n            this.getMultimediaMoving(multipleApplication?.appFormReference);\r\n            break;\r\n          case 'MULTIMEDIA-STATIC':\r\n            this.getMultimediaStatic(multipleApplication?.appFormReference);\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      });\r\n\r\n\r\n      this.dataSource = new MatTableDataSource<any>(this.multipleApplicationList);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n\r\n    }, (err: any) => {\r\n      err.error.message = ERROR_MESSAGES.under_maintenance;\r\n      this.sweetAlertService.error(err);\r\n    });\r\n  }\r\n\r\n  getPaymentList() {\r\n    this.apiService.findAll(ENDPOINTS.paymentType).subscribe((res: any) => {\r\n      const currentUser = this.dataStorage.getUserAccount();\r\n      if (currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT) {\r\n        const creditCardIndex = this.paymentTypeList\r\n          .findIndex((element) => element.paymentDescription === 'Credit Card');\r\n        this.paymentTypeList.splice(creditCardIndex, 1);\r\n      }\r\n      this.paymentTypeList = res.responseData.data;\r\n    });\r\n  }\r\n\r\n  selectFile(event) {\r\n    const attachmentSize = event.target.files[0].size;\r\n\r\n    if (event.target.files[0].type === 'application/pdf') {\r\n      if (attachmentSize > 15000000) { // 1MB = 1M\r\n        this.sweetAlertService.customErrorMessage(`Attachments' total file size should not exceed 15MB.`);\r\n        event.target.value = '';\r\n        return;\r\n      } else {\r\n        const pdfURL = URL.createObjectURL(event.target.files[0]);\r\n        this.safeURLProofOfPayment = this.sanitizer.bypassSecurityTrustResourceUrl(pdfURL);\r\n        this.previewDocument = true;\r\n\r\n        // env.showSpinner = true;\r\n        const reader = new FileReader();\r\n        const [file] = event.target.files;\r\n\r\n        reader.readAsDataURL(file);\r\n        reader.onload = () => {\r\n        };\r\n      }\r\n\r\n      this.selectedFiles = event.target.files;\r\n    } else {\r\n      this.sweetAlertService.customErrorMessage('Attachment should be in PDF format only.');\r\n      event.target.value = '';\r\n      return;\r\n    }\r\n  }\r\n\r\n  uploadDocument(multipleApplication) {\r\n    Swal.fire({\r\n      text: 'Are you sure you want to submit this PROOF OF PAYMENT?',\r\n      icon: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Confirm'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.dataStorage.setDisplayProgressbar(true);\r\n        let params = '';\r\n        params = '?&attachmentType=' + ATTACHMENT_TYPE.PAYMENT + '&submissionType=' + SUBMISSION_TYPE.ORIGINAL;\r\n        this.fileStorageService.pushFileToStorage(ENDPOINTS.attachmentDocument, this.selectedFiles.item(0), params)\r\n          .subscribe(res => {\r\n            const obj = res.responseData.data;\r\n            console.log(obj);\r\n            this.s1Application.paymentAttachmentReference = obj.paymentAttachmentReference;\r\n            this.payment.paymentAttachmentReference = obj.paymentAttachmentReference;\r\n            this.payment.amountDue = this.totalAmount;\r\n            this.payment.multipleApplication = multipleApplication;\r\n            this.payment.filename = obj.filename;\r\n            this.saveProofOfPayment();\r\n            this.selectedFiles = undefined;\r\n          }, (err: any) => {\r\n            this.sweetAlertService.error(err);\r\n          }, () => {\r\n            // actions after subscription\r\n            this.dataStorage.setDisplayProgressbar(false);\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  saveProofOfPayment() {\r\n    console.log('Saving payment...');\r\n    this.dataStorage.setDisplayProgressbar(true);\r\n    this.payment.paymentStatus = PAYMENT_STATUS.FOR_APPROVAL;\r\n    this.payment.id = 0;\r\n    this.payment.officialReceiptNo = '';\r\n    this.payment.paymentMethod = null;\r\n    this.payment.amountDue = this.multipleApplication.totalAmount;\r\n    console.log('PAYMENT : ', this.payment);\r\n    console.log(this.paymentType.id);\r\n\r\n\r\n    this.apiService.save(`${ENDPOINTS.applicationFormPresentor}payment-type-id/${this.paymentType.id}/payment-multiple/submit`, this.payment)\r\n      .subscribe((res: any) => {\r\n        console.log('SAVED STATUS: ', res.responseData.data);\r\n\r\n        this.safeURLProofOfPayment = this.sanitizer.bypassSecurityTrustResourceUrl(res.responseData.data.fileURL);\r\n        this.isSubmitted = true;\r\n        this.sweetAlertService.customSuccessMessage('Proof of payment successfully submitted.');\r\n        this.closeModal();\r\n      }, (err) => {\r\n        console.log(err);\r\n        this.sweetAlertService.error(err);\r\n        this.dataStorage.setDisplayProgressbar(false);\r\n      }, () => {\r\n        this.dataStorage.setDisplayProgressbar(false);\r\n      });\r\n  }\r\n\r\n  closeModal(): void {\r\n    this.dialogRef.close();\r\n    this.router.navigate(['asc/page/application/multiple-applications']);\r\n  }\r\n  ngOnDestroy(): void {\r\n    // this.s1Application = null;\r\n  }\r\n\r\n  getApplicationSingleMedia(appFormReference = this.payment?.applicationForm?.appFormReference) {\r\n    if (this.payment?.applicationFormS2?.applicationForm?.refTypeOfMedium) {\r\n      appFormReference = this.payment?.applicationFormS2?.applicationForm?.appFormReference;\r\n    }\r\n    this.apiService.findByParam(ENDPOINTS.applicationSingleMedia,\r\n      `app-form-reference/${appFormReference}`).subscribe(\r\n        (res: any) => {\r\n          if (res.responseData.data.length > 0) {\r\n            this.applicationSingleMedia = res.responseData.data[0];\r\n\r\n            this.typeOfMediumDisplay = `${this.applicationSingleMedia?.mediumExecution?.typeOfMedium?.description} (${this.applicationSingleMedia?.sizeLength})`;\r\n            console.log('view applicationSingleMedia: ', this.typeOfMediumDisplay);\r\n\r\n            this.multipleApplicationList.forEach((element, index) => {\r\n              if (element.appFormReference === appFormReference) {\r\n                this.multipleApplicationList[index] = {\r\n                  ...this.multipleApplicationList[index],\r\n                  typeOfMediumDisplay: this.typeOfMediumDisplay\r\n                };\r\n              }\r\n            });\r\n            this.dataSource = new MatTableDataSource<any>(this.multipleApplicationList);\r\n            this.dataSource.paginator = this.paginator;\r\n\r\n          } else {\r\n            this.applicationSingleMedia = new ApplicationSingleMedia();\r\n            this.typeOfMediumDisplay = '';\r\n          }\r\n        }, (err: any) => {\r\n          this.applicationSingleMedia = new ApplicationSingleMedia();\r\n          this.typeOfMediumDisplay = '';\r\n        });\r\n  }\r\n\r\n  getMultimediaStatic(appFormReference = this.payment?.applicationForm?.appFormReference) {\r\n    this.apiService.findByParam(ENDPOINTS.applicationMultimedia,\r\n      `app-form-reference/${appFormReference}`).subscribe(\r\n        (res: any) => {\r\n          if (res.responseData.data.length > 0) {\r\n            const multimediaList = new Set(res.responseData.data.map(mappedList => `${mappedList?.typeOfMedium?.description} (${mappedList?.multimediaSizeLength})`));\r\n\r\n            this.typeOfMediumDisplay = '';\r\n            let mediaCtrl = 1;\r\n            for (const media of multimediaList) {\r\n              if (mediaCtrl !== multimediaList.size) {\r\n                this.typeOfMediumDisplay += `${media}, `;\r\n                mediaCtrl++;\r\n              } else {\r\n                this.typeOfMediumDisplay += media;\r\n              }\r\n            }\r\n\r\n            this.multipleApplicationList.forEach((element, index) => {\r\n              console.log(element);\r\n              if (element.appFormReference === appFormReference) {\r\n                this.multipleApplicationList[index] = {\r\n                  ...this.multipleApplicationList[index],\r\n                  typeOfMediumDisplay: this.typeOfMediumDisplay\r\n                };\r\n              }\r\n            });\r\n            this.dataSource = new MatTableDataSource<any>(this.multipleApplicationList);\r\n            this.dataSource.paginator = this.paginator;\r\n\r\n          } else {\r\n            this.typeOfMediumDisplay = '';\r\n          }\r\n        }, (err: any) => {\r\n          this.typeOfMediumDisplay = '';\r\n        });\r\n  }\r\n\r\n  getMultimediaMoving(appFormReference = this.payment?.applicationForm?.appFormReference) {\r\n    this.apiService.findByParam(ENDPOINTS.applicationMultimedia,\r\n      `app-form-reference/${appFormReference}`).subscribe(\r\n        (res: any) => {\r\n          if (res.responseData.data.length > 0) {\r\n            const multimediaList = new Set(res.responseData.data.map(mappedList => `${mappedList?.typeOfMedium?.description} (${mappedList?.multimediaSizeLength})`));\r\n\r\n            this.typeOfMediumDisplay = '';\r\n            let mediaCtrl = 1;\r\n            for (const media of multimediaList) {\r\n              if (mediaCtrl !== multimediaList.size) {\r\n                this.typeOfMediumDisplay += `${media}, `;\r\n                mediaCtrl++;\r\n              } else {\r\n                this.typeOfMediumDisplay += media;\r\n              }\r\n            }\r\n\r\n            this.multipleApplicationList.forEach((element, index) => {\r\n              console.log(element);\r\n              if (element.appFormReference === appFormReference) {\r\n                this.multipleApplicationList[index] = {\r\n                  ...this.multipleApplicationList[index],\r\n                  typeOfMediumDisplay: this.typeOfMediumDisplay\r\n                };\r\n              }\r\n            });\r\n            this.dataSource = new MatTableDataSource<any>(this.multipleApplicationList);\r\n            this.dataSource.paginator = this.paginator;\r\n\r\n          } else {\r\n            this.typeOfMediumDisplay = '';\r\n          }\r\n        }, (err: any) => {\r\n          this.typeOfMediumDisplay = '';\r\n        });\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcGFnZXMvYXBwbGljYXRpb25zL3JlYXNzaWdubWVudC9yZWFzc2lnbm1lbnQuY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { FormListComponent } from '@fragments';\r\nimport { S1Application, S2Application } from '@models';\r\nimport { ApiService, SweetAlertService } from '@services';\r\nimport { ENDPOINTS, USER_ROLES } from '@shared';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\n\r\n@Component({\r\n  selector: 'app-reassignment',\r\n  templateUrl: './reassignment.component.html',\r\n  styleUrls: ['./reassignment.component.scss']\r\n})\r\nexport class ReassignmentComponent implements OnInit {\r\n  @ViewChild(FormListComponent) formListComponent: FormListComponent;\r\n\r\n  // ojects\r\n  s1Application = new S1Application();\r\n  s2Application = new S2Application();\r\n\r\n  // lists\r\n  userList = [];\r\n\r\n  // for displayed list\r\n  // s1\r\n  s1ApplicationList = [];\r\n  s1ApplicationDataSource: MatTableDataSource<S1Application>;\r\n  s1ApplicationDisplayedColumns = [\r\n    'referenceCode',\r\n    'adTitle',\r\n    'applicationOwner',\r\n    'assignedEncoder',\r\n    'assignedAdSpecialist',\r\n    'assignedScreener',\r\n    'assignedReviewer',\r\n    'assignedUser',\r\n  ];\r\n\r\n  // s2\r\n  // TODO update when endpoint is available\r\n  s2ApplicationList = [];\r\n  s2ApplicationDataSource: MatTableDataSource<S2Application>;\r\n  s2ApplicationDisplayedColumns = [\r\n    'referenceCode',\r\n    'adTitle',\r\n    'applicationOwner',\r\n    'assignedEncoder',\r\n    'assignedAdSpecialist',\r\n    // 'assignedScreener',\r\n    // 'assignedReviewer',\r\n    'assignedUser',\r\n  ];\r\n\r\n  // form\r\n  s1ApplicationForm: FormGroup;\r\n\r\n  // others\r\n  applicationOwnerName = '';\r\n  displayedContent = 'S1';\r\n\r\n  constructor(\r\n    private apiService: ApiService,\r\n    private formBuilder: FormBuilder,\r\n    private sweetAlertService: SweetAlertService,\r\n    private spinner: NgxSpinnerService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.getS1ApplicationList();\r\n    this.setFormValidator();\r\n    this.getUserList();\r\n  }\r\n\r\n  getS1ApplicationList(applicationType = 'S1'): void {\r\n    this.spinner.show();\r\n    if (applicationType === 'S1') {\r\n      this.apiService.findAll(ENDPOINTS.admin).subscribe((res: any) => {\r\n        this.s1ApplicationList = res.responseData.data;\r\n        this.s1ApplicationList = this.s1ApplicationList.filter(filteredS1List => !filteredS1List.appliedS2);\r\n\r\n        this.s1ApplicationDataSource = new MatTableDataSource<S1Application>(this.s1ApplicationList);\r\n        this.s1ApplicationDataSource.paginator = this.formListComponent.paginator;\r\n        this.s1ApplicationDataSource.sort = this.formListComponent.sort;\r\n      }, (err) => {\r\n        console.error(err);\r\n        this.spinner.hide();\r\n      }, () => {\r\n        this.spinner.hide();\r\n      });\r\n    } else if (applicationType === 'S2') {\r\n      this.apiService.findAll(ENDPOINTS.s2Application).subscribe((res: any) => {\r\n        this.s2ApplicationList = res.responseData.data;\r\n\r\n        this.s2ApplicationDataSource = new MatTableDataSource<S2Application>(this.s2ApplicationList);\r\n        this.s2ApplicationDataSource.paginator = this.formListComponent.paginator;\r\n        this.s2ApplicationDataSource.sort = this.formListComponent.sort;\r\n      }, (err) => {\r\n        console.error(err);\r\n        this.spinner.hide();\r\n      }, () => {\r\n        this.spinner.hide();\r\n      });\r\n    }\r\n  }\r\n\r\n  getS1Application(): void {\r\n    this.apiService.findById(ENDPOINTS.applicationForm, this.formListComponent.idForUpdate).subscribe((res: any) => {\r\n      if (res) {\r\n        this.s1Application = res.responseData.data;\r\n        this.applicationOwnerName = this.s1Application.applicationOwner\r\n          ? this.s1Application.applicationOwner.lastName + ', ' + this.s1Application.applicationOwner.firstName\r\n          : '';\r\n        if (this.s1Application.assignedUser) {\r\n          this.getUserList(this.s1Application.assignedUser.userRole.name);\r\n        } else {\r\n          this.getUserList('N/A');\r\n        }\r\n\r\n      }\r\n    });\r\n  }\r\n\r\n  getS2Application(): void {\r\n    this.apiService.findById(ENDPOINTS.applicationFormS2, this.formListComponent.idForUpdate).subscribe((res: any) => {\r\n      if (res) {\r\n\r\n        this.s2Application = res.responseData.data;\r\n        if (this.s2Application.applicationForm) {\r\n          this.applicationOwnerName = this.s2Application.applicationForm.applicationOwner\r\n            ? this.s2Application.applicationForm.applicationOwner.lastName + ', '\r\n            + this.s2Application.applicationForm.applicationOwner.firstName\r\n            : '';\r\n        }\r\n        if (this.s2Application.assignedUser) {\r\n          this.getUserList(this.s2Application.assignedUser.userRole.name);\r\n        } else {\r\n          this.getUserList('N/A');\r\n        }\r\n\r\n      }\r\n    });\r\n  }\r\n\r\n  update(): void {\r\n    this.spinner.show();\r\n\r\n    let endpoint = '';\r\n    let currentObj: any;\r\n    if (this.displayedContent === 'S1') {\r\n      endpoint = ENDPOINTS.applicationReassignment\r\n      currentObj = this.s1Application;\r\n    } else if (this.displayedContent === 'S2') {\r\n      endpoint = ENDPOINTS.s2ApplicationReassignment;\r\n      // endpoint = ENDPOINTS.applicationFormS2;\r\n      if (this.s2Application.actionStatus === 'ASSIGN_TO_ENCODER') {\r\n        this.s2Application.assignedEncoder = this.s2Application.assignedUser;\r\n      } else if (this.s2Application.actionStatus === 'ASSIGN_TO_ADSPE') {\r\n        this.s2Application.assignedAdSpecialist = this.s2Application.assignedUser;\r\n      }\r\n\r\n      currentObj = this.s2Application;\r\n    }\r\n\r\n    this.apiService.save(endpoint, currentObj).subscribe(\r\n      (res: any) => {\r\n        if (res) {\r\n          this.spinner.hide();\r\n          this.sweetAlertService.success(res);\r\n        }\r\n      }, (err: any) => {\r\n        this.spinner.hide();\r\n        this.sweetAlertService.error(err);\r\n      }, () => {\r\n        // actions after subscription\r\n        this.spinner.hide();\r\n        this.getUserList();\r\n        this.resetFormValidator();\r\n        if (this.displayedContent === 'S1') {\r\n          this.getS1ApplicationList();\r\n        } else if (this.displayedContent === 'S2') {\r\n          this.getS1ApplicationList('S2');\r\n        }\r\n      });\r\n  }\r\n\r\n  setFormValidator(): void {\r\n    this.s1ApplicationForm = this.formBuilder.group({\r\n      referenceCode: [''],\r\n      adTitle: [''],\r\n      applicationOwner: [''],\r\n      assignedAdSpecialist: [''],\r\n      assignedEncoder: [''],\r\n      assignedReviewer: [''],\r\n      assignedScreener: [''],\r\n      assignedUser: [''],\r\n    });\r\n  }\r\n\r\n  resetFormValidator(): void {\r\n    this.s1Application = new S1Application();\r\n    this.s2Application = new S2Application();\r\n    this.s1ApplicationForm.markAsUntouched();\r\n    this.s1ApplicationForm.markAsPristine();\r\n  }\r\n\r\n\r\n  getUserList(userRole = '') {\r\n    this.apiService.findAll(ENDPOINTS.userAccount).subscribe(\r\n      (res: any) => {\r\n        this.userList = res.responseData.data;\r\n        this.userList = this.userList.filter(\r\n          filteredUsers => filteredUsers?.userRole?.name !== USER_ROLES.ROLE_APPLICANT);\r\n        if (userRole) {\r\n          this.userList = this.userList.filter(\r\n            filteredUsers => filteredUsers?.userRole?.name === userRole);\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  compareAssignedUser(value: any, selected: any): boolean {\r\n    if (value && selected) {\r\n      return value.id === selected.id;\r\n    }\r\n  }\r\n\r\n  changeTab(evt) {\r\n    if (evt.tab) {\r\n      this.displayedContent = evt.tab.textLabel;\r\n    }\r\n\r\n    if (evt.index === 0) {\r\n      this.getS1ApplicationList();\r\n    } else if (evt.index === 1) {\r\n      this.getS1ApplicationList('S2');\r\n    }\r\n  }\r\n\r\n}\r\n","import { CustomAngularEditorModule } from './editor/lib/angular-editor.module';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { ApplicationsRoutingModule } from './applications-routing.module';\r\nimport { AngularMaterialModule } from '@shared';\r\nimport { CommentComponent } from './comment/comment.component';\r\nimport { ClientInformationComponent, MaterialInformationComponent, PreviewApplicationComponent } from '@applications';\r\nimport { UploadPaymentComponent } from '../accounting/upload-payment/upload-payment.component';\r\nimport { AddPaymentModule } from '@accounting';\r\nimport { SingleApplicationComponent } from './schedule-of-fees/single-application/single-application.component';\r\nimport { MultipleApplicationsComponent } from './schedule-of-fees/multiple-applications/multiple-applications.component';\r\nimport { ReassignmentModule } from './reassignment/reassignment.module';\r\nimport { PerformanceMetricsComponent } from './performance-metrics/performance-metrics.component';\r\nimport { SpecialApplicationsComponent } from './schedule-of-fees/special-applications/special-applications.component';\r\nimport { AttachmentDocumentComponent } from './attachment-document/attachment-document.component';\r\nimport { PreviewAttachmentsComponent } from './preview-attachments/preview-attachments.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    PreviewApplicationComponent,\r\n    ClientInformationComponent,\r\n    MaterialInformationComponent,\r\n    CommentComponent,\r\n    UploadPaymentComponent,\r\n    SingleApplicationComponent,\r\n    MultipleApplicationsComponent,\r\n    PerformanceMetricsComponent,\r\n    SpecialApplicationsComponent,\r\n    AttachmentDocumentComponent,\r\n    PreviewAttachmentsComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ApplicationsRoutingModule,\r\n    AngularMaterialModule,\r\n    AddPaymentModule,\r\n    ReassignmentModule,\r\n    CustomAngularEditorModule\r\n  ],\r\n  exports: [\r\n    PreviewApplicationComponent,\r\n    ClientInformationComponent,\r\n    MaterialInformationComponent,\r\n    CommentComponent,\r\n    UploadPaymentComponent,\r\n    PerformanceMetricsComponent,\r\n    AttachmentDocumentComponent,\r\n    PreviewAttachmentsComponent,\r\n  ]\r\n})\r\nexport class ApplicationsModule { }\r\n","export default \"/* Accordion */\\n.action-buttons {\\n  padding-bottom: 20px;\\n  float: right;\\n}\\n.headers-align .mat-expansion-panel-header-title,\\n.headers-align .mat-expansion-panel-header-description {\\n  flex-basis: 0;\\n  font-size: 1.25em;\\n  align-items: center;\\n}\\n.headers-align .mat-expansion-panel-header-description {\\n  justify-content: space-between;\\n  align-items: center;\\n}\\n.headers-align .mat-form-field + .mat-form-field {\\n  margin-left: 8px;\\n}\\n.tooltip .tooltiptext {\\n  width: 120px;\\n  bottom: 100%;\\n  left: 50%;\\n  margin-left: -60px;\\n  /* Use half of the width (120/2 = 60), to center the tooltip */\\n}\\n.mat-expansion-panel-header {\\n  border: 1px solid #bfbfbf;\\n}\\ninput[type=file] {\\n  display: none;\\n}\\n.custom-file-upload {\\n  border: 1px solid #ccc;\\n  display: inline-block;\\n  padding: 6px 12px;\\n  cursor: pointer;\\n}\\n.mat-expansion-panel-header.mat-expanded:hover,\\n.mat-expansion-panel-header {\\n  background: #bad9ff;\\n}\\n.mat-expansion-panel .mat-expansion-panel-header.cdk-keyboard-focused:not([aria-disabled=true]),\\n.mat-expansion-panel .mat-expansion-panel-header.cdk-program-focused:not([aria-disabled=true]),\\n.mat-expansion-panel:not(.mat-expanded) .mat-expansion-panel-header:hover:not([aria-disabled=true]) {\\n  background: #cfe5ff;\\n}\\n.field-value {\\n  color: gray;\\n  font-weight: 600;\\n}\\ntable tr td {\\n  padding: 10px 16px;\\n  border-radius: 7px;\\n  font: 500 14px/20px Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  width: 31%;\\n}\\ntable tr td:nth-child(odd) {\\n  background-color: #ff5252;\\n  color: white;\\n  border: 1px solid white;\\n}\\ntable tr td:nth-child(even) {\\n  color: #ff5252;\\n  border: 1px solid #0000001f;\\n}\\n.no-border {\\n  background-color: transparent !important;\\n  border: 0px !important;\\n  padding: 0px !important;\\n  width: 5px;\\n  height: 5px !important;\\n}\\nmat-action-row p {\\n  color: red;\\n  margin: auto;\\n  font-weight: 400;\\n}\\nmat-action-row p i {\\n  color: red;\\n}\\nmat-action-row p .badge {\\n  width: auto;\\n  padding: 5px 20px;\\n  text-decoration: none;\\n}\\n.submission-date,\\n.warning-msg {\\n  color: #c5140c !important;\\n}\\n.text-right {\\n  text-align: right;\\n}\\n.info-msg {\\n  color: black;\\n}\\n.demo-inline-calendar-card {\\n  width: 300px;\\n  margin: 0 auto 2em auto;\\n}\\n.swal2-container.swal2-center > .swal2-popup {\\n  z-index: 9999 !important;\\n}\\n.rationale {\\n  border: solid gray 2px;\\n  border-radius: 5px;\\n  padding: 10px;\\n  background-color: #eee1e1;\\n}\\n.rationale label {\\n  font-size: 15px;\\n  font-weight: 600;\\n  color: #ac0000;\\n  margin-bottom: 10px;\\n}\\n.rationale .rationale-list {\\n  background-color: #f1eaea;\\n  border: solid gray 1px;\\n  height: auto;\\n  max-height: 15em;\\n  padding: 10px;\\n  margin-bottom: 5px;\\n  max-height: none;\\n}\\n.rationale .rationale-list label {\\n  font-size: 10px;\\n}\\n.rationale .rationale-list p {\\n  font-size: 10px;\\n  font-weight: 600;\\n  line-height: 10px;\\n}\\n.rationale .rationale-list p span {\\n  font-size: 7px;\\n  color: #ac0000;\\n  margin: auto;\\n}\\n.rationale .rational-other-comment {\\n  background-color: #f1eaea;\\n  border: solid gray 1px;\\n  height: auto;\\n  padding: 10px;\\n}\\n.rationale .rational-other-comment label {\\n  font-size: 10px;\\n}\\n.rationale .rational-other-comment p {\\n  font-size: 10px;\\n  font-weight: 600;\\n  line-height: 2px;\\n}\\n.rationale .rational-other-comment p span {\\n  font-size: 7px;\\n  color: #ac0000;\\n  margin: auto;\\n}\\n.badge {\\n  text-align: center;\\n  font-size: 12px;\\n  padding: 5px 20px;\\n  text-decoration: none;\\n  width: auto;\\n  cursor: context-menu;\\n}\\n.material-icons.error {\\n  margin-left: 10px;\\n  color: #c5140c;\\n}\\n.required-fields-note {\\n  font-style: italic;\\n  color: #c5140c;\\n  font-weight: 500;\\n}\\n/*# sourceMappingURL=data:application/json;base64, */\";","export default \".pdf-border {\\n  width: 100%;\\n  height: 300px;\\n  border: 2px solid gray;\\n}\\n\\n.add-document {\\n  color: white;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9wYWdlcy9hcHBsaWNhdGlvbnMvcHJldmlldy1hcHBsaWNhdGlvbi9wcmV2aWV3LWFwcGxpY2F0aW9uLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksV0FBQTtFQUFXLGFBQUE7RUFBYSxzQkFBQTtBQUc1Qjs7QUFBQTtFQUNFLFlBQUE7QUFHRiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcGFnZXMvYXBwbGljYXRpb25zL3ByZXZpZXctYXBwbGljYXRpb24vcHJldmlldy1hcHBsaWNhdGlvbi5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5wZGYtYm9yZGVyIHtcclxuICAgIHdpZHRoOjEwMCU7aGVpZ2h0OjMwMHB4O2JvcmRlcjoycHggc29saWQgZ3JheTtcclxufVxyXG5cclxuLmFkZC1kb2N1bWVudCB7XHJcbiAgY29sb3I6IHdoaXRlO1xyXG59XHJcbiJdfQ== */\";","import { DatePipe } from \"@angular/common\";\r\nimport { Component, Inject, OnInit, Optional, ViewChild } from \"@angular/core\";\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { Router } from \"@angular/router\";\r\nimport { Company, S1Application } from \"@models\";\r\nimport { ApiService, DataStorageService, SweetAlertService } from \"@services\";\r\nimport {\r\n  APPFORM_TYPE,\r\n  ENDPOINTS,\r\n  ERROR_MESSAGES,\r\n  FORM_TYPE,\r\n  ROLES,\r\n  USER_ROLES,\r\n} from \"@shared\";\r\nimport { ApplicationSingleMedia } from \"app/core/models/application-single-media.model\";\r\nimport { MultipleApplication } from \"app/core/models/multiple-application.model\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport Swal from \"sweetalert2\";\r\n\r\n@Component({\r\n  selector: \"app-update-multiple-application\",\r\n  templateUrl: \"./update-multiple-application.component.html\",\r\n  styleUrls: [\"./update-multiple-application.component.scss\"],\r\n})\r\nexport class UpdateMultipleApplicationComponent implements OnInit {\r\n  @ViewChild(MatPaginator, { static: false }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: false }) sort: MatSort;\r\n\r\n  company = new Company();\r\n  s1Application = new S1Application();\r\n  multipleS1Application = new MultipleApplication();\r\n  applicationSingleMedia = new ApplicationSingleMedia();\r\n  multipleS1ApplicationList = [];\r\n  dataSource: MatTableDataSource<S1Application>;\r\n  displayedColumns: string[] = [\r\n    \"referenceCode\",\r\n    \"typeOfMediumDisplay\",\r\n    \"mainAttachmentReference\",\r\n    \"supportingAttachmentReference\",\r\n    \"brand\",\r\n    \"status\",\r\n    \"decisionStatus\",\r\n  ];\r\n\r\n  currentUser: any;\r\n  currentUserRole: any;\r\n\r\n  isAscUser = false;\r\n  isDisableFieldOnUpdate = true;\r\n  isDisabledSubmitButton = true;\r\n  canForwardMultipleApp = false;\r\n  isAllApplicationsHasMainDoc = false;\r\n  warningNote =\r\n    \"Note: To submit multiple application, please make sure that every application has complete details and has necessary attachments.\";\r\n  typeOfMediumDisplay = \"\";\r\n\r\n  formType = APPFORM_TYPE.MULTIPLE;\r\n\r\n  ascUserRoleList = [\r\n    ...ROLES.filter((role: any) => role.ascUser === true).map(\r\n      (role: any) => role.role\r\n    ),\r\n  ];\r\n\r\n  constructor(\r\n    private apiService: ApiService,\r\n    private sweetAlertService: SweetAlertService,\r\n    private dataStorage: DataStorageService,\r\n    private router: Router,\r\n    private spinner: NgxSpinnerService,\r\n    private datepipe: DatePipe,\r\n    @Optional()\r\n    public dialogRef: MatDialogRef<UpdateMultipleApplicationComponent>,\r\n    @Optional() @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {\r\n    if (data) {\r\n      this.multipleS1Application = data;\r\n      this.s1Application.formType = this.formType;\r\n\r\n      // Client Info\r\n      this.s1Application.company = this.multipleS1Application.company;\r\n      this.company = this.multipleS1Application.company;\r\n      // this.s1Application.membersAffiliation = this.multipleS1Application.membersAffiliation;\r\n      this.s1Application.brand = this.multipleS1Application.brand;\r\n      this.s1Application.product = this.multipleS1Application.product;\r\n      // this.s1Application.category = this.multipleS1Application.category;\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.currentUser = this.dataStorage.getUserAccount();\r\n    this.currentUserRole = this.currentUser.userRole.name;\r\n    this.isAscUser = this.ascUserRoleList.includes(\r\n      this.dataStorage.getUserRole()\r\n    );\r\n    this.getS1FormsByMultipleApplication();\r\n    if (this.currentUserRole !== USER_ROLES.ROLE_APPLICANT) {\r\n      this.displayedColumns = [\r\n        \"referenceCode\",\r\n        \"typeOfMediumDisplay\",\r\n        \"mainAttachmentReference\",\r\n        \"supportingAttachmentReference\",\r\n        \"brand\",\r\n        \"status\",\r\n        \"ASCstatus\",\r\n        \"decisionStatus\",\r\n      ];\r\n    }\r\n  }\r\n\r\n  getS1FormsByMultipleApplication() {\r\n    let endpoint = \"\";\r\n    if (\r\n      this.currentUserRole === USER_ROLES.ROLE_APPLICANT ||\r\n      this.currentUserRole === USER_ROLES.ROLE_ADMIN ||\r\n      this.currentUserRole === USER_ROLES.ROLE_SUPER_ADMIN\r\n    ) {\r\n      endpoint = ENDPOINTS.getMultipleAppForms + this.multipleS1Application.id;\r\n    } else {\r\n      endpoint =\r\n        ENDPOINTS.getMultipleAppFormsWithNoRejected +\r\n        this.multipleS1Application.id;\r\n    }\r\n    // this.apiService.findAll(ENDPOINTS.applicationFormPresentor + `multiple-application/${this.multipleS1Application.id}/applications`)\r\n    this.apiService.findAll(endpoint).subscribe(\r\n      (res: any) => {\r\n        this.multipleS1ApplicationList = res.responseData.data;\r\n\r\n        this.isAllApplicationsHasMainDoc = this.multipleS1ApplicationList.filter(\r\n          (filteredList) => !filteredList.mainAttachmentReference\r\n        ).length\r\n          ? false\r\n          : true;\r\n\r\n        this.multipleS1ApplicationList.forEach((value, index) => {\r\n          this.s1Application = value;\r\n          this.multipleS1ApplicationList[index] = value;\r\n          switch (\r\n            value?.refTypeOfMedium ||\r\n            value?.applicationFormS2?.applicationForm?.refTypeOfMedium\r\n          ) {\r\n            case \"SINGLE MEDIA\":\r\n              this.getApplicationSingleMedia();\r\n              break;\r\n            case \"MULTIMEDIA-MOVING\":\r\n              this.getMultimediaMoving();\r\n              break;\r\n            case \"MULTIMEDIA-STATIC\":\r\n              this.getMultimediaStatic();\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n        });\r\n\r\n        this.dataSource = new MatTableDataSource<S1Application>(\r\n          this.multipleS1ApplicationList\r\n        );\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n\r\n        // will be disabled if there's an application without main doc uploaded\r\n        this.isDisabledSubmitButton = this.multipleS1ApplicationList.filter(\r\n          (filteredList) => !filteredList.mainAttachmentReference\r\n        ).length\r\n          ? true\r\n          : false;\r\n\r\n        this.isDisabledSubmitButton = this.multipleS1ApplicationList.filter(\r\n          (filteredList) =>\r\n            !filteredList.supportingAttachmentReference &&\r\n            !filteredList.hasNoSupportingDocs\r\n        ).length\r\n          ? true\r\n          : false;\r\n\r\n        // if earlier or later than the approved date\r\n\r\n        const today = this.datepipe.transform(new Date(), \"yyyy-MM-dd\");\r\n        const approvedDate = this.datepipe.transform(\r\n          this.multipleS1Application.dateOfSubmission,\r\n          \"yyyy-MM-dd\"\r\n        );\r\n\r\n        if (\r\n          this.multipleS1Application.submissionStatus !== \"PROCESSED\" &&\r\n          approvedDate !== today &&\r\n          this.multipleS1Application.status !== \"DISAPPROVED\"\r\n        ) {\r\n          this.isDisabledSubmitButton = true;\r\n          this.warningNote =\r\n            \"Note: Applicant can only submit multiple application on approved date.\";\r\n        }\r\n\r\n        this.checkForwardStatus();\r\n      },\r\n      (err: any) => {\r\n        err.error.message = ERROR_MESSAGES.under_maintenance;\r\n        this.sweetAlertService.error(err);\r\n      }\r\n    );\r\n  }\r\n\r\n  checkForwardStatus() {\r\n    if (\r\n      this.multipleS1Application.countVerifiedApplicationForm ===\r\n      this.multipleS1Application.actualNumberOfApplicationForm\r\n    ) {\r\n      this.canForwardMultipleApp = true;\r\n    }\r\n  }\r\n\r\n  viewApplication(data) {\r\n    this.dialogRef.close();\r\n    this.router.navigate([`asc/page/application/s1/update/${data.id}`]);\r\n  }\r\n\r\n  onApproveOrDisapprove(status = \"APPROVED\"): void {\r\n    const displayStatus = status === \"APPROVED\" ? \"approve\" : \"disapprove\";\r\n    Swal.fire({\r\n      text: `Are you sure you want to ${displayStatus} this application?`,\r\n      icon: \"question\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Confirm\",\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        const endpointExtension =\r\n          status === \"APPROVED\" ? \"/approve\" : \"/disapprove\";\r\n        this.multipleS1Application.actionDate = new Date();\r\n        this.multipleS1Application.actionBy = this.currentUser.username;\r\n        this.apiService\r\n          .update(\r\n            `${ENDPOINTS.multipleApplication}${endpointExtension}`,\r\n            this.multipleS1Application\r\n          )\r\n          .subscribe(\r\n            (res: any) => {\r\n              this.sweetAlertService.customSuccessMessage(\r\n                \"Multiple application submission request has been \" +\r\n                  displayStatus +\r\n                  \"d.\"\r\n              );\r\n            },\r\n            (err: any) => {\r\n              err.error.message = ERROR_MESSAGES.under_maintenance;\r\n              this.sweetAlertService.error(err);\r\n            },\r\n            () => {\r\n              this.dialogRef.close(this.multipleS1Application);\r\n            }\r\n          );\r\n      }\r\n    });\r\n  }\r\n\r\n  updateMultipleApplications(multipleId): void {\r\n    // TO DO\r\n    // will only redirect to add new S1 application\r\n    // saving or updating is in add-s1-application.component.ts\r\n    const ctr =\r\n      this.multipleS1ApplicationList.length === 0\r\n        ? 1\r\n        : this.multipleS1ApplicationList.length + 1;\r\n\r\n    this.dialogRef.close();\r\n    this.router.navigate([\r\n      `asc/page/application/s1/add/multiple/${multipleId}/${ctr}`,\r\n    ]);\r\n  }\r\n\r\n  compareProduct(value: any, selected: any): boolean {\r\n    if (value && selected) {\r\n      return value.description === selected.description;\r\n    }\r\n  }\r\n\r\n  // compareCategory(value: any, selected: any): boolean {\r\n  //   if (value && selected) {\r\n  //     return value.description === selected.description;\r\n  //   }\r\n  // }\r\n\r\n  submitMultiple() {\r\n    Swal.fire({\r\n      text: `Are you sure you want to submit this multiple application?`,\r\n      icon: \"question\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Confirm\",\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        if (\r\n          this.multipleS1Application.numberOfApplication >\r\n          this.multipleS1ApplicationList.length\r\n        ) {\r\n          Swal.fire({\r\n            text: `Are you sure you want to submit ${this.multipleS1ApplicationList.length} out ${this.multipleS1Application.numberOfApplication} applications only?`,\r\n            icon: \"question\",\r\n            showCancelButton: true,\r\n            confirmButtonColor: \"#3085d6\",\r\n            cancelButtonColor: \"#d33\",\r\n            confirmButtonText: \"Confirm\",\r\n          }).then((result2) => {\r\n            if (result2.value) {\r\n              const endpoint = `${ENDPOINTS.applicationFormPresentor}group-id/${this.multipleS1Application.id}/application-type-id/\r\n                ${this.multipleS1Application.applicationType.id}/batch-multiple-app-form/submit`;\r\n              this.apiService.save(endpoint, null).subscribe(\r\n                (res: any) => {\r\n                  this.sweetAlertService.customSuccessMessage(\r\n                    \"Multiple application successfully submitted.\"\r\n                  );\r\n                  this.getS1FormsByMultipleApplication();\r\n                },\r\n                (err: any) => {\r\n                  err.error.message = ERROR_MESSAGES.under_maintenance;\r\n                  this.sweetAlertService.error(err);\r\n                },\r\n                () => {\r\n                  this.dialogRef.close(this.multipleS1Application);\r\n                }\r\n              );\r\n            }\r\n          });\r\n        } else {\r\n          const endpoint = `${ENDPOINTS.applicationFormPresentor}group-id/${this.multipleS1Application.id}/application-type-id/\r\n        ${this.multipleS1Application.applicationType.id}/batch-multiple-app-form/submit`;\r\n          this.apiService.save(endpoint, null).subscribe(\r\n            (res: any) => {\r\n              this.sweetAlertService.customSuccessMessage(\r\n                \"Multiple application successfully submitted.\"\r\n              );\r\n              this.getS1FormsByMultipleApplication();\r\n            },\r\n            (err: any) => {\r\n              err.error.message = ERROR_MESSAGES.under_maintenance;\r\n              this.sweetAlertService.error(err);\r\n            },\r\n            () => {\r\n              this.dialogRef.close(this.multipleS1Application);\r\n            }\r\n          );\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  forwardMultipleAppsTo(user) {\r\n    Swal.fire({\r\n      text: `Are you sure you want to forward this multiple application?`,\r\n      icon: \"question\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Confirm\",\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.spinner.show();\r\n        let endpoint = \"\";\r\n\r\n        if (user === \"encoder\") {\r\n          this.multipleS1Application.assignedEncoder = this.multipleS1ApplicationList[0].assignedEncoder;\r\n          // endpoint = ENDPOINTS.forwardMultipleAppFormToAdSpe;\r\n          endpoint = `${ENDPOINTS.s1ApplicationForm}encoder/group-id/${this.multipleS1Application.id}/forward-multiple-app-form`;\r\n        } else if (user === \"ad-specialist\") {\r\n          this.multipleS1Application.assignedAdSpecialist = this.multipleS1ApplicationList[0].assignedAdSpecialist;\r\n          this.multipleS1Application.assignedScreener = this.multipleS1ApplicationList[0].assignedScreener;\r\n          endpoint = ENDPOINTS.forwardMultipleAppFormToScreener;\r\n        } else if (user === \"screener\") {\r\n          this.multipleS1Application.assignedReviewer = this.multipleS1ApplicationList[0].assignedReviewer;\r\n          endpoint = ENDPOINTS.forwardMultipleAppFormToReviewer;\r\n        }\r\n\r\n        this.apiService.save(endpoint, this.multipleS1Application).subscribe(\r\n          (res: any) => {\r\n            console.log(res);\r\n            this.spinner.hide();\r\n            this.sweetAlertService.customSuccessMessage(\r\n              \"Multiple application successfully forwarded to the next user.\"\r\n            );\r\n          },\r\n          (err: any) => {\r\n            this.spinner.hide();\r\n            err.error.message = ERROR_MESSAGES.under_maintenance;\r\n            this.sweetAlertService.error(err);\r\n          },\r\n          () => {\r\n            this.spinner.hide();\r\n            this.dialogRef.close(this.multipleS1Application);\r\n          }\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  getApplicationSingleMedia(\r\n    appFormReference = this.s1Application?.appFormReference\r\n  ) {\r\n    this.apiService\r\n      .findByParam(\r\n        ENDPOINTS.applicationSingleMedia,\r\n        `app-form-reference/${appFormReference}`\r\n      )\r\n      .subscribe(\r\n        (res: any) => {\r\n          if (res.responseData.data.length > 0) {\r\n            this.applicationSingleMedia = res.responseData.data[0];\r\n\r\n            this.typeOfMediumDisplay = `${this.applicationSingleMedia?.mediumExecution?.typeOfMedium?.description} (${this.applicationSingleMedia?.sizeLength})`;\r\n\r\n            this.multipleS1ApplicationList.forEach((element, index) => {\r\n              if (element.appFormReference === appFormReference) {\r\n                this.multipleS1ApplicationList[index] = {\r\n                  ...this.multipleS1ApplicationList[index],\r\n                  typeOfMediumDisplay:\r\n                    this.typeOfMediumDisplay === \"undefined (0)\"\r\n                      ? \"\"\r\n                      : this.typeOfMediumDisplay,\r\n                };\r\n              }\r\n            });\r\n\r\n            this.isDisabledSubmitButton = this.multipleS1ApplicationList.filter(\r\n              (filteredS1App) => filteredS1App.typeOfMediumDisplay === \"\"\r\n            ).length\r\n              ? true\r\n              : false;\r\n\r\n            this.dataSource = new MatTableDataSource<any>(\r\n              this.multipleS1ApplicationList\r\n            );\r\n            this.dataSource.paginator = this.paginator;\r\n          } else {\r\n            this.applicationSingleMedia = new ApplicationSingleMedia();\r\n            this.typeOfMediumDisplay = \"\";\r\n          }\r\n        },\r\n        (err: any) => {\r\n          this.applicationSingleMedia = new ApplicationSingleMedia();\r\n          this.typeOfMediumDisplay = \"\";\r\n        }\r\n      );\r\n  }\r\n\r\n  getMultimediaStatic(appFormReference = this.s1Application?.appFormReference) {\r\n    this.apiService\r\n      .findByParam(\r\n        ENDPOINTS.applicationMultimedia,\r\n        `app-form-reference/${appFormReference}`\r\n      )\r\n      .subscribe(\r\n        (res: any) => {\r\n          if (res.responseData.data.length > 0) {\r\n            const multimediaList = new Set(\r\n              res.responseData.data.map(\r\n                (mappedList) =>\r\n                  `${mappedList?.typeOfMedium?.description} (${mappedList?.multimediaSizeLength})`\r\n              )\r\n            );\r\n\r\n            this.typeOfMediumDisplay = \"\";\r\n            let mediaCtrl = 1;\r\n            for (const media of multimediaList) {\r\n              if (mediaCtrl !== multimediaList.size) {\r\n                this.typeOfMediumDisplay += `${media}, `;\r\n                mediaCtrl++;\r\n              } else {\r\n                this.typeOfMediumDisplay += media;\r\n              }\r\n            }\r\n\r\n            this.multipleS1ApplicationList.forEach((element, index) => {\r\n              if (element.appFormReference === appFormReference) {\r\n                this.multipleS1ApplicationList[index] = {\r\n                  ...this.multipleS1ApplicationList[index],\r\n                  typeOfMediumDisplay: this.typeOfMediumDisplay,\r\n                };\r\n              }\r\n            });\r\n            this.dataSource = new MatTableDataSource<any>(\r\n              this.multipleS1ApplicationList\r\n            );\r\n            this.dataSource.paginator = this.paginator;\r\n\r\n            this.isDisabledSubmitButton = this.multipleS1ApplicationList.filter(\r\n              (filteredList) => !filteredList.typeOfMediumDisplay\r\n            ).length\r\n              ? true\r\n              : false;\r\n          } else {\r\n            this.typeOfMediumDisplay = \"\";\r\n          }\r\n        },\r\n        (err: any) => {\r\n          this.typeOfMediumDisplay = \"\";\r\n        }\r\n      );\r\n  }\r\n\r\n  getMultimediaMoving(appFormReference = this.s1Application?.appFormReference) {\r\n    this.apiService\r\n      .findByParam(\r\n        ENDPOINTS.applicationMultimedia,\r\n        `app-form-reference/${appFormReference}`\r\n      )\r\n      .subscribe(\r\n        (res: any) => {\r\n          if (res.responseData.data.length > 0) {\r\n            const multimediaList = new Set(\r\n              res.responseData.data.map(\r\n                (mappedList) =>\r\n                  `${mappedList?.typeOfMedium?.description} (${mappedList?.multimediaSizeLength})`\r\n              )\r\n            );\r\n\r\n            this.typeOfMediumDisplay = \"\";\r\n            let mediaCtrl = 1;\r\n            for (const media of multimediaList) {\r\n              if (mediaCtrl !== multimediaList.size) {\r\n                this.typeOfMediumDisplay += `${media}, `;\r\n                mediaCtrl++;\r\n              } else {\r\n                this.typeOfMediumDisplay += media;\r\n              }\r\n            }\r\n\r\n            this.multipleS1ApplicationList.forEach((element, index) => {\r\n              if (element.appFormReference === appFormReference) {\r\n                this.multipleS1ApplicationList[index] = {\r\n                  ...this.multipleS1ApplicationList[index],\r\n                  typeOfMediumDisplay: this.typeOfMediumDisplay,\r\n                };\r\n              }\r\n            });\r\n            this.dataSource = new MatTableDataSource<any>(\r\n              this.multipleS1ApplicationList\r\n            );\r\n            this.dataSource.paginator = this.paginator;\r\n\r\n            this.isDisabledSubmitButton = this.multipleS1ApplicationList.filter(\r\n              (filteredList) => !filteredList.typeOfMediumDisplay\r\n            ).length\r\n              ? true\r\n              : false;\r\n          } else {\r\n            this.typeOfMediumDisplay = \"\";\r\n          }\r\n        },\r\n        (err: any) => {\r\n          this.typeOfMediumDisplay = \"\";\r\n        }\r\n      );\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { URL_PATHS } from '@shared';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    children: [\r\n      {\r\n        path: URL_PATHS.LIST_COMPANY,\r\n        loadChildren: () => import('./list-company/list-company.module')\r\n          .then(m => m.ListCompanyModule)\r\n      },\r\n      {\r\n        path: URL_PATHS.ADD_COMPANY,\r\n        loadChildren: () => import('./add-company/add-company.module')\r\n          .then(m => m.AddCompanyModule)\r\n      },\r\n      {\r\n        path: URL_PATHS.UPDATE_COMPANY + '/:id',\r\n        loadChildren: () => import('./add-company/add-company.module')\r\n          .then(m => m.AddCompanyModule)\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class CompanyRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AddCompanyComponent } from './add-company.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AddCompanyComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AddCompanyRoutingModule { }\r\n","export default \"<form>\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <!-- <div class=\\\"spinner\\\">\\r\\n      <ngx-spinner bdColor=\\\"rgba(0, 0, 0, 0.8)\\\" size=\\\"large\\\" color=\\\"#fff\\\" type=\\\"line-spin-fade\\\" [fullScreen]=\\\"false\\\">\\r\\n        <p *ngIf=\\\"s1Application.brand != undefined\\\"> Loading <b>{{s1Application.referenceCode}}</b> S1 Application. </p>\\r\\n        <p *ngIf=\\\"s1Application.brand === undefined && company.companyName === undefined\\\"> Creating new S1\\r\\n          Application... </p>\\r\\n      </ngx-spinner>\\r\\n    </div> -->\\r\\n    <div class=\\\"row title\\\">\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n        <mat-label\\r\\n          *ngIf=\\\"\\r\\n            isApplicant &&\\r\\n            (s1Application?.externalStatus == undefined ||\\r\\n              s1Application?.externalStatus == 'SAVED' ||\\r\\n              s1Application?.externalStatus == 'S1_APPLICATION_SUBMITTED')\\r\\n          \\\"\\r\\n        >\\r\\n          <i class=\\\"material-icons\\\">note_add</i> NEW S1 APPLICATION <br /><br />\\r\\n        </mat-label>\\r\\n\\r\\n        <mat-label\\r\\n          [hidden]=\\\"\\r\\n            s1Application?.applicationType.description ===\\r\\n              'Special Screening' ||\\r\\n            s1Application?.applicationType.description === 'Special Clearing' ||\\r\\n            s1Application?.applicationType.description ===\\r\\n              'Special Screening and Clearing'\\r\\n          \\\"\\r\\n          *ngIf=\\\"\\r\\n            specialApplicationType.includes(\\r\\n              s1Application?.applicationType?.description?.toUpperCase()\\r\\n            ) &&\\r\\n            !applicationRequest?.status &&\\r\\n            s1Application.applicationRequest == null &&\\r\\n            s1Application?.formType !== 'MULTIPLE'\\r\\n          \\\"\\r\\n        >\\r\\n          <i class=\\\"material-icons\\\">note_add</i> REQUEST FOR APPROVAL\\r\\n        </mat-label>\\r\\n\\r\\n        <table>\\r\\n          <tr>\\r\\n            <td\\r\\n              *ngIf=\\\"\\r\\n                s1Application?.referenceCode ||\\r\\n                s1Application?.referenceCodeRejected\\r\\n              \\\"\\r\\n            >\\r\\n              <span> Reference Code: </span>\\r\\n            </td>\\r\\n            <td\\r\\n              *ngIf=\\\"\\r\\n                s1Application?.referenceCode ||\\r\\n                s1Application?.referenceCodeRejected\\r\\n              \\\"\\r\\n            >\\r\\n              <span>\\r\\n                <b>{{\\r\\n                  s1Application?.externalStatus == \\\"S1_APPLICATION_REJECTED\\\"\\r\\n                    ? s1Application?.referenceCodeRejected\\r\\n                    : (s1Application?.referenceCode | uppercase)\\r\\n                }}</b>\\r\\n                <!-- <b *ngIf=\\\"s1Application?.revisionNo>0\\\"> (Revision Number {{s1Application?.revisionNo}})</b> -->\\r\\n              </span>\\r\\n            </td>\\r\\n            <td class=\\\"no-border\\\"></td>\\r\\n            <td class=\\\"no-border\\\"></td>\\r\\n            <td class=\\\"no-border\\\"></td>\\r\\n            <td class=\\\"no-border\\\">\\r\\n              <button\\r\\n                class=\\\"button-right button-red\\\"\\r\\n                mat-raised-button\\r\\n                [routerLink]=\\\"['/asc/page/application/s1/lists']\\\"\\r\\n              >\\r\\n                <i class=\\\"material-icons color__white\\\">list</i> VIEW\\r\\n                APPLICATIONS\\r\\n              </button>\\r\\n              <!-- <button class=\\\"button-right button-red\\\" mat-raised-button *ngIf=\\\"s1Application?.formType==='MULTIPLE'\\\"\\r\\n              [routerLink]=\\\"['/asc/page/application/s1/multiple']\\\">\\r\\n              <i class=\\\"material-icons color__white\\\">list</i> VIEW APPLICATIONS\\r\\n            </button> -->\\r\\n            </td>\\r\\n          </tr>\\r\\n          <tr>\\r\\n            <td class=\\\"no-border\\\"></td>\\r\\n          </tr>\\r\\n          <tr>\\r\\n            <td\\r\\n              *ngIf=\\\"\\r\\n                (s1Application?.externalStatus != undefined && !isAscUser) ||\\r\\n                isAscUser\\r\\n              \\\"\\r\\n            >\\r\\n              <span> Status: </span>\\r\\n            </td>\\r\\n            <td\\r\\n              *ngIf=\\\"\\r\\n                (s1Application?.externalStatus != undefined && !isAscUser) ||\\r\\n                isAscUser\\r\\n              \\\"\\r\\n            >\\r\\n              <span\\r\\n                *ngIf=\\\"s1Application?.externalStatus != undefined && !isAscUser\\\"\\r\\n              >\\r\\n                <b>{{\\r\\n                  s1Application?.externalStatus?.replaceAll(\\\"_\\\", \\\" \\\")\\r\\n                    | uppercase\\r\\n                }}</b>\\r\\n              </span>\\r\\n              <span *ngIf=\\\"isAscUser\\\">\\r\\n                <b>{{\\r\\n                  s1Application?.internalStatus?.replaceAll(\\\"_\\\", \\\" \\\")\\r\\n                    | uppercase\\r\\n                }}</b>\\r\\n              </span>\\r\\n            </td>\\r\\n            <td class=\\\"no-border\\\"></td>\\r\\n            <td class=\\\"no-border\\\"></td>\\r\\n            <td\\r\\n              *ngIf=\\\"\\r\\n                s1Application?.decisionStatus != undefined &&\\r\\n                s1Application?.internalStatus == 'S1_APPLICATION_REVIEWED'\\r\\n              \\\"\\r\\n            >\\r\\n              <span> Decision: </span>\\r\\n            </td>\\r\\n            <td\\r\\n              *ngIf=\\\"\\r\\n                s1Application?.decisionStatus != undefined &&\\r\\n                s1Application?.internalStatus == 'S1_APPLICATION_REVIEWED'\\r\\n              \\\"\\r\\n            >\\r\\n              <span>\\r\\n                <b>{{ s1Application?.decisionStatus | uppercase }}</b>\\r\\n              </span>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </table>\\r\\n        <hr />\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-6\\\">\\r\\n        <h3\\r\\n          *ngIf=\\\"\\r\\n            s1Application?.submissionDate &&\\r\\n            applicationRequest?.status !== 'DISAPPROVED'\\r\\n          \\\"\\r\\n        >\\r\\n          <b class=\\\"submission-date\\\"\\r\\n            >Submission Date:\\r\\n            {{ s1Application?.submissionDate | date: \\\"MMMM d, yyyy\\\" }}</b\\r\\n          >\\r\\n        </h3>\\r\\n        <h3\\r\\n          *ngIf=\\\"\\r\\n            s1Application?.submissionDate &&\\r\\n            applicationRequest?.status === 'DISAPPROVED'\\r\\n          \\\"\\r\\n        >\\r\\n          <b class=\\\"submission-date\\\"\\r\\n            >Submission Date: N/A - Request was disapproved</b\\r\\n          >\\r\\n        </h3>\\r\\n      </div>\\r\\n\\r\\n      <div\\r\\n        class=\\\"col-md-6\\\"\\r\\n        *ngIf=\\\"\\r\\n          s1Application?.amount && s1Application?.submissionType === 'ORIGINAL'\\r\\n        \\\"\\r\\n      >\\r\\n        <span class=\\\"badge bg-warning text-dark button-right\\\">\\r\\n          {{ s1Application?.paymentStatus?.replaceAll(\\\"_\\\", \\\" \\\") }} : ₱\\r\\n          {{ s1Application?.amount | number: \\\"1.2-2\\\" }}\\r\\n        </span>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\" [formGroup]=\\\"s1ApplicationForm\\\">\\r\\n      <mat-form-field\\r\\n        class=\\\"col-md-4\\\"\\r\\n        appearance=\\\"outline\\\"\\r\\n        [hidden]=\\\"s1Application?.formType !== 'MULTIPLE'\\\"\\r\\n      >\\r\\n        <mat-label>Form Type</mat-label>\\r\\n        <mat-select\\r\\n          [(ngModel)]=\\\"s1Application.formType\\\"\\r\\n          [compareWith]=\\\"compareFormType\\\"\\r\\n          name=\\\"formType\\\"\\r\\n          formControlName=\\\"formType\\\"\\r\\n          disabled\\r\\n        >\\r\\n          <mat-option\\r\\n            *ngFor=\\\"let i of formTypeList\\\"\\r\\n            [value]=\\\"i\\\"\\r\\n            (click)=\\\"getApplicationTypeList(i.description)\\\"\\r\\n          >\\r\\n            {{ i?.description | uppercase }}\\r\\n            <span\\r\\n              *ngIf=\\\"\\r\\n                s1Application?.multipleApplication &&\\r\\n                s1Application?.multipleApplication?.submissionStatus !==\\r\\n                  'PROCESSED'\\r\\n              \\\"\\r\\n              >({{ s1Application?.sequenceOrder }}\\r\\n              of\\r\\n              {{\\r\\n                s1Application?.multipleApplication?.numberOfApplication\\r\\n              }})</span\\r\\n            >\\r\\n            <span\\r\\n              *ngIf=\\\"\\r\\n                s1Application?.multipleApplication?.submissionStatus ===\\r\\n                'PROCESSED'\\r\\n              \\\"\\r\\n            >\\r\\n              (Sequence Number: {{ s1Application?.sequenceOrder }})</span\\r\\n            >\\r\\n          </mat-option>\\r\\n        </mat-select>\\r\\n      </mat-form-field>\\r\\n\\r\\n      <mat-form-field class=\\\"col-md-4\\\" appearance=\\\"outline\\\">\\r\\n        <mat-label>Application Type</mat-label>\\r\\n        <mat-select\\r\\n          [(ngModel)]=\\\"s1Application.applicationType\\\"\\r\\n          [compareWith]=\\\"compareApplicationType\\\"\\r\\n          name=\\\"applicationType\\\"\\r\\n          formControlName=\\\"applicationType\\\"\\r\\n          disabled\\r\\n        >\\r\\n          <!-- [disabled]=\\\"s1Application?.internalStatus!='SAVED'&&s1Application?.internalStatus!=undefined\\\" -->\\r\\n          <mat-option\\r\\n            *ngFor=\\\"let i of applicationTypeList\\\"\\r\\n            [value]=\\\"i\\\"\\r\\n            (click)=\\\"setAppType(i)\\\"\\r\\n          >\\r\\n            {{ i?.description | uppercase }}\\r\\n          </mat-option>\\r\\n        </mat-select>\\r\\n      </mat-form-field>\\r\\n      <mat-form-field\\r\\n        class=\\\"col-md-4\\\"\\r\\n        appearance=\\\"outline\\\"\\r\\n        *ngIf=\\\"s1Application?.submissionType\\\"\\r\\n      >\\r\\n        <mat-label>Submission Type</mat-label>\\r\\n        <input matInput [value]=\\\"s1Application?.submissionType\\\" readonly />\\r\\n      </mat-form-field>\\r\\n      <mat-form-field\\r\\n        class=\\\"col-md-4\\\"\\r\\n        appearance=\\\"outline\\\"\\r\\n        *ngIf=\\\"s1Application.formType === 'FOR_PRESENTATION'\\\"\\r\\n      >\\r\\n        <mat-label>Form Type</mat-label>\\r\\n        <input matInput value=\\\"FOR PRESENTATION\\\" readonly />\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n    <hr />\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n        <button\\r\\n          mat-raised-button\\r\\n          class=\\\"button-right button-red\\\"\\r\\n          *ngIf=\\\"\\r\\n            s1Application?.submissionType === 'ORIGINAL' &&\\r\\n            s1Application?.internalStatus === 's1 Reviewed'\\r\\n          \\\"\\r\\n          (click)=\\\"viewReport(s1Application.id, 'S1_Application_Form')\\\"\\r\\n        >\\r\\n          <i class=\\\"material-icons color__white\\\">open_in_new</i> VIEW\\r\\n          APPLICATION REPORT\\r\\n        </button>\\r\\n\\r\\n        <button\\r\\n          mat-raised-button\\r\\n          class=\\\"button-right button-red\\\"\\r\\n          (click)=\\\"openPerformanceMetrics()\\\"\\r\\n          *ngIf=\\\"\\r\\n            (currentUser?.userRole.name === 'ROLE_ADMIN' ||\\r\\n              currentUser?.userRole.name === 'ROLE_SUPER_ADMIN') &&\\r\\n            s1Application?.id\\r\\n          \\\"\\r\\n        >\\r\\n          <i class=\\\"material-icons color__white\\\">trending_up</i> VIEW\\r\\n          APPLICATION HISTORY\\r\\n        </button>\\r\\n\\r\\n        <!-- <button mat-raised-button class=\\\"button-right button-red\\\" *ngIf=\\\"(currentUser?.userRole.name === 'ROLE_SUPER_ADMIN' || currentUser?.userRole.name === 'ROLE_ADMIN' || currentUser?.userRole.name === 'ROLE_AD_SPECIALIST')\\r\\n        && (s1Application?.releaseStatus === 'FOR_RELEASE' || s1Application?.releaseStatus === 'RELEASED') && s1Application?.paymentStatus === 'PAID'\\\"\\r\\n          (click)=\\\"viewReport(s1Application.id,'S1_Decision_Form')\\\"><i\\r\\n            class=\\\"material-icons color__white\\\">open_in_new</i> DECISION FORM</button> -->\\r\\n\\r\\n        <!-- <button mat-raised-button class=\\\"button-right button-red\\\" *ngIf=\\\"(currentUser?.userRole.name === 'ROLE_SUPER_ADMIN' || currentUser?.userRole.name === 'ROLE_ADMIN' || currentUser?.userRole.name === 'ROLE_AD_SPECIALIST')\\r\\n        && (s1Application?.releaseStatus === 'FOR_RELEASE' || s1Application?.releaseStatus === 'RELEASED') && s1Application?.paymentStatus === 'PAID'\\\"\\r\\n          (click)=\\\"viewReport(s1Application.id,'Stamp_Material')\\\"><i class=\\\"material-icons color__white\\\">open_in_new</i>\\r\\n          STAMPED MATERIAL</button> -->\\r\\n\\r\\n        <button\\r\\n          mat-raised-button\\r\\n          class=\\\"button-right button-red\\\"\\r\\n          *ngIf=\\\"\\r\\n            s1Application?.submissionType === 'revision' &&\\r\\n            s1Application?.internalStatus === 'revision screened'\\r\\n          \\\"\\r\\n          (click)=\\\"viewReport(s1Application.id, 'Revision_Form')\\\"\\r\\n        >\\r\\n          <i class=\\\"material-icons color__white\\\">open_in_new</i> REVISION FORM\\r\\n        </button>\\r\\n\\r\\n        <button\\r\\n          mat-raised-button\\r\\n          class=\\\"button-right button-red\\\"\\r\\n          *ngIf=\\\"\\r\\n            (currentUser?.userRole.name === 'ROLE_ADMIN' ||\\r\\n              currentUser?.userRole.name === 'ROLE_SUPER_ADMIN' ||\\r\\n              currentUser?.userRole.name === 'ROLE_AD_SPECIALIST') &&\\r\\n            s1Application?.submissionType === 'COMPLIANCE' &&\\r\\n            s1Application?.decisionStatus === 'INCOMPLETE' &&\\r\\n            s1Application?.internalStatus ===\\r\\n              'COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER'\\r\\n          \\\"\\r\\n          (click)=\\\"viewReport(s1Application.id, 'S1_Pending_Form')\\\"\\r\\n        >\\r\\n          <i class=\\\"material-icons color__white\\\">open_in_new</i> PENDING FORM\\r\\n        </button>\\r\\n\\r\\n        <button\\r\\n          mat-raised-button\\r\\n          class=\\\"button-right button-red\\\"\\r\\n          *ngIf=\\\"\\r\\n            (currentUser?.userRole.name === 'ROLE_SUPER_ADMIN' ||\\r\\n              currentUser?.userRole.name === 'ROLE_ADMIN') &&\\r\\n            (s1Application?.releaseStatus === 'FOR_RELEASE' ||\\r\\n              s1Application?.releaseStatus === 'RELEASED') &&\\r\\n            s1Application?.paymentStatus === 'PAID'\\r\\n          \\\"\\r\\n          (click)=\\\"sendDecisionOrStampMaterialManual()\\\"\\r\\n        >\\r\\n          <i class=\\\"material-icons color__white\\\">send</i> SEND DECISION OR\\r\\n          STAMPED MATERIAL\\r\\n        </button>\\r\\n      </div>\\r\\n\\r\\n      <!--   <div class=\\\"col-md-1\\\">\\r\\n        <button mat-raised-button class=\\\"button-right button-red\\\" (click)=\\\"viewReport(s1Application.id)\\\">Pending Form</button>\\r\\n      </div> -->\\r\\n    </div>\\r\\n    <br />\\r\\n    <div class=\\\"row\\\">\\r\\n      <mat-accordion class=\\\"headers-align\\\" multi>\\r\\n        <mat-expansion-panel\\r\\n          [expanded]=\\\"\\r\\n            ((isApplicant && s1Application?.internalStatus != 'SAVED') ||\\r\\n              s1Application?.internalStatus == undefined) &&\\r\\n            !accordionExpanded\\r\\n          \\\"\\r\\n          *ngIf=\\\"\\r\\n            (isApplicant && s1Application?.internalStatus == 'SAVED') ||\\r\\n            !isApplicant ||\\r\\n            s1Application?.internalStatus == undefined\\r\\n          \\\"\\r\\n        >\\r\\n          <mat-expansion-panel-header (click)=\\\"accordionDisablingFunction()\\\">\\r\\n            <mat-panel-title>\\r\\n              <i class=\\\"material-icons\\\">label_important</i> &nbsp;Client\\r\\n              Information\\r\\n              <i class=\\\"material-icons error\\\" *ngIf=\\\"hasErrorsClient\\\">error</i>\\r\\n            </mat-panel-title>\\r\\n            <mat-panel-description>\\r\\n              Affiliation and Company details\\r\\n              <i class=\\\"material-icons\\\">perm_contact_calendar</i>\\r\\n            </mat-panel-description>\\r\\n          </mat-expansion-panel-header>\\r\\n          <br />\\r\\n\\r\\n          <app-client-information\\r\\n            [s1Application]=\\\"s1Application\\\"\\r\\n            [isAscUser]=\\\"isAscUser\\\"\\r\\n            (checkInactiveAffiliation)=\\\"checkInactiveAffiliation()\\\"\\r\\n            [isDisableFieldOnUpdate]=\\\"isDisableFieldOnUpdate\\\"\\r\\n            [company]=\\\"company\\\"\\r\\n            (hasErrorFields)=\\\"hasErrorsClient = $event\\\"\\r\\n          ></app-client-information>\\r\\n          <div *ngIf=\\\"!isDisableFieldOnUpdate\\\" class=\\\"required-fields-note\\\">\\r\\n            Note: Fields with * are required\\r\\n          </div>\\r\\n          <mat-action-row *ngIf=\\\"isApplicant\\\">\\r\\n            <p *ngIf=\\\"validationMessage\\\">\\r\\n              <span class=\\\"badge bg-warning text-dark\\\"\\r\\n                ><i class=\\\"material-icons\\\">warning</i\\r\\n                >{{ validationMessage }}</span\\r\\n              >\\r\\n            </p>\\r\\n            <button\\r\\n              mat-raised-button\\r\\n              color=\\\"warn\\\"\\r\\n              (click)=\\\"accordionDisablingFunction()\\\"\\r\\n            >\\r\\n              Next\\r\\n            </button>\\r\\n          </mat-action-row>\\r\\n\\r\\n          <!-- <button mat-raised-button color=\\\"primary\\\" (click)=\\\"accordionDisablingFunction()\\\" [disabled]=\\\"!company?.companyName && !s1Application.brand\\\">Next</button> -->\\r\\n        </mat-expansion-panel>\\r\\n\\r\\n        <!-- FOR ASC Users only -->\\r\\n        <mat-expansion-panel *ngIf=\\\"!isApplicant\\\">\\r\\n          <mat-expansion-panel-header>\\r\\n            <mat-panel-title>\\r\\n              <i class=\\\"material-icons\\\">label_important</i> &nbsp;Presentor\\r\\n              Information\\r\\n            </mat-panel-title>\\r\\n            <mat-panel-description>\\r\\n              Personal Details\\r\\n              <i class=\\\"material-icons\\\">person</i>\\r\\n            </mat-panel-description>\\r\\n          </mat-expansion-panel-header>\\r\\n\\r\\n          <br />\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"row\\\"><br /></div>\\r\\n\\r\\n            <div class=\\\"row\\\">\\r\\n              <mat-form-field\\r\\n                class=\\\"col-md-4\\\"\\r\\n                appearance=\\\"outline\\\"\\r\\n                *ngIf=\\\"\\r\\n                  isEvaluator && s1Application?.externalStatus === undefined\\r\\n                \\\"\\r\\n              >\\r\\n                <mat-label\\r\\n                  >Assign an Applicant<span class=\\\"required-field\\\">\\r\\n                    <mat-icon>notification_important</mat-icon>\\r\\n                  </span></mat-label\\r\\n                >\\r\\n\\r\\n                <mat-select\\r\\n                  [(ngModel)]=\\\"s1Application.applicationOwner\\\"\\r\\n                  name=\\\"s1Application.applicationOwner\\\"\\r\\n                >\\r\\n                  <mat-option\\r\\n                    *ngFor=\\\"let i of applicantList\\\"\\r\\n                    [value]=\\\"i\\\"\\r\\n                    (click)=\\\"selectApplicant(i)\\\"\\r\\n                  >\\r\\n                    {{ i.firstName }} {{ i.lastName }}\\r\\n                  </mat-option>\\r\\n                </mat-select>\\r\\n              </mat-form-field>\\r\\n\\r\\n              <mat-form-field\\r\\n                class=\\\"col-md-8\\\"\\r\\n                appearance=\\\"outline\\\"\\r\\n                *ngIf=\\\"presentorDetails.id != null\\\"\\r\\n              >\\r\\n                <mat-label>Name of Applicant</mat-label>\\r\\n                <input\\r\\n                  matInput\\r\\n                  [value]=\\\"\\r\\n                    presentorDetails?.firstName +\\r\\n                    ' ' +\\r\\n                    presentorDetails?.lastName\\r\\n                  \\\"\\r\\n                  readonly\\r\\n                />\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row\\\">\\r\\n              <mat-form-field class=\\\"col-md-7\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label>Company Name</mat-label>\\r\\n                <input\\r\\n                  matInput\\r\\n                  [value]=\\\"presentorDetails?.company?.companyName\\\"\\r\\n                  readonly\\r\\n                />\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row\\\"><br /></div>\\r\\n\\r\\n            <div class=\\\"row\\\">\\r\\n              <mat-form-field class=\\\"col-md-11\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label>Address</mat-label>\\r\\n                <input\\r\\n                  matInput\\r\\n                  [value]=\\\"presentorDetails?.company?.completeAddress\\\"\\r\\n                  readonly\\r\\n                />\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row\\\"><br /></div>\\r\\n\\r\\n            <div class=\\\"row\\\" *ngIf=\\\"presentorDetails.id != null\\\">\\r\\n              <mat-form-field class=\\\"col-md-5\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label>Mobile Number</mat-label>\\r\\n                <input\\r\\n                  matInput\\r\\n                  [value]=\\\"presentorDetails?.mobileNumber\\\"\\r\\n                  readonly\\r\\n                />\\r\\n              </mat-form-field>\\r\\n              <mat-form-field class=\\\"col-md-5\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label>Email Address</mat-label>\\r\\n                <input matInput [value]=\\\"presentorDetails?.username\\\" readonly />\\r\\n              </mat-form-field>\\r\\n              <mat-form-field class=\\\"col-md-5\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label>Telephone Number</mat-label>\\r\\n                <input\\r\\n                  matInput\\r\\n                  [value]=\\\"presentorDetails?.company?.companyTelephoneNo\\\"\\r\\n                  readonly\\r\\n                />\\r\\n              </mat-form-field>\\r\\n              <mat-form-field class=\\\"col-md-5\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label>Alternate Telephone Number</mat-label>\\r\\n                <input\\r\\n                  matInput\\r\\n                  [value]=\\\"presentorDetails?.company?.companyTelephoneNo2\\\"\\r\\n                  readonly\\r\\n                />\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n          </div>\\r\\n        </mat-expansion-panel>\\r\\n\\r\\n        <mat-expansion-panel\\r\\n          *ngIf=\\\"\\r\\n            (isApplicant && s1Application?.internalStatus == 'SAVED') ||\\r\\n            !isApplicant ||\\r\\n            s1Application?.internalStatus == undefined ||\\r\\n            ((s1Application?.internalStatus == 'S1_APPLICATION_REVIEWED' ||\\r\\n              s1Application?.internalStatus ==\\r\\n                'COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER' ||\\r\\n              s1Application?.internalStatus == 'REVISION_SCREENED' ||\\r\\n              s1Application?.internalStatus == 'S1_APPLICATION_REJECTED') &&\\r\\n              (s1Application?.decisionStatus == 'APPROVED' ||\\r\\n                s1Application?.decisionStatus == 'APPROVED W/ CAUTION' ||\\r\\n                s1Application?.decisionStatus == 'INCOMPLETE') &&\\r\\n              s1Application?.revisionNo < 2 &&\\r\\n              !s1Application?.appliedS2)\\r\\n          \\\"\\r\\n          [disabled]=\\\"accordionDisable\\\"\\r\\n          [hidden]=\\\"\\r\\n            (s1Application?.hasOngoingRevision ||\\r\\n              s1Application?.hasOngoingCompliance) &&\\r\\n            isApplicant\\r\\n          \\\"\\r\\n          [expanded]=\\\"accordionExpanded || isAdSpecialist\\\"\\r\\n        >\\r\\n          <!-- s1Application?.membersAffiliation && s1Application?.company && s1Application?.brand -->\\r\\n          <mat-expansion-panel-header (click)=\\\"accordionDisablingFunction()\\\">\\r\\n            <mat-panel-title>\\r\\n              <i class=\\\"material-icons\\\">label_important</i> &nbsp;Material\\r\\n              Information\\r\\n              <i class=\\\"material-icons error\\\" *ngIf=\\\"checkMaterialFieldErrors()\\\"\\r\\n                >error</i\\r\\n              >\\r\\n            </mat-panel-title>\\r\\n            <mat-panel-description>\\r\\n              Ads Details\\r\\n              <i class=\\\"material-icons\\\">ads_click</i>\\r\\n            </mat-panel-description>\\r\\n          </mat-expansion-panel-header>\\r\\n          <br />\\r\\n\\r\\n          <app-material-information\\r\\n            [s1Application]=\\\"s1Application\\\"\\r\\n            [isAscUser]=\\\"isAscUser\\\"\\r\\n            [multimediaDTO]=\\\"multimediaDTO\\\"\\r\\n            [applicationSingleMedia]=\\\"applicationSingleMedia\\\"\\r\\n            [originalAttachmentDocuments]=\\\"originalAttachmentDocuments\\\"\\r\\n            [revisionAttachmentDocuments]=\\\"revisionAttachmentDocuments\\\"\\r\\n            [complianceAttachmentDocuments]=\\\"complianceAttachmentDocuments\\\"\\r\\n            [isDisableFieldOnUpdate]=\\\"isDisableFieldOnUpdate\\\"\\r\\n            [supportiveDocumentList]=\\\"supportiveDocumentList\\\"\\r\\n            (checkSingleMediaChangesFunction)=\\\"checkSingleMediaChanges()\\\"\\r\\n            (checkMultimediaChangesFunction)=\\\"checkEmittedMultimedia($event)\\\"\\r\\n            [toDeleteMultimediaList]=\\\"toDeleteMultimediaList\\\"\\r\\n            [savedTypeOfMedium]=\\\"s1Application?.typeOfMedium\\\"\\r\\n            (hasErrorFields)=\\\"hasErrorsMaterial = $event\\\"\\r\\n          >\\r\\n          </app-material-information>\\r\\n          <div *ngIf=\\\"!isDisableFieldOnUpdate\\\" class=\\\"required-fields-note\\\">\\r\\n            Note: Fields with * are required\\r\\n          </div>\\r\\n          <!-- <mat-action-row>\\r\\n            <button mat-button color=\\\"primary\\\" (click)=\\\"accordionDisablingFunction()\\\">Next</button>\\r\\n          </mat-action-row> -->\\r\\n        </mat-expansion-panel>\\r\\n\\r\\n        <!-- PREVIEW FOR APPLICANT ONCE SUBMITTED -->\\r\\n        <mat-expansion-panel\\r\\n          *ngIf=\\\"isApplicant && s1Application?.internalStatus != undefined\\\"\\r\\n          [expanded]=\\\"\\r\\n            isApplicant &&\\r\\n            (s1Application?.externalStatus == 'S1_APPLICATION_SUBMITTED' ||\\r\\n              s1Application?.externalStatus == 'S1_APPLICATION_IN_PROCESS' ||\\r\\n              s1Application?.externalStatus ==\\r\\n                'SUBMITTED_DOCUMENT_FOR_COMPLIANCE' ||\\r\\n              s1Application?.externalStatus ==\\r\\n                'COMPLIANCE_DOCUMENT_FOR_REVIEW' ||\\r\\n              s1Application?.externalStatus == 'REVISION_REVIEW_IN_PROCESS' ||\\r\\n              s1Application?.externalStatus == 'SUBMITTED_REVISION' ||\\r\\n              s1Application?.externalStatus == 'S1_APPLICATION_CANCELLED' ||\\r\\n              s1Application?.externalStatus == 'S1_APPLICATION_REJECTED' ||\\r\\n              s1Application?.internalStatus == 'REVISION_SCREENED' ||\\r\\n              s1Application?.hasRevision ||\\r\\n              s1Application?.appliedS2)\\r\\n          \\\"\\r\\n        >\\r\\n          <mat-expansion-panel-header>\\r\\n            <mat-panel-title>\\r\\n              <i class=\\\"material-icons\\\">label_important</i> &nbsp;Preview\\r\\n            </mat-panel-title>\\r\\n            <mat-panel-description>\\r\\n              S1 Application\\r\\n              <i class=\\\"material-icons\\\">visibility</i>\\r\\n            </mat-panel-description>\\r\\n          </mat-expansion-panel-header>\\r\\n          <br />\\r\\n          <app-preview-application\\r\\n            [previewS1Application]=\\\"s1Application\\\"\\r\\n            [multimediaDTO]=\\\"multimediaDTO\\\"\\r\\n          ></app-preview-application>\\r\\n        </mat-expansion-panel>\\r\\n      </mat-accordion>\\r\\n      <!-- </form> -->\\r\\n\\r\\n      <!-- COMMENTS FOR ASC Users -->\\r\\n      <div *ngIf=\\\"s1Application?.externalStatus != undefined && !isApplicant\\\">\\r\\n        <br />\\r\\n        <div class=\\\"row fields\\\">\\r\\n          <h4><i class=\\\"material-icons\\\">label_important</i> &nbsp;Comments</h4>\\r\\n          <br />\\r\\n          <app-comment [commentS1Application]=\\\"s1Application\\\"></app-comment>\\r\\n          <div class=\\\"row\\\"><br /></div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <!-- ATTACHMENTS FOR STAMPED MATERIAL AND DECISION FORM -->\\r\\n      <div\\r\\n        *ngIf=\\\"\\r\\n          (isAdmin || isSuperAdmin || isApplicant || isAdSpecialist) &&\\r\\n          previewAttachmentsList.length\\r\\n        \\\"\\r\\n      >\\r\\n        <br />\\r\\n        <div class=\\\"row fields\\\">\\r\\n          <h4>\\r\\n            <i class=\\\"material-icons\\\">label_important</i> &nbsp;Stamped Material\\r\\n            and Decision Forms\\r\\n          </h4>\\r\\n          <br />\\r\\n          <app-preview-attachments\\r\\n            [previewAttachmentsList]=\\\"previewAttachmentsList\\\"\\r\\n            [displayedColumns]=\\\"previewAttachmentsDisplayedColumns\\\"\\r\\n            [dataSource]=\\\"previewAttachmentsListDataSource\\\"\\r\\n          ></app-preview-attachments>\\r\\n          <div class=\\\"row\\\"><br /></div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <!-- DECISION OVERRIDE / APPEAL -->\\r\\n      <!-- <div *ngIf=\\\"(isAdmin || isSuperAdmin) &&\\r\\n      s1Application?.internalStatus === 'S1_APPLICATION_REVIEWED' && s1Application?.releaseStatus === 'RELEASED' &&\\r\\n      !s1Application?.appliedS2 && !s1Application?.hasOngoingCompliance && !s1Application?.hasOngoingRevision\\\">\\r\\n        <br>\\r\\n        <div class=\\\"row fields\\\">\\r\\n          <h4>\\r\\n            <i class=\\\"material-icons\\\">label_important</i> &nbsp;DECISION OVERRIDING\\r\\n          </h4>\\r\\n          <br>\\r\\n          <app-decision-override [s1Application]=\\\"s1Application\\\"></app-decision-override>\\r\\n          <div class=\\\"row\\\"><br></div>\\r\\n        </div>\\r\\n      </div> -->\\r\\n\\r\\n      <div class=\\\"row\\\"><br /></div>\\r\\n\\r\\n      <div\\r\\n        class=\\\"row\\\"\\r\\n        [formGroup]=\\\"s1ApplicationForm\\\"\\r\\n        *ngIf=\\\"\\r\\n          s1Application.internalStatus == undefined ||\\r\\n          s1Application.internalStatus == 'SAVED' ||\\r\\n          s1Application?.formType === 'MULTIPLE' ||\\r\\n          specialApplicationType.includes(\\r\\n            s1Application?.applicationType?.description?.toUpperCase()\\r\\n          )\\r\\n        \\\"\\r\\n      >\\r\\n        <div\\r\\n          *ngIf=\\\"\\r\\n            (s1Application.internalStatus == undefined ||\\r\\n              s1Application.internalStatus == 'SAVED') &&\\r\\n            (s1Application?.formType === 'MULTIPLE' ||\\r\\n              specialApplicationType.includes(\\r\\n                s1Application?.applicationType?.description?.toUpperCase()\\r\\n              ))\\r\\n          \\\"\\r\\n        >\\r\\n          <br />\\r\\n          <div class=\\\"row fields\\\">\\r\\n            <h4>\\r\\n              <i class=\\\"material-icons\\\">calendar_today</i> &nbsp; Submission\\r\\n              Details\\r\\n            </h4>\\r\\n            <div class=\\\"row\\\">\\r\\n              <p>\\r\\n                Date S1 Form(s) will be submitted:\\r\\n                <b>\\r\\n                  <span\\r\\n                    class=\\\"submission-date\\\"\\r\\n                    *ngIf=\\\"applicationRequest?.status !== 'DISAPPROVED'\\\"\\r\\n                    >{{\\r\\n                      s1Application?.submissionDate | date: \\\"MMMM d, y\\\"\\r\\n                    }}</span\\r\\n                  >\\r\\n                  <span\\r\\n                    class=\\\"submission-date\\\"\\r\\n                    *ngIf=\\\"applicationRequest?.status === 'DISAPPROVED'\\\"\\r\\n                    >N/A - Request was disapproved</span\\r\\n                  >\\r\\n\\r\\n                  <input\\r\\n                    matInput\\r\\n                    [(ngModel)]=\\\"s1Application.submissionDate\\\"\\r\\n                    formControlName=\\\"submissionDate\\\"\\r\\n                    name=\\\"submissionDate\\\"\\r\\n                    [hidden]=\\\"true\\\"\\r\\n                  />\\r\\n                  <input\\r\\n                    matInput\\r\\n                    [(ngModel)]=\\\"s1Application.applicationRequest\\\"\\r\\n                    formControlName=\\\"applicationRequest\\\"\\r\\n                    name=\\\"applicationRequest\\\"\\r\\n                    [hidden]=\\\"true\\\"\\r\\n                  />\\r\\n                </b>\\r\\n              </p>\\r\\n              <div\\r\\n                class=\\\"col-md-12\\\"\\r\\n                *ngIf=\\\"!s1Application.applicationRequest\\\"\\r\\n                [hidden]=\\\"s1Application?.multipleApplication\\\"\\r\\n              >\\r\\n                <mat-card class=\\\"demo-inline-calendar-card\\\">\\r\\n                  <mat-calendar\\r\\n                    [(selected)]=\\\"s1Application.submissionDate\\\"\\r\\n                    [minDate]=\\\"todayDate\\\"\\r\\n                    [dateFilter]=\\\"disabledWeekEnds\\\"\\r\\n                    (selectedChange)=\\\"\\r\\n                      onChangeDate(s1Application.submissionDate)\\r\\n                    \\\"\\r\\n                  >\\r\\n                  </mat-calendar>\\r\\n                </mat-card>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div\\r\\n          *ngIf=\\\"\\r\\n            (s1Application.internalStatus == undefined ||\\r\\n              s1Application.internalStatus == 'SAVED') &&\\r\\n            s1Application?.formType !== 'MULTIPLE' &&\\r\\n            !s1Application.multipleApplication &&\\r\\n            !specialApplicationType.includes(\\r\\n              s1Application?.applicationType?.description?.toUpperCase()\\r\\n            )\\r\\n          \\\"\\r\\n        >\\r\\n          <mat-slide-toggle\\r\\n            color=\\\"warn\\\"\\r\\n            checked\\r\\n            (change)=\\\"scheduleSubmission()\\\"\\r\\n            *ngIf=\\\"s1Application.autoSubmit == true\\\"\\r\\n          >\\r\\n            <b>SCHEDULE SUBMISSION</b>\\r\\n          </mat-slide-toggle>\\r\\n          <mat-slide-toggle\\r\\n            color=\\\"warn\\\"\\r\\n            (change)=\\\"scheduleSubmission()\\\"\\r\\n            *ngIf=\\\"s1Application.autoSubmit != true\\\"\\r\\n          >\\r\\n            <b>SCHEDULE SUBMISSION</b>\\r\\n          </mat-slide-toggle>\\r\\n          <div class=\\\"row\\\"><br /></div>\\r\\n\\r\\n          <div class=\\\"row fields\\\" *ngIf=\\\"isChecked == true\\\">\\r\\n            <h4>\\r\\n              <i class=\\\"material-icons\\\">schedule_send</i> &nbsp; Submission\\r\\n              Details:\\r\\n            </h4>\\r\\n            <div class=\\\"row\\\">\\r\\n              <mat-form-field appearance=\\\"outline\\\" class=\\\"col-md-6\\\">\\r\\n                <mat-label>Date</mat-label>\\r\\n                <input\\r\\n                  matInput\\r\\n                  placeholder=\\\"Date\\\"\\r\\n                  [matDatepicker]=\\\"dp3\\\"\\r\\n                  [min]=\\\"todayDate\\\"\\r\\n                  (dateChange)=\\\"onChangeDate($event.value)\\\"\\r\\n                  [matDatepickerFilter]=\\\"disabledWeekEnds\\\"\\r\\n                  readonly\\r\\n                  [(ngModel)]=\\\"s1Application.submissionDate\\\"\\r\\n                  name=\\\"submissionDate\\\"\\r\\n                  formControlName=\\\"submissionDate\\\"\\r\\n                />\\r\\n                <mat-datepicker-toggle\\r\\n                  matSuffix\\r\\n                  [for]=\\\"dp3\\\"\\r\\n                ></mat-datepicker-toggle>\\r\\n                <mat-datepicker\\r\\n                  color=\\\"warn\\\"\\r\\n                  #dp3\\r\\n                  disabled=\\\"false\\\"\\r\\n                ></mat-datepicker>\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row\\\"><br /></div>\\r\\n      <hr />\\r\\n\\r\\n      <!-- For screener/Reviewer only -->\\r\\n      <div\\r\\n        class=\\\"row\\\"\\r\\n        [formGroup]=\\\"s1ApplicationForm\\\"\\r\\n        *ngIf=\\\"\\r\\n          (isScreener &&\\r\\n            (s1Application?.internalStatus ===\\r\\n              'S1_APPLICATION_VERIFIED_BY_AD_SPE' ||\\r\\n              s1Application?.internalStatus ===\\r\\n                'COMPLIANCE_DOCUMENT_VERIFIED_BY_AD_SPE' ||\\r\\n              s1Application?.internalStatus === 'REVISION_VERIFIED_BY_AD_SPE' ||\\r\\n              s1Application?.internalStatus === 'S1_APPLICATION_SCREENED' ||\\r\\n              s1Application?.screenerDecisionComment)) ||\\r\\n          (isReviewer &&\\r\\n            (s1Application.internalStatus === 'S1_APPLICATION_SCREENED' ||\\r\\n              s1Application?.internalStatus ===\\r\\n                'COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER' ||\\r\\n              s1Application?.internalStatus === 'REVISION_SCREENED' ||\\r\\n              s1Application?.internalStatus === 'S1_APPLICATION_REVIEWED' ||\\r\\n              s1Application?.reviewerDecisionComment)) ||\\r\\n          (isAdSpecialist && s1Application?.hasOngoingAppeal)\\r\\n        \\\"\\r\\n      >\\r\\n        <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\">\\r\\n          <mat-label>Decision:</mat-label>\\r\\n          <mat-select\\r\\n            [(ngModel)]=\\\"s1Application.decisionStatus\\\"\\r\\n            name=\\\"decisionStatus\\\"\\r\\n            formControlName=\\\"decisionStatus\\\"\\r\\n            (click)=\\\"clearDecisionStatus()\\\"\\r\\n            (selectionChange)=\\\"buttonValidation($event.value)\\\"\\r\\n          >\\r\\n            <mat-option value=\\\"APPROVED\\\">APPROVED FOR PRODUCTION</mat-option>\\r\\n            <mat-option value=\\\"APPROVED W/ CAUTION\\\"\\r\\n              >APPROVED WITH CAUTION</mat-option\\r\\n            >\\r\\n            <mat-option value=\\\"INCOMPLETE\\\">INCOMPLETE</mat-option>\\r\\n            <mat-option value=\\\"DISAPPROVED\\\">DISAPPROVED</mat-option>\\r\\n            <!-- <mat-option value=\\\"REFER TO PANEL\\\">REFER TO PANEL</mat-option> -->\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n\\r\\n      <!-- For AdSpe only -->\\r\\n      <span\\r\\n        *ngIf=\\\"\\r\\n          isAdSpecialist &&\\r\\n          s1Application?.assignedUser?.userRole.name === 'ROLE_SCREENER' &&\\r\\n          (s1Application?.internalStatus ===\\r\\n            'S1_APPLICATION_VERIFIED_BY_AD_SPE' ||\\r\\n            s1Application?.internalStatus ===\\r\\n              'COMPLIANCE_DOCUMENT_VERIFIED_BY_AD_SPE' ||\\r\\n            s1Application?.internalStatus === 'REVISION_VERIFIED_BY_AD_SPE')\\r\\n        \\\"\\r\\n        ><b class=\\\"material-icons\\\">error_outline</b>&nbsp;\\r\\n        <b>Assigned Screener:</b>\\r\\n        {{ s1Application?.assignedScreener?.firstName }}\\r\\n        {{ s1Application?.assignedScreener?.lastName }}\\r\\n        <br />\\r\\n        <br />\\r\\n      </span>\\r\\n\\r\\n      <b\\r\\n        *ngIf=\\\"\\r\\n          s1Application.submissionType === 'ORIGINAL' &&\\r\\n          isAdSpecialist &&\\r\\n          s1Application?.multipleApplication &&\\r\\n          s1Application?.multipleApplication?.countVerifiedApplicationForm !==\\r\\n            s1Application?.multipleApplication?.actualNumberOfApplicationForm -\\r\\n              1\\r\\n        \\\"\\r\\n        [hidden]=\\\"\\r\\n          s1Application?.internalStatus ===\\r\\n            'S1_APPLICATION_VERIFIED_BY_AD_SPE' ||\\r\\n          s1Application?.decisionStatus === 'INCOMPLETE'\\r\\n        \\\"\\r\\n      >\\r\\n        <b class=\\\"material-icons\\\">error_outline</b> Selection of Screener will\\r\\n        be done in the last form of multiple application.\\r\\n        <br />\\r\\n        <br />\\r\\n      </b>\\r\\n\\r\\n      <b\\r\\n        [hidden]=\\\"\\r\\n          s1Application.submissionType === 'ORIGINAL' &&\\r\\n          s1Application?.multipleApplication &&\\r\\n          s1Application?.multipleApplication?.countVerifiedApplicationForm !==\\r\\n            s1Application?.multipleApplication?.actualNumberOfApplicationForm -\\r\\n              1\\r\\n        \\\"\\r\\n        *ngIf=\\\"\\r\\n          isAdSpecialist &&\\r\\n          (s1Application.internalStatus ==\\r\\n            'S1_APPLICATION_VERIFIED_BY_ENCODER' ||\\r\\n            s1Application.internalStatus ==\\r\\n              'S1_APPLICATION_VERIFIED_BY_AD_SPE' ||\\r\\n            s1Application.internalStatus ==\\r\\n              'COMPLIANCE_DOCUMENT_VERIFIED_BY_ENCODER' ||\\r\\n            s1Application.internalStatus ==\\r\\n              'COMPLIANCE_DOCUMENT_VERIFIED_BY_AD_SPE' ||\\r\\n            s1Application.internalStatus == 'REVISION_VERIFIED_BY_ENCODER' ||\\r\\n            s1Application.internalStatus == 'REVISION_VERIFIED_BY_AD_SPE')\\r\\n        \\\"\\r\\n      >\\r\\n        <b class=\\\"material-icons\\\">error_outline</b> [ x ] are the number of\\r\\n        assigned S1 applications to the Screener.\\r\\n        <br />\\r\\n      </b>\\r\\n\\r\\n      <mat-form-field\\r\\n        class=\\\"col-md-6\\\"\\r\\n        appearance=\\\"outline\\\"\\r\\n        [hidden]=\\\"\\r\\n          s1Application.submissionType === 'ORIGINAL' &&\\r\\n          s1Application?.multipleApplication &&\\r\\n          s1Application?.decisionStatus !== 'INCOMPLETE' &&\\r\\n          s1Application?.multipleApplication?.countVerifiedApplicationForm !==\\r\\n            s1Application?.multipleApplication?.actualNumberOfApplicationForm -\\r\\n              1 &&\\r\\n          s1Application.internalStatus !== 'S1_APPLICATION_VERIFIED_BY_AD_SPE'\\r\\n        \\\"\\r\\n        *ngIf=\\\"\\r\\n          isAdSpecialist &&\\r\\n          (s1Application.internalStatus ==\\r\\n            'S1_APPLICATION_VERIFIED_BY_ENCODER' ||\\r\\n            s1Application.internalStatus ==\\r\\n              'S1_APPLICATION_VERIFIED_BY_AD_SPE' ||\\r\\n            s1Application.internalStatus ==\\r\\n              'COMPLIANCE_DOCUMENT_VERIFIED_BY_ENCODER' ||\\r\\n            s1Application.internalStatus ==\\r\\n              'COMPLIANCE_DOCUMENT_VERIFIED_BY_AD_SPE' ||\\r\\n            s1Application.internalStatus == 'REVISION_VERIFIED_BY_ENCODER' ||\\r\\n            s1Application.internalStatus == 'REVISION_VERIFIED_BY_AD_SPE')\\r\\n        \\\"\\r\\n      >\\r\\n        <mat-label>ASSIGN A SCREENER</mat-label>\\r\\n        <mat-select\\r\\n          [(ngModel)]=\\\"s1Application.assignedScreener\\\"\\r\\n          name=\\\"assignedScreener\\\"\\r\\n          (selectionChange)=\\\"buttonValidation($event.value)\\\"\\r\\n          [compareWith]=\\\"compareAssignedScreener\\\"\\r\\n        >\\r\\n          <mat-option *ngFor=\\\"let i of screenerList\\\" [value]=\\\"i\\\">\\r\\n            {{ i.firstName }} {{ i.lastName }}\\r\\n            <span style=\\\"float: right\\\">[ {{ i.ctr }} ]</span>\\r\\n          </mat-option>\\r\\n        </mat-select>\\r\\n      </mat-form-field>\\r\\n\\r\\n      <!-- For Screener only -->\\r\\n      <span\\r\\n        *ngIf=\\\"\\r\\n          s1Application.submissionType === 'ORIGINAL' &&\\r\\n          isScreener &&\\r\\n          s1Application?.actionStatus === 'ASSIGN_TO_REVIEWER'\\r\\n        \\\"\\r\\n        ><b class=\\\"material-icons\\\">error_outline</b>&nbsp;\\r\\n        <b>Assigned Reviewer:</b>\\r\\n        {{\\r\\n          s1Application?.multipleApplication\\r\\n            ? s1Application?.multipleApplication?.assignedReviewer?.firstName\\r\\n            : s1Application?.assignedUser?.firstName\\r\\n        }}\\r\\n        {{\\r\\n          s1Application?.multipleApplication\\r\\n            ? s1Application?.multipleApplication?.assignedReviewer?.lastName\\r\\n            : s1Application?.assignedUser?.lastName\\r\\n        }}\\r\\n        <br />\\r\\n        <br />\\r\\n      </span>\\r\\n\\r\\n      <b\\r\\n        *ngIf=\\\"\\r\\n          s1Application.submissionType === 'ORIGINAL' &&\\r\\n          isScreener &&\\r\\n          s1Application?.multipleApplication &&\\r\\n          s1Application?.multipleApplication?.countVerifiedApplicationForm !==\\r\\n            s1Application?.multipleApplication?.actualNumberOfApplicationForm -\\r\\n              1\\r\\n        \\\"\\r\\n        [hidden]=\\\"\\r\\n          s1Application?.internalStatus === 'S1_APPLICATION_SCREENED' ||\\r\\n          s1Application?.screenerDecisionComment ||\\r\\n          s1Application?.reviewerDecisionComment ||\\r\\n          s1Application?.decisionStatus === 'INCOMPLETE'\\r\\n        \\\"\\r\\n      >\\r\\n        <b class=\\\"material-icons\\\">error_outline</b> Selection of Reviewer will\\r\\n        be done in the last form of multiple application.\\r\\n        <br />\\r\\n        <br />\\r\\n      </b>\\r\\n\\r\\n      <mat-form-field\\r\\n        class=\\\"col-md-6\\\"\\r\\n        appearance=\\\"outline\\\"\\r\\n        [hidden]=\\\"\\r\\n          !s1Application?.screenerDecisionComment &&\\r\\n          s1Application.submissionType === 'ORIGINAL' &&\\r\\n          s1Application?.multipleApplication &&\\r\\n          s1Application?.multipleApplication?.countVerifiedApplicationForm !==\\r\\n            s1Application?.multipleApplication?.actualNumberOfApplicationForm -\\r\\n              1 &&\\r\\n          s1Application.internalStatus !== 'S1_APPLICATION_SCREENED'\\r\\n        \\\"\\r\\n        *ngIf=\\\"\\r\\n          isScreener &&\\r\\n          (s1Application?.internalStatus ===\\r\\n            'S1_APPLICATION_VERIFIED_BY_AD_SPE' ||\\r\\n            s1Application?.internalStatus === 'S1_APPLICATION_SCREENED' ||\\r\\n            s1Application?.screenerDecisionComment ||\\r\\n            s1Application?.reviewerDecisionComment)\\r\\n        \\\"\\r\\n      >\\r\\n        <mat-label>ASSIGN A REVIEWER</mat-label>\\r\\n        <mat-select\\r\\n          name=\\\"assignedUserR\\\"\\r\\n          [(ngModel)]=\\\"s1Application.assignedReviewer\\\"\\r\\n          (selectionChange)=\\\"buttonValidation('')\\\"\\r\\n          [compareWith]=\\\"compareAssignedReviewer\\\"\\r\\n        >\\r\\n          <mat-option *ngFor=\\\"let i of reviewerList\\\" [value]=\\\"i\\\">\\r\\n            {{ i.firstName }} {{ i.lastName }}\\r\\n          </mat-option>\\r\\n        </mat-select>\\r\\n      </mat-form-field>\\r\\n\\r\\n      <!-- For screener/Reviewer only -->\\r\\n      <div\\r\\n        class=\\\"row\\\"\\r\\n        [formGroup]=\\\"s1ApplicationForm\\\"\\r\\n        *ngIf=\\\"\\r\\n          (isScreener &&\\r\\n            (s1Application?.internalStatus ===\\r\\n              'S1_APPLICATION_VERIFIED_BY_AD_SPE' ||\\r\\n              s1Application?.internalStatus ===\\r\\n                'COMPLIANCE_DOCUMENT_VERIFIED_BY_AD_SPE' ||\\r\\n              s1Application?.internalStatus === 'REVISION_VERIFIED_BY_AD_SPE' ||\\r\\n              s1Application?.internalStatus === 'S1_APPLICATION_SCREENED' ||\\r\\n              s1Application?.screenerDecisionComment)) ||\\r\\n          (isReviewer &&\\r\\n            (s1Application.internalStatus === 'S1_APPLICATION_SCREENED' ||\\r\\n              s1Application?.internalStatus ===\\r\\n                'COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER' ||\\r\\n              s1Application?.internalStatus === 'REVISION_SCREENED' ||\\r\\n              s1Application?.internalStatus === 'S1_APPLICATION_REVIEWED' ||\\r\\n              s1Application?.reviewerDecisionComment))\\r\\n        \\\"\\r\\n      >\\r\\n        <div class=\\\"rational-other-comment\\\">\\r\\n          <div\\r\\n            class=\\\"col-md-6 rationale\\\"\\r\\n            *ngIf=\\\"rationaleDisplay\\\"\\r\\n            [hidden]=\\\"\\r\\n              rationaleLists?.length === 0 && rationaleOthersList?.length === 0\\r\\n            \\\"\\r\\n          >\\r\\n            <label>RATIONALE</label>\\r\\n            <div class=\\\"rationale-list\\\" [hidden]=\\\"rationaleLists?.length === 0\\\">\\r\\n              <label>Rationale List:</label>\\r\\n              <div *ngFor=\\\"let i of rationaleLists\\\">\\r\\n                <p>\\r\\n                  <span class=\\\"material-icons\\\">help</span>\\r\\n                  {{ i?.typeOfRationale?.rationale }}\\r\\n                </p>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div\\r\\n              class=\\\"rational-other-comment\\\"\\r\\n              [hidden]=\\\"rationaleOthersList?.length === 0\\\"\\r\\n            >\\r\\n              <label>Other comments:</label>\\r\\n              <p *ngFor=\\\"let i of rationaleOthersList\\\">\\r\\n                <span class=\\\"material-icons\\\" [hidden]=\\\"i?.others === ''\\\"\\r\\n                  >help</span\\r\\n                >\\r\\n                {{ i?.others }}\\r\\n              </p>\\r\\n            </div>\\r\\n          </div>\\r\\n          <br />\\r\\n        </div>\\r\\n\\r\\n        <mat-form-field\\r\\n          class=\\\"col-md-6\\\"\\r\\n          appearance=\\\"outline\\\"\\r\\n          [hidden]=\\\"\\r\\n            s1Application.submissionType === 'ORIGINAL' &&\\r\\n            s1Application?.multipleApplication &&\\r\\n            s1Application?.multipleApplication?.countVerifiedApplicationForm !==\\r\\n              s1Application?.multipleApplication\\r\\n                ?.actualNumberOfApplicationForm -\\r\\n                1\\r\\n          \\\"\\r\\n          *ngIf=\\\"\\r\\n            !applicationSingleMedia?.mediumExecution?.typeOfExecution\\r\\n              ?.applyForToa &&\\r\\n            applicationSingleMedia?.mediumExecution?.typeOfExecution?.live\\r\\n          \\\"\\r\\n        >\\r\\n          <mat-label>Choose validity date</mat-label>\\r\\n          <input\\r\\n            matInput\\r\\n            placeholder=\\\"Date\\\"\\r\\n            [matDatepicker]=\\\"validityDate\\\"\\r\\n            readonly\\r\\n            [min]=\\\"todayDate\\\"\\r\\n            [(ngModel)]=\\\"s1Application.validUntil\\\"\\r\\n            name=\\\"expiresOn\\\"\\r\\n            formControlName=\\\"validityDate\\\"\\r\\n            [readonly]=\\\"true\\\"\\r\\n          />\\r\\n          <mat-datepicker-toggle matSuffix [for]=\\\"validityDate\\\">\\r\\n            <mat-datepicker color=\\\"warn\\\" #validityDate></mat-datepicker>\\r\\n          </mat-datepicker-toggle>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n          <!-- ADMIN / SUPERADMIN - RELEASED -->\\r\\n          <button\\r\\n            mat-raised-button\\r\\n            class=\\\"button-red\\\"\\r\\n            (click)=\\\"resendDecision()\\\"\\r\\n            *ngIf=\\\"\\r\\n              s1Application?.releaseStatus === 'RELEASED' &&\\r\\n              (isAdmin || isSuperAdmin)\\r\\n            \\\"\\r\\n          >\\r\\n            <i class=\\\"material-icons color__white\\\">send</i> RESEND DECISION\\r\\n          </button>\\r\\n\\r\\n          <!-- ADMIN / SUPERADMIN -->\\r\\n          <!-- wala talaga function isa kasi pang mat tool tip lang - start -->\\r\\n          <button\\r\\n            mat-raised-button\\r\\n            class=\\\"button-red\\\"\\r\\n            *ngIf=\\\"\\r\\n              (isAdmin || isSuperAdmin) &&\\r\\n              (!applicationSingleMedia?.sizeLength ||\\r\\n                +applicationSingleMedia?.sizeLength === +currentSizeLength) &&\\r\\n              !hasMultimediaLengthChange &&\\r\\n              (s1Application?.decisionStatus === 'APPROVED' ||\\r\\n                s1Application?.decisionStatus === 'APPROVED_WITH_CAUTION')\\r\\n            \\\"\\r\\n            matTooltip=\\\"To enable this button, change the size/length of the application\\\"\\r\\n          >\\r\\n            <i class=\\\"material-icons color__white\\\">assignment_return</i>\\r\\n            &nbsp;SUBMIT FOR MODIFICATION\\r\\n          </button>\\r\\n          <button\\r\\n            mat-raised-button\\r\\n            class=\\\"button-red\\\"\\r\\n            (click)=\\\"resubmitApplication()\\\"\\r\\n            *ngIf=\\\"\\r\\n              (isAdmin || isSuperAdmin) &&\\r\\n              ((applicationSingleMedia?.sizeLength &&\\r\\n                +applicationSingleMedia?.sizeLength !== +currentSizeLength) ||\\r\\n                hasMultimediaLengthChange) &&\\r\\n              (s1Application?.decisionStatus === 'APPROVED' ||\\r\\n                s1Application?.decisionStatus === 'APPROVED_WITH_CAUTION')\\r\\n            \\\"\\r\\n          >\\r\\n            <i class=\\\"material-icons color__white\\\">assignment_return</i>\\r\\n            &nbsp;SUBMIT FOR MODIFICATION\\r\\n          </button>\\r\\n          <!-- wala talaga function isa kasi pang mat tool tip lang - end -->\\r\\n\\r\\n          <!-- ADMIN / SUPERADMIN - RELEASED -->\\r\\n          <button\\r\\n            mat-raised-button\\r\\n            class=\\\"button-red\\\"\\r\\n            (click)=\\\"submitAppeal()\\\"\\r\\n            *ngIf=\\\"\\r\\n              (isAdmin || isSuperAdmin) &&\\r\\n              s1Application?.internalStatus === 'S1_APPLICATION_REVIEWED' &&\\r\\n              s1Application?.releaseStatus === 'RELEASED' &&\\r\\n              !s1Application?.appliedS2 &&\\r\\n              !s1Application?.hasOngoingCompliance &&\\r\\n              !s1Application?.hasOngoingRevision &&\\r\\n              !s1Application?.hasOngoingAppeal\\r\\n            \\\"\\r\\n          >\\r\\n            <i class=\\\"material-icons color__white\\\">report_gmailerrorred</i>\\r\\n            &nbsp;RETURN TO ADSPE FOR APPEAL\\r\\n          </button>\\r\\n\\r\\n          <!-- APPEAL - ADSPE -->\\r\\n          <button\\r\\n            mat-raised-button\\r\\n            class=\\\"button-red\\\"\\r\\n            (click)=\\\"submitAppeal()\\\"\\r\\n            *ngIf=\\\"isAdSpecialist && s1Application?.hasOngoingAppeal\\\"\\r\\n          >\\r\\n            <i class=\\\"material-icons color__white\\\">report_gmailerrorred</i>\\r\\n            &nbsp;VERIFY APPEAL\\r\\n          </button>\\r\\n\\r\\n          <!-- ADSPE / ADMIN / SUPERADMIN - FOR RELEASE -->\\r\\n          <button\\r\\n            mat-raised-button\\r\\n            class=\\\"button-red\\\"\\r\\n            (click)=\\\"returnToScreener()\\\"\\r\\n            *ngIf=\\\"\\r\\n              (isAdSpecialist || isAdmin || isSuperAdmin) &&\\r\\n              s1Application?.internalStatus === 'S1_APPLICATION_REVIEWED' &&\\r\\n              s1Application?.releaseStatus === 'FOR_RELEASE'\\r\\n            \\\"\\r\\n          >\\r\\n            <i class=\\\"material-icons color__white\\\">assignment_return</i>\\r\\n            &nbsp;RETURN TO SCREENER\\r\\n          </button>\\r\\n\\r\\n          <!-- screenerDecisionComment -->\\r\\n          <button\\r\\n            mat-raised-button\\r\\n            class=\\\"button-red\\\"\\r\\n            (click)=\\\"submitDecisionAndComment()\\\"\\r\\n            *ngIf=\\\"isScreener && s1Application?.screenerDecisionComment\\\"\\r\\n          >\\r\\n            <i class=\\\"material-icons color__white\\\">fact_check</i> SCREENED\\r\\n          </button>\\r\\n\\r\\n          <!-- reviewerDecisionComment -->\\r\\n          <button\\r\\n            mat-raised-button\\r\\n            class=\\\"button-red\\\"\\r\\n            (click)=\\\"submitDecisionAndComment()\\\"\\r\\n            *ngIf=\\\"isReviewer && s1Application?.reviewerDecisionComment\\\"\\r\\n          >\\r\\n            <i class=\\\"material-icons color__white\\\">assignment_turned_in</i>\\r\\n            REVIEWED\\r\\n          </button>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <!-- //////////////////////////////////////// ORIGINAL //////////////////////////////////////////////////////////// -->\\r\\n      <div\\r\\n        class=\\\"row\\\"\\r\\n        *ngIf=\\\"\\r\\n          s1Application?.internalStatus == undefined ||\\r\\n          s1Application?.internalStatus == 'SAVED' ||\\r\\n          s1Application?.status == 'APPROVED'\\r\\n        \\\"\\r\\n      >\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n          <!-- <button mat-raised-button color=\\\"primary\\\" (click)=\\\"saveOrUpdateApplication('SAVED')\\\" -->\\r\\n          <button\\r\\n            mat-raised-button\\r\\n            color=\\\"primary\\\"\\r\\n            (click)=\\\"checkAscRateBeforeSaveOrSubmit()\\\"\\r\\n            *ngIf=\\\"!isEvaluator\\\"\\r\\n            [disabled]=\\\"\\r\\n              s1Application?.formType === 'MULTIPLE'\\r\\n                ? isMultipleRegularDisabled()\\r\\n                : isSingleRegularDisabled()\\r\\n            \\\"\\r\\n          >\\r\\n            <i class=\\\"material-icons color__white\\\">offline_pin</i> SAVE\\r\\n          </button>\\r\\n          &nbsp;\\r\\n          <!-- (click)=\\\"saveStatus('presentor', 'submit', 'S1_APPLICATION_SUBMITTED')\\\" -->\\r\\n          <button\\r\\n            mat-raised-button\\r\\n            class=\\\"button-red\\\"\\r\\n            (click)=\\\"checkAscRateBeforeSaveOrSubmit('submit')\\\"\\r\\n            [hidden]=\\\"\\r\\n              specialApplicationType.includes(\\r\\n                s1Application?.applicationType?.description?.toUpperCase()\\r\\n              )\\r\\n            \\\"\\r\\n            [disabled]=\\\"\\r\\n              s1Application?.formType === 'MULTIPLE'\\r\\n                ? isMultipleRegularDisabled()\\r\\n                : isSingleRegularDisabled()\\r\\n            \\\"\\r\\n          >\\r\\n            <i class=\\\"material-icons color__white\\\">send</i> SUBMIT\\r\\n          </button>\\r\\n\\r\\n          <button\\r\\n            *ngIf=\\\"\\r\\n              specialApplicationType.includes(\\r\\n                s1Application?.applicationType?.description?.toUpperCase()\\r\\n              ) &&\\r\\n              !applicationRequest?.status &&\\r\\n              s1Application.applicationRequest == null\\r\\n            \\\"\\r\\n            mat-raised-button\\r\\n            class=\\\"button-red\\\"\\r\\n            (click)=\\\"requestSpecialS1ApplicationApproval()\\\"\\r\\n            [disabled]=\\\"isSaveAndRequestForApprovalDisabled() \\\"\\r\\n          >\\r\\n            <i class=\\\"material-icons color__white\\\">send</i> REQUEST FOR APPROVAL\\r\\n          </button>\\r\\n        </div>\\r\\n\\r\\n        <!-- <div class=\\\"col-md-12\\\" *ngIf=\\\"(s1Application?.formType === 'MULTIPLE' && !s1Application.multipleApplication) \\\">\\r\\n          <button mat-raised-button class=\\\"button-red\\\" (click)=\\\"saveOrUpdateApplication('S1_APPLICATION_SUBMITTED')\\\"\\r\\n            [disabled]=\\\"!s1Application?.adTitle || !s1Application.submissionDate\\\">\\r\\n            <i class=\\\"material-icons color__white\\\">send</i> REQUEST FOR APPROVAL\\r\\n          </button>\\r\\n        </div> -->\\r\\n      </div>\\r\\n\\r\\n      <div\\r\\n        class=\\\"row\\\"\\r\\n        *ngIf=\\\"\\r\\n          isApplicant &&\\r\\n          s1Application?.internalStatus == 'S1_APPLICATION_SUBMITTED'\\r\\n        \\\"\\r\\n      >\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n          <button\\r\\n            mat-raised-button\\r\\n            class=\\\"button-red\\\"\\r\\n            (click)=\\\"\\r\\n              saveStatus('presentor', 'cancel', 'S1_APPLICATION_CANCELLED')\\r\\n            \\\"\\r\\n          >\\r\\n            <i class=\\\"material-icons color__white\\\">cancel</i> CANCEL APPLICATION\\r\\n          </button>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div\\r\\n        class=\\\"row\\\"\\r\\n        *ngIf=\\\"\\r\\n          isEvaluator &&\\r\\n          s1Application.internalStatus == 'S1_APPLICATION_SUBMITTED'\\r\\n        \\\"\\r\\n      >\\r\\n        <b\\r\\n          class=\\\"warning-msg\\\"\\r\\n          *ngIf=\\\"\\r\\n            s1Application?.company?.status === 'FOR_APPROVAL' ||\\r\\n            s1Application?.brand?.status === 'FOR_APPROVAL' ||\\r\\n            s1Application?.product?.status === 'FOR_APPROVAL'\\r\\n          \\\"\\r\\n        >\\r\\n          <b class=\\\"material-icons\\\">error_outline</b> New Company / Brand /\\r\\n          Product must be approved first before you can forward the application.\\r\\n        </b>\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n          <button\\r\\n            mat-raised-button\\r\\n            class=\\\"button-red\\\"\\r\\n            [disabled]=\\\"\\r\\n              s1Application?.company?.status === 'FOR_APPROVAL' ||\\r\\n              s1Application?.brand?.status === 'FOR_APPROVAL' ||\\r\\n              s1Application?.product?.status === 'FOR_APPROVAL'\\r\\n            \\\"\\r\\n            (click)=\\\"\\r\\n              saveStatus(\\r\\n                'encoder',\\r\\n                'verify',\\r\\n                'S1_APPLICATION_VERIFIED_BY_ENCODER'\\r\\n              )\\r\\n            \\\"\\r\\n          >\\r\\n            <i class=\\\"material-icons color__white\\\">verified</i> FORWARD TO AD\\r\\n            SPECIALIST\\r\\n          </button>\\r\\n          &nbsp;\\r\\n          <button\\r\\n            mat-raised-button\\r\\n            class=\\\"button-red\\\"\\r\\n            (click)=\\\"rejectDisapprovedModal()\\\"\\r\\n          >\\r\\n            <!-- (click)=\\\"rejectDisapprovedModal('encoder', 'reject', 'S1_APPLICATION_REJECTED')\\\" -->\\r\\n            <i class=\\\"material-icons color__white\\\">unpublished</i> REJECT\\r\\n          </button>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <!-- MULTIPLE -->\\r\\n      <div\\r\\n        class=\\\"row\\\"\\r\\n        *ngIf=\\\"\\r\\n          s1Application.submissionType === 'ORIGINAL' &&\\r\\n          s1Application?.formType === 'MULTIPLE' &&\\r\\n          s1Application?.decisionStatus !== 'INCOMPLETE'\\r\\n        \\\"\\r\\n      >\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n          <ng-template [ngTemplateOutlet]=\\\"reAssignAdSpecialistTemp\\\"></ng-template>\\r\\n          <button\\r\\n            mat-raised-button\\r\\n            class=\\\"button-red\\\"\\r\\n            *ngIf=\\\"\\r\\n              isAdSpecialist &&\\r\\n              s1Application?.actionStatus === 'ASSIGN_TO_ADSPE'\\r\\n            \\\"\\r\\n            (click)=\\\"\\r\\n              saveStatus(\\r\\n                'ad-specialist',\\r\\n                'verify',\\r\\n                'S1_APPLICATION_VERIFIED_BY_AD_SPE'\\r\\n              )\\r\\n            \\\"\\r\\n          >\\r\\n            <i class=\\\"material-icons color__white\\\">verified</i> FORWARD TO\\r\\n            SCREENER\\r\\n          </button>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div\\r\\n        class=\\\"row\\\"\\r\\n        *ngIf=\\\"\\r\\n          isAdSpecialist &&\\r\\n          (s1Application?.internalStatus ==\\r\\n            'S1_APPLICATION_VERIFIED_BY_ENCODER' ||\\r\\n            s1Application?.internalStatus ==\\r\\n              'S1_APPLICATION_VERIFIED_BY_AD_SPE')\\r\\n        \\\"\\r\\n      >\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n          <!-- NOT MULTIPLE -->\\r\\n          <ng-template [ngTemplateOutlet]=\\\"reAssignAdSpecialistTemp\\\"></ng-template>\\r\\n          <button\\r\\n            mat-raised-button\\r\\n            class=\\\"button-red\\\"\\r\\n            *ngIf=\\\"\\r\\n              isAdSpecialist &&\\r\\n              s1Application?.actionStatus === 'ASSIGN_TO_ADSPE'\\r\\n            \\\"\\r\\n            (click)=\\\"\\r\\n              saveStatus(\\r\\n                'ad-specialist',\\r\\n                'verify',\\r\\n                'S1_APPLICATION_VERIFIED_BY_AD_SPE'\\r\\n              )\\r\\n            \\\"\\r\\n            [disabled]=\\\"buttonDisabled\\\"\\r\\n            [hidden]=\\\"s1Application?.formType === 'MULTIPLE'\\\"\\r\\n          >\\r\\n            <i class=\\\"material-icons color__white\\\">verified</i> FORWARD TO\\r\\n            SCREENER\\r\\n          </button>\\r\\n\\r\\n          <button\\r\\n            mat-raised-button\\r\\n            class=\\\"button-red\\\"\\r\\n            *ngIf=\\\"\\r\\n              isAdSpecialist &&\\r\\n              (s1Application?.actionStatus === 'ASSIGN_TO_SCREENER' ||\\r\\n                s1Application?.actionStatus === 'ASSIGN_TO_HOLD') &&\\r\\n              s1Application?.internalStatus ===\\r\\n                'S1_APPLICATION_VERIFIED_BY_AD_SPE'\\r\\n            \\\"\\r\\n            (click)=\\\"reassign()\\\"\\r\\n            [disabled]=\\\"buttonDisabled\\\"\\r\\n          >\\r\\n            <i class=\\\"material-icons color__white\\\">verified</i> RE-ASSIGN\\r\\n            SCREENER\\r\\n          </button>\\r\\n          &nbsp;\\r\\n          <!-- <button mat-raised-button class=\\\"button-red\\\"\\r\\n            (click)=\\\"rejectDisapprovedModal('encoder', 'reject', 'S1_APPLICATION_REJECTED')\\\">\\r\\n            (click)=\\\"saveStatus('ad-specialist','reject','S1_APPLICATION_REJECTED')\\\">\\r\\n            <i class=\\\"material-icons color__white\\\">unpublished</i> REJECT\\r\\n          </button> -->\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <!-- AD SPECIALIST ONLY-->\\r\\n      <div class=\\\"row mt-4\\\">\\r\\n        <mat-form-field\\r\\n          class=\\\"col-md-6\\\"\\r\\n          appearance=\\\"outline\\\"\\r\\n          [hidden]=\\\"\\r\\n            s1Application.submissionType === 'ORIGINAL' &&\\r\\n            s1Application?.multipleApplication &&\\r\\n            s1Application?.decisionStatus !== 'INCOMPLETE' &&\\r\\n            s1Application?.multipleApplication?.countVerifiedApplicationForm !==\\r\\n              s1Application?.multipleApplication\\r\\n                ?.actualNumberOfApplicationForm -\\r\\n                1 &&\\r\\n            s1Application.internalStatus !== 'S1_APPLICATION_VERIFIED_BY_AD_SPE'\\r\\n          \\\"\\r\\n          *ngIf=\\\"\\r\\n            isAdSpecialist &&\\r\\n            (s1Application.internalStatus ==\\r\\n              'S1_APPLICATION_VERIFIED_BY_ENCODER' ||\\r\\n              s1Application.internalStatus ==\\r\\n                'S1_APPLICATION_VERIFIED_BY_AD_SPE' ||\\r\\n              s1Application.internalStatus ==\\r\\n                'COMPLIANCE_DOCUMENT_VERIFIED_BY_ENCODER' ||\\r\\n              s1Application.internalStatus ==\\r\\n                'COMPLIANCE_DOCUMENT_VERIFIED_BY_AD_SPE' ||\\r\\n              s1Application.internalStatus == 'REVISION_VERIFIED_BY_ENCODER' ||\\r\\n              s1Application.internalStatus == 'REVISION_VERIFIED_BY_AD_SPE')\\r\\n          \\\"\\r\\n        >\\r\\n          <mat-label>REASSIGN AD SPECIALIST</mat-label>\\r\\n          <mat-select\\r\\n            [(ngModel)]=\\\"s1Application.assignedAdSpecialist\\\"\\r\\n            name=\\\"assignedAdSpecialist\\\"\\r\\n            (selectionChange)=\\\"buttonValidation($event.value)\\\"\\r\\n            [compareWith]=\\\"compareAssignedAdSpec\\\"\\r\\n          >\\r\\n            <mat-option *ngFor=\\\"let i of adSpecialistList\\\" [value]=\\\"i\\\">\\r\\n              {{ i.firstName }} {{ i.lastName }}\\r\\n              <span style=\\\"float: right\\\">[ {{ i.ctr }} ]</span>\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n\\r\\n      <!-- MULTIPLE -->\\r\\n      <div\\r\\n        class=\\\"row\\\"\\r\\n        *ngIf=\\\"\\r\\n          s1Application.submissionType === 'ORIGINAL' &&\\r\\n          s1Application?.formType === 'MULTIPLE' &&\\r\\n          s1Application?.internalStatus === 'S1_APPLICATION_VERIFIED_BY_AD_SPE'\\r\\n        \\\"\\r\\n      >\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n          <button\\r\\n            mat-raised-button\\r\\n            class=\\\"button-red\\\"\\r\\n            *ngIf=\\\"\\r\\n              isScreener && s1Application?.actionStatus === 'ASSIGN_TO_SCREENER'\\r\\n            \\\"\\r\\n            (click)=\\\"\\r\\n              saveStatus('screener', 'verify', 'S1_APPLICATION_SCREENED')\\r\\n            \\\"\\r\\n            [disabled]=\\\"!s1Application.decisionStatus\\\"\\r\\n          >\\r\\n            <i class=\\\"material-icons color__white\\\">fact_check</i> SCREENED\\r\\n          </button>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div\\r\\n        class=\\\"row\\\"\\r\\n        *ngIf=\\\"\\r\\n          isScreener &&\\r\\n          (s1Application.internalStatus ==\\r\\n            'S1_APPLICATION_VERIFIED_BY_AD_SPE' ||\\r\\n            s1Application.internalStatus == 'S1_APPLICATION_SCREENED')\\r\\n        \\\"\\r\\n      >\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n          <button\\r\\n            mat-raised-button\\r\\n            class=\\\"button-red\\\"\\r\\n            *ngIf=\\\"\\r\\n              isScreener && s1Application?.actionStatus === 'ASSIGN_TO_SCREENER'\\r\\n            \\\"\\r\\n            (click)=\\\"\\r\\n              saveStatus('screener', 'verify', 'S1_APPLICATION_SCREENED')\\r\\n            \\\"\\r\\n            [disabled]=\\\"buttonDisabled || !s1Application.decisionStatus\\\"\\r\\n            [hidden]=\\\"s1Application?.formType === 'MULTIPLE'\\\"\\r\\n          >\\r\\n            <i class=\\\"material-icons color__white\\\">fact_check</i> SCREENED\\r\\n          </button>\\r\\n          <button\\r\\n            mat-raised-button\\r\\n            class=\\\"button-red\\\"\\r\\n            *ngIf=\\\"\\r\\n              isScreener && s1Application?.actionStatus === 'ASSIGN_TO_REVIEWER'\\r\\n            \\\"\\r\\n            (click)=\\\"reassign()\\\"\\r\\n            [disabled]=\\\"buttonDisabled\\\"\\r\\n          >\\r\\n            <i class=\\\"material-icons color__white\\\">fact_check</i> RE-ASSIGN\\r\\n            REVIEWER\\r\\n          </button>\\r\\n          <button\\r\\n            mat-raised-button\\r\\n            class=\\\"button-red\\\"\\r\\n            (click)=\\\"returnTo('ADSPE', 'S1_APPLICATION_VERIFIED_BY_ENCODER')\\\"\\r\\n            [disabled]=\\\"\\\"\\r\\n            [hidden]=\\\"s1Application?.formType === 'MULTIPLE'\\\"\\r\\n          >\\r\\n            <i class=\\\"material-icons color__white\\\">assignment_return</i>\\r\\n            &nbsp;RETURN TO AD SPECIALIST\\r\\n          </button>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div\\r\\n        class=\\\"row\\\"\\r\\n        *ngIf=\\\"\\r\\n          !s1Application?.reviewerDecisionComment &&\\r\\n          isReviewer &&\\r\\n          (s1Application?.internalStatus == 'S1_APPLICATION_SCREENED' ||\\r\\n            s1Application?.internalStatus === 'S1_APPLICATION_REVIEWED' ||\\r\\n            s1Application?.internalStatus ===\\r\\n              'COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER')\\r\\n        \\\"\\r\\n      >\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n          <button\\r\\n            mat-raised-button\\r\\n            class=\\\"button-red\\\"\\r\\n            [disabled]=\\\"!s1Application.decisionStatus\\\"\\r\\n            (click)=\\\"\\r\\n              saveStatus('reviewer', 'verify', 'S1_APPLICATION_REVIEWED')\\r\\n            \\\"\\r\\n          >\\r\\n            <i class=\\\"material-icons color__white\\\">assignment_turned_in</i>\\r\\n            REVIEWED\\r\\n          </button>\\r\\n          <button\\r\\n            mat-raised-button\\r\\n            class=\\\"button-red\\\"\\r\\n            (click)=\\\"returnTo('SCREENER', 'S1_APPLICATION_VERIFIED_BY_AD_SPE')\\\"\\r\\n            [disabled]=\\\"\\\"\\r\\n            [hidden]=\\\"s1Application?.formType === 'MULTIPLE'\\\"\\r\\n          >\\r\\n            <i class=\\\"material-icons color__white\\\">assignment_return</i>\\r\\n            &nbsp;RETURN TO SCREENER\\r\\n          </button>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <!-- //////////////////////////////////////// FOR COMPLIANCE //////////////////////////////////////////////////////////// -->\\r\\n      <div\\r\\n        class=\\\"row\\\"\\r\\n        *ngIf=\\\"\\r\\n          isApplicant &&\\r\\n          !s1Application?.hasOngoingRevision &&\\r\\n          !s1Application?.hasOngoingCompliance &&\\r\\n          s1Application?.decisionStatus == 'INCOMPLETE' &&\\r\\n          (s1Application?.internalStatus == 'S1_APPLICATION_REVIEWED' ||\\r\\n            s1Application?.internalStatus ==\\r\\n              'COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER' ||\\r\\n            s1Application?.internalStatus == 'REVISION_SCREENED' ||\\r\\n            s1Application?.internalStatus == 'S1_APPLICATION_REJECTED')\\r\\n        \\\"\\r\\n      >\\r\\n        <b\\r\\n          ><b class=\\\"material-icons info-msg\\\">error_outline</b> Applicant can\\r\\n          submit updated or additional supporting documents for S1 Forms with\\r\\n          Incomplete Decision.</b\\r\\n        >\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n          <br />\\r\\n          <button\\r\\n            mat-raised-button\\r\\n            class=\\\"button-red\\\"\\r\\n            (click)=\\\"\\r\\n              saveStatusForCompliance(\\r\\n                'presentor',\\r\\n                'submit',\\r\\n                'SUBMITTED_DOCUMENT_FOR_COMPLIANCE'\\r\\n              )\\r\\n            \\\"\\r\\n          >\\r\\n            <i class=\\\"material-icons color__white\\\">task_alt</i> SUBMIT FOR\\r\\n            COMPLIANCE\\r\\n          </button>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div\\r\\n        class=\\\"row\\\"\\r\\n        *ngIf=\\\"\\r\\n          isEvaluator &&\\r\\n          s1Application.internalStatus == 'SUBMITTED_DOCUMENT_FOR_COMPLIANCE'\\r\\n        \\\"\\r\\n      >\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n          <button\\r\\n            mat-raised-button\\r\\n            class=\\\"button-red\\\"\\r\\n            [disabled]=\\\"\\r\\n              s1Application?.company?.status === 'FOR_APPROVAL' ||\\r\\n              s1Application?.brand?.status === 'FOR_APPROVAL' ||\\r\\n              s1Application?.product?.status === 'FOR_APPROVAL'\\r\\n            \\\"\\r\\n            (click)=\\\"\\r\\n              saveStatusForCompliance(\\r\\n                'encoder',\\r\\n                'verify',\\r\\n                'COMPLIANCE_DOCUMENT_VERIFIED_BY_ENCODER'\\r\\n              )\\r\\n            \\\"\\r\\n          >\\r\\n            <i class=\\\"material-icons color__white\\\">verified</i> FORWARD TO AD\\r\\n            SPECIALIST\\r\\n          </button>\\r\\n          &nbsp;\\r\\n          <button\\r\\n            mat-raised-button\\r\\n            class=\\\"button-red\\\"\\r\\n            (click)=\\\"rejectDisapprovedModal()\\\"\\r\\n          >\\r\\n            <!-- (click)=\\\"rejectDisapprovedModal('encoder','reject','S1_APPLICATION_REJECTED')\\\" -->\\r\\n            <i class=\\\"material-icons color__white\\\">unpublished</i> REJECT\\r\\n          </button>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div\\r\\n        class=\\\"row\\\"\\r\\n        *ngIf=\\\"\\r\\n          isAdSpecialist &&\\r\\n          (s1Application?.internalStatus ==\\r\\n            'COMPLIANCE_DOCUMENT_VERIFIED_BY_ENCODER' ||\\r\\n            s1Application?.internalStatus ==\\r\\n              'COMPLIANCE_DOCUMENT_VERIFIED_BY_AD_SPE')\\r\\n        \\\"\\r\\n      >\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n          <ng-template [ngTemplateOutlet]=\\\"reAssignAdSpecialistTemp\\\"></ng-template>\\r\\n          <button\\r\\n            mat-raised-button\\r\\n            class=\\\"button-red\\\"\\r\\n            (click)=\\\"\\r\\n              saveStatusForCompliance(\\r\\n                'ad-specialist',\\r\\n                'verify',\\r\\n                'COMPLIANCE_DOCUMENT_VERIFIED_BY_AD_SPE'\\r\\n              )\\r\\n            \\\"\\r\\n          >\\r\\n            <i class=\\\"material-icons color__white\\\">verified</i> FORWARD TO\\r\\n            SCREENER\\r\\n          </button>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div\\r\\n        class=\\\"row\\\"\\r\\n        *ngIf=\\\"\\r\\n          isScreener &&\\r\\n          s1Application?.internalStatus ==\\r\\n            'COMPLIANCE_DOCUMENT_VERIFIED_BY_AD_SPE'\\r\\n        \\\"\\r\\n      >\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n          <button\\r\\n            mat-raised-button\\r\\n            class=\\\"button-red\\\"\\r\\n            (click)=\\\"\\r\\n              saveStatusForCompliance(\\r\\n                'screener',\\r\\n                'verify',\\r\\n                'COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER'\\r\\n              )\\r\\n            \\\"\\r\\n          >\\r\\n            <i class=\\\"material-icons color__white\\\">fact_check</i> SCREENED\\r\\n          </button>\\r\\n          <button\\r\\n            mat-raised-button\\r\\n            class=\\\"button-red\\\"\\r\\n            (click)=\\\"\\r\\n              returnTo('ADSPE', 'COMPLIANCE_DOCUMENT_VERIFIED_BY_ENCODER')\\r\\n            \\\"\\r\\n            [disabled]=\\\"\\\"\\r\\n          >\\r\\n            <i class=\\\"material-icons color__white\\\">assignment_return</i>\\r\\n            &nbsp;RETURN TO AD SPECIALIST\\r\\n          </button>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <!-- //////////////////////////////////////// REVISION //////////////////////////////////////////////////////////// -->\\r\\n      <div\\r\\n        class=\\\"row\\\"\\r\\n        *ngIf=\\\"\\r\\n          s1Application?.revisionNo !== 2 &&\\r\\n          s1Application?.submissionType === 'ORIGINAL' &&\\r\\n          !s1Application?.hasOngoingRevision &&\\r\\n          !s1Application?.hasOngoingCompliance &&\\r\\n          !s1Application?.appliedS2 &&\\r\\n          isApplicant &&\\r\\n          (s1Application?.internalStatus === 'S1_APPLICATION_REVIEWED' ||\\r\\n            s1Application?.internalStatus ==\\r\\n              'COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER') &&\\r\\n          (s1Application?.decisionStatus == 'APPROVED' ||\\r\\n            s1Application?.decisionStatus == 'APPROVED W/ CAUTION')\\r\\n        \\\"\\r\\n      >\\r\\n        <b>\\r\\n          <br />\\r\\n          <b class=\\\"material-icons info-msg\\\">error_outline</b> Applicant can\\r\\n          submit Approved S1 Form for Revision Request with revision letter, new\\r\\n          main document, and new supporting document (if needed).\\r\\n        </b>\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n          <br />\\r\\n          <button\\r\\n            mat-raised-button\\r\\n            class=\\\"button-red\\\"\\r\\n            (click)=\\\"\\r\\n              saveStatusRevision('presentor', 'submit', 'SUBMITTED_REVISION')\\r\\n            \\\"\\r\\n            [disabled]=\\\"\\r\\n              !s1Application?.revisionLetterAttachmentReference &&\\r\\n              !attachmentDocuments[2]?.revisionLetterAttachmentReference\\r\\n            \\\"\\r\\n          >\\r\\n            <i class=\\\"material-icons color__white\\\">task_alt</i> SUBMIT REVISION\\r\\n          </button>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div\\r\\n        class=\\\"row\\\"\\r\\n        *ngIf=\\\"\\r\\n          isEvaluator && s1Application.internalStatus == 'SUBMITTED_REVISION'\\r\\n        \\\"\\r\\n      >\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n          <button\\r\\n            mat-raised-button\\r\\n            class=\\\"button-red\\\"\\r\\n            [disabled]=\\\"\\r\\n              s1Application?.company?.status === 'FOR_APPROVAL' ||\\r\\n              s1Application?.brand?.status === 'FOR_APPROVAL' ||\\r\\n              s1Application?.product?.status === 'FOR_APPROVAL'\\r\\n            \\\"\\r\\n            (click)=\\\"\\r\\n              saveStatusRevision(\\r\\n                'encoder',\\r\\n                'verify',\\r\\n                'REVISION_VERIFIED_BY_ENCODER'\\r\\n              )\\r\\n            \\\"\\r\\n          >\\r\\n            <i class=\\\"material-icons color__white\\\">verified</i> FORWARD TO AD\\r\\n            SPECIALIST\\r\\n          </button>\\r\\n          &nbsp;\\r\\n          <button\\r\\n            mat-raised-button\\r\\n            class=\\\"button-red\\\"\\r\\n            (click)=\\\"rejectDisapprovedModal()\\\"\\r\\n          >\\r\\n            <!-- (click)=\\\"rejectDisapprovedModal('encoder','reject','S1_APPLICATION_REJECTED')\\\" -->\\r\\n            <i class=\\\"material-icons color__white\\\">unpublished</i> REJECT\\r\\n          </button>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div\\r\\n        class=\\\"row\\\"\\r\\n        *ngIf=\\\"\\r\\n          isAdSpecialist &&\\r\\n          (s1Application.internalStatus == 'REVISION_VERIFIED_BY_ENCODER' ||\\r\\n            s1Application?.internalStatus == 'REVISION_VERIFIED_BY_AD_SPE')\\r\\n        \\\"\\r\\n      >\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n          <ng-template [ngTemplateOutlet]=\\\"reAssignAdSpecialistTemp\\\"></ng-template>\\r\\n          <button\\r\\n            mat-raised-button\\r\\n            class=\\\"button-red\\\"\\r\\n            (click)=\\\"\\r\\n              saveStatusRevision(\\r\\n                'ad-specialist',\\r\\n                'verify',\\r\\n                'REVISION_VERIFIED_BY_AD_SPE'\\r\\n              )\\r\\n            \\\"\\r\\n          >\\r\\n            <i class=\\\"material-icons color__white\\\">verified</i> FORWARD TO\\r\\n            SCREENER\\r\\n          </button>\\r\\n          <!--  &nbsp;\\r\\n          <button mat-raised-button class=\\\"button-red\\\"\\r\\n            (click)=\\\"saveStatus('ad-specialist','reject','S1_APPLICATION_REJECTED')\\\">\\r\\n            <i class=\\\"material-icons color__white\\\">unpublished</i> REJECT\\r\\n          </button> -->\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div\\r\\n        class=\\\"row\\\"\\r\\n        *ngIf=\\\"\\r\\n          isScreener &&\\r\\n          s1Application.internalStatus == 'REVISION_VERIFIED_BY_AD_SPE'\\r\\n        \\\"\\r\\n      >\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n          <button\\r\\n            mat-raised-button\\r\\n            class=\\\"button-red\\\"\\r\\n            (click)=\\\"\\r\\n              saveStatusRevision('screener', 'verify', 'REVISION_SCREENED')\\r\\n            \\\"\\r\\n          >\\r\\n            <i class=\\\"material-icons color__white\\\">fact_check</i> SCREENED\\r\\n          </button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\\r\\n<!-- </form> -->\\r\\n\\r\\n<ng-template #reAssignAdSpecialistTemp>\\r\\n  <button\\r\\n    mat-raised-button\\r\\n    class=\\\"button-red\\\"\\r\\n    *ngIf=\\\"isAdSpecialist\\\"\\r\\n    (click)=\\\"reassignAdSpecialist()\\\"\\r\\n    [disabled]=\\\"buttonDisabled\\\"\\r\\n    [hidden]=\\\"s1Application?.formType === 'MULTIPLE'\\\"\\r\\n  >\\r\\n    <i class=\\\"material-icons color__white\\\">verified</i> RE-ASSIGN AD\\r\\n    SPECIALIST\\r\\n  </button>\\r\\n</ng-template>\\r\\n\";","export default \"span {\\n  color: red;\\n}\\n\\n.grandTotal {\\n  font-weight: 900;\\n  float: right;\\n  padding-right: 20%;\\n}\\n\\n.numbers-input {\\n  text-align: end;\\n}\\n\\n.total {\\n  font-weight: 900;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9wYWdlcy9hcHBsaWNhdGlvbnMvc2NoZWR1bGUtb2YtZmVlcy9tdWx0aXBsZS1hcHBsaWNhdGlvbnMvbW9kYWwtbXVsdGlwbGUtYXBwbGljYXRpb25zL21vZGFsLW11bHRpcGxlLWFwcGxpY2F0aW9ucy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLFVBQUE7QUFDSjs7QUFFQTtFQUNFLGdCQUFBO0VBQ0EsWUFBQTtFQUNBLGtCQUFBO0FBQ0Y7O0FBRUE7RUFDRSxlQUFBO0FBQ0Y7O0FBRUE7RUFDRSxnQkFBQTtBQUNGIiwiZmlsZSI6InNyYy9hcHAvbW9kdWxlcy9wYWdlcy9hcHBsaWNhdGlvbnMvc2NoZWR1bGUtb2YtZmVlcy9tdWx0aXBsZS1hcHBsaWNhdGlvbnMvbW9kYWwtbXVsdGlwbGUtYXBwbGljYXRpb25zL21vZGFsLW11bHRpcGxlLWFwcGxpY2F0aW9ucy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbInNwYW57XHJcbiAgICBjb2xvcjogcmVkO1xyXG59XHJcblxyXG4uZ3JhbmRUb3RhbCB7XHJcbiAgZm9udC13ZWlnaHQ6IDkwMDtcclxuICBmbG9hdDogcmlnaHQ7XHJcbiAgcGFkZGluZy1yaWdodDogMjAlO1xyXG59XHJcblxyXG4ubnVtYmVycy1pbnB1dHtcclxuICB0ZXh0LWFsaWduOiBlbmQ7XHJcbn1cclxuXHJcbi50b3RhbCB7XHJcbiAgZm9udC13ZWlnaHQ6IDkwMDtcclxufVxyXG4iXX0= */\";","export default \"<div id=\\\"form-type-modal\\\" class=\\\"row\\\" [formGroup]=\\\"s1ApplicationForm\\\">\\r\\n    <h1>New S1 Application</h1>\\r\\n    <hr>\\r\\n    <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n        <mat-label>Application Type</mat-label>\\r\\n        <mat-select [(ngModel)]=\\\"s1Application.applicationType\\\" name=\\\"applicationType\\\" formControlName=\\\"applicationType\\\"\\r\\n            [disabled]=\\\"s1Application?.internalStatus!='SAVED'&&s1Application?.internalStatus!=undefined\\\" (selectionChange)=\\\"checkType()\\\">\\r\\n            <mat-option *ngFor=\\\"let i of applicationTypeList\\\" [value]=\\\"i\\\">\\r\\n                {{i?.description | uppercase}}\\r\\n            </mat-option>\\r\\n        </mat-select>\\r\\n    </mat-form-field>\\r\\n\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n      <mat-checkbox (click)=\\\"setAsMultiple()\\\" [disabled]=\\\"isPresentation || s1Application.applicationType === null || s1Application.applicationType === undefined\\\"\\r\\n      [ngStyle]=\\\"{'pointer-events': (isPresentation || s1Application.applicationType === null || s1Application.applicationType === undefined) ? 'none' : ''}\\\">\\r\\n      Multiple Application</mat-checkbox>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n      <mat-checkbox  (click)=\\\"setAsForPresentation()\\\" [disabled]=\\\"isMultiple || (s1Application.applicationType === null || s1Application.applicationType === undefined)\\\"\\r\\n      [ngStyle]=\\\"{'pointer-events': (isMultiple || (s1Application.applicationType === null || s1Application.applicationType === undefined ) ) ? 'none' : ''}\\\"\\r\\n      >For Presentation</mat-checkbox>\\r\\n    </div>\\r\\n\\r\\n    <!-- <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\" *ngIf=\\\"isMultiple\\\">\\r\\n      <mat-label>Form Type</mat-label>\\r\\n      <mat-select [(ngModel)]=\\\"s1Application.formType\\\" name=\\\"formType\\\" formControlName=\\\"formType\\\"\\r\\n      [disabled]=\\\"s1Application?.internalStatus!='SAVED'&&s1Application?.internalStatus!=undefined\\\">\\r\\n      <mat-option *ngFor=\\\"let i of formTypeList\\\" [value]=\\\"i.description\\\" (click)=\\\"getApplicationTypeList()\\\">\\r\\n        {{i?.description | uppercase}}\\r\\n      </mat-option>\\r\\n    </mat-select>\\r\\n  </mat-form-field> -->\\r\\n\\r\\n  <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\" *ngIf=\\\"showNumberOfApplications && s1Application?.applicationType?.description\\\">\\r\\n    <mat-label>Number of Applications</mat-label>\\r\\n    <input matInput [(ngModel)]=\\\"numberOfApplications\\\" formControlName=\\\"numberOfApplications\\\">\\r\\n    <mat-hint>{{numberOfMultipleApplicationAllowed.minimum}} - {{numberOfMultipleApplicationAllowed.maximum}} only</mat-hint>\\r\\n  </mat-form-field>\\r\\n\\r\\n  <div class=\\\"col-md-12 mt-2\\\" *ngIf=\\\"isMultiple||isSpecial\\\">\\r\\n    <i>Note: This application type needs Request for Approval.</i>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"col-md-12\\\"><br></div>\\r\\n\\r\\n  <div class=\\\"col-md-12 action_items\\\">\\r\\n    <button class=\\\"button-red col-md-5\\\" mat-raised-button\\r\\n            (click)=\\\"proceedS1Application()\\\" [disabled]=\\\"!s1ApplicationForm.valid||!s1Application.applicationType\\\">\\r\\n            <i class=\\\"material-icons color__white\\\">send</i> Proceed\\r\\n        </button>\\r\\n\\r\\n        <button class=\\\"button-red col-md-5\\\" mat-raised-button (click)=\\\"closeModal()\\\">\\r\\n            <i class=\\\"material-icons color__white\\\">cancel</i> Cancel\\r\\n        </button>\\r\\n    </div>\\r\\n</div>\\r\\n\";","export default \"/* Accordion */\\n.action-buttons {\\n  padding-bottom: 20px;\\n  float: right;\\n}\\n.headers-align .mat-expansion-panel-header-title,\\n.headers-align .mat-expansion-panel-header-description {\\n  flex-basis: 0;\\n  font-size: 1.25em;\\n  align-items: center;\\n}\\n.headers-align .mat-expansion-panel-header-description {\\n  justify-content: space-between;\\n  align-items: center;\\n}\\n.tooltip .tooltiptext {\\n  width: 120px;\\n  bottom: 100%;\\n  left: 50%;\\n  margin-left: -60px;\\n  /* Use half of the width (120/2 = 60), to center the tooltip */\\n}\\n.mat-expansion-panel-header {\\n  border: 1px solid #BFBFBF;\\n}\\ninput[type=file] {\\n  display: none;\\n}\\n.custom-file-upload {\\n  border: 1px solid #ccc;\\n  display: inline-block;\\n  padding: 6px 12px;\\n  cursor: pointer;\\n}\\n.mat-expansion-panel-header.mat-expanded:hover,\\n.mat-expansion-panel-header {\\n  background: #bad9ff;\\n}\\n.mat-expansion-panel .mat-expansion-panel-header.cdk-keyboard-focused:not([aria-disabled=true]),\\n.mat-expansion-panel .mat-expansion-panel-header.cdk-program-focused:not([aria-disabled=true]),\\n.mat-expansion-panel:not(.mat-expanded) .mat-expansion-panel-header:hover:not([aria-disabled=true]) {\\n  background: #cfe5ff;\\n}\\n.field-value {\\n  color: gray;\\n  font-weight: 600;\\n}\\n/* table for status display */\\ntable.application-details tr td {\\n  padding: 10px 16px;\\n  border-radius: 7px;\\n  font: 500 14px/20px Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  width: 31%;\\n}\\ntable.application-details tr td:nth-child(odd) {\\n  background-color: #ff5252;\\n  color: white;\\n  border: 1px solid white;\\n}\\ntable.application-details tr td:nth-child(even) {\\n  color: #ff5252;\\n  border: 1px solid #0000001f;\\n}\\n.no-border {\\n  background-color: transparent !important;\\n  border: 0px !important;\\n  padding: 0px !important;\\n  width: 5px;\\n  height: 5px !important;\\n}\\n.dialog-button-content {\\n  vertical-align: bottom;\\n  text-align: center;\\n}\\n.dialog-button-content button {\\n  color: white;\\n  border: none;\\n  padding: 5px 10px 5px 5px;\\n  margin: 0px 5px;\\n  font-weight: 500;\\n  border-radius: 5px;\\n}\\n.dialog-button-content .warn {\\n  background-color: red;\\n}\\n.dialog-button-content .caution {\\n  background-color: #dfd000;\\n  color: black;\\n}\\n.dialog-button-content .confirm {\\n  background-color: #449bff;\\n}\\ntable {\\n  width: 100%;\\n  text-align: center;\\n}\\n.cancel {\\n  color: gray !important;\\n}\\n::ng-deep th.mat-header-cell.center-table-text .mat-sort-header-container {\\n  justify-content: center !important;\\n}\\n.button-right {\\n  position: relative;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9mcmFnbWVudHMvdXBkYXRlLW11bHRpcGxlLWFwcGxpY2F0aW9uL3VwZGF0ZS1tdWx0aXBsZS1hcHBsaWNhdGlvbi5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxjQUFBO0FBQ0E7RUFDSSxvQkFBQTtFQUNBLFlBQUE7QUFDSjtBQUVBOztFQUVJLGFBQUE7RUFDQSxpQkFBQTtFQUNBLG1CQUFBO0FBQ0o7QUFFQTtFQUNJLDhCQUFBO0VBQ0EsbUJBQUE7QUFDSjtBQUVBO0VBQ0ksWUFBQTtFQUNBLFlBQUE7RUFDQSxTQUFBO0VBQ0Esa0JBQUE7RUFDQSw4REFBQTtBQUNKO0FBRUE7RUFDSSx5QkFBQTtBQUNKO0FBR0E7RUFDSSxhQUFBO0FBQUo7QUFHQTtFQUNJLHNCQUFBO0VBQ0EscUJBQUE7RUFDQSxpQkFBQTtFQUNBLGVBQUE7QUFBSjtBQUdBOztFQUVJLG1CQUFBO0FBQUo7QUFJQTs7O0VBR0ksbUJBQUE7QUFESjtBQUlBO0VBQ0ksV0FBQTtFQUNBLGdCQUFBO0FBREo7QUFJQSw2QkFBQTtBQUVJO0VBQ0ksa0JBQUE7RUFDQSxrQkFBQTtFQUNBLHdEQUFBO0VBQ0EsVUFBQTtBQUZSO0FBS0k7RUFDSSx5QkFBQTtFQUNBLFlBQUE7RUFDQSx1QkFBQTtBQUhSO0FBTUk7RUFDSSxjQUFBO0VBQ0EsMkJBQUE7QUFKUjtBQVFBO0VBQ0ksd0NBQUE7RUFDQSxzQkFBQTtFQUNBLHVCQUFBO0VBQ0EsVUFBQTtFQUNBLHNCQUFBO0FBTEo7QUFTQTtFQUNJLHNCQUFBO0VBQ0Esa0JBQUE7QUFOSjtBQVFJO0VBQ0ksWUFBQTtFQUNBLFlBQUE7RUFDQSx5QkFBQTtFQUNBLGVBQUE7RUFDQSxnQkFBQTtFQUNBLGtCQUFBO0FBTlI7QUFTSTtFQUNJLHFCQUFBO0FBUFI7QUFVSTtFQUNJLHlCQUFBO0VBQ0EsWUFBQTtBQVJSO0FBV0k7RUFDSSx5QkFBQTtBQVRSO0FBYUE7RUFDSSxXQUFBO0VBQ0Esa0JBQUE7QUFWSjtBQWFBO0VBQ0Usc0JBQUE7QUFWRjtBQWVFO0VBQ0Usa0NBQUE7QUFaSjtBQWdCQTtFQUNFLGtCQUFBO0FBYkYiLCJmaWxlIjoic3JjL2FwcC9tb2R1bGVzL2ZyYWdtZW50cy91cGRhdGUtbXVsdGlwbGUtYXBwbGljYXRpb24vdXBkYXRlLW11bHRpcGxlLWFwcGxpY2F0aW9uLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLyogQWNjb3JkaW9uICovXHJcbi5hY3Rpb24tYnV0dG9ucyB7XHJcbiAgICBwYWRkaW5nLWJvdHRvbTogMjBweDtcclxuICAgIGZsb2F0OiByaWdodDtcclxufVxyXG5cclxuLmhlYWRlcnMtYWxpZ24gLm1hdC1leHBhbnNpb24tcGFuZWwtaGVhZGVyLXRpdGxlLFxyXG4uaGVhZGVycy1hbGlnbiAubWF0LWV4cGFuc2lvbi1wYW5lbC1oZWFkZXItZGVzY3JpcHRpb24ge1xyXG4gICAgZmxleC1iYXNpczogMDtcclxuICAgIGZvbnQtc2l6ZTogMS4yNWVtO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxufVxyXG5cclxuLmhlYWRlcnMtYWxpZ24gLm1hdC1leHBhbnNpb24tcGFuZWwtaGVhZGVyLWRlc2NyaXB0aW9uIHtcclxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbn1cclxuXHJcbi50b29sdGlwIC50b29sdGlwdGV4dCB7XHJcbiAgICB3aWR0aDogMTIwcHg7XHJcbiAgICBib3R0b206IDEwMCU7XHJcbiAgICBsZWZ0OiA1MCU7XHJcbiAgICBtYXJnaW4tbGVmdDogLTYwcHg7XHJcbiAgICAvKiBVc2UgaGFsZiBvZiB0aGUgd2lkdGggKDEyMC8yID0gNjApLCB0byBjZW50ZXIgdGhlIHRvb2x0aXAgKi9cclxufVxyXG5cclxuLm1hdC1leHBhbnNpb24tcGFuZWwtaGVhZGVyIHtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkICNCRkJGQkY7XHJcbn1cclxuXHJcbi8vIHVwbG9hZCBidXR0b25cclxuaW5wdXRbdHlwZT1cImZpbGVcIl0ge1xyXG4gICAgZGlzcGxheTogbm9uZTtcclxufVxyXG5cclxuLmN1c3RvbS1maWxlLXVwbG9hZCB7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjY2NjO1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgcGFkZGluZzogNnB4IDEycHg7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbn1cclxuXHJcbi5tYXQtZXhwYW5zaW9uLXBhbmVsLWhlYWRlci5tYXQtZXhwYW5kZWQ6aG92ZXIsXHJcbi5tYXQtZXhwYW5zaW9uLXBhbmVsLWhlYWRlciB7XHJcbiAgICBiYWNrZ3JvdW5kOiAjYmFkOWZmO1xyXG4gICAgLy8gYmFja2dyb3VuZDogI2Q1Nzg5MlxyXG59XHJcblxyXG4ubWF0LWV4cGFuc2lvbi1wYW5lbCAubWF0LWV4cGFuc2lvbi1wYW5lbC1oZWFkZXIuY2RrLWtleWJvYXJkLWZvY3VzZWQ6bm90KFthcmlhLWRpc2FibGVkPXRydWVdKSxcclxuLm1hdC1leHBhbnNpb24tcGFuZWwgLm1hdC1leHBhbnNpb24tcGFuZWwtaGVhZGVyLmNkay1wcm9ncmFtLWZvY3VzZWQ6bm90KFthcmlhLWRpc2FibGVkPXRydWVdKSxcclxuLm1hdC1leHBhbnNpb24tcGFuZWw6bm90KC5tYXQtZXhwYW5kZWQpIC5tYXQtZXhwYW5zaW9uLXBhbmVsLWhlYWRlcjpob3Zlcjpub3QoW2FyaWEtZGlzYWJsZWQ9dHJ1ZV0pIHtcclxuICAgIGJhY2tncm91bmQ6ICNjZmU1ZmY7XHJcbn1cclxuXHJcbi5maWVsZC12YWx1ZSB7XHJcbiAgICBjb2xvcjogZ3JheTtcclxuICAgIGZvbnQtd2VpZ2h0OiA2MDA7XHJcbn1cclxuXHJcbi8qIHRhYmxlIGZvciBzdGF0dXMgZGlzcGxheSAqL1xyXG50YWJsZS5hcHBsaWNhdGlvbi1kZXRhaWxzIHRyIHtcclxuICAgIHRkIHtcclxuICAgICAgICBwYWRkaW5nOiAxMHB4IDE2cHg7XHJcbiAgICAgICAgYm9yZGVyLXJhZGl1czogN3B4O1xyXG4gICAgICAgIGZvbnQ6IDUwMCAxNHB4LzIwcHggUm9ib3RvLCBcIkhlbHZldGljYSBOZXVlXCIsIHNhbnMtc2VyaWY7XHJcbiAgICAgICAgd2lkdGg6IDMxJTtcclxuICAgIH1cclxuXHJcbiAgICB0ZDpudGgtY2hpbGQob2RkKSB7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmNTI1MjtcclxuICAgICAgICBjb2xvcjogd2hpdGU7XHJcbiAgICAgICAgYm9yZGVyOiAxcHggc29saWQgd2hpdGU7XHJcbiAgICB9XHJcblxyXG4gICAgdGQ6bnRoLWNoaWxkKGV2ZW4pIHtcclxuICAgICAgICBjb2xvcjogI2ZmNTI1MjtcclxuICAgICAgICBib3JkZXI6IDFweCBzb2xpZCAjMDAwMDAwMWY7XHJcbiAgICB9XHJcbn1cclxuXHJcbi5uby1ib3JkZXIge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQgIWltcG9ydGFudDtcclxuICAgIGJvcmRlcjogMHB4ICFpbXBvcnRhbnQ7XHJcbiAgICBwYWRkaW5nOiAwcHggIWltcG9ydGFudDtcclxuICAgIHdpZHRoOiA1cHg7XHJcbiAgICBoZWlnaHQ6IDVweCAhaW1wb3J0YW50O1xyXG59XHJcblxyXG4vLyBidXR0b25cclxuLmRpYWxvZy1idXR0b24tY29udGVudCB7XHJcbiAgICB2ZXJ0aWNhbC1hbGlnbjogYm90dG9tO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG5cclxuICAgIGJ1dHRvbiB7XHJcbiAgICAgICAgY29sb3I6IHdoaXRlO1xyXG4gICAgICAgIGJvcmRlcjogbm9uZTtcclxuICAgICAgICBwYWRkaW5nOiA1cHggMTBweCA1cHggNXB4O1xyXG4gICAgICAgIG1hcmdpbjogMHB4IDVweDtcclxuICAgICAgICBmb250LXdlaWdodDogNTAwO1xyXG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICAgIH1cclxuXHJcbiAgICAud2FybiB7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogcmVkO1xyXG4gICAgfVxyXG5cclxuICAgIC5jYXV0aW9uIHtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjIzLCAyMDgsIDApO1xyXG4gICAgICAgIGNvbG9yOiByZ2IoMCwgMCwgMCk7XHJcbiAgICB9XHJcblxyXG4gICAgLmNvbmZpcm0ge1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYig2OCwgMTU1LCAyNTUpO1xyXG4gICAgfVxyXG59XHJcblxyXG50YWJsZSB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxufVxyXG5cclxuLmNhbmNlbHtcclxuICBjb2xvcjogZ3JheSAhaW1wb3J0YW50O1xyXG59XHJcblxyXG46Om5nLWRlZXAge1xyXG4gIC8vIHdpbGwgY2VudGVyIHRleHQgb24gbWF0ZXJpYWwgdGFibGUgaGVhZGVyXHJcbiAgdGgubWF0LWhlYWRlci1jZWxsLmNlbnRlci10YWJsZS10ZXh0IC5tYXQtc29ydC1oZWFkZXItY29udGFpbmVyIHtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyICFpbXBvcnRhbnQ7XHJcbiAgfVxyXG59XHJcblxyXG4uYnV0dG9uLXJpZ2h0IHtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbn1cclxuIl19 */\";","export default \"#form-type-modal {\\n  max-width: 30vw;\\n}\\n\\n.action_items {\\n  text-align: center;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9mcmFnbWVudHMvczEtZm9ybS10eXBlL3MxLWZvcm0tdHlwZS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGVBQUE7QUFDSjs7QUFFQTtFQUNJLGtCQUFBO0FBQ0oiLCJmaWxlIjoic3JjL2FwcC9tb2R1bGVzL2ZyYWdtZW50cy9zMS1mb3JtLXR5cGUvczEtZm9ybS10eXBlLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiI2Zvcm0tdHlwZS1tb2RhbCB7XHJcbiAgICBtYXgtd2lkdGg6IDMwdnc7XHJcbn1cclxuXHJcbi5hY3Rpb25faXRlbXMge1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG59Il19 */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTable, MatTableDataSource } from '@angular/material/table';\r\nimport { ApiService, DataStorageService, SweetAlertService } from '@services';\r\nimport { ENDPOINTS } from '@shared';\r\nimport { ModalSingleApplicationComponent } from './modal-single-application/modal-single-application.component';\r\n\r\n@Component({\r\n  selector: 'app-single-application',\r\n  templateUrl: './single-application.component.html',\r\n  styleUrls: ['./single-application.component.scss']\r\n})\r\nexport class SingleApplicationComponent implements OnInit {\r\n\r\n  @ViewChild(MatPaginator, { static: false }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: false }) sort: MatSort;\r\n  @ViewChild(MatTable, { static: false }) table: MatTable<Object>;\r\n\r\n  dataSource: MatTableDataSource<any>\r\n  displayedColumns: string[] = ['referenceCode', 'typeOfApplication', 'brand', 'medium', 'applicantCompanyName', 'paymentStatus'];\r\n  paymentList = [];\r\n\r\n  currentUser: any;\r\n  constructor(\r\n    private apiService: ApiService,\r\n    private dialog: MatDialog,\r\n    private dataStorage: DataStorageService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.currentUser = this.dataStorage.getUserAccount();\r\n    this.getS1PaymentList();\r\n  }\r\n\r\n  getS1PaymentList() {\r\n    this.apiService.findByParam(ENDPOINTS.applicationFormPresentor + this.currentUser.id,\r\n      'payment-status/FOR_PAYMENT/schedule-of-fees').subscribe((res: any) => {\r\n        this.paymentList = res.responseData.data;\r\n        this.dataSource = new MatTableDataSource<any>(this.paymentList);\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n      });\r\n  }\r\n\r\n  openModal(res) {\r\n\r\n    const dialogRef = this.dialog.open(ModalSingleApplicationComponent, {\r\n      width: '80%',\r\n      height: 'fit-content',\r\n      maxHeight: '85vh',\r\n      data: res\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.ngOnInit();\r\n    });\r\n\r\n  }\r\n}\r\n","export default \"<form [formGroup]=\\\"commentForm\\\">\\r\\n  <mat-tab-group mat-align-tabs=\\\"center\\\" class=\\\"mat-tab-group\\\">\\r\\n    <!-- TAB FOR INTERNAL COMMENTS -->\\r\\n    <mat-tab label=\\\"Internal Comments Tab\\\">\\r\\n      <div class=\\\"mat-tab\\\">\\r\\n        <div class=\\\"col comment\\\">\\r\\n          <label>INTERNAL</label>\\r\\n          <angular-editor #editorToolBar [(ngModel)]=\\\"internalComment.comment\\\" [config]=\\\"editorConfig\\\" name=\\\"internalComments\\\"\\r\\n          formControlName=\\\"internalComments\\\"\\r\\n          [hidden]=\\\"disabledComment\\\"></angular-editor><br>\\r\\n\\r\\n          <div class=\\\"\\\">\\r\\n            <button mat-raised-button color=\\\"primary\\\" (click)=\\\"addInternalComment(internalComment)\\\" [disabled]=\\\"!internalComment.comment\\\"\\r\\n            [hidden]=\\\"disabledComment\\\">\\r\\n              <i class=\\\"material-icons color__white\\\">comment_bank</i> &nbsp;{{internalCommentProcess}}\\r\\n            </button>\\r\\n            <button mat-raised-button color=\\\"primary\\\" (click)=\\\"cancel()\\\" [disabled]=\\\"!internalComment.comment\\\"\\r\\n            [hidden]=\\\"disabledComment\\\">\\r\\n              <i class=\\\"material-icons color__white\\\">cancel</i> &nbsp;Cancel\\r\\n            </button>\\r\\n            <div >\\r\\n              <!-- CURRENT COMMENT -->\\r\\n              <div class=\\\"comment-list\\\">\\r\\n                <form class=\\\"comments\\\" *ngFor=\\\"let comment of internalCommentList\\\">\\r\\n                  <div class=\\\"row username-content\\\">\\r\\n                    <p> <i class=\\\"material-icons\\\">comment</i> {{comment?.actionBy?.firstName}}\\r\\n                      {{comment.actionBy.lastName}}<b> ({{comment.role.replaceAll('_', ' ').replaceAll('ROLE' , '')}}) |\\r\\n                        {{comment.actionDate | date:'fullDate'}} | {{comment.actionDate | date:'hh:mm:ss aa'}} </b>\\r\\n  \\r\\n                      <b *ngIf=\\\"comment?.modifiedBy != undefined && comment?.modifiedDate != undefined\\\"> | Modified by:\\r\\n                        {{comment.modifiedBy}} ({{comment.modifiedDate}}) </b>\\r\\n  \\r\\n                      <span class=\\\"a-icon\\\" *ngIf=\\\"comment?.actionBy?.id === currentUser?.id || currentUser?.userRole?.name === 'ROLE_REVIEWER'\\\"\\r\\n                      [hidden]=\\\"disabledComment\\\">\\r\\n                        <i class=\\\"material-icons\\\" (click)=\\\"deleteComment(comment)\\\" matTooltip=\\\"Delete\\\">delete</i>\\r\\n                      </span>\\r\\n                      <span class=\\\"a-icon\\\" *ngIf=\\\"comment?.actionBy?.id === currentUser?.id || currentUser?.userRole?.name === 'ROLE_REVIEWER'\\\"\\r\\n                        [hidden]=\\\"disabledComment\\\">\\r\\n                        <i class=\\\"material-icons\\\" style=\\\"color:blue\\\" (click)=\\\"modifyInternalComment(comment)\\\" matTooltip=\\\"Edit\\\">edit</i>\\r\\n                      </span>\\r\\n  \\r\\n                    </p>\\r\\n                  </div>\\r\\n                  <div class=\\\"comment-content\\\">\\r\\n                    <div [innerHTML]=\\\"comment.comment\\\"></div>\\r\\n                  </div>\\r\\n                </form>\\r\\n              </div>\\r\\n\\r\\n\\r\\n              <!-- CURRENT COMMENT END -->\\r\\n\\r\\n              <!-- NEW COMMENT IMPL -->\\r\\n              \\r\\n              <!-- NEW COMMENT IMPL END -->\\r\\n              <div class=\\\"no-record\\\" *ngIf=\\\"internalCommentList.length==0 && disabledComment\\\">\\r\\n                No results found.\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </mat-tab>\\r\\n    <!-- END OF TAB FOR INTERNAL COMMENTS -->\\r\\n\\r\\n    <!-- TAB FOR COPY CLAIMS -->\\r\\n    <mat-tab label=\\\"Copy Claims Tab\\\"\\r\\n      *ngIf=\\\"currentUser?.userRole?.name != 'ROLE_ENCODER' && commentS1Application.appliedS2 === false\\\">\\r\\n      <div class=\\\"col comment\\\">\\r\\n        <label>COPY/CLAIMS</label>\\r\\n        <div class=\\\"\\\">\\r\\n          <ng-container *ngIf=\\\"editCopyClaimsComment || (!editCopyClaimsComment && copyClaimsList?.length === 0)\\\">\\r\\n            <angular-editor [(ngModel)]=\\\"copyClaims.description\\\" [config]=\\\"editorConfig\\\" name=\\\"description\\\"\\r\\n              formControlName=\\\"description\\\"\\r\\n              [hidden]=\\\"disabledComment\\\">\\r\\n            </angular-editor><br>\\r\\n            <button mat-raised-button color=\\\"primary\\\" (click)=\\\"addCopyClaims()\\\" [disabled]=\\\"!copyClaims.description\\\"\\r\\n              [hidden]=\\\"disabledComment\\\">\\r\\n              <i class=\\\"material-icons color__white\\\">comment_bank</i> &nbsp;{{copyClaimesProcess}}\\r\\n            </button>\\r\\n            <button mat-raised-button color=\\\"primary\\\" (click)=\\\"cancel()\\\" [disabled]=\\\"!copyClaims.description\\\"\\r\\n              [hidden]=\\\"disabledComment\\\">\\r\\n              <i class=\\\"material-icons color__white\\\">cancel</i> &nbsp;Cancel\\r\\n            </button>\\r\\n          </ng-container>\\r\\n          <div class=\\\"comment-list\\\">\\r\\n            <form class=\\\"comments\\\" *ngFor=\\\"let copyClaims of copyClaimsList\\\">\\r\\n              <div class=\\\"row username-content\\\">\\r\\n                <p> <i class=\\\"material-icons color__white\\\">comment</i> {{copyClaims?.actionBy?.firstName}}\\r\\n                  {{copyClaims.actionBy.lastName}}<b> ({{copyClaims.role.replaceAll('_', ' ').replaceAll('ROLE', '')}})\\r\\n                    | {{copyClaims.actionDate | date:'fullDate'}} | {{copyClaims.actionDate | date:'hh:mm:ss aa'}} </b>\\r\\n\\r\\n                    <b *ngIf=\\\"copyClaims?.modifiedBy != undefined && copyClaims?.modifiedDate != undefined\\\"> | Modified by:\\r\\n                      {{copyClaims.modifiedBy}} ({{copyClaims.modifiedDate}}) </b>\\r\\n\\r\\n                    <!-- <span class=\\\"a-icon\\\" *ngIf=\\\"copyClaims?.actionBy?.id === currentUser?.id || currentUser?.userRole?.name === 'ROLE_REVIEWER'\\\"\\r\\n                    [hidden]=\\\"disabledComment\\\">\\r\\n                      <i class=\\\"material-icons\\\" (click)=\\\"deleteCopyClaims(copyClaims)\\\" matTooltip=\\\"Delete\\\">delete</i>\\r\\n                    </span> -->\\r\\n                    <span class=\\\"a-icon\\\" *ngIf=\\\"copyClaims?.actionBy?.id === currentUser?.id || currentUser?.userRole?.name === 'ROLE_REVIEWER'\\\"\\r\\n                      [hidden]=\\\"disabledComment\\\">\\r\\n                      <i class=\\\"material-icons\\\" style=\\\"color:blue\\\" (click)=\\\"modifyCopyClaims(copyClaims)\\\" matTooltip=\\\"Edit\\\">edit</i>\\r\\n                    </span>\\r\\n              </div>\\r\\n              <div class=\\\"comment-content\\\">\\r\\n                <div [innerHTML]=\\\"copyClaims.description\\\"></div>\\r\\n              </div>\\r\\n            </form>\\r\\n            <div class=\\\"no-record\\\"\\r\\n              *ngIf=\\\"copyClaimsList.length==0 && disabledComment\\\">\\r\\n              No results found.\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </mat-tab>\\r\\n    <!-- END OF TAB FOR COPY CLAIMS -->\\r\\n\\r\\n    <!-- TAB FOR EXTERNAL COMMENTS -->\\r\\n    <mat-tab label=\\\"External Comments Tab\\\">\\r\\n      <div class=\\\"col comment\\\">\\r\\n        <label>EXTERNAL</label>\\r\\n        <div class=\\\"\\\">\\r\\n          <ng-container *ngIf=\\\"editExternalComment || (!editExternalComment && externalCommentList?.length === 0)\\\">\\r\\n            <angular-editor [(ngModel)]=\\\"externalComment.comment\\\" [config]=\\\"editorConfig\\\" name=\\\"externalComments\\\"\\r\\n              formControlName=\\\"externalComments\\\"\\r\\n              [hidden]=\\\"commentS2Application?.internalStatus === 'S1_APPLICATION_REVIEWED' ||\\r\\n              (disabledComment)\\\">\\r\\n            </angular-editor><br>\\r\\n            <button mat-raised-button color=\\\"primary\\\" (click)=\\\"addExternalComment()\\\" [disabled]=\\\"!externalComment.comment\\\"\\r\\n              [hidden]=\\\"commentS2Application?.internalStatus === 'S1_APPLICATION_REVIEWED' ||\\r\\n              (disabledComment)\\\">\\r\\n              <i class=\\\"material-icons\\\">comment_bank</i> &nbsp;{{externalCommentProcess}}\\r\\n            </button>\\r\\n            <button mat-raised-button color=\\\"primary\\\" (click)=\\\"cancel()\\\" [disabled]=\\\"!externalComment.comment\\\"\\r\\n              [hidden]=\\\"commentS2Application?.internalStatus === 'S1_APPLICATION_REVIEWED' ||\\r\\n              (disabledComment)\\\">\\r\\n              <i class=\\\"material-icons\\\">cancel</i> &nbsp;Cancel\\r\\n            </button>\\r\\n          </ng-container>\\r\\n          <div class=\\\"comment-list\\\">\\r\\n            <form class=\\\"comments\\\" *ngFor=\\\"let excomment of externalCommentList\\\">\\r\\n              <div class=\\\"row username-content\\\">\\r\\n                <p> <i class=\\\"material-icons\\\">comment</i> {{excomment?.actionBy?.firstName}}\\r\\n                  {{excomment.actionBy.lastName}}<b> ({{excomment.role.replaceAll('_', ' ').replaceAll('ROLE' , '')}}) |\\r\\n                    {{excomment.actionDate | date:'fullDate'}} | {{excomment.actionDate | date:'hh:mm:ss aa'}} </b>\\r\\n\\r\\n                    <b *ngIf=\\\"excomment?.modifiedBy != undefined && excomment?.modifiedDate != undefined\\\"> | Modified by:\\r\\n                      {{excomment.modifiedBy}} ({{excomment.modifiedDate}}) </b>\\r\\n\\r\\n                    <!-- <span class=\\\"a-icon\\\" *ngIf=\\\"excomment?.actionBy?.id === currentUser?.id || currentUser?.userRole?.name === 'ROLE_REVIEWER'\\\"\\r\\n                    [hidden]=\\\"disabledComment\\\">\\r\\n                      <i class=\\\"material-icons\\\" (click)=\\\"deleteComment(excomment)\\\" matTooltip=\\\"Delete\\\">delete</i>\\r\\n                    </span> -->\\r\\n                    <span class=\\\"a-icon\\\" *ngIf=\\\"excomment?.actionBy?.id === currentUser?.id || currentUser?.userRole?.name === 'ROLE_REVIEWER'\\\"\\r\\n                      [hidden]=\\\"disabledComment\\\">\\r\\n                      <i class=\\\"material-icons\\\" style=\\\"color:blue\\\" (click)=\\\"modifyExternalComment(excomment)\\\" matTooltip=\\\"Edit\\\">edit</i>\\r\\n                    </span>\\r\\n                  </p>\\r\\n              </div>\\r\\n              <div class=\\\"comment-content\\\">\\r\\n                <div class=\\\"inner-html\\\" [innerHTML]=\\\"excomment.comment\\\"></div>\\r\\n              </div>\\r\\n            </form>\\r\\n            <div class=\\\"no-record\\\"\\r\\n              *ngIf=\\\"externalCommentList.length==0 && disabledComment\\\">\\r\\n              No results found.\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </mat-tab>\\r\\n    <!-- END OF TAB FOR EXTERNAL COMMENTS -->\\r\\n  </mat-tab-group>\\r\\n</form>\\r\\n\";","export default \".badge {\\n  color: black;\\n  width: auto;\\n  font-size: medium;\\n}\\n\\n.dropdown-badge {\\n  color: white;\\n  float: left;\\n  font-size: 15px;\\n  margin: 10px 0px 0px 0px;\\n  font-weight: 500;\\n}\\n\\n.float-right {\\n  text-align: end;\\n}\\n\\n.required {\\n  color: #C5140C;\\n  font-size: 16px;\\n  margin-left: 4px;\\n}\\n\\n::ng-deep .mat-tooltip {\\n  font-size: large;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9wYWdlcy9hcHBsaWNhdGlvbnMvY2xpZW50LWluZm9ybWF0aW9uL2NsaWVudC1pbmZvcm1hdGlvbi5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLFlBQUE7RUFDQSxXQUFBO0VBQ0EsaUJBQUE7QUFDSjs7QUFHQTtFQUNFLFlBQUE7RUFDQSxXQUFBO0VBQ0EsZUFBQTtFQUNBLHdCQUFBO0VBQ0EsZ0JBQUE7QUFBRjs7QUFHQTtFQUNFLGVBQUE7QUFBRjs7QUFHQTtFQUNFLGNBQUE7RUFDQSxlQUFBO0VBQ0EsZ0JBQUE7QUFBRjs7QUFJRTtFQUNFLGdCQUFBO0FBREoiLCJmaWxlIjoic3JjL2FwcC9tb2R1bGVzL3BhZ2VzL2FwcGxpY2F0aW9ucy9jbGllbnQtaW5mb3JtYXRpb24vY2xpZW50LWluZm9ybWF0aW9uLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmJhZGdlIHtcclxuICAgIGNvbG9yOiBibGFjaztcclxuICAgIHdpZHRoOiBhdXRvO1xyXG4gICAgZm9udC1zaXplOiBtZWRpdW07XHJcbiAgICBcclxufVxyXG5cclxuLmRyb3Bkb3duLWJhZGdle1xyXG4gIGNvbG9yOiB3aGl0ZTtcclxuICBmbG9hdDogbGVmdDtcclxuICBmb250LXNpemU6IDE1cHg7XHJcbiAgbWFyZ2luOiAxMHB4IDBweCAwcHggMHB4O1xyXG4gIGZvbnQtd2VpZ2h0OiA1MDA7XHJcbn1cclxuXHJcbi5mbG9hdC1yaWdodCB7XHJcbiAgdGV4dC1hbGlnbjogZW5kO1xyXG59XHJcblxyXG4ucmVxdWlyZWQge1xyXG4gIGNvbG9yOiAjQzUxNDBDO1xyXG4gIGZvbnQtc2l6ZTogMTZweDtcclxuICBtYXJnaW4tbGVmdDogNHB4O1xyXG59XHJcblxyXG46Om5nLWRlZXAge1xyXG4gIC5tYXQtdG9vbHRpcCB7XHJcbiAgICBmb250LXNpemU6IGxhcmdlO1xyXG4gIH1cclxufSJdfQ== */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTable, MatTableDataSource } from '@angular/material/table';\r\nimport { ApiService, DataStorageService } from '@services';\r\nimport { ENDPOINTS } from '@shared';\r\nimport { ModalMultipleApplicationsComponent } from './modal-multiple-applications/modal-multiple-applications.component';\r\n\r\n\r\nexport interface companyDetails {\r\n  referenceCode: string;\r\n  amount: number;\r\n}\r\n\r\nconst ELEMENT_DATA: companyDetails[] = [\r\n  { referenceCode: 'Company one ', amount: 3000, },\r\n  { referenceCode: 'Company two ', amount: 4000, },\r\n  { referenceCode: 'Company three ', amount: 5000, },\r\n  { referenceCode: 'Company two ', amount: 6000, },\r\n  { referenceCode: 'Company three ', amount: 7000, },\r\n];\r\n\r\n@Component({\r\n  selector: 'app-multiple-applications',\r\n  templateUrl: './multiple-applications.component.html',\r\n  styleUrls: ['./multiple-applications.component.scss']\r\n})\r\nexport class MultipleApplicationsComponent implements OnInit {\r\n\r\n  @ViewChild(MatPaginator, { static: false }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: false }) sort: MatSort;\r\n  @ViewChild(MatTable, { static: false }) table: MatTable<Object>;\r\n\r\n  dataSource: MatTableDataSource<any>\r\n  displayedColumns: string[] = ['adTitle', 'typeOfApplication', 'brand', 'product', 'applicantCompanyName', 'paymentStatus'];\r\n  paymentList = [];\r\n  currentUser: any;\r\n\r\n\r\n  constructor(\r\n    private apiService: ApiService,\r\n    private dialog: MatDialog,\r\n    private dataStorage: DataStorageService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.currentUser = this.dataStorage.getUserAccount();\r\n    this.getS1MultiplePaymentList();\r\n  }\r\n\r\n  getS1MultiplePaymentList() {\r\n    this.apiService.findAll(ENDPOINTS.applicationFormPresentor + `${this.currentUser.id}/multiple-application?paymentStatus=FOR_PAYMENT`)\r\n    .subscribe((res: any) => {\r\n      this.paymentList = res.responseData.data;\r\n\r\n      this.dataSource = new MatTableDataSource<any>(this.paymentList);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    }, (err: any) => {\r\n    });\r\n  }\r\n\r\n  openModal(res) {\r\n    const dialogRef = this.dialog.open(ModalMultipleApplicationsComponent, {\r\n      width: '60%',\r\n      height: '85%',\r\n      data: res\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        console.log(result);\r\n        this.getS1MultiplePaymentList();\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n\r\n}\r\n","import { USER_ROLES } from './../../../../../../shared/utils/constants';\r\nimport { Component, Inject, Input, OnDestroy, OnInit, Optional } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { Router } from '@angular/router';\r\nimport { AttachmentDocument, Payment, S1Application } from '@models';\r\nimport { ApiService, DataStorageService, SweetAlertService } from '@services';\r\nimport { ATTACHMENT_TYPE, ENDPOINTS, PAYMENT_STATUS } from '@shared';\r\nimport { ApplicationSingleMedia } from 'app/core/models/application-single-media.model';\r\nimport { FileStorageService } from 'app/core/services/file.storage.service';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-modal-single-application',\r\n  templateUrl: './modal-single-application.component.html',\r\n  styleUrls: ['./modal-single-application.component.scss']\r\n})\r\nexport class ModalSingleApplicationComponent implements OnInit, OnDestroy {\r\n\r\n  @Input() s1Application = new S1Application();\r\n  attachmentDocument = new AttachmentDocument();\r\n  applicationSingleMedia = new ApplicationSingleMedia();\r\n  payment = new Payment();\r\n\r\n  paymentTypeList = [];\r\n  attachmentDocuments = [];\r\n\r\n\r\n  paymentType: any;\r\n  safeURLProofOfPayment: any;\r\n  selectedFiles: any;\r\n  currentUser: any;\r\n  attachment: any;\r\n  previewDocument = false;\r\n  isSubmitted = false;\r\n  paymentDetails: any;\r\n  typeOfMediumDisplay = '';\r\n\r\n  paymentForm: FormGroup;\r\n\r\n  constructor(\r\n    private sanitizer: DomSanitizer,\r\n    private apiService: ApiService,\r\n    public dataStorage: DataStorageService,\r\n    private fileStorageService: FileStorageService,\r\n    private sweetAlertService: SweetAlertService,\r\n    private router: Router,\r\n    private spinner: NgxSpinnerService,\r\n    @Optional() public dialogRef: MatDialogRef<ModalSingleApplicationComponent>,\r\n    @Optional() @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {\r\n    if (data) {\r\n      if (data) {\r\n        this.s1Application = data;\r\n        console.log('S1', this.s1Application);\r\n\r\n        switch (this.s1Application?.refTypeOfMedium || this.payment?.applicationFormS2?.applicationForm?.refTypeOfMedium) {\r\n          case 'SINGLE MEDIA':\r\n            this.getApplicationSingleMedia();\r\n            break;\r\n          case 'MULTIMEDIA-MOVING':\r\n            this.getMultimediaMoving();\r\n            break;\r\n          case 'MULTIMEDIA-STATIC':\r\n            this.getMultimediaStatic();\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n        this.getPaymentDetails();\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.currentUser = this.dataStorage.getUserAccount();\r\n    this.getPaymentList();\r\n  }\r\n\r\n  getPaymentDetails() {\r\n    this.apiService.findAll(ENDPOINTS.paymentDetails + this.s1Application.id).subscribe((res: any) => {\r\n      this.paymentDetails = res;\r\n      this.paymentDetails.vat = this.paymentDetails.vat.toFixed(2);\r\n    });\r\n  }\r\n\r\n  getPaymentList() {\r\n    this.apiService.findAll(ENDPOINTS.paymentType).subscribe((res: any) => {\r\n      this.paymentTypeList = res.responseData.data;\r\n      if (this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT) {\r\n        const creditCardIndex = this.paymentTypeList\r\n          .findIndex((element) => element.paymentDescription === 'Credit Card');\r\n        this.paymentTypeList.splice(creditCardIndex, 1);\r\n      }\r\n    });\r\n  }\r\n\r\n  selectFile(event) {\r\n    const attachmentSize = event.target.files[0].size;\r\n\r\n    if (event.target.files[0].type === 'application/pdf') {\r\n      if (attachmentSize > 15000000) { // 1MB = 1M\r\n        this.sweetAlertService.customErrorMessage(`Attachments' total file size should not exceed 15MB.`);\r\n        event.target.value = '';\r\n        return;\r\n      } else {\r\n        const pdfURL = URL.createObjectURL(event.target.files[0]);\r\n        this.safeURLProofOfPayment = this.sanitizer.bypassSecurityTrustResourceUrl(pdfURL);\r\n        this.previewDocument = true;\r\n        // env.showSpinner = true;\r\n        const reader = new FileReader();\r\n        const [file] = event.target.files;\r\n\r\n        reader.readAsDataURL(file);\r\n        reader.onload = () => {\r\n        };\r\n      }\r\n\r\n      this.selectedFiles = event.target.files;\r\n    } else {\r\n      this.sweetAlertService.customErrorMessage('Attachment should be in PDF format only.');\r\n      event.target.value = '';\r\n      return;\r\n    }\r\n  }\r\n\r\n  uploadDocument(s1Application) {\r\n    Swal.fire({\r\n      text: 'Are you sure you want to submit this PROOF OF PAYMENT?',\r\n      icon: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Confirm'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.spinner.show();\r\n        let params = '';\r\n        params = '?&attachmentType=' + ATTACHMENT_TYPE.PAYMENT + '&submissionType=ORIGINAL';\r\n\r\n        this.fileStorageService.pushFileToStorage(ENDPOINTS.attachmentDocument, this.selectedFiles.item(0), params)\r\n          .subscribe(res => {\r\n            const obj = res.responseData.data;\r\n            console.log(obj);\r\n            this.s1Application.paymentAttachmentReference = obj.paymentAttachmentReference;\r\n            this.payment.paymentAttachmentReference = obj.paymentAttachmentReference;\r\n            this.payment.amountDue = s1Application.amount;\r\n            this.payment.applicationForm = s1Application;\r\n            this.payment.appFormReference = s1Application.appFormReference;\r\n            this.payment.filename = obj.filename;\r\n            this.saveProofOfPayment();\r\n          }, (err: any) => {\r\n            this.spinner.hide();\r\n            this.sweetAlertService.error(err);\r\n          }, () => {\r\n            // actions after subscription\r\n            this.spinner.hide();\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  saveProofOfPayment() {\r\n    this.spinner.show();\r\n    console.log('Saving payment...');\r\n    this.payment.id = 0;\r\n    this.payment.officialReceiptNo = '';\r\n    this.payment.paymentMethod = null;\r\n    console.log('PAYMENT : ', this.payment);\r\n    this.apiService.save(`${ENDPOINTS.applicationFormPresentor}payment-type-id/${this.paymentType.id}/payment/submit`, this.payment)\r\n      .subscribe((res: any) => {\r\n        console.log('SAVED STATUS: ', res);\r\n        if (res.responseData.data) {\r\n          this.safeURLProofOfPayment = this.sanitizer.bypassSecurityTrustResourceUrl(res.responseData.data.fileURL);\r\n          this.isSubmitted = true;\r\n          this.sweetAlertService.customSuccessMessage('Proof of payment successfully submitted.');\r\n          this.closeModal();\r\n        } else {\r\n          this.sweetAlertService.customErrorMessage('Error saving payment.');\r\n        }\r\n\r\n        this.spinner.hide();\r\n        // this.previewDocument = true;\r\n        this.selectedFiles = undefined;\r\n        this.router.navigateByUrl('asc/page/application/single-application');\r\n      }, (err) => {\r\n        console.log(err);\r\n        this.sweetAlertService.error(err);\r\n        this.spinner.hide();\r\n      }, () => {\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  closeModal(): void {\r\n    this.dialogRef.close();\r\n    this.router.navigate(['asc/page/application/single-application']);\r\n  }\r\n  ngOnDestroy(): void {\r\n    // this.s1Application = null;\r\n  }\r\n\r\n  getApplicationSingleMedia() {\r\n    this.apiService.findByParam(ENDPOINTS.applicationSingleMedia,\r\n      `app-form-reference/${this.s1Application?.appFormReference}`).subscribe(\r\n        (res: any) => {\r\n          if (res.responseData.data.length > 0) {\r\n            this.applicationSingleMedia = res.responseData.data[0];\r\n            this.typeOfMediumDisplay = `${this.applicationSingleMedia?.mediumExecution?.typeOfMedium?.description} (${this.applicationSingleMedia?.sizeLength})`;\r\n          } else {\r\n            this.typeOfMediumDisplay = '';\r\n          }\r\n        }, (err: any) => {\r\n          this.typeOfMediumDisplay = '';\r\n        });\r\n  }\r\n\r\n  getMultimediaStatic() {\r\n    this.apiService.findByParam(ENDPOINTS.applicationMultimedia,\r\n      `app-form-reference/${this.s1Application?.appFormReference}`).subscribe(\r\n        (res: any) => {\r\n          if (res.responseData.data.length > 0) {\r\n            const multimediaList = new Set(res.responseData.data.map(mappedList => `${mappedList?.typeOfMedium?.description} (${mappedList?.multimediaSizeLength})`));\r\n\r\n            this.typeOfMediumDisplay = '';\r\n            let mediaCtrl = 1;\r\n            for (const media of multimediaList) {\r\n              if (mediaCtrl !== multimediaList.size) {\r\n                this.typeOfMediumDisplay += `${media}, `;\r\n                mediaCtrl++;\r\n              } else {\r\n                this.typeOfMediumDisplay += media;\r\n              }\r\n            }\r\n          } else {\r\n            this.typeOfMediumDisplay = '';\r\n          }\r\n        }, (err: any) => {\r\n          this.typeOfMediumDisplay = '';\r\n        });\r\n  }\r\n\r\n  getMultimediaMoving() {\r\n    this.apiService.findByParam(ENDPOINTS.applicationMultimedia,\r\n      `app-form-reference/${this.s1Application?.appFormReference}`).subscribe(\r\n        (res: any) => {\r\n          if (res.responseData.data.length > 0) {\r\n            const multimediaList = new Set(res.responseData.data.map(mappedList => `${mappedList?.typeOfMedium?.description} (${mappedList?.multimediaSizeLength})`));\r\n\r\n            this.typeOfMediumDisplay = '';\r\n            let mediaCtrl = 1;\r\n            for (const media of multimediaList) {\r\n              if (mediaCtrl !== multimediaList.size) {\r\n                this.typeOfMediumDisplay += `${media}, `;\r\n                mediaCtrl++;\r\n              } else {\r\n                this.typeOfMediumDisplay += media;\r\n              }\r\n            }\r\n          } else {\r\n            this.typeOfMediumDisplay = '';\r\n          }\r\n        }, (err: any) => {\r\n          this.typeOfMediumDisplay = '';\r\n        });\r\n  }\r\n}\r\n","export default \".numbers-input {\\n  text-align: end;\\n}\\n\\n.total {\\n  font-weight: 900;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9wYWdlcy9hcHBsaWNhdGlvbnMvc2NoZWR1bGUtb2YtZmVlcy9zcGVjaWFsLWFwcGxpY2F0aW9ucy9tb2RhbC1zcGVjaWFsLWFwcGxpY2F0aW9ucy9tb2RhbC1zcGVjaWFsLWFwcGxpY2F0aW9ucy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGVBQUE7QUFDRjs7QUFFQTtFQUNFLGdCQUFBO0FBQ0YiLCJmaWxlIjoic3JjL2FwcC9tb2R1bGVzL3BhZ2VzL2FwcGxpY2F0aW9ucy9zY2hlZHVsZS1vZi1mZWVzL3NwZWNpYWwtYXBwbGljYXRpb25zL21vZGFsLXNwZWNpYWwtYXBwbGljYXRpb25zL21vZGFsLXNwZWNpYWwtYXBwbGljYXRpb25zLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm51bWJlcnMtaW5wdXR7XHJcbiAgdGV4dC1hbGlnbjogZW5kO1xyXG59XHJcblxyXG4udG90YWx7XHJcbiAgZm9udC13ZWlnaHQ6IDkwMDtcclxufVxyXG4iXX0= */\";","import { USER_ROLES } from './../../../../../../shared/utils/constants';\r\nimport { Component, Inject, Input, OnDestroy, OnInit, Optional } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { Router } from '@angular/router';\r\nimport { AttachmentDocument, Payment, S2Application } from '@models';\r\nimport { ApiService, DataStorageService, SweetAlertService } from '@services';\r\nimport { ATTACHMENT_TYPE, ENDPOINTS, PAYMENT_STATUS } from '@shared';\r\nimport { ApplicationSingleMedia } from 'app/core/models/application-single-media.model';\r\nimport { FileStorageService } from 'app/core/services/file.storage.service';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-modal-special-applications',\r\n  templateUrl: './modal-special-applications.component.html',\r\n  styleUrls: ['./modal-special-applications.component.scss']\r\n})\r\nexport class ModalSpecialApplicationsComponent implements OnInit, OnDestroy {\r\n\r\n  @Input() s2Application = new S2Application();\r\n  attachmentDocument = new AttachmentDocument();\r\n  payment = new Payment();\r\n  applicationSingleMedia = new ApplicationSingleMedia();\r\n\r\n\r\n  paymentTypeList = [];\r\n  attachmentDocuments = [];\r\n\r\n\r\n  paymentType: any;\r\n  safeURLProofOfPayment: any;\r\n  selectedFiles: any;\r\n  currentUser: any;\r\n  attachment: any;\r\n  previewDocument = false;\r\n  isSubmitted = false;\r\n  paymentDetails: any;\r\n  typeOfMediumDisplay = '';\r\n\r\n  paymentForm: FormGroup;\r\n\r\n  constructor(\r\n    private sanitizer: DomSanitizer,\r\n    private apiService: ApiService,\r\n    public dataStorage: DataStorageService,\r\n    private fileStorageService: FileStorageService,\r\n    private sweetAlertService: SweetAlertService,\r\n    private router: Router,\r\n    private spinner: NgxSpinnerService,\r\n    @Optional() public dialogRef: MatDialogRef<ModalSpecialApplicationsComponent>,\r\n    @Optional() @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {\r\n    if (data) {\r\n      if (data) {\r\n        this.s2Application = data;\r\n        console.log('S2', this.s2Application);\r\n        switch (this.s2Application?.applicationForm?.refTypeOfMedium || this.payment?.applicationFormS2?.applicationForm?.refTypeOfMedium) {\r\n          case 'SINGLE MEDIA':\r\n            this.getApplicationSingleMedia();\r\n            break;\r\n          case 'MULTIMEDIA-MOVING':\r\n            this.getMultimediaMoving();\r\n            break;\r\n          case 'MULTIMEDIA-STATIC':\r\n            this.getMultimediaStatic();\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n        this.getPaymentDetails();\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.currentUser = this.dataStorage.getUserAccount();\r\n    this.getPaymentList();\r\n  }\r\n\r\n  getPaymentDetails() {\r\n    this.apiService.findAll(ENDPOINTS.specialPaymentDetails + this.s2Application.id).subscribe((res: any) => {\r\n      this.paymentDetails = res;\r\n      this.paymentDetails.vat = this.paymentDetails.vat.toFixed(2);\r\n    });\r\n  }\r\n\r\n  getPaymentList() {\r\n    this.apiService.findAll(ENDPOINTS.paymentType).subscribe((res: any) => {\r\n      this.paymentTypeList = res.responseData.data;\r\n      if (this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT) {\r\n        const creditCardIndex = this.paymentTypeList\r\n          .findIndex((element) => element.paymentDescription === 'Credit Card');\r\n        this.paymentTypeList.splice(creditCardIndex, 1);\r\n      }\r\n    });\r\n  }\r\n\r\n  selectFile(event) {\r\n    const attachmentSize = event.target.files[0].size;\r\n\r\n    if (event.target.files[0].type === 'application/pdf') {\r\n      if (attachmentSize > 15000000) { // 1MB = 1M\r\n        this.sweetAlertService.customErrorMessage(`Attachments' total file size should not exceed 15MB.`);\r\n        event.target.value = '';\r\n        return;\r\n      } else {\r\n        const pdfURL = URL.createObjectURL(event.target.files[0]);\r\n        this.safeURLProofOfPayment = this.sanitizer.bypassSecurityTrustResourceUrl(pdfURL);\r\n        this.previewDocument = true;\r\n        // env.showSpinner = true;\r\n        const reader = new FileReader();\r\n        const [file] = event.target.files;\r\n\r\n        reader.readAsDataURL(file);\r\n        reader.onload = () => {\r\n        };\r\n      }\r\n\r\n      this.selectedFiles = event.target.files;\r\n    } else {\r\n      this.sweetAlertService.customErrorMessage('Attachment should be in PDF format only.');\r\n      event.target.value = '';\r\n      return;\r\n    }\r\n  }\r\n\r\n  uploadDocument(s2Application) {\r\n    Swal.fire({\r\n      text: 'Are you sure you want to submit this PROOF OF PAYMENT?',\r\n      icon: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Confirm'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.spinner.show();\r\n        let params = '';\r\n        params = '?&attachmentType=' + ATTACHMENT_TYPE.PAYMENT + '&submissionType=' + s2Application.submissionType;\r\n        this.fileStorageService.pushFileToStorage(ENDPOINTS.attachmentDocument, this.selectedFiles.item(0), params)\r\n          .subscribe(res => {\r\n            const obj = res.responseData.data;\r\n            console.log(obj);\r\n            this.s2Application.paymentAttachmentReference = obj.paymentAttachmentReference;\r\n            this.payment.paymentAttachmentReference = obj.paymentAttachmentReference;\r\n            this.payment.amountDue = s2Application.amount;\r\n            this.payment.applicationFormS2 = s2Application;\r\n            this.payment.appFormReference = s2Application.appFormReference;\r\n            this.payment.filename = obj.filename;\r\n            this.saveProofOfPayment();\r\n            // this.previewDocument = true;\r\n            this.selectedFiles = undefined;\r\n            this.spinner.hide();\r\n            this.router.navigateByUrl('asc/page/application/special-applications');\r\n          }, (err: any) => {\r\n            this.spinner.hide();\r\n            this.sweetAlertService.error(err);\r\n          }, () => {\r\n            // actions after subscription\r\n            this.spinner.hide();\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  saveProofOfPayment() {\r\n    console.log('Saving payment...');\r\n    this.dataStorage.setDisplayProgressbar(true);\r\n    this.payment.paymentStatus = PAYMENT_STATUS.UNPAID;\r\n    this.payment.id = 0;\r\n    this.payment.officialReceiptNo = '';\r\n    this.payment.paymentMethod = null;\r\n    console.log('PAYMENT : ', this.payment);\r\n\r\n    this.apiService.save(`${ENDPOINTS.s2ApplicationFormPresentor}payment-type-id/${this.paymentType.id}\r\n    /payment-special-clearing/submit`, this.payment).subscribe((res: any) => {\r\n      console.log('SAVED STATUS: ', res.responseData.data);\r\n\r\n      this.safeURLProofOfPayment = this.sanitizer.bypassSecurityTrustResourceUrl(res.responseData.data.fileURL);\r\n      this.isSubmitted = true;\r\n      this.sweetAlertService.customSuccessMessage('Proof of payment successfully submitted.');\r\n      this.closeModal();\r\n    }, (err) => {\r\n      console.log(err);\r\n      this.sweetAlertService.error(err);\r\n      this.dataStorage.setDisplayProgressbar(false);\r\n    }, () => {\r\n      this.dataStorage.setDisplayProgressbar(false);\r\n    });\r\n  }\r\n\r\n  closeModal(): void {\r\n    this.dialogRef.close();\r\n    this.router.navigate(['asc/page/application/special-applications']);\r\n  }\r\n  ngOnDestroy(): void {\r\n    // this.s2Application = null;\r\n  }\r\n\r\n  getApplicationSingleMedia() {\r\n    this.apiService.findByParam(ENDPOINTS.applicationSingleMedia,\r\n      `app-form-reference/${this.s2Application?.applicationForm?.appFormReference}`).subscribe(\r\n        (res: any) => {\r\n          if (res.responseData.data.length > 0) {\r\n            this.applicationSingleMedia = res.responseData.data[0];\r\n            this.typeOfMediumDisplay = `${this.applicationSingleMedia?.mediumExecution?.typeOfMedium?.description} (${this.applicationSingleMedia?.sizeLength})`;\r\n          } else {\r\n            this.typeOfMediumDisplay = '';\r\n          }\r\n        }, (err: any) => {\r\n          this.typeOfMediumDisplay = '';\r\n        });\r\n  }\r\n\r\n  getMultimediaStatic() {\r\n    this.apiService.findByParam(ENDPOINTS.applicationMultimedia,\r\n      `app-form-reference/${this.s2Application?.applicationForm?.appFormReference}`).subscribe(\r\n        (res: any) => {\r\n          if (res.responseData.data.length > 0) {\r\n            const multimediaList = new Set(res.responseData.data.map(mappedList => `${mappedList?.typeOfMedium?.description} (${mappedList?.multimediaSizeLength})`));\r\n\r\n            this.typeOfMediumDisplay = '';\r\n            let mediaCtrl = 1;\r\n            for (const media of multimediaList) {\r\n              if (mediaCtrl !== multimediaList.size) {\r\n                this.typeOfMediumDisplay += `${media}, `;\r\n                mediaCtrl++;\r\n              } else {\r\n                this.typeOfMediumDisplay += media;\r\n              }\r\n            }\r\n          } else {\r\n            this.typeOfMediumDisplay = '';\r\n          }\r\n        }, (err: any) => {\r\n          this.typeOfMediumDisplay = '';\r\n        });\r\n  }\r\n\r\n  getMultimediaMoving() {\r\n    this.apiService.findByParam(ENDPOINTS.applicationMultimedia,\r\n      `app-form-reference/${this.s2Application?.applicationForm?.appFormReference}`).subscribe(\r\n        (res: any) => {\r\n          if (res.responseData.data.length > 0) {\r\n            const multimediaList = new Set(res.responseData.data.map(mappedList => `${mappedList?.typeOfMedium?.description} (${mappedList?.multimediaSizeLength})`));\r\n\r\n            this.typeOfMediumDisplay = '';\r\n            let mediaCtrl = 1;\r\n            for (const media of multimediaList) {\r\n              if (mediaCtrl !== multimediaList.size) {\r\n                this.typeOfMediumDisplay += `${media}, `;\r\n                mediaCtrl++;\r\n              } else {\r\n                this.typeOfMediumDisplay += media;\r\n              }\r\n            }\r\n          } else {\r\n            this.typeOfMediumDisplay = '';\r\n          }\r\n        }, (err: any) => {\r\n          this.typeOfMediumDisplay = '';\r\n        });\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcGFnZXMvYXBwbGljYXRpb25zL3BlcmZvcm1hbmNlLW1ldHJpY3MvcGVyZm9ybWFuY2UtbWV0cmljcy5jb21wb25lbnQuc2NzcyJ9 */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcGFnZXMvYXBwbGljYXRpb25zL3NjaGVkdWxlLW9mLWZlZXMvc3BlY2lhbC1hcHBsaWNhdGlvbnMvc3BlY2lhbC1hcHBsaWNhdGlvbnMuY29tcG9uZW50LnNjc3MifQ== */\";","import { MultiMediaStatic } from './multimedia-static.model';\r\nexport class MultiMediaStaticConst{\r\n    data: Array<MultiMediaStatic> = new Array<MultiMediaStatic>();\r\n    constructor(){\r\n        this.data = [\r\n            {\r\n                id: 0,\r\n                multimediaStaticMedium: 'collaterals',\r\n                hasSelected: false,\r\n                sizeLength: 0\r\n              },\r\n              {\r\n                id: 1,\r\n                multimediaStaticMedium: 'digital static',\r\n                hasSelected: false,\r\n                sizeLength: 0\r\n              },\r\n              {\r\n                id: 2,\r\n                multimediaStaticMedium: 'ooh',\r\n                hasSelected: false,\r\n                sizeLength: 0\r\n              },\r\n              {\r\n                id: 3,\r\n                multimediaStaticMedium: 'print',\r\n                hasSelected: false,\r\n                sizeLength: 0\r\n              }\r\n        ]\r\n    }\r\n}","export default \"<form [formGroup]=\\\"clientInformationForm\\\"\\r\\n*ngIf=\\\"s1Application?.multipleApplication?.submissionStatus !== 'UNPROCESSED' &&\\r\\n        s1Application?.status !== 'DISAPPROVED' &&\\r\\n        s1Application?.status !== 'APPROVED' &&\\r\\n        s1Application?.status !== 'APPROVED' &&\\r\\n        multipleApplication?.status !== 'APPROVED' &&\\r\\n        s1Application?.applicationRequest?.status !== 'APPROVED'\\\">\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <!-- <mat-form-field class=\\\"col-md-5\\\" appearance=\\\"outline\\\">\\r\\n      <mat-label>Client Membership Affiliation</mat-label>\\r\\n      <mat-select [(ngModel)]=\\\"s1Application.membersAffiliation\\\" name=\\\"membersAffiliation\\\" formControlName=\\\"membersAffiliation\\\"\\r\\n        [compareWith]=\\\"compareMembersAffiliation\\\" [disabled]=\\\"isAscUser && isDisableFieldOnUpdate\\\">\\r\\n        <mat-option *ngFor=\\\"let i of memberAffiliationList\\\" [value]=\\\"i\\\">\\r\\n          {{i.description}}\\r\\n        </mat-option>\\r\\n      </mat-select>\\r\\n    </mat-form-field> -->\\r\\n\\r\\n    <div class=\\\"col-md-12 float-right\\\" style=\\\"padding-bottom:10px;\\\" *ngIf=\\\"s1Application?.company?.status === 'FOR_APPROVAL' && isAscUser\\\">\\r\\n      <button mat-raised-button class=\\\"button-red\\\" (click)=\\\"openNewCompanyModal('update')\\\">\\r\\n        <i class=\\\"material-icons color__white\\\">error_outline</i> View/Approve Company\\r\\n      </button>\\r\\n      <br>\\r\\n    </div>\\r\\n\\r\\n    <mat-form-field class=\\\"col-md-7\\\" appearance=\\\"outline\\\">\\r\\n      <mat-label>Client Company Name\\r\\n        <span class=\\\"badge rounded-pill bg-warning\\\" *ngIf=\\\"s1Application?.company?.status === 'FOR_APPROVAL' \\\">\\r\\n          For Approval\\r\\n        </span>\\r\\n        <span class=\\\"badge rounded-pill bg-danger\\\" *ngIf=\\\"s1Application?.company?.delinquent \\\">\\r\\n          With Penalty\\r\\n        </span>\\r\\n        <span class=\\\"required\\\">*</span>\\r\\n      </mat-label>\\r\\n      <mat-select [(ngModel)]=\\\"s1Application.company\\\" name=\\\"company\\\" formControlName=\\\"company\\\"\\r\\n        [compareWith]=\\\"compareCompanyName\\\"\\r\\n        [disabled]=\\\"(isAscUser && isDisableFieldOnUpdate) || (s2Application?.applicationForm || s1Application?.status === 'FOR_APPROVAL')\\\">\\r\\n        <mat-option (click)=\\\"isNewCompany=true;showCompanyAddress=false\\\" value=\\\"\\\" (click)=\\\"openNewCompanyModal()\\\">\\r\\n          <span class=\\\"badge bg-success dropdown-badge\\\">Add New Company</span>\\r\\n        </mat-option>\\r\\n        <mat-option *ngFor=\\\"let i of companyList\\\" [value]=\\\"i\\\" (click)=\\\"getCompanyAddress(i.companyName)\\\">\\r\\n          {{i.companyName}}\\r\\n        </mat-option>\\r\\n        <!-- <mat-option >[New\\r\\n          Company]</mat-option> -->\\r\\n      </mat-select>\\r\\n    </mat-form-field>\\r\\n\\r\\n    <mat-form-field class=\\\"col-md-5\\\" appearance=\\\"outline\\\" *ngIf=\\\"s1Application.company\\\">\\r\\n      <mat-label>\\r\\n        Client Membership Affiliation\\r\\n        <span class=\\\"badge rounded-pill bg-danger\\\"\\r\\n          *ngIf=\\\"s1Application?.company?.membersAffiliation?.status === 'INACTIVE' \\\">\\r\\n          Inactive\\r\\n        </span>\\r\\n      </mat-label>\\r\\n      <input matInput readonly [value]=\\\"s1Application?.company?.membersAffiliation?.description\\\">\\r\\n    </mat-form-field>\\r\\n\\r\\n    <!-- <div class=\\\"col-md-4\\\" *ngIf=\\\"s1Application?.applicationForm?.company?.status === 'FOR_APPROVAL' \\\">\\r\\n      <span class=\\\"badge rounded-pill bg-warning\\\">\\r\\n        For Approval\\r\\n      </span>\\r\\n    </div> -->\\r\\n\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"isNewCompany==true\\\" [hidden]=\\\"s1Application?.company?.status !== 'FOR_APPROVAL'\\\">\\r\\n      <!-- <mat-form-field class=\\\"col-md-4\\\" appearance=\\\"outline\\\">\\r\\n        <mat-label>Client Membership Affiliation</mat-label>\\r\\n        <mat-select [(ngModel)]=\\\"company.membersAffiliation\\\" name=\\\"membersAffiliation\\\" [compareWith]=\\\"compareMembersAffiliation\\\"\\r\\n          formControlName=\\\"membersAffiliation\\\" matNativeControl required>\\r\\n          <mat-option *ngFor=\\\"let i of memberAffiliationList\\\" [value]=\\\"i\\\">\\r\\n            {{i.description}}\\r\\n          </mat-option>\\r\\n        </mat-select>\\r\\n      </mat-form-field> -->\\r\\n\\r\\n      <mat-form-field class=\\\"col-md-4\\\" appearance=\\\"outline\\\" [hidden]=\\\" company?.country?.id > 1 && company?.country \\\">\\r\\n        <mat-label>Country</mat-label>\\r\\n        <!-- <input matInput disabled value=\\\"PHIL\\\"> -->\\r\\n        <!-- <input matInput disabled [(ngModel)]=\\\"company.country\\\" formControlName=\\\"country\\\"> -->\\r\\n        <mat-select [(ngModel)]=\\\"company.country\\\" name=\\\"country\\\" [compareWith]=\\\"compareCountry\\\"\\r\\n          formControlName=\\\"country\\\" matNativeControl required disabled>\\r\\n          <mat-option *ngFor=\\\"let i of countryList\\\" [value]=\\\"i\\\">\\r\\n            {{i.code}} - {{i.name}}\\r\\n          </mat-option>\\r\\n        </mat-select>\\r\\n      </mat-form-field>\\r\\n\\r\\n      <mat-form-field class=\\\"col-md-8\\\" appearance=\\\"outline\\\" [hidden]=\\\"company?.country?.id > 1 && company?.country \\\">\\r\\n        <mat-label>Complete Address</mat-label>\\r\\n        <textarea matInput [(ngModel)]=\\\"company.completeAddress\\\" formControlName=\\\"companyAddress\\\" name=\\\"completeAddress\\\"\\r\\n          [readonly]=\\\"true\\\"></textarea>\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"showCompanyAddress==true\\\">\\r\\n      <!-- FOR S1 APPLICATION FORM -->\\r\\n      <mat-form-field class=\\\"col-md-8\\\" appearance=\\\"outline\\\">\\r\\n        <mat-label>Company Address</mat-label>\\r\\n        <textarea matInput readonly [value]=\\\"s1Application?.company?.completeAddress\\\"></textarea>\\r\\n      </mat-form-field>\\r\\n\\r\\n      <mat-form-field class=\\\"col-md-4\\\" appearance=\\\"outline\\\">\\r\\n        <mat-label>Country</mat-label>\\r\\n        <input matInput readonly [value]=\\\"s1Application?.company?.country?.name\\\">\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <mat-form-field class=\\\"col-md-4\\\" appearance=\\\"outline\\\">\\r\\n      <mat-label>\\r\\n        Brand\\r\\n        <span class=\\\"badge rounded-pill bg-warning\\\" *ngIf=\\\"s1Application?.brand?.status === 'FOR_APPROVAL'\\\">\\r\\n          For Approval\\r\\n        </span>\\r\\n        <span class=\\\"badge rounded-pill bg-danger\\\" *ngIf=\\\"s1Application?.brand?.penalty\\\">\\r\\n          With Penalty\\r\\n        </span>\\r\\n        <span class=\\\"required\\\">*</span>\\r\\n      </mat-label>\\r\\n      <mat-select [(ngModel)]=\\\"s1Application.brand\\\" name=\\\"brand\\\" formControlName=\\\"brand\\\" [compareWith]=\\\"compareBrand\\\"\\r\\n        [disabled]=\\\"(isAscUser && isDisableFieldOnUpdate) || (s2Application?.applicationForm || s1Application?.status === 'FOR_APPROVAL')\\\" matTooltip=\\\"Client's Brand\\\"\\r\\n        (selectionChange)=\\\"setBrand()\\\">\\r\\n        <mat-option value=\\\"\\\" (click)=\\\"openNewBrandModal()\\\"><span class=\\\"badge bg-success dropdown-badge\\\">Add New Brand</span></mat-option>\\r\\n        <mat-option *ngFor=\\\"let i of brandList\\\" [value]=\\\"i\\\">\\r\\n          {{i.description}}\\r\\n        </mat-option>\\r\\n      </mat-select>\\r\\n    </mat-form-field>\\r\\n\\r\\n    <mat-form-field class=\\\"col-md-4\\\" appearance=\\\"outline\\\">\\r\\n      <mat-label>\\r\\n        Product\\r\\n        <span class=\\\"badge rounded-pill bg-warning\\\" *ngIf=\\\"s1Application?.product?.status === 'FOR_APPROVAL'\\\">\\r\\n          For Approval\\r\\n        </span>\\r\\n        <span class=\\\"required\\\">*</span>\\r\\n      </mat-label>\\r\\n      <mat-select [(ngModel)]=\\\"s1Application.product\\\" name=\\\"product\\\" formControlName=\\\"product\\\"\\r\\n        [compareWith]=\\\"compareProduct\\\" (selectionChange)=\\\"setProductList()\\\"\\r\\n        [disabled]=\\\"(isAscUser && isDisableFieldOnUpdate || (s2Application?.applicationForm || s1Application?.status === 'FOR_APPROVAL')) || !s1Application.brand\\\">\\r\\n        <mat-option value=\\\"\\\" (click)=\\\"openNewProductModal()\\\"><span class=\\\"badge bg-success dropdown-badge\\\">Add New Product</span></mat-option>\\r\\n        <mat-option *ngFor=\\\"let i of productList\\\" [value]=\\\"i\\\">\\r\\n          {{i.description}}\\r\\n        </mat-option>\\r\\n      </mat-select>\\r\\n    </mat-form-field>\\r\\n\\r\\n    <mat-form-field class=\\\"col-md-4\\\" appearance=\\\"outline\\\">\\r\\n      <mat-label>Category</mat-label>\\r\\n      <input matInput readonly [value]=\\\"s1Application?.product?.category?.description\\\" />\\r\\n    </mat-form-field>\\r\\n\\r\\n    <!-- <mat-form-field *ngIf=\\\"s1Application.brand\\\" class=\\\"col-md-4\\\" appearance=\\\"outline\\\">\\r\\n      <mat-label>Product</mat-label>\\r\\n      <input matInput [(ngModel)]=\\\"s1Application.brand.product.description\\\" name=\\\"product\\\" formControlName=\\\"product\\\"\\r\\n        readonly>\\r\\n    </mat-form-field> -->\\r\\n\\r\\n    <!-- <mat-form-field *ngIf=\\\"s1Application.brand\\\" class=\\\"col-md-4\\\" appearance=\\\"outline\\\">\\r\\n      <mat-label>Category</mat-label>\\r\\n      <input matInput [(ngModel)]=\\\"s1Application.brand.category.description\\\" name=\\\"category\\\" formControlName=\\\"category\\\"\\r\\n        readonly>\\r\\n    </mat-form-field> -->\\r\\n    <!-- <div class=\\\"col-md-4\\\" *ngIf=\\\"s1Application?.brand?.status === 'FOR_APPROVAL' \\\">\\r\\n      <span class=\\\"badge rounded-pill bg-warning\\\">\\r\\n        For Approval\\r\\n      </span>\\r\\n    </div> -->\\r\\n    <div class=\\\"col-md-12 float-right\\\" style=\\\"padding-bottom:10px;\\\" *ngIf=\\\"s1Application?.brand?.status === 'FOR_APPROVAL' && isAscUser\\\">\\r\\n      <button mat-raised-button class=\\\"button-red\\\" (click)=\\\"openNewBrandModal('update')\\\">\\r\\n        <i class=\\\"material-icons color__white\\\">error_outline</i> View/Approve Brand\\r\\n      </button>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-12 float-right\\\" style=\\\"padding-bottom:10px;\\\" *ngIf=\\\"s1Application?.product?.status === 'FOR_APPROVAL' && isAscUser\\\">\\r\\n      <button mat-raised-button class=\\\"button-red\\\" (click)=\\\"openNewProductModal('update')\\\">\\r\\n        <i class=\\\"material-icons color__white\\\">error_outline</i> View/Approve Product\\r\\n      </button>\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\\r\\n\\r\\n<!-- FOR MULTIPLE/SPECIAL PREVIEW -->\\r\\n<div class=\\\"row\\\" *ngIf=\\\"multipleApplication?.status === 'APPROVED' || s1Application?.multipleApplication?.submissionStatus === 'UNPROCESSED' || s1Application?.status === 'APPROVED' || s1Application?.status === 'DISAPPROVED' || s1Application?.applicationRequest?.status === 'APPROVED'\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <!-- <div class=\\\"col-md-4\\\" appearance=\\\"outline\\\">\\r\\n        <mat-label>Client Membership Affiliation</mat-label>\\r\\n        <input matInput [value]=\\\"previewS1Application?.membersAffiliation?.description\\\" disabled>\\r\\n      </div> -->\\r\\n    <mat-form-field class=\\\"col-md-4\\\" appearance=\\\"outline\\\">\\r\\n      <mat-label>Client Company Name</mat-label>\\r\\n      <input matInput [value]=\\\"s1Application?.company?.companyName\\\" readonly>\\r\\n    </mat-form-field>\\r\\n    <mat-form-field class=\\\"col-md-4\\\" appearance=\\\"outline\\\">\\r\\n      <mat-label>Client Membership Affiliation</mat-label>\\r\\n      <input matInput [value]=\\\"s1Application?.company?.membersAffiliation?.description\\\" readonly>\\r\\n    </mat-form-field>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <mat-form-field class=\\\"col-md-4\\\" appearance=\\\"outline\\\">\\r\\n      <mat-label>Brand</mat-label>\\r\\n      <input matInput [value]=\\\"s1Application?.brand?.description\\\" readonly>\\r\\n    </mat-form-field>\\r\\n    <mat-form-field class=\\\"col-md-4\\\" appearance=\\\"outline\\\">\\r\\n      <mat-label>Product</mat-label>\\r\\n      <input matInput [value]=\\\"s1Application?.product?.description\\\" readonly>\\r\\n    </mat-form-field>\\r\\n    <mat-form-field class=\\\"col-md-4\\\" appearance=\\\"outline\\\">\\r\\n      <mat-label>Category</mat-label>\\r\\n      <input matInput [value]=\\\"s1Application?.product?.category?.description\\\" readonly>\\r\\n    </mat-form-field>\\r\\n  </div>\\r\\n</div>\\r\\n\";","export * from './accounting.module';\r\nexport * from './add-payment/add-payment.component';\r\nexport * from './add-payment/add-payment.module';\r\nexport * from './list-payment/list-payment.component';\r\nexport * from './list-payment/list-payment.module';","export default \"<form>\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-12 title\\\">\\r\\n          <mat-label>\\r\\n            <mat-icon>view_list</mat-icon> Individual Applications - For Payment\\r\\n          </mat-label>\\r\\n        </div>\\r\\n      </div>\\r\\n      <hr>\\r\\n      <br>\\r\\n      <div class=\\\"col-md-12\\\" fxLayout fxLayoutAlign=\\\"center center\\\">\\r\\n        <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n          <input matInput type=\\\"text\\\" placeholder=\\\"Company Name\\\">\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"mat-elevation-z8 fields\\\">\\r\\n        <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\r\\n          <ng-container matColumnDef=\\\"referenceCode\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> REFERENCE CODE </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element; let i = index\\\" (click)=\\\"openModal(element)\\\"> {{element?.referenceCode | uppercase}}</td>\\r\\n          </ng-container>\\r\\n          <ng-container matColumnDef=\\\"typeOfApplication\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> TYPE OF APPLICATION</th>\\r\\n            <td mat-cell *matCellDef=\\\"let element; let i = index\\\" (click)=\\\"openModal(element)\\\">{{element?.applicationType.description | uppercase}} - {{element?.formType?.replaceAll('_',' ') | uppercase}}</td>\\r\\n          </ng-container>\\r\\n          <ng-container matColumnDef=\\\"brand\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> BRAND</th>\\r\\n            <td mat-cell *matCellDef=\\\"let element; let i = index\\\" (click)=\\\"openModal(element)\\\">{{element?.brand.description | uppercase}}</td>\\r\\n          </ng-container>\\r\\n          <ng-container matColumnDef=\\\"medium\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> MEDIUM</th>\\r\\n            <td mat-cell *matCellDef=\\\"let element; let i = index\\\" (click)=\\\"openModal(element)\\\">{{element?.typeOfMedium | uppercase}}</td>\\r\\n          </ng-container>\\r\\n          <ng-container matColumnDef=\\\"applicantCompanyName\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> APPLICANT COMPANY NAME</th>\\r\\n            <td mat-cell *matCellDef=\\\"let element; let i = index\\\" (click)=\\\"openModal(element)\\\">{{element?.company.companyName | uppercase}}</td>\\r\\n          </ng-container>\\r\\n          <ng-container matColumnDef=\\\"paymentStatus\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> PAYMENT STATUS</th>\\r\\n            <td mat-cell *matCellDef=\\\"let element; let i = index\\\" (click)=\\\"openModal(element)\\\">{{element?.paymentStatus?.replaceAll('_',' ') | uppercase}}</td>\\r\\n          </ng-container>\\r\\n\\r\\n\\r\\n\\r\\n          <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n          <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n        </table>\\r\\n        <div class=\\\"no-record\\\" [hidden]=\\\"dataSource && dataSource?.data?.length > 0\\\">\\r\\n          No record found.\\r\\n        </div>\\r\\n        <mat-paginator [pageSizeOptions]=\\\"[10, 20, 50]\\\" showFirstLastButtons></mat-paginator>\\r\\n      </div>\\r\\n      <br>\\r\\n    </div>\\r\\n  </form>\\r\\n\";","export default \"\\r\\n  <div class=\\\"row fields\\\">\\r\\n    <h4>\\r\\n      <i class=\\\"material-icons\\\">label_important</i> &nbsp;Proof of Payment\\r\\n    </h4>\\r\\n    <br>\\r\\n    <div class=\\\"col-md-4\\\" appearance=\\\"outline\\\">\\r\\n      <mat-label>Filename: </mat-label><br>\\r\\n      <input class=\\\"file-upload\\\" type=\\\"file\\\" accept=\\\".pdf\\\" (change)=\\\"selectFile($event)\\\" [hidden]=\\\"isSubmitted==true\\\"><br><br>\\r\\n\\r\\n      <div class=\\\"col-md-10\\\">\\r\\n        <div class=\\\"col-md-5\\\" appearance=\\\"outline\\\">\\r\\n          <mat-label>Amount Due:</mat-label>\\r\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"s1Application.amount\\\" class=\\\"form-control amountDue\\\" [disabled]=\\\"true\\\" name=\\\"amountDue\\\">\\r\\n        </div>\\r\\n        <br>\\r\\n        <mat-form-field class=\\\"col-md-8\\\" appearance=\\\"outline\\\">\\r\\n          <mat-label>Payment Mode<span class=\\\"required-field\\\"> <mat-icon>notification_important</mat-icon>\\r\\n          </span></mat-label>\\r\\n          <mat-select [(ngModel)]=\\\"payment.paymentMethod\\\" name=\\\"paymentMethod\\\">\\r\\n            <mat-option *ngFor=\\\"let i of paymentTypeList\\\" [value]=\\\"i\\\" (click)=\\\"selectedPaymentType(i)\\\">\\r\\n              {{i.paymentDescription}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n        <br>\\r\\n        <form [formGroup]=\\\"paymentForm\\\">\\r\\n        <div class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n          <mat-label>Remarks:</mat-label>\\r\\n          <textarea width=\\\"20\\\"  height=\\\"20\\\" [(ngModel)]=\\\"payment.remarks\\\" class=\\\"form-control\\\" name=\\\"remarks\\\" formControlName=\\\"remarks\\\"></textarea>\\r\\n        </div>\\r\\n\\r\\n</form>\\r\\n\\r\\n      </div>\\r\\n      <br><br>\\r\\n      <!-- <button mat-raised-button class=\\\"button-red button-right\\\" (click)=\\\"uploadDocument()\\\" *ngIf=\\\"enableUploadButton==true\\\">\\r\\n        <i class=\\\"material-icons add-document\\\">upload</i> UPLOAD\\r\\n      </button> -->\\r\\n    </div>\\r\\n    <div class=\\\"col-md-8\\\" appearance=\\\"outline\\\" *ngIf=\\\"previewDocument==true\\\">\\r\\n      <div class=\\\"file-upload\\\">\\r\\n        <object [data]=\\\"safeURLProofOfPayment\\\" type=\\\"application/pdf\\\" width=\\\"100%\\\" height=\\\"400\\\">\\r\\n          <iframe [src]=\\\"safeURLProofOfPayment\\\" width=\\\"100%\\\" height=\\\"400\\\">\\r\\n            <p>This browser does not support PDF!</p>\\r\\n          </iframe>\\r\\n        </object>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\"><br></div>\\r\\n    <div class=\\\"col-md-12\\\" appearance=\\\"outline\\\" [hidden]=\\\"isSubmitted==true\\\">\\r\\n        <button mat-raised-button class=\\\"button-red button-right\\\" (click)=\\\"uploadDocument(s1Application)\\\" *ngIf=\\\"previewDocument==true\\\" [disabled]=\\\"!paymentType\\\">\\r\\n            <i class=\\\"material-icons add-document\\\">save</i> SUBMIT\\r\\n        </button>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\"><br></div>\\r\\n  </div>\\r\\n\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { URL_PATHS } from '@shared';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: URL_PATHS.S1_APPLICATION,\r\n    loadChildren: () => import('./s1-application/s1-application.module')\r\n      .then(m => m.S1ApplicationModule)\r\n  },\r\n  {\r\n    path: URL_PATHS.S2_APPLICATION,\r\n    loadChildren: () => import('./s2-application/s2-application.module')\r\n      .then(m => m.S2ApplicationModule)\r\n  },\r\n  {\r\n    path: URL_PATHS.SCHEDULE_OF_FEES_SINGLE_APPLICATION,\r\n    loadChildren: () => import('./schedule-of-fees/single-application/single-application.module')\r\n      .then(m => m.SingleApplicationModule)\r\n  },\r\n  {\r\n    path: URL_PATHS.SCHEDULE_OF_FEES_SINGLE_APPLICATION + '/:id',\r\n    loadChildren: () => import('./schedule-of-fees/single-application/single-application.module')\r\n      .then(m => m.SingleApplicationModule)\r\n  },\r\n  {\r\n    path: URL_PATHS.SCHEDULE_OF_FEES_MULTIPLE_APPLICATIONS,\r\n    loadChildren: () => import('./schedule-of-fees/multiple-applications/multiple-applications.module')\r\n      .then(m => m.MultipleApplicationsModule)\r\n  },\r\n  {\r\n    path: URL_PATHS.SCHEDULE_OF_FEES_MULTIPLE_APPLICATIONS + '/:id',\r\n    loadChildren: () => import('./schedule-of-fees/multiple-applications/multiple-applications.module')\r\n      .then(m => m.MultipleApplicationsModule)\r\n  },\r\n  {\r\n    path: URL_PATHS.SCHEDULE_OF_FEES_SPECIAL_APPLICATIONS,\r\n    loadChildren: () => import('./schedule-of-fees/special-applications/special-applications.module')\r\n      .then(m => m.SpecialApplicationsModule)\r\n  },\r\n  {\r\n    path: URL_PATHS.ACCOUNTS_PAYABLE,\r\n    loadChildren: () => import('./schedule-of-fees/accounts-payable/accounts-payable.module')\r\n      .then(m => m.AccountsPayableModule)\r\n  },\r\n  {\r\n    path: URL_PATHS.SCHEDULE_OF_FEES_SPECIAL_APPLICATIONS + '/:id',\r\n    loadChildren: () => import('./schedule-of-fees/special-applications/special-applications.module')\r\n      .then(m => m.SpecialApplicationsModule)\r\n  },\r\n  {\r\n    path: URL_PATHS.APPLICATION_REASSIGNMENT,\r\n    loadChildren: () => import('./reassignment/reassignment.module')\r\n      .then(m => m.ReassignmentModule)\r\n  }\r\n];\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ApplicationsRoutingModule { }\r\n","export default \"th {\\n  background-color: rgba(202, 202, 202, 0.438);\\n  font-weight: 500;\\n  color: black;\\n}\\n\\n.row {\\n  align-items: center;\\n}\\n\\n.tr-center {\\n  text-align: center;\\n}\\n\\n.main-table .material-icons {\\n  color: white;\\n}\\n\\n.toa-tab .material-icons {\\n  color: white;\\n}\\n\\n.icon {\\n  text-align: end;\\n}\\n\\n.legend-content {\\n  padding: 5px 10px;\\n  border: #dadada solid 2px;\\n  border-radius: 5px;\\n}\\n\\n.legend-table {\\n  width: 100%;\\n  font-size: 10px;\\n  font-weight: 600;\\n}\\n\\n.legend-table .legend-box {\\n  padding: 5px;\\n  display: inline-block;\\n  margin-right: 4%;\\n  vertical-align: sub;\\n  border: solid 1px #8a8a8a;\\n}\\n\\n.legend-table td {\\n  margin: auto;\\n}\\n\\n.legend-table td .legend-orange {\\n  background-color: #fca402;\\n}\\n\\n.legend-table td .legend-green {\\n  background-color: #8fcf8f;\\n}\\n\\n.legend-table td .legend-blue {\\n  background-color: lightblue;\\n}\\n\\n.legend-table td .legend-red {\\n  background-color: #ff8a7b;\\n}\\n\\n.legend-table td .legend-purple {\\n  background-color: violet;\\n}\\n\\n.legend-table td .legend-yellow {\\n  background-color: yellow;\\n}\\n\\n.c-badge {\\n  position: relative;\\n  top: -10px;\\n  padding-left: 20px;\\n  z-index: 10;\\n}\\n\\n.button-right {\\n  float: right;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9wYWdlcy9hcHBsaWNhdGlvbnMvczItYXBwbGljYXRpb24vbGlzdC1zMi1hcHBsaWNhdGlvbi9saXN0LXMyLWFwcGxpY2F0aW9uLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsNENBQUE7RUFDQSxnQkFBQTtFQUNBLFlBQUE7QUFDRjs7QUFFQTtFQUNFLG1CQUFBO0FBQ0Y7O0FBQ0E7RUFDRSxrQkFBQTtBQUVGOztBQUVFO0VBQ0UsWUFBQTtBQUNKOztBQUlFO0VBQ0UsWUFBQTtBQURKOztBQUtBO0VBQ0UsZUFBQTtBQUZGOztBQUtBO0VBQ0UsaUJBQUE7RUFDQSx5QkFBQTtFQUNBLGtCQUFBO0FBRkY7O0FBSUE7RUFDRSxXQUFBO0VBQ0EsZUFBQTtFQUNBLGdCQUFBO0FBREY7O0FBRUU7RUFDRSxZQUFBO0VBQ0EscUJBQUE7RUFDQSxnQkFBQTtFQUNBLG1CQUFBO0VBQ0EseUJBQUE7QUFBSjs7QUFFRTtFQUNFLFlBQUE7QUFBSjs7QUFDSTtFQUNFLHlCQUFBO0FBQ047O0FBQ0k7RUFDRSx5QkFBQTtBQUNOOztBQUVJO0VBQ0UsMkJBQUE7QUFBTjs7QUFHSTtFQUNFLHlCQUFBO0FBRE47O0FBSUk7RUFDRSx3QkFBQTtBQUZOOztBQUtJO0VBQ0Usd0JBQUE7QUFITjs7QUFRQTtFQUNFLGtCQUFBO0VBQ0UsVUFBQTtFQUVBLGtCQUFBO0VBQ0EsV0FBQTtBQU5KOztBQVNBO0VBQ0UsWUFBQTtBQU5GIiwiZmlsZSI6InNyYy9hcHAvbW9kdWxlcy9wYWdlcy9hcHBsaWNhdGlvbnMvczItYXBwbGljYXRpb24vbGlzdC1zMi1hcHBsaWNhdGlvbi9saXN0LXMyLWFwcGxpY2F0aW9uLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsidGgge1xyXG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjAyLCAyMDIsIDIwMiwgMC40MzgpO1xyXG4gIGZvbnQtd2VpZ2h0OiA1MDA7XHJcbiAgY29sb3I6IGJsYWNrO1xyXG59XHJcblxyXG4ucm93IHtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG59XHJcbi50ci1jZW50ZXIge1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxufVxyXG5cclxuLm1haW4tdGFibGUge1xyXG4gIC5tYXRlcmlhbC1pY29ucyB7XHJcbiAgICBjb2xvcjogd2hpdGU7XHJcbiAgfVxyXG59XHJcblxyXG4udG9hLXRhYiB7XHJcbiAgLm1hdGVyaWFsLWljb25zIHtcclxuICAgIGNvbG9yOiB3aGl0ZTtcclxuICB9XHJcbn1cclxuXHJcbi5pY29uIHtcclxuICB0ZXh0LWFsaWduOiBlbmQ7XHJcbn1cclxuXHJcbi5sZWdlbmQtY29udGVudCB7XHJcbiAgcGFkZGluZzogNXB4IDEwcHg7XHJcbiAgYm9yZGVyOiByZ2IoMjE4LCAyMTgsIDIxOCkgc29saWQgMnB4O1xyXG4gIGJvcmRlci1yYWRpdXM6IDVweDtcclxufVxyXG4ubGVnZW5kLXRhYmxlIHtcclxuICB3aWR0aDogMTAwJTtcclxuICBmb250LXNpemU6IDEwcHg7XHJcbiAgZm9udC13ZWlnaHQ6IDYwMDtcclxuICAubGVnZW5kLWJveCB7XHJcbiAgICBwYWRkaW5nOiA1cHg7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IDQlO1xyXG4gICAgdmVydGljYWwtYWxpZ246IHN1YjtcclxuICAgIGJvcmRlcjogc29saWQgMXB4IHJnYigxMzgsIDEzOCwgMTM4KTtcclxuICB9XHJcbiAgdGQge1xyXG4gICAgbWFyZ2luOiBhdXRvO1xyXG4gICAgLmxlZ2VuZC1vcmFuZ2Uge1xyXG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmNhNDAyO1xyXG4gICAgfVxyXG4gICAgLmxlZ2VuZC1ncmVlbiB7XHJcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICM4ZmNmOGY7XHJcbiAgICB9XHJcblxyXG4gICAgLmxlZ2VuZC1ibHVlIHtcclxuICAgICAgYmFja2dyb3VuZC1jb2xvcjogbGlnaHRibHVlO1xyXG4gICAgfVxyXG5cclxuICAgIC5sZWdlbmQtcmVkIHtcclxuICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmOGE3YjtcclxuICAgIH1cclxuXHJcbiAgICAubGVnZW5kLXB1cnBsZSB7XHJcbiAgICAgIGJhY2tncm91bmQtY29sb3I6IHZpb2xldDtcclxuICAgIH1cclxuXHJcbiAgICAubGVnZW5kLXllbGxvdyB7XHJcbiAgICAgIGJhY2tncm91bmQtY29sb3I6IHllbGxvdztcclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcbi5jLWJhZGdle1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIHRvcDogLTEwcHg7XHJcbiAgICAvLyBsZWZ0OiAyMnB4O1xyXG4gICAgcGFkZGluZy1sZWZ0OiAyMHB4O1xyXG4gICAgei1pbmRleDogMTA7XHJcbn1cclxuXHJcbi5idXR0b24tcmlnaHR7XHJcbiAgZmxvYXQ6IHJpZ2h0O1xyXG59Il19 */\";","export default \"/* Accordion */\\n.action-buttons {\\n  padding-bottom: 20px;\\n  float: right;\\n}\\n.headers-align .mat-expansion-panel-header-title,\\n.headers-align .mat-expansion-panel-header-description {\\n  flex-basis: 0;\\n  font-size: 1.25em;\\n  align-items: center;\\n}\\n.headers-align .mat-expansion-panel-header-description {\\n  justify-content: space-between;\\n  align-items: center;\\n}\\n.tooltip .tooltiptext {\\n  width: 120px;\\n  bottom: 100%;\\n  left: 50%;\\n  margin-left: -60px;\\n  /* Use half of the width (120/2 = 60), to center the tooltip */\\n}\\n.mat-expansion-panel-header {\\n  border: 1px solid #BFBFBF;\\n}\\ninput[type=file] {\\n  display: none;\\n}\\n.custom-file-upload {\\n  border: 1px solid #ccc;\\n  display: inline-block;\\n  padding: 6px 12px;\\n  cursor: pointer;\\n}\\n.mat-expansion-panel-header.mat-expanded:hover,\\n.mat-expansion-panel-header {\\n  background: #bad9ff;\\n}\\n.mat-expansion-panel .mat-expansion-panel-header.cdk-keyboard-focused:not([aria-disabled=true]),\\n.mat-expansion-panel .mat-expansion-panel-header.cdk-program-focused:not([aria-disabled=true]),\\n.mat-expansion-panel:not(.mat-expanded) .mat-expansion-panel-header:hover:not([aria-disabled=true]) {\\n  background: #cfe5ff;\\n}\\n.field-value {\\n  color: gray;\\n  font-weight: 600;\\n}\\n/* table for status display */\\ntable tr td {\\n  padding: 10px 16px;\\n  border-radius: 7px;\\n  font: 500 14px/20px Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  width: 31%;\\n}\\ntable tr td:nth-child(odd) {\\n  background-color: #ff5252;\\n  color: white;\\n  border: 1px solid white;\\n}\\ntable tr td:nth-child(even) {\\n  color: #ff5252;\\n  border: 1px solid #0000001f;\\n}\\n.no-border {\\n  background-color: transparent !important;\\n  border: 0px !important;\\n  padding: 0px !important;\\n  width: 5px;\\n  height: 5px !important;\\n}\\n.dialog-button-content {\\n  vertical-align: bottom;\\n  text-align: center;\\n}\\n.dialog-button-content button {\\n  color: white;\\n  border: none;\\n  padding: 5px 10px 5px 5px;\\n  margin: 0px 5px;\\n  font-weight: 500;\\n  border-radius: 5px;\\n}\\n.dialog-button-content .warn {\\n  background-color: red;\\n}\\n.dialog-button-content .caution {\\n  background-color: #dfd000;\\n  color: black;\\n}\\n.dialog-button-content .confirm {\\n  background-color: #449bff;\\n}\\ntable {\\n  width: 100%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9mcmFnbWVudHMvdXBkYXRlLXNwZWNpYWwtYXBwbGljYXRpb24vdXBkYXRlLXNwZWNpYWwtYXBwbGljYXRpb24uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsY0FBQTtBQUNBO0VBQ0ksb0JBQUE7RUFDQSxZQUFBO0FBQ0o7QUFFQTs7RUFFSSxhQUFBO0VBQ0EsaUJBQUE7RUFDQSxtQkFBQTtBQUNKO0FBRUE7RUFDSSw4QkFBQTtFQUNBLG1CQUFBO0FBQ0o7QUFFQTtFQUNJLFlBQUE7RUFDQSxZQUFBO0VBQ0EsU0FBQTtFQUNBLGtCQUFBO0VBQ0EsOERBQUE7QUFDSjtBQUVBO0VBQ0kseUJBQUE7QUFDSjtBQUdBO0VBQ0ksYUFBQTtBQUFKO0FBR0E7RUFDSSxzQkFBQTtFQUNBLHFCQUFBO0VBQ0EsaUJBQUE7RUFDQSxlQUFBO0FBQUo7QUFHQTs7RUFFSSxtQkFBQTtBQUFKO0FBSUE7OztFQUdJLG1CQUFBO0FBREo7QUFJQTtFQUNJLFdBQUE7RUFDQSxnQkFBQTtBQURKO0FBSUEsNkJBQUE7QUFFSTtFQUNJLGtCQUFBO0VBQ0Esa0JBQUE7RUFDQSx3REFBQTtFQUNBLFVBQUE7QUFGUjtBQUtJO0VBQ0kseUJBQUE7RUFDQSxZQUFBO0VBQ0EsdUJBQUE7QUFIUjtBQU1JO0VBQ0ksY0FBQTtFQUNBLDJCQUFBO0FBSlI7QUFRQTtFQUNJLHdDQUFBO0VBQ0Esc0JBQUE7RUFDQSx1QkFBQTtFQUNBLFVBQUE7RUFDQSxzQkFBQTtBQUxKO0FBU0E7RUFDSSxzQkFBQTtFQUNBLGtCQUFBO0FBTko7QUFRSTtFQUNJLFlBQUE7RUFDQSxZQUFBO0VBQ0EseUJBQUE7RUFDQSxlQUFBO0VBQ0EsZ0JBQUE7RUFDQSxrQkFBQTtBQU5SO0FBU0k7RUFDSSxxQkFBQTtBQVBSO0FBVUk7RUFDSSx5QkFBQTtFQUNBLFlBQUE7QUFSUjtBQVdJO0VBQ0kseUJBQUE7QUFUUjtBQWFBO0VBQ0ksV0FBQTtBQVZKIiwiZmlsZSI6InNyYy9hcHAvbW9kdWxlcy9mcmFnbWVudHMvdXBkYXRlLXNwZWNpYWwtYXBwbGljYXRpb24vdXBkYXRlLXNwZWNpYWwtYXBwbGljYXRpb24uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBBY2NvcmRpb24gKi9cclxuLmFjdGlvbi1idXR0b25zIHtcclxuICAgIHBhZGRpbmctYm90dG9tOiAyMHB4O1xyXG4gICAgZmxvYXQ6IHJpZ2h0O1xyXG59XHJcblxyXG4uaGVhZGVycy1hbGlnbiAubWF0LWV4cGFuc2lvbi1wYW5lbC1oZWFkZXItdGl0bGUsXHJcbi5oZWFkZXJzLWFsaWduIC5tYXQtZXhwYW5zaW9uLXBhbmVsLWhlYWRlci1kZXNjcmlwdGlvbiB7XHJcbiAgICBmbGV4LWJhc2lzOiAwO1xyXG4gICAgZm9udC1zaXplOiAxLjI1ZW07XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG59XHJcblxyXG4uaGVhZGVycy1hbGlnbiAubWF0LWV4cGFuc2lvbi1wYW5lbC1oZWFkZXItZGVzY3JpcHRpb24ge1xyXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxufVxyXG5cclxuLnRvb2x0aXAgLnRvb2x0aXB0ZXh0IHtcclxuICAgIHdpZHRoOiAxMjBweDtcclxuICAgIGJvdHRvbTogMTAwJTtcclxuICAgIGxlZnQ6IDUwJTtcclxuICAgIG1hcmdpbi1sZWZ0OiAtNjBweDtcclxuICAgIC8qIFVzZSBoYWxmIG9mIHRoZSB3aWR0aCAoMTIwLzIgPSA2MCksIHRvIGNlbnRlciB0aGUgdG9vbHRpcCAqL1xyXG59XHJcblxyXG4ubWF0LWV4cGFuc2lvbi1wYW5lbC1oZWFkZXIge1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgI0JGQkZCRjtcclxufVxyXG5cclxuLy8gdXBsb2FkIGJ1dHRvblxyXG5pbnB1dFt0eXBlPVwiZmlsZVwiXSB7XHJcbiAgICBkaXNwbGF5OiBub25lO1xyXG59XHJcblxyXG4uY3VzdG9tLWZpbGUtdXBsb2FkIHtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICBwYWRkaW5nOiA2cHggMTJweDtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxufVxyXG5cclxuLm1hdC1leHBhbnNpb24tcGFuZWwtaGVhZGVyLm1hdC1leHBhbmRlZDpob3ZlcixcclxuLm1hdC1leHBhbnNpb24tcGFuZWwtaGVhZGVyIHtcclxuICAgIGJhY2tncm91bmQ6ICNiYWQ5ZmY7XHJcbiAgICAvLyBiYWNrZ3JvdW5kOiAjZDU3ODkyXHJcbn1cclxuXHJcbi5tYXQtZXhwYW5zaW9uLXBhbmVsIC5tYXQtZXhwYW5zaW9uLXBhbmVsLWhlYWRlci5jZGsta2V5Ym9hcmQtZm9jdXNlZDpub3QoW2FyaWEtZGlzYWJsZWQ9dHJ1ZV0pLFxyXG4ubWF0LWV4cGFuc2lvbi1wYW5lbCAubWF0LWV4cGFuc2lvbi1wYW5lbC1oZWFkZXIuY2RrLXByb2dyYW0tZm9jdXNlZDpub3QoW2FyaWEtZGlzYWJsZWQ9dHJ1ZV0pLFxyXG4ubWF0LWV4cGFuc2lvbi1wYW5lbDpub3QoLm1hdC1leHBhbmRlZCkgLm1hdC1leHBhbnNpb24tcGFuZWwtaGVhZGVyOmhvdmVyOm5vdChbYXJpYS1kaXNhYmxlZD10cnVlXSkge1xyXG4gICAgYmFja2dyb3VuZDogI2NmZTVmZjtcclxufVxyXG5cclxuLmZpZWxkLXZhbHVlIHtcclxuICAgIGNvbG9yOiBncmF5O1xyXG4gICAgZm9udC13ZWlnaHQ6IDYwMDtcclxufVxyXG5cclxuLyogdGFibGUgZm9yIHN0YXR1cyBkaXNwbGF5ICovXHJcbnRhYmxlIHRyIHtcclxuICAgIHRkIHtcclxuICAgICAgICBwYWRkaW5nOiAxMHB4IDE2cHg7XHJcbiAgICAgICAgYm9yZGVyLXJhZGl1czogN3B4O1xyXG4gICAgICAgIGZvbnQ6IDUwMCAxNHB4LzIwcHggUm9ib3RvLCBcIkhlbHZldGljYSBOZXVlXCIsIHNhbnMtc2VyaWY7XHJcbiAgICAgICAgd2lkdGg6IDMxJTtcclxuICAgIH1cclxuXHJcbiAgICB0ZDpudGgtY2hpbGQob2RkKSB7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmNTI1MjtcclxuICAgICAgICBjb2xvcjogd2hpdGU7XHJcbiAgICAgICAgYm9yZGVyOiAxcHggc29saWQgd2hpdGU7XHJcbiAgICB9XHJcblxyXG4gICAgdGQ6bnRoLWNoaWxkKGV2ZW4pIHtcclxuICAgICAgICBjb2xvcjogI2ZmNTI1MjtcclxuICAgICAgICBib3JkZXI6IDFweCBzb2xpZCAjMDAwMDAwMWY7XHJcbiAgICB9XHJcbn1cclxuXHJcbi5uby1ib3JkZXIge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQgIWltcG9ydGFudDtcclxuICAgIGJvcmRlcjogMHB4ICFpbXBvcnRhbnQ7XHJcbiAgICBwYWRkaW5nOiAwcHggIWltcG9ydGFudDtcclxuICAgIHdpZHRoOiA1cHg7XHJcbiAgICBoZWlnaHQ6IDVweCAhaW1wb3J0YW50O1xyXG59XHJcblxyXG4vLyBidXR0b25cclxuLmRpYWxvZy1idXR0b24tY29udGVudCB7XHJcbiAgICB2ZXJ0aWNhbC1hbGlnbjogYm90dG9tO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG5cclxuICAgIGJ1dHRvbiB7XHJcbiAgICAgICAgY29sb3I6IHdoaXRlO1xyXG4gICAgICAgIGJvcmRlcjogbm9uZTtcclxuICAgICAgICBwYWRkaW5nOiA1cHggMTBweCA1cHggNXB4O1xyXG4gICAgICAgIG1hcmdpbjogMHB4IDVweDtcclxuICAgICAgICBmb250LXdlaWdodDogNTAwO1xyXG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICAgIH1cclxuXHJcbiAgICAud2FybiB7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogcmVkO1xyXG4gICAgfVxyXG5cclxuICAgIC5jYXV0aW9uIHtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjIzLCAyMDgsIDApO1xyXG4gICAgICAgIGNvbG9yOiByZ2IoMCwgMCwgMCk7XHJcbiAgICB9XHJcblxyXG4gICAgLmNvbmZpcm0ge1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYig2OCwgMTU1LCAyNTUpO1xyXG4gICAgfVxyXG59XHJcblxyXG50YWJsZSB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxufSJdfQ== */\";","export default \"<div class=\\\"mat-elevation-z8\\\">\\r\\n    <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"decisionFormFilename\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef> Decision Form Filename </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{ element?.decisionFormFilename }} </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <!-- VIEW ICON START -->\\r\\n        <ng-container matColumnDef=\\\"viewDecisionFormIcon\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef> View Decision Form </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n                <span class=\\\"material-icons\\\" *ngIf=\\\"element?.decisionFormFileURL\\\" matTooltip=\\\"View Decision Form\\\"\\r\\n                    (click)=\\\"viewFormOrMaterial(element?.decisionFormFileURL)\\\">open_in_new</span>\\r\\n            </td>\\r\\n        </ng-container>\\r\\n        <!-- VIEW ICON END -->\\r\\n\\r\\n        <ng-container matColumnDef=\\\"stampMaterialFilename\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef> Stamp Material Filename </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{ element?.stampMaterialFilename }} </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <!-- VIEW ICON START -->\\r\\n        <ng-container matColumnDef=\\\"viewStampMaterialIcon\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef> View Stamp Material </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n                <span class=\\\"material-icons\\\" *ngIf=\\\"element?.stampMaterialFileURL\\\" matTooltip=\\\"View Stamp Material\\\"\\r\\n                    (click)=\\\"viewFormOrMaterial(element?.stampMaterialFileURL)\\\">open_in_new</span>\\r\\n            </td>\\r\\n        </ng-container>\\r\\n        <!-- VIEW ICON END -->\\r\\n\\r\\n        <ng-container matColumnDef=\\\"clearanceToaFilename\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef> Clearance TOA Filename </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{ element?.clearanceToaFilename }} </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <!-- VIEW ICON START -->\\r\\n        <ng-container matColumnDef=\\\"viewClearanceToaIcon\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef> View Clearance TOA </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n                <span class=\\\"material-icons\\\" *ngIf=\\\"element?.clearanceToaFileUrl\\\" matTooltip=\\\"View Clearance TOA\\\"\\r\\n                    (click)=\\\"viewFormOrMaterial(element?.clearanceToaFileUrl)\\\">open_in_new</span>\\r\\n            </td>\\r\\n        </ng-container>\\r\\n        <!-- VIEW ICON END -->\\r\\n\\r\\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n    </table>\\r\\n    <div class=\\\"no-record\\\" [hidden]=\\\"dataSource && dataSource?.data?.length > 0\\\">\\r\\n        No record found.\\r\\n    </div>\\r\\n    <mat-paginator [pageSizeOptions]=\\\"[10, 20, 30]\\\" showFirstLastButtons></mat-paginator>\\r\\n\\r\\n</div>\";","import { Observable, Subject } from \"rxjs\";\r\nimport { AttachmentDocumentComponent } from \"./../../attachment-document/attachment-document.component\";\r\nimport { DatePipe } from \"@angular/common\";\r\nimport {\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  OnInit,\r\n  Output,\r\n  ViewChild,\r\n} from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatAccordion } from \"@angular/material/expansion\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { DomSanitizer } from \"@angular/platform-browser\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport {\r\n  AttachmentDocument,\r\n  Company,\r\n  S1Application,\r\n  S2Application,\r\n} from \"@models\";\r\nimport { ApiService, DataStorageService, SweetAlertService } from \"@services\";\r\nimport {\r\n  APPLICATION_STAGE,\r\n  APPLICATION_STATUS_S2,\r\n  ENDPOINTS,\r\n  USER_ROLES,\r\n  ATTACHMENT_TYPE,\r\n  TYPE_OF_MEDIUM,\r\n  APPLICATION_STATUS,\r\n  APP_DECISION_STATUS,\r\n  APPLICATION_STATUS_FOR_COMPLIANCE,\r\n  SUBMISSION_TYPE,\r\n  ROLES,\r\n} from \"@shared\";\r\nimport { ApplicationSingleMedia } from \"app/core/models/application-single-media.model\";\r\nimport { RationaleS2 } from \"app/core/models/rationale-s2.model\";\r\nimport { Report } from \"app/core/models/report.model\";\r\nimport { CommonServices } from \"app/core/services/common-services.service\";\r\nimport { FileStorageService } from \"app/core/services/file.storage.service\";\r\nimport { IncompleteDisapprovedRationaleComponent } from \"app/modules/fragments/incomplete-disapproved-rationale/incomplete-disapproved-rationale.component\";\r\nimport { RejectDisapprovedReasonComponent } from \"app/modules/fragments/reject-disapproved-reason/reject-disapproved-reason.component\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport Swal from \"sweetalert2\";\r\nimport { ClientInformationComponent } from \"../../client-information/client-information.component\";\r\nimport { CommentComponent } from \"../../comment/comment.component\";\r\nimport { MaterialInformationComponent } from \"../../material-information/material-information.component\";\r\n\r\n@Component({\r\n  selector: \"app-add-s2-application\",\r\n  templateUrl: \"./add-s2-application.component.html\",\r\n  styleUrls: [\"./add-s2-application.component.scss\"],\r\n})\r\nexport class AddS2ApplicationComponent implements OnInit {\r\n  @ViewChild(MatAccordion) accordion: MatAccordion;\r\n  @ViewChild(ClientInformationComponent, { static: false })\r\n  clientInformation: ClientInformationComponent;\r\n  @ViewChild(MaterialInformationComponent, { static: false })\r\n  materialInformation: MaterialInformationComponent;\r\n  @ViewChild(CommentComponent, { static: false }) comment: CommentComponent;\r\n  // @ViewChild(LayoutComponent, { static: false }) layoutComponent: LayoutComponent;\r\n\r\n  @ViewChild(\"finalMaterialFileInput\") myFinalMaterialFileInput: ElementRef;\r\n  @ViewChild(\"finalMaterialFile\") myFinalMaterialFile: ElementRef;\r\n\r\n  @ViewChild(\"finalMaterialFileInputC\") myFinalMaterialFileInputC: ElementRef;\r\n  @ViewChild(\"finalMaterialFileC\") myFinalMaterialFileC: ElementRef;\r\n\r\n  @ViewChild(AttachmentDocumentComponent, { static: false })\r\n  attachmentComponent: AttachmentDocumentComponent;\r\n\r\n  @Output() spinnerMessageEmitter = new EventEmitter<string>();\r\n\r\n  title = \"ASC Online System\";\r\n  s2Application = new S2Application();\r\n  s1Application = new S1Application();\r\n  company = new Company();\r\n  rationaleS2 = new RationaleS2();\r\n  attachmentDocument = new AttachmentDocument();\r\n  applicationSingleMedia = new ApplicationSingleMedia();\r\n  report = new Report();\r\n  attachmentDocuments: any = {};\r\n  originalAttachmentDocuments = [];\r\n  revisionAttachmentDocuments = [];\r\n  complianceAttachmentDocuments = [];\r\n  s2OriginalAttachmentDocuments = [];\r\n  s2OriginalAttachmentObservable: Subject<any> = new Subject();\r\n  s2ComplianceAttachmentDocuments = [];\r\n  supportiveDocumentList = [];\r\n  affiliationList = [];\r\n  companyList = [];\r\n  multimediaStaticList = [];\r\n  multimediaMovingList = [];\r\n  selectedMultimediaList = [];\r\n  rationaleOthersList = [];\r\n  rationaleLists = [];\r\n  isNewCompany = false;\r\n  showCompanyAddress = false;\r\n  id: number;\r\n  spinnerMessage = \"\";\r\n  todayDate: Date = new Date();\r\n  s2ApplicationForm: FormGroup;\r\n  selectedFile: File;\r\n  tempCompliance = new AttachmentDocument();\r\n\r\n  selected: any; // in html but not existing in component -- encountered during 'ng serve --aot'\r\n  currentUser: any;\r\n  currentUserRole: any;\r\n  decisionStatus = \"\";\r\n  audioVideo = \"Video\";\r\n  isAudioVideo = false;\r\n  isShowUploadButton = false;\r\n  rationaleDisplay = false;\r\n  fileSize: number;\r\n  safeURLFile: any;\r\n  uploadedFinalMaterialFile: any;\r\n\r\n  isSuperAdmin = false;\r\n  isAdmin = false;\r\n  isAccounting = false;\r\n  isApplicant = false;\r\n  isEvaluator = false;\r\n  isAdSpecialist = false;\r\n  isScreener = false;\r\n  isReviewer = false;\r\n\r\n  previewAttachmentsList = [];\r\n  previewAttachmentsDisplayedColumns: string[] = [\r\n    \"clearanceToaFilename\",\r\n    \"viewClearanceToaIcon\",\r\n  ];\r\n  previewAttachmentsListDataSource: MatTableDataSource<object>;\r\n  isAscUser: boolean = false;\r\n  ascUserRoleList = [\r\n    ...ROLES.filter((role: any) => role.ascUser === true).map(\r\n      (role: any) => role.role\r\n    ),\r\n  ];\r\n  applicationStage: string = \"S2-APPLICATION\";\r\n  constructor(\r\n    private apiService: ApiService,\r\n    private formBuilder: FormBuilder,\r\n    private sweetAlertService: SweetAlertService,\r\n    private dataStorage: DataStorageService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private sanitizer: DomSanitizer,\r\n    public datepipe: DatePipe,\r\n    private spinner: NgxSpinnerService,\r\n    private fileStorageService: FileStorageService,\r\n    private dialog: MatDialog\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.setFormValidator();\r\n    this.currentUser = this.dataStorage.getUserAccount();\r\n    this.isAscUser = this.ascUserRoleList.includes(\r\n      this.dataStorage.getUserRole()\r\n    );\r\n    this.currentUserRole = this.currentUser.userRole.name;\r\n    this.id = Number(this.route.snapshot.paramMap.get(\"id\"));\r\n    this.initUserRole();\r\n    this.getAffiliationList();\r\n    this.getCompanyList();\r\n    if (this.id) {\r\n      this.viewS2Application();\r\n    }\r\n  }\r\n\r\n  initUserRole() {\r\n    if (this.currentUser.userRole.name === USER_ROLES.ROLE_SUPER_ADMIN) {\r\n      this.isSuperAdmin = true;\r\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_ADMIN) {\r\n      this.isAdmin = true;\r\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_ACCOUNTING) {\r\n      this.isAccounting = true;\r\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT) {\r\n      this.isApplicant = true;\r\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_SCREENER) {\r\n      this.isScreener = true;\r\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_REVIEWER) {\r\n      this.isReviewer = true;\r\n    } else if (\r\n      this.currentUser.userRole.name === USER_ROLES.ROLE_AD_SPECIALIST\r\n    ) {\r\n      this.isAdSpecialist = true;\r\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_ENCODER) {\r\n      this.isEvaluator = true;\r\n    }\r\n  }\r\n\r\n  viewS2Application(): void {\r\n    this.spinner.show();\r\n    this.spinnerMessage = \"Loading S2 Application\";\r\n    this.apiService.findById(ENDPOINTS.applicationFormS2, this.id).subscribe(\r\n      (res: any) => {\r\n        console.log(\"s2 = \");\r\n        this.s2Application = res.responseData.data;\r\n        console.log(\"S2 Form: \", this.s2Application);\r\n\r\n        this.s1Application = this.s2Application.applicationForm;\r\n        this.clientInformation.s1Application = this.s2Application.applicationForm;\r\n        this.materialInformation.s1Application = this.s2Application.applicationForm;\r\n\r\n        if (this.s2Application.finalMaterialAttachmentReference) {\r\n          this.isShowUploadButton = true;\r\n          this.getS2AttachmentDocument();\r\n        }\r\n\r\n        this.setApplicationStage(this.s2Application);\r\n        this.hideSpinner();\r\n        if (\r\n          this.s2Application.applicationForm.refTypeOfMedium ===\r\n          TYPE_OF_MEDIUM.SINGLE_MEDIA\r\n        ) {\r\n          this.getApplicationSingleMedia();\r\n        } else if (\r\n          this.s2Application.applicationForm.refTypeOfMedium ===\r\n          TYPE_OF_MEDIUM.MULTIMEDIA_MOVING\r\n        ) {\r\n          this.getMultimediaMoving();\r\n        } else if (\r\n          this.s2Application.applicationForm.refTypeOfMedium ===\r\n          TYPE_OF_MEDIUM.MULTIMEDIA_STATIC\r\n        ) {\r\n          this.getMultimediaStatic();\r\n        }\r\n        this.getAttachmentDocuments();\r\n        // this.getSupportiveDocuments();\r\n\r\n        if (\r\n          (this.s2Application.decisionStatus ===\r\n            APP_DECISION_STATUS.INCOMPLETE ||\r\n            this.s2Application.decisionStatus ===\r\n              APP_DECISION_STATUS.DISAPPROVED) &&\r\n          this.currentUserRole === USER_ROLES.ROLE_AD_SPECIALIST\r\n        ) {\r\n          if (\r\n            this.s2Application.internalStatus ===\r\n              \"RE_SUBMITTED_S2_APPLICATION_VERIFIED_BY_ENCODER\" &&\r\n            this.s2Application.decisionStatus === APP_DECISION_STATUS.INCOMPLETE\r\n          ) {\r\n            this.getRationaleList();\r\n          }\r\n        }\r\n\r\n        if (\r\n          this.isAdmin ||\r\n          this.isSuperAdmin ||\r\n          this.isApplicant ||\r\n          this.isAdSpecialist\r\n        ) {\r\n          console.log(\r\n            ENDPOINTS.clearanceAndToa + this.s2Application?.appFormReference\r\n          );\r\n          this.apiService\r\n            .findByParam(\r\n              ENDPOINTS.clearanceAndToa,\r\n              this.s2Application?.appFormReference\r\n            )\r\n            .subscribe((previewAttachmentsData) => {\r\n              console.log(previewAttachmentsData);\r\n\r\n              this.previewAttachmentsList =\r\n                previewAttachmentsData.responseData.data;\r\n              this.previewAttachmentsListDataSource = new MatTableDataSource<object>(\r\n                this.previewAttachmentsList\r\n              );\r\n            });\r\n        }\r\n      },\r\n      (err: any) => {\r\n        this.hideSpinner();\r\n      }\r\n    );\r\n  }\r\n\r\n  setApplicationStage(data): void {\r\n    this.clientInformation.applicationStage = APPLICATION_STAGE.S2_APPLICATION;\r\n    this.materialInformation.applicationStage =\r\n      APPLICATION_STAGE.S2_APPLICATION;\r\n    if (this.currentUserRole !== USER_ROLES.ROLE_APPLICANT) {\r\n      this.comment.applicationStage = APPLICATION_STAGE.S2_APPLICATION;\r\n      this.comment.getCommentsS2(data);\r\n    }\r\n  }\r\n\r\n  saveStatus(): void {\r\n    if (\r\n      this.s2Application.appFormReference &&\r\n      this.s2Application.appFormReference !== \"\" &&\r\n      this.s2Application.appFormReference !== undefined\r\n    ) {\r\n      let endpoint;\r\n      let swalMessage;\r\n\r\n      if (this.currentUserRole === USER_ROLES.ROLE_APPLICANT) {\r\n        endpoint = ENDPOINTS.s2ApplicationFormPresentorSubmit;\r\n        swalMessage = \"S2 application has been submitted.\";\r\n      } else if (this.currentUserRole === USER_ROLES.ROLE_ENCODER) {\r\n        endpoint = ENDPOINTS.s2ApplicationFormEncoderVerify;\r\n        swalMessage = \"S2 application has been verified.\";\r\n        this.s2Application.assignedUser = this.s2Application.applicationForm.assignedAdSpecialist;\r\n      } else if (this.currentUserRole === USER_ROLES.ROLE_AD_SPECIALIST) {\r\n        if (this.decisionStatus === APPLICATION_STATUS_S2.INCOMPLETE) {\r\n          endpoint = ENDPOINTS.s2ApplicationFormAdSpe + \"incomplete\";\r\n          swalMessage = \"S2 Application Incomplete\";\r\n        } else if (this.decisionStatus === APPLICATION_STATUS_S2.DISAPPROVED) {\r\n          endpoint = ENDPOINTS.s2ApplicationFormAdSpe + \"disapproved\";\r\n          swalMessage = \"S2 Application Disapproved\";\r\n        } else if (this.decisionStatus === APPLICATION_STATUS_S2.APPROVED) {\r\n          endpoint = ENDPOINTS.s2ApplicationFormAdSpe + \"approved\";\r\n          swalMessage = \"S2 Application Approved!\";\r\n        }\r\n      }\r\n\r\n      // this.s2Application.modifiedBy = this.currentUser;\r\n      // this.s2Application.modifiedDate = this.todayDate;\r\n\r\n      Swal.fire({\r\n        text: \"Are you sure you want to submit the application?\",\r\n        icon: \"question\",\r\n        showCancelButton: true,\r\n        confirmButtonColor: \"#3085d6\",\r\n        cancelButtonColor: \"#d33\",\r\n        confirmButtonText: \"Confirm\",\r\n      }).then((result) => {\r\n        if (result.value) {\r\n          this.spinner.show();\r\n          if (this.decisionStatus === APPLICATION_STATUS_S2.INCOMPLETE) {\r\n            this.s2Application.submissionType = SUBMISSION_TYPE.ORIGINAL;\r\n            this.s2Application.decisionStatus =\r\n              APPLICATION_STATUS_S2.INCOMPLETE;\r\n          } else if (this.decisionStatus === APPLICATION_STATUS_S2.APPROVED) {\r\n            this.s2Application.decisionStatus = APPLICATION_STATUS_S2.APPROVED;\r\n          } else if (\r\n            this.decisionStatus === APPLICATION_STATUS_S2.DISAPPROVED\r\n          ) {\r\n            this.s2Application.decisionStatus =\r\n              APPLICATION_STATUS_S2.DISAPPROVED;\r\n          }\r\n          this.apiService.save(endpoint, this.s2Application).subscribe(\r\n            (res: any) => {\r\n              this.spinner.hide();\r\n              this.sweetAlertService.customSuccessMessage(swalMessage);\r\n              this.navigateToS2List();\r\n            },\r\n            (err: any) => {\r\n              this.spinner.hide();\r\n            }\r\n          );\r\n        }\r\n      });\r\n    } else {\r\n      this.sweetAlertService.customErrorMessage(\r\n        \"Missing application form reference.\"\r\n      );\r\n    }\r\n  } // in html but not existing in component -- encountered during 'ng serve --aot'\r\n\r\n  saveStatusForCompliance(): void {\r\n    let endpoint;\r\n    let swalMessage;\r\n\r\n    if (this.currentUserRole === USER_ROLES.ROLE_APPLICANT) {\r\n      endpoint = ENDPOINTS.s2ApplicationForm + \"compliance/presentor/submit\";\r\n      swalMessage = \"S2 Application has been re-submitted successfully\";\r\n    } else if (this.currentUserRole === USER_ROLES.ROLE_ENCODER) {\r\n      endpoint = ENDPOINTS.s2ApplicationForm + \"compliance/encoder/verify\";\r\n      swalMessage =\r\n        \"S2 Application has been re-submitted successfully verified by ENCODER\";\r\n    } else if (this.currentUserRole === USER_ROLES.ROLE_AD_SPECIALIST) {\r\n      if (this.decisionStatus === APPLICATION_STATUS_S2.INCOMPLETE) {\r\n        endpoint = ENDPOINTS.s2ApplicationFormAdSpe + \"incomplete\";\r\n        swalMessage = \"S2 Application Incomplete\";\r\n      } else if (this.decisionStatus === APPLICATION_STATUS_S2.DISAPPROVED) {\r\n        endpoint = ENDPOINTS.s2ApplicationFormAdSpe + \"disapproved\";\r\n        swalMessage = \"S2 Application Disapproved\";\r\n      } else if (this.decisionStatus === APPLICATION_STATUS_S2.APPROVED) {\r\n        endpoint =\r\n          ENDPOINTS.s2ApplicationForm + \"compliance/ad-specialist/verify\";\r\n        swalMessage = \"S2 Application has been verified by AD-SPECIALIST\";\r\n        // this.s2Application.decisionStatus = APPLICATION_STATUS_S2.APPROVED;\r\n      }\r\n    }\r\n\r\n    Swal.fire({\r\n      text: \"Are you sure you want to re-submit this application?\",\r\n      icon: \"question\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Confirm\",\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.spinner.show();\r\n        if (this.decisionStatus === APPLICATION_STATUS_S2.INCOMPLETE) {\r\n          this.s2Application.submissionType = SUBMISSION_TYPE.ORIGINAL;\r\n          this.s2Application.decisionStatus = APPLICATION_STATUS_S2.INCOMPLETE;\r\n        } else if (this.decisionStatus === APPLICATION_STATUS_S2.APPROVED) {\r\n          this.s2Application.decisionStatus = APPLICATION_STATUS_S2.APPROVED;\r\n        } else if (this.decisionStatus === APPLICATION_STATUS_S2.DISAPPROVED) {\r\n          this.s2Application.decisionStatus = APPLICATION_STATUS_S2.DISAPPROVED;\r\n        }\r\n        this.s2Application.submissionType = SUBMISSION_TYPE.ORIGINAL;\r\n        this.apiService.save(endpoint, this.s2Application).subscribe(\r\n          (res: any) => {\r\n            this.spinner.hide();\r\n            this.sweetAlertService.customSuccessMessage(swalMessage);\r\n            this.navigateToS2List();\r\n          },\r\n          (err: any) => {\r\n            this.spinner.hide();\r\n          }\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  saveStatusForClearance(): void {\r\n    let endpoint;\r\n    let swalMessage;\r\n\r\n    if (this.currentUserRole === USER_ROLES.ROLE_APPLICANT) {\r\n      endpoint = ENDPOINTS.s2ApplicationForm + \"clearance/presentor/submit\";\r\n      swalMessage = \"S2 Application clearance has been submitted successfully\";\r\n    } else if (this.currentUserRole === USER_ROLES.ROLE_ENCODER) {\r\n      endpoint = ENDPOINTS.s2ApplicationForm + \"clearance/encoder/verify\";\r\n      swalMessage =\r\n        \"S2 Application clearance has been verified successfully by ENCODER\";\r\n    } else if (this.currentUserRole === USER_ROLES.ROLE_AD_SPECIALIST) {\r\n      if (this.decisionStatus === APPLICATION_STATUS_S2.DISAPPROVED) {\r\n        endpoint = ENDPOINTS.s2ApplicationFormAdSpe + \"disapproved\";\r\n        swalMessage = \"S2 Application clearance Disapproved\";\r\n      } else if (this.decisionStatus === APPLICATION_STATUS_S2.APPROVED) {\r\n        endpoint =\r\n          ENDPOINTS.s2ApplicationForm + \"clearance/ad-specialist/verify\";\r\n        swalMessage =\r\n          \"S2 Application clearance has been approved by AD-SPECIALIST\";\r\n        this.s2Application.internalStatus = APPLICATION_STATUS_S2.APPROVED;\r\n        this.s2Application.externalStatus = APPLICATION_STATUS_S2.APPROVED;\r\n      }\r\n    }\r\n\r\n    Swal.fire({\r\n      text: \"Are you sure you want to submit this application clearance?\",\r\n      icon: \"question\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Confirm\",\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        if (this.decisionStatus === APPLICATION_STATUS_S2.DISAPPROVED) {\r\n          this.s2Application.decisionStatus = APPLICATION_STATUS_S2.DISAPPROVED;\r\n        }\r\n        this.spinner.show();\r\n        this.apiService.save(endpoint, this.s2Application).subscribe(\r\n          (res: any) => {\r\n            this.hideSpinner();\r\n            this.sweetAlertService.customSuccessMessage(swalMessage);\r\n            this.navigateToS2List();\r\n          },\r\n          (err: any) => {\r\n            this.hideSpinner();\r\n          }\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  applyApplicationForClearance(): void {\r\n    Swal.fire({\r\n      text: \"Are you sure you want to apply this application to Clearance?\",\r\n      icon: \"question\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Confirm\",\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.spinner.show();\r\n        this.apiService\r\n          .save(\r\n            ENDPOINTS.s2ApplicationForm + \"clearance/presentor/submit\",\r\n            this.s2Application\r\n          )\r\n          .subscribe(\r\n            (res: any) => {\r\n              this.hideSpinner();\r\n              this.sweetAlertService.customSuccessMessage(\r\n                this.sweetAlertService.customSuccessMessage(\r\n                  \"Application with reference no is applied for Clearance successfully.\"\r\n                )\r\n              );\r\n              this.navigateToS2List();\r\n            },\r\n            (err: any) => {\r\n              this.hideSpinner();\r\n            }\r\n          );\r\n      }\r\n    });\r\n  }\r\n\r\n  rejectDisapprovedModal(ascUser = \"\", action = \"\", status = \"\"): void {\r\n    // Swal.fire({\r\n    //   text: 'Are you sure you want to REJECT this application?',\r\n    //   icon: 'question',\r\n    //   showCancelButton: true,\r\n    //   confirmButtonColor: '#3085d6',\r\n    //   cancelButtonColor: '#d33',\r\n    //   confirmButtonText: 'Confirm'\r\n    // }).then((result) => {\r\n    //   if (result.value) {\r\n    //     this.apiService.save(ENDPOINTS.s2ApplicationFormEncoderReject, this.s2Application).subscribe(\r\n    //       (res: any) => {\r\n    //         this.sweetAlertService.customSuccessMessage('Application has been rejected successfully');\r\n    //         this.router.navigateByUrl('asc/page/application/s2/lists');\r\n    //       }\r\n    //     );\r\n    //   }\r\n    // })\r\n    const dialogRef = this.dialog.open(RejectDisapprovedReasonComponent, {\r\n      width: \"40%\",\r\n      height: \"45%\",\r\n      data: {\r\n        s2Application: this.s2Application,\r\n        ascUser: ascUser,\r\n        action: action,\r\n        status: status,\r\n        applicationStage: \"s2\",\r\n      },\r\n    });\r\n  }\r\n\r\n  incompleteDisapprovedRationale(ascUser = \"\", action = \"\", status = \"\"): void {\r\n    const dialogRef = this.dialog.open(\r\n      IncompleteDisapprovedRationaleComponent,\r\n      {\r\n        width: \"40%\",\r\n        height: \"65%\",\r\n        data: {\r\n          s2Application: this.s2Application,\r\n          ascUser: ascUser,\r\n          action: action,\r\n          status: status,\r\n          applicationStage: \"s2\",\r\n        },\r\n      }\r\n    );\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      console.log(\"The dialog was closed\", result);\r\n      if (result) {\r\n        this.getRationaleList();\r\n      }\r\n    });\r\n  }\r\n\r\n  getApplicationSingleMedia() {\r\n    this.spinner.show();\r\n    this.apiService\r\n      .findByParam(\r\n        ENDPOINTS.applicationSingleMedia,\r\n        `app-form-reference/${this.s2Application.applicationForm.appFormReference}`\r\n      )\r\n      .subscribe(\r\n        (res: any) => {\r\n          if (res.responseData.data.length > 0) {\r\n            this.applicationSingleMedia = res.responseData.data[0];\r\n          } else {\r\n            this.applicationSingleMedia = new ApplicationSingleMedia();\r\n          }\r\n          this.hideSpinner();\r\n        },\r\n        (err: any) => {\r\n          this.applicationSingleMedia = new ApplicationSingleMedia();\r\n          this.hideSpinner();\r\n        }\r\n      );\r\n  }\r\n\r\n  getAttachmentDocuments() {\r\n    console.log(\"apForm\", this.s2Application.applicationForm);\r\n    this.apiService\r\n      .findAll(\r\n        ENDPOINTS.attachmentDocumentByAppFormReference +\r\n          this.s2Application.applicationForm.appFormReference\r\n      )\r\n      .subscribe((res: any) => {\r\n        this.attachmentDocuments = res.responseData.data;\r\n\r\n        this.originalAttachmentDocuments = this.attachmentDocuments.originalAttachmentDocuments;\r\n        this.revisionAttachmentDocuments = this.attachmentDocuments.revisionAttachmentDocuments;\r\n        this.complianceAttachmentDocuments = this.attachmentDocuments.complianceAttachmentDocuments;\r\n\r\n        if (\r\n          this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT &&\r\n          this.s1Application.externalStatus === APPLICATION_STATUS.SAVED\r\n        ) {\r\n          this.materialInformation.originalAttachmentDocuments = this.attachmentDocuments.originalAttachmentDocuments;\r\n          this.materialInformation.revisionAttachmentDocuments = this.attachmentDocuments.revisionAttachmentDocuments;\r\n          this.materialInformation.complianceAttachmentDocuments = this.attachmentDocuments.complianceAttachmentDocuments;\r\n        }\r\n        console.log(\"view S2 attachmentDocuments: \", this.attachmentDocuments);\r\n        this.s2OriginalAttachmentObservable.next({\r\n          type: \"document\",\r\n          value: this.originalAttachmentDocuments,\r\n        });\r\n        this.s2OriginalAttachmentObservable.next({\r\n          type: \"application\",\r\n          value: this.s2Application,\r\n        });\r\n      });\r\n  }\r\n\r\n  getSupportiveDocuments() {\r\n    this.spinner.show();\r\n    this.apiService\r\n      .findByParam(\r\n        ENDPOINTS.supportiveDocument,\r\n        `application-form-id/${this.s2Application.applicationForm.id}`\r\n      )\r\n      .subscribe(\r\n        (res: any) => {\r\n          console.log(\"getSupportiveDocuments() \", res);\r\n          if (res.responseData.data.length > 0) {\r\n            this.supportiveDocumentList = res.responseData.data;\r\n          }\r\n          this.hideSpinner();\r\n        },\r\n        (err: any) => {\r\n          this.hideSpinner();\r\n          this.supportiveDocumentList = [];\r\n        }\r\n      );\r\n  }\r\n\r\n  getMultimediaStatic() {\r\n    this.apiService\r\n      .findByParam(\r\n        ENDPOINTS.applicationMultimedia,\r\n        `app-form-reference/${this.s2Application.applicationForm.appFormReference}`\r\n      )\r\n      .subscribe(\r\n        (res: any) => {\r\n          if (res.responseData.data.length > 0) {\r\n            this.multimediaStaticList = res.responseData.data;\r\n\r\n            if (\r\n              this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT &&\r\n              this.s2Application.applicationForm.externalStatus ===\r\n                APPLICATION_STATUS.SAVED\r\n            ) {\r\n              this.materialInformation.selectedMultimediaList = this.multimediaStaticList;\r\n            }\r\n\r\n            this.selectedMultimediaList = this.multimediaStaticList;\r\n          } else {\r\n            this.multimediaStaticList = [];\r\n          }\r\n        },\r\n        (err: any) => {\r\n          // this.multimediaStaticList = [];\r\n        }\r\n      );\r\n  }\r\n\r\n  getMultimediaMoving() {\r\n    this.apiService\r\n      .findByParam(\r\n        ENDPOINTS.applicationMultimedia,\r\n        `app-form-reference/${this.s2Application.applicationForm.appFormReference}`\r\n      )\r\n      .subscribe(\r\n        (res: any) => {\r\n          if (res.responseData.data.length > 0) {\r\n            this.multimediaMovingList = res.responseData.data;\r\n\r\n            if (\r\n              this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT &&\r\n              this.s2Application.applicationForm.externalStatus ===\r\n                APPLICATION_STATUS.SAVED\r\n            ) {\r\n              this.materialInformation.selectedMultimediaList = this.multimediaMovingList;\r\n            }\r\n            this.selectedMultimediaList = this.multimediaMovingList;\r\n          } else {\r\n            this.multimediaMovingList = [];\r\n          }\r\n        },\r\n        (err: any) => {\r\n          this.multimediaMovingList = [];\r\n        }\r\n      );\r\n  }\r\n\r\n  setDecisionStatus(i) {\r\n    this.decisionStatus = i;\r\n    // if (e === APPLICATION_STATUS_S2.DISAPPROVED) {\r\n    //   this.incompleteDisapprovedRationale('ad-specialist', 'disapproved', 'S2 APPLICATION DISAPPROVED');\r\n    // }else if(e === APPLICATION_STATUS_S2.INCOMPLETE) {\r\n    //   this.incompleteDisapprovedRationale('ad-specialist', 'incomplete', 'INCOMPLETE');\r\n    // }\r\n\r\n    if (\r\n      (i === APP_DECISION_STATUS.INCOMPLETE ||\r\n        i === APP_DECISION_STATUS.DISAPPROVED) &&\r\n      this.currentUserRole === USER_ROLES.ROLE_AD_SPECIALIST\r\n    ) {\r\n      if (\r\n        this.s2Application.internalStatus ===\r\n          \"RE_SUBMITTED_S2_APPLICATION_VERIFIED_BY_ENCODER\" &&\r\n        this.s2Application.decisionStatus === APP_DECISION_STATUS.INCOMPLETE\r\n      ) {\r\n        this.s2Application.validityDate = null;\r\n        // this.s2Application.decisionStatus = i;\r\n        this.incompleteDisapprovedRationale();\r\n      }\r\n    }\r\n  }\r\n\r\n  getAffiliationList() {\r\n    this.spinner.show();\r\n    this.apiService.findAll(ENDPOINTS.activeMembersAffiliation).subscribe(\r\n      (res: any) => {\r\n        this.affiliationList = res.responseData.data;\r\n        this.hideSpinner();\r\n      },\r\n      (err: any) => {\r\n        this.hideSpinner();\r\n      }\r\n    );\r\n  }\r\n\r\n  getCompanyList() {\r\n    this.spinner.show();\r\n    this.apiService.findAll(ENDPOINTS.activeCompanies).subscribe(\r\n      (res: any) => {\r\n        this.companyList = res.responseData.data;\r\n        this.hideSpinner();\r\n      },\r\n      (err: any) => {\r\n        this.hideSpinner();\r\n      }\r\n    );\r\n  }\r\n\r\n  getCompanyAddress(companyName) {\r\n    this.spinner.show();\r\n    this.showCompanyAddress = true;\r\n    this.isNewCompany = false;\r\n    this.apiService\r\n      .findByParam(\r\n        ENDPOINTS.company,\r\n        `/custom/search?companyName=` + companyName\r\n      )\r\n      .subscribe(\r\n        (res: any) => {\r\n          this.company = res.responseData.data;\r\n          this.hideSpinner();\r\n        },\r\n        (err: any) => {\r\n          this.hideSpinner();\r\n        }\r\n      );\r\n  }\r\n\r\n  clear(): void {\r\n    this.s2Application = new S2Application();\r\n    this.s1Application = new S1Application();\r\n  }\r\n\r\n  setFormValidator(): void {\r\n    this.s2ApplicationForm = this.formBuilder.group({\r\n      affiliation: [\"\", Validators.required],\r\n      validityDate: [\"\", Validators.required],\r\n      company: [\"\"],\r\n      decisionStatus: [\"\", Validators.required],\r\n    });\r\n  }\r\n\r\n  resetFormValidator(): void {\r\n    this.s2Application = new S2Application();\r\n    this.s1Application = new S1Application();\r\n    this.s2ApplicationForm.markAsUntouched();\r\n    this.s2ApplicationForm.markAsPristine();\r\n  }\r\n\r\n  showAudioVideo() {\r\n    this.isAudioVideo = !this.isAudioVideo;\r\n    this.audioVideo = this.isAudioVideo ? \"Audio\" : \"Video\";\r\n  }\r\n\r\n  selectFile(event, typeOfDocument) {\r\n    this.attachmentComponent.selectFile(event, typeOfDocument);\r\n  }\r\n\r\n  onAddFile(eventParam) {\r\n    const byteToMegaByte = 1000000; // 1 million byte = 1 mega byte\r\n\r\n    let finalMaterialType = \"\"; // temporary variable; TODO: remove\r\n    finalMaterialType = \"video\";\r\n    const maxFileSize =\r\n      finalMaterialType === \"video\"\r\n        ? 50\r\n        : finalMaterialType === \"audio\"\r\n        ? 20\r\n        : finalMaterialType === \"layout\"\r\n        ? 10\r\n        : 0;\r\n\r\n    if (eventParam.target.files) {\r\n      this.isShowUploadButton = false;\r\n      this.fileSize = eventParam.target.files[0].size;\r\n\r\n      // TODO validation of file size\r\n      if (\r\n        (this.fileSize > 50 * byteToMegaByte &&\r\n          finalMaterialType.toLowerCase() === \"video\") ||\r\n        (this.fileSize > 20 * byteToMegaByte &&\r\n          finalMaterialType.toLowerCase() === \"audio\") ||\r\n        (this.fileSize > 10 * byteToMegaByte &&\r\n          finalMaterialType.toLowerCase() === \"layout\")\r\n      ) {\r\n        this.sweetAlertService.customErrorMessage(\r\n          `Attachments total file size should not exceed ${maxFileSize}MB.`\r\n        );\r\n        eventParam.target.value = \"\";\r\n        return;\r\n      } else {\r\n        this.isShowUploadButton = true;\r\n        const fileURL = URL.createObjectURL(eventParam.target.files[0]);\r\n        this.safeURLFile = this.sanitizer.bypassSecurityTrustResourceUrl(\r\n          fileURL\r\n        );\r\n\r\n        const reader = new FileReader();\r\n        const [file] = eventParam.target.files;\r\n\r\n        reader.readAsDataURL(file);\r\n        reader.onload = () => {};\r\n\r\n        this.selectedFile = eventParam.target.files[0];\r\n      }\r\n    }\r\n  }\r\n\r\n  uploadAudioOrVideo() {\r\n    Swal.fire({\r\n      text: `Are you sure you want to upload this Final Material?`,\r\n      icon: \"question\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Confirm\",\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.spinner.show();\r\n        let params = \"\";\r\n        let appFormRef = \"\";\r\n\r\n        if (this.s2Application.appFormReference) {\r\n          appFormRef = `&appFormReference=${this.s2Application.appFormReference}`;\r\n        }\r\n\r\n        if (\r\n          this.s2Application.internalStatus ===\r\n            APPLICATION_STATUS_FOR_COMPLIANCE.INCOMPLETE ||\r\n          this.s2Application.internalStatus === \"S2_APPLICATION_REJECTED\"\r\n        ) {\r\n          this.s2Application.submissionType = SUBMISSION_TYPE.COMPLIANCE;\r\n        }\r\n\r\n        params =\r\n          \"?&attachmentType=\" +\r\n          ATTACHMENT_TYPE.FINAL_MATERIAL +\r\n          \"&submissionType=\" +\r\n          this.s2Application.submissionType +\r\n          appFormRef;\r\n        this.fileStorageService\r\n          .pushFileToStorage(\r\n            ENDPOINTS.attachmentDocument,\r\n            this.selectedFile,\r\n            params\r\n          )\r\n          .subscribe(\r\n            (res: any) => {\r\n              console.log(res);\r\n\r\n              if (\r\n                !this.s2Application.appFormReference ||\r\n                this.s2Application.appFormReference === \"\"\r\n              ) {\r\n                this.s2Application.appFormReference =\r\n                  res.responseData.data.appFormReference;\r\n              }\r\n\r\n              if (\r\n                this.s2Application.submissionType === SUBMISSION_TYPE.COMPLIANCE\r\n              ) {\r\n                this.s2Application.submissionType = SUBMISSION_TYPE.ORIGINAL;\r\n                this.tempCompliance = res.responseData.data;\r\n                this.s2Application.finalMaterialAttachmentReference = this.tempCompliance?.finalMaterialAttachmentReference;\r\n              } else {\r\n                this.uploadedFinalMaterialFile = res.responseData.data;\r\n                this.addToAttachmentDocuments(this.uploadedFinalMaterialFile);\r\n                this.s2Application.finalMaterialAttachmentReference = this.uploadedFinalMaterialFile?.finalMaterialAttachmentReference;\r\n\r\n                if (this.s2Application.finalMaterialAttachmentReference) {\r\n                  this.getS2AttachmentDocument();\r\n                }\r\n              }\r\n              this.spinner.hide();\r\n              this.sweetAlertService.customSuccessMessage(\r\n                \"Attachment successfully uploaded.\"\r\n              );\r\n              this.selectedFile = null;\r\n            },\r\n            (err: any) => {\r\n              this.spinner.hide();\r\n              this.sweetAlertService.error(err);\r\n            },\r\n            () => {\r\n              // actions after subscription\r\n              this.spinner.hide();\r\n            }\r\n          );\r\n      } else {\r\n        this.selectedFile = null;\r\n      }\r\n    });\r\n  }\r\n\r\n  deleteUploadedFile2(obj) {\r\n    Swal.fire({\r\n      text: \"Are you sure you want to delete this document permanently?\",\r\n      icon: \"question\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Confirm\",\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.spinner.show();\r\n        this.tempCompliance = null;\r\n        this.isShowUploadButton = false;\r\n        this.safeURLFile = null;\r\n        this.apiService\r\n          .save(ENDPOINTS.attachmentDocument + `/id/${obj.id}`, null)\r\n          .subscribe(\r\n            (res) => {\r\n              this.spinner.hide();\r\n              if (\r\n                obj.submissionType === SUBMISSION_TYPE.COMPLIANCE ||\r\n                obj.decisionStatus === APP_DECISION_STATUS.INCOMPLETE\r\n              ) {\r\n                this.s2ComplianceAttachmentDocuments = this.s2ComplianceAttachmentDocuments.filter(\r\n                  (data) => data?.id !== obj.id\r\n                );\r\n                this.myFinalMaterialFileInputC.nativeElement.value = \"\";\r\n                this.myFinalMaterialFileC.nativeElement.value = \"\";\r\n                this.tempCompliance = null;\r\n              } else {\r\n                this.s2OriginalAttachmentDocuments = this.s2OriginalAttachmentDocuments.filter(\r\n                  (data) => data?.id !== obj.id\r\n                );\r\n                this.myFinalMaterialFileInput.nativeElement.value = \"\";\r\n                this.myFinalMaterialFile.nativeElement.value = \"\";\r\n                console.log(\r\n                  \"s2 orig => \",\r\n                  this.s2ComplianceAttachmentDocuments\r\n                );\r\n              }\r\n              console.log(\"Attachment successfully deleted.\");\r\n\r\n              this.s2Application.finalMaterialAttachmentReference = null;\r\n              this.isShowUploadButton = false;\r\n              this.selectedFile = null;\r\n            },\r\n            (err: any) => {\r\n              this.spinner.hide();\r\n              this.sweetAlertService.error(err);\r\n            }\r\n          );\r\n      }\r\n    });\r\n  }\r\n\r\n  deleteUploadedFile() {\r\n    if (\r\n      this.s2Application.internalStatus === APPLICATION_STATUS.INCOMPLETE ||\r\n      this.s2Application.internalStatus === \"S2_APPLICATION_REJECTED\"\r\n    ) {\r\n      this.tempCompliance = null;\r\n      this.myFinalMaterialFileInputC.nativeElement.value = \"\";\r\n      this.myFinalMaterialFileC.nativeElement.value = \"\";\r\n    } else {\r\n      this.s2OriginalAttachmentDocuments[0] = null;\r\n      this.myFinalMaterialFileInput.nativeElement.value = \"\";\r\n      this.myFinalMaterialFile.nativeElement.value = \"\";\r\n    }\r\n    this.s2Application.finalMaterialAttachmentReference = null;\r\n    this.isShowUploadButton = false;\r\n    this.selectedFile = null;\r\n  }\r\n\r\n  addToAttachmentDocuments(obj: any) {\r\n    if (obj) {\r\n      this.attachmentDocument.finalMaterialAttachmentReference =\r\n        obj.finalMaterialAttachmentReference;\r\n      this.attachmentDocument.id = obj.id;\r\n      this.attachmentDocument.originalFilename = obj.originalFilename;\r\n      this.attachmentDocument.filename = obj.filename;\r\n      this.attachmentDocument.fileExtension = obj.fileExtension;\r\n      this.attachmentDocument.fileURL = obj.fileURL;\r\n      this.attachmentDocument.attachmentType = obj.attachmentType;\r\n      this.attachmentDocument.documentFormat = obj.documentFormat;\r\n      this.attachmentDocument.createdBy = this.currentUser.username;\r\n      this.attachmentDocument.createdDate = this.todayDate;\r\n\r\n      // if (this.s2Application.submissionType === SUBMISSION_TYPE.COMPLIANCE) {\r\n      //   this.tempCompliance = res.responseData.data;\r\n      //   this.addToAttachmentDocuments(this.tempCompliance);\r\n      // } else {\r\n      // }\r\n    } else {\r\n      this.spinner.hide();\r\n      console.log(\"Null attachment.\");\r\n      this.myFinalMaterialFile.nativeElement.value = \"\";\r\n      this.sweetAlertService.customErrorMessage(\r\n        \"Attachment cannot be uploaded.\"\r\n      );\r\n    }\r\n  }\r\n\r\n  getS2AttachmentDocument() {\r\n    this.spinner.show();\r\n    // TODO: Fetch list of existing compliance attachments\r\n    console.log(\r\n      ENDPOINTS.attachmentDocumentByS2AppFormReference +\r\n        this.s2Application.appFormReference\r\n    );\r\n    this.apiService\r\n      .findAll(\r\n        ENDPOINTS.attachmentDocumentByS2AppFormReference +\r\n          this.s2Application.appFormReference\r\n      )\r\n      .subscribe(\r\n        (res: any) => {\r\n          if (res.responseData.data) {\r\n            console.log(\r\n              \"S2 attachments: \",\r\n              res.responseData.data.originalAttachmentDocuments\r\n            );\r\n\r\n            this.attachmentDocuments = res.responseData.data;\r\n            this.s2OriginalAttachmentDocuments =\r\n              res.responseData.data.originalAttachmentDocuments;\r\n            // this.s2OriginalAttachmentObservable.next(this.s2OriginalAttachmentDocuments);\r\n            this.s2ComplianceAttachmentDocuments =\r\n              res.responseData.data.complianceAttachmentDocuments;\r\n            this.s2ComplianceAttachmentDocuments = this.s2ComplianceAttachmentDocuments?.filter(\r\n              (data) => data?.status !== \"UNPROCESSED\"\r\n            );\r\n            console.log(\"s2 Original => \", this.attachmentDocuments);\r\n            if (this.attachmentDocument.filename) {\r\n              this.isAudioVideo = this.attachmentDocument.documentFormat.includes(\r\n                \"audio\"\r\n              )\r\n                ? false\r\n                : true;\r\n            }\r\n          }\r\n          this.hideSpinner();\r\n        },\r\n        (err: any) => {\r\n          this.hideSpinner();\r\n          console.error(err);\r\n        }\r\n      );\r\n  }\r\n\r\n  viewFinalMedia(obj) {\r\n    window.open(obj.fileURL);\r\n  }\r\n\r\n  hideSpinner() {\r\n    setTimeout(() => {\r\n      this.spinner.hide();\r\n    }, 1);\r\n  }\r\n\r\n  navigateToS2List() {\r\n    setTimeout(() => {\r\n      this.router.navigateByUrl(\"asc/page/application/s2/lists\");\r\n    }, 2000);\r\n  }\r\n\r\n  getRationaleList(): void {\r\n    // Rationale Object\r\n    this.apiService\r\n      .findByParam(\r\n        ENDPOINTS.applicationRationaleS2,\r\n        `application-form-id/${this.s2Application.id}`\r\n      )\r\n      .subscribe((res: any) => {\r\n        this.rationaleOthersList = res.responseData.data;\r\n        this.rationaleOthersList = this.rationaleOthersList.filter(\r\n          (data) => data.others !== \"\"\r\n        );\r\n        console.log(\"RATIONALE LIST\", this.rationaleOthersList);\r\n      });\r\n    this.apiService\r\n      .findByParam(\r\n        ENDPOINTS.rationaleListS2,\r\n        `application-s2/${this.s2Application.id}`\r\n      )\r\n      .subscribe((res: any) => {\r\n        this.rationaleLists = res;\r\n        console.log(\"APPLICATION RATIONALE\", this.rationaleLists);\r\n      });\r\n  }\r\n\r\n  viewReport(id, filename) {\r\n    this.report.filename = filename;\r\n    this.report.format = \"pdf\";\r\n    (this.report.module = \"Form\"),\r\n      (this.report.params = { applicationFormS2Id: id });\r\n    console.log(this.report);\r\n    this.spinner.show();\r\n    this.apiService\r\n      .printReport(ENDPOINTS.generateReports, this.report)\r\n      .subscribe(\r\n        (data: any) => {\r\n          const newBlob = new Blob([data], { type: \"application/pdf\" });\r\n          const downloadURL = URL.createObjectURL(newBlob);\r\n          this.spinner.hide();\r\n          window.open(downloadURL);\r\n        },\r\n        (err: any) => {\r\n          this.spinner.hide();\r\n        }\r\n      );\r\n  }\r\n\r\n  submitAppeal() {\r\n    let endpoint;\r\n    if (this.isAdmin) {\r\n      endpoint = ENDPOINTS.admin + `/s2/verify/appeal`;\r\n    } else if (this.isAdSpecialist) {\r\n      endpoint = ENDPOINTS.s2ApplicationFormAdSpe + `verify/appeal`;\r\n    }\r\n\r\n    this.spinner.show();\r\n    this.apiService.save(endpoint, this.s2Application).subscribe(\r\n      (res: any) => {\r\n        this.spinner.hide();\r\n        this.sweetAlertService.success(res);\r\n        console.log(\"submitAppeal : \", res.responseData.data);\r\n        this.navigateToS2List();\r\n      },\r\n      (err: any) => {\r\n        this.spinner.hide();\r\n      }\r\n    );\r\n  }\r\n\r\n  sendDecisionOrStampMaterialManual(): void {\r\n    Swal.fire({\r\n      text: \"Are you sure you want to send this application form?\",\r\n      icon: \"question\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Confirm\",\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.apiService\r\n          .save(\r\n            ENDPOINTS.s2ManualRelease + `/${this.s2Application.id}`,\r\n            this.s2Application\r\n          )\r\n          .subscribe((res: any) => {\r\n            this.sweetAlertService.customSuccessMessage(res.message);\r\n          });\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { Observable, Subject } from \"rxjs\";\r\nimport { DatePipe } from \"@angular/common\";\r\nimport {\r\n  Component,\r\n  ElementRef,\r\n  Inject,\r\n  Input,\r\n  OnInit,\r\n  ViewChild,\r\n  OnChanges,\r\n  SimpleChanges,\r\n} from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport {\r\n  ATTACHMENT_TYPE,\r\n  APP_DECISION_STATUS,\r\n  SUBMISSION_TYPE,\r\n  APPLICATION_STATUS,\r\n  APPLICATION_STATUS_REVISION,\r\n  APPLICATION_STATUS_FOR_COMPLIANCE,\r\n} from \"@shared\";\r\nimport {\r\n  AttachmentDocument,\r\n  S1Application,\r\n  S2Application,\r\n  UserAccount,\r\n} from \"@models\";\r\nimport { ApiService, DataStorageService, SweetAlertService } from \"@services\";\r\nimport { ENDPOINTS } from \"@shared\";\r\nimport Swal from \"sweetalert2\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport {\r\n  MatDialog,\r\n  MatDialogRef,\r\n  MAT_DIALOG_DATA,\r\n} from \"@angular/material/dialog\";\r\nimport { DomSanitizer } from \"@angular/platform-browser\";\r\nimport { FileStorageService } from \"app/core/services/file.storage.service\";\r\n\r\n@Component({\r\n  selector: \"app-attachment-document\",\r\n  templateUrl: \"./attachment-document.component.html\",\r\n  styleUrls: [\"./attachment-document.component.scss\"],\r\n})\r\nexport class AttachmentDocumentComponent implements OnInit, OnChanges {\r\n  attachmentDocuments = [];\r\n  @Input() originalAttachmentDocuments = [];\r\n  @Input() revisionAttachmentDocuments = [];\r\n  @Input() complianceAttachmentDocuments = [];\r\n  @Input() s2SupportAttchmentDocuments;\r\n  @Input() s2DocObservable: Subject<any> = new Subject();\r\n  s2SupportDocument: any = {};\r\n  @Input() S2SupportDoc: Boolean = false;\r\n\r\n  tempRevisionAttachmentDocuments = [];\r\n  tempComplianceAttachmentDocuments = [];\r\n\r\n  @Input() s2Appplication = new S2Application();\r\n  @Input() s1Application = new S1Application();\r\n  @Input() labelMainDocument = \"\";\r\n  @Input() isAscUser = false;\r\n  @Input() isDisableFieldOnUpdate = false;\r\n  @Input() applicationStage = \"\";\r\n\r\n  showMainDocumentUploadButton = false;\r\n  showMainDocumentUploadButtonR = false;\r\n  showMainDocumentUploadButtonC = false;\r\n\r\n  showMainDocumentViewButton = false;\r\n  showMainDocumentViewButtonR = false;\r\n  showMainDocumentViewButtonC = false;\r\n\r\n  safeURLMainDoc: any;\r\n  safeURLMainDocR: any;\r\n  safeURLMainDocC: any;\r\n\r\n  uploadedFileMain: any;\r\n  @ViewChild(\"mainFile\")\r\n  myMainFile: ElementRef;\r\n  @ViewChild(\"mainInput\")\r\n  myMainInput: ElementRef;\r\n\r\n  showSupportDocumentFrame = false;\r\n  showSupportDocumentFrameR = false;\r\n  showSupportDocumentFrameC = false;\r\n\r\n  showSupportiveDocumentUploadButton = false;\r\n  showSupportiveDocumentUploadButtonR = false;\r\n  showSupportiveDocumentUploadButtonC = false;\r\n\r\n  showSupportiveDocumentViewButton = false;\r\n  showSupportiveDocumentViewButtonR = false;\r\n  showSupportiveDocumentViewButtonC = false;\r\n\r\n  safeURLSupportDoc: any;\r\n  safeURLSupportDocR: any;\r\n  safeURLSupportDocC: any;\r\n\r\n  uploadedFileSupportive: any;\r\n  @ViewChild(\"supportiveFile\")\r\n  mySupportiveFile: ElementRef;\r\n  @ViewChild(\"supportiveInput\")\r\n  mySupportiveInput: ElementRef;\r\n\r\n  revisionLetterAttachment: any;\r\n  showRevisionLetterViewButton = false;\r\n  showRevisionLetterUploadButton = false;\r\n  safeURLRevisionLetter: any;\r\n  uploadedFileRevision: any;\r\n\r\n  @ViewChild(\"revisionLetterFile\")\r\n  myRevisionLetterFile: ElementRef;\r\n  @ViewChild(\"revisionLetterInput\")\r\n  myRevisionLetterInput: ElementRef;\r\n\r\n  todayDate: Date = new Date();\r\n  attachmentType = ATTACHMENT_TYPE.MAIN;\r\n  submissionType = SUBMISSION_TYPE.ORIGINAL;\r\n  mainDocAttachmentSize = 0;\r\n  supportDocAttachmentSize = 0;\r\n  revisionDocAttachmentSize = 0;\r\n  attachmentSizeForUpload: number;\r\n  selectedFiles: FileList;\r\n  currentFileUpload: File;\r\n  progress: { percentage: number } = { percentage: 0 };\r\n\r\n  attachmentDocumentForm: FormGroup;\r\n  id: any;\r\n  currentUser: UserAccount;\r\n  attachmentDocument = new AttachmentDocument();\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private dataStorageService: DataStorageService,\r\n    private sweetAlertService: SweetAlertService,\r\n    private dataStorage: DataStorageService,\r\n    private apiService: ApiService,\r\n    public datepipe: DatePipe,\r\n    private spinner: NgxSpinnerService,\r\n    private route: ActivatedRoute,\r\n    private dialog: MatDialog,\r\n    private sanitizer: DomSanitizer,\r\n    private fileStorageService: FileStorageService,\r\n    private router: Router\r\n  ) {}\r\n  ngOnChanges(changes: SimpleChanges): void {}\r\n\r\n  ngOnInit(): void {\r\n    this.id = Number(this.route.snapshot.paramMap.get(\"id\"));\r\n    this.currentUser = this.dataStorage.getUserAccount();\r\n    this.setFormValidator();\r\n    console.log(\"----1 => \", this.s2Appplication);\r\n    this.s2DocObservable.subscribe((res) => {\r\n      if (res.type === \"application\") {\r\n        this.s2Appplication = res.value;\r\n      } else if (res.type === \"document\") {\r\n        console.log(\"s2 document\", res.value);\r\n        this.s2SupportDocument = res.value.filter(\r\n          (r) => r.attachmentType === ATTACHMENT_TYPE.SUPPORTIVE\r\n        )[this.s1Application.hasNoSupportingDocs ? 0 : 1];\r\n      }\r\n    });\r\n    console.log(\"S2222 => \", this.s2SupportAttchmentDocuments);\r\n  }\r\n\r\n  validateDeleteBtn(): boolean {\r\n    if (\r\n      this.currentUser.accountType === \"APPLICANT\" &&\r\n      this.s2Appplication.internalStatus &&\r\n      this.s2SupportDocument &&\r\n      this.s2SupportAttchmentDocuments.filter(\r\n        (r) => r.attachmentType === ATTACHMENT_TYPE.SUPPORTIVE\r\n      )[this.s1Application.hasNoSupportingDocs ? 0 : 1]\r\n    ) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  changeTab(evt) {\r\n    if (evt.tab) {\r\n      const label = evt.tab.textLabel;\r\n      if (label === \"REVISION\" || label === \"COMPLIANCE\") {\r\n        this.s1Application.hasNoSupportingDocs = false;\r\n      }\r\n    }\r\n  }\r\n  selectS2SupprtDoc(event) {\r\n    console.log(\"================= \", this.s2SupportAttchmentDocuments);\r\n    // checking of file type;\r\n    if (event.target.files[0].type !== \"application/pdf\") {\r\n      this.sweetAlertService.customErrorMessage(\r\n        \"Attachment should be in PDF format only.\"\r\n      );\r\n      event.target.value = \"\";\r\n      return;\r\n    }\r\n\r\n    // getting the file size.\r\n    this.attachmentType = ATTACHMENT_TYPE.SUPPORTIVE;\r\n    console.log(\"S2 Support Doc =>\", event.target.files);\r\n    this.supportDocAttachmentSize = event.target.files[0].size;\r\n\r\n    let attachmentSize =\r\n      this.mainDocAttachmentSize +\r\n      this.supportDocAttachmentSize +\r\n      this.revisionDocAttachmentSize;\r\n\r\n    // file size checking and validation\r\n    if (attachmentSize > 15000000) {\r\n      // 1MB = 1M : FOR INTEGRATION\r\n      this.sweetAlertService.customErrorMessage(\r\n        `Attachments' total file size should not exceed 15MB.`\r\n      );\r\n      event.target.value = \"\";\r\n      return;\r\n    } else {\r\n      // creating document object url\r\n      const pdfURL = URL.createObjectURL(event.target.files[0]);\r\n      this.attachmentSizeForUpload = event.target.files[0].size;\r\n      this.safeURLSupportDoc = this.sanitizer.bypassSecurityTrustResourceUrl(\r\n        pdfURL\r\n      );\r\n      this.showSupportiveDocumentUploadButton = true;\r\n\r\n      const reader = new FileReader();\r\n      const [file] = event.target.files;\r\n\r\n      reader.readAsDataURL(file);\r\n      reader.onload = () => {};\r\n    }\r\n    this.selectedFiles = event.target.files;\r\n  }\r\n  selectFile(event, typeOfDocument) {\r\n    this.attachmentType = typeOfDocument;\r\n    if (event.target.files[0].type === \"application/pdf\") {\r\n      if (this.attachmentType === ATTACHMENT_TYPE.MAIN) {\r\n        this.mainDocAttachmentSize = event.target.files[0].size;\r\n      } else if (this.attachmentType === ATTACHMENT_TYPE.SUPPORTIVE) {\r\n        this.supportDocAttachmentSize = event.target.files[0].size;\r\n      } else if (this.attachmentType === ATTACHMENT_TYPE.REVISION_LETTER) {\r\n        this.revisionDocAttachmentSize = event.target.files[0].size;\r\n      }\r\n      let attachmentSize =\r\n        this.mainDocAttachmentSize +\r\n        this.supportDocAttachmentSize +\r\n        this.revisionDocAttachmentSize;\r\n\r\n      if (attachmentSize > 15000000) {\r\n        // 1MB = 1M : FOR INTEGRATION\r\n        this.sweetAlertService.customErrorMessage(\r\n          `Attachments' total file size should not exceed 15MB.`\r\n        );\r\n        event.target.value = \"\";\r\n        return;\r\n      } else {\r\n        const pdfURL = URL.createObjectURL(event.target.files[0]);\r\n\r\n        this.attachmentSizeForUpload = event.target.files[0].size;\r\n\r\n        if (this.attachmentType === ATTACHMENT_TYPE.MAIN) {\r\n          this.safeURLMainDoc = this.sanitizer.bypassSecurityTrustResourceUrl(\r\n            pdfURL\r\n          );\r\n          this.showMainDocumentUploadButton = true;\r\n        } else if (this.attachmentType === ATTACHMENT_TYPE.SUPPORTIVE) {\r\n          this.safeURLSupportDoc = this.sanitizer.bypassSecurityTrustResourceUrl(\r\n            pdfURL\r\n          );\r\n          this.showSupportiveDocumentUploadButton = true;\r\n        } else if (this.attachmentType === ATTACHMENT_TYPE.REVISION_LETTER) {\r\n          this.safeURLRevisionLetter = this.sanitizer.bypassSecurityTrustResourceUrl(\r\n            pdfURL\r\n          );\r\n          this.showRevisionLetterUploadButton = true;\r\n        }\r\n\r\n        // original-approved - for revision\r\n        // revision\r\n        if (\r\n          (this.submissionType === SUBMISSION_TYPE.REVISION &&\r\n            this.s1Application.decisionStatus !==\r\n              APP_DECISION_STATUS.INCOMPLETE) ||\r\n          ((this.s1Application.internalStatus ===\r\n            APPLICATION_STATUS.S1_APPLICATION_REVIEWED ||\r\n            this.s1Application.internalStatus ===\r\n              APPLICATION_STATUS_FOR_COMPLIANCE.COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER) &&\r\n            (this.s1Application.decisionStatus ===\r\n              APPLICATION_STATUS.APPROVED ||\r\n              this.s1Application.decisionStatus === \"APPROVED W/ CAUTION\"))\r\n        ) {\r\n          this.safeURLMainDocR = this.safeURLMainDoc;\r\n          this.safeURLSupportDocR = this.safeURLSupportDoc;\r\n\r\n          this.showMainDocumentUploadButtonR = this.showMainDocumentUploadButton;\r\n          this.showSupportiveDocumentUploadButtonR = this.showSupportiveDocumentUploadButton;\r\n\r\n          if (this.tempRevisionAttachmentDocuments.length === 0) {\r\n            this.s1Application.mainAttachmentReference = null;\r\n            this.s1Application.supportingAttachmentReference = null;\r\n            this.s1Application.revisionLetterAttachmentReference = null;\r\n          }\r\n        }\r\n\r\n        // original-incomplete - original\r\n        // revision-incomplete\r\n        // for compliance\r\n        else if (\r\n          this.submissionType === SUBMISSION_TYPE.COMPLIANCE ||\r\n          (this.s1Application.internalStatus ===\r\n            APPLICATION_STATUS.S1_APPLICATION_REVIEWED &&\r\n            this.s1Application.decisionStatus ===\r\n              APPLICATION_STATUS.INCOMPLETE) ||\r\n          (this.submissionType === SUBMISSION_TYPE.REVISION &&\r\n            this.s1Application.decisionStatus ===\r\n              APP_DECISION_STATUS.INCOMPLETE)\r\n        ) {\r\n          this.safeURLMainDocC = this.safeURLMainDoc;\r\n          this.safeURLSupportDocC = this.safeURLSupportDoc;\r\n\r\n          this.showMainDocumentUploadButtonC = this.showMainDocumentUploadButton;\r\n          this.showSupportiveDocumentUploadButtonC = this.showSupportiveDocumentUploadButton;\r\n\r\n          if (this.tempComplianceAttachmentDocuments.length === 0) {\r\n            this.s1Application.mainAttachmentReference = null;\r\n            this.s1Application.supportingAttachmentReference = null;\r\n            this.s1Application.revisionLetterAttachmentReference = null;\r\n          }\r\n        }\r\n\r\n        const reader = new FileReader();\r\n        const [file] = event.target.files;\r\n\r\n        reader.readAsDataURL(file);\r\n        reader.onload = () => {};\r\n      }\r\n\r\n      this.selectedFiles = event.target.files;\r\n    } else {\r\n      this.sweetAlertService.customErrorMessage(\r\n        \"Attachment should be in PDF format only.\"\r\n      );\r\n      event.target.value = \"\";\r\n      return;\r\n    }\r\n  }\r\n\r\n  uploadS2SupportDoc() {\r\n    let attachmentType;\r\n    let appFormReference = \"\";\r\n    attachmentType = \"SUPPORTING\";\r\n    this.submissionType = SUBMISSION_TYPE.ORIGINAL;\r\n    Swal.fire({\r\n      text:\r\n        \"Are you sure you want to upload the \" +\r\n        attachmentType.replaceAll(\"_\", \" \") +\r\n        \" DOCUMENT?\",\r\n      icon: \"question\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Confirm\",\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.spinner.show();\r\n\r\n        this.progress.percentage = 0;\r\n        this.currentFileUpload = this.selectedFiles.item(0);\r\n        let params = \"\";\r\n        let appFormRef = \"\";\r\n\r\n        // set appFormReference\r\n        if (this.s2Appplication.appFormReference) {\r\n          console.log(\"------------------------------\");\r\n          appFormRef = `&appFormReference=${this.s2Appplication.appFormReference}`;\r\n        }\r\n\r\n        params = `?&attachmentType=${this.attachmentType}&submissionType=${this.submissionType}${appFormReference}&fileSize=${this.attachmentSizeForUpload}${appFormRef}`;\r\n        this.fileStorageService\r\n          .pushFileToStorage(\r\n            ENDPOINTS.attachmentDocument,\r\n            this.currentFileUpload,\r\n            params\r\n          )\r\n          .subscribe(\r\n            (res) => {\r\n              console.log(this.attachmentType, \" \", res.responseData.data);\r\n\r\n              if (\r\n                !this.s2Appplication.appFormReference ||\r\n                this.s2Appplication.appFormReference === \"\"\r\n              ) {\r\n                this.s2Appplication.appFormReference =\r\n                  res.responseData.data.appFormReference;\r\n                console.log(\r\n                  \"SET APPFORMREF: \",\r\n                  this.s1Application.appFormReference\r\n                );\r\n              }\r\n\r\n              this.uploadedFileSupportive = res.responseData.data;\r\n              this.s2SupportDocAddToAttachmentDocument(\r\n                this.uploadedFileSupportive\r\n              );\r\n              this.showSupportiveDocumentUploadButton = false;\r\n              this.showSupportiveDocumentViewButton = true;\r\n              this.s2Appplication.supportingAttachmentReference = this.uploadedFileSupportive.supportingAttachmentReference;\r\n\r\n              this.spinner.hide();\r\n              this.sweetAlertService.customSuccessMessage(\r\n                \"Attachment successfully uploaded.\"\r\n              );\r\n              this.selectedFiles = undefined;\r\n            },\r\n            (err: any) => {\r\n              this.spinner.hide();\r\n              this.sweetAlertService.error(err);\r\n            },\r\n            () => {\r\n              // actions after subscription\r\n              this.spinner.hide();\r\n            }\r\n          );\r\n      } else {\r\n        this.currentFileUpload = null;\r\n      }\r\n    });\r\n    console.log(\"uploaded =======> \", this.s2SupportAttchmentDocuments);\r\n  }\r\n\r\n  uploadDocument() {\r\n    console.log(\"type: \", this.attachmentType);\r\n    let attachmentType;\r\n    let appFormReference = \"\";\r\n    if (\r\n      this.attachmentType === ATTACHMENT_TYPE.SUPPORTIVE ||\r\n      this.S2SupportDoc\r\n    ) {\r\n      attachmentType = \"SUPPORTING\";\r\n    } else {\r\n      attachmentType = this.attachmentType;\r\n    }\r\n\r\n    if (!this.S2SupportDoc) {\r\n      // set submission type and appFormReference\r\n      if (\r\n        attachmentType === ATTACHMENT_TYPE.REVISION_LETTER ||\r\n        (this.s1Application.submissionType === SUBMISSION_TYPE.ORIGINAL &&\r\n          (this.s1Application.decisionStatus === APPLICATION_STATUS.APPROVED ||\r\n            this.s1Application.decisionStatus === \"APPROVED W/ CAUTION\"))\r\n      ) {\r\n        this.submissionType = SUBMISSION_TYPE.REVISION;\r\n        // appFormReference = `&appFormReference=${this.s1Application.appFormReference}`;\r\n      } else if (\r\n        this.s1Application.decisionStatus === APP_DECISION_STATUS.INCOMPLETE\r\n      ) {\r\n        this.submissionType = SUBMISSION_TYPE.COMPLIANCE;\r\n        // appFormReference = `&appFormReference=${this.s1Application.appFormReference}&applicationFormId=${this.s1Application.id}`;\r\n        appFormReference = `&applicationFormId=${this.s1Application.id}`;\r\n      } else {\r\n        this.submissionType = SUBMISSION_TYPE.ORIGINAL;\r\n      }\r\n    } else {\r\n      this.submissionType = SUBMISSION_TYPE.ORIGINAL;\r\n    }\r\n\r\n    console.log(\"NEW SUTYPE: \", this.submissionType);\r\n\r\n    Swal.fire({\r\n      text:\r\n        \"Are you sure you want to upload the \" +\r\n        attachmentType.replaceAll(\"_\", \" \") +\r\n        \" DOCUMENT?\",\r\n      icon: \"question\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Confirm\",\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.spinner.show();\r\n\r\n        this.progress.percentage = 0;\r\n        this.currentFileUpload = this.selectedFiles.item(0);\r\n        let params = \"\";\r\n        let appFormRef = \"\";\r\n\r\n        // set appFormReference\r\n        if (this.s1Application.appFormReference) {\r\n          appFormRef = `&appFormReference=${this.s1Application.appFormReference}`;\r\n        }\r\n        if (this.s2Appplication.appFormReference) {\r\n          appFormRef = `&appFormReference=${this.s2Appplication.appFormReference}`;\r\n        }\r\n\r\n        params = `?&attachmentType=${this.attachmentType}&submissionType=${this.submissionType}${appFormReference}&fileSize=${this.attachmentSizeForUpload}${appFormRef}`;\r\n        this.fileStorageService\r\n          .pushFileToStorage(\r\n            ENDPOINTS.attachmentDocument,\r\n            this.currentFileUpload,\r\n            params\r\n          )\r\n          .subscribe(\r\n            (res) => {\r\n              console.log(this.attachmentType, \" \", res.responseData.data);\r\n\r\n              if (\r\n                !this.s1Application.appFormReference ||\r\n                this.s1Application.appFormReference === \"\"\r\n              ) {\r\n                this.s1Application.appFormReference =\r\n                  res.responseData.data.appFormReference;\r\n                console.log(\r\n                  \"SET APPFORMREF: \",\r\n                  this.s1Application.appFormReference\r\n                );\r\n              }\r\n\r\n              if (!this.S2SupportDoc) {\r\n                if (this.attachmentType === ATTACHMENT_TYPE.MAIN) {\r\n                  this.uploadedFileMain = res.responseData.data;\r\n                  this.addToAttachmentDocuments(this.uploadedFileMain);\r\n                  this.showMainDocumentUploadButton = false;\r\n                  this.showMainDocumentViewButton = true;\r\n                  this.showSupportDocumentFrame = true;\r\n                  this.s1Application.mainAttachmentReference = this.uploadedFileMain.mainAttachmentReference;\r\n                } else if (this.attachmentType === ATTACHMENT_TYPE.SUPPORTIVE) {\r\n                  this.uploadedFileSupportive = res.responseData.data;\r\n                  this.addToAttachmentDocuments(this.uploadedFileSupportive);\r\n                  this.showSupportiveDocumentUploadButton = false;\r\n                  this.showSupportiveDocumentViewButton = true;\r\n                  this.s1Application.supportingAttachmentReference = this.uploadedFileSupportive.supportingAttachmentReference;\r\n                } else if (\r\n                  this.attachmentType === ATTACHMENT_TYPE.REVISION_LETTER\r\n                ) {\r\n                  this.uploadedFileRevision = res.responseData.data;\r\n                  this.addToAttachmentDocuments(this.uploadedFileRevision);\r\n                  this.showRevisionLetterViewButton = true;\r\n                  this.showRevisionLetterUploadButton = false;\r\n                  this.s1Application.revisionLetterAttachmentReference = this.uploadedFileRevision.revisionLetterAttachmentReference;\r\n                  this.revisionLetterAttachment = this.attachmentDocuments.filter(\r\n                    (data) =>\r\n                      data?.attachmentType === ATTACHMENT_TYPE.REVISION_LETTER\r\n                  )[0];\r\n                }\r\n              } else {\r\n                this.uploadedFileSupportive = res.responseData.data;\r\n                this.s2SupportDocAddToAttachmentDocument(\r\n                  this.uploadedFileSupportive\r\n                );\r\n                this.showSupportiveDocumentUploadButton = false;\r\n                this.showSupportiveDocumentViewButton = true;\r\n                this.s2Appplication.supportingAttachmentReference = this.uploadedFileSupportive.supportingAttachmentReference;\r\n              }\r\n\r\n              if (\r\n                (this.submissionType === SUBMISSION_TYPE.ORIGINAL &&\r\n                  (this.s1Application.decisionStatus ===\r\n                    APPLICATION_STATUS.APPROVED ||\r\n                    this.s1Application.decisionStatus ===\r\n                      \"APPROVED W/ CAUTION\")) ||\r\n                this.submissionType === SUBMISSION_TYPE.REVISION\r\n              ) {\r\n                if (this.attachmentType === ATTACHMENT_TYPE.MAIN) {\r\n                  this.showMainDocumentUploadButtonR = this.showMainDocumentUploadButton;\r\n                  this.showMainDocumentViewButtonR = this.showMainDocumentViewButton;\r\n                } else if (this.attachmentType === ATTACHMENT_TYPE.SUPPORTIVE) {\r\n                  this.showSupportDocumentFrameR = this.showSupportDocumentFrame;\r\n                  this.showSupportiveDocumentUploadButtonR = this.showSupportiveDocumentUploadButton;\r\n                  this.showSupportiveDocumentViewButtonR = this.showSupportiveDocumentViewButton;\r\n                }\r\n              } else if (\r\n                (this.submissionType === SUBMISSION_TYPE.ORIGINAL &&\r\n                  this.s1Application.decisionStatus ===\r\n                    APP_DECISION_STATUS.INCOMPLETE) ||\r\n                (this.submissionType === SUBMISSION_TYPE.REVISION &&\r\n                  this.s1Application.decisionStatus ===\r\n                    APP_DECISION_STATUS.INCOMPLETE) ||\r\n                this.submissionType === SUBMISSION_TYPE.COMPLIANCE\r\n              ) {\r\n                if (this.attachmentType === ATTACHMENT_TYPE.MAIN) {\r\n                  this.showMainDocumentUploadButtonC = this.showMainDocumentUploadButton;\r\n                  this.showMainDocumentViewButtonC = this.showMainDocumentViewButton;\r\n                } else if (this.attachmentType === ATTACHMENT_TYPE.SUPPORTIVE) {\r\n                  this.showSupportDocumentFrameC = this.showSupportDocumentFrame;\r\n                  this.showSupportiveDocumentUploadButtonC = this.showSupportiveDocumentUploadButton;\r\n                  this.showSupportiveDocumentViewButtonC = this.showSupportiveDocumentViewButton;\r\n                }\r\n              }\r\n\r\n              this.spinner.hide();\r\n              this.sweetAlertService.customSuccessMessage(\r\n                \"Attachment successfully uploaded.\"\r\n              );\r\n              this.selectedFiles = undefined;\r\n            },\r\n            (err: any) => {\r\n              this.spinner.hide();\r\n              this.sweetAlertService.error(err);\r\n            },\r\n            () => {\r\n              // actions after subscription\r\n              this.spinner.hide();\r\n            }\r\n          );\r\n      } else {\r\n        this.currentFileUpload = null;\r\n      }\r\n    });\r\n  }\r\n  s2SupportDocAddToAttachmentDocument(obj: any) {\r\n    if (obj.supportingAttachmentReference) {\r\n      this.attachmentDocument.mainAttachmentReference =\r\n        obj.mainAttachmentReference;\r\n      this.attachmentDocument.supportingAttachmentReference =\r\n        obj.supportingAttachmentReference;\r\n      this.attachmentDocument.revisionLetterAttachmentReference =\r\n        obj.revisionLetterAttachmentReference;\r\n      this.attachmentDocument.id = obj.id;\r\n      this.attachmentDocument.originalFilename = obj.originalFilename;\r\n      this.attachmentDocument.filename = obj.filename;\r\n      this.attachmentDocument.fileSize = obj.fileSize;\r\n      this.attachmentDocument.fileExtension = obj.fileExtension;\r\n      this.attachmentDocument.fileURL = obj.fileURL;\r\n      this.attachmentDocument.attachmentType = obj.attachmentType;\r\n      this.attachmentDocument.documentFormat = obj.documentFormat;\r\n      this.attachmentDocument.createdBy = this.currentUser.username;\r\n      this.attachmentDocument.createdDate = this.todayDate;\r\n      console.log(this.attachmentDocuments);\r\n      this.attachmentDocuments[0] = this.attachmentDocument;\r\n      this.s2SupportAttchmentDocuments = this.attachmentDocuments;\r\n      this.s2SupportDocument = obj;\r\n      this.s2SupportAttchmentDocuments.push(obj);\r\n      console.log(\"s2support => \", obj);\r\n\r\n      console.log(this.s2Appplication);\r\n      console.log(\"s2 app\", this.attachmentDocuments);\r\n    }\r\n  }\r\n\r\n  addToAttachmentDocuments(obj: any) {\r\n    if (obj) {\r\n      console.log(\"addToAttachmentDocuments\");\r\n\r\n      if (\r\n        this.s1Application.submissionType === SUBMISSION_TYPE.ORIGINAL &&\r\n        (this.s1Application.internalStatus === APPLICATION_STATUS.SAVED ||\r\n          this.s1Application.internalStatus === \"\" ||\r\n          this.s1Application.internalStatus === undefined)\r\n      ) {\r\n        this.attachmentDocuments = JSON.parse(\r\n          JSON.stringify(this.originalAttachmentDocuments)\r\n        );\r\n      }\r\n\r\n      this.attachmentDocument.mainAttachmentReference =\r\n        obj.mainAttachmentReference;\r\n      this.attachmentDocument.supportingAttachmentReference =\r\n        obj.supportingAttachmentReference;\r\n      this.attachmentDocument.revisionLetterAttachmentReference =\r\n        obj.revisionLetterAttachmentReference;\r\n      this.attachmentDocument.id = obj.id;\r\n      this.attachmentDocument.originalFilename = obj.originalFilename;\r\n      this.attachmentDocument.filename = obj.filename;\r\n      this.attachmentDocument.fileSize = obj.fileSize;\r\n      this.attachmentDocument.fileExtension = obj.fileExtension;\r\n      this.attachmentDocument.fileURL = obj.fileURL;\r\n      this.attachmentDocument.attachmentType = obj.attachmentType;\r\n      this.attachmentDocument.documentFormat = obj.documentFormat;\r\n      this.attachmentDocument.createdBy = this.currentUser.username;\r\n      this.attachmentDocument.createdDate = this.todayDate;\r\n      console.log(this.attachmentDocuments);\r\n\r\n      if (this.attachmentDocument.attachmentType === \"MAIN\") {\r\n        this.attachmentDocuments[0] = this.attachmentDocument;\r\n      } else if (this.attachmentDocument.attachmentType === \"SUPPORTIVE\") {\r\n        this.attachmentDocuments[1] = this.attachmentDocument;\r\n      } else if (this.attachmentDocument.attachmentType === \"REVISION_LETTER\") {\r\n        this.attachmentDocuments[2] = this.attachmentDocument;\r\n      }\r\n\r\n      if (\r\n        (this.s1Application.submissionType === SUBMISSION_TYPE.REVISION &&\r\n          this.s1Application.decisionStatus !==\r\n            APP_DECISION_STATUS.INCOMPLETE) ||\r\n        (this.s1Application.submissionType === SUBMISSION_TYPE.ORIGINAL &&\r\n          (this.s1Application.decisionStatus === APPLICATION_STATUS.APPROVED ||\r\n            this.s1Application.decisionStatus === \"APPROVED W/ CAUTION\"))\r\n      ) {\r\n        // this.revisionAttachmentDocuments = this.attachmentDocuments;\r\n        this.tempRevisionAttachmentDocuments = JSON.parse(\r\n          JSON.stringify(this.attachmentDocuments)\r\n        );\r\n      } else if (\r\n        this.s1Application.decisionStatus === APP_DECISION_STATUS.INCOMPLETE\r\n      ) {\r\n        // this.complianceAttachmentDocuments = this.attachmentDocuments;\r\n        this.tempComplianceAttachmentDocuments = JSON.parse(\r\n          JSON.stringify(this.attachmentDocuments)\r\n        );\r\n      } else {\r\n        this.originalAttachmentDocuments = JSON.parse(\r\n          JSON.stringify(this.attachmentDocuments)\r\n        );\r\n      }\r\n\r\n      console.log(this.attachmentDocuments);\r\n      this.attachmentDocument = new AttachmentDocument();\r\n    } else {\r\n      this.spinner.hide();\r\n      console.log(\"Null attachment.\");\r\n      this.myMainFile.nativeElement.value = null;\r\n      this.myMainInput.nativeElement.value = null;\r\n      this.sweetAlertService.customErrorMessage(\r\n        \"Attachment cannot be uploaded.\"\r\n      );\r\n    }\r\n  }\r\n\r\n  viewS2SupportDoc() {\r\n    console.log(\"uploaded\", this.uploadedFileSupportive);\r\n    console.log(\"uploaded\", this.attachmentDocuments);\r\n    console.log(\"s2Upport\", this.s2SupportAttchmentDocuments);\r\n    console.log(\"s2\", this.s2Appplication);\r\n    console.log(\"s1\", this.s1Application);\r\n    // console.log(\"S2 SUPPORTIVE\", );\r\n    console.log(\"S2 SUPPORTIVE!! \", this.s2SupportDocument);\r\n    let fileURL: string = this.s2SupportDocument.fileURL;\r\n    window.open(fileURL);\r\n  }\r\n\r\n  viewDocument(typeOfDocument, isOriginal = true) {\r\n    if (this.s1Application.submissionType === SUBMISSION_TYPE.ORIGINAL) {\r\n      this.attachmentDocuments = JSON.parse(\r\n        JSON.stringify(this.originalAttachmentDocuments)\r\n      );\r\n    } else if (\r\n      this.s1Application.submissionType === SUBMISSION_TYPE.REVISION &&\r\n      this.s1Application.decisionStatus !== APP_DECISION_STATUS.INCOMPLETE\r\n    ) {\r\n      this.attachmentDocuments = JSON.parse(\r\n        JSON.stringify(this.revisionAttachmentDocuments)\r\n      );\r\n    } else if (\r\n      this.s1Application.submissionType === SUBMISSION_TYPE.COMPLIANCE ||\r\n      this.s1Application.decisionStatus === APP_DECISION_STATUS.INCOMPLETE\r\n    ) {\r\n      this.attachmentDocuments = JSON.parse(\r\n        JSON.stringify(this.complianceAttachmentDocuments)\r\n      );\r\n    }\r\n\r\n    if (typeOfDocument === ATTACHMENT_TYPE.MAIN) {\r\n      console.log(isOriginal, this.uploadedFileMain);\r\n      if (this.uploadedFileMain && !isOriginal) {\r\n        window.open(this.uploadedFileMain.fileURL);\r\n      } else {\r\n        window.open(this.attachmentDocuments[0].fileURL);\r\n      }\r\n    } else if (typeOfDocument === ATTACHMENT_TYPE.SUPPORTIVE) {\r\n      if (this.uploadedFileSupportive && !isOriginal) {\r\n        window.open(this.uploadedFileSupportive.fileURL);\r\n      } else {\r\n        const supportiveDoc = this.attachmentDocuments.filter(\r\n          (res) => res.attachmentType === ATTACHMENT_TYPE.SUPPORTIVE\r\n        )[0];\r\n        window.open(supportiveDoc.fileURL);\r\n      }\r\n    } else if (typeOfDocument === ATTACHMENT_TYPE.REVISION_LETTER) {\r\n      if (this.uploadedFileRevision && !isOriginal) {\r\n        window.open(this.uploadedFileRevision.fileURL);\r\n      } else {\r\n        // const revisionLetterDoc = this.revisionLetterAttachment;\r\n        const revisionLetterDoc = this.attachmentDocuments.filter(\r\n          (res) => res.attachmentType === ATTACHMENT_TYPE.REVISION_LETTER\r\n        )[0];\r\n        window.open(revisionLetterDoc.fileURL);\r\n      }\r\n    }\r\n  }\r\n\r\n  viewDocument2(i) {\r\n    window.open(i?.fileURL);\r\n  }\r\n\r\n  deleteUploadedFile2(obj) {\r\n    Swal.fire({\r\n      text: \"Are you sure you want to delete this document permanently?\",\r\n      icon: \"question\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Confirm\",\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.spinner.show();\r\n        if (\r\n          obj.submissionType === SUBMISSION_TYPE.REVISION &&\r\n          obj.decisionStatus !== APP_DECISION_STATUS.INCOMPLETE\r\n        ) {\r\n          this.revisionAttachmentDocuments = this.revisionAttachmentDocuments.filter(\r\n            (data) => data?.id !== obj.id\r\n          );\r\n        } else if (\r\n          obj.submissionType === SUBMISSION_TYPE.COMPLIANCE ||\r\n          obj.decisionStatus === APP_DECISION_STATUS.INCOMPLETE\r\n        ) {\r\n          this.complianceAttachmentDocuments = this.complianceAttachmentDocuments.filter(\r\n            (data) => data?.id !== obj.id\r\n          );\r\n        }\r\n        this.apiService\r\n          .save(ENDPOINTS.attachmentDocument + `/id/${obj.id}`, null)\r\n          .subscribe(\r\n            (res) => {\r\n              this.spinner.hide();\r\n              console.log(\"Attachment successfully deleted.\");\r\n            },\r\n            (err: any) => {\r\n              this.spinner.hide();\r\n              this.sweetAlertService.error(err);\r\n            }\r\n          );\r\n      }\r\n    });\r\n  }\r\n\r\n  deleteS2SupportDoc() {\r\n    Swal.fire({\r\n      text: \"Are you sure you want to delete this document permanently?\",\r\n      icon: \"question\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Confirm\",\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        if (\r\n          this.s2Appplication.submissionType === SUBMISSION_TYPE.ORIGINAL &&\r\n          (this.s2Appplication.internalStatus === APPLICATION_STATUS.SAVED ||\r\n            this.s2Appplication.internalStatus === \"\" ||\r\n            this.s2Appplication.internalStatus === undefined)\r\n        ) {\r\n          this.attachmentDocuments = this.s2SupportAttchmentDocuments;\r\n        }\r\n        let id = this.attachmentDocuments.filter(\r\n          (r) => r.attachmentType === ATTACHMENT_TYPE.SUPPORTIVE\r\n        )[this.s1Application.hasNoSupportingDocs ? 0 : 1].id;\r\n        this.supportDocAttachmentSize = 0;\r\n        // this.attachmentDocuments[this.s1Application.hasNoSupportingDocs? 0 : 1] = null;\r\n        this.s2SupportDocument = {};\r\n        this.s2Appplication.supportingAttachmentReference = null;\r\n        // this.showSupportiveDocumentViewButton = false;\r\n        // this.showSupportiveDocumentUploadButton = false;\r\n        // this.mySupportiveFile.nativeElement.value = null;\r\n        // this.mySupportiveInput.nativeElement.value = null;\r\n        // this.s1Application.supportingAttachmentReference = null;\r\n        console.log(\"result\", result);\r\n\r\n        this.apiService\r\n          .save(ENDPOINTS.attachmentDocument + `/id/${id}`, null)\r\n          .subscribe(\r\n            (res) => {\r\n              this.spinner.hide();\r\n              console.log(\"Attachment successfully deleted.\");\r\n            },\r\n            (err: any) => {\r\n              this.spinner.hide();\r\n              this.sweetAlertService.error(err);\r\n            }\r\n          );\r\n      }\r\n    });\r\n  }\r\n\r\n  deleteUploadedFile(documentType) {\r\n    console.log(\"DELETE...\");\r\n\r\n    let currentSubType = SUBMISSION_TYPE.ORIGINAL;\r\n\r\n    Swal.fire({\r\n      text: \"Are you sure you want to delete this document permanently?\",\r\n      icon: \"question\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Confirm\",\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        let id = \"\";\r\n        // this.spinner.show();\r\n\r\n        // new appform - original\r\n        if (\r\n          this.s1Application.submissionType === SUBMISSION_TYPE.ORIGINAL &&\r\n          (this.s1Application.internalStatus === APPLICATION_STATUS.SAVED ||\r\n            this.s1Application.internalStatus === \"\" ||\r\n            this.s1Application.internalStatus === undefined)\r\n        ) {\r\n          this.attachmentDocuments = this.originalAttachmentDocuments;\r\n        }\r\n\r\n        // approved - original = for revision\r\n        else if (\r\n          this.s1Application.submissionType === SUBMISSION_TYPE.ORIGINAL &&\r\n          (this.s1Application.internalStatus ===\r\n            APPLICATION_STATUS.S1_APPLICATION_REVIEWED ||\r\n            this.s1Application.internalStatus ===\r\n              APPLICATION_STATUS_FOR_COMPLIANCE.COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER) &&\r\n          (this.s1Application.decisionStatus === APPLICATION_STATUS.APPROVED ||\r\n            this.s1Application.decisionStatus === \"APPROVED W/ CAUTION\")\r\n        ) {\r\n          this.attachmentDocuments = this.tempRevisionAttachmentDocuments;\r\n          currentSubType = SUBMISSION_TYPE.REVISION;\r\n        }\r\n\r\n        // incomplete - original = for compliance\r\n        // incomplete - compliance = for compliance\r\n        // incomplete - revision = for compliance\r\n        else if (\r\n          this.s1Application.decisionStatus === APPLICATION_STATUS.INCOMPLETE &&\r\n          (this.s1Application.internalStatus ===\r\n            APPLICATION_STATUS.S1_APPLICATION_REVIEWED ||\r\n            this.s1Application.internalStatus ===\r\n              APPLICATION_STATUS_FOR_COMPLIANCE.COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER ||\r\n            this.s1Application.internalStatus ===\r\n              APPLICATION_STATUS_REVISION.REVISION_SCREENED ||\r\n            this.s1Application.internalStatus ===\r\n              APPLICATION_STATUS_FOR_COMPLIANCE.COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER ||\r\n            this.s1Application.internalStatus ===\r\n              APPLICATION_STATUS.S1_APPLICATION_REJECTED)\r\n        ) {\r\n          this.attachmentDocuments = this.tempComplianceAttachmentDocuments;\r\n          currentSubType = SUBMISSION_TYPE.COMPLIANCE;\r\n        }\r\n        console.log(this.attachmentDocuments);\r\n        console.log(\"currentSubType \", currentSubType);\r\n\r\n        if (documentType === ATTACHMENT_TYPE.MAIN) {\r\n          id = this.attachmentDocuments[0].id;\r\n          this.mainDocAttachmentSize = 0;\r\n          this.attachmentDocuments[0] = null;\r\n          this.s1Application.mainAttachmentReference = null;\r\n          this.showMainDocumentViewButton = false;\r\n          this.myMainFile.nativeElement.value = null;\r\n          this.myMainInput.nativeElement.value = null;\r\n          this.showSupportDocumentFrame = false;\r\n          this.showMainDocumentUploadButton = false;\r\n          this.s1Application.mainAttachmentReference = null;\r\n        } else if (documentType === ATTACHMENT_TYPE.SUPPORTIVE) {\r\n          id = this.attachmentDocuments[1].id;\r\n          this.supportDocAttachmentSize = 0;\r\n          this.attachmentDocuments[1] = null;\r\n          // this.attachmentDocuments[1].originalFilename = null;\r\n          this.s1Application.supportingAttachmentReference = null;\r\n          this.showSupportiveDocumentViewButton = false;\r\n          this.showSupportiveDocumentUploadButton = false;\r\n          this.mySupportiveFile.nativeElement.value = null;\r\n          this.mySupportiveInput.nativeElement.value = null;\r\n          this.s1Application.supportingAttachmentReference = null;\r\n        } else {\r\n          id = this.attachmentDocuments[2].id;\r\n          this.revisionDocAttachmentSize = 0;\r\n          this.attachmentDocuments[2] = null;\r\n          // this.attachmentDocuments[2].originalFilename = null;\r\n          this.revisionLetterAttachment = null;\r\n          this.s1Application.revisionLetterAttachmentReference = null;\r\n          this.showRevisionLetterViewButton = false;\r\n          this.showRevisionLetterUploadButton = false;\r\n          this.myRevisionLetterFile.nativeElement.value = null;\r\n          // this.myRevisionLetterInput.nativeElement.value = null;\r\n          // this.attachmentDocuments = this.attachmentDocuments.filter((doc) =>\r\n          //   !doc.attachmentType.includes(ATTACHMENT_TYPE.REVISION_LETTER));\r\n        }\r\n\r\n        console.log(this.attachmentDocuments);\r\n\r\n        if (currentSubType === SUBMISSION_TYPE.REVISION) {\r\n          this.tempRevisionAttachmentDocuments = this.attachmentDocuments;\r\n        } else if (currentSubType === SUBMISSION_TYPE.COMPLIANCE) {\r\n          this.tempComplianceAttachmentDocuments = this.attachmentDocuments;\r\n        } else {\r\n          this.originalAttachmentDocuments = this.attachmentDocuments;\r\n        }\r\n\r\n        if (\r\n          // new - original\r\n          this.s1Application.internalStatus === undefined ||\r\n          this.s1Application.internalStatus === APPLICATION_STATUS.SAVED ||\r\n          // reviewed - approved - for revision\r\n          ((this.s1Application.internalStatus ===\r\n            APPLICATION_STATUS.S1_APPLICATION_REVIEWED ||\r\n            this.s1Application.internalStatus ===\r\n              APPLICATION_STATUS_FOR_COMPLIANCE.COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER) &&\r\n            (this.s1Application.decisionStatus ===\r\n              APPLICATION_STATUS.APPROVED ||\r\n              this.s1Application.decisionStatus === \"APPROVED W/ CAUTION\")) ||\r\n          // reviewed - incomplete - for compliance\r\n          // incomplete - incomplete - for compliance\r\n          ((this.s1Application.internalStatus ===\r\n            APPLICATION_STATUS.S1_APPLICATION_REVIEWED ||\r\n            this.s1Application.internalStatus ===\r\n              APPLICATION_STATUS_FOR_COMPLIANCE.COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER) &&\r\n            this.s1Application.decisionStatus === APPLICATION_STATUS.INCOMPLETE)\r\n        ) {\r\n          console.log(\"Trigger delete...\");\r\n\r\n          this.apiService\r\n            .save(ENDPOINTS.attachmentDocument + `/id/${id}`, null)\r\n            .subscribe(\r\n              (res) => {\r\n                this.spinner.hide();\r\n                console.log(\"Attachment successfully deleted.\");\r\n              },\r\n              (err: any) => {\r\n                this.spinner.hide();\r\n                this.sweetAlertService.error(err);\r\n              }\r\n            );\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  verifyNoDocumentAttached() {\r\n    this.s1Application.supportingAttachmentReference =\r\n      this.s1Application.supportingAttachmentReference === null ? \"\" : null;\r\n    this.safeURLSupportDoc = null;\r\n  }\r\n\r\n  setFormValidator() {\r\n    this.attachmentDocumentForm = this.formBuilder.group({\r\n      attachmentReference: [\"\"],\r\n      hasNoSupportingDocs: [\"\"],\r\n      typeOfMedium: [\"\"],\r\n      mediumExecution: [\"\"],\r\n      language: [\"\"],\r\n      dialect: [\"\"],\r\n      others: [\"\"],\r\n      sizeLength: [\"\"],\r\n      width: [\"\"],\r\n\r\n      multimediaLength: [\"\"],\r\n      multimediaSize: [\"\"],\r\n      applicationSingleMedia: [\"\"],\r\n      applicationMultimediaStatic: [\"\"],\r\n      applicationMultimediaMoving: [\"\"],\r\n    });\r\n  }\r\n}\r\n","export default \"<!--  -->\\r\\n<div class=\\\"row fields\\\">\\r\\n  <h4>\\r\\n    <i class=\\\"material-icons\\\">preview</i> &nbsp;<b>CLIENT'S INFORMATION</b>\\r\\n    <hr>\\r\\n  </h4>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-4\\\" appearance=\\\"outline\\\">\\r\\n      <mat-label>Client Company Name</mat-label>\\r\\n      <input matInput [value]=\\\"previewS1Application?.company?.companyName\\\" disabled>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-4\\\" appearance=\\\"outline\\\">\\r\\n      <mat-label>Client Membership Affiliation</mat-label>\\r\\n      <input matInput [value]=\\\"previewS1Application?.company?.membersAffiliation?.description\\\" disabled>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-4\\\" appearance=\\\"outline\\\"></div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row\\\"><br></div>\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-4\\\" appearance=\\\"outline\\\">\\r\\n      <mat-label>Brand</mat-label>\\r\\n      <input matInput [value]=\\\"previewS1Application?.brand?.description\\\" disabled>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-4\\\" appearance=\\\"outline\\\">\\r\\n      <mat-label>Product</mat-label>\\r\\n      <input matInput [value]=\\\"previewS1Application?.product?.description\\\" disabled>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-4\\\" appearance=\\\"outline\\\">\\r\\n      <mat-label>Category</mat-label>\\r\\n      <input matInput [value]=\\\"previewS1Application?.product?.category?.description\\\" disabled>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <br><br><br>\\r\\n</div>\\r\\n\\r\\n<!--  -->\\r\\n<div class=\\\"row fields\\\">\\r\\n  <h4>\\r\\n    <i class=\\\"material-icons\\\">preview</i> &nbsp;<b>MATERIAL INFORMATION</b>\\r\\n    <hr>\\r\\n  </h4>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n      <mat-label>Ad Title</mat-label>\\r\\n      <input matInput [value]=\\\"previewS1Application?.adTitle\\\" disabled>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row\\\"><br></div>\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-6\\\" appearance=\\\"outline\\\">\\r\\n      <mat-label>Reference Code of Previously-Approved Material</mat-label>\\r\\n      <input matInput [value]=\\\"previewS1Application?.previousRefCode\\\" disabled>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-6\\\" appearance=\\\"outline\\\">\\r\\n      <mat-label>Tag line</mat-label>\\r\\n      <input matInput [value]=\\\"previewS1Application?.tagLine\\\" disabled>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row\\\" *ngIf=\\\"previewS1Application?.refTypeOfMedium\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <hr>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\" *ngIf=\\\"previewS1Application?.refTypeOfMedium\\\">\\r\\n    <div class=\\\"col-md-6\\\" appearance=\\\"outline\\\">\\r\\n      <mat-label>Media Type</mat-label>\\r\\n      <input matInput [value]=\\\"previewS1Application?.refTypeOfMedium\\\" disabled>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\"><br></div>\\r\\n  <div class=\\\"row\\\" *ngIf=\\\"applicationSingleMedia\\\">\\r\\n    <div class=\\\"col-md-3\\\" appearance=\\\"outline\\\" *ngIf=\\\"applicationSingleMedia?.mediumExecution?.typeOfMedium?.description\\\">\\r\\n      <mat-label>Type of Medium</mat-label>\\r\\n      <input matInput [value]=\\\"applicationSingleMedia?.mediumExecution?.typeOfMedium?.description\\\" disabled>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-3\\\" appearance=\\\"outline\\\" *ngIf=\\\"applicationSingleMedia?.mediumExecution\\\">\\r\\n      <mat-label>Execution</mat-label>\\r\\n      <input matInput [value]=\\\"applicationSingleMedia?.mediumExecution?.typeOfExecution?.typeOfExecution\\\" disabled>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-3\\\" appearance=\\\"outline\\\" *ngIf=\\\"applicationSingleMedia?.dialect\\\">\\r\\n      <mat-label>Language/Dialect</mat-label>\\r\\n      <input matInput [value]=\\\"applicationSingleMedia?.dialect?.dialect\\\" disabled>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-3\\\" appearance=\\\"outline\\\" *ngIf=\\\"applicationSingleMedia?.others\\\">\\r\\n      <mat-label>Others</mat-label>\\r\\n      <input matInput [value]=\\\"applicationSingleMedia?.others\\\" disabled>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-3\\\" appearance=\\\"outline\\\" *ngIf=\\\"applicationSingleMedia?.sizeLength\\\">\\r\\n      <mat-label>Size Length</mat-label>\\r\\n      <input matInput [value]=\\\"applicationSingleMedia?.sizeLength\\\" disabled>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-3\\\" appearance=\\\"outline\\\" *ngIf=\\\"applicationSingleMedia?.width\\\">\\r\\n      <mat-label>Width</mat-label>\\r\\n      <input matInput [value]=\\\"applicationSingleMedia?.width\\\" disabled>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <!-- TO BE DELETED ONCE VERIFIED -->\\r\\n  <!-- <div class=\\\"row\\\" *ngIf=\\\"multimediaMovingList?.length>0\\\">\\r\\n    <span *ngFor=\\\"let i of multimediaMovingList\\\">\\r\\n      <table>\\r\\n        <tr>\\r\\n          <td class=\\\"col-md-4\\\">\\r\\n            <mat-checkbox [checked]=\\\"true\\\" disabled>{{i?.typeOfMedium?.description}}</mat-checkbox>\\r\\n          </td>\\r\\n          <td class=\\\"col-md-1\\\">Length:</td>\\r\\n          <td class=\\\"col-md-2\\\">\\r\\n            <input matInput [value]=\\\"i?.multimediaSizeLength\\\" disabled>\\r\\n          </td>\\r\\n          <td class=\\\"col-md-5\\\"></td>\\r\\n        </tr>\\r\\n      </table>\\r\\n    </span>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row\\\" *ngIf=\\\"multimediaStaticList?.length>0\\\">\\r\\n    <span *ngFor=\\\"let i of multimediaStaticList\\\">\\r\\n      <table>\\r\\n        <tr>\\r\\n          <td class=\\\"col-md-4\\\">\\r\\n            <mat-checkbox [checked]=\\\"true\\\" disabled>{{i?.typeOfMedium?.description}}</mat-checkbox>\\r\\n          </td>\\r\\n          <td class=\\\"col-md-1\\\">Size</td>\\r\\n          <td class=\\\"col-md-2\\\">\\r\\n            <input matInput [value]=\\\"i?.multimediaSizeLength\\\" disabled>\\r\\n          </td>\\r\\n          <td class=\\\"col-md-5\\\"></td>\\r\\n        </tr>\\r\\n      </table>\\r\\n    </span>\\r\\n  </div> -->\\r\\n\\r\\n  <!-- New Multimedia List -->\\r\\n  <div class=\\\"row\\\" *ngIf=\\\"multimediaDTO\\\">\\r\\n    <table class=\\\"mx-3 mb-3\\\">\\r\\n      <ng-container *ngIf=\\\"previewS1Application?.refTypeOfMedium === 'MULTIMEDIA-STATIC'\\\">\\r\\n        <ng-container *ngFor=\\\"let i of multimediaDTO.applicationMultimediaStaticList\\\">\\r\\n          <tr *ngIf=\\\"i?.hasSelected\\\" style=\\\"height: 30px;\\\">\\r\\n            <td class=\\\"col-md-4\\\">\\r\\n              <mat-checkbox [checked]=\\\"i?.hasSelected\\\" disabled>\\r\\n                {{i?.multimediaStaticMedium | uppercase}}\\r\\n              </mat-checkbox>\\r\\n            </td>\\r\\n            <td class=\\\"col-md-1\\\" \\r\\n              *ngIf=\\\"previewS1Application?.refTypeOfMedium === 'MULTIMEDIA-STATIC' && i?.multimediaStaticMedium !== 'digital static'\\\">\\r\\n              Size\\r\\n            </td>\\r\\n            <td class=\\\"col-md-2\\\">\\r\\n              <input matInput \\r\\n                *ngIf=\\\"previewS1Application?.refTypeOfMedium === 'MULTIMEDIA-STATIC' && i?.multimediaStaticMedium !== 'digital static'\\\" \\r\\n                [value]=\\\"i?.sizeLength\\\" disabled>\\r\\n            </td>\\r\\n            <td class=\\\"col-md-5\\\"></td>\\r\\n          </tr>\\r\\n        </ng-container>\\r\\n      </ng-container>\\r\\n\\r\\n      <ng-container *ngIf=\\\"previewS1Application?.refTypeOfMedium === 'MULTIMEDIA-MOVING'\\\">\\r\\n        <ng-container *ngFor=\\\"let i of multimediaDTO.applicationMultimediaMovingList\\\" style=\\\"height: 30px;\\\">\\r\\n          <tr *ngIf=\\\"i?.hasSelected\\\">\\r\\n            <td class=\\\"col-md-4\\\">\\r\\n              <mat-checkbox [checked]=\\\"true\\\" disabled>\\r\\n                {{i?.multimediaMovingMedium | uppercase}}\\r\\n              </mat-checkbox>\\r\\n            </td>\\r\\n            <td class=\\\"col-md-1\\\" *ngIf=\\\"previewS1Application?.refTypeOfMedium === 'MULTIMEDIA-MOVING'\\\">Length</td>\\r\\n            <td class=\\\"col-md-2\\\">\\r\\n              <input matInput *ngIf=\\\"previewS1Application?.refTypeOfMedium === 'MULTIMEDIA-MOVING'\\\" [value]=\\\"multimediaDTO?.sizeLength\\\" disabled>\\r\\n            </td>\\r\\n            <td class=\\\"col-md-5\\\"></td>\\r\\n          </tr>\\r\\n        </ng-container>\\r\\n      </ng-container>\\r\\n    </table>\\r\\n  </div>\\r\\n\\r\\n  <app-attachment-document [s1Application]=\\\"previewS1Application\\\" [applicationStage]=\\\"'S1-Preview'\\\"\\r\\n  [isAscUser]=\\\"'true'\\\" [isDisableFieldOnUpdate]=\\\"'true'\\\"\\r\\n  [originalAttachmentDocuments]=\\\"originalAttachmentDocuments\\\" [revisionAttachmentDocuments]=\\\"revisionAttachmentDocuments\\\" [complianceAttachmentDocuments]=\\\"complianceAttachmentDocuments\\\"></app-attachment-document>\\r\\n\\r\\n  <div class=\\\"row\\\" *ngIf=\\\"supportiveDocumentList.length>0\\\">\\r\\n    <div class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n      <div class=\\\"mat-elevation-z8 fields\\\">\\r\\n        <table mat-table [dataSource]=\\\"dataSource||supportiveDocumentList\\\" matSort>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"typeOfDocument\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> TYPE OF DOCUMENT </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{ element?.typeOfDocument?.description }} </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"variant\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> VARIANT </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{ element?.variant==undefined ? 'N/A' : element?.variant }} </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"expiresOn\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> EXPIRES ON </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n              {{ element?.expiresOn==undefined ? 'N/A' : element?.expiresOn | date:'yyyy-MM-dd' }}\\r\\n            </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"basedOn\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> BASED ON </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n              {{ element?.basedOn ==undefined ? 'N/A' : element?.basedOn | date:'yyyy-MM-dd' }}\\r\\n            </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"remarks\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> REMARKS </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{ element?.remarks==undefined ? 'N/A' : element?.remarks }} </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n          <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n        </table>\\r\\n        <div class=\\\"no-record\\\" [hidden]=\\\"dataSource && dataSource?.data?.length > 0\\\"\\r\\n          *ngIf=\\\"supportiveDocumentList.length==0\\\">\\r\\n          No supporting document found.\\r\\n        </div>\\r\\n        <!-- <mat-paginator [pageSizeOptions]=\\\"[10, 20, 50]\\\" showFirstLastButtons></mat-paginator> -->\\r\\n      </div>\\r\\n      <div class=\\\"row\\\"><br></div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<!--  -->\\r\\n<div class=\\\"row fields\\\" *ngIf=\\\"previewS1Application.autoSubmit==true&&previewS1Application?.externalStatus!='SAVED'\\\">\\r\\n  <h4>\\r\\n    <i class=\\\"material-icons\\\">schedule_send</i> &nbsp;<b>AUTO-SUBMISSION DETAILS</b>\\r\\n    <hr>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-6\\\" appearance=\\\"outline\\\">\\r\\n        <mat-label>Date</mat-label>\\r\\n        <input matInput [value]=\\\"previewS1Application.submissionDate\\\" disabled>\\r\\n      </div>\\r\\n      <!-- <div class=\\\"col-md-3\\\" appearance=\\\"outline\\\">\\r\\n        <mat-label>Time</mat-label>\\r\\n        <input matInput [value]=\\\"previewS1Application.autoSubmitTime+' AM'\\\" disabled>\\r\\n      </div> -->\\r\\n    </div>\\r\\n  </h4>\\r\\n</div>\\r\\n\";","export default \"<form>\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12 title\\\">\\r\\n        <mat-label>\\r\\n          <mat-icon>view_list</mat-icon> Special Clearing - For Payment\\r\\n        </mat-label>\\r\\n      </div>\\r\\n    </div>\\r\\n    <hr>\\r\\n    <br>\\r\\n    <div class=\\\"col-md-12\\\" fxLayout fxLayoutAlign=\\\"center center\\\">\\r\\n      <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n        <input matInput type=\\\"text\\\" placeholder=\\\"Company Name\\\">\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"mat-elevation-z8 fields\\\">\\r\\n      <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\r\\n        <ng-container matColumnDef=\\\"referenceCode\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> REFERENCE CODE </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element; let i = index\\\" (click)=\\\"openModal(element)\\\"> {{element?.applicationForm?.referenceCode | uppercase}}</td>\\r\\n        </ng-container>\\r\\n        <ng-container matColumnDef=\\\"typeOfApplication\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> TYPE OF APPLICATION</th>\\r\\n          <td mat-cell *matCellDef=\\\"let element; let i = index\\\" (click)=\\\"openModal(element)\\\">{{element?.applicationForm?.applicationType.description | uppercase}}</td>\\r\\n        </ng-container>\\r\\n        <ng-container matColumnDef=\\\"brand\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> BRAND</th>\\r\\n          <td mat-cell *matCellDef=\\\"let element; let i = index\\\" (click)=\\\"openModal(element)\\\">{{element?.applicationForm?.brand.description | uppercase}}</td>\\r\\n        </ng-container>\\r\\n        <ng-container matColumnDef=\\\"medium\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> MEDIUM</th>\\r\\n          <td mat-cell *matCellDef=\\\"let element; let i = index\\\" (click)=\\\"openModal(element)\\\">{{element?.applicationForm?.typeOfMedium | uppercase}}</td>\\r\\n        </ng-container>\\r\\n        <ng-container matColumnDef=\\\"applicantCompanyName\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> APPLICANT COMPANY NAME</th>\\r\\n          <td mat-cell *matCellDef=\\\"let element; let i = index\\\" (click)=\\\"openModal(element)\\\">{{element?.applicationForm?.company.companyName | uppercase}}</td>\\r\\n        </ng-container>\\r\\n        <ng-container matColumnDef=\\\"paymentStatus\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> PAYMENT STATUS</th>\\r\\n          <td mat-cell *matCellDef=\\\"let element; let i = index\\\" (click)=\\\"openModal(element)\\\">{{element?.paymentStatus?.replaceAll('_',' ') | uppercase}}</td>\\r\\n        </ng-container>\\r\\n\\r\\n\\r\\n\\r\\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n      </table>\\r\\n      <div class=\\\"no-record\\\" [hidden]=\\\"dataSource && dataSource?.data?.length > 0\\\">\\r\\n        No record found.\\r\\n      </div>\\r\\n      <mat-paginator [pageSizeOptions]=\\\"[10, 20, 50]\\\" showFirstLastButtons></mat-paginator>\\r\\n    </div>\\r\\n    <br>\\r\\n  </div>\\r\\n</form>\\r\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcGFnZXMvYXBwbGljYXRpb25zL3NjaGVkdWxlLW9mLWZlZXMvbXVsdGlwbGUtYXBwbGljYXRpb25zL211bHRpcGxlLWFwcGxpY2F0aW9ucy5jb21wb25lbnQuc2NzcyJ9 */\";","export default \"<div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-12 title\\\">\\r\\n            <mat-label>\\r\\n                <mat-icon>view_list</mat-icon> Schedule of Fees - Multiple Applications\\r\\n            </mat-label>\\r\\n        </div>\\r\\n    </div>\\r\\n    <hr>\\r\\n    <br>\\r\\n    <div class=\\\"row col-md-12\\\">\\r\\n        <div class=\\\"row col-md-6\\\">\\r\\n            <div>\\r\\n                <mat-label>Proof of Payment: &nbsp;&nbsp;&nbsp;<span>PDF file only!</span></mat-label><br>\\r\\n                <input class=\\\"file-upload\\\" type=\\\"file\\\" [(ngModel)]=\\\"attachment\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n                    accept=\\\".pdf\\\" (change)=\\\"selectFile($event)\\\" [disabled]=\\\"isDisabled\\\">\\r\\n            </div>\\r\\n            <div *ngIf=\\\"previewDocument===true && !isDisabled\\\">\\r\\n                <div class=\\\"file-upload\\\">\\r\\n                    <object [data]=\\\"safeURLProofOfPayment\\\" type=\\\"application/pdf\\\" width=\\\"100%\\\" height=\\\"500\\\">\\r\\n                        <iframe [src]=\\\"safeURLProofOfPayment\\\" width=\\\"100%\\\" height=\\\"500\\\">\\r\\n                            <p>This browser does not support PDF!</p>\\r\\n                        </iframe>\\r\\n                    </object>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"row col-md-6\\\">\\r\\n\\r\\n        <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n            <mat-label>Advertiser</mat-label>\\r\\n            <input matInput name=\\\"companyName\\\" [value]=\\\"multipleApplication?.company?.companyName\\\" readonly>\\r\\n        </mat-form-field>\\r\\n\\r\\n        <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n            <mat-label>Vatable Sales</mat-label>\\r\\n            <input matInput class=\\\"numbers-input\\\" name=\\\"amount\\\" [value]=\\\"paymentDetails?.basicRate | number : '1.2-2'\\\" readonly>\\r\\n        </mat-form-field>\\r\\n\\r\\n\\r\\n        <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n            <mat-label>VAT</mat-label>\\r\\n            <input matInput class=\\\"numbers-input\\\" name=\\\"amount\\\" [value]=\\\"paymentDetails?.vat | number : '1.2-2'\\\" readonly>\\r\\n        </mat-form-field>\\r\\n\\r\\n        <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n            <mat-label>Total Sales (VAT Inclusive)</mat-label>\\r\\n            <input matInput class=\\\"numbers-input total\\\" name=\\\"amount\\\" [value]=\\\"paymentDetails?.amountDue | number : '1.2-2'\\\" readonly>\\r\\n        </mat-form-field>\\r\\n\\r\\n        <div>\\r\\n          <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\r\\n              <ng-container matColumnDef=\\\"referenceCode\\\">\\r\\n                  <th mat-header-cell *matHeaderCellDef> Reference Code </th>\\r\\n                  <td mat-cell *matCellDef=\\\"let element; let i = index\\\">{{element?.referenceCode}}</td>\\r\\n              </ng-container>\\r\\n              <ng-container matColumnDef=\\\"adTitle\\\">\\r\\n                  <th mat-header-cell *matHeaderCellDef> Ad Title </th>\\r\\n                  <td mat-cell *matCellDef=\\\"let element; let i = index\\\">{{element?.adTitle}}</td>\\r\\n              </ng-container>\\r\\n              <ng-container matColumnDef=\\\"mediumAndLength\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef> Medium And Length</th>\\r\\n                <td mat-cell *matCellDef=\\\"let element; let i = index\\\">{{ element?.typeOfMediumDisplay }}</td>\\r\\n              </ng-container>\\r\\n              <ng-container matColumnDef=\\\"amount\\\">\\r\\n                  <th mat-header-cell *matHeaderCellDef> Amount</th>\\r\\n                  <td mat-cell *matCellDef=\\\"let element; let i = index\\\" class=\\\"numbers-input\\\">{{element?.amount | number : '1.2-2'}}</td>\\r\\n              </ng-container>\\r\\n              <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n              <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n          </table>\\r\\n          <div class=\\\"no-record\\\" [hidden]=\\\"dataSource && dataSource?.data?.length > 0\\\">\\r\\n              No record found.\\r\\n          </div>\\r\\n          <mat-paginator [pageSizeOptions]=\\\"[5, 10, 20]\\\" showFirstLastButtons></mat-paginator>\\r\\n          <!-- <div class=\\\"grandTotal\\\">\\r\\n            <mat-label>TOTAL: &nbsp;&nbsp;&nbsp;<span>{{multipleApplication?.totalAmount | number : '1.2-2'}}</span></mat-label>\\r\\n          </div> -->\\r\\n        </div>\\r\\n\\r\\n        <div><br><hr><br></div>\\r\\n\\r\\n            <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label>Payment Mode</mat-label>\\r\\n                <mat-select [(ngModel)]=\\\"paymentType\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [disabled]=\\\"multipleApplication?.paymentStatus !== 'FOR_PAYMENT'\\\">\\r\\n                    <mat-option *ngFor=\\\"let i of paymentTypeList\\\" [value]=\\\"i\\\" name=\\\"paymentType\\\">\\r\\n                        {{i?.paymentDescription | uppercase}}\\r\\n                    </mat-option>\\r\\n                </mat-select>\\r\\n            </mat-form-field>\\r\\n\\r\\n            <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label>Remarks</mat-label>\\r\\n                <textarea matInput name=\\\"remarks\\\" [(ngModel)]=\\\"payment.remarks\\\" [readonly]=\\\"multipleApplication?.paymentStatus !== 'FOR_PAYMENT'\\\"></textarea>\\r\\n            </mat-form-field>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"!isDisabled || multipleApplication?.paymentStatus === undefined || multipleApplication?.totalAmount === 0\\\">\\r\\n        <div class=\\\"col-md-10\\\"><span *ngIf=\\\"multipleApplication && multipleApplication?.totalAmount === 0\\\">\\r\\n          <i>Please contact ASC admin to check the Maintenance of Fees.</i></span></div>\\r\\n        <div class=\\\"col-md-2\\\">\\r\\n            <button mat-raised-button class=\\\"button-red\\\" [disabled]=\\\"!paymentType || !previewDocument || multipleApplication?.totalAmount === 0\\\" (click)=\\\"uploadDocument(multipleApplication)\\\">\\r\\n                <i class=\\\"material-icons color__white\\\">task_alt</i> SUBMIT\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\";","import { USER_ROLES } from './../../../../shared/utils/constants';\r\nimport { Component, OnInit, Input } from '@angular/core';\r\nimport { S1Application, AttachmentDocument, Payment, PaymentType } from '@models';\r\nimport { ATTACHMENT_TYPE, ENDPOINTS, PAYMENT_STATUS, SUBMISSION_TYPE } from '@shared';\r\nimport { SweetAlertService, DataStorageService, ApiService } from '@services';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport Swal from 'sweetalert2';\r\nimport { FileStorageService } from '../../../../core/services/file.storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-upload-payment',\r\n  templateUrl: './upload-payment.component.html',\r\n  styleUrls: ['./upload-payment.component.scss']\r\n})\r\nexport class UploadPaymentComponent implements OnInit {\r\n  @Input() s1Application = new S1Application();\r\n  payment = new Payment();\r\n  safeURLProofOfPayment: any;\r\n  selectedFiles: any;\r\n  previewDocument = false;\r\n  attachmentDocument = new AttachmentDocument();\r\n  currentUser: any;\r\n  attachmentDocuments = [];\r\n  isSubmitted = false;\r\n  paymentTypeList = [];\r\n  paymentType : any;\r\n  paymentForm: FormGroup;\r\n\r\n  constructor(\r\n    private sanitizer: DomSanitizer,\r\n    private apiService: ApiService,\r\n    public dataStorage: DataStorageService,\r\n    private fileStorageService: FileStorageService,\r\n    private router: Router,\r\n    private formBuilder: FormBuilder,\r\n    private sweetAlertService: SweetAlertService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    console.log('Upload Payment');\r\n    this.currentUser = this.dataStorage.getUserAccount();\r\n    this.getPaymentList();\r\n    this.setFormValidator();\r\n  }\r\n\r\n  setFormValidator(): void {\r\n    this.paymentForm = this.formBuilder.group({\r\n      remarks: ['']\r\n    });\r\n  }\r\n\r\n  selectFile(event) {\r\n    const attachmentSize = event.target.files[0].size;\r\n\r\n    if (event.target.files[0].type === 'application/pdf') {\r\n      if (attachmentSize > 15000000) { // 1MB = 1M\r\n        this.sweetAlertService.customErrorMessage(`Attachments' total file size should not exceed 15MB.`);\r\n        event.target.value = '';\r\n        return;\r\n      } else {\r\n        const pdfURL = URL.createObjectURL(event.target.files[0]);\r\n        this.safeURLProofOfPayment = this.sanitizer.bypassSecurityTrustResourceUrl(pdfURL);\r\n        this.previewDocument = true;\r\n\r\n        // env.showSpinner = true;\r\n        const reader = new FileReader();\r\n        const [file] = event.target.files;\r\n\r\n        reader.readAsDataURL(file);\r\n        reader.onload = () => {\r\n        };\r\n      }\r\n\r\n      this.selectedFiles = event.target.files;\r\n    } else {\r\n      this.sweetAlertService.customErrorMessage('Attachment should be in PDF format only.');\r\n      event.target.value = '';\r\n      return;\r\n    }\r\n  }\r\n\r\n  uploadDocument(s1Application) {\r\n    Swal.fire({\r\n      text: 'Are you sure you want to submit this PROOF OF PAYMENT?',\r\n      icon: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Confirm'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.dataStorage.setDisplayProgressbar(true);\r\n        let params = '';\r\n        params = '?&attachmentType=' + ATTACHMENT_TYPE.PAYMENT + '&submissionType=' + SUBMISSION_TYPE.ORIGINAL;\r\n        this.fileStorageService.pushFileToStorage(ENDPOINTS.attachmentDocument, this.selectedFiles.item(0), params)\r\n        .subscribe(res => {\r\n            const obj = res.responseData.data;\r\n            console.log(obj);\r\n            this.s1Application.paymentAttachmentReference = obj.paymentAttachmentReference;\r\n            this.payment.paymentAttachmentReference = obj.paymentAttachmentReference;\r\n            this.payment.amountDue = s1Application.amount;\r\n            this.payment.applicationForm = s1Application;\r\n            this.payment.appFormReference = s1Application.appFormReference;\r\n            this.payment.filename = obj.filename;\r\n            this.saveProofOfPayment();\r\n            // this.previewDocument = true;\r\n            this.selectedFiles = undefined;\r\n          }, (err: any) => {\r\n            this.sweetAlertService.error(err);\r\n          }, () => {\r\n            // actions after subscription\r\n            this.dataStorage.setDisplayProgressbar(false);\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  saveProofOfPayment() {\r\n    console.log('Saving payment...');\r\n    this.dataStorage.setDisplayProgressbar(true);\r\n    this.payment.paymentStatus = PAYMENT_STATUS.UNPAID;\r\n    this.s1Application.paymentStatus = PAYMENT_STATUS.UNPAID;\r\n    this.payment.id = 0;\r\n    this.payment.officialReceiptNo = '';\r\n    this.payment.paymentMethod = null;\r\n    console.log('PAYMENT : ', this.payment);\r\n    console.log('S1 ',this.s1Application);\r\n\r\nreturn false\r\n    this.apiService.save(`${ENDPOINTS.applicationFormPresentor}payment-type-id/${this.paymentType.id}/payment/submit`, this.payment)\r\n    .subscribe((res: any) => {\r\n        console.log('SAVED STATUS: ', res.responseData.data);\r\n\r\n      this.safeURLProofOfPayment = this.sanitizer.bypassSecurityTrustResourceUrl(res.responseData.data.fileURL);\r\n      this.router.navigate(['asc/page/application/s1/lists']);\r\n        this.isSubmitted = true;\r\n        this.sweetAlertService.customSuccessMessage('Proof of payment successfully submitted.');\r\n      }, (err) => {\r\n        console.log(err);\r\n        this.sweetAlertService.error(err);\r\n        this.dataStorage.setDisplayProgressbar(false);\r\n      }, () => {\r\n        this.dataStorage.setDisplayProgressbar(false);\r\n      });\r\n  }\r\n\r\n  getPaymentList() {\r\n    this.apiService.findAll(ENDPOINTS.paymentType).subscribe((res: any) => {\r\n      this.paymentTypeList = res.responseData.data;\r\n      if (this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT) {\r\n        const creditCardIndex = this.paymentTypeList\r\n          .findIndex((element) => element.paymentDescription === 'Credit Card');\r\n        this.paymentTypeList.splice(creditCardIndex, 1);\r\n      }\r\n    });\r\n  }\r\n  selectedPaymentType(res){\r\n    let pt = new PaymentType();\r\n    pt  = res;\r\n    this.paymentType = pt;\r\n  }\r\n\r\n}\r\n","export default \".file-upload {\\n  width: 100%;\\n  background-color: #bad9ff;\\n  border: 1px solid gray;\\n}\\n\\n.pdf-border {\\n  width: 100%;\\n  height: 500px;\\n  border: 2px solid gray;\\n}\\n\\n.add-document {\\n  color: white;\\n}\\n\\n.pdf-viewer-wrap {\\n  display: flex;\\n  height: 95vh;\\n  border: 5px solid #cccccc;\\n}\\n\\n.pdf-viewer-controls-wrap {\\n  border: 5px solid #cccccc;\\n  width: 20%;\\n  text-align: center;\\n}\\n\\n.pdfv-control {\\n  background: #f3f3f3;\\n  padding: 10px;\\n  border-bottom: 1px solid #cccc;\\n}\\n\\n.pdfv-control button {\\n  background: #9dff00;\\n  border: none;\\n  padding: 5px 10px;\\n  border-radius: 5px;\\n  font-weight: bold;\\n  cursor: pointer;\\n}\\n\\n.pdf-viewer-controls {\\n  overflow: auto;\\n}\\n\\n.pdf-viewer-viewer-window {\\n  border: 5px solid #cccccc;\\n  width: 80%;\\n  overflow: auto;\\n}\\n\\n.document-form-margin {\\n  margin-right: 10px;\\n}\\n\\n::ng-deep .mat-form-field.media-info {\\n  margin-right: 1em;\\n}\\n\\ntable {\\n  width: 100%;\\n}\\n\\ntable tr td:first-child {\\n  width: 30%;\\n}\\n\\n.submission-type {\\n  font-size: 16px;\\n  position: absolute;\\n}\\n\\n.required {\\n  color: #C5140C;\\n  font-size: 16px;\\n  margin-left: 4px;\\n}\\n\\n.required-fields-note {\\n  font-style: italic;\\n  color: #c5140c;\\n  font-weight: 500;\\n  margin-bottom: 20px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9wYWdlcy9hcHBsaWNhdGlvbnMvbWF0ZXJpYWwtaW5mb3JtYXRpb24vbWF0ZXJpYWwtaW5mb3JtYXRpb24uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFBO0VBQ0EseUJBQUE7RUFDQSxzQkFBQTtBQUNGOztBQUVBO0VBQ0UsV0FBQTtFQUNBLGFBQUE7RUFDQSxzQkFBQTtBQUNGOztBQU1BO0VBQ0UsWUFBQTtBQUhGOztBQU1BO0VBQ0UsYUFBQTtFQUNBLFlBQUE7RUFDQSx5QkFBQTtBQUhGOztBQU1BO0VBQ0UseUJBQUE7RUFDQSxVQUFBO0VBQ0Esa0JBQUE7QUFIRjs7QUFNQTtFQUNFLG1CQUFBO0VBQ0EsYUFBQTtFQUNBLDhCQUFBO0FBSEY7O0FBTUE7RUFDRSxtQkFBQTtFQUNBLFlBQUE7RUFDQSxpQkFBQTtFQUNBLGtCQUFBO0VBQ0EsaUJBQUE7RUFDQSxlQUFBO0FBSEY7O0FBTUE7RUFDRSxjQUFBO0FBSEY7O0FBTUE7RUFDRSx5QkFBQTtFQUNBLFVBQUE7RUFDQSxjQUFBO0FBSEY7O0FBTUE7RUFDRSxrQkFBQTtBQUhGOztBQU9FO0VBQ0UsaUJBQUE7QUFKSjs7QUFTQTtFQUNFLFdBQUE7QUFORjs7QUFRRTtFQUNFLFVBQUE7QUFOSjs7QUFXQTtFQUVFLGVBQUE7RUFDQSxrQkFBQTtBQVRGOztBQVlBO0VBQ0UsY0FBQTtFQUNBLGVBQUE7RUFDQSxnQkFBQTtBQVRGOztBQVlBO0VBQ0Usa0JBQUE7RUFDQSxjQUFBO0VBQ0EsZ0JBQUE7RUFDQSxtQkFBQTtBQVRGIiwiZmlsZSI6InNyYy9hcHAvbW9kdWxlcy9wYWdlcy9hcHBsaWNhdGlvbnMvbWF0ZXJpYWwtaW5mb3JtYXRpb24vbWF0ZXJpYWwtaW5mb3JtYXRpb24uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZmlsZS11cGxvYWQge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICNiYWQ5ZmY7XHJcbiAgYm9yZGVyOiAxcHggc29saWQgZ3JheTtcclxufVxyXG5cclxuLnBkZi1ib3JkZXIge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIGhlaWdodDogNTAwcHg7XHJcbiAgYm9yZGVyOiAycHggc29saWQgZ3JheTtcclxufVxyXG5cclxuLy8gLmhpZGVJbmRleCB7XHJcbi8vICAgZGlzcGxheTogbm9uZTtcclxuLy8gfVxyXG5cclxuLmFkZC1kb2N1bWVudCB7XHJcbiAgY29sb3I6IHdoaXRlO1xyXG59XHJcblxyXG4ucGRmLXZpZXdlci13cmFwIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGhlaWdodDogOTV2aDtcclxuICBib3JkZXI6IDVweCBzb2xpZCAjY2NjY2NjO1xyXG59XHJcblxyXG4ucGRmLXZpZXdlci1jb250cm9scy13cmFwIHtcclxuICBib3JkZXI6IDVweCBzb2xpZCAjY2NjY2NjO1xyXG4gIHdpZHRoOiAyMCU7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG59XHJcblxyXG4ucGRmdi1jb250cm9sIHtcclxuICBiYWNrZ3JvdW5kOiAjZjNmM2YzO1xyXG4gIHBhZGRpbmc6IDEwcHg7XHJcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNjY2NjO1xyXG59XHJcblxyXG4ucGRmdi1jb250cm9sIGJ1dHRvbiB7XHJcbiAgYmFja2dyb3VuZDogIzlkZmYwMDtcclxuICBib3JkZXI6IG5vbmU7XHJcbiAgcGFkZGluZzogNXB4IDEwcHg7XHJcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gIGN1cnNvcjogcG9pbnRlcjtcclxufVxyXG5cclxuLnBkZi12aWV3ZXItY29udHJvbHMge1xyXG4gIG92ZXJmbG93OiBhdXRvO1xyXG59XHJcblxyXG4ucGRmLXZpZXdlci12aWV3ZXItd2luZG93IHtcclxuICBib3JkZXI6IDVweCBzb2xpZCAjY2NjY2NjO1xyXG4gIHdpZHRoOiA4MCU7XHJcbiAgb3ZlcmZsb3c6IGF1dG87XHJcbn1cclxuXHJcbi5kb2N1bWVudC1mb3JtLW1hcmdpbiB7XHJcbiAgbWFyZ2luLXJpZ2h0OiAxMHB4O1xyXG59XHJcblxyXG46Om5nLWRlZXAge1xyXG4gIC5tYXQtZm9ybS1maWVsZC5tZWRpYS1pbmZvIHtcclxuICAgIG1hcmdpbi1yaWdodDogMWVtO1xyXG4gIH1cclxufVxyXG5cclxuLy8gZm9yIHN0YXRpYyBhbmQgbW92aW5nIG11bHRpbWVkaWEncyBjaGVja2JveCBhbmQgZmllbGQgLSBzdGFydFxyXG50YWJsZSB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcblxyXG4gIHRyIHRkOmZpcnN0LWNoaWxkIHtcclxuICAgIHdpZHRoOiAzMCU7XHJcbiAgfVxyXG59XHJcbi8vIGZvciBzdGF0aWMgYW5kIG1vdmluZyBtdWx0aW1lZGlhJ3MgY2hlY2tib3ggYW5kIGZpZWxkIC0gZW5kXHJcblxyXG4uc3VibWlzc2lvbi10eXBlIHtcclxuICAvLyBtYXJnaW46IDE0cHggMHB4ICFpbXBvcnRhbnQ7XHJcbiAgZm9udC1zaXplOiAxNnB4O1xyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxufVxyXG5cclxuLnJlcXVpcmVkIHtcclxuICBjb2xvcjogI0M1MTQwQztcclxuICBmb250LXNpemU6IDE2cHg7XHJcbiAgbWFyZ2luLWxlZnQ6IDRweDtcclxufVxyXG5cclxuLnJlcXVpcmVkLWZpZWxkcy1ub3RlIHtcclxuICBmb250LXN0eWxlOiBpdGFsaWM7XHJcbiAgY29sb3I6ICNjNTE0MGM7XHJcbiAgZm9udC13ZWlnaHQ6IDUwMDtcclxuICBtYXJnaW4tYm90dG9tOiAyMHB4O1xyXG59XHJcbiJdfQ== */\";","import { Component, ElementRef, Inject, OnInit, Optional, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { S1Application } from '@models';\r\nimport { ApiService, DataStorageService } from '@services';\r\nimport { APPFORM_TYPE, ENDPOINTS, FORM_TYPE } from '@shared';\r\nimport { NumberOfMultipleApplicationAllowed } from 'app/core/models/numberOfMultipleApplicationAllowed.model';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-s1-form-type',\r\n  templateUrl: './s1-form-type.component.html',\r\n  styleUrls: ['./s1-form-type.component.scss']\r\n})\r\nexport class S1FormTypeComponent implements OnInit {\r\n\r\n  s1Application = new S1Application();\r\n  numberOfMultipleApplicationAllowed = new NumberOfMultipleApplicationAllowed();\r\n  applicationTypeList = [];\r\n  formTypeList = [...FORM_TYPE];\r\n\r\n  s1ApplicationForm: FormGroup;\r\n\r\n  numberOfApplications: number;\r\n  showNumberOfApplications = false;\r\n  isMultiple = false;\r\n  isSpecial = false;\r\n  isPresentation = false;\r\n\r\n  constructor(\r\n    private apiService: ApiService,\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private dataStorage: DataStorageService,\r\n    private dialog: MatDialog,\r\n    @Optional() public dialogRef: MatDialogRef<S1FormTypeComponent>,\r\n    @Optional() @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.setFormValidator('');\r\n    this.getApplicationTypeList();\r\n    this.s1Application.formType = 'INDIVIDUAL';\r\n    this.getNoOfMultipleApplicationsAllowed();\r\n  }\r\n\r\n  getNoOfMultipleApplicationsAllowed(): void {\r\n    this.apiService.findAll(ENDPOINTS.noOfMultipleApplicationAllowed).subscribe((res: any) => {\r\n      this.numberOfMultipleApplicationAllowed = res.responseData.data[0];\r\n    });\r\n  }\r\n\r\n  getApplicationTypeList() {\r\n    this.s1Application.applicationType = null;\r\n    this.applicationTypeList = [];\r\n    this.apiService.findAll(ENDPOINTS.applicationType).subscribe((res: any) => {\r\n      this.applicationTypeList = res.responseData.data;\r\n    });\r\n  }\r\n\r\n  setAsMultiple() {\r\n    this.isMultiple = !this.isMultiple;\r\n    this.showNumberOfApplications = !this.showNumberOfApplications;\r\n    if (this.isMultiple) {\r\n      this.s1Application.formType = APPFORM_TYPE.MULTIPLE;\r\n      this.setFormValidator('multiple')\r\n    } else {\r\n      this.setFormValidator('');\r\n      this.s1Application.formType = APPFORM_TYPE.INDIVIDUAL;\r\n    }\r\n  }\r\n\r\n  checkType() {\r\n    if (this.s1Application.applicationType.description.toLocaleLowerCase().includes('special')) {\r\n      this.isSpecial = true;\r\n    } else {\r\n      this.isSpecial = false;\r\n    }\r\n\r\n    if (this.isMultiple) {\r\n      this.setFormValidator('multiple');\r\n    }\r\n\r\n  }\r\n\r\n  setFormValidator(apptype): void {\r\n    let formtype;\r\n    if (this.s1Application.formType) {\r\n      formtype = this.s1Application.formType;\r\n    }\r\n\r\n    if (apptype === 'multiple') {\r\n      this.s1ApplicationForm = this.formBuilder.group({\r\n        formType: [formtype, Validators.required],\r\n        applicationType: [this.s1Application.applicationType, Validators.required],\r\n        numberOfApplications: [\r\n          '', [\r\n            Validators.required,\r\n            Validators.min(parseInt(this.numberOfMultipleApplicationAllowed.minimum.toString(), null)),\r\n            Validators.max(parseInt(this.numberOfMultipleApplicationAllowed.maximum.toString(), null))\r\n          ]\r\n        ],\r\n      });\r\n    } else {\r\n      this.s1ApplicationForm = this.formBuilder.group({\r\n        applicationType: [this.s1Application.applicationType, Validators.required],\r\n      });\r\n      this.showNumberOfApplications = false;\r\n    }\r\n  }\r\n\r\n  proceedS1Application(): void {\r\n    if (!this.isMultiple) {\r\n      Swal.fire({\r\n        text: 'Note: The application to be created is an individual application',\r\n        icon: 'info',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        confirmButtonText: 'PROCEED'\r\n      }).then((result) => {\r\n        if (result.value) {\r\n          this.navigateToS1Application();\r\n        }\r\n      });\r\n      return;\r\n    }\r\n\r\n    this.navigateToS1Application();\r\n  }\r\n\r\n  navigateToS1Application(): void {\r\n    this.router.navigate(['/asc/page/application/s1/add']);\r\n    const formAndAppType = {\r\n      formType: this.s1Application.formType,\r\n      appType: this.s1Application.applicationType\r\n    }\r\n\r\n    this.dataStorage.setS1FormAndAppType(formAndAppType);\r\n    this.dataStorage.setNumberOfApplications(this.numberOfApplications);\r\n    this.closeModal();\r\n  }\r\n\r\n  setAsForPresentation() {\r\n    this.isPresentation = !this.isPresentation;\r\n    if (this.isPresentation) {\r\n      Swal.fire({\r\n        text: 'Note: Please be present or available during presentation period.',\r\n        icon: 'info',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        confirmButtonText: 'PROCEED'\r\n      }).then((result) => {\r\n        if (result.value) {\r\n          this.s1Application.formType = APPFORM_TYPE.FOR_PRESENTATION;\r\n          this.proceedS1Application();\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  closeModal(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","export default \".reply_btns {\\n  -moz-text-align-last: right;\\n       text-align-last: right;\\n}\\n\\n.comment-thread {\\n  width: 700px;\\n  max-width: 100%;\\n  margin: auto;\\n  padding: 0 30px;\\n  background-color: #fff;\\n  border: 1px solid transparent;\\n  /* Removes margin collapse */\\n}\\n\\n.m-0 {\\n  margin: 0;\\n}\\n\\n.sr-only {\\n  position: absolute;\\n  left: -10000px;\\n  top: auto;\\n  width: 1px;\\n  height: 1px;\\n  overflow: hidden;\\n}\\n\\n/* Comment */\\n\\n.comment {\\n  position: relative;\\n  margin: 20px auto;\\n}\\n\\n.comment-heading {\\n  display: flex;\\n  align-items: center;\\n  height: 50px;\\n  font-size: 14px;\\n}\\n\\n.comment-voting {\\n  width: 20px;\\n  height: 32px;\\n  border: 1px solid rgba(0, 0, 0, 0.2);\\n  border-radius: 4px;\\n}\\n\\n.comment-voting button {\\n  display: block;\\n  width: 100%;\\n  height: 50%;\\n  padding: 0;\\n  border: 0;\\n  font-size: 10px;\\n}\\n\\n.comment-info {\\n  color: rgba(0, 0, 0, 0.5);\\n  margin-left: 10px;\\n}\\n\\n.comment-author {\\n  color: rgba(0, 0, 0, 0.85);\\n  font-weight: bold;\\n  text-decoration: none;\\n}\\n\\n.comment-author:hover {\\n  text-decoration: underline;\\n}\\n\\n.replies {\\n  margin-left: 20px;\\n}\\n\\nform textarea {\\n  height: 5em;\\n  padding-left: 10px;\\n}\\n\\nform mat-icon {\\n  margin: auto;\\n}\\n\\nform .badge {\\n  font-size: 15px;\\n  margin-bottom: 10px;\\n}\\n\\nform label {\\n  font-weight: 600;\\n  padding-left: 5px;\\n  margin-bottom: 5px;\\n}\\n\\nform .comment {\\n  border: 1px solid rgba(128, 128, 128, 0.521);\\n  border-radius: 10px;\\n  padding: 10px;\\n  box-shadow: 10px 10px 11px -7px rgba(0, 0, 0, 0.31);\\n  -webkit-box-shadow: 10px 10px 11px -7px rgba(0, 0, 0, 0.31);\\n  -moz-box-shadow: 10px 10px 11px -7px rgba(0, 0, 0, 0.31);\\n  margin: 2px;\\n  padding-bottom: 10px;\\n}\\n\\nform .comment-list {\\n  border-radius: 10px;\\n  height: auto;\\n  overflow-x: hidden;\\n  min-height: 10vh;\\n  max-height: 60vh;\\n}\\n\\nform .comment-list .comments {\\n  border: 1px solid rgba(128, 128, 128, 0.473);\\n  padding: 10px 10px;\\n  border-radius: 10px;\\n}\\n\\nform .comment-list .username-content {\\n  color: #006cfa;\\n  font-weight: 500;\\n  padding-left: 10px;\\n}\\n\\nform .comment-list .username-content b {\\n  color: gray;\\n  font-weight: 500;\\n  line-height: 0px;\\n}\\n\\nform .comment-list .username-content .modified-action {\\n  color: #006cfa;\\n  font-size: 12px;\\n  font-weight: 400;\\n  margin-left: 2px;\\n}\\n\\nform .comment-list .comment-content {\\n  padding: 0px 10px;\\n}\\n\\nform .comment-list .comment-content .inner-html {\\n  height: auto;\\n}\\n\\nform .comment-list .time-content {\\n  padding-left: 10px;\\n  color: gray;\\n  padding-bottom: 0px;\\n}\\n\\nform .comment-list .a-icon {\\n  display: flex;\\n  flex-direction: row;\\n  float: right;\\n  padding-right: 10px;\\n  cursor: pointer;\\n}\\n\\nform .comment-list .action-icon {\\n  display: flex;\\n  flex-direction: row;\\n}\\n\\nform .comment-list .action-icon .a-icon {\\n  width: 7%;\\n}\\n\\nform .comment-list .action-icon .a-icon i {\\n  font-size: 20px;\\n}\\n\\nform .comment-list .action-icon .a-icon {\\n  cursor: pointer;\\n}\\n\\nhr {\\n  color: rgba(128, 128, 128, 0.753);\\n  opacity: 1;\\n}\\n\\n.header {\\n  margin-top: 100px;\\n  text-align: center;\\n  margin-bottom: 40px;\\n}\\n\\n.html-header {\\n  margin: 15px 0 5px;\\n}\\n\\n.mat-tab {\\n  padding: 20px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9wYWdlcy9hcHBsaWNhdGlvbnMvY29tbWVudC9jb21tZW50LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsMkJBQUE7T0FBQSxzQkFBQTtBQUNGOztBQVFBO0VBQ0UsWUFBQTtFQUNBLGVBQUE7RUFDQSxZQUFBO0VBQ0EsZUFBQTtFQUNBLHNCQUFBO0VBQ0EsNkJBQUE7RUFBK0IsNEJBQUE7QUFKakM7O0FBTUE7RUFDRSxTQUFBO0FBSEY7O0FBS0E7RUFDRSxrQkFBQTtFQUNBLGNBQUE7RUFDQSxTQUFBO0VBQ0EsVUFBQTtFQUNBLFdBQUE7RUFDQSxnQkFBQTtBQUZGOztBQUtBLFlBQUE7O0FBRUE7RUFDRSxrQkFBQTtFQUNBLGlCQUFBO0FBSEY7O0FBS0E7RUFDRSxhQUFBO0VBQ0EsbUJBQUE7RUFDQSxZQUFBO0VBQ0EsZUFBQTtBQUZGOztBQUlBO0VBQ0UsV0FBQTtFQUNBLFlBQUE7RUFDQSxvQ0FBQTtFQUNBLGtCQUFBO0FBREY7O0FBR0E7RUFDRSxjQUFBO0VBQ0EsV0FBQTtFQUNBLFdBQUE7RUFDQSxVQUFBO0VBQ0EsU0FBQTtFQUNBLGVBQUE7QUFBRjs7QUFFQTtFQUNFLHlCQUFBO0VBQ0EsaUJBQUE7QUFDRjs7QUFDQTtFQUNFLDBCQUFBO0VBQ0EsaUJBQUE7RUFDQSxxQkFBQTtBQUVGOztBQUFBO0VBQ0UsMEJBQUE7QUFHRjs7QUFEQTtFQUNFLGlCQUFBO0FBSUY7O0FBQUU7RUFDRSxXQUFBO0VBQ0Esa0JBQUE7QUFHSjs7QUFERTtFQUNFLFlBQUE7QUFHSjs7QUFERTtFQUNFLGVBQUE7RUFDQSxtQkFBQTtBQUdKOztBQURFO0VBQ0UsZ0JBQUE7RUFDQSxpQkFBQTtFQUNBLGtCQUFBO0FBR0o7O0FBQUU7RUFDRSw0Q0FBQTtFQUNBLG1CQUFBO0VBRUEsYUFBQTtFQUNBLG1EQUFBO0VBQ0EsMkRBQUE7RUFDQSx3REFBQTtFQUNBLFdBQUE7RUFDQSxvQkFBQTtBQUNKOztBQUNFO0VBRUUsbUJBQUE7RUFHQSxZQUFBO0VBQ0Esa0JBQUE7RUFDQSxnQkFBQTtFQUNBLGdCQUFBO0FBRko7O0FBR0k7RUFDRSw0Q0FBQTtFQUNBLGtCQUFBO0VBQ0EsbUJBQUE7QUFETjs7QUFJSTtFQUNFLGNBQUE7RUFDQSxnQkFBQTtFQUNBLGtCQUFBO0FBRk47O0FBSU07RUFDRSxXQUFBO0VBQ0EsZ0JBQUE7RUFDQSxnQkFBQTtBQUZSOztBQUlNO0VBR0UsY0FBQTtFQUNBLGVBQUE7RUFDQSxnQkFBQTtFQUNBLGdCQUFBO0FBSlI7O0FBT0k7RUFDRSxpQkFBQTtBQUxOOztBQU1NO0VBQ0UsWUFBQTtBQUpSOztBQVVJO0VBQ0Usa0JBQUE7RUFDQSxXQUFBO0VBQ0EsbUJBQUE7QUFSTjs7QUFXSTtFQUNFLGFBQUE7RUFDQSxtQkFBQTtFQUNBLFlBQUE7RUFDQSxtQkFBQTtFQUNBLGVBQUE7QUFUTjs7QUFZSTtFQUNFLGFBQUE7RUFDQSxtQkFBQTtBQVZOOztBQVdNO0VBRUUsU0FBQTtBQVZSOztBQVdRO0VBQ0UsZUFBQTtBQVRWOztBQVlNO0VBQ0UsZUFBQTtBQVZSOztBQWdCQTtFQUNFLGlDQUFBO0VBQ0EsVUFBQTtBQWJGOztBQWdCQTtFQUNFLGlCQUFBO0VBQ0Esa0JBQUE7RUFDQSxtQkFBQTtBQWJGOztBQWVBO0VBQ0Usa0JBQUE7QUFaRjs7QUFlQTtFQUNFLGFBQUE7QUFaRiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcGFnZXMvYXBwbGljYXRpb25zL2NvbW1lbnQvY29tbWVudC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5yZXBseV9idG5zIHtcclxuICB0ZXh0LWFsaWduLWxhc3Q6IHJpZ2h0O1xyXG4gIC8vIGJ1dHRvbntcclxuICAvLyAgIGZvbnQtc2l6ZTogMTBweDtcclxuICAvLyAgIHdpZHRoOiAxNXB4O1xyXG4gIC8vICAgaGVpZ2h0OiAzcHg7XHJcbiAgLy8gICBwYWRkaW5nOiAxcHg7XHJcbiAgLy8gICBtYXJnaW46IDFweDtcclxuICAvLyB9XHJcbn1cclxuLmNvbW1lbnQtdGhyZWFkIHtcclxuICB3aWR0aDogNzAwcHg7XHJcbiAgbWF4LXdpZHRoOiAxMDAlO1xyXG4gIG1hcmdpbjogYXV0bztcclxuICBwYWRkaW5nOiAwIDMwcHg7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcclxuICBib3JkZXI6IDFweCBzb2xpZCB0cmFuc3BhcmVudDsgLyogUmVtb3ZlcyBtYXJnaW4gY29sbGFwc2UgKi9cclxufVxyXG4ubS0wIHtcclxuICBtYXJnaW46IDA7XHJcbn1cclxuLnNyLW9ubHkge1xyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICBsZWZ0OiAtMTAwMDBweDtcclxuICB0b3A6IGF1dG87XHJcbiAgd2lkdGg6IDFweDtcclxuICBoZWlnaHQ6IDFweDtcclxuICBvdmVyZmxvdzogaGlkZGVuO1xyXG59XHJcblxyXG4vKiBDb21tZW50ICovXHJcblxyXG4uY29tbWVudCB7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIG1hcmdpbjogMjBweCBhdXRvO1xyXG59XHJcbi5jb21tZW50LWhlYWRpbmcge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICBoZWlnaHQ6IDUwcHg7XHJcbiAgZm9udC1zaXplOiAxNHB4O1xyXG59XHJcbi5jb21tZW50LXZvdGluZyB7XHJcbiAgd2lkdGg6IDIwcHg7XHJcbiAgaGVpZ2h0OiAzMnB4O1xyXG4gIGJvcmRlcjogMXB4IHNvbGlkIHJnYmEoMCwgMCwgMCwgMC4yKTtcclxuICBib3JkZXItcmFkaXVzOiA0cHg7XHJcbn1cclxuLmNvbW1lbnQtdm90aW5nIGJ1dHRvbiB7XHJcbiAgZGlzcGxheTogYmxvY2s7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgaGVpZ2h0OiA1MCU7XHJcbiAgcGFkZGluZzogMDtcclxuICBib3JkZXI6IDA7XHJcbiAgZm9udC1zaXplOiAxMHB4O1xyXG59XHJcbi5jb21tZW50LWluZm8ge1xyXG4gIGNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNSk7XHJcbiAgbWFyZ2luLWxlZnQ6IDEwcHg7XHJcbn1cclxuLmNvbW1lbnQtYXV0aG9yIHtcclxuICBjb2xvcjogcmdiYSgwLCAwLCAwLCAwLjg1KTtcclxuICBmb250LXdlaWdodDogYm9sZDtcclxuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbn1cclxuLmNvbW1lbnQtYXV0aG9yOmhvdmVyIHtcclxuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcclxufVxyXG4ucmVwbGllcyB7XHJcbiAgbWFyZ2luLWxlZnQ6IDIwcHg7XHJcbn1cclxuXHJcbmZvcm0ge1xyXG4gIHRleHRhcmVhIHtcclxuICAgIGhlaWdodDogNWVtO1xyXG4gICAgcGFkZGluZy1sZWZ0OiAxMHB4O1xyXG4gIH1cclxuICBtYXQtaWNvbiB7XHJcbiAgICBtYXJnaW46IGF1dG87XHJcbiAgfVxyXG4gIC5iYWRnZSB7XHJcbiAgICBmb250LXNpemU6IDE1cHg7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xyXG4gIH1cclxuICBsYWJlbCB7XHJcbiAgICBmb250LXdlaWdodDogNjAwO1xyXG4gICAgcGFkZGluZy1sZWZ0OiA1cHg7XHJcbiAgICBtYXJnaW4tYm90dG9tOiA1cHg7XHJcbiAgfVxyXG5cclxuICAuY29tbWVudCB7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCByZ2JhKDEyOCwgMTI4LCAxMjgsIDAuNTIxKTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XHJcbiAgICAvLyBwYWRkaW5nLXRvcDogMTBweDtcclxuICAgIHBhZGRpbmc6IDEwcHg7XHJcbiAgICBib3gtc2hhZG93OiAxMHB4IDEwcHggMTFweCAtN3B4IHJnYmEoMCwgMCwgMCwgMC4zMSk7XHJcbiAgICAtd2Via2l0LWJveC1zaGFkb3c6IDEwcHggMTBweCAxMXB4IC03cHggcmdiYSgwLCAwLCAwLCAwLjMxKTtcclxuICAgIC1tb3otYm94LXNoYWRvdzogMTBweCAxMHB4IDExcHggLTdweCByZ2JhKDAsIDAsIDAsIDAuMzEpO1xyXG4gICAgbWFyZ2luOiAycHg7XHJcbiAgICBwYWRkaW5nLWJvdHRvbTogMTBweDtcclxuICB9XHJcbiAgLmNvbW1lbnQtbGlzdCB7XHJcbiAgICAvLyBib3JkZXI6IDJweCBzb2xpZCByZ2JhKDEyOCwgMTI4LCAxMjgsIDAuMzk3KTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XHJcbiAgICAvLyBwYWRkaW5nOiAxZW0gMWVtO1xyXG4gICAgLy8gb3ZlcmZsb3c6IHNjcm9sbDtcclxuICAgIGhlaWdodDogYXV0bztcclxuICAgIG92ZXJmbG93LXg6IGhpZGRlbjtcclxuICAgIG1pbi1oZWlnaHQ6IDEwdmg7XHJcbiAgICBtYXgtaGVpZ2h0OiA2MHZoO1xyXG4gICAgLmNvbW1lbnRzIHtcclxuICAgICAgYm9yZGVyOiAxcHggc29saWQgcmdiYSgxMjgsIDEyOCwgMTI4LCAwLjQ3Myk7XHJcbiAgICAgIHBhZGRpbmc6IDEwcHggMTBweDtcclxuICAgICAgYm9yZGVyLXJhZGl1czogMTBweDtcclxuICAgIH1cclxuXHJcbiAgICAudXNlcm5hbWUtY29udGVudCB7XHJcbiAgICAgIGNvbG9yOiByZ2IoMCwgMTA4LCAyNTApO1xyXG4gICAgICBmb250LXdlaWdodDogNTAwO1xyXG4gICAgICBwYWRkaW5nLWxlZnQ6IDEwcHg7XHJcbiAgICAgIC8vIGxpbmUtaGVpZ2h0OiAycHg7XHJcbiAgICAgIGIge1xyXG4gICAgICAgIGNvbG9yOiBncmF5O1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiA1MDA7XHJcbiAgICAgICAgbGluZS1oZWlnaHQ6IDBweDtcclxuICAgICAgfVxyXG4gICAgICAubW9kaWZpZWQtYWN0aW9uIHtcclxuICAgICAgICAvLyB0ZXh0LWFsaWduOiBlbmQ7XHJcbiAgICAgICAgLy8gcGFkZGluZy1sZWZ0OiAycHg7XHJcbiAgICAgICAgY29sb3I6IHJnYigwLCAxMDgsIDI1MCk7XHJcbiAgICAgICAgZm9udC1zaXplOiAxMnB4O1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiA0MDA7XHJcbiAgICAgICAgbWFyZ2luLWxlZnQ6IDJweDtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgLmNvbW1lbnQtY29udGVudCB7XHJcbiAgICAgIHBhZGRpbmc6IDBweCAxMHB4O1xyXG4gICAgICAuaW5uZXItaHRtbCB7XHJcbiAgICAgICAgaGVpZ2h0OiBhdXRvO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICAuY29tbWVudC1jb250ZW50OmhvdmVyIHtcclxuICAgICAgLy8gY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgfVxyXG4gICAgLnRpbWUtY29udGVudCB7XHJcbiAgICAgIHBhZGRpbmctbGVmdDogMTBweDtcclxuICAgICAgY29sb3I6IGdyYXk7XHJcbiAgICAgIHBhZGRpbmctYm90dG9tOiAwcHg7XHJcbiAgICB9XHJcblxyXG4gICAgLmEtaWNvbiB7XHJcbiAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XHJcbiAgICAgIGZsb2F0OiByaWdodDtcclxuICAgICAgcGFkZGluZy1yaWdodDogMTBweDtcclxuICAgICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgfVxyXG5cclxuICAgIC5hY3Rpb24taWNvbiB7XHJcbiAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XHJcbiAgICAgIC5hLWljb24ge1xyXG4gICAgICAgIC8vIGRpc3BsYXk6IGlubGluZTsgLyogdGhlIGRlZmF1bHQgZm9yIHNwYW4gKi9cclxuICAgICAgICB3aWR0aDogNyU7XHJcbiAgICAgICAgaSB7XHJcbiAgICAgICAgICBmb250LXNpemU6IDIwcHg7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICAgIC5hLWljb24ge1xyXG4gICAgICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxufVxyXG5cclxuaHIge1xyXG4gIGNvbG9yOiByZ2JhKDEyOCwgMTI4LCAxMjgsIDAuNzUzKTtcclxuICBvcGFjaXR5OiAxO1xyXG59XHJcblxyXG4uaGVhZGVyIHtcclxuICBtYXJnaW4tdG9wOiAxMDBweDtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgbWFyZ2luLWJvdHRvbTogNDBweDtcclxufVxyXG4uaHRtbC1oZWFkZXIge1xyXG4gIG1hcmdpbjogMTVweCAwIDVweDtcclxufVxyXG5cclxuLm1hdC10YWIge1xyXG4gIHBhZGRpbmc6IDIwcHg7XHJcbn1cclxuIl19 */\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ReassignmentComponent } from './reassignment.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ReassignmentComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ReassignmentRoutingModule { }\r\n","export default \".amountDue {\\n  color: #c5140c;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9wYWdlcy9hY2NvdW50aW5nL3VwbG9hZC1wYXltZW50L3VwbG9hZC1wYXltZW50LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsY0FBQTtBQUNGIiwiZmlsZSI6InNyYy9hcHAvbW9kdWxlcy9wYWdlcy9hY2NvdW50aW5nL3VwbG9hZC1wYXltZW50L3VwbG9hZC1wYXltZW50LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmFtb3VudER1ZSB7XHJcbiAgY29sb3I6ICNjNTE0MGM7XHJcbn1cclxuIl19 */\";","import { AngularEditorConfig } from './../editor/lib/config';\r\nimport { CommentThread } from './../../../../core/models/comments.model';\r\nimport { DatePipe } from '@angular/common';\r\nimport { Component, Inject, Input, OnInit, ViewChild, ElementRef } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { COMMENT_TYPE, APPFORM_TYPE, APPLICATION_STAGE, APPLICATION_STATUS_FOR_COMPLIANCE, APPLICATION_STATUS } from '@shared';\r\nimport { S1Application, S2Application } from '@models';\r\nimport { ApiService, DataStorageService, SweetAlertService } from '@services';\r\nimport { ENDPOINTS } from '@shared';\r\nimport Swal from 'sweetalert2';\r\nimport { Comment } from '../../../../core/models/comment.model';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { CopyClaims } from 'app/core/models/copy-claims.model';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-comment',\r\n  templateUrl: './comment.component.html',\r\n  styleUrls: ['./comment.component.scss']\r\n})\r\nexport class CommentComponent implements OnInit {\r\n  @Input() commentS1Application = new S1Application();\r\n  @Input() commentS2Application = new S2Application();\r\n  @Input() sampleDataTransfer;\r\n\r\n\r\n  comment = new Comment();\r\n  internalComment:CommentThread = new CommentThread();\r\n  externalComment:CommentThread = new CommentThread();\r\n  copyClaims = new CopyClaims();\r\n  commentForm: FormGroup;\r\n  todayDate: Date = new Date();\r\n  commentList = [];\r\n  internalCommentList:Array<CommentThread> = new Array<CommentThread>();\r\n  externalCommentList:Array<CommentThread> = new Array<CommentThread>();\r\n  replyInternalComment:CommentThread = new CommentThread();\r\n  copyClaimsList = [];\r\n  commentId: number = 0;\r\n  commentTypeList = [...COMMENT_TYPE];\r\n  commentType = '';\r\n  applicationStage: string;\r\n  internalCommentProcess = 'Save';\r\n  externalCommentProcess = 'Save';\r\n  copyClaimesProcess = 'Save';\r\n  id: any;\r\n  commentHtmlOutput: string;\r\n  disabledComment = false;\r\n\r\n  currentUser: any;\r\n  editCopyClaimsComment = false;\r\n  editExternalComment = false;\r\n\r\n  replyEditorConfig: AngularEditorConfig = {\r\n    editable: true,\r\n    spellcheck: true,\r\n    height: '13m',\r\n    minHeight: '0',\r\n    maxHeight: 'auto',\r\n    width: 'auto',\r\n    minWidth: '0',\r\n    translate: 'no',\r\n    enableToolbar: true,\r\n    showToolbar: true,\r\n    placeholder: 'Enter reply here...',\r\n    defaultParagraphSeparator: 'p',\r\n    defaultFontName: 'Calibri',\r\n    defaultFontSize: '3',\r\n    fonts: [\r\n      { class: 'arial', name: 'Arial' },\r\n      { class: 'times-new-roman', name: 'Times New Roman' },\r\n      { class: 'calibri', name: 'Calibri' },\r\n      { class: 'comic-sans-ms', name: 'Comic Sans MS' }\r\n    ],\r\n\r\n    customClasses: [\r\n      {\r\n        name: 'quote',\r\n        class: 'quote',\r\n      },\r\n      {\r\n        name: 'redText',\r\n        class: 'redText'\r\n      },\r\n      {\r\n        name: 'titleText',\r\n        class: 'titleText',\r\n        tag: 'h1',\r\n      },\r\n    ],\r\n    uploadUrl: 'v1/image',\r\n    // upload: (file: File) => { ... }\r\n    uploadWithCredentials: false,\r\n    sanitize: true,\r\n    toolbarPosition: 'top',\r\n    toolbarHiddenButtons: [\r\n      ['link',\r\n        'unlink',\r\n        'insertImage',\r\n        'insertVideo',],\r\n    ]\r\n  }\r\n\r\n  editorConfig: AngularEditorConfig = {\r\n    editable: true,\r\n    spellcheck: true,\r\n    height: '15em',\r\n    minHeight: '0',\r\n    maxHeight: 'auto',\r\n    width: 'auto',\r\n    minWidth: '0',\r\n    translate: 'no',\r\n    enableToolbar: true,\r\n    showToolbar: true,\r\n    placeholder: 'Enter text here...',\r\n    defaultParagraphSeparator: 'p',\r\n    defaultFontName: 'Calibri',\r\n    defaultFontSize: '3',\r\n    fonts: [\r\n      { class: 'arial', name: 'Arial' },\r\n      { class: 'times-new-roman', name: 'Times New Roman' },\r\n      { class: 'calibri', name: 'Calibri' },\r\n      { class: 'comic-sans-ms', name: 'Comic Sans MS' }\r\n    ],\r\n\r\n    customClasses: [\r\n      {\r\n        name: 'quote',\r\n        class: 'quote',\r\n      },\r\n      {\r\n        name: 'redText',\r\n        class: 'redText'\r\n      },\r\n      {\r\n        name: 'titleText',\r\n        class: 'titleText',\r\n        tag: 'h1',\r\n      },\r\n    ],\r\n    uploadUrl: 'v1/image',\r\n    // upload: (file: File) => { ... }\r\n    uploadWithCredentials: false,\r\n    sanitize: true,\r\n    toolbarPosition: 'top',\r\n    toolbarHiddenButtons: [\r\n      ['link',\r\n        'unlink',\r\n        'insertImage',\r\n        'insertVideo',],\r\n    ]\r\n  };\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private dataStorageService: DataStorageService,\r\n    private sweetAlertService: SweetAlertService,\r\n    private dataStorage: DataStorageService,\r\n    private apiService: ApiService,\r\n    public datepipe: DatePipe,\r\n    private spinner: NgxSpinnerService,\r\n    private route: ActivatedRoute,\r\n    private dialog: MatDialog,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.setFormValidator();\r\n    this.id = Number(this.route.snapshot.paramMap.get('id'));\r\n    this.currentUser = this.dataStorage.getUserAccount();\r\n    console.log(this.applicationStage);\r\n\r\n    if ((!this.commentS1Application.screenerDecisionComment && !this.commentS1Application.reviewerDecisionComment &&\r\n      (this.commentS1Application.releaseStatus === 'FOR_RELEASE' || this.commentS1Application.releaseStatus === 'RELEASED') &&\r\n      this.currentUser.userRole.name !== 'ROLE_REVIEWER')\r\n      || this.commentS1Application.internalStatus === APPLICATION_STATUS.S1_APPLICATION_REJECTED) {\r\n      this.disabledComment = true;\r\n    }\r\n\r\n\r\n    // if(this.applicationStage != APPLICATION_STAGE.S2_APPLICATION){\r\n    //     this.getComments('');\r\n    // }\r\n    this.getComments();\r\n    this.getCopyClaims();\r\n  }\r\n\r\n  addInternalComment(comment: CommentThread): void {\r\n    let endpoint;\r\n    if (this.applicationStage === APPLICATION_STAGE.S2_APPLICATION) {\r\n      endpoint = ENDPOINTS.commentS2\r\n      this.internalComment.applicationFormType = APPFORM_TYPE.S2;\r\n      this.internalComment.applicationFormS2 = this.commentS2Application;\r\n      console.log('S2 Comment Object', this.internalComment);\r\n    } else {\r\n      endpoint = ENDPOINTS.comment\r\n      this.internalComment.applicationFormType = APPFORM_TYPE.S1;\r\n      this.internalComment.appFormReference = this.commentS1Application.appFormReference;\r\n      console.log('S1 Comment Object', this.internalComment);\r\n    }\r\n\r\n    if (this.internalCommentProcess === 'Save') {\r\n      this.spinner.show();\r\n      comment.actionBy = this.currentUser;\r\n      comment.role = this.dataStorageService.getUserRole();\r\n      comment.actionDate = new Date();\r\n      comment.commentType = 'INTERNAL';\r\n      comment.comment = this.setHtml5Value(comment.comment);\r\n      this.internalCommentList.push(comment);\r\n\r\n      this.apiService.save(endpoint, comment).subscribe(\r\n        (res: any) => {\r\n          console.log('RES', res);\r\n          if (res !== undefined) {\r\n            this.spinner.hide();\r\n            this.sweetAlertService.customSuccessMessage('Internal Comment has been added!');\r\n            this.internalComment = new CommentThread();\r\n            this.getComments();\r\n            this.getCommentsS2(res.responseData.data.applicationFormS2);\r\n          }\r\n        }, (err: any) => {\r\n          this.spinner.hide();\r\n          console.log('errrrrrrrr:::', err);\r\n\r\n          this.sweetAlertService.error(err);\r\n        }, () => {\r\n          this.spinner.hide();\r\n          this.comment = new Comment();\r\n        })\r\n\r\n    } else {\r\n      let dateTransformed = this.datepipe.transform(new Date(), 'yyyy-MM-dd')\r\n\r\n      Swal.fire({\r\n        text: 'Are you sure you want to update this comment?',\r\n        icon: 'question',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        confirmButtonText: 'Confirm'\r\n      }).then((result) => {\r\n        if (result.value) {\r\n          this.spinner.show();\r\n          // this.internalComment.modifiedBy = this.currentUser.username\r\n          // this.internalComment.modifiedDate = new Date();\r\n          this.internalComment.comment = this.setHtml5Value(this.internalComment.comment);\r\n          this.apiService.update(endpoint, this.internalComment).subscribe(\r\n            (res: any) => {\r\n              // this.internalCommentList = res.responseData.data;\r\n              this.spinner.hide();\r\n              this.sweetAlertService.customSuccessMessage('Internal Comment has been Updated!');\r\n              this.internalComment = new CommentThread();\r\n              this.internalCommentProcess = 'Save';\r\n              this.getComments();\r\n              this.getCommentsS2(res.responseData.data.applicationFormS2);\r\n            }, (err: any) => {\r\n              this.spinner.hide();\r\n            });\r\n        }\r\n\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  sendReply(comment: CommentThread){\r\n    \r\n    console.log(this.replyInternalComment)\r\n    // this.replyInternalComment.parent = comment;\r\n    this.replyInternalComment.isReply = true;\r\n    this.replyInternalComment.parentId = comment.id;\r\n    this.addInternalComment(this.replyInternalComment);\r\n\r\n  }\r\n  cancelReply(comment: CommentThread){\r\n    comment = new CommentThread();\r\n    comment.replyEditorIsEnabled = false;\r\n  }\r\n\r\n  addExternalComment(): void {\r\n    let endpoint;\r\n    if (this.applicationStage === APPLICATION_STAGE.S2_APPLICATION) {\r\n      endpoint = ENDPOINTS.commentS2\r\n      this.externalComment.applicationFormType = APPFORM_TYPE.S2;\r\n      this.externalComment.applicationFormS2 = this.commentS2Application;\r\n    } else {\r\n      endpoint = ENDPOINTS.comment\r\n      this.externalComment.applicationFormType = APPFORM_TYPE.S1;\r\n      this.externalComment.appFormReference = this.commentS1Application.appFormReference;\r\n    }\r\n\r\n    if (this.externalCommentProcess === 'Save') {\r\n      this.spinner.show();\r\n      this.externalComment.actionBy = this.currentUser;\r\n      this.externalComment.role = this.dataStorageService.getUserRole();\r\n      this.externalComment.actionDate = new Date();\r\n      this.externalComment.commentType = 'EXTERNAL';\r\n      this.externalComment.comment = this.setHtml5Value(this.externalComment.comment);\r\n      this.externalCommentList.push(this.externalComment);\r\n\r\n      this.apiService.save(endpoint, this.externalComment).subscribe(\r\n        (res: any) => {\r\n          if (res !== undefined) {\r\n            this.spinner.hide();\r\n            this.sweetAlertService.customSuccessMessage('External Comment has been added!');\r\n            this.externalComment = new CommentThread();\r\n            this.editExternalComment = false;\r\n            this.getComments();\r\n            this.getCommentsS2(res.responseData.data.applicationFormS2);\r\n          }\r\n        }, (err: any) => {\r\n          this.spinner.hide();\r\n          console.log('errrrrrrrr:::', err);\r\n\r\n          this.sweetAlertService.error(err);\r\n        }, () => {\r\n          this.spinner.hide();\r\n          this.comment = new Comment();\r\n        })\r\n\r\n    } else {\r\n      let dateTransformed = this.datepipe.transform(new Date(), 'yyyy-MM-dd')\r\n\r\n      Swal.fire({\r\n        text: 'Are you sure you want to update this comment?',\r\n        icon: 'question',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        confirmButtonText: 'Confirm'\r\n      }).then((result) => {\r\n        if (result.value) {\r\n          this.spinner.show();\r\n          // this.externalComment.modifiedBy = this.currentUser.username;\r\n          // this.externalComment.modifiedDate = new Date();\r\n          this.externalComment.comment = this.setHtml5Value(this.externalComment.comment);\r\n          this.apiService.update(endpoint, this.externalComment).subscribe(\r\n            (res: any) => {\r\n              this.spinner.hide();\r\n              // this.externalCommentList = res.responseData.data;\r\n              this.sweetAlertService.customSuccessMessage('External Comment has been Updated!');\r\n              this.externalComment = new CommentThread();\r\n              this.externalCommentProcess = 'Save'\r\n              this.editExternalComment = false;\r\n              this.getComments();\r\n              this.getCommentsS2(res.responseData.data.applicationFormS2);\r\n            }, (err: any) => {\r\n              this.spinner.hide();\r\n            });\r\n        }\r\n\r\n      });\r\n    }\r\n  }\r\n\r\n  addCopyClaims(): void {\r\n    if (this.copyClaimesProcess === 'Save') {\r\n      this.spinner.show();\r\n      this.copyClaims.actionBy = this.currentUser;\r\n      this.copyClaims.role = this.dataStorageService.getUserRole();\r\n      this.copyClaims.actionDate = new Date();\r\n      this.copyClaims.appFormReference = this.commentS1Application.appFormReference;\r\n      this.copyClaims.description = this.setHtml5Value(this.copyClaims.description);\r\n\r\n      this.apiService.save(ENDPOINTS.copyClaims, this.copyClaims).subscribe(\r\n        (res: any) => {\r\n          if (res !== undefined) {\r\n            this.spinner.hide();\r\n            this.sweetAlertService.customSuccessMessage('Copy claims description has been added!');\r\n            this.copyClaims = new CopyClaims();\r\n            this.getCopyClaims();\r\n            this.editCopyClaimsComment = false;\r\n          }\r\n        }, (err: any) => {\r\n          this.spinner.hide();\r\n          // console.log('errrrrrrrr:::', err);\r\n\r\n          this.sweetAlertService.error(err);\r\n        }, () => {\r\n          this.spinner.hide();\r\n          this.copyClaims = new CopyClaims();\r\n        })\r\n    } else {\r\n      Swal.fire({\r\n        text: 'Are you sure you want to update copy claim?',\r\n        icon: 'question',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        confirmButtonText: 'Confirm'\r\n      }).then((result) => {\r\n        if (result.value) {\r\n          this.spinner.show();\r\n          this.copyClaims.description = this.setHtml5Value(this.copyClaims.description);\r\n          this.apiService.update(ENDPOINTS.copyClaims, this.copyClaims).subscribe(\r\n            (res: any) => {\r\n              this.spinner.hide();\r\n              this.sweetAlertService.customSuccessMessage('Copy claims description has been Updated!');\r\n              this.copyClaims = new CopyClaims();\r\n              this.copyClaimesProcess = 'Save'\r\n              this.editCopyClaimsComment = false;\r\n              this.getCopyClaims();\r\n\r\n            }, (err: any) => {\r\n              this.spinner.hide();\r\n            });\r\n        }\r\n\r\n      });\r\n    }\r\n  }\r\n\r\n  getComments(): void { // comments for S1\r\n    if (this.commentS1Application) {\r\n      this.apiService.findByParam(ENDPOINTS.comment + '/app-form-reference', this.commentS1Application.appFormReference).subscribe(\r\n        (res: any) => {\r\n          this.commentList = res.responseData.data;\r\n          // get internal comments\r\n          this.internalCommentList = this.commentList.filter(internalComment => internalComment.commentType === 'INTERNAL');\r\n          console.log('INTERNAL', this.internalCommentList);\r\n          // get external comments\r\n          this.externalCommentList = this.commentList.filter(externalComment => externalComment.commentType === 'EXTERNAL');\r\n          console.log('EXTERNAL', this.externalCommentList);\r\n          this.spinner.hide();\r\n        }, (err: any) => {\r\n        });\r\n    }\r\n  }\r\n\r\n  getCommentsS2(data): void { // comments for S2\r\n    if (data) {\r\n      this.apiService.findByParam(ENDPOINTS.commentS2 + '/application-form-s2', data.id).subscribe(\r\n        (res: any) => {\r\n          this.commentList = res.responseData.data;\r\n          // get internal comments\r\n          this.internalCommentList = this.commentList.filter(internalComment => internalComment.commentType === 'INTERNAL');\r\n          // get external comments\r\n          this.externalCommentList = this.commentList.filter(externalComment => externalComment.commentType === 'EXTERNAL');\r\n        }, (err: any) => {\r\n        });\r\n    }\r\n  }\r\n\r\n  getCopyClaims(): void {\r\n    this.apiService.findByParam(ENDPOINTS.copyClaims + '/app-form-reference', this.commentS1Application.appFormReference).subscribe(\r\n      (res: any) => {\r\n        this.copyClaimsList = res.responseData.data;\r\n      }, (err: any) => {\r\n      });\r\n  }\r\n\r\n  modifyCopyClaims(data) {\r\n    this.copyClaimesProcess = 'Update';\r\n    this.copyClaims = data;\r\n    this.editCopyClaimsComment = true;\r\n    this.getCopyClaims();\r\n  }\r\n\r\n  modifyInternalComment(data): void {\r\n    this.internalCommentProcess = 'Update';\r\n    this.internalComment = data;\r\n    this.getComments();\r\n    this.getCommentsS2(data);\r\n  }\r\n\r\n  deleteComment(data): void {\r\n    let endpoint;\r\n    if (this.applicationStage === APPLICATION_STAGE.S2_APPLICATION) {\r\n      endpoint = ENDPOINTS.commentS2\r\n    } else {\r\n      endpoint = ENDPOINTS.comment\r\n    }\r\n    Swal.fire({\r\n      text: 'Are you sure you want to delete this comment?',\r\n      icon: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Confirm'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.spinner.show();\r\n        this.apiService.deleteById(endpoint, data.id).subscribe(\r\n          (res: any) => {\r\n            if (data?.applicationFormType === 'S1') {\r\n              this.getComments();\r\n            } else {\r\n              this.getCommentsS2(data);\r\n            }\r\n            this.sweetAlertService.customSuccessMessage('Comment has been Deleted!');\r\n          }, (err: any) => {\r\n            this.spinner.hide()\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  deleteCopyClaims(data): void {\r\n\r\n    Swal.fire({\r\n      text: 'Are you sure you want to delete this copy claims?',\r\n      icon: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Confirm'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.apiService.deleteById(ENDPOINTS.copyClaims, data.id).subscribe(\r\n          (res: any) => {\r\n            this.sweetAlertService.customSuccessMessage('Copy claim has been Deleted!');\r\n            this.getCopyClaims();\r\n          }, (err: any) => {\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  modifyExternalComment(data): void {\r\n    this.externalCommentProcess = 'Update';\r\n    this.externalComment = data;\r\n    this.editExternalComment = true;\r\n    this.getComments();\r\n    this.getCommentsS2(data);\r\n  }\r\n\r\n  cancel(): void {\r\n    this.internalComment = new CommentThread();\r\n    this.externalComment = new CommentThread();\r\n    this.copyClaims = new CopyClaims();\r\n    this.internalCommentProcess = 'Save';\r\n    this.externalCommentProcess = 'Save';\r\n    this.copyClaimesProcess = 'Save';\r\n    this.editCopyClaimsComment = false;\r\n    this.editExternalComment = false;\r\n    this.getComments();\r\n    this.getCopyClaims();\r\n\r\n  }\r\n\r\n  setFormValidator(): void {\r\n    this.commentForm = this.formBuilder.group({\r\n      internalComments: [''],\r\n      externalComments: [''],\r\n      commentType: [''],\r\n      description: [''],\r\n    });\r\n  }\r\n\r\n  setHtml5Value(commentBody: any) {\r\n    this.commentHtmlOutput = \"<!DOCTYPE html><html lang=\" + \"en\" + \"><meta charset=\" + \"utf-8\" + \"><body>\" + commentBody + \"</body></html>\"\r\n    return this.commentHtmlOutput;\r\n  }\r\n\r\n}\r\n","import { S2Application, UserAccount } from '@models';\r\nexport class CommentThread {\r\n    id:                  number;\r\n    appFormReference:    string;\r\n    applicationFormType: string;\r\n    comment:             string;\r\n    actionBy:            UserAccount;\r\n    commentType:         string;\r\n    role:                string;\r\n    actionDate:          Date;\r\n    isReply:             boolean;\r\n    replies:             Array<CommentThread>;\r\n    parentId:            number;\r\n    parent:              any;\r\n    replyEditorIsEnabled: boolean;\r\n    applicationFormS2: S2Application;\r\n    constructor(){\r\n        this.parent = {};\r\n        this.replyEditorIsEnabled = false;\r\n        this.isReply = false;\r\n    }\r\n}","export default \"<form>\\r\\n    <!-- <div class=\\\"spinner\\\">\\r\\n        <ngx-spinner bdColor=\\\"rgba(0, 0, 0, 0.8)\\\" size=\\\"large\\\" color=\\\"#fff\\\" type=\\\"line-spin-fade\\\" [fullScreen]=\\\"false\\\">\\r\\n            <p> Loading list of Applications </p>\\r\\n        </ngx-spinner>\\r\\n    </div> -->\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12 title\\\">\\r\\n                <mat-label>\\r\\n                    <mat-icon>view_list</mat-icon> Application Reassignment\\r\\n                </mat-label>\\r\\n            </div>\\r\\n        </div>\\r\\n        <hr>\\r\\n        <mat-tab-group mat-align-tabs=\\\"start\\\" (selectedTabChange)=\\\"changeTab($event)\\\">\\r\\n            <mat-tab label=\\\"S1\\\">\\r\\n                <ng-container *ngTemplateOutlet=\\\"s1ApplicationFormDisplay\\\"></ng-container>\\r\\n            </mat-tab>\\r\\n            <mat-tab label=\\\"S2\\\">\\r\\n                <ng-container *ngTemplateOutlet=\\\"s2ApplicationFormDisplay\\\"></ng-container>\\r\\n            </mat-tab>\\r\\n        </mat-tab-group>\\r\\n\\r\\n        <span *ngIf=\\\"displayedContent === 'S1' \\\">\\r\\n            <ng-container *ngTemplateOutlet=\\\"s1ApplicationList\\\"></ng-container>\\r\\n        </span>\\r\\n        <span *ngIf=\\\"displayedContent === 'S2' \\\">\\r\\n            <ng-container *ngTemplateOutlet=\\\"s2ApplicationList\\\"></ng-container>\\r\\n        </span>\\r\\n\\r\\n    </div>\\r\\n</form>\\r\\n\\r\\n\\r\\n<!-- ****************************** FORM ****************************** -->\\r\\n\\r\\n<ng-template #s1ApplicationFormDisplay>\\r\\n    <form [formGroup]=\\\"s1ApplicationForm\\\" *ngIf=\\\"s1Application?.id\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label>Reference Code</mat-label>\\r\\n                <input matInput [(ngModel)]=\\\"s1Application.referenceCode\\\" name=\\\"referenceCode\\\"\\r\\n                    formControlName=\\\"referenceCode\\\" readonly\\r\\n                    *ngIf=\\\"s1Application?.internalStatus!=='S1_APPLICATION_REJECTED'\\\">\\r\\n                <input matInput [(ngModel)]=\\\"s1Application.referenceCodeRejected\\\" name=\\\"referenceCode\\\"\\r\\n                    formControlName=\\\"referenceCode\\\" readonly\\r\\n                    *ngIf=\\\"s1Application?.internalStatus==='S1_APPLICATION_REJECTED'\\\">\\r\\n            </mat-form-field>\\r\\n\\r\\n            <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label>Application Owner</mat-label>\\r\\n                <input matInput [(ngModel)]=\\\"applicationOwnerName \\\" name=\\\"applicationOwner\\\"\\r\\n                    formControlName=\\\"applicationOwner\\\" readonly>\\r\\n            </mat-form-field>\\r\\n\\r\\n            <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label>AD Title</mat-label>\\r\\n                <input matInput [(ngModel)]=\\\"s1Application.adTitle\\\" name=\\\"adTitle\\\" formControlName=\\\"adTitle\\\" readonly>\\r\\n            </mat-form-field>\\r\\n\\r\\n            <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label>Assigned User</mat-label>\\r\\n                <mat-select [(ngModel)]=\\\"s1Application.assignedUser\\\" name=\\\"assignedUser\\\" formControlName=\\\"assignedUser\\\"\\r\\n                    [compareWith]=\\\"compareAssignedUser\\\">\\r\\n                    <mat-option *ngFor=\\\"let i of userList\\\" [value]=\\\"i\\\">\\r\\n                        {{ i?.firstName }} {{ i?.lastName }}\\r\\n                    </mat-option>\\r\\n                </mat-select>\\r\\n            </mat-form-field>\\r\\n        </div>\\r\\n        <app-form-action-buttons [childObject]=\\\"s1Application\\\" [childForm]=\\\"s1ApplicationForm\\\"\\r\\n            (updateFunction)=\\\"update()\\\" (cancelFunction)=\\\"resetFormValidator()\\\"></app-form-action-buttons>\\r\\n    </form>\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #s2ApplicationFormDisplay>\\r\\n    <form [formGroup]=\\\"s1ApplicationForm\\\" *ngIf=\\\"s2Application?.id\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label>Reference Code</mat-label>\\r\\n                <input matInput [(ngModel)]=\\\"s2Application.applicationForm.referenceCode\\\" name=\\\"referenceCode\\\"\\r\\n                    formControlName=\\\"referenceCode\\\" readonly\\r\\n                    *ngIf=\\\"s2Application?.internalStatus!=='S1_APPLICATION_REJECTED'\\\">\\r\\n                <input matInput [(ngModel)]=\\\"s1Application.referenceCodeRejected\\\" name=\\\"referenceCode\\\"\\r\\n                    formControlName=\\\"referenceCode\\\" readonly\\r\\n                    *ngIf=\\\"s2Application?.internalStatus==='S1_APPLICATION_REJECTED'\\\">\\r\\n            </mat-form-field>\\r\\n\\r\\n            <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label>Application Owner</mat-label>\\r\\n                <input matInput [(ngModel)]=\\\"applicationOwnerName\\\" name=\\\"applicationOwner\\\"\\r\\n                    formControlName=\\\"applicationOwner\\\" readonly>\\r\\n            </mat-form-field>\\r\\n\\r\\n            <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label>AD Title</mat-label>\\r\\n                <input matInput [(ngModel)]=\\\"s2Application.applicationForm.adTitle\\\" name=\\\"adTitle\\\" formControlName=\\\"adTitle\\\" readonly>\\r\\n            </mat-form-field>\\r\\n\\r\\n            <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label>Assigned User</mat-label>\\r\\n                <mat-select [(ngModel)]=\\\"s2Application.assignedUser\\\" name=\\\"assignedUser\\\" formControlName=\\\"assignedUser\\\"\\r\\n                    [compareWith]=\\\"compareAssignedUser\\\">\\r\\n                    <mat-option *ngFor=\\\"let i of userList\\\" [value]=\\\"i\\\">\\r\\n                        {{ i?.firstName }} {{ i?.lastName }}\\r\\n                    </mat-option>\\r\\n                </mat-select>\\r\\n            </mat-form-field>\\r\\n        </div>\\r\\n        <app-form-action-buttons [childObject]=\\\"s2Application\\\" [childForm]=\\\"s1ApplicationForm\\\"\\r\\n            (updateFunction)=\\\"update()\\\" (cancelFunction)=\\\"resetFormValidator()\\\"></app-form-action-buttons>\\r\\n    </form>\\r\\n</ng-template>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n<!-- ****************************** LISTING ****************************** -->\\r\\n\\r\\n<ng-template #s1ApplicationList>\\r\\n    <br>\\r\\n    <app-form-list [dataSource]=\\\"s1ApplicationDataSource\\\" [displayedColumns]=\\\"s1ApplicationDisplayedColumns\\\"\\r\\n        (selectInListFunction)=\\\"getS1Application()\\\"></app-form-list>\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #s2ApplicationList>\\r\\n    <br>\\r\\n    <app-form-list [dataSource]=\\\"s2ApplicationDataSource\\\" [displayedColumns]=\\\"s2ApplicationDisplayedColumns\\\"\\r\\n        (selectInListFunction)=\\\"getS2Application()\\\"></app-form-list>\\r\\n</ng-template>\\r\\n\";","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { AddCompanyRoutingModule } from './add-company-routing.module';\r\nimport { AngularMaterialModule } from '@shared';\r\nimport { AddCompanyComponent } from './add-company.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\n\r\n@NgModule({\r\n  declarations: [ AddCompanyComponent ],\r\n  imports: [\r\n    CommonModule,\r\n    AddCompanyRoutingModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule,\r\n    AngularMaterialModule,\r\n  ]\r\n})\r\nexport class AddCompanyModule { }\r\n","export default \"span {\\n  color: red;\\n}\\n\\n.numbers-input {\\n  text-align: end;\\n}\\n\\n.total {\\n  font-weight: 900;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9wYWdlcy9hcHBsaWNhdGlvbnMvc2NoZWR1bGUtb2YtZmVlcy9zaW5nbGUtYXBwbGljYXRpb24vbW9kYWwtc2luZ2xlLWFwcGxpY2F0aW9uL21vZGFsLXNpbmdsZS1hcHBsaWNhdGlvbi5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLFVBQUE7QUFDSjs7QUFFQTtFQUNFLGVBQUE7QUFDRjs7QUFFQTtFQUNFLGdCQUFBO0FBQ0YiLCJmaWxlIjoic3JjL2FwcC9tb2R1bGVzL3BhZ2VzL2FwcGxpY2F0aW9ucy9zY2hlZHVsZS1vZi1mZWVzL3NpbmdsZS1hcHBsaWNhdGlvbi9tb2RhbC1zaW5nbGUtYXBwbGljYXRpb24vbW9kYWwtc2luZ2xlLWFwcGxpY2F0aW9uLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsic3BhbntcclxuICAgIGNvbG9yOiByZWQ7XHJcbn1cclxuXHJcbi5udW1iZXJzLWlucHV0e1xyXG4gIHRleHQtYWxpZ246IGVuZDtcclxufVxyXG5cclxuLnRvdGFse1xyXG4gIGZvbnQtd2VpZ2h0OiA5MDA7XHJcbn1cclxuIl19 */\";","export default \"<form>\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-12 title\\\">\\r\\n          <mat-label>\\r\\n            <mat-icon>view_list</mat-icon> Multiple Applications - For Payment\\r\\n          </mat-label>\\r\\n        </div>\\r\\n      </div>\\r\\n      <hr>\\r\\n      <br>\\r\\n      <div class=\\\"col-md-12\\\" fxLayout fxLayoutAlign=\\\"center center\\\">\\r\\n        <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n          <input matInput type=\\\"text\\\" placeholder=\\\"Company Name\\\">\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"mat-elevation-z8 fields\\\">\\r\\n        <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\r\\n          <ng-container matColumnDef=\\\"adTitle\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> REFERENCE CODE </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element; let i = index\\\" (click)=\\\"openModal(element)\\\"> {{element?.adTitle | uppercase}}</td>\\r\\n          </ng-container>\\r\\n          <ng-container matColumnDef=\\\"typeOfApplication\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> TYPE OF APPLICATION</th>\\r\\n            <td mat-cell *matCellDef=\\\"let element; let i = index\\\" (click)=\\\"openModal(element)\\\">{{element?.applicationType?.description | uppercase}}</td>\\r\\n          </ng-container>\\r\\n          <ng-container matColumnDef=\\\"brand\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> BRAND</th>\\r\\n            <td mat-cell *matCellDef=\\\"let element; let i = index\\\" (click)=\\\"openModal(element)\\\">{{element?.brand?.description | uppercase}}</td>\\r\\n          </ng-container>\\r\\n          <ng-container matColumnDef=\\\"product\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> PRODUCT</th>\\r\\n            <td mat-cell *matCellDef=\\\"let element; let i = index\\\" (click)=\\\"openModal(element)\\\">{{element?.product?.description | uppercase}}</td>\\r\\n          </ng-container>\\r\\n          <ng-container matColumnDef=\\\"applicantCompanyName\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> APPLICANT COMPANY NAME</th>\\r\\n            <td mat-cell *matCellDef=\\\"let element; let i = index\\\" (click)=\\\"openModal(element)\\\">{{element?.company.companyName | uppercase}}</td>\\r\\n          </ng-container>\\r\\n          <!-- <ng-container matColumnDef=\\\"countVerifiedApplicationForm\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> NUMBER OF VERIFIED APPLICATIONS</th>\\r\\n            <td mat-cell *matCellDef=\\\"let element; let i = index\\\" (click)=\\\"openModal(element)\\\">{{element?.countVerifiedApplicationForm}}</td>\\r\\n          </ng-container> -->\\r\\n          <ng-container matColumnDef=\\\"paymentStatus\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> PAYMENT STATUS</th>\\r\\n            <td mat-cell *matCellDef=\\\"let element; let i = index\\\" (click)=\\\"openModal(element)\\\">{{element?.paymentStatus?.replaceAll('_',' ') | uppercase}}</td>\\r\\n          </ng-container>\\r\\n\\r\\n\\r\\n\\r\\n          <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n          <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n        </table>\\r\\n        <div class=\\\"no-record\\\" [hidden]=\\\"dataSource && dataSource?.data?.length > 0\\\">\\r\\n          No record found.\\r\\n        </div>\\r\\n        <mat-paginator [pageSizeOptions]=\\\"[10, 20, 50]\\\" showFirstLastButtons></mat-paginator>\\r\\n      </div>\\r\\n      <br>\\r\\n    </div>\\r\\n  </form>\\r\\n\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTable, MatTableDataSource } from '@angular/material/table';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { S2Application } from '@models';\r\nimport { ApiService, DataStorageService, SweetAlertService } from '@services';\r\nimport { APPLICATION_STATUS, ENDPOINTS, FORM_STATUS, ROLES, SUBMISSION_TYPE, USER_ROLES } from '@shared';\r\nimport { ApplicationRequest } from 'app/core/models/application-request.model';\r\nimport { ApplicationCountS2 } from 'app/core/models/applicationCountS2.model';\r\nimport { MultipleApplication } from 'app/core/models/multiple-application.model';\r\nimport { CommonServices } from 'app/core/services/common-services.service';\r\nimport { RequestForSpecialClearingComponent } from 'app/modules/fragments/request-for-special-clearing/request-for-special-clearing.component';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-list-s2-application',\r\n  templateUrl: './list-s2-application.component.html',\r\n  styleUrls: ['./list-s2-application.component.scss']\r\n})\r\nexport class ListS2ApplicationComponent implements OnInit {\r\n  @ViewChild(MatPaginator, { static: false }) paginatorFalse: MatPaginator;\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  pageSize = 10;\r\n  pageNo = 0;\r\n  pageSizeOptions: number[] = [10, 20, 50];\r\n  @ViewChild(MatSort, { static: false }) sort: MatSort;\r\n  @ViewChild(MatTable, { static: false }) table: MatTable<S2Application>;\r\n  dataSource: MatTableDataSource<S2Application>; // in html but not existing in component -- encountered during 'ng serve --aot'\r\n  displayedColumns = ['referenceCode', 'typeOfApplication', 'companyName', 'brand', 'typeOfMedium', 'status', 'internalStatus', 'icon'];\r\n  s2ApplicationList = [];\r\n  s2TotalItems = 0;\r\n  isAscUser: boolean = false\r\n\r\n  // For clearance list\r\n  forClearanceDataSource: MatTableDataSource<S2Application>;\r\n  s2ApplicationListForClearance = [];\r\n  forClearanceDisplayedColumns = ['referenceCode', 'typeOfApplication', 'companyName', 'brand', 'typeOfMedium', 'status', 'icon'];\r\n  s2SpecialTotalItems = 0;\r\n\r\n  s2SpecialApplicationDataSource: MatTableDataSource<MultipleApplication>;\r\n  s2SpecialApplicationList = []\r\n  s2SpecialApplicationDisplayedColumns = ['adTitle', 'typeOfApplication', 'companyName', 'brand', 'status'];\r\n\r\n  applicationRequest = new ApplicationRequest();\r\n\r\n  currentUser: any;\r\n  viewApplicationType: string;\r\n  applicationTypeTitle: string;\r\n  currentPage = 1;\r\n  // currentSize = 100;\r\n  originalTabDataCount = 0;\r\n  complianceTabDataCount = 0;\r\n  releasedAppealTabDataCount = 0;\r\n  toaTabDataCount = 0;\r\n  click = 0;\r\n  timeLeft: number = 60;\r\n  interval: any;\r\n  refreshButtonEnabled = true;\r\n  timerDisplay: any;\r\n  isTimerValueDisplay = false;\r\n  s2ApplicationCountList = [];\r\n\r\n  displayedContent = 'ORIGINAL';\r\n\r\n  s2Application = new S2Application();\r\n  applicationCountS2 = new ApplicationCountS2();\r\n\r\n  isSuperAdmin = false;\r\n  isAdmin = false;\r\n  isAccounting = false;\r\n  isApplicant = false;\r\n  isScreener = false;\r\n  isReviewer = false;\r\n  isAdSpecialist = false;\r\n  isEvaluator = false;\r\n  ascUserRoleList = [...ROLES.filter((role: any) => role.ascUser === true).map((role: any) => role.role)];\r\n  constructor(\r\n    private apiService: ApiService,\r\n    private dataStorage: DataStorageService,\r\n    private router: Router,\r\n    private sweetAlertService: SweetAlertService,\r\n    private dialog: MatDialog,\r\n    private spinner: NgxSpinnerService,\r\n    private route: ActivatedRoute,\r\n    private commonService: CommonServices\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.isAscUser = this.ascUserRoleList.includes(this.dataStorage.getUserRole());\r\n    this.currentUser = this.dataStorage.getUserAccount();\r\n    this.viewApplicationType = this.route.parent.snapshot.url[0].path;\r\n    this.getListCount();\r\n    if (this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT) {\r\n      this.displayedColumns = ['referenceCode', 'typeOfApplication', 'companyName', 'brand', 'typeOfMedium', 'status', 'icon'];\r\n    }\r\n\r\n    if (this.viewApplicationType === 'special') {\r\n      this.applicationTypeTitle = 'SPECIAL CLEARING';\r\n      this.getSpecialS2ApplicationList();\r\n    } else {\r\n      this.applicationTypeTitle = 'INDIVIDUAL';\r\n      this.getList();\r\n    }\r\n\r\n    this.initUserRole();\r\n  }\r\n\r\n\r\n  initUserRole() {\r\n    if (this.currentUser.userRole.name === USER_ROLES.ROLE_SUPER_ADMIN) {\r\n      this.isSuperAdmin = true;\r\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_ADMIN) {\r\n      this.isAdmin = true;\r\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_ACCOUNTING) {\r\n      this.isAccounting = true;\r\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT) {\r\n      this.isApplicant = true;\r\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_SCREENER) {\r\n      this.isScreener = true;\r\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_REVIEWER) {\r\n      this.isReviewer = true;\r\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_AD_SPECIALIST) {\r\n      this.isAdSpecialist = true;\r\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_ENCODER) {\r\n      this.isEvaluator = true;\r\n    }\r\n  }\r\n\r\n\r\n  getListCount(): void {\r\n    let endpoint;\r\n    if (this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT) {\r\n      endpoint = ENDPOINTS.badgeCountByApplicationOwnerS2;\r\n    } else {\r\n      endpoint = ENDPOINTS.badgeCountByAscUserS2;\r\n    }\r\n    this.apiService.findAll(endpoint + this.currentUser.id).subscribe(\r\n      (res: any) => {\r\n        this.applicationCountS2 = res;\r\n      })\r\n  }\r\n\r\n  getList(submissionType = 'ORIGINAL'): void {\r\n\r\n    this.currentPage = this.pageNo;\r\n    this.currentPage++;\r\n    if (this.currentPage === 0) this.currentPage++;\r\n    let param = submissionType.toUpperCase();\r\n\r\n    if (param === SUBMISSION_TYPE.COMPLIANCE && this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT) {\r\n      param = `&complianceForm=true`;\r\n    } else if (param === SUBMISSION_TYPE.COMPLIANCE && this.currentUser.userRole.name !== USER_ROLES.ROLE_APPLICANT) {\r\n      param = `&complianceForm=true`;\r\n    } else if (param === SUBMISSION_TYPE.TOA) {\r\n      param = `&hasToa=true`;\r\n    } else {\r\n      param = `&submissionType=${param}&complianceForm=false`;\r\n    }\r\n\r\n    this.spinner.show();\r\n    let endpoint = `custom/search?page=${this.currentPage}&size=${this.pageSize}${param}`;\r\n\r\n    if (this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT) {\r\n      endpoint = ENDPOINTS.s2ApplicationFormPresentor + endpoint + `&applicationOwnerId=${this.currentUser.id}`;\r\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_ENCODER) {\r\n      endpoint = ENDPOINTS.s2ApplicationFormEncoder + endpoint + `&assignedEncoderId=${this.currentUser.id}`;\r\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_AD_SPECIALIST) {\r\n      endpoint = ENDPOINTS.s2ApplicationFormAdSpe + endpoint + `&assignedAdSpecialistId=${this.currentUser.id}`;\r\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_ADMIN || this.currentUser.userRole.name === USER_ROLES.ROLE_SUPER_ADMIN) {\r\n      endpoint = ENDPOINTS.s2ApplicationFormAdmin + endpoint;\r\n    } else {\r\n      endpoint = ENDPOINTS.s2Application + endpoint + `&applicationOwnerId=${this.currentUser.id}`;\r\n    }\r\n\r\n    // console.log(endpoint);\r\n    this.apiService.findAll(endpoint).subscribe(\r\n      (res: any) => {\r\n        this.s2ApplicationList = res.data;\r\n\r\n        this.s2TotalItems = res.totalItems;\r\n        console.log('s2ApplicationList: ', res);\r\n        this.dataSource = new MatTableDataSource<S2Application>(this.s2ApplicationList);\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n        this.hideSpinner();\r\n      }, (err: any) => {\r\n        this.hideSpinner();\r\n      }\r\n    )\r\n  }\r\n\r\n  hideSpinner() {\r\n    setTimeout(() => {\r\n      this.spinner.hide();\r\n    }, 1);\r\n  }\r\n\r\n  getSpecialS2ApplicationList(): void {\r\n    let endpoint = ''; let obj;\r\n    if (this.currentUser.userRole.name === USER_ROLES.ROLE_ADMIN || this.currentUser.userRole.name === USER_ROLES.ROLE_SUPER_ADMIN) {\r\n      obj = {\r\n        statuses: ['FOR_APPROVAL', 'APPROVED', 'DISAPPROVED']\r\n      }\r\n      endpoint = ENDPOINTS.s2SpecialClearingApplicationRequestsAdmin;\r\n    } else {\r\n      obj = {\r\n        applicationOwnerId: this.currentUser.id,\r\n        statuses: ['FOR_APPROVAL', 'APPROVED', 'DISAPPROVED']\r\n      }\r\n      endpoint = ENDPOINTS.s2SpecialClearingApplicationRequests;\r\n    }\r\n\r\n    this.currentPage = this.pageNo;\r\n    this.currentPage++;\r\n    if (this.currentPage === 0) this.currentPage++;\r\n\r\n    this.apiService.save(`${endpoint}?page=${this.currentPage}&size=${this.pageSize}`, obj)\r\n      .subscribe((res: any) => {\r\n        this.s2SpecialApplicationList = res.data;\r\n\r\n        console.log('s2SpecialApplicationList: ', res);\r\n        this.s2SpecialTotalItems = res.totalItems;\r\n        this.s2SpecialApplicationDataSource = new MatTableDataSource<MultipleApplication>(this.s2SpecialApplicationList);\r\n        this.s2SpecialApplicationDataSource.paginator = this.paginator;\r\n        this.s2SpecialApplicationDataSource.sort = this.sort;\r\n        setTimeout(() => {\r\n          this.spinner.hide();\r\n        }, 1);\r\n      }, (err: any) => {\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n\r\n  pageEvents(event: any) {\r\n    this.pageSize = event.pageSize;\r\n\r\n    if (event.pageIndex > this.pageNo) {\r\n      this.pageNo++;\r\n    } else {\r\n      this.pageNo--;\r\n    }\r\n\r\n    if (event.pageSize > event.length) {\r\n      this.pageNo = 0;\r\n    }\r\n\r\n    this.getList();\r\n  }\r\n\r\n  setPageSizeOptions(setPageSizeOptionsInput: string) {\r\n    if (setPageSizeOptionsInput) {\r\n      this.pageSizeOptions = setPageSizeOptionsInput.split(',').map(str => +str);\r\n    }\r\n  }\r\n\r\n  viewApplication(data: any): void {\r\n    this.s2Application = data;\r\n    console.log('S2 FORM: ', this.s2Application);\r\n\r\n    if (data.formStatus === FORM_STATUS.OPEN && this.s2Application.internalStatus !== APPLICATION_STATUS.S1_APPLICATION_REJECTED\r\n      && (this.currentUser.userRole.name !== USER_ROLES.ROLE_APPLICANT && this.currentUser.userRole.name !== USER_ROLES.ROLE_ADMIN\r\n        && this.currentUser.userRole.name !== USER_ROLES.ROLE_SUPER_ADMIN\r\n        && this.currentUser.userRole.name !== USER_ROLES.ROLE_AD_SPECIALIST) // s2form will be assigned to s1form adspe\r\n    ) {\r\n      Swal.fire({\r\n        text: 'Are you sure you want to open this application? This application will be LOCKED on your account.',\r\n        icon: 'question',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        confirmButtonText: 'Confirm'\r\n      }).then((result) => {\r\n        if (result.value) {\r\n          this.spinner.show();\r\n          this.s2Application.assignedEncoder = this.currentUser;\r\n          // wait for BE\r\n          this.apiService.save(ENDPOINTS.s2ApplicationFormEncoder + ENDPOINTS.takeApplication, this.s2Application).subscribe(\r\n            (res: any) => {\r\n              this.spinner.hide();\r\n              this.sweetAlertService.customSuccessMessage('Application successfully assigned to you.', 3);\r\n              this.router.navigate(['asc/page/application/s2/update/', data.id]);\r\n            }, (err: any) => {\r\n              this.spinner.hide();\r\n            });\r\n        }\r\n      });\r\n    } else {\r\n      this.router.navigate(['asc/page/application/s2/update/', data.id]);\r\n    }\r\n\r\n  }\r\n\r\n  applyApplicationForToa(data: any): void {\r\n    Swal.fire({\r\n      text: 'Are you sure you want to apply this application to TOA?',\r\n      icon: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Confirm'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.spinner.show();\r\n        this.apiService.save(ENDPOINTS.s2ApplicationForm + 'clearance/presentor/submit', data).subscribe(\r\n          (res: any) => {\r\n            this.spinner.hide();\r\n            this.sweetAlertService.customSuccessMessage('Application is applied for TOA successfully');\r\n            this.router.navigateByUrl('asc/page/application/s2/lists');\r\n          }, (err: any) => {\r\n            this.spinner.hide();\r\n          });\r\n      }\r\n    })\r\n  }\r\n\r\n  viewSpecialApplication(data: any): void {\r\n    this.applicationRequest = data;\r\n    this.s2Application = new S2Application();\r\n    this.s2Application.specialClearing = true;\r\n    this.s2Application.applicationForm = data;\r\n\r\n    let dialogRef;\r\n    dialogRef = this.dialog.open(RequestForSpecialClearingComponent, {\r\n      width: '80%',\r\n      height: '85%',\r\n      data: {\r\n        applicationRequest: this.applicationRequest,\r\n        applicationType: 'Request for Special Clearing'\r\n      }\r\n    });\r\n  }\r\n\r\n  doFilterS1MultipleApplicationList(event) { } // in html but not existing in component -- encountered during 'ng serve --aot'\r\n\r\n  getCompany(elementId) { } // in html but not existing in component -- encountered during 'ng serve --aot'\r\n\r\n  doFilter(event) { } // in html but not existing in component -- encountered during 'ng serve --aot'\r\n\r\n  changeTab(evt) {\r\n    if (evt.tab) {\r\n      this.displayedContent = evt.tab.textLabel;\r\n      if (this.displayedContent === 'For Appeal') {\r\n        this.getForDecisionAndComment();\r\n      } else {\r\n        this.getList(this.displayedContent);\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  getForDecisionAndComment() {\r\n    let endpoint = '';\r\n\r\n    // APPEAL\r\n    if (this.isAdSpecialist) {\r\n      endpoint = ENDPOINTS.s2ApplicationFormAdSpe + `custom/search?assignedAdSpecialistId=${this.currentUser.id}&hasOngoingAppeal=true&page=${this.currentPage}&size=${this.pageSize}&submissionType=ORIGINAL`;\r\n    }\r\n    else if (this.isAdmin || this.isSuperAdmin) {\r\n      endpoint = ENDPOINTS.s2ApplicationFormAdmin + `custom/search?hasOngoingAppeal=true&page=${this.currentPage}&size=${this.pageSize}`;\r\n    }\r\n\r\n    this.apiService.findAll(endpoint)\r\n      .subscribe((res: any) => {\r\n        if (res) {\r\n          this.s2ApplicationList = res?.data;\r\n          console.log('Appeal: ', this.s2ApplicationList);\r\n\r\n          this.s2TotalItems = res.totalItems;\r\n          this.dataSource = new MatTableDataSource<S2Application>(this.s2ApplicationList);\r\n          this.dataSource.paginator = this.paginatorFalse;\r\n          this.dataSource.sort = this.sort;\r\n          setTimeout(() => {\r\n            this.spinner.hide();\r\n          }, 1);\r\n        } else {\r\n          this.s2ApplicationList = [];\r\n        }\r\n      }, (err) => {\r\n        setTimeout(() => {\r\n          this.spinner.hide();\r\n        }, 1);\r\n      });\r\n  }\r\n\r\n  sortEvent() {\r\n    this.click++;\r\n    if (this.click % 2 === 0) {\r\n      this.dataSource = new MatTableDataSource<S2Application>(this.s2ApplicationList);\r\n      this.dataSource.paginator = this.paginator;\r\n      return this.dataSource.data.sort((a, b) => a.id - b.id);\r\n    } else {\r\n      this.dataSource = new MatTableDataSource<S2Application>(this.s2ApplicationList);\r\n      this.dataSource.paginator = this.paginator;\r\n      return this.dataSource.data.reverse();\r\n    }\r\n    // for random sort\r\n    // this.dataSource.data.sort(() => Math.random() - 0.5)\r\n  }\r\n\r\n  refresh() {\r\n    this.commonService.sendClickEvent();\r\n    this.startTimer();\r\n  }\r\n\r\n  startTimer() {\r\n    this.interval = setInterval(() => {\r\n      this.timeLeft--;\r\n      if(this.timeLeft > 0){\r\n        this.refreshButtonEnabled = false;\r\n        this.isTimerValueDisplay = true;\r\n      }else{\r\n        this.refreshButtonEnabled = true;\r\n        this.isTimerValueDisplay = false;\r\n        this.timeLeft = 60;\r\n        clearInterval(this.interval)\r\n      }\r\n      this.timerDisplay=this.transform(this.timeLeft)\r\n    },1000)\r\n  }\r\n\r\n  transform(value: number): string {\r\n    const minutes: number = Math.floor(value / 60);\r\n    return minutes + ':' + (value - minutes * 60);\r\n  }\r\n\r\n}\r\n","export default \"<button mat-raised-button class=\\\"button-left button-red\\\">\\r\\n    <span class=\\\"material-icons\\\">new_releases</span> {{referenceCode}} </button>\\r\\n<button mat-raised-button class=\\\"button-right button-red\\\" (click)=\\\"closeDialog()\\\">\\r\\n    <i class=\\\"material-icons color__white\\\">close</i> CLOSE\\r\\n</button>\\r\\n<br>\\r\\n<div class=\\\"mat-elevation-z8\\\">\\r\\n    <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\r\\n\\r\\n        <!-- <ng-container matColumnDef=\\\"referenceCode\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef> Reference Code </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n                {{ element?.referenceCode }}\\r\\n            </td>\\r\\n        </ng-container> -->\\r\\n\\r\\n        <ng-container matColumnDef=\\\"appFormReference\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Application Form Reference </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n                {{ element?.appFormReference }}\\r\\n            </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"movement\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef> Movement </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n                {{ element?.movement.replaceAll('_', ' ') }}\\r\\n            </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"lastUpdate\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef> Date of Action </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n                {{ element?.previousDateTime | date:'MM/dd/yyyy hh:mm a' }}\\r\\n            </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"duration\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef> Duration </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n                {{ element?.duration }}\\r\\n            </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"actionBy\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef> Action By </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n                {{ element?.actionBy }}\\r\\n            </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n    </table>\\r\\n    <div class=\\\"no-record\\\" [hidden]=\\\"dataSource && dataSource?.data?.length > 0\\\">\\r\\n        No record found.\\r\\n    </div>\\r\\n    <mat-paginator [pageSizeOptions]=\\\"[5, 10, 20]\\\" showFirstLastButtons></mat-paginator>\\r\\n\\r\\n</div>\\r\\n\";","import { Component, OnInit, Input, Output, EventEmitter, OnChanges, SimpleChanges, OnDestroy } from '@angular/core';\r\nimport { Company, S1Application, S2Application } from '@models';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { COMMON_FUNCTION, ENDPOINTS } from '@shared';\r\nimport { ApiService, DataStorageService, SweetAlertService } from '@services';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { AddCompanyComponent } from '@company';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { BrandsComponent } from '@maintenance';\r\nimport { AddressService } from '../../../../core/services/address/address.service';\r\nimport { ProductComponent } from '../../maintenance/product/product.component';\r\nimport { MultipleApplication } from 'app/core/models/multiple-application.model';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-client-information',\r\n  templateUrl: './client-information.component.html',\r\n  styleUrls: ['./client-information.component.scss']\r\n})\r\nexport class ClientInformationComponent implements OnInit, OnChanges, OnDestroy {\r\n  @Input() s1Application = new S1Application();\r\n  @Input() s2Application = new S2Application();\r\n  @Input() multipleApplication = new MultipleApplication();\r\n  @Input() isAscUser = false;\r\n  @Input() isDisableFieldOnUpdate = false;\r\n  @Input() company = new Company();\r\n  @Output() checkInactiveAffiliation: EventEmitter<any> = new EventEmitter();\r\n  @Output() isInactiveAffiliation: boolean;\r\n  @Output() hasErrorFields: EventEmitter<any> = new EventEmitter();\r\n\r\n  memberAffiliationList = [];\r\n  companyList = [];\r\n  brandList = [];\r\n  productList = [];\r\n  // categoryList = [];\r\n  regionsList = [];\r\n  provinceList = [];\r\n  cityMunicipalityList = [];\r\n  barangayList = [];\r\n  countryList = [];\r\n\r\n  notInSelection = ['INACTIVE', 'DISAPPROVED'];\r\n\r\n  isNewCompany = false;\r\n  showCompanyAddress = false;\r\n  dataSource: MatTableDataSource<S1Application>;\r\n  clientInformationForm: FormGroup;\r\n\r\n  applicationStage: string;\r\n  fullAddress: string;\r\n  currentUser: any;\r\n  ngModelValue: any;\r\n  private ngUnsubscribe = new Subject();\r\n\r\n  constructor(\r\n    private apiService: ApiService,\r\n    private addressService: AddressService,\r\n    private dialog: MatDialog,\r\n    public dataStorage: DataStorageService,\r\n    private formBuilder: FormBuilder,\r\n    private sweetAlertService: SweetAlertService,\r\n    private route: ActivatedRoute,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    // console.log('Clientinfo');\r\n    this.currentUser = this.dataStorage.getUserAccount();\r\n    this.setFormValidator();\r\n    this.getBrandList();\r\n    this.getCompanyList();\r\n    this.getAffiliationList();\r\n    this.getCountries();\r\n  }\r\n\r\n  ngOnChanges(): void {\r\n    if (this.s1Application.brand) {\r\n      this.setProductList();\r\n    }\r\n  }\r\n\r\n  setFormValidator(): void {\r\n    this.clientInformationForm = this.formBuilder.group({\r\n      brand: ['', Validators.required],\r\n      product: ['', Validators.required],\r\n      category: ['', Validators.required],\r\n      company: [''],\r\n      companyAddress: [''],\r\n      country: [''],\r\n      companyName: [''],\r\n      membersAffiliation: ['', Validators.required],\r\n    });\r\n\r\n    if (this.currentUser?.accountType === 'APPLICANT') {\r\n      this.clientInformationForm.valueChanges.pipe(takeUntil(this.ngUnsubscribe)).subscribe(value => {\r\n        this.checkInvalidFields(value);\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  getBrandList() {\r\n    this.apiService.findAll(ENDPOINTS.activeBrands).subscribe((res: any) => {\r\n      this.brandList = res.responseData.data; // .filter((brand) => !this.notInSelection.includes(brand.status));\r\n      this.productList = [];\r\n    }, (err: any) => {\r\n    });\r\n    if (this.s1Application.brand) {\r\n      this.setProductList();\r\n    }\r\n  }\r\n\r\n  setBrand() {\r\n    this.setProductList();\r\n    if (this.s1Application?.product?.status !== COMMON_FUNCTION.FOR_APPROVAL) {\r\n      this.s1Application.product = null;\r\n    }\r\n  }\r\n\r\n  setProductList() {\r\n    // const endpoint = this.s1Application.brand ? ENDPOINTS.productsByBrand + this.s1Application.brand.id : ENDPOINTS.product;\r\n    this.apiService.findAll(ENDPOINTS.productsByBrand + this.s1Application.brand.id).subscribe((res: any) => {\r\n      this.productList = res.responseData.data.filter((product) =>\r\n        product.status !== COMMON_FUNCTION.DISAPPROVED.toUpperCase()\r\n        && product.status !== COMMON_FUNCTION.INACTIVE.toUpperCase()\r\n      );\r\n    }, (err: any) => {\r\n    });\r\n  }\r\n\r\n  getCompanyList() {\r\n    this.apiService.findAll(ENDPOINTS.activeCompanies).subscribe((res: any) => {\r\n      this.companyList = res.responseData.data; // .filter((company) => !this.notInSelection.includes(company.status));\r\n    }, (err: any) => {\r\n    });\r\n  }\r\n\r\n  getAffiliationList(): void {\r\n    this.apiService.findAll(ENDPOINTS.activeMembersAffiliation).subscribe((res: any) => {\r\n      this.memberAffiliationList = res.responseData.data;\r\n    }, (err: any) => {\r\n    });\r\n  }\r\n\r\n  getCompanyAddress(companyName) {\r\n    this.showCompanyAddress = false;\r\n    this.isNewCompany = false;\r\n    this.apiService.findByParam(ENDPOINTS.company, `custom/search?companyName=${companyName}`).subscribe((res: any) => {\r\n      this.company = res.data[0];\r\n      if (this.company.membersAffiliation.status === 'INACTIVE') {\r\n        this.checkInactiveAffiliationFunction();\r\n        this.sweetAlertService.customErrorMessage(`Cannot proceed with the application. Company's membership affiliation is no longer active. Please contact ASC admin`);\r\n      }\r\n\r\n      if (this.company.status === 'FOR_APPROVAL') {\r\n        this.isNewCompany = true;\r\n      }\r\n\r\n    }, (err: any) => {\r\n    });\r\n  }\r\n\r\n  compareCompanyName(value: any, selected: any): boolean {\r\n    if (value && selected && value.id === selected.id) {\r\n      return value.companyName === selected.companyName;\r\n    }\r\n  }\r\n\r\n  compareBrand(value: any, selected: any): boolean {\r\n    if (value && selected) {\r\n      return value.description === selected.description;\r\n    }\r\n  }\r\n\r\n  compareMembersAffiliation(value: any, selected: any): boolean {\r\n    if (value && selected) {\r\n      return value.description === selected.description;\r\n    }\r\n  }\r\n\r\n  compareProduct(value: any, selected: any): boolean {\r\n    if (value && selected) {\r\n      return value.description === selected.description;\r\n    }\r\n  }\r\n\r\n  // compareCategory(value: any, selected: any): boolean {\r\n  //   if (value && selected) {\r\n  //     return value.description === selected.description;\r\n  //   }\r\n  // }\r\n\r\n  openNewCompanyModal(status = 'new') {\r\n    let dataForModal: any;\r\n    if (status === 'new') {\r\n      dataForModal = {\r\n        isFromModal: true,\r\n        isUpdate: false,\r\n        country: this.dataStorage.getDefaultCountry()\r\n      }\r\n    } else if (status === 'update' && this.s1Application.company) {\r\n      dataForModal = {\r\n        isFromModal: true,\r\n        isUpdate: true,\r\n        company: this.s1Application.company\r\n      }\r\n    }\r\n\r\n    const dialogRef = this.dialog.open(AddCompanyComponent, {\r\n      width: '80%',\r\n      height: '85%',\r\n      data: {\r\n        dataForModal\r\n      }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.isNewCompany = result ? true : false;\r\n      if (result) {\r\n        this.getCompanyList();\r\n        this.company = result;\r\n        this.dataStorage.setS1NewCompany(this.company);\r\n        this.s1Application.company = this.dataStorage.getS1NewCompany();\r\n      }\r\n    });\r\n  }\r\n\r\n  openNewBrandModal(status = 'new') {\r\n    let dataForModal: any;\r\n    if (status === 'new') {\r\n      dataForModal = {\r\n        isFromModal: true,\r\n        isUpdate: false,\r\n      }\r\n    } else if (status === 'update') {\r\n      dataForModal = {\r\n        isFromModal: true,\r\n        isUpdate: true,\r\n        brand: this.s1Application.brand\r\n      }\r\n    }\r\n\r\n    const dialogRef = this.dialog.open(BrandsComponent, {\r\n      width: '80%',\r\n      height: '85%',\r\n      data: {\r\n        dataForModal\r\n      }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this.getBrandList();\r\n        this.s1Application.brand = this.dataStorage.getS1NewBrand();\r\n        this.s1Application.product = this.s1Application.product;\r\n      }\r\n    });\r\n  }\r\n\r\n  openNewProductModal(status = 'new') {\r\n    let dataForModal: any;\r\n    if (status === 'new') {\r\n      dataForModal = {\r\n        isFromModal: true,\r\n        isUpdate: false,\r\n        brand: this.s1Application?.brand,\r\n      }\r\n    } else if (status === 'update') {\r\n      dataForModal = {\r\n        isFromModal: true,\r\n        isUpdate: true,\r\n        product: this.s1Application?.product,\r\n        currentStatus: 'FOR_APPROVAL'\r\n      }\r\n    }\r\n\r\n    const dialogRef = this.dialog.open(ProductComponent, {\r\n      width: '80%',\r\n      height: '85%',\r\n      data: {\r\n        dataForModal\r\n      }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        // this.getBrandList();\r\n        this.setProductList();\r\n        this.s1Application.product = this.dataStorage.getS1NewProduct();\r\n      }\r\n    });\r\n  }\r\n\r\n  compareCountry(value: any, selected: any): boolean {\r\n    if (value && selected) {\r\n      return value.code === selected.code;\r\n    }\r\n  }\r\n\r\n  getCountries() {\r\n    this.apiService.findAll(ENDPOINTS.countries).subscribe((res: any) => {\r\n      this.countryList = res.responseData.data;\r\n      this.dataStorage.setDefaultCountry(res.responseData.data[0]);\r\n    }, (err: any) => {\r\n    });\r\n  }\r\n\r\n  checkInactiveAffiliationFunction() {\r\n    this.isInactiveAffiliation = this.s1Application?.company?.membersAffiliation?.status === 'INACTIVE';\r\n    this.checkInactiveAffiliation.emit();\r\n  }\r\n  \r\n  checkInvalidFields(s1Application: any): void {\r\n    if (s1Application?.company && s1Application?.brand && s1Application?.product) {\r\n      this.hasErrorFields.emit(false)\r\n    } else {\r\n      this.hasErrorFields.emit(true);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.ngUnsubscribe.next();\r\n    this.ngUnsubscribe.complete();\r\n  }\r\n}\r\n","export default \"<form>\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12 title\\\">\\r\\n        <mat-label>\\r\\n          <i class=\\\"material-icons\\\">file_copy</i> S2 APPLICATION - <b>{{applicationTypeTitle}}</b>\\r\\n        </mat-label>\\r\\n        <button class=\\\"button-right\\\" type=\\\"submit\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"refresh()\\\" [disabled]=\\\"!refreshButtonEnabled\\\">\\r\\n          <span class=\\\"material-icons\\\">sync</span>\\r\\n          <label *ngIf=\\\"isTimerValueDisplay\\\"> &nbsp;{{timerDisplay}}</label>\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n    <hr>\\r\\n\\r\\n    <div *ngIf=\\\"applicationTypeTitle === 'INDIVIDUAL'\\\">\\r\\n      <ng-container *ngTemplateOutlet=\\\"individualS2ApplicationList\\\"></ng-container>\\r\\n    </div>\\r\\n    <div\\r\\n      *ngIf=\\\"(currentUser.userRole.name === 'ROLE_APPLICANT' || currentUser.userRole.name === 'ROLE_ADMIN' || currentUser.userRole.name === 'ROLE_SUPER_ADMIN') && viewApplicationType === 'special'\\\">\\r\\n      <ng-container *ngTemplateOutlet=\\\"specialS1ApplicationList\\\"></ng-container>\\r\\n    </div>\\r\\n\\r\\n    <ng-template #individualS2ApplicationList>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-lg-9\\\">\\r\\n          <div class=\\\" search\\\" fxLayout fxLayoutAlign=\\\"center center\\\">\\r\\n            <mat-form-field class=\\\"col-md-9\\\" appearance=\\\"outline\\\">\\r\\n              <input matInput type=\\\"text\\\" (keyup)=\\\"doFilter($event.target.value)\\\" placeholder=\\\"Search\\\">\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <!-- <div class=\\\"col\\\">\\r\\n          <div class=\\\"legend-content\\\">\\r\\n            <table class=\\\"legend-table\\\">\\r\\n              <tr>\\r\\n                <td><div class=\\\"legend-box legend-blue\\\"></div> ORIGINAL</td>\\r\\n              </tr>\\r\\n              <tr>\\r\\n                <td><div class=\\\"legend-box legend-green\\\"></div> REVISION</td>\\r\\n              </tr>\\r\\n              <tr>\\r\\n                <td><div class=\\\"legend-box legend-orange\\\"></div> FOR COMPLIANCE</td>\\r\\n              </tr>\\r\\n            </table>\\r\\n          </div>\\r\\n        </div> -->\\r\\n\\r\\n\\r\\n      </div><br>\\r\\n\\r\\n      <mat-tab-group mat-align-tabs=\\\"start\\\" (selectedTabChange)=\\\"changeTab($event)\\\">\\r\\n        <mat-tab label=\\\"Original\\\">\\r\\n          <ng-template mat-tab-label>\\r\\n            Original\\r\\n            <div matBadge={{applicationCountS2.countOriginal}} class=\\\"c-badge\\\" matBadgeColor=\\\"warn\\\"></div>\\r\\n          </ng-template>\\r\\n        </mat-tab>\\r\\n        <mat-tab label=\\\"Compliance\\\">\\r\\n          <ng-template mat-tab-label>\\r\\n            Compliance\\r\\n            <div matBadge={{applicationCountS2.countCompliance}} class=\\\"c-badge\\\" matBadgeColor=\\\"warn\\\"></div>\\r\\n          </ng-template>\\r\\n        </mat-tab>\\r\\n        <mat-tab label=\\\"TOA\\\">\\r\\n          <ng-template mat-tab-label>\\r\\n            TOA\\r\\n            <div matBadge={{applicationCountS2.countToa}} class=\\\"c-badge\\\" matBadgeColor=\\\"warn\\\"></div>\\r\\n          </ng-template>\\r\\n        </mat-tab>\\r\\n        <mat-tab label=\\\"For Appeal\\\" *ngIf=\\\"isAdSpecialist || isAdmin || isSuperAdmin\\\">\\r\\n          <ng-template mat-tab-label>\\r\\n            Released Appeal\\r\\n            <div matBadge={{releasedAppealTabDataCount}} class=\\\"c-badge\\\" matBadgeColor=\\\"warn\\\"></div>\\r\\n          </ng-template>\\r\\n        </mat-tab>\\r\\n      </mat-tab-group>\\r\\n\\r\\n      <div class=\\\"mat-elevation-z8 fields main-table \\\" fxLayout fxLayoutAlign=\\\"center center\\\">\\r\\n        <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"referenceCode\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef > REFERENCE CODE <mat-icon class=\\\"cursor\\\" (click)=\\\"sortEvent()\\\" style=\\\"color:black\\\">swap_vert</mat-icon></th>\\r\\n            <td mat-cell *matCellDef=\\\"let element; let i = index\\\" (click)=\\\"viewApplication(element)\\\"\\r\\n             [ngStyle]=\\\"{'pointer-events': ((i != 0 && currentUser.userRole.name === 'ROLE_ENCODER') ? 'none' : ''),\\r\\n                  'background-color':\\r\\n                  ((element?.submissionType=='ORIGINAL'&&element.decisionStatus!='INCOMPLETE') ? 'lightblue' :\\r\\n                  ((element?.submissionType=='FOR COMPLIANCE'||element.decisionStatus=='INCOMPLETE'||element.submissionType=='COMPLIANCE') ? '#ebd79b' :\\r\\n                  (element?.submissionType=='REVISION' ? '#8fcf8f' : '' )))}\\\">\\r\\n              {{ element?.submissionType === 'ORIGINAL' && element?.internalStatus=='S2_APPLICATION_REJECTED' ? element?.referenceCodeRejected : element?.applicationForm?.referenceCode | uppercase}}\\r\\n            </td>\\r\\n          </ng-container>\\r\\n          <ng-container matColumnDef=\\\"typeOfApplication\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef > TYPE OF APPLICATION </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element; let i = index\\\" (click)=\\\"viewApplication(element)\\\"\\r\\n              [ngStyle]=\\\"{'pointer-events': ((i != 0 && currentUser.userRole.name === 'ROLE_ENCODER') ? 'none' : ''),\\r\\n                  'background-color': ((currentUser.userRole.name  === 'ROLE_ENCODER' && i > 0 ? '#beb8b8' : ''))}\\\">\\r\\n              <!--  'background-color':\\r\\n                  ((element?.applicationForm?.applicationType.description=='Regular') ? 'lightblue' :\\r\\n                  (element?.applicationForm?.applicationType.description=='Batch') ? '#8fcf8f' :\\r\\n                  (element?.applicationForm?.applicationType.description=='Special Screening') ? '#fca402' :\\r\\n                  (element?.applicationForm?.applicationType.description=='Special Clearing') ? '#ff8a7b' :\\r\\n                  (element?.applicationForm?.applicationType.description=='Special Screening and Clearing') ? 'violet' :\\r\\n                  (element?.applicationForm?.applicationType.description=='For Presentation') ? 'yellow' :\\r\\n                  (currentUser.userRole.name === 'ROLE_ENCODER'&&i>0 ? '#beb8b8' : ''))}\\\"> -->\\r\\n              {{ element?.applicationForm?.applicationType.description.replaceAll('_',' ') | uppercase }}\\r\\n              {{ element?.specialClearing ? '- SPECIAL CLEARING' : '' }}\\r\\n              {{ element?.hasToa ? '- TOA' : '' }}\\r\\n            </td>\\r\\n          </ng-container>\\r\\n          <ng-container matColumnDef=\\\"companyName\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef > COMPANY NAME </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element; let i = index\\\" (click)=\\\"viewApplication(element)\\\"\\r\\n              [ngStyle]=\\\"{'pointer-events': ((i != 0 && currentUser.userRole.name === 'ROLE_ENCODER') ? 'none' : ''),\\r\\n                  'background-color': ((currentUser.userRole.name === 'ROLE_ENCODER' && i > 0? '#beb8b8' : ''))}\\\">\\r\\n              {{ element?.applicationForm?.company.companyName }} </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"brand\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef > BRAND </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element; let i = index\\\" (click)=\\\"viewApplication(element)\\\"\\r\\n              [ngStyle]=\\\"{'pointer-events': ((i != 0 && currentUser.userRole.name === 'ROLE_ENCODER') ? 'none' : ''),\\r\\n                  'background-color': ((currentUser.userRole.name === 'ROLE_ENCODER' && i > 0? '#beb8b8' : ''))}\\\">\\r\\n              {{ element?.applicationForm?.brand.description }} </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"typeOfMedium\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef > TYPE OF MEDIUM </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element; let i = index\\\" (click)=\\\"viewApplication(element)\\\"\\r\\n              [ngStyle]=\\\"{'pointer-events': ((i != 0 && currentUser.userRole.name === 'ROLE_ENCODER') ? 'none' : ''),\\r\\n                  'background-color': ((currentUser.userRole.name === 'ROLE_ENCODER' && i > 0? '#beb8b8' : ''))}\\\">\\r\\n              {{ element?.applicationForm?.typeOfMedium }} </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <!-- [ngStyle]=\\\"{'pointer-events': ((i != 0 && (currentUser.userRole.name === 'ROLE_ENCODER')) ? 'none' : ''),\\r\\n                  'background-color': ((currentUser.userRole.name === 'ROLE_ENCODER'&&i>0 ? '#beb8b8' : ''))}\\\" -->\\r\\n          <ng-container matColumnDef=\\\"status\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef > APPLICATION STATUS </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element; let i = index\\\" (click)=\\\"viewApplication(element)\\\"\\r\\n              [ngStyle]=\\\"{'pointer-events': ((i != 0 && currentUser.userRole.name === 'ROLE_ENCODER') ? 'none' : ''),\\r\\n                  'background-color': ((currentUser.userRole.name === 'ROLE_ENCODER' && i > 0? '#beb8b8' : ''))}\\\">\\r\\n              {{ element?.externalStatus?.replaceAll('_',' ') | uppercase }} </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"internalStatus\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef > INTERNAL STATUS </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element; let i = index\\\" class=\\\"applicantStatus\\\"\\r\\n              [ngStyle]=\\\"{'pointer-events': ((i != 0 && currentUser.userRole.name === 'ROLE_ENCODER') ? 'none' : ''),\\r\\n                  'background-color': ((currentUser.userRole.name === 'ROLE_ENCODER' && i > 0? '#beb8b8' : ''))}\\\">\\r\\n              {{ element?.internalStatus?.replaceAll('_',' ') | uppercase }} </td>\\r\\n          </ng-container>\\r\\n          <!-- For ASC Users only -->\\r\\n          <!-- <ng-container matColumnDef=\\\"ascStatus\\\">\\r\\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> ASC STATUS </th>\\r\\n                  <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getCompany(element?.id)\\\"> {{ element?.ascStatus }} </td>\\r\\n                </ng-container> -->\\r\\n\\r\\n          <ng-container matColumnDef=\\\"icon\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef > </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element; let i = index\\\" class=\\\"icon\\\"\\r\\n              [hidden]=\\\"currentUser?.userRole?.name != 'ROLE_APPLICANT'\\\"\\r\\n              [ngStyle]=\\\"{'pointer-events': ((i != 0 && currentUser.userRole.name === 'ROLE_ENCODER') ? 'none' : ''),\\r\\n                  'background-color': ((currentUser.userRole.name != 'ROLE_APPLICANT'&&currentUser.userRole.name != 'ROLE_AD_SPECIALIST'&&i>0 ? '#beb8b8' : ''))}\\\">\\r\\n\\r\\n                  <!-- <button mat-raised-button class=\\\"button-red\\\" matTooltip=\\\"Submit S2 for Clearance \\\"\\r\\n                    (click)=\\\"applyApplicationForToa(element)\\\" *ngIf=\\\"currentUser?.userRole?.name=='ROLE_APPLICANT'&&element?.\\r\\n                        internalStatus=='APPROVED' || element?.internalStatus=='S2_APPLICATION_VERIFIED_BY_AD_SPE'\\r\\n                        || element?.internalStatus=='RE_SUBMITTED_S2_APPLICATION_VERIFIED_BY_AD_SPE'\\\">\\r\\n                    <i class=\\\"material-icons color__white\\\">queue_play_next</i>\\r\\n                  </button> -->\\r\\n\\r\\n                  <button mat-raised-button class=\\\"button-red\\\" matTooltip=\\\"Submit For Compliance\\\"\\r\\n                  (click)=\\\"viewApplication(element)\\\"\\r\\n                  *ngIf=\\\"(currentUser?.userRole?.name=='ROLE_APPLICANT' && element?.decisionStatus=='INCOMPLETE' &&\\r\\n                          (element?.internalStatus=='INCOMPLETE' || element?.internalStatus=='S2_APPLICATION_VERIFIED_BY_AD_SPE' || element?.internalStatus=='RE_SUBMITTED_S2_APPLICATION_VERIFIED_BY_AD_SPE' ||\\r\\n                          element?.internalStatus=='S2_APPLICATION_REJECTED'))\\\">\\r\\n                  <i class=\\\"material-icons\\\">warning_amber</i>\\r\\n                </button>\\r\\n\\r\\n              <!--  <button mat-raised-button class=\\\"button-red\\\" matTooltip=\\\"Submit For Compliance\\\" *ngIf=\\\"currentUser?.userRole?.name=='ROLE_APPLICANT'&&element?.\\r\\n                    internalStatus=='RE_SUBMITTED_S2_APPLICATION_VERIFIED_BY_AD_SPE' || element?.internalStatus=='S2_APPLICATION_VERIFIED_BY_AD_SPE'\\r\\n                    || element?.internalStatus=='APPROVED'\\\">\\r\\n                    <i class=\\\"material-icons color__white\\\">warning_amber</i>\\r\\n                    </button>-->\\r\\n            </td>\\r\\n          </ng-container>\\r\\n\\r\\n\\r\\n          <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n          <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n        </table>\\r\\n        <div class=\\\"no-record\\\" [hidden]=\\\"dataSource && dataSource?.data?.length > 0\\\">\\r\\n          No record found.\\r\\n        </div>\\r\\n        <!-- <mat-paginator [pageSizeOptions]=\\\"[10, 20, 50]\\\" showFirstLastButtons></mat-paginator> -->\\r\\n        <mat-paginator [pageSize]=\\\"pageSize\\\" [pageIndex]=\\\"pageNo\\\" [length]=\\\"s2TotalItems\\\"\\r\\n          [pageSizeOptions]=\\\"pageSizeOptions\\\" (page)=\\\"pageEvents($event)\\\">\\r\\n        </mat-paginator>\\r\\n\\r\\n      </div>\\r\\n      <!-- </mat-tab> -->\\r\\n    </ng-template>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n    <ng-template #specialS1ApplicationList>\\r\\n        <b *ngIf=\\\"currentUser.userRole.name === 'ROLE_APPLICANT'\\\"><b class=\\\"material-icons info-msg\\\">error_outline</b> This\\r\\n          page contain list of Request for Approval and allows you to create S2 application from approved request only.</b>\\r\\n        <b *ngIf=\\\"currentUser.userRole.name === 'ROLE_ADMIN' || currentUser?.userRole.name === 'ROLE_SUPER_ADMIN' \\\"><b\\r\\n            class=\\\"material-icons info-msg\\\">error_outline</b> This page\\r\\n            contain list of Request for Approval and allows you to approve or disapprove request.</b>\\r\\n      <div class=\\\"row\\\" fxLayout fxLayoutAlign=\\\"center center\\\">\\r\\n        <mat-form-field class=\\\"col-md-8\\\" appearance=\\\"outline\\\">\\r\\n          <mat-label><i class=\\\"material-icons\\\">search</i> Search Applications</mat-label>\\r\\n          <input matInput type=\\\"text\\\" (keyup)=\\\"doFilterS1MultipleApplicationList($event.target.value)\\\">\\r\\n        </mat-form-field>\\r\\n\\r\\n        <div class=\\\"col\\\">\\r\\n          <div class=\\\"legend-content\\\">\\r\\n            <table class=\\\"legend-table\\\">\\r\\n              <tr>\\r\\n                <td>\\r\\n                  <div class=\\\"legend-box legend-orange\\\"></div> FOR APPROVAL\\r\\n                </td>\\r\\n              </tr>\\r\\n              <tr>\\r\\n                <td>\\r\\n                  <div class=\\\"legend-box legend-green\\\"></div> APPROVED\\r\\n                </td>\\r\\n              </tr>\\r\\n              <tr>\\r\\n                <td>\\r\\n                  <div class=\\\"legend-box legend-red\\\"></div> DISAPPROVED\\r\\n                </td>\\r\\n              </tr>\\r\\n              <!-- <tr>\\r\\n                    <td>\\r\\n                      <div class=\\\"legend-box legend-pink\\\"></div> REJECTED\\r\\n                    </td>\\r\\n                  </tr> -->\\r\\n            </table>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <!-- <div class=\\\"row\\\">\\r\\n\\r\\n            <div class=\\\"col-md-2\\\">LEGEND:</div>\\r\\n            <div class=\\\"col-md-1 legend legend-orange\\\">FOR APPROVAL</div>\\r\\n            <div class=\\\"col-md-1 legend legend-green\\\">APPROVED</div>\\r\\n            <div class=\\\"col-md-1 legend legend-red\\\">DISAPPROVED</div>\\r\\n            <div class=\\\"col-md-1\\\" style=\\\"background-color:lightpink;border-radius:8px;width:20%;\\\">Rejected</div>\\r\\n          </div> -->\\r\\n      <br>\\r\\n\\r\\n      <div class=\\\"mat-elevation-z8 fields\\\">\\r\\n        <table mat-table [dataSource]=\\\"s2SpecialApplicationDataSource\\\" matSort>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"adTitle\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> AD TITLE </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"viewSpecialApplication(element)\\\">\\r\\n              {{ element?.adTitle | uppercase }} </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"typeOfApplication\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef > TYPE OF APPLICATION </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"viewSpecialApplication(element)\\\">\\r\\n              {{ element?.applicationType?.description.replaceAll('_',' ') | uppercase }}\\r\\n              {{ element?.hasSpecialClearing ? '- SPECIAL CLEARING' : ''}}\\r\\n              {{ element?.hasToa ? '- TOA' : '' }} </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"companyName\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef > COMPANY NAME </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"viewSpecialApplication(element)\\\">\\r\\n              {{ element?.company?.companyName | uppercase }} </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <!-- <ng-container matColumnDef=\\\"membersAffiliation\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> MEMBER'S AFFILIATION </th>\\r\\n                <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"viewSpecialApplication(element)\\\">\\r\\n                  {{ element?.membersAffiliation?.description | uppercase }} </td>\\r\\n              </ng-container> -->\\r\\n\\r\\n          <ng-container matColumnDef=\\\"brand\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef> BRAND </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"viewSpecialApplication(element)\\\">\\r\\n              {{ element?.brand?.description | uppercase }} </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"status\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef > APPLICATION STATUS </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"applicantStatus\\\" [ngStyle]=\\\"{'background-color':\\r\\n                element?.status === 'FOR_APPROVAL' ? '#ebd79b' :\\r\\n                element?.status === 'APPROVED' ? '#8fcf8f' :\\r\\n                element?.status === 'DISAPPROVED' ? '#ebb89b' : '' }\\\" (click)=\\\"viewSpecialApplication(element)\\\">\\r\\n              {{ element?.status?.replaceAll('_',' ') | uppercase }} </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <tr mat-header-row *matHeaderRowDef=\\\"s2SpecialApplicationDisplayedColumns\\\"></tr>\\r\\n          <tr mat-row *matRowDef=\\\"let row; columns: s2SpecialApplicationDisplayedColumns;\\\"></tr>\\r\\n        </table>\\r\\n        <div class=\\\"no-record\\\"\\r\\n          [hidden]=\\\"s2SpecialApplicationDataSource && s2SpecialApplicationDataSource?.data?.length > 0\\\">\\r\\n          No record found.\\r\\n        </div>\\r\\n        <!-- <mat-paginator [pageSizeOptions]=\\\"[10, 20, 50]\\\" showFirstLastButtons></mat-paginator> -->\\r\\n        <mat-paginator [pageSize]=\\\"pageSize\\\" [pageIndex]=\\\"pageNo\\\" [length]=\\\"s2SpecialTotalItems\\\"\\r\\n          [pageSizeOptions]=\\\"pageSizeOptions\\\" (page)=\\\"pageEvents($event)\\\">\\r\\n        </mat-paginator>\\r\\n      </div>\\r\\n    </ng-template>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n    <!-- FOR CLEARANCE TABLE -->\\r\\n    <!-- <mat-tab label=\\\"FOR CLEARANCE\\\">\\r\\n          <div class=\\\"mat-elevation-z8 fields toa-tab\\\">\\r\\n            <table mat-table [dataSource]=\\\"forClearanceDataSource\\\" matSort>\\r\\n\\r\\n                <ng-container matColumnDef=\\\"referenceCode\\\">\\r\\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> REFERENCE CODE </th>\\r\\n                  <td mat-cell *matCellDef=\\\"let element; let i = index\\\" (click)=\\\"viewApplication(element)\\\"\\r\\n                  [ngStyle]=\\\"{'pointer-events': ((i != 0 && (currentUser.userRole.name === 'ROLE_ENCODER')) ? 'none' : ''),\\r\\n                  'background-color': ((currentUser.userRole.name === 'ROLE_ENCODER'&&i>0 ? '#beb8b8' : ''))}\\\"> {{ element?.applicationForm?.referenceCode }} </td>\\r\\n                </ng-container>\\r\\n                <ng-container matColumnDef=\\\"typeOfApplication\\\">\\r\\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> TYPE OF APPLICATION </th>\\r\\n                  <td mat-cell *matCellDef=\\\"let element; let i = index\\\" (click)=\\\"viewApplication(element)\\\"\\r\\n                  [ngStyle]=\\\"{'pointer-events': ((i != 0 && (currentUser.userRole.name === 'ROLE_ENCODER')) ? 'none' : ''),\\r\\n                  'background-color': ((currentUser.userRole.name === 'ROLE_ENCODER'&&i>0 ? '#beb8b8' : ''))}\\\"> {{ element?.applicationForm?.applicationType.description }} </td>\\r\\n                </ng-container>\\r\\n                <ng-container matColumnDef=\\\"companyName\\\">\\r\\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> COMPANY NAME </th>\\r\\n                  <td mat-cell *matCellDef=\\\"let element; let i = index\\\" (click)=\\\"viewApplication(element)\\\"\\r\\n                  [ngStyle]=\\\"{'pointer-events': ((i != 0 && (currentUser.userRole.name === 'ROLE_ENCODER')) ? 'none' : ''),\\r\\n                  'background-color': ((currentUser.userRole.name === 'ROLE_ENCODER'&&i>0 ? '#beb8b8' : ''))}\\\"> {{ element?.applicationForm?.company.companyName }} </td>\\r\\n                </ng-container>\\r\\n\\r\\n                <ng-container matColumnDef=\\\"brand\\\">\\r\\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> BRAND </th>\\r\\n                  <td mat-cell *matCellDef=\\\"let element; let i = index\\\" (click)=\\\"viewApplication(element)\\\"\\r\\n                  [ngStyle]=\\\"{'pointer-events': ((i != 0 && (currentUser.userRole.name === 'ROLE_ENCODER')) ? 'none' : ''),\\r\\n                  'background-color': ((currentUser.userRole.name === 'ROLE_ENCODER'&&i>0 ? '#beb8b8' : ''))}\\\"> {{ element?.applicationForm?.brand.description }} </td>\\r\\n                </ng-container>\\r\\n\\r\\n                <ng-container matColumnDef=\\\"typeOfMedium\\\">\\r\\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> TYPE OF MEDIUM </th>\\r\\n                  <td mat-cell *matCellDef=\\\"let element; let i = index\\\" (click)=\\\"viewApplication(element)\\\"\\r\\n                  [ngStyle]=\\\"{'pointer-events': ((i != 0 && (currentUser.userRole.name === 'ROLE_ENCODER')) ? 'none' : ''),\\r\\n                  'background-color': ((currentUser.userRole.name === 'ROLE_ENCODER'&&i>0 ? '#beb8b8' : ''))}\\\"> {{ element?.applicationForm?.refTypeOfMedium }} </td>\\r\\n                </ng-container>\\r\\n\\r\\n                <ng-container matColumnDef=\\\"status\\\">\\r\\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> APPLICATION STATUS </th>\\r\\n                  <td mat-cell *matCellDef=\\\"let element; let i = index\\\" (click)=\\\"viewApplication(element)\\\"\\r\\n                  [ngStyle]=\\\"{'pointer-events': ((i != 0 && (currentUser.userRole.name === 'ROLE_ENCODER')) ? 'none' : ''),\\r\\n                  'background-color': ((currentUser.userRole.name === 'ROLE_ENCODER'&&i>0 ? '#beb8b8' : ''))}\\\"> {{ element?.internalStatus?.replaceAll('_',' ') | uppercase }} </td>\\r\\n                </ng-container> -->\\r\\n\\r\\n    <!-- For ASC Users only -->\\r\\n    <!-- <ng-container matColumnDef=\\\"ascStatus\\\">\\r\\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> ASC STATUS </th>\\r\\n                  <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getCompany(element?.id)\\\"> {{ element?.ascStatus }} </td>\\r\\n                </ng-container> -->\\r\\n\\r\\n    <!-- <ng-container matColumnDef=\\\"icon\\\">\\r\\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> </th>\\r\\n                  <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"icon\\\">\\r\\n                    <button mat-raised-button class=\\\"button-red\\\" matTooltip=\\\"Submit S2 for Clearance\\\" (click)=\\\"applyApplicationForToa(element)\\\" *ngIf=\\\"currentUser?.userRole?.name=='ROLE_APPLICANT'&&element?.\\r\\n                    internalStatus=='RE_SUBMITTED_S2_APPLICATION_VERIFIED_BY_AD_SPE' || element?.internalStatus=='S2_APPLICATION_VERIFIED_BY_AD_SPE'\\r\\n                    || element?.internalStatus=='APPROVED'\\\">\\r\\n                      <i class=\\\"material-icons\\\">queue_play_next</i>\\r\\n                    </button> -->\\r\\n\\r\\n    <!-- <button mat-raised-button class=\\\"button-red\\\" matTooltip=\\\"Submit For Compliance\\\" (click)=\\\"viewApplication(element)\\\" *ngIf=\\\"currentUser?.userRole?.name=='ROLE_APPLICANT'&&element?.\\r\\n                    internalStatus=='RE_SUBMITTED_S2_APPLICATION_VERIFIED_BY_AD_SPE' || element?.internalStatus=='S2_APPLICATION_VERIFIED_BY_AD_SPE'\\r\\n                    || element?.internalStatus=='APPROVED'\\\"><i class=\\\"material-icons color__white\\\">warning_amber</i>\\r\\n                    </button> -->\\r\\n    <!-- </td>\\r\\n                </ng-container> -->\\r\\n\\r\\n\\r\\n    <!-- <tr mat-header-row *matHeaderRowDef=\\\"forClearanceDisplayedColumns\\\"></tr>\\r\\n                <tr mat-row *matRowDef=\\\"let row; columns: forClearanceDisplayedColumns;\\\"></tr>\\r\\n            </table>\\r\\n            <div class=\\\"no-record\\\" [hidden]=\\\"forClearanceDataSource && forClearanceDataSource?.data?.length > 0\\\">\\r\\n              No record found.\\r\\n            </div>\\r\\n            <mat-paginator [pageSizeOptions]=\\\"[10, 20, 50]\\\" showFirstLastButtons></mat-paginator>\\r\\n\\r\\n          </div>\\r\\n        </mat-tab> -->\\r\\n    <!-- </mat-tab-group> -->\\r\\n\";","export default \"<div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-12 title\\\">\\r\\n            <mat-label>\\r\\n                <mat-icon>view_list</mat-icon> <b>Schedule of Fees - Special Application</b>\\r\\n            </mat-label>\\r\\n        </div>\\r\\n    </div>\\r\\n    <hr>\\r\\n    <br>\\r\\n    <div class=\\\"row col-md-12\\\">\\r\\n        <div class=\\\"row col-md-6\\\">\\r\\n            <div>\\r\\n                <mat-label>Proof of Payment: &nbsp;&nbsp;&nbsp;<span>PDF file only!</span></mat-label><br>\\r\\n                <input class=\\\"file-upload\\\" type=\\\"file\\\" [(ngModel)]=\\\"attachment\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n                    accept=\\\".pdf\\\" (change)=\\\"selectFile($event)\\\">\\r\\n            </div>\\r\\n            <div *ngIf=\\\"previewDocument===true\\\">\\r\\n                <div class=\\\"file-upload\\\">\\r\\n                    <object [data]=\\\"safeURLProofOfPayment\\\" type=\\\"application/pdf\\\" width=\\\"100%\\\" height=\\\"500\\\">\\r\\n                        <iframe [src]=\\\"safeURLProofOfPayment\\\" width=\\\"100%\\\" height=\\\"500\\\">\\r\\n                            <p>This browser does not support PDF!</p>\\r\\n                        </iframe>\\r\\n                    </object>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"row col-md-6\\\">\\r\\n\\r\\n            <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label>Reference Code</mat-label>\\r\\n                <input matInput [value]=\\\"s2Application?.applicationForm?.referenceCode\\\" readonly>\\r\\n            </mat-form-field>\\r\\n\\r\\n            <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label>Advertiser</mat-label>\\r\\n                <input matInput name=\\\"companyName\\\" [value]=\\\"s2Application?.applicationForm?.company?.companyName\\\"\\r\\n                    readonly>\\r\\n            </mat-form-field>\\r\\n\\r\\n            <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label>Ad Title - Medium (Length)</mat-label>\\r\\n                <input matInput name=\\\"refTypeOfMedium\\\"\\r\\n                    [value]=\\\"s2Application?.applicationForm?.adTitle + ' - ' + typeOfMediumDisplay\\\" readonly>\\r\\n            </mat-form-field>\\r\\n\\r\\n            <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label>Vatable Sales</mat-label>\\r\\n                <input matInput class=\\\"numbers-input\\\" name=\\\"amount\\\"\\r\\n                    [value]=\\\"paymentDetails?.basicRate | number : '1.2-2'\\\" readonly>\\r\\n            </mat-form-field>\\r\\n\\r\\n\\r\\n            <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label>VAT</mat-label>\\r\\n                <input matInput class=\\\"numbers-input\\\" name=\\\"amount\\\" [value]=\\\"paymentDetails?.vat | number : '1.2-2'\\\"\\r\\n                    readonly>\\r\\n            </mat-form-field>\\r\\n\\r\\n            <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label>Total Sales (VAT Inclusive)</mat-label>\\r\\n                <input matInput class=\\\"numbers-input total\\\" name=\\\"amount\\\"\\r\\n                    [value]=\\\"paymentDetails?.amountDue | number : '1.2-2'\\\" readonly>\\r\\n            </mat-form-field>\\r\\n\\r\\n            <hr>\\r\\n\\r\\n            <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label>Payment Mode <span class=\\\"required-field\\\">\\r\\n                        <mat-icon>notification_important</mat-icon>\\r\\n                    </span></mat-label>\\r\\n                <mat-select [(ngModel)]=\\\"paymentType\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                    <mat-option *ngFor=\\\"let i of paymentTypeList\\\" [value]=\\\"i\\\" name=\\\"paymentType\\\">\\r\\n                        {{i?.paymentDescription | uppercase}}\\r\\n                    </mat-option>\\r\\n                </mat-select>\\r\\n            </mat-form-field>\\r\\n\\r\\n            <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label>Remarks</mat-label>\\r\\n                <textarea matInput name=\\\"remarks\\\" [(ngModel)]=\\\"payment.remarks\\\"></textarea>\\r\\n            </mat-form-field>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-10\\\"><span *ngIf=\\\"paymentType && paymentDetails?.amountDue === 0\\\">\\r\\n                <i>Please contact ASC admin to check the Maintenance of Fees.</i></span></div>\\r\\n        <div class=\\\"col-md-2\\\">\\r\\n            <button mat-raised-button class=\\\"button-red\\\"\\r\\n                [disabled]=\\\"!paymentType || !previewDocument || paymentDetails?.amountDue === 0\\\"\\r\\n                (click)=\\\"uploadDocument(s2Application)\\\">\\r\\n                <i class=\\\"material-icons color__white\\\">task_alt</i> SUBMIT\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\";","export default \"<form>\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <!-- <div class=\\\"spinner\\\">\\r\\n      <ngx-spinner bdColor=\\\"rgba(0, 0, 0, 0.8)\\\" size=\\\"large\\\" color=\\\"#fff\\\" type=\\\"line-spin-fade\\\" [fullScreen]=\\\"false\\\">\\r\\n        <p> {{spinnerMessage}} </p>\\r\\n      </ngx-spinner>\\r\\n    </div> -->\\r\\n    <!-- <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12 title\\\">\\r\\n        <mat-label>\\r\\n          <mat-icon>list_alt</mat-icon> S2 APPLICATION\\r\\n        </mat-label>\\r\\n      </div>\\r\\n    </div> -->\\r\\n    <table>\\r\\n      <tr>\\r\\n        <td class=\\\"details-title\\\">\\r\\n          Reference Code:\\r\\n        </td>\\r\\n        <td class=\\\"details\\\">\\r\\n          <span>{{ s2Application?.externalStatus=='S2_APPLICATION_REJECTED' ? s2Application?.referenceCodeRejected :\\r\\n            s2Application?.applicationForm?.referenceCode | uppercase}}</span>\\r\\n        </td>\\r\\n        <td>\\r\\n          <div class=\\\"action-buttons\\\">\\r\\n            <button mat-button class=\\\"button-red\\\" (click)=\\\"accordion.openAll()\\\">\\r\\n              <mat-icon>open_in_full</mat-icon>\\r\\n            </button>\\r\\n            &nbsp;\\r\\n            <button mat-button class=\\\"button-red\\\" (click)=\\\"accordion.closeAll()\\\">\\r\\n              <mat-icon>close_fullscreen</mat-icon>\\r\\n            </button>\\r\\n          </div>\\r\\n          <button class=\\\"button-right button-red\\\" mat-raised-button [routerLink]=\\\"['/asc/page/application/s2/lists']\\\">\\r\\n            <mat-icon>list</mat-icon> VIEW APPLICATIONS\\r\\n          </button>\\r\\n        </td>\\r\\n      </tr>\\r\\n      <tr>\\r\\n        <td class=\\\"details-title\\\">\\r\\n          Status:\\r\\n        </td>\\r\\n        <td class=\\\"details\\\">\\r\\n          <span>{{s2Application?.externalStatus?.replaceAll('_',' ') | uppercase}}</span>\\r\\n        </td>\\r\\n        <!-- <td class=\\\"action-buttons\\\" *ngIf=\\\"s2Application?.internalStatus=='APPROVED' || s2Application?.internalStatus=='RE_SUBMITTED_S2_APPLICATION_VERIFIED_BY_AD_SPE' || s2Application?.internalStatus=='FOR_CLEARANCE_S2_APPLICATION' ||\\r\\n        s2Application?.internalStatus=='FOR_CLEARANCE_S2_APPLICATION_VERIFIED_BY_ENCODER'\\\"><span\\r\\n            class=\\\"badge bg-warning text-dark\\\">\\r\\n            <i class=\\\"material-icons\\\">domain_verification</i> APPLICATION FOR TOA/CLEARANCE</span></td> -->\\r\\n        <td class=\\\"action-buttons\\\" *ngIf=\\\"s2Application?.amount && s2Application?.submissionType === 'ORIGINAL'\\\">\\r\\n          <span class=\\\"badge bg-warning text-dark\\\">\\r\\n            <i class=\\\"material-icons\\\">paid</i> {{s2Application?.paymentStatus?.replaceAll('_',' ')}} : ₱ {{ s2Application?.amount }} </span>\\r\\n        </td>\\r\\n        <td class=\\\"action-buttons\\\" *ngIf=\\\"s2Application?.specialClearing\\\">\\r\\n          <span class=\\\"badge bg-warning text-dark\\\">\\r\\n            <i class=\\\"material-icons\\\">domain_verification</i> SPECIAL CLEARING</span>\\r\\n        </td>\\r\\n        <td class=\\\"action-buttons\\\" *ngIf=\\\"s2Application?.hasToa\\\">\\r\\n          <span class=\\\"badge bg-warning text-dark\\\">\\r\\n            <i class=\\\"material-icons\\\">domain_verification</i> Apply for TOA</span>\\r\\n        </td>\\r\\n        <td class=\\\"action-buttons\\\" *ngIf=\\\"s2Application?.decisionStatus==='APPROVED'\\\">\\r\\n          <span class=\\\"badge bg-warning text-dark\\\">\\r\\n            <i class=\\\"material-icons\\\">check</i> Valid Until: {{ s2Application?.validityDate | date:'MM/dd/yyyy'}}</span>\\r\\n        </td>\\r\\n      </tr>\\r\\n    </table>\\r\\n    <hr>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n        <button mat-raised-button class=\\\"button-right button-red\\\"\\r\\n          *ngIf=\\\"(isAdmin || isSuperAdmin || isAdSpecialist) &&\\r\\n          s2Application?.internalStatus === 'APPROVED'\\\"\\r\\n          (click)=\\\"viewReport(s2Application.id, 'S2_Clearance')\\\"><i class=\\\"material-icons color__white\\\">open_in_new</i> CLEARANCE</button>\\r\\n\\r\\n        <button mat-raised-button class=\\\"button-right button-red\\\"\\r\\n          *ngIf=\\\"(isAdmin || isSuperAdmin || isAdSpecialist) &&\\r\\n          s2Application?.internalStatus === 'RE_SUBMITTED_S2_APPLICATION_VERIFIED_BY_ENCODER'\\\"\\r\\n          (click)=\\\"viewReport(s2Application.id, 'S2_Clearance')\\\"><i class=\\\"material-icons color__white\\\">open_in_new</i> PENDING FORM</button>\\r\\n        \\r\\n        <button mat-raised-button class=\\\"button-right button-red\\\" *ngIf=\\\"(currentUser?.userRole.name === 'ROLE_SUPER_ADMIN' || currentUser?.userRole.name === 'ROLE_ADMIN')\\r\\n        && (s2Application?.releaseStatus === 'FOR_RELEASE' || s2Application?.releaseStatus === 'RELEASED')\\\"\\r\\n          (click)=\\\"sendDecisionOrStampMaterialManual()\\\"><i class=\\\"material-icons color__white\\\">send</i>\\r\\n          SEND CLEARANCE OR TOA</button>\\r\\n      </div>\\r\\n    </div>\\r\\n    <form>\\r\\n      <mat-accordion class=\\\"headers-align\\\" multi>\\r\\n        <mat-expansion-panel>\\r\\n          <mat-expansion-panel-header>\\r\\n            <mat-panel-title>\\r\\n              <mat-icon>label_important</mat-icon> &nbsp;Client Information\\r\\n            </mat-panel-title>\\r\\n            <mat-panel-description>\\r\\n              Affiliation and Company details\\r\\n              <mat-icon>perm_contact_calendar</mat-icon>\\r\\n            </mat-panel-description>\\r\\n          </mat-expansion-panel-header>\\r\\n          <br>\\r\\n\\r\\n          <app-client-information [s2Application]=\\\"s2Application\\\">\\r\\n\\r\\n          </app-client-information>\\r\\n\\r\\n        </mat-expansion-panel>\\r\\n\\r\\n\\r\\n        <mat-expansion-panel>\\r\\n          <mat-expansion-panel-header>\\r\\n            <mat-panel-title>\\r\\n              <mat-icon>label_important</mat-icon> &nbsp;Material Information\\r\\n            </mat-panel-title>\\r\\n            <mat-panel-description>\\r\\n              Ads Details\\r\\n              <mat-icon>ads_click</mat-icon>\\r\\n            </mat-panel-description>\\r\\n          </mat-expansion-panel-header>\\r\\n          <br>\\r\\n          <app-material-information [s1Application]=\\\"s1Application\\\" [s2Application]=\\\"s2Application\\\"\\r\\n            [originalAttachmentDocuments]=\\\"originalAttachmentDocuments\\\" [revisionAttachmentDocuments]=\\\"revisionAttachmentDocuments\\\" [complianceAttachmentDocuments]=\\\"complianceAttachmentDocuments\\\"\\r\\n            [selectedMultimediaList]=\\\"selectedMultimediaList\\\" [applicationSingleMedia]=\\\"applicationSingleMedia\\\">\\r\\n          </app-material-information>\\r\\n\\r\\n        </mat-expansion-panel>\\r\\n\\r\\n        <!-- PREVIEW -->\\r\\n        <mat-expansion-panel [expanded]=\\\"true\\\">\\r\\n          <mat-expansion-panel-header>\\r\\n            <mat-panel-title>\\r\\n              <mat-icon>label_important</mat-icon> &nbsp;Final Material\\r\\n            </mat-panel-title>\\r\\n            <mat-panel-description>\\r\\n              Audio, Video, or Layout\\r\\n              <mat-icon>upload</mat-icon>\\r\\n            </mat-panel-description>\\r\\n          </mat-expansion-panel-header>\\r\\n          <br>\\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n              <div class=\\\"row fields\\\">\\r\\n                <h4>\\r\\n                  <i class=\\\"material-icons\\\">upload</i> &nbsp;Final Material\\r\\n                </h4>\\r\\n                <br>\\r\\n\\r\\n                <!-- FOR COMPLIANCE -->\\r\\n                <div *ngIf=\\\"s2Application?.internalStatus === 'INCOMPLETE' || s2Application?.internalStatus === 'S2_APPLICATION_REJECTED'\\\">\\r\\n                  <div class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n                    <b>FOR COMPLIANCE</b><br>\\r\\n                    <mat-label *ngIf=\\\"tempCompliance?.originalFilename\\\">Filename: </mat-label>\\r\\n\\r\\n                    <input #finalMaterialFileInputC matInput [value]=\\\"tempCompliance?.originalFilename\\\"\\r\\n                      *ngIf=\\\"tempCompliance?.originalFilename\\\" disabled>\\r\\n\\r\\n                    <input #finalMaterialFileC class=\\\"file-upload\\\"\\r\\n                      *ngIf=\\\"isApplicant && (s2Application?.decisionStatus === 'INCOMPLETE' || s2Application?.internalStatus === 'S2_APPLICATION_REJECTED')\\\"\\r\\n                      type=\\\"file\\\" accept=\\\"video/mp4, audio/mp3, image/jpg, image/jpeg, application/pdf, image/gif\\\"\\r\\n                      (change)=\\\"onAddFile($event)\\\" [hidden]=\\\"tempCompliance?.finalMaterialAttachmentReference\\\"/>\\r\\n\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-12\\\"><br></div>\\r\\n                  <div class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n\\r\\n                    <button mat-raised-button\\r\\n                      *ngIf=\\\"tempCompliance?.finalMaterialAttachmentReference\\\"\\r\\n                      class=\\\"button-red button-right\\\" (click)=\\\"viewFinalMedia(tempCompliance)\\\">\\r\\n                      <i class=\\\"material-icons color__white\\\">open_in_new</i> VIEW MATERIAL\\r\\n                    </button>\\r\\n                    &nbsp; &nbsp;\\r\\n                    <button mat-raised-button class=\\\"button-red button-right\\\" (click)=\\\"deleteUploadedFile2(tempCompliance)\\\"\\r\\n                      *ngIf=\\\"isApplicant &&\\r\\n                      (s2Application?.internalStatus === 'INCOMPLETE' || s2Application?.internalStatus === 'S2_APPLICATION_REJECTED') &&\\r\\n                      tempCompliance?.finalMaterialAttachmentReference\\\">\\r\\n                      <i class=\\\"material-icons color__white\\\">delete</i> DELETE ATTACHMENT\\r\\n                    </button>\\r\\n                    &nbsp; &nbsp;\\r\\n                    <button mat-raised-button class=\\\"button-red button-right\\\" (click)=\\\"uploadAudioOrVideo()\\\"\\r\\n                    *ngIf=\\\"isApplicant && safeURLFile\\\"\\r\\n                    [hidden]=\\\"tempCompliance?.finalMaterialAttachmentReference\\\">\\r\\n                      <i class=\\\"material-icons color__white\\\">upload</i> UPLOAD\\r\\n                    </button>\\r\\n                  </div>\\r\\n                  <div class=\\\"row\\\"><br><br></div>\\r\\n                  <div class=\\\"row\\\"><hr></div>\\r\\n                </div>\\r\\n                <!-- END OF FOR COMPLIANCE -->\\r\\n\\r\\n                <!-- FOR ORIGINAL ONLY -->\\r\\n                <div class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n                  <!-- <b>{{s2OriginalAttachmentDocuments[0]?.submissionType | uppercase}}</b><br> -->\\r\\n                  <mat-label *ngIf=\\\"s2OriginalAttachmentDocuments[0]?.originalFilename\\\">Filename: </mat-label>\\r\\n                  <input #finalMaterialFileInput matInput [value]=\\\"s2OriginalAttachmentDocuments[0]?.originalFilename\\\"\\r\\n                    *ngIf=\\\"s2OriginalAttachmentDocuments[0]?.originalFilename\\\" disabled>\\r\\n\\r\\n                  <input #finalMaterialFile class=\\\"file-upload\\\"\\r\\n                    *ngIf=\\\"isApplicant&&(s2Application?.internalStatus==='SAVED'||s2Application?.internalStatus==='INCOMPLETE'||s2Application?.internalStatus==='S2_APPLICATION_REJECTED')\\\"\\r\\n                    type=\\\"file\\\" accept=\\\"video/mp4, audio/mp3, image/jpg, image/jpeg, application/pdf, image/gif\\\"\\r\\n                    (change)=\\\"onAddFile($event)\\\" [hidden]=\\\"s2Application?.decisionStatus === 'INCOMPLETE' || s2Application?.finalMaterialAttachmentReference\\\"/>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-12\\\"><br></div>\\r\\n                <div class=\\\"col-md-12\\\" appearance=\\\"outline\\\"\\r\\n                  *ngIf=\\\"isShowUploadButton||s2Application?.decisionStatus === 'INCOMPLETE'\\\">\\r\\n                  <button mat-raised-button\\r\\n                    *ngIf=\\\"s2Application?.finalMaterialAttachmentReference || s2Application?.internalStatus==='INCOMPLETE'||s2Application?.internalStatus==='S2_APPLICATION_REJECTED'\\\"\\r\\n                    class=\\\"button-red button-right\\\" (click)=\\\"viewFinalMedia(s2OriginalAttachmentDocuments[0])\\\">\\r\\n                    <i class=\\\"material-icons color__white\\\">open_in_new</i> VIEW MATERIAL\\r\\n                  </button>\\r\\n                  &nbsp; &nbsp;\\r\\n                  <button mat-raised-button class=\\\"button-red button-right\\\" (click)=\\\"deleteUploadedFile2(s2OriginalAttachmentDocuments[0])\\\"\\r\\n                    *ngIf=\\\"isApplicant &&\\r\\n                    (s2Application?.internalStatus==='SAVED' || s2Application?.internalStatus==='INCOMPLETE'||s2Application?.internalStatus==='S2_APPLICATION_REJECTED') &&\\r\\n                    s2Application?.finalMaterialAttachmentReference\\\"\\r\\n                    [hidden]=\\\"s2Application?.decisionStatus === 'INCOMPLETE'\\\">\\r\\n                    <i class=\\\"material-icons color__white\\\">delete</i> DELETE ATTACHMENT\\r\\n                  </button>\\r\\n                  &nbsp; &nbsp;\\r\\n                  <button mat-raised-button class=\\\"button-red button-right\\\" (click)=\\\"uploadAudioOrVideo()\\\" *ngIf=\\\"isApplicant &&\\r\\n                    (s2Application?.internalStatus==='SAVED' || s2Application?.internalStatus==='INCOMPLETE'||s2Application?.internalStatus==='S2_APPLICATION_REJECTED') &&\\r\\n                    !s2Application?.finalMaterialAttachmentReference\\\">\\r\\n                    <i class=\\\"material-icons color__white\\\">upload</i> UPLOAD\\r\\n                  </button>\\r\\n                </div>\\r\\n                <!-- END OF ORIGINAL ONLY -->\\r\\n\\r\\n                <div class=\\\"col-md-12\\\"><br></div>\\r\\n\\r\\n                <!---------- EXISTING COMPLIANCE ---------->\\r\\n                <div *ngIf=\\\"s2Application?.decisionStatus === 'INCOMPLETE'\\\">\\r\\n                  <div class=\\\"row\\\"><hr></div>\\r\\n                      <h4>\\r\\n                        <i class=\\\"material-icons\\\">bookmark</i> &nbsp;ATTACHMENTS FOR COMPLIANCE\\r\\n                      </h4>\\r\\n                      <br>\\r\\n                      <div class=\\\"row\\\" *ngFor=\\\"let i of s2ComplianceAttachmentDocuments; let index = index\\\">\\r\\n                        <div *ngIf=\\\"i !== null\\\">\\r\\n                          <div class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n                            <mat-label *ngIf=\\\"i?.originalFilename\\\">Filename: </mat-label>\\r\\n                            <input #mainInput matInput [value]=\\\"i?.originalFilename\\\" disabled *ngIf=\\\"i?.originalFilename\\\"><br>\\r\\n                          </div>\\r\\n\\r\\n                          <div class=\\\"row\\\"><br></div>\\r\\n                          <div class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n                            <button mat-raised-button class=\\\"button-red button-right\\\" (click)=\\\"viewFinalMedia(i)\\\">\\r\\n                              <i class=\\\"material-icons add-document\\\">open_in_new</i> VIEW DOCUMENT\\r\\n                            </button>\\r\\n                            &nbsp; &nbsp;\\r\\n                            <button mat-raised-button class=\\\"button-red button-right\\\" (click)=\\\"deleteUploadedFile2(i)\\\" *ngIf=\\\"i?.status === 'UNPROCESSED'\\\">\\r\\n                              <i class=\\\"material-icons add-document\\\">delete</i> DELETE ATTACHMENT\\r\\n                            </button>\\r\\n                            &nbsp; &nbsp;\\r\\n                          </div>\\r\\n                          <div class=\\\"col-md-12\\\"><br></div>\\r\\n                          <div class=\\\"col-md-12\\\">\\r\\n                            <hr>\\r\\n                          </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  <div class=\\\"no-record\\\" *ngIf=\\\"(s2ComplianceAttachmentDocuments?.length === 0 && s2ComplianceAttachmentDocuments[0]?.originalFilename === undefined) || s2ComplianceAttachmentDocuments?.length===null\\\">\\r\\n                    No existing attachments for compliance.\\r\\n                  </div>\\r\\n                </div>\\r\\n           </div>\\r\\n\\r\\n              <!-- /////////////////////////////// -->\\r\\n\\r\\n              <!-- FOR AD SPE - S2 APP -->\\r\\n              <!-- <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label>Valid Until</mat-label>\\r\\n                <input type=\\\"tel\\\" matInput placeholder=\\\"Search\\\">\\r\\n                <mat-icon matSuffix>calendar_today</mat-icon>\\r\\n              </mat-form-field> -->\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n        </mat-expansion-panel>\\r\\n\\r\\n\\r\\n        <!--\\r\\n\\r\\n          SUPPORT DOCUMENT\\r\\n          -->\\r\\n          <mat-expansion-panel [expanded]=\\\"true\\\">\\r\\n            <mat-expansion-panel-header>\\r\\n              <mat-panel-title>\\r\\n                <mat-icon>label_important</mat-icon> &nbsp;Support Document\\r\\n              </mat-panel-title>\\r\\n              <mat-panel-description>\\r\\n                PDF\\r\\n                <mat-icon>upload</mat-icon>\\r\\n              </mat-panel-description>\\r\\n            </mat-expansion-panel-header>\\r\\n            <br>\\r\\n\\r\\n          \\r\\n            <app-attachment-document [s1Application]=\\\"s1Application\\\" [labelMainDocument]=\\\"'Support Document'\\\"\\r\\n            [isAscUser]=\\\"isAscUser\\\"  [s2Appplication]=\\\"s2Application\\\" \\r\\n            [complianceAttachmentDocuments]=\\\"complianceAttachmentDocuments\\\" [s2SupportAttchmentDocuments]=\\\"originalAttachmentDocuments\\\" [s2DocObservable]=\\\"s2OriginalAttachmentObservable\\\"\\r\\n            [applicationStage]=\\\"applicationStage\\\" [S2SupportDoc]=\\\"true\\\"></app-attachment-document>\\r\\n \\r\\n                      <!-- \\r\\n    \\r\\n                        START UPLOAD SUPPORTING\\r\\n    \\r\\n    \\r\\n                       -->\\r\\n    \\r\\n\\r\\n        </mat-expansion-panel>\\r\\n          <!-- END SUPPORT -->\\r\\n\\r\\n        \\r\\n        <app-comment *ngIf=\\\"!isApplicant\\\" [commentS2Application]=\\\"s2Application\\\">\\r\\n        </app-comment>\\r\\n      </mat-accordion>\\r\\n\\r\\n      <!-- ATTACHMENTS FOR STAMPED MATERIAL AND DECISION FORM -->\\r\\n      <div *ngIf=\\\"(isAdmin || isSuperAdmin || isApplicant || isAdSpecialist) && previewAttachmentsList.length\\\">\\r\\n        <br>\\r\\n        <div class=\\\"row fields\\\">\\r\\n          <h4>\\r\\n            <i class=\\\"material-icons\\\">label_important</i> &nbsp;Clearance and TOA\\r\\n          </h4>\\r\\n          <br>\\r\\n          <app-preview-attachments [previewAttachmentsList]=\\\"previewAttachmentsList\\\"\\r\\n            [displayedColumns]=\\\"previewAttachmentsDisplayedColumns\\\"\\r\\n            [dataSource]=\\\"previewAttachmentsListDataSource\\\"></app-preview-attachments>\\r\\n          <div class=\\\"row\\\"><br></div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n    </form>\\r\\n\\r\\n    <hr>\\r\\n\\r\\n    <!-- For adSpe only -->\\r\\n    <div class=\\\"row\\\" [hidden]=\\\"s2Application?.internalStatus === 'RE_SUBMITTED_S2_APPLICATION_VERIFIED_BY_AD_SPE' ||\\r\\n    s2Application?.internalStatus === 'S2_APPLICATION_VERIFIED_BY_AD_SPE'\\\" [formGroup]=\\\"s2ApplicationForm\\\">\\r\\n      <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\" *ngIf=\\\"isAdSpecialist || (isAdSpecialist && s2Application?.hasOngoingAppeal)\\\">\\r\\n        <mat-label>Decision:</mat-label>\\r\\n        <mat-select (selectionChange)=\\\"setDecisionStatus($event.value)\\\" name=\\\"decisionStatus\\\"\\r\\n          formControlName=\\\"decisionStatus\\\">\\r\\n          <mat-option value=\\\"APPROVED\\\">APPROVED</mat-option>\\r\\n          <mat-option *ngIf=\\\"s2Application?.internalStatus !='FOR_CLEARANCE_S2_APPLICATION_VERIFIED_BY_ENCODER'\\\"\\r\\n            value=\\\"INCOMPLETE\\\">INCOMPLETE</mat-option>\\r\\n          <mat-option value=\\\"DISAPPROVED\\\">DISAPPROVED</mat-option>\\r\\n        </mat-select>\\r\\n      </mat-form-field>\\r\\n      <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\"\\r\\n        *ngIf=\\\"isAdSpecialist &&\\r\\n        s2Application?.internalStatus != 'FOR_CLEARANCE_S2_APPLICATION_VERIFIED_BY_ENCODER' && decisionStatus === 'APPROVED'\\\">\\r\\n        <mat-label>Choose validity date</mat-label>\\r\\n        <input matInput placeholder=\\\"Date\\\" [matDatepicker]=\\\"validityDate\\\" readonly [min]=\\\"todayDate\\\"\\r\\n          [(ngModel)]=\\\"s2Application.validityDate\\\" name=\\\"expiresOn\\\" formControlName=\\\"validityDate\\\" [readonly]=\\\"true\\\">\\r\\n        <mat-datepicker-toggle matSuffix [for]=\\\"validityDate\\\">\\r\\n          <mat-datepicker color=\\\"warn\\\" #validityDate></mat-datepicker>\\r\\n        </mat-datepicker-toggle>\\r\\n      </mat-form-field>\\r\\n\\r\\n      <div class=\\\"row\\\" *ngIf=\\\"rationaleLists?.length > 0 || rationaleOthersList?.length > 0\\\" [hidden]=\\\"rationaleLists?.length === 0 && rationaleOthersList.length === 0\\\">\\r\\n        <div class=\\\"col-md-6 rationale\\\">\\r\\n          <label>RATIONALE</label>\\r\\n          <div class=\\\"rationale-list\\\" *ngIf=\\\"rationaleLists.length > 0\\\">\\r\\n            <label>Rationale List:</label>\\r\\n            <div *ngFor=\\\"let i of rationaleLists\\\">\\r\\n              <p><span class=\\\"material-icons\\\">help</span> {{i?.typeOfRationale?.rationale}}</p>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"rational-other-comment\\\" *ngIf=\\\"rationaleOthersList?.length > 0\\\">\\r\\n            <label>Other comments:</label>\\r\\n            <div *ngFor=\\\"let i of rationaleOthersList\\\">\\r\\n              <p><span class=\\\"material-icons\\\">help</span> {{i?.others}}</p>\\r\\n            </div>\\r\\n\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <br>\\r\\n    <div class=\\\"row\\\">\\r\\n      <b\\r\\n        *ngIf=\\\"isAdSpecialist && s2Application?.decisionStatus === 'APPROVED' && s2Application?.validityDate === null\\\"><b\\r\\n          class=\\\"material-icons\\\">error_outline</b> Note: To submit approve application, please add validity\\r\\n        date.</b><br>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col\\\">\\r\\n        <!-- ORIGINAL -->\\r\\n        <button *ngIf=\\\"s2Application?.decisionStatus !== 'INCOMPLETE' && s2Application?.internalStatus !== 'S2_APPLICATION_REJECTED'\\\"\\r\\n          mat-raised-button class=\\\"button-red\\\" (click)=\\\"saveStatus()\\\" [hidden]=\\\"\\r\\n          s2Application?.internalStatus === 'RE_SUBMITTED_S2_APPLICATION_VERIFIED_BY_AD_SPE' ||\\r\\n          s2Application?.internalStatus === 'S2_APPLICATION_VERIFIED_BY_AD_SPE' || s2Application?.internalStatus === 'APPROVED' ||\\r\\n          s2Application?.internalStatus == 'FOR_CLEARANCE_S2_APPLICATION' || s2Application?.internalStatus == 'FOR_CLEARANCE_S2_APPLICATION_VERIFIED_BY_ENCODER' ||\\r\\n          s2Application?.internalStatus == 'FOR_CLEARANCE_S2_APPLICATION_VERIFIED_BY_AD_SPE' ||\\r\\n          s2Application?.hasOngoingAppeal\\\"\\r\\n          [disabled]=\\\"s2Application?.finalMaterialAttachmentReference === null ||\\r\\n          (isAdSpecialist && s2Application?.decisionStatus === 'APPROVED' && s2Application?.validityDate === null)\\\">\\r\\n\\r\\n          <div\\r\\n            *ngIf=\\\"isApplicant&&(s2Application?.internalStatus==='SAVED')\\\">\\r\\n            <i class=\\\"material-icons\\\">verified</i> SUBMIT\\r\\n          </div>\\r\\n          <div *ngIf=\\\"isEvaluator\\\"><i class=\\\"material-icons\\\">verified</i> FORWARD TO\\r\\n            AD SPECIALIST</div>\\r\\n          <div *ngIf=\\\"isAdSpecialist\\\"><i class=\\\"material-icons\\\">check</i> SUBMIT\\r\\n          </div>\\r\\n        </button>\\r\\n\\r\\n        <!-- INCOMPLETE -->\\r\\n        <button mat-raised-button *ngIf=\\\"s2Application?.decisionStatus ==='INCOMPLETE' || s2Application?.decisionStatus === 'S2_APPLICATION_REJECTED'\\\" class=\\\"button-red\\\"\\r\\n          (click)=\\\"saveStatusForCompliance()\\\"\\r\\n          [disabled]=\\\"!s2Application?.decisionStatus ||\\r\\n          (isAdSpecialist && decisionStatus === '') ||\\r\\n          (isAdSpecialist && decisionStatus === 'APPROVED' && s2Application?.validityDate === null) ||\\r\\n          (isAdSpecialist && (decisionStatus === 'INCOMPLETE' || decisionStatus === 'DISAPPROVED') && rationaleLists.length === 0 && rationaleOthersList.length === 0)\\\">\\r\\n          <div *ngIf=\\\"isApplicant\\\"\\r\\n            [hidden]=\\\"s2Application?.decisionStatus !== 'INCOMPLETE' || s2Application?.internalStatus === 'RE_SUBMITTED_S2_APPLICATION' || s2Application?.internalStatus ==='RE_SUBMITTED_S2_APPLICATION_VERIFIED_BY_ENCODER'\\\">\\r\\n            <i class=\\\"material-icons\\\">fact_check</i> SUBMIT FOR COMPLIANCE\\r\\n          </div>\\r\\n          <div *ngIf=\\\"isEvaluator\\\"><i class=\\\"material-icons\\\">fact_check</i> FORWARD\\r\\n            TO AD SPECIALIST FOR COMPLIANCE</div>\\r\\n          <div *ngIf=\\\"isAdSpecialist\\\"><i class=\\\"material-icons\\\">fact_check</i>\\r\\n            SUBMIT COMPLIANCE</div>\\r\\n        </button>\\r\\n\\r\\n        <button mat-raised-button\\r\\n          *ngIf=\\\"isEvaluator && s2Application?.internalStatus != 'FOR_CLEARANCE_S2_APPLICATION'\\\"\\r\\n          class=\\\"button-red\\\" (click)=\\\"rejectDisapprovedModal('encoder', 'reject', 'S2 APPLICATION REJECTED')\\\">\\r\\n          <i class=\\\"material-icons color__white\\\">cancel</i> REJECT\\r\\n        </button>\\r\\n\\r\\n        <!-- ADMIN / SUPERADMIN - RELEASED -->\\r\\n        <button mat-raised-button class=\\\"button-red\\\" (click)=\\\"submitAppeal()\\\"  *ngIf=\\\"(isAdmin || isSuperAdmin) &&\\r\\n        s2Application?.externalStatus === 'APPROVED' && s1Application?.releaseStatus === 'RELEASED' &&\\r\\n        !s1Application?.hasOngoingCompliance && !s1Application?.hasOngoingAppeal\\\">\\r\\n          <i class=\\\"material-icons color__white\\\">report_gmailerrorred</i> &nbsp;RETURN TO ADSPE FOR APPEAL\\r\\n        </button>\\r\\n\\r\\n        <!-- APPEAL - ADSPE -->\\r\\n        <button mat-raised-button class=\\\"button-red\\\" (click)=\\\"submitAppeal()\\\"  *ngIf=\\\"isAdSpecialist && s2Application?.hasOngoingAppeal\\\">\\r\\n          <i class=\\\"material-icons color__white\\\">report_gmailerrorred</i> &nbsp;VERIFY APPEAL\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <!-- <div class=\\\"row\\\">\\r\\n      <div class=\\\"col\\\">\\r\\n        <button mat-raised-button *ngIf=\\\"s2Application?.internalStatus == 'APPROVED' ||\\r\\n         s2Application?.internalStatus == 'RE_SUBMITTED_S2_APPLICATION_VERIFIED_BY_AD_SPE' ||\\r\\n         s2Application?.internalStatus == 'FOR_CLEARANCE_S2_APPLICATION' ||\\r\\n         s2Application?.internalStatus == 'FOR_CLEARANCE_S2_APPLICATION_VERIFIED_BY_ENCODER' \\\" class=\\\"button-red\\\"\\r\\n          (click)=\\\"saveStatusForClearance()\\\" [hidden]=\\\"\\\">\\r\\n          <div *ngIf=\\\"isApplicant\\\"><i class=\\\"material-icons\\\">fact_check</i> SUBMIT\\r\\n            APPLICATION FOR CLEARANCE</div>\\r\\n          <div *ngIf=\\\"isEvaluator\\\"><i class=\\\"material-icons\\\">fact_check</i> FORWARD\\r\\n            TO AD SPECIALIST FOR CLEARANCE</div>\\r\\n          <div *ngIf=\\\"isAdSpecialist\\\"><i class=\\\"material-icons\\\">fact_check</i>\\r\\n            SUBMIT CLEARANCE</div>\\r\\n        </button>\\r\\n        <button mat-raised-button\\r\\n          *ngIf=\\\"isEvaluator && s2Application?.internalStatus == 'FOR_CLEARANCE_S2_APPLICATION'\\\"\\r\\n          class=\\\"button-red\\\" (click)=\\\"rejectApplication()\\\">\\r\\n          <i class=\\\"material-icons color__white\\\">cancel</i> REJECT\\r\\n        </button>\\r\\n      </div>\\r\\n    </div> -->\\r\\n\\r\\n    <!-- <div class=\\\"row\\\">\\r\\n      <div class=\\\"col\\\">\\r\\n        <button mat-raised-button\\r\\n          *ngIf=\\\"isApplicant && s2Application?.internalStatus == 'APPROVED' || s2Application?.internalStatus == 'RE_SUBMITTED_S2_APPLICATION_VERIFIED_BY_AD_SPE'\\\"\\r\\n          [hidden]=\\\"isAdSpecialist\\\" class=\\\"button-red\\\"\\r\\n          (click)=\\\"applyApplicationForClearance()\\\">\\r\\n          <i class=\\\"material-icons color__white\\\">fact_check</i> APPLY FOR TOA\\r\\n        </button>\\r\\n      </div>\\r\\n    </div> -->\\r\\n\\r\\n  </div>\\r\\n</form>\\r\\n\";","export default \"form textarea {\\n  height: 5em;\\n  padding-left: 10px;\\n}\\nform mat-icon {\\n  margin: auto;\\n}\\nform .badge {\\n  font-size: 15px;\\n  margin-bottom: 10px;\\n}\\nform label {\\n  font-weight: 600;\\n  padding-left: 5px;\\n  margin-bottom: 5px;\\n}\\nform .comment {\\n  border: 1px solid rgba(128, 128, 128, 0.521);\\n  border-radius: 10px;\\n  padding: 10px;\\n  box-shadow: 10px 10px 11px -7px rgba(0, 0, 0, 0.31);\\n  -webkit-box-shadow: 10px 10px 11px -7px rgba(0, 0, 0, 0.31);\\n  -moz-box-shadow: 10px 10px 11px -7px rgba(0, 0, 0, 0.31);\\n  margin: 2px;\\n  padding-bottom: 10px;\\n}\\nform .comment-list {\\n  border-radius: 10px;\\n  height: auto;\\n  overflow-x: hidden;\\n  min-height: 10vh;\\n  max-height: 60vh;\\n}\\nform .comment-list .comments {\\n  border: 1px solid rgba(128, 128, 128, 0.473);\\n  padding: 10px 10px;\\n  border-radius: 10px;\\n}\\nform .comment-list .username-content {\\n  color: #006cfa;\\n  font-weight: 500;\\n  padding-left: 10px;\\n}\\nform .comment-list .username-content b {\\n  color: gray;\\n  font-weight: 500;\\n  line-height: 0px;\\n}\\nform .comment-list .username-content .modified-action {\\n  color: #006cfa;\\n  font-size: 12px;\\n  font-weight: 400;\\n  margin-left: 2px;\\n}\\nform .comment-list .comment-content {\\n  padding: 0px 10px;\\n}\\nform .comment-list .comment-content .inner-html {\\n  height: auto;\\n}\\nform .comment-list .time-content {\\n  padding-left: 10px;\\n  color: gray;\\n  padding-bottom: 0px;\\n}\\nform .comment-list .action-icon {\\n  display: flex;\\n  flex-direction: row;\\n}\\nform .comment-list .action-icon .a-icon {\\n  display: inline;\\n  /* the default for span */\\n  width: 7%;\\n}\\nform .comment-list .action-icon .a-icon i {\\n  font-size: 20px;\\n}\\nform .comment-list .action-icon .a-icon {\\n  cursor: pointer;\\n}\\nhr {\\n  color: rgba(128, 128, 128, 0.753);\\n  opacity: 1;\\n}\\n.header {\\n  margin-top: 100px;\\n  text-align: center;\\n  margin-bottom: 40px;\\n}\\n.html-header {\\n  margin: 15px 0 5px;\\n}\\n.mat-tab {\\n  padding: 20px;\\n}\\n.add-document {\\n  color: white;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9wYWdlcy9hcHBsaWNhdGlvbnMvYXR0YWNobWVudC1kb2N1bWVudC9hdHRhY2htZW50LWRvY3VtZW50LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNJO0VBQ0ksV0FBQTtFQUNBLGtCQUFBO0FBQVI7QUFFSTtFQUNJLFlBQUE7QUFBUjtBQUVJO0VBQ0ksZUFBQTtFQUNBLG1CQUFBO0FBQVI7QUFFSTtFQUNJLGdCQUFBO0VBQ0EsaUJBQUE7RUFDQSxrQkFBQTtBQUFSO0FBR0k7RUFDSSw0Q0FBQTtFQUNBLG1CQUFBO0VBRUEsYUFBQTtFQUNBLG1EQUFBO0VBQ0EsMkRBQUE7RUFDQSx3REFBQTtFQUNBLFdBQUE7RUFDQSxvQkFBQTtBQUZSO0FBSUk7RUFFSSxtQkFBQTtFQUdBLFlBQUE7RUFDQSxrQkFBQTtFQUNBLGdCQUFBO0VBQ0EsZ0JBQUE7QUFMUjtBQU1RO0VBQ0ksNENBQUE7RUFDQSxrQkFBQTtFQUNBLG1CQUFBO0FBSlo7QUFPUTtFQUNJLGNBQUE7RUFDQSxnQkFBQTtFQUNBLGtCQUFBO0FBTFo7QUFPWTtFQUNJLFdBQUE7RUFDQSxnQkFBQTtFQUNBLGdCQUFBO0FBTGhCO0FBT1k7RUFHSSxjQUFBO0VBQ0EsZUFBQTtFQUNBLGdCQUFBO0VBQ0EsZ0JBQUE7QUFQaEI7QUFVUTtFQUNJLGlCQUFBO0FBUlo7QUFTWTtFQUNJLFlBQUE7QUFQaEI7QUFlUTtFQUNJLGtCQUFBO0VBQ0EsV0FBQTtFQUNBLG1CQUFBO0FBYlo7QUFnQlE7RUFDSSxhQUFBO0VBQ0EsbUJBQUE7QUFkWjtBQWVZO0VBQ0ksZUFBQTtFQUFpQix5QkFBQTtFQUNqQixTQUFBO0FBWmhCO0FBYWdCO0VBQ0ksZUFBQTtBQVhwQjtBQWNZO0VBQ0ksZUFBQTtBQVpoQjtBQWtCQTtFQUNJLGlDQUFBO0VBQ0EsVUFBQTtBQWZKO0FBbUJBO0VBQ0ksaUJBQUE7RUFDQSxrQkFBQTtFQUNBLG1CQUFBO0FBaEJKO0FBa0JFO0VBQ0Usa0JBQUE7QUFmSjtBQW1CQTtFQUNJLGFBQUE7QUFoQko7QUFtQkE7RUFDRSxZQUFBO0FBaEJGIiwiZmlsZSI6InNyYy9hcHAvbW9kdWxlcy9wYWdlcy9hcHBsaWNhdGlvbnMvYXR0YWNobWVudC1kb2N1bWVudC9hdHRhY2htZW50LWRvY3VtZW50LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiZm9ybXtcclxuICAgIHRleHRhcmVhe1xyXG4gICAgICAgIGhlaWdodDogNWVtO1xyXG4gICAgICAgIHBhZGRpbmctbGVmdDogMTBweDtcclxuICAgIH1cclxuICAgIG1hdC1pY29ue1xyXG4gICAgICAgIG1hcmdpbjogYXV0bztcclxuICAgIH1cclxuICAgIC5iYWRnZXtcclxuICAgICAgICBmb250LXNpemU6IDE1cHg7XHJcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMTBweDtcclxuICAgIH1cclxuICAgIGxhYmVse1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiA2MDA7XHJcbiAgICAgICAgcGFkZGluZy1sZWZ0OiA1cHg7XHJcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogNXB4O1xyXG4gICAgfVxyXG5cclxuICAgIC5jb21tZW50e1xyXG4gICAgICAgIGJvcmRlcjogMXB4IHNvbGlkIHJnYmEoMTI4LCAxMjgsIDEyOCwgMC41MjEpO1xyXG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XHJcbiAgICAgICAgLy8gcGFkZGluZy10b3A6IDEwcHg7XHJcbiAgICAgICAgcGFkZGluZzogMTBweDtcclxuICAgICAgICBib3gtc2hhZG93OiAxMHB4IDEwcHggMTFweCAtN3B4IHJnYmEoMCwwLDAsMC4zMSk7XHJcbiAgICAgICAgLXdlYmtpdC1ib3gtc2hhZG93OiAxMHB4IDEwcHggMTFweCAtN3B4IHJnYmEoMCwwLDAsMC4zMSk7XHJcbiAgICAgICAgLW1vei1ib3gtc2hhZG93OiAxMHB4IDEwcHggMTFweCAtN3B4IHJnYmEoMCwwLDAsMC4zMSk7XHJcbiAgICAgICAgbWFyZ2luOiAycHg7XHJcbiAgICAgICAgcGFkZGluZy1ib3R0b206IDEwcHg7XHJcbiAgICB9XHJcbiAgICAuY29tbWVudC1saXN0e1xyXG4gICAgICAgIC8vIGJvcmRlcjogMnB4IHNvbGlkIHJnYmEoMTI4LCAxMjgsIDEyOCwgMC4zOTcpO1xyXG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XHJcbiAgICAgICAgLy8gcGFkZGluZzogMWVtIDFlbTtcclxuICAgICAgICAvLyBvdmVyZmxvdzogc2Nyb2xsO1xyXG4gICAgICAgIGhlaWdodDogYXV0bztcclxuICAgICAgICBvdmVyZmxvdy14OiBoaWRkZW47XHJcbiAgICAgICAgbWluLWhlaWdodDogMTB2aDtcclxuICAgICAgICBtYXgtaGVpZ2h0OiA2MHZoO1xyXG4gICAgICAgIC5jb21tZW50c3tcclxuICAgICAgICAgICAgYm9yZGVyOiAxcHggc29saWQgcmdiYSgxMjgsIDEyOCwgMTI4LCAwLjQ3Myk7XHJcbiAgICAgICAgICAgIHBhZGRpbmc6IDEwcHggMTBweDtcclxuICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogMTBweDtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC51c2VybmFtZS1jb250ZW50e1xyXG4gICAgICAgICAgICBjb2xvcjogcmdiKDAsIDEwOCwgMjUwKTtcclxuICAgICAgICAgICAgZm9udC13ZWlnaHQ6IDUwMDtcclxuICAgICAgICAgICAgcGFkZGluZy1sZWZ0OiAxMHB4O1xyXG4gICAgICAgICAgICAvLyBsaW5lLWhlaWdodDogMnB4O1xyXG4gICAgICAgICAgICBie1xyXG4gICAgICAgICAgICAgICAgY29sb3I6IGdyYXk7XHJcbiAgICAgICAgICAgICAgICBmb250LXdlaWdodDogNTAwO1xyXG4gICAgICAgICAgICAgICAgbGluZS1oZWlnaHQ6IDBweDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAubW9kaWZpZWQtYWN0aW9ue1xyXG4gICAgICAgICAgICAgICAgLy8gdGV4dC1hbGlnbjogZW5kO1xyXG4gICAgICAgICAgICAgICAgLy8gcGFkZGluZy1sZWZ0OiAycHg7XHJcbiAgICAgICAgICAgICAgICBjb2xvcjogcmdiKDAsIDEwOCwgMjUwKTtcclxuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMTJweDtcclxuICAgICAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiA0MDA7XHJcbiAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogMnB4O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC5jb21tZW50LWNvbnRlbnR7XHJcbiAgICAgICAgICAgIHBhZGRpbmc6IDBweCAxMHB4O1xyXG4gICAgICAgICAgICAuaW5uZXItaHRtbHtcclxuICAgICAgICAgICAgICAgIGhlaWdodDogYXV0bztcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICB9XHJcbiAgICAgICAgLmNvbW1lbnQtY29udGVudDpob3ZlcntcclxuICAgICAgICAgICAgLy8gY3Vyc29yOiBwb2ludGVyO1xyXG5cclxuICAgICAgICB9XHJcbiAgICAgICAgLnRpbWUtY29udGVudHtcclxuICAgICAgICAgICAgcGFkZGluZy1sZWZ0OiAxMHB4O1xyXG4gICAgICAgICAgICBjb2xvcjogZ3JheTtcclxuICAgICAgICAgICAgcGFkZGluZy1ib3R0b206IDBweDtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC5hY3Rpb24taWNvbntcclxuICAgICAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IHJvdztcclxuICAgICAgICAgICAgLmEtaWNvbntcclxuICAgICAgICAgICAgICAgIGRpc3BsYXk6IGlubGluZTsgLyogdGhlIGRlZmF1bHQgZm9yIHNwYW4gKi9cclxuICAgICAgICAgICAgICAgIHdpZHRoOiA3JTtcclxuICAgICAgICAgICAgICAgIGl7XHJcbiAgICAgICAgICAgICAgICAgICAgZm9udC1zaXplOiAyMHB4O1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIC5hLWljb257XHJcbiAgICAgICAgICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuXHJcbmhye1xyXG4gICAgY29sb3I6IHJnYmEoMTI4LCAxMjgsIDEyOCwgMC43NTMpO1xyXG4gICAgb3BhY2l0eTogMTtcclxufVxyXG5cclxuXHJcbi5oZWFkZXIge1xyXG4gICAgbWFyZ2luLXRvcDogMTAwcHg7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBtYXJnaW4tYm90dG9tOiA0MHB4O1xyXG4gIH1cclxuICAuaHRtbC1oZWFkZXIge1xyXG4gICAgbWFyZ2luOiAxNXB4IDAgNXB4O1xyXG4gIH1cclxuXHJcblxyXG4ubWF0LXRhYntcclxuICAgIHBhZGRpbmc6IDIwcHg7XHJcbn1cclxuXHJcbi5hZGQtZG9jdW1lbnQge1xyXG4gIGNvbG9yOiB3aGl0ZTtcclxufVxyXG5cclxuXHJcbiJdfQ== */\";","import { MultiMediaMoving } from './multimedia-moving.model';\r\nexport class MultiMediaMovingConstant {\r\n    data: Array<MultiMediaMoving> = new Array<MultiMediaMoving>();\r\n    constructor(){\r\n        this.data =   [{\r\n            id: 0,\r\n            multimediaMovingMedium: 'cinema',\r\n            hasSelected: false,\r\n          },\r\n          {\r\n            id: 1,\r\n            multimediaMovingMedium: 'collaterals',\r\n            hasSelected: false,\r\n          },\r\n          {\r\n            id: 2,\r\n            multimediaMovingMedium: 'digital video',\r\n            hasSelected: false,\r\n          },\r\n          {\r\n            id: 3,\r\n            multimediaMovingMedium: 'e-ooh',\r\n            hasSelected: false,\r\n          },\r\n          {\r\n            id: 4,\r\n            multimediaMovingMedium: 'television',\r\n            hasSelected: false,\r\n          }\r\n        ]\r\n    }\r\n}","export * from './client-information/client-information.component';\r\nexport * from './material-information/material-information.component';\r\nexport * from './preview-application/preview-application.component';\r\nexport * from './s1-application/add-s1-application/add-s1-application.component';\r\nexport * from './s1-application/list-s1-application/list-s1-application.component';\r\nexport * from './s2-application/add-s2-application/add-s2-application.component';\r\nexport * from './s2-application/list-s2-application/list-s2-application.component';","export default \"<form>\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row title\\\">\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n        <table>\\r\\n          <tr>\\r\\n            <td *ngIf=\\\"(s1Application?.status!=undefined&&!isAscUser)||isAscUser\\\">\\r\\n              <span>\\r\\n                Status:\\r\\n              </span>\\r\\n            </td>\\r\\n            <td *ngIf=\\\"(s1Application?.status !== undefined && !isAscUser) || isAscUser\\\">\\r\\n              <span *ngIf=\\\"s1Application?.status !== undefined && !isAscUser\\\">\\r\\n                <b>{{s1Application?.status?.replaceAll('_',' ') | uppercase}}</b>\\r\\n              </span>\\r\\n              <span *ngIf=\\\"isAscUser\\\">\\r\\n                <b>{{s1Application?.status?.replaceAll('_',' ') | uppercase}}</b>\\r\\n              </span>\\r\\n            </td>\\r\\n            <td class=\\\"no-border\\\">\\r\\n              <button\\r\\n                class=\\\"button-right button-red\\\"\\r\\n                mat-raised-button\\r\\n                (click)=\\\"dialogRef.close()\\\"\\r\\n              >\\r\\n                <i class=\\\"material-icons color__white\\\">list</i> VIEW APPLICATIONS\\r\\n              </button>\\r\\n            </td>\\r\\n          </tr>\\r\\n          <tr>\\r\\n            <td class=\\\"no-border\\\"></td>\\r\\n          </tr>\\r\\n        </table>\\r\\n\\r\\n        <hr />\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\"><br /></div>\\r\\n    <div class=\\\"row\\\">\\r\\n      <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\">\\r\\n        <mat-label>Form Type</mat-label>\\r\\n        <input matInput [value]=\\\"formType\\\" readonly />\\r\\n      </mat-form-field>\\r\\n\\r\\n      <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\">\\r\\n        <mat-label>Application Type</mat-label>\\r\\n        <input matInput [value]=\\\"s1Application?.applicationType?.description\\\" readonly/>\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n      <mat-accordion class=\\\"headers-align\\\" multi>\\r\\n        <mat-expansion-panel\\r\\n          [expanded]=\\\"\\r\\n            (currentUser?.userRole?.name == 'ROLE_APPLICANT' &&\\r\\n              s1Application?.internalStatus != 'SAVED') ||\\r\\n            s1Application?.internalStatus == undefined\\r\\n              ? true\\r\\n              : false\\r\\n          \\\"\\r\\n          *ngIf=\\\"\\r\\n            (currentUser?.userRole?.name == 'ROLE_APPLICANT' &&\\r\\n              s1Application?.internalStatus == 'SAVED') ||\\r\\n            currentUser?.userRole?.name != 'ROLE_APPLICANT' ||\\r\\n            s1Application?.internalStatus == undefined\\r\\n          \\\"\\r\\n        >\\r\\n          <mat-expansion-panel-header>\\r\\n            <mat-panel-title>\\r\\n              <i class=\\\"material-icons\\\">label_important</i> &nbsp;Initial\\r\\n              Information\\r\\n            </mat-panel-title>\\r\\n          </mat-expansion-panel-header>\\r\\n          <br />\\r\\n\\r\\n          <app-client-information\\r\\n            [s1Application]=\\\"s1Application\\\"\\r\\n            [isAscUser]=\\\"isAscUser\\\"\\r\\n            [isDisableFieldOnUpdate]=\\\"isDisableFieldOnUpdate\\\"\\r\\n            [company]=\\\"company\\\"\\r\\n          ></app-client-information>\\r\\n\\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n            <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\">\\r\\n              <mat-label>Ad Title</mat-label>\\r\\n              <input matInput [value]=\\\"s1Application?.adTitle\\\" readonly />\\r\\n            </mat-form-field>\\r\\n\\r\\n            <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\">\\r\\n              <mat-label>Tag Line</mat-label>\\r\\n              <input matInput [value]=\\\"s1Application?.tagLine\\\" readonly />\\r\\n            </mat-form-field>\\r\\n\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"col-md-6\\\">\\r\\n              <mat-label>Date of Submission</mat-label>\\r\\n              <input matInput placeholder=\\\"Date\\\" readonly\\r\\n                [value]=\\\"s1Application?.submissionDate | date: 'MMMM d, y'\\\"\\r\\n                name=\\\"submissionDate\\\" *ngIf=\\\"s1Application?.status !== 'DISAPPROVED'\\\"/>\\r\\n                <input matInput placeholder=\\\"Date\\\" readonly\\r\\n                  value=\\\"N/A - Request was disapproved\\\"\\r\\n                  name=\\\"submissionDate\\\" *ngIf=\\\"s1Application?.status === 'DISAPPROVED'\\\"/>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n        </mat-expansion-panel>\\r\\n\\r\\n        <!-- FOR Admin Users only -->\\r\\n        <mat-expansion-panel *ngIf=\\\"currentUser?.userRole?.name === 'ROLE_ADMIN' || currentUser?.userRole?.name === 'ROLE_SUPER_ADMIN' \\\">\\r\\n          <mat-expansion-panel-header>\\r\\n            <mat-panel-title>\\r\\n              <i class=\\\"material-icons\\\">label_important</i> &nbsp;Presentor Information\\r\\n            </mat-panel-title>\\r\\n            <mat-panel-description>\\r\\n              Personal Details\\r\\n              <i class=\\\"material-icons\\\">person</i>\\r\\n            </mat-panel-description>\\r\\n          </mat-expansion-panel-header>\\r\\n\\r\\n          <br>\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <!-- <mat-form-field class=\\\"col-md-4\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label>Membership Affiliation</mat-label>\\r\\n                <input matInput [value]=\\\"s1Application?.company?.membersAffiliation?.description\\\" readonly>\\r\\n              </mat-form-field> -->\\r\\n              <mat-form-field class=\\\"col-md-7\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label>Company Name</mat-label>\\r\\n                <input matInput [value]=\\\"s1Application?.company?.companyName\\\" readonly>\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row\\\"><br></div>\\r\\n\\r\\n            <div class=\\\"row\\\">\\r\\n              <mat-form-field class=\\\"col-md-11\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label>Address</mat-label>\\r\\n                <input matInput [value]=\\\"s1Application?.company?.completeAddress\\\" readonly>\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row\\\"><br></div>\\r\\n\\r\\n            <div class=\\\"row\\\">\\r\\n              <mat-form-field class=\\\"col-md-8\\\" appearance=\\\"outline\\\" *ngIf=\\\"s1Application.id!= null\\\">\\r\\n                <mat-label>Name of Applicant</mat-label>\\r\\n                <input matInput [value]=\\\"s1Application?.applicationOwner?.firstName+' '+s1Application?.applicationOwner?.lastName\\\" readonly>\\r\\n              </mat-form-field>\\r\\n\\r\\n              <!-- <mat-form-field class=\\\"col-md-8\\\" appearance=\\\"outline\\\" *ngIf=\\\"currentUser?.userRole?.name =='ROLE_ENCODER' && s1Application.id!= null\\\">\\r\\n                <mat-label>Name of Applicant</mat-label>\\r\\n                <input matInput [value]=\\\"s1Application?.firstName+' '+s1Application?.lastName\\\" readonly>\\r\\n              </mat-form-field> -->\\r\\n\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row\\\"><br></div>\\r\\n\\r\\n            <div class=\\\"row\\\">\\r\\n              <mat-form-field class=\\\"col-md-4\\\" appearance=\\\"outline\\\" *ngIf=\\\"s1Application.id!= null\\\">\\r\\n                <mat-label>Mobile Number</mat-label>\\r\\n                <input matInput [value]=\\\"s1Application?.applicationOwner?.mobileNumber\\\" readonly>\\r\\n              </mat-form-field>\\r\\n              <mat-form-field class=\\\"col-md-3\\\" appearance=\\\"outline\\\" *ngIf=\\\"s1Application.id!= null\\\">\\r\\n                <mat-label>Telephone Number</mat-label>\\r\\n                <input matInput [value]=\\\"s1Application?.company?.companyTelephoneNo\\\" readonly>\\r\\n              </mat-form-field>\\r\\n              <mat-form-field class=\\\"col-md-4\\\" appearance=\\\"outline\\\" *ngIf=\\\"s1Application.id!= null\\\">\\r\\n                <mat-label>Email Address</mat-label>\\r\\n                <input matInput [value]=\\\"s1Application?.applicationOwner?.username\\\" readonly>\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n\\r\\n          </div>\\r\\n        </mat-expansion-panel>\\r\\n      </mat-accordion>\\r\\n\\r\\n      <div class=\\\"row\\\"><br /></div>\\r\\n      <hr />\\r\\n\\r\\n      <br />\\r\\n      <!-- //////////////////////////////////////// ACTION BUTTONS //////////////////////////////////////////////////////////// -->\\r\\n      <div\\r\\n        class=\\\"row\\\"\\r\\n        *ngIf=\\\"s1Application?.status === 'FOR_APPROVAL' && isAscUser\\\"\\r\\n      >\\r\\n        <div mat-dialog-actions>\\r\\n          <div class=\\\"dialog-button-content\\\" align=\\\"end\\\">\\r\\n            <button class=\\\"confirm\\\" (click)=\\\"onApproveOrDisapprove()\\\">\\r\\n              <i class=\\\"material-icons color__white\\\">thumb_up_alt</i> Approve\\r\\n            </button>\\r\\n            <button class=\\\"warn\\\" (click)=\\\"onApproveOrDisapprove('DISAPPROVED')\\\">\\r\\n              <i class=\\\"material-icons color__white\\\">thumb_down_alt</i> Disapprove\\r\\n            </button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\\r\\n\";","import { WebSocketService } from \"app/core/services/socket/websocket.service\";\r\nimport { BadgeCounnter } from \"app/core/models/counter\";\r\nimport {\r\n  AfterViewChecked,\r\n  AfterViewInit,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  OnDestroy,\r\n  OnInit,\r\n  ViewChild,\r\n} from \"@angular/core\";\r\nimport { Company, S1Application, UserAccount, Payment } from \"@models\";\r\nimport { FormGroup, FormControl } from \"@angular/forms\";\r\nimport Swal from \"sweetalert2\";\r\nimport {\r\n  ENDPOINTS,\r\n  FORM_TYPE,\r\n  ROLES,\r\n  TYPE_OF_MEDIUM,\r\n  APPLICATION_STATUS,\r\n  COMMON_FUNCTION,\r\n  SUBMISSION_TYPE,\r\n  APPLICATION_STATUS_FOR_COMPLIANCE,\r\n  SPECIAL_APPLICATION,\r\n  APPLICATION_STAGE,\r\n  OTHER_STATUS,\r\n  USER_ROLES,\r\n  APPFORM_TYPE,\r\n  APPLICATION_STATUS_REVISION,\r\n  APP_DECISION_STATUS,\r\n  ATTACHMENT_TYPE,\r\n  STATUSES,\r\n} from \"@shared\";\r\nimport { ApiService, SweetAlertService, DataStorageService } from \"@services\";\r\nimport { MatAccordion } from \"@angular/material/expansion\";\r\nimport { ClientInformationComponent } from \"../../client-information/client-information.component\";\r\nimport { MaterialInformationComponent } from \"../../material-information/material-information.component\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { DatePipe } from \"@angular/common\";\r\nimport { ApplicationSingleMedia } from \"../../../../../core/models/application-single-media.model\";\r\nimport { PreviewApplicationComponent } from \"../../preview-application/preview-application.component\";\r\nimport {\r\n  ApplicationMultimedia,\r\n  ApplicationMultimediaItemsDTO,\r\n} from \"../../../../../core/models/application-multimedia.model\";\r\nimport { DomSanitizer } from \"@angular/platform-browser\";\r\nimport { MultipleApplication } from \"app/core/models/multiple-application.model\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { ApplicationRequest } from \"app/core/models/application-request.model\";\r\nimport { RejectDisapprovedReasonComponent } from \"app/modules/fragments/reject-disapproved-reason/reject-disapproved-reason.component\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { PerformanceMetricsComponent } from \"../../performance-metrics/performance-metrics.component\";\r\nimport { IncompleteDisapprovedRationaleComponent } from \"app/modules/fragments/incomplete-disapproved-rationale/incomplete-disapproved-rationale.component\";\r\nimport { Report } from \"app/core/models/report.model\";\r\nimport { Rationale } from \"app/core/models/rationale.model\";\r\nimport { CommonServices } from \"app/core/services/common-services.service\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { isEqual, format, nextMonday } from \"date-fns\";\r\nimport { MatDatepicker } from \"@angular/material/datepicker\";\r\n\r\nvar activeHolidayDates = [];\r\nvar activeWeekendDates = [];\r\n\r\n@Component({\r\n  selector: \"app-add-s1-application\",\r\n  templateUrl: \"./add-s1-application.component.html\",\r\n  styleUrls: [\"./add-s1-application.component.scss\"],\r\n})\r\nexport class AddS1ApplicationComponent\r\n  implements OnInit, AfterViewChecked, OnDestroy, AfterViewInit {\r\n  @ViewChild(MatAccordion) accordion: MatAccordion;\r\n  @ViewChild(ClientInformationComponent, { static: false })\r\n  clientInformation: ClientInformationComponent;\r\n  @ViewChild(MaterialInformationComponent, { static: false })\r\n  materialInformation: MaterialInformationComponent;\r\n  @ViewChild(PreviewApplicationComponent, { static: false })\r\n  previewApplication: PreviewApplicationComponent;\r\n  // @ViewChild(AttachmentDocumentComponent, { static: false }) materialAttachmentDocument: AttachmentDocumentComponent;\r\n  public exportTime = { hour: 0, minute: 0, meriden: \"AM\", format: 12 };\r\n  @ViewChild(MatDatepicker) datepicker: MatDatepicker<Date>;\r\n\r\n  title = \"ASC Online System\";\r\n  s1Application = new S1Application();\r\n  multipleApplication = new MultipleApplication();\r\n  applicationRequest = new ApplicationRequest();\r\n  company = new Company();\r\n  applicationSingleMedia = new ApplicationSingleMedia();\r\n  presentorDetails = new UserAccount();\r\n  report = new Report();\r\n  rationale = new Rationale();\r\n  affiliationList = [];\r\n  companyList = [];\r\n  isNewCompany = false;\r\n  showCompanyAddress = false;\r\n  formTypeList = [...FORM_TYPE];\r\n  specialApplicationType = [...SPECIAL_APPLICATION];\r\n  applicationTypeList = [];\r\n  attachmentDocuments: any = {};\r\n  originalAttachmentDocuments = [];\r\n  revisionAttachmentDocuments = [];\r\n  complianceAttachmentDocuments = [];\r\n  paymentAttachment: any;\r\n  supportiveDocumentList = [];\r\n  multimediaStaticList = [];\r\n  selectedMultimediaList = [];\r\n  multimediaMovingList = [];\r\n  screenerList = [];\r\n  reviewerList = [];\r\n  applicantList = [];\r\n  mediaTypeListTemp = [];\r\n  rationaleOthersList = [];\r\n  rationaleLists = [];\r\n  adSpecialistList = [];\r\n  applicationSingleMediaTemp = new ApplicationSingleMedia();\r\n  payment = new Payment();\r\n  safeURL: any; // for payment\r\n  isScheduleSendIsEmpty: boolean;\r\n  selectedApplicationOwner: any;\r\n  applicationStage: string;\r\n  revisionLetterAttachment: any;\r\n  currentSizeLength: string;\r\n  currentSizeLengthMultimedia = [];\r\n  toDeleteMultimediaList = [];\r\n  hasMultimediaLengthChange: boolean;\r\n  hasMultimediaLengthToEnableSubmit = false;\r\n  disableSubmitButtonByMedia = false;\r\n  hasErrorsClient = false;\r\n  badgeCounter: BadgeCounnter = new BadgeCounnter();\r\n  hasErrorsMaterial;\r\n  currentUser: any;\r\n  currentUserRole: any;\r\n  id: number;\r\n  multipleId: number;\r\n  isChecked = false;\r\n  isAscUser = false;\r\n  isDisableFieldOnUpdate = false;\r\n  isInactiveAffiliation: boolean;\r\n  isSubmit = false;\r\n  noDocumentAttached = true;\r\n  accordionDisable = false;\r\n  accordionExpanded = false;\r\n  validationMessage = \"\";\r\n  buttonDisabled = true;\r\n  adSpecButtonDisabled = true;\r\n  rationaleDisplay = false;\r\n  submissionType = SUBMISSION_TYPE.ORIGINAL;\r\n  defaultReviewer: any;\r\n  maxSizeLength = 1000;\r\n\r\n  ascUserRoleList = [\r\n    ...ROLES.filter((role: any) => role.ascUser === true).map(\r\n      (role: any) => role.role\r\n    ),\r\n  ];\r\n\r\n  s1ApplicationForm: FormGroup;\r\n  todayDate = new Date();\r\n\r\n  isSuperAdmin = false;\r\n  isAdmin = false;\r\n  isAccounting = false;\r\n  isApplicant = false;\r\n  isEvaluator = false;\r\n  isAdSpecialist = false;\r\n  isScreener = false;\r\n  isReviewer = false;\r\n\r\n  previewAttachmentsList = [];\r\n  previewAttachmentsDisplayedColumns: string[] = [\r\n    \"decisionFormFilename\",\r\n    \"viewDecisionFormIcon\",\r\n    \"stampMaterialFilename\",\r\n    \"viewStampMaterialIcon\",\r\n  ];\r\n  previewAttachmentsListDataSource: MatTableDataSource<object>;\r\n\r\n  selected: any; // in html but not existing in component -- encountered during 'ng serve --aot'\r\n  multimediaDTO: any;\r\n\r\n  activeHolidayDates: Date[] = [];\r\n  activeWeekendDates: Date[] = [];\r\n\r\n  constructor(\r\n    private apiService: ApiService,\r\n    private sweetAlertService: SweetAlertService,\r\n    private dataStorage: DataStorageService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private sanitizer: DomSanitizer,\r\n    public datepipe: DatePipe,\r\n    private spinner: NgxSpinnerService,\r\n    private cd: ChangeDetectorRef,\r\n    private dialog: MatDialog,\r\n    private commonServices: CommonServices,\r\n    private _snackBar: MatSnackBar\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    if (this.todayDate.getDay() === 0 || this.todayDate.getDay() === 6) {\r\n      this.todayDate = nextMonday(this.todayDate);\r\n    }\r\n\r\n    if (this.dataStorage.getS1FormAndAppType()) {\r\n      this.s1Application.formType = this.dataStorage.getS1FormAndAppType().formType;\r\n      this.getApplicationTypeList(this.s1Application.formType);\r\n      this.s1Application.applicationType = this.dataStorage.getS1FormAndAppType().appType;\r\n    }\r\n\r\n    if (this.dataStorage.getS1Application()) {\r\n      this.s1Application = this.dataStorage.getS1Application();\r\n    }\r\n\r\n    if (this.dataStorage.getSpecialS1Application()) {\r\n      this.applicationRequest = this.dataStorage.getSpecialS1Application();\r\n      this.s1Application.formType = \"INDIVIDUAL\";\r\n      this.s1Application.submissionDate = this.applicationRequest.submissionDate;\r\n      if (this.s1Application.submissionDate) {\r\n        this.isChecked = true;\r\n        this.s1Application.autoSubmit = true;\r\n      }\r\n    }\r\n\r\n    this.setFormValidator();\r\n\r\n    this.currentUser = this.dataStorage.getUserAccount();\r\n    this.currentUserRole = this.currentUser.userRole.name;\r\n    this.initUserRole();\r\n    this.id = Number(this.route.snapshot.paramMap.get(\"id\"));\r\n    if (this.id !== 0) {\r\n      this.viewApplication();\r\n    }\r\n\r\n    this.multipleId = Number(this.route.snapshot.paramMap.get(\"multipleId\"));\r\n    const ctr = Number(this.route.snapshot.paramMap.get(\"nextSequence\"));\r\n\r\n    if (this.multipleId !== 0) {\r\n      this.spinner.show();\r\n      this.apiService\r\n        .findById(ENDPOINTS.multipleApplication, this.multipleId)\r\n        .subscribe(\r\n          (res: any) => {\r\n            this.s1Application.multipleApplication = res.responseData.data;\r\n            this.s1Application.applicationType = this.s1Application.multipleApplication.applicationType;\r\n            this.s1Application.adTitle = this.s1Application.multipleApplication.adTitle;\r\n            this.s1Application.brand = this.s1Application.multipleApplication.brand;\r\n            this.s1Application.product = this.s1Application.multipleApplication.product;\r\n            // this.s1Application.category = this.s1Application.multipleApplication.category;\r\n            this.s1Application.company = this.s1Application.multipleApplication.company;\r\n            this.s1Application.submissionDate = this.s1Application.multipleApplication.dateOfSubmission;\r\n            this.s1Application.autoSubmit = true;\r\n            // this.s1Application.membersAffiliation = this.s1Application.multipleApplication.membersAffiliation;\r\n            this.s1Application.tagLine = this.s1Application.multipleApplication.tagLine;\r\n            this.s1Application.formType = APPFORM_TYPE.MULTIPLE;\r\n            this.s1Application.sequenceOrder = ctr;\r\n            this.spinner.hide();\r\n          },\r\n          (err: any) => {\r\n            this.spinner.hide();\r\n          }\r\n        );\r\n    }\r\n\r\n    this.isAscUser = this.ascUserRoleList.includes(\r\n      this.dataStorage.getUserRole()\r\n    );\r\n    // this.s1Application.autoSubmit = false;\r\n    // this.s1Application.autoSubmitTime = 0;\r\n    // determines if the field will be enabled/disabled on update of s1 app\r\n    this.isDisableFieldOnUpdate =\r\n      ROLES.filter(\r\n        (res: any) =>\r\n          res.disableFieldOnUpdate === true && res.role === this.currentUserRole\r\n      ).length > 0 && this.id > 0\r\n        ? true\r\n        : false;\r\n\r\n    setTimeout(() => {\r\n      this.spinner.hide();\r\n    }, 1);\r\n    if (this.currentUserRole === USER_ROLES.ROLE_ENCODER) {\r\n      this.accordionDisable = false;\r\n      this.getUserTypeForList();\r\n    }\r\n    this.checkSingleMediaChanges();\r\n    this.getAllActiveHolidays();\r\n    this.getAllActiveWeekends();\r\n  }\r\n\r\n  matCalendarDateFilter(that) {\r\n    return (date: Date) => {\r\n      return !that.isDateHoliday(date, that) && date.getDay() !== 7;\r\n    };\r\n  }\r\n\r\n  initUserRole() {\r\n    if (this.currentUser.userRole.name === USER_ROLES.ROLE_SUPER_ADMIN) {\r\n      this.isSuperAdmin = true;\r\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_ADMIN) {\r\n      this.isAdmin = true;\r\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_ACCOUNTING) {\r\n      this.isAccounting = true;\r\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT) {\r\n      this.isApplicant = true;\r\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_SCREENER) {\r\n      this.isScreener = true;\r\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_REVIEWER) {\r\n      this.isReviewer = true;\r\n    } else if (\r\n      this.currentUser.userRole.name === USER_ROLES.ROLE_AD_SPECIALIST\r\n    ) {\r\n      this.isAdSpecialist = true;\r\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_ENCODER) {\r\n      this.isEvaluator = true;\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.checkSingleMediaChanges();\r\n    // this.checkMultimediaChanges();\r\n  }\r\n\r\n  ngAfterViewChecked() {\r\n    if (this.applicationSingleMedia) {\r\n      this.checkSingleMediaChanges();\r\n    }\r\n    if (\r\n      this.materialInformation?.newMultimediaList.length ||\r\n      this.multimediaMovingList.length\r\n    ) {\r\n      // this.checkMultimediaChanges();\r\n    }\r\n    this.cd.detectChanges();\r\n  }\r\n\r\n  getScreenerAssignedAppCount(id: number) {\r\n    return 0;\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    sessionStorage.removeItem(\"FORM_TYPE\");\r\n    sessionStorage.removeItem(\"APP_TYPE\");\r\n    sessionStorage.removeItem(\"NUMBER_OF_APPLICATIONS\");\r\n    sessionStorage.removeItem(\"S1_APPLICATION\");\r\n    sessionStorage.removeItem(\"MULTIPLE_S1_APPLICATION\");\r\n    sessionStorage.removeItem(\"SPECIAL_S1_APPLICATIONS\");\r\n    sessionStorage.removeItem(\"AMOUNT\");\r\n    // alert('destroy')\r\n    // const formAndAppType = {\r\n    //   formType: '',\r\n    //   appType: []\r\n    // }\r\n    // this.dataStorage.setRequestFormAndAppType(formAndAppType);\r\n  }\r\n\r\n  checkInactiveAffiliation() {\r\n    this.isInactiveAffiliation = this.clientInformation.isInactiveAffiliation;\r\n  }\r\n\r\n  viewApplication() {\r\n    this.spinner.show();\r\n    this.apiService.findById(ENDPOINTS.applicationForm, this.id).subscribe(\r\n      (res: any) => {\r\n        this.s1Application = res.responseData.data;\r\n        if (this.s1Application) {\r\n          console.log(\"View App: \", this.s1Application);\r\n\r\n          this.getApplicationTypeList(this.s1Application.formType);\r\n          this.setAppType(this.s1Application.applicationType);\r\n\r\n          this.clientInformation.s1Application = this.s1Application;\r\n          this.materialInformation.s1Application = this.s1Application;\r\n          this.setApplicationStage();\r\n          this.fetchMultimedia();\r\n\r\n          if (\r\n            this.s1Application.refTypeOfMedium === TYPE_OF_MEDIUM.SINGLE_MEDIA\r\n          ) {\r\n            this.getApplicationSingleMedia();\r\n          } else if (\r\n            this.s1Application.refTypeOfMedium ===\r\n            TYPE_OF_MEDIUM.MULTIMEDIA_MOVING\r\n          ) {\r\n            this.getMultimediaMoving();\r\n          } else if (\r\n            this.s1Application.refTypeOfMedium ===\r\n            TYPE_OF_MEDIUM.MULTIMEDIA_STATIC\r\n          ) {\r\n            this.getMultimediaStatic();\r\n          }\r\n\r\n          if (this.s1Application.autoSubmit) {\r\n            this.scheduleSubmission();\r\n            this.onChangeDate(this.s1Application.submissionDate);\r\n          }\r\n\r\n          if (this.currentUser.userRole.name !== USER_ROLES.ROLE_APPLICANT) {\r\n            this.getPresentorDetails();\r\n          }\r\n\r\n          if (\r\n            this.s1Application.mainAttachmentReference ||\r\n            this.s1Application.supportingAttachmentReference ||\r\n            this.s1Application.revisionLetterAttachmentReference\r\n          ) {\r\n            this.getAttachmentDocuments();\r\n          }\r\n\r\n          if (\r\n            this.currentUserRole === USER_ROLES.ROLE_AD_SPECIALIST ||\r\n            this.currentUserRole === USER_ROLES.ROLE_SCREENER ||\r\n            this.currentUserRole === USER_ROLES.ROLE_REVIEWER\r\n          ) {\r\n            this.getUserTypeForList();\r\n          }\r\n\r\n          if (\r\n            (this.s1Application.decisionStatus === \"INCOMPLETE\" ||\r\n              this.s1Application.decisionStatus === \"DISAPPROVED\" ||\r\n              this.s1Application.decisionStatus ===\r\n                APP_DECISION_STATUS.APPROVED ||\r\n              this.s1Application.decisionStatus ===\r\n                APP_DECISION_STATUS.APPROVED_WITH_CAUTION) &&\r\n            this.currentUserRole === USER_ROLES.ROLE_SCREENER\r\n          ) {\r\n            // if ((this.s1Application.internalStatus === APPLICATION_STATUS_FOR_COMPLIANCE.COMPLIANCE_DOCUMENT_VERIFIED_BY_AD_SPE ||\r\n            //   this.s1Application.internalStatus === APPLICATION_STATUS_FOR_COMPLIANCE.COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER)) {\r\n            //     // this.dataStorage.setDecisionStatus(this.s1Application.decisionStatus);\r\n            //     // if(this.rationaleLists.length <= 0){\r\n            //     //   this.s1Application.decisionStatus = \"\";\r\n            //     //   alert(\"BLANK\")\r\n            //     // }else{\r\n            //     //   this.s1Application.decisionStatus = this.dataStorage.getDecisionStatus();\r\n            //     // }\r\n            // }\r\n\r\n            if (\r\n              this.s1Application.internalStatus ===\r\n                APPLICATION_STATUS_FOR_COMPLIANCE.COMPLIANCE_DOCUMENT_VERIFIED_BY_AD_SPE ||\r\n              this.s1Application.internalStatus ===\r\n                APPLICATION_STATUS_REVISION.REVISION_VERIFIED_BY_AD_SPE\r\n            ) {\r\n              if (this.rationaleOthersList || this.rationaleLists) {\r\n                this.getRationaleList();\r\n              }\r\n              // alert(this.dataStorage.getDecisionStatus())\r\n              if (this.dataStorage.getDecisionStatus()) {\r\n                this.s1Application.decisionStatus = this.dataStorage.getDecisionStatus();\r\n              }\r\n              // if (this.s1Application.decisionStatus === APP_DECISION_STATUS.INCOMPLETE ||\r\n              //   this.s1Application.decisionStatus === APP_DECISION_STATUS.DISAPPROVED) {\r\n              // this.getRationaleList();\r\n              // alert('KHFDSKF')\r\n              // console.log(\"HIIAHIIHIFDIFS\", this.rationaleLists);\r\n              // }\r\n            }\r\n          }\r\n\r\n          if (\r\n            this.isAdmin ||\r\n            this.isSuperAdmin ||\r\n            this.isApplicant ||\r\n            this.isAdSpecialist\r\n          ) {\r\n            this.apiService\r\n              .findByParam(\r\n                ENDPOINTS.stampedMaterialAndDecisionForms,\r\n                this.s1Application?.appFormReference\r\n              )\r\n              .subscribe((previewAttachmentsData) => {\r\n                this.previewAttachmentsList =\r\n                  previewAttachmentsData.responseData.data;\r\n                this.previewAttachmentsListDataSource = new MatTableDataSource<object>(\r\n                  this.previewAttachmentsList\r\n                );\r\n              });\r\n          }\r\n\r\n          console.log(\"VIEW APP FORM: \", this.s1Application);\r\n          setTimeout(() => {\r\n            this.spinner.hide();\r\n          }, 1);\r\n\r\n          if (this.s1Application.externalStatus) {\r\n            this.accordionDisable = false;\r\n          }\r\n        }\r\n      },\r\n      (err: any) => {\r\n        this.spinner.hide();\r\n      }\r\n    );\r\n  }\r\n\r\n  setApplicationStage(): void {\r\n    this.clientInformation.applicationStage = APPLICATION_STAGE.S1_APPLICATION;\r\n    this.materialInformation.applicationStage =\r\n      APPLICATION_STAGE.S1_APPLICATION;\r\n  }\r\n\r\n  getPresentorDetails() {\r\n    this.apiService\r\n      .findByParam(\r\n        ENDPOINTS.userLogin,\r\n        this.s1Application.applicationOwner.username\r\n      )\r\n      .subscribe(\r\n        (res: any) => {\r\n          if (res.responseData.data) {\r\n            this.presentorDetails = res.responseData.data;\r\n          }\r\n        },\r\n        (err: any) => {}\r\n      );\r\n  }\r\n\r\n  getApplicationSingleMedia() {\r\n    this.apiService\r\n      .findByParam(\r\n        ENDPOINTS.applicationSingleMedia,\r\n        `app-form-reference/${this.s1Application.appFormReference}`\r\n      )\r\n      .subscribe(\r\n        (res: any) => {\r\n          if (res.responseData.data.length > 0) {\r\n            this.applicationSingleMedia = res.responseData.data[0];\r\n            if (\r\n              this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT &&\r\n              this.s1Application.externalStatus === APPLICATION_STATUS.SAVED\r\n            ) {\r\n              this.materialInformation.applicationSingleMedia = this.applicationSingleMedia;\r\n            }\r\n            if (this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT) {\r\n              this.previewApplication.applicationSingleMedia = this.applicationSingleMedia;\r\n            }\r\n            this.currentSizeLength = this.applicationSingleMedia.sizeLength;\r\n            console.log(\r\n              \"view applicationSingleMedia: \",\r\n              this.applicationSingleMedia\r\n            );\r\n          } else {\r\n            this.applicationSingleMedia = new ApplicationSingleMedia();\r\n          }\r\n        },\r\n        (err: any) => {\r\n          this.applicationSingleMedia = new ApplicationSingleMedia();\r\n        }\r\n      );\r\n  }\r\n\r\n  getMultimediaStatic() {\r\n    this.apiService\r\n      .findByParam(\r\n        ENDPOINTS.applicationMultimedia,\r\n        `app-form-reference/${this.s1Application.appFormReference}`\r\n      )\r\n      .subscribe(\r\n        (res: any) => {\r\n          if (res.responseData.data.length > 0) {\r\n            this.multimediaStaticList = res.responseData.data;\r\n\r\n            if (\r\n              this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT &&\r\n              this.s1Application.externalStatus === APPLICATION_STATUS.SAVED\r\n            ) {\r\n              this.materialInformation.selectedMultimediaList = this.multimediaStaticList;\r\n            }\r\n            if (this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT) {\r\n              this.previewApplication.multimediaStaticList = this.multimediaStaticList;\r\n            }\r\n\r\n            console.log(\r\n              \"view multimediaStaticList: \",\r\n              this.multimediaStaticList\r\n            );\r\n            this.selectedMultimediaList = this.multimediaStaticList;\r\n          } else {\r\n            this.multimediaStaticList = [];\r\n          }\r\n        },\r\n        (err: any) => {\r\n          // this.multimediaStaticList = [];\r\n        }\r\n      );\r\n  }\r\n\r\n  getMultimediaMoving() {\r\n    this.apiService\r\n      .findByParam(\r\n        ENDPOINTS.applicationMultimedia,\r\n        `app-form-reference/${this.s1Application.appFormReference}`\r\n      )\r\n      .subscribe(\r\n        (res: any) => {\r\n          if (res.responseData.data.length > 0) {\r\n            this.multimediaMovingList = res.responseData.data;\r\n            this.currentSizeLengthMultimedia = this.multimediaMovingList.map(\r\n              (mappedMultimedia) => ({\r\n                multimediaSizeLength: mappedMultimedia.multimediaSizeLength,\r\n                typeOfMedium: mappedMultimedia.typeOfMedium.description,\r\n              })\r\n            );\r\n\r\n            if (\r\n              this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT &&\r\n              this.s1Application.externalStatus === APPLICATION_STATUS.SAVED\r\n            ) {\r\n              this.materialInformation.selectedMultimediaList = this.multimediaMovingList;\r\n            }\r\n            if (this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT) {\r\n              this.previewApplication.multimediaMovingList = this.multimediaMovingList;\r\n            }\r\n            console.log(\r\n              \"view multimediaMovingList: \",\r\n              this.multimediaMovingList\r\n            );\r\n            this.selectedMultimediaList = this.multimediaMovingList;\r\n          } else {\r\n            this.multimediaMovingList = [];\r\n          }\r\n        },\r\n        (err: any) => {\r\n          this.multimediaMovingList = [];\r\n        }\r\n      );\r\n  }\r\n\r\n  getAttachmentDocuments() {\r\n    this.apiService\r\n      .findAll(\r\n        ENDPOINTS.attachmentDocumentByAppFormReference +\r\n          this.s1Application.appFormReference\r\n      )\r\n      .subscribe((res: any) => {\r\n        this.attachmentDocuments = res.responseData.data;\r\n\r\n        if (\r\n          this.attachmentDocuments &&\r\n          this.attachmentDocuments.originalAttachmentDocuments.length !== 0\r\n        ) {\r\n          if (\r\n            this.attachmentDocuments.originalAttachmentDocuments.length === 1 &&\r\n            this.attachmentDocuments.originalAttachmentDocuments[0].attachmentType.includes(\r\n              \"SUPPORTIVE\"\r\n            )\r\n          ) {\r\n            this.attachmentDocuments.originalAttachmentDocuments[0] = null;\r\n            this.attachmentDocuments.originalAttachmentDocuments[1] = this.attachmentDocuments[0];\r\n          }\r\n\r\n          if (\r\n            this.attachmentDocuments.originalAttachmentDocuments.length === 2\r\n          ) {\r\n            const mainDoc = this.attachmentDocuments.originalAttachmentDocuments.filter(\r\n              (data) => data?.attachmentType === ATTACHMENT_TYPE.MAIN\r\n            )[0];\r\n\r\n            const suppDoc = this.attachmentDocuments.originalAttachmentDocuments.filter(\r\n              (data) => data?.attachmentType === ATTACHMENT_TYPE.SUPPORTIVE\r\n            )[0];\r\n\r\n            this.attachmentDocuments.originalAttachmentDocuments[0] = mainDoc;\r\n            this.attachmentDocuments.originalAttachmentDocuments[1] = suppDoc;\r\n          }\r\n        }\r\n        // this.revisionLetterAttachment = this.attachmentDocuments.filter(data =>\r\n        //   data?.attachmentType === ATTACHMENT_TYPE.REVISION_LETTER)[0];\r\n\r\n        this.originalAttachmentDocuments = this.attachmentDocuments.originalAttachmentDocuments;\r\n        this.revisionAttachmentDocuments = this.attachmentDocuments.revisionAttachmentDocuments;\r\n        this.complianceAttachmentDocuments = this.attachmentDocuments.complianceAttachmentDocuments;\r\n\r\n        if (\r\n          this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT &&\r\n          this.s1Application.externalStatus === APPLICATION_STATUS.SAVED\r\n        ) {\r\n          this.materialInformation.originalAttachmentDocuments = this.attachmentDocuments.originalAttachmentDocuments;\r\n          this.materialInformation.revisionAttachmentDocuments = this.attachmentDocuments.revisionAttachmentDocuments;\r\n          this.materialInformation.complianceAttachmentDocuments = this.attachmentDocuments.complianceAttachmentDocuments;\r\n        }\r\n\r\n        if (this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT) {\r\n          this.previewApplication.originalAttachmentDocuments = this.attachmentDocuments.originalAttachmentDocuments;\r\n          this.previewApplication.revisionAttachmentDocuments = this.attachmentDocuments.revisionAttachmentDocuments;\r\n          this.previewApplication.complianceAttachmentDocuments = this.attachmentDocuments.complianceAttachmentDocuments;\r\n        }\r\n        console.log(\"view attachmentDocuments: \", this.attachmentDocuments);\r\n\r\n        // check if there's supporting doc\r\n        if (this.s1Application.supportingAttachmentReference) {\r\n          this.getSupportiveDocuments();\r\n        }\r\n      });\r\n\r\n    // Fetch payment details\r\n    if (this.s1Application.paymentAttachmentReference !== null) {\r\n      this.viewPayment();\r\n    }\r\n  }\r\n\r\n  viewPayment() {\r\n    this.apiService\r\n      .findByParam(\r\n        ENDPOINTS.payment,\r\n        `app-form-reference/${this.s1Application.appFormReference}`\r\n      )\r\n      .subscribe(\r\n        (res: any) => {\r\n          if (res.responseData.data) {\r\n            this.payment = res.responseData.data;\r\n            this.apiService\r\n              .findByParam(\r\n                ENDPOINTS.attachmentDocument,\r\n                `payment-attachment-reference/${this.s1Application.paymentAttachmentReference}`\r\n              )\r\n              .subscribe(\r\n                (res1: any) => {\r\n                  if (res1) {\r\n                    this.paymentAttachment = res1;\r\n                    this.safeURL = this.sanitizer.bypassSecurityTrustResourceUrl(\r\n                      this.paymentAttachment.fileURL\r\n                    );\r\n                    console.log(\r\n                      \"view paymentAttachment: \",\r\n                      this.paymentAttachment\r\n                    );\r\n                  }\r\n                },\r\n                (err: any) => {\r\n                  this.paymentAttachment = [];\r\n                }\r\n              );\r\n          }\r\n        },\r\n        (err: any) => {}\r\n      );\r\n  }\r\n\r\n  getSupportiveDocuments() {\r\n    this.apiService\r\n      .findByParam(\r\n        ENDPOINTS.supportiveDocument,\r\n        `application-form-id/${this.s1Application.id}`\r\n      )\r\n      .subscribe(\r\n        (res: any) => {\r\n          if (res.responseData.data.length > 0) {\r\n            this.supportiveDocumentList = res.responseData.data;\r\n            if (\r\n              this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT &&\r\n              this.s1Application.externalStatus === APPLICATION_STATUS.SAVED\r\n            ) {\r\n              this.materialInformation.supportiveDocumentList = this.supportiveDocumentList;\r\n            }\r\n            if (this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT) {\r\n              this.previewApplication.supportiveDocumentList = this.supportiveDocumentList;\r\n            }\r\n            console.log(\r\n              \"view supportiveDocumentList: \",\r\n              this.supportiveDocumentList\r\n            );\r\n          }\r\n        },\r\n        (err: any) => {\r\n          this.supportiveDocumentList = [];\r\n        }\r\n      );\r\n  }\r\n\r\n  scheduleSubmission() {\r\n    this.isChecked = !this.isChecked;\r\n    this.s1Application.autoSubmit = !this.s1Application.autoSubmit;\r\n    const submissionDateValue = \"submissionDate\";\r\n    this.s1ApplicationForm.controls[submissionDateValue].reset();\r\n    this.disableSaveAndSubmitButton();\r\n  }\r\n\r\n  /* setTime(time) {\r\n    this.s1Application.autoSubmitTime = time;\r\n  } */\r\n\r\n  // noDocumentAttachFunction(): void {\r\n  //   this.noDocumentAttached = !this.noDocumentAttached;\r\n  // }\r\n\r\n  setFormValidator(): void {\r\n    // this.s1ApplicationForm = this.formBuilder.group({\r\n    //   type: ['', Validators.required]\r\n    // });\r\n    this.s1ApplicationForm = new FormGroup({\r\n      formType: new FormControl(),\r\n      applicationType: new FormControl(),\r\n      decision: new FormControl(),\r\n      submissionDate: new FormControl(),\r\n      applicationRequest: new FormControl(),\r\n      actionStatus: new FormControl(),\r\n      assignedUser: new FormControl(),\r\n      decisionStatus: new FormControl(),\r\n    });\r\n  }\r\n\r\n  resetFormValidator(): void {\r\n    this.s1Application = new S1Application();\r\n    this.s1ApplicationForm.markAsUntouched();\r\n    this.s1ApplicationForm.markAsPristine();\r\n  }\r\n\r\n  clear(): void {\r\n    this.s1Application = new S1Application();\r\n  }\r\n\r\n  getApplicationTypeList(formType) {\r\n    this.s1Application.formType = formType;\r\n    this.applicationTypeList = [];\r\n    this.apiService.findAll(ENDPOINTS.applicationType).subscribe(\r\n      (res: any) => {\r\n        // if (formType !== 'MULTIPLE') {\r\n        this.applicationTypeList = res.responseData.data;\r\n        // } else {\r\n        //   this.applicationTypeList.push(res.responseData.data[0]);\r\n        //   this.applicationTypeList.push(res.responseData.data[1]);\r\n        // }\r\n      },\r\n      (err: any) => {}\r\n    );\r\n  }\r\n\r\n  getUserTypeForList() {\r\n    this.apiService.findAll(ENDPOINTS.userAccount).subscribe((res: any) => {\r\n      res.responseData.data.filter((account: any) => {\r\n        if (this.currentUserRole === USER_ROLES.ROLE_AD_SPECIALIST) {\r\n          if (\r\n            account.userRole.name.toUpperCase() === USER_ROLES.ROLE_SCREENER\r\n          ) {\r\n            this.apiService\r\n              .findAll(\r\n                ENDPOINTS.applicationFormScreener +\r\n                  `custom/search?assignedScreenerId=${account.id}&page=1&size=100`\r\n              )\r\n              .subscribe(\r\n                (result: any) => {\r\n                  account.ctr = result.data.length;\r\n                  console.log(\"counter ->\", account);\r\n                  this.screenerList.push(account);\r\n                },\r\n                (err: any) => {}\r\n              );\r\n          }\r\n\r\n          if (\r\n            account.userRole.name.toUpperCase() ===\r\n            USER_ROLES.ROLE_AD_SPECIALIST\r\n          ) {\r\n            this.adSpecialistList.push(account);\r\n          }\r\n        }\r\n        if (this.currentUserRole === USER_ROLES.ROLE_SCREENER) {\r\n          if (\r\n            account.userRole.name.toUpperCase() === USER_ROLES.ROLE_REVIEWER\r\n          ) {\r\n            // start set partner reviewer as default/first\r\n            this.defaultReviewer = res.responseData.data.filter(\r\n              (reviewer: any) =>\r\n                reviewer.userRole.name.toUpperCase() ===\r\n                  USER_ROLES.ROLE_REVIEWER && reviewer.ascDefault === true\r\n            );\r\n\r\n            this.reviewerList = this.defaultReviewer;\r\n            const otherReviewers = res.responseData.data.filter(\r\n              (reviewer: any) =>\r\n                reviewer.userRole.name.toUpperCase() ===\r\n                  USER_ROLES.ROLE_REVIEWER && reviewer.ascDefault === false\r\n            );\r\n            this.reviewerList.push(...otherReviewers);\r\n\r\n            // this.s1Application.assignedUser = this.reviewerList[0];\r\n            this.s1Application.assignedReviewer = this.reviewerList[0];\r\n            // end set partner reviewer as default/first\r\n          }\r\n        }\r\n        this.buttonValidation(\"\");\r\n      });\r\n\r\n      if (this.currentUserRole === USER_ROLES.ROLE_ENCODER) {\r\n        console.log(\"ITS WORKING \");\r\n\r\n        this.applicantList = res.responseData.data.filter(\r\n          (account: any) =>\r\n            account.userRole.name === USER_ROLES.ROLE_APPLICANT &&\r\n            account.status === COMMON_FUNCTION.ACTIVE\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  checkAscRateBeforeSaveOrSubmit(process = \"save\") {\r\n    const sizeLength = +this.applicationSingleMedia?.sizeLength;\r\n    if (sizeLength > this.maxSizeLength) {\r\n      this.sweetAlertService.customErrorMessage(\r\n        `Max input for size/length is ${this.maxSizeLength}`\r\n      );\r\n    } else if (\r\n      this.s1Application.formType === \"MULTIPLE\" &&\r\n      !this.specialApplicationType.includes(\r\n        this.s1Application.applicationType.description.toUpperCase()\r\n      )\r\n    ) {\r\n      this.saveOrUpdateApplication(\"SAVED\");\r\n    } else if (\r\n      this.s1Application?.refTypeOfMedium === \"SINGLE MEDIA\" &&\r\n      this.s1Application.formType !== \"MULTIPLE\"\r\n    ) {\r\n      this.validateAscRates(process);\r\n    } else {\r\n      if (process === \"save\") {\r\n        this.saveOrUpdateApplication(\"SAVED\");\r\n      } else if (process === \"submit\") {\r\n        this.saveStatus(\"presentor\", \"submit\", \"S1_APPLICATION_SUBMITTED\");\r\n      }\r\n    }\r\n  }\r\n\r\n  validateAscRates(process = \"save\") {\r\n    this.apiService\r\n      .save(ENDPOINTS.validateAscRates, this.applicationSingleMedia)\r\n      .subscribe(\r\n        (res) => {\r\n          if (process === \"save\") {\r\n            this.saveOrUpdateApplication(\"SAVED\");\r\n          } else if (process === \"submit\") {\r\n            this.saveStatus(\"presentor\", \"submit\", \"S1_APPLICATION_SUBMITTED\");\r\n          }\r\n        },\r\n        (err) => {\r\n          this.sweetAlertService.error(err);\r\n        }\r\n      );\r\n  }\r\n\r\n  saveOrUpdateApplication(status, process = \"save\") {\r\n    console.log(\"1\");\r\n    console.log(\r\n      \"this.s1Application.appFormReference: \",\r\n      this.s1Application.appFormReference\r\n    );\r\n\r\n    if (\r\n      this.s1Application.formType === \"MULTIPLE\" &&\r\n      !this.s1Application.multipleApplication\r\n    ) {\r\n      Swal.fire({\r\n        text: `Are you sure you want to ${\r\n          process === \"save\" ? \"save\" : \"submit\"\r\n        } this multiple application?`,\r\n        icon: \"question\",\r\n        showCancelButton: true,\r\n        confirmButtonColor: \"#3085d6\",\r\n        cancelButtonColor: \"#d33\",\r\n        confirmButtonText: \"Confirm\",\r\n      }).then((result) => {\r\n        if (result.value) {\r\n          this.spinner.show();\r\n\r\n          this.multipleApplication.numberOfApplication = this.dataStorage.getNumberOfApplications();\r\n          this.multipleApplication.applicationType = this.s1Application.applicationType;\r\n          this.multipleApplication.dateOfSubmission = new Date(\r\n            this.s1Application.submissionDate\r\n          );\r\n          this.multipleApplication.status = this.specialApplicationType.includes(\r\n            this.multipleApplication.applicationType.description.toUpperCase()\r\n          )\r\n            ? OTHER_STATUS.FOR_APPROVAL\r\n            : APPLICATION_STATUS.APPROVED;\r\n          this.multipleApplication.actionBy = this.currentUser.username;\r\n          this.multipleApplication.actionDate = new Date();\r\n          if (this.currentUser.userRole.name === USER_ROLES.ROLE_ENCODER) {\r\n            this.multipleApplication.applicationOwner = this.s1Application.applicationOwner;\r\n          } else {\r\n            this.multipleApplication.applicationOwner = this.currentUser;\r\n          }\r\n          this.multipleApplication.submissionStatus = \"UNPROCESSED\";\r\n          this.multipleApplication.assignedAdSpecialist = null;\r\n          this.multipleApplication.assignedEncoder = null;\r\n          this.multipleApplication.assignedScreener = null;\r\n          this.multipleApplication.assignedReviewer = null;\r\n\r\n          // From Client Info\r\n          // this.multipleApplication.membersAffiliation = this.clientInformation.s1Application.membersAffiliation;\r\n          this.multipleApplication.company = this.clientInformation.s1Application.company;\r\n          this.multipleApplication.brand = this.clientInformation.s1Application.brand;\r\n          this.multipleApplication.product = this.clientInformation.s1Application.product;\r\n          // this.multipleApplication.category = this.clientInformation.s1Application.category;\r\n\r\n          // From Material Info\r\n          this.multipleApplication.adTitle = this.materialInformation.s1Application.adTitle;\r\n          this.multipleApplication.tagLine = this.materialInformation.s1Application.tagLine;\r\n\r\n          this.save();\r\n        }\r\n      });\r\n    } else {\r\n      if (\r\n        this.s1Application.appFormReference &&\r\n        this.s1Application.appFormReference !== \"\" &&\r\n        this.s1Application.appFormReference !== undefined\r\n      ) {\r\n        if (status !== APPLICATION_STATUS.SAVED) {\r\n          this.isSubmit = true;\r\n        }\r\n        console.log(\"APPFORM: \", this.s1Application);\r\n        console.log(\"process :: \", process);\r\n        if (process === \"save\") {\r\n          Swal.fire({\r\n            text: `Are you sure you want to ${process} this application?`,\r\n            icon: \"question\",\r\n            showCancelButton: true,\r\n            confirmButtonColor: \"#3085d6\",\r\n            cancelButtonColor: \"#d33\",\r\n            confirmButtonText: \"Confirm\",\r\n          }).then((result) => {\r\n            if (result.value) {\r\n              this.spinner.show();\r\n              this.setAndSaveS1Data(status);\r\n            }\r\n          });\r\n        } else {\r\n          Swal.fire({\r\n            text: `Are you sure you want to ${process} this application?`,\r\n            icon: \"question\",\r\n            showCancelButton: true,\r\n            confirmButtonColor: \"#3085d6\",\r\n            cancelButtonColor: \"#d33\",\r\n            confirmButtonText: \"Confirm\",\r\n          }).then((result) => {\r\n            if (result.value) {\r\n              this.setAndSaveS1Data(status);\r\n            }\r\n          });\r\n        }\r\n      } else {\r\n        this.sweetAlertService.customErrorMessage(\r\n          \"Missing application form reference.\"\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  setAndSaveS1Data(status): void {\r\n    console.log(\"2\");\r\n\r\n    if (this.s1Application.id === undefined) {\r\n      this.s1Application.id = 0;\r\n      this.s1Application.applicationOwner = this.currentUser;\r\n      // this.s1Application.appFormReference = ''; // ETO PALAAAA!!!!\r\n      this.s1Application.referenceCode = \"\";\r\n    }\r\n\r\n    // From Client Info\r\n    // this.s1Application.membersAffiliation = this.clientInformation.s1Application.membersAffiliation;\r\n    this.s1Application.company = this.clientInformation.s1Application.company;\r\n    this.s1Application.brand = this.clientInformation.s1Application.brand;\r\n    this.s1Application.product = this.clientInformation.s1Application.product;\r\n    // this.s1Application.category = this.clientInformation.s1Application.category;\r\n\r\n    // From Material Info\r\n    this.s1Application.adTitle = this.materialInformation.s1Application.adTitle;\r\n    this.s1Application.referenceCode = this.materialInformation.s1Application.referenceCode;\r\n    this.s1Application.tagLine = this.materialInformation.s1Application.tagLine;\r\n\r\n    // SubmissionType (default: ORIGINAL)\r\n    this.s1Application.submissionType = this.submissionType;\r\n\r\n    // Delete auto submit details if autoSubmit is false\r\n    if (this.s1Application.autoSubmit === false) {\r\n      this.isScheduleSendIsEmpty = false;\r\n      this.s1Application.submissionDate = null;\r\n    }\r\n    console.log(\"Saving...\");\r\n    this.save();\r\n  }\r\n\r\n  save() {\r\n    console.log(\"3\");\r\n    if (\r\n      this.s1Application.formType === \"INDIVIDUAL\" ||\r\n      this.s1Application.formType === \"FOR_PRESENTATION\" ||\r\n      (this.s1Application.formType === \"MULTIPLE\" &&\r\n        this.s1Application.multipleApplication)\r\n    ) {\r\n      this.spinner.show();\r\n      // Save S1 Form\r\n      this.mediaTypeListTemp = this.materialInformation.newMultimediaList;\r\n      this.applicationSingleMediaTemp = this.materialInformation.applicationSingleMedia;\r\n\r\n      this.setTypeOfMediumDisplay();\r\n      //\r\n      if (this.s1Application.refTypeOfMedium === TYPE_OF_MEDIUM.SINGLE_MEDIA) {\r\n        this.saveUpdateApplicationSingleMedia(\"SAVE\", null, null);\r\n      } else {\r\n        this.saveUpdateMultimedia(\"SAVE\", null, null);\r\n      }\r\n    } else if (this.s1Application.formType === \"MULTIPLE\") {\r\n      this.spinner.show();\r\n      this.apiService\r\n        .save(ENDPOINTS.multipleApplication, this.multipleApplication)\r\n        .subscribe(\r\n          (res: any) => {\r\n            this.spinner.hide();\r\n            this.router.navigate([\"asc/page/application/s1/multiple\"]);\r\n            const message = this.specialApplicationType.includes(\r\n              this.multipleApplication.applicationType.description.toUpperCase()\r\n            )\r\n              ? \"Multiple application successfully submitted for approval\"\r\n              : \"Multiple application successfully saved\";\r\n            this.sweetAlertService.customSuccessMessage(message);\r\n            // this.navigateToS1List();\r\n          },\r\n          (err: any) => {\r\n            console.log(err);\r\n            this.spinner.hide();\r\n            this.sweetAlertService.error(err);\r\n          }\r\n        );\r\n    }\r\n  }\r\n\r\n  setTypeOfMediumDisplay() {\r\n    console.log(\"3a\");\r\n    if (this.s1Application.refTypeOfMedium === TYPE_OF_MEDIUM.SINGLE_MEDIA) {\r\n      this.s1Application.typeOfMedium = this.materialInformation?.typeOfMedium?.description;\r\n    } else {\r\n      let movingStatic = \"\";\r\n      if (this.s1Application.typeOfMedium) {\r\n        movingStatic = this.s1Application.typeOfMedium;\r\n      }\r\n\r\n      this.mediaTypeListTemp.forEach((element) => {\r\n        if (movingStatic === \"\") {\r\n          movingStatic = element.description;\r\n        } else if (!movingStatic.includes(element.description)) {\r\n          movingStatic = movingStatic + \"/\" + element.description;\r\n        }\r\n        this.s1Application.typeOfMedium = movingStatic;\r\n      });\r\n\r\n      // removed multimediaToDelete\r\n      if (this.materialInformation?.toDeleteMultimediaList.length > 0) {\r\n        let currentTOM = this.s1Application.typeOfMedium;\r\n        this.materialInformation?.toDeleteMultimediaList?.forEach(\r\n          (multimediaToDelete) => {\r\n            console.log(\r\n              \"REMOVE: \",\r\n              multimediaToDelete.typeOfMedium.description\r\n            );\r\n            currentTOM = currentTOM.replace(\r\n              multimediaToDelete.typeOfMedium.description + \"/\",\r\n              \"\"\r\n            );\r\n            currentTOM = currentTOM.replace(\r\n              \"/\" + multimediaToDelete.typeOfMedium.description,\r\n              \"\"\r\n            );\r\n          }\r\n        );\r\n        this.s1Application.typeOfMedium = currentTOM;\r\n      }\r\n    }\r\n  }\r\n\r\n  saveUpdateApplicationSingleMedia(status, ascUser, action) {\r\n    console.log(\"3b\");\r\n    this.applicationSingleMediaTemp.appFormReference = this.s1Application?.appFormReference;\r\n\r\n    // this.spinner.hide();\r\n    if (this.applicationSingleMediaTemp) {\r\n      // this.spinner.show();\r\n      this.apiService\r\n        .save(ENDPOINTS.applicationSingleMedia, this.applicationSingleMediaTemp)\r\n        .subscribe(\r\n          (res: any) => {\r\n            if (res !== undefined) {\r\n              console.log(\r\n                \"SAVED applicationSingleMedia: \",\r\n                res.responseData.data\r\n              );\r\n            }\r\n          },\r\n          (err: any) => {\r\n            // this.spinner.hide();\r\n            this.sweetAlertService.error(err);\r\n            return;\r\n          },\r\n          () => {\r\n            // this.spinner.hide();\r\n            if (status?.toUpperCase() === COMMON_FUNCTION.SAVE.toUpperCase()) {\r\n              this.saveAppForm();\r\n            } else if (\r\n              status?.toUpperCase() === COMMON_FUNCTION.SUBMIT.toUpperCase()\r\n            ) {\r\n              this.processAppForm(ascUser, action);\r\n            }\r\n          }\r\n        );\r\n    }\r\n  }\r\n\r\n  saveUpdateMultimedia(status, ascUser, action) {\r\n    let typeOfMultimedia = \"\";\r\n    this.multimediaDTO.appFormReference = this.s1Application.appFormReference;\r\n\r\n    if (\r\n      this.s1Application.refTypeOfMedium === TYPE_OF_MEDIUM.MULTIMEDIA_MOVING\r\n    ) {\r\n      typeOfMultimedia = \"moving\";\r\n    } else {\r\n      typeOfMultimedia = \"static\";\r\n    }\r\n\r\n    this.apiService\r\n      .save(\r\n        ENDPOINTS.applicationMultimedia + \"-\" + typeOfMultimedia,\r\n        this.multimediaDTO\r\n      )\r\n      .subscribe(\r\n        (res: any) => {},\r\n        (err: any) => {\r\n          // this.spinner.hide();\r\n          this.sweetAlertService.error(err);\r\n        },\r\n        () => {\r\n          // this.spinner.hide();\r\n          if (status?.toUpperCase() === COMMON_FUNCTION.SAVE.toUpperCase()) {\r\n            this.saveAppForm();\r\n          } else if (\r\n            status?.toUpperCase() === COMMON_FUNCTION.SUBMIT.toUpperCase()\r\n          ) {\r\n            this.processAppForm(ascUser, action);\r\n          } else {\r\n            this.spinner.hide();\r\n          }\r\n        }\r\n      );\r\n  }\r\n\r\n  // OLD IMPLEMENTATION - TO BE REMOVED ONCE VERIFIED\r\n  // saveUpdateMultimedia(status, ascUser, action) {\r\n  //   console.log('3c');\r\n  //   const asd = this.multimediaMovingList.concat(this.multimediaStaticList);\r\n\r\n  //   const multimediaList = [];\r\n  //   this.mediaTypeListTemp = this.materialInformation.newMultimediaList;\r\n\r\n  //   this.mediaTypeListTemp.forEach(element => {\r\n  //     if (element.sizeLength !== undefined) {\r\n\r\n  //       const obj = new ApplicationMultimedia();\r\n  //       obj.typeOfMedium = element;\r\n  //       obj.appFormReference = this.s1Application.appFormReference;\r\n  //       obj.multimediaSizeLength = element.sizeLength;\r\n\r\n  //       if (element.multimediaMoving) {\r\n  //         obj.mediaType = TYPE_OF_MEDIUM.MOVING;\r\n  //       }\r\n\r\n  //       if (element.multimediaStatic) {\r\n  //         obj.mediaType = TYPE_OF_MEDIUM.STATIC;\r\n  //       }\r\n\r\n  //       const existingValue = this.selectedMultimediaList.filter(filteredMedia => filteredMedia?.typeOfMedium?.id === obj.typeOfMedium.id);\r\n  //       if (existingValue.length) {\r\n  //         obj.id = existingValue[0].id;\r\n  //       }\r\n\r\n  //       delete element.sizeLength;\r\n  //       multimediaList.push(obj);\r\n  //     }\r\n  //   });\r\n\r\n  //   // this.spinner.show();\r\n  //   this.apiService.save(ENDPOINTS.applicationMultimedia + '/' + COMMON_FUNCTION.BATCH, multimediaList).subscribe(\r\n  //     (res: any) => {\r\n  //       // remove blank multimedia size/length\r\n  //       this.materialInformation?.toDeleteMultimediaList?.forEach(multimediaToDelete => {\r\n  //         this.apiService.deleteById(`${ENDPOINTS.applicationMultimedia}`, multimediaToDelete.id).subscribe();\r\n  //       });\r\n  //       // this.spinner.hide();\r\n  //     }, (err: any) => {\r\n  //       // this.spinner.hide();\r\n  //       this.sweetAlertService.error(err);\r\n  //     }, () => {\r\n  //       // this.spinner.hide();\r\n  //       if (status?.toUpperCase() === COMMON_FUNCTION.SAVE.toUpperCase()) {\r\n  //         this.saveAppForm();\r\n  //       } else if (status?.toUpperCase() === COMMON_FUNCTION.SUBMIT.toUpperCase()) {\r\n  //         this.processAppForm(ascUser, action);\r\n  //       } else {\r\n  //         this.spinner.hide();\r\n  //       }\r\n  //     });\r\n  // }\r\n\r\n  saveAppForm() {\r\n    console.log(\"4.0\");\r\n    console.log(\"TO SAVE: \", this.s1Application);\r\n    this.s1Application.actionBy = this.currentUser;\r\n    // ENDPOINTS.applicationFormEncoder + COMMON_FUNCTION.VERIFY;\r\n    this.apiService\r\n      .save(\r\n        ENDPOINTS.applicationFormPresentor + COMMON_FUNCTION.SAVE,\r\n        this.s1Application\r\n      )\r\n      .subscribe(\r\n        (res: any) => {\r\n          if (res !== undefined) {\r\n            this.id = res.responseData.data.id;\r\n            this.s1Application = res.responseData.data;\r\n            console.log(\"SAVED:\", this.s1Application);\r\n\r\n            // if (this.currentUserRole === USER_ROLES.ROLE_ENCODER) {\r\n            //   this.saveS1ApplicationByEncoder(this.s1Application);\r\n            // }\r\n\r\n            this.spinner.hide();\r\n          }\r\n        },\r\n        (err: any) => {\r\n          this.spinner.hide();\r\n          this.sweetAlertService.error(err);\r\n        },\r\n        () => {\r\n          // actions after subscription\r\n          // this.resetFormValidator();\r\n          if (this.s1Application.id !== undefined && this.isSubmit === false) {\r\n            // this.router.navigate(['asc/page/application/s1/update/', this.id]);\r\n            this.spinner.hide();\r\n            this.sweetAlertService.customSuccessMessage(\r\n              \"Application successfully saved.\"\r\n            );\r\n            if (this.s1Application.multipleApplication) {\r\n              this.router.navigate([\"asc/page/application/s1/multiple\"]);\r\n            } else {\r\n              this.navigateToS1List();\r\n            }\r\n          } else {\r\n            console.log(\"COMMENT OUT: S1_APPLICATION_SUBMITTED\");\r\n            // this.saveStatus('presentor', 'submit', 'S1_APPLICATION_SUBMITTED');\r\n          }\r\n        }\r\n      );\r\n  }\r\n\r\n  saveSupportingDocuments() {\r\n    this.spinner.show();\r\n    const supportingDocuments = [];\r\n\r\n    this.materialInformation.newSupportiveDocumentList = this.materialInformation.newSupportiveDocumentList.map(\r\n      (res: any) => {\r\n        res.applicationForm = this.s1Application;\r\n        supportingDocuments.push(res);\r\n      }\r\n    );\r\n    this.apiService\r\n      .save(\r\n        ENDPOINTS.supportiveDocument + \"/\" + COMMON_FUNCTION.BATCH,\r\n        supportingDocuments\r\n      )\r\n      .subscribe(\r\n        (res: any) => {\r\n          console.log(\"Saved suppoting docs successfully.\");\r\n          this.spinner.hide();\r\n        },\r\n        (err: any) => {\r\n          this.spinner.hide();\r\n          this.sweetAlertService.error(err);\r\n          return;\r\n        }\r\n      );\r\n  }\r\n\r\n  setAppType(type) {\r\n    this.s1Application.applicationType = type;\r\n  }\r\n\r\n  compareFormType(value: any, selected: any): boolean {\r\n    if (value && selected) {\r\n      return value.description === selected;\r\n    }\r\n  }\r\n\r\n  compareApplicationType(value: any, selected: any): boolean {\r\n    if (value && selected) {\r\n      return value.description === selected.description;\r\n    }\r\n  }\r\n\r\n  compareAssignedScreener(value: any, selected: any): boolean {\r\n    if (value && selected) {\r\n      return value.description === selected.description;\r\n    }\r\n  }\r\n\r\n  compareAssignedReviewer(value: any, selected: any): boolean {\r\n    if (value && selected) {\r\n      return value.description === selected.description;\r\n    }\r\n  }\r\n\r\n  compareAssignedAdSpec(value: any, selected: any): boolean {\r\n    if (value && selected) {\r\n      return value.description === selected.description;\r\n    }\r\n  }\r\n\r\n  // onChangeHour(event) {\r\n  //   let timeFetched;\r\n  //   timeFetched = event.hour + ':' + event.minute + event.meriden;\r\n  //   this.s1Application.autoSubmitTime = timeFetched;\r\n  // }\r\n\r\n  onChangeDate(value) {\r\n    console.log(value);\r\n    if (value) {\r\n      const dateFetched = value;\r\n      const dateTransformed = this.datepipe.transform(\r\n        dateFetched,\r\n        \"yyyy-MM-dd\"\r\n      );\r\n      this.s1Application.submissionDate = new Date(dateTransformed);\r\n      this.s1Application.autoSubmit = true;\r\n      this.disableSaveAndSubmitButton();\r\n    }\r\n  }\r\n\r\n  resendDecision() {\r\n    Swal.fire({\r\n      text: \"Are you sure you want to resend decision form?\",\r\n      icon: \"question\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Confirm\",\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.spinner.show();\r\n        this.apiService\r\n          .save(\r\n            ENDPOINTS.api +\r\n              `admin/application-form/id/${this.s1Application.id}/send/decision-form`,\r\n            this.s1Application\r\n          )\r\n          .subscribe(\r\n            (res: any) => {\r\n              if (res.code === 200) {\r\n                this.spinner.hide();\r\n                this.sweetAlertService.customSuccessMessage(\r\n                  \"Successfully resend decision form\"\r\n                );\r\n                this.navigateToS1List();\r\n              }\r\n            },\r\n            (err: any) => {\r\n              this.spinner.hide();\r\n            }\r\n          );\r\n      }\r\n    });\r\n  }\r\n\r\n  returnToScreener() {\r\n    Swal.fire({\r\n      text: \"Are you sure you want to return this application to Screener?\",\r\n      icon: \"question\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Confirm\",\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.spinner.show();\r\n        let endpoint = \"\";\r\n        if (this.currentUser.userRole.name === USER_ROLES.ROLE_AD_SPECIALIST) {\r\n          endpoint =\r\n            ENDPOINTS.api +\r\n            `application-form/id/${this.s1Application.id}/s1/ad-specialist/forward-to-screener`;\r\n        } else if (\r\n          this.currentUser.userRole.name === USER_ROLES.ROLE_ADMIN ||\r\n          this.currentUser.userRole.name === USER_ROLES.ROLE_SUPER_ADMIN\r\n        ) {\r\n          endpoint =\r\n            ENDPOINTS.api +\r\n            `admin/application-form/id/${this.s1Application.id}/forward-to-screener`;\r\n        }\r\n\r\n        this.apiService.save(endpoint, this.s1Application).subscribe(\r\n          (res: any) => {\r\n            if (res.code === 200) {\r\n              console.log(\"RETURN: \", res.responseData.data);\r\n              this.spinner.hide();\r\n              this.sweetAlertService.customSuccessMessage(\r\n                \"Successfully return to Screener\"\r\n              );\r\n              this.navigateToS1List();\r\n            }\r\n          },\r\n          (err: any) => {\r\n            this.spinner.hide();\r\n          }\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  returnTo(ascUser, newStatus): void {\r\n    Swal.fire({\r\n      text:\r\n        \"Are you sure you want to return this application to \" + ascUser + \"?\",\r\n      icon: \"question\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Confirm\",\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.spinner.show();\r\n        let endpoint = \"\";\r\n        this.s1Application.assignedUser = this.s1Application.actionBy;\r\n        this.s1Application.actionBy = this.currentUser;\r\n\r\n        if (this.currentUser.userRole.name === USER_ROLES.ROLE_SCREENER) {\r\n          if (\r\n            this.s1Application.multipleApplication &&\r\n            this.s1Application.submissionType === SUBMISSION_TYPE.ORIGINAL\r\n          ) {\r\n            endpoint = `${ENDPOINTS.multipleApplicationReturnToAdSpe}${this.s1Application.multipleApplication.id}/return`;\r\n          } else {\r\n            endpoint = `${ENDPOINTS.applicationFormScreener}return`;\r\n          }\r\n        } else if (\r\n          this.currentUser.userRole.name === USER_ROLES.ROLE_REVIEWER\r\n        ) {\r\n          if (\r\n            this.s1Application.multipleApplication &&\r\n            this.s1Application.submissionType === SUBMISSION_TYPE.ORIGINAL\r\n          ) {\r\n            endpoint = `${ENDPOINTS.multipleApplicationReturnToScreener}${this.s1Application.multipleApplication.id}/return`;\r\n          } else {\r\n            endpoint = `${ENDPOINTS.applicationFormReviewer}return`;\r\n          }\r\n        }\r\n\r\n        // console.log('TO SAVE: ', this.s1Application);\r\n        this.apiService.save(endpoint, this.s1Application).subscribe(\r\n          (res: any) => {\r\n            if (res.code === 200) {\r\n              // console.log('RETURN: ', res.responseData.data);\r\n              this.spinner.hide();\r\n              this.sweetAlertService.customSuccessMessage(\r\n                \"Successfully returned the application\"\r\n              );\r\n              this.navigateToS1List();\r\n            }\r\n          },\r\n          (err: any) => {\r\n            this.spinner.hide();\r\n          }\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  reassign(): void {\r\n    if (\r\n      this.s1Application.internalStatus ===\r\n      APPLICATION_STATUS.S1_APPLICATION_VERIFIED_BY_AD_SPE\r\n    ) {\r\n      if (this.s1Application.multipleApplication) {\r\n        this.s1Application.multipleApplication.assignedScreener = this.s1Application.assignedScreener;\r\n      } else {\r\n        this.s1Application.assignedUser = this.s1Application.assignedScreener;\r\n      }\r\n    } else if (\r\n      this.s1Application.internalStatus ===\r\n      APPLICATION_STATUS.S1_APPLICATION_SCREENED\r\n    ) {\r\n      if (this.s1Application.multipleApplication) {\r\n        this.s1Application.multipleApplication.assignedReviewer = this.s1Application.assignedReviewer;\r\n      } else {\r\n        this.s1Application.assignedUser = this.s1Application.assignedReviewer;\r\n      }\r\n    }\r\n\r\n    Swal.fire({\r\n      text: \"Are you sure you want to reassign this application?\",\r\n      icon: \"question\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Confirm\",\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.spinner.show();\r\n        let endpoint = \"\";\r\n        let param = {};\r\n        this.s1Application.actionBy = this.currentUser;\r\n\r\n        if (this.currentUserRole === USER_ROLES.ROLE_AD_SPECIALIST) {\r\n          if (this.s1Application.multipleApplication) {\r\n            endpoint = ENDPOINTS.reAssignScreenerForMultipleApplication;\r\n            param = this.s1Application.multipleApplication;\r\n          } else {\r\n            endpoint = `${ENDPOINTS.applicationFormAdSpecialist}re-assign/screener`;\r\n            param = this.s1Application;\r\n          }\r\n        } else {\r\n          if (this.s1Application.multipleApplication) {\r\n            endpoint = ENDPOINTS.reAssignReviewerForMultipleApplication;\r\n            param = this.s1Application.multipleApplication;\r\n          } else {\r\n            endpoint = `${ENDPOINTS.applicationFormScreener}re-assign/reviewer`;\r\n            param = this.s1Application;\r\n          }\r\n        }\r\n\r\n        this.apiService.save(endpoint, param).subscribe(\r\n          (res: any) => {\r\n            console.log(\"SAVED: \", res.responseData.data);\r\n            if (res.code === 200) {\r\n              this.spinner.hide();\r\n              this.sweetAlertService.success(res);\r\n              this.navigateToS1List();\r\n            }\r\n          },\r\n          (err: any) => {\r\n            this.spinner.hide();\r\n          }\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  reassignAdSpecialist(): void {\r\n    Swal.fire({\r\n      text:\r\n        \"Are you sure you want to re-assign this application to \" +\r\n        this.s1Application.assignedAdSpecialist.firstName +\r\n        \" \" +\r\n        this.s1Application.assignedAdSpecialist.lastName,\r\n      icon: \"question\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Confirm\",\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.spinner.show();\r\n        let endpoint = \"\";\r\n        this.s1Application.assignedUser = this.s1Application.assignedAdSpecialist;\r\n\r\n        endpoint = ENDPOINTS.applicationForm;\r\n\r\n        // console.log('TO SAVE: ', this.s1Application);\r\n        this.apiService.update(endpoint, this.s1Application).subscribe(\r\n          (res: any) => {\r\n            // console.log('RETURN: ', res.responseData.data);\r\n            if (res.code === 200) {\r\n              this.spinner.hide();\r\n              this.sweetAlertService.customSuccessMessage(\r\n                \"Application re-assigned successfully.\"\r\n              );\r\n              this.navigateToS1List();\r\n            }\r\n          },\r\n          (err: any) => {\r\n            this.spinner.hide();\r\n          }\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  validateSubmissionTime(status = \"\") {\r\n    const currentDate = new Date();\r\n    // start - for testing purposes only - uncomment lines below during dev (do not push uncomment)\r\n    // currentDate.setHours(11);\r\n    // currentDate.setMinutes(0);\r\n    // const currentHour = currentDate.getHours();\r\n    // const currentMinute = currentDate.getMinutes();\r\n\r\n    // if ((currentHour < 7 || (currentHour >= 11 && currentMinute > 0) || currentHour > 11) && status === 'S1_APPLICATION_SUBMITTED') {\r\n    //   const err = {\r\n    //     error: { message: 'Submission of application is between 7:00 AM to 11:00 AM only.' }\r\n    //   };\r\n    //   this.sweetAlertService.error(err);\r\n    //   return;\r\n    // }\r\n    // end\r\n  }\r\n\r\n  checkNullValues(str) {\r\n    return str ? str : \"\";\r\n  }\r\n\r\n  /////////////////////////// FOR ORIGINAL //////////////////////////////////\r\n  saveStatus(ascUser = \"\", action = \"\", status = \"\") {\r\n    let message: string = \"\";\r\n    if (action === \"submit\") {\r\n      message =\r\n        \"Once submitted and accepted, cancellation of application is not allowed.\" +\r\n        ` Are you sure you want to ${action} this application?`;\r\n    } else message = `Are you sure you want to ${action} this application?`;\r\n    Swal.fire({\r\n      text: message,\r\n      icon: \"question\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Confirm\",\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        let msg = \"\";\r\n        if (status === APPLICATION_STATUS.S1_APPLICATION_SUBMITTED) {\r\n          msg = COMMON_FUNCTION.SUBMIT;\r\n        } else if (status === APPLICATION_STATUS.S1_APPLICATION_CANCELLED) {\r\n          msg = COMMON_FUNCTION.CANCEL;\r\n        } else if (status === APPLICATION_STATUS.S1_APPLICATION_REJECTED) {\r\n          msg = COMMON_FUNCTION.REJECT;\r\n        } else if (\r\n          status === APPLICATION_STATUS.S1_APPLICATION_VERIFIED_BY_AD_SPE\r\n        ) {\r\n          msg = COMMON_FUNCTION.VERIFY;\r\n        } else if (status === APPLICATION_STATUS.S1_APPLICATION_SCREENED) {\r\n          msg = COMMON_FUNCTION.SCREEN;\r\n        } else {\r\n          msg = COMMON_FUNCTION.ACCEPT;\r\n        }\r\n\r\n        this.spinner.show();\r\n        this.dataStorage.setDisplayProgressbar(true);\r\n\r\n        // Check NULL values\r\n        this.s1Application.referenceCode = this.checkNullValues(\r\n          this.s1Application.referenceCode\r\n        );\r\n        this.s1Application.supportingAttachmentReference = this.checkNullValues(\r\n          this.s1Application.supportingAttachmentReference\r\n        );\r\n        this.s1Application.paymentAttachmentReference = this.checkNullValues(\r\n          this.s1Application.paymentAttachmentReference\r\n        );\r\n        this.s1Application.revisionLetterAttachmentReference = this.checkNullValues(\r\n          this.s1Application.revisionLetterAttachmentReference\r\n        );\r\n        this.s1Application.decisionStatus = this.checkNullValues(\r\n          this.s1Application.decisionStatus\r\n        );\r\n        this.s1Application.status = this.specialApplicationType.includes(\r\n          this.s1Application.applicationType.description.toUpperCase()\r\n        )\r\n          ? OTHER_STATUS.FOR_APPROVAL\r\n          : APPLICATION_STATUS.APPROVED;\r\n        // SUBMIT\r\n        if (status === APPLICATION_STATUS.S1_APPLICATION_SUBMITTED) {\r\n          if (this.currentUserRole === USER_ROLES.ROLE_ENCODER) {\r\n            this.s1Application.applicationOwner = this.selectedApplicationOwner;\r\n          } else {\r\n            this.s1Application.applicationOwner = this.dataStorage.getUserAccount();\r\n          }\r\n\r\n          this.s1Application.submissionDate = new Date();\r\n          // Delete auto submit details if autoSubmit was cancelled\r\n          this.s1Application.autoSubmit = false;\r\n        }\r\n\r\n        if (!this.s1Application.company) {\r\n          this.s1Application.company = this.dataStorage.getS1NewCompany();\r\n          sessionStorage.removeItem(\"NEW_COMPANY\");\r\n        }\r\n\r\n        this.s1Application.actionBy = this.dataStorage.getUserAccount();\r\n\r\n        if (status !== APPLICATION_STATUS.S1_APPLICATION_CANCELLED) {\r\n          // FOR ADSPE: Save Supporting Documents\r\n          if (\r\n            this.currentUserRole === USER_ROLES.ROLE_AD_SPECIALIST &&\r\n            this.materialInformation.newSupportiveDocumentList.length > 0\r\n          ) {\r\n            this.saveSupportingDocuments();\r\n          }\r\n\r\n          this.spinner.show();\r\n          if (\r\n            this.s1Application.formType !== APPFORM_TYPE.MULTIPLE ||\r\n            (this.s1Application.multipleApplication &&\r\n              this.s1Application.multipleApplication\r\n                .actualNumberOfApplicationForm ===\r\n                this.s1Application.multipleApplication\r\n                  .countVerifiedApplicationForm -\r\n                  1)\r\n          ) {\r\n            if (\r\n              ascUser === \"ad-specialist\" &&\r\n              action === \"verify\" &&\r\n              status === APPLICATION_STATUS.S1_APPLICATION_VERIFIED_BY_AD_SPE\r\n            ) {\r\n              // this.s1Application.assignedScreener = this.s1Application.assignedUser;\r\n              this.s1Application.assignedUser = this.s1Application.assignedScreener;\r\n            } else if (\r\n              ascUser === \"screener\" &&\r\n              action === \"verify\" &&\r\n              status === APPLICATION_STATUS.S1_APPLICATION_SCREENED\r\n            ) {\r\n              this.s1Application.assignedUser = this.s1Application.assignedReviewer;\r\n            }\r\n          }\r\n\r\n          this.mediaTypeListTemp = this.materialInformation.newMultimediaList;\r\n          this.applicationSingleMediaTemp = this.materialInformation.applicationSingleMedia;\r\n\r\n          console.log(\"mediaTypeListTemp: \", this.mediaTypeListTemp);\r\n          console.log(\r\n            \"applicationSingleMediaTemp: \",\r\n            this.applicationSingleMediaTemp\r\n          );\r\n\r\n          // Encoder: Update Medium details - working in single media\r\n          // Encoder: Encode appform - working in single media\r\n          if (this.currentUserRole === USER_ROLES.ROLE_ENCODER) {\r\n            this.setTypeOfMediumDisplay();\r\n            if (\r\n              this.s1Application.refTypeOfMedium === TYPE_OF_MEDIUM.SINGLE_MEDIA\r\n            ) {\r\n              this.applicationSingleMedia = this.applicationSingleMediaTemp;\r\n              this.applicationSingleMedia.appFormReference = this.s1Application.appFormReference;\r\n              this.saveUpdateApplicationSingleMedia(null, null, null);\r\n            } else {\r\n              this.saveUpdateMultimedia(null, null, null);\r\n            }\r\n          }\r\n\r\n          // working in Single Media\r\n          if (\r\n            msg === COMMON_FUNCTION.SUBMIT &&\r\n            this.currentUserRole === USER_ROLES.ROLE_APPLICANT\r\n          ) {\r\n            this.setTypeOfMediumDisplay();\r\n            if (\r\n              this.s1Application.refTypeOfMedium === TYPE_OF_MEDIUM.SINGLE_MEDIA\r\n            ) {\r\n              this.saveUpdateApplicationSingleMedia(msg, ascUser, action);\r\n            } else {\r\n              this.saveUpdateMultimedia(msg, ascUser, action);\r\n            }\r\n          } else {\r\n            this.processAppForm(ascUser, action);\r\n          }\r\n          // socket here\r\n        } else {\r\n          // CANCEL APPLICATION (PUT method)\r\n\r\n          this.spinner.show();\r\n          this.apiService\r\n            .update(\r\n              `${ENDPOINTS.applicationForm}/s1/${ascUser}/${action}`,\r\n              this.s1Application\r\n            )\r\n            .subscribe(\r\n              (res: any) => {\r\n                console.log(\"SAVED STATUS: \", res.responseData.data);\r\n                this.spinner.hide();\r\n                this.sweetAlertService.customSuccessMessage(\r\n                  \"Application successfully canceled.\"\r\n                );\r\n                this.navigateToS1List();\r\n              },\r\n              (err) => {\r\n                console.log(err);\r\n                this.spinner.hide();\r\n              },\r\n              () => {\r\n                this.dataStorage.setDisplayProgressbar(false);\r\n              }\r\n            );\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  processAppForm(ascUser, action) {\r\n    console.log(\"Process 2\");\r\n\r\n    const {\r\n      appFormReference,\r\n      revisionLetterAttachmentReference,\r\n      supportingAttachmentReference,\r\n    } = this.s1Application;\r\n    this.s1Application.appFormReference = appFormReference\r\n      ? appFormReference\r\n      : \"\";\r\n\r\n    if (revisionLetterAttachmentReference === \"\") {\r\n      delete this.s1Application.revisionLetterAttachmentReference;\r\n    }\r\n    if (supportingAttachmentReference === \"\") {\r\n      delete this.s1Application.supportingAttachmentReference;\r\n    }\r\n\r\n    this.s1Application.status = this.specialApplicationType.includes(\r\n      this.s1Application.applicationType.description.toUpperCase()\r\n    )\r\n      ? OTHER_STATUS.FOR_APPROVAL\r\n      : \"APPROVED\";\r\n    console.log(\"TO PROCESS: \", this.s1Application);\r\n\r\n    this.apiService\r\n      .save(\r\n        `${ENDPOINTS.applicationForm}/s1/${ascUser}/${action}`,\r\n        this.s1Application\r\n      )\r\n      .subscribe(\r\n        (res: any) => {\r\n          if (res) {\r\n            console.log(\"SAVED STATUS 1: \", res);\r\n            if (res.code === 400) {\r\n              this.sweetAlertService.customErrorMessage(res.responseMessage);\r\n            } else {\r\n              console.log(\"SAVED STATUS: \", res.responseData.data);\r\n              this.s1Application = res.responseData.data;\r\n              // saving of media\r\n              // if (this.s1Application.refTypeOfMedium === TYPE_OF_MEDIUM.SINGLE_MEDIA) {\r\n              //   this.saveUpdateApplicationSingleMedia();\r\n              // } else {\r\n              //   this.saveUpdateMultimedia();\r\n              // }\r\n\r\n              // Forward Multiple Application\r\n              if (\r\n                this.s1Application.multipleApplication &&\r\n                this.s1Application.multipleApplication\r\n                  .actualNumberOfApplicationForm ===\r\n                  this.s1Application.multipleApplication\r\n                    .countVerifiedApplicationForm\r\n              ) {\r\n                this.forwardMultipleAppsTo(ascUser);\r\n              } else {\r\n                console.log(\"SAVED STATUS: \", res.responseData.data);\r\n                this.s1Application = res.responseData.data;\r\n                // saving of media\r\n                // if (this.s1Application.refTypeOfMedium === TYPE_OF_MEDIUM.SINGLE_MEDIA) {\r\n                //   this.saveUpdateApplicationSingleMedia();\r\n                // } else {\r\n                //   this.saveUpdateMultimedia();\r\n                // }\r\n\r\n                // Forward Multiple Application\r\n                if (\r\n                  this.s1Application.multipleApplication &&\r\n                  this.s1Application.multipleApplication\r\n                    .actualNumberOfApplicationForm ===\r\n                    this.s1Application.multipleApplication\r\n                      .countVerifiedApplicationForm\r\n                ) {\r\n                  this.forwardMultipleAppsTo(ascUser);\r\n                } else {\r\n                  this.spinner.hide();\r\n                  this.sweetAlertService.success(res);\r\n                }\r\n              }\r\n            }\r\n          }\r\n        },\r\n        (err) => {\r\n          console.log(err);\r\n          this.spinner.hide();\r\n          this.sweetAlertService.error(err);\r\n          this.dataStorage.setDisplayProgressbar(false);\r\n        },\r\n        () => {\r\n          this.spinner.hide();\r\n          this.dataStorage.setDisplayProgressbar(false);\r\n          // if (this.s1Application.multipleApplication) {\r\n          //   this.router.navigate(['/asc/page/application/s1/multiple']);\r\n          // } else {\r\n          this.navigateToS1List();\r\n\r\n          //\r\n          if (\r\n            this.currentUserRole === USER_ROLES.ROLE_APPLICANT &&\r\n            this.checkCutOffTime()\r\n          ) {\r\n            this._snackBar.open(\r\n              \"Cutoff reached. Application will be processed the next day.\",\r\n              \"OK\",\r\n              {\r\n                horizontalPosition: \"right\",\r\n                verticalPosition: \"top\",\r\n                duration: 5000,\r\n              }\r\n            );\r\n          }\r\n          // }\r\n        }\r\n      );\r\n    // if (this.currentUserRole === USER_ROLES.ROLE_ENCODER && this.s1Application.externalStatus === APPLICATION_STATUS.SAVED) {\r\n    //   this.saveS1ApplicationByEncoder(this.s1Application);\r\n    // }\r\n  }\r\n\r\n  submitDecisionAndComment() {\r\n    Swal.fire({\r\n      text: \"Are you sure you want to save changes to this application?\",\r\n      icon: \"question\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Confirm\",\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        let endpoint = \"\";\r\n        if (this.currentUser.userRole.name === USER_ROLES.ROLE_SCREENER) {\r\n          endpoint = ENDPOINTS.submitDecisionAndCommentScreener;\r\n        } else if (\r\n          this.currentUser.userRole.name === USER_ROLES.ROLE_REVIEWER\r\n        ) {\r\n          endpoint = ENDPOINTS.submitDecisionAndCommentReviewer;\r\n        }\r\n\r\n        this.apiService.save(endpoint, this.s1Application).subscribe(\r\n          (res: any) => {\r\n            console.log(res);\r\n            this.sweetAlertService.customSuccessMessage(\r\n              \"Decision and comment successfully submitted.\"\r\n            );\r\n            this.navigateToS1List();\r\n          },\r\n          (err: any) => {}\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  forwardMultipleAppsTo(user) {\r\n    console.log(\"forwardMultipleAppsTo\");\r\n    console.log(this.s1Application);\r\n\r\n    let endpoint = \"\";\r\n    if (user === \"encoder\") {\r\n      this.s1Application.multipleApplication.assignedEncoder = this.s1Application.assignedEncoder;\r\n      endpoint = ENDPOINTS.forwardMultipleAppFormToAdSpe;\r\n    } else if (user === \"ad-specialist\") {\r\n      this.s1Application.multipleApplication.assignedAdSpecialist = this.s1Application.assignedAdSpecialist;\r\n      this.s1Application.multipleApplication.assignedScreener = this.s1Application.assignedScreener;\r\n      endpoint = ENDPOINTS.forwardMultipleAppFormToScreener;\r\n    } else if (user === \"screener\") {\r\n      this.s1Application.multipleApplication.assignedReviewer = this.s1Application.assignedReviewer;\r\n      endpoint = ENDPOINTS.forwardMultipleAppFormToReviewer;\r\n    } else if (user === \"reviewer\") {\r\n      endpoint =\r\n        ENDPOINTS.releaseMultipleApplication +\r\n        this.s1Application.multipleApplication.id +\r\n        `/release`;\r\n    }\r\n\r\n    this.apiService\r\n      .save(endpoint, this.s1Application.multipleApplication)\r\n      .subscribe(\r\n        (res: any) => {\r\n          console.log(\"Forwarded: \", res);\r\n          this.spinner.hide();\r\n          this.sweetAlertService.customSuccessMessage(\r\n            \"Multiple application successfully forwarded to the next user.\"\r\n          );\r\n        },\r\n        (err: any) => {\r\n          this.spinner.hide();\r\n          this.sweetAlertService.error(err);\r\n        },\r\n        () => {\r\n          this.spinner.hide();\r\n        }\r\n      );\r\n  }\r\n\r\n  /////////////////////////// FOR COMPLIANCE //////////////////////////////////\r\n  saveStatusForCompliance(ascUser = \"\", action = \"\", status = \"\") {\r\n    console.log(\"Com > \", this.s1Application);\r\n    let msg;\r\n    if (\r\n      status ===\r\n      APPLICATION_STATUS_FOR_COMPLIANCE.SUBMITTED_DOCUMENT_FOR_COMPLIANCE\r\n    ) {\r\n      msg = COMMON_FUNCTION.SUBMIT;\r\n    } else {\r\n      msg = COMMON_FUNCTION.ACCEPT;\r\n    }\r\n\r\n    if (this.s1Application.submissionType === SUBMISSION_TYPE.REVISION) {\r\n      this.s1Application.submissionType = SUBMISSION_TYPE.REVISION;\r\n    } else {\r\n      this.s1Application.submissionType = SUBMISSION_TYPE.ORIGINAL;\r\n    }\r\n\r\n    Swal.fire({\r\n      text:\r\n        \"Are you sure you want to \" + msg + \" this application for compliance?\",\r\n      icon: \"question\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Confirm\",\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.spinner.show();\r\n        this.dataStorage.setDisplayProgressbar(true);\r\n        console.log(\"TO SAVE: \", this.s1Application);\r\n\r\n        // FOR ADSPE: Save Supporting Documents\r\n        if (this.materialInformation.newSupportiveDocumentList.length > 0) {\r\n          this.saveSupportingDocuments();\r\n        }\r\n\r\n        this.spinner.show();\r\n        this.s1Application.actionBy = this.currentUser;\r\n\r\n        if (\r\n          ascUser === \"ad-specialist\" &&\r\n          action === \"verify\" &&\r\n          status ===\r\n            APPLICATION_STATUS_FOR_COMPLIANCE.COMPLIANCE_DOCUMENT_VERIFIED_BY_AD_SPE\r\n        ) {\r\n          // this.s1Application.assignedScreener = this.s1Application.assignedUser;\r\n          this.s1Application.assignedUser = this.s1Application.assignedScreener;\r\n          console.log(\"ASSINGED SCREENER\", this.s1Application.assignedUser);\r\n        }\r\n\r\n        if (\r\n          ascUser === \"screener\" &&\r\n          action === \"verify\" &&\r\n          status ===\r\n            APPLICATION_STATUS_FOR_COMPLIANCE.COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER\r\n        ) {\r\n          // this.s1Application.assignedScreener = this.s1Application.assignedUser;\r\n          this.s1Application.assignedUser = this.s1Application.assignedReviewer;\r\n          console.log(\"ASSINGED REVIEWER\", this.s1Application.assignedUser);\r\n        }\r\n\r\n        this.apiService\r\n          .save(\r\n            `${ENDPOINTS.applicationForm}/s1/compliance/${ascUser}/${action}`,\r\n            this.s1Application\r\n          )\r\n          .subscribe(\r\n            (res: any) => {\r\n              console.log(\"SAVED STATUS: \", res.responseData.data);\r\n              this.spinner.hide();\r\n              this.sweetAlertService.success(res);\r\n              this.navigateToS1List();\r\n            },\r\n            (err) => {\r\n              console.log(err);\r\n              this.spinner.hide();\r\n              this.sweetAlertService.error(err);\r\n              this.dataStorage.setDisplayProgressbar(false);\r\n            },\r\n            () => {\r\n              this.spinner.hide();\r\n              this.dataStorage.setDisplayProgressbar(false);\r\n            }\r\n          );\r\n      }\r\n    });\r\n  }\r\n\r\n  /////////////////////////// REVISION //////////////////////////////////\r\n  saveStatusRevision(ascUser = \"\", action = \"\", status = \"\") {\r\n    console.log(\"Rev > \", this.s1Application);\r\n    Swal.fire({\r\n      text: \"Are you sure you want to save changes for revision?\",\r\n      icon: \"question\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Confirm\",\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.spinner.show();\r\n        this.dataStorage.setDisplayProgressbar(true);\r\n        if (\r\n          this.s1Application.revisionNo === 2 &&\r\n          this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT\r\n        ) {\r\n          this.spinner.hide();\r\n          this.sweetAlertService.customSuccessMessage(\r\n            \"Presentor can only submit revision no more than 2 times.\"\r\n          );\r\n        } else {\r\n          if (this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT) {\r\n            this.s1Application.submissionType = SUBMISSION_TYPE.REVISION;\r\n          }\r\n\r\n          // FOR ADSPE: Save Supporting Documents\r\n          console.log(\"Save supporting..\");\r\n          if (this.materialInformation.newSupportiveDocumentList.length > 0) {\r\n            this.saveSupportingDocuments();\r\n          }\r\n\r\n          this.s1Application.actionBy = this.dataStorage.getUserAccount();\r\n\r\n          if (\r\n            ascUser === \"ad-specialist\" &&\r\n            action === \"verify\" &&\r\n            status === APPLICATION_STATUS_REVISION.REVISION_VERIFIED_BY_AD_SPE\r\n          ) {\r\n            this.s1Application.assignedUser = this.s1Application.assignedScreener;\r\n          }\r\n\r\n          if (\r\n            ascUser === \"screener\" &&\r\n            action === \"verify\" &&\r\n            status === APPLICATION_STATUS_REVISION.REVISION_SCREENED\r\n          ) {\r\n            this.s1Application.assignedUser = this.s1Application.assignedReviewer;\r\n          }\r\n\r\n          console.log(\"TO SAVE: \", this.s1Application);\r\n\r\n          this.spinner.show();\r\n          this.apiService\r\n            .save(\r\n              `${ENDPOINTS.applicationForm}/s1/revision/${ascUser}/${action}`,\r\n              this.s1Application\r\n            )\r\n            .subscribe(\r\n              (res: any) => {\r\n                console.log(\"SAVED STATUS: \", res.responseData.data);\r\n                this.spinner.hide();\r\n                this.sweetAlertService.success(res);\r\n                this.navigateToS1List();\r\n              },\r\n              (err) => {\r\n                this.spinner.hide();\r\n                console.log(err);\r\n                this.sweetAlertService.error(err);\r\n                this.dataStorage.setDisplayProgressbar(false);\r\n              },\r\n              () => {\r\n                this.dataStorage.setDisplayProgressbar(false);\r\n              }\r\n            );\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  requestSpecialS1ApplicationApproval(): void {\r\n    this.applicationRequest = {\r\n      id: 0,\r\n      adTitle: this.s1Application.adTitle,\r\n      applicationOwner: this.s1Application.applicationOwner,\r\n      applicationType: this.s1Application.applicationType,\r\n      brand: this.s1Application.brand,\r\n      product: this.s1Application.product,\r\n      // category: this.s1Application.category,\r\n      company: this.s1Application.company,\r\n      formType: this.s1Application.formType,\r\n      // membersAffiliation: this.s1Application.membersAffiliation,\r\n      status: OTHER_STATUS.FOR_APPROVAL,\r\n      submissionDate: new Date(this.s1Application.submissionDate),\r\n      tagLine: this.s1Application.tagLine,\r\n      submitApplicationForm: false,\r\n      hasSpecialClearing: false,\r\n      applicationForm: null,\r\n    };\r\n    Swal.fire({\r\n      text: \"Are you sure you want to request this application for approval?\",\r\n      icon: \"question\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Confirm\",\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.spinner.show();\r\n        this.dataStorage.setDisplayProgressbar(true);\r\n        console.log(\"TO SAVE: \", this.applicationRequest);\r\n\r\n        if (this.currentUser.userRole.name === USER_ROLES.ROLE_ENCODER) {\r\n          this.applicationRequest.applicationOwner = this.s1Application.applicationOwner;\r\n        } else {\r\n          this.applicationRequest.applicationOwner = this.currentUser;\r\n        }\r\n        this.apiService\r\n          .save(ENDPOINTS.applicationRequests, this.applicationRequest)\r\n          .subscribe(\r\n            (res: any) => {\r\n              console.log(\"SAVED STATUS: \", res.responseData.data);\r\n              this.spinner.hide();\r\n              this.sweetAlertService.success(res);\r\n              // this.navigateToS1List();\r\n              this.router.navigate([\"asc/page/application/s1/special\"]);\r\n            },\r\n            (err) => {\r\n              this.spinner.hide();\r\n              console.log(err);\r\n              this.sweetAlertService.error(err);\r\n              this.dataStorage.setDisplayProgressbar(false);\r\n            },\r\n            () => {\r\n              this.spinner.hide();\r\n              this.dataStorage.setDisplayProgressbar(false);\r\n            }\r\n          );\r\n      }\r\n    });\r\n  }\r\n\r\n  accordionDisablingFunction(): void {\r\n    if (this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT) {\r\n      // if (this.s1Application.membersAffiliation && this.company && this.s1Application.brand) {\r\n      // this.accordionDisable = !this.accordionDisable;\r\n      this.accordionExpanded = !this.accordionExpanded;\r\n      this.validationMessage = \"\";\r\n      // } else {\r\n      //   this.validationMessage = ' Please provide all the required information...'\r\n      // }\r\n    }\r\n  }\r\n\r\n  disabledWeekEnds(d: Date | null): boolean {\r\n    const day = (d || new Date()).getDay();\r\n    return (\r\n      ((day !== 0 && day !== 6) ||\r\n        activeWeekendDates.find((weekendDate) => {\r\n          return format(d, \"yyyy-MM-dd\") === format(weekendDate, \"yyyy-MM-dd\");\r\n        })) &&\r\n      !Boolean(\r\n        activeHolidayDates.find((holidayDate) => {\r\n          return format(d, \"yyyy-MM-dd\") === format(holidayDate, \"yyyy-MM-dd\");\r\n        })\r\n      )\r\n    );\r\n  }\r\n\r\n  disableSaveAndSubmitButton() {\r\n    if (this.s1Application.autoSubmit === false) {\r\n      this.isScheduleSendIsEmpty = false;\r\n    }\r\n    if (this.s1Application.autoSubmit === true) {\r\n      this.isScheduleSendIsEmpty = true;\r\n      if (\r\n        this.s1Application.submissionDate === null ||\r\n        this.s1Application.submissionDate === undefined\r\n      ) {\r\n        this.isScheduleSendIsEmpty = true;\r\n      } else {\r\n        this.isScheduleSendIsEmpty = false;\r\n      }\r\n    }\r\n  }\r\n\r\n  adSpecValidation(i: any): void {}\r\n\r\n  buttonValidation(i: any): void {\r\n    if (\r\n      this.currentUserRole === USER_ROLES.ROLE_AD_SPECIALIST &&\r\n      this.s1Application.assignedScreener\r\n    ) {\r\n      this.buttonDisabled = false;\r\n    } else if (\r\n      this.currentUserRole === USER_ROLES.ROLE_SCREENER &&\r\n      this.s1Application.assignedReviewer\r\n    ) {\r\n      // if ((i || this.s1Application.assignedUser.userRole.name === USER_ROLES.ROLE_REVIEWER) &&\r\n      //   (i || this.s1Application.assignedUser || this.s1Application.decisionStatus)) {\r\n      this.buttonDisabled = false;\r\n      // }\r\n    }\r\n\r\n    this.dataStorage.setDecisionStatus(i);\r\n\r\n    if (\r\n      (i === \"INCOMPLETE\" || i === \"DISAPPROVED\") &&\r\n      this.currentUserRole === USER_ROLES.ROLE_SCREENER\r\n    ) {\r\n      if (\r\n        this.s1Application.internalStatus ===\r\n          APPLICATION_STATUS_FOR_COMPLIANCE.COMPLIANCE_DOCUMENT_VERIFIED_BY_AD_SPE ||\r\n        this.s1Application.internalStatus ===\r\n          APPLICATION_STATUS_REVISION.REVISION_VERIFIED_BY_AD_SPE\r\n      ) {\r\n        if (\r\n          this.s1Application.decisionStatus ===\r\n            APP_DECISION_STATUS.INCOMPLETE ||\r\n          this.s1Application.decisionStatus === APP_DECISION_STATUS.DISAPPROVED\r\n        ) {\r\n          this.s1Application.decisionStatus = i;\r\n          // if (this.rationaleLists.length === 0) {\r\n          this.incompleteDisapprovedModal(i);\r\n          // }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  selectApplicant(res) {\r\n    this.selectedApplicationOwner = res;\r\n    this.getPresentorDetails();\r\n  }\r\n\r\n  saveS1ApplicationByEncoder(data) {\r\n    this.spinner.show();\r\n    this.apiService\r\n      .save(ENDPOINTS.applicationFormEncoder + COMMON_FUNCTION.VERIFY, data)\r\n      .subscribe(\r\n        (res: any) => {\r\n          this.spinner.hide();\r\n          console.log(\"SAVED BY ENCODER : \", res.responseData.data);\r\n        },\r\n        (err: any) => {\r\n          this.spinner.hide();\r\n        }\r\n      );\r\n  }\r\n\r\n  rejectDisapprovedModal(): void {\r\n    const dialogRef = this.dialog.open(RejectDisapprovedReasonComponent, {\r\n      width: \"50%\",\r\n      height: \"65%\",\r\n      data: {\r\n        s1Application: this.s1Application,\r\n        applicationStage: \"s1\",\r\n      },\r\n    });\r\n  }\r\n\r\n  incompleteDisapprovedModal(decisionStatus): void {\r\n    const dialogRef = this.dialog.open(\r\n      IncompleteDisapprovedRationaleComponent,\r\n      {\r\n        width: \"50%\",\r\n        height: \"65%\",\r\n        data: {\r\n          s1Application: this.s1Application,\r\n          applicationStage: \"s1\",\r\n        },\r\n      }\r\n    );\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      this.getRationaleList();\r\n      if (\r\n        this.rationaleLists.length > 0 ||\r\n        this.rationaleOthersList.length > 0\r\n      ) {\r\n        this.s1Application.decisionStatus = decisionStatus;\r\n      }\r\n      if (result) {\r\n        this.buttonDisabled = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  navigateToS1List() {\r\n    // setTimeout(() => {\r\n    this.router.navigate([\"asc/page/application/s1/lists\"]);\r\n    // }, 2000);\r\n  }\r\n\r\n  openPerformanceMetrics() {\r\n    const dialogRef = this.dialog.open(PerformanceMetricsComponent, {\r\n      data: {\r\n        appFormReference: this.s1Application.appFormReference,\r\n        referenceCode: this.s1Application.referenceCode,\r\n      },\r\n    });\r\n    dialogRef.afterClosed().subscribe((result) => {});\r\n  }\r\n\r\n  viewReport(id, filename) {\r\n    if (filename === \"S1_Decision_Form\" || filename === \"Stamp_Material\") {\r\n      const downloadURL =\r\n        filename === \"S1_Decision_Form\"\r\n          ? this.s1Application?.decisionFormFileURL\r\n          : filename === \"Stamp_Material\"\r\n          ? this.s1Application?.stampMaterialFileURL\r\n          : \"\";\r\n      window.open(downloadURL);\r\n    } else {\r\n      this.report.filename = filename;\r\n      this.report.format = \"pdf\";\r\n      (this.report.module = \"Form\"),\r\n        (this.report.params = { applicationFormId: id });\r\n      console.log(this.report);\r\n      this.spinner.show();\r\n      this.apiService\r\n        .printReport(ENDPOINTS.generateReports, this.report)\r\n        .subscribe(\r\n          (data: any) => {\r\n            const newBlob = new Blob([data], { type: \"application/pdf\" });\r\n            const downloadURL = URL.createObjectURL(newBlob);\r\n            this.spinner.hide();\r\n            window.open(downloadURL);\r\n          },\r\n          (err: any) => {\r\n            this.spinner.hide();\r\n          }\r\n        );\r\n    }\r\n  }\r\n\r\n  getRationaleList(): void {\r\n    // Rationale Object\r\n    this.apiService\r\n      .findByParam(\r\n        ENDPOINTS.applicationRationale,\r\n        `application-form-id/${this.s1Application.id}`\r\n      )\r\n      .subscribe((res: any) => {\r\n        this.rationaleOthersList = res.responseData.data;\r\n      });\r\n    // Rationale List\r\n    this.apiService\r\n      .findByParam(\r\n        ENDPOINTS.rationaleList,\r\n        `application/${this.s1Application.id}`\r\n      )\r\n      .subscribe((res: any) => {\r\n        this.rationaleLists = res;\r\n      });\r\n    this.rationaleDisplay = true;\r\n  }\r\n\r\n  resubmitApplication(id = this.s1Application?.id) {\r\n    this.spinner.show();\r\n    let endpoint = this.hasMultimediaLengthChange\r\n      ? ENDPOINTS.modifyApprovedS1ApplicationFormMultimedia\r\n      : ENDPOINTS.modifyApprovedS1ApplicationFormSingleMedia;\r\n\r\n    endpoint += `=${id}`;\r\n\r\n    const newMedia = this.materialInformation.newMultimediaList[0];\r\n\r\n    const obj = this.hasMultimediaLengthChange\r\n      ? {\r\n          appFormReference: this.s1Application.appFormReference,\r\n          typeOfMedium: newMedia,\r\n          mediaType: \"STATIC\",\r\n          multimediaSizeLength: newMedia.sizeLength,\r\n          amount: 0,\r\n        }\r\n      : this.applicationSingleMedia;\r\n\r\n    this.apiService.save(endpoint, obj).subscribe(\r\n      (res) => {\r\n        this.spinner.hide();\r\n\r\n        if (\r\n          this.s1Application.refTypeOfMedium === TYPE_OF_MEDIUM.SINGLE_MEDIA\r\n        ) {\r\n          this.saveUpdateApplicationSingleMedia(null, null, null);\r\n        } else {\r\n          this.saveUpdateMultimedia(null, null, null);\r\n        }\r\n        this.sweetAlertService.success(res);\r\n\r\n        if (this.s1Application.multipleApplication) {\r\n          this.router.navigate([\"asc/page/application/s1/multiple\"]);\r\n        } else {\r\n          this.navigateToS1List();\r\n        }\r\n      },\r\n      (err: any) => {\r\n        this.spinner.hide();\r\n      }\r\n    );\r\n  }\r\n\r\n  clearDecisionStatus(): void {\r\n    this.s1Application.decisionStatus = \"\";\r\n  }\r\n\r\n  checkSingleMediaChanges() {\r\n    this.applicationSingleMedia = this.materialInformation?.applicationSingleMedia;\r\n    this.disableSubmitButtonByMedia = this.materialInformation?.disableSubmitButtonByMedia;\r\n    this.hasMultimediaLengthToEnableSubmit = true;\r\n  }\r\n\r\n  checkMultimediaChanges() {\r\n    // this.hasMultimediaLengthToEnableSubmit = this.multimediaMovingList.length ? true : false;\r\n    this.disableSubmitButtonByMedia = false;\r\n    this.hasMultimediaLengthToEnableSubmit =\r\n      this.materialInformation?.newMultimediaList.length ||\r\n      this.multimediaMovingList.length ||\r\n      this.multimediaStaticList.length\r\n        ? true\r\n        : false;\r\n\r\n    const multimediaListChanges = this.materialInformation?.newMultimediaList?.map(\r\n      (mappedMultimedia) => ({\r\n        multimediaSizeLength: mappedMultimedia?.sizeLength,\r\n        typeOfMedium: mappedMultimedia?.description,\r\n      })\r\n    );\r\n\r\n    const hasSizeLengthChange = this.currentSizeLengthMultimedia\r\n      .map((media) => ({\r\n        multimediaSizeLength: media.multimediaSizeLength,\r\n        typeOfMedium: media.typeOfMedium,\r\n        multimediaSizeLengthNew: multimediaListChanges?.filter(\r\n          (filteredMedia) => filteredMedia.typeOfMedium === media.typeOfMedium\r\n        )[0]?.multimediaSizeLength,\r\n      }))\r\n      .filter(\r\n        (filteredRes) =>\r\n          +filteredRes.multimediaSizeLength !==\r\n            +filteredRes.multimediaSizeLengthNew &&\r\n          filteredRes.multimediaSizeLengthNew\r\n      );\r\n\r\n    const hasNewMultimediaType = multimediaListChanges\r\n      ?.map((multimedia) =>\r\n        this.currentSizeLengthMultimedia.some(\r\n          (currMedia) => currMedia.typeOfMedium === multimedia.typeOfMedium\r\n        )\r\n      )\r\n      .includes(false);\r\n\r\n    this.hasMultimediaLengthChange =\r\n      hasNewMultimediaType || hasSizeLengthChange.length ? true : false;\r\n  }\r\n\r\n  checkEmittedMultimedia(multimediaDTO): void {\r\n    this.multimediaDTO = multimediaDTO.data;\r\n\r\n    switch (multimediaDTO.type) {\r\n      case TYPE_OF_MEDIUM.MULTIMEDIA_MOVING:\r\n        if (multimediaDTO.data) {\r\n          this.hasMultimediaLengthToEnableSubmit =\r\n            multimediaDTO.data.sizeLength > 0 ? true : false;\r\n          this.disableSubmitButtonByMedia = multimediaDTO.data.applicationMultimediaMovingList.filter(\r\n            (medium: ApplicationMultimediaItemsDTO) =>\r\n              medium.hasSelected === true\r\n          )\r\n            ? false\r\n            : true;\r\n        }\r\n        break;\r\n      case TYPE_OF_MEDIUM.MULTIMEDIA_STATIC:\r\n        if (multimediaDTO.data) {\r\n          this.disableSubmitButtonByMedia = multimediaDTO.data.applicationMultimediaStaticList.filter(\r\n            (medium: ApplicationMultimediaItemsDTO) =>\r\n              medium.hasSelected === true\r\n          )\r\n            ? false\r\n            : true;\r\n\r\n          this.hasMultimediaLengthToEnableSubmit = multimediaDTO.data.applicationMultimediaStaticList.filter(\r\n            (medium: ApplicationMultimediaItemsDTO) =>\r\n              medium.multimediaStaticMedium === \"digital static\" ||\r\n              (medium.hasSelected === true && medium.sizeLength)\r\n          )\r\n            ? true\r\n            : false;\r\n        }\r\n        break;\r\n    }\r\n  }\r\n\r\n  fetchMultimedia(): void {\r\n    console.log(\"S1 APPP::: \", this.s1Application);\r\n    let typeofMedium =\r\n      this.s1Application.refTypeOfMedium === TYPE_OF_MEDIUM.MULTIMEDIA_MOVING\r\n        ? \"moving\"\r\n        : \"static\";\r\n    let endpoint =\r\n      ENDPOINTS.applicationMultimedia +\r\n      \"-\" +\r\n      typeofMedium +\r\n      \"/app-form-reference\";\r\n    this.apiService\r\n      .findByParam(endpoint, this.s1Application.appFormReference)\r\n      .subscribe((multimedia) => {\r\n        console.log(\"Multimedia Response: \", multimedia.responseData.data);\r\n        if (multimedia) this.multimediaDTO = multimedia.responseData.data;\r\n      });\r\n  }\r\n\r\n  submitAppeal() {\r\n    let endpoint;\r\n    if (this.isAdmin) {\r\n      endpoint = ENDPOINTS.admin + `/s1/verify/appeal`;\r\n    } else if (this.isAdSpecialist) {\r\n      endpoint = ENDPOINTS.applicationFormAdSpecialist + `verify/appeal`;\r\n    }\r\n\r\n    this.spinner.show();\r\n    this.apiService.save(endpoint, this.s1Application).subscribe(\r\n      (res: any) => {\r\n        this.spinner.hide();\r\n        this.sweetAlertService.success(res);\r\n        console.log(\"submitAppeal : \", res.responseData.data);\r\n        this.navigateToS1List();\r\n      },\r\n      (err: any) => {\r\n        this.spinner.hide();\r\n      }\r\n    );\r\n  }\r\n\r\n  sendDecisionOrStampMaterialManual(): void {\r\n    Swal.fire({\r\n      text: \"Are you sure you want to send this application form?\",\r\n      icon: \"question\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Confirm\",\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.apiService\r\n          .save(\r\n            ENDPOINTS.s1ManualRelease + `/${this.s1Application.id}`,\r\n            this.s1Application\r\n          )\r\n          .subscribe((res: any) => {\r\n            this.sweetAlertService.customSuccessMessage(res.message);\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  checkCutOffTime(): boolean {\r\n    let regex = new RegExp(\":\", \"g\");\r\n    let startTime = \"11:00:00\";\r\n    let endTime = \"23:59:59\";\r\n    let currentTime = String(\r\n      new Date().getHours() +\r\n        \":\" +\r\n        new Date().getMinutes() +\r\n        \":\" +\r\n        new Date().getSeconds()\r\n    );\r\n\r\n    if (\r\n      parseInt(currentTime.replace(regex, \"\")) >=\r\n        parseInt(startTime.replace(regex, \"\")) &&\r\n      parseInt(currentTime.replace(regex, \"\")) <=\r\n        parseInt(endTime.replace(regex, \"\"))\r\n    ) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  checkMaterialFieldErrors(): boolean {\r\n    return (\r\n      (!this.s1Application?.adTitle ||\r\n        !this.s1Application?.refTypeOfMedium ||\r\n        !this.hasMultimediaLengthToEnableSubmit ||\r\n        this.disableSubmitButtonByMedia) &&\r\n      !this.s1Application.typeOfMedium\r\n    );\r\n  }\r\n\r\n  private getAllActiveHolidays() {\r\n    this.apiService.findAll(ENDPOINTS.holidays).subscribe((res: any) => {\r\n      activeHolidayDates = res.responseData.data\r\n        .filter(\r\n          (holidayDate) =>\r\n            holidayDate.status === \"ACTIVE\" &&\r\n            holidayDate.holidayType !== \"WEEKEND\"\r\n        )\r\n        .map((holidayDate) => new Date(holidayDate.holidayDate));\r\n    });\r\n  }\r\n\r\n  private getAllActiveWeekends() {\r\n    this.apiService.findAll(ENDPOINTS.holidays).subscribe((res: any) => {\r\n      activeWeekendDates = res.responseData.data\r\n        .filter(\r\n          (holidayDate) =>\r\n            holidayDate.status === \"ACTIVE\" &&\r\n            holidayDate.holidayType === \"WEEKEND\"\r\n        )\r\n        .map((holidayDate) => new Date(holidayDate.holidayDate));\r\n    });\r\n  }\r\n\r\n  isSaveAndRequestForApprovalDisabled(): boolean {\r\n    return (\r\n      (!this.s1Application?.brand ||\r\n        !this.s1Application?.company ||\r\n        !this.s1Application?.adTitle ||\r\n        this.s1Application?.brand?.penalty ||\r\n        !this.s1Application?.product ||\r\n        this.s1Application?.company?.delinquent ||\r\n        this.isInactiveAffiliation ||\r\n        this.s1Application?.company?.status === \"INACTIVE\" ||\r\n        !this.s1Application.submissionDate\r\n      )\r\n    );\r\n  }\r\n\r\n  isSingleRegularDisabled(): boolean {\r\n    if (this.s1Application?.applicationType?.description === 'Special Screening' ||\r\n        this.s1Application?.applicationType?.description === 'Special Screening and Clearing') {\r\n      return this.isSaveAndRequestForApprovalDisabled();\r\n    }\r\n    \r\n    return (\r\n      (!this.s1Application?.brand ||\r\n        !this.s1Application?.company ||\r\n        !this.s1Application?.adTitle ||\r\n        !this.s1Application?.refTypeOfMedium ||\r\n        !this.s1Application?.mainAttachmentReference ||\r\n        !this.s1Application?.refTypeOfMedium ||\r\n        (!this.s1Application?.hasNoSupportingDocs &&\r\n          !this.s1Application?.supportingAttachmentReference) ||\r\n        this.s1Application?.brand?.penalty ||\r\n        !this.s1Application?.product ||\r\n        this.s1Application?.company?.delinquent ||\r\n        this.isInactiveAffiliation ||\r\n        this.s1Application?.company?.status === \"INACTIVE\" ||\r\n        this.disableSubmitButtonByMedia ||\r\n        !this.hasMultimediaLengthToEnableSubmit) &&\r\n      !this.s1Application.typeOfMedium\r\n    );\r\n  }\r\n\r\n  isMultipleRegularDisabled(): boolean {\r\n    return (\r\n      !this.s1Application?.brand ||\r\n      !this.s1Application?.company ||\r\n      !this.s1Application?.adTitle ||\r\n      !this.s1Application?.refTypeOfMedium ||\r\n      this.s1Application?.brand?.penalty ||\r\n      !this.s1Application?.product ||\r\n      this.s1Application?.company?.delinquent ||\r\n      this.isInactiveAffiliation ||\r\n      this.s1Application?.company?.status === \"INACTIVE\" ||\r\n      !this.s1Application.submissionDate\r\n    );\r\n  }\r\n}\r\n","import { Component, Inject, OnInit, Optional } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { Company, S1Application } from '@models';\r\nimport { ApiService, DataStorageService, SweetAlertService } from '@services';\r\nimport { ENDPOINTS, ROLES } from '@shared';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-update-special-application',\r\n  templateUrl: './update-special-application.component.html',\r\n  styleUrls: ['./update-special-application.component.scss']\r\n})\r\nexport class UpdateSpecialApplicationComponent implements OnInit {\r\n\r\n  company = new Company();\r\n  s1Application = new S1Application();\r\n\r\n  currentUser: any;\r\n  currentUserRole: any;\r\n\r\n  isAscUser = false;\r\n  isDisableFieldOnUpdate = true;\r\n\r\n  formType = 'INDIVIDUAL';\r\n\r\n  ascUserRoleList = [...ROLES.filter((role: any) => role.ascUser === true).map((role: any) => role.role)];\r\n\r\n  constructor(\r\n    private apiService: ApiService,\r\n    private dataStorage: DataStorageService,\r\n    private sweetAlertService: SweetAlertService,\r\n    private router: Router,\r\n    @Optional() public dialogRef: MatDialogRef<UpdateSpecialApplicationComponent>,\r\n    @Optional() @Inject(MAT_DIALOG_DATA) public data: any,\r\n  ) {\r\n    if (data) {\r\n      this.s1Application = data;\r\n      this.s1Application.submissionDate = data.submissionDate;\r\n      this.s1Application.formType = this.formType;\r\n\r\n\r\n      // Client Info\r\n      // this.s1Application.company = this.multipleS1Application.company;\r\n      // this.company = this.multipleS1Application.company;\r\n      // this.s1Application.membersAffiliation = this.multipleS1Application.membersAffiliation;\r\n      // this.s1Application.brand = this.multipleS1Application.brand;\r\n    }\r\n\r\n\r\n\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.currentUser = this.dataStorage.getUserAccount();\r\n    this.currentUserRole = this.currentUser.userRole.name;\r\n    this.isAscUser = this.ascUserRoleList.includes(this.dataStorage.getUserRole());\r\n  }\r\n\r\n  onApproveOrDisapprove(status = 'APPROVED'): void {\r\n    const displayStatus = status === 'APPROVED' ? 'approve' : 'disapprove';\r\n    Swal.fire({\r\n      text: `Are you sure you want to ${displayStatus} this application?`,\r\n      icon: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Confirm'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        const endpointExtension = status === 'APPROVED' ? '/approve' : '/disapprove';\r\n        // this.s1Application.actionDate = new Date();\r\n        this.s1Application.actionBy = this.currentUser.username;\r\n        this.apiService.save(`${ENDPOINTS.applicationRequests}${endpointExtension}/${this.s1Application.id}`, this.s1Application).subscribe(\r\n          (res: any) => {\r\n            this.sweetAlertService.customSuccessMessage(`Application successfully ${status.toLowerCase()}.`);\r\n          this.router.navigate(['asc/page/application/s1/special']);\r\n          }, (err: any) => {\r\n            console.log(err);\r\n          }, () => {\r\n            this.dialogRef.close(this.s1Application);\r\n          }\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  updateSpecialApplication(): void {\r\n    // TO DO\r\n    // will only redirect to add new S1 application\r\n    // saving or updating is in add-s1-application.component.ts\r\n    this.dialogRef.close();\r\n    this.router.navigate(['asc/page/application/s1/add']);\r\n  }\r\n\r\n}\r\n","\r\n// import { WebSocketService } from './../../../../../core/services/socket/websocket.service';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { BadgeCounnter } from './../../../../../core/models/counter';\r\nimport { Component, Inject, OnInit, ViewChild, OnDestroy } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTable, MatTableDataSource } from '@angular/material/table';\r\nimport { S1Application, S2Application } from '@models';\r\nimport { PAYMENT_STATUS, ENDPOINTS, APPLICATION_STATUS, FORM_STATUS, SUBMISSION_TYPE, USER_ROLES, TYPE_OF_MEDIUM, ACTION_STATUS } from '@shared';\r\nimport { ApiService, DataStorageService, SweetAlertService } from '@services';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport Swal from 'sweetalert2';\r\nimport { S1FormTypeComponent } from 'app/modules/fragments/s1-form-type/s1-form-type.component';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { MultipleApplication } from 'app/core/models/multiple-application.model';\r\nimport { UpdateMultipleApplicationComponent }\r\n  from 'app/modules/fragments/update-multiple-application/update-multiple-application.component';\r\nimport { UpdateSpecialApplicationComponent } from 'app/modules/fragments/update-special-application/update-special-application.component';\r\nimport { ApplicationRequest } from 'app/core/models/application-request.model';\r\nimport { RequestForSpecialClearingComponent } from 'app/modules/fragments/request-for-special-clearing/request-for-special-clearing.component';\r\nimport { TypeOfExecution } from 'app/core/models/type-of-execution.model';\r\nimport { CommonServices } from 'app/core/services/common-services.service';\r\n\r\nimport { Subscription, timer, merge } from 'rxjs';\r\nimport { mergeMap } from 'rxjs/operators';\r\nimport { WebSocketService } from 'app/core/services/socket/websocket.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-list-s1-application',\r\n  templateUrl: './list-s1-application.component.html',\r\n  styleUrls: ['./list-s1-application.component.scss']\r\n})\r\nexport class ListS1ApplicationComponent implements OnInit, OnDestroy {\r\n  @ViewChild(MatPaginator, { static: false }) paginatorFalse: MatPaginator;\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  pageSize = 10;\r\n  pageNo = 0;\r\n  pageSizeOptions: number[] = [10, 20, 50];\r\n  @ViewChild(MatSort, { static: false }) sort: MatSort;\r\n  @ViewChild(MatTable, { static: false }) table: MatTable<S1Application>;\r\n\r\n  // individual s1 application list\r\n  dataSource: MatTableDataSource<S1Application>;\r\n  displayedColumns = [];\r\n  totalItems = 0;\r\n  totalPages = 0;\r\n  currentPage = 1; // reuse\r\n  // currentSize = 100;\r\n\r\n  badgeCounter: BadgeCounnter = new BadgeCounnter();\r\n\r\n  returnedApps = [];\r\n  click = 0;\r\n  timeLeft: number = 60;\r\n  interval: any;\r\n  refreshButtonEnabled = true;\r\n  timerDisplay: any;\r\n  isTimerValueDisplay = false;\r\n  // , 'ascStatus', 'awaitingActionFrom'];\r\n\r\n  // multiple s1 application list variables\r\n  multipleApplicationList = [];\r\n  multipleApplicationDataSource: MatTableDataSource<MultipleApplication>;\r\n  multipleApplicationDisplayedColumns = ['adTitle', 'typeOfApplication', 'companyName', 'brand', 'product', 'status'];\r\n  multipleTotalItems = 0;\r\n\r\n  // end multiple application list variables\r\n\r\n  // special s1 application list variables\r\n  specialApplicationList = [];\r\n  specialApplicationDataSource: MatTableDataSource<S1Application>;\r\n  specialApplicationDisplayedColumns = ['adTitle', 'typeOfApplication', 'companyName', 'brand', 'status'];\r\n  specialTotalItems = 0;\r\n  // end special application list variables\r\n\r\n  // assigned s1 application list variables\r\n  assignedApplicationList = [];\r\n  assignedApplicationDataSource: MatTableDataSource<S1Application>;\r\n  assignedApplicationDisplayedColumns = ['referenceCode', 'adTitle', 'typeOfApplication', 'companyName', 'brand', 'product', 'status', 'internalStatus', 'icon'];  // end assigned application list variables\r\n\r\n  forReleaseApplicationsList = [];\r\n  forReleaseTotalItems = 0;\r\n  forReleaseApplicationDataSource: MatTableDataSource<S1Application>;\r\n  forReleaseApplicationDisplayedColumns = ['referenceCode', 'typeOfApplication', 'companyName', 'brand', 'product', 'typeOfMedium', 'status', 'internalStatus', 'decisionStatus']\r\n  applicationList = [];\r\n  currentUser: any;\r\n  viewApplicationType: string;\r\n  applicationTypeTitle: string;\r\n  submissionType = SUBMISSION_TYPE.ORIGINAL;\r\n  originalTabDataCount = 0;\r\n  revisionTabDataCount = 0;\r\n  complianceTabDataCount = 0;\r\n  decisionCommentTabDataCount = 0;\r\n  releasedAppealTabDataCount = 0;\r\n\r\n  isSuperAdmin = false;\r\n  isAdmin = false;\r\n  isAccounting = false;\r\n  isApplicant = false;\r\n  isScreener = false;\r\n  isReviewer = false;\r\n  isAdSpecialist = false;\r\n  isEvaluator = false;\r\n\r\n  s1Application = new S1Application();\r\n  s2Application = new S2Application();\r\n  multipleS1Application = new MultipleApplication();\r\n  applicationRequest = new ApplicationRequest();\r\n  s1ApplicationTitle = 'S1 APPLICATION';\r\n  displayedContent = 'ORIGINAL';\r\n  paymentStatus = PAYMENT_STATUS;\r\n  retrieveReassignLength: number;\r\n\r\n  counterObservable: Subscription;\r\n\r\n  constructor(\r\n    private apiService: ApiService,\r\n    private dataStorage: DataStorageService,\r\n    private router: Router,\r\n    private sweetAlertService: SweetAlertService,\r\n    private dialog: MatDialog,\r\n    private spinner: NgxSpinnerService,\r\n    private route: ActivatedRoute,\r\n    private commonService: CommonServices,\r\n    private webSocketService: WebSocketService\r\n  ) { }\r\n  ngOnDestroy(): void {\r\n    // if(this.counterObservable){\r\n      // this.counterObservable.unsubscribe();\r\n    // }\r\n  }\r\n  ngOnInit(): void {\r\n    this.webSocketService.listen(\"broadcast\").subscribe( res =>{\r\n      console.log('test')\r\n      this.apiService.findAll(ENDPOINTS.badgeCountByAscUser + this.currentUser.id).subscribe(\r\n        (res: any) => {\r\n          this.badgeCounter = res;\r\n          console.log(this.badgeCounter);\r\n         }\r\n      )\r\n    })\r\n    // this.counterObservable = merge(timer(0, 5000))\r\n    // .pipe(mergeMap(_ => this.apiService.findAll(ENDPOINTS.badgeCountByAscUser + this.currentUser.id)))\r\n    // .subscribe(\r\n    //   (res: BadgeCounnter) => {\r\n    //     this.badgeCounter = res;\r\n    //   },\r\n    //   (err: HttpErrorResponse) => {\r\n    //     console.log('Error:', err);\r\n    //   }\r\n    // );\r\n    this.currentUser = this.dataStorage.getUserAccount();\r\n    this.viewApplicationType = this.route.parent.snapshot.url[0].path;\r\n    if (this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT) {\r\n      this.displayedColumns = ['referenceCode', 'typeOfApplication', 'companyName', 'brand', 'typeOfMedium', 'status', 'paymentStatus', 'icon'];\r\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_SCREENER || this.currentUser.userRole.name === USER_ROLES.ROLE_REVIEWER) {\r\n      this.displayedColumns = ['referenceCode', 'typeOfApplication', 'companyName', 'brand', 'typeOfMedium', 'status', 'paymentStatus', 'internalStatus', 'icon'];\r\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_SUPER_ADMIN || this.currentUser.userRole.name === USER_ROLES.ROLE_ADMIN\r\n      || this.currentUser.userRole.name === USER_ROLES.ROLE_ENCODER) {\r\n      this.displayedColumns = ['referenceCode', 'typeOfApplication', 'companyName', 'brand', 'typeOfMedium', 'status', 'paymentStatus', 'internalStatus'];\r\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_AD_SPECIALIST){\r\n      this.displayedColumns = ['referenceCode', 'typeOfApplication', 'companyName', 'brand', 'product', 'typeOfMedium', 'status', 'paymentStatus', 'internalStatus', 'icon'];\r\n    }\r\n    this.getList();\r\n    this.getListCounts();\r\n    this.initUserRole();\r\n    this.refreshApplicationBadgeCount();\r\n  }\r\n\r\n  parseInternalStatus(internalStatus: string, actionBy){\r\n    let user: string = `${actionBy.firstName} ${actionBy.lastName}`;\r\n    if(internalStatus.match(\"SUBMITTED\")){\r\n      return `SUBMITTED BY: ${user}`;\r\n    } else if(internalStatus.match(\"REVIEWED\")) return `REVIEWED BY: ${user}`;\r\n    else if(internalStatus.match(\"VERIFIED\")) return `VERIFIED BY: ${user}`;\r\n    else if(internalStatus.match(\"SCREENED\")) return `SCREENED BY: ${user}`;\r\n    else if(internalStatus.match(\"REJECTED\")) return `REJECTED BY: ${user}`;\r\n    // return internalStatus;\r\n  }\r\n\r\n\r\n  refreshApplicationBadgeCount(): void {\r\n    this.commonService.sendClickEvent();\r\n  }\r\n\r\n  formatTextPayment(status: string): string {\r\n    return status.replace(/_/g, ' ');\r\n  }\r\n\r\n\r\n  initUserRole() {\r\n    if (this.currentUser.userRole.name === USER_ROLES.ROLE_SUPER_ADMIN) {\r\n      this.isSuperAdmin = true;\r\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_ADMIN) {\r\n      this.isAdmin = true;\r\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_ACCOUNTING) {\r\n      this.isAccounting = true;\r\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT) {\r\n      this.isApplicant = true;\r\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_SCREENER) {\r\n      this.isScreener = true;\r\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_REVIEWER) {\r\n      this.isReviewer = true;\r\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_AD_SPECIALIST) {\r\n      this.isAdSpecialist = true;\r\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_ENCODER) {\r\n      this.isEvaluator = true;\r\n    }\r\n  }\r\n\r\n  getListCounts(): void {\r\n    let endpoint\r\n    let screenedCount: number = 0;\r\n    if (this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT) {\r\n      endpoint = ENDPOINTS.badgeCountByApplicationOwner;\r\n    } else {\r\n      endpoint = ENDPOINTS.badgeCountByAscUser;\r\n    }\r\n    this.apiService.findAll(ENDPOINTS.applicationForm + `/custom/search?assignedScreenerId=${this.currentUser.id}&page=${this.currentPage}&size=${this.pageSize}`)\r\n    .subscribe( response => {\r\n      screenedCount = response.totalItems;\r\n    })\r\n    this.apiService.findAll(endpoint + this.currentUser.id).subscribe(\r\n      (res: any) => {\r\n        this.badgeCounter = res;\r\n        this.apiService.findAll(ENDPOINTS.applicationForm + `/custom/search?assignedScreenerId=${this.currentUser.id}&page=${this.currentPage}&size=${this.pageSize}`)\r\n        .subscribe( response => {\r\n          this.badgeCounter.screenedApplications = response.totalItems;\r\n        })\r\n       }\r\n    )\r\n\r\n  }\r\n\r\n  getList(submissionType = 'ORIGINAL') {\r\n\r\n    this.currentPage = this.pageNo;\r\n    this.currentPage++;\r\n    if (this.currentPage === 0) this.currentPage++;\r\n\r\n    if (this.viewApplicationType === 'multiple') {\r\n      this.applicationTypeTitle = 'MULTIPLE';\r\n      this.getMultipleS1ApplicationList();\r\n    } else if (this.viewApplicationType === 'special') {\r\n      this.applicationTypeTitle = 'SPECIAL';\r\n      this.getSpecialS1ApplicationList();\r\n    } else if (this.viewApplicationType === 'assigned-applications') {\r\n      this.applicationTypeTitle = 'Assigned Applications';\r\n      this.getAssignAppFormBy();\r\n    } else if (this.viewApplicationType === 'for-release') {\r\n      this.applicationTypeTitle = 'For Release Applications';\r\n      this.getForReleaseApplicationList();\r\n    } else if (this.viewApplicationType === 'released') {\r\n      this.applicationTypeTitle = 'Released Applications';\r\n      this.getReleasedApplicationList();\r\n    } else {\r\n\r\n      this.applicationTypeTitle = 'INDIVIDUAL';\r\n      let param = submissionType.toUpperCase();\r\n\r\n      if (param === SUBMISSION_TYPE.COMPLIANCE && this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT) {\r\n        param = `&decisionStatus=INCOMPLETE&complianceForm=true`;\r\n      } else if (param === SUBMISSION_TYPE.COMPLIANCE && this.currentUser.userRole.name !== USER_ROLES.ROLE_APPLICANT) {\r\n        param = `&complianceForm=true`;\r\n      } else {\r\n        param = `&submissionType=${param}`;\r\n      }\r\n\r\n      let endpoint = `custom/search?page=${this.currentPage}&size=${this.pageSize}${param}`;\r\n\r\n      if (this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT) {\r\n        endpoint = ENDPOINTS.applicationFormPresentor + endpoint + `&applicationOwnerId=${this.currentUser.id}`;\r\n      } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_ENCODER) {\r\n        endpoint = ENDPOINTS.applicationFormEncoder + endpoint + `&assignedUserId=${this.currentUser.id}`;\r\n      } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_AD_SPECIALIST) {\r\n        endpoint = ENDPOINTS.applicationFormAdSpecialist + endpoint + `&assignedUserId=${this.currentUser.id}`;\r\n      } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_SCREENER) {\r\n        if (submissionType ===  'ORIGINAL')endpoint = ENDPOINTS.applicationFormScreener + endpoint + `&assignedScreenerId=${this.currentUser.id}`;\r\n        else if(submissionType === 'SCREENED APPLICATIONS') endpoint = ENDPOINTS.applicationForm + `/custom/search?assignedScreenerId=${this.currentUser.id}&page=${this.currentPage}&size=${this.pageSize}`;\r\n        else if (submissionType === 'REVISION') endpoint = ENDPOINTS.applicationFormScreener + endpoint;\r\n        else if (submissionType === 'COMPLIANCE') endpoint = ENDPOINTS.applicationFormScreener + endpoint;\r\n      } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_REVIEWER) {\r\n        endpoint = ENDPOINTS.applicationFormReviewer + endpoint + `&assignedReviewerId=${this.currentUser.id}`;\r\n      } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_ADMIN ||\r\n        this.currentUser.userRole.name === USER_ROLES.ROLE_SUPER_ADMIN) {\r\n        endpoint = ENDPOINTS.applicationFormAdmin + endpoint;\r\n      }\r\n\r\n      this.spinner.show()\r\n      this.apiService.findAll(endpoint).subscribe((res: any) => {\r\n        this.applicationList = res.data;\r\n        this.totalItems = res.totalItems;\r\n        console.log('applicationList: ', this.applicationList);\r\n\r\n        this.dataSource = new MatTableDataSource<S1Application>(this.applicationList);\r\n        // this.dataSource.paginator = this.paginator;\r\n\r\n        setTimeout(() => {\r\n          this.spinner.hide();\r\n        }, 1);\r\n      }, (err) => {\r\n        setTimeout(() => {\r\n          this.spinner.hide();\r\n        }, 1);\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  getScreenedApps(){\r\n\r\n  }\r\n\r\n\r\n  showStatus(stats: any): string{\r\n    if(stats.paymentStatus !== PAYMENT_STATUS.PAID && stats.actionStatus === ACTION_STATUS.ASSIGN_TO_PRESENTOR) return \"ON PROCESS\";\r\n    else return stats.externalStatus.replaceAll(\"_\", \" \").toUpperCase();\r\n  }\r\n\r\n  pageEvents(event: any) {\r\n    this.pageSize = event.pageSize;\r\n\r\n    if (event.pageIndex > this.pageNo) {\r\n      this.pageNo++;\r\n    } else {\r\n      this.pageNo--;\r\n    }\r\n\r\n    if (event.pageSize > event.length) {\r\n      this.pageNo = 0;\r\n    }\r\n\r\n    this.getList(this.displayedContent.toUpperCase());\r\n  }\r\n\r\n  setPageSizeOptions(setPageSizeOptionsInput: string) {\r\n    if (setPageSizeOptionsInput) {\r\n      this.pageSizeOptions = setPageSizeOptionsInput.split(',').map(str => +str);\r\n    }\r\n  }\r\n\r\n  getMultipleS1ApplicationList(): void {\r\n    let endpoint = ''; const ascEndpoint = `/custom/search?page=${this.currentPage}&size=${this.pageSize}`; let assignedASCUser = '';\r\n    if (this.currentUser.userRole.name === USER_ROLES.ROLE_ADMIN || this.currentUser.userRole.name === USER_ROLES.ROLE_SUPER_ADMIN) {\r\n      endpoint = ENDPOINTS.multipleApplication + ascEndpoint;\r\n    } else {\r\n      if (this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT) {\r\n        assignedASCUser = `&applicationOwnerId=${this.currentUser.id}`;\r\n      } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_ENCODER) {\r\n        assignedASCUser = `&assignedEvaluatorId=${this.currentUser.id}`;\r\n      } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_AD_SPECIALIST) {\r\n        assignedASCUser = `&assignedAdSpecialistId=${this.currentUser.id}`;\r\n      } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_SCREENER) {\r\n        assignedASCUser = `&assignedScreenerId=${this.currentUser.id}`;\r\n      } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_REVIEWER) {\r\n        assignedASCUser = `&assignedReviewerId=${this.currentUser.id}`;\r\n      }\r\n      endpoint = ENDPOINTS.multipleApplication + ascEndpoint + assignedASCUser;\r\n    }\r\n    console.log(endpoint);\r\n\r\n    this.apiService.findAll(endpoint).subscribe((res: any) => {\r\n      this.multipleApplicationList = res.data;\r\n      console.log('multipleApplicationList: ', res);\r\n      this.multipleTotalItems = res.totalItems;\r\n      this.refreshApplicationBadgeCount();\r\n\r\n      this.multipleApplicationDataSource = new MatTableDataSource<MultipleApplication>(this.multipleApplicationList);\r\n      this.multipleApplicationDataSource.paginator = this.paginator;\r\n      this.multipleApplicationDataSource.sort = this.sort;\r\n      setTimeout(() => {\r\n        this.spinner.hide();\r\n      }, 1);\r\n    }, (err) => {\r\n      setTimeout(() => {\r\n        this.spinner.hide();\r\n      }, 1);\r\n    });\r\n  }\r\n\r\n  getSpecialS1ApplicationList(): void {\r\n    if (this.currentUser.userRole.name === USER_ROLES.ROLE_ADMIN || this.currentUser.userRole.name === USER_ROLES.ROLE_SUPER_ADMIN) {\r\n      const obj = {\r\n        statuses: ['FOR_APPROVAL', 'APPROVED', 'DISAPPROVED']\r\n      }\r\n\r\n      this.apiService.save(`${ENDPOINTS.s1SpecialApplicationRequestsAdmin}?page=${this.currentPage}&size=${this.pageSize}`, obj)\r\n        .subscribe((res: any) => {\r\n          this.specialApplicationList = res.data;\r\n          this.specialTotalItems = res.totalItems;\r\n          console.log('specialApplicationList: ', res);\r\n          this.refreshApplicationBadgeCount();\r\n\r\n          this.specialApplicationDataSource = new MatTableDataSource<S1Application>(this.specialApplicationList);\r\n          this.specialApplicationDataSource.paginator = this.paginator;\r\n          this.specialApplicationDataSource.sort = this.sort;\r\n          setTimeout(() => {\r\n            this.spinner.hide();\r\n          }, 1);\r\n        }, (err) => {\r\n          setTimeout(() => {\r\n            this.spinner.hide();\r\n          }, 1);\r\n        });\r\n    } else {\r\n      const obj = {\r\n        applicationOwnerId: this.currentUser.id,\r\n        statuses: ['FOR_APPROVAL', 'APPROVED', 'DISAPPROVED']\r\n      }\r\n\r\n      this.apiService.save(`${ENDPOINTS.s1SpecialApplicationRequests}?page=${this.currentPage}&size=${this.pageSize}`, obj)\r\n        .subscribe((res: any) => {\r\n          this.specialApplicationList = res.data;\r\n          this.specialTotalItems = res.totalItems;\r\n          console.log('specialApplicationList: ', res);\r\n          this.refreshApplicationBadgeCount();\r\n\r\n          this.specialApplicationDataSource = new MatTableDataSource<S1Application>(this.specialApplicationList);\r\n          this.specialApplicationDataSource.paginator = this.paginator;\r\n          this.specialApplicationDataSource.sort = this.sort;\r\n          setTimeout(() => {\r\n            this.spinner.hide();\r\n          }, 1);\r\n        }, (err) => {\r\n          setTimeout(() => {\r\n            this.spinner.hide();\r\n          }, 1);\r\n        });\r\n    }\r\n  }\r\n\r\n  getAssignAppFormBy(): void {\r\n    let endpoint = '';\r\n    if (this.currentUser.userRole.name === USER_ROLES.ROLE_AD_SPECIALIST) {\r\n      endpoint = ENDPOINTS.applicationForm + `/custom/search?assignedAdSpecialistId=${this.currentUser.id}&page=${this.currentPage}&size=${this.pageSize}`\r\n    } else {\r\n      endpoint = ENDPOINTS.applicationForm + `/custom/search?assignedScreenerId=${this.currentUser.id}&page=${this.currentPage}&size=${this.pageSize}`\r\n    }\r\n\r\n    this.spinner.show();\r\n    this.apiService.findAll(endpoint).subscribe((res: any) => {\r\n      this.assignedApplicationList = res.data;\r\n      this.retrieveReassignLength = res.totalItems;\r\n      this.refreshApplicationBadgeCount();\r\n\r\n      this.assignedApplicationDataSource = new MatTableDataSource<S1Application>(this.assignedApplicationList);\r\n      this.assignedApplicationDataSource.sort = this.sort;\r\n\r\n      setTimeout(() => {\r\n        this.spinner.hide();\r\n      }, 1);\r\n    }, (err) => {\r\n      setTimeout(() => {\r\n        this.spinner.hide();\r\n      }, 1);\r\n    });\r\n  }\r\n\r\n  getForReleaseApplicationList() {\r\n\r\n    let endpoint; const param = `&page=${this.currentPage}&size=${this.pageSize}`;\r\n    if (this.currentUser.userRole.name === USER_ROLES.ROLE_AD_SPECIALIST) {\r\n      endpoint = ENDPOINTS.getForReleaseApplicationAdSpe + `?releaseStatus=FOR_RELEASE&assignedAdSpecialistId=${this.currentUser.id}${param}`;\r\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_REVIEWER) {\r\n      endpoint = ENDPOINTS.getForReleaseApplicationsReviewer + `?releaseStatus=FOR_RELEASE&assignedReviewerId=${this.currentUser.id}${param}`;\r\n    } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_ADMIN || USER_ROLES.ROLE_SUPER_ADMIN) {\r\n      endpoint = ENDPOINTS.getAdminSuperAdminForReleaseApplication + `/custom/search?releaseStatus=FOR_RELEASE${param}`;\r\n    }\r\n\r\n    this.apiService.findAll(endpoint).subscribe((res: any) => {\r\n      this.forReleaseApplicationsList = res.data;\r\n      this.forReleaseTotalItems = res.totalItems;\r\n      this.refreshApplicationBadgeCount();\r\n\r\n      console.log('getForReleaseApplicationList: ', this.forReleaseApplicationsList);\r\n\r\n      this.forReleaseApplicationDataSource = new MatTableDataSource<S1Application>(this.forReleaseApplicationsList);\r\n      this.forReleaseApplicationDataSource.paginator = this.paginatorFalse;\r\n      this.forReleaseApplicationDataSource.sort = this.sort;\r\n\r\n      setTimeout(() => {\r\n        this.spinner.hide();\r\n      }, 1);\r\n    }, (err) => {\r\n      setTimeout(() => {\r\n        this.spinner.hide();\r\n      }, 1);\r\n    });\r\n  }\r\n\r\n\r\n  getReleasedApplicationList() {\r\n    this.apiService.findAll(ENDPOINTS.getReleaseApplicationsAdSpe + `?page=${this.currentPage}&size=${this.pageSize}`)\r\n      .subscribe((res: any) => {\r\n\r\n        this.forReleaseApplicationsList = res.data;\r\n        console.log('getReleasedApplicationList: ', this.forReleaseApplicationsList);\r\n        this.forReleaseTotalItems = res.totalItems;\r\n        this.refreshApplicationBadgeCount();\r\n\r\n        this.forReleaseApplicationDataSource = new MatTableDataSource<S1Application>(this.forReleaseApplicationsList);\r\n        this.forReleaseApplicationDataSource.paginator = this.paginatorFalse;\r\n        this.forReleaseApplicationDataSource.sort = this.sort;\r\n        setTimeout(() => {\r\n          this.spinner.hide();\r\n        }, 1);\r\n      }, (err) => {\r\n        setTimeout(() => {\r\n          this.spinner.hide();\r\n        }, 1);\r\n      });\r\n  }\r\n\r\n\r\n  getForDecisionAndComment(displayedContent) {\r\n    let endpoint = '';\r\n\r\n    // APPEAL\r\n    if (this.isAdSpecialist) {\r\n      endpoint = ENDPOINTS.applicationFormAdSpecialist + `custom/search?assignedUserId=${this.currentUser.id}&hasOngoingAppeal=true&page=${this.currentPage}&size=${this.pageSize}&submissionType=ORIGINAL`;\r\n    }\r\n    // RETURN TO SCREENER\r\n    else if (this.isScreener) {\r\n      endpoint = ENDPOINTS.s1ApplicationForm + `screener/assigned-user-id/${this.currentUser.id}/forwarded-for-decision-and-comment`;\r\n    } else if (this.isReviewer) {\r\n      endpoint = ENDPOINTS.s1ApplicationForm + `reviewer/assigned-user-id/${this.currentUser.id}/forwarded-for-decision-and-comment`;\r\n    }\r\n\r\n    else if (this.isAdmin || this.isSuperAdmin) {\r\n      if (displayedContent === 'For Appeal') {\r\n        endpoint = ENDPOINTS.applicationFormAdmin + `custom/search?hasOngoingAppeal=true&page=${this.currentPage}&size=${this.pageSize}`;\r\n      } else {\r\n        endpoint = ENDPOINTS.admin + `/s1/for-decision-comment/reviewer-screener`;\r\n      }\r\n    }\r\n    this.spinner.show()\r\n    this.apiService.findAll(endpoint)\r\n      .subscribe((res: any) => {\r\n        if (res) {\r\n          if (res?.data) {\r\n            this.applicationList = res?.data;\r\n          } else {\r\n            this.applicationList = res?.responseData?.data;\r\n          }\r\n          console.log(displayedContent + ': ', this.applicationList);\r\n          this.refreshApplicationBadgeCount();\r\n\r\n          this.dataSource = new MatTableDataSource<S1Application>(this.applicationList);\r\n          this.dataSource.paginator = this.paginatorFalse;\r\n          this.dataSource.sort = this.sort;\r\n          setTimeout(() => {\r\n            this.spinner.hide();\r\n          }, 1);\r\n        } else {\r\n          this.applicationList = [];\r\n        }\r\n      }, (err) => {\r\n        setTimeout(() => {\r\n          this.spinner.hide();\r\n        }, 1);\r\n      });\r\n  }\r\n\r\n\r\n  public doFilter = (value: string) => {\r\n    this.dataSource.filter = value.trim().toLocaleLowerCase();\r\n  }\r\n\r\n  public doFilterS1MultipleApplicationList = (value: string) => {\r\n    this.multipleApplicationDataSource.filter = value.trim().toLocaleLowerCase();\r\n  }\r\n\r\n  public doFilterSpecialS1ApplicationList = (value: string) => {\r\n    this.specialApplicationDataSource.filter = value.trim().toLocaleLowerCase();\r\n  }\r\n\r\n  public doFilterAssignedS1ApplicationList = (value: string) => {\r\n    this.assignedApplicationDataSource.filter = value.trim().toLocaleLowerCase();\r\n  }\r\n\r\n  public doFilterForReleaseApplicationList = (value: string) => {\r\n    this.forReleaseApplicationDataSource.filter = value.trim().toLocaleLowerCase();\r\n  }\r\n\r\n  viewApplication(data: any): void {\r\n    this.s1Application = data;\r\n    console.log('S1 FORM: ', this.s1Application);\r\n    if (this.viewApplicationType === 'released' || this.viewApplicationType === 'for-release' || this.viewApplicationType === 'assigned-applications' ||\r\n      this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT || this.currentUser.userRole.name === USER_ROLES.ROLE_ADMIN ||\r\n      this.currentUser.userRole.name === USER_ROLES.ROLE_SUPER_ADMIN) {\r\n      this.router.navigate(['asc/page/application/s1/update/', data.id]);\r\n    }\r\n    else if (data.formStatus === FORM_STATUS.OPEN && this.s1Application.internalStatus !== APPLICATION_STATUS.S1_APPLICATION_REJECTED) {\r\n      Swal.fire({\r\n        text: 'Are you sure you want to open this application? This application will be LOCKED on your account.',\r\n        icon: 'question',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        confirmButtonText: 'Confirm'\r\n      }).then((result) => {\r\n        if (result.value) {\r\n          if (this.currentUser.userRole.name === USER_ROLES.ROLE_ENCODER) {\r\n            this.s1Application.assignedEncoder = this.currentUser;\r\n          } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_AD_SPECIALIST) {\r\n            this.s1Application.assignedAdSpecialist = this.currentUser;\r\n          } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_SCREENER) {\r\n            this.s1Application.assignedScreener = this.currentUser;\r\n          } else if (this.currentUser.userRole.name === USER_ROLES.ROLE_REVIEWER) {\r\n            this.s1Application.assignedReviewer = this.currentUser;\r\n          }\r\n          this.s1Application.currentAssignee = this.currentUser.userRole.name;\r\n\r\n          let endpoint = '';\r\n          if (this.currentUser.userRole.name === USER_ROLES.ROLE_ENCODER) {\r\n            endpoint = ENDPOINTS.applicationFormEncoder;\r\n          } else {\r\n            endpoint = ENDPOINTS.applicationFormAdSpecialist;\r\n          }\r\n\r\n          this.apiService.save(endpoint + ENDPOINTS.takeApplication, this.s1Application).subscribe(\r\n            (res: any) => {\r\n              this.sweetAlertService.customSuccessMessage('Application successfully assigned to you.', 3);\r\n              this.router.navigate(['asc/page/application/s1/update/', data.id]);\r\n              this.refreshApplicationBadgeCount();\r\n            }, (err: any) => {\r\n              console.log('error deep');\r\n              let lockedBy = '';\r\n              if (this.s1Application.assignedUser) {\r\n                lockedBy = ` by ${this.s1Application.assignedUser.firstName} ${this.s1Application.assignedUser.lastName} `;\r\n              }\r\n\r\n              err.error.message = `Application has been locked${lockedBy} for processing. Kindly select another application to process.`;\r\n              this.sweetAlertService.error(err, 5);\r\n              // location.reload();\r\n            });\r\n        }\r\n      });\r\n    } else {\r\n      if (this.s1Application.assignedUser) {\r\n        if (this.s1Application.assignedUser.username === this.currentUser.username) {\r\n          this.router.navigate(['asc/page/application/s1/update/', data.id]);\r\n          this.refreshApplicationBadgeCount();\r\n        } else {\r\n          console.log('error out');\r\n          let lockedBy = '';\r\n          if (this.s1Application.assignedUser) {\r\n            lockedBy = ` by ${this.s1Application.assignedUser.firstName} ${this.s1Application.assignedUser.lastName} `;\r\n          }\r\n          this.sweetAlertService.customErrorMessage(`Application has been locked${lockedBy} for processing.Kindly select another application to process.`, 5);\r\n          this.refreshApplicationBadgeCount();\r\n        }\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  viewMultipleApplication(data: any): void {\r\n    this.multipleS1Application = data;\r\n    console.log('multipleS1Application: ', this.multipleS1Application);\r\n\r\n    let dialogRef;\r\n\r\n    if (this.currentUser.userRole.name === USER_ROLES.ROLE_ADMIN || this.currentUser.userRole.name === USER_ROLES.ROLE_SUPER_ADMIN) {\r\n      dialogRef = this.dialog.open(UpdateMultipleApplicationComponent, {\r\n        width: '80%',\r\n        height: '85%',\r\n        data: this.multipleS1Application\r\n      });\r\n    } else {\r\n      dialogRef = this.dialog.open(UpdateMultipleApplicationComponent, {\r\n        width: '80%',\r\n        height: '85%',\r\n        data: this.multipleS1Application\r\n      });\r\n    }\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this.getMultipleS1ApplicationList();\r\n      }\r\n    });\r\n  }\r\n\r\n  viewSpecialApplication(data: any): void {\r\n    this.applicationRequest = data;\r\n    this.s1Application = new S1Application();\r\n    this.s1Application.adTitle = data.adTitle;\r\n    this.s1Application.applicationOwner = data.applicationOwner;\r\n    this.s1Application.applicationType = data.applicationType;\r\n    this.s1Application.brand = data.brand;\r\n    this.s1Application.product = data.product;\r\n    // this.s1Application.category = data.category;\r\n    this.s1Application.company = data.company;\r\n    // this.s1Application.membersAffiliation = data.membersAffiliation;\r\n    this.s1Application.submissionDate = data.submissionDate;\r\n    this.s1Application.tagLine = data.tagLine;\r\n    this.s1Application.status = data.status;\r\n    this.s1Application.submissionType = SUBMISSION_TYPE.ORIGINAL;\r\n    this.s1Application.appFormReference = '';\r\n    this.s1Application.formType = data.formType;\r\n    this.s1Application.applicationRequest = data;\r\n    this.s1Application.id = 0;\r\n\r\n\r\n    let dialogRef;\r\n    if (this.currentUser.userRole.name === USER_ROLES.ROLE_ADMIN || this.currentUser.userRole.name === USER_ROLES.ROLE_SUPER_ADMIN\r\n      || this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT &&\r\n      this.applicationRequest.status === 'FOR_APPROVAL') {\r\n      dialogRef = this.dialog.open(UpdateSpecialApplicationComponent, {\r\n        width: '80%',\r\n        height: '85%',\r\n        data: this.applicationRequest\r\n      });\r\n    } else {\r\n      this.dataStorage.setS1Application(this.s1Application);\r\n      this.dataStorage.setSpecialS1Application(this.applicationRequest);\r\n      this.router.navigate(['asc/page/application/s1/add']);\r\n      // dialogRef = this.dialog.open(UpdateSpecialApplicationComponent, {\r\n      //   width: '80%',\r\n      //   height: '85%',\r\n      //   data: this.applicationRequest\r\n      // });\r\n    }\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this.getSpecialS1ApplicationList();\r\n      }\r\n    });\r\n  }\r\n\r\n  getCompanyById(id): Promise<any> {\r\n    // updates company details in data storage\r\n    const promise = new Promise((resolve, reject) => {\r\n      this.apiService.findById(ENDPOINTS.company, id).subscribe((res: any) => {\r\n        if (res) {\r\n          this.currentUser.company = res.responseData.data;\r\n          this.dataStorage.saveUserAccount(this.currentUser);\r\n          resolve(this.currentUser);\r\n        }\r\n      }, err => {\r\n        reject(err);\r\n      });\r\n    });\r\n    return promise;\r\n  }\r\n\r\n  openFormTypeModal() {\r\n    this.getCompanyById(this.currentUser.company.id).then(\r\n      (res) => {\r\n        if (res.company.membersAffiliation.status === 'INACTIVE') {\r\n          this.sweetAlertService.customErrorMessage(`Your Company's membership affiliation is no longer active. Cannot proceed with new application. Please contact ASC admin`);\r\n        } else {\r\n          const dialogRef = this.dialog.open(S1FormTypeComponent, {\r\n            // width: '30%',\r\n            // height: '25%',\r\n          });\r\n\r\n          dialogRef.afterClosed().subscribe(result => {\r\n            if (result) {\r\n              console.log(result);\r\n            }\r\n          });\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  applyForS2(data) {\r\n    let typeOfExecution;\r\n    if (data.refTypeOfMedium === TYPE_OF_MEDIUM.SINGLE_MEDIA) {\r\n      this.apiService.findByParam(ENDPOINTS.applicationSingleMedia, `app-form-reference/${data.appFormReference}`).subscribe(\r\n        (res: any) => {\r\n          if (res.responseData.data.length > 0) {\r\n            typeOfExecution = res.responseData.data[0].mediumExecution.typeOfExecution;\r\n            data.typeOfExecution = typeOfExecution;\r\n            const dialogRef = this.dialog.open(ListS1Dialog, {\r\n              data: {\r\n                s2Application: data\r\n              }\r\n            });\r\n          }\r\n        }, (err: any) => {\r\n        })\r\n    } else {\r\n      const dialogRef = this.dialog.open(ListS1Dialog, {\r\n        data: {\r\n          s2Application: data\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  returnTo(process, s1App): void {\r\n    this.s1Application = s1App;\r\n    Swal.fire({\r\n      text: 'Are you sure you want to ' + process + ' this application?',\r\n      icon: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Confirm'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.spinner.show();\r\n        let endpoint = '';\r\n        this.s1Application.actionBy = this.currentUser;\r\n\r\n        if (this.currentUser.userRole.name === USER_ROLES.ROLE_SCREENER) {\r\n          this.s1Application.currentAssignee = USER_ROLES.ROLE_AD_SPECIALIST;\r\n          if (this.s1Application.multipleApplication && this.s1Application.submissionType === SUBMISSION_TYPE.ORIGINAL) {\r\n            endpoint = `${ENDPOINTS.multipleApplicationReturnToAdSpe}${this.s1Application.multipleApplication.id}/return`;\r\n            \r\n          } else {\r\n            endpoint = `${ENDPOINTS.applicationFormScreener}return`;\r\n          }\r\n        } else {\r\n          if (this.s1Application.multipleApplication && this.s1Application.submissionType === SUBMISSION_TYPE.ORIGINAL) {\r\n            endpoint = `${ENDPOINTS.multipleApplicationReturnToScreener}${this.s1Application.multipleApplication.id}/return`;\r\n          } else {\r\n            endpoint = `${ENDPOINTS.applicationFormReviewer}return`;\r\n          }\r\n        }\r\n\r\n        // console.log('TO SAVE: ', this.s1Application);\r\n        this.apiService.save(endpoint, this.s1Application).subscribe(\r\n          (res: any) => {\r\n            // console.log('RETURN: ', res.responseData.data);\r\n            if (res.code === 200) {\r\n              this.spinner.hide();\r\n              this.getList();\r\n              this.sweetAlertService.customSuccessMessage('Successfully returned the application');\r\n              this.refreshApplicationBadgeCount();\r\n            }\r\n          }, (err: any) => {\r\n            this.spinner.hide();\r\n          })\r\n      }\r\n    });\r\n  }\r\n\r\n  saveStatus(ascUser = '', action = '', status = '', application: any) {\r\n    let fetchedData;\r\n    this.apiService.findAll(`${ENDPOINTS.applicationForm}/id/${application.id}`).subscribe(validateApp=>{\r\n      console.log('validate => ', validateApp)\r\n      fetchedData = validateApp.responseData.data;\r\n    })\r\n    Swal.fire({\r\n      text: 'Are you sure you want to cancel this application?',\r\n      icon: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Confirm'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.dataStorage.setDisplayProgressbar(true);\r\n        if(fetchedData.assignedUser && fetchedData.formStatus === FORM_STATUS.LOCKED) {\r\n          this.sweetAlertService.customErrorMessage(\"This form is already in process\");\r\n          return\r\n        }\r\n        this.apiService.update(`${ENDPOINTS.applicationForm}/s1/${ascUser}/${action}`, application).subscribe(\r\n          (res: any) => {\r\n            console.log('SAVED STATUS: ', res.responseData.data);\r\n            this.sweetAlertService.customSuccessMessage('Application successfully canceled.');\r\n            this.getList();\r\n            this.refreshApplicationBadgeCount();\r\n            // this.router.navigate(['asc/page/application/s1/lists']);\r\n          }, (err) => {\r\n            console.log(err);\r\n            this.sweetAlertService.error(err);\r\n            this.dataStorage.setDisplayProgressbar(false);\r\n          }, () => {\r\n            this.dataStorage.setDisplayProgressbar(false);\r\n          });\r\n\r\n      }\r\n    });\r\n  }\r\n\r\n  changeTab(evt) {\r\n    console.log('tab ---  ', evt);\r\n    if (evt.tab.textLabel !== 'For Decision and Comments') {\r\n      this.getListCounts();\r\n    }\r\n    if (evt.tab) {\r\n      this.displayedContent = evt.tab.textLabel;\r\n      if (this.displayedContent === 'For Decision and Comments' || this.displayedContent === 'For Appeal') {\r\n        this.getForDecisionAndComment(this.displayedContent);\r\n      }else if(this.displayedContent === 'Returned Application'){\r\n        console.log('returneeed')\r\n        const userType = this.isAdSpecialist ? 'adSpeId' : 'screenerId'\r\n        this.spinner.show()\r\n        this.apiService.findAll(`${this.isAdSpecialist ? ENDPOINTS.getAllAdSpeReturnedApps : ENDPOINTS.getAllScreenerReturnedApps}/?&${ userType }=${ this.currentUser.id }&page=${this.currentPage-1}&size=${this.pageSize}`)\r\n        .subscribe( respose =>{\r\n          this.applicationList = respose.data;\r\n          this.totalItems = respose.totalItems;\r\n          console.log('applicationList: ', this.applicationList);\r\n  \r\n          this.dataSource = new MatTableDataSource<S1Application>(this.applicationList);\r\n          this.dataSource.paginator = this.paginator;\r\n          this.assignedApplicationDisplayedColumns.splice(this.assignedApplicationDisplayedColumns.indexOf(\"icon\"),1);\r\n          setTimeout(() => {\r\n            this.spinner.hide();\r\n          }, 1);\r\n        }, err=>{\r\n          setTimeout(() => {\r\n            this.spinner.hide();\r\n          }, 1);\r\n        })\r\n      } else if(this.displayedContent === 'Screened Applications'){\r\n        this.getList(this.displayedContent.toUpperCase());\r\n      }\r\n      \r\n      else {\r\n        this.getList(this.displayedContent.toUpperCase());\r\n      }\r\n    }\r\n  }\r\n\r\n  sortEvent() {\r\n    this.click++;\r\n    if (this.click % 2 === 0) {\r\n      console.log('even', this.click);\r\n      this.dataSource = new MatTableDataSource<S1Application>(this.applicationList);\r\n      this.dataSource.paginator = this.paginator;\r\n      return this.dataSource.data.sort((a, b) => a.id - b.id);\r\n    } else {\r\n      console.log('odd', this.click);\r\n      this.dataSource = new MatTableDataSource<S1Application>(this.applicationList);\r\n      this.dataSource.paginator = this.paginator;\r\n      return this.dataSource.data.reverse();\r\n    }\r\n    // this.dataSource.data.sort(() => Math.random() - 0.5)\r\n  }\r\n\r\n  unlockApplication(process, s1App): void {\r\n    this.s1Application = s1App;\r\n    Swal.fire({\r\n      text: 'Are you sure you want to ' + process + ' this application?',\r\n      icon: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Confirm'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.spinner.show();\r\n        let endpoint = '';\r\n        this.s1Application.actionBy = this.currentUser;\r\n        this.s1Application.formStatus = FORM_STATUS.OPEN;\r\n\r\n        endpoint = ENDPOINTS.applicationForm;\r\n\r\n        // console.log('TO SAVE: ', this.s1Application);\r\n        this.apiService.update(endpoint, this.s1Application).subscribe(\r\n          (res: any) => {\r\n            // console.log('RETURN: ', res.responseData.data);\r\n            if (res.code === 200) {\r\n              this.spinner.hide();\r\n              this.getList();\r\n              this.sweetAlertService.customSuccessMessage('Successfully unlocked the application');\r\n              this.refreshApplicationBadgeCount();\r\n            }\r\n          }, (err: any) => {\r\n            this.spinner.hide();\r\n          })\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  refresh() {\r\n    this.commonService.sendClickEvent();\r\n    this.startTimer();\r\n  }\r\n\r\n  startTimer() {\r\n    this.interval = setInterval(() => {\r\n      this.timeLeft--;\r\n      if(this.timeLeft > 0){\r\n        this.refreshButtonEnabled = false;\r\n        this.isTimerValueDisplay = true;\r\n      }else{\r\n        this.refreshButtonEnabled = true;\r\n        this.isTimerValueDisplay = false;\r\n        this.timeLeft = 60;\r\n        clearInterval(this.interval)\r\n      }\r\n      this.timerDisplay=this.transform(this.timeLeft)\r\n    },1000)\r\n  }\r\n\r\n  transform(value: number): string {\r\n    const minutes: number = Math.floor(value / 60);\r\n    return minutes + ':' + (value - minutes * 60);\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'list-s1-dialog',\r\n  templateUrl: 'list-s1-dialog.html',\r\n  styleUrls: ['./list-s1-application.component.scss']\r\n})\r\nexport class ListS1Dialog implements OnInit {\r\n\r\n  s2Application = new S2Application();\r\n  s1Application = new S1Application();\r\n  applicationRequest = new ApplicationRequest();\r\n  typeOfExecution = new TypeOfExecution();\r\n\r\n\r\n  constructor(private apiService: ApiService,\r\n    private sweetAlertService: SweetAlertService,\r\n    private router: Router,\r\n    private dataStorage: DataStorageService,\r\n    public dialog: MatDialog,\r\n    public dialogRef: MatDialogRef<ListS1ApplicationComponent>,\r\n    private commonService: CommonServices,\r\n    @Inject(MAT_DIALOG_DATA) public data: any) { }\r\n\r\n  ngOnInit(): void {\r\n    this.typeOfExecution = this.data.s2Application.typeOfExecution;\r\n    this.s2Application.applicationForm = this.data.s2Application;\r\n    this.s1Application = this.data.s2Application;\r\n  }\r\n\r\n  // Used for S2 or TOA\r\n  proceedToS2(isS2) {\r\n    Swal.fire({\r\n      text: `Are you sure you want to apply for ${isS2 ? 'S2' : 'TOA'}?`,\r\n      icon: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Confirm'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.s2Application.submissionType = this.data.s2Application.submissionType;\r\n        this.s2Application.applicationForm = this.data.s2Application;\r\n        this.s2Application.submissionType = SUBMISSION_TYPE.ORIGINAL; // this.s2Application.applicationForm.submissionType;\r\n        if (!isS2) {\r\n          this.s2Application.hasToa = true;\r\n          // this.s2Application.submissionType = SUBMISSION_TYPE.TOA;\r\n        }\r\n        this.s2Application.internalStatus = 'SAVED';\r\n        this.s2Application.externalStatus = 'SAVED';\r\n        console.log('View S2:', this.data.s2Application);\r\n        this.apiService.save(ENDPOINTS.s2ApplicationFormPresentorSave, this.s2Application).subscribe(\r\n          (res: any) => {\r\n            console.log(res);\r\n            this.router.navigate(['asc/page/application/s2/update', res.responseData.data.id]);\r\n            this.commonService.sendClickEvent();\r\n            this.dialogRef.close();\r\n          }, (err: any) => {\r\n          })\r\n      }\r\n    })\r\n  }\r\n\r\n  requestForClearingAndClearance(): void {\r\n    Swal.fire({\r\n      text: 'Are you sure you want to request approval for special clearing?',\r\n      icon: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Confirm'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.dialogRef.close();\r\n        let dialogRef;\r\n        this.applicationRequest.hasSpecialClearing = true;\r\n        this.applicationRequest.applicationForm = this.s1Application;\r\n        dialogRef = this.dialog.open(RequestForSpecialClearingComponent, {\r\n          width: '80%',\r\n          height: '85%',\r\n          data: {\r\n            applicationRequest: this.applicationRequest,\r\n            applicationType: 'Request for Special Clearing'\r\n          }\r\n        });\r\n        this.commonService.sendClickEvent();\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n}\r\n","export * from './affiliation/affiliation.component';\r\nexport * from './brands/brands.component';\r\nexport * from './payment-type/payment-type.component';\r\nexport * from './type-of-document/type-of-document.component';\r\nexport * from './type-of-medium/type-of-medium.component';\r\nexport * from './type-of-reason/type-of-reason.component';\r\nexport * from './category/category.component';\r\nexport * from './product/product.component';\r\nexport * from './asc-rates/asc-rates.component';\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { CompanyRoutingModule } from './company-routing.module';;\r\n\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule,\r\n    CompanyRoutingModule,\r\n  ]\r\n})\r\nexport class CompanyModule { }\r\n","export default \"<form (keydown.enter)=\\\"$event.preventDefault()\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12 title\\\">\\r\\n        <mat-label>\\r\\n          <i class=\\\"material-icons icon-black\\\">view_list</i> <span\\r\\n            [hidden]=\\\"viewApplicationType === 'assigned-applications' || viewApplicationType === 'for-release' || viewApplicationType === 'released'\\\"> {{s1ApplicationTitle}} -</span> &nbsp;<span>{{\\r\\n            applicationTypeTitle?.replace('Assigned', 'Retrieve/Re-assign') | uppercase}}</span>\\r\\n        </mat-label>\\r\\n        <button class=\\\"button-right\\\" type=\\\"submit\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"refresh()\\\" [disabled]=\\\"!refreshButtonEnabled\\\">\\r\\n          <span class=\\\"material-icons\\\">sync</span>\\r\\n          <label *ngIf=\\\"isTimerValueDisplay\\\"> &nbsp;{{timerDisplay}}</label>\\r\\n        </button>\\r\\n        <button class=\\\"button-right button-red\\\" type=\\\"submit\\\" mat-raised-button\\r\\n          *ngIf=\\\"currentUser?.userRole?.name=='ROLE_APPLICANT' || currentUser?.userRole?.name=='ROLE_ENCODER'\\\"\\r\\n          [hidden]=\\\"viewApplicationType === 'multiple'\\\"\\r\\n          (click)=\\\"openFormTypeModal()\\\">\\r\\n          <i class=\\\"material-icons color__white\\\">add</i> NEW APPLICATION\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n    <hr>\\r\\n    <!-- ADMIN - INCLUDES LIST FOR MULTIPLE APPLICATIONS -->\\r\\n    <!-- TEMP: SHOW multiple application tab for all roles -->\\r\\n    <!-- <mat-tab-group>\\r\\n      <mat-tab  >\\r\\n        <ng-container *ngTemplateOutlet=\\\"individualS1ApplicationList\\\"></ng-container>\\r\\n      </mat-tab>\\r\\n      <mat-tab>\\r\\n        <ng-container *ngTemplateOutlet=\\\"multipleS1ApplicationList\\\"></ng-container>\\r\\n      </mat-tab>\\r\\n      <mat-tab >\\r\\n        <ng-container *ngTemplateOutlet=\\\"specialS1ApplicationList\\\"></ng-container>\\r\\n      </mat-tab>\\r\\n      <mat-tab  >\\r\\n        <ng-container *ngTemplateOutlet=\\\"assignedToScreenerS1ApplicationList\\\"></ng-container>\\r\\n      </mat-tab>\\r\\n    </mat-tab-group> -->\\r\\n\\r\\n    <div *ngIf=\\\"applicationTypeTitle === 'INDIVIDUAL'\\\">\\r\\n      <ng-container *ngTemplateOutlet=\\\"individualS1ApplicationList\\\"></ng-container>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"viewApplicationType === 'multiple'\\\">\\r\\n      <ng-container *ngTemplateOutlet=\\\"multipleS1ApplicationList\\\"></ng-container>\\r\\n    </div>\\r\\n    <div\\r\\n      *ngIf=\\\"(currentUser.userRole.name === 'ROLE_APPLICANT' || currentUser.userRole.name === 'ROLE_ENCODER' || currentUser.userRole.name === 'ROLE_ADMIN' || currentUser?.userRole.name === 'ROLE_SUPER_ADMIN') && viewApplicationType === 'special'\\\">\\r\\n      <ng-container *ngTemplateOutlet=\\\"specialS1ApplicationList\\\"></ng-container>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"(currentUser.userRole.name=='ROLE_AD_SPECIALIST'||currentUser.userRole.name=='ROLE_SCREENER')\\\">\\r\\n      <ng-container *ngTemplateOutlet=\\\"assignedToScreenerS1ApplicationList\\\"></ng-container>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"currentUser.userRole.name=='ROLE_AD_SPECIALIST' || currentUser.userRole.name=='ROLE_REVIEWER' || currentUser.userRole.name === 'ROLE_ADMIN' || currentUser?.userRole.name === 'ROLE_SUPER_ADMIN'\\\">\\r\\n      <ng-container *ngTemplateOutlet=\\\"forReleaseApplicationList\\\"></ng-container>\\r\\n    </div>\\r\\n\\r\\n    <!-- OTHER USERS - DISPLAY ONLY S1 APPLICATIONS -->\\r\\n    <!-- <ng-container *ngIf=\\\"!showMultipleS1Application\\\">\\r\\n      <ng-container *ngTemplateOutlet=\\\"individualS1ApplicationList\\\"></ng-container>\\r\\n    </ng-container> -->\\r\\n  </div>\\r\\n\\r\\n</form>\\r\\n\\r\\n<!-- TEMPLATE FOR INDIVIDUAL S1 APPLICATION LIST -->\\r\\n<ng-template #individualS1ApplicationList>\\r\\n  <br>\\r\\n  <div class=\\\"row\\\" fxLayout fxLayoutAlign=\\\"center center\\\">\\r\\n    <mat-form-field class=\\\"col-md-9\\\" appearance=\\\"outline\\\">\\r\\n      <mat-label><i class=\\\"material-icons\\\">search</i> Search Applications</mat-label>\\r\\n      <input matInput type=\\\"text\\\" (keyup)=\\\"doFilter($event.target.value)\\\">\\r\\n      <input type=\\\"hidden\\\">\\r\\n    </mat-form-field>\\r\\n\\r\\n\\r\\n    <!-- <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-2\\\">LEGEND:</div>\\r\\n    <div class=\\\"col-md-1 legend legend-blue\\\">ORIGINAL</div>\\r\\n    <div class=\\\"col-md-1 legend legend-green\\\">REVISION</div>\\r\\n    <div class=\\\"col-md-1 legend legend-orange\\\">FOR COMPLIANCE</div>\\r\\n    <div class=\\\"col-md-1\\\" style=\\\"background-color:lightpink;border-radius:8px;width:20%;\\\">Rejected</div>\\r\\n  </div> -->\\r\\n\\r\\n    <div class=\\\"col\\\" *ngIf=\\\"currentUser.userRole.name==='ROLE_AD_SPECIALIST'\\\">\\r\\n      <div class=\\\"legend-content\\\">\\r\\n        <table class=\\\"legend-table\\\">\\r\\n          <tr>\\r\\n            <td>\\r\\n              LEGEND:\\r\\n            </td>\\r\\n          </tr>\\r\\n          <tr>\\r\\n            <td>\\r\\n              <div class=\\\"legend-box legend-yellow\\\"></div> LOCKED\\r\\n            </td>\\r\\n          </tr>\\r\\n         <tr>\\r\\n            <td>\\r\\n              <div class=\\\"legend-box legend-white\\\"></div> OPEN\\r\\n            </td>\\r\\n          </tr>\\r\\n          <tr>\\r\\n            <td>\\r\\n              <div class=\\\"legend-box legend-blue\\\"></div> ORIGINAL\\r\\n            </td>\\r\\n          </tr>\\r\\n          <tr>\\r\\n            <td>\\r\\n              <div class=\\\"legend-box legend-orange\\\"></div> FOR COMPLIANCE\\r\\n            </td>\\r\\n          </tr>\\r\\n          <tr>\\r\\n            <td>\\r\\n              <div class=\\\"legend-box legend-green\\\"></div> REVISION\\r\\n            </td>\\r\\n          </tr>\\r\\n       <!--     <tr>\\r\\n            <td>\\r\\n              <div class=\\\"legend-box legend-orange\\\"></div> FOR COMPLIANCE\\r\\n            </td>\\r\\n          </tr> -->\\r\\n        </table>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col\\\" *ngIf=\\\"currentUser.userRole.name !='ROLE_AD_SPECIALIST'\\\">\\r\\n      <div class=\\\"legend-content\\\">\\r\\n        <table class=\\\"legend-table\\\">\\r\\n          <tr>\\r\\n            <td>\\r\\n              LEGEND:\\r\\n            </td>\\r\\n          </tr>\\r\\n          <tr>\\r\\n            <td>\\r\\n              <div class=\\\"legend-box legend-blue\\\"></div> ORIGINAL\\r\\n            </td>\\r\\n          </tr>\\r\\n          <tr>\\r\\n            <td>\\r\\n              <div class=\\\"legend-box legend-orange\\\"></div> FOR COMPLIANCE\\r\\n            </td>\\r\\n          </tr>\\r\\n          <tr>\\r\\n            <td>\\r\\n              <div class=\\\"legend-box legend-green\\\"></div> REVISION\\r\\n            </td>\\r\\n          </tr>\\r\\n        </table>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n\\r\\n  <br>\\r\\n<!--\\r\\n  <mat-tab-group mat-align-tabs=\\\"start\\\" (selectedTabChange)=\\\"changeTab($event)\\\">\\r\\n    <mat-tab label=\\\"\\\">\\r\\n      <ng-template mat-tab-label>\\r\\n        Original\\r\\n        <div matBadge={{dataSource?.data?.length}} class=\\\"c-badge\\\" matBadgeColor=\\\"warn\\\"></div>\\r\\n      </ng-template>\\r\\n    </mat-tab>\\r\\n    <mat-tab label=\\\"\\\">\\r\\n      <ng-template mat-tab-label>\\r\\n        Revision\\r\\n        <div matBadge={{dataSource?.data?.length}} class=\\\"c-badge\\\" matBadgeColor=\\\"warn\\\"></div>\\r\\n      </ng-template>\\r\\n    </mat-tab>\\r\\n    <mat-tab label=\\\"\\\">\\r\\n      <ng-template mat-tab-label>\\r\\n        Compliance\\r\\n        <div matBadge={{dataSource?.data?.length}} class=\\\"c-badge\\\" matBadgeColor=\\\"warn\\\"></div>\\r\\n      </ng-template>\\r\\n    </mat-tab>\\r\\n  </mat-tab-group> -->\\r\\n  <mat-tab-group mat-align-tabs=\\\"start\\\" (selectedTabChange)=\\\"changeTab($event)\\\">\\r\\n    <mat-tab label=\\\"Original\\\">\\r\\n      <ng-template mat-tab-label>\\r\\n        Original\\r\\n        <div matBadge={{badgeCounter.countOriginal}} class=\\\"c-badge\\\" matBadgeColor=\\\"warn\\\"></div>\\r\\n      </ng-template>\\r\\n    </mat-tab>\\r\\n    <mat-tab label=\\\"Revision\\\" *ngIf=\\\"!isReviewer\\\">\\r\\n      <ng-template mat-tab-label>\\r\\n        Revision\\r\\n        <div matBadge={{badgeCounter.countRevision}} class=\\\"c-badge\\\" matBadgeColor=\\\"warn\\\"></div>\\r\\n      </ng-template>\\r\\n    </mat-tab>\\r\\n    <mat-tab label=\\\"Compliance\\\" *ngIf=\\\"!isReviewer\\\">\\r\\n      <ng-template mat-tab-label>\\r\\n        Compliance\\r\\n        <div matBadge={{badgeCounter.countCompliance}} class=\\\"c-badge\\\" matBadgeColor=\\\"warn\\\"></div>\\r\\n      </ng-template>\\r\\n    </mat-tab>\\r\\n    <mat-tab label=\\\"For Appeal\\\" *ngIf=\\\"isAdSpecialist || isAdmin || isSuperAdmin\\\">\\r\\n      <ng-template mat-tab-label>\\r\\n        Released Appeal\\r\\n        <div matBadge={{badgeCounter.countTotalOngoingAppeal}} class=\\\"c-badge\\\" matBadgeColor=\\\"warn\\\"></div>\\r\\n      </ng-template>\\r\\n    </mat-tab>\\r\\n    <mat-tab label=\\\"Returned Application\\\" *ngIf=\\\"isAdSpecialist || isScreener\\\">\\r\\n      <ng-template mat-tab-label>\\r\\n        Returned Application\\r\\n        <div matBadge={{badgeCounter.returnedApplications}} class=\\\"c-badge\\\" matBadgeColor=\\\"warn\\\"></div>\\r\\n      </ng-template>\\r\\n    </mat-tab>\\r\\n      <mat-tab label=\\\"For Decision and Comments\\\" *ngIf=\\\"isScreener || isReviewer || isAdmin || isSuperAdmin\\\">\\r\\n        <ng-template mat-tab-label>\\r\\n          For Decision and Comments\\r\\n          <div matBadge={{badgeCounter.countTotalScreenerAndReviewerDecisionComment}} class=\\\"c-badge\\\" matBadgeColor=\\\"warn\\\"></div>\\r\\n        </ng-template>\\r\\n      </mat-tab>\\r\\n  \\r\\n      <mat-tab label=\\\"Screened Applications\\\" *ngIf=\\\"isScreener || isReviewer || isAdmin || isSuperAdmin\\\">\\r\\n        <ng-template mat-tab-label>\\r\\n          Screened Applications\\r\\n          <div matBadge={{badgeCounter.screenedApplications}} class=\\\"c-badge\\\" matBadgeColor=\\\"warn\\\"></div>\\r\\n        </ng-template>\\r\\n      </mat-tab>\\r\\n  </mat-tab-group>\\r\\n\\r\\n  <div class=\\\"mat-elevation-z8 fields\\\">\\r\\n\\r\\n\\r\\n    <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\r\\n      <ng-container matColumnDef=\\\"referenceCode\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef>REFERENCE CODE <mat-icon class=\\\"cursor\\\" (click)=\\\"sortEvent()\\\" style=\\\"color:black\\\" [hidden]=\\\"currentUser.userRole.name === 'ROLE_ENCODER'\\\">swap_vert</mat-icon></th>\\r\\n        <td mat-cell *matCellDef=\\\"let element; let i = index\\\" (click)=\\\"viewApplication(element)\\\" [ngStyle]=\\\"{'pointer-events': ((i !== 0 && currentUser.userRole.name === 'ROLE_ENCODER') ? 'none' : ''),\\r\\n        'background-color': (\\r\\n          (currentUser.userRole.name === 'ROLE_ENCODER' && i > 0 ? '#beb8b8' :\\r\\n            (((element.submissionType === 'ORIGINAL' && element.decisionStatus !== 'INCOMPLETE') || element.decisionStatus === 'INCOMPLETE') ? 'lightblue' :\\r\\n            ((element.submissionType === 'FOR COMPLIANCE') ? '#fca402' :\\r\\n            (element.submissionType === 'REVISION' ? '#8fcf8f' : '' )))\\r\\n          )\\r\\n          )}\\\">\\r\\n          {{ element?.submissionType === 'ORIGINAL' && element?.internalStatus=='S1_APPLICATION_REJECTED' ? element?.referenceCodeRejected : element?.referenceCode | uppercase}}\\r\\n        </td>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"typeOfApplication\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef > TYPE OF APPLICATION </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element; let i = index\\\" (click)=\\\"viewApplication(element)\\\"\\r\\n          [ngStyle]=\\\"{'pointer-events': ((i !== 0 && currentUser.userRole.name === 'ROLE_ENCODER') ? 'none' : ''),\\r\\n          'background-color': ((currentUser.userRole.name === 'ROLE_ENCODER' && i > 0 ? '#beb8b8' : currentUser.userRole.name === 'ROLE_AD_SPECIALIST' && element?.formStatus==='LOCKED' ? 'yellow' : ''))}\\\">\\r\\n          {{element?.formType.replaceAll('_',' ') | uppercase}} - {{\\r\\n          element?.applicationType?.description | uppercase }}</td>\\r\\n      </ng-container>\\r\\n\\r\\n      <ng-container matColumnDef=\\\"companyName\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef > COMPANY NAME </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element; let i = index\\\" (click)=\\\"viewApplication(element)\\\"\\r\\n        [ngStyle]=\\\"{'pointer-events': ((i !== 0 && currentUser.userRole.name === 'ROLE_ENCODER') ? 'none' : ''),\\r\\n          'background-color': ((currentUser.userRole.name === 'ROLE_ENCODER' && i > 0 ? '#beb8b8'\\r\\n          : currentUser.userRole.name === 'ROLE_AD_SPECIALIST' && element?.formStatus==='LOCKED' ? 'yellow' : ''))}\\\">\\r\\n          {{ element?.company?.companyName | uppercase }}</td>\\r\\n      </ng-container>\\r\\n\\r\\n      <ng-container matColumnDef=\\\"brand\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef > BRAND </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element; let i = index\\\" (click)=\\\"viewApplication(element)\\\"\\r\\n        [ngStyle]=\\\"{'pointer-events': ((i !== 0 && currentUser.userRole.name === 'ROLE_ENCODER') ? 'none' : ''),\\r\\n          'background-color': ((currentUser.userRole.name === 'ROLE_ENCODER' && i > 0 ? '#beb8b8'\\r\\n          : currentUser.userRole.name === 'ROLE_AD_SPECIALIST' && element?.formStatus==='LOCKED' ? 'yellow' : ''))}\\\">\\r\\n          {{ element?.brand?.description | uppercase }} </td>\\r\\n      </ng-container>\\r\\n\\r\\n      <ng-container matColumnDef=\\\"product\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef > PRODUCT </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element; let i = index\\\" (click)=\\\"viewApplication(element)\\\"\\r\\n        [ngStyle]=\\\"{'pointer-events': ((i !== 0 && currentUser.userRole.name === 'ROLE_ENCODER') ? 'none' : ''),\\r\\n          'background-color': ((currentUser.userRole.name === 'ROLE_ENCODER' && i > 0 ? '#beb8b8'\\r\\n          : currentUser.userRole.name === 'ROLE_AD_SPECIALIST' && element?.formStatus==='LOCKED' ? 'yellow' : ''))}\\\">\\r\\n          {{ element?.product?.description | uppercase }} </td>\\r\\n      </ng-container>\\r\\n\\r\\n      <ng-container matColumnDef=\\\"typeOfMedium\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef> TYPE OF MEDIUM</th>\\r\\n        <td mat-cell *matCellDef=\\\"let element; let i = index\\\" (click)=\\\"viewApplication(element)\\\"\\r\\n        [ngStyle]=\\\"{'pointer-events': ((i !== 0 && currentUser.userRole.name === 'ROLE_ENCODER') ? 'none' : ''),\\r\\n          'background-color': ((currentUser.userRole.name === 'ROLE_ENCODER' && i > 0 ? '#beb8b8'\\r\\n          : currentUser.userRole.name === 'ROLE_AD_SPECIALIST' && element?.formStatus==='LOCKED' ? 'yellow' : ''))}\\\">\\r\\n          {{ element?.typeOfMedium | uppercase }}</td>\\r\\n      </ng-container>\\r\\n\\r\\n      <ng-container matColumnDef=\\\"status\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef > APPLICATION STATUS </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element; let i = index\\\" class=\\\"\\\" (click)=\\\"viewApplication(element)\\\"\\r\\n          [ngStyle]=\\\"{'pointer-events': ((i !== 0 && currentUser.userRole.name === 'ROLE_ENCODER') ? 'none' : ''),\\r\\n        'background-color': ((currentUser.userRole.name === 'ROLE_ENCODER' && i > 0\\r\\n        ? '#beb8b8' : element?.internalStatus === 'S1_APPLICATION_REJECTED' || element?.internalStatus === 'S1_APPLICATION_CANCELLED' ? 'lightpink' : currentUser.userRole.name === 'ROLE_AD_SPECIALIST' && element?.formStatus==='LOCKED' ? 'yellow' : ''))}\\\">\\r\\n          {{ showStatus({'paymentStatus': element?.paymentStatus, 'externalStatus': element?.externalStatus, 'actionStatus': element?.actionStatus}) }} </td>\\r\\n      </ng-container>\\r\\n\\r\\n      <ng-continer matColumnDef=\\\"paymentStatus\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef>PAYMENT STATUS</th>\\r\\n        <td mat-cell *matCellDef=\\\"let element; let i = index\\\" (click)=\\\"viewApplication(element)\\\"\\r\\n          [ngStyle]=\\\"{\\r\\n            'pointer-events': ((i !== 0 && currentUser.userRole.name === 'ROLE_ENCODER') ? 'none' : ''),\\r\\n            'background-color': ((currentUser.userRole.name === 'ROLE_ENCODER' && i > 0 ? '#beb8b8' : currentUser.userRole.name === 'ROLE_AD_SPECIALIST' && element?.formStatus==='LOCKED' ? 'yellow' : ''))\\r\\n          }\\\"\\r\\n        >\\r\\n          <div\\r\\n            class=\\\"payment-status-chip\\\"\\r\\n            [ngClass]=\\\"{\\r\\n              'payment-status-chip--paid': element?.paymentStatus === paymentStatus.PAID,\\r\\n              'payment-status-chip--unpaid': element?.paymentStatus === paymentStatus.UNPAID,\\r\\n              'payment-status-chip--for-approval': element?.paymentStatus === paymentStatus.FOR_APPROVAL,\\r\\n              'payment-status-chip--for-payment': element?.paymentStatus === paymentStatus.FOR_PAYMENT\\r\\n            }\\\"\\r\\n          >\\r\\n            {{formatTextPayment(element?.paymentStatus)}}\\r\\n          </div>\\r\\n        </td>\\r\\n      </ng-continer>\\r\\n\\r\\n      <ng-container matColumnDef=\\\"internalStatus\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef > INTERNAL STATUS </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element; let i = index\\\" class=\\\"\\\"\\r\\n          [ngStyle]=\\\"{'pointer-events': ((i !== 0 && currentUser.userRole.name === 'ROLE_ENCODER') ? 'none' : ''),\\r\\n        'background-color': ((currentUser.userRole.name === 'ROLE_ENCODER' && i > 0 ? '#beb8b8' : currentUser.userRole.name === 'ROLE_AD_SPECIALIST' && element?.formStatus==='LOCKED' ? 'yellow' : ''))}\\\">\\r\\n          {{ parseInternalStatus(element?.internalStatus, element?.actionBy) }}</td>\\r\\n      </ng-container>\\r\\n\\r\\n      <!-- For ASC Users only 'background-color': ((currentUser.userRole.name === 'ROLE_AD_SPECIALIST' && i > 0 && element?.formStatus==='LOCKED' ? 'yellow' : ''))-->\\r\\n      <!-- <ng-container matColumnDef=\\\"status\\\" *ngIf=\\\"currentUser.userRole.name!='ROLE_APPLICANT'\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> APPLICATION STATUS </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element; let i = index\\\" class=\\\"applicantStatus\\\"\\r\\n          [ngStyle]=\\\"{'background-color':\\r\\n          ((element.submissionType=='ORIGINAL'&&element.decisionStatus!='INCOMPLETE') ? 'lightblue' :\\r\\n          ((element.submissionType=='FOR COMPLIANCE'||element.decisionStatus=='INCOMPLETE'||element.submissionType=='COMPLIANCE') ? '#ebd79b' :\\r\\n          (element.submissionType=='REVISION' ? '#8fcf8f' : '' )))}\\\"\\r\\n          (click)=\\\"viewApplication(element)\\\"> {{\\r\\n          element?.internalStatus?.replaceAll('_',' ') | uppercase }}</td>\\r\\n      </ng-container> -->\\r\\n\\r\\n      <ng-container matColumnDef=\\\"icon\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef > </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"icon\\\">\\r\\n          <!-- FOR APPLICANT -------------------------------------------------- -->\\r\\n          <button mat-raised-button class=\\\"button-red\\\" matTooltip=\\\"Cancel Application\\\" [disabled]=\\\"element.formStatus === 'LOCKED'\\\"\\r\\n            (click)=\\\"saveStatus('presentor','cancel', 'S1_APPLICATION_CANCELLED', element)\\\"\\r\\n            *ngIf=\\\"currentUser?.userRole?.name=='ROLE_APPLICANT'&&element?.internalStatus=='S1_APPLICATION_SUBMITTED'\\\">\\r\\n            <i class=\\\"material-icons color__white\\\">cancel</i>\\r\\n          </button>\\r\\n\\r\\n          <button mat-raised-button class=\\\"button-red\\\" matTooltip=\\\"Submit For Compliance\\\"\\r\\n            (click)=\\\"viewApplication(element)\\\"\\r\\n            *ngIf=\\\"(!element?.appliedS2 && !element?.hasOngoingCompliance && !element?.hasOngoingRevision && element?.decisionStatus=='INCOMPLETE' &&\\r\\n            !s1Application?.hasOngoingAppeal && element?.paymentStatus === 'PAID' && element?.releaseStatus === 'RELEASED' &&\\r\\n                    (element?.internalStatus=='S1_APPLICATION_REVIEWED' || element?.internalStatus=='COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER' || element?.internalStatus=='REVISION_SCREENED' ||\\r\\n                    element?.internalStatus=='S1_APPLICATION_REJECTED'))\\\">\\r\\n            <i class=\\\"material-icons\\\">warning_amber</i>\\r\\n          </button>\\r\\n\\r\\n          <button mat-raised-button class=\\\"button-red\\\" matTooltip=\\\"Submit Revision\\\"\\r\\n            (click)=\\\"viewApplication(element)\\\"\\r\\n            *ngIf=\\\"(element?.revisionNo !== 2 && currentUser?.userRole?.name=='ROLE_APPLICANT' && !element?.appliedS2 &&\\r\\n            element?.paymentStatus === 'PAID' && element?.releaseStatus === 'RELEASED' && !element?.hasOngoingCompliance &&\\r\\n            !element?.hasOngoingRevision && element?.submissionType === 'ORIGINAL' && !s1Application?.hasOngoingAppeal &&\\r\\n                    (\\r\\n                      (element?.internalStatus=='S1_APPLICATION_REVIEWED' || element?.internalStatus=='COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER') &&\\r\\n                      (element?.decisionStatus=='APPROVED' || element?.decisionStatus=='APPROVED W/ CAUTION')\\r\\n                    )\\r\\n                  )\\\">\\r\\n            <i class=\\\"material-icons\\\">task_alt</i>\\r\\n          </button>\\r\\n\\r\\n          <button mat-raised-button class=\\\"button-red\\\" matTooltip=\\\"Apply for S2 Application\\\"\\r\\n            *ngIf=\\\"currentUser?.userRole?.name=='ROLE_APPLICANT' && !element?.appliedS2 && !element?.hasOngoingRevision&& !element?.hasOngoingCompliance &&\\r\\n            element?.paymentStatus === 'PAID' && element?.releaseStatus === 'RELEASED' && !s1Application?.hasOngoingAppeal &&\\r\\n            ((element?.internalStatus=='S1_APPLICATION_REVIEWED'|| element?.internalStatus=='COMPLIANCE_DOCUMENT_REVIEWED_BY_SCREENER'|| element?.internalStatus=='REVISION_SCREENED') &&\\r\\n             (element?.decisionStatus=='APPROVED'||element?.decisionStatus=='APPROVED W/ CAUTION'))\\\"\\r\\n            (click)=\\\"applyForS2(element)\\\">\\r\\n              <i class=\\\"material-icons color__white\\\"> queue_play_next</i>\\r\\n          </button>\\r\\n\\r\\n          <!-- FOR ASC USERS -------------------------------------------------- -->\\r\\n          <button mat-raised-button class=\\\"button-red\\\" matTooltip=\\\"Return to Ad Specialist\\\"\\r\\n            (click)=\\\"returnTo('RETURN', element)\\\"\\r\\n            *ngIf=\\\"currentUser?.userRole?.name=='ROLE_SCREENER'&&element?.internalStatus=='S1_APPLICATION_VERIFIED_BY_AD_SPE'\\\">\\r\\n            <i class=\\\"material-icons color__white\\\">assignment_return</i>\\r\\n          </button>\\r\\n          <button mat-raised-button class=\\\"button-red\\\" matTooltip=\\\"Return to Ad Specialist\\\"\\r\\n            (click)=\\\"returnTo('RETURN', element)\\\"\\r\\n            *ngIf=\\\"currentUser?.userRole?.name=='ROLE_SCREENER'&&element?.internalStatus=='COMPLIANCE_DOCUMENT_VERIFIED_BY_AD_SPE'\\\">\\r\\n            <i class=\\\"material-icons color__white\\\">assignment_return</i>\\r\\n          </button>\\r\\n          <button mat-raised-button class=\\\"button-red\\\" matTooltip=\\\"Return to Ad Specialist\\\"\\r\\n            (click)=\\\"returnTo('RETURN', element)\\\"\\r\\n            *ngIf=\\\"currentUser?.userRole?.name=='ROLE_SCREENER'&&element?.internalStatus=='REVISION_VERIFIED_BY_AD_SPE'\\\">\\r\\n            <i class=\\\"material-icons color__white\\\">assignment_return</i>\\r\\n          </button>\\r\\n\\r\\n          <button mat-raised-button class=\\\"button-red\\\" matTooltip=\\\"Return to Screener\\\"\\r\\n            (click)=\\\"returnTo('RETURN', element)\\\"\\r\\n            *ngIf=\\\"currentUser?.userRole?.name=='ROLE_REVIEWER'&&element.internalStatus=='S1_APPLICATION_SCREENED'\\\">\\r\\n            <i class=\\\"material-icons color__white\\\">assignment_return</i>\\r\\n          </button>\\r\\n\\r\\n          <!-- FOR ADSPECIALIST USERS -------------------------------------------------- -->\\r\\n          <button mat-raised-button class=\\\"button-red\\\" matTooltip=\\\"Unlock\\\"\\r\\n            (click)=\\\"unlockApplication('UNLOCK', element)\\\"\\r\\n            *ngIf=\\\"currentUser?.userRole?.name=='ROLE_AD_SPECIALIST' && element.formStatus == 'LOCKED' && displayedContent !== 'Returned Application'\\\">\\r\\n            <i class=\\\"material-icons color__white\\\">lock</i>\\r\\n          </button>\\r\\n          \\r\\n\\r\\n        </td>\\r\\n      </ng-container>\\r\\n\\r\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n    </table>\\r\\n    <div class=\\\"no-record\\\" [hidden]=\\\"dataSource && dataSource?.data?.length > 0\\\">\\r\\n      No record found.\\r\\n    </div>\\r\\n    <!-- <div style=\\\"float:right\\\"\\r\\n      *ngIf=\\\"currentUser?.userRole?.name!=='ROLE_ADMIN'&&currentUser?.userRole?.name!=='ROLE_SUPER_ADMIN'\\\">\\r\\n      <button mat-stroked-button color=\\\"primary\\\">Total Items: {{totalItems}}</button>\\r\\n      <button mat-stroked-button color=\\\"primary\\\">{{currentPage}} of {{totalPages==0 ? '1' : totalPages}}</button>\\r\\n      <button mat-stroked-button color=\\\"warn\\\" (click)=\\\"prevPage()\\\"\\r\\n        [disabled]=\\\"dataSource && dataSource?.data?.length === 0\\\">\\r\\n        < Prev</button> <button mat-stroked-button color=\\\"warn\\\" (click)=\\\"nextPage()\\\"\\r\\n          [disabled]=\\\"dataSource && dataSource?.data?.length === 0\\\">Next >\\r\\n      </button>\\r\\n    </div> -->\\r\\n    <!-- <mat-paginator [length]=\\\"resultsLength\\\"></mat-paginator> -->\\r\\n    <!-- <mat-paginator [pageSizeOptions]=\\\"[10, 20, 50]\\\" showFirstLastButtons> -->\\r\\n    <!-- </mat-paginator> -->\\r\\n    <mat-paginator [pageSize]=\\\"pageSize\\\" [pageIndex]=\\\"pageNo\\\" [length]=\\\"totalItems\\\"\\r\\n      [pageSizeOptions]=\\\"pageSizeOptions\\\" (page)=\\\"pageEvents($event)\\\">\\r\\n  </mat-paginator>\\r\\n  </div>\\r\\n  <br>\\r\\n</ng-template>\\r\\n\\r\\n\\r\\n<!-- TEMPLATE FOR MULTIPLE S1 APPLICATION LIST -->\\r\\n<ng-template #multipleS1ApplicationList>\\r\\n  <br>\\r\\n  <div class=\\\"row\\\" fxLayout fxLayoutAlign=\\\"center center\\\">\\r\\n    <mat-form-field class=\\\"col-md-9\\\" appearance=\\\"outline\\\">\\r\\n      <mat-label><i class=\\\"material-icons\\\">search</i> Search Applications</mat-label>\\r\\n      <input matInput type=\\\"text\\\" (keyup)=\\\"doFilterS1MultipleApplicationList($event.target.value)\\\">\\r\\n    </mat-form-field>\\r\\n\\r\\n    <div class=\\\"col\\\">\\r\\n      <div class=\\\"legend-content\\\">\\r\\n        <table class=\\\"legend-table\\\">\\r\\n          <tr>\\r\\n            <td>\\r\\n              <div class=\\\"legend-box legend-orange\\\"></div> FOR APPROVAL\\r\\n            </td>\\r\\n          </tr>\\r\\n          <tr>\\r\\n            <td>\\r\\n              <div class=\\\"legend-box legend-green\\\"></div> APPROVED\\r\\n            </td>\\r\\n          </tr>\\r\\n          <tr>\\r\\n            <td>\\r\\n              <div class=\\\"legend-box legend-red\\\"></div> DISAPPROVED\\r\\n            </td>\\r\\n          </tr>\\r\\n        </table>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <!-- <div class=\\\"row\\\">\\r\\n\\r\\n    <div class=\\\"col-md-2\\\">LEGEND:</div>\\r\\n    <div class=\\\"col-md-1 legend legend-orange\\\">FOR APPROVAL</div>\\r\\n    <div class=\\\"col-md-1 legend legend-green\\\">APPROVED</div>\\r\\n    <div class=\\\"col-md-1 legend legend-red\\\">DISAPPROVED</div>\\r\\n    <div class=\\\"col-md-1\\\" style=\\\"background-color:lightpink;border-radius:8px;width:20%;\\\">Rejected</div>\\r\\n  </div> -->\\r\\n\\r\\n  <br>\\r\\n\\r\\n  <div class=\\\"mat-elevation-z8 fields\\\">\\r\\n    <table mat-table [dataSource]=\\\"multipleApplicationDataSource\\\" matSort>\\r\\n\\r\\n      <ng-container matColumnDef=\\\"adTitle\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> AD TITLE </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"viewMultipleApplication(element)\\\">\\r\\n          {{ element?.adTitle | uppercase }} </td>\\r\\n      </ng-container>\\r\\n\\r\\n      <ng-container matColumnDef=\\\"typeOfApplication\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef > TYPE OF APPLICATION </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"viewMultipleApplication(element)\\\">\\r\\n          {{element?.applicationType?.description.replaceAll('_',' ') | uppercase }}</td>\\r\\n      </ng-container>\\r\\n\\r\\n      <ng-container matColumnDef=\\\"companyName\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef > COMPANY NAME </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"viewMultipleApplication(element)\\\">\\r\\n          {{ element?.company?.companyName | uppercase }} </td>\\r\\n      </ng-container>\\r\\n\\r\\n      <!-- <ng-container matColumnDef=\\\"membersAffiliation\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> MEMBER'S AFFILIATION </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"viewMultipleApplication(element)\\\">\\r\\n          {{ element?.membersAffiliation?.description | uppercase }} </td>\\r\\n      </ng-container> -->\\r\\n\\r\\n      <ng-container matColumnDef=\\\"brand\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef > BRAND </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"viewMultipleApplication(element)\\\">\\r\\n          {{ element?.brand?.description | uppercase }} </td>\\r\\n      </ng-container>\\r\\n\\r\\n      <ng-container matColumnDef=\\\"product\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef [hidden]=\\\"currentUser.userRole.name !== 'ROLE_AD_SPECIALIST'\\\" > PRODUCT </th>\\r\\n        <td mat-cell [hidden]=\\\"currentUser.userRole.name !== 'ROLE_AD_SPECIALIST'\\\" *matCellDef=\\\"let element\\\">\\r\\n          {{ element?.product?.description | uppercase }} </td>\\r\\n      </ng-container>\\r\\n\\r\\n      <ng-container matColumnDef=\\\"status\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef > APPLICATION STATUS </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"applicantStatus\\\" [ngStyle]=\\\"{'background-color':\\r\\n        element?.status === 'FOR_APPROVAL' ? '#fca402' :\\r\\n        element?.status === 'APPROVED' ? '#8fcf8f' :\\r\\n        element?.status === 'DISAPPROVED' ? '#ff8a7b' : '' }\\\" (click)=\\\"viewMultipleApplication(element)\\\">\\r\\n          {{ element?.status?.replaceAll('_',' ') | uppercase }} </td>\\r\\n      </ng-container>\\r\\n\\r\\n      <tr mat-header-row *matHeaderRowDef=\\\"multipleApplicationDisplayedColumns\\\"></tr>\\r\\n      <tr mat-row *matRowDef=\\\"let row; columns: multipleApplicationDisplayedColumns;\\\"></tr>\\r\\n    </table>\\r\\n    <div class=\\\"no-record\\\" [hidden]=\\\"multipleApplicationDataSource && multipleApplicationDataSource?.data?.length > 0\\\">\\r\\n      No record found.\\r\\n    </div>\\r\\n    <!-- <mat-paginator [pageSizeOptions]=\\\"[10, 20, 50]\\\" showFirstLastButtons></mat-paginator> -->\\r\\n    <mat-paginator [pageSize]=\\\"pageSize\\\" [pageIndex]=\\\"pageNo\\\" [length]=\\\"multipleTotalItems\\\"\\r\\n      [pageSizeOptions]=\\\"pageSizeOptions\\\" (page)=\\\"pageEvents($event)\\\">\\r\\n    </mat-paginator>\\r\\n  </div>\\r\\n</ng-template>\\r\\n\\r\\n<!-- TEMPLATE FOR SPECIAL S1 APPLICATION LIST -->\\r\\n<ng-template #specialS1ApplicationList>\\r\\n  <b *ngIf=\\\"currentUser.userRole.name === 'ROLE_APPLICANT' || currentUser.userRole.name === 'ROLE_ENCODER'\\\"><b class=\\\"material-icons info-msg\\\">error_outline</b> This\\r\\n    page contain list of Request for Approval and allows you to create S1 application from approved request only.</b>\\r\\n  <b *ngIf=\\\"currentUser.userRole.name === 'ROLE_ADMIN' || currentUser?.userRole.name === 'ROLE_SUPER_ADMIN' \\\"><b\\r\\n      class=\\\"material-icons info-msg\\\">error_outline</b> This page\\r\\n    contain list of Request for Approval and allows you to approve or disapprove request.</b>\\r\\n  <br>\\r\\n  <div class=\\\"row\\\" fxLayout fxLayoutAlign=\\\"center center\\\">\\r\\n    <mat-form-field class=\\\"col-md-8\\\" appearance=\\\"outline\\\">\\r\\n      <mat-label><i class=\\\"material-icons\\\">search</i> Search Applications</mat-label>\\r\\n      <input matInput type=\\\"text\\\" (keyup)=\\\"doFilterS1MultipleApplicationList($event.target.value)\\\">\\r\\n    </mat-form-field>\\r\\n\\r\\n    <div class=\\\"col\\\">\\r\\n      <div class=\\\"legend-content\\\">\\r\\n        <table class=\\\"legend-table\\\">\\r\\n          <tr>\\r\\n            <td>\\r\\n              <div class=\\\"legend-box legend-orange\\\"></div> FOR APPROVAL\\r\\n            </td>\\r\\n          </tr>\\r\\n          <tr>\\r\\n            <td>\\r\\n              <div class=\\\"legend-box legend-green\\\"></div> APPROVED\\r\\n            </td>\\r\\n          </tr>\\r\\n          <tr>\\r\\n            <td>\\r\\n              <div class=\\\"legend-box legend-red\\\"></div> DISAPPROVED\\r\\n            </td>\\r\\n          </tr>\\r\\n          <!-- <tr>\\r\\n            <td>\\r\\n              <div class=\\\"legend-box legend-pink\\\"></div> REJECTED\\r\\n            </td>\\r\\n          </tr> -->\\r\\n        </table>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <!-- <div class=\\\"row\\\">\\r\\n\\r\\n    <div class=\\\"col-md-2\\\">LEGEND:</div>\\r\\n    <div class=\\\"col-md-1 legend legend-orange\\\">FOR APPROVAL</div>\\r\\n    <div class=\\\"col-md-1 legend legend-green\\\">APPROVED</div>\\r\\n    <div class=\\\"col-md-1 legend legend-red\\\">DISAPPROVED</div>\\r\\n    <div class=\\\"col-md-1\\\" style=\\\"background-color:lightpink;border-radius:8px;width:20%;\\\">Rejected</div>\\r\\n  </div> -->\\r\\n  <br>\\r\\n\\r\\n  <div class=\\\"mat-elevation-z8 fields\\\">\\r\\n    <table mat-table [dataSource]=\\\"specialApplicationDataSource\\\" matSort>\\r\\n\\r\\n      <ng-container matColumnDef=\\\"adTitle\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> AD TITLE </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"viewSpecialApplication(element)\\\">\\r\\n          {{ element?.adTitle | uppercase }} </td>\\r\\n      </ng-container>\\r\\n\\r\\n      <ng-container matColumnDef=\\\"typeOfApplication\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef > TYPE OF APPLICATION </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"viewSpecialApplication(element)\\\">\\r\\n          {{ element?.applicationType?.description.replaceAll('_',' ') | uppercase }} </td>\\r\\n      </ng-container>\\r\\n\\r\\n      <ng-container matColumnDef=\\\"companyName\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef > COMPANY NAME </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"viewSpecialApplication(element)\\\">\\r\\n          {{ element?.company?.companyName | uppercase }} </td>\\r\\n      </ng-container>\\r\\n\\r\\n      <!-- <ng-container matColumnDef=\\\"membersAffiliation\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> MEMBER'S AFFILIATION </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"viewSpecialApplication(element)\\\">\\r\\n          {{ element?.membersAffiliation?.description | uppercase }} </td>\\r\\n      </ng-container> -->\\r\\n\\r\\n      <ng-container matColumnDef=\\\"brand\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef > BRAND </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"viewSpecialApplication(element)\\\">\\r\\n          {{ element?.brand?.description | uppercase }} </td>\\r\\n      </ng-container>\\r\\n\\r\\n      <ng-container matColumnDef=\\\"status\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef> APPLICATION STATUS </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"applicantStatus\\\" [ngStyle]=\\\"{'background-color':\\r\\n        element?.status === 'FOR_APPROVAL' ? '#fca402' :\\r\\n        element?.status === 'APPROVED' ? '#8fcf8f' :\\r\\n        element?.status === 'DISAPPROVED' ? '#ff8a7b' : '' }\\\" (click)=\\\"viewSpecialApplication(element)\\\">\\r\\n          {{ element?.status?.replaceAll('_',' ') | uppercase }} </td>\\r\\n      </ng-container>\\r\\n\\r\\n      <tr mat-header-row *matHeaderRowDef=\\\"specialApplicationDisplayedColumns\\\"></tr>\\r\\n      <tr mat-row *matRowDef=\\\"let row; columns: specialApplicationDisplayedColumns;\\\"></tr>\\r\\n    </table>\\r\\n    <div class=\\\"no-record\\\" [hidden]=\\\"specialApplicationDataSource && specialApplicationDataSource?.data?.length > 0\\\">\\r\\n      No record found.\\r\\n    </div>\\r\\n    <!-- <mat-paginator [pageSizeOptions]=\\\"[10, 20, 50]\\\" showFirstLastButtons></mat-paginator> -->\\r\\n    <mat-paginator [pageSize]=\\\"pageSize\\\" [pageIndex]=\\\"pageNo\\\" [length]=\\\"specialTotalItems\\\"\\r\\n      [pageSizeOptions]=\\\"pageSizeOptions\\\" (page)=\\\"pageEvents($event)\\\">\\r\\n    </mat-paginator>\\r\\n  </div>\\r\\n</ng-template>\\r\\n\\r\\n<!-- TEMPLATE FOR ASSIGNED TO SCREENER S1 APPLICATION LIST -->\\r\\n<ng-template #assignedToScreenerS1ApplicationList>\\r\\n  <div *ngIf=\\\"viewApplicationType === 'assigned-applications'\\\">\\r\\n    <b><b class=\\\"material-icons info-msg\\\">error_outline</b> This page allows you to view or retrieve application to\\r\\n      re-assign only.</b>\\r\\n    <br>\\r\\n    <div class=\\\"row\\\" fxLayout fxLayoutAlign=\\\"center center\\\">\\r\\n      <mat-form-field class=\\\"col-md-8\\\" appearance=\\\"outline\\\">\\r\\n        <mat-label><i class=\\\"material-icons\\\">search</i> Search Applications</mat-label>\\r\\n        <input matInput type=\\\"text\\\" (keyup)=\\\"doFilterAssignedS1ApplicationList($event.target.value)\\\">\\r\\n      </mat-form-field>\\r\\n\\r\\n      <div class=\\\"col\\\">\\r\\n        <div class=\\\"legend-content\\\">\\r\\n          <table class=\\\"legend-table\\\">\\r\\n            <tr>\\r\\n              <td>\\r\\n                <div class=\\\"legend-box legend-blue\\\"></div> ORIGINAL\\r\\n              </td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n              <td>\\r\\n                <div class=\\\"legend-box legend-green\\\"></div> REVISION\\r\\n              </td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n              <td>\\r\\n                <div class=\\\"legend-box legend-orange\\\"></div> FOR COMPLIANCE\\r\\n              </td>\\r\\n            </tr>\\r\\n          </table>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <!-- <div class=\\\"row\\\">\\r\\n\\r\\n    <div class=\\\"col-md-2\\\">LEGEND:</div>\\r\\n    <div class=\\\"col-md-1 legend legend-blue\\\">ORIGINAL</div>\\r\\n    <div class=\\\"col-md-1 legend legend-green\\\">REVISION</div>\\r\\n    <div class=\\\"col-md-1 legend legend-orange\\\">FOR COMPLIANCE</div>\\r\\n    <div class=\\\"col-md-1\\\" style=\\\"background-color:lightpink;border-radius:8px;width:20%;\\\">Rejected</div>\\r\\n  </div> -->\\r\\n    <br>\\r\\n\\r\\n    <div class=\\\"mat-elevation-z8 fields\\\">\\r\\n      <table mat-table [dataSource]=\\\"assignedApplicationDataSource\\\" matSort>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"referenceCode\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> REFERENCE CODE </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element; let i = index\\\" [ngStyle]=\\\"{'background-color':\\r\\n        (((element.submissionType=='ORIGINAL'&&element.decisionStatus!='INCOMPLETE') || element.decisionStatus=='INCOMPLETE') ? 'lightblue' :\\r\\n        ((element.submissionType=='FOR COMPLIANCE'||element.submissionType=='COMPLIANCE') ? '#ebd79b' :\\r\\n        (element.submissionType=='REVISION' ? '#8fcf8f' : '' )))}\\\">\\r\\n            {{ element?.internalStatus=='S1_APPLICATION_REJECTED' ? element?.referenceCodeRejected :\\r\\n            element?.referenceCode | uppercase}}</td>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"adTitle\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef > AD TITLE </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n            {{ element?.adTitle.replaceAll('_',' ') | uppercase }} </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"typeOfApplication\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef > TYPE OF APPLICATION </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n            {{element?.formType.replaceAll('_',' ') | uppercase}} - {{\\r\\n            element?.applicationType?.description | uppercase }}</td>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"companyName\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef > COMPANY NAME </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n            {{ element?.company?.companyName | uppercase }} </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <!-- <ng-container matColumnDef=\\\"membersAffiliation\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> MEMBER'S AFFILIATION </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n            {{ element?.membersAffiliation?.description | uppercase }} </td>\\r\\n        </ng-container> -->\\r\\n\\r\\n        <ng-container matColumnDef=\\\"brand\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef > BRAND </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n            {{ element?.brand?.description | uppercase }} </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"product\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef [hidden]=\\\"currentUser.userRole.name !== 'ROLE_AD_SPECIALIST'\\\" > PRODUCT </th>\\r\\n          <td mat-cell [hidden]=\\\"currentUser.userRole.name !== 'ROLE_AD_SPECIALIST'\\\" *matCellDef=\\\"let element\\\">\\r\\n            {{ element?.product?.description | uppercase }} </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"status\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef > APPLICATION STATUS </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element; let i = index\\\" class=\\\"applicantStatus\\\"\\r\\n            [ngStyle]=\\\"{'background-color': element?.internalStatus === 'S1_APPLICATION_REJECTED' ? 'lightpink' : '' }\\\">\\r\\n            {{\\r\\n            element?.externalStatus?.replaceAll('_',' ') | uppercase }}</td>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"internalStatus\\\" *ngIf=\\\"currentUser.userRole.name !== 'ROLE_APPLICANT'\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef > INTERNAL STATUS </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element; let i = index\\\" class=\\\"applicantStatus\\\" [ngStyle]=\\\"{'pointer-events': ((i !== 0 && (currentUser.userRole.name !== 'ROLE_ADMIN' && currentUser.userRole.name !== 'ROLE_AD_SPECIALIST' && currentUser.userRole.name !== 'ROLE_SUPER_ADMIN' && currentUser.userRole.name !== 'ROLE_APPLICANT')) ? 'none' : ''),\\r\\n            'background-color': element?.internalStatus === 'S1_APPLICATION_REJECTED' ? 'lightpink' : '' }\\\" >\\r\\n            {{ element?.internalStatus?.replaceAll('_',' ') | uppercase }} </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"icon\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef > </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"icon\\\">\\r\\n            <button mat-raised-button class=\\\"button-red\\\" matTooltip=\\\"Re-assignment\\\" (click)=\\\"viewApplication(element)\\\"\\r\\n              *ngIf=\\\"\\r\\n          (currentUser?.userRole?.name=='ROLE_AD_SPECIALIST'&&element?.internalStatus=='S1_APPLICATION_VERIFIED_BY_AD_SPE')\\r\\n          ||(currentUser?.userRole?.name=='ROLE_AD_SPECIALIST'&&element?.internalStatus=='COMPLIANCE_DOCUMENT_VERIFIED_BY_AD_SPE')\\r\\n          ||(currentUser?.userRole?.name=='ROLE_AD_SPECIALIST'&&element?.internalStatus=='REVISION_VERIFIED_BY_AD_SPE')\\r\\n          ||(currentUser?.userRole?.name=='ROLE_SCREENER'&&element.internalStatus=='S1_APPLICATION_SCREENED')\\\">\\r\\n              <i class=\\\"material-icons color__white\\\">assignment_return</i><span> Re-assignment </span>\\r\\n            </button>\\r\\n\\r\\n          </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <tr mat-header-row *matHeaderRowDef=\\\"assignedApplicationDisplayedColumns\\\"></tr>\\r\\n        <tr mat-row *matRowDef=\\\"let row; columns: assignedApplicationDisplayedColumns;\\\"></tr>\\r\\n      </table>\\r\\n      <div class=\\\"no-record\\\"\\r\\n        [hidden]=\\\"assignedApplicationDataSource && assignedApplicationDataSource?.data?.length > 0\\\">\\r\\n        No record found.\\r\\n      </div>\\r\\n      <!-- <mat-paginator [pageSizeOptions]=\\\"[10, 20, 30]\\\" showFirstLastButtons></mat-paginator> -->\\r\\n      <mat-paginator\\r\\n        [pageSize]=\\\"pageSize\\\"\\r\\n        [pageIndex]=\\\"pageNo\\\"\\r\\n        [length]=\\\"retrieveReassignLength\\\"\\r\\n        (page)=\\\"pageEvents($event)\\\"\\r\\n      ></mat-paginator>\\r\\n    </div>\\r\\n  </div>\\r\\n</ng-template>\\r\\n\\r\\n<!-- TEMPLATE \\\"FOR RELEASE\\\" APPLICATION LIST -->\\r\\n<ng-template #forReleaseApplicationList>\\r\\n  <div *ngIf=\\\"viewApplicationType === 'for-release' || viewApplicationType === 'released'\\\">\\r\\n    <!-- <b><b class=\\\"material-icons info-msg\\\">error_outline</b> This page allows you to resend decision form.</b> -->\\r\\n    <br>\\r\\n    <div class=\\\"row\\\" fxLayout fxLayoutAlign=\\\"center center\\\">\\r\\n      <mat-form-field class=\\\"col-md-8\\\" appearance=\\\"outline\\\">\\r\\n        <mat-label><i class=\\\"material-icons\\\">search</i> Search Applications</mat-label>\\r\\n        <input matInput type=\\\"text\\\" (keyup)=\\\"doFilterForReleaseApplicationList($event.target.value)\\\">\\r\\n      </mat-form-field>\\r\\n      <br>\\r\\n\\r\\n      <div class=\\\"mat-elevation-z8 fields\\\">\\r\\n        <table mat-table [dataSource]=\\\"forReleaseApplicationDataSource\\\" matSort>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"referenceCode\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> REFERENCE CODE </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element; let i = index\\\" [ngStyle]=\\\"{'background-color':\\r\\n          (((element.submissionType=='ORIGINAL'&&element.decisionStatus!='INCOMPLETE') || element.decisionStatus=='INCOMPLETE') ? 'lightblue' :\\r\\n          ((element.submissionType=='FOR COMPLIANCE'||element.submissionType=='COMPLIANCE') ? '#ebd79b' :\\r\\n          (element.submissionType=='REVISION' ? '#8fcf8f' : '' )))}\\\"\\r\\n          (click)=\\\"viewApplication(element)\\\">\\r\\n              {{ element?.internalStatus=='S1_APPLICATION_REJECTED' ? element?.referenceCodeRejected :\\r\\n              element?.referenceCode | uppercase}}</td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"adTitle\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef > AD TITLE </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"viewApplication(element)\\\">\\r\\n              {{ element?.adTitle.replaceAll('_',' ') | uppercase }} </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"typeOfApplication\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef > TYPE OF APPLICATION </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"viewApplication(element)\\\">\\r\\n              {{element?.formType.replaceAll('_',' ') | uppercase}} - {{\\r\\n              element?.applicationType?.description | uppercase }}</td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"companyName\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef > COMPANY NAME </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"viewApplication(element)\\\">\\r\\n              {{ element?.company?.companyName | uppercase }} </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"brand\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef > BRAND </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"viewApplication(element)\\\">\\r\\n              {{ element?.brand?.description | uppercase }} </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"product\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef [hidden]=\\\"currentUser.userRole.name !== 'ROLE_AD_SPECIALIST'\\\" > PRODUCT </th>\\r\\n            <td mat-cell [hidden]=\\\"currentUser.userRole.name !== 'ROLE_AD_SPECIALIST'\\\" *matCellDef=\\\"let element\\\">\\r\\n              {{ element?.product?.description | uppercase }} </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"typeOfMedium\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef > TYPE OF MEDIUM</th>\\r\\n            <td mat-cell *matCellDef=\\\"let element; let i = index\\\" (click)=\\\"viewApplication(element)\\\">\\r\\n              {{ element?.typeOfMedium | uppercase }}</td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"status\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef > APPLICATION STATUS </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element; let i = index\\\" class=\\\"applicantStatus\\\" (click)=\\\"viewApplication(element)\\\"\\r\\n              [ngStyle]=\\\"{'background-color': element?.internalStatus === 'S1_APPLICATION_REJECTED' ? 'lightpink' : '' }\\\">\\r\\n              {{ element?.externalStatus?.replaceAll('_',' ') | uppercase }}</td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"internalStatus\\\" *ngIf=\\\"currentUser.userRole.name !== 'ROLE_APPLICANT'\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef > INTERNAL STATUS </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element; let i = index\\\" class=\\\"applicantStatus\\\" [ngStyle]=\\\"{'pointer-events': ((i !== 0 && (currentUser.userRole.name !== 'ROLE_ADMIN' && currentUser.userRole.name !== 'ROLE_AD_SPECIALIST' && currentUser.userRole.name !== 'ROLE_SUPER_ADMIN' && currentUser.userRole.name !== 'ROLE_APPLICANT')) ? 'none' : ''),\\r\\n              'background-color': element?.internalStatus === 'S1_APPLICATION_REJECTED' ? 'lightpink' : '' }\\\"\\r\\n              (click)=\\\"viewApplication(element)\\\">\\r\\n              {{ element?.internalStatus?.replaceAll('_',' ') | uppercase }} </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"decisionStatus\\\" *ngIf=\\\"currentUser.userRole.name !== 'ROLE_APPLICANT'\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef > DECISION STATUS </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element; let i = index\\\" class=\\\"applicantStatus\\\" [ngStyle]=\\\"{'pointer-events': ((i !== 0 && (currentUser.userRole.name !== 'ROLE_ADMIN' && currentUser.userRole.name !== 'ROLE_AD_SPECIALIST' && currentUser.userRole.name !== 'ROLE_SUPER_ADMIN' && currentUser.userRole.name !== 'ROLE_APPLICANT')) ? 'none' : ''),\\r\\n              'background-color': element?.internalStatus === 'S1_APPLICATION_REJECTED' ? 'lightpink' : '' }\\\"\\r\\n              (click)=\\\"viewApplication(element)\\\">\\r\\n              {{ element?.decisionStatus?.replaceAll('_',' ') | uppercase }} </td>\\r\\n          </ng-container>\\r\\n\\r\\n\\r\\n          <tr mat-header-row *matHeaderRowDef=\\\"forReleaseApplicationDisplayedColumns\\\"></tr>\\r\\n          <tr mat-row *matRowDef=\\\"let row; columns: forReleaseApplicationDisplayedColumns;\\\"></tr>\\r\\n        </table>\\r\\n        <div class=\\\"no-record\\\"\\r\\n          [hidden]=\\\"forReleaseApplicationDataSource && forReleaseApplicationDataSource?.data?.length > 0 \\\">\\r\\n          No record found.\\r\\n        </div>\\r\\n        <!-- <mat-paginator [pageSizeOptions]=\\\"[10, 20, 30]\\\" showFirstLastButtons></mat-paginator> -->\\r\\n        <mat-paginator [pageSize]=\\\"pageSize\\\" [pageIndex]=\\\"pageNo\\\" [length]=\\\"forReleaseTotalItems\\\"\\r\\n          [pageSizeOptions]=\\\"pageSizeOptions\\\" (page)=\\\"pageEvents($event)\\\">\\r\\n        </mat-paginator>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n</ng-template>\\r\\n\";","export default \"<form>\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row title\\\">\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n\\r\\n        <table class=\\\"application-details\\\">\\r\\n          <tr>\\r\\n            <td *ngIf=\\\"multipleS1Application?.status\\\">\\r\\n              <span>\\r\\n                Status:\\r\\n              </span>\\r\\n            </td>\\r\\n            <td *ngIf=\\\"multipleS1Application?.status\\\">\\r\\n              <span>\\r\\n                <b>{{multipleS1Application?.status?.replaceAll('_',' ') | uppercase}}</b>\\r\\n              </span>\\r\\n            </td>\\r\\n            <!-- <td class=\\\"no-border\\\">\\r\\n                        <button class=\\\"button-right button-red\\\" mat-raised-button\\r\\n                        (click)=\\\"dialogRef.close()\\\">\\r\\n                          <i class=\\\"material-icons color__white\\\">list</i> VIEW APPLICATIONS\\r\\n                        </button>\\r\\n                      </td> -->\\r\\n          <tr>\\r\\n            <td class=\\\"no-border\\\">\\r\\n            </td>\\r\\n          </tr>\\r\\n          <tr>\\r\\n            <td *ngIf=\\\"multipleS1Application?.numberOfApplication\\\">\\r\\n              <span>\\r\\n                Number of Applications:\\r\\n              </span>\\r\\n            </td>\\r\\n            <td>\\r\\n              <span>\\r\\n                <b *ngIf=\\\"(multipleS1Application?.status === 'FOR_APPROVAL' || multipleS1Application?.submissionStatus==='PROCESSED' || multipleS1Application?.status === 'DISAPPROVED') &&\\r\\n                (currentUser.userRole.name==='ROLE_ADMIN' || currentUser.userRole.name === 'ROLE_SUPER_ADMIN' || currentUser.userRole.name === 'ROLE_APPLICANT')\\\">\\r\\n                  {{multipleS1Application?.submissionStatus==='PROCESSED' && multipleS1Application?.status !== 'DISAPPROVED' && multipleS1Application?.status !== 'FOR_APPROVAL'\\r\\n                  ? multipleS1Application.actualNumberOfApplicationForm\\r\\n                  : multipleS1Application?.numberOfApplication}}</b>\\r\\n\\r\\n                  <b *ngIf=\\\"multipleS1Application?.submissionStatus==='PROCESSED'\\\">\\r\\n                    {{currentUser.userRole.name !== 'ROLE_APPLICANT' && currentUser.userRole.name!=='ROLE_ADMIN' && currentUser.userRole.name !== 'ROLE_SUPER_ADMIN' ? multipleS1Application?.countVerifiedApplicationForm : ''}}\\r\\n                     of {{multipleS1Application?.actualNumberOfApplicationForm}}</b>\\r\\n\\r\\n                <b *ngIf=\\\"multipleS1Application?.status === 'APPROVED' && (currentUser.userRole.name==='ROLE_ADMIN' || currentUser.userRole.name === 'ROLE_SUPER_ADMIN' || currentUser.userRole.name === 'ROLE_APPLICANT') && multipleS1Application?.submissionStatus!=='PROCESSED'\\\">\\r\\n                  {{multipleS1ApplicationList.length}} of {{multipleS1Application?.numberOfApplication}}</b>\\r\\n              </span>\\r\\n            </td>\\r\\n            <td class=\\\"no-border\\\"\\r\\n              *ngIf=\\\"multipleS1Application?.status==='APPROVED'&&currentUser.userRole.name==='ROLE_APPLICANT'\\\"\\r\\n              [hidden]=\\\"multipleS1Application?.submissionStatus==='PROCESSED'\\\">\\r\\n              <button class=\\\"button-right button-red\\\" mat-raised-button\\r\\n              [disabled]=\\\"multipleS1Application?.actualNumberOfApplicationForm === multipleS1Application?.numberOfApplication\\\"\\r\\n                (click)=\\\"updateMultipleApplications(multipleS1Application?.id)\\\">\\r\\n                <i class=\\\"material-icons color__white\\\">add</i> ADD APPLICATION\\r\\n              </button>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </table>\\r\\n\\r\\n        <hr>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\"><br></div>\\r\\n    <div class=\\\"row\\\">\\r\\n      <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\">\\r\\n        <mat-label>Form Type</mat-label>\\r\\n        <input matInput [value]=\\\"formType\\\" readonly>\\r\\n      </mat-form-field>\\r\\n\\r\\n      <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\">\\r\\n        <mat-label>Application Type</mat-label>\\r\\n        <input matInput [value]=\\\"multipleS1Application?.applicationType?.description\\\" readonly>\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n      <mat-accordion class=\\\"headers-align\\\" multi>\\r\\n        <mat-expansion-panel [expanded]=\\\"\\r\\n                  ((currentUser?.userRole?.name=='ROLE_APPLICANT'&&s1Application?.internalStatus!='SAVED')\\r\\n                  ||(s1Application?.internalStatus==undefined))\\r\\n                  &&((multipleS1Application?.status !== 'APPROVED')\\r\\n                  ||(multipleS1Application?.status === 'APPROVED' && multipleS1ApplicationList.length==0))\\\" *ngIf=\\\"\\r\\n                  (currentUser?.userRole?.name=='ROLE_APPLICANT'&&s1Application?.internalStatus=='SAVED')\\r\\n                  ||(currentUser?.userRole?.name!='ROLE_APPLICANT')\\r\\n                  ||(s1Application?.internalStatus==undefined)\\\">\\r\\n\\r\\n          <mat-expansion-panel-header>\\r\\n            <mat-panel-title>\\r\\n              <i class=\\\"material-icons\\\">label_important</i> &nbsp;Initial Information\\r\\n            </mat-panel-title>\\r\\n          </mat-expansion-panel-header>\\r\\n          <br>\\r\\n\\r\\n          <app-client-information [multipleApplication]=\\\"multipleS1Application\\\" [s1Application]=\\\"s1Application\\\" [isAscUser]=\\\"isAscUser\\\"\\r\\n            [isDisableFieldOnUpdate]=\\\"isDisableFieldOnUpdate\\\" [company]=\\\"company\\\"></app-client-information>\\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n            <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\">\\r\\n              <mat-label>Ad Title</mat-label>\\r\\n              <input matInput [value]=\\\"multipleS1Application?.adTitle\\\" readonly>\\r\\n            </mat-form-field>\\r\\n\\r\\n            <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\">\\r\\n              <mat-label>Tag Line</mat-label>\\r\\n              <input matInput [value]=\\\"multipleS1Application?.tagLine\\\" readonly>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"col-md-6\\\">\\r\\n              <mat-label>Date of Submission</mat-label>\\r\\n                <input matInput placeholder=\\\"Date\\\" readonly\\r\\n                  [value]=\\\"multipleS1Application?.dateOfSubmission | date: 'MMMM d, y'\\\"\\r\\n                  name=\\\"dateOfSubmission\\\" *ngIf=\\\"multipleS1Application?.status !== 'DISAPPROVED'\\\"/>\\r\\n                <input matInput placeholder=\\\"Date\\\" readonly\\r\\n                  value=\\\"N/A - Request was disapproved\\\"\\r\\n                  name=\\\"dateOfSubmission\\\" *ngIf=\\\"multipleS1Application?.status === 'DISAPPROVED'\\\"/>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n        </mat-expansion-panel>\\r\\n\\r\\n        <!-- FOR Admin Users only -->\\r\\n        <mat-expansion-panel *ngIf=\\\"currentUser?.userRole?.name === 'ROLE_ADMIN' || currentUser?.userRole?.name === 'ROLE_SUPER_ADMIN' \\\">\\r\\n          <mat-expansion-panel-header>\\r\\n            <mat-panel-title>\\r\\n              <i class=\\\"material-icons\\\">label_important</i> &nbsp;Presentor Information\\r\\n            </mat-panel-title>\\r\\n            <mat-panel-description>\\r\\n              Personal Details\\r\\n              <i class=\\\"material-icons\\\">person</i>\\r\\n            </mat-panel-description>\\r\\n          </mat-expansion-panel-header>\\r\\n\\r\\n          <br>\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <mat-form-field class=\\\"col-md-7\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label>Company Name</mat-label>\\r\\n                <input matInput [value]=\\\"multipleS1Application?.company?.companyName\\\" readonly>\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row\\\"><br></div>\\r\\n\\r\\n            <div class=\\\"row\\\">\\r\\n              <mat-form-field class=\\\"col-md-11\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label>Address</mat-label>\\r\\n                <input matInput [value]=\\\"multipleS1Application?.company?.completeAddress\\\" readonly>\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row\\\"><br></div>\\r\\n\\r\\n            <div class=\\\"row\\\">\\r\\n              <mat-form-field class=\\\"col-md-8\\\" appearance=\\\"outline\\\" *ngIf=\\\"multipleS1Application.id!= null\\\">\\r\\n                <mat-label>Name of Applicant</mat-label>\\r\\n                <input matInput [value]=\\\"multipleS1Application?.applicationOwner?.firstName+' '+multipleS1Application?.applicationOwner?.lastName\\\" readonly>\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row\\\"><br></div>\\r\\n\\r\\n            <div class=\\\"row\\\">\\r\\n              <mat-form-field class=\\\"col-md-4\\\" appearance=\\\"outline\\\" *ngIf=\\\"multipleS1Application.id!= null\\\">\\r\\n                <mat-label>Mobile Number</mat-label>\\r\\n                <input matInput [value]=\\\"multipleS1Application?.applicationOwner?.mobileNumber\\\" readonly>\\r\\n              </mat-form-field>\\r\\n              <mat-form-field class=\\\"col-md-3\\\" appearance=\\\"outline\\\" *ngIf=\\\"multipleS1Application.id!= null\\\">\\r\\n                <mat-label>Telephone Number</mat-label>\\r\\n                <input matInput [value]=\\\"multipleS1Application?.company?.companyTelephoneNo\\\" readonly>\\r\\n              </mat-form-field>\\r\\n              <mat-form-field class=\\\"col-md-4\\\" appearance=\\\"outline\\\" *ngIf=\\\"multipleS1Application.id!= null\\\">\\r\\n                <mat-label>Email Address</mat-label>\\r\\n                <input matInput [value]=\\\"multipleS1Application?.applicationOwner?.username\\\" readonly>\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n\\r\\n          </div>\\r\\n        </mat-expansion-panel>\\r\\n\\r\\n      </mat-accordion>\\r\\n      <!-- </form> -->\\r\\n\\r\\n      <div class=\\\"row\\\"><br></div>\\r\\n      <!-- ADD TABLE HERE -->\\r\\n      <div class=\\\"mat-elevation-z8 fields\\\" *ngIf=\\\"multipleS1Application?.status==='APPROVED'\\\">\\r\\n        <table mat-table [dataSource]=\\\"dataSource||multipleS1ApplicationList\\\" matSort>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"referenceCode\\\">\\r\\n            <th mat-header-cell class=\\\"center-table-text\\\" *matHeaderCellDef mat-sort-header> REFERENCE CODE </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"viewApplication(element)\\\">\\r\\n              {{ element?.referenceCode ? element?.referenceCode : '-' | uppercase}} </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"typeOfMediumDisplay\\\">\\r\\n            <th mat-header-cell class=\\\"center-table-text\\\" *matHeaderCellDef> MEDIUM (Length) </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"viewApplication(element)\\\"> {{ element?.typeOfMediumDisplay }} </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"mainAttachmentReference\\\">\\r\\n            <th mat-header-cell class=\\\"center-table-text\\\" *matHeaderCellDef> HAS MAIN DOC </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"viewApplication(element)\\\">\\r\\n              <i *ngIf=\\\"element?.mainAttachmentReference\\\" class=\\\"material-icons\\\">check_circle</i>\\r\\n              <i *ngIf=\\\"!element?.mainAttachmentReference\\\" class=\\\"material-icons cancel\\\">cancel</i>\\r\\n            </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"supportingAttachmentReference\\\">\\r\\n            <th mat-header-cell class=\\\"center-table-text\\\" *matHeaderCellDef> HAS SUPPORT DOC </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"viewApplication(element)\\\">\\r\\n              <i *ngIf=\\\"element?.supportingAttachmentReference\\\" class=\\\"material-icons\\\">check_circle</i>\\r\\n              <i *ngIf=\\\"!element?.supportingAttachmentReference && !element?.hasNoSupportingDocs\\\" class=\\\"material-icons cancel\\\">cancel</i>\\r\\n              <i *ngIf=\\\"element?.hasNoSupportingDocs\\\" class=\\\"material-icons\\\">cancel</i>\\r\\n            </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"brand\\\">\\r\\n            <th mat-header-cell class=\\\"center-table-text\\\" *matHeaderCellDef> BRAND </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"viewApplication(element)\\\">\\r\\n              {{ element?.brand?.description | uppercase }}\\r\\n            </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"status\\\">\\r\\n            <th mat-header-cell class=\\\"center-table-text\\\" *matHeaderCellDef> APPLICATION STATUS </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"viewApplication(element)\\\"\\r\\n            [ngStyle]=\\\"{'background-color': element?.internalStatus === 'S1_APPLICATION_REJECTED' ? 'lightpink' : '' }\\\">\\r\\n              {{ element?.externalStatus?.replaceAll('_',' ') | uppercase }}\\r\\n          </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"ASCstatus\\\">\\r\\n            <th mat-header-cell class=\\\"center-table-text\\\" *matHeaderCellDef> INTERNAL STATUS </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"viewApplication(element)\\\"\\r\\n            [ngStyle]=\\\"{'background-color': element?.internalStatus === 'S1_APPLICATION_REJECTED' ? 'lightpink' : '' }\\\"> {{\\r\\n              element?.internalStatus?.replaceAll('_',' ') | uppercase }}</td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"decisionStatus\\\">\\r\\n            <th mat-header-cell class=\\\"center-table-text\\\" *matHeaderCellDef> DECISION STATUS </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"viewApplication(element)\\\"\\r\\n            [ngStyle]=\\\"{'background-color': element?.internalStatus === 'S1_APPLICATION_REJECTED' ? 'lightpink' : '' }\\\">\\r\\n              {{ element?.decisionStatus ? element?.decisionStatus : '-' | uppercase }}\\r\\n          </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n          <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n        </table>\\r\\n        <div class=\\\"no-record\\\" [hidden]=\\\"dataSource && dataSource?.data?.length > 0\\\"\\r\\n          *ngIf=\\\"multipleS1ApplicationList.length==0\\\">\\r\\n          No results found.\\r\\n        </div>\\r\\n        <mat-paginator [pageSizeOptions]=\\\"[5, 10, 20]\\\" showFirstLastButtons></mat-paginator>\\r\\n        <div class=\\\"row\\\"><br></div>\\r\\n      </div>\\r\\n      <hr>\\r\\n\\r\\n      <div class=\\\"row\\\"><br>\\r\\n      <b *ngIf=\\\"isDisabledSubmitButton && currentUser.userRole.name==='ROLE_APPLICANT'\\\"><b class=\\\"material-icons\\\">error_outline</b> {{warningNote}}</b>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row\\\"><br></div>\\r\\n      <div class=\\\"no-border\\\" [hidden]=\\\"multipleS1Application?.submissionStatus==='PROCESSED'\\\"\\r\\n      *ngIf=\\\"multipleS1ApplicationList.length>0 && currentUser.userRole.name==='ROLE_APPLICANT' &&\\r\\n            multipleS1Application?.status !== 'FOR_APPROVAL' && isAllApplicationsHasMainDoc\\\">\\r\\n        <button class=\\\"button-right button-red\\\" mat-raised-button [disabled]=\\\"isDisabledSubmitButton\\\"\\r\\n          (click)=\\\"submitMultiple()\\\">\\r\\n          <i class=\\\"material-icons color__white\\\">send</i> SUBMIT\\r\\n          <br>\\r\\n        </button>\\r\\n      </div>\\r\\n      <br>\\r\\n      <!-- //////////////////////////////////////// ACTION BUTTONS //////////////////////////////////////////////////////////// -->\\r\\n      <div class=\\\"row\\\" *ngIf=\\\"multipleS1Application?.status === 'FOR_APPROVAL' && isAscUser && !multipleS1Application?.assignedReviewer\\\">\\r\\n        <div mat-dialog-actions>\\r\\n          <div class=\\\"dialog-button-content\\\" align=\\\"end\\\">\\r\\n            <button class=\\\"confirm\\\" (click)=\\\"onApproveOrDisapprove()\\\"><i\\r\\n                class=\\\"material-icons\\\">thumb_up_alt</i>Approve</button>\\r\\n            <button class=\\\"warn\\\" (click)=\\\"onApproveOrDisapprove('DISAPPROVED')\\\"><i\\r\\n                class=\\\"material-icons\\\">thumb_down_alt</i>Disapprove</button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    <!-- //////////////////////////////////////// ASC USERS //////////////////////////////////////////////////////////// -->\\r\\n      <!-- <div class=\\\"no-border\\\"\\r\\n        *ngIf=\\\"currentUser.userRole.name==='ROLE_ENCODER'&&canForwardMultipleApp && !multipleS1Application?.assignedReviewer\\\">\\r\\n        <button class=\\\"button-right button-red\\\" mat-raised-button (click)=\\\"forwardMultipleAppsTo('encoder')\\\">\\r\\n          <i class=\\\"material-icons color__white\\\">verified</i> FORWARD TO AD SPECIALIST\\r\\n        </button>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"no-border\\\"\\r\\n        *ngIf=\\\"currentUser.userRole.name==='ROLE_AD_SPECIALIST'&&canForwardMultipleApp && !multipleS1Application?.assignedReviewer\\\">\\r\\n        <button class=\\\"button-right button-red\\\" mat-raised-button (click)=\\\"forwardMultipleAppsTo('ad-specialist')\\\">\\r\\n          <i class=\\\"material-icons color__white\\\">verified</i> FORWARD TO SCREENER\\r\\n        </button>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"no-border\\\"\\r\\n        *ngIf=\\\"currentUser.userRole.name==='ROLE_SCREENER'&&canForwardMultipleApp && !multipleS1Application?.assignedReviewer\\\">\\r\\n        <button class=\\\"button-right button-red\\\" mat-raised-button (click)=\\\"forwardMultipleAppsTo('screener')\\\">\\r\\n          <i class=\\\"material-icons color__white\\\">fact_check</i> SCREENED\\r\\n        </button>\\r\\n      </div> -->\\r\\n\\r\\n      <!-- <div class=\\\"no-border\\\"\\r\\n        *ngIf=\\\"currentUser.userRole.name==='ROLE_REVIEWER'&&canForwardMultipleApp\\\">\\r\\n        <button class=\\\"button-right button-red\\\" mat-raised-button (click)=\\\"forwardMultipleAppsTo('reviewer')\\\">\\r\\n          <i class=\\\"material-icons color__white\\\">assignment_turned_in</i> REVIEWED\\r\\n        </button>\\r\\n      </div> -->\\r\\n\\r\\n      <br>\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\\r\\n\";","import { UserAccount } from './user-account.model';\r\n\r\nexport class CopyClaims {\r\n    id: number;\r\n    description: string;\r\n    role: string;\r\n    appFormReference: string;\r\n    actionDate: Date;\r\n    actionBy: UserAccount;\r\n}\r\n","import { MultiMediaMovingConstant } from './../../../../core/models/media-models/multimedia-moving.const';\r\nimport { CommonServices } from 'app/core/services/common-services.service';\r\nimport { Component, OnInit, Input, ViewChild, OnChanges, AfterViewChecked, ChangeDetectorRef, Output, EventEmitter, ChangeDetectionStrategy, SimpleChanges } from '@angular/core';\r\nimport { ApiService, SweetAlertService, DataStorageService, FileStorageService, ValidateFieldService } from '@services';\r\nimport { ENDPOINTS, ATTACHMENT_TYPE, TYPE_OF_MEDIUM, SPECIAL_APPLICATION, APPLICATION_STATUSES, APPLICATION_STAGE, USER_ROLES, MULTIMEDIA_STATIC } from '@shared';\r\nimport { MatTableDataSource, MatTable } from '@angular/material/table';\r\nimport {\r\n  S1Application,\r\n  S2Application,\r\n  TypeOfDocument,\r\n  TypeOfMedium,\r\n  SupportingDocument,\r\n  ApplicationSingleMedia,\r\n  ApplicationRequest,\r\n  ApplicationMultimedia,\r\n  ApplicationMultimediaMovingDTO,\r\n  ApplicationMultimediaStaticDTO,\r\n} from '@models';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport Swal from 'sweetalert2';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { MultiMediaStaticConst } from 'app/core/models/media-models/mulstimedia-static.const';\r\n\r\n@Component({\r\n  selector: 'app-material-information',\r\n  templateUrl: './material-information.component.html',\r\n  styleUrls: ['./material-information.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class MaterialInformationComponent implements OnInit, OnChanges, AfterViewChecked {\r\n  @ViewChild(MatPaginator, { static: false }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: false }) sort: MatSort;\r\n  @ViewChild(MatTable, { static: false }) table: MatTable<S1Application>;\r\n  // @ViewChild(AttachmentDocumentComponent, { static: false }) materialAttachmentDocument: AttachmentDocumentComponent;\r\n\r\n  @Output() checkSingleMediaChangesFunction: EventEmitter<any> = new EventEmitter();\r\n  @Output() checkMultimediaChangesFunction: EventEmitter<any> = new EventEmitter();\r\n\r\n  // @ViewChild('mainFile')\r\n  // myMainFile: ElementRef;\r\n  // @ViewChild('mainInput')\r\n  // myMainInput: ElementRef;\r\n  // @ViewChild('supportiveFile')\r\n  // mySupportiveFile: ElementRef;\r\n  // @ViewChild('revisionLetterFile')\r\n  // myRevisionLetterFile: ElementRef;\r\n\r\n  @Input() s1Application = new S1Application();\r\n  @Input() s2Application = new S2Application();\r\n  @Input() originalAttachmentDocuments = [];\r\n  @Input() revisionAttachmentDocuments = [];\r\n  @Input() complianceAttachmentDocuments = [];\r\n  @Input() revisionLetterAttachment: any;\r\n  @Input() newMultimediaList = [];\r\n  @Input() typeOfMediumList = []; // single and multimedia\r\n  @Input() supportiveDocumentList = [];\r\n  @Input() applicationSingleMedia = new ApplicationSingleMedia();\r\n  @Input() isAscUser = false;\r\n  @Input() isDisableFieldOnUpdate = false;\r\n\r\n  dataSource: MatTableDataSource<S1Application>;\r\n  displayedColumns: string[];\r\n  todayDate: Date = new Date();\r\n  materialInformationForm: FormGroup;\r\n\r\n  executionList = [];\r\n  dialectList = [];\r\n  newSupportiveDocumentList = [];\r\n  typeOfDocumentList = [];\r\n  specialApplicationType = [...SPECIAL_APPLICATION];\r\n\r\n  setMultimediaList = [];\r\n  @Input() selectedMultimediaList = [];\r\n  selectedMultimediaStringList = [];\r\n  @Input() toDeleteMultimediaList = [];\r\n  // singleMedia = new SingleMedia();\r\n  typeOfMedium = new TypeOfMedium();\r\n  typeOfDocument = new TypeOfDocument();\r\n  // attachmentDocument = new AttachmentDocument();\r\n  supportingDocument = new SupportingDocument();\r\n  applicationMultimedia = new ApplicationMultimedia();\r\n  applicationRequest = new ApplicationRequest();\r\n  newApplicationSingleMedia = new ApplicationSingleMedia();\r\n\r\n  selectMultimedia = false;\r\n  // showMainDocumentUploadButton = false;\r\n  // showMainDocumentViewButton = false;\r\n  // showMainDocumentDownloadButton = false;\r\n  // showSupportDocumentFrame = false;\r\n  // showMainDocumentRemoveButton = false;\r\n  // showRevisionLetterViewButton = false;\r\n\r\n  previewMainDocument = false;\r\n  disableSubmitButtonByMedia = false;\r\n\r\n  showSupportiveDocumentUploadButton = false;\r\n  showSupportiveDocumentViewButton = false;\r\n  showSupportiveDocumentDownloadButton = false;\r\n  showRevisionLetterDownloadButton = false;\r\n  previewSupportiveDocument = false;\r\n\r\n  attachmentSize: number;\r\n  safeURLMainDoc: any;\r\n  safeURLSupportDoc: any;\r\n  currentUser: any;\r\n  applicationStage: string;\r\n  safeURLRevisionLetter: any;\r\n  supportingDocumentIndex: any;\r\n  showRevisionLetterUploadButton = false;\r\n  isDigitalStatic = false;\r\n  isUpdate = false;\r\n\r\n  // validations\r\n  hiddenValidation: string;\r\n  readonlyValidation: string;\r\n  disabledValidation: string;\r\n\r\n  attachmentType = ATTACHMENT_TYPE.MAIN;\r\n  selectedFiles: FileList;\r\n  currentFileUpload: File;\r\n  progress: { percentage: number } = { percentage: 0 };\r\n  uploadedFileMain: any;\r\n  uploadedFileSupportive: any;\r\n  uploadedFileRevision: any;\r\n  mediaType = '';\r\n  labelMainDocument = 'MAIN DOCUMENT';\r\n  @Input() savedTypeOfMedium = '';\r\n  private ngUnsubscribe = new Subject();\r\n  selectedTypeOfMedium = 'SINGLE MEDIA';\r\n  @Input() multimediaDTO: any = {};\r\n  multimediaMovingDTO = new ApplicationMultimediaMovingDTO();\r\n  multimediaStaticDTO = new ApplicationMultimediaStaticDTO();\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private apiService: ApiService,\r\n    private sweetAlertService: SweetAlertService,\r\n    private sanitizer: DomSanitizer,\r\n    public dataStorage: DataStorageService,\r\n    private fileStorageService: FileStorageService,\r\n    private cd: ChangeDetectorRef,\r\n    public validateFieldService: ValidateFieldService,\r\n    private spinner: NgxSpinnerService,\r\n    public util: CommonServices\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.currentUser = this.dataStorage.getUserAccount();\r\n    if (this.currentUser.userRole.name === USER_ROLES.ROLE_AD_SPECIALIST) {\r\n      this.displayedColumns = ['typeOfDocument', 'input', 'variant', 'expiresOn', 'basedOn', 'remarks', 'action'];\r\n    } else {\r\n      this.displayedColumns = ['typeOfDocument', 'input', 'variant', 'expiresOn', 'basedOn', 'remarks'];\r\n    }\r\n\r\n    this.setFormValidator();\r\n    this.getTypeOfDocumentList();\r\n\r\n    if (this.dataStorage.getSpecialS1Application()) {\r\n      this.applicationRequest = this.dataStorage.getSpecialS1Application();\r\n    }\r\n    this.emitSingleMediaChanges();\r\n    this.initializeMultimediaMovingObj();\r\n    this.initializeMultimediaStaticObj();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes) {\r\n      if (this.multimediaDTO) {\r\n        if (this.s1Application.refTypeOfMedium === TYPE_OF_MEDIUM.MULTIMEDIA_MOVING) this.multimediaMovingDTO = this.multimediaDTO;\r\n        if (this.s1Application.refTypeOfMedium === TYPE_OF_MEDIUM.MULTIMEDIA_STATIC) this.multimediaStaticDTO = this.multimediaDTO;\r\n      }\r\n    }\r\n    \r\n    if (this.s1Application.refTypeOfMedium === undefined) {\r\n      this.s1Application.refTypeOfMedium = TYPE_OF_MEDIUM.SINGLE_MEDIA;\r\n      this.getTypeOfMedium(TYPE_OF_MEDIUM.SINGLE_MEDIA);\r\n    } else if (!this.applicationSingleMedia || this.s1Application.refTypeOfMedium?.includes('MULTIMEDIA')) {\r\n      this.getTypeOfMedium(this.s1Application.refTypeOfMedium);\r\n    } else if (this.applicationSingleMedia) {\r\n      if (this.applicationSingleMedia.mediumExecution) {\r\n        this.typeOfMedium = this.applicationSingleMedia.mediumExecution.typeOfMedium;\r\n        if (this.typeOfMedium.id) {\r\n          this.getExecutionDialectList();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  ngAfterViewChecked() {\r\n    this.cd.detectChanges();\r\n  }\r\n\r\n  setFormValidator() {\r\n    this.materialInformationForm = this.formBuilder.group({\r\n      adTitle: ['', Validators.required],\r\n      referenceCode: [''],\r\n      previousRefCode: [''],\r\n      tagLine: [''],\r\n      refTypeOfMedium: [''],\r\n      appFormReference: [''],\r\n\r\n      // this.attachmentDocumentForm = this.formBuilder.group({\r\n      attachmentReference: [''],\r\n      hasNoSupportingDocs: [''],\r\n      typeOfDocument: [''],\r\n      basedOn: [''],\r\n      variant: [''],\r\n      dateOfLaunch: [''],\r\n      expiresOn: [''],\r\n      remarks: [''],\r\n      input: [''],\r\n\r\n      typeOfMedium: [''],\r\n      mediumExecution: [''],\r\n      language: [''],\r\n      dialect: [''],\r\n      others: [''],\r\n      sizeLength: ['0'],\r\n      width: ['0'],\r\n\r\n      multimediaLength: [''],\r\n      multimediaSize: [''],\r\n      applicationSingleMedia: [''],\r\n      applicationMultimediaStatic: [''],\r\n      applicationMultimediaMoving: [''],\r\n\r\n    });\r\n  }\r\n\r\n  getTypeOfMedium(type) {\r\n    this.typeOfMediumList = [];\r\n    let endpoint = '';\r\n    if (type === TYPE_OF_MEDIUM.SINGLE_MEDIA) {\r\n      this.applicationSingleMedia = new ApplicationSingleMedia();\r\n      endpoint = ENDPOINTS.typeOfMediumSingleMedia;\r\n      this.selectMultimedia = false;\r\n      this.s1Application.refTypeOfMedium = TYPE_OF_MEDIUM.SINGLE_MEDIA;\r\n      this.selectedTypeOfMedium = TYPE_OF_MEDIUM.SINGLE_MEDIA;\r\n    } else if (type === TYPE_OF_MEDIUM.MULTIMEDIA_MOVING) {\r\n      endpoint = ENDPOINTS.typeOfMediumMultiMediaMoving;\r\n      this.selectMultimedia = true;\r\n      this.s1Application.refTypeOfMedium = TYPE_OF_MEDIUM.MULTIMEDIA_MOVING;\r\n      this.initializeMultimediaStaticObj();\r\n      this.selectedTypeOfMedium = TYPE_OF_MEDIUM.MULTIMEDIA;\r\n    } else {\r\n      endpoint = ENDPOINTS.typeOfMediumMultiMediaStatic;\r\n      this.selectMultimedia = true;\r\n      this.s1Application.refTypeOfMedium = TYPE_OF_MEDIUM.MULTIMEDIA_STATIC;\r\n      this.initializeMultimediaMovingObj();\r\n      this.selectedTypeOfMedium = TYPE_OF_MEDIUM.MULTIMEDIA;\r\n    }\r\n\r\n    // console.log('Selected: ', this.selectedTypeOfMedium)\r\n    this.apiService.findAll(endpoint).subscribe((res: any) => {\r\n      this.typeOfMediumList = res.responseData.data;\r\n      if (type === TYPE_OF_MEDIUM.SINGLE_MEDIA) {\r\n        this.typeOfMedium = this.typeOfMediumList.filter(medium => medium.description === this.savedTypeOfMedium)[0];\r\n      }\r\n\r\n      // if (this.selectedMultimediaList.length > 0) {\r\n      //   this.selectedMultimediaStringList = this.selectedMultimediaList.map(mappedList => mappedList?.typeOfMedium?.description);\r\n      //   this.emitMultimediaChanges();\r\n      // }\r\n      // this.typeOfMediumList = this.typeOfMediumList.map((medium, index) => {\r\n      //   const sampleList = this.selectedMultimediaList.filter(filteredMedium => filteredMedium.typeOfMedium.id === medium.id);\r\n      //   if (sampleList.length) {\r\n      //     medium.sizeLength = sampleList[0].multimediaSizeLength;\r\n      //   } else {\r\n      //     medium.sizeLength = null;\r\n      //   }\r\n      //   return medium;\r\n      // });\r\n    }, (err: any) => {\r\n    });\r\n  }\r\n\r\n  resetValues() {\r\n    this.applicationSingleMedia.dialect = null;\r\n    this.applicationSingleMedia.language = null;\r\n    this.applicationSingleMedia.others = '';\r\n    this.applicationSingleMedia.sizeLength = '0';\r\n    this.applicationSingleMedia.amount = 0;\r\n    this.applicationSingleMedia.mediumExecution = null;\r\n    this.applicationSingleMedia.width = '0';\r\n  }\r\n\r\n  setSingleMedia(typeofMedium: any) {\r\n    this.resetValues();\r\n    this.typeOfMedium = typeofMedium;\r\n    this.labelMainDocument = this.typeOfMedium.typeOfMainDocument.typeOfMainDocument;\r\n    this.getExecutionDialectList();\r\n    this.emitSingleMediaChanges();\r\n  }\r\n\r\n  emitSingleMediaChanges() {\r\n    if (\r\n      (this.typeOfMedium?.executionEnable && !this.applicationSingleMedia.mediumExecution) ||\r\n      (this.typeOfMedium?.lengthEnable && !this.applicationSingleMedia.sizeLength) ||\r\n      (this.typeOfMedium?.sizeLengthEnable && !this.applicationSingleMedia.sizeLength) ||\r\n      ((!this.typeOfMedium?.id && !this.applicationSingleMedia.id) && !this.savedTypeOfMedium)\r\n    ) {\r\n      this.disableSubmitButtonByMedia = true;\r\n    } else {\r\n      this.disableSubmitButtonByMedia = false;\r\n    }\r\n\r\n    this.checkSingleMediaChangesFunction.emit();\r\n  }\r\n\r\n  // addMultimedia(obj: any, evt) {\r\n  //   if (evt.target.value) {\r\n  //     obj.sizeLength = evt.target.value;\r\n  //     const existingValue = this.newMultimediaList.filter(filteredList => filteredList === obj);\r\n  //     if (existingValue.length) {\r\n  //       existingValue[0] = obj;\r\n  //     } else {\r\n  //       this.newMultimediaList.push(obj);\r\n  //       this.selectedMultimediaList.push(obj);\r\n  //     }\r\n  //     if (obj?.id) {\r\n  //       this.toDeleteMultimediaList = this.toDeleteMultimediaList.filter(filtered => filtered.id !== obj?.id);\r\n  //     }\r\n  //   } else {\r\n  //     const deleteExisting = this.selectedMultimediaList.filter(filteredMedia => filteredMedia?.typeOfMedium?.id === obj?.id);\r\n  //     if (deleteExisting.length) {\r\n  //       this.toDeleteMultimediaList.push(deleteExisting[0]);\r\n  //     }\r\n\r\n  //     this.newMultimediaList = this.newMultimediaList.filter(filteredMultimedia => filteredMultimedia.id !== obj.id);\r\n  //     this.selectedMultimediaList = this.selectedMultimediaList.filter(filteredMultimedia => filteredMultimedia.id !== obj.id);\r\n  //   }\r\n  //   const toDeleteMultimediaSet = this.toDeleteMultimediaList.filter((item, i, ar) => ar.indexOf(item) === i);\r\n  //   this.toDeleteMultimediaList = toDeleteMultimediaSet;\r\n  //   this.emitMultimediaChanges();\r\n  // }\r\n\r\n  emitMultimediaChanges() {\r\n    this.disableSubmitButtonByMedia = false;\r\n    let data = {\r\n      type: this.s1Application.refTypeOfMedium,\r\n      data: this.s1Application.refTypeOfMedium === TYPE_OF_MEDIUM.MULTIMEDIA_MOVING ? this.multimediaMovingDTO : this.multimediaStaticDTO\r\n    }\r\n    this.checkMultimediaChangesFunction.emit(data);\r\n  }\r\n\r\n  getTypeOfDocumentList() {\r\n    this.apiService.findAll(ENDPOINTS.typeOfDocument).subscribe((res: any) => {\r\n      this.typeOfDocumentList = res.responseData.data;\r\n    }, (err: any) => {\r\n    });\r\n  }\r\n\r\n  setTypeOfDocument(type) {\r\n    this.typeOfDocument = type;\r\n  }\r\n\r\n  compareSingleMedia(value: any, selected: any): boolean {\r\n    if (value && selected) {\r\n      return value.description === selected.description;\r\n    }\r\n  }\r\n\r\n  compareMediumExecution(value: any, selected: any): boolean {\r\n    if (value && selected) {\r\n      return value.typeOfExecution.typeOfExecution === selected.typeOfExecution.typeOfExecution;\r\n    }\r\n  }\r\n\r\n  compareDialect(value: any, selected: any): boolean {\r\n    if (value && selected) {\r\n      return value.dialect === selected.dialect;\r\n    }\r\n  }\r\n\r\n  getExecutionDialectList() {\r\n    if (this.typeOfMedium.id) {\r\n      this.apiService.findAll(`${ENDPOINTS.typeOfExecutionsByMedium}${this.typeOfMedium.id}`).subscribe((res: any) => {\r\n        if (this.typeOfMedium.executionEnable) {\r\n          this.executionList = res.responseData.data;\r\n        } else {\r\n          if (res.responseData.data.length === 0) {\r\n            this.sweetAlertService.customErrorMessage('The selected type of medium has no execution.');\r\n          } else {\r\n            this.applicationSingleMedia.mediumExecution = res.responseData.data[0];\r\n          }\r\n        }\r\n        this.emitSingleMediaChanges();\r\n      }, (err: any) => {\r\n      });\r\n    }\r\n\r\n    this.apiService.findAll(ENDPOINTS.dialects).subscribe((res: any) => {\r\n      this.dialectList = res.responseData.data;\r\n    }, (err: any) => {\r\n    });\r\n  }\r\n\r\n  removeTypeOfDocument(index) {\r\n    const keepValues = [];\r\n\r\n    Swal.fire({\r\n      text: 'Are you sure you want to delete this TYPE OF DOCUMENT?',\r\n      icon: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Confirm'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.supportiveDocumentList.forEach((element, key) => {\r\n          if (key !== index) {\r\n            keepValues.push(element);\r\n          }\r\n        });\r\n        this.supportiveDocumentList = keepValues;\r\n        this.dataSource.data = keepValues;\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  addSupportiveDocument(supportingDocument) {\r\n\r\n    const checkIfDocumentAlreadyExist = this.supportiveDocumentList.filter(data =>\r\n      data.typeOfDocument.id === supportingDocument.typeOfDocument.id);\r\n\r\n    // if (checkIfDocumentAlreadyExist.length === 1) {\r\n    //   this.sweetAlertService.customErrorMessage('Type of Document that is being added is already on the list.', 5);\r\n    // } else {\r\n    this.newSupportiveDocumentList.push(supportingDocument);\r\n    this.supportiveDocumentList.push(supportingDocument);\r\n    this.dataSource = new MatTableDataSource<S1Application>(this.supportiveDocumentList);\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n    // }\r\n    this.supportingDocument = new SupportingDocument();\r\n    this.typeOfDocument = new TypeOfDocument();\r\n  }\r\n\r\n  getTypeOfDocument(res, index) {\r\n    this.isUpdate = true;\r\n    this.apiService.findById(ENDPOINTS.typeOfDocument, res.typeOfDocument.id).subscribe((data: any) => {\r\n      if (data) {\r\n        this.typeOfDocument = data.responseData.data;\r\n      }\r\n    });\r\n    this.supportingDocument.typeOfDocument = res.typeOfDocument;\r\n    if (res.typeOfDocument.description === 'DOH-FDA PERMIT') {\r\n      this.typeOfDocument.expiresOnEnable = true;\r\n      this.supportingDocument.expiresOn = res.expiresOn;\r\n      this.supportingDocumentIndex = index;\r\n    } else if (res.typeOfDocument.description === 'NMIS') {\r\n      this.typeOfDocument.expiresOnEnable = false;\r\n      this.supportingDocument.expiresOn = null;\r\n      this.supportingDocumentIndex = index;\r\n    } else if (res.typeOfDocument.description === 'DOLE PERMIT') {\r\n      this.typeOfDocument.expiresOnEnable = false;\r\n      this.supportingDocument.expiresOn = null;\r\n      this.supportingDocumentIndex = index;\r\n    }\r\n  }\r\n\r\n  modifyTypeOfDocument(res, id) {\r\n    const checkIfDocumentAlreadyExist = this.supportiveDocumentList.filter(data => data.typeOfDocument.id === res.typeOfDocument.id);\r\n    //  if(checkIfDocumentAlreadyExist.length === 1){\r\n    //   console.log(\"ALREADY EXIST\");\r\n    //  }else{\r\n    //   console.log(\"SUCCESSFULLY UPDATE\");\r\n    //   this.supportiveDocumentList.forEach((element, key) => {\r\n    //     if (key === id) {\r\n    //       this.supportiveDocumentList[key] = res;\r\n    //     }\r\n    //   });\r\n    //  }\r\n    // console.log(\"count\", checkIfDocumentAlreadyExist);\r\n    // if (checkIfDocumentAlreadyExist.length === 1) {\r\n    //   this.isUpdate = false;\r\n    //   this.supportiveDocumentList.forEach((element, key) => {\r\n    //     if (key === id) {\r\n    //       this.supportiveDocumentList.splice(key);\r\n    //     }\r\n    //   });\r\n    // } else {\r\n    //   this.sweetAlertService.customErrorMessage(`Type of Document already exist.`);\r\n    // }\r\n    this.isUpdate = false;\r\n    this.dataSource.data = this.supportiveDocumentList;\r\n    this.supportingDocument = new SupportingDocument();\r\n    this.supportingDocumentIndex = '';\r\n  }\r\n\r\n  initializeMultimediaMovingObj(): void {\r\n    this.multimediaMovingDTO = new ApplicationMultimediaMovingDTO();\r\n    let multimediaMovingList = new MultiMediaMovingConstant().data\r\n    this.multimediaMovingDTO = {\r\n      applicationMultimediaMovingList: multimediaMovingList,\r\n      appFormReference: '',\r\n      amount: 0,\r\n      id: 0,\r\n      sizeLength: 0,\r\n      typeOfMedium: null,\r\n    }\r\n  }\r\n  \r\n  initializeMultimediaStaticObj(): void {\r\n    this.multimediaStaticDTO = new ApplicationMultimediaStaticDTO();\r\n    let multimediaStaticList = new MultiMediaStaticConst().data\r\n    this.multimediaStaticDTO = {\r\n      applicationMultimediaStaticList: multimediaStaticList,\r\n      appFormReference: '',\r\n      amount: 0,\r\n      id: 0,\r\n      typeOfMedium: null,\r\n    }\r\n  }\r\n\r\n  isNumber(number): boolean {\r\n    if (number) return this.validateFieldService.numbersOnly(number);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.ngUnsubscribe.next();\r\n    this.ngUnsubscribe.complete();\r\n  }\r\n}\r\n","import { Component, Inject, OnInit, Optional, ViewChild } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTable, MatTableDataSource } from '@angular/material/table';\r\nimport { PerformanceMetrics } from '@models';\r\nimport { ApiService } from '@services';\r\nimport { ENDPOINTS } from '@shared';\r\n\r\n@Component({\r\n  selector: 'app-performance-metrics',\r\n  templateUrl: './performance-metrics.component.html',\r\n  styleUrls: ['./performance-metrics.component.scss']\r\n})\r\nexport class PerformanceMetricsComponent implements OnInit {\r\n  @ViewChild(MatPaginator, { static: false }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: false }) sort: MatSort;\r\n  @ViewChild(MatTable, { static: false }) table: MatTable<PerformanceMetrics>;\r\n\r\n  dataSource: MatTableDataSource<PerformanceMetrics>;\r\n  displayedColumns: string[] = [\r\n    // 'referenceCode',\r\n    // 'appFormReference',\r\n    'movement',\r\n    'lastUpdate',\r\n    'duration',\r\n    'actionBy'\r\n  ];\r\n\r\n  performanceMetricsList = [];\r\n  referenceCode: any;\r\n\r\n  constructor(\r\n    private apiService: ApiService,\r\n    @Optional() public dialogRef: MatDialogRef<PerformanceMetricsComponent>,\r\n    @Optional() @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {\r\n    if (data) {\r\n      this.getPerformanceMatricsList(data.appFormReference);\r\n      this.referenceCode = data.referenceCode;\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  getPerformanceMatricsList(appFormReference) {\r\n    this.apiService.findByParam(ENDPOINTS.performanceMetrics, appFormReference).subscribe((res: any) => {\r\n      this.performanceMetricsList = res;\r\n      this.dataSource = new MatTableDataSource<PerformanceMetrics>(this.performanceMetricsList);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    });\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { ReassignmentRoutingModule } from './reassignment-routing.module';\r\nimport { ReassignmentComponent } from './reassignment.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { AngularMaterialModule } from '@shared';\r\nimport { FragmentsModule } from 'app/modules/fragments/fragments.module';\r\n\r\n\r\n@NgModule({\r\n  declarations: [ReassignmentComponent],\r\n  imports: [\r\n    CommonModule,\r\n    ReassignmentRoutingModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule,\r\n    AngularMaterialModule,\r\n    FragmentsModule,\r\n  ]\r\n})\r\nexport class ReassignmentModule { }\r\n","export * from './company.module';\r\nexport * from './add-company/add-company.component';\r\nexport * from './add-company/add-company.module';\r\nexport * from './list-company/list-company.component';\r\nexport * from './list-company/list-company.module';","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcGFnZXMvYXBwbGljYXRpb25zL3NjaGVkdWxlLW9mLWZlZXMvc2luZ2xlLWFwcGxpY2F0aW9uL3NpbmdsZS1hcHBsaWNhdGlvbi5jb21wb25lbnQuc2NzcyJ9 */\";"]}