{"version":3,"sources":["./src/app/modules/pages/accounting/add-payment/add-payment-preview-application/add-payment-preview-application.component.ts","./src/app/modules/pages/accounting/add-payment/add-payment.module.ts","./src/app/modules/pages/accounting/add-payment/add-payment.component.scss","./src/app/modules/pages/accounting/add-payment/add-payment.component.ts","./src/app/modules/pages/accounting/add-payment/add-payment.component.html","./src/app/modules/pages/accounting/add-payment/add-payment-preview-application/add-payment-preview-application.component.html","./src/app/modules/pages/accounting/add-payment/add-payment-routing.module.ts"],"names":[],"mappings":"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","file":"default~add-payment-add-payment-module~applications-applications-module-es2015.js","sourcesContent":["import { AfterViewInit, Component, Input, OnChanges, OnInit, SimpleChanges, ViewChild } from '@angular/core';\r\nimport { S1Application, UserAccount } from '@models';\r\nimport { ApiService } from '@services';\r\nimport { APP_DECISION_STATUS, ATTACHMENT_TYPE, ENDPOINTS, SUBMISSION_TYPE } from '@shared';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { ApplicationSingleMedia } from '../../../../../core/models/application-single-media.model';\r\n\r\n@Component({\r\n  selector: 'app-add-payment-preview-application',\r\n  templateUrl: './add-payment-preview-application.component.html',\r\n})\r\n\r\nexport class AddPaymentPreviewApplicationComponent implements OnChanges {\r\n  @Input() previewS1Application: any;\r\n  @Input() applicationSingleMedia = new ApplicationSingleMedia();\r\n  @Input() multimediaDTO: any = {};\r\n  presentorDetails = new UserAccount();\r\n\r\n  multimediaMovingList = [];\r\n  multimediaStaticList = [];\r\n\r\n  constructor(private apiService: ApiService) { }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes['previewS1Application']) {\r\n      this.getPresentorDetails();\r\n    }\r\n  }\r\n\r\n  getPresentorDetails() {\r\n    if (this.previewS1Application?.applicationOwner?.username) {\r\n      this.apiService.findByParam(ENDPOINTS.userLogin, this.previewS1Application.applicationOwner.username).subscribe(\r\n        (res: any) => {\r\n          if (res.responseData.data) {\r\n            this.presentorDetails = res.responseData.data;\r\n          }\r\n        });\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { AddPaymentRoutingModule } from './add-payment-routing.module';\r\nimport { AddPaymentComponent } from './add-payment.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { AngularMaterialModule } from '@shared';\r\nimport { AddPaymentPreviewApplicationComponent } from './add-payment-preview-application/add-payment-preview-application.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [AddPaymentComponent, AddPaymentPreviewApplicationComponent],\r\n  imports: [\r\n    CommonModule,\r\n    AddPaymentRoutingModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    AngularMaterialModule,\r\n  ],\r\n  exports: [\r\n    AddPaymentComponent,\r\n    AddPaymentPreviewApplicationComponent\r\n  ]\r\n})\r\nexport class AddPaymentModule { }\r\n","export default \"textarea {\\n  height: 200px;\\n}\\n\\n.numbers-input {\\n  text-align: end;\\n}\\n\\n.total {\\n  font-weight: 900;\\n}\\n\\n.mat-expansion-panel-header.mat-expanded:hover,\\n.mat-expansion-panel-header {\\n  background: #bad9ff;\\n}\\n\\n.mat-expansion-panel .mat-expansion-panel-header.cdk-keyboard-focused:not([aria-disabled=true]),\\n.mat-expansion-panel .mat-expansion-panel-header.cdk-program-focused:not([aria-disabled=true]),\\n.mat-expansion-panel:not(.mat-expanded) .mat-expansion-panel-header:hover:not([aria-disabled=true]) {\\n  background: #cfe5ff;\\n}\\n\\n.mat-expansion-panel-header-description {\\n  justify-content: space-between;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9wYWdlcy9hY2NvdW50aW5nL2FkZC1wYXltZW50L2FkZC1wYXltZW50LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksYUFBQTtBQUNKOztBQUVBO0VBQ0ksZUFBQTtBQUNKOztBQUNBO0VBQ0ksZ0JBQUE7QUFFSjs7QUFDQTs7RUFFRSxtQkFBQTtBQUVGOztBQUNBOzs7RUFNRSxtQkFBQTtBQURGOztBQUlBO0VBQ0ksOEJBQUE7QUFESiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcGFnZXMvYWNjb3VudGluZy9hZGQtcGF5bWVudC9hZGQtcGF5bWVudC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbInRleHRhcmVhIHtcclxuICAgIGhlaWdodDogMjAwcHg7XHJcbn1cclxuXHJcbi5udW1iZXJzLWlucHV0e1xyXG4gICAgdGV4dC1hbGlnbjogZW5kO1xyXG59XHJcbi50b3RhbHtcclxuICAgIGZvbnQtd2VpZ2h0OiA5MDA7XHJcbn1cclxuXHJcbi5tYXQtZXhwYW5zaW9uLXBhbmVsLWhlYWRlci5tYXQtZXhwYW5kZWQ6aG92ZXIsXHJcbi5tYXQtZXhwYW5zaW9uLXBhbmVsLWhlYWRlciB7XHJcbiAgYmFja2dyb3VuZDogI2JhZDlmZjtcclxufVxyXG5cclxuLm1hdC1leHBhbnNpb24tcGFuZWxcclxuICAubWF0LWV4cGFuc2lvbi1wYW5lbC1oZWFkZXIuY2RrLWtleWJvYXJkLWZvY3VzZWQ6bm90KFthcmlhLWRpc2FibGVkPVwidHJ1ZVwiXSksXHJcbi5tYXQtZXhwYW5zaW9uLXBhbmVsXHJcbiAgLm1hdC1leHBhbnNpb24tcGFuZWwtaGVhZGVyLmNkay1wcm9ncmFtLWZvY3VzZWQ6bm90KFthcmlhLWRpc2FibGVkPVwidHJ1ZVwiXSksXHJcbi5tYXQtZXhwYW5zaW9uLXBhbmVsOm5vdCgubWF0LWV4cGFuZGVkKVxyXG4gIC5tYXQtZXhwYW5zaW9uLXBhbmVsLWhlYWRlcjpob3Zlcjpub3QoW2FyaWEtZGlzYWJsZWQ9XCJ0cnVlXCJdKSB7XHJcbiAgYmFja2dyb3VuZDogI2NmZTVmZjtcclxufVxyXG5cclxuLm1hdC1leHBhbnNpb24tcGFuZWwtaGVhZGVyLWRlc2NyaXB0aW9uIHtcclxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcclxufVxyXG4iXX0= */\";","import { Component, OnInit, Input, ViewChild } from '@angular/core';\r\nimport { S1Application, Payment, AttachmentDocument } from '@models';\r\nimport { ApiService, SweetAlertService, DataStorageService } from '@services';\r\nimport { APPLICATION_STATUSES, ATTACHMENT_TYPE, ENDPOINTS, PAYMENT_MODE, PAYMENT_STATUS, PAYMENT_TYPE, PAYMENT_TYPE_LIST, SUBMISSION_TYPE, TYPE_OF_MEDIUM, USER_ROLES } from '@shared';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport Swal from 'sweetalert2';\r\nimport { PaymentMethod } from 'app/core/models/payment-method.model';\r\nimport { MatTable, MatTableDataSource } from '@angular/material/table';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { ValidateFieldService } from 'app/core/services/validate-field.service';\r\nimport { FileStorageService } from 'app/core/services/file.storage.service';\r\nimport { ApplicationSingleMedia } from 'app/core/models/application-single-media.model';\r\n\r\n@Component({\r\n  selector: 'app-add-payment',\r\n  templateUrl: './add-payment.component.html',\r\n  styleUrls: ['./add-payment.component.scss']\r\n})\r\nexport class AddPaymentComponent implements OnInit {\r\n  @ViewChild(MatPaginator, { static: false }) paginator: MatPaginator;\r\n  @ViewChild(MatTable, { static: false }) table: MatTable<AddPaymentComponent>;\r\n  dataSource: MatTableDataSource<any>\r\n  displayedColumns: string[] = ['referenceCode', 'adTitle', 'mediumAndLength', 'amount'];\r\n  multipleApplicationList = [];\r\n  paymentTypeFromUrl = '';\r\n\r\n  @Input() s1Application = new S1Application();\r\n  attachmentDocument = new AttachmentDocument();\r\n  applicationSingleMedia = new ApplicationSingleMedia();\r\n  typeOfMediumDisplay = '';\r\n  paymentTypeList = [];\r\n  attachmentDocuments = [];\r\n  @Input() payment = new Payment();\r\n  paymentMethod = new PaymentMethod();\r\n  safeURL: any;\r\n  id: any;\r\n  paymentForm: FormGroup;\r\n  paymentTypeForm: FormGroup;\r\n  currentUser: any;\r\n  paymentMode: string;\r\n  selectedProofOfPayment: any;\r\n  currentDate = new Date();\r\n  paymentTemp = new Payment();\r\n  isMultiple = false;\r\n  isSpecial = false;\r\n  isForPayment = false;\r\n  isForApproval = false;\r\n  isPaymentTypeValid = false;\r\n  isDelinquent = false;\r\n  selectedFile: File;\r\n  fileSize: number;\r\n  uploadedPaymentFile: any;\r\n  isShowUploadButton = false;\r\n  previewDocument = false;\r\n\r\n  proofOfPayment = [\r\n    { id: 1, name: 'Schedule of Fees - Individual' },\r\n    { id: 2, name: 'Schedule of Fees - Multiple' },\r\n    { id: 3, name: 'Schedule of Fees - Special' },\r\n    { id: 4, name: 'Settlement of Delinquent Status' },\r\n    { id: 5, name: 'Settlement of Brand Penalties' },\r\n    { id: 6, name: 'Settlement of Company Penalties' }\r\n  ];\r\n  multimediaDTO: any = {};\r\n\r\n  constructor(\r\n    private apiService: ApiService,\r\n    private sanitizer: DomSanitizer,\r\n    private formBuilder: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private fileStorageService: FileStorageService,\r\n    public dataStorage: DataStorageService,\r\n    public validateFieldService: ValidateFieldService,\r\n    private spinner: NgxSpinnerService,\r\n    private sweetAlertService: SweetAlertService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.currentUser = this.dataStorage.getUserAccount();\r\n\r\n    this.paymentTypeFromUrl = this.route.snapshot.paramMap.get('id').split('-')[0];\r\n    this.id = this.route.snapshot.paramMap.get('id').split('-')[1];\r\n\r\n    this.getPaymentList();\r\n    this.setFormValidator();\r\n    this.initData();\r\n  }\r\n\r\n  initData() {\r\n    if (this.paymentTypeFromUrl?.toLowerCase() === 'for_payment') {\r\n      this.isForPayment = true;\r\n    }\r\n    if (this.paymentTypeFromUrl?.toLowerCase() === 'for_approval') {\r\n      this.isForApproval = true;\r\n    }\r\n\r\n    if (this.route?.snapshot?.paramMap?.get('status')?.includes('multiple-')) {\r\n      this.isMultiple = true;\r\n      this.paymentTypeFromUrl = 'multiple';\r\n    }\r\n    if (this.route?.snapshot?.params?.id.includes('special-')) {\r\n      this.isSpecial = true;\r\n      this.paymentTypeFromUrl = 'special';\r\n    }\r\n    if (this.route?.snapshot?.paramMap?.get('status')?.includes('delinquent-')) {\r\n      this.isDelinquent = true;\r\n      this.paymentTypeFromUrl = 'delinquent';\r\n    }\r\n\r\n    if (this.id !== 0 && this.currentUser.userRole.name === USER_ROLES.ROLE_ACCOUNTING) {\r\n      if (this.isForPayment || this.isSpecial || this.paymentTypeFromUrl?.toLowerCase() === 'unpaid' || this.isMultiple) {\r\n        this.getPaymentDetails();\r\n      } else {\r\n        this.viewPayment();\r\n      }\r\n      if (this.isMultiple) {\r\n        this.getMultipleApplicationList();\r\n      }\r\n    }\r\n  }\r\n\r\n  setFormValidator(): void {\r\n    this.paymentForm = this.formBuilder.group({\r\n      paymentType: ['', Validators.required],\r\n      referenceNo: [''],\r\n      amount: [''],\r\n      paymentDate: [''],\r\n      bankName: [''],\r\n      bankBranch: [''],\r\n      controlNo: [''],\r\n      referenceNumber: [''],\r\n      typeOfMaterial: [''],\r\n      length: [''],\r\n      baseRate: [''],\r\n      vat: [''],\r\n      total: [''],\r\n      remarks: [''],\r\n      applicantCompanyDetails: [''],\r\n      accumulatedAmountToBeSettled: [''],\r\n      clientCompanyDetails: [''],\r\n      discount: [''],\r\n      amountReceive: [''],\r\n      filedBirForm: [''],\r\n      withholdingTax: [0],\r\n      orNo: [''],\r\n      ccConfirmationCode: [''],\r\n      checkNo: ['']\r\n    });\r\n\r\n  }\r\n\r\n  approvePenalty() {\r\n    if (this.paymentMethod.amount < this.payment.amountDue) {\r\n      this.sweetAlertService.customErrorMessage(`Amount Received/Transferred is lower than Amount Due.`);\r\n    } else {\r\n      Swal.fire({\r\n        text: 'Are you sure you want to approve this Delinquent Company?',\r\n        icon: 'question',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        confirmButtonText: 'Confirm'\r\n      }).then((result) => {\r\n        if (result.value) {\r\n          this.payment.paymentMethod = this.paymentMethod;\r\n          this.payment.amountReceive = Number(this.paymentMethod.amount);\r\n\r\n          this.apiService.save(`${ENDPOINTS.approveDelinquentCompany}`, this.payment).subscribe((res: any) => {\r\n            this.sweetAlertService.customSuccessMessage('Delinquent company approved successfully.');\r\n            this.router.navigate(['asc/page/accounting/payments/', 'delinquent-companies']);\r\n          }, err => {\r\n            if (!err.error.message) {\r\n              err.error.message = err.error.responseMessage;\r\n            }\r\n            this.sweetAlertService.error(err);\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  paymentTypevalidator() {\r\n    let a = this.paymentMethod;\r\n    let b = this.paymentMethod?.paymentType?.paymentDescription;\r\n    if (b === PAYMENT_MODE.GCASH || b === PAYMENT_MODE.CASH) {\r\n      if (a.referenceNo && a.paymentDate && a.amount\r\n        ? this.isPaymentTypeValid = true : this.isPaymentTypeValid = false) { }\r\n    } else if (b === PAYMENT_MODE.PAYMAYA) {\r\n      if (a.referenceNo && a.paymentDate && a.amount && a.ccConfirmationCode\r\n        ? this.isPaymentTypeValid = true : this.isPaymentTypeValid = false) { }\r\n    } else if (b === PAYMENT_MODE.BANK) {\r\n      if (a.bankName && a.paymentDate && a.amount && a.bankBranch\r\n        ? this.isPaymentTypeValid = true : this.isPaymentTypeValid = false) { }\r\n    } else if (b === PAYMENT_MODE.VOUCHER) {\r\n      if (a.controlNo ? this.isPaymentTypeValid = true : this.isPaymentTypeValid = false) { }\r\n    \r\n    } else if (b === PAYMENT_MODE.CHECK) {\r\n      if (a.bankName && a.checkNo && a.amount\r\n        ? this.isPaymentTypeValid = true : this.isPaymentTypeValid = false) { }\r\n    }\r\n  }\r\n\r\n  resetPaymentTypeValidation() {\r\n    this.isPaymentTypeValid = false\r\n    if (this.paymentMethod?.paymentType?.paymentDescription === PAYMENT_MODE.PROMISORRY_NOTE) {\r\n      this.isPaymentTypeValid = true;\r\n    }\r\n  }\r\n\r\n  getPaymentDetails() {\r\n    let endpoint = ENDPOINTS.paymentDetails;\r\n    if (this.isMultiple) {\r\n      if (this.isForPayment) {\r\n        endpoint = ENDPOINTS.multiplePaymentDetails;\r\n      } else {\r\n        endpoint = ENDPOINTS.paymentMultipleMonitoring + `?groupId=`;\r\n      }\r\n    }\r\n    if (this.isSpecial) {\r\n      if (this.isForPayment) {\r\n        endpoint = ENDPOINTS.specialPaymentDetails;\r\n      } else {\r\n        endpoint = ENDPOINTS.paymentSpecial;\r\n      }\r\n    }\r\n\r\n    this.apiService.findAll(endpoint + this.id).subscribe((res: any) => {\r\n      if (res.responseData) {\r\n        this.payment = res.responseData.data;\r\n        this.payment ? (this.payment.filedBirForm = this.payment.filedBirForm ? this.payment.filedBirForm : false) : null;\r\n        this.paymentMethod = this.payment?.paymentMethod ? this.payment.paymentMethod : new PaymentMethod();\r\n      } else if (res.data) {\r\n        this.payment = res.data[0];\r\n        this.payment ? (this.payment.filedBirForm = this.payment.filedBirForm ? this.payment.filedBirForm : false) : null;\r\n        this.paymentMethod = this.payment?.paymentMethod ? this.payment.paymentMethod : new PaymentMethod();\r\n      } else {\r\n        this.payment = res;\r\n        this.payment ? (this.payment.filedBirForm = this.payment.filedBirForm ? this.payment.filedBirForm : false) : null;\r\n        this.paymentMethod = this.payment?.paymentMethod ? this.payment.paymentMethod : new PaymentMethod();\r\n      }\r\n\r\n      switch (this.payment?.applicationForm?.refTypeOfMedium || this.payment?.applicationFormS2?.applicationForm?.refTypeOfMedium) {\r\n        case 'SINGLE MEDIA':\r\n          this.getApplicationSingleMedia();\r\n          break;\r\n        case 'MULTIMEDIA-MOVING':\r\n          this.getMultimediaMoving();\r\n          this.fetchMultimedia();\r\n          break;\r\n        case 'MULTIMEDIA-STATIC':\r\n          this.getMultimediaStatic();\r\n          this.fetchMultimedia();\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n\r\n      if (this.payment?.paymentAttachmentReference) {\r\n        this.getAttachmentDocumentDisplay(this.payment.paymentAttachmentReference);\r\n      }\r\n      \r\n      // this.paymentTemp = this.payment;\r\n    });\r\n  }\r\n\r\n  getPaymentList() {\r\n    this.apiService.findAll(ENDPOINTS.paymentType).subscribe((res: any) => {\r\n      this.paymentTypeList = res.responseData.data;\r\n      if (this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT) {\r\n        const creditCardIndex = this.paymentTypeList\r\n          .findIndex((element) => element.paymentDescription === 'Credit Card');\r\n        this.paymentTypeList.splice(creditCardIndex, 1);\r\n      }\r\n    });\r\n  }\r\n\r\n  viewPayment() {\r\n    let endpoint = `${ENDPOINTS.payment}/application-form-id`;\r\n    if (this.isMultiple) {\r\n      if (this.isForPayment) {\r\n        endpoint = `${ENDPOINTS.paymentMultiple}/payment-multiple-details/multiple-application-id`;\r\n      } else if (this.isForApproval) {\r\n        endpoint = ENDPOINTS.paymentMultipleMonitoring;\r\n      }\r\n    } else {\r\n      if (this.paymentTypeFromUrl?.toLowerCase() === 'for_payment') {\r\n        if (this.currentUser.userRole.name === USER_ROLES.ROLE_ACCOUNTING) {\r\n          endpoint = `${ENDPOINTS.paymentDetailsAccounting}`;\r\n        } else {\r\n          endpoint = `${ENDPOINTS.paymentDetails}`;\r\n        }\r\n      }\r\n    }\r\n\r\n    this.apiService.findByParam(endpoint, this.id).subscribe((res: any) => {\r\n      if (res.responseData) {\r\n        this.payment = res.responseData.data;\r\n        if (this.payment) {\r\n          this.payment.filedBirForm = this.payment.filedBirForm ? this.payment.filedBirForm : false;\r\n        }\r\n      } else {\r\n        this.payment = res;\r\n        if (this.payment) {\r\n          this.payment.filedBirForm = this.payment.filedBirForm ? this.payment.filedBirForm : false;\r\n        }\r\n      }\r\n\r\n      this.paymentMethod = this.payment?.paymentMethod ? this.payment.paymentMethod : new PaymentMethod();\r\n      this.paymentMode = this.paymentMethod?.paymentType?.paymentDescription;\r\n      // this.paymentTemp = this.payment;\r\n\r\n      if (this.payment?.paymentAttachmentReference) {\r\n        this.getAttachmentDocumentDisplay(this.payment.paymentAttachmentReference);\r\n      }\r\n\r\n      switch (this.payment?.applicationForm?.refTypeOfMedium || this.payment?.applicationFormS2?.applicationForm?.refTypeOfMedium) {\r\n        case 'SINGLE MEDIA':\r\n          this.getApplicationSingleMedia();\r\n          break;\r\n        case 'MULTIMEDIA-MOVING':\r\n          this.getMultimediaMoving();\r\n          this.fetchMultimedia();\r\n          break;\r\n        case 'MULTIMEDIA-STATIC':\r\n          this.getMultimediaStatic();\r\n          this.fetchMultimedia();\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n\r\n    });\r\n  }\r\n\r\n  getAttachmentDocumentDisplay(paymentAttachmentReference) {\r\n    this.apiService.findByParam(ENDPOINTS.attachmentDocument, `payment-attachment-reference/` + paymentAttachmentReference)\r\n      .subscribe((res1: any) => {\r\n        if (res1.responseData.data) {\r\n          this.attachmentDocuments = res1.responseData.data;\r\n          this.attachmentDocument = res1.responseData.data;\r\n          this.safeURL = this.sanitizer.bypassSecurityTrustResourceUrl(this.attachmentDocument.fileURL);\r\n          // console.log('view attachmentDocument: ', this.attachmentDocuments);\r\n        }\r\n      }, (err: any) => {\r\n        this.attachmentDocuments = [];\r\n      });\r\n  }\r\n\r\n  getMultipleApplicationList() {\r\n    this.apiService.findAll(ENDPOINTS.getMultipleAppFormsWithNoRejected + this.id).subscribe((res: any) => {\r\n      this.multipleApplicationList = res.responseData.data;\r\n\r\n      this.multipleApplicationList.forEach((multipleApplication) => {\r\n        switch (multipleApplication?.refTypeOfMedium || multipleApplication?.applicationFormS2?.applicationForm?.refTypeOfMedium) {\r\n          case 'SINGLE MEDIA':\r\n            this.getApplicationSingleMedia(multipleApplication?.appFormReference);\r\n            break;\r\n          case 'MULTIMEDIA-MOVING':\r\n            this.getMultimediaMoving(multipleApplication?.appFormReference);\r\n            break;\r\n          case 'MULTIMEDIA-STATIC':\r\n            this.getMultimediaStatic(multipleApplication?.appFormReference);\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      });\r\n\r\n      this.dataSource = new MatTableDataSource<any>(this.multipleApplicationList);\r\n      this.dataSource.paginator = this.paginator;\r\n      if (this.multipleApplicationList.length) {\r\n        this.payment.multipleApplication = this.multipleApplicationList[0].multipleApplication;\r\n      }\r\n    }, (err: any) => {\r\n      this.sweetAlertService.error(err);\r\n    });\r\n  }\r\n\r\n  processPayment(remarks) {\r\n\r\n    const amountTransferred = Number.parseFloat(this.paymentMethod?.amount?.toString());\r\n    const toPay = this.payment.amountDue - this.payment?.withholdingTax;\r\n\r\n    if (this.paymentMethod.paymentType.paymentDescription === 'Voucher' ||\r\n      this.paymentMethod.paymentType.paymentDescription === 'Promisorry Note' ||\r\n      (this.paymentMethod.paymentType.paymentDescription !== 'Voucher'\r\n        && this.paymentMethod.paymentType.paymentDescription !== 'Promisorry Note'\r\n        && amountTransferred >= toPay)) {\r\n      Swal.fire({\r\n        text: 'Are you sure you want to process this PAYMENT?',\r\n        icon: 'question',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        confirmButtonText: 'Confirm'\r\n      }).then((result) => {\r\n        if (result.value) {\r\n          this.payment.paymentStatus = PAYMENT_STATUS.PAID;\r\n          this.payment.paymentDate = new Date();\r\n          this.payment.paymentMethod = this.paymentMethod;\r\n          this.payment.amountReceive = this.paymentMethod.amount;\r\n          // this.payment.paymentAttachmentReference = this.attachmentDocument.paymentAttachmentReference;\r\n\r\n          let endpoint = ENDPOINTS.accountingPaymentApprove;\r\n          if (this.isMultiple) {\r\n            endpoint = ENDPOINTS.accountingMultiplePaymentApprove;\r\n          } else if (this.isSpecial) {\r\n            endpoint = ENDPOINTS.accountingSpecialPaymentApprove;\r\n          }\r\n          this.apiService.save(endpoint, this.payment).subscribe((res: any) => {\r\n            this.sweetAlertService.customSuccessMessage('Payment successfully processed.');\r\n            // console.log('SAVED DATA: ', res);\r\n            this.router.navigate(['asc/page/accounting/payments/', `schedule-of-fees-${this.paymentTypeFromUrl}`]);\r\n          });\r\n        }\r\n      });\r\n    } else {\r\n      this.sweetAlertService.customErrorMessage(`Amount Received/Transferred is lower than Amount Due.`);\r\n    }\r\n  }\r\n\r\n  comparePaymentType(value: any, selected: any): boolean {\r\n    if (value && selected) {\r\n      return value.paymentDescription === selected.paymentDescription;\r\n    }\r\n  }\r\n\r\n  selectProofOfPayment(res) {\r\n    this.selectedProofOfPayment = res;\r\n  }\r\n\r\n  // recompute() {\r\n  //   console.log('trigerring recompute... ', this.payment);\r\n\r\n  //   this.paymentTemp = this.payment;\r\n  //   let endpoint = ENDPOINTS.accountingRecompute;\r\n  //   if (this.isMultiple) {\r\n  //     endpoint = ENDPOINTS.accountingRecomputeMultiple;\r\n  //   } else if (this.isSpecial) {\r\n  //     endpoint = ENDPOINTS.accountingSpecialPaymentRecompute;\r\n  //   }\r\n  //   console.log('paymentMethod - ', this.paymentMethod);\r\n  //   this.payment.paymentMethod = this.paymentMethod;\r\n  //   this.payment.paymentDate = new Date();\r\n  //   this.payment.filename = this.attachmentDocument.filename;\r\n  //   this.payment.amountReceive = this.paymentMethod.amount;\r\n  //   this.payment.paymentAttachmentReference = this.attachmentDocument.paymentAttachmentReference;\r\n\r\n  //   this.apiService.save(endpoint, this.payment).subscribe((res: any) => {\r\n  //     this.payment = res;\r\n  //     this.payment.basicRate = this.paymentTemp.basicRate;\r\n  //     this.payment.vat = this.paymentTemp.vat;\r\n  //     this.payment.amountDue = this.paymentTemp.amountDue;\r\n  //     console.log('payment... ', this.payment);\r\n  //   }, (err: any) => {\r\n  //   });\r\n  // }\r\n\r\n  computeWithholding() {\r\n    if (this.payment) {\r\n      this.payment.withholdingTax = this.payment?.filedBirForm ? this.payment.basicRate * 0.02 : 0;\r\n    }\r\n  }\r\n  \r\n  getAmountDue(): number {\r\n    let amountDue = Number((Math.round(this.payment?.amountDue * 100) / 100).toFixed(2));\r\n    let withholding = Number((Math.round(this.payment?.withholdingTax * 100) / 100).toFixed(2));\r\n    let result = amountDue - withholding;\r\n    return result ? result : 0;\r\n  }\r\n\r\n  validatePaymentStatus(): boolean {\r\n    if (this.payment?.paymentStatus !== PAYMENT_STATUS.PAID && this.payment?.paymentStatus !== PAYMENT_STATUS.UNPAID) {\r\n      return true;\r\n    } \r\n    return false;\r\n  }\r\n  \r\n  comparePaymentMethod(value: any, selected: any): boolean {\r\n    if (value && selected) {\r\n      return value.paymentDescription === selected.paymentDescription;\r\n    }\r\n  }\r\n\r\n  selectFile(event) {\r\n    this.isShowUploadButton = false;\r\n\r\n    if (event.target.files[0]) {\r\n      this.fileSize = event.target.files[0].size;\r\n\r\n      if (this.fileSize > 15000000) {\r\n        this.sweetAlertService.customErrorMessage(`Attachments' total file size should not exceed 15MB.`);\r\n        event.target.value = '';\r\n        return;\r\n\r\n      } else {\r\n        this.isShowUploadButton = true;\r\n        const fileURL = URL.createObjectURL(event.target.files[0]);\r\n        this.previewDocument = true;\r\n\r\n        this.safeURL = this.sanitizer.bypassSecurityTrustResourceUrl(fileURL);\r\n\r\n        const reader = new FileReader();\r\n        const [file] = event.target.files;\r\n\r\n        reader.readAsDataURL(file);\r\n        reader.onload = () => {\r\n        };\r\n\r\n        this.selectedFile = event.target.files[0];\r\n      }\r\n    }\r\n  }\r\n\r\n  viewDocument() {\r\n    if (this.uploadedPaymentFile) {\r\n      window.open(this.uploadedPaymentFile.fileURL);\r\n    } else {\r\n      window.open(this.attachmentDocument.fileURL);\r\n    }\r\n  }\r\n\r\n  uploadProofOfPayment() {\r\n    Swal.fire({\r\n      text: 'Are you sure you want to submit this as proof of payment?',\r\n      icon: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Confirm'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.spinner.show();\r\n        let params = '';\r\n        params = '?&attachmentType=' + ATTACHMENT_TYPE.PAYMENT + '&submissionType=' + SUBMISSION_TYPE.ORIGINAL;\r\n        this.fileStorageService.pushFileToStorage(ENDPOINTS.attachmentDocument, this.selectedFile, params)\r\n          .subscribe((res: any) => {\r\n\r\n            this.uploadedPaymentFile = res.responseData.data;\r\n            this.payment.paymentAttachmentReference = this.uploadedPaymentFile.paymentAttachmentReference;\r\n            this.addToAttachmentDocuments(this.uploadedPaymentFile);\r\n\r\n            this.hideSpinner();\r\n            this.sweetAlertService.customSuccessMessage('Attachment successfully uploaded.');\r\n            this.selectedFile = null;\r\n\r\n            this.getAttachmentDocument();\r\n\r\n          }, (err: any) => {\r\n            this.hideSpinner();\r\n            this.sweetAlertService.error(err);\r\n          }, () => {\r\n            // actions after subscription\r\n          });\r\n      } else {\r\n        this.selectedFile = null;\r\n      }\r\n    });\r\n  }\r\n\r\n  addToAttachmentDocuments(obj: any) {\r\n    this.attachmentDocument.paymentAttachmentReference = obj.paymentAttachmentReference;\r\n    this.attachmentDocument.id = obj.id;\r\n    this.attachmentDocument.originalFilename = obj.originalFilename;\r\n    this.attachmentDocument.filename = obj.filename;\r\n    this.attachmentDocument.fileExtension = obj.fileExtension;\r\n    this.attachmentDocument.fileURL = obj.fileURL;\r\n    this.attachmentDocument.attachmentType = obj.attachmentType;\r\n    this.attachmentDocument.documentFormat = obj.documentFormat;\r\n  }\r\n\r\n  hideSpinner() {\r\n    setTimeout(() => {\r\n      this.spinner.hide();\r\n    }, 1);\r\n  }\r\n\r\n  getAttachmentDocument() {\r\n    this.spinner.show();\r\n\r\n    this.apiService.findByParam(ENDPOINTS.paymentAttachmentReference,\r\n      this.attachmentDocument.paymentAttachmentReference).subscribe(\r\n        (res: any) => {\r\n          if (res) {\r\n            this.attachmentDocument = res.responseData.data;\r\n          }\r\n          this.hideSpinner();\r\n        }, (err: any) => {\r\n          this.hideSpinner();\r\n          console.error(err);\r\n        });\r\n  }\r\n\r\n  getAttachmentDocuments() {\r\n    this.apiService.findByParam(ENDPOINTS.attachmentDocument, `brand-penalty-attachment-reference/${this.payment.paymentAttachmentReference}`).subscribe((res: any) => {\r\n      if (res) {\r\n        this.attachmentDocument = res;\r\n      }\r\n      this.previewDocument = true;\r\n      this.safeURL = this.sanitizer.bypassSecurityTrustResourceUrl(this.attachmentDocument.fileURL);\r\n    });\r\n  }\r\n\r\n  navigateToList() {\r\n    if (this.payment.paymentStatus === PAYMENT_STATUS.PAID || this.payment.paymentStatus === PAYMENT_STATUS.UNPAID) {\r\n      if (this.paymentTypeFromUrl) {\r\n        this.router.navigate(['asc/page/accounting/payments/', `schedule-of-fees-${this.paymentTypeFromUrl}`]);\r\n      } else {\r\n        this.router.navigate(['asc/page/accounting/payments/']);\r\n      }\r\n    } else {\r\n      Swal.fire({\r\n        text: 'Are you sure you want to go back to payment list?',\r\n        icon: 'question',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        confirmButtonText: 'Confirm'\r\n      }).then((result) => {\r\n        if (result.value) {\r\n          if (this.paymentTypeFromUrl) {\r\n            this.router.navigate(['asc/page/accounting/payments/', `schedule-of-fees-${this.paymentTypeFromUrl}`]);\r\n          } else {\r\n            this.router.navigate(['asc/page/accounting/payments/']);\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  getApplicationSingleMedia(appFormReference = this.payment?.applicationForm?.appFormReference) {\r\n    if (this.payment?.applicationFormS2?.applicationForm?.refTypeOfMedium) {\r\n      appFormReference = this.payment?.applicationFormS2?.applicationForm?.appFormReference;\r\n    }\r\n    this.apiService.findByParam(ENDPOINTS.applicationSingleMedia,\r\n      `app-form-reference/${appFormReference}`).subscribe(\r\n        (res: any) => {\r\n          if (res.responseData.data.length > 0) {\r\n            this.applicationSingleMedia = res.responseData.data[0];\r\n\r\n            this.typeOfMediumDisplay = `${this.applicationSingleMedia?.mediumExecution?.typeOfMedium?.description} (${this.applicationSingleMedia?.sizeLength})`;\r\n            if (this.isMultiple) {\r\n              this.multipleApplicationList.forEach((element, index) => {\r\n                if (element.appFormReference === appFormReference) {\r\n                  this.multipleApplicationList[index] = {\r\n                    ...this.multipleApplicationList[index],\r\n                    typeOfMediumDisplay: this.typeOfMediumDisplay\r\n                  };\r\n                }\r\n              });\r\n              this.dataSource = new MatTableDataSource<any>(this.multipleApplicationList);\r\n              this.dataSource.paginator = this.paginator;\r\n            }\r\n\r\n          } else {\r\n            this.applicationSingleMedia = new ApplicationSingleMedia();\r\n            this.typeOfMediumDisplay = '';\r\n          }\r\n        }, (err: any) => {\r\n          this.applicationSingleMedia = new ApplicationSingleMedia();\r\n          this.typeOfMediumDisplay = '';\r\n        });\r\n  }\r\n\r\n  getMultimediaStatic(appFormReference = this.payment?.applicationForm?.appFormReference) {\r\n    this.apiService.findByParam(ENDPOINTS.applicationMultimedia,\r\n      `app-form-reference/${appFormReference}`).subscribe(\r\n        (res: any) => {\r\n          if (res.responseData.data.length > 0) {\r\n            const multimediaList = new Set(res.responseData.data.map(mappedList => `${mappedList?.typeOfMedium?.description} (${mappedList?.multimediaSizeLength})`));\r\n\r\n            this.typeOfMediumDisplay = '';\r\n            let mediaCtrl = 1;\r\n            for (const media of multimediaList) {\r\n              if (mediaCtrl !== multimediaList.size) {\r\n                this.typeOfMediumDisplay += `${media}, `;\r\n                mediaCtrl++;\r\n              } else {\r\n                this.typeOfMediumDisplay += media;\r\n              }\r\n            }\r\n\r\n            if (this.isMultiple) {\r\n              this.multipleApplicationList.forEach((element, index) => {\r\n                if (element.appFormReference === appFormReference) {\r\n                  this.multipleApplicationList[index] = {\r\n                    ...this.multipleApplicationList[index],\r\n                    typeOfMediumDisplay: this.typeOfMediumDisplay\r\n                  };\r\n                }\r\n              });\r\n              this.dataSource = new MatTableDataSource<any>(this.multipleApplicationList);\r\n              this.dataSource.paginator = this.paginator;\r\n            }\r\n          } else {\r\n            this.typeOfMediumDisplay = '';\r\n          }\r\n        }, (err: any) => {\r\n          this.typeOfMediumDisplay = '';\r\n        });\r\n  }\r\n\r\n  getMultimediaMoving(appFormReference = this.payment?.applicationForm?.appFormReference) {\r\n    this.apiService.findByParam(ENDPOINTS.applicationMultimedia,\r\n      `app-form-reference/${appFormReference}`).subscribe(\r\n        (res: any) => {\r\n          if (res.responseData.data.length > 0) {\r\n            const multimediaList = new Set(res.responseData.data.map(mappedList => `${mappedList?.typeOfMedium?.description} (${mappedList?.multimediaSizeLength})`));\r\n\r\n            this.typeOfMediumDisplay = '';\r\n            let mediaCtrl = 1;\r\n            for (const media of multimediaList) {\r\n              if (mediaCtrl !== multimediaList.size) {\r\n                this.typeOfMediumDisplay += `${media}, `;\r\n                mediaCtrl++;\r\n              } else {\r\n                this.typeOfMediumDisplay += media;\r\n              }\r\n            }\r\n\r\n            if (this.isMultiple) {\r\n              this.multipleApplicationList.forEach((element, index) => {\r\n                if (element.appFormReference === appFormReference) {\r\n                  this.multipleApplicationList[index] = {\r\n                    ...this.multipleApplicationList[index],\r\n                    typeOfMediumDisplay: this.typeOfMediumDisplay\r\n                  };\r\n                }\r\n              });\r\n              this.dataSource = new MatTableDataSource<any>(this.multipleApplicationList);\r\n              this.dataSource.paginator = this.paginator;\r\n            }\r\n          } else {\r\n            this.typeOfMediumDisplay = '';\r\n          }\r\n        }, (err: any) => {\r\n          this.typeOfMediumDisplay = '';\r\n        });\r\n  }\r\n\r\n  rejectPayment() {\r\n    Swal.fire({\r\n      text: 'Are you sure you want to reject this roof of payment?',\r\n      icon: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Confirm'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.spinner.show();\r\n\r\n        let rejectEndpoint = ENDPOINTS.accountingReject;\r\n        if (this.isMultiple) {\r\n          rejectEndpoint = ENDPOINTS.accountingRejectMultiple;\r\n        } else if (this.isSpecial) {\r\n          rejectEndpoint = ENDPOINTS.accountingRejectSpecial;\r\n        }\r\n\r\n        this.apiService.save(rejectEndpoint, this.payment)\r\n          .subscribe((res: any) => {\r\n            this.hideSpinner();\r\n            this.sweetAlertService.customSuccessMessage('Successfully rejected.');\r\n\r\n            if (this.paymentTypeFromUrl) {\r\n              this.router.navigate(['asc/page/accounting/payments/', `schedule-of-fees-${this.paymentTypeFromUrl}`]);\r\n            } else {\r\n              this.router.navigate(['asc/page/accounting/payments/']);\r\n            }\r\n          }, (err: any) => {\r\n            this.hideSpinner();\r\n            this.sweetAlertService.error(err);\r\n          }, () => {\r\n            // actions after subscription\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  fetchMultimedia(): void{\r\n    let typeofMedium = this.payment?.applicationForm.refTypeOfMedium === TYPE_OF_MEDIUM.MULTIMEDIA_MOVING ? 'moving' : 'static';\r\n    let endpoint = ENDPOINTS.applicationMultimedia + '-' + typeofMedium + '/app-form-reference'\r\n    this.apiService.findByParam(endpoint, this.payment?.applicationForm.appFormReference).subscribe(\r\n      multimedia => {\r\n        if (multimedia) this.multimediaDTO = multimedia.responseData.data;\r\n      }\r\n    );\r\n  }\r\n}\r\n","export default \"<form>\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"currentUser?.userRole.name=='ROLE_ACCOUNTING'\\\">\\r\\n      <div class=\\\"col-md-12 title\\\">\\r\\n        <mat-label>\\r\\n          <mat-icon>payment</mat-icon> PAYMENT\\r\\n        </mat-label>\\r\\n\\r\\n        <button class=\\\"button-right button-red\\\" mat-raised-button (click)=\\\"navigateToList()\\\">\\r\\n          <mat-icon>list</mat-icon> VIEW LIST OF PAYMENT\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row mt-3\\\">\\r\\n      <mat-accordion class=\\\"headers-align\\\">\\r\\n        <mat-expansion-panel>\\r\\n          <mat-expansion-panel-header>\\r\\n            <mat-panel-title>\\r\\n              <i class=\\\"material-icons\\\">label_important</i> &nbsp;Preview\\r\\n            </mat-panel-title>\\r\\n            <mat-panel-description>\\r\\n              Application Details\\r\\n              <i class=\\\"material-icons\\\">visibility</i>\\r\\n            </mat-panel-description>\\r\\n          </mat-expansion-panel-header>\\r\\n          <br>\\r\\n          <app-add-payment-preview-application [previewS1Application]=\\\"payment?.applicationForm || payment?.multipleApplication\\\" [multimediaDTO]=\\\"multimediaDTO\\\"></app-add-payment-preview-application>\\r\\n        </mat-expansion-panel>\\r\\n      </mat-accordion>\\r\\n    </div>\\r\\n    <hr>\\r\\n\\r\\n    <form [formGroup]=\\\"paymentForm\\\">\\r\\n      <div class=\\\"row fields\\\">\\r\\n        <div class=\\\"col-md-12 title\\\" *ngIf=\\\"currentUser?.userRole?.name!='ROLE_ACCOUNTING'\\\">\\r\\n          <mat-label>\\r\\n            <mat-icon>payment</mat-icon>\\r\\n            {{payment?.paymentStatus!='PAID'&&safeURL!=undefined ? 'FOR APPROVAL' : payment?.paymentStatus}}\\r\\n          </mat-label>\\r\\n        </div>\\r\\n\\r\\n        <!--///////////////////////// ACCOUNTING /////////////////////////////-->\\r\\n        <div class=\\\"row\\\" *ngIf=\\\"currentUser.userRole.name=='ROLE_ACCOUNTING'\\\">\\r\\n          <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\">\\r\\n            <mat-label>Type Of Payment</mat-label>\\r\\n            <input matInput value=\\\"Schedule of Fees\\\" readonly>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md-6\\\" appearance=\\\"outline\\\">\\r\\n          <div class=\\\"col-md-12\\\" appearance=\\\"outline\\\" *ngIf=\\\"isForPayment || paymentTypeFromUrl === 'paid' || safeURL \\\">\\r\\n            <mat-label>Filename: </mat-label>\\r\\n            <br>\\r\\n            <input matInput [value]=\\\"attachmentDocument.originalFilename\\\" disabled\\r\\n              *ngIf=\\\"attachmentDocument.originalFilename\\\">\\r\\n            <input class=\\\"file-upload\\\" type=\\\"file\\\"\\r\\n              *ngIf=\\\"!attachmentDocument.originalFilename && this.paymentTypeFromUrl !== 'paid'\\\" accept=\\\".pdf\\\"\\r\\n              (change)=\\\"selectFile($event)\\\">\\r\\n            <br><br>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"col-md-12\\\" appearance=\\\"outline\\\"\\r\\n            *ngIf=\\\"(isForPayment || this.paymentTypeFromUrl === 'paid' || safeURL) && (attachmentDocument?.paymentAttachmentReference || isShowUploadButton)\\\">\\r\\n\\r\\n            <button mat-raised-button class=\\\"button-red button-right\\\" (click)=\\\"viewDocument()\\\"\\r\\n              *ngIf=\\\"attachmentDocument?.paymentAttachmentReference\\\">\\r\\n              <mat-icon>open_in_new</mat-icon> VIEW DOCUMENT\\r\\n            </button>\\r\\n\\r\\n            &nbsp; &nbsp;\\r\\n\\r\\n            <button mat-raised-button class=\\\"button-red button-right\\\" (click)=\\\"uploadProofOfPayment()\\\"\\r\\n              [disabled]=\\\"!safeURL||!isShowUploadButton\\\"\\r\\n              *ngIf=\\\"isShowUploadButton && !attachmentDocument.originalFilename\\\">\\r\\n              <mat-icon>upload</mat-icon> UPLOAD\\r\\n            </button>\\r\\n            <br><br>\\r\\n          </div>\\r\\n          <div class=\\\"file-upload\\\" style=\\\"border: 1px solid red\\\" *ngIf=\\\"safeURL\\\"\\r\\n            [hidden]=\\\"payment?.paymentStatus === 'PAID' || payment?.paymentStatus === 'UNPAID'\\\">\\r\\n            <object [data]=\\\"safeURL\\\" type=\\\"application/pdf\\\" width=\\\"100%\\\" height=\\\"500\\\">\\r\\n              <iframe [src]=\\\"safeURL\\\" width=\\\"100%\\\" height=\\\"500\\\">\\r\\n                <p>This browser does not support PDF!</p>\\r\\n              </iframe>\\r\\n            </object>\\r\\n          </div>\\r\\n          <br>\\r\\n          <div class=\\\"row\\\">\\r\\n            <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\" [hidden]=\\\"isMultiple\\\">\\r\\n              <mat-label>Reference Number</mat-label>\\r\\n              <input matInput\\r\\n                [value]=\\\"payment?.applicationForm?.referenceCode || payment?.applicationFormS2?.applicationForm?.referenceCode\\\"\\r\\n                readonly>\\r\\n            </mat-form-field>\\r\\n\\r\\n            <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n              <mat-label>Advertiser</mat-label>\\r\\n              <input matInput name=\\\"companyName\\\" readonly\\r\\n                [value]=\\\"payment?.applicationForm?.company?.companyName || payment?.multipleApplication?.company?.companyName || payment?.applicationFormS2?.applicationForm?.company?.companyName\\\">\\r\\n            </mat-form-field>\\r\\n\\r\\n            <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\" [hidden]=\\\"isMultiple\\\">\\r\\n              <mat-label>Ad Title - Medium (Length)</mat-label>\\r\\n              <textarea matInput name=\\\"refTypeOfMedium\\\"\\r\\n                [value]=\\\"payment?.applicationForm?.adTitle ? payment?.applicationForm?.adTitle + ' - ' + typeOfMediumDisplay : typeOfMediumDisplay || payment?.applicationFormS2?.applicationForm?.adTitle + ' - ' + typeOfMediumDisplay || payment?.applicationFormS2?.applicationForm?.adTitle + ' - ' + typeOfMediumDisplay\\\"\\r\\n                readonly></textarea>\\r\\n            </mat-form-field>\\r\\n\\r\\n            <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n              <mat-label>Vatable Sales</mat-label>\\r\\n              <input class=\\\"numbers-input\\\" matInput [value]=\\\"payment?.basicRate | number : '1.2-2'\\\" readonly\\r\\n                step=\\\"0.01\\\">\\r\\n            </mat-form-field>\\r\\n\\r\\n            <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n              <mat-label>VAT</mat-label>\\r\\n              <input class=\\\"numbers-input\\\" matInput [value]=\\\"payment?.vat | number : '1.2-2'\\\" readonly>\\r\\n            </mat-form-field>\\r\\n\\r\\n            <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n              <mat-label>Total Sales (VAT Inclusive)</mat-label>\\r\\n              <input class=\\\"numbers-input total\\\" matInput name=\\\"amount\\\" [value]=\\\"payment?.amountDue | number : '1.2-2'\\\"\\r\\n                readonly>\\r\\n            </mat-form-field>\\r\\n\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md-6\\\" [hidden]=\\\"payment?.paymentStatus!='PAID'&&currentUser?.userRole?.name!='ROLE_ACCOUNTING'\\\">\\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n            <div *ngIf=\\\"isMultiple\\\">\\r\\n              <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\r\\n                <ng-container matColumnDef=\\\"referenceCode\\\">\\r\\n                  <th mat-header-cell *matHeaderCellDef> Reference Code </th>\\r\\n                  <td mat-cell *matCellDef=\\\"let element; let i = index\\\">{{element?.referenceCode}}</td>\\r\\n                </ng-container>\\r\\n                <ng-container matColumnDef=\\\"adTitle\\\">\\r\\n                  <th mat-header-cell *matHeaderCellDef> Ad Title </th>\\r\\n                  <td mat-cell *matCellDef=\\\"let element; let i = index\\\">{{element?.adTitle}}</td>\\r\\n                </ng-container>\\r\\n                <ng-container matColumnDef=\\\"mediumAndLength\\\">\\r\\n                  <th mat-header-cell *matHeaderCellDef> Medium And Length</th>\\r\\n                  <td mat-cell *matCellDef=\\\"let element; let i = index\\\">{{ element?.typeOfMediumDisplay }}</td>\\r\\n                </ng-container>\\r\\n                <ng-container matColumnDef=\\\"amount\\\">\\r\\n                  <th mat-header-cell *matHeaderCellDef> Amount</th>\\r\\n                  <td mat-cell *matCellDef=\\\"let element; let i = index\\\">{{element?.amount | number : '1.2-2'}}</td>\\r\\n                </ng-container>\\r\\n                <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n                <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n              </table>\\r\\n              <div class=\\\"no-record\\\" [hidden]=\\\"dataSource && dataSource?.data?.length > 0\\\">\\r\\n                No record found.\\r\\n              </div>\\r\\n              <mat-paginator [pageSizeOptions]=\\\"[5, 10, 20]\\\" showFirstLastButtons></mat-paginator>\\r\\n            </div>\\r\\n\\r\\n            <span>\\r\\n              <mat-checkbox class=\\\"example-margin\\\" [(ngModel)]=\\\"payment && payment.filedBirForm\\\" formControlName=\\\"filedBirForm\\\"\\r\\n                (ngModelChange)=\\\"computeWithholding()\\\"\\r\\n                >\\r\\n                BIR Form 2307</mat-checkbox>\\r\\n            </span>\\r\\n            <!-- <b [hidden]=\\\"payment?.paymentStatus !== 'PAID' || !payment.filedBirForm\\\"><i class=\\\"material-icons\\\">check</i>\\r\\n              BIR Form 2307</b>\\r\\n            <b [hidden]=\\\"payment?.paymentStatus !== 'PAID' || payment.filedBirForm\\\"><i class=\\\"material-icons\\\">close</i>\\r\\n              BIR Form 2307</b> -->\\r\\n            <br><br>\\r\\n            <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n              <mat-label>Withholding Tax</mat-label>\\r\\n              <input matInput class=\\\"numbers-input\\\" name=\\\"vat\\\" [value]=\\\"payment?.withholdingTax | number : '1.2-2'\\\"\\r\\n                formControlName=\\\"withholdingTax\\\" readonly>\\r\\n            </mat-form-field>\\r\\n\\r\\n            <!-- <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n              <mat-label>Official Receipt No</mat-label>\\r\\n              <input matInput name=\\\"orNo\\\" [(ngModel)]=\\\"payment.officialReceiptNo\\\" [readonly]=\\\"!isForPayment\\\"\\r\\n                formControlName=\\\"orNo\\\" (keydown)=\\\"validateFieldService.numbersOnly($event)\\\">\\r\\n            </mat-form-field> -->\\r\\n\\r\\n            <!-- <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n              <mat-label>Amount Receive</mat-label>\\r\\n              <input matInput name=\\\"amountReceive\\\" type=\\\"number\\\" [(ngModel)]=\\\"payment.amountReceive\\\" formControlName=\\\"amountReceive\\\"\\r\\n              [readonly]=\\\"currentUser.userRole.name!='ROLE_ACCOUNTING'||payment?.paymentStatus=='PAID'\\\">\\r\\n            </mat-form-field> -->\\r\\n\\r\\n            <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n              <mat-label>Amount Due</mat-label>\\r\\n              <input class=\\\"numbers-input total\\\" matInput name=\\\"amount\\\"\\r\\n                [value]=\\\"getAmountDue() | number : '1.2-2'\\\" readonly>\\r\\n            </mat-form-field>\\r\\n\\r\\n            <div *ngIf=\\\"isMultiple\\\"><br>\\r\\n              <hr><br>\\r\\n            </div>\\r\\n\\r\\n            <!-- <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n              <mat-label>Payment Mode</mat-label>\\r\\n              <input matInput [value]=\\\"payment?.paymentMethod?.paymentType?.paymentDescription\\\" readonly> -->\\r\\n            <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n              <mat-label>Payment Mode</mat-label>\\r\\n              <mat-select class=\\\"col-md-4\\\" [(ngModel)]=\\\"paymentMethod.paymentType\\\" name=\\\"paymentType\\\"\\r\\n                [compareWith]=\\\"comparePaymentMethod\\\" formControlName=\\\"paymentType\\\" [disabled]=\\\"payment?.paymentStatus=='PAID' || payment?.paymentStatus=='UNPAID'\\\"\\r\\n                (selectionChange)=\\\"resetPaymentTypeValidation()\\\">\\r\\n                <mat-option *ngFor=\\\"let i of paymentTypeList\\\" [value]=\\\"i\\\" name=\\\"paymentType\\\">\\r\\n                  {{ i?.paymentDescription | uppercase }}\\r\\n                </mat-option>\\r\\n              </mat-select>\\r\\n            </mat-form-field>\\r\\n\\r\\n            <div *ngIf=\\\"paymentMethod?.paymentType?.paymentDescription ==='Cash' || paymentMethod?.paymentType?.paymentDescription ==='GCash' ||\\r\\n              paymentMethod?.paymentType?.paymentDescription ==='PayMaya'\\\">\\r\\n\\r\\n\\r\\n              <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label>Reference Number <span class=\\\"required-field\\\">\\r\\n                    <mat-icon>notification_important</mat-icon>\\r\\n                  </span></mat-label>\\r\\n                <input matInput [(ngModel)]=\\\"paymentMethod.referenceNo\\\" name=\\\"referenceNo\\\" formControlName=\\\"referenceNo\\\"\\r\\n                  [readonly]=\\\"currentUser.userRole.name!='ROLE_ACCOUNTING'||payment?.paymentStatus=='PAID'\\\"\\r\\n                  (blur)=\\\"paymentTypevalidator()\\\" (keyup)=\\\"paymentTypevalidator()\\\">\\r\\n              </mat-form-field>\\r\\n              <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label>Fund Transfer Date <span class=\\\"required-field\\\">\\r\\n                    <mat-icon>notification_important</mat-icon>\\r\\n                  </span></mat-label>\\r\\n                <input matInput placeholder=\\\"Date\\\" [matDatepicker]=\\\"paymentDate\\\" [min]=\\\"currentDate\\\"\\r\\n                  [(ngModel)]=\\\"paymentMethod.paymentDate\\\" name=\\\"paymentDate\\\" formControlName=\\\"paymentDate\\\"\\r\\n                  [readonly]=\\\"currentUser?.userRole.name!='ROLE_ACCOUNTING'||payment?.paymentStatus=='PAID'\\\"\\r\\n                  (dateChange)=\\\"paymentTypevalidator()\\\" (keyup)=\\\"paymentTypevalidator()\\\">\\r\\n                <mat-datepicker-toggle matSuffix [for]=\\\"paymentDate\\\" *ngIf=\\\"payment?.paymentStatus!=='PAID'\\\">\\r\\n                </mat-datepicker-toggle>\\r\\n                <mat-datepicker color=\\\"warn\\\" #paymentDate></mat-datepicker>\\r\\n              </mat-form-field>\\r\\n              <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\"\\r\\n                *ngIf=\\\"paymentMethod?.paymentType?.paymentDescription ==='PayMaya'\\\">\\r\\n                <mat-label>Confirmation Code <span class=\\\"required-field\\\">\\r\\n                    <mat-icon>notification_important</mat-icon>\\r\\n                  </span></mat-label>\\r\\n                <input matInput [(ngModel)]=\\\"paymentMethod.ccConfirmationCode\\\" name=\\\"ccConfirmationCode\\\"\\r\\n                  formControlName=\\\"ccConfirmationCode\\\"\\r\\n                  [readonly]=\\\"currentUser.userRole.name!='ROLE_ACCOUNTING'||payment?.paymentStatus=='PAID'\\\">\\r\\n              </mat-form-field>\\r\\n              <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label>Amount Transferred <span class=\\\"required-field\\\">\\r\\n                    <mat-icon>notification_important</mat-icon>\\r\\n                  </span></mat-label>\\r\\n                <input matInput [(ngModel)]=\\\"paymentMethod.amount\\\" name=\\\"amount\\\" formControlName=\\\"amount\\\"\\r\\n                  (keydown)=\\\"validateFieldService.numbersOnly($event)\\\" class=\\\"numbers-input\\\"\\r\\n                  [hidden]=\\\"currentUser.userRole.name!='ROLE_ACCOUNTING'||payment?.paymentStatus=='PAID'\\\"\\r\\n                  (blur)=\\\"paymentTypevalidator()\\\" (keyup)=\\\"paymentTypevalidator()\\\">\\r\\n\\r\\n                <input class=\\\"numbers-input total\\\" matInput name=\\\"amount\\\"\\r\\n                  [value]=\\\"paymentMethod?.amount | number : '1.2-2'\\\" readonly\\r\\n                  *ngIf=\\\"currentUser.userRole.name!='ROLE_ACCOUNTING'||payment?.paymentStatus=='PAID'\\\">\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n\\r\\n\\r\\n            <div class=\\\"row\\\" *ngIf=\\\"paymentMethod?.paymentType?.paymentDescription ==='Voucher'\\\">\\r\\n              <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label>Control Number <span class=\\\"required-field\\\">\\r\\n                    <mat-icon>notification_important</mat-icon>\\r\\n                  </span></mat-label>\\r\\n                <input matInput [(ngModel)]=\\\"paymentMethod.controlNo\\\" name=\\\"controlNo\\\" formControlName=\\\"controlNo\\\"\\r\\n                  [readonly]=\\\"currentUser.userRole.name!='ROLE_ACCOUNTING'||payment?.paymentStatus=='PAID'\\\"\\r\\n                  (blur)=\\\"paymentTypevalidator()\\\" (keyup)=\\\"paymentTypevalidator()\\\">\\r\\n              </mat-form-field>\\r\\n              <!-- <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label>Amount</mat-label>\\r\\n                <input matInput [(ngModel)]=\\\"paymentMethod.amount\\\" name=\\\"amount\\\" formControlName=\\\"amount\\\"\\r\\n                  (keydown)=\\\"validateFieldService.numbersOnly($event)\\\" class=\\\"numbers-input\\\"\\r\\n                  [readonly]=\\\"currentUser.userRole.name!='ROLE_ACCOUNTING'||payment?.paymentStatus=='PAID'\\\">\\r\\n              </mat-form-field> -->\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row\\\"\\r\\n              *ngIf=\\\"paymentMethod?.paymentType?.paymentDescription ==='Bank' ||\\r\\n            paymentMethod?.paymentType?.paymentDescription ==='Credit Card' || paymentMethod?.paymentType?.paymentDescription ==='Check'\\\">\\r\\n\\r\\n              <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label>Bank Name <span class=\\\"required-field\\\">\\r\\n                    <mat-icon>notification_important</mat-icon>\\r\\n                  </span></mat-label>\\r\\n                <input matInput [(ngModel)]=\\\"paymentMethod.bankName\\\" name=\\\"bankName\\\" formControlName=\\\"bankName\\\"\\r\\n                  [readonly]=\\\"currentUser.userRole.name!='ROLE_ACCOUNTING'||payment?.paymentStatus=='PAID'\\\"\\r\\n                  (blur)=\\\"paymentTypevalidator()\\\" (keyup)=\\\"paymentTypevalidator()\\\">\\r\\n              </mat-form-field>\\r\\n              <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\"\\r\\n                *ngIf=\\\"paymentMethod?.paymentType?.paymentDescription ==='Credit Card'\\\">\\r\\n                <mat-label>Confirmation Code <span class=\\\"required-field\\\">\\r\\n                    <mat-icon>notification_important</mat-icon>\\r\\n                  </span></mat-label>\\r\\n                <input matInput [(ngModel)]=\\\"paymentMethod.ccConfirmationCode\\\" name=\\\"ccConfirmationCode\\\"\\r\\n                  formControlName=\\\"ccConfirmationCode\\\"\\r\\n                  [readonly]=\\\"currentUser.userRole.name!='ROLE_ACCOUNTING'||payment?.paymentStatus=='PAID'\\\"\\r\\n                  (blur)=\\\"paymentTypevalidator()\\\" (keyup)=\\\"paymentTypevalidator()\\\">\\r\\n              </mat-form-field>\\r\\n              <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\"\\r\\n                *ngIf=\\\"paymentMethod?.paymentType?.paymentDescription ==='Check'\\\">\\r\\n                <mat-label>Check Number <span class=\\\"required-field\\\">\\r\\n                    <mat-icon>notification_important</mat-icon>\\r\\n                  </span></mat-label>\\r\\n                <input matInput [(ngModel)]=\\\"paymentMethod.checkNo\\\" name=\\\"checkNo\\\" formControlName=\\\"checkNo\\\"\\r\\n                  [readonly]=\\\"currentUser.userRole.name!='ROLE_ACCOUNTING'||payment?.paymentStatus=='PAID'\\\"\\r\\n                  (blur)=\\\"paymentTypevalidator()\\\" (keyup)=\\\"paymentTypevalidator()\\\">\\r\\n              </mat-form-field>\\r\\n              <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label>Amount Transferred <span class=\\\"required-field\\\">\\r\\n                    <mat-icon>notification_important</mat-icon>\\r\\n                  </span></mat-label>\\r\\n                <input matInput [(ngModel)]=\\\"paymentMethod.amount\\\" name=\\\"amount\\\" class=\\\"numbers-input\\\"\\r\\n                  formControlName=\\\"amount\\\"\\r\\n                  [hidden]=\\\"currentUser.userRole.name!='ROLE_ACCOUNTING'||payment?.paymentStatus=='PAID'\\\"\\r\\n                  (blur)=\\\"paymentTypevalidator()\\\" (keyup)=\\\"paymentTypevalidator()\\\">\\r\\n\\r\\n                <input class=\\\"numbers-input total\\\" matInput name=\\\"amount\\\"\\r\\n                  [value]=\\\"paymentMethod?.amount | number : '1.2-2'\\\" readonly\\r\\n                  *ngIf=\\\"currentUser.userRole.name!='ROLE_ACCOUNTING'||payment?.paymentStatus=='PAID'\\\">\\r\\n              </mat-form-field>\\r\\n              <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\"\\r\\n                *ngIf=\\\"paymentMethod?.paymentType?.paymentDescription ==='Bank'\\\">\\r\\n                <mat-label>Branch <span class=\\\"required-field\\\">\\r\\n                    <mat-icon>notification_important</mat-icon>\\r\\n                  </span></mat-label>\\r\\n                <input matInput [(ngModel)]=\\\"paymentMethod.bankBranch\\\" name=\\\"withholdingTax\\\"\\r\\n                  formControlName=\\\"bankBranch\\\"\\r\\n                  [readonly]=\\\"currentUser.userRole.name!='ROLE_ACCOUNTING'||payment?.paymentStatus=='PAID'\\\"\\r\\n                  (blur)=\\\"paymentTypevalidator()\\\" (keyup)=\\\"paymentTypevalidator()\\\">\\r\\n              </mat-form-field>\\r\\n              <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\"\\r\\n                *ngIf=\\\"paymentMethod?.paymentType?.paymentDescription ==='Bank'\\\">\\r\\n                <mat-label>Deposited Date <span class=\\\"required-field\\\">\\r\\n                    <mat-icon>notification_important</mat-icon>\\r\\n                  </span></mat-label>\\r\\n                <input matInput placeholder=\\\"Date\\\" [matDatepicker]=\\\"paymentDate\\\" [(ngModel)]=\\\"paymentMethod.paymentDate\\\"\\r\\n                  name=\\\"paymentDate\\\" formControlName=\\\"paymentDate\\\" (dateChange)=\\\"paymentTypevalidator()\\\"\\r\\n                  (keyup)=\\\"paymentTypevalidator()\\\">\\r\\n                <mat-datepicker-toggle matSuffix [for]=\\\"paymentDate\\\"></mat-datepicker-toggle>\\r\\n                <mat-datepicker color=\\\"warn\\\" #paymentDate disabled=\\\"false\\\"></mat-datepicker>\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n\\r\\n\\r\\n            <!--  <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n              <mat-label>Discount</mat-label>\\r\\n              <input matInput name=\\\"discount\\\" type=\\\"number\\\" [(ngModel)]=\\\"payment.discount\\\" formControlName=\\\"discount\\\"\\r\\n              [readonly]=\\\"currentUser.userRole.name!='ROLE_ACCOUNTING'||payment?.paymentStatus=='PAID'\\\">\\r\\n            </mat-form-field> -->\\r\\n\\r\\n\\r\\n            <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n              <mat-label>REMARKS</mat-label>\\r\\n              <!-- <textarea matInput [value]=\\\"payment?.remarks\\\" [readonly]=\\\"!isForPayment\\\"></textarea> -->\\r\\n              <textarea matInput [ngModel]=\\\"payment?.remarks\\\" (ngModelChange)=\\\"payment ? payment.remarks = $event : null\\\" formControlName=\\\"remarks\\\" name=\\\"remarks\\\"\\r\\n                [readonly]=\\\"currentUser.userRole.name!='ROLE_ACCOUNTING'||payment?.paymentStatus=='PAID'\\\"></textarea>\\r\\n            </mat-form-field>\\r\\n\\r\\n          </div>\\r\\n\\r\\n          <div *ngIf=\\\"selectedProofOfPayment === 2\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n\\r\\n              <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label>Applicant Company Details</mat-label>\\r\\n                <input matInput name=\\\"companyName\\\" [readonly]=\\\"isForPayment\\\">\\r\\n              </mat-form-field>\\r\\n\\r\\n            </div>\\r\\n            <div class=\\\"row\\\">\\r\\n\\r\\n              <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label>Accumulated Amount to be settled</mat-label>\\r\\n                <input matInput name=\\\"length\\\" [readonly]=\\\"isForPayment\\\" class=\\\"numbers-input\\\">\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div *ngIf=\\\"selectedProofOfPayment === 3\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n\\r\\n              <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label>Client Company Details</mat-label>\\r\\n                <input matInput name=\\\"companyName\\\" [readonly]=\\\"isForPayment\\\">\\r\\n              </mat-form-field>\\r\\n\\r\\n            </div>\\r\\n            <div class=\\\"row\\\">\\r\\n\\r\\n              <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label>Accumulated Amount to be settled</mat-label>\\r\\n                <input matInput name=\\\"length\\\" [readonly]=\\\"isForPayment\\\" class=\\\"numbers-input\\\">\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"row\\\" *ngIf=\\\"currentUser?.userRole?.name=='ROLE_ACCOUNTING'&&payment?.paymentStatus!=='PAID'\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n              <button class=\\\"button-right button-red\\\" mat-raised-button (click)=\\\"processPayment(payment?.remarks)\\\"\\r\\n                [hidden]=\\\"isDelinquent\\\"\\r\\n                [disabled]=\\\"(!paymentForm.valid || !payment?.paymentAttachmentReference || !isPaymentTypeValid)\\r\\n                && ((paymentMode?.toUpperCase() !== 'PROMISORRY NOTE' && paymentMethod.paymentType?.paymentDescription?.toUpperCase() !== 'PROMISORRY NOTE') || !payment.paymentAttachmentReference )\\\">\\r\\n                <mat-icon>offline_pin</mat-icon> PROCESS\\r\\n              </button>\\r\\n              <button mat-raised-button class=\\\"button-right button-red button-right__approve\\\" (click)=\\\"approvePenalty()\\\"\\r\\n                [disabled]=\\\"(!paymentForm.valid || !payment?.paymentAttachmentReference || !isPaymentTypeValid)\\r\\n              && ((paymentMode?.toUpperCase() !== 'PROMISORRY NOTE' && paymentMethod.paymentType?.paymentDescription?.toUpperCase() !== 'PROMISORRY NOTE') || !payment.paymentAttachmentReference )\\\"\\r\\n                *ngIf=\\\"isDelinquent\\\">\\r\\n                <i class=\\\"material-icons color__white\\\">task_alt</i> APPROVE\\r\\n              </button>\\r\\n              &nbsp;\\r\\n              <button mat-raised-button class=\\\"button-right button-red\\\" (click)=\\\"rejectPayment()\\\" *ngIf=\\\"isForApproval\\\">\\r\\n                <mat-icon>unpublished</mat-icon> REJECT\\r\\n              </button>\\r\\n            </div>\\r\\n          </div>\\r\\n          <br>\\r\\n        </div>\\r\\n      </div>\\r\\n    </form>\\r\\n  </div>\\r\\n</form>\";","export default \"<!-- CLIENT INFO -->\\r\\n<div class=\\\"row fields\\\">\\r\\n  <h4>\\r\\n    <i class=\\\"material-icons\\\">preview</i> &nbsp;<b>CLIENT'S INFORMATION</b>\\r\\n    <hr>\\r\\n  </h4>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-4\\\" appearance=\\\"outline\\\">\\r\\n      <mat-label>Client Company Name</mat-label>\\r\\n      <input matInput [value]=\\\"previewS1Application?.company?.companyName\\\" disabled>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-4\\\" appearance=\\\"outline\\\">\\r\\n      <mat-label>Client Membership Affiliation</mat-label>\\r\\n      <input matInput [value]=\\\"previewS1Application?.company?.membersAffiliation?.description\\\" disabled>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-4\\\" appearance=\\\"outline\\\"></div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-4\\\" appearance=\\\"outline\\\">\\r\\n      <mat-label>Brand</mat-label>\\r\\n      <input matInput [value]=\\\"previewS1Application?.brand?.description\\\" disabled>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-4\\\" appearance=\\\"outline\\\">\\r\\n      <mat-label>Product</mat-label>\\r\\n      <input matInput [value]=\\\"previewS1Application?.product?.description\\\" disabled>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-4\\\" appearance=\\\"outline\\\">\\r\\n      <mat-label>Category</mat-label>\\r\\n      <input matInput [value]=\\\"previewS1Application?.product?.category?.description\\\" disabled>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <br><br><br>\\r\\n</div>\\r\\n\\r\\n<!-- PRESENTOR INFO -->\\r\\n<div class=\\\"row fields\\\">\\r\\n  <h4>\\r\\n    <i class=\\\"material-icons\\\">preview</i> &nbsp;<b>PRESENTOR INFORMATION</b>\\r\\n    <hr>\\r\\n  </h4>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12 mb-3\\\" appearance=\\\"outline\\\">\\r\\n      <mat-label>Name of Applicant</mat-label>\\r\\n      <input matInput [value]=\\\"presentorDetails?.firstName+' '+presentorDetails?.lastName\\\" disabled>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-12 mb-3\\\" appearance=\\\"outline\\\">\\r\\n      <mat-label>Company Name</mat-label>\\r\\n      <input matInput [value]=\\\"presentorDetails?.company?.companyName\\\" disabled>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-12 mb-3\\\" appearance=\\\"outline\\\">\\r\\n      <mat-label>Address</mat-label>\\r\\n        <input matInput [value]=\\\"presentorDetails?.company?.completeAddress\\\" disabled>\\r\\n    </div>\\r\\n    \\r\\n    <div class=\\\"row col-md-12 mb-4\\\">\\r\\n      <div class=\\\"col-md-6 mb-3\\\" appearance=\\\"outline\\\">\\r\\n        <mat-label>Mobile Number</mat-label>\\r\\n        <input matInput [value]=\\\"presentorDetails?.mobileNumber\\\" disabled>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-6 mb-3\\\" appearance=\\\"outline\\\">\\r\\n        <mat-label>Email Address</mat-label>\\r\\n        <input matInput [value]=\\\"presentorDetails?.username\\\" disabled>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-6 mb-3\\\" appearance=\\\"outline\\\">\\r\\n        <mat-label>Telephone Number</mat-label>\\r\\n        <input matInput [value]=\\\"presentorDetails?.company?.companyTelephoneNo\\\" disabled>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-6 mb-3\\\" appearance=\\\"outline\\\">\\r\\n        <mat-label>Alternate Telephone Number</mat-label>\\r\\n        <input matInput [value]=\\\"presentorDetails?.company?.companyTelephoneNo2\\\" disabled>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<!-- MATERIAL INFO -->\\r\\n<div class=\\\"row fields\\\">\\r\\n  <h4>\\r\\n    <i class=\\\"material-icons\\\">preview</i> &nbsp;<b>MATERIAL INFORMATION</b>\\r\\n    <hr>\\r\\n  </h4>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n      <mat-label>Ad Title</mat-label>\\r\\n      <input matInput [value]=\\\"previewS1Application?.adTitle\\\" disabled>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row\\\"><br></div>\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-6\\\" appearance=\\\"outline\\\">\\r\\n      <mat-label>Reference Code of Previously-Approved Material</mat-label>\\r\\n      <input matInput [value]=\\\"previewS1Application?.previousRefCode\\\" disabled>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-6\\\" appearance=\\\"outline\\\">\\r\\n      <mat-label>Tag line</mat-label>\\r\\n      <input matInput [value]=\\\"previewS1Application?.tagLine\\\" disabled>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row\\\" *ngIf=\\\"previewS1Application?.refTypeOfMedium\\\">\\r\\n    <div class=\\\"col-md-6\\\" appearance=\\\"outline\\\">\\r\\n      <mat-label>Media Type</mat-label>\\r\\n      <input matInput [value]=\\\"previewS1Application?.refTypeOfMedium\\\" disabled>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\"><br></div>\\r\\n  <div class=\\\"row\\\" *ngIf=\\\"applicationSingleMedia\\\">\\r\\n    <div class=\\\"col-md-3\\\" appearance=\\\"outline\\\"\\r\\n      *ngIf=\\\"applicationSingleMedia?.mediumExecution?.typeOfMedium?.description\\\">\\r\\n      <mat-label>Type of Medium</mat-label>\\r\\n      <input matInput [value]=\\\"applicationSingleMedia?.mediumExecution?.typeOfMedium?.description\\\" disabled>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-3\\\" appearance=\\\"outline\\\" *ngIf=\\\"applicationSingleMedia?.mediumExecution\\\">\\r\\n      <mat-label>Execution</mat-label>\\r\\n      <input matInput [value]=\\\"applicationSingleMedia?.mediumExecution?.typeOfExecution?.typeOfExecution\\\" disabled>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-3\\\" appearance=\\\"outline\\\" *ngIf=\\\"applicationSingleMedia?.dialect\\\">\\r\\n      <mat-label>Language/Dialect</mat-label>\\r\\n      <input matInput [value]=\\\"applicationSingleMedia?.dialect?.dialect\\\" disabled>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-3\\\" appearance=\\\"outline\\\" *ngIf=\\\"applicationSingleMedia?.others\\\">\\r\\n      <mat-label>Others</mat-label>\\r\\n      <input matInput [value]=\\\"applicationSingleMedia?.others\\\" disabled>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-3\\\" appearance=\\\"outline\\\" *ngIf=\\\"applicationSingleMedia?.sizeLength\\\">\\r\\n      <mat-label>Size Length</mat-label>\\r\\n      <input matInput [value]=\\\"applicationSingleMedia?.sizeLength\\\" disabled>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-3\\\" appearance=\\\"outline\\\" *ngIf=\\\"applicationSingleMedia?.width\\\">\\r\\n      <mat-label>Width</mat-label>\\r\\n      <input matInput [value]=\\\"applicationSingleMedia?.width\\\" disabled>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <!-- Displaying Multimedia List -->\\r\\n  <div class=\\\"row\\\" *ngIf=\\\"multimediaDTO\\\">\\r\\n    <table class=\\\"mx-3 mb-3\\\">\\r\\n      <ng-container *ngIf=\\\"previewS1Application?.refTypeOfMedium === 'MULTIMEDIA-STATIC'\\\">\\r\\n        <ng-container *ngFor=\\\"let i of multimediaDTO.applicationMultimediaStaticList\\\">\\r\\n          <tr *ngIf=\\\"i?.hasSelected\\\" style=\\\"height: 30px;\\\">\\r\\n            <td class=\\\"col-md-4\\\">\\r\\n              <mat-checkbox [checked]=\\\"i?.hasSelected\\\" disabled>\\r\\n                {{i?.multimediaStaticMedium | uppercase}}\\r\\n              </mat-checkbox>\\r\\n            </td>\\r\\n            <td class=\\\"col-md-1\\\" \\r\\n              *ngIf=\\\"previewS1Application?.refTypeOfMedium === 'MULTIMEDIA-STATIC' && i?.multimediaStaticMedium !== 'digital static'\\\">\\r\\n              Size\\r\\n            </td>\\r\\n            <td class=\\\"col-md-2\\\">\\r\\n              <input matInput \\r\\n                *ngIf=\\\"previewS1Application?.refTypeOfMedium === 'MULTIMEDIA-STATIC' && i?.multimediaStaticMedium !== 'digital static'\\\" \\r\\n                [value]=\\\"i?.sizeLength\\\" disabled>\\r\\n            </td>\\r\\n            <td class=\\\"col-md-5\\\"></td>\\r\\n          </tr>\\r\\n        </ng-container>\\r\\n      </ng-container>\\r\\n\\r\\n      <ng-container *ngIf=\\\"previewS1Application?.refTypeOfMedium === 'MULTIMEDIA-MOVING'\\\">\\r\\n        <ng-container *ngFor=\\\"let i of multimediaDTO.applicationMultimediaMovingList\\\" style=\\\"height: 30px;\\\">\\r\\n          <tr *ngIf=\\\"i?.hasSelected\\\">\\r\\n            <td class=\\\"col-md-4\\\">\\r\\n              <mat-checkbox [checked]=\\\"true\\\" disabled>\\r\\n                {{i?.multimediaMovingMedium | uppercase}}\\r\\n              </mat-checkbox>\\r\\n            </td>\\r\\n            <td class=\\\"col-md-1\\\" *ngIf=\\\"previewS1Application?.refTypeOfMedium === 'MULTIMEDIA-MOVING'\\\">Length</td>\\r\\n            <td class=\\\"col-md-2\\\">\\r\\n              <input matInput *ngIf=\\\"previewS1Application?.refTypeOfMedium === 'MULTIMEDIA-MOVING'\\\" [value]=\\\"multimediaDTO?.sizeLength\\\" disabled>\\r\\n            </td>\\r\\n            <td class=\\\"col-md-5\\\"></td>\\r\\n          </tr>\\r\\n        </ng-container>\\r\\n      </ng-container>\\r\\n    </table>\\r\\n  </div>\\r\\n</div>\\r\\n\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AddPaymentComponent } from './add-payment.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AddPaymentComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AddPaymentRoutingModule { }\r\n"],"sourceRoot":"webpack:///"}