{"version":3,"sources":["./src/app/modules/pages/accounting/add-payment/add-payment-preview-application/add-payment-preview-application.component.ts","./src/app/modules/pages/accounting/add-payment/add-payment-preview-application/add-payment-preview-application.component.html","./src/app/modules/pages/accounting/add-payment/add-payment.module.ts","./src/app/modules/pages/accounting/add-payment/add-payment.component.ts","./src/app/modules/pages/accounting/add-payment/add-payment.component.html","./src/app/modules/pages/accounting/add-payment/add-payment-routing.module.ts"],"names":[],"mappings":"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","file":"default~add-payment-add-payment-module~applications-applications-module-es2015.js","sourcesContent":["import { AfterViewInit, Component, Input, OnChanges, OnInit, SimpleChanges, ViewChild } from '@angular/core';\nimport { S1Application, UserAccount } from '@models';\nimport { ApiService } from '@services';\nimport { APP_DECISION_STATUS, ATTACHMENT_TYPE, ENDPOINTS, SUBMISSION_TYPE } from '@shared';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { ApplicationSingleMedia } from '../../../../../core/models/application-single-media.model';\n\n@Component({\n  selector: 'app-add-payment-preview-application',\n  templateUrl: './add-payment-preview-application.component.html',\n})\n\nexport class AddPaymentPreviewApplicationComponent implements OnChanges {\n  @Input() previewS1Application = new S1Application();\n  @Input() applicationSingleMedia = new ApplicationSingleMedia();\n  @Input() multimediaDTO: any = {};\n  presentorDetails = new UserAccount();\n\n  multimediaMovingList = [];\n  multimediaStaticList = [];\n\n  constructor(private apiService: ApiService) { }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['previewS1Application']) {\n      this.getPresentorDetails();\n    }\n  }\n\n  getPresentorDetails() {\n    if (this.previewS1Application?.applicationOwner?.username) {\n      this.apiService.findByParam(ENDPOINTS.userLogin, this.previewS1Application.applicationOwner.username).subscribe(\n        (res: any) => {\n          if (res.responseData.data) {\n            this.presentorDetails = res.responseData.data;\n          }\n        });\n    }\n  }\n}\n","<!-- CLIENT INFO -->\n<div class=\"row fields\">\n  <h4>\n    <i class=\"material-icons\">preview</i> &nbsp;<b>CLIENT'S INFORMATION</b>\n    <hr>\n  </h4>\n  <div class=\"row\">\n    <div class=\"col-md-4\" appearance=\"outline\">\n      <mat-label>Client Company Name</mat-label>\n      <input matInput [value]=\"previewS1Application?.company?.companyName\" disabled>\n    </div>\n    <div class=\"col-md-4\" appearance=\"outline\">\n      <mat-label>Client Membership Affiliation</mat-label>\n      <input matInput [value]=\"previewS1Application?.company?.membersAffiliation?.description\" disabled>\n    </div>\n    <div class=\"col-md-4\" appearance=\"outline\"></div>\n  </div>\n\n  <div class=\"row\">\n    <div class=\"col-md-4\" appearance=\"outline\">\n      <mat-label>Brand</mat-label>\n      <input matInput [value]=\"previewS1Application?.brand?.description\" disabled>\n    </div>\n    <div class=\"col-md-4\" appearance=\"outline\">\n      <mat-label>Product</mat-label>\n      <input matInput [value]=\"previewS1Application?.product?.description\" disabled>\n    </div>\n    <div class=\"col-md-4\" appearance=\"outline\">\n      <mat-label>Category</mat-label>\n      <input matInput [value]=\"previewS1Application?.product?.category?.description\" disabled>\n    </div>\n  </div>\n\n  <br><br><br>\n</div>\n\n<!-- PRESENTOR INFO -->\n<div class=\"row fields\">\n  <h4>\n    <i class=\"material-icons\">preview</i> &nbsp;<b>PRESENTOR INFORMATION</b>\n    <hr>\n  </h4>\n  <div class=\"row\">\n    <div class=\"col-md-12 mb-3\" appearance=\"outline\">\n      <mat-label>Name of Applicant</mat-label>\n      <input matInput [value]=\"presentorDetails?.firstName+' '+presentorDetails?.lastName\" disabled>\n    </div>\n    <div class=\"col-md-12 mb-3\" appearance=\"outline\">\n      <mat-label>Company Name</mat-label>\n      <input matInput [value]=\"presentorDetails?.company?.companyName\" disabled>\n    </div>\n    <div class=\"col-md-12 mb-3\" appearance=\"outline\">\n      <mat-label>Address</mat-label>\n        <input matInput [value]=\"presentorDetails?.company?.completeAddress\" disabled>\n    </div>\n    \n    <div class=\"row col-md-12 mb-4\">\n      <div class=\"col-md-6 mb-3\" appearance=\"outline\">\n        <mat-label>Mobile Number</mat-label>\n        <input matInput [value]=\"presentorDetails?.mobileNumber\" disabled>\n      </div>\n      <div class=\"col-md-6 mb-3\" appearance=\"outline\">\n        <mat-label>Email Address</mat-label>\n        <input matInput [value]=\"presentorDetails?.username\" disabled>\n      </div>\n      <div class=\"col-md-6 mb-3\" appearance=\"outline\">\n        <mat-label>Telephone Number</mat-label>\n        <input matInput [value]=\"presentorDetails?.company?.companyTelephoneNo\" disabled>\n      </div>\n      <div class=\"col-md-6 mb-3\" appearance=\"outline\">\n        <mat-label>Alternate Telephone Number</mat-label>\n        <input matInput [value]=\"presentorDetails?.company?.companyTelephoneNo2\" disabled>\n      </div>\n    </div>\n  </div>\n</div>\n\n<!-- MATERIAL INFO -->\n<div class=\"row fields\">\n  <h4>\n    <i class=\"material-icons\">preview</i> &nbsp;<b>MATERIAL INFORMATION</b>\n    <hr>\n  </h4>\n  <div class=\"row\">\n    <div class=\"col-md-12\" appearance=\"outline\">\n      <mat-label>Ad Title</mat-label>\n      <input matInput [value]=\"previewS1Application?.adTitle\" disabled>\n    </div>\n  </div>\n\n  <div class=\"row\"><br></div>\n\n  <div class=\"row\">\n    <div class=\"col-md-6\" appearance=\"outline\">\n      <mat-label>Reference Code of Previously-Approved Material</mat-label>\n      <input matInput [value]=\"previewS1Application?.previousRefCode\" disabled>\n    </div>\n    <div class=\"col-md-6\" appearance=\"outline\">\n      <mat-label>Tag line</mat-label>\n      <input matInput [value]=\"previewS1Application?.tagLine\" disabled>\n    </div>\n  </div>\n\n  <div class=\"row\" *ngIf=\"previewS1Application?.refTypeOfMedium\">\n    <div class=\"col-md-6\" appearance=\"outline\">\n      <mat-label>Media Type</mat-label>\n      <input matInput [value]=\"previewS1Application?.refTypeOfMedium\" disabled>\n    </div>\n  </div>\n  <div class=\"row\"><br></div>\n  <div class=\"row\" *ngIf=\"applicationSingleMedia\">\n    <div class=\"col-md-3\" appearance=\"outline\"\n      *ngIf=\"applicationSingleMedia?.mediumExecution?.typeOfMedium?.description\">\n      <mat-label>Type of Medium</mat-label>\n      <input matInput [value]=\"applicationSingleMedia?.mediumExecution?.typeOfMedium?.description\" disabled>\n    </div>\n    <div class=\"col-md-3\" appearance=\"outline\" *ngIf=\"applicationSingleMedia?.mediumExecution\">\n      <mat-label>Execution</mat-label>\n      <input matInput [value]=\"applicationSingleMedia?.mediumExecution?.typeOfExecution?.typeOfExecution\" disabled>\n    </div>\n    <div class=\"col-md-3\" appearance=\"outline\" *ngIf=\"applicationSingleMedia?.dialect\">\n      <mat-label>Language/Dialect</mat-label>\n      <input matInput [value]=\"applicationSingleMedia?.dialect?.dialect\" disabled>\n    </div>\n    <div class=\"col-md-3\" appearance=\"outline\" *ngIf=\"applicationSingleMedia?.others\">\n      <mat-label>Others</mat-label>\n      <input matInput [value]=\"applicationSingleMedia?.others\" disabled>\n    </div>\n    <div class=\"col-md-3\" appearance=\"outline\" *ngIf=\"applicationSingleMedia?.sizeLength\">\n      <mat-label>Size Length</mat-label>\n      <input matInput [value]=\"applicationSingleMedia?.sizeLength\" disabled>\n    </div>\n    <div class=\"col-md-3\" appearance=\"outline\" *ngIf=\"applicationSingleMedia?.width\">\n      <mat-label>Width</mat-label>\n      <input matInput [value]=\"applicationSingleMedia?.width\" disabled>\n    </div>\n  </div>\n\n  <!-- Displaying Multimedia List -->\n  <div class=\"row\" *ngIf=\"multimediaDTO\">\n    <table class=\"mx-3 mb-3\">\n      <ng-container *ngIf=\"previewS1Application?.refTypeOfMedium === 'MULTIMEDIA-STATIC'\">\n        <ng-container *ngFor=\"let i of multimediaDTO.applicationMultimediaStaticList\">\n          <tr *ngIf=\"i?.hasSelected\" style=\"height: 30px;\">\n            <td class=\"col-md-4\">\n              <mat-checkbox [checked]=\"i?.hasSelected\" disabled>\n                {{i?.multimediaStaticMedium | uppercase}}\n              </mat-checkbox>\n            </td>\n            <td class=\"col-md-1\" \n              *ngIf=\"previewS1Application?.refTypeOfMedium === 'MULTIMEDIA-STATIC' && i?.multimediaStaticMedium !== 'digital static'\">\n              Size\n            </td>\n            <td class=\"col-md-2\">\n              <input matInput \n                *ngIf=\"previewS1Application?.refTypeOfMedium === 'MULTIMEDIA-STATIC' && i?.multimediaStaticMedium !== 'digital static'\" \n                [value]=\"i?.sizeLength\" disabled>\n            </td>\n            <td class=\"col-md-5\"></td>\n          </tr>\n        </ng-container>\n      </ng-container>\n\n      <ng-container *ngIf=\"previewS1Application?.refTypeOfMedium === 'MULTIMEDIA-MOVING'\">\n        <ng-container *ngFor=\"let i of multimediaDTO.applicationMultimediaMovingList\" style=\"height: 30px;\">\n          <tr *ngIf=\"i?.hasSelected\">\n            <td class=\"col-md-4\">\n              <mat-checkbox [checked]=\"true\" disabled>\n                {{i?.multimediaMovingMedium | uppercase}}\n              </mat-checkbox>\n            </td>\n            <td class=\"col-md-1\" *ngIf=\"previewS1Application?.refTypeOfMedium === 'MULTIMEDIA-MOVING'\">Length</td>\n            <td class=\"col-md-2\">\n              <input matInput *ngIf=\"previewS1Application?.refTypeOfMedium === 'MULTIMEDIA-MOVING'\" [value]=\"multimediaDTO?.sizeLength\" disabled>\n            </td>\n            <td class=\"col-md-5\"></td>\n          </tr>\n        </ng-container>\n      </ng-container>\n    </table>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AddPaymentRoutingModule } from './add-payment-routing.module';\nimport { AddPaymentComponent } from './add-payment.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { AngularMaterialModule } from '@shared';\nimport { AddPaymentPreviewApplicationComponent } from './add-payment-preview-application/add-payment-preview-application.component';\n\n\n@NgModule({\n  declarations: [AddPaymentComponent, AddPaymentPreviewApplicationComponent],\n  imports: [\n    CommonModule,\n    AddPaymentRoutingModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    FormsModule,\n    AngularMaterialModule,\n  ],\n  exports: [\n    AddPaymentComponent,\n    AddPaymentPreviewApplicationComponent\n  ]\n})\nexport class AddPaymentModule { }\n","import { Component, OnInit, Input, ViewChild } from '@angular/core';\nimport { S1Application, Payment, AttachmentDocument } from '@models';\nimport { ApiService, SweetAlertService, DataStorageService } from '@services';\nimport { APPLICATION_STATUSES, ATTACHMENT_TYPE, ENDPOINTS, PAYMENT_MODE, PAYMENT_STATUS, PAYMENT_TYPE, PAYMENT_TYPE_LIST, SUBMISSION_TYPE, TYPE_OF_MEDIUM, USER_ROLES } from '@shared';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport Swal from 'sweetalert2';\nimport { PaymentMethod } from 'app/core/models/payment-method.model';\nimport { MatTable, MatTableDataSource } from '@angular/material/table';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { ValidateFieldService } from 'app/core/services/validate-field.service';\nimport { FileStorageService } from 'app/core/services/file.storage.service';\nimport { ApplicationSingleMedia } from 'app/core/models/application-single-media.model';\n\n@Component({\n  selector: 'app-add-payment',\n  templateUrl: './add-payment.component.html',\n  styleUrls: ['./add-payment.component.scss']\n})\nexport class AddPaymentComponent implements OnInit {\n  @ViewChild(MatPaginator, { static: false }) paginator: MatPaginator;\n  @ViewChild(MatTable, { static: false }) table: MatTable<AddPaymentComponent>;\n  dataSource: MatTableDataSource<any>\n  displayedColumns: string[] = ['referenceCode', 'adTitle', 'mediumAndLength', 'amount'];\n  multipleApplicationList = [];\n  paymentTypeFromUrl = '';\n\n  @Input() s1Application = new S1Application();\n  attachmentDocument = new AttachmentDocument();\n  applicationSingleMedia = new ApplicationSingleMedia();\n  typeOfMediumDisplay = '';\n  paymentTypeList = [];\n  attachmentDocuments = [];\n  @Input() payment = new Payment();\n  paymentMethod = new PaymentMethod();\n  safeURL: any;\n  id: any;\n  paymentForm: FormGroup;\n  paymentTypeForm: FormGroup;\n  currentUser: any;\n  paymentMode: string;\n  selectedProofOfPayment: any;\n  currentDate = new Date();\n  paymentTemp = new Payment();\n  isMultiple = false;\n  isSpecial = false;\n  isForPayment = false;\n  isForApproval = false;\n  isPaymentTypeValid = false;\n  isDelinquent = false;\n  selectedFile: File;\n  fileSize: number;\n  uploadedPaymentFile: any;\n  isShowUploadButton = false;\n  previewDocument = false;\n\n  proofOfPayment = [\n    { id: 1, name: 'Schedule of Fees - Individual' },\n    { id: 2, name: 'Schedule of Fees - Multiple' },\n    { id: 3, name: 'Schedule of Fees - Special' },\n    { id: 4, name: 'Settlement of Delinquent Status' },\n    { id: 5, name: 'Settlement of Brand Penalties' },\n    { id: 6, name: 'Settlement of Company Penalties' }\n  ];\n  multimediaDTO: any = {};\n\n  constructor(\n    private apiService: ApiService,\n    private sanitizer: DomSanitizer,\n    private formBuilder: FormBuilder,\n    private route: ActivatedRoute,\n    private router: Router,\n    private fileStorageService: FileStorageService,\n    public dataStorage: DataStorageService,\n    public validateFieldService: ValidateFieldService,\n    private spinner: NgxSpinnerService,\n    private sweetAlertService: SweetAlertService,\n  ) { }\n\n  ngOnInit(): void {\n    this.currentUser = this.dataStorage.getUserAccount();\n\n    this.paymentTypeFromUrl = this.route.snapshot.paramMap.get('id').split('-')[0];\n    this.id = this.route.snapshot.paramMap.get('id').split('-')[1];\n\n    this.getPaymentList();\n    this.setFormValidator();\n    this.initData();\n  }\n\n  initData() {\n    if (this.paymentTypeFromUrl?.toLowerCase() === 'for_payment') {\n      this.isForPayment = true;\n    }\n    if (this.paymentTypeFromUrl?.toLowerCase() === 'for_approval') {\n      this.isForApproval = true;\n    }\n\n    if (this.route?.snapshot?.paramMap?.get('status')?.includes('multiple-')) {\n      this.isMultiple = true;\n      this.paymentTypeFromUrl = 'multiple';\n    }\n    if (this.route?.snapshot?.paramMap?.get('status')?.includes('special-')) {\n      this.isSpecial = true;\n      this.paymentTypeFromUrl = 'special';\n    }\n    if (this.route?.snapshot?.paramMap?.get('status')?.includes('delinquent-')) {\n      this.isDelinquent = true;\n      this.paymentTypeFromUrl = 'delinquent';\n    }\n\n    if (this.id !== 0 && this.currentUser.userRole.name === USER_ROLES.ROLE_ACCOUNTING) {\n      if (this.isForPayment || this.isSpecial || this.paymentTypeFromUrl?.toLowerCase() === 'unpaid' || this.isMultiple) {\n        this.getPaymentDetails();\n      } else {\n        this.viewPayment();\n      }\n      if (this.isMultiple) {\n        this.getMultipleApplicationList();\n      }\n    }\n  }\n\n  setFormValidator(): void {\n    this.paymentForm = this.formBuilder.group({\n      paymentType: ['', Validators.required],\n      referenceNo: [''],\n      amount: [''],\n      paymentDate: [''],\n      bankName: [''],\n      bankBranch: [''],\n      controlNo: [''],\n      referenceNumber: [''],\n      typeOfMaterial: [''],\n      length: [''],\n      baseRate: [''],\n      vat: [''],\n      total: [''],\n      remarks: [''],\n      applicantCompanyDetails: [''],\n      accumulatedAmountToBeSettled: [''],\n      clientCompanyDetails: [''],\n      discount: [''],\n      amountReceive: [''],\n      filedBirForm: [''],\n      withholdingTax: [0],\n      orNo: [''],\n      ccConfirmationCode: [''],\n      checkNo: ['']\n    });\n\n  }\n\n  approvePenalty() {\n    if (this.paymentMethod.amount < this.payment.amountDue) {\n      this.sweetAlertService.customErrorMessage(`Amount Received/Transferred is lower than Amount Due.`);\n    } else {\n      Swal.fire({\n        text: 'Are you sure you want to approve this Delinquent Company?',\n        icon: 'question',\n        showCancelButton: true,\n        confirmButtonColor: '#3085d6',\n        cancelButtonColor: '#d33',\n        confirmButtonText: 'Confirm'\n      }).then((result) => {\n        if (result.value) {\n          this.payment.paymentMethod = this.paymentMethod;\n          this.payment.amountReceive = Number(this.paymentMethod.amount);\n\n          this.apiService.save(`${ENDPOINTS.approveDelinquentCompany}`, this.payment).subscribe((res: any) => {\n            this.sweetAlertService.customSuccessMessage('Delinquent company approved successfully.');\n            this.router.navigate(['asc/page/accounting/payments/', 'delinquent-companies']);\n          }, err => {\n            if (!err.error.message) {\n              err.error.message = err.error.responseMessage;\n            }\n            this.sweetAlertService.error(err);\n          });\n        }\n      });\n    }\n  }\n\n  paymentTypevalidator() {\n    let a = this.paymentMethod;\n    let b = this.paymentMethod?.paymentType?.paymentDescription;\n    if (b === PAYMENT_MODE.GCASH || b === PAYMENT_MODE.CASH) {\n      if (a.referenceNo && a.paymentDate && a.amount\n        ? this.isPaymentTypeValid = true : this.isPaymentTypeValid = false) { }\n    } else if (b === PAYMENT_MODE.PAYMAYA) {\n      if (a.referenceNo && a.paymentDate && a.amount && a.ccConfirmationCode\n        ? this.isPaymentTypeValid = true : this.isPaymentTypeValid = false) { }\n    } else if (b === PAYMENT_MODE.BANK) {\n      if (a.bankName && a.paymentDate && a.amount && a.bankBranch\n        ? this.isPaymentTypeValid = true : this.isPaymentTypeValid = false) { }\n    } else if (b === PAYMENT_MODE.VOUCHER) {\n      if (a.controlNo ? this.isPaymentTypeValid = true : this.isPaymentTypeValid = false) { }\n    \n    } else if (b === PAYMENT_MODE.CHECK) {\n      if (a.bankName && a.checkNo && a.amount\n        ? this.isPaymentTypeValid = true : this.isPaymentTypeValid = false) { }\n    }\n  }\n\n  resetPaymentTypeValidation() {\n    this.isPaymentTypeValid = false\n    if (this.paymentMethod?.paymentType?.paymentDescription === PAYMENT_MODE.PROMISORRY_NOTE) {\n      this.isPaymentTypeValid = true;\n    }\n  }\n\n  getPaymentDetails() {\n    let endpoint = ENDPOINTS.paymentDetails;\n    if (this.isMultiple) {\n      if (this.isForPayment) {\n        endpoint = ENDPOINTS.multiplePaymentDetails;\n      } else {\n        endpoint = ENDPOINTS.paymentMultipleMonitoring + `?groupId=`;\n      }\n    }\n    if (this.isSpecial) {\n      if (this.isForPayment) {\n        endpoint = ENDPOINTS.specialPaymentDetails;\n      } else {\n        endpoint = ENDPOINTS.paymentSpecial;\n      }\n    }\n\n    this.apiService.findAll(endpoint + this.id).subscribe((res: any) => {\n      if (res.responseData) {\n        this.payment = res.responseData.data;\n        this.payment.filedBirForm = this.payment.filedBirForm ? this.payment.filedBirForm : false;\n        this.paymentMethod = this.payment?.paymentMethod ? this.payment.paymentMethod : new PaymentMethod();\n      } else if (res.data) {\n        this.payment = res.data[0];\n        this.payment.filedBirForm = this.payment.filedBirForm ? this.payment.filedBirForm : false;\n        this.paymentMethod = this.payment?.paymentMethod ? this.payment.paymentMethod : new PaymentMethod();\n      } else {\n        this.payment = res;\n        this.payment.filedBirForm = this.payment.filedBirForm ? this.payment.filedBirForm : false;\n        this.paymentMethod = this.payment?.paymentMethod ? this.payment.paymentMethod : new PaymentMethod();\n      }\n\n      switch (this.payment?.applicationForm?.refTypeOfMedium || this.payment?.applicationFormS2?.applicationForm?.refTypeOfMedium) {\n        case 'SINGLE MEDIA':\n          this.getApplicationSingleMedia();\n          break;\n        case 'MULTIMEDIA-MOVING':\n          this.getMultimediaMoving();\n          this.fetchMultimedia();\n          break;\n        case 'MULTIMEDIA-STATIC':\n          this.getMultimediaStatic();\n          this.fetchMultimedia();\n          break;\n        default:\n          break;\n      }\n\n      if (this.payment.paymentAttachmentReference) {\n        this.getAttachmentDocumentDisplay(this.payment.paymentAttachmentReference);\n      }\n      \n      // this.paymentTemp = this.payment;\n    });\n  }\n\n  getPaymentList() {\n    this.apiService.findAll(ENDPOINTS.paymentType).subscribe((res: any) => {\n      this.paymentTypeList = res.responseData.data;\n      if (this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT) {\n        const creditCardIndex = this.paymentTypeList\n          .findIndex((element) => element.paymentDescription === 'Credit Card');\n        this.paymentTypeList.splice(creditCardIndex, 1);\n      }\n    });\n  }\n\n  viewPayment() {\n    let endpoint = `${ENDPOINTS.payment}/application-form-id`;\n    if (this.isMultiple) {\n      if (this.isForPayment) {\n        endpoint = `${ENDPOINTS.paymentMultiple}/payment-multiple-details/multiple-application-id`;\n      } else if (this.isForApproval) {\n        endpoint = ENDPOINTS.paymentMultipleMonitoring;\n      }\n    } else {\n      if (this.paymentTypeFromUrl?.toLowerCase() === 'for_payment') {\n        if (this.currentUser.userRole.name === USER_ROLES.ROLE_ACCOUNTING) {\n          endpoint = `${ENDPOINTS.paymentDetailsAccounting}`;\n        } else {\n          endpoint = `${ENDPOINTS.paymentDetails}`;\n        }\n      }\n    }\n\n    // console.log('endpoint....' + endpoint);\n    this.apiService.findByParam(endpoint, this.id).subscribe((res: any) => {\n      if (res.responseData) {\n        this.payment = res.responseData.data;\n        this.payment.filedBirForm = this.payment.filedBirForm ? this.payment.filedBirForm : false;\n      } else {\n        this.payment = res;\n        this.payment.filedBirForm = this.payment.filedBirForm ? this.payment.filedBirForm : false;\n      }\n\n      this.paymentMethod = this.payment?.paymentMethod ? this.payment.paymentMethod : new PaymentMethod();\n      this.paymentMode = this.paymentMethod?.paymentType?.paymentDescription;\n      // this.paymentTemp = this.payment;\n\n      if (this.payment.paymentAttachmentReference) {\n        this.getAttachmentDocumentDisplay(this.payment.paymentAttachmentReference);\n      }\n\n      switch (this.payment?.applicationForm?.refTypeOfMedium || this.payment?.applicationFormS2?.applicationForm?.refTypeOfMedium) {\n        case 'SINGLE MEDIA':\n          this.getApplicationSingleMedia();\n          break;\n        case 'MULTIMEDIA-MOVING':\n          this.getMultimediaMoving();\n          this.fetchMultimedia();\n          break;\n        case 'MULTIMEDIA-STATIC':\n          this.getMultimediaStatic();\n          this.fetchMultimedia();\n          break;\n        default:\n          break;\n      }\n\n    });\n  }\n\n  getAttachmentDocumentDisplay(paymentAttachmentReference) {\n    this.apiService.findByParam(ENDPOINTS.attachmentDocument, `payment-attachment-reference/` + paymentAttachmentReference)\n      .subscribe((res1: any) => {\n        if (res1.responseData.data) {\n          this.attachmentDocuments = res1.responseData.data;\n          this.attachmentDocument = res1.responseData.data;\n          this.safeURL = this.sanitizer.bypassSecurityTrustResourceUrl(this.attachmentDocument.fileURL);\n          // console.log('view attachmentDocument: ', this.attachmentDocuments);\n        }\n      }, (err: any) => {\n        this.attachmentDocuments = [];\n      });\n  }\n\n  getMultipleApplicationList() {\n    this.apiService.findAll(ENDPOINTS.getMultipleAppFormsWithNoRejected + this.id).subscribe((res: any) => {\n      this.multipleApplicationList = res.responseData.data;\n\n      this.multipleApplicationList.forEach((multipleApplication) => {\n        switch (multipleApplication?.refTypeOfMedium || multipleApplication?.applicationFormS2?.applicationForm?.refTypeOfMedium) {\n          case 'SINGLE MEDIA':\n            this.getApplicationSingleMedia(multipleApplication?.appFormReference);\n            break;\n          case 'MULTIMEDIA-MOVING':\n            this.getMultimediaMoving(multipleApplication?.appFormReference);\n            break;\n          case 'MULTIMEDIA-STATIC':\n            this.getMultimediaStatic(multipleApplication?.appFormReference);\n            break;\n          default:\n            break;\n        }\n      });\n\n      this.dataSource = new MatTableDataSource<any>(this.multipleApplicationList);\n      this.dataSource.paginator = this.paginator;\n      if (this.multipleApplicationList.length) {\n        this.payment.multipleApplication = this.multipleApplicationList[0].multipleApplication;\n      }\n    }, (err: any) => {\n      this.sweetAlertService.error(err);\n    });\n  }\n\n  processPayment(remarks) {\n\n    const amountTransferred = Number.parseFloat(this.paymentMethod?.amount?.toString());\n    const toPay = this.payment.amountDue - this.payment.withholdingTax;\n\n    if (this.paymentMethod.paymentType.paymentDescription === 'Voucher' ||\n      this.paymentMethod.paymentType.paymentDescription === 'Promisorry Note' ||\n      (this.paymentMethod.paymentType.paymentDescription !== 'Voucher'\n        && this.paymentMethod.paymentType.paymentDescription !== 'Promisorry Note'\n        && amountTransferred >= toPay)) {\n      Swal.fire({\n        text: 'Are you sure you want to process this PAYMENT?',\n        icon: 'question',\n        showCancelButton: true,\n        confirmButtonColor: '#3085d6',\n        cancelButtonColor: '#d33',\n        confirmButtonText: 'Confirm'\n      }).then((result) => {\n        if (result.value) {\n          this.payment.paymentStatus = PAYMENT_STATUS.PAID;\n          this.payment.paymentDate = new Date();\n          this.payment.paymentMethod = this.paymentMethod;\n          this.payment.amountReceive = this.paymentMethod.amount;\n          // this.payment.paymentAttachmentReference = this.attachmentDocument.paymentAttachmentReference;\n\n          let endpoint = ENDPOINTS.accountingPaymentApprove;\n          if (this.isMultiple) {\n            endpoint = ENDPOINTS.accountingMultiplePaymentApprove;\n          } else if (this.isSpecial) {\n            endpoint = ENDPOINTS.accountingSpecialPaymentApprove;\n          }\n          this.apiService.save(endpoint, this.payment).subscribe((res: any) => {\n            this.sweetAlertService.customSuccessMessage('Payment successfully processed.');\n            // console.log('SAVED DATA: ', res);\n            this.router.navigate(['asc/page/accounting/payments/', `schedule-of-fees-${this.paymentTypeFromUrl}`]);\n          });\n        }\n      });\n    } else {\n      this.sweetAlertService.customErrorMessage(`Amount Received/Transferred is lower than Amount Due.`);\n    }\n  }\n\n  comparePaymentType(value: any, selected: any): boolean {\n    if (value && selected) {\n      return value.paymentDescription === selected.paymentDescription;\n    }\n  }\n\n  selectProofOfPayment(res) {\n    this.selectedProofOfPayment = res;\n  }\n\n  // recompute() {\n  //   console.log('trigerring recompute... ', this.payment);\n\n  //   this.paymentTemp = this.payment;\n  //   let endpoint = ENDPOINTS.accountingRecompute;\n  //   if (this.isMultiple) {\n  //     endpoint = ENDPOINTS.accountingRecomputeMultiple;\n  //   } else if (this.isSpecial) {\n  //     endpoint = ENDPOINTS.accountingSpecialPaymentRecompute;\n  //   }\n  //   console.log('paymentMethod - ', this.paymentMethod);\n  //   this.payment.paymentMethod = this.paymentMethod;\n  //   this.payment.paymentDate = new Date();\n  //   this.payment.filename = this.attachmentDocument.filename;\n  //   this.payment.amountReceive = this.paymentMethod.amount;\n  //   this.payment.paymentAttachmentReference = this.attachmentDocument.paymentAttachmentReference;\n\n  //   this.apiService.save(endpoint, this.payment).subscribe((res: any) => {\n  //     this.payment = res;\n  //     this.payment.basicRate = this.paymentTemp.basicRate;\n  //     this.payment.vat = this.paymentTemp.vat;\n  //     this.payment.amountDue = this.paymentTemp.amountDue;\n  //     console.log('payment... ', this.payment);\n  //   }, (err: any) => {\n  //   });\n  // }\n\n  computeWithholding() {\n    this.payment.withholdingTax = this.payment?.filedBirForm ? this.payment.basicRate * 0.02 : 0;\n  }\n  \n  getAmountDue(): number {\n    let amountDue = Number((Math.round(this.payment?.amountDue * 100) / 100).toFixed(2));\n    let withholding = Number((Math.round(this.payment?.withholdingTax * 100) / 100).toFixed(2));\n    let result = amountDue - withholding;\n    return result ? result : 0;\n  }\n\n  validatePaymentStatus(): boolean {\n    if (this.payment?.paymentStatus !== PAYMENT_STATUS.PAID && this.payment?.paymentStatus !== PAYMENT_STATUS.UNPAID) {\n      return true;\n    } \n    return false;\n  }\n  \n  comparePaymentMethod(value: any, selected: any): boolean {\n    if (value && selected) {\n      return value.paymentDescription === selected.paymentDescription;\n    }\n  }\n\n  selectFile(event) {\n    this.isShowUploadButton = false;\n\n    if (event.target.files[0]) {\n      this.fileSize = event.target.files[0].size;\n\n      if (this.fileSize > 15000000) {\n        this.sweetAlertService.customErrorMessage(`Attachments' total file size should not exceed 15MB.`);\n        event.target.value = '';\n        return;\n\n      } else {\n        this.isShowUploadButton = true;\n        const fileURL = URL.createObjectURL(event.target.files[0]);\n        this.previewDocument = true;\n\n        this.safeURL = this.sanitizer.bypassSecurityTrustResourceUrl(fileURL);\n\n        const reader = new FileReader();\n        const [file] = event.target.files;\n\n        reader.readAsDataURL(file);\n        reader.onload = () => {\n        };\n\n        this.selectedFile = event.target.files[0];\n      }\n    }\n  }\n\n  viewDocument() {\n    if (this.uploadedPaymentFile) {\n      window.open(this.uploadedPaymentFile.fileURL);\n    } else {\n      window.open(this.attachmentDocument.fileURL);\n    }\n  }\n\n  uploadProofOfPayment() {\n    Swal.fire({\n      text: 'Are you sure you want to submit this as proof of payment?',\n      icon: 'question',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Confirm'\n    }).then((result) => {\n      if (result.value) {\n        this.spinner.show();\n        let params = '';\n        params = '?&attachmentType=' + ATTACHMENT_TYPE.PAYMENT + '&submissionType=' + SUBMISSION_TYPE.ORIGINAL;\n        this.fileStorageService.pushFileToStorage(ENDPOINTS.attachmentDocument, this.selectedFile, params)\n          .subscribe((res: any) => {\n\n            this.uploadedPaymentFile = res.responseData.data;\n            this.payment.paymentAttachmentReference = this.uploadedPaymentFile.paymentAttachmentReference;\n            this.addToAttachmentDocuments(this.uploadedPaymentFile);\n\n            this.hideSpinner();\n            this.sweetAlertService.customSuccessMessage('Attachment successfully uploaded.');\n            this.selectedFile = null;\n\n            this.getAttachmentDocument();\n\n          }, (err: any) => {\n            this.hideSpinner();\n            this.sweetAlertService.error(err);\n          }, () => {\n            // actions after subscription\n          });\n      } else {\n        this.selectedFile = null;\n      }\n    });\n  }\n\n  addToAttachmentDocuments(obj: any) {\n    this.attachmentDocument.paymentAttachmentReference = obj.paymentAttachmentReference;\n    this.attachmentDocument.id = obj.id;\n    this.attachmentDocument.originalFilename = obj.originalFilename;\n    this.attachmentDocument.filename = obj.filename;\n    this.attachmentDocument.fileExtension = obj.fileExtension;\n    this.attachmentDocument.fileURL = obj.fileURL;\n    this.attachmentDocument.attachmentType = obj.attachmentType;\n    this.attachmentDocument.documentFormat = obj.documentFormat;\n  }\n\n  hideSpinner() {\n    setTimeout(() => {\n      this.spinner.hide();\n    }, 1);\n  }\n\n  getAttachmentDocument() {\n    this.spinner.show();\n\n    this.apiService.findByParam(ENDPOINTS.paymentAttachmentReference,\n      this.attachmentDocument.paymentAttachmentReference).subscribe(\n        (res: any) => {\n          if (res) {\n            this.attachmentDocument = res.responseData.data;\n          }\n          this.hideSpinner();\n        }, (err: any) => {\n          this.hideSpinner();\n          console.error(err);\n        });\n  }\n\n  getAttachmentDocuments() {\n    this.apiService.findByParam(ENDPOINTS.attachmentDocument, `brand-penalty-attachment-reference/${this.payment.paymentAttachmentReference}`).subscribe((res: any) => {\n      if (res) {\n        this.attachmentDocument = res;\n      }\n      this.previewDocument = true;\n      this.safeURL = this.sanitizer.bypassSecurityTrustResourceUrl(this.attachmentDocument.fileURL);\n    });\n  }\n\n  navigateToList() {\n    if (this.payment.paymentStatus === PAYMENT_STATUS.PAID || this.payment.paymentStatus === PAYMENT_STATUS.UNPAID) {\n      if (this.paymentTypeFromUrl) {\n        this.router.navigate(['asc/page/accounting/payments/', `schedule-of-fees-${this.paymentTypeFromUrl}`]);\n      } else {\n        this.router.navigate(['asc/page/accounting/payments/']);\n      }\n    } else {\n      Swal.fire({\n        text: 'Are you sure you want to go back to payment list?',\n        icon: 'question',\n        showCancelButton: true,\n        confirmButtonColor: '#3085d6',\n        cancelButtonColor: '#d33',\n        confirmButtonText: 'Confirm'\n      }).then((result) => {\n        if (result.value) {\n          if (this.paymentTypeFromUrl) {\n            this.router.navigate(['asc/page/accounting/payments/', `schedule-of-fees-${this.paymentTypeFromUrl}`]);\n          } else {\n            this.router.navigate(['asc/page/accounting/payments/']);\n          }\n        }\n      });\n    }\n  }\n\n  getApplicationSingleMedia(appFormReference = this.payment?.applicationForm?.appFormReference) {\n    if (this.payment?.applicationFormS2?.applicationForm?.refTypeOfMedium) {\n      appFormReference = this.payment?.applicationFormS2?.applicationForm?.appFormReference;\n    }\n    this.apiService.findByParam(ENDPOINTS.applicationSingleMedia,\n      `app-form-reference/${appFormReference}`).subscribe(\n        (res: any) => {\n          if (res.responseData.data.length > 0) {\n            this.applicationSingleMedia = res.responseData.data[0];\n\n            this.typeOfMediumDisplay = `${this.applicationSingleMedia?.mediumExecution?.typeOfMedium?.description} (${this.applicationSingleMedia?.sizeLength})`;\n            if (this.isMultiple) {\n              this.multipleApplicationList.forEach((element, index) => {\n                if (element.appFormReference === appFormReference) {\n                  this.multipleApplicationList[index] = {\n                    ...this.multipleApplicationList[index],\n                    typeOfMediumDisplay: this.typeOfMediumDisplay\n                  };\n                }\n              });\n              this.dataSource = new MatTableDataSource<any>(this.multipleApplicationList);\n              this.dataSource.paginator = this.paginator;\n            }\n\n          } else {\n            this.applicationSingleMedia = new ApplicationSingleMedia();\n            this.typeOfMediumDisplay = '';\n          }\n        }, (err: any) => {\n          this.applicationSingleMedia = new ApplicationSingleMedia();\n          this.typeOfMediumDisplay = '';\n        });\n  }\n\n  getMultimediaStatic(appFormReference = this.payment?.applicationForm?.appFormReference) {\n    this.apiService.findByParam(ENDPOINTS.applicationMultimedia,\n      `app-form-reference/${appFormReference}`).subscribe(\n        (res: any) => {\n          if (res.responseData.data.length > 0) {\n            const multimediaList = new Set(res.responseData.data.map(mappedList => `${mappedList?.typeOfMedium?.description} (${mappedList?.multimediaSizeLength})`));\n\n            this.typeOfMediumDisplay = '';\n            let mediaCtrl = 1;\n            for (const media of multimediaList) {\n              if (mediaCtrl !== multimediaList.size) {\n                this.typeOfMediumDisplay += `${media}, `;\n                mediaCtrl++;\n              } else {\n                this.typeOfMediumDisplay += media;\n              }\n            }\n\n            if (this.isMultiple) {\n              this.multipleApplicationList.forEach((element, index) => {\n                if (element.appFormReference === appFormReference) {\n                  this.multipleApplicationList[index] = {\n                    ...this.multipleApplicationList[index],\n                    typeOfMediumDisplay: this.typeOfMediumDisplay\n                  };\n                }\n              });\n              this.dataSource = new MatTableDataSource<any>(this.multipleApplicationList);\n              this.dataSource.paginator = this.paginator;\n            }\n          } else {\n            this.typeOfMediumDisplay = '';\n          }\n        }, (err: any) => {\n          this.typeOfMediumDisplay = '';\n        });\n  }\n\n  getMultimediaMoving(appFormReference = this.payment?.applicationForm?.appFormReference) {\n    this.apiService.findByParam(ENDPOINTS.applicationMultimedia,\n      `app-form-reference/${appFormReference}`).subscribe(\n        (res: any) => {\n          if (res.responseData.data.length > 0) {\n            const multimediaList = new Set(res.responseData.data.map(mappedList => `${mappedList?.typeOfMedium?.description} (${mappedList?.multimediaSizeLength})`));\n\n            this.typeOfMediumDisplay = '';\n            let mediaCtrl = 1;\n            for (const media of multimediaList) {\n              if (mediaCtrl !== multimediaList.size) {\n                this.typeOfMediumDisplay += `${media}, `;\n                mediaCtrl++;\n              } else {\n                this.typeOfMediumDisplay += media;\n              }\n            }\n\n            if (this.isMultiple) {\n              this.multipleApplicationList.forEach((element, index) => {\n                if (element.appFormReference === appFormReference) {\n                  this.multipleApplicationList[index] = {\n                    ...this.multipleApplicationList[index],\n                    typeOfMediumDisplay: this.typeOfMediumDisplay\n                  };\n                }\n              });\n              this.dataSource = new MatTableDataSource<any>(this.multipleApplicationList);\n              this.dataSource.paginator = this.paginator;\n            }\n          } else {\n            this.typeOfMediumDisplay = '';\n          }\n        }, (err: any) => {\n          this.typeOfMediumDisplay = '';\n        });\n  }\n\n  rejectPayment() {\n    Swal.fire({\n      text: 'Are you sure you want to reject this roof of payment?',\n      icon: 'question',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Confirm'\n    }).then((result) => {\n      if (result.value) {\n        this.spinner.show();\n\n        let rejectEndpoint = ENDPOINTS.accountingReject;\n        if (this.isMultiple) {\n          rejectEndpoint = ENDPOINTS.accountingRejectMultiple;\n        } else if (this.isSpecial) {\n          rejectEndpoint = ENDPOINTS.accountingRejectSpecial;\n        }\n\n        this.apiService.save(rejectEndpoint, this.payment)\n          .subscribe((res: any) => {\n            this.hideSpinner();\n            this.sweetAlertService.customSuccessMessage('Successfully rejected.');\n\n            if (this.paymentTypeFromUrl) {\n              this.router.navigate(['asc/page/accounting/payments/', `schedule-of-fees-${this.paymentTypeFromUrl}`]);\n            } else {\n              this.router.navigate(['asc/page/accounting/payments/']);\n            }\n          }, (err: any) => {\n            this.hideSpinner();\n            this.sweetAlertService.error(err);\n          }, () => {\n            // actions after subscription\n          });\n      }\n    });\n  }\n\n  fetchMultimedia(): void{\n    let typeofMedium = this.payment?.applicationForm.refTypeOfMedium === TYPE_OF_MEDIUM.MULTIMEDIA_MOVING ? 'moving' : 'static';\n    let endpoint = ENDPOINTS.applicationMultimedia + '-' + typeofMedium + '/app-form-reference'\n    this.apiService.findByParam(endpoint, this.payment?.applicationForm.appFormReference).subscribe(\n      multimedia => {\n        if (multimedia) this.multimediaDTO = multimedia.responseData.data;\n      }\n    );\n  }\n}\n","<form>\n  <div class=\"container-fluid\">\n    <div class=\"row\" *ngIf=\"currentUser?.userRole.name=='ROLE_ACCOUNTING'\">\n      <div class=\"col-md-12 title\">\n        <mat-label>\n          <mat-icon>payment</mat-icon> PAYMENT\n        </mat-label>\n\n        <button class=\"button-right button-red\" mat-raised-button (click)=\"navigateToList()\">\n          <mat-icon>list</mat-icon> VIEW LIST OF PAYMENT\n        </button>\n      </div>\n    </div>\n    <div class=\"row mt-3\">\n      <mat-accordion class=\"headers-align\">\n        <mat-expansion-panel>\n          <mat-expansion-panel-header>\n            <mat-panel-title>\n              <i class=\"material-icons\">label_important</i> &nbsp;Preview\n            </mat-panel-title>\n            <mat-panel-description>\n              Application Details\n              <i class=\"material-icons\">visibility</i>\n            </mat-panel-description>\n          </mat-expansion-panel-header>\n          <br>\n          <app-add-payment-preview-application [previewS1Application]=\"payment?.applicationForm\" [multimediaDTO]=\"multimediaDTO\"></app-add-payment-preview-application>\n        </mat-expansion-panel>\n      </mat-accordion>\n    </div>\n    <hr>\n\n    <form [formGroup]=\"paymentForm\">\n      <div class=\"row fields\">\n        <div class=\"col-md-12 title\" *ngIf=\"currentUser?.userRole?.name!='ROLE_ACCOUNTING'\">\n          <mat-label>\n            <mat-icon>payment</mat-icon>\n            {{payment?.paymentStatus!='PAID'&&safeURL!=undefined ? 'FOR APPROVAL' : payment?.paymentStatus}}\n          </mat-label>\n        </div>\n\n        <!--///////////////////////// ACCOUNTING /////////////////////////////-->\n        <div class=\"row\" *ngIf=\"currentUser.userRole.name=='ROLE_ACCOUNTING'\">\n          <mat-form-field class=\"col-md-6\" appearance=\"outline\">\n            <mat-label>Type Of Payment</mat-label>\n            <input matInput value=\"Schedule of Fees\" readonly>\n          </mat-form-field>\n        </div>\n\n        <div class=\"col-md-6\" appearance=\"outline\">\n          <div class=\"col-md-12\" appearance=\"outline\" *ngIf=\"isForPayment || paymentTypeFromUrl === 'paid' || safeURL \">\n            <mat-label>Filename: </mat-label>\n            <br>\n            <input matInput [value]=\"attachmentDocument.originalFilename\" disabled\n              *ngIf=\"attachmentDocument.originalFilename\">\n            <input class=\"file-upload\" type=\"file\"\n              *ngIf=\"!attachmentDocument.originalFilename && this.paymentTypeFromUrl !== 'paid'\" accept=\".pdf\"\n              (change)=\"selectFile($event)\">\n            <br><br>\n          </div>\n\n          <div class=\"col-md-12\" appearance=\"outline\"\n            *ngIf=\"(isForPayment || this.paymentTypeFromUrl === 'paid' || safeURL) && (attachmentDocument?.paymentAttachmentReference || isShowUploadButton)\">\n\n            <button mat-raised-button class=\"button-red button-right\" (click)=\"viewDocument()\"\n              *ngIf=\"attachmentDocument?.paymentAttachmentReference\">\n              <mat-icon>open_in_new</mat-icon> VIEW DOCUMENT\n            </button>\n\n            &nbsp; &nbsp;\n\n            <button mat-raised-button class=\"button-red button-right\" (click)=\"uploadProofOfPayment()\"\n              [disabled]=\"!safeURL||!isShowUploadButton\"\n              *ngIf=\"isShowUploadButton && !attachmentDocument.originalFilename\">\n              <mat-icon>upload</mat-icon> UPLOAD\n            </button>\n            <br><br>\n          </div>\n          <div class=\"file-upload\" style=\"border: 1px solid red\" *ngIf=\"safeURL\"\n            [hidden]=\"payment?.paymentStatus === 'PAID' || payment?.paymentStatus === 'UNPAID'\">\n            <object [data]=\"safeURL\" type=\"application/pdf\" width=\"100%\" height=\"500\">\n              <iframe [src]=\"safeURL\" width=\"100%\" height=\"500\">\n                <p>This browser does not support PDF!</p>\n              </iframe>\n            </object>\n          </div>\n          <br>\n          <div class=\"row\">\n            <mat-form-field class=\"col-md-12\" appearance=\"outline\" [hidden]=\"isMultiple\">\n              <mat-label>Reference Number</mat-label>\n              <input matInput\n                [value]=\"payment?.applicationForm?.referenceCode || payment?.applicationFormS2?.applicationForm?.referenceCode\"\n                readonly>\n            </mat-form-field>\n\n            <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n              <mat-label>Advertiser</mat-label>\n              <input matInput name=\"companyName\" readonly\n                [value]=\"payment?.applicationForm?.company?.companyName || payment?.multipleApplication?.company?.companyName || payment?.applicationFormS2?.applicationForm?.company?.companyName\">\n            </mat-form-field>\n\n            <mat-form-field class=\"col-md-12\" appearance=\"outline\" [hidden]=\"isMultiple\">\n              <mat-label>Ad Title - Medium (Length)</mat-label>\n              <textarea matInput name=\"refTypeOfMedium\"\n                [value]=\"payment?.applicationForm?.adTitle ? payment?.applicationForm?.adTitle + ' - ' + typeOfMediumDisplay : typeOfMediumDisplay || payment?.applicationFormS2?.applicationForm?.adTitle + ' - ' + typeOfMediumDisplay || payment?.applicationFormS2?.applicationForm?.adTitle + ' - ' + typeOfMediumDisplay\"\n                readonly></textarea>\n            </mat-form-field>\n\n            <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n              <mat-label>Vatable Sales</mat-label>\n              <input class=\"numbers-input\" matInput [value]=\"payment?.basicRate | number : '1.2-2'\" readonly\n                step=\"0.01\">\n            </mat-form-field>\n\n            <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n              <mat-label>VAT</mat-label>\n              <input class=\"numbers-input\" matInput [value]=\"payment?.vat | number : '1.2-2'\" readonly>\n            </mat-form-field>\n\n            <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n              <mat-label>Total Sales (VAT Inclusive)</mat-label>\n              <input class=\"numbers-input total\" matInput name=\"amount\" [value]=\"payment?.amountDue | number : '1.2-2'\"\n                readonly>\n            </mat-form-field>\n\n          </div>\n        </div>\n\n        <div class=\"col-md-6\" [hidden]=\"payment?.paymentStatus!='PAID'&&currentUser?.userRole?.name!='ROLE_ACCOUNTING'\">\n\n          <div class=\"row\">\n            <div *ngIf=\"isMultiple\">\n              <table mat-table [dataSource]=\"dataSource\" matSort>\n                <ng-container matColumnDef=\"referenceCode\">\n                  <th mat-header-cell *matHeaderCellDef> Reference Code </th>\n                  <td mat-cell *matCellDef=\"let element; let i = index\">{{element?.referenceCode}}</td>\n                </ng-container>\n                <ng-container matColumnDef=\"adTitle\">\n                  <th mat-header-cell *matHeaderCellDef> Ad Title </th>\n                  <td mat-cell *matCellDef=\"let element; let i = index\">{{element?.adTitle}}</td>\n                </ng-container>\n                <ng-container matColumnDef=\"mediumAndLength\">\n                  <th mat-header-cell *matHeaderCellDef> Medium And Length</th>\n                  <td mat-cell *matCellDef=\"let element; let i = index\">{{ element?.typeOfMediumDisplay }}</td>\n                </ng-container>\n                <ng-container matColumnDef=\"amount\">\n                  <th mat-header-cell *matHeaderCellDef> Amount</th>\n                  <td mat-cell *matCellDef=\"let element; let i = index\">{{element?.amount | number : '1.2-2'}}</td>\n                </ng-container>\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n              </table>\n              <div class=\"no-record\" [hidden]=\"dataSource && dataSource?.data?.length > 0\">\n                No record found.\n              </div>\n              <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons></mat-paginator>\n            </div>\n\n            <span>\n              <mat-checkbox class=\"example-margin\" [(ngModel)]=\"payment.filedBirForm\" formControlName=\"filedBirForm\"\n                (ngModelChange)=\"computeWithholding()\"\n                >\n                BIR Form 2307</mat-checkbox>\n            </span>\n            <!-- <b [hidden]=\"payment?.paymentStatus !== 'PAID' || !payment.filedBirForm\"><i class=\"material-icons\">check</i>\n              BIR Form 2307</b>\n            <b [hidden]=\"payment?.paymentStatus !== 'PAID' || payment.filedBirForm\"><i class=\"material-icons\">close</i>\n              BIR Form 2307</b> -->\n            <br><br>\n            <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n              <mat-label>Withholding Tax</mat-label>\n              <input matInput class=\"numbers-input\" name=\"vat\" [value]=\"payment?.withholdingTax | number : '1.2-2'\"\n                formControlName=\"withholdingTax\" readonly>\n            </mat-form-field>\n\n            <!-- <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n              <mat-label>Official Receipt No</mat-label>\n              <input matInput name=\"orNo\" [(ngModel)]=\"payment.officialReceiptNo\" [readonly]=\"!isForPayment\"\n                formControlName=\"orNo\" (keydown)=\"validateFieldService.numbersOnly($event)\">\n            </mat-form-field> -->\n\n            <!-- <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n              <mat-label>Amount Receive</mat-label>\n              <input matInput name=\"amountReceive\" type=\"number\" [(ngModel)]=\"payment.amountReceive\" formControlName=\"amountReceive\"\n              [readonly]=\"currentUser.userRole.name!='ROLE_ACCOUNTING'||payment?.paymentStatus=='PAID'\">\n            </mat-form-field> -->\n\n            <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n              <mat-label>Amount Due</mat-label>\n              <input class=\"numbers-input total\" matInput name=\"amount\"\n                [value]=\"getAmountDue() | number : '1.2-2'\" readonly>\n            </mat-form-field>\n\n            <div *ngIf=\"isMultiple\"><br>\n              <hr><br>\n            </div>\n\n            <!-- <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n              <mat-label>Payment Mode</mat-label>\n              <input matInput [value]=\"payment?.paymentMethod?.paymentType?.paymentDescription\" readonly> -->\n            <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n              <mat-label>Payment Mode</mat-label>\n              <mat-select class=\"col-md-4\" [(ngModel)]=\"paymentMethod.paymentType\" name=\"paymentType\"\n                [compareWith]=\"comparePaymentMethod\" formControlName=\"paymentType\" [disabled]=\"payment?.paymentStatus=='PAID' || payment?.paymentStatus=='UNPAID'\"\n                (selectionChange)=\"resetPaymentTypeValidation()\">\n                <mat-option *ngFor=\"let i of paymentTypeList\" [value]=\"i\" name=\"paymentType\">\n                  {{ i?.paymentDescription | uppercase }}\n                </mat-option>\n              </mat-select>\n            </mat-form-field>\n\n            <div *ngIf=\"paymentMethod?.paymentType?.paymentDescription ==='Cash' || paymentMethod?.paymentType?.paymentDescription ==='GCash' ||\n              paymentMethod?.paymentType?.paymentDescription ==='PayMaya'\">\n\n\n              <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n                <mat-label>Reference Number <span class=\"required-field\">\n                    <mat-icon>notification_important</mat-icon>\n                  </span></mat-label>\n                <input matInput [(ngModel)]=\"paymentMethod.referenceNo\" name=\"referenceNo\" formControlName=\"referenceNo\"\n                  [readonly]=\"currentUser.userRole.name!='ROLE_ACCOUNTING'||payment?.paymentStatus=='PAID'\"\n                  (blur)=\"paymentTypevalidator()\" (keyup)=\"paymentTypevalidator()\">\n              </mat-form-field>\n              <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n                <mat-label>Fund Transfer Date <span class=\"required-field\">\n                    <mat-icon>notification_important</mat-icon>\n                  </span></mat-label>\n                <input matInput placeholder=\"Date\" [matDatepicker]=\"paymentDate\" [min]=\"currentDate\"\n                  [(ngModel)]=\"paymentMethod.paymentDate\" name=\"paymentDate\" formControlName=\"paymentDate\"\n                  [readonly]=\"currentUser?.userRole.name!='ROLE_ACCOUNTING'||payment?.paymentStatus=='PAID'\"\n                  (dateChange)=\"paymentTypevalidator()\" (keyup)=\"paymentTypevalidator()\">\n                <mat-datepicker-toggle matSuffix [for]=\"paymentDate\" *ngIf=\"payment?.paymentStatus!=='PAID'\">\n                </mat-datepicker-toggle>\n                <mat-datepicker color=\"warn\" #paymentDate></mat-datepicker>\n              </mat-form-field>\n              <mat-form-field class=\"col-md-12\" appearance=\"outline\"\n                *ngIf=\"paymentMethod?.paymentType?.paymentDescription ==='PayMaya'\">\n                <mat-label>Confirmation Code <span class=\"required-field\">\n                    <mat-icon>notification_important</mat-icon>\n                  </span></mat-label>\n                <input matInput [(ngModel)]=\"paymentMethod.ccConfirmationCode\" name=\"ccConfirmationCode\"\n                  formControlName=\"ccConfirmationCode\"\n                  [readonly]=\"currentUser.userRole.name!='ROLE_ACCOUNTING'||payment?.paymentStatus=='PAID'\">\n              </mat-form-field>\n              <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n                <mat-label>Amount Transferred <span class=\"required-field\">\n                    <mat-icon>notification_important</mat-icon>\n                  </span></mat-label>\n                <input matInput [(ngModel)]=\"paymentMethod.amount\" name=\"amount\" formControlName=\"amount\"\n                  (keydown)=\"validateFieldService.numbersOnly($event)\" class=\"numbers-input\"\n                  [hidden]=\"currentUser.userRole.name!='ROLE_ACCOUNTING'||payment?.paymentStatus=='PAID'\"\n                  (blur)=\"paymentTypevalidator()\" (keyup)=\"paymentTypevalidator()\">\n\n                <input class=\"numbers-input total\" matInput name=\"amount\"\n                  [value]=\"paymentMethod?.amount | number : '1.2-2'\" readonly\n                  *ngIf=\"currentUser.userRole.name!='ROLE_ACCOUNTING'||payment?.paymentStatus=='PAID'\">\n              </mat-form-field>\n            </div>\n\n\n            <div class=\"row\" *ngIf=\"paymentMethod?.paymentType?.paymentDescription ==='Voucher'\">\n              <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n                <mat-label>Control Number <span class=\"required-field\">\n                    <mat-icon>notification_important</mat-icon>\n                  </span></mat-label>\n                <input matInput [(ngModel)]=\"paymentMethod.controlNo\" name=\"controlNo\" formControlName=\"controlNo\"\n                  [readonly]=\"currentUser.userRole.name!='ROLE_ACCOUNTING'||payment?.paymentStatus=='PAID'\"\n                  (blur)=\"paymentTypevalidator()\" (keyup)=\"paymentTypevalidator()\">\n              </mat-form-field>\n              <!-- <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n                <mat-label>Amount</mat-label>\n                <input matInput [(ngModel)]=\"paymentMethod.amount\" name=\"amount\" formControlName=\"amount\"\n                  (keydown)=\"validateFieldService.numbersOnly($event)\" class=\"numbers-input\"\n                  [readonly]=\"currentUser.userRole.name!='ROLE_ACCOUNTING'||payment?.paymentStatus=='PAID'\">\n              </mat-form-field> -->\n            </div>\n\n            <div class=\"row\"\n              *ngIf=\"paymentMethod?.paymentType?.paymentDescription ==='Bank' ||\n            paymentMethod?.paymentType?.paymentDescription ==='Credit Card' || paymentMethod?.paymentType?.paymentDescription ==='Check'\">\n\n              <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n                <mat-label>Bank Name <span class=\"required-field\">\n                    <mat-icon>notification_important</mat-icon>\n                  </span></mat-label>\n                <input matInput [(ngModel)]=\"paymentMethod.bankName\" name=\"bankName\" formControlName=\"bankName\"\n                  [readonly]=\"currentUser.userRole.name!='ROLE_ACCOUNTING'||payment?.paymentStatus=='PAID'\"\n                  (blur)=\"paymentTypevalidator()\" (keyup)=\"paymentTypevalidator()\">\n              </mat-form-field>\n              <mat-form-field class=\"col-md-12\" appearance=\"outline\"\n                *ngIf=\"paymentMethod?.paymentType?.paymentDescription ==='Credit Card'\">\n                <mat-label>Confirmation Code <span class=\"required-field\">\n                    <mat-icon>notification_important</mat-icon>\n                  </span></mat-label>\n                <input matInput [(ngModel)]=\"paymentMethod.ccConfirmationCode\" name=\"ccConfirmationCode\"\n                  formControlName=\"ccConfirmationCode\"\n                  [readonly]=\"currentUser.userRole.name!='ROLE_ACCOUNTING'||payment?.paymentStatus=='PAID'\"\n                  (blur)=\"paymentTypevalidator()\" (keyup)=\"paymentTypevalidator()\">\n              </mat-form-field>\n              <mat-form-field class=\"col-md-12\" appearance=\"outline\"\n                *ngIf=\"paymentMethod?.paymentType?.paymentDescription ==='Check'\">\n                <mat-label>Check Number <span class=\"required-field\">\n                    <mat-icon>notification_important</mat-icon>\n                  </span></mat-label>\n                <input matInput [(ngModel)]=\"paymentMethod.checkNo\" name=\"checkNo\" formControlName=\"checkNo\"\n                  [readonly]=\"currentUser.userRole.name!='ROLE_ACCOUNTING'||payment?.paymentStatus=='PAID'\"\n                  (blur)=\"paymentTypevalidator()\" (keyup)=\"paymentTypevalidator()\">\n              </mat-form-field>\n              <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n                <mat-label>Amount Transferred <span class=\"required-field\">\n                    <mat-icon>notification_important</mat-icon>\n                  </span></mat-label>\n                <input matInput [(ngModel)]=\"paymentMethod.amount\" name=\"amount\" class=\"numbers-input\"\n                  formControlName=\"amount\"\n                  [hidden]=\"currentUser.userRole.name!='ROLE_ACCOUNTING'||payment?.paymentStatus=='PAID'\"\n                  (blur)=\"paymentTypevalidator()\" (keyup)=\"paymentTypevalidator()\">\n\n                <input class=\"numbers-input total\" matInput name=\"amount\"\n                  [value]=\"paymentMethod?.amount | number : '1.2-2'\" readonly\n                  *ngIf=\"currentUser.userRole.name!='ROLE_ACCOUNTING'||payment?.paymentStatus=='PAID'\">\n              </mat-form-field>\n              <mat-form-field class=\"col-md-12\" appearance=\"outline\"\n                *ngIf=\"paymentMethod?.paymentType?.paymentDescription ==='Bank'\">\n                <mat-label>Branch <span class=\"required-field\">\n                    <mat-icon>notification_important</mat-icon>\n                  </span></mat-label>\n                <input matInput [(ngModel)]=\"paymentMethod.bankBranch\" name=\"withholdingTax\"\n                  formControlName=\"bankBranch\"\n                  [readonly]=\"currentUser.userRole.name!='ROLE_ACCOUNTING'||payment?.paymentStatus=='PAID'\"\n                  (blur)=\"paymentTypevalidator()\" (keyup)=\"paymentTypevalidator()\">\n              </mat-form-field>\n              <mat-form-field class=\"col-md-12\" appearance=\"outline\"\n                *ngIf=\"paymentMethod?.paymentType?.paymentDescription ==='Bank'\">\n                <mat-label>Deposited Date <span class=\"required-field\">\n                    <mat-icon>notification_important</mat-icon>\n                  </span></mat-label>\n                <input matInput placeholder=\"Date\" [matDatepicker]=\"paymentDate\" [(ngModel)]=\"paymentMethod.paymentDate\"\n                  name=\"paymentDate\" formControlName=\"paymentDate\" (dateChange)=\"paymentTypevalidator()\"\n                  (keyup)=\"paymentTypevalidator()\">\n                <mat-datepicker-toggle matSuffix [for]=\"paymentDate\"></mat-datepicker-toggle>\n                <mat-datepicker color=\"warn\" #paymentDate disabled=\"false\"></mat-datepicker>\n              </mat-form-field>\n            </div>\n\n\n            <!--  <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n              <mat-label>Discount</mat-label>\n              <input matInput name=\"discount\" type=\"number\" [(ngModel)]=\"payment.discount\" formControlName=\"discount\"\n              [readonly]=\"currentUser.userRole.name!='ROLE_ACCOUNTING'||payment?.paymentStatus=='PAID'\">\n            </mat-form-field> -->\n\n\n            <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n              <mat-label>REMARKS</mat-label>\n              <!-- <textarea matInput [value]=\"payment?.remarks\" [readonly]=\"!isForPayment\"></textarea> -->\n              <textarea matInput [ngModel]=\"payment?.remarks\" (ngModelChange)=\"payment.remarks = $event\" formControlName=\"remarks\" name=\"remarks\"\n                [readonly]=\"currentUser.userRole.name!='ROLE_ACCOUNTING'||payment?.paymentStatus=='PAID'\"></textarea>\n            </mat-form-field>\n\n          </div>\n\n          <div *ngIf=\"selectedProofOfPayment === 2\">\n            <div class=\"row\">\n\n              <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n                <mat-label>Applicant Company Details</mat-label>\n                <input matInput name=\"companyName\" [readonly]=\"isForPayment\">\n              </mat-form-field>\n\n            </div>\n            <div class=\"row\">\n\n              <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n                <mat-label>Accumulated Amount to be settled</mat-label>\n                <input matInput name=\"length\" [readonly]=\"isForPayment\" class=\"numbers-input\">\n              </mat-form-field>\n            </div>\n          </div>\n\n          <div *ngIf=\"selectedProofOfPayment === 3\">\n            <div class=\"row\">\n\n              <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n                <mat-label>Client Company Details</mat-label>\n                <input matInput name=\"companyName\" [readonly]=\"isForPayment\">\n              </mat-form-field>\n\n            </div>\n            <div class=\"row\">\n\n              <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n                <mat-label>Accumulated Amount to be settled</mat-label>\n                <input matInput name=\"length\" [readonly]=\"isForPayment\" class=\"numbers-input\">\n              </mat-form-field>\n            </div>\n          </div>\n\n          <div class=\"row\" *ngIf=\"currentUser?.userRole?.name=='ROLE_ACCOUNTING'&&payment?.paymentStatus!=='PAID'\">\n            <div class=\"col-md-12\">\n              <button class=\"button-right button-red\" mat-raised-button (click)=\"processPayment(payment?.remarks)\"\n                [hidden]=\"isDelinquent\"\n                [disabled]=\"(!paymentForm.valid || !payment?.paymentAttachmentReference || !isPaymentTypeValid)\n                && ((paymentMode?.toUpperCase() !== 'PROMISORRY NOTE' && paymentMethod.paymentType?.paymentDescription?.toUpperCase() !== 'PROMISORRY NOTE') || !payment.paymentAttachmentReference )\">\n                <mat-icon>offline_pin</mat-icon> PROCESS\n              </button>\n              <button mat-raised-button class=\"button-right button-red button-right__approve\" (click)=\"approvePenalty()\"\n                [disabled]=\"(!paymentForm.valid || !payment?.paymentAttachmentReference || !isPaymentTypeValid)\n              && ((paymentMode?.toUpperCase() !== 'PROMISORRY NOTE' && paymentMethod.paymentType?.paymentDescription?.toUpperCase() !== 'PROMISORRY NOTE') || !payment.paymentAttachmentReference )\"\n                *ngIf=\"isDelinquent\">\n                <i class=\"material-icons color__white\">task_alt</i> APPROVE\n              </button>\n              &nbsp;\n              <button mat-raised-button class=\"button-right button-red\" (click)=\"rejectPayment()\" *ngIf=\"isForApproval\">\n                <mat-icon>unpublished</mat-icon> REJECT\n              </button>\n            </div>\n          </div>\n          <br>\n        </div>\n      </div>\n    </form>\n  </div>\n</form>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AddPaymentComponent } from './add-payment.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AddPaymentComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AddPaymentRoutingModule { }\n"],"sourceRoot":"webpack:///"}