{"version":3,"sources":["./src/app/modules/pages/accounting/add-payment/add-payment-preview-application/add-payment-preview-application.component.ts","./src/app/modules/pages/accounting/add-payment/add-payment-preview-application/add-payment-preview-application.component.html","./src/app/modules/pages/accounting/add-payment/add-payment.module.ts","./src/app/modules/pages/accounting/add-payment/add-payment.component.ts","./src/app/modules/pages/accounting/add-payment/add-payment.component.html","./src/app/modules/pages/accounting/add-payment/add-payment-routing.module.ts"],"names":[],"mappings":"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","file":"default~add-payment-add-payment-module~applications-applications-module-es2015.js","sourcesContent":["import { AfterViewInit, Component, Input, OnChanges, OnInit, SimpleChanges, ViewChild } from '@angular/core';\r\nimport { S1Application, UserAccount } from '@models';\r\nimport { ApiService } from '@services';\r\nimport { APP_DECISION_STATUS, ATTACHMENT_TYPE, ENDPOINTS, SUBMISSION_TYPE } from '@shared';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { ApplicationSingleMedia } from '../../../../../core/models/application-single-media.model';\r\n\r\n@Component({\r\n  selector: 'app-add-payment-preview-application',\r\n  templateUrl: './add-payment-preview-application.component.html',\r\n})\r\n\r\nexport class AddPaymentPreviewApplicationComponent implements OnChanges {\r\n  @Input() previewS1Application: any;\r\n  @Input() applicationSingleMedia = new ApplicationSingleMedia();\r\n  @Input() multimediaDTO: any = {};\r\n  presentorDetails = new UserAccount();\r\n\r\n  multimediaMovingList = [];\r\n  multimediaStaticList = [];\r\n\r\n  constructor(private apiService: ApiService) { }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes['previewS1Application']) {\r\n      this.getPresentorDetails();\r\n    }\r\n  }\r\n\r\n  getPresentorDetails() {\r\n    if (this.previewS1Application?.applicationOwner?.username) {\r\n      this.apiService.findByParam(ENDPOINTS.userLogin, this.previewS1Application.applicationOwner.username).subscribe(\r\n        (res: any) => {\r\n          if (res.responseData.data) {\r\n            this.presentorDetails = res.responseData.data;\r\n          }\r\n        });\r\n    }\r\n  }\r\n}\r\n","<!-- CLIENT INFO -->\r\n<div class=\"row fields\">\r\n  <h4>\r\n    <i class=\"material-icons\">preview</i> &nbsp;<b>CLIENT'S INFORMATION</b>\r\n    <hr>\r\n  </h4>\r\n  <div class=\"row\">\r\n    <div class=\"col-md-4\" appearance=\"outline\">\r\n      <mat-label>Client Company Name</mat-label>\r\n      <input matInput [value]=\"previewS1Application?.company?.companyName\" disabled>\r\n    </div>\r\n    <div class=\"col-md-4\" appearance=\"outline\">\r\n      <mat-label>Client Membership Affiliation</mat-label>\r\n      <input matInput [value]=\"previewS1Application?.company?.membersAffiliation?.description\" disabled>\r\n    </div>\r\n    <div class=\"col-md-4\" appearance=\"outline\"></div>\r\n  </div>\r\n\r\n  <div class=\"row\">\r\n    <div class=\"col-md-4\" appearance=\"outline\">\r\n      <mat-label>Brand</mat-label>\r\n      <input matInput [value]=\"previewS1Application?.brand?.description\" disabled>\r\n    </div>\r\n    <div class=\"col-md-4\" appearance=\"outline\">\r\n      <mat-label>Product</mat-label>\r\n      <input matInput [value]=\"previewS1Application?.product?.description\" disabled>\r\n    </div>\r\n    <div class=\"col-md-4\" appearance=\"outline\">\r\n      <mat-label>Category</mat-label>\r\n      <input matInput [value]=\"previewS1Application?.product?.category?.description\" disabled>\r\n    </div>\r\n  </div>\r\n\r\n  <br><br><br>\r\n</div>\r\n\r\n<!-- PRESENTOR INFO -->\r\n<div class=\"row fields\">\r\n  <h4>\r\n    <i class=\"material-icons\">preview</i> &nbsp;<b>PRESENTOR INFORMATION</b>\r\n    <hr>\r\n  </h4>\r\n  <div class=\"row\">\r\n    <div class=\"col-md-12 mb-3\" appearance=\"outline\">\r\n      <mat-label>Name of Applicant</mat-label>\r\n      <input matInput [value]=\"presentorDetails?.firstName+' '+presentorDetails?.lastName\" disabled>\r\n    </div>\r\n    <div class=\"col-md-12 mb-3\" appearance=\"outline\">\r\n      <mat-label>Company Name</mat-label>\r\n      <input matInput [value]=\"presentorDetails?.company?.companyName\" disabled>\r\n    </div>\r\n    <div class=\"col-md-12 mb-3\" appearance=\"outline\">\r\n      <mat-label>Address</mat-label>\r\n        <input matInput [value]=\"presentorDetails?.company?.completeAddress\" disabled>\r\n    </div>\r\n    \r\n    <div class=\"row col-md-12 mb-4\">\r\n      <div class=\"col-md-6 mb-3\" appearance=\"outline\">\r\n        <mat-label>Mobile Number</mat-label>\r\n        <input matInput [value]=\"presentorDetails?.mobileNumber\" disabled>\r\n      </div>\r\n      <div class=\"col-md-6 mb-3\" appearance=\"outline\">\r\n        <mat-label>Email Address</mat-label>\r\n        <input matInput [value]=\"presentorDetails?.username\" disabled>\r\n      </div>\r\n      <div class=\"col-md-6 mb-3\" appearance=\"outline\">\r\n        <mat-label>Telephone Number</mat-label>\r\n        <input matInput [value]=\"presentorDetails?.company?.companyTelephoneNo\" disabled>\r\n      </div>\r\n      <div class=\"col-md-6 mb-3\" appearance=\"outline\">\r\n        <mat-label>Alternate Telephone Number</mat-label>\r\n        <input matInput [value]=\"presentorDetails?.company?.companyTelephoneNo2\" disabled>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- MATERIAL INFO -->\r\n<div class=\"row fields\">\r\n  <h4>\r\n    <i class=\"material-icons\">preview</i> &nbsp;<b>MATERIAL INFORMATION</b>\r\n    <hr>\r\n  </h4>\r\n  <div class=\"row\">\r\n    <div class=\"col-md-12\" appearance=\"outline\">\r\n      <mat-label>Ad Title</mat-label>\r\n      <input matInput [value]=\"previewS1Application?.adTitle\" disabled>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"row\"><br></div>\r\n\r\n  <div class=\"row\">\r\n    <div class=\"col-md-6\" appearance=\"outline\">\r\n      <mat-label>Reference Code of Previously-Approved Material</mat-label>\r\n      <input matInput [value]=\"previewS1Application?.previousRefCode\" disabled>\r\n    </div>\r\n    <div class=\"col-md-6\" appearance=\"outline\">\r\n      <mat-label>Tag line</mat-label>\r\n      <input matInput [value]=\"previewS1Application?.tagLine\" disabled>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"row\" *ngIf=\"previewS1Application?.refTypeOfMedium\">\r\n    <div class=\"col-md-6\" appearance=\"outline\">\r\n      <mat-label>Media Type</mat-label>\r\n      <input matInput [value]=\"previewS1Application?.refTypeOfMedium\" disabled>\r\n    </div>\r\n  </div>\r\n  <div class=\"row\"><br></div>\r\n  <div class=\"row\" *ngIf=\"applicationSingleMedia\">\r\n    <div class=\"col-md-3\" appearance=\"outline\"\r\n      *ngIf=\"applicationSingleMedia?.mediumExecution?.typeOfMedium?.description\">\r\n      <mat-label>Type of Medium</mat-label>\r\n      <input matInput [value]=\"applicationSingleMedia?.mediumExecution?.typeOfMedium?.description\" disabled>\r\n    </div>\r\n    <div class=\"col-md-3\" appearance=\"outline\" *ngIf=\"applicationSingleMedia?.mediumExecution\">\r\n      <mat-label>Execution</mat-label>\r\n      <input matInput [value]=\"applicationSingleMedia?.mediumExecution?.typeOfExecution?.typeOfExecution\" disabled>\r\n    </div>\r\n    <div class=\"col-md-3\" appearance=\"outline\" *ngIf=\"applicationSingleMedia?.dialect\">\r\n      <mat-label>Language/Dialect</mat-label>\r\n      <input matInput [value]=\"applicationSingleMedia?.dialect?.dialect\" disabled>\r\n    </div>\r\n    <div class=\"col-md-3\" appearance=\"outline\" *ngIf=\"applicationSingleMedia?.others\">\r\n      <mat-label>Others</mat-label>\r\n      <input matInput [value]=\"applicationSingleMedia?.others\" disabled>\r\n    </div>\r\n    <div class=\"col-md-3\" appearance=\"outline\" *ngIf=\"applicationSingleMedia?.sizeLength\">\r\n      <mat-label>Size / Length</mat-label>\r\n      <input matInput [value]=\"applicationSingleMedia?.sizeLength\" disabled>\r\n    </div>\r\n    <div class=\"col-md-3\" appearance=\"outline\" *ngIf=\"applicationSingleMedia?.width\">\r\n      <mat-label>Width</mat-label>\r\n      <input matInput [value]=\"applicationSingleMedia?.width\" disabled>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Displaying Multimedia List -->\r\n  <div class=\"row\" *ngIf=\"multimediaDTO\">\r\n    <table class=\"mx-3 mb-3\">\r\n      <ng-container *ngIf=\"previewS1Application?.refTypeOfMedium === 'MULTIMEDIA-STATIC'\">\r\n        <ng-container *ngFor=\"let i of multimediaDTO.applicationMultimediaStaticList\">\r\n          <tr *ngIf=\"i?.hasSelected\" style=\"height: 30px;\">\r\n            <td class=\"col-md-4\">\r\n              <mat-checkbox [checked]=\"i?.hasSelected\" disabled>\r\n                {{i?.multimediaStaticMedium | uppercase}}\r\n              </mat-checkbox>\r\n            </td>\r\n            <td class=\"col-md-1\" \r\n              *ngIf=\"previewS1Application?.refTypeOfMedium === 'MULTIMEDIA-STATIC' && i?.multimediaStaticMedium !== 'digital static'\">\r\n              Size\r\n            </td>\r\n            <td class=\"col-md-2\">\r\n              <input matInput \r\n                *ngIf=\"previewS1Application?.refTypeOfMedium === 'MULTIMEDIA-STATIC' && i?.multimediaStaticMedium !== 'digital static'\" \r\n                [value]=\"i?.sizeLength\" disabled>\r\n            </td>\r\n            <td class=\"col-md-5\"></td>\r\n          </tr>\r\n        </ng-container>\r\n      </ng-container>\r\n\r\n      <ng-container *ngIf=\"previewS1Application?.refTypeOfMedium === 'MULTIMEDIA-MOVING'\">\r\n        <ng-container *ngFor=\"let i of multimediaDTO.applicationMultimediaMovingList\" style=\"height: 30px;\">\r\n          <tr *ngIf=\"i?.hasSelected\">\r\n            <td class=\"col-md-4\">\r\n              <mat-checkbox [checked]=\"true\" disabled>\r\n                {{i?.multimediaMovingMedium | uppercase}}\r\n              </mat-checkbox>\r\n            </td>\r\n            <td class=\"col-md-1\" *ngIf=\"previewS1Application?.refTypeOfMedium === 'MULTIMEDIA-MOVING'\">Length</td>\r\n            <td class=\"col-md-2\">\r\n              <input matInput *ngIf=\"previewS1Application?.refTypeOfMedium === 'MULTIMEDIA-MOVING'\" [value]=\"multimediaDTO?.sizeLength\" disabled>\r\n            </td>\r\n            <td class=\"col-md-5\"></td>\r\n          </tr>\r\n        </ng-container>\r\n      </ng-container>\r\n    </table>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { AddPaymentRoutingModule } from './add-payment-routing.module';\r\nimport { AddPaymentComponent } from './add-payment.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { AngularMaterialModule } from '@shared';\r\nimport { AddPaymentPreviewApplicationComponent } from './add-payment-preview-application/add-payment-preview-application.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [AddPaymentComponent, AddPaymentPreviewApplicationComponent],\r\n  imports: [\r\n    CommonModule,\r\n    AddPaymentRoutingModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    AngularMaterialModule,\r\n  ],\r\n  exports: [\r\n    AddPaymentComponent,\r\n    AddPaymentPreviewApplicationComponent\r\n  ]\r\n})\r\nexport class AddPaymentModule { }\r\n","import { Component, OnInit, Input, ViewChild } from \"@angular/core\";\r\nimport { S1Application, Payment, AttachmentDocument } from \"@models\";\r\nimport { ApiService, SweetAlertService, DataStorageService } from \"@services\";\r\nimport {\r\n  APPLICATION_STATUSES,\r\n  ATTACHMENT_TYPE,\r\n  ENDPOINTS,\r\n  PAYMENT_MODE,\r\n  PAYMENT_STATUS,\r\n  PAYMENT_TYPE,\r\n  PAYMENT_TYPE_LIST,\r\n  SUBMISSION_TYPE,\r\n  TYPE_OF_MEDIUM,\r\n  USER_ROLES,\r\n} from \"@shared\";\r\nimport { DomSanitizer } from \"@angular/platform-browser\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\r\nimport Swal from \"sweetalert2\";\r\nimport { PaymentMethod } from \"app/core/models/payment-method.model\";\r\nimport { MatTable, MatTableDataSource } from \"@angular/material/table\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { ValidateFieldService } from \"app/core/services/validate-field.service\";\r\nimport { FileStorageService } from \"app/core/services/file.storage.service\";\r\nimport { ApplicationSingleMedia } from \"app/core/models/application-single-media.model\";\r\n\r\n@Component({\r\n  selector: \"app-add-payment\",\r\n  templateUrl: \"./add-payment.component.html\",\r\n  styleUrls: [\"./add-payment.component.scss\"],\r\n})\r\nexport class AddPaymentComponent implements OnInit {\r\n  @ViewChild(MatPaginator, { static: false }) paginator: MatPaginator;\r\n  @ViewChild(MatTable, { static: false }) table: MatTable<AddPaymentComponent>;\r\n  dataSource: MatTableDataSource<any>;\r\n  displayedColumns: string[] = [\r\n    \"referenceCode\",\r\n    \"adTitle\",\r\n    \"mediumAndLength\",\r\n    \"amount\",\r\n  ];\r\n  multipleApplicationList = [];\r\n  paymentTypeFromUrl = \"\";\r\n\r\n  @Input() s1Application = new S1Application();\r\n  attachmentDocument = new AttachmentDocument();\r\n  applicationSingleMedia = new ApplicationSingleMedia();\r\n  typeOfMediumDisplay = \"\";\r\n  paymentTypeList = [];\r\n  attachmentDocuments = [];\r\n  @Input() payment = new Payment();\r\n  paymentMethod = new PaymentMethod();\r\n  safeURL: any;\r\n  id: any;\r\n  paymentForm: FormGroup;\r\n  paymentTypeForm: FormGroup;\r\n  currentUser: any;\r\n  paymentMode: string;\r\n  selectedProofOfPayment: any;\r\n  currentDate = new Date();\r\n  paymentTemp = new Payment();\r\n  isMultiple = false;\r\n  isSpecial = false;\r\n  isForPayment = false;\r\n  isForApproval = false;\r\n  isPaymentTypeValid = false;\r\n  isDelinquent = false;\r\n  selectedFile: File;\r\n  fileSize: number;\r\n  uploadedPaymentFile: any;\r\n  isShowUploadButton = false;\r\n  previewDocument = false;\r\n\r\n  proofOfPayment = [\r\n    { id: 1, name: \"Schedule of Fees - Individual\" },\r\n    { id: 2, name: \"Schedule of Fees - Multiple\" },\r\n    { id: 3, name: \"Schedule of Fees - Special\" },\r\n    { id: 4, name: \"Settlement of Delinquent Status\" },\r\n    { id: 5, name: \"Settlement of Brand Penalties\" },\r\n    { id: 6, name: \"Settlement of Company Penalties\" },\r\n  ];\r\n  multimediaDTO: any = {};\r\n\r\n  constructor(\r\n    private apiService: ApiService,\r\n    private sanitizer: DomSanitizer,\r\n    private formBuilder: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private fileStorageService: FileStorageService,\r\n    public dataStorage: DataStorageService,\r\n    public validateFieldService: ValidateFieldService,\r\n    private spinner: NgxSpinnerService,\r\n    private sweetAlertService: SweetAlertService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.currentUser = this.dataStorage.getUserAccount();\r\n\r\n    this.paymentTypeFromUrl = this.route.snapshot.paramMap\r\n      .get(\"id\")\r\n      .split(\"-\")[0];\r\n    this.id = this.route.snapshot.paramMap.get(\"id\").split(\"-\")[1];\r\n\r\n    this.getPaymentList();\r\n    this.setFormValidator();\r\n    this.initData();\r\n  }\r\n\r\n  initData() {\r\n    if (this.paymentTypeFromUrl?.toLowerCase() === \"for_payment\") {\r\n      this.isForPayment = true;\r\n    }\r\n    if (this.paymentTypeFromUrl?.toLowerCase() === \"for_approval\") {\r\n      this.isForApproval = true;\r\n    }\r\n\r\n    if (this.route?.snapshot?.paramMap?.get(\"status\")?.includes(\"multiple-\")) {\r\n      this.isMultiple = true;\r\n      this.paymentTypeFromUrl = \"multiple\";\r\n    }\r\n    if (this.route?.snapshot?.params?.id.includes(\"special-\")) {\r\n      this.isSpecial = true;\r\n      this.paymentTypeFromUrl = \"special\";\r\n    }\r\n    if (\r\n      this.route?.snapshot?.paramMap?.get(\"status\")?.includes(\"delinquent-\")\r\n    ) {\r\n      this.isDelinquent = true;\r\n      this.paymentTypeFromUrl = \"delinquent\";\r\n    }\r\n\r\n    if (\r\n      this.id !== 0 &&\r\n      this.currentUser.userRole.name === USER_ROLES.ROLE_ACCOUNTING\r\n    ) {\r\n      if (\r\n        this.isForPayment ||\r\n        this.isSpecial ||\r\n        this.paymentTypeFromUrl?.toLowerCase() === \"unpaid\" ||\r\n        this.isMultiple\r\n      ) {\r\n        this.getPaymentDetails();\r\n      } else {\r\n        this.viewPayment();\r\n      }\r\n      if (this.isMultiple) {\r\n        this.getMultipleApplicationList();\r\n      }\r\n    }\r\n  }\r\n\r\n  setFormValidator(): void {\r\n    this.paymentForm = this.formBuilder.group({\r\n      paymentType: [\"\", Validators.required],\r\n      referenceNo: [\"\"],\r\n      amount: [\"\"],\r\n      paymentDate: [\"\"],\r\n      bankName: [\"\"],\r\n      bankBranch: [\"\"],\r\n      controlNo: [\"\"],\r\n      referenceNumber: [\"\"],\r\n      typeOfMaterial: [\"\"],\r\n      length: [\"\"],\r\n      baseRate: [\"\"],\r\n      vat: [\"\"],\r\n      total: [\"\"],\r\n      remarks: [\"\"],\r\n      applicantCompanyDetails: [\"\"],\r\n      accumulatedAmountToBeSettled: [\"\"],\r\n      clientCompanyDetails: [\"\"],\r\n      discount: [\"\"],\r\n      amountReceive: [\"\"],\r\n      filedBirForm: [\"\"],\r\n      withholdingTax: [0],\r\n      orNo: [\"\"],\r\n      ccConfirmationCode: [\"\"],\r\n      checkNo: [\"\"],\r\n    });\r\n  }\r\n\r\n  approvePenalty() {\r\n    if (this.paymentMethod.amount < this.payment.amountDue) {\r\n      this.sweetAlertService.customErrorMessage(\r\n        `Amount Received/Transferred is lower than Amount Due.`\r\n      );\r\n    } else {\r\n      Swal.fire({\r\n        text: \"Are you sure you want to approve this Delinquent Company?\",\r\n        icon: \"question\",\r\n        showCancelButton: true,\r\n        confirmButtonColor: \"#3085d6\",\r\n        cancelButtonColor: \"#d33\",\r\n        confirmButtonText: \"Confirm\",\r\n      }).then((result) => {\r\n        if (result.value) {\r\n          this.payment.paymentMethod = this.paymentMethod;\r\n          this.payment.amountReceive = Number(this.paymentMethod.amount);\r\n\r\n          this.apiService\r\n            .save(`${ENDPOINTS.approveDelinquentCompany}`, this.payment)\r\n            .subscribe(\r\n              (res: any) => {\r\n                this.sweetAlertService.customSuccessMessage(\r\n                  \"Delinquent company approved successfully.\"\r\n                );\r\n                this.router.navigate([\r\n                  \"asc/page/accounting/payments/\",\r\n                  \"delinquent-companies\",\r\n                ]);\r\n              },\r\n              (err) => {\r\n                if (!err.error.message) {\r\n                  err.error.message = err.error.responseMessage;\r\n                }\r\n                this.sweetAlertService.error(err);\r\n              }\r\n            );\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  paymentTypevalidator() {\r\n    let a = this.paymentMethod;\r\n    let b = this.paymentMethod?.paymentType?.paymentDescription;\r\n    if (b === PAYMENT_MODE.GCASH || b === PAYMENT_MODE.CASH) {\r\n      if (\r\n        a.referenceNo && a.paymentDate && a.amount\r\n          ? (this.isPaymentTypeValid = true)\r\n          : (this.isPaymentTypeValid = false)\r\n      ) {\r\n      }\r\n    } else if (b === PAYMENT_MODE.PAYMAYA) {\r\n      if (\r\n        a.referenceNo && a.paymentDate && a.amount && a.ccConfirmationCode\r\n          ? (this.isPaymentTypeValid = true)\r\n          : (this.isPaymentTypeValid = false)\r\n      ) {\r\n      }\r\n    } else if (b === PAYMENT_MODE.BANK) {\r\n      if (\r\n        a.bankName && a.paymentDate && a.amount && a.bankBranch\r\n          ? (this.isPaymentTypeValid = true)\r\n          : (this.isPaymentTypeValid = false)\r\n      ) {\r\n      }\r\n    } else if (b === PAYMENT_MODE.VOUCHER) {\r\n      if (\r\n        a.controlNo\r\n          ? (this.isPaymentTypeValid = true)\r\n          : (this.isPaymentTypeValid = false)\r\n      ) {\r\n      }\r\n    } else if (b === PAYMENT_MODE.CHECK) {\r\n      if (\r\n        a.bankName && a.checkNo && a.amount\r\n          ? (this.isPaymentTypeValid = true)\r\n          : (this.isPaymentTypeValid = false)\r\n      ) {\r\n      }\r\n    }\r\n  }\r\n\r\n  resetPaymentTypeValidation() {\r\n    this.isPaymentTypeValid = false;\r\n    if (\r\n      this.paymentMethod?.paymentType?.paymentDescription ===\r\n      PAYMENT_MODE.PROMISORRY_NOTE\r\n    ) {\r\n      this.isPaymentTypeValid = true;\r\n    }\r\n  }\r\n\r\n  getPaymentDetails() {\r\n    let endpoint = ENDPOINTS.paymentDetails;\r\n    if (this.isMultiple) {\r\n      if (this.isForPayment) {\r\n        endpoint = ENDPOINTS.multiplePaymentDetails;\r\n      } else {\r\n        endpoint = ENDPOINTS.paymentMultipleMonitoring + `?groupId=`;\r\n      }\r\n    }\r\n    if (this.isSpecial) {\r\n      if (this.isForPayment) {\r\n        endpoint = ENDPOINTS.specialPaymentDetails;\r\n      } else {\r\n        endpoint = ENDPOINTS.paymentSpecial;\r\n      }\r\n    }\r\n\r\n    this.apiService.findAll(endpoint + this.id).subscribe((res: any) => {\r\n      if (res.responseData) {\r\n        this.payment = res.responseData.data;\r\n        this.payment\r\n          ? (this.payment.filedBirForm = this.payment.filedBirForm\r\n              ? this.payment.filedBirForm\r\n              : false)\r\n          : null;\r\n        this.paymentMethod = this.payment?.paymentMethod\r\n          ? this.payment.paymentMethod\r\n          : new PaymentMethod();\r\n      } else if (res.data) {\r\n        this.payment = res.data[0];\r\n        this.payment\r\n          ? (this.payment.filedBirForm = this.payment.filedBirForm\r\n              ? this.payment.filedBirForm\r\n              : false)\r\n          : null;\r\n        this.paymentMethod = this.payment?.paymentMethod\r\n          ? this.payment.paymentMethod\r\n          : new PaymentMethod();\r\n      } else {\r\n        this.payment = res;\r\n        this.payment\r\n          ? (this.payment.filedBirForm = this.payment.filedBirForm\r\n              ? this.payment.filedBirForm\r\n              : false)\r\n          : null;\r\n        this.paymentMethod = this.payment?.paymentMethod\r\n          ? this.payment.paymentMethod\r\n          : new PaymentMethod();\r\n      }\r\n\r\n      switch (\r\n        this.payment?.applicationForm?.refTypeOfMedium ||\r\n        this.payment?.applicationFormS2?.applicationForm?.refTypeOfMedium\r\n      ) {\r\n        case \"SINGLE MEDIA\":\r\n          this.getApplicationSingleMedia();\r\n          break;\r\n        case \"MULTIMEDIA-MOVING\":\r\n          this.getMultimediaMoving();\r\n          this.fetchMultimedia();\r\n          break;\r\n        case \"MULTIMEDIA-STATIC\":\r\n          this.getMultimediaStatic();\r\n          this.fetchMultimedia();\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n\r\n      if (this.payment?.paymentAttachmentReference) {\r\n        this.getAttachmentDocumentDisplay(\r\n          this.payment.paymentAttachmentReference\r\n        );\r\n      }\r\n\r\n      // this.paymentTemp = this.payment;\r\n    });\r\n  }\r\n\r\n  getPaymentList() {\r\n    this.apiService.findAll(ENDPOINTS.paymentType).subscribe((res: any) => {\r\n      this.paymentTypeList = res.responseData.data;\r\n      if (this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT) {\r\n        const creditCardIndex = this.paymentTypeList.findIndex(\r\n          (element) => element.paymentDescription === \"Credit Card\"\r\n        );\r\n        this.paymentTypeList.splice(creditCardIndex, 1);\r\n      }\r\n    });\r\n  }\r\n\r\n  viewPayment() {\r\n    let endpoint = `${ENDPOINTS.payment}/application-form-id`;\r\n    if (this.isMultiple) {\r\n      if (this.isForPayment) {\r\n        endpoint = `${ENDPOINTS.paymentMultiple}/payment-multiple-details/multiple-application-id`;\r\n      } else if (this.isForApproval) {\r\n        endpoint = ENDPOINTS.paymentMultipleMonitoring;\r\n      }\r\n    } else {\r\n      if (this.paymentTypeFromUrl?.toLowerCase() === \"for_payment\") {\r\n        if (this.currentUser.userRole.name === USER_ROLES.ROLE_ACCOUNTING) {\r\n          endpoint = `${ENDPOINTS.paymentDetailsAccounting}`;\r\n        } else {\r\n          endpoint = `${ENDPOINTS.paymentDetails}`;\r\n        }\r\n      }\r\n    }\r\n\r\n    this.apiService.findByParam(endpoint, this.id).subscribe((res: any) => {\r\n      if (res.responseData) {\r\n        this.payment = res.responseData.data;\r\n        if (this.payment) {\r\n          this.payment.filedBirForm = this.payment.filedBirForm\r\n            ? this.payment.filedBirForm\r\n            : false;\r\n        }\r\n      } else {\r\n        this.payment = res;\r\n        if (this.payment) {\r\n          this.payment.filedBirForm = this.payment.filedBirForm\r\n            ? this.payment.filedBirForm\r\n            : false;\r\n        }\r\n      }\r\n\r\n      this.paymentMethod = this.payment?.paymentMethod\r\n        ? this.payment.paymentMethod\r\n        : new PaymentMethod();\r\n      this.paymentMode = this.paymentMethod?.paymentType?.paymentDescription;\r\n      // this.paymentTemp = this.payment;\r\n\r\n      if (this.payment?.paymentAttachmentReference) {\r\n        this.getAttachmentDocumentDisplay(\r\n          this.payment.paymentAttachmentReference\r\n        );\r\n      }\r\n\r\n      switch (\r\n        this.payment?.applicationForm?.refTypeOfMedium ||\r\n        this.payment?.applicationFormS2?.applicationForm?.refTypeOfMedium\r\n      ) {\r\n        case \"SINGLE MEDIA\":\r\n          this.getApplicationSingleMedia();\r\n          break;\r\n        case \"MULTIMEDIA-MOVING\":\r\n          this.getMultimediaMoving();\r\n          this.fetchMultimedia();\r\n          break;\r\n        case \"MULTIMEDIA-STATIC\":\r\n          this.getMultimediaStatic();\r\n          this.fetchMultimedia();\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    });\r\n  }\r\n\r\n  getAttachmentDocumentDisplay(paymentAttachmentReference) {\r\n    this.apiService\r\n      .findByParam(\r\n        ENDPOINTS.attachmentDocument,\r\n        `payment-attachment-reference/` + paymentAttachmentReference\r\n      )\r\n      .subscribe(\r\n        (res1: any) => {\r\n          if (res1.responseData.data) {\r\n            this.attachmentDocuments = res1.responseData.data;\r\n            this.attachmentDocument = res1.responseData.data;\r\n            this.safeURL = this.sanitizer.bypassSecurityTrustResourceUrl(\r\n              this.attachmentDocument.fileURL\r\n            );\r\n            // console.log('view attachmentDocument: ', this.attachmentDocuments);\r\n          }\r\n        },\r\n        (err: any) => {\r\n          this.attachmentDocuments = [];\r\n        }\r\n      );\r\n  }\r\n\r\n  getMultipleApplicationList() {\r\n    this.apiService\r\n      .findAll(ENDPOINTS.getMultipleAppFormsWithNoRejected + this.id)\r\n      .subscribe(\r\n        (res: any) => {\r\n          this.multipleApplicationList = res.responseData.data;\r\n\r\n          this.multipleApplicationList.forEach((multipleApplication) => {\r\n            switch (\r\n              multipleApplication?.refTypeOfMedium ||\r\n              multipleApplication?.applicationFormS2?.applicationForm\r\n                ?.refTypeOfMedium\r\n            ) {\r\n              case \"SINGLE MEDIA\":\r\n                this.getApplicationSingleMedia(\r\n                  multipleApplication?.appFormReference\r\n                );\r\n                break;\r\n              case \"MULTIMEDIA-MOVING\":\r\n                this.getMultimediaMoving(multipleApplication?.appFormReference);\r\n                break;\r\n              case \"MULTIMEDIA-STATIC\":\r\n                this.getMultimediaStatic(multipleApplication?.appFormReference);\r\n                break;\r\n              default:\r\n                break;\r\n            }\r\n          });\r\n\r\n          this.dataSource = new MatTableDataSource<any>(\r\n            this.multipleApplicationList\r\n          );\r\n          this.dataSource.paginator = this.paginator;\r\n          if (this.multipleApplicationList.length) {\r\n            this.payment.multipleApplication = this.multipleApplicationList[0].multipleApplication;\r\n          }\r\n        },\r\n        (err: any) => {\r\n          this.sweetAlertService.error(err);\r\n        }\r\n      );\r\n  }\r\n\r\n  processPayment(remarks) {\r\n    const amountTransferred = Number.parseFloat(\r\n      this.paymentMethod?.amount?.toString()\r\n    );\r\n    const toPay = +Number(this.payment.amountDue - this.payment?.withholdingTax)?.toFixed(2);\r\n\r\n    if (\r\n      this.paymentMethod.paymentType.paymentDescription === \"Voucher\" ||\r\n      this.paymentMethod.paymentType.paymentDescription === \"Promisorry Note\" ||\r\n      (this.paymentMethod.paymentType.paymentDescription !== \"Voucher\" &&\r\n        this.paymentMethod.paymentType.paymentDescription !==\r\n          \"Promisorry Note\" &&\r\n        amountTransferred >= toPay)\r\n    ) {\r\n      Swal.fire({\r\n        text: \"Are you sure you want to process this PAYMENT?\",\r\n        icon: \"question\",\r\n        showCancelButton: true,\r\n        confirmButtonColor: \"#3085d6\",\r\n        cancelButtonColor: \"#d33\",\r\n        confirmButtonText: \"Confirm\",\r\n      }).then((result) => {\r\n        if (result.value) {\r\n          this.payment.paymentStatus = PAYMENT_STATUS.PAID;\r\n          this.payment.paymentDate = new Date();\r\n          this.payment.paymentMethod = this.paymentMethod;\r\n          this.payment.amountReceive = this.paymentMethod.amount;\r\n          this.payment.amountDue = toPay;\r\n          // this.payment.paymentAttachmentReference = this.attachmentDocument.paymentAttachmentReference;\r\n\r\n          let endpoint = ENDPOINTS.accountingPaymentApprove;\r\n          if (this.isMultiple) {\r\n            endpoint = ENDPOINTS.accountingMultiplePaymentApprove;\r\n          } else if (this.isSpecial) {\r\n            endpoint = ENDPOINTS.accountingSpecialPaymentApprove;\r\n          }\r\n          this.apiService.save(endpoint, this.payment).subscribe((res: any) => {\r\n            this.sweetAlertService.customSuccessMessage(\r\n              \"Payment successfully processed.\"\r\n            );\r\n            // console.log('SAVED DATA: ', res);\r\n            this.router.navigate([\r\n              \"asc/page/accounting/payments/\",\r\n              `schedule-of-fees-${this.paymentTypeFromUrl}`,\r\n            ]);\r\n          });\r\n        }\r\n      });\r\n    } else {\r\n      this.sweetAlertService.customErrorMessage(\r\n        `Amount Received/Transferred is lower than Amount Due.`\r\n      );\r\n    }\r\n  }\r\n\r\n  comparePaymentType(value: any, selected: any): boolean {\r\n    if (value && selected) {\r\n      return value.paymentDescription === selected.paymentDescription;\r\n    }\r\n  }\r\n\r\n  selectProofOfPayment(res) {\r\n    this.selectedProofOfPayment = res;\r\n  }\r\n\r\n  // recompute() {\r\n  //   console.log('trigerring recompute... ', this.payment);\r\n\r\n  //   this.paymentTemp = this.payment;\r\n  //   let endpoint = ENDPOINTS.accountingRecompute;\r\n  //   if (this.isMultiple) {\r\n  //     endpoint = ENDPOINTS.accountingRecomputeMultiple;\r\n  //   } else if (this.isSpecial) {\r\n  //     endpoint = ENDPOINTS.accountingSpecialPaymentRecompute;\r\n  //   }\r\n  //   console.log('paymentMethod - ', this.paymentMethod);\r\n  //   this.payment.paymentMethod = this.paymentMethod;\r\n  //   this.payment.paymentDate = new Date();\r\n  //   this.payment.filename = this.attachmentDocument.filename;\r\n  //   this.payment.amountReceive = this.paymentMethod.amount;\r\n  //   this.payment.paymentAttachmentReference = this.attachmentDocument.paymentAttachmentReference;\r\n\r\n  //   this.apiService.save(endpoint, this.payment).subscribe((res: any) => {\r\n  //     this.payment = res;\r\n  //     this.payment.basicRate = this.paymentTemp.basicRate;\r\n  //     this.payment.vat = this.paymentTemp.vat;\r\n  //     this.payment.amountDue = this.paymentTemp.amountDue;\r\n  //     console.log('payment... ', this.payment);\r\n  //   }, (err: any) => {\r\n  //   });\r\n  // }\r\n\r\n  computeWithholding() {\r\n    if (this.payment) {\r\n      this.payment.withholdingTax = this.payment?.filedBirForm\r\n        ? this.payment.basicRate * 0.02\r\n        : 0;\r\n    }\r\n  }\r\n\r\n  getAmountDue(): number {\r\n    let amountDue = this.payment?.amountDue;\r\n    let withholding = this.payment?.withholdingTax;\r\n    let result = amountDue - withholding;\r\n    return result ? result : 0;\r\n  }\r\n\r\n  validatePaymentStatus(): boolean {\r\n    if (\r\n      this.payment?.paymentStatus !== PAYMENT_STATUS.PAID &&\r\n      this.payment?.paymentStatus !== PAYMENT_STATUS.UNPAID\r\n    ) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  comparePaymentMethod(value: any, selected: any): boolean {\r\n    if (value && selected) {\r\n      return value.paymentDescription === selected.paymentDescription;\r\n    }\r\n  }\r\n\r\n  selectFile(event) {\r\n    this.isShowUploadButton = false;\r\n\r\n    if (event.target.files[0]) {\r\n      this.fileSize = event.target.files[0].size;\r\n\r\n      if (this.fileSize > 15000000) {\r\n        this.sweetAlertService.customErrorMessage(\r\n          `Attachments' total file size should not exceed 15MB.`\r\n        );\r\n        event.target.value = \"\";\r\n        return;\r\n      } else {\r\n        this.isShowUploadButton = true;\r\n        const fileURL = URL.createObjectURL(event.target.files[0]);\r\n        this.previewDocument = true;\r\n\r\n        this.safeURL = this.sanitizer.bypassSecurityTrustResourceUrl(fileURL);\r\n\r\n        const reader = new FileReader();\r\n        const [file] = event.target.files;\r\n\r\n        reader.readAsDataURL(file);\r\n        reader.onload = () => {};\r\n\r\n        this.selectedFile = event.target.files[0];\r\n      }\r\n    }\r\n  }\r\n\r\n  viewDocument() {\r\n    if (this.uploadedPaymentFile) {\r\n      window.open(this.uploadedPaymentFile.fileURL);\r\n    } else {\r\n      window.open(this.attachmentDocument.fileURL);\r\n    }\r\n  }\r\n\r\n  uploadProofOfPayment() {\r\n    Swal.fire({\r\n      text: \"Are you sure you want to submit this as proof of payment?\",\r\n      icon: \"question\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Confirm\",\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.spinner.show();\r\n        let params = \"\";\r\n        params =\r\n          \"?&attachmentType=\" +\r\n          ATTACHMENT_TYPE.PAYMENT +\r\n          \"&submissionType=\" +\r\n          SUBMISSION_TYPE.ORIGINAL;\r\n        this.fileStorageService\r\n          .pushFileToStorage(\r\n            ENDPOINTS.attachmentDocument,\r\n            this.selectedFile,\r\n            params\r\n          )\r\n          .subscribe(\r\n            (res: any) => {\r\n              this.uploadedPaymentFile = res.responseData.data;\r\n              this.payment.paymentAttachmentReference = this.uploadedPaymentFile.paymentAttachmentReference;\r\n              this.addToAttachmentDocuments(this.uploadedPaymentFile);\r\n\r\n              this.hideSpinner();\r\n              this.sweetAlertService.customSuccessMessage(\r\n                \"Attachment successfully uploaded.\"\r\n              );\r\n              this.selectedFile = null;\r\n\r\n              this.getAttachmentDocument();\r\n            },\r\n            (err: any) => {\r\n              this.hideSpinner();\r\n              this.sweetAlertService.error(err);\r\n            },\r\n            () => {\r\n              // actions after subscription\r\n            }\r\n          );\r\n      } else {\r\n        this.selectedFile = null;\r\n      }\r\n    });\r\n  }\r\n\r\n  addToAttachmentDocuments(obj: any) {\r\n    this.attachmentDocument.paymentAttachmentReference =\r\n      obj.paymentAttachmentReference;\r\n    this.attachmentDocument.id = obj.id;\r\n    this.attachmentDocument.originalFilename = obj.originalFilename;\r\n    this.attachmentDocument.filename = obj.filename;\r\n    this.attachmentDocument.fileExtension = obj.fileExtension;\r\n    this.attachmentDocument.fileURL = obj.fileURL;\r\n    this.attachmentDocument.attachmentType = obj.attachmentType;\r\n    this.attachmentDocument.documentFormat = obj.documentFormat;\r\n  }\r\n\r\n  hideSpinner() {\r\n    setTimeout(() => {\r\n      this.spinner.hide();\r\n    }, 1);\r\n  }\r\n\r\n  getAttachmentDocument() {\r\n    this.spinner.show();\r\n\r\n    this.apiService\r\n      .findByParam(\r\n        ENDPOINTS.paymentAttachmentReference,\r\n        this.attachmentDocument.paymentAttachmentReference\r\n      )\r\n      .subscribe(\r\n        (res: any) => {\r\n          if (res) {\r\n            this.attachmentDocument = res.responseData.data;\r\n          }\r\n          this.hideSpinner();\r\n        },\r\n        (err: any) => {\r\n          this.hideSpinner();\r\n          console.error(err);\r\n        }\r\n      );\r\n  }\r\n\r\n  getAttachmentDocuments() {\r\n    this.apiService\r\n      .findByParam(\r\n        ENDPOINTS.attachmentDocument,\r\n        `brand-penalty-attachment-reference/${this.payment.paymentAttachmentReference}`\r\n      )\r\n      .subscribe((res: any) => {\r\n        if (res) {\r\n          this.attachmentDocument = res;\r\n        }\r\n        this.previewDocument = true;\r\n        this.safeURL = this.sanitizer.bypassSecurityTrustResourceUrl(\r\n          this.attachmentDocument.fileURL\r\n        );\r\n      });\r\n  }\r\n\r\n  navigateToList() {\r\n    if (\r\n      this.payment.paymentStatus === PAYMENT_STATUS.PAID ||\r\n      this.payment.paymentStatus === PAYMENT_STATUS.UNPAID\r\n    ) {\r\n      if (this.paymentTypeFromUrl) {\r\n        this.router.navigate([\r\n          \"asc/page/accounting/payments/\",\r\n          `schedule-of-fees-${this.paymentTypeFromUrl}`,\r\n        ]);\r\n      } else {\r\n        this.router.navigate([\"asc/page/accounting/payments/\"]);\r\n      }\r\n    } else {\r\n      Swal.fire({\r\n        text: \"Are you sure you want to go back to payment list?\",\r\n        icon: \"question\",\r\n        showCancelButton: true,\r\n        confirmButtonColor: \"#3085d6\",\r\n        cancelButtonColor: \"#d33\",\r\n        confirmButtonText: \"Confirm\",\r\n      }).then((result) => {\r\n        if (result.value) {\r\n          if (this.paymentTypeFromUrl) {\r\n            this.router.navigate([\r\n              \"asc/page/accounting/payments/\",\r\n              `schedule-of-fees-${this.paymentTypeFromUrl}`,\r\n            ]);\r\n          } else {\r\n            this.router.navigate([\"asc/page/accounting/payments/\"]);\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  getApplicationSingleMedia(\r\n    appFormReference = this.payment?.applicationForm?.appFormReference\r\n  ) {\r\n    if (this.payment?.applicationFormS2?.applicationForm?.refTypeOfMedium) {\r\n      appFormReference = this.payment?.applicationFormS2?.applicationForm\r\n        ?.appFormReference;\r\n    }\r\n    this.apiService\r\n      .findByParam(\r\n        ENDPOINTS.applicationSingleMedia,\r\n        `app-form-reference/${appFormReference}`\r\n      )\r\n      .subscribe(\r\n        (res: any) => {\r\n          if (res.responseData.data.length > 0) {\r\n            this.applicationSingleMedia = res.responseData.data[0];\r\n\r\n            this.typeOfMediumDisplay = `${this.applicationSingleMedia?.mediumExecution?.typeOfMedium?.description} (${this.applicationSingleMedia?.sizeLength})`;\r\n            if (this.isMultiple) {\r\n              this.multipleApplicationList.forEach((element, index) => {\r\n                if (element.appFormReference === appFormReference) {\r\n                  this.multipleApplicationList[index] = {\r\n                    ...this.multipleApplicationList[index],\r\n                    typeOfMediumDisplay: this.typeOfMediumDisplay,\r\n                  };\r\n                }\r\n              });\r\n              this.dataSource = new MatTableDataSource<any>(\r\n                this.multipleApplicationList\r\n              );\r\n              this.dataSource.paginator = this.paginator;\r\n            }\r\n          } else {\r\n            this.applicationSingleMedia = new ApplicationSingleMedia();\r\n            this.typeOfMediumDisplay = \"\";\r\n          }\r\n        },\r\n        (err: any) => {\r\n          this.applicationSingleMedia = new ApplicationSingleMedia();\r\n          this.typeOfMediumDisplay = \"\";\r\n        }\r\n      );\r\n  }\r\n\r\n  getMultimediaStatic(\r\n    appFormReference = this.payment?.applicationForm?.appFormReference\r\n  ) {\r\n    this.apiService\r\n      .findByParam(\r\n        ENDPOINTS.applicationMultimedia,\r\n        `app-form-reference/${appFormReference}`\r\n      )\r\n      .subscribe(\r\n        (res: any) => {\r\n          if (res.responseData.data.length > 0) {\r\n            const multimediaList = new Set(\r\n              res.responseData.data.map(\r\n                (mappedList) =>\r\n                  `${mappedList?.typeOfMedium?.description} (${mappedList?.multimediaSizeLength})`\r\n              )\r\n            );\r\n\r\n            this.typeOfMediumDisplay = \"\";\r\n            let mediaCtrl = 1;\r\n            for (const media of multimediaList) {\r\n              if (mediaCtrl !== multimediaList.size) {\r\n                this.typeOfMediumDisplay += `${media}, `;\r\n                mediaCtrl++;\r\n              } else {\r\n                this.typeOfMediumDisplay += media;\r\n              }\r\n            }\r\n\r\n            if (this.isMultiple) {\r\n              this.multipleApplicationList.forEach((element, index) => {\r\n                if (element.appFormReference === appFormReference) {\r\n                  this.multipleApplicationList[index] = {\r\n                    ...this.multipleApplicationList[index],\r\n                    typeOfMediumDisplay: this.typeOfMediumDisplay,\r\n                  };\r\n                }\r\n              });\r\n              this.dataSource = new MatTableDataSource<any>(\r\n                this.multipleApplicationList\r\n              );\r\n              this.dataSource.paginator = this.paginator;\r\n            }\r\n          } else {\r\n            this.typeOfMediumDisplay = \"\";\r\n          }\r\n        },\r\n        (err: any) => {\r\n          this.typeOfMediumDisplay = \"\";\r\n        }\r\n      );\r\n  }\r\n\r\n  getMultimediaMoving(\r\n    appFormReference = this.payment?.applicationForm?.appFormReference\r\n  ) {\r\n    this.apiService\r\n      .findByParam(\r\n        ENDPOINTS.applicationMultimedia,\r\n        `app-form-reference/${appFormReference}`\r\n      )\r\n      .subscribe(\r\n        (res: any) => {\r\n          if (res.responseData.data.length > 0) {\r\n            const multimediaList = new Set(\r\n              res.responseData.data.map(\r\n                (mappedList) =>\r\n                  `${mappedList?.typeOfMedium?.description} (${mappedList?.multimediaSizeLength})`\r\n              )\r\n            );\r\n\r\n            this.typeOfMediumDisplay = \"\";\r\n            let mediaCtrl = 1;\r\n            for (const media of multimediaList) {\r\n              if (mediaCtrl !== multimediaList.size) {\r\n                this.typeOfMediumDisplay += `${media}, `;\r\n                mediaCtrl++;\r\n              } else {\r\n                this.typeOfMediumDisplay += media;\r\n              }\r\n            }\r\n\r\n            if (this.isMultiple) {\r\n              this.multipleApplicationList.forEach((element, index) => {\r\n                if (element.appFormReference === appFormReference) {\r\n                  this.multipleApplicationList[index] = {\r\n                    ...this.multipleApplicationList[index],\r\n                    typeOfMediumDisplay: this.typeOfMediumDisplay,\r\n                  };\r\n                }\r\n              });\r\n              this.dataSource = new MatTableDataSource<any>(\r\n                this.multipleApplicationList\r\n              );\r\n              this.dataSource.paginator = this.paginator;\r\n            }\r\n          } else {\r\n            this.typeOfMediumDisplay = \"\";\r\n          }\r\n        },\r\n        (err: any) => {\r\n          this.typeOfMediumDisplay = \"\";\r\n        }\r\n      );\r\n  }\r\n\r\n  rejectPayment() {\r\n    Swal.fire({\r\n      text: \"Are you sure you want to reject this roof of payment?\",\r\n      icon: \"question\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Confirm\",\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.spinner.show();\r\n\r\n        let rejectEndpoint = ENDPOINTS.accountingReject;\r\n        if (this.isMultiple) {\r\n          rejectEndpoint = ENDPOINTS.accountingRejectMultiple;\r\n        } else if (this.isSpecial) {\r\n          rejectEndpoint = ENDPOINTS.accountingRejectSpecial;\r\n        }\r\n\r\n        this.apiService.save(rejectEndpoint, this.payment).subscribe(\r\n          (res: any) => {\r\n            this.hideSpinner();\r\n            this.sweetAlertService.customSuccessMessage(\r\n              \"Successfully rejected.\"\r\n            );\r\n\r\n            if (this.paymentTypeFromUrl) {\r\n              this.router.navigate([\r\n                \"asc/page/accounting/payments/\",\r\n                `schedule-of-fees-${this.paymentTypeFromUrl}`,\r\n              ]);\r\n            } else {\r\n              this.router.navigate([\"asc/page/accounting/payments/\"]);\r\n            }\r\n          },\r\n          (err: any) => {\r\n            this.hideSpinner();\r\n            this.sweetAlertService.error(err);\r\n          },\r\n          () => {\r\n            // actions after subscription\r\n          }\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  fetchMultimedia(): void {\r\n    let typeofMedium =\r\n      this.payment?.applicationForm.refTypeOfMedium ===\r\n      TYPE_OF_MEDIUM.MULTIMEDIA_MOVING\r\n        ? \"moving\"\r\n        : \"static\";\r\n    let endpoint =\r\n      ENDPOINTS.applicationMultimedia +\r\n      \"-\" +\r\n      typeofMedium +\r\n      \"/app-form-reference\";\r\n    this.apiService\r\n      .findByParam(endpoint, this.payment?.applicationForm.appFormReference)\r\n      .subscribe((multimedia) => {\r\n        if (multimedia) this.multimediaDTO = multimedia.responseData.data;\r\n      });\r\n  }\r\n}\r\n","<form>\r\n  <div class=\"container-fluid\">\r\n    <div class=\"row\" *ngIf=\"currentUser?.userRole.name=='ROLE_ACCOUNTING'\">\r\n      <div class=\"col-md-12 title\">\r\n        <mat-label>\r\n          <mat-icon>payment</mat-icon> PAYMENT\r\n        </mat-label>\r\n\r\n        <button class=\"button-right button-red\" mat-raised-button (click)=\"navigateToList()\">\r\n          <mat-icon>list</mat-icon> VIEW LIST OF PAYMENT\r\n        </button>\r\n      </div>\r\n    </div>\r\n    <div class=\"row mt-3\">\r\n      <mat-accordion class=\"headers-align\">\r\n        <mat-expansion-panel>\r\n          <mat-expansion-panel-header>\r\n            <mat-panel-title>\r\n              <i class=\"material-icons\">label_important</i> &nbsp;Preview\r\n            </mat-panel-title>\r\n            <mat-panel-description>\r\n              Application Details\r\n              <i class=\"material-icons\">visibility</i>\r\n            </mat-panel-description>\r\n          </mat-expansion-panel-header>\r\n          <br>\r\n          <app-add-payment-preview-application [previewS1Application]=\"payment?.applicationForm || payment?.multipleApplication\" [multimediaDTO]=\"multimediaDTO\"></app-add-payment-preview-application>\r\n        </mat-expansion-panel>\r\n      </mat-accordion>\r\n    </div>\r\n    <hr>\r\n\r\n    <form [formGroup]=\"paymentForm\">\r\n      <div class=\"row fields\">\r\n        <div class=\"col-md-12 title\" *ngIf=\"currentUser?.userRole?.name!='ROLE_ACCOUNTING'\">\r\n          <mat-label>\r\n            <mat-icon>payment</mat-icon>\r\n            {{payment?.paymentStatus!='PAID'&&safeURL!=undefined ? 'FOR APPROVAL' : payment?.paymentStatus}}\r\n          </mat-label>\r\n        </div>\r\n\r\n        <!--///////////////////////// ACCOUNTING /////////////////////////////-->\r\n        <div class=\"row\" *ngIf=\"currentUser.userRole.name=='ROLE_ACCOUNTING'\">\r\n          <mat-form-field class=\"col-md-6\" appearance=\"outline\">\r\n            <mat-label>Type Of Payment</mat-label>\r\n            <input matInput value=\"Schedule of Fees\" readonly>\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div class=\"col-md-6\" appearance=\"outline\">\r\n          <div class=\"col-md-12\" appearance=\"outline\" *ngIf=\"isForPayment || paymentTypeFromUrl === 'paid' || safeURL \">\r\n            <mat-label>Filename: </mat-label>\r\n            <br>\r\n            <input matInput [value]=\"attachmentDocument.originalFilename\" disabled\r\n              *ngIf=\"attachmentDocument.originalFilename\">\r\n            <input class=\"file-upload\" type=\"file\"\r\n              *ngIf=\"!attachmentDocument.originalFilename && this.paymentTypeFromUrl !== 'paid'\" accept=\".pdf\"\r\n              (change)=\"selectFile($event)\">\r\n            <br><br>\r\n          </div>\r\n\r\n          <div class=\"col-md-12\" appearance=\"outline\"\r\n            *ngIf=\"(isForPayment || this.paymentTypeFromUrl === 'paid' || safeURL) && (attachmentDocument?.paymentAttachmentReference || isShowUploadButton)\">\r\n\r\n            <button mat-raised-button class=\"button-red button-right\" (click)=\"viewDocument()\"\r\n              *ngIf=\"attachmentDocument?.paymentAttachmentReference\">\r\n              <mat-icon>open_in_new</mat-icon> VIEW DOCUMENT\r\n            </button>\r\n\r\n            &nbsp; &nbsp;\r\n\r\n            <button mat-raised-button class=\"button-red button-right\" (click)=\"uploadProofOfPayment()\"\r\n              [disabled]=\"!safeURL||!isShowUploadButton\"\r\n              *ngIf=\"isShowUploadButton && !attachmentDocument.originalFilename\">\r\n              <mat-icon>upload</mat-icon> UPLOAD\r\n            </button>\r\n            <br><br>\r\n          </div>\r\n          <div class=\"file-upload\" style=\"border: 1px solid red\" *ngIf=\"safeURL\"\r\n            [hidden]=\"payment?.paymentStatus === 'PAID' || payment?.paymentStatus === 'UNPAID'\">\r\n            <object [data]=\"safeURL\" type=\"application/pdf\" width=\"100%\" height=\"500\">\r\n              <iframe [src]=\"safeURL\" width=\"100%\" height=\"500\">\r\n                <p>This browser does not support PDF!</p>\r\n              </iframe>\r\n            </object>\r\n          </div>\r\n          <br>\r\n          <div class=\"row\">\r\n            <mat-form-field class=\"col-md-12\" appearance=\"outline\" [hidden]=\"isMultiple\">\r\n              <mat-label>Reference Number</mat-label>\r\n              <input matInput\r\n                [value]=\"payment?.applicationForm?.referenceCode || payment?.applicationFormS2?.applicationForm?.referenceCode\"\r\n                readonly>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n              <mat-label>Advertiser</mat-label>\r\n              <input matInput name=\"companyName\" readonly\r\n                [value]=\"payment?.applicationForm?.company?.companyName || payment?.multipleApplication?.company?.companyName || payment?.applicationFormS2?.applicationForm?.company?.companyName\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field class=\"col-md-12\" appearance=\"outline\" [hidden]=\"isMultiple\">\r\n              <mat-label>Ad Title - Medium (Length)</mat-label>\r\n              <textarea matInput name=\"refTypeOfMedium\"\r\n                [value]=\"payment?.applicationForm?.adTitle ? payment?.applicationForm?.adTitle + ' - ' + typeOfMediumDisplay : typeOfMediumDisplay || payment?.applicationFormS2?.applicationForm?.adTitle + ' - ' + typeOfMediumDisplay || payment?.applicationFormS2?.applicationForm?.adTitle + ' - ' + typeOfMediumDisplay\"\r\n                readonly></textarea>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n              <mat-label>Vatable Sales</mat-label>\r\n              <input class=\"numbers-input\" matInput [value]=\"payment?.basicRate | number : '1.2-2'\" readonly\r\n                step=\"0.01\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n              <mat-label>VAT</mat-label>\r\n              <input class=\"numbers-input\" matInput [value]=\"payment?.vat | number : '1.2-2'\" readonly>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n              <mat-label>Total Sales (VAT Inclusive)</mat-label>\r\n              <input class=\"numbers-input total\" matInput name=\"amount\" [value]=\"payment?.amountDue | number : '1.2-2'\"\r\n                readonly>\r\n            </mat-form-field>\r\n\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"col-md-6\" [hidden]=\"payment?.paymentStatus!='PAID'&&currentUser?.userRole?.name!='ROLE_ACCOUNTING'\">\r\n\r\n          <div class=\"row\">\r\n            <div *ngIf=\"isMultiple\">\r\n              <table mat-table [dataSource]=\"dataSource\" matSort>\r\n                <ng-container matColumnDef=\"referenceCode\">\r\n                  <th mat-header-cell *matHeaderCellDef> Reference Code </th>\r\n                  <td mat-cell *matCellDef=\"let element; let i = index\">{{element?.referenceCode}}</td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"adTitle\">\r\n                  <th mat-header-cell *matHeaderCellDef> Ad Title </th>\r\n                  <td mat-cell *matCellDef=\"let element; let i = index\">{{element?.adTitle}}</td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"mediumAndLength\">\r\n                  <th mat-header-cell *matHeaderCellDef> Medium And Length</th>\r\n                  <td mat-cell *matCellDef=\"let element; let i = index\">{{ element?.typeOfMediumDisplay }}</td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"amount\">\r\n                  <th mat-header-cell *matHeaderCellDef> Amount</th>\r\n                  <td mat-cell *matCellDef=\"let element; let i = index\">{{element?.amount | number : '1.2-2'}}</td>\r\n                </ng-container>\r\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n              </table>\r\n              <div class=\"no-record\" [hidden]=\"dataSource && dataSource?.data?.length > 0\">\r\n                No record found.\r\n              </div>\r\n              <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons></mat-paginator>\r\n            </div>\r\n\r\n            <span>\r\n              <mat-checkbox class=\"example-margin\" [(ngModel)]=\"payment && payment.filedBirForm\" formControlName=\"filedBirForm\"\r\n                (ngModelChange)=\"computeWithholding()\"\r\n                >\r\n                BIR Form 2307</mat-checkbox>\r\n            </span>\r\n            <!-- <b [hidden]=\"payment?.paymentStatus !== 'PAID' || !payment.filedBirForm\"><i class=\"material-icons\">check</i>\r\n              BIR Form 2307</b>\r\n            <b [hidden]=\"payment?.paymentStatus !== 'PAID' || payment.filedBirForm\"><i class=\"material-icons\">close</i>\r\n              BIR Form 2307</b> -->\r\n            <br><br>\r\n            <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n              <mat-label>Withholding Tax</mat-label>\r\n              <input matInput class=\"numbers-input\" name=\"vat\" [value]=\"payment?.withholdingTax | number : '1.2-2'\"\r\n                formControlName=\"withholdingTax\" readonly>\r\n            </mat-form-field>\r\n\r\n            <!-- <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n              <mat-label>Official Receipt No</mat-label>\r\n              <input matInput name=\"orNo\" [(ngModel)]=\"payment.officialReceiptNo\" [readonly]=\"!isForPayment\"\r\n                formControlName=\"orNo\" (keydown)=\"validateFieldService.numbersOnly($event)\">\r\n            </mat-form-field> -->\r\n\r\n            <!-- <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n              <mat-label>Amount Receive</mat-label>\r\n              <input matInput name=\"amountReceive\" type=\"number\" [(ngModel)]=\"payment.amountReceive\" formControlName=\"amountReceive\"\r\n              [readonly]=\"currentUser.userRole.name!='ROLE_ACCOUNTING'||payment?.paymentStatus=='PAID'\">\r\n            </mat-form-field> -->\r\n\r\n            <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n              <mat-label>Amount Due</mat-label>\r\n              <input class=\"numbers-input total\" matInput name=\"amount\"\r\n                [value]=\"getAmountDue() | number : '1.2-2'\" readonly>\r\n            </mat-form-field>\r\n\r\n            <div *ngIf=\"isMultiple\"><br>\r\n              <hr><br>\r\n            </div>\r\n\r\n            <!-- <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n              <mat-label>Payment Mode</mat-label>\r\n              <input matInput [value]=\"payment?.paymentMethod?.paymentType?.paymentDescription\" readonly> -->\r\n            <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n              <mat-label>Payment Mode</mat-label>\r\n              <mat-select class=\"col-md-4\" [(ngModel)]=\"paymentMethod.paymentType\" name=\"paymentType\"\r\n                [compareWith]=\"comparePaymentMethod\" formControlName=\"paymentType\" [disabled]=\"payment?.paymentStatus=='PAID' || payment?.paymentStatus=='UNPAID'\"\r\n                (selectionChange)=\"resetPaymentTypeValidation()\">\r\n                <mat-option *ngFor=\"let i of paymentTypeList\" [value]=\"i\" name=\"paymentType\">\r\n                  {{ i?.paymentDescription | uppercase }}\r\n                </mat-option>\r\n              </mat-select>\r\n            </mat-form-field>\r\n\r\n            <div *ngIf=\"paymentMethod?.paymentType?.paymentDescription ==='Cash' || paymentMethod?.paymentType?.paymentDescription ==='GCash' ||\r\n              paymentMethod?.paymentType?.paymentDescription ==='PayMaya'\">\r\n\r\n\r\n              <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n                <mat-label>Reference Number <span class=\"required-field\">\r\n                    <mat-icon>notification_important</mat-icon>\r\n                  </span></mat-label>\r\n                <input matInput [(ngModel)]=\"paymentMethod.referenceNo\" name=\"referenceNo\" formControlName=\"referenceNo\"\r\n                  [readonly]=\"currentUser.userRole.name!='ROLE_ACCOUNTING'||payment?.paymentStatus=='PAID'\"\r\n                  (blur)=\"paymentTypevalidator()\" (keyup)=\"paymentTypevalidator()\">\r\n              </mat-form-field>\r\n              <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n                <mat-label>Fund Transfer Date <span class=\"required-field\">\r\n                    <mat-icon>notification_important</mat-icon>\r\n                  </span></mat-label>\r\n                <input matInput placeholder=\"Date\" [matDatepicker]=\"paymentDate\" [min]=\"currentDate\"\r\n                  [(ngModel)]=\"paymentMethod.paymentDate\" name=\"paymentDate\" formControlName=\"paymentDate\"\r\n                  [readonly]=\"currentUser?.userRole.name!='ROLE_ACCOUNTING'||payment?.paymentStatus=='PAID'\"\r\n                  (dateChange)=\"paymentTypevalidator()\" (keyup)=\"paymentTypevalidator()\">\r\n                <mat-datepicker-toggle matSuffix [for]=\"paymentDate\" *ngIf=\"payment?.paymentStatus!=='PAID'\">\r\n                </mat-datepicker-toggle>\r\n                <mat-datepicker color=\"warn\" #paymentDate></mat-datepicker>\r\n              </mat-form-field>\r\n              <mat-form-field class=\"col-md-12\" appearance=\"outline\"\r\n                *ngIf=\"paymentMethod?.paymentType?.paymentDescription ==='PayMaya'\">\r\n                <mat-label>Confirmation Code <span class=\"required-field\">\r\n                    <mat-icon>notification_important</mat-icon>\r\n                  </span></mat-label>\r\n                <input matInput [(ngModel)]=\"paymentMethod.ccConfirmationCode\" name=\"ccConfirmationCode\"\r\n                  formControlName=\"ccConfirmationCode\"\r\n                  [readonly]=\"currentUser.userRole.name!='ROLE_ACCOUNTING'||payment?.paymentStatus=='PAID'\">\r\n              </mat-form-field>\r\n              <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n                <mat-label>Amount Transferred <span class=\"required-field\">\r\n                    <mat-icon>notification_important</mat-icon>\r\n                  </span></mat-label>\r\n                <input matInput [(ngModel)]=\"paymentMethod.amount\" name=\"amount\" formControlName=\"amount\"\r\n                  (keydown)=\"validateFieldService.numbersOnly($event)\" class=\"numbers-input\"\r\n                  [hidden]=\"currentUser.userRole.name!='ROLE_ACCOUNTING'||payment?.paymentStatus=='PAID'\"\r\n                  (blur)=\"paymentTypevalidator()\" (keyup)=\"paymentTypevalidator()\">\r\n\r\n                <input class=\"numbers-input total\" matInput name=\"amount\"\r\n                  [value]=\"paymentMethod?.amount | number : '1.2-2'\" readonly\r\n                  *ngIf=\"currentUser.userRole.name!='ROLE_ACCOUNTING'||payment?.paymentStatus=='PAID'\">\r\n              </mat-form-field>\r\n            </div>\r\n\r\n\r\n            <div class=\"row\" *ngIf=\"paymentMethod?.paymentType?.paymentDescription ==='Voucher'\">\r\n              <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n                <mat-label>Control Number <span class=\"required-field\">\r\n                    <mat-icon>notification_important</mat-icon>\r\n                  </span></mat-label>\r\n                <input matInput [(ngModel)]=\"paymentMethod.controlNo\" name=\"controlNo\" formControlName=\"controlNo\"\r\n                  [readonly]=\"currentUser.userRole.name!='ROLE_ACCOUNTING'||payment?.paymentStatus=='PAID'\"\r\n                  (blur)=\"paymentTypevalidator()\" (keyup)=\"paymentTypevalidator()\">\r\n              </mat-form-field>\r\n              <!-- <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n                <mat-label>Amount</mat-label>\r\n                <input matInput [(ngModel)]=\"paymentMethod.amount\" name=\"amount\" formControlName=\"amount\"\r\n                  (keydown)=\"validateFieldService.numbersOnly($event)\" class=\"numbers-input\"\r\n                  [readonly]=\"currentUser.userRole.name!='ROLE_ACCOUNTING'||payment?.paymentStatus=='PAID'\">\r\n              </mat-form-field> -->\r\n            </div>\r\n\r\n            <div class=\"row\"\r\n              *ngIf=\"paymentMethod?.paymentType?.paymentDescription ==='Bank' ||\r\n            paymentMethod?.paymentType?.paymentDescription ==='Credit Card' || paymentMethod?.paymentType?.paymentDescription ==='Check'\">\r\n\r\n              <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n                <mat-label>Bank Name <span class=\"required-field\">\r\n                    <mat-icon>notification_important</mat-icon>\r\n                  </span></mat-label>\r\n                <input matInput [(ngModel)]=\"paymentMethod.bankName\" name=\"bankName\" formControlName=\"bankName\"\r\n                  [readonly]=\"currentUser.userRole.name!='ROLE_ACCOUNTING'||payment?.paymentStatus=='PAID'\"\r\n                  (blur)=\"paymentTypevalidator()\" (keyup)=\"paymentTypevalidator()\">\r\n              </mat-form-field>\r\n              <mat-form-field class=\"col-md-12\" appearance=\"outline\"\r\n                *ngIf=\"paymentMethod?.paymentType?.paymentDescription ==='Credit Card'\">\r\n                <mat-label>Confirmation Code <span class=\"required-field\">\r\n                    <mat-icon>notification_important</mat-icon>\r\n                  </span></mat-label>\r\n                <input matInput [(ngModel)]=\"paymentMethod.ccConfirmationCode\" name=\"ccConfirmationCode\"\r\n                  formControlName=\"ccConfirmationCode\"\r\n                  [readonly]=\"currentUser.userRole.name!='ROLE_ACCOUNTING'||payment?.paymentStatus=='PAID'\"\r\n                  (blur)=\"paymentTypevalidator()\" (keyup)=\"paymentTypevalidator()\">\r\n              </mat-form-field>\r\n              <mat-form-field class=\"col-md-12\" appearance=\"outline\"\r\n                *ngIf=\"paymentMethod?.paymentType?.paymentDescription ==='Check'\">\r\n                <mat-label>Check Number <span class=\"required-field\">\r\n                    <mat-icon>notification_important</mat-icon>\r\n                  </span></mat-label>\r\n                <input matInput [(ngModel)]=\"paymentMethod.checkNo\" name=\"checkNo\" formControlName=\"checkNo\"\r\n                  [readonly]=\"currentUser.userRole.name!='ROLE_ACCOUNTING'||payment?.paymentStatus=='PAID'\"\r\n                  (blur)=\"paymentTypevalidator()\" (keyup)=\"paymentTypevalidator()\">\r\n              </mat-form-field>\r\n              <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n                <mat-label>Amount Transferred <span class=\"required-field\">\r\n                    <mat-icon>notification_important</mat-icon>\r\n                  </span></mat-label>\r\n                <input matInput [(ngModel)]=\"paymentMethod.amount\" name=\"amount\" class=\"numbers-input\"\r\n                  formControlName=\"amount\"\r\n                  [hidden]=\"currentUser.userRole.name!='ROLE_ACCOUNTING'||payment?.paymentStatus=='PAID'\"\r\n                  (blur)=\"paymentTypevalidator()\" (keyup)=\"paymentTypevalidator()\">\r\n\r\n                <input class=\"numbers-input total\" matInput name=\"amount\"\r\n                  [value]=\"paymentMethod?.amount | number : '1.2-2'\" readonly\r\n                  *ngIf=\"currentUser.userRole.name!='ROLE_ACCOUNTING'||payment?.paymentStatus=='PAID'\">\r\n              </mat-form-field>\r\n              <mat-form-field class=\"col-md-12\" appearance=\"outline\"\r\n                *ngIf=\"paymentMethod?.paymentType?.paymentDescription ==='Bank'\">\r\n                <mat-label>Branch <span class=\"required-field\">\r\n                    <mat-icon>notification_important</mat-icon>\r\n                  </span></mat-label>\r\n                <input matInput [(ngModel)]=\"paymentMethod.bankBranch\" name=\"withholdingTax\"\r\n                  formControlName=\"bankBranch\"\r\n                  [readonly]=\"currentUser.userRole.name!='ROLE_ACCOUNTING'||payment?.paymentStatus=='PAID'\"\r\n                  (blur)=\"paymentTypevalidator()\" (keyup)=\"paymentTypevalidator()\">\r\n              </mat-form-field>\r\n              <mat-form-field class=\"col-md-12\" appearance=\"outline\"\r\n                *ngIf=\"paymentMethod?.paymentType?.paymentDescription ==='Bank'\">\r\n                <mat-label>Deposited Date <span class=\"required-field\">\r\n                    <mat-icon>notification_important</mat-icon>\r\n                  </span></mat-label>\r\n                <input matInput placeholder=\"Date\" [matDatepicker]=\"paymentDate\" [(ngModel)]=\"paymentMethod.paymentDate\"\r\n                  name=\"paymentDate\" formControlName=\"paymentDate\" (dateChange)=\"paymentTypevalidator()\"\r\n                  (keyup)=\"paymentTypevalidator()\">\r\n                <mat-datepicker-toggle matSuffix [for]=\"paymentDate\"></mat-datepicker-toggle>\r\n                <mat-datepicker color=\"warn\" #paymentDate disabled=\"false\"></mat-datepicker>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n\r\n            <!--  <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n              <mat-label>Discount</mat-label>\r\n              <input matInput name=\"discount\" type=\"number\" [(ngModel)]=\"payment.discount\" formControlName=\"discount\"\r\n              [readonly]=\"currentUser.userRole.name!='ROLE_ACCOUNTING'||payment?.paymentStatus=='PAID'\">\r\n            </mat-form-field> -->\r\n\r\n\r\n            <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n              <mat-label>REMARKS</mat-label>\r\n              <!-- <textarea matInput [value]=\"payment?.remarks\" [readonly]=\"!isForPayment\"></textarea> -->\r\n              <textarea matInput [ngModel]=\"payment?.remarks\" (ngModelChange)=\"payment ? payment.remarks = $event : null\" formControlName=\"remarks\" name=\"remarks\"\r\n                [readonly]=\"currentUser.userRole.name!='ROLE_ACCOUNTING'||payment?.paymentStatus=='PAID'\"></textarea>\r\n            </mat-form-field>\r\n\r\n          </div>\r\n\r\n          <div *ngIf=\"selectedProofOfPayment === 2\">\r\n            <div class=\"row\">\r\n\r\n              <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n                <mat-label>Applicant Company Details</mat-label>\r\n                <input matInput name=\"companyName\" [readonly]=\"isForPayment\">\r\n              </mat-form-field>\r\n\r\n            </div>\r\n            <div class=\"row\">\r\n\r\n              <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n                <mat-label>Accumulated Amount to be settled</mat-label>\r\n                <input matInput name=\"length\" [readonly]=\"isForPayment\" class=\"numbers-input\">\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n\r\n          <div *ngIf=\"selectedProofOfPayment === 3\">\r\n            <div class=\"row\">\r\n\r\n              <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n                <mat-label>Client Company Details</mat-label>\r\n                <input matInput name=\"companyName\" [readonly]=\"isForPayment\">\r\n              </mat-form-field>\r\n\r\n            </div>\r\n            <div class=\"row\">\r\n\r\n              <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n                <mat-label>Accumulated Amount to be settled</mat-label>\r\n                <input matInput name=\"length\" [readonly]=\"isForPayment\" class=\"numbers-input\">\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"row\" *ngIf=\"currentUser?.userRole?.name=='ROLE_ACCOUNTING'&&payment?.paymentStatus!=='PAID'\">\r\n            <div class=\"col-md-12\">\r\n              <button class=\"button-right button-red\" mat-raised-button (click)=\"processPayment(payment?.remarks)\"\r\n                [hidden]=\"isDelinquent\"\r\n                [disabled]=\"(!paymentForm.valid || !payment?.paymentAttachmentReference || !isPaymentTypeValid)\r\n                && ((paymentMode?.toUpperCase() !== 'PROMISORRY NOTE' && paymentMethod.paymentType?.paymentDescription?.toUpperCase() !== 'PROMISORRY NOTE') || !payment.paymentAttachmentReference )\">\r\n                <mat-icon>offline_pin</mat-icon> PROCESS\r\n              </button>\r\n              <button mat-raised-button class=\"button-right button-red button-right__approve\" (click)=\"approvePenalty()\"\r\n                [disabled]=\"(!paymentForm.valid || !payment?.paymentAttachmentReference || !isPaymentTypeValid)\r\n              && ((paymentMode?.toUpperCase() !== 'PROMISORRY NOTE' && paymentMethod.paymentType?.paymentDescription?.toUpperCase() !== 'PROMISORRY NOTE') || !payment.paymentAttachmentReference )\"\r\n                *ngIf=\"isDelinquent\">\r\n                <i class=\"material-icons color__white\">task_alt</i> APPROVE\r\n              </button>\r\n              &nbsp;\r\n              <button mat-raised-button class=\"button-right button-red\" (click)=\"rejectPayment()\" *ngIf=\"isForApproval\">\r\n                <mat-icon>unpublished</mat-icon> REJECT\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <br>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</form>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AddPaymentComponent } from './add-payment.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AddPaymentComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AddPaymentRoutingModule { }\r\n"],"sourceRoot":"webpack:///"}