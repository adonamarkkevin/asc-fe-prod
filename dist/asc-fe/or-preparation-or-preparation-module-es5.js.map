<<<<<<< HEAD
{"version":3,"sources":["webpack:///src/app/modules/pages/accounting/or-preparation/or-preparation.module.ts","webpack:///src/app/modules/fragments/index.ts","webpack:///src/app/modules/pages/accounting/or-preparation/or-preparation.component.ts","webpack:///src/app/modules/pages/accounting/or-preparation/or-preparation.component.html","webpack:///src/app/core/models/totals.model.ts","webpack:///src/app/modules/pages/accounting/or-preparation/or-preparation-routing.module.ts"],"names":["OrPreparationModule","OrPreparationComponent","apiService","formBuilder","sweetAlertService","spinner","numberPipe","displayedColumns","statusList","orPreparation","orPreparationReference","orPreparationList","typeOfMediumList","officialReceiptReferenceList","availableReferenceCodeList","companyList","report","totalAmts","Array","totalAmounts","getList","setFormValidator","getTypeOfMedium","getCompanyList","getAvailableReferenceCode","findAll","officialReceipt","subscribe","res","responseData","data","map","mappedList","officialReceiptReferencesValue","officialReceiptReferences","reduce","previousValue","currentValue","reference","dataSource","paginator","formListComponent","sort","console","log","voucherControlNumber","length","customErrorMessage","isExisting","filter","filteredOR","trim","findByParam","orPreparationRefCodeCheck","appForm","paymentDetailsByAppformId","id","form","paymentDtls","push","setTotalValues","orPreparationForm","get","setValue","transform","totalSales","amount","ref","responseMessage","err","error","obj","amts","applicationForm","referenceCode","refCode","orPreparationORNumberCheck","officialReceiptNo","save","undefined","success","resetFormValidator","fire","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","value","elementObject","findById","idForUpdate","filedBirForm","toString","totalAmountDue","totalVat","totalWithholdingtax","company","find","companyName","selectedCompanyId","selectedCompany","getAvailableReferenceCodeList","or","payment","isGettingCompanies","activeCompanies","i","companyTin","companyAddress","country","code","name","completeAddress","group","required","typeOfMedium","officialReceiptReference","businessStyle","fullPaymentOf","controlNumber","totalAmount","reset","markAsUntouched","markAsPristine","typeOfMediumSingleMedia","singleMediaList","typeOfMediumMultiMediaMoving","multimediaMovingList","multimediaStaticList","key","Map","item","values","selected","orData","filename","format","module","params","officialReceiptId","printReport","generateReports","newBlob","Blob","type","downloadURL","URL","createObjectURL","window","open","availableReferenceCodeByCompany","description","saveOrUpdate","printOr","getOrPreparation","cancel","TotalAmountsModel","totalwWithholdingtax","amountDue","vat","basicRate","withholdingTax","routes","path","component","OrPreparationRoutingModule","forChild"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAsBO;AAAA,YAAMA,mBAAN;AAAA;AAAA;;;gBAAMA;;;;6BAAAA,mB;AAAmB,W;AAAA,qBAFnB,CAAC,2DAAD,C;AAAa,oBARf,CACP,4DADO,EAEP,yFAFO,EAGP,qEAHO,EAIP,kEAJO,EAKP,6DALO,EAMP,sFANO,CAQe;;;OAEnB;;;4HAAMA,mB,EAAmB;AAAA,yBAXf,gFAWe;AAXO,oBAEnC,4DAFmC,EAGnC,yFAHmC,EAInC,qEAJmC,EAKnC,kEALmC,EAMnC,6DANmC,EAOnC,sFAPmC;AAWP,S;AAJb,O;;;;;;;;;;;;;;;;;AClBnoB;;AACzB;;;;;;AAC+B;;;;;;;;AAG/B;;AAGE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAEA;;AACF;;;;;;AAJE;;AAGA;;AAAA;;;;;;AAuGF;;AACE;;AACF;;;;;;AAF+C;;AAC7C;;AAAA;;;;;;AAkBF;;AAIE;;AACF;;;;;;AAHE;;AAEA;;AAAA;;;;;;AAGJ;;AAAgD;;AAAM;;AAAO;;;;;;;;AAC7D;;AAGE;AAAA;;AAAA;;AAAA;AAAA;;AAGA;;AAAuC;;AAAI;;AAAK;;AAElD;;;;;;;;AAOA;;AACE;;AACE;;AACA;;AAGE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACC;;AAAK;;AAEV;;AACF;;;;;;AARI;;AAAA;;;;;;;;;;AD3KP;AAAA,YAAMC,sBAAN;AA4BL,0CACUC,UADV,EAEUC,WAFV,EAGUC,iBAHV,EAIUC,OAJV,EAKUC,UALV,EAKiC;AAAA;;AAJvB,iBAAAJ,UAAA,GAAAA,UAAA;AACA,iBAAAC,WAAA,GAAAA,WAAA;AACA,iBAAAC,iBAAA,GAAAA,iBAAA;AACA,iBAAAC,OAAA,GAAAA,OAAA;AACA,iBAAAC,UAAA,GAAAA,UAAA;AA9BV,iBAAAC,gBAAA,GAA6B,CAC3B,mBAD2B,EAE3B,yBAF2B,EAG3B,2BAH2B,EAI3B,QAJ2B,EAK3B,YAL2B,CAA7B;AAOA,iBAAAC,UAAA,sBAAiB,gDAAjB;AAEA,iBAAAC,aAAA,GAAgB,IAAI,qDAAJ,EAAhB;AAGA,iBAAAC,sBAAA,GAAyB,IAAI,8DAAJ,EAAzB;AACA,iBAAAC,iBAAA,GAAoB,EAApB;AACA,iBAAAC,gBAAA,GAAmB,EAAnB;AACA,iBAAAC,4BAAA,GAA+B,EAA/B;AACA,iBAAAC,0BAAA,GAA6B,EAA7B;AACA,iBAAAC,WAAA,GAAc,EAAd;AACA,iBAAAC,MAAA,GAAS,IAAI,mEAAJ,EAAT;AAEA,iBAAAC,SAAA,GAA4B,IAAIC,KAAJ,EAA5B;AACA,iBAAAC,YAAA,GAAkC,IAAI,2EAAJ,EAAlC;AAUI;;AAlCC;AAAA;AAAA,mBAoCL,oBAAW;AACT,mBAAKC,OAAL;AACA,mBAAKC,gBAAL;AACA,mBAAKC,eAAL;AACA,mBAAKC,cAAL;AACA,mBAAKC,yBAAL;AACD;AA1CI;AAAA;AAAA,mBA4CL,mBAAO;AAAA;;AACL,mBAAKA,yBAAL;AACA,mBAAKtB,UAAL,CAAgBuB,OAAhB,CAAwB,kDAAUC,eAAlC,EAAmDC,SAAnD,CAA6D,UAACC,GAAD,EAAc;AACzE,qBAAI,CAACjB,iBAAL,GAAyBiB,GAAG,CAACC,YAAJ,CAAiBC,IAA1C;AAEA,qBAAI,CAACnB,iBAAL,GAAyB,KAAI,CAACA,iBAAL,CAAuBoB,GAAvB,CAA2B,UAACC,UAAD;AAAA,yBAAiB,MAAD,OAAC,CAAD,kBAC/DA,UAD+D,CAAC,EACtD;AACbC,kDAA8B,EAAED,UAAU,CAACE,yBAAX,CAAqCC,MAArC,CAC9B,UAACC,aAAD,EAAgBC,YAAhB,EAAiC;AAC/B,0BAAID,aAAJ,EAAmB;AACjB,+BAAOA,aAAa,GAAG,IAAhB,IAAuBC,YAAY,SAAZ,IAAAA,YAAY,WAAZ,GAAY,MAAZ,GAAAA,YAAY,CAAEC,SAArC,CAAP;AACD,uBAFD,MAEO;AACL,+BAAOD,YAAY,SAAZ,IAAAA,YAAY,WAAZ,GAAY,MAAZ,GAAAA,YAAY,CAAEC,SAArB;AACD;AACF,qBAP6B,EAQ9B,EAR8B;AADnB,mBADsD,CAAjB;AAAA,iBAA3B,CAAzB;AAcA,qBAAI,CAACC,UAAL,GAAkB,IAAI,0EAAJ,CAChB,KAAI,CAAC5B,iBADW,CAAlB;AAGA,qBAAI,CAAC4B,UAAL,CAAgBC,SAAhB,GAA4B,KAAI,CAACC,iBAAL,CAAuBD,SAAnD;AACA,qBAAI,CAACD,UAAL,CAAgBG,IAAhB,GAAuB,KAAI,CAACD,iBAAL,CAAuBC,IAA9C;AACD,eAtBD;AAuBD;AArEI;AAAA;AAAA,mBAuEL,yBAAgB,CACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;AAjFI;AAAA;AAAA,mBAmFL,+BAAsB;AAAA;;AACpBC,qBAAO,CAACC,GAAR,CAAY,UAAZ,EAAwB,KAAKlC,sBAA7B;;AACA,kBACG,KAAKD,aAAL,CAAmBoC,oBAAnB,IACC,KAAKhC,4BAAL,CAAkCiC,MAAlC,IAA4C,CAD9C,IAEA,KAAKjC,4BAAL,CAAkCiC,MAAlC,IAA4C,CAH9C,EAIE;AACA,qBAAK1C,iBAAL,CAAuB2C,kBAAvB,CAA0C,yBAA1C;AACD,eAND,MAMO;AACL,oBAAMC,UAAU,GAAG,KAAKnC,4BAAL,CAAkCoC,MAAlC,CACjB,UAACC,UAAD;AAAA,yBACEA,UAAU,CAACZ,SAAX,KAAyB,MAAI,CAAC5B,sBAAL,CAA4B4B,SAA5B,CAAsCa,IAAtC,EAD3B;AAAA,iBADiB,CAAnB;;AAIA,oBAAIH,UAAU,CAACF,MAAf,EAAuB;AACrB,uBAAK1C,iBAAL,CAAuB2C,kBAAvB,CACE,oCADF;AAGD,iBAJD,MAIO;AACL,uBAAK7C,UAAL,CACGkD,WADH,CAEI,kDAAUC,yBAFd,EAGI,KAAK3C,sBAAL,CAA4B4B,SAHhC,EAKGX,SALH,CAMI,UAACC,GAAD,EAAS;;;AACP,wBAAI,CAAJ,KAAIA,GAAG,SAAH,IAAAA,GAAG,WAAH,GAAG,MAAH,GAAAA,GAAG,CAAEC,YAAL,MAAiB,IAAjB,IAAiB,aAAjB,GAAiB,MAAjB,GAAiB,GAAEC,IAAvB,EAA6B;AAC3B,0BAAIwB,OAAO,GAAG,CAAH,KAAG1B,GAAG,SAAH,IAAAA,GAAG,WAAH,GAAG,MAAH,GAAAA,GAAG,CAAEC,YAAL,MAAiB,IAAjB,IAAiB,aAAjB,GAAiB,MAAjB,GAAiB,GAAEC,IAAF,CAAO,CAAP,CAA/B;;AACA,4BAAI,CAAC5B,UAAL,CACGkD,WADH,CACe,kDAAUG,yBADzB,EACoDD,OAAO,CAACE,EAD5D,EAEG7B,SAFH,CAEa,UAAC8B,IAAD,EAAoC;AAC7Cd,+BAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBa,IAAvB;AACA,4BAAIC,WAAJ;;AACA,4BAAID,IAAJ,EAAU;AACR;AACA;AAEA,gCAAI,CAACxC,SAAL,CAAe0C,IAAf,CAAoBF,IAAI,CAAC5B,YAAL,CAAkBC,IAAtC;;AACA,gCAAI,CAACX,YAAL,CAAkByC,cAAlB,CAAiC,MAAI,CAAC3C,SAAtC;;AAEA,gCAAI,CAAC4C,iBAAL,CACGC,GADH,CACO,aADP,EAEGC,QAFH,CAGI,MAAI,CAACzD,UAAL,CAAgB0D,SAAhB,CACE,MAAI,CAAC7C,YAAL,CAAkB8C,UADpB,EAEE,MAFF,CAHJ;AAQD;;AACDtB,+BAAO,CAACC,GAAR,CAAY,WAAZ,EAAyB,MAAI,CAACzB,YAA9B;AACD,uBAtBH;;AAwBA,4BAAI,CAACN,4BAAL,CAAkC8C,IAAlC,CACE,MAAI,CAACjD,sBADP;;AAGA,4BAAI,CAACA,sBAAL,CAA4BwD,MAA5B,GAAqCZ,OAAO,CAACY,MAA7C,CA7B2B,CA8B3B;;AACA,4BAAI,CAACxD,sBAAL,GAA8B,IAAI,8DAAJ,EAA9B,CA/B2B,CAgC3B;;AACA,4BAAI,CAACG,4BAAL,CAAkCoC,MAAlC,CAAyC,UAACkB,GAAD,EAAS,CAChD;AACA;AACD,uBAHD;AAID,qBArCD,MAqCO;AACL,4BAAI,CAAC/D,iBAAL,CAAuB2C,kBAAvB,CAA0CnB,GAAG,SAAH,IAAAA,GAAG,WAAH,GAAG,MAAH,GAAAA,GAAG,CAAEwC,eAA/C;AACD;AACF,mBA/CL,EAgDI,UAACC,GAAD,EAAS;AACP,0BAAI,CAACjE,iBAAL,CAAuBkE,KAAvB,CAA6BD,GAA7B;AACD,mBAlDL;AAoDD;AACF;AACF;AA3JI;AAAA;AAAA,mBA6JL,6BAAoBE,GAApB,EAAyB;AACvB,mBAAK1D,4BAAL,GAAoC,KAAKA,4BAAL,CAAkCoC,MAAlC,CAClC,UAACC,UAAD;AAAA,uBAAgBA,UAAU,CAACZ,SAAX,KAAyBiC,GAAG,CAACjC,SAAJ,CAAca,IAAd,EAAzC;AAAA,eADkC,CAApC;AAGAR,qBAAO,CAACC,GAAR,CAAY,eAAZ,EAA6B2B,GAA7B;AACA5B,qBAAO,CAACC,GAAR,CAAY,WAAZ,EAAyB,KAAK3B,SAA9B;AACA,mBAAKA,SAAL,GAAiB,KAAKA,SAAL,CAAegC,MAAf,CACf,UAACuB,IAAD;AAAA,uBAAUA,IAAI,CAACC,eAAL,CAAqBC,aAArB,KAAuCH,GAAG,CAACjC,SAAJ,CAAca,IAAd,EAAjD;AAAA,eADe,CAAjB;AAGAR,qBAAO,CAACC,GAAR,CAAY,WAAZ,EAAyB,KAAK3B,SAA9B;AACA,mBAAKE,YAAL,CAAkByC,cAAlB,CAAiC,KAAK3C,SAAtC;AACA0B,qBAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgC,KAAKzB,YAArC;AACD;AAzKI;AAAA;AAAA,mBA2KL,qCAAwC,CACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAdsC,kBAAdwD,OAAc,uEAAJ,EAAI;AAevC;AA1LI;AAAA;AAAA,mBA4LL,wBAAY;AAAA;;;;AACV,mBAAKlE,aAAL,CAAmB+C,EAAnB,GAAwB,YAAK/C,aAAL,MAAkB,IAAlB,IAAkB,aAAlB,GAAkB,MAAlB,GAAkB,GAAE+C,EAApB,IAAyB,KAAK/C,aAAL,CAAmB+C,EAA5C,GAAiD,CAAzE;AACA,mBAAK/C,aAAL,CAAmByB,yBAAnB,GAA+C,KAAKrB,4BAApD,CAFU,CAGV;AACA;;AACA8B,qBAAO,CAACC,GAAR,CAAY,QAAZ,EAAsB,KAAKnC,aAA3B;AACA,mBAAKP,UAAL,CACGkD,WADH,CAEI,kDAAUwB,0BAFd,EAGI,KAAKnE,aAAL,CAAmBoE,iBAHvB,EAKGlD,SALH,CAMI,UAACqB,UAAD,EAAgB;;;AACd,oBAAIA,UAAU,CAACnB,YAAX,CAAwBC,IAAxB,IAAgC,QAAC,MAAI,CAACrB,aAAN,MAAmB,IAAnB,IAAmB,aAAnB,GAAmB,MAAnB,GAAmB,GAAE+C,EAArB,CAApC,EAA6D;AAC3D,wBAAI,CAACpD,iBAAL,CAAuB2C,kBAAvB,CACEC,UAAU,CAACoB,eADb;AAGD,iBAJD,MAIO;AACL;AACA;AACA,wBAAI,CAAClE,UAAL,CACG4E,IADH,WACW,kDAAUrE,aADrB,cAC6C,MAAF,OAAE,CAAF,kBACpC,MAAI,CAACA,aAD+B,CAAE,EAEtC,MAAI,CAACU,YAFiC,CAD7C,EAKGQ,SALH,CAMI,UAACC,GAAD,EAAc;AACZ,wBAAIA,GAAG,KAAKmD,SAAZ,EAAuB;AACrB,4BAAI,CAAC3E,iBAAL,CAAuB4E,OAAvB,CAA+BpD,GAA/B;AACD;AACF,mBAVL,EAWI,UAACyC,GAAD,EAAc;AACZ,0BAAI,CAACjE,iBAAL,CAAuBkE,KAAvB,CAA6BD,GAA7B;AACD,mBAbL,EAcI,YAAM;AACJ,0BAAI,CAACY,kBAAL;;AACA,0BAAI,CAAC7D,OAAL;AACD,mBAjBL;AAmBD;AACF,eAlCL,EAmCI,UAACiD,GAAD;AAAA,uBAAS,MAAI,CAACjE,iBAAL,CAAuBkE,KAAvB,CAA6BD,GAA7B,CAAT;AAAA,eAnCJ;AAqCD;AAvOI;AAAA;AAAA,mBAyOL,kBAAM;AAAA;;AACJ,iEAAKa,IAAL,CAAU;AACRC,oBAAI,sEADI;AAERC,oBAAI,EAAE,UAFE;AAGRC,gCAAgB,EAAE,IAHV;AAIRC,kCAAkB,EAAE,SAJZ;AAKRC,iCAAiB,EAAE,MALX;AAMRC,iCAAiB,EAAE;AANX,eAAV,EAOGC,IAPH,CAOQ,UAACC,MAAD,EAAY;AAClB,oBAAIA,MAAM,CAACC,KAAX,EAAkB;AAChB,wBAAI,CAAClF,aAAL,GAAqB,MAAI,CAACgC,iBAAL,CAAuBmD,aAA5C;AACA,wBAAI,CAACnF,aAAL,CAAmByB,yBAAnB,GAA+C,IAA/C;;AACA,wBAAI,CAAChC,UAAL,CACG4E,IADH,WACW,kDAAUrE,aADrB,cAC6C,MAAI,CAACA,aADlD,EAEGkB,SAFH,CAGI,UAACC,GAAD,EAAc;AACZ,wBAAIA,GAAG,KAAKmD,SAAZ,EAAuB;AACrB,4BAAI,CAAC3E,iBAAL,CAAuB4E,OAAvB,CAA+BpD,GAA/B;AACD;AACF,mBAPL,EAQI,UAACyC,GAAD,EAAc;AACZ,0BAAI,CAACjE,iBAAL,CAAuBkE,KAAvB,CAA6BD,GAA7B;AACD,mBAVL,EAWI,YAAM;AACJ,0BAAI,CAACY,kBAAL;;AACA,0BAAI,CAAC7D,OAAL;AACD,mBAdL;AAgBD;AACF,eA5BD;AA6BD;AAvQI;AAAA;AAAA,mBAyQL,4BAAgB;AAAA;;AACduB,qBAAO,CAACC,GAAR,CAAY,UAAZ;AACA,mBAAK1C,UAAL,CACG2F,QADH,CACY,kDAAUnE,eADtB,EACuC,KAAKe,iBAAL,CAAuBqD,WAD9D,EAEGnE,SAFH,CAEa,UAACC,GAAD,EAAc;AACvB,oBAAIA,GAAJ,EAAS;AACP,wBAAI,CAACnB,aAAL,GAAqBmB,GAAG,CAACC,YAAJ,CAAiBC,IAAtC;AACA,wBAAI,CAACrB,aAAL,CAAmBsF,YAAnB,GACE,MAAI,CAACtF,aAAL,CAAmBsF,YAAnB,CAAgCC,QAAhC,EADF;AAGArD,yBAAO,CAACC,GAAR,CAAY,aAAZ,EAA2B,MAAI,CAACnC,aAAhC;AACA,wBAAI,CAACU,YAAL,CAAkB8C,UAAlB,GAA+B,MAAI,CAACxD,aAAL,CAAmBwD,UAAlD;AACA,wBAAI,CAAC9C,YAAL,CAAkB8E,cAAlB,GAAmC,MAAI,CAACxF,aAAL,CAAmBwF,cAAtD;AACA,wBAAI,CAAC9E,YAAL,CAAkB+E,QAAlB,GAA6B,MAAI,CAACzF,aAAL,CAAmByF,QAAhD;AACA,wBAAI,CAAC/E,YAAL,CAAkBgF,mBAAlB,GAAwC,MAAI,CAAC1F,aAAL,CAAmB0F,mBAA3D;;AAEA,sBAAMC,OAAO,GAAG,MAAI,CAACrF,WAAL,CAAiBsF,IAAjB,CACd,UAACD,OAAD;AAAA,2BAAaA,OAAO,CAACE,WAAR,KAAwB,MAAI,CAAC7F,aAAL,CAAmB6F,WAAxD;AAAA,mBADc,CAAhB;;AAIA,wBAAI,CAACC,iBAAL,GAAyBH,OAAO,CAAC5C,EAAjC;AACA,wBAAI,CAACgD,eAAL,GAAuBJ,OAAvB;;AACA,wBAAI,CAACK,6BAAL;;AACA,wBAAI,CAAC5C,iBAAL,CACGC,GADH,CACO,aADP,EAEGC,QAFH,CAEY,MAAI,CAAC5C,YAAL,CAAkB8C,UAF9B;;AAGA,wBAAI,CAACpD,4BAAL,GAAoC,MAAI,CAACJ,aAAL,CAAmByB,yBAAvD;;AACA,wBAAI,CAACrB,4BAAL,CAAkCoC,MAAlC,CAAyC,UAACyD,EAAD,EAAQ;AAC/C,0BAAI,CAACxG,UAAL,CACGkD,WADH,CACe,kDAAUC,yBADzB,EACoDqD,EAAE,CAACpE,SADvD,EAEGX,SAFH,CAEa,UAAC+B,WAAD,EAAiB;;;AAC1B,0BAAIJ,OAAO,GAAG,CAAH,KAAGI,WAAW,SAAX,IAAAA,WAAW,WAAX,GAAW,MAAX,GAAAA,WAAW,CAAE7B,YAAb,MAAyB,IAAzB,IAAyB,aAAzB,GAAyB,MAAzB,GAAyB,GAAEC,IAAF,CAAO,CAAP,CAAvC;;AACA,4BAAI,CAAC5B,UAAL,CACGkD,WADH,CACe,kDAAUG,yBADzB,EACoDD,OAAO,CAACE,EAD5D,EAEG7B,SAFH,CAEa,UAACgF,OAAD,EAAa;;;AACtB,8BAAI,CAAC1F,SAAL,CAAe0C,IAAf,CAAoB,CAAD,KAACgD,OAAO,SAAP,IAAAA,OAAO,WAAP,GAAO,MAAP,GAAAA,OAAO,CAAE9E,YAAT,MAAqB,IAArB,IAAqB,aAArB,GAAqB,MAArB,GAAqB,GAAEC,IAA3C;AACD,uBAJH;AAKD,qBATH;AAUD,mBAXD;AAYD;AACF,eAtCH;AAuCD;AAlTI;AAAA;AAAA,mBAoTL,0BAAiB;AAAA;;AACf,mBAAK8E,kBAAL,GAA0B,IAA1B;AACA,mBAAK1G,UAAL,CAAgBuB,OAAhB,CAAwB,kDAAUoF,eAAlC,EAAmDlF,SAAnD,CACE,UAACC,GAAD,EAAc;AACZ,sBAAI,CAACb,WAAL,GAAmBa,GAAG,CAACC,YAAJ,CAAiBC,IAApC,CADY,CAC8B;;AAC1C,sBAAI,CAAC8E,kBAAL,GAA0B,KAA1B;AACD,eAJH,EAKE,UAACvC,GAAD,EAAc;AACZ,sBAAI,CAACuC,kBAAL,GAA0B,KAA1B;AACD,eAPH;AASD;AA/TI;AAAA;AAAA,mBAiUL,2BAAkBE,CAAlB,EAAqB;AACnB,mBAAKP,iBAAL,GAAyBO,CAAC,CAACtD,EAA3B;AACA,mBAAK/C,aAAL,CAAmB6F,WAAnB,GAAiCQ,CAAC,CAACR,WAAnC;AACA,mBAAK7F,aAAL,CAAmBsG,UAAnB,GAAgCD,CAAC,CAACC,UAAlC;AACA,mBAAKtG,aAAL,CAAmBuG,cAAnB,GACE,MAAMF,CAAC,CAACG,OAAF,CAAUC,IAAhB,GAAuB,KAAvB,GAA+BJ,CAAC,CAACG,OAAF,CAAUE,IAAzC,GAAgD,IAAhD,GAAuDL,CAAC,CAACM,eAD3D;AAEA,mBAAKX,6BAAL;AACD;AAxUI;AAAA;AAAA,mBA0UL,4BAAgB;AACd,mBAAK5C,iBAAL,GAAyB,KAAK1D,WAAL,CAAiBkH,KAAjB,CAAuB;AAC9CxC,iCAAiB,EAAE,CAAC,EAAD,EAAK,0DAAWyC,QAAhB,CAD2B;AAE9CC,4BAAY,EAAE,CAAC,EAAD,EAAK,0DAAWD,QAAhB,CAFgC;AAG9CpD,sBAAM,EAAE,CAAC,EAAD,CAHsC;AAI9CsD,wCAAwB,EAAE,CAAC,EAAD,CAJoB;AAK9C3E,oCAAoB,EAAE,CAAC,EAAD,CALwB;AAM9C4E,6BAAa,EAAE,CAAC,EAAD,CAN+B;AAO9CC,6BAAa,EAAE,CAAC,EAAD,CAP+B;AAQ9CC,6BAAa,EAAE,CAAC,EAAD,CAR+B;AAS9CrB,2BAAW,EAAE,CAAC,EAAD,CATiC;AAU9CS,0BAAU,EAAE,CAAC,EAAD,CAVkC;AAW9CC,8BAAc,EAAE,CAAC,EAAD,CAX8B;AAY9CY,2BAAW,EAAE,CAAC,EAAD;AAZiC,eAAvB,CAAzB;AAcD;AAzVI;AAAA;AAAA,mBA2VL,8BAAkB;AAChB,mBAAKrB,iBAAL,GAAyB,IAAzB;AACA,mBAAKpF,YAAL,GAAoB,IAAI,2EAAJ,EAApB;AACA,mBAAK0C,iBAAL,CAAuBgE,KAAvB;AACA,mBAAKpH,aAAL,GAAqB,IAAI,qDAAJ,EAArB;AACA,mBAAKI,4BAAL,GAAoC,EAApC;AACA,mBAAKgD,iBAAL,CAAuBiE,eAAvB;AACA,mBAAKjE,iBAAL,CAAuBkE,cAAvB;AACD;AAnWI;AAAA;AAAA,mBAqWL,2BAAkB;AAAA;;AAChB,mBAAKnH,gBAAL,GAAwB,EAAxB;AAEA,mBAAKV,UAAL,CAAgBuB,OAAhB,CAAwB,kDAAUuG,uBAAlC,EAA2DrG,SAA3D,CACE,UAACsG,eAAD,EAA0B;AACxB,sBAAI,CAAC/H,UAAL,CACGuB,OADH,CACW,kDAAUyG,4BADrB,EAEGvG,SAFH,CAEa,UAACwG,oBAAD,EAA+B;AACxC,wBAAI,CAACjI,UAAL,CACGuB,OADH,CACW,kDAAUyG,4BADrB,EAEGvG,SAFH,CAEa,UAACyG,oBAAD,EAA+B;AACxC,0BAAI,CAACxH,gBAAL,gCACKqH,eAAe,CAACpG,YAAhB,CAA6BC,IADlC,sBAEKqG,oBAAoB,CAACtG,YAArB,CAAkCC,IAFvC,sBAGKsG,oBAAoB,CAACvG,YAArB,CAAkCC,IAHvC;AAKA,wBAAMuG,GAAG,GAAG,IAAZ;AACA,0BAAI,CAACzH,gBAAL,sBACK,IAAI0H,GAAJ,CACD,MAAI,CAAC1H,gBAAL,CAAsBmB,GAAtB,CAA0B,UAACwG,IAAD;AAAA,6BAAU,CAACA,IAAI,CAACF,GAAD,CAAL,EAAYE,IAAZ,CAAV;AAAA,qBAA1B,CADC,EAEDC,MAFC,EADL;AAKD,mBAdH;AAeD,iBAlBH;AAmBD,eArBH,EAsBE,UAACnE,GAAD,EAAc;AACZ1B,uBAAO,CAACC,GAAR,CAAYyB,GAAZ;AACD,eAxBH;AA0BD;AAlYI;AAAA;AAAA,mBAoYL,qBAAYsB,KAAZ,EAAwB8C,QAAxB,EAAqC;AACnC,kBAAI9C,KAAK,IAAI8C,QAAb,EAAuB;AACrB,uBAAO9C,KAAK,CAACnC,EAAN,KAAaiF,QAAQ,CAACjF,EAA7B;AACD;AACF;AAxYI;AAAA;AAAA,mBA0YL,iBAAQkF,MAAR,EAAc;AACZ,kBAAIA,MAAM,CAAClF,EAAX,EAAe;AACb,qBAAKxC,MAAL,CAAY2H,QAAZ,GAAuB,aAAvB;AACA,qBAAK3H,MAAL,CAAY4H,MAAZ,GAAqB,KAArB;AACC,qBAAK5H,MAAL,CAAY6H,MAAZ,GAAqB,SAAtB,EACG,KAAK7H,MAAL,CAAY8H,MAAZ,GAAqB;AAAEC,mCAAiB,EAAEL,MAAM,CAAClF;AAA5B,iBADxB;AAEA,qBAAKtD,UAAL,CACG8I,WADH,CACe,kDAAUC,eADzB,EAC0C,KAAKjI,MAD/C,EAEGW,SAFH,CAEa,UAACG,IAAD,EAAe;AACxB,sBAAMoH,OAAO,GAAG,IAAIC,IAAJ,CAAS,CAACrH,IAAD,CAAT,EAAiB;AAAEsH,wBAAI,EAAE;AAAR,mBAAjB,CAAhB;AACA,sBAAMC,WAAW,GAAGC,GAAG,CAACC,eAAJ,CAAoBL,OAApB,CAApB;AACAM,wBAAM,CAACC,IAAP,CAAYJ,WAAZ;AACD,iBANH;AAOD,eAZD,MAYO;AACL,qBAAKjJ,iBAAL,CAAuB2C,kBAAvB,CAA0C,6BAA1C;AACD;AACF;AA1ZI;AAAA;AAAA,mBA4ZL,yCAAgC;AAAA;;AAC9B,kBACE,KAAKwD,iBAAL,IACA,KAAK9F,aAAL,CAAmB8G,YADnB,IAEA,KAAK9G,aAAL,CAAmBsF,YAHrB,EAIE;AACA,qBAAK7F,UAAL,CACGuB,OADH,CAEI,kDAAUiI,+BAAV,GACE,GADF,GAEE,KAAKnD,iBAFP,GAGE,kBAHF,GAIE,KAAK9F,aAAL,CAAmB8G,YAAnB,CAAgCoC,WAJlC,GAKE,iBALF,GAME,KAAKlJ,aAAL,CAAmBsF,YAAnB,CAAgCC,QAAhC,EARN,EAUGrE,SAVH,CAUa,UAACC,GAAD,EAAS;AAClB,wBAAI,CAACd,0BAAL,GAAkCc,GAAlC;AACD,iBAZH;AAaD;AACF;AAhbI;;AAAA;AAAA;;;2BAAM3B,sB,EAAsB,qH,EAAA,2H,EAAA,4H,EAAA,+H,EAAA,6H;AAAA,S;;;gBAAtBA,sB;AAAsB,6C;AAAA;AAAA;wEACtB,4D,EAAiB,I;;;;;;;;;;;;;;ACpB9B;;AACE;;AACE;;AACE;;AACE;;AAAY;;AAA6B;;AAC3C;;AACF;;AACA;;AAEA;;AACE;;AACE;;AACE;;AACG;;AACD;;AAA6B;;AAAC;;AAAO;;AAEvC;;AAEE;AAAA;AAAA;;AAFF;;AAMF;;AAQA;;AACE;;AACE;;AAGA;;AACF;;AACA;;AACE;;AAOF;;AACF;;AAEA;;AACE;;AAAW;;AAAa;;AACxB;;AAEE;AAAA;AAAA;;AAFF;;AAMF;;AAEA;;AACE;;AAAW;;AAAY;;AACvB;;AAEE;AAAA;AAAA;;AAFF;;AAMF;;AAEA;;AACE;;AAAW;;AAAgB;;AAC3B;;AAEE;AAAA;AAAA;;AAIF;;AAAA;;AACF;;AAEA;;AACE;;AAAW;;AAAe;;AAC1B;;AAEE;AAAA;AAAA;;AAFF;;AAMF;;AAEA;;AACE;;AAAW;;AAAe;;AAC1B;;AAEE;AAAA;AAAA;;AAFF;;AAMF;;AAYA;;AACE;;AAAY;;AAAqB;;AACjC;;AACE;AAAA;AAAA,iBAAwC,iBAAxC,EAAwC;AAAA,uBAErB,IAAAwG,6BAAA,EAFqB;AAEU,eAFlD;;AAIA;;AAA0B;;AAAI;;AAC9B;;AAA2B;;AAAG;;AAChC;;AACF;;AAEA;;AACE;;AAAW;;AAAa;;AACxB;;AAMF;;AAQA;;AACE;;AAAW;;AAAc;;AACzB;;AACE;AAAA;AAAA,iBAAwC,iBAAxC,EAAwC;AAAA,uBAIrB,IAAAA,6BAAA,EAJqB;AAIU,eAJlD;;AAMA;;AAGF;;AACF;;AAEA;;AACE;;AAAW;;AAA6B;;AACxC;;AACE;AAAA;AAAA;;AAUA;;AAMF;;AACA;;AACA;;AASF;;AAEA;;AACE;;AAAW;;AAAe;;AAC1B;;AAEA;;AAWF;;AACF;;AACF;;AAEA;;AACE;;AAGE;AAAA,uBAAgB,IAAAmD,YAAA,EAAhB;AAA8B,eAA9B,EAA+B,gBAA/B,EAA+B;AAAA,uBACb,IAAAA,YAAA,EADa;AACC,eADhC,EAA+B,gBAA/B,EAA+B;AAAA,uBAEb,IAAA3E,kBAAA,EAFa;AAEO,eAFtC;;AAIF;;AACA;;AAIE;AAAA,uBAAS,IAAA4E,OAAA,mBAAT;AAA+B,eAA/B;;AAEA;;AAAuC;;AAAK;;AAAK;;AACnD;;AACF;;AACA;;AAEA;;AACA;;AAGE;AAAA,uBAAwB,IAAAC,gBAAA,EAAxB;AAA0C,eAA1C,EAA2C,sBAA3C,EAA2C;AAAA,uBACnB,IAAAC,MAAA,EADmB;AACX,eADhC;;AAED;;AACH;;AACF;;;;;;AA9NU;;AAAA;;AASE;;AAAA;;AAcc;;AAAA,uGAAgD,UAAhD,EAAgD,GAAhD;;AAKJ;;AAAA;;AAER;;AAAA;;AAaF;;AAAA;;AAUA;;AAAA;;AAUA;;AAAA;;AAWA;;AAAA;;AAUA;;AAAA;;AAmBA;;AAAA,kHAAwC,gBAAxC,EAAwC,sEAAxC;;AA4BA;;AAAA,kHAAwC,aAAxC,EAAwC,eAAxC;;AAMY;;AAAA;;AASZ;;AAAA,wHAA8C,UAA9C,EAA8C,4FAA9C,EAA8C,aAA9C,EAA8C,eAA9C;;AAWE;;AAAA;;AAME;;AAAA;;AAKJ;;AAAA;;AAWE;;AAAA;;AAiBN;;AAAA,yGAA6B,WAA7B,EAA6B,qBAA7B;;AAQA;;AAAA;;AAYF;;AAAA,qGAAyB,kBAAzB,EAAyB,oBAAzB;;;;;;;OD9MC;;;;;;;;;;;;;;;;;AEfP;AAAA;;;AAAA;AAAA;AAAA;;UAAaC,iB;AAAb;AAAA;;AACE,eAAA/F,UAAA,GAAqB,CAArB;AACA,eAAAiC,QAAA,GAAmB,CAAnB;AACA,eAAAC,mBAAA,GAA8B,CAA9B;AACA,eAAAF,cAAA,GAAyB,CAAzB;AAmBD;;;;iBAjBC,wBAAenE,IAAf,EAAqC;AACnCa,mBAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8Bd,IAA9B;AACA,gBAAImE,cAAc,GAAW,CAA7B;AACA,gBAAIC,QAAQ,GAAW,CAAvB;AACA,gBAAIjC,UAAU,GAAW,CAAzB;AACA,gBAAIgG,oBAAoB,GAAW,CAAnC;AACAnI,gBAAI,CAACmB,MAAL,CAAY,UAAC0D,OAAD,EAAsB;AAChCV,4BAAc,GAAGA,cAAc,GAAGU,OAAO,CAACuD,SAA1C;AACAhE,sBAAQ,GAAGA,QAAQ,GAAGS,OAAO,CAACwD,GAA9B;AACAlG,wBAAU,GAAGA,UAAU,GAAG0C,OAAO,CAACyD,SAArB,GAAiCzD,OAAO,CAACwD,GAAtD;AACAF,kCAAoB,GAAGA,oBAAoB,GAAGtD,OAAO,CAAC0D,cAAtD;AACD,aALD;AAMA,iBAAKpE,cAAL,GAAsBA,cAAtB;AACA,iBAAKhC,UAAL,GAAkBA,UAAlB;AACA,iBAAKiC,QAAL,GAAgBA,QAAhB;AACA,iBAAKC,mBAAL,GAA2B,KAAKA,mBAAhC;AACD;;;;;;;;;;;;;;;;;;;;;AC1BH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAIA,UAAMmE,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAE;AAFb,OADqB,CAAvB;;AAWO;AAAA,YAAMC,0BAAN;AAAA;AAAA;;;gBAAMA;;;;6BAAAA,0B;AAA0B,W;AAAA,oBAH5B,CAAC,6DAAaC,QAAb,CAAsBJ,MAAtB,CAAD,CAG4B,EAF3B,4DAE2B;;;OAAhC;;;4HAAMG,0B,EAA0B;AAAA;AAAA,oBAF3B,4DAE2B;AAAA,S;AAFf,O","file":"or-preparation-or-preparation-module-es5.js","sourcesContent":["import { NgModule } from \"@angular/core\";\r\nimport { CommonModule, DecimalPipe } from \"@angular/common\";\r\n\r\nimport { OrPreparationRoutingModule } from \"./or-preparation-routing.module\";\r\nimport { OrPreparationComponent } from \"./or-preparation.component\";\r\nimport { HttpClientModule } from \"@angular/common/http\";\r\nimport { ReactiveFormsModule } from \"@angular/forms\";\r\nimport { AngularMaterialModule } from \"@shared\";\r\nimport { FragmentsModule } from \"app/modules/fragments/fragments.module\";\r\n\r\n@NgModule({\r\n  declarations: [OrPreparationComponent],\r\n  imports: [\r\n    CommonModule,\r\n    OrPreparationRoutingModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule,\r\n    AngularMaterialModule,\r\n    FragmentsModule,\r\n  ],\r\n  providers: [DecimalPipe],\r\n})\r\nexport class OrPreparationModule {}\r\n","export * from './form-action-buttons/form-action-buttons.component';\r\nexport * from './form-list/form-list.component';","import { GenericResponse } from \"./../../../../core/models/generic-response-model/generic-response.model\";\r\nimport { TotalAmountsModel } from \"./../../../../core/models/totals.model\";\r\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { FormListComponent } from \"@fragments\";\r\nimport { OrPreparation, OrPreparationReference, Payment } from \"@models\";\r\nimport { ApiService, SweetAlertService } from \"@services\";\r\nimport { COMMON_FUNCTION, ENDPOINTS, STATUSES } from \"@shared\";\r\nimport { Report } from \"app/core/models/report.model\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport Swal from \"sweetalert2\";\r\nimport { DecimalPipe } from \"@angular/common\";\r\n\r\n@Component({\r\n  selector: \"app-or-preparation\",\r\n  templateUrl: \"./or-preparation.component.html\",\r\n  styleUrls: [\"./or-preparation.component.scss\"],\r\n})\r\nexport class OrPreparationComponent implements OnInit {\r\n  @ViewChild(FormListComponent) formListComponent: FormListComponent;\r\n  dataSource: MatTableDataSource<OrPreparation>;\r\n  displayedColumns: string[] = [\r\n    \"officialReceiptNo\",\r\n    \"typeOfMediumDescription\",\r\n    \"officialReceiptReferences\",\r\n    \"status\",\r\n    \"deleteIcon\",\r\n  ];\r\n  statusList = [...STATUSES];\r\n\r\n  orPreparation = new OrPreparation();\r\n  selectedCompanyId: number;\r\n  selectedCompany: any;\r\n  orPreparationReference = new OrPreparationReference();\r\n  orPreparationList = [];\r\n  typeOfMediumList = [];\r\n  officialReceiptReferenceList = [];\r\n  availableReferenceCodeList = [];\r\n  companyList = [];\r\n  report = new Report();\r\n  orPreparationForm: FormGroup;\r\n  totalAmts: Array<Payment> = new Array<Payment>();\r\n  totalAmounts: TotalAmountsModel = new TotalAmountsModel();\r\n  isGettingCompanies: boolean;\r\n  isWitholding: boolean;\r\n\r\n  constructor(\r\n    private apiService: ApiService,\r\n    private formBuilder: FormBuilder,\r\n    private sweetAlertService: SweetAlertService,\r\n    private spinner: NgxSpinnerService,\r\n    private numberPipe: DecimalPipe\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.getList();\r\n    this.setFormValidator();\r\n    this.getTypeOfMedium();\r\n    this.getCompanyList();\r\n    this.getAvailableReferenceCode();\r\n  }\r\n\r\n  getList(): void {\r\n    this.getAvailableReferenceCode();\r\n    this.apiService.findAll(ENDPOINTS.officialReceipt).subscribe((res: any) => {\r\n      this.orPreparationList = res.responseData.data;\r\n\r\n      this.orPreparationList = this.orPreparationList.map((mappedList) => ({\r\n        ...mappedList,\r\n        officialReceiptReferencesValue: mappedList.officialReceiptReferences.reduce(\r\n          (previousValue, currentValue) => {\r\n            if (previousValue) {\r\n              return previousValue + \", \" + currentValue?.reference;\r\n            } else {\r\n              return currentValue?.reference;\r\n            }\r\n          },\r\n          \"\"\r\n        ),\r\n      }));\r\n\r\n      this.dataSource = new MatTableDataSource<OrPreparation>(\r\n        this.orPreparationList\r\n      );\r\n      this.dataSource.paginator = this.formListComponent.paginator;\r\n      this.dataSource.sort = this.formListComponent.sort;\r\n    });\r\n  }\r\n\r\n  amountChanged() {\r\n    // this.orPreparationForm\r\n    //   .get(\"totalAmount\")\r\n    //   .setValue(\r\n    //     this.numberPipe.transform(\r\n    //       (+this.orPreparationForm.get(\"amount\").value || 0) +\r\n    //         this.totalAmounts.totalSales,\r\n    //       \".2-2\"\r\n    //     )\r\n    //   );\r\n  }\r\n\r\n  addReceiptReference() {\r\n    console.log(\"prep => \", this.orPreparationReference);\r\n    if (\r\n      (this.orPreparation.voucherControlNumber &&\r\n        this.officialReceiptReferenceList.length >= 6) ||\r\n      this.officialReceiptReferenceList.length >= 9\r\n    ) {\r\n      this.sweetAlertService.customErrorMessage(\"Max input limit reached\");\r\n    } else {\r\n      const isExisting = this.officialReceiptReferenceList.filter(\r\n        (filteredOR) =>\r\n          filteredOR.reference === this.orPreparationReference.reference.trim()\r\n      );\r\n      if (isExisting.length) {\r\n        this.sweetAlertService.customErrorMessage(\r\n          \"Reference code already in the list\"\r\n        );\r\n      } else {\r\n        this.apiService\r\n          .findByParam(\r\n            ENDPOINTS.orPreparationRefCodeCheck,\r\n            this.orPreparationReference.reference\r\n          )\r\n          .subscribe(\r\n            (res) => {\r\n              if (res?.responseData?.data) {\r\n                let appForm = res?.responseData?.data[0];\r\n                this.apiService\r\n                  .findByParam(ENDPOINTS.paymentDetailsByAppformId, appForm.id)\r\n                  .subscribe((form: GenericResponse<Payment>) => {\r\n                    console.log(\"form : \", form);\r\n                    let paymentDtls;\r\n                    if (form) {\r\n                      //  this.totalAmounts.totalAmountDue = Number(this.totalAmounts.totalAmountDue) + Number(form?.responseData?.data?.amountDue);\r\n                      // this.totalAmounts.setTotalValues(form.responseData.data)\r\n\r\n                      this.totalAmts.push(form.responseData.data);\r\n                      this.totalAmounts.setTotalValues(this.totalAmts);\r\n\r\n                      this.orPreparationForm\r\n                        .get(\"totalAmount\")\r\n                        .setValue(\r\n                          this.numberPipe.transform(\r\n                            this.totalAmounts.totalSales,\r\n                            \".2-2\"\r\n                          )\r\n                        );\r\n                    }\r\n                    console.log(\"totals : \", this.totalAmounts);\r\n                  });\r\n\r\n                this.officialReceiptReferenceList.push(\r\n                  this.orPreparationReference\r\n                );\r\n                this.orPreparationReference.amount = appForm.amount;\r\n                // this.getAvailableReferenceCode(this.orPreparationReference?.reference);\r\n                this.orPreparationReference = new OrPreparationReference();\r\n                // console.log(\"data => \", this.officialReceiptReferenceList)\r\n                this.officialReceiptReferenceList.filter((ref) => {\r\n                  // let total = Number(this.orPreparationForm.controls.totalAmount.value) + Number(ref.amount);\r\n                  // this.orPreparationForm.controls.totalAmount.setValue(total);\r\n                });\r\n              } else {\r\n                this.sweetAlertService.customErrorMessage(res?.responseMessage);\r\n              }\r\n            },\r\n            (err) => {\r\n              this.sweetAlertService.error(err);\r\n            }\r\n          );\r\n      }\r\n    }\r\n  }\r\n\r\n  removeReferenceCode(obj) {\r\n    this.officialReceiptReferenceList = this.officialReceiptReferenceList.filter(\r\n      (filteredOR) => filteredOR.reference !== obj.reference.trim()\r\n    );\r\n    console.log(\"remove ref : \", obj);\r\n    console.log(\"totalAmts\", this.totalAmts);\r\n    this.totalAmts = this.totalAmts.filter(\r\n      (amts) => amts.applicationForm.referenceCode !== obj.reference.trim()\r\n    );\r\n    console.log(\"totalamts\", this.totalAmts);\r\n    this.totalAmounts.setTotalValues(this.totalAmts);\r\n    console.log(\"total amounts : \", this.totalAmounts);\r\n  }\r\n\r\n  getAvailableReferenceCode(refCode = \"\") {\r\n    // if (refCode) {\r\n    //   this.apiService\r\n    //     .findByParam(ENDPOINTS.availableReferenceCode, refCode)\r\n    //     .subscribe((res) => {\r\n    //       console.log(res);\r\n    //     });\r\n    // } else {\r\n    //   this.apiService\r\n    //     .findAll(ENDPOINTS.availableReferenceCode)\r\n    //     .subscribe((res) => {\r\n    //       console.log(res);\r\n    //       this.availableReferenceCodeList = res;\r\n    //     });\r\n    // }\r\n  }\r\n\r\n  saveOrUpdate(): void {\r\n    this.orPreparation.id = this.orPreparation?.id ? this.orPreparation.id : 0;\r\n    this.orPreparation.officialReceiptReferences = this.officialReceiptReferenceList;\r\n    // this.orPreparation.setTotalAmounts(this.totalAmounts);\r\n    // console.log(this.totalAmounts.)\r\n    console.log(\"orPrep\", this.orPreparation);\r\n    this.apiService\r\n      .findByParam(\r\n        ENDPOINTS.orPreparationORNumberCheck,\r\n        this.orPreparation.officialReceiptNo\r\n      )\r\n      .subscribe(\r\n        (isExisting) => {\r\n          if (isExisting.responseData.data && !this.orPreparation?.id) {\r\n            this.sweetAlertService.customErrorMessage(\r\n              isExisting.responseMessage\r\n            );\r\n          } else {\r\n            // this.orPreparation.setTotalAmounts(this.totalAmounts);\r\n            // console.log('orPreparation')\r\n            this.apiService\r\n              .save(`${ENDPOINTS.orPreparation}/submit`, {\r\n                ...this.orPreparation,\r\n                ...this.totalAmounts,\r\n              })\r\n              .subscribe(\r\n                (res: any) => {\r\n                  if (res !== undefined) {\r\n                    this.sweetAlertService.success(res);\r\n                  }\r\n                },\r\n                (err: any) => {\r\n                  this.sweetAlertService.error(err);\r\n                },\r\n                () => {\r\n                  this.resetFormValidator();\r\n                  this.getList();\r\n                }\r\n              );\r\n          }\r\n        },\r\n        (err) => this.sweetAlertService.error(err)\r\n      );\r\n  }\r\n\r\n  cancel(): void {\r\n    Swal.fire({\r\n      text: `Are you sure you want to cancel this Official Receipt Preparation?`,\r\n      icon: \"question\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Confirm\",\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.orPreparation = this.formListComponent.elementObject;\r\n        this.orPreparation.officialReceiptReferences = null;\r\n        this.apiService\r\n          .save(`${ENDPOINTS.orPreparation}/cancel`, this.orPreparation)\r\n          .subscribe(\r\n            (res: any) => {\r\n              if (res !== undefined) {\r\n                this.sweetAlertService.success(res);\r\n              }\r\n            },\r\n            (err: any) => {\r\n              this.sweetAlertService.error(err);\r\n            },\r\n            () => {\r\n              this.resetFormValidator();\r\n              this.getList();\r\n            }\r\n          );\r\n      }\r\n    });\r\n  }\r\n\r\n  getOrPreparation(): void {\r\n    console.log(\"get:: =>\");\r\n    this.apiService\r\n      .findById(ENDPOINTS.officialReceipt, this.formListComponent.idForUpdate)\r\n      .subscribe((res: any) => {\r\n        if (res) {\r\n          this.orPreparation = res.responseData.data;\r\n          this.orPreparation.filedBirForm = <any>(\r\n            this.orPreparation.filedBirForm.toString()\r\n          );\r\n          console.log(\"OR PREP => \", this.orPreparation);\r\n          this.totalAmounts.totalSales = this.orPreparation.totalSales;\r\n          this.totalAmounts.totalAmountDue = this.orPreparation.totalAmountDue;\r\n          this.totalAmounts.totalVat = this.orPreparation.totalVat;\r\n          this.totalAmounts.totalWithholdingtax = this.orPreparation.totalWithholdingtax;\r\n\r\n          const company = this.companyList.find(\r\n            (company) => company.companyName === this.orPreparation.companyName\r\n          );\r\n\r\n          this.selectedCompanyId = company.id;\r\n          this.selectedCompany = company;\r\n          this.getAvailableReferenceCodeList();\r\n          this.orPreparationForm\r\n            .get(\"totalAmount\")\r\n            .setValue(this.totalAmounts.totalSales);\r\n          this.officialReceiptReferenceList = this.orPreparation.officialReceiptReferences;\r\n          this.officialReceiptReferenceList.filter((or) => {\r\n            this.apiService\r\n              .findByParam(ENDPOINTS.orPreparationRefCodeCheck, or.reference)\r\n              .subscribe((paymentDtls) => {\r\n                let appForm = paymentDtls?.responseData?.data[0];\r\n                this.apiService\r\n                  .findByParam(ENDPOINTS.paymentDetailsByAppformId, appForm.id)\r\n                  .subscribe((payment) => {\r\n                    this.totalAmts.push(payment?.responseData?.data);\r\n                  });\r\n              });\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  getCompanyList() {\r\n    this.isGettingCompanies = true;\r\n    this.apiService.findAll(ENDPOINTS.activeCompanies).subscribe(\r\n      (res: any) => {\r\n        this.companyList = res.responseData.data; // .filter((company) => !this.notInSelection.includes(company.status));\r\n        this.isGettingCompanies = false;\r\n      },\r\n      (err: any) => {\r\n        this.isGettingCompanies = false;\r\n      }\r\n    );\r\n  }\r\n\r\n  setCompanyDetails(i) {\r\n    this.selectedCompanyId = i.id;\r\n    this.orPreparation.companyName = i.companyName;\r\n    this.orPreparation.companyTin = i.companyTin;\r\n    this.orPreparation.companyAddress =\r\n      \"[\" + i.country.code + \" - \" + i.country.name + \"] \" + i.completeAddress;\r\n    this.getAvailableReferenceCodeList();\r\n  }\r\n\r\n  setFormValidator(): void {\r\n    this.orPreparationForm = this.formBuilder.group({\r\n      officialReceiptNo: [\"\", Validators.required],\r\n      typeOfMedium: [\"\", Validators.required],\r\n      amount: [\"\"],\r\n      officialReceiptReference: [\"\"],\r\n      voucherControlNumber: [\"\"],\r\n      businessStyle: [\"\"],\r\n      fullPaymentOf: [\"\"],\r\n      controlNumber: [\"\"],\r\n      companyName: [\"\"],\r\n      companyTin: [\"\"],\r\n      companyAddress: [\"\"],\r\n      totalAmount: [\"\"],\r\n    });\r\n  }\r\n\r\n  resetFormValidator(): void {\r\n    this.selectedCompanyId = null;\r\n    this.totalAmounts = new TotalAmountsModel();\r\n    this.orPreparationForm.reset();\r\n    this.orPreparation = new OrPreparation();\r\n    this.officialReceiptReferenceList = [];\r\n    this.orPreparationForm.markAsUntouched();\r\n    this.orPreparationForm.markAsPristine();\r\n  }\r\n\r\n  getTypeOfMedium() {\r\n    this.typeOfMediumList = [];\r\n\r\n    this.apiService.findAll(ENDPOINTS.typeOfMediumSingleMedia).subscribe(\r\n      (singleMediaList: any) => {\r\n        this.apiService\r\n          .findAll(ENDPOINTS.typeOfMediumMultiMediaMoving)\r\n          .subscribe((multimediaMovingList: any) => {\r\n            this.apiService\r\n              .findAll(ENDPOINTS.typeOfMediumMultiMediaMoving)\r\n              .subscribe((multimediaStaticList: any) => {\r\n                this.typeOfMediumList = [\r\n                  ...singleMediaList.responseData.data,\r\n                  ...multimediaMovingList.responseData.data,\r\n                  ...multimediaStaticList.responseData.data,\r\n                ];\r\n                const key = \"id\";\r\n                this.typeOfMediumList = [\r\n                  ...new Map(\r\n                    this.typeOfMediumList.map((item) => [item[key], item])\r\n                  ).values(),\r\n                ];\r\n              });\r\n          });\r\n      },\r\n      (err: any) => {\r\n        console.log(err);\r\n      }\r\n    );\r\n  }\r\n\r\n  compareList(value: any, selected: any): boolean {\r\n    if (value && selected) {\r\n      return value.id === selected.id;\r\n    }\r\n  }\r\n\r\n  printOr(orData): void {\r\n    if (orData.id) {\r\n      this.report.filename = \"ASC_Receipt\";\r\n      this.report.format = \"pdf\";\r\n      (this.report.module = \"Receipt\"),\r\n        (this.report.params = { officialReceiptId: orData.id });\r\n      this.apiService\r\n        .printReport(ENDPOINTS.generateReports, this.report)\r\n        .subscribe((data: any) => {\r\n          const newBlob = new Blob([data], { type: \"application/pdf\" });\r\n          const downloadURL = URL.createObjectURL(newBlob);\r\n          window.open(downloadURL);\r\n        });\r\n    } else {\r\n      this.sweetAlertService.customErrorMessage(\"Please select data first...\");\r\n    }\r\n  }\r\n\r\n  getAvailableReferenceCodeList() {\r\n    if (\r\n      this.selectedCompanyId &&\r\n      this.orPreparation.typeOfMedium &&\r\n      this.orPreparation.filedBirForm\r\n    ) {\r\n      this.apiService\r\n        .findAll(\r\n          ENDPOINTS.availableReferenceCodeByCompany +\r\n            \"/\" +\r\n            this.selectedCompanyId +\r\n            \"/type-of-medium/\" +\r\n            this.orPreparation.typeOfMedium.description +\r\n            \"/file-bir-form/\" +\r\n            this.orPreparation.filedBirForm.toString()\r\n        )\r\n        .subscribe((res) => {\r\n          this.availableReferenceCodeList = res;\r\n        });\r\n    }\r\n  }\r\n}\r\n","<form>\r\n  <div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12 title\">\r\n        <mat-label> Official Receipt Preparation </mat-label>\r\n      </div>\r\n    </div>\r\n    <hr />\r\n\r\n    <form [formGroup]=\"orPreparationForm\">\r\n      <div class=\"row\">\r\n        <mat-form-field class=\"col-md-6\" appearance=\"outline\">\r\n          <mat-label\r\n            >Official Receipt Number\r\n            <span class=\"required-field\">*</span></mat-label\r\n          >\r\n          <input\r\n            matInput\r\n            [(ngModel)]=\"orPreparation.officialReceiptNo\"\r\n            name=\"officialReceiptNo\"\r\n            formControlName=\"officialReceiptNo\"\r\n          />\r\n        </mat-form-field>\r\n\r\n        <!-- <mat-form-field class=\"col-md-6\" appearance=\"outline\">\r\n          <mat-label>Voucher Control Number</mat-label>\r\n          <input matInput [(ngModel)]=\"orPreparation.voucherControlNumber\" name=\"voucherControlNumber\"\r\n            formControlName=\"voucherControlNumber\">\r\n        </mat-form-field> -->\r\n\r\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n          <mat-label>\r\n            <ng-container *ngIf=\"isGettingCompanies; else loadedLabelTemp\">\r\n              <i>Loading companies...</i>\r\n            </ng-container>\r\n            <ng-template #loadedLabelTemp> Search Company: </ng-template>\r\n          </mat-label>\r\n          <mat-select [value]=\"selectedCompany\">\r\n            <mat-option\r\n              *ngFor=\"let i of companyList\"\r\n              [value]=\"i\"\r\n              (click)=\"setCompanyDetails(i)\"\r\n            >\r\n              {{ i.companyName }}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field class=\"col-md-6\" appearance=\"outline\">\r\n          <mat-label>Company Name:</mat-label>\r\n          <input\r\n            matInput\r\n            [(ngModel)]=\"orPreparation.companyName\"\r\n            name=\"companyName\"\r\n            formControlName=\"companyName\"\r\n          />\r\n        </mat-form-field>\r\n\r\n        <mat-form-field class=\"col-md-6\" appearance=\"outline\">\r\n          <mat-label>Company TIN:</mat-label>\r\n          <input\r\n            matInput\r\n            [(ngModel)]=\"orPreparation.companyTin\"\r\n            name=\"companyTin\"\r\n            formControlName=\"companyTin\"\r\n          />\r\n        </mat-form-field>\r\n\r\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n          <mat-label>Company Address:</mat-label>\r\n          <textarea\r\n            matInput\r\n            [(ngModel)]=\"orPreparation.companyAddress\"\r\n            name=\"companyAddress\"\r\n            formControlName=\"companyAddress\"\r\n          >\r\n          </textarea>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field class=\"col-md-6\" appearance=\"outline\">\r\n          <mat-label>Business Style:</mat-label>\r\n          <input\r\n            matInput\r\n            [(ngModel)]=\"orPreparation.businessStyle\"\r\n            name=\"businessStyle\"\r\n            formControlName=\"businessStyle\"\r\n          />\r\n        </mat-form-field>\r\n\r\n        <mat-form-field class=\"col-md-6\" appearance=\"outline\">\r\n          <mat-label>Control Number:</mat-label>\r\n          <input\r\n            matInput\r\n            [(ngModel)]=\"orPreparation.controlNumber\"\r\n            name=\"controlNumber\"\r\n            formControlName=\"controlNumber\"\r\n          />\r\n        </mat-form-field>\r\n\r\n        <!-- <mat-form-field class=\"col-md-6\" appearance=\"outline\">\r\n          <mat-label>Amount:</mat-label>\r\n          <input\r\n            matInput\r\n            [(ngModel)]=\"orPreparation.amount\"\r\n            name=\"amount\"\r\n            (change)=\"amountChanged()\"\r\n            formControlName=\"amount\"\r\n          />\r\n        </mat-form-field> -->\r\n        <mat-form-field class=\"col-md-6\" appearance=\"outline\">\r\n          <mat-label> With/Witholding Tax? </mat-label>\r\n          <mat-select\r\n            [(ngModel)]=\"orPreparation.filedBirForm\"\r\n            [ngModelOptions]=\"{ standalone: true }\"\r\n            (selectionChange)=\"getAvailableReferenceCodeList()\"\r\n          >\r\n            <mat-option value=\"true\"> Yes </mat-option>\r\n            <mat-option value=\"false\"> NO </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field class=\"col-md-6\" appearance=\"outline\">\r\n          <mat-label>Total Amount:</mat-label>\r\n          <input\r\n            matInput\r\n            name=\"totalAmount\"\r\n            formControlName=\"totalAmount\"\r\n            readonly\r\n          />\r\n        </mat-form-field>\r\n\r\n        <!-- <mat-form-field class=\"col-md-8\" appearance=\"outline\">\r\n          <mat-label>Amount In Words:</mat-label>\r\n          <input matInput [(ngModel)]=\"orPreparation.fullPaymentOf\" name=\"fullPaymentOf\"\r\n            formControlName=\"fullPaymentOf\">\r\n        </mat-form-field> -->\r\n\r\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n          <mat-label>Type of Medium</mat-label>\r\n          <mat-select\r\n            [(ngModel)]=\"orPreparation.typeOfMedium\"\r\n            formControlName=\"typeOfMedium\"\r\n            name=\"typeOfMedium\"\r\n            [compareWith]=\"compareList\"\r\n            (selectionChange)=\"getAvailableReferenceCodeList()\"\r\n          >\r\n            <mat-option *ngFor=\"let i of typeOfMediumList\" [value]=\"i\">\r\n              {{ i.description }}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field class=\"col-md-6\" appearance=\"outline\">\r\n          <mat-label>List of Paid Reference Codes:</mat-label>\r\n          <mat-select\r\n            [(ngModel)]=\"orPreparationReference.reference\"\r\n            [disabled]=\"\r\n              !selectedCompanyId ||\r\n              !orPreparation.typeOfMedium ||\r\n              !orPreparation.filedBirForm\r\n            \"\r\n            formControlName=\"officialReceiptReference\"\r\n            name=\"officialReceiptReference\"\r\n            [compareWith]=\"compareList\"\r\n          >\r\n            <mat-option\r\n              *ngFor=\"let i of availableReferenceCodeList\"\r\n              [value]=\"i.referenceCode\"\r\n            >\r\n              {{ i.referenceCode }}\r\n            </mat-option>\r\n          </mat-select>\r\n          <span *ngIf=\"orPreparationReference.reference\"> <br /><br /> </span>\r\n          <button\r\n            mat-raised-button\r\n            color=\"primary\"\r\n            (click)=\"addReceiptReference()\"\r\n            *ngIf=\"orPreparationReference.reference\"\r\n          >\r\n            <i class=\"material-icons color__white\">save</i> Add Receipt\r\n            Reference\r\n          </button>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field class=\"col-md-6\" appearance=\"outline\">\r\n          <mat-label>Reference List:</mat-label>\r\n          <input matInput readonly />\r\n\r\n          <ul *ngFor=\"let i of officialReceiptReferenceList\">\r\n            <li>\r\n              {{ i.reference }}\r\n              <span\r\n                class=\"material-icons\"\r\n                matTooltip=\"Remove Reference Code\"\r\n                (click)=\"removeReferenceCode(i)\"\r\n                >close</span\r\n              >\r\n            </li>\r\n          </ul>\r\n        </mat-form-field>\r\n      </div>\r\n    </form>\r\n\r\n    <div class=\"button-content\">\r\n      <app-form-action-buttons\r\n        [childObject]=\"orPreparation\"\r\n        [childForm]=\"orPreparationForm\"\r\n        (saveFunction)=\"saveOrUpdate()\"\r\n        (updateFunction)=\"saveOrUpdate()\"\r\n        (cancelFunction)=\"resetFormValidator()\"\r\n      >\r\n      </app-form-action-buttons>\r\n      <button\r\n        [disabled]=\"!orPreparation.id\"\r\n        mat-raised-button\r\n        color=\"primary\"\r\n        (click)=\"printOr(orPreparation)\"\r\n      >\r\n        <i class=\"material-icons color__white\">print</i> Print OR\r\n      </button>\r\n    </div>\r\n    <br />\r\n\r\n    <br />\r\n    <app-form-list\r\n      [dataSource]=\"dataSource\"\r\n      [displayedColumns]=\"displayedColumns\"\r\n      (selectInListFunction)=\"getOrPreparation()\"\r\n      (deleteInListFunction)=\"cancel()\"\r\n    ></app-form-list>\r\n  </div>\r\n</form>\r\n","import { Payment } from \"./payment.model\";\r\n\r\ninterface Amounts {}\r\n\r\nexport class TotalAmountsModel {\r\n  totalSales: number = 0;\r\n  totalVat: number = 0;\r\n  totalWithholdingtax: number = 0;\r\n  totalAmountDue: number = 0;\r\n\r\n  setTotalValues(data: Array<Payment>) {\r\n    console.log(\"totalValues:  \", data);\r\n    let totalAmountDue: number = 0;\r\n    let totalVat: number = 0;\r\n    let totalSales: number = 0;\r\n    let totalwWithholdingtax: number = 0;\r\n    data.filter((payment: Payment) => {\r\n      totalAmountDue = totalAmountDue + payment.amountDue;\r\n      totalVat = totalVat + payment.vat;\r\n      totalSales = totalSales + payment.basicRate + payment.vat;\r\n      totalwWithholdingtax = totalwWithholdingtax + payment.withholdingTax;\r\n    });\r\n    this.totalAmountDue = totalAmountDue;\r\n    this.totalSales = totalSales;\r\n    this.totalVat = totalVat;\r\n    this.totalWithholdingtax = this.totalWithholdingtax;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { OrPreparationComponent } from './or-preparation.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: OrPreparationComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class OrPreparationRoutingModule { }\r\n"]}
=======
{"version":3,"sources":["webpack:///src/app/modules/pages/accounting/or-preparation/or-preparation.module.ts","webpack:///src/app/modules/fragments/index.ts","webpack:///src/app/modules/pages/accounting/or-preparation/or-preparation.component.ts","webpack:///src/app/modules/pages/accounting/or-preparation/or-preparation.component.html","webpack:///src/app/core/models/totals.model.ts","webpack:///src/app/modules/pages/accounting/or-preparation/or-preparation-routing.module.ts"],"names":["OrPreparationModule","OrPreparationComponent","apiService","formBuilder","sweetAlertService","spinner","numberPipe","displayedColumns","statusList","orPreparation","orPreparationReference","orPreparationList","typeOfMediumList","officialReceiptReferenceList","availableReferenceCodeList","companyList","report","totalAmts","Array","totalAmounts","getList","setFormValidator","getTypeOfMedium","getCompanyList","getAvailableReferenceCode","findAll","officialReceipt","subscribe","res","responseData","data","map","mappedList","officialReceiptReferencesValue","officialReceiptReferences","reduce","previousValue","currentValue","reference","dataSource","paginator","formListComponent","sort","console","log","voucherControlNumber","length","customErrorMessage","isExisting","filter","filteredOR","trim","findByParam","orPreparationRefCodeCheck","appForm","paymentDetailsByAppformId","id","form","paymentDtls","push","setTotalValues","orPreparationForm","get","setValue","transform","totalSales","amount","ref","responseMessage","err","error","obj","amts","applicationForm","referenceCode","refCode","orPreparationORNumberCheck","officialReceiptNo","save","undefined","success","resetFormValidator","fire","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","value","elementObject","findById","idForUpdate","totalAmountDue","totalVat","totalWithholdingtax","company","find","companyName","selectedCompanyId","selectedCompany","getAvailableReferenceCodeList","or","payment","isGettingCompanies","activeCompanies","i","companyTin","companyAddress","country","code","name","completeAddress","group","required","typeOfMedium","officialReceiptReference","businessStyle","fullPaymentOf","controlNumber","totalAmount","reset","markAsUntouched","markAsPristine","typeOfMediumSingleMedia","singleMediaList","typeOfMediumMultiMediaMoving","multimediaMovingList","multimediaStaticList","key","Map","item","values","selected","orData","filename","format","module","params","officialReceiptId","printReport","generateReports","newBlob","Blob","type","downloadURL","URL","createObjectURL","window","open","filedBirForm","availableReferenceCodeByCompany","description","toString","saveOrUpdate","printOr","getOrPreparation","cancel","TotalAmountsModel","totalwWithholdingtax","amountDue","vat","basicRate","withholdingTax","routes","path","component","OrPreparationRoutingModule","forChild"],"mappings":"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","file":"or-preparation-or-preparation-module-es5.js","sourcesContent":["import { NgModule } from \"@angular/core\";\r\nimport { CommonModule, DecimalPipe } from \"@angular/common\";\r\n\r\nimport { OrPreparationRoutingModule } from \"./or-preparation-routing.module\";\r\nimport { OrPreparationComponent } from \"./or-preparation.component\";\r\nimport { HttpClientModule } from \"@angular/common/http\";\r\nimport { ReactiveFormsModule } from \"@angular/forms\";\r\nimport { AngularMaterialModule } from \"@shared\";\r\nimport { FragmentsModule } from \"app/modules/fragments/fragments.module\";\r\n\r\n@NgModule({\r\n  declarations: [OrPreparationComponent],\r\n  imports: [\r\n    CommonModule,\r\n    OrPreparationRoutingModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule,\r\n    AngularMaterialModule,\r\n    FragmentsModule,\r\n  ],\r\n  providers: [DecimalPipe],\r\n})\r\nexport class OrPreparationModule {}\r\n","export * from './form-action-buttons/form-action-buttons.component';\r\nexport * from './form-list/form-list.component';","import { GenericResponse } from \"./../../../../core/models/generic-response-model/generic-response.model\";\r\nimport { TotalAmountsModel } from \"./../../../../core/models/totals.model\";\r\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { FormListComponent } from \"@fragments\";\r\nimport { OrPreparation, OrPreparationReference, Payment } from \"@models\";\r\nimport { ApiService, SweetAlertService } from \"@services\";\r\nimport { COMMON_FUNCTION, ENDPOINTS, STATUSES } from \"@shared\";\r\nimport { Report } from \"app/core/models/report.model\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport Swal from \"sweetalert2\";\r\nimport { DecimalPipe } from \"@angular/common\";\r\n\r\n@Component({\r\n  selector: \"app-or-preparation\",\r\n  templateUrl: \"./or-preparation.component.html\",\r\n  styleUrls: [\"./or-preparation.component.scss\"],\r\n})\r\nexport class OrPreparationComponent implements OnInit {\r\n  @ViewChild(FormListComponent) formListComponent: FormListComponent;\r\n  dataSource: MatTableDataSource<OrPreparation>;\r\n  displayedColumns: string[] = [\r\n    \"officialReceiptNo\",\r\n    \"typeOfMediumDescription\",\r\n    \"officialReceiptReferences\",\r\n    \"status\",\r\n    \"deleteIcon\",\r\n  ];\r\n  statusList = [...STATUSES];\r\n\r\n  orPreparation = new OrPreparation();\r\n  selectedCompanyId: number;\r\n  selectedCompany: any;\r\n  orPreparationReference = new OrPreparationReference();\r\n  orPreparationList = [];\r\n  typeOfMediumList = [];\r\n  officialReceiptReferenceList = [];\r\n  availableReferenceCodeList = [];\r\n  companyList = [];\r\n  report = new Report();\r\n  orPreparationForm: FormGroup;\r\n  totalAmts: Array<Payment> = new Array<Payment>();\r\n  totalAmounts: TotalAmountsModel = new TotalAmountsModel();\r\n  isGettingCompanies: boolean;\r\n  isWitholding: boolean;\r\n\r\n  constructor(\r\n    private apiService: ApiService,\r\n    private formBuilder: FormBuilder,\r\n    private sweetAlertService: SweetAlertService,\r\n    private spinner: NgxSpinnerService,\r\n    private numberPipe: DecimalPipe\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.getList();\r\n    this.setFormValidator();\r\n    this.getTypeOfMedium();\r\n    this.getCompanyList();\r\n    this.getAvailableReferenceCode();\r\n  }\r\n\r\n  getList(): void {\r\n    this.getAvailableReferenceCode();\r\n    this.apiService.findAll(ENDPOINTS.officialReceipt).subscribe((res: any) => {\r\n      this.orPreparationList = res.responseData.data;\r\n\r\n      this.orPreparationList = this.orPreparationList.map((mappedList) => ({\r\n        ...mappedList,\r\n        officialReceiptReferencesValue: mappedList.officialReceiptReferences.reduce(\r\n          (previousValue, currentValue) => {\r\n            if (previousValue) {\r\n              return previousValue + \", \" + currentValue?.reference;\r\n            } else {\r\n              return currentValue?.reference;\r\n            }\r\n          },\r\n          \"\"\r\n        ),\r\n      }));\r\n\r\n      this.dataSource = new MatTableDataSource<OrPreparation>(\r\n        this.orPreparationList\r\n      );\r\n      this.dataSource.paginator = this.formListComponent.paginator;\r\n      this.dataSource.sort = this.formListComponent.sort;\r\n    });\r\n  }\r\n\r\n  amountChanged() {\r\n    // this.orPreparationForm\r\n    //   .get(\"totalAmount\")\r\n    //   .setValue(\r\n    //     this.numberPipe.transform(\r\n    //       (+this.orPreparationForm.get(\"amount\").value || 0) +\r\n    //         this.totalAmounts.totalSales,\r\n    //       \".2-2\"\r\n    //     )\r\n    //   );\r\n  }\r\n\r\n  addReceiptReference() {\r\n    console.log(\"prep => \", this.orPreparationReference);\r\n    if (\r\n      (this.orPreparation.voucherControlNumber &&\r\n        this.officialReceiptReferenceList.length >= 6) ||\r\n      this.officialReceiptReferenceList.length >= 9\r\n    ) {\r\n      this.sweetAlertService.customErrorMessage(\"Max input limit reached\");\r\n    } else {\r\n      const isExisting = this.officialReceiptReferenceList.filter(\r\n        (filteredOR) =>\r\n          filteredOR.reference === this.orPreparationReference.reference.trim()\r\n      );\r\n      if (isExisting.length) {\r\n        this.sweetAlertService.customErrorMessage(\r\n          \"Reference code already in the list\"\r\n        );\r\n      } else {\r\n        this.apiService\r\n          .findByParam(\r\n            ENDPOINTS.orPreparationRefCodeCheck,\r\n            this.orPreparationReference.reference\r\n          )\r\n          .subscribe(\r\n            (res) => {\r\n              if (res?.responseData?.data) {\r\n                let appForm = res?.responseData?.data[0];\r\n                this.apiService\r\n                  .findByParam(ENDPOINTS.paymentDetailsByAppformId, appForm.id)\r\n                  .subscribe((form: GenericResponse<Payment>) => {\r\n                    console.log(\"form : \", form);\r\n                    let paymentDtls;\r\n                    if (form) {\r\n                      //  this.totalAmounts.totalAmountDue = Number(this.totalAmounts.totalAmountDue) + Number(form?.responseData?.data?.amountDue);\r\n                      // this.totalAmounts.setTotalValues(form.responseData.data)\r\n\r\n                      this.totalAmts.push(form.responseData.data);\r\n                      this.totalAmounts.setTotalValues(this.totalAmts);\r\n\r\n                      this.orPreparationForm\r\n                        .get(\"totalAmount\")\r\n                        .setValue(\r\n                          this.numberPipe.transform(\r\n                            this.totalAmounts.totalSales,\r\n                            \".2-2\"\r\n                          )\r\n                        );\r\n                    }\r\n                    console.log(\"totals : \", this.totalAmounts);\r\n                  });\r\n\r\n                this.officialReceiptReferenceList.push(\r\n                  this.orPreparationReference\r\n                );\r\n                this.orPreparationReference.amount = appForm.amount;\r\n                // this.getAvailableReferenceCode(this.orPreparationReference?.reference);\r\n                this.orPreparationReference = new OrPreparationReference();\r\n                // console.log(\"data => \", this.officialReceiptReferenceList)\r\n                this.officialReceiptReferenceList.filter((ref) => {\r\n                  // let total = Number(this.orPreparationForm.controls.totalAmount.value) + Number(ref.amount);\r\n                  // this.orPreparationForm.controls.totalAmount.setValue(total);\r\n                });\r\n              } else {\r\n                this.sweetAlertService.customErrorMessage(res?.responseMessage);\r\n              }\r\n            },\r\n            (err) => {\r\n              this.sweetAlertService.error(err);\r\n            }\r\n          );\r\n      }\r\n    }\r\n  }\r\n\r\n  removeReferenceCode(obj) {\r\n    this.officialReceiptReferenceList = this.officialReceiptReferenceList.filter(\r\n      (filteredOR) => filteredOR.reference !== obj.reference.trim()\r\n    );\r\n    console.log(\"remove ref : \", obj);\r\n    console.log(\"totalAmts\", this.totalAmts);\r\n    this.totalAmts = this.totalAmts.filter(\r\n      (amts) => amts.applicationForm.referenceCode !== obj.reference.trim()\r\n    );\r\n    console.log(\"totalamts\", this.totalAmts);\r\n    this.totalAmounts.setTotalValues(this.totalAmts);\r\n    console.log(\"total amounts : \", this.totalAmounts);\r\n  }\r\n\r\n  getAvailableReferenceCode(refCode = \"\") {\r\n    // if (refCode) {\r\n    //   this.apiService\r\n    //     .findByParam(ENDPOINTS.availableReferenceCode, refCode)\r\n    //     .subscribe((res) => {\r\n    //       console.log(res);\r\n    //     });\r\n    // } else {\r\n    //   this.apiService\r\n    //     .findAll(ENDPOINTS.availableReferenceCode)\r\n    //     .subscribe((res) => {\r\n    //       console.log(res);\r\n    //       this.availableReferenceCodeList = res;\r\n    //     });\r\n    // }\r\n  }\r\n\r\n  saveOrUpdate(): void {\r\n    this.orPreparation.id = this.orPreparation?.id ? this.orPreparation.id : 0;\r\n    this.orPreparation.officialReceiptReferences = this.officialReceiptReferenceList;\r\n    // this.orPreparation.setTotalAmounts(this.totalAmounts);\r\n    // console.log(this.totalAmounts.)\r\n    console.log(\"orPrep\", this.orPreparation);\r\n    this.apiService\r\n      .findByParam(\r\n        ENDPOINTS.orPreparationORNumberCheck,\r\n        this.orPreparation.officialReceiptNo\r\n      )\r\n      .subscribe(\r\n        (isExisting) => {\r\n          if (isExisting.responseData.data && !this.orPreparation?.id) {\r\n            this.sweetAlertService.customErrorMessage(\r\n              isExisting.responseMessage\r\n            );\r\n          } else {\r\n            // this.orPreparation.setTotalAmounts(this.totalAmounts);\r\n            // console.log('orPreparation')\r\n            this.apiService\r\n              .save(`${ENDPOINTS.orPreparation}/submit`, {\r\n                ...this.orPreparation,\r\n                ...this.totalAmounts,\r\n              })\r\n              .subscribe(\r\n                (res: any) => {\r\n                  if (res !== undefined) {\r\n                    this.sweetAlertService.success(res);\r\n                  }\r\n                },\r\n                (err: any) => {\r\n                  this.sweetAlertService.error(err);\r\n                },\r\n                () => {\r\n                  this.resetFormValidator();\r\n                  this.getList();\r\n                }\r\n              );\r\n          }\r\n        },\r\n        (err) => this.sweetAlertService.error(err)\r\n      );\r\n  }\r\n\r\n  cancel(): void {\r\n    Swal.fire({\r\n      text: `Are you sure you want to cancel this Official Receipt Preparation?`,\r\n      icon: \"question\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Confirm\",\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.orPreparation = this.formListComponent.elementObject;\r\n        this.orPreparation.officialReceiptReferences = null;\r\n        this.apiService\r\n          .save(`${ENDPOINTS.orPreparation}/cancel`, this.orPreparation)\r\n          .subscribe(\r\n            (res: any) => {\r\n              if (res !== undefined) {\r\n                this.sweetAlertService.success(res);\r\n              }\r\n            },\r\n            (err: any) => {\r\n              this.sweetAlertService.error(err);\r\n            },\r\n            () => {\r\n              this.resetFormValidator();\r\n              this.getList();\r\n            }\r\n          );\r\n      }\r\n    });\r\n  }\r\n\r\n  getOrPreparation(): void {\r\n    console.log(\"get:: =>\");\r\n    this.apiService\r\n      .findById(ENDPOINTS.officialReceipt, this.formListComponent.idForUpdate)\r\n      .subscribe((res: any) => {\r\n        if (res) {\r\n          this.orPreparation = res.responseData.data;\r\n          console.log(\"OR PREP => \", res);\r\n          this.totalAmounts.totalSales = this.orPreparation.totalSales;\r\n          this.totalAmounts.totalAmountDue = this.orPreparation.totalAmountDue;\r\n          this.totalAmounts.totalVat = this.orPreparation.totalVat;\r\n          this.totalAmounts.totalWithholdingtax = this.orPreparation.totalWithholdingtax;\r\n\r\n          const company = this.companyList.find(\r\n            (company) => company.companyName === this.orPreparation.companyName\r\n          );\r\n\r\n          this.selectedCompanyId = company.id;\r\n          this.selectedCompany = company;\r\n          this.getAvailableReferenceCodeList();\r\n          this.orPreparationForm\r\n            .get(\"totalAmount\")\r\n            .setValue(this.totalAmounts.totalSales);\r\n          this.officialReceiptReferenceList = this.orPreparation.officialReceiptReferences;\r\n          this.officialReceiptReferenceList.filter((or) => {\r\n            this.apiService\r\n              .findByParam(ENDPOINTS.orPreparationRefCodeCheck, or.reference)\r\n              .subscribe((paymentDtls) => {\r\n                let appForm = paymentDtls?.responseData?.data[0];\r\n                this.apiService\r\n                  .findByParam(ENDPOINTS.paymentDetailsByAppformId, appForm.id)\r\n                  .subscribe((payment) => {\r\n                    this.totalAmts.push(payment?.responseData?.data);\r\n                  });\r\n              });\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  getCompanyList() {\r\n    this.isGettingCompanies = true;\r\n    this.apiService.findAll(ENDPOINTS.activeCompanies).subscribe(\r\n      (res: any) => {\r\n        this.companyList = res.responseData.data; // .filter((company) => !this.notInSelection.includes(company.status));\r\n        this.isGettingCompanies = false;\r\n      },\r\n      (err: any) => {\r\n        this.isGettingCompanies = false;\r\n      }\r\n    );\r\n  }\r\n\r\n  setCompanyDetails(i) {\r\n    this.selectedCompanyId = i.id;\r\n    this.orPreparation.companyName = i.companyName;\r\n    this.orPreparation.companyTin = i.companyTin;\r\n    this.orPreparation.companyAddress =\r\n      \"[\" + i.country.code + \" - \" + i.country.name + \"] \" + i.completeAddress;\r\n    this.getAvailableReferenceCodeList();\r\n  }\r\n\r\n  setFormValidator(): void {\r\n    this.orPreparationForm = this.formBuilder.group({\r\n      officialReceiptNo: [\"\", Validators.required],\r\n      typeOfMedium: [\"\", Validators.required],\r\n      amount: [\"\"],\r\n      officialReceiptReference: [\"\"],\r\n      voucherControlNumber: [\"\"],\r\n      businessStyle: [\"\"],\r\n      fullPaymentOf: [\"\"],\r\n      controlNumber: [\"\"],\r\n      companyName: [\"\"],\r\n      companyTin: [\"\"],\r\n      companyAddress: [\"\"],\r\n      totalAmount: [\"\"],\r\n    });\r\n  }\r\n\r\n  resetFormValidator(): void {\r\n    this.selectedCompanyId = null;\r\n    this.totalAmounts = new TotalAmountsModel();\r\n    this.orPreparationForm.reset();\r\n    this.orPreparation = new OrPreparation();\r\n    this.officialReceiptReferenceList = [];\r\n    this.orPreparationForm.markAsUntouched();\r\n    this.orPreparationForm.markAsPristine();\r\n  }\r\n\r\n  getTypeOfMedium() {\r\n    this.typeOfMediumList = [];\r\n\r\n    this.apiService.findAll(ENDPOINTS.typeOfMediumSingleMedia).subscribe(\r\n      (singleMediaList: any) => {\r\n        this.apiService\r\n          .findAll(ENDPOINTS.typeOfMediumMultiMediaMoving)\r\n          .subscribe((multimediaMovingList: any) => {\r\n            this.apiService\r\n              .findAll(ENDPOINTS.typeOfMediumMultiMediaMoving)\r\n              .subscribe((multimediaStaticList: any) => {\r\n                this.typeOfMediumList = [\r\n                  ...singleMediaList.responseData.data,\r\n                  ...multimediaMovingList.responseData.data,\r\n                  ...multimediaStaticList.responseData.data,\r\n                ];\r\n                const key = \"id\";\r\n                this.typeOfMediumList = [\r\n                  ...new Map(\r\n                    this.typeOfMediumList.map((item) => [item[key], item])\r\n                  ).values(),\r\n                ];\r\n              });\r\n          });\r\n      },\r\n      (err: any) => {\r\n        console.log(err);\r\n      }\r\n    );\r\n  }\r\n\r\n  compareList(value: any, selected: any): boolean {\r\n    if (value && selected) {\r\n      return value.id === selected.id;\r\n    }\r\n  }\r\n\r\n  printOr(orData): void {\r\n    if (orData.id) {\r\n      this.report.filename = \"ASC_Receipt\";\r\n      this.report.format = \"pdf\";\r\n      (this.report.module = \"Receipt\"),\r\n        (this.report.params = { officialReceiptId: orData.id });\r\n      this.apiService\r\n        .printReport(ENDPOINTS.generateReports, this.report)\r\n        .subscribe((data: any) => {\r\n          const newBlob = new Blob([data], { type: \"application/pdf\" });\r\n          const downloadURL = URL.createObjectURL(newBlob);\r\n          window.open(downloadURL);\r\n        });\r\n    } else {\r\n      this.sweetAlertService.customErrorMessage(\"Please select data first...\");\r\n    }\r\n  }\r\n\r\n  getAvailableReferenceCodeList() {\r\n    if (\r\n      this.selectedCompanyId &&\r\n      this.orPreparation.typeOfMedium &&\r\n      this.orPreparation.filedBirForm\r\n    ) {\r\n      this.apiService\r\n        .findAll(\r\n          ENDPOINTS.availableReferenceCodeByCompany +\r\n            \"/\" +\r\n            this.selectedCompanyId +\r\n            \"/type-of-medium/\" +\r\n            this.orPreparation.typeOfMedium.description +\r\n            \"/file-bir-form/\" +\r\n            this.orPreparation.filedBirForm.toString()\r\n        )\r\n        .subscribe((res) => {\r\n          this.availableReferenceCodeList = res;\r\n        });\r\n    }\r\n  }\r\n}\r\n","<form>\r\n  <div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12 title\">\r\n        <mat-label> Official Receipt Preparation </mat-label>\r\n      </div>\r\n    </div>\r\n    <hr />\r\n\r\n    <form [formGroup]=\"orPreparationForm\">\r\n      <div class=\"row\">\r\n        <mat-form-field class=\"col-md-6\" appearance=\"outline\">\r\n          <mat-label\r\n            >Official Receipt Number\r\n            <span class=\"required-field\">*</span></mat-label\r\n          >\r\n          <input\r\n            matInput\r\n            [(ngModel)]=\"orPreparation.officialReceiptNo\"\r\n            name=\"officialReceiptNo\"\r\n            formControlName=\"officialReceiptNo\"\r\n          />\r\n        </mat-form-field>\r\n\r\n        <!-- <mat-form-field class=\"col-md-6\" appearance=\"outline\">\r\n          <mat-label>Voucher Control Number</mat-label>\r\n          <input matInput [(ngModel)]=\"orPreparation.voucherControlNumber\" name=\"voucherControlNumber\"\r\n            formControlName=\"voucherControlNumber\">\r\n        </mat-form-field> -->\r\n\r\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n          <mat-label>\r\n            <ng-container *ngIf=\"isGettingCompanies; else loadedLabelTemp\">\r\n              <i>Loading companies...</i>\r\n            </ng-container>\r\n            <ng-template #loadedLabelTemp> Search Company: </ng-template>\r\n          </mat-label>\r\n          <mat-select [value]=\"selectedCompany\">\r\n            <mat-option\r\n              *ngFor=\"let i of companyList\"\r\n              [value]=\"i\"\r\n              (click)=\"setCompanyDetails(i)\"\r\n            >\r\n              {{ i.companyName }}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field class=\"col-md-6\" appearance=\"outline\">\r\n          <mat-label>Company Name:</mat-label>\r\n          <input\r\n            matInput\r\n            [(ngModel)]=\"orPreparation.companyName\"\r\n            name=\"companyName\"\r\n            formControlName=\"companyName\"\r\n          />\r\n        </mat-form-field>\r\n\r\n        <mat-form-field class=\"col-md-6\" appearance=\"outline\">\r\n          <mat-label>Company TIN:</mat-label>\r\n          <input\r\n            matInput\r\n            [(ngModel)]=\"orPreparation.companyTin\"\r\n            name=\"companyTin\"\r\n            formControlName=\"companyTin\"\r\n          />\r\n        </mat-form-field>\r\n\r\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n          <mat-label>Company Address:</mat-label>\r\n          <textarea\r\n            matInput\r\n            [(ngModel)]=\"orPreparation.companyAddress\"\r\n            name=\"companyAddress\"\r\n            formControlName=\"companyAddress\"\r\n          >\r\n          </textarea>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field class=\"col-md-6\" appearance=\"outline\">\r\n          <mat-label>Business Style:</mat-label>\r\n          <input\r\n            matInput\r\n            [(ngModel)]=\"orPreparation.businessStyle\"\r\n            name=\"businessStyle\"\r\n            formControlName=\"businessStyle\"\r\n          />\r\n        </mat-form-field>\r\n\r\n        <mat-form-field class=\"col-md-6\" appearance=\"outline\">\r\n          <mat-label>Control Number:</mat-label>\r\n          <input\r\n            matInput\r\n            [(ngModel)]=\"orPreparation.controlNumber\"\r\n            name=\"controlNumber\"\r\n            formControlName=\"controlNumber\"\r\n          />\r\n        </mat-form-field>\r\n\r\n        <!-- <mat-form-field class=\"col-md-6\" appearance=\"outline\">\r\n          <mat-label>Amount:</mat-label>\r\n          <input\r\n            matInput\r\n            [(ngModel)]=\"orPreparation.amount\"\r\n            name=\"amount\"\r\n            (change)=\"amountChanged()\"\r\n            formControlName=\"amount\"\r\n          />\r\n        </mat-form-field> -->\r\n        <mat-form-field class=\"col-md-6\" appearance=\"outline\">\r\n          <mat-label> With/Witholding Tax? </mat-label>\r\n          <mat-select\r\n            [(ngModel)]=\"orPreparation.filedBirForm\"\r\n            [ngModelOptions]=\"{ standalone: true }\"\r\n            (selectionChange)=\"getAvailableReferenceCodeList()\"\r\n          >\r\n            <mat-option value=\"true\"> Yes </mat-option>\r\n            <mat-option value=\"false\"> NO </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field class=\"col-md-6\" appearance=\"outline\">\r\n          <mat-label>Total Amount:</mat-label>\r\n          <input\r\n            matInput\r\n            name=\"totalAmount\"\r\n            formControlName=\"totalAmount\"\r\n            readonly\r\n          />\r\n        </mat-form-field>\r\n\r\n        <!-- <mat-form-field class=\"col-md-8\" appearance=\"outline\">\r\n          <mat-label>Amount In Words:</mat-label>\r\n          <input matInput [(ngModel)]=\"orPreparation.fullPaymentOf\" name=\"fullPaymentOf\"\r\n            formControlName=\"fullPaymentOf\">\r\n        </mat-form-field> -->\r\n\r\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n          <mat-label>Type of Medium</mat-label>\r\n          <mat-select\r\n            [(ngModel)]=\"orPreparation.typeOfMedium\"\r\n            formControlName=\"typeOfMedium\"\r\n            name=\"typeOfMedium\"\r\n            [compareWith]=\"compareList\"\r\n            (selectionChange)=\"getAvailableReferenceCodeList()\"\r\n          >\r\n            <mat-option *ngFor=\"let i of typeOfMediumList\" [value]=\"i\">\r\n              {{ i.description }}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field class=\"col-md-6\" appearance=\"outline\">\r\n          <mat-label>List of Paid Reference Codes:</mat-label>\r\n          <mat-select\r\n            [(ngModel)]=\"orPreparationReference.reference\"\r\n            [disabled]=\"\r\n              !selectedCompanyId ||\r\n              !orPreparation.typeOfMedium ||\r\n              !orPreparation.filedBirForm\r\n            \"\r\n            formControlName=\"officialReceiptReference\"\r\n            name=\"officialReceiptReference\"\r\n            [compareWith]=\"compareList\"\r\n          >\r\n            <mat-option\r\n              *ngFor=\"let i of availableReferenceCodeList\"\r\n              [value]=\"i.referenceCode\"\r\n            >\r\n              {{ i.referenceCode }}\r\n            </mat-option>\r\n          </mat-select>\r\n          <span *ngIf=\"orPreparationReference.reference\"> <br /><br /> </span>\r\n          <button\r\n            mat-raised-button\r\n            color=\"primary\"\r\n            (click)=\"addReceiptReference()\"\r\n            *ngIf=\"orPreparationReference.reference\"\r\n          >\r\n            <i class=\"material-icons color__white\">save</i> Add Receipt\r\n            Reference\r\n          </button>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field class=\"col-md-6\" appearance=\"outline\">\r\n          <mat-label>Reference List:</mat-label>\r\n          <input matInput readonly />\r\n\r\n          <ul *ngFor=\"let i of officialReceiptReferenceList\">\r\n            <li>\r\n              {{ i.reference }}\r\n              <span\r\n                class=\"material-icons\"\r\n                matTooltip=\"Remove Reference Code\"\r\n                (click)=\"removeReferenceCode(i)\"\r\n                >close</span\r\n              >\r\n            </li>\r\n          </ul>\r\n        </mat-form-field>\r\n      </div>\r\n    </form>\r\n\r\n    <div class=\"button-content\">\r\n      <app-form-action-buttons\r\n        [childObject]=\"orPreparation\"\r\n        [childForm]=\"orPreparationForm\"\r\n        (saveFunction)=\"saveOrUpdate()\"\r\n        (updateFunction)=\"saveOrUpdate()\"\r\n        (cancelFunction)=\"resetFormValidator()\"\r\n      >\r\n      </app-form-action-buttons>\r\n      <button\r\n        [disabled]=\"!orPreparation.id\"\r\n        mat-raised-button\r\n        color=\"primary\"\r\n        (click)=\"printOr(orPreparation)\"\r\n      >\r\n        <i class=\"material-icons color__white\">print</i> Print OR\r\n      </button>\r\n    </div>\r\n    <br />\r\n\r\n    <br />\r\n    <app-form-list\r\n      [dataSource]=\"dataSource\"\r\n      [displayedColumns]=\"displayedColumns\"\r\n      (selectInListFunction)=\"getOrPreparation()\"\r\n      (deleteInListFunction)=\"cancel()\"\r\n    ></app-form-list>\r\n  </div>\r\n</form>\r\n","import { Payment } from \"./payment.model\";\r\n\r\ninterface Amounts {}\r\n\r\nexport class TotalAmountsModel {\r\n  totalSales: number = 0;\r\n  totalVat: number = 0;\r\n  totalWithholdingtax: number = 0;\r\n  totalAmountDue: number = 0;\r\n\r\n  setTotalValues(data: Array<Payment>) {\r\n    console.log(\"totalValues:  \", data);\r\n    let totalAmountDue: number = 0;\r\n    let totalVat: number = 0;\r\n    let totalSales: number = 0;\r\n    let totalwWithholdingtax: number = 0;\r\n    data.filter((payment: Payment) => {\r\n      totalAmountDue = totalAmountDue + payment.amountDue;\r\n      totalVat = totalVat + payment.vat;\r\n      totalSales = totalSales + payment.basicRate + payment.vat;\r\n      totalwWithholdingtax = totalwWithholdingtax + payment.withholdingTax;\r\n    });\r\n    this.totalAmountDue = totalAmountDue;\r\n    this.totalSales = totalSales;\r\n    this.totalVat = totalVat;\r\n    this.totalWithholdingtax = this.totalWithholdingtax;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { OrPreparationComponent } from './or-preparation.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: OrPreparationComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class OrPreparationRoutingModule { }\r\n"]}
>>>>>>> 53dc5baaa640736d2cc27f9eee7c34fe4a9274c2
