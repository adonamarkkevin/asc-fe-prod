{"version":3,"sources":["webpack:///src/app/modules/pages/accounting/or-preparation/or-preparation.module.ts","webpack:///src/app/modules/fragments/index.ts","webpack:///src/app/modules/pages/accounting/or-preparation/or-preparation.component.ts","webpack:///src/app/modules/pages/accounting/or-preparation/or-preparation.component.html","webpack:///src/app/core/models/totals.model.ts","webpack:///src/app/modules/pages/accounting/or-preparation/or-preparation-routing.module.ts","webpack:///src/app/modules/pages/accounting/or-preparation/or-preparation.component.scss"],"names":["OrPreparationModule","declarations","imports","providers","OrPreparationComponent","apiService","formBuilder","sweetAlertService","spinner","numberPipe","displayedColumns","statusList","orPreparation","orPreparationReference","orPreparationList","typeOfMediumList","officialReceiptReferenceList","availableReferenceCodeList","companyList","report","totalAmts","Array","totalAmounts","getList","setFormValidator","getTypeOfMedium","getCompanyList","getAvailableReferenceCode","findAll","officialReceipt","subscribe","res","responseData","data","map","mappedList","officialReceiptReferencesValue","officialReceiptReferences","reduce","previousValue","currentValue","reference","dataSource","paginator","formListComponent","sort","console","log","voucherControlNumber","length","customErrorMessage","isExisting","filter","filteredOR","trim","findByParam","orPreparationRefCodeCheck","appForm","paymentDetailsByAppformId","id","form","paymentDtls","push","setTotalValues","orPreparationForm","get","setValue","transform","totalSales","amount","ref","responseMessage","err","error","obj","amts","applicationForm","referenceCode","refCode","availableReferenceCode","orPreparationORNumberCheck","officialReceiptNo","save","undefined","success","resetFormValidator","fire","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","value","elementObject","findById","idForUpdate","totalAmountDue","totalVat","totalWithholdingtax","company","find","companyName","selectedCompanyId","selectedCompany","getAvailableReferenceCodeList","or","payment","isGettingCompanies","activeCompanies","i","companyTin","companyAddress","country","code","name","completeAddress","group","required","typeOfMedium","officialReceiptReference","businessStyle","fullPaymentOf","controlNumber","totalAmount","reset","markAsUntouched","markAsPristine","typeOfMediumSingleMedia","singleMediaList","typeOfMediumMultiMediaMoving","multimediaMovingList","multimediaStaticList","key","Map","item","values","selected","orData","filename","format","module","params","officialReceiptId","printReport","generateReports","newBlob","Blob","type","downloadURL","URL","createObjectURL","window","open","availableReferenceCodeByCompany","description","selector","template","TotalAmountsModel","totalwWithholdingtax","amountDue","vat","basicRate","withholdingTax","routes","path","component","OrPreparationRoutingModule","forChild","exports"],"mappings":"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","file":"or-preparation-or-preparation-module-es5.js","sourcesContent":["import { NgModule } from \"@angular/core\";\r\nimport { CommonModule, DecimalPipe } from \"@angular/common\";\r\n\r\nimport { OrPreparationRoutingModule } from \"./or-preparation-routing.module\";\r\nimport { OrPreparationComponent } from \"./or-preparation.component\";\r\nimport { HttpClientModule } from \"@angular/common/http\";\r\nimport { ReactiveFormsModule } from \"@angular/forms\";\r\nimport { AngularMaterialModule } from \"@shared\";\r\nimport { FragmentsModule } from \"app/modules/fragments/fragments.module\";\r\n\r\n@NgModule({\r\n  declarations: [OrPreparationComponent],\r\n  imports: [\r\n    CommonModule,\r\n    OrPreparationRoutingModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule,\r\n    AngularMaterialModule,\r\n    FragmentsModule,\r\n  ],\r\n  providers: [DecimalPipe],\r\n})\r\nexport class OrPreparationModule {}\r\n","export * from './form-action-buttons/form-action-buttons.component';\r\nexport * from './form-list/form-list.component';","import { GenericResponse } from \"./../../../../core/models/generic-response-model/generic-response.model\";\r\nimport { TotalAmountsModel } from \"./../../../../core/models/totals.model\";\r\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { FormListComponent } from \"@fragments\";\r\nimport { OrPreparation, OrPreparationReference, Payment } from \"@models\";\r\nimport { ApiService, SweetAlertService } from \"@services\";\r\nimport { COMMON_FUNCTION, ENDPOINTS, STATUSES } from \"@shared\";\r\nimport { Report } from \"app/core/models/report.model\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport Swal from \"sweetalert2\";\r\nimport { DecimalPipe } from \"@angular/common\";\r\n\r\n@Component({\r\n  selector: \"app-or-preparation\",\r\n  templateUrl: \"./or-preparation.component.html\",\r\n  styleUrls: [\"./or-preparation.component.scss\"],\r\n})\r\nexport class OrPreparationComponent implements OnInit {\r\n  @ViewChild(FormListComponent) formListComponent: FormListComponent;\r\n  dataSource: MatTableDataSource<OrPreparation>;\r\n  displayedColumns: string[] = [\r\n    \"officialReceiptNo\",\r\n    \"typeOfMediumDescription\",\r\n    \"officialReceiptReferences\",\r\n    \"status\",\r\n    \"deleteIcon\",\r\n  ];\r\n  statusList = [...STATUSES];\r\n\r\n  orPreparation = new OrPreparation();\r\n  selectedCompanyId: number;\r\n  selectedCompany: any;\r\n  orPreparationReference = new OrPreparationReference();\r\n  orPreparationList = [];\r\n  typeOfMediumList = [];\r\n  officialReceiptReferenceList = [];\r\n  availableReferenceCodeList = [];\r\n  companyList = [];\r\n  report = new Report();\r\n  orPreparationForm: FormGroup;\r\n  totalAmts: Array<Payment> = new Array<Payment>();\r\n  totalAmounts: TotalAmountsModel = new TotalAmountsModel();\r\n  isGettingCompanies: boolean;\r\n\r\n  constructor(\r\n    private apiService: ApiService,\r\n    private formBuilder: FormBuilder,\r\n    private sweetAlertService: SweetAlertService,\r\n    private spinner: NgxSpinnerService,\r\n    private numberPipe: DecimalPipe\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.getList();\r\n    this.setFormValidator();\r\n    this.getTypeOfMedium();\r\n    this.getCompanyList();\r\n    this.getAvailableReferenceCode();\r\n  }\r\n\r\n  getList(): void {\r\n    this.getAvailableReferenceCode();\r\n    this.apiService.findAll(ENDPOINTS.officialReceipt).subscribe((res: any) => {\r\n      this.orPreparationList = res.responseData.data;\r\n\r\n      this.orPreparationList = this.orPreparationList.map((mappedList) => ({\r\n        ...mappedList,\r\n        officialReceiptReferencesValue: mappedList.officialReceiptReferences.reduce(\r\n          (previousValue, currentValue) => {\r\n            if (previousValue) {\r\n              return previousValue + \", \" + currentValue?.reference;\r\n            } else {\r\n              return currentValue?.reference;\r\n            }\r\n          },\r\n          \"\"\r\n        ),\r\n      }));\r\n\r\n      this.dataSource = new MatTableDataSource<OrPreparation>(\r\n        this.orPreparationList\r\n      );\r\n      this.dataSource.paginator = this.formListComponent.paginator;\r\n      this.dataSource.sort = this.formListComponent.sort;\r\n    });\r\n  }\r\n\r\n  amountChanged() {\r\n    // this.orPreparationForm\r\n    //   .get(\"totalAmount\")\r\n    //   .setValue(\r\n    //     this.numberPipe.transform(\r\n    //       (+this.orPreparationForm.get(\"amount\").value || 0) +\r\n    //         this.totalAmounts.totalSales,\r\n    //       \".2-2\"\r\n    //     )\r\n    //   );\r\n  }\r\n\r\n  addReceiptReference() {\r\n    console.log(\"prep => \", this.orPreparationReference);\r\n    if (\r\n      (this.orPreparation.voucherControlNumber &&\r\n        this.officialReceiptReferenceList.length >= 6) ||\r\n      this.officialReceiptReferenceList.length >= 9\r\n    ) {\r\n      this.sweetAlertService.customErrorMessage(\"Max input limit reached\");\r\n    } else {\r\n      const isExisting = this.officialReceiptReferenceList.filter(\r\n        (filteredOR) =>\r\n          filteredOR.reference === this.orPreparationReference.reference.trim()\r\n      );\r\n      if (isExisting.length) {\r\n        this.sweetAlertService.customErrorMessage(\r\n          \"Reference code already in the list\"\r\n        );\r\n      } else {\r\n        this.apiService\r\n          .findByParam(\r\n            ENDPOINTS.orPreparationRefCodeCheck,\r\n            this.orPreparationReference.reference\r\n          )\r\n          .subscribe(\r\n            (res) => {\r\n              if (res?.responseData?.data) {\r\n                let appForm = res?.responseData?.data[0];\r\n                this.apiService\r\n                  .findByParam(ENDPOINTS.paymentDetailsByAppformId, appForm.id)\r\n                  .subscribe((form: GenericResponse<Payment>) => {\r\n                    console.log(\"form : \", form);\r\n                    let paymentDtls;\r\n                    if (form) {\r\n                      //  this.totalAmounts.totalAmountDue = Number(this.totalAmounts.totalAmountDue) + Number(form?.responseData?.data?.amountDue);\r\n                      // this.totalAmounts.setTotalValues(form.responseData.data)\r\n\r\n                      this.totalAmts.push(form.responseData.data);\r\n                      this.totalAmounts.setTotalValues(this.totalAmts);\r\n\r\n                      this.orPreparationForm\r\n                        .get(\"totalAmount\")\r\n                        .setValue(\r\n                          this.numberPipe.transform(\r\n                            this.totalAmounts.totalSales,\r\n                            \".2-2\"\r\n                          )\r\n                        );\r\n                    }\r\n                    console.log(\"totals : \", this.totalAmounts);\r\n                  });\r\n\r\n                this.officialReceiptReferenceList.push(\r\n                  this.orPreparationReference\r\n                );\r\n                this.orPreparationReference.amount = appForm.amount;\r\n                // this.getAvailableReferenceCode(this.orPreparationReference?.reference);\r\n                this.orPreparationReference = new OrPreparationReference();\r\n                // console.log(\"data => \", this.officialReceiptReferenceList)\r\n                this.officialReceiptReferenceList.filter((ref) => {\r\n                  // let total = Number(this.orPreparationForm.controls.totalAmount.value) + Number(ref.amount);\r\n                  // this.orPreparationForm.controls.totalAmount.setValue(total);\r\n                });\r\n              } else {\r\n                this.sweetAlertService.customErrorMessage(res?.responseMessage);\r\n              }\r\n            },\r\n            (err) => {\r\n              this.sweetAlertService.error(err);\r\n            }\r\n          );\r\n      }\r\n    }\r\n  }\r\n\r\n  removeReferenceCode(obj) {\r\n    this.officialReceiptReferenceList = this.officialReceiptReferenceList.filter(\r\n      (filteredOR) => filteredOR.reference !== obj.reference.trim()\r\n    );\r\n    console.log(\"remove ref : \", obj);\r\n    console.log(\"totalAmts\", this.totalAmts);\r\n    this.totalAmts = this.totalAmts.filter(\r\n      (amts) => amts.applicationForm.referenceCode !== obj.reference.trim()\r\n    );\r\n    console.log(\"totalamts\", this.totalAmts);\r\n    this.totalAmounts.setTotalValues(this.totalAmts);\r\n    console.log(\"total amounts : \", this.totalAmounts);\r\n  }\r\n\r\n  getAvailableReferenceCode(refCode = \"\") {\r\n    if (refCode) {\r\n      this.apiService\r\n        .findByParam(ENDPOINTS.availableReferenceCode, refCode)\r\n        .subscribe((res) => {\r\n          console.log(res);\r\n        });\r\n    } else {\r\n      this.apiService\r\n        .findAll(ENDPOINTS.availableReferenceCode)\r\n        .subscribe((res) => {\r\n          console.log(res);\r\n          this.availableReferenceCodeList = res;\r\n        });\r\n    }\r\n  }\r\n\r\n  saveOrUpdate(): void {\r\n    this.orPreparation.id = this.orPreparation?.id ? this.orPreparation.id : 0;\r\n    this.orPreparation.officialReceiptReferences = this.officialReceiptReferenceList;\r\n    // this.orPreparation.setTotalAmounts(this.totalAmounts);\r\n    // console.log(this.totalAmounts.)\r\n    console.log(\"orPrep\", this.orPreparation);\r\n    this.apiService\r\n      .findByParam(\r\n        ENDPOINTS.orPreparationORNumberCheck,\r\n        this.orPreparation.officialReceiptNo\r\n      )\r\n      .subscribe(\r\n        (isExisting) => {\r\n          if (isExisting.responseData.data && !this.orPreparation?.id) {\r\n            this.sweetAlertService.customErrorMessage(\r\n              isExisting.responseMessage\r\n            );\r\n          } else {\r\n            // this.orPreparation.setTotalAmounts(this.totalAmounts);\r\n            // console.log('orPreparation')\r\n            this.apiService\r\n              .save(`${ENDPOINTS.orPreparation}/submit`, {\r\n                ...this.orPreparation,\r\n                ...this.totalAmounts,\r\n              })\r\n              .subscribe(\r\n                (res: any) => {\r\n                  if (res !== undefined) {\r\n                    this.sweetAlertService.success(res);\r\n                  }\r\n                },\r\n                (err: any) => {\r\n                  this.sweetAlertService.error(err);\r\n                },\r\n                () => {\r\n                  this.resetFormValidator();\r\n                  this.getList();\r\n                }\r\n              );\r\n          }\r\n        },\r\n        (err) => this.sweetAlertService.error(err)\r\n      );\r\n  }\r\n\r\n  cancel(): void {\r\n    Swal.fire({\r\n      text: `Are you sure you want to cancel this Official Receipt Preparation?`,\r\n      icon: \"question\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Confirm\",\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.orPreparation = this.formListComponent.elementObject;\r\n        this.orPreparation.officialReceiptReferences = null;\r\n        this.apiService\r\n          .save(`${ENDPOINTS.orPreparation}/cancel`, this.orPreparation)\r\n          .subscribe(\r\n            (res: any) => {\r\n              if (res !== undefined) {\r\n                this.sweetAlertService.success(res);\r\n              }\r\n            },\r\n            (err: any) => {\r\n              this.sweetAlertService.error(err);\r\n            },\r\n            () => {\r\n              this.resetFormValidator();\r\n              this.getList();\r\n            }\r\n          );\r\n      }\r\n    });\r\n  }\r\n\r\n  getOrPreparation(): void {\r\n    console.log(\"get:: =>\");\r\n    this.apiService\r\n      .findById(ENDPOINTS.officialReceipt, this.formListComponent.idForUpdate)\r\n      .subscribe((res: any) => {\r\n        if (res) {\r\n          this.orPreparation = res.responseData.data;\r\n          console.log(\"OR PREP => \", res);\r\n          this.totalAmounts.totalSales = this.orPreparation.totalSales;\r\n          this.totalAmounts.totalAmountDue = this.orPreparation.totalAmountDue;\r\n          this.totalAmounts.totalVat = this.orPreparation.totalVat;\r\n          this.totalAmounts.totalWithholdingtax = this.orPreparation.totalWithholdingtax;\r\n\r\n          const company = this.companyList.find(\r\n            (company) => company.companyName === this.orPreparation.companyName\r\n          );\r\n\r\n          this.selectedCompanyId = company.id;\r\n          this.selectedCompany = company;\r\n          this.getAvailableReferenceCodeList();\r\n          this.orPreparationForm\r\n            .get(\"totalAmount\")\r\n            .setValue(this.totalAmounts.totalSales);\r\n          this.officialReceiptReferenceList = this.orPreparation.officialReceiptReferences;\r\n          this.officialReceiptReferenceList.filter((or) => {\r\n            this.apiService\r\n              .findByParam(ENDPOINTS.orPreparationRefCodeCheck, or.reference)\r\n              .subscribe((paymentDtls) => {\r\n                let appForm = paymentDtls?.responseData?.data[0];\r\n                this.apiService\r\n                  .findByParam(ENDPOINTS.paymentDetailsByAppformId, appForm.id)\r\n                  .subscribe((payment) => {\r\n                    this.totalAmts.push(payment?.responseData?.data);\r\n                  });\r\n              });\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  getCompanyList() {\r\n    this.isGettingCompanies = true;\r\n    this.apiService.findAll(ENDPOINTS.activeCompanies).subscribe(\r\n      (res: any) => {\r\n        this.companyList = res.responseData.data; // .filter((company) => !this.notInSelection.includes(company.status));\r\n        this.isGettingCompanies = false;\r\n      },\r\n      (err: any) => {\r\n        this.isGettingCompanies = false;\r\n      }\r\n    );\r\n  }\r\n\r\n  setCompanyDetails(i) {\r\n    this.selectedCompanyId = i.id;\r\n    this.orPreparation.companyName = i.companyName;\r\n    this.orPreparation.companyTin = i.companyTin;\r\n    this.orPreparation.companyAddress =\r\n      \"[\" + i.country.code + \" - \" + i.country.name + \"] \" + i.completeAddress;\r\n    this.getAvailableReferenceCodeList();\r\n  }\r\n\r\n  setFormValidator(): void {\r\n    this.orPreparationForm = this.formBuilder.group({\r\n      officialReceiptNo: [\"\", Validators.required],\r\n      typeOfMedium: [\"\", Validators.required],\r\n      amount: [\"\"],\r\n      officialReceiptReference: [\"\"],\r\n      voucherControlNumber: [\"\"],\r\n      businessStyle: [\"\"],\r\n      fullPaymentOf: [\"\"],\r\n      controlNumber: [\"\"],\r\n      companyName: [\"\"],\r\n      companyTin: [\"\"],\r\n      companyAddress: [\"\"],\r\n      totalAmount: [\"\"],\r\n    });\r\n  }\r\n\r\n  resetFormValidator(): void {\r\n    this.selectedCompanyId = null;\r\n    this.totalAmounts = new TotalAmountsModel();\r\n    this.orPreparationForm.reset();\r\n    this.orPreparation = new OrPreparation();\r\n    this.officialReceiptReferenceList = [];\r\n    this.orPreparationForm.markAsUntouched();\r\n    this.orPreparationForm.markAsPristine();\r\n  }\r\n\r\n  getTypeOfMedium() {\r\n    this.typeOfMediumList = [];\r\n\r\n    this.apiService.findAll(ENDPOINTS.typeOfMediumSingleMedia).subscribe(\r\n      (singleMediaList: any) => {\r\n        this.apiService\r\n          .findAll(ENDPOINTS.typeOfMediumMultiMediaMoving)\r\n          .subscribe((multimediaMovingList: any) => {\r\n            this.apiService\r\n              .findAll(ENDPOINTS.typeOfMediumMultiMediaMoving)\r\n              .subscribe((multimediaStaticList: any) => {\r\n                this.typeOfMediumList = [\r\n                  ...singleMediaList.responseData.data,\r\n                  ...multimediaMovingList.responseData.data,\r\n                  ...multimediaStaticList.responseData.data,\r\n                ];\r\n                const key = \"id\";\r\n                this.typeOfMediumList = [\r\n                  ...new Map(\r\n                    this.typeOfMediumList.map((item) => [item[key], item])\r\n                  ).values(),\r\n                ];\r\n              });\r\n          });\r\n      },\r\n      (err: any) => {\r\n        console.log(err);\r\n      }\r\n    );\r\n  }\r\n\r\n  compareList(value: any, selected: any): boolean {\r\n    if (value && selected) {\r\n      return value.id === selected.id;\r\n    }\r\n  }\r\n\r\n  printOr(orData): void {\r\n    if (orData.id) {\r\n      this.report.filename = \"ASC_Receipt\";\r\n      this.report.format = \"pdf\";\r\n      (this.report.module = \"Receipt\"),\r\n        (this.report.params = { officialReceiptId: orData.id });\r\n      this.apiService\r\n        .printReport(ENDPOINTS.generateReports, this.report)\r\n        .subscribe((data: any) => {\r\n          const newBlob = new Blob([data], { type: \"application/pdf\" });\r\n          const downloadURL = URL.createObjectURL(newBlob);\r\n          window.open(downloadURL);\r\n        });\r\n    } else {\r\n      this.sweetAlertService.customErrorMessage(\"Please select data first...\");\r\n    }\r\n  }\r\n\r\n  getAvailableReferenceCodeList() {\r\n    console.log(\"here\");\r\n    if (this.selectedCompanyId && this.orPreparation.typeOfMedium) {\r\n      this.apiService\r\n        .findAll(\r\n          ENDPOINTS.availableReferenceCodeByCompany +\r\n            \"/\" +\r\n            this.selectedCompanyId +\r\n            \"/type-of-medium/\" +\r\n            this.orPreparation.typeOfMedium.description\r\n        )\r\n        .subscribe((res) => {\r\n          this.availableReferenceCodeList = res;\r\n        });\r\n    }\r\n  }\r\n}\r\n","export default \"<form>\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12 title\\\">\\r\\n        <mat-label> Official Receipt Preparation </mat-label>\\r\\n      </div>\\r\\n    </div>\\r\\n    <hr />\\r\\n\\r\\n    <form [formGroup]=\\\"orPreparationForm\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\">\\r\\n          <mat-label\\r\\n            >Official Receipt Number\\r\\n            <span class=\\\"required-field\\\">*</span></mat-label\\r\\n          >\\r\\n          <input\\r\\n            matInput\\r\\n            [(ngModel)]=\\\"orPreparation.officialReceiptNo\\\"\\r\\n            name=\\\"officialReceiptNo\\\"\\r\\n            formControlName=\\\"officialReceiptNo\\\"\\r\\n          />\\r\\n        </mat-form-field>\\r\\n\\r\\n        <!-- <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\">\\r\\n          <mat-label>Voucher Control Number</mat-label>\\r\\n          <input matInput [(ngModel)]=\\\"orPreparation.voucherControlNumber\\\" name=\\\"voucherControlNumber\\\"\\r\\n            formControlName=\\\"voucherControlNumber\\\">\\r\\n        </mat-form-field> -->\\r\\n\\r\\n        <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n          <mat-label>\\r\\n            <ng-container *ngIf=\\\"isGettingCompanies; else loadedLabelTemp\\\">\\r\\n              <i>Loading companies...</i>\\r\\n            </ng-container>\\r\\n            <ng-template #loadedLabelTemp>\\r\\n              Search Company:\\r\\n            </ng-template>\\r\\n          </mat-label>\\r\\n          <mat-select [value]=\\\"selectedCompany\\\">\\r\\n            <mat-option\\r\\n              *ngFor=\\\"let i of companyList\\\"\\r\\n              [value]=\\\"i\\\"\\r\\n              (click)=\\\"setCompanyDetails(i)\\\"\\r\\n            >\\r\\n              {{ i.companyName }}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n\\r\\n        <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\">\\r\\n          <mat-label>Company Name:</mat-label>\\r\\n          <input\\r\\n            matInput\\r\\n            [(ngModel)]=\\\"orPreparation.companyName\\\"\\r\\n            name=\\\"companyName\\\"\\r\\n            formControlName=\\\"companyName\\\"\\r\\n          />\\r\\n        </mat-form-field>\\r\\n\\r\\n        <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\">\\r\\n          <mat-label>Company TIN:</mat-label>\\r\\n          <input\\r\\n            matInput\\r\\n            [(ngModel)]=\\\"orPreparation.companyTin\\\"\\r\\n            name=\\\"companyTin\\\"\\r\\n            formControlName=\\\"companyTin\\\"\\r\\n          />\\r\\n        </mat-form-field>\\r\\n\\r\\n        <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n          <mat-label>Company Address:</mat-label>\\r\\n          <textarea\\r\\n            matInput\\r\\n            [(ngModel)]=\\\"orPreparation.companyAddress\\\"\\r\\n            name=\\\"companyAddress\\\"\\r\\n            formControlName=\\\"companyAddress\\\"\\r\\n          >\\r\\n          </textarea>\\r\\n        </mat-form-field>\\r\\n\\r\\n        <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\">\\r\\n          <mat-label>Business Style:</mat-label>\\r\\n          <input\\r\\n            matInput\\r\\n            [(ngModel)]=\\\"orPreparation.businessStyle\\\"\\r\\n            name=\\\"businessStyle\\\"\\r\\n            formControlName=\\\"businessStyle\\\"\\r\\n          />\\r\\n        </mat-form-field>\\r\\n\\r\\n        <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\">\\r\\n          <mat-label>Control Number:</mat-label>\\r\\n          <input\\r\\n            matInput\\r\\n            [(ngModel)]=\\\"orPreparation.controlNumber\\\"\\r\\n            name=\\\"controlNumber\\\"\\r\\n            formControlName=\\\"controlNumber\\\"\\r\\n          />\\r\\n        </mat-form-field>\\r\\n\\r\\n        <!-- <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\">\\r\\n          <mat-label>Amount:</mat-label>\\r\\n          <input\\r\\n            matInput\\r\\n            [(ngModel)]=\\\"orPreparation.amount\\\"\\r\\n            name=\\\"amount\\\"\\r\\n            (change)=\\\"amountChanged()\\\"\\r\\n            formControlName=\\\"amount\\\"\\r\\n          />\\r\\n        </mat-form-field> -->\\r\\n\\r\\n        <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\">\\r\\n          <mat-label>Total Amount:</mat-label>\\r\\n          <input\\r\\n            matInput\\r\\n            name=\\\"totalAmount\\\"\\r\\n            formControlName=\\\"totalAmount\\\"\\r\\n            readonly\\r\\n          />\\r\\n        </mat-form-field>\\r\\n\\r\\n        <!-- <mat-form-field class=\\\"col-md-8\\\" appearance=\\\"outline\\\">\\r\\n          <mat-label>Amount In Words:</mat-label>\\r\\n          <input matInput [(ngModel)]=\\\"orPreparation.fullPaymentOf\\\" name=\\\"fullPaymentOf\\\"\\r\\n            formControlName=\\\"fullPaymentOf\\\">\\r\\n        </mat-form-field> -->\\r\\n\\r\\n        <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n          <mat-label>Type of Medium</mat-label>\\r\\n          <mat-select\\r\\n            [(ngModel)]=\\\"orPreparation.typeOfMedium\\\"\\r\\n            formControlName=\\\"typeOfMedium\\\"\\r\\n            name=\\\"typeOfMedium\\\"\\r\\n            [compareWith]=\\\"compareList\\\"\\r\\n            (selectionChange)=\\\"getAvailableReferenceCodeList()\\\"\\r\\n          >\\r\\n            <mat-option *ngFor=\\\"let i of typeOfMediumList\\\" [value]=\\\"i\\\">\\r\\n              {{ i.description }}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n\\r\\n        <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\">\\r\\n          <mat-label>List of Paid Reference Codes:</mat-label>\\r\\n          <mat-select\\r\\n            [(ngModel)]=\\\"orPreparationReference.reference\\\"\\r\\n            [disabled]=\\\"!selectedCompanyId || !orPreparation.typeOfMedium\\\"\\r\\n            formControlName=\\\"officialReceiptReference\\\"\\r\\n            name=\\\"officialReceiptReference\\\"\\r\\n            [compareWith]=\\\"compareList\\\"\\r\\n          >\\r\\n            <mat-option\\r\\n              *ngFor=\\\"let i of availableReferenceCodeList\\\"\\r\\n              [value]=\\\"i.referenceCode\\\"\\r\\n            >\\r\\n              {{ i.referenceCode }}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n          <span *ngIf=\\\"orPreparationReference.reference\\\"> <br /><br /> </span>\\r\\n          <button\\r\\n            mat-raised-button\\r\\n            color=\\\"primary\\\"\\r\\n            (click)=\\\"addReceiptReference()\\\"\\r\\n            *ngIf=\\\"orPreparationReference.reference\\\"\\r\\n          >\\r\\n            <i class=\\\"material-icons color__white\\\">save</i> Add Receipt\\r\\n            Reference\\r\\n          </button>\\r\\n        </mat-form-field>\\r\\n\\r\\n        <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\">\\r\\n          <mat-label>Reference List:</mat-label>\\r\\n          <input matInput readonly />\\r\\n\\r\\n          <ul *ngFor=\\\"let i of officialReceiptReferenceList\\\">\\r\\n            <li>\\r\\n              {{ i.reference }}\\r\\n              <span\\r\\n                class=\\\"material-icons\\\"\\r\\n                matTooltip=\\\"Remove Reference Code\\\"\\r\\n                (click)=\\\"removeReferenceCode(i)\\\"\\r\\n                >close</span\\r\\n              >\\r\\n            </li>\\r\\n          </ul>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n    </form>\\r\\n\\r\\n    <div class=\\\"button-content\\\">\\r\\n      <app-form-action-buttons\\r\\n        [childObject]=\\\"orPreparation\\\"\\r\\n        [childForm]=\\\"orPreparationForm\\\"\\r\\n        (saveFunction)=\\\"saveOrUpdate()\\\"\\r\\n        (updateFunction)=\\\"saveOrUpdate()\\\"\\r\\n        (cancelFunction)=\\\"resetFormValidator()\\\"\\r\\n      >\\r\\n      </app-form-action-buttons>\\r\\n      <button\\r\\n        [disabled]=\\\"!orPreparation.id\\\"\\r\\n        mat-raised-button\\r\\n        color=\\\"primary\\\"\\r\\n        (click)=\\\"printOr(orPreparation)\\\"\\r\\n      >\\r\\n        <i class=\\\"material-icons color__white\\\">print</i> Print OR\\r\\n      </button>\\r\\n    </div>\\r\\n    <br />\\r\\n\\r\\n    <br />\\r\\n    <app-form-list\\r\\n      [dataSource]=\\\"dataSource\\\"\\r\\n      [displayedColumns]=\\\"displayedColumns\\\"\\r\\n      (selectInListFunction)=\\\"getOrPreparation()\\\"\\r\\n      (deleteInListFunction)=\\\"cancel()\\\"\\r\\n    ></app-form-list>\\r\\n  </div>\\r\\n</form>\\r\\n\";","import { Payment } from \"./payment.model\";\r\n\r\ninterface Amounts {}\r\n\r\nexport class TotalAmountsModel {\r\n  totalSales: number = 0;\r\n  totalVat: number = 0;\r\n  totalWithholdingtax: number = 0;\r\n  totalAmountDue: number = 0;\r\n\r\n  setTotalValues(data: Array<Payment>) {\r\n    console.log(\"totalValues:  \", data);\r\n    let totalAmountDue: number = 0;\r\n    let totalVat: number = 0;\r\n    let totalSales: number = 0;\r\n    let totalwWithholdingtax: number = 0;\r\n    data.filter((payment: Payment) => {\r\n      totalAmountDue = totalAmountDue + payment.amountDue;\r\n      totalVat = totalVat + payment.vat;\r\n      totalSales = totalSales + payment.basicRate + payment.vat;\r\n      totalwWithholdingtax = totalwWithholdingtax + payment.withholdingTax;\r\n    });\r\n    this.totalAmountDue = totalAmountDue;\r\n    this.totalSales = totalSales;\r\n    this.totalVat = totalVat;\r\n    this.totalWithholdingtax = this.totalWithholdingtax;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { OrPreparationComponent } from './or-preparation.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: OrPreparationComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class OrPreparationRoutingModule { }\r\n","export default \"span.material-icons {\\n  color: #ad0000;\\n  cursor: pointer;\\n}\\n\\n.button-content {\\n  display: inline-flex;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9wYWdlcy9hY2NvdW50aW5nL29yLXByZXBhcmF0aW9uL29yLXByZXBhcmF0aW9uLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksY0FBQTtFQUNBLGVBQUE7QUFDSjs7QUFFQTtFQUNJLG9CQUFBO0FBQ0oiLCJmaWxlIjoic3JjL2FwcC9tb2R1bGVzL3BhZ2VzL2FjY291bnRpbmcvb3ItcHJlcGFyYXRpb24vb3ItcHJlcGFyYXRpb24uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJzcGFuLm1hdGVyaWFsLWljb25zIHtcclxuICAgIGNvbG9yOiByZ2IoMTczLCAwLCAwKTtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxufVxyXG5cclxuLmJ1dHRvbi1jb250ZW50e1xyXG4gICAgZGlzcGxheTogaW5saW5lLWZsZXg7XHJcbn0iXX0= */\";"]}