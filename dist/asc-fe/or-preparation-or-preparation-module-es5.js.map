{"version":3,"sources":["webpack:///src/app/modules/pages/accounting/or-preparation/or-preparation.module.ts","webpack:///src/app/modules/fragments/index.ts","webpack:///src/app/modules/pages/accounting/or-preparation/or-preparation.component.ts","webpack:///src/app/modules/pages/accounting/or-preparation/or-preparation.component.html","webpack:///src/app/core/models/totals.model.ts","webpack:///src/app/modules/pages/accounting/or-preparation/or-preparation-routing.module.ts"],"names":["OrPreparationModule","OrPreparationComponent","apiService","formBuilder","sweetAlertService","spinner","numberPipe","displayedColumns","statusList","orPreparation","orPreparationReference","orPreparationList","typeOfMediumList","officialReceiptReferenceList","availableReferenceCodeList","companyList","report","totalAmts","Array","totalAmounts","getList","setFormValidator","getTypeOfMedium","getCompanyList","getAvailableReferenceCode","findAll","officialReceipt","subscribe","res","responseData","data","map","mappedList","officialReceiptReferencesValue","officialReceiptReferences","reduce","previousValue","currentValue","reference","dataSource","paginator","formListComponent","sort","console","log","voucherControlNumber","length","customErrorMessage","isExisting","filter","filteredOR","trim","findByParam","orPreparationRefCodeCheck","appForm","paymentDetailsByAppformId","id","form","paymentDtls","push","setTotalValues","orPreparationForm","get","setValue","transform","totalSales","amount","ref","responseMessage","err","error","obj","amts","applicationForm","referenceCode","refCode","availableReferenceCode","orPreparationORNumberCheck","officialReceiptNo","save","undefined","success","resetFormValidator","fire","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","value","elementObject","findById","idForUpdate","totalAmountDue","totalVat","totalWithholdingtax","company","find","companyName","selectedCompanyId","selectedCompany","or","payment","activeCompanies","i","companyTin","companyAddress","country","code","name","completeAddress","getAvailableReferenceCodeList","group","required","typeOfMedium","officialReceiptReference","businessStyle","fullPaymentOf","controlNumber","totalAmount","reset","markAsUntouched","markAsPristine","typeOfMediumSingleMedia","singleMediaList","typeOfMediumMultiMediaMoving","multimediaMovingList","multimediaStaticList","key","Map","item","values","selected","orData","filename","format","module","params","officialReceiptId","printReport","generateReports","newBlob","Blob","type","downloadURL","URL","createObjectURL","window","open","availableReferenceCodeByCompany","description","saveOrUpdate","printOr","getOrPreparation","cancel","TotalAmountsModel","totalwWithholdingtax","amountDue","vat","basicRate","withholdingTax","routes","path","component","OrPreparationRoutingModule","forChild"],"mappings":"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","file":"or-preparation-or-preparation-module-es5.js","sourcesContent":["import { NgModule } from \"@angular/core\";\nimport { CommonModule, DecimalPipe } from \"@angular/common\";\n\nimport { OrPreparationRoutingModule } from \"./or-preparation-routing.module\";\nimport { OrPreparationComponent } from \"./or-preparation.component\";\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { ReactiveFormsModule } from \"@angular/forms\";\nimport { AngularMaterialModule } from \"@shared\";\nimport { FragmentsModule } from \"app/modules/fragments/fragments.module\";\n\n@NgModule({\n  declarations: [OrPreparationComponent],\n  imports: [\n    CommonModule,\n    OrPreparationRoutingModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    AngularMaterialModule,\n    FragmentsModule,\n  ],\n  providers: [DecimalPipe],\n})\nexport class OrPreparationModule {}\n","export * from './form-action-buttons/form-action-buttons.component';\nexport * from './form-list/form-list.component';","import { GenericResponse } from \"./../../../../core/models/generic-response-model/generic-response.model\";\nimport { TotalAmountsModel } from \"./../../../../core/models/totals.model\";\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { FormListComponent } from \"@fragments\";\nimport { OrPreparation, OrPreparationReference, Payment } from \"@models\";\nimport { ApiService, SweetAlertService } from \"@services\";\nimport { COMMON_FUNCTION, ENDPOINTS, STATUSES } from \"@shared\";\nimport { Report } from \"app/core/models/report.model\";\nimport { NgxSpinnerService } from \"ngx-spinner\";\nimport Swal from \"sweetalert2\";\nimport { DecimalPipe } from \"@angular/common\";\n\n@Component({\n  selector: \"app-or-preparation\",\n  templateUrl: \"./or-preparation.component.html\",\n  styleUrls: [\"./or-preparation.component.scss\"],\n})\nexport class OrPreparationComponent implements OnInit {\n  @ViewChild(FormListComponent) formListComponent: FormListComponent;\n  dataSource: MatTableDataSource<OrPreparation>;\n  displayedColumns: string[] = [\n    \"officialReceiptNo\",\n    \"typeOfMediumDescription\",\n    \"officialReceiptReferences\",\n    \"status\",\n    \"deleteIcon\",\n  ];\n  statusList = [...STATUSES];\n\n  orPreparation = new OrPreparation();\n  selectedCompanyId: number;\n  selectedCompany: any;\n  orPreparationReference = new OrPreparationReference();\n  orPreparationList = [];\n  typeOfMediumList = [];\n  officialReceiptReferenceList = [];\n  availableReferenceCodeList = [];\n  companyList = [];\n  report = new Report();\n  orPreparationForm: FormGroup;\n  totalAmts: Array<Payment> = new Array<Payment>();\n  totalAmounts: TotalAmountsModel = new TotalAmountsModel();\n\n  constructor(\n    private apiService: ApiService,\n    private formBuilder: FormBuilder,\n    private sweetAlertService: SweetAlertService,\n    private spinner: NgxSpinnerService,\n    private numberPipe: DecimalPipe\n  ) {}\n\n  ngOnInit() {\n    this.getList();\n    this.setFormValidator();\n    this.getTypeOfMedium();\n    this.getCompanyList();\n    this.getAvailableReferenceCode();\n  }\n\n  getList(): void {\n    this.getAvailableReferenceCode();\n    this.apiService.findAll(ENDPOINTS.officialReceipt).subscribe((res: any) => {\n      this.orPreparationList = res.responseData.data;\n\n      this.orPreparationList = this.orPreparationList.map((mappedList) => ({\n        ...mappedList,\n        officialReceiptReferencesValue: mappedList.officialReceiptReferences.reduce(\n          (previousValue, currentValue) => {\n            if (previousValue) {\n              return previousValue + \", \" + currentValue?.reference;\n            } else {\n              return currentValue?.reference;\n            }\n          },\n          \"\"\n        ),\n      }));\n\n      this.dataSource = new MatTableDataSource<OrPreparation>(\n        this.orPreparationList\n      );\n      this.dataSource.paginator = this.formListComponent.paginator;\n      this.dataSource.sort = this.formListComponent.sort;\n    });\n  }\n\n  amountChanged() {\n    // this.orPreparationForm\n    //   .get(\"totalAmount\")\n    //   .setValue(\n    //     this.numberPipe.transform(\n    //       (+this.orPreparationForm.get(\"amount\").value || 0) +\n    //         this.totalAmounts.totalSales,\n    //       \".2-2\"\n    //     )\n    //   );\n  }\n\n  addReceiptReference() {\n    console.log(\"prep => \", this.orPreparationReference);\n    if (\n      (this.orPreparation.voucherControlNumber &&\n        this.officialReceiptReferenceList.length >= 6) ||\n      this.officialReceiptReferenceList.length >= 9\n    ) {\n      this.sweetAlertService.customErrorMessage(\"Max input limit reached\");\n    } else {\n      const isExisting = this.officialReceiptReferenceList.filter(\n        (filteredOR) =>\n          filteredOR.reference === this.orPreparationReference.reference.trim()\n      );\n      if (isExisting.length) {\n        this.sweetAlertService.customErrorMessage(\n          \"Reference code already in the list\"\n        );\n      } else {\n        this.apiService\n          .findByParam(\n            ENDPOINTS.orPreparationRefCodeCheck,\n            this.orPreparationReference.reference\n          )\n          .subscribe(\n            (res) => {\n              if (res?.responseData?.data) {\n                let appForm = res?.responseData?.data[0];\n                this.apiService\n                  .findByParam(ENDPOINTS.paymentDetailsByAppformId, appForm.id)\n                  .subscribe((form: GenericResponse<Payment>) => {\n                    console.log(\"form : \", form);\n                    let paymentDtls;\n                    if (form) {\n                      //  this.totalAmounts.totalAmountDue = Number(this.totalAmounts.totalAmountDue) + Number(form?.responseData?.data?.amountDue);\n                      // this.totalAmounts.setTotalValues(form.responseData.data)\n\n                      this.totalAmts.push(form.responseData.data);\n                      this.totalAmounts.setTotalValues(this.totalAmts);\n\n                      this.orPreparationForm\n                        .get(\"totalAmount\")\n                        .setValue(\n                          this.numberPipe.transform(\n                            this.totalAmounts.totalSales,\n                            \".2-2\"\n                          )\n                        );\n                    }\n                    console.log(\"totals : \", this.totalAmounts);\n                  });\n\n                this.officialReceiptReferenceList.push(\n                  this.orPreparationReference\n                );\n                this.orPreparationReference.amount = appForm.amount;\n                // this.getAvailableReferenceCode(this.orPreparationReference?.reference);\n                this.orPreparationReference = new OrPreparationReference();\n                // console.log(\"data => \", this.officialReceiptReferenceList)\n                this.officialReceiptReferenceList.filter((ref) => {\n                  // let total = Number(this.orPreparationForm.controls.totalAmount.value) + Number(ref.amount);\n                  // this.orPreparationForm.controls.totalAmount.setValue(total);\n                });\n              } else {\n                this.sweetAlertService.customErrorMessage(res?.responseMessage);\n              }\n            },\n            (err) => {\n              this.sweetAlertService.error(err);\n            }\n          );\n      }\n    }\n  }\n\n  removeReferenceCode(obj) {\n    this.officialReceiptReferenceList = this.officialReceiptReferenceList.filter(\n      (filteredOR) => filteredOR.reference !== obj.reference.trim()\n    );\n    console.log(\"remove ref : \", obj);\n    console.log(\"totalAmts\", this.totalAmts);\n    this.totalAmts = this.totalAmts.filter(\n      (amts) => amts.applicationForm.referenceCode !== obj.reference.trim()\n    );\n    console.log(\"totalamts\", this.totalAmts);\n    this.totalAmounts.setTotalValues(this.totalAmts);\n    console.log(\"total amounts : \", this.totalAmounts);\n  }\n\n  getAvailableReferenceCode(refCode = \"\") {\n    if (refCode) {\n      this.apiService\n        .findByParam(ENDPOINTS.availableReferenceCode, refCode)\n        .subscribe((res) => {\n          console.log(res);\n        });\n    } else {\n      this.apiService\n        .findAll(ENDPOINTS.availableReferenceCode)\n        .subscribe((res) => {\n          console.log(res);\n          this.availableReferenceCodeList = res;\n        });\n    }\n  }\n\n  saveOrUpdate(): void {\n    this.orPreparation.id = this.orPreparation?.id ? this.orPreparation.id : 0;\n    this.orPreparation.officialReceiptReferences = this.officialReceiptReferenceList;\n    // this.orPreparation.setTotalAmounts(this.totalAmounts);\n    // console.log(this.totalAmounts.)\n    console.log(\"orPrep\", this.orPreparation);\n    this.apiService\n      .findByParam(\n        ENDPOINTS.orPreparationORNumberCheck,\n        this.orPreparation.officialReceiptNo\n      )\n      .subscribe(\n        (isExisting) => {\n          if (isExisting.responseData.data && !this.orPreparation?.id) {\n            this.sweetAlertService.customErrorMessage(\n              isExisting.responseMessage\n            );\n          } else {\n            // this.orPreparation.setTotalAmounts(this.totalAmounts);\n            // console.log('orPreparation')\n            this.apiService\n              .save(`${ENDPOINTS.orPreparation}/submit`, {\n                ...this.orPreparation,\n                ...this.totalAmounts,\n              })\n              .subscribe(\n                (res: any) => {\n                  if (res !== undefined) {\n                    this.sweetAlertService.success(res);\n                  }\n                },\n                (err: any) => {\n                  this.sweetAlertService.error(err);\n                },\n                () => {\n                  this.resetFormValidator();\n                  this.getList();\n                }\n              );\n          }\n        },\n        (err) => this.sweetAlertService.error(err)\n      );\n  }\n\n  cancel(): void {\n    Swal.fire({\n      text: `Are you sure you want to cancel this Official Receipt Preparation?`,\n      icon: \"question\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Confirm\",\n    }).then((result) => {\n      if (result.value) {\n        this.orPreparation = this.formListComponent.elementObject;\n        this.orPreparation.officialReceiptReferences = null;\n        this.apiService\n          .save(`${ENDPOINTS.orPreparation}/cancel`, this.orPreparation)\n          .subscribe(\n            (res: any) => {\n              if (res !== undefined) {\n                this.sweetAlertService.success(res);\n              }\n            },\n            (err: any) => {\n              this.sweetAlertService.error(err);\n            },\n            () => {\n              this.resetFormValidator();\n              this.getList();\n            }\n          );\n      }\n    });\n  }\n\n  getOrPreparation(): void {\n    console.log(\"get:: =>\");\n    this.apiService\n      .findById(ENDPOINTS.officialReceipt, this.formListComponent.idForUpdate)\n      .subscribe((res: any) => {\n        if (res) {\n          this.orPreparation = res.responseData.data;\n          console.log(\"OR PREP => \", res);\n          this.totalAmounts.totalSales = this.orPreparation.totalSales;\n          this.totalAmounts.totalAmountDue = this.orPreparation.totalAmountDue;\n          this.totalAmounts.totalVat = this.orPreparation.totalVat;\n          this.totalAmounts.totalWithholdingtax = this.orPreparation.totalWithholdingtax;\n\n          const company = this.companyList.find(\n            (company) => company.companyName === this.orPreparation.companyName\n          );\n\n          this.selectedCompanyId = company.id;\n          this.selectedCompany = company;\n\n          this.orPreparationForm\n            .get(\"totalAmount\")\n            .setValue(this.totalAmounts.totalSales);\n          this.officialReceiptReferenceList = this.orPreparation.officialReceiptReferences;\n          this.officialReceiptReferenceList.filter((or) => {\n            this.apiService\n              .findByParam(ENDPOINTS.orPreparationRefCodeCheck, or.reference)\n              .subscribe((paymentDtls) => {\n                let appForm = paymentDtls?.responseData?.data[0];\n                this.apiService\n                  .findByParam(ENDPOINTS.paymentDetailsByAppformId, appForm.id)\n                  .subscribe((payment) => {\n                    this.totalAmts.push(payment?.responseData?.data);\n                  });\n              });\n          });\n        }\n      });\n  }\n\n  getCompanyList() {\n    this.apiService.findAll(ENDPOINTS.activeCompanies).subscribe(\n      (res: any) => {\n        this.companyList = res.responseData.data; // .filter((company) => !this.notInSelection.includes(company.status));\n      },\n      (err: any) => {}\n    );\n  }\n\n  setCompanyDetails(i) {\n    this.selectedCompanyId = i.id;\n    this.orPreparation.companyName = i.companyName;\n    this.orPreparation.companyTin = i.companyTin;\n    this.orPreparation.companyAddress =\n      \"[\" + i.country.code + \" - \" + i.country.name + \"] \" + i.completeAddress;\n    this.getAvailableReferenceCodeList();\n  }\n\n  setFormValidator(): void {\n    this.orPreparationForm = this.formBuilder.group({\n      officialReceiptNo: [\"\", Validators.required],\n      typeOfMedium: [\"\", Validators.required],\n      amount: [\"\"],\n      officialReceiptReference: [\"\"],\n      voucherControlNumber: [\"\"],\n      businessStyle: [\"\"],\n      fullPaymentOf: [\"\"],\n      controlNumber: [\"\"],\n      companyName: [\"\"],\n      companyTin: [\"\"],\n      companyAddress: [\"\"],\n      totalAmount: [\"\"],\n    });\n  }\n\n  resetFormValidator(): void {\n    this.selectedCompanyId = null;\n    this.totalAmounts = new TotalAmountsModel();\n    this.orPreparationForm.reset();\n    this.orPreparation = new OrPreparation();\n    this.officialReceiptReferenceList = [];\n    this.orPreparationForm.markAsUntouched();\n    this.orPreparationForm.markAsPristine();\n  }\n\n  getTypeOfMedium() {\n    this.typeOfMediumList = [];\n\n    this.apiService.findAll(ENDPOINTS.typeOfMediumSingleMedia).subscribe(\n      (singleMediaList: any) => {\n        this.apiService\n          .findAll(ENDPOINTS.typeOfMediumMultiMediaMoving)\n          .subscribe((multimediaMovingList: any) => {\n            this.apiService\n              .findAll(ENDPOINTS.typeOfMediumMultiMediaMoving)\n              .subscribe((multimediaStaticList: any) => {\n                this.typeOfMediumList = [\n                  ...singleMediaList.responseData.data,\n                  ...multimediaMovingList.responseData.data,\n                  ...multimediaStaticList.responseData.data,\n                ];\n                const key = \"id\";\n                this.typeOfMediumList = [\n                  ...new Map(\n                    this.typeOfMediumList.map((item) => [item[key], item])\n                  ).values(),\n                ];\n              });\n          });\n      },\n      (err: any) => {\n        console.log(err);\n      }\n    );\n  }\n\n  compareList(value: any, selected: any): boolean {\n    if (value && selected) {\n      return value.id === selected.id;\n    }\n  }\n\n  printOr(orData): void {\n    if (orData.id) {\n      this.report.filename = \"ASC_Receipt\";\n      this.report.format = \"pdf\";\n      (this.report.module = \"Receipt\"),\n        (this.report.params = { officialReceiptId: orData.id });\n      this.apiService\n        .printReport(ENDPOINTS.generateReports, this.report)\n        .subscribe((data: any) => {\n          const newBlob = new Blob([data], { type: \"application/pdf\" });\n          const downloadURL = URL.createObjectURL(newBlob);\n          window.open(downloadURL);\n        });\n    } else {\n      this.sweetAlertService.customErrorMessage(\"Please select data first...\");\n    }\n  }\n\n  getAvailableReferenceCodeList() {\n    if (this.selectedCompanyId && this.orPreparation.typeOfMedium) {\n      this.apiService\n        .findAll(\n          ENDPOINTS.availableReferenceCodeByCompany +\n            \"/\" +\n            this.selectedCompanyId +\n            \"/type-of-medium/\" +\n            this.orPreparation.typeOfMedium.description\n        )\n        .subscribe((res) => {\n          this.availableReferenceCodeList = res;\n        });\n    }\n  }\n}\n","<form>\n  <div class=\"container-fluid\">\n    <div class=\"row\">\n      <div class=\"col-md-12 title\">\n        <mat-label> Official Receipt Preparation </mat-label>\n      </div>\n    </div>\n    <hr />\n\n    <form [formGroup]=\"orPreparationForm\">\n      <div class=\"row\">\n        <mat-form-field class=\"col-md-6\" appearance=\"outline\">\n          <mat-label\n            >Official Receipt Number\n            <span class=\"required-field\">*</span></mat-label\n          >\n          <input\n            matInput\n            [(ngModel)]=\"orPreparation.officialReceiptNo\"\n            name=\"officialReceiptNo\"\n            formControlName=\"officialReceiptNo\"\n          />\n        </mat-form-field>\n\n        <!-- <mat-form-field class=\"col-md-6\" appearance=\"outline\">\n          <mat-label>Voucher Control Number</mat-label>\n          <input matInput [(ngModel)]=\"orPreparation.voucherControlNumber\" name=\"voucherControlNumber\"\n            formControlName=\"voucherControlNumber\">\n        </mat-form-field> -->\n\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n          <mat-label>Search Company:</mat-label>\n          <mat-select [value]=\"selectedCompany\">\n            <mat-option\n              *ngFor=\"let i of companyList\"\n              [value]=\"i\"\n              (click)=\"setCompanyDetails(i)\"\n            >\n              {{ i.companyName }}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n\n        <mat-form-field class=\"col-md-6\" appearance=\"outline\">\n          <mat-label>Company Name:</mat-label>\n          <input\n            matInput\n            [(ngModel)]=\"orPreparation.companyName\"\n            name=\"companyName\"\n            formControlName=\"companyName\"\n          />\n        </mat-form-field>\n\n        <mat-form-field class=\"col-md-6\" appearance=\"outline\">\n          <mat-label>Company TIN:</mat-label>\n          <input\n            matInput\n            [(ngModel)]=\"orPreparation.companyTin\"\n            name=\"companyTin\"\n            formControlName=\"companyTin\"\n          />\n        </mat-form-field>\n\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n          <mat-label>Company Address:</mat-label>\n          <textarea\n            matInput\n            [(ngModel)]=\"orPreparation.companyAddress\"\n            name=\"companyAddress\"\n            formControlName=\"companyAddress\"\n          >\n          </textarea>\n        </mat-form-field>\n\n        <mat-form-field class=\"col-md-6\" appearance=\"outline\">\n          <mat-label>Business Style:</mat-label>\n          <input\n            matInput\n            [(ngModel)]=\"orPreparation.businessStyle\"\n            name=\"businessStyle\"\n            formControlName=\"businessStyle\"\n          />\n        </mat-form-field>\n\n        <mat-form-field class=\"col-md-6\" appearance=\"outline\">\n          <mat-label>Control Number:</mat-label>\n          <input\n            matInput\n            [(ngModel)]=\"orPreparation.controlNumber\"\n            name=\"controlNumber\"\n            formControlName=\"controlNumber\"\n          />\n        </mat-form-field>\n\n        <!-- <mat-form-field class=\"col-md-6\" appearance=\"outline\">\n          <mat-label>Amount:</mat-label>\n          <input\n            matInput\n            [(ngModel)]=\"orPreparation.amount\"\n            name=\"amount\"\n            (change)=\"amountChanged()\"\n            formControlName=\"amount\"\n          />\n        </mat-form-field> -->\n\n        <mat-form-field class=\"col-md-6\" appearance=\"outline\">\n          <mat-label>Total Amount:</mat-label>\n          <input\n            matInput\n            name=\"totalAmount\"\n            formControlName=\"totalAmount\"\n            readonly\n          />\n        </mat-form-field>\n\n        <!-- <mat-form-field class=\"col-md-8\" appearance=\"outline\">\n          <mat-label>Amount In Words:</mat-label>\n          <input matInput [(ngModel)]=\"orPreparation.fullPaymentOf\" name=\"fullPaymentOf\"\n            formControlName=\"fullPaymentOf\">\n        </mat-form-field> -->\n\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n          <mat-label>Type of Medium</mat-label>\n          <mat-select\n            [(ngModel)]=\"orPreparation.typeOfMedium\"\n            formControlName=\"typeOfMedium\"\n            name=\"typeOfMedium\"\n            [compareWith]=\"compareList\"\n            (change)=\"getAvailableReferenceCodeList()\"\n          >\n            <mat-option *ngFor=\"let i of typeOfMediumList\" [value]=\"i\">\n              {{ i.description }}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n\n        <mat-form-field class=\"col-md-6\" appearance=\"outline\">\n          <mat-label>List of Paid Reference Codes:</mat-label>\n          <mat-select\n            [(ngModel)]=\"orPreparationReference.reference\"\n            [disabled]=\"!selectedCompanyId || !orPreparation.typeOfMedium\"\n            formControlName=\"officialReceiptReference\"\n            name=\"officialReceiptReference\"\n            [compareWith]=\"compareList\"\n          >\n            <mat-option\n              *ngFor=\"let i of availableReferenceCodeList\"\n              [value]=\"i.referenceCode\"\n            >\n              {{ i.referenceCode }}\n            </mat-option>\n          </mat-select>\n          <span *ngIf=\"orPreparationReference.reference\"> <br /><br /> </span>\n          <button\n            mat-raised-button\n            color=\"primary\"\n            (click)=\"addReceiptReference()\"\n            *ngIf=\"orPreparationReference.reference\"\n          >\n            <i class=\"material-icons color__white\">save</i> Add Receipt\n            Reference\n          </button>\n        </mat-form-field>\n\n        <mat-form-field class=\"col-md-6\" appearance=\"outline\">\n          <mat-label>Reference List:</mat-label>\n          <input matInput readonly />\n\n          <ul *ngFor=\"let i of officialReceiptReferenceList\">\n            <li>\n              {{ i.reference }}\n              <span\n                class=\"material-icons\"\n                matTooltip=\"Remove Reference Code\"\n                (click)=\"removeReferenceCode(i)\"\n                >close</span\n              >\n            </li>\n          </ul>\n        </mat-form-field>\n      </div>\n    </form>\n\n    <div class=\"button-content\">\n      <app-form-action-buttons\n        [childObject]=\"orPreparation\"\n        [childForm]=\"orPreparationForm\"\n        (saveFunction)=\"saveOrUpdate()\"\n        (updateFunction)=\"saveOrUpdate()\"\n        (cancelFunction)=\"resetFormValidator()\"\n      >\n      </app-form-action-buttons>\n      <button\n        [disabled]=\"!orPreparation.id\"\n        mat-raised-button\n        color=\"primary\"\n        (click)=\"printOr(orPreparation)\"\n      >\n        <i class=\"material-icons color__white\">print</i> Print OR\n      </button>\n    </div>\n    <br />\n\n    <br />\n    <app-form-list\n      [dataSource]=\"dataSource\"\n      [displayedColumns]=\"displayedColumns\"\n      (selectInListFunction)=\"getOrPreparation()\"\n      (deleteInListFunction)=\"cancel()\"\n    ></app-form-list>\n  </div>\n</form>\n","import { Payment } from \"./payment.model\";\n\ninterface Amounts {}\n\nexport class TotalAmountsModel {\n  totalSales: number = 0;\n  totalVat: number = 0;\n  totalWithholdingtax: number = 0;\n  totalAmountDue: number = 0;\n\n  setTotalValues(data: Array<Payment>) {\n    console.log(\"totalValues:  \", data);\n    let totalAmountDue: number = 0;\n    let totalVat: number = 0;\n    let totalSales: number = 0;\n    let totalwWithholdingtax: number = 0;\n    data.filter((payment: Payment) => {\n      totalAmountDue = totalAmountDue + payment.amountDue;\n      totalVat = totalVat + payment.vat;\n      totalSales = totalSales + payment.basicRate + payment.vat;\n      totalwWithholdingtax = totalwWithholdingtax + payment.withholdingTax;\n    });\n    this.totalAmountDue = totalAmountDue;\n    this.totalSales = totalSales;\n    this.totalVat = totalVat;\n    this.totalWithholdingtax = this.totalWithholdingtax;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { OrPreparationComponent } from './or-preparation.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: OrPreparationComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class OrPreparationRoutingModule { }\n"]}