{"version":3,"sources":["./src/app/core/models/type-of-document.model.ts","./src/app/core/models/country.model.ts","./src/app/core/models/type-of-reason.model.ts","./src/app/core/models/company-penalty.model.ts","./src/app/core/models/type-of-application.model.ts","./src/app/core/models/s1-application.model.ts","./src/app/core/models/product.model.ts","./src/app/modules/pages/accounting/add-penalty/add-penalty.module.ts","./src/app/core/models/payment.model.ts","./src/app/core/models/type-of-medium.model.ts","./src/app/core/models/application-multimedia.model.ts","./src/app/core/models/s2-application.model.ts","./src/app/core/models/or-preparation.model.ts","./src/app/core/models/user-account.model.ts","./src/app/core/models/asc-rate.model.ts","./src/app/core/models/application-single-media.model.ts","./src/app/modules/pages/accounting/add-penalty/add-penalty.component.html","./src/app/modules/pages/accounting/add-penalty/add-penalty.component.ts","./src/app/core/models/application-request.model.ts","./src/app/core/models/profile.model.ts","./src/app/core/models/attachment-document.model.ts","./src/app/core/models/category.model.ts","./src/app/core/models/supporting-document.model.ts","./src/app/core/models/user-role.model.ts","./src/app/modules/pages/accounting/add-penalty/add-penalty.component.scss","./src/app/core/models/payment-type.model.ts","./src/app/core/models/or-preparation-reference.model.ts","./src/app/core/models/performance-metrics.model.ts","./src/app/modules/pages/accounting/add-penalty/add-penalty-routing.module.ts","./src/app/core/models/payment-method.model.ts","./src/app/core/models/index.ts","./src/app/core/models/affiliation.model.ts","./src/app/core/models/brand.model.ts","./src/app/core/models/company.model.ts","./src/app/core/models/brand-penalty.model.ts"],"names":[],"mappings":"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","file":"add-penalty-add-penalty-module-es2015.js","sourcesContent":["export class TypeOfDocument {\r\n    id: number;\r\n    description: string;\r\n    remarksEnable: boolean;\r\n    basedOnEnable: boolean;\r\n    variantEnable: boolean;\r\n    dateOfLaunchEnable: boolean;\r\n    expiresOnEnable: boolean;\r\n    inputEnable: boolean;\r\n    status: string;\r\n}\r\n","export class Country {\r\n  id: number;\r\n  code: string;\r\n  name: string;\r\n}","export class TypeOfReason {\r\n    id: number;\r\n    reason: string;\r\n    status: string;\r\n}\r\n","import { Company } from './company.model';\r\nimport { PaymentMethod } from './payment-method.model';\r\n\r\nexport class CompanyPenalty {\r\n    id: number;\r\n    company: Company;\r\n    paymentStatus: string;\r\n    penaltyAmount: number;\r\n    penaltyDate: Date;\r\n    remarks: string;\r\n    paymentAttachmentReference: string;\r\n    paymentMethod: PaymentMethod;\r\n\r\n    // not yet in BE\r\n    // paidDate: Date;\r\n    // status: string;\r\n}","export class TypeOfApplication {\r\n    id: number;\r\n    description: string;\r\n    clearingReleaseTime: String\r\n    decisionReleaseTime: String\r\n    sequenceNo: number;\r\n    status: String\r\n    submissionEndTime: String;\r\n    submissionStartTime: String\r\n}","import { Company } from './company.model';\r\nimport { Brand } from './brand.model';\r\nimport { ApplicationType } from './application-type.model';\r\nimport { UserAccount } from './user-account.model';\r\nimport { MultipleApplication } from './multiple-application.model';\r\nimport { Affiliation } from './affiliation.model';\r\nimport { ApplicationRequest } from './application-request.model';\r\nimport { Product } from './product.model';\r\nimport { TypeOfMedium } from './type-of-medium.model';\r\n\r\nexport class S1Application {\r\n    id: number;\r\n    company: Company;\r\n    brand: Brand;\r\n    adTitle: string;\r\n    referenceCode: string;\r\n\r\n    tagLine: string;\r\n    materialInformation: string;\r\n    externalStatus: string\r\n    internalStatus: string\r\n    revisionNo: number;\r\n\r\n    actionBy: UserAccount;\r\n    actionStatus: string; // ASSIGN_TO_ADSPE, ASSIGN_TO_REVIEWER, ASSIGN_TO_SCREENER\r\n    formStatus: string; // OPEN, LOCKED\r\n    submissionType: string // ORIGINAL, REVISION, COMPLIANCE\r\n    applicationType: ApplicationType;\r\n\r\n    formType: string; // INDIVIDUAL, MULTIPLE\r\n    autoSubmit: boolean;\r\n    submissionDate: Date;\r\n    sequenceOrder: number;\r\n    countSeries: number;\r\n\r\n    refTypeOfMedium: string;\r\n    assignedUser: UserAccount;\r\n    applicationOwner: UserAccount;\r\n    multipleApplication: MultipleApplication;\r\n    appFormReference: string;\r\n\r\n    mainAttachmentReference: string;\r\n    supportingAttachmentReference: string;\r\n    paymentAttachmentReference: string;\r\n    membersAffiliation: Affiliation;\r\n    decisionStatus: string;\r\n\r\n    amount: number;\r\n    applicationRequest: ApplicationRequest;\r\n    revisionLetterAttachmentReference: string;\r\n    assignedEncoder: UserAccount;\r\n    assignedAdSpecialist: UserAccount;\r\n\r\n    assignedScreener: UserAccount;\r\n    assignedReviewer: UserAccount;\r\n    verifiedDatetimeByEvaluator: Date;\r\n    sameDayRelease: boolean;\r\n    paidByApplicant: boolean;\r\n\r\n    archived: boolean;\r\n    appliedS2: boolean;\r\n    deliquent: boolean;\r\n    paymentStatus: string;\r\n    applicationDate: Date;\r\n\r\n    validUntil: Date;\r\n    previousRefCode: string;\r\n    hasNoSupportingDocs: boolean;\r\n    referenceCodeRejected: string;\r\n\r\n    hasRevision: boolean;\r\n    product: Product;\r\n    hasOngoingRevision: boolean;\r\n    qrCode: string;\r\n    barCode: string;\r\n    screenerDecisionComment: boolean;\r\n    reviewerDecisionComment: boolean;\r\n    hasOngoingCompliance: boolean;\r\n    releaseStatus: string;\r\n\r\n    complianceForm: boolean; // param need upon request for compliance\r\n    emailSent: boolean;\r\n    forwardToScreener: boolean;\r\n    forwardToReviewer: boolean;\r\n    formProcess: string;\r\n    typeOfMedium: string;\r\n\r\n    stampMaterialFileURL: string;\r\n    stampMaterialFilename: string;\r\n    decisionFormFileURL : string;\r\n    decisionFormFilename: string;\r\n\r\n    hasOngoingAppeal: boolean;\r\n    typeOfAppeal: string;\r\n    appealAttachmentReference: string;\r\n\r\n    hasOfficialReceipt: boolean;\r\n\r\n    // For AppRequest\r\n    status: string;\r\n\r\n    currentAssignee: string;\r\n}\r\n","import { Brand } from './brand.model';\r\nimport { Category } from './category.model';\r\n\r\nexport class Product {\r\n    id: number;\r\n    description: string;\r\n    status: string;\r\n    brand: Brand;\r\n    category: Category;\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AddPenaltyRoutingModule } from './add-penalty-routing.module';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { AngularMaterialModule } from '@shared';\r\nimport { AddPenaltyComponent } from './add-penalty.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [AddPenaltyComponent],\r\n  imports: [\r\n    CommonModule,\r\n    AddPenaltyRoutingModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    AngularMaterialModule,\r\n  ]\r\n})\r\nexport class AddPenaltyModule { }\r\n","import { S1Application } from './s1-application.model';\r\nimport { PaymentMethod } from './payment-method.model';\r\nimport { MultipleApplication } from './multiple-application.model';\r\nimport { S2Application } from './s2-application.model';\r\n\r\nexport class Payment {\r\n    id: number;\r\n    amountDue: number;\r\n    amountReceive: number;\r\n    appFormReference: string;\r\n    applicationForm: S1Application;\r\n    basicRate: number;\r\n    discount: number;\r\n    filename: string;\r\n    officialReceiptNo: string;\r\n    paymentAttachmentReference: string;\r\n    paymentDate: Date;\r\n    paymentMethod: PaymentMethod = new PaymentMethod();\r\n    paymentStatus: string; // PAID, UNPAID\r\n    remarks: string;\r\n    status: string;\r\n    vat: number;\r\n    withholdingTax: number;\r\n    amountToSettle: number;\r\n    companyName: string;\r\n    companyId: number;\r\n\r\n    multipleApplication: MultipleApplication;\r\n    filedBirForm: boolean = false;\r\n    applicationFormS2: S2Application;\r\n\r\n    constructor() {\r\n        this.filedBirForm = false;\r\n        this.remarks = '';\r\n    }\r\n}\r\n","import { TypeOfClearance } from './type-of-clearance.model';\r\nimport { TypeOfMainDocument } from './type-of-main-document.model';\r\n\r\nexport class TypeOfMedium {\r\n  description: string;\r\n  executionEnable: boolean;\r\n  id: number;\r\n  languageEnable: boolean;\r\n  lengthEnable: boolean;\r\n  multimedia: boolean;\r\n  multimediaMoving: boolean;\r\n  multimediaStatic: boolean;\r\n  othersEnable: boolean;\r\n  singlemedia: boolean;\r\n  sizeLengthEnable: boolean;\r\n  status: string;\r\n  typeOfMainDocument: TypeOfMainDocument;\r\n  widthEnable: boolean;\r\n  typeOfClearance: TypeOfClearance;\r\n\r\n  // not in BE; for List value\r\n  enabledFields: string;\r\n  sizeLength: string;\r\n}\r\n","import { TypeOfMedium } from './type-of-medium.model';\r\n\r\nexport class ApplicationMultimedia {\r\n    id: number;\r\n    amount: number;\r\n    appFormReference: string;\r\n    mediaType?: string; // STATIC, MOVING\r\n    multimediaSizeLength?: string;\r\n    typeOfMedium?: TypeOfMedium;\r\n}\r\n\r\nexport class ApplicationMultimediaItemsDTO {\r\n    hasSelected: boolean;\r\n    id: number;\r\n    multimediaMovingMedium?: string;\r\n    multimediaStaticMedium?: string;\r\n    sizeLength?: number;\r\n}\r\n\r\nexport class ApplicationMultimediaMovingDTO extends ApplicationMultimedia {\r\n    applicationMultimediaMovingList: ApplicationMultimediaItemsDTO[];\r\n    sizeLength: number;\r\n}\r\n\r\nexport class ApplicationMultimediaStaticDTO extends ApplicationMultimedia {\r\n    applicationMultimediaStaticList: ApplicationMultimediaItemsDTO[];\r\n}\r\n","import { ApplicationRequest } from './application-request.model';\r\nimport { S1Application } from './s1-application.model';\r\nimport { UserAccount } from './user-account.model';\r\n\r\nexport class S2Application {\r\n\r\n    id: number;\r\n    actionBy: string;\r\n    actionStatus: string;\r\n    applicationDate: Date;\r\n    applicationForm: S1Application;\r\n    assignedAdSpecialist: UserAccount;\r\n    assignedEncoder: UserAccount;\r\n    assignedUser: UserAccount;\r\n    complianceDate: Date;\r\n    decisionStatus: string;\r\n    externalStatus: string;\r\n    finalMaterialAttachmentReference: string;\r\n    formStatus: string;\r\n    internalStatus: string;\r\n    issuedDate: Date;\r\n    paymentStatus: string;\r\n    specialClearing: boolean;\r\n    submissionDate: Date;\r\n    validUntil: Date;\r\n    validityDate: Date;\r\n    referenceCodeRejected: string;\r\n    releaseDate: Date;\r\n    hasToa: boolean;\r\n    submissionType: string;\r\n    applicationRequest: ApplicationRequest;\r\n    paymentAttachmentReference: string;\r\n    amount: string;\r\n    appFormReference: string;\r\n    hasOngoingCompliance: boolean;\r\n    formProcess: string;\r\n    complianceForm: boolean; // param need upon request for compliance\r\n    hasOngoingAppeal: boolean;\r\n    typeOfAppeal: string;\r\n    appealAttachmentReference: string;\r\n    clearanceToaFileUrl: string;\r\n    clearanceToaFilename: string;\r\n    releaseStatus: string;\r\n    supportingAttachmentReference: string;\r\n}\r\n","import { TotalAmountsModel } from './totals.model';\r\nimport { TypeOfMedium, OrPreparationReference } from '@models';\r\n\r\nexport class OrPreparation {\r\n    amount: number;\r\n    amountInWords: string;\r\n    businessStyle: string;\r\n    companyAddress: string;\r\n    companyName: string;\r\n    companyTin: string;\r\n    controlNumber: string;\r\n    fullPaymentOf: string;\r\n    id: number;\r\n    officialReceiptDate: Date;\r\n    officialReceiptNo: string;\r\n    officialReceiptReferences: OrPreparationReference[];\r\n    remarks: string;\r\n    status: string;\r\n    typeOfMedium: TypeOfMedium;\r\n    voucherControlNumber: string;\r\n\r\n    //totals\r\n    totalSales: number;\r\n    totalVat: number;\r\n    totalWithholdingtax: number;\r\n    totalAmountDue: number;\r\n\r\n    // Not if BE; for FE only\r\n    officialReceiptReferencesValue: string;\r\n\r\n    setTotalAmounts(totals: TotalAmountsModel){\r\n        this.totalSales = totals.totalSales;\r\n        this.totalAmountDue = totals.totalAmountDue;\r\n        this.totalVat = totals.totalVat;\r\n        this.totalWithholdingtax = totals.totalWithholdingtax;\r\n    }\r\n}","import { Affiliation, Company, UserRole } from '@models';\r\n\r\nexport class UserAccount {\r\n    id: number;\r\n    username: string;\r\n    password: string;\r\n    firstName: string;\r\n    middleName: string;\r\n    lastName: string;\r\n    company: Company;\r\n    membersAffiliationDto: Affiliation;\r\n    mobileNumber: string;\r\n    userRole: UserRole;\r\n    status: string;\r\n    acceptTerms: boolean;\r\n    accountType: string;\r\n    // locked: Boolean;\r\n    // enabled: Boolean;\r\n    ascDefault:\tboolean;\r\n    membersAffiliation:\tAffiliation;\r\n    scheduledUser:\tboolean;\r\n    signatureAttachmentReference:\tstring;\r\n}\r\n","import { TypeOfExecution } from './type-of-execution.model';\r\nimport { TypeOfMedium } from './type-of-medium.model';\r\n\r\nexport class AscRate {\r\n    id: number;\r\n    lengthFrom: number;\r\n    lengthTo: number;\r\n    memberOffline: number;\r\n    memberOnline: number;\r\n    nonMemberOffline: number;\r\n    nonMemberOnline: number;\r\n    status: string;\r\n    typeOfExecution: TypeOfExecution;\r\n    typeOfMedium: TypeOfMedium;\r\n}","import { Dialect } from './dialect.model';\r\nimport { MediumExecution } from './medium-execution.model';\r\n\r\nexport class ApplicationSingleMedia {\r\n    id: number;\r\n    amount: number;\r\n    appFormReference: string;\r\n    dialect: Dialect;\r\n    language: string;\r\n    others: string;\r\n    sizeLength: string;\r\n    mediumExecution: MediumExecution;\r\n    width: string;\r\n\r\n}\r\n","export default \"<form>\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"column\\\">\\r\\n                <div class=\\\"col-md-12 title\\\">\\r\\n                    <mat-label>\\r\\n                        {{ paymentTypeFromUrl | titlecase }} Penalties\\r\\n                    </mat-label>\\r\\n                    <button mat-raised-button class=\\\"button-right button-red button-center\\\" (click)=\\\"navigateToList()\\\">\\r\\n                        <i class=\\\"material-icons color__white\\\">list</i> BACK TO LIST\\r\\n                    </button>\\r\\n                </div>\\r\\n                <hr>\\r\\n\\r\\n                <div class=\\\"col-md-12\\\" appearance=\\\"outline\\\"\\r\\n                    *ngIf=\\\"paymentTypeFromUrl === 'brand' || paymentTypeFromUrl === 'company'\\\">\\r\\n                    <mat-label>Filename: </mat-label>\\r\\n                    <br>\\r\\n                    <input matInput [value]=\\\"attachmentDocument.originalFilename || objAttachmentReference?.brandPenaltyAttachmentReference || objAttachmentReference?.paymentAttachmentReference\\\" disabled\\r\\n                        *ngIf=\\\"attachmentDocument.originalFilename || objAttachmentReference?.brandPenaltyAttachmentReference || objAttachmentReference?.paymentAttachmentReference\\\">\\r\\n\\r\\n                    <input class=\\\"file-upload\\\" type=\\\"file\\\" *ngIf=\\\"!attachmentDocument.originalFilename\\\" accept=\\\".pdf\\\"\\r\\n                        (change)=\\\"selectFile($event)\\\" [hidden]=\\\"objAttachmentReference?.brandPenaltyAttachmentReference || objAttachmentReference?.paymentAttachmentReference\\\">\\r\\n                    <br><br>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-12\\\" appearance=\\\"outline\\\" *ngIf=\\\"paymentTypeFromUrl === 'delinquent' \\\">\\r\\n                    <ng-container *ngTemplateOutlet=\\\"approveDelinquent\\\"></ng-container>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-12\\\" appearance=\\\"outline\\\"\\r\\n                    *ngIf=\\\"paymentTypeFromUrl === 'brand' || paymentTypeFromUrl === 'company' || paymentTypeFromUrl === 'delinquent' \\\">\\r\\n\\r\\n                    <button mat-raised-button class=\\\"button-red button-right\\\" (click)=\\\"viewDocument()\\\"\\r\\n                        *ngIf=\\\"objAttachmentReference?.brandPenaltyAttachmentReference || objAttachmentReference?.paymentAttachmentReference\\\">\\r\\n                        <i class=\\\"material-icons add-document\\\">open_in_new</i> VIEW DOCUMENT\\r\\n                    </button>\\r\\n\\r\\n                    &nbsp; &nbsp;\\r\\n\\r\\n                    <button mat-raised-button class=\\\"button-red button-right\\\" (click)=\\\"uploadProofOfPayment()\\\"\\r\\n                        [disabled]=\\\"!safeURLBrand||!isShowUploadButton\\\" *ngIf=\\\"isShowUploadButton\\\"\\r\\n                        [hidden]=\\\"objAttachmentReference?.brandPenaltyAttachmentReference || objAttachmentReference?.paymentAttachmentReference\\\">\\r\\n                        <i class=\\\"material-icons add-document\\\">upload</i> UPLOAD\\r\\n                    </button>\\r\\n\\r\\n                    <br><br>\\r\\n                    <div class=\\\"row col-md-12\\\" appearance=\\\"outline\\\"\\r\\n                        *ngIf=\\\"previewDocument==true && (\\r\\n                            objAttachmentReference?.brandPenaltyAttachmentReference ||\\r\\n                            objAttachmentReference?.paymentAttachmentReference\\r\\n                        )\\\">\\r\\n                        <div class=\\\"file-upload\\\">\\r\\n                            <object [data]=\\\"safeURLBrand\\\" type=\\\"application/pdf\\\" width=\\\"100%\\\" height=\\\"400\\\">\\r\\n                                <iframe [src]=\\\"safeURLBrand\\\" width=\\\"100%\\\" height=\\\"400\\\">\\r\\n                                    <p>This browser does not support PDF!</p>\\r\\n                                </iframe>\\r\\n                            </object>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"column\\\" *ngIf=\\\"paymentTypeFromUrl === 'brand' \\\">\\r\\n                <ng-container *ngTemplateOutlet=\\\"addBrandPenalty\\\"></ng-container>\\r\\n            </div>\\r\\n            <div class=\\\"column\\\" *ngIf=\\\"paymentTypeFromUrl === 'company' \\\">\\r\\n                <ng-container *ngTemplateOutlet=\\\"addCompanyPenalty\\\"></ng-container>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\\r\\n\\r\\n<ng-template #approveDelinquent>\\r\\n    <div class=\\\"col-md-12\\\" style=\\\"padding: 0 2em;\\\">\\r\\n        <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n            <mat-label>Company</mat-label>\\r\\n            <input matInput name=\\\"penaltyBrand\\\" [(ngModel)]=\\\"company.companyName\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n                readonly>\\r\\n        </mat-form-field>\\r\\n\\r\\n        <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n            <mat-label>Amount to Settle</mat-label>\\r\\n            <input class=\\\"numbers-input\\\" matInput name=\\\"amountDue\\\" [value]=\\\"payment?.amountDue | number : '1.2-2'\\\"\\r\\n                type=\\\"text\\\" (keydown)=\\\"validateFieldService.numbersOnly($event)\\\" readonly>\\r\\n        </mat-form-field>\\r\\n\\r\\n        <div class=\\\"mat-elevation-z8 fields\\\">\\r\\n          <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\r\\n\\r\\n            <ng-container matColumnDef=\\\"referenceCode\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef > REFERENCE CODE </th>\\r\\n              <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getPaymentDetails(element)\\\"> {{ element?.referenceCode | uppercase }} </td>\\r\\n            </ng-container>\\r\\n\\r\\n            <ng-container matColumnDef=\\\"brand\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef > BRAND </th>\\r\\n              <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getPaymentDetails(element)\\\"> {{ element?.brand?.description | uppercase }} </td>\\r\\n            </ng-container>\\r\\n\\r\\n            <ng-container matColumnDef=\\\"typeOfMedium\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef > TYPE OF MEDIUM </th>\\r\\n              <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getPaymentDetails(element)\\\"> {{ element?.typeOfMedium | uppercase }} </td>\\r\\n            </ng-container>\\r\\n\\r\\n            <ng-container matColumnDef=\\\"paymentStatus\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef > PAYMENT STATUS </th>\\r\\n              <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getPaymentDetails(element)\\\"> {{ element?.paymentStatus?.replaceAll('_',' ') | uppercase }} </td>\\r\\n            </ng-container>\\r\\n\\r\\n            <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n            <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n          </table>\\r\\n          <div class=\\\"no-record\\\" [hidden]=\\\"dataSource && dataSource?.data?.length > 0\\\">\\r\\n            No record found.\\r\\n          </div>\\r\\n          <mat-paginator [pageSizeOptions]=\\\"[10, 20, 50]\\\" showFirstLastButtons></mat-paginator>\\r\\n        </div>\\r\\n\\r\\n        <br><br>\\r\\n\\r\\n        <button mat-raised-button class=\\\"button-right button-red\\\" (click)=\\\"addPenalty('Delinquent')\\\"\\r\\n            *ngIf=\\\"process==='save'\\\">\\r\\n            <i class=\\\"material-icons color__white\\\">task_alt</i> SUBMIT\\r\\n        </button>\\r\\n\\r\\n    </div>\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #addBrandPenalty>\\r\\n    <div class=\\\"col-md-12\\\" style=\\\"padding: 0 2em;\\\">\\r\\n        <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\" *ngIf=\\\"penaltyBrand === undefined\\\">\\r\\n            <mat-label>Brand</mat-label>\\r\\n            <mat-select class=\\\"col-md-4\\\" [(ngModel)]=\\\"brandPenalty.brand\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                <mat-option *ngFor=\\\"let i of brandList\\\" [value]=\\\"i\\\" name=\\\"brand\\\">\\r\\n                    {{ i?.description | uppercase }}\\r\\n                </mat-option>\\r\\n            </mat-select>\\r\\n        </mat-form-field>\\r\\n        <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\" *ngIf=\\\"penaltyBrand !== undefined\\\">\\r\\n            <mat-label>Brand</mat-label>\\r\\n            <input matInput name=\\\"penaltyBrand\\\" [(ngModel)]=\\\"penaltyBrand\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n                readonly>\\r\\n        </mat-form-field>\\r\\n\\r\\n        <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n            <mat-label>Accumulated Amount Due</mat-label>\\r\\n            <input matInput name=\\\"amount\\\" [(ngModel)]=\\\"brandPenalty.amount\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n                type=\\\"text\\\" (keydown)=\\\"validateFieldService.numbersOnly($event)\\\">\\r\\n        </mat-form-field>\\r\\n\\r\\n        <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n            <mat-label>Remarks</mat-label>\\r\\n            <textarea matInput name=\\\"remarks\\\" [(ngModel)]=\\\"brandPenalty.remarks\\\"\\r\\n                [ngModelOptions]=\\\"{standalone: true}\\\" [readonly]=\\\"brandPenalty?.paymentStatus === 'PAID'\\\"></textarea>\\r\\n        </mat-form-field>\\r\\n\\r\\n        <hr *ngIf=\\\"process==='update'\\\">\\r\\n\\r\\n        <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\" *ngIf=\\\"process==='update'\\\">\\r\\n            <mat-label>Payment Mode</mat-label>\\r\\n            <mat-select class=\\\"col-md-4\\\" [(ngModel)]=\\\"paymentMethod.paymentType\\\" name=\\\"paymentType\\\"\\r\\n                [compareWith]=\\\"comparePaymentMethod\\\" [disabled]=\\\"brandPenalty?.paymentStatus === 'PAID'\\\">\\r\\n                <mat-option *ngFor=\\\"let i of paymentTypeList\\\" [value]=\\\"i\\\" name=\\\"paymentType\\\">\\r\\n                    {{ i?.paymentDescription | uppercase }}\\r\\n                </mat-option>\\r\\n            </mat-select>\\r\\n        </mat-form-field>\\r\\n        <!-- <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\" *ngIf=\\\"paymentMode !== undefined\\\">\\r\\n            <mat-label>Payment Mode</mat-label>\\r\\n            <input matInput name=\\\"amount\\\" [(ngModel)]=\\\"paymentMode\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n                readonly>\\r\\n        </mat-form-field> -->\\r\\n\\r\\n        <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\" *ngIf=\\\"process==='update'\\\">\\r\\n            <mat-label>Amount Received</mat-label>\\r\\n            <input matInput name=\\\"amount\\\" [(ngModel)]=\\\"paymentMethod.amount\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n                type=\\\"text\\\" (keydown)=\\\"validateFieldService.numbersOnly($event)\\\" [readonly]=\\\"brandPenalty?.paymentStatus === 'PAID'\\\">\\r\\n        </mat-form-field>\\r\\n\\r\\n        <br><br>\\r\\n\\r\\n        <button mat-raised-button class=\\\"button-right button-red\\\" (click)=\\\"addPenalty('Brand')\\\"\\r\\n            *ngIf=\\\"process==='save' && brandPenalty?.paymentStatus !== 'PAID'\\\">\\r\\n            <i class=\\\"material-icons color__white\\\">task_alt</i> SUBMIT\\r\\n        </button>\\r\\n        <button mat-raised-button class=\\\"button-right button-red button-right__approve\\\" (click)=\\\"approvePenalty()\\\"\\r\\n            *ngIf=\\\"process==='update' && brandPenalty?.paymentStatus !== 'PAID'\\\">\\r\\n            <i class=\\\"material-icons color__white\\\">task_alt</i> APPROVE\\r\\n        </button>\\r\\n\\r\\n    </div>\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #addCompanyPenalty>\\r\\n    <div class=\\\"col-md-12\\\" style=\\\"padding: 0 2em;\\\">\\r\\n        <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\" *ngIf=\\\"penaltyCompany === undefined\\\">\\r\\n            <mat-label>Company</mat-label>\\r\\n            <mat-select class=\\\"col-md-4\\\" [(ngModel)]=\\\"companyPenalty.company\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n                [compareWith]=\\\"compareCompany\\\">\\r\\n                <mat-option *ngFor=\\\"let i of companyList\\\" [value]=\\\"i\\\" name=\\\"company\\\">\\r\\n                    {{ i?.companyName | uppercase }}\\r\\n                </mat-option>\\r\\n            </mat-select>\\r\\n        </mat-form-field>\\r\\n        <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\" *ngIf=\\\"penaltyCompany !== undefined\\\">\\r\\n            <mat-label>Company</mat-label>\\r\\n            <input matInput name=\\\"penaltyCompany\\\" [(ngModel)]=\\\"penaltyCompany\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n                readonly>\\r\\n        </mat-form-field>\\r\\n\\r\\n        <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\" *ngIf=\\\"totalBalance === undefined || totalBalance === 0\\\">\\r\\n            <mat-label>Accumulated Amount Due</mat-label>\\r\\n            <input matInput name=\\\"amount\\\" [(ngModel)]=\\\"companyPenalty.penaltyAmount\\\"\\r\\n                [ngModelOptions]=\\\"{standalone: true}\\\" type=\\\"text\\\" (keydown)=\\\"validateFieldService.numbersOnly($event)\\\">\\r\\n        </mat-form-field>\\r\\n        <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\" *ngIf=\\\"totalBalance !== undefined && totalBalance > 0\\\">\\r\\n            <mat-label>Accumulated Amount Due</mat-label>\\r\\n            <input matInput name=\\\"totalBalance\\\" [(ngModel)]=\\\"totalBalance\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n                readonly>\\r\\n        </mat-form-field>\\r\\n\\r\\n        <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\" *ngIf=\\\"previewRemarks === undefined || previewRemarks === ''\\\">\\r\\n            <mat-label>Remarks</mat-label>\\r\\n            <textarea matInput name=\\\"remarks\\\" [(ngModel)]=\\\"companyPenalty.remarks\\\" [readonly]=\\\"process==='update'\\\"\\r\\n                [ngModelOptions]=\\\"{standalone: true}\\\" [readonly]=\\\"companyPenalty?.paymentStatus === 'PAID'\\\"></textarea>\\r\\n        </mat-form-field>\\r\\n        <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\" *ngIf=\\\"previewRemarks !== undefined && previewRemarks !== ''\\\">\\r\\n            <mat-label>Remarks</mat-label>\\r\\n            <input matInput name=\\\"previewRemarks\\\" [(ngModel)]=\\\"previewRemarks\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n                readonly>\\r\\n        </mat-form-field>\\r\\n\\r\\n        <hr *ngIf=\\\"process==='update'\\\">\\r\\n\\r\\n        <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\" *ngIf=\\\"process==='update'\\\">\\r\\n            <mat-label>Payment Mode</mat-label>\\r\\n            <mat-select class=\\\"col-md-4\\\" [(ngModel)]=\\\"paymentMethod.paymentType\\\" name=\\\"paymentType\\\"\\r\\n                [compareWith]=\\\"comparePaymentMethod\\\" [disabled]=\\\"companyPenalty?.paymentStatus === 'PAID'\\\">\\r\\n                <mat-option *ngFor=\\\"let i of paymentTypeList\\\" [value]=\\\"i\\\" name=\\\"paymentType\\\">\\r\\n                    {{ i?.paymentDescription | uppercase }}\\r\\n                </mat-option>\\r\\n            </mat-select>\\r\\n        </mat-form-field>\\r\\n\\r\\n        <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\" *ngIf=\\\"process==='update'\\\">\\r\\n            <mat-label>Amount Received</mat-label>\\r\\n            <input matInput name=\\\"amount\\\" [(ngModel)]=\\\"paymentMethod.amount\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n                type=\\\"text\\\" (keydown)=\\\"validateFieldService.numbersOnly($event)\\\" [readonly]=\\\"companyPenalty?.paymentStatus === 'PAID'\\\">\\r\\n        </mat-form-field>\\r\\n\\r\\n        <br><br>\\r\\n\\r\\n        <button mat-raised-button class=\\\"button-right button-red\\\" (click)=\\\"addPenalty('Company')\\\"\\r\\n            *ngIf=\\\"process==='save' && companyPenalty?.paymentStatus !== 'PAID'\\\">\\r\\n            <i class=\\\"material-icons color__white\\\">task_alt</i> SUBMIT\\r\\n        </button>\\r\\n        <button mat-raised-button class=\\\"button-right button-red button-right__approve\\\" (click)=\\\"approvePenalty()\\\"\\r\\n            *ngIf=\\\"process==='update' && companyPenalty?.paymentStatus !== 'PAID'\\\">\\r\\n            <i class=\\\"material-icons color__white\\\">task_alt</i> APPROVE\\r\\n        </button>\\r\\n\\r\\n    </div>\\r\\n</ng-template>\\r\\n\";","import { USER_ROLES } from './../../../../shared/utils/constants';\r\nimport { Component, Input, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { AttachmentDocument, Payment, PaymentType, Company } from '@models';\r\nimport { ApiService, DataStorageService, SweetAlertService } from '@services';\r\nimport { ATTACHMENT_TYPE, ENDPOINTS, SUBMISSION_TYPE } from '@shared';\r\nimport { BrandPenalty } from 'app/core/models/brand-penalty.model';\r\nimport { CompanyPenalty } from 'app/core/models/company-penalty.model';\r\nimport { PaymentMethod } from 'app/core/models/payment-method.model';\r\nimport { FileStorageService } from 'app/core/services/file.storage.service';\r\nimport { ValidateFieldService } from 'app/core/services/validate-field.service';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-add-penalty',\r\n  templateUrl: './add-penalty.component.html',\r\n  styleUrls: ['./add-penalty.component.scss']\r\n})\r\nexport class AddPenaltyComponent implements OnInit, OnDestroy {\r\n\r\n  @ViewChild(MatPaginator, { static: false }) paginator: MatPaginator;\r\n  dataSource: MatTableDataSource<any>\r\n  displayedColumns = ['referenceCode', 'brand', 'typeOfMedium', 'paymentStatus'];\r\n  brandPenalty = new BrandPenalty();\r\n  companyPenalty = new CompanyPenalty();\r\n  payment: any; // = new Payment();\r\n  paymentType = new PaymentType();\r\n  attachmentDocument = new AttachmentDocument();\r\n  paymentMethod = new PaymentMethod();\r\n  company = new Company();\r\n\r\n  objAttachmentReference = {\r\n    brandPenaltyAttachmentReference: '',\r\n    paymentAttachmentReference: ''\r\n  };\r\n\r\n  paymentTypeList = [];\r\n  brandList = [];\r\n  companyList = [];\r\n  companyPenaltyList = [];\r\n  delinquentAppForms = [];\r\n  notInSelection = ['INACTIVE', 'DISAPPROVED'];\r\n  // attachmentDocuments = [];\r\n  id: number;\r\n  penaltyBrand: string;\r\n  penaltyCompany: string;\r\n  paymentMode: string;\r\n  totalBalance: number;\r\n  previewRemarks: string;\r\n  previewDocument = false;\r\n  attachment: any;\r\n  process = 'save';\r\n  paymentTypeFromUrl = '';\r\n  approveDelinquent = false;\r\n  currentUser: any;\r\n\r\n  @Input() safeURLBrand: any;\r\n  isShowUploadButton = false;\r\n  fileSize: number;\r\n  selectedFile: File;\r\n  uploadedPaymentFile: any;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private apiService: ApiService,\r\n    private sweetAlertService: SweetAlertService,\r\n    private sanitizer: DomSanitizer,\r\n    private fileStorageService: FileStorageService,\r\n    private route: ActivatedRoute,\r\n    private spinner: NgxSpinnerService,\r\n    public validateFieldService: ValidateFieldService,\r\n    private dataStorageService: DataStorageService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.currentUser = this.dataStorageService.getUserAccount();\r\n    this.getPenalizedBrandList();\r\n    this.getCompanyList();\r\n    this.getPaymentList();\r\n    this.id = Number(this.route.snapshot.paramMap.get('id'));\r\n    this.paymentTypeFromUrl = this.route.snapshot.paramMap.get('type');\r\n    if (this.id !== 0) {\r\n      this.process = 'update';\r\n      this.viewPayment();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    sessionStorage.removeItem('PAYMENT');\r\n  }\r\n\r\n  getPaymentDetails(elm) {\r\n    if (elm?.paymentStatus) {\r\n      this.router.navigate(['asc/page/accounting/update/', `${elm?.paymentStatus?.toLowerCase()}-${elm.id}`, `delinquent-${elm.id}`]);\r\n    } else {\r\n      this.router.navigate(['asc/page/accounting/update/', `delinquent-${elm.id}`]);\r\n    }\r\n  }\r\n\r\n\r\n  getPenalizedBrandList() {\r\n    this.apiService.findAll(ENDPOINTS.brand).subscribe((res: any) => {\r\n      // this.brandList = res.responseData.data.filter(penalizedBrands => penalizedBrands.penalty);\r\n      this.brandList = res.responseData.data;\r\n    });\r\n  }\r\n\r\n  getCompanyList() {\r\n    this.apiService.findAll(ENDPOINTS.company).subscribe((res: any) => {\r\n      this.companyList = res.responseData.data.filter((company) => !this.notInSelection.includes(company.status));\r\n    });\r\n  }\r\n\r\n  getPaymentList() {\r\n    this.apiService.findAll(ENDPOINTS.paymentType).subscribe((res: any) => {\r\n      this.paymentTypeList = res.responseData.data;\r\n      if (this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT) {\r\n        const creditCardIndex = this.paymentTypeList\r\n          .findIndex((element) => element.paymentDescription === 'Credit Card');\r\n        this.paymentTypeList.splice(creditCardIndex, 1);\r\n      }\r\n    });\r\n  }\r\n\r\n  selectFile(event) {\r\n    this.isShowUploadButton = false;\r\n\r\n    if (event.target.files[0]) {\r\n      this.fileSize = event.target.files[0].size;\r\n\r\n      if (this.fileSize > 15000000) {\r\n        this.sweetAlertService.customErrorMessage(`Attachments' total file size should not exceed 15MB.`);\r\n        event.target.value = '';\r\n        return;\r\n\r\n      } else {\r\n        this.isShowUploadButton = true;\r\n        const fileURL = URL.createObjectURL(event.target.files[0]);\r\n        this.previewDocument = true;\r\n\r\n        this.safeURLBrand = this.sanitizer.bypassSecurityTrustResourceUrl(fileURL);\r\n\r\n        const reader = new FileReader();\r\n        const [file] = event.target.files;\r\n\r\n        reader.readAsDataURL(file);\r\n        reader.onload = () => {\r\n        };\r\n\r\n        this.selectedFile = event.target.files[0];\r\n      }\r\n    }\r\n  }\r\n\r\n  addPenalty(penaltyType = 'Brand') {\r\n    Swal.fire({\r\n      text: `Are you sure you want to submit this ${penaltyType} Penalty?`,\r\n      icon: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Confirm'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        if (penaltyType === 'Brand') {\r\n          this.apiService.save(ENDPOINTS.brandPenalties, this.brandPenalty).subscribe(\r\n            (res: any) => {\r\n              this.sweetAlertService.customSuccessMessage('Brand penalty successfully saved.');\r\n              this.router.navigate(['asc/page/accounting/payments/', 'brand-penalties']);\r\n            }, (err: any) => {\r\n              this.sweetAlertService.error(err);\r\n            }\r\n          );\r\n        } else if (penaltyType === 'Company') {\r\n          this.companyPenalty.penaltyDate = new Date();\r\n          this.apiService.save(ENDPOINTS.companyPenalties, this.companyPenalty).subscribe(\r\n            (res: any) => {\r\n              this.sweetAlertService.customSuccessMessage('Company penalty successfully saved.');\r\n              this.router.navigate(['asc/page/accounting/payments/', 'company-penalties']);\r\n            }, (err: any) => {\r\n              this.sweetAlertService.error(err);\r\n            }\r\n          );\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  uploadProofOfPayment() {\r\n    Swal.fire({\r\n      text: 'Are you sure you want to submit this as proof of payment?',\r\n      icon: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Confirm'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.spinner.show();\r\n        let attachmentType = '';\r\n        if (this.paymentTypeFromUrl === 'brand') {\r\n          attachmentType = ATTACHMENT_TYPE.BRAND_PENALTY_PAYMENT;\r\n        } else if (this.paymentTypeFromUrl === 'company' || this.paymentTypeFromUrl === 'delinquent') {\r\n          attachmentType = ATTACHMENT_TYPE.PAYMENT;\r\n        }\r\n\r\n        let params = '';\r\n        params = '?&attachmentType=' + attachmentType + '&submissionType=' + SUBMISSION_TYPE.ORIGINAL;\r\n        this.fileStorageService.pushFileToStorage(ENDPOINTS.attachmentDocument, this.selectedFile, params)\r\n          .subscribe((res: any) => {\r\n            this.uploadedPaymentFile = res.responseData.data;\r\n            this.addToAttachmentDocuments(this.uploadedPaymentFile);\r\n\r\n            if (this.paymentTypeFromUrl === 'brand') {\r\n              this.brandPenalty.brandPenaltyAttachmentReference = this.uploadedPaymentFile.brandPenaltyAttachmentReference;\r\n              this.objAttachmentReference.brandPenaltyAttachmentReference = this.brandPenalty.brandPenaltyAttachmentReference;\r\n            } else if (this.paymentTypeFromUrl === 'company') {\r\n              this.companyPenalty.paymentAttachmentReference = this.uploadedPaymentFile.paymentAttachmentReference;\r\n              this.objAttachmentReference.paymentAttachmentReference = this.companyPenalty.paymentAttachmentReference;\r\n            } else if (this.paymentTypeFromUrl === 'delinquent') {\r\n              this.payment.paymentAttachmentReference = this.uploadedPaymentFile.paymentAttachmentReference;\r\n              this.objAttachmentReference.paymentAttachmentReference = this.payment.paymentAttachmentReference;\r\n            }\r\n            this.hideSpinner();\r\n            this.sweetAlertService.customSuccessMessage('Attachment successfully uploaded.');\r\n            this.selectedFile = null;\r\n\r\n            if (this.brandPenalty.brandPenaltyAttachmentReference || this.companyPenalty.paymentAttachmentReference\r\n              || this.payment.paymentAttachmentReference === 'delinquent') {\r\n              this.getAttachmentDocument();\r\n            }\r\n\r\n          }, (err: any) => {\r\n            this.hideSpinner();\r\n            this.sweetAlertService.error(err);\r\n          }, () => {\r\n            // actions after subscription\r\n          });\r\n      } else {\r\n        this.selectedFile = null;\r\n      }\r\n    });\r\n  }\r\n\r\n  saveBrandPenalty() {\r\n    this.apiService.save(`${ENDPOINTS.brandPenalties}/payment-type-id/${this.paymentType.id}/payment/submit`, this.brandPenalty)\r\n      .subscribe((res: any) => {\r\n        this.brandPenalty = new BrandPenalty();\r\n        this.paymentType = new PaymentType();\r\n        this.attachment = null;\r\n        this.previewDocument = false;\r\n        this.sweetAlertService.customSuccessMessage('Voucher fund successfully submitted.');\r\n      }, (err) => {\r\n        console.log(err);\r\n        this.sweetAlertService.error(err);\r\n      });\r\n  }\r\n\r\n  approvePenalty() {\r\n    if (this.paymentTypeFromUrl === 'brand') {\r\n      Swal.fire({\r\n        text: 'Are you sure you want to approve this Brand Penalty?',\r\n        icon: 'question',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        confirmButtonText: 'Confirm'\r\n      }).then((result) => {\r\n        if (result.value) {\r\n          this.paymentMethod.paymentDate = new Date();\r\n          this.brandPenalty.paymentMethod = this.paymentMethod;\r\n          this.brandPenalty.brandPenaltyAttachmentReference = this.attachmentDocument.brandPenaltyAttachmentReference;\r\n          console.log(this.paymentMethod);\r\n\r\n          this.apiService.save(ENDPOINTS.approveBrandPenalty, this.brandPenalty).subscribe((res: any) => {\r\n            this.sweetAlertService.customSuccessMessage('Brand penalty approved successfully.');\r\n            this.router.navigate(['asc/page/accounting/payments/', 'brand-penalties']);\r\n          });\r\n        } else {\r\n          this.attachment = null;\r\n        }\r\n      });\r\n    } else if (this.paymentTypeFromUrl === 'company') {\r\n      Swal.fire({\r\n        text: 'Are you sure you want to approve this Company Penalty?',\r\n        icon: 'question',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        confirmButtonText: 'Confirm'\r\n      }).then((result) => {\r\n        if (result.value) {\r\n          // this.paymentMethod.paymentDate = new Date();\r\n          this.companyPenalty.paymentMethod = this.paymentMethod;\r\n          this.companyPenalty.paymentAttachmentReference = this.attachmentDocument.paymentAttachmentReference;\r\n          console.log(this.paymentMethod);\r\n          console.log(this.companyPenalty);\r\n          console.log(this.attachmentDocument.paymentAttachmentReference);\r\n          this.companyPenaltyList[0].paymentMethod = this.paymentMethod;\r\n          this.companyPenaltyList[0].paymentAttachmentReference = this.attachmentDocument.paymentAttachmentReference;\r\n          this.apiService.save(`${ENDPOINTS.companyPenalties}/submit-penalty-payment?amountReceived=${this.paymentMethod.amount}&paymentTypeId=${this.paymentMethod?.paymentType?.id}`,\r\n            this.companyPenaltyList[0]).subscribe((res: any) => {\r\n              this.sweetAlertService.customSuccessMessage('Company penalty approved successfully.');\r\n              this.router.navigate(['asc/page/accounting/payments/', 'company-penalties']);\r\n            }, err => {\r\n              if (!err.error.message) {\r\n                err.error.message = err.error.responseMessage;\r\n              }\r\n              this.sweetAlertService.error(err);\r\n            });\r\n        } else {\r\n          this.attachment = null;\r\n        }\r\n      });\r\n    } else if (this.paymentTypeFromUrl === 'delinquent') {\r\n      if (this.paymentMethod.amount < this.payment.amountDue) {\r\n        this.sweetAlertService.customErrorMessage(`Amount Received/Transferred is lower than Amount Due.`);\r\n      } else {\r\n        Swal.fire({\r\n          text: 'Are you sure you want to approve this Delinquent Company?',\r\n          icon: 'question',\r\n          showCancelButton: true,\r\n          confirmButtonColor: '#3085d6',\r\n          cancelButtonColor: '#d33',\r\n          confirmButtonText: 'Confirm'\r\n        }).then((result) => {\r\n          if (result.value) {\r\n            // this.paymentMethod.paymentDate = new Date();\r\n            this.payment.paymentMethod = this.paymentMethod;\r\n            this.payment.amountReceive = Number(this.paymentMethod.amount);\r\n            console.log(this.paymentMethod);\r\n            console.log(this.payment);\r\n\r\n            this.apiService.save(`${ENDPOINTS.approveDelinquentCompany}`, this.payment).subscribe((res: any) => {\r\n              this.sweetAlertService.customSuccessMessage('Delinquent company approved successfully.');\r\n              this.router.navigate(['asc/page/accounting/payments/', 'delinquent-companies']);\r\n            }, err => {\r\n              if (!err.error.message) {\r\n                err.error.message = err.error.responseMessage;\r\n              }\r\n              this.sweetAlertService.error(err);\r\n            });\r\n          } else {\r\n            this.attachment = null;\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  viewPayment() {\r\n    if (this.paymentTypeFromUrl === 'brand') {\r\n      this.apiService.findById(ENDPOINTS.brandPenalties, this.id).subscribe((res: any) => {\r\n        const obj = res.responseData.data;\r\n        this.penaltyBrand = obj.brand.description;\r\n        if (obj?.paymentMethod) {\r\n          this.paymentType = obj?.paymentMethod?.paymentType;\r\n          this.paymentMethod = obj?.paymentMethod;\r\n        }\r\n        this.brandPenalty = obj;\r\n        if (this.brandPenalty.brandPenaltyAttachmentReference) {\r\n          this.objAttachmentReference.brandPenaltyAttachmentReference = this.brandPenalty.brandPenaltyAttachmentReference;\r\n          this.getAttachmentDocuments();\r\n        }\r\n      });\r\n    } else if (this.paymentTypeFromUrl === 'company') {\r\n      this.apiService.findById(`${ENDPOINTS.companyPenalties}/company`, this.id).subscribe((res: any) => {\r\n        if (res.responseData.data) {\r\n          this.companyPenaltyList = res.responseData.data;\r\n\r\n          if (this.companyPenaltyList[0].paymentAttachmentReference) {\r\n            this.objAttachmentReference.paymentAttachmentReference = this.companyPenalty.paymentAttachmentReference;\r\n            this.getAttachmentDocuments();\r\n          }\r\n\r\n          this.penaltyCompany = this.companyPenaltyList[0].company.companyName;\r\n          this.totalBalance = this.companyPenaltyList.filter(filteredData => filteredData.paymentStatus !== 'PAID')\r\n            .map(mapped => mapped.penaltyAmount).reduce((previousValue, currentValue) =>\r\n              previousValue + currentValue,\r\n              0);\r\n          this.previewRemarks = this.companyPenaltyList.filter(filteredData => filteredData.paymentStatus !== 'PAID')\r\n            .map(mapped => mapped.remarks ? mapped.remarks + '. ' : '')\r\n            .reduce((previousValue, currentValue) =>\r\n              previousValue + currentValue,\r\n              '');\r\n\r\n        }\r\n      });\r\n    } else if (this.paymentTypeFromUrl === 'delinquent') {\r\n      this.payment = this.dataStorageService.getPayment();\r\n\r\n      const companyName = this.payment?.applicationForm?.companyName;\r\n      this.company.companyName = companyName;\r\n      this.getAppFormsByCompanyId(this.payment?.companyId);\r\n    }\r\n  }\r\n\r\n  getAppFormsByCompanyId(companyId) {\r\n    this.apiService.findAll(ENDPOINTS.getAppFormsByCompanyId + companyId).subscribe((res: any) => {\r\n      this.delinquentAppForms = res.responseData.data;\r\n      this.dataSource = new MatTableDataSource<any>(this.delinquentAppForms);\r\n      this.dataSource.paginator = this.paginator;\r\n    });\r\n  }\r\n\r\n  getAttachmentDocuments() {\r\n    let param;\r\n    if (this.brandPenalty.brandPenaltyAttachmentReference) {\r\n      param = `brand-penalty-attachment-reference/${this.brandPenalty.brandPenaltyAttachmentReference}`;\r\n    } else if (this.companyPenalty.paymentAttachmentReference) {\r\n      param = `payment-attachment-reference/${this.companyPenaltyList[0].paymentAttachmentReference}`;\r\n    }\r\n\r\n    this.apiService.findByParam(ENDPOINTS.attachmentDocument, param).subscribe((res: any) => {\r\n      if (res) {\r\n        this.attachmentDocument = res.responseData.data;\r\n      }\r\n      this.previewDocument = true;\r\n      this.safeURLBrand = this.sanitizer.bypassSecurityTrustResourceUrl(this.attachmentDocument.fileURL);\r\n    });\r\n  }\r\n\r\n  addToAttachmentDocuments(obj: any) {\r\n    this.attachmentDocument.brandPenaltyAttachmentReference = obj.brandPenaltyAttachmentReference;\r\n    this.attachmentDocument.id = obj.id;\r\n    this.attachmentDocument.originalFilename = obj.originalFilename;\r\n    this.attachmentDocument.filename = obj.filename;\r\n    this.attachmentDocument.fileExtension = obj.fileExtension;\r\n    this.attachmentDocument.fileURL = obj.fileURL;\r\n    this.attachmentDocument.attachmentType = obj.attachmentType;\r\n    this.attachmentDocument.documentFormat = obj.documentFormat;\r\n  }\r\n\r\n  hideSpinner() {\r\n    setTimeout(() => {\r\n      this.spinner.hide();\r\n    }, 1);\r\n  }\r\n\r\n  getAttachmentDocument() {\r\n    this.spinner.show();\r\n\r\n    if (this.paymentTypeFromUrl === 'brand') {\r\n      this.apiService.findByParam(ENDPOINTS.brandPenaltyAttachmentDocument,\r\n        this.brandPenalty.brandPenaltyAttachmentReference).subscribe(\r\n          (res: any) => {\r\n            if (res) {\r\n              this.attachmentDocument = res;\r\n            }\r\n            this.hideSpinner();\r\n          }, (err: any) => {\r\n            this.hideSpinner();\r\n            console.error(err);\r\n          });\r\n    } else {\r\n      let attachmentReference = '';\r\n      if (this.paymentTypeFromUrl === 'company') {\r\n        attachmentReference = this.companyPenalty.paymentAttachmentReference;\r\n      } else if (this.paymentTypeFromUrl === 'delinquent') {\r\n        attachmentReference = this.payment.paymentAttachmentReference;\r\n      }\r\n      this.apiService.findByParam(ENDPOINTS.paymentAttachmentReference,\r\n        attachmentReference).subscribe(\r\n          (res: any) => {\r\n            if (res) {\r\n              this.attachmentDocument = res?.responseData?.data;\r\n            }\r\n            this.hideSpinner();\r\n          }, (err: any) => {\r\n            this.hideSpinner();\r\n            console.error(err);\r\n          });\r\n    }\r\n  }\r\n\r\n  viewDocument() {\r\n    if (this.uploadedPaymentFile) {\r\n      window.open(this.uploadedPaymentFile.fileURL);\r\n    } else {\r\n      window.open(this.attachmentDocument.fileURL);\r\n    }\r\n  }\r\n\r\n  comparePaymentMethod(value: any, selected: any): boolean {\r\n    if (value && selected) {\r\n      return value.paymentDescription === selected.paymentDescription;\r\n    }\r\n  }\r\n\r\n  compareCompany(value: any, selected: any): boolean {\r\n    if (value && selected) {\r\n      return value.id === selected.id;\r\n    }\r\n  }\r\n\r\n  navigateToList() {\r\n    Swal.fire({\r\n      text: 'Are you sure you want to go back to payment list?',\r\n      icon: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Confirm'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        if (this.paymentTypeFromUrl === 'brand') {\r\n          this.router.navigate(['asc/page/accounting/payments/', 'brand-penalties']);\r\n        } else if (this.paymentTypeFromUrl === 'company') {\r\n          this.router.navigate(['asc/page/accounting/payments/', 'company-penalties']);\r\n        } else if (this.paymentTypeFromUrl === 'delinquent') {\r\n          this.router.navigate(['asc/page/accounting/payments/', 'delinquent-companies']);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  updatePayment() {\r\n    this.apiService.update(ENDPOINTS.companyPenalties, this.companyPenalty).subscribe(\r\n      res => {\r\n        console.log('Update companyPenalties: ', res);\r\n      }, err => {\r\n        console.log(err);\r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n","import { Company } from '@models'\r\nimport { Affiliation } from './affiliation.model';\r\nimport { ApplicationType } from './application-type.model'\r\nimport { Brand } from './brand.model'\r\nimport { Category } from './category.model';\r\nimport { Product } from './product.model';\r\nimport { S1Application } from './s1-application.model';\r\nimport { UserAccount } from './user-account.model'\r\n\r\nexport class ApplicationRequest {\r\n    id: number;\r\n    adTitle: string;\r\n    applicationOwner: UserAccount;\r\n    applicationType: ApplicationType;\r\n    brand: Brand;\r\n    company: Company;\r\n    status: string;\r\n    submissionDate: Date;\r\n    tagLine: string\r\n    submitApplicationForm: boolean;\r\n    formType: string;\r\n    hasSpecialClearing: boolean;\r\n    applicationForm: S1Application;\r\n    product: Product;\r\n}\r\n","export class Profile {\r\n    id: number;\r\n    name: string;\r\n}\r\n","import { S1Application } from './s1-application.model';\r\nimport { S2Application } from './s2-application.model';\r\n\r\nexport class AttachmentDocument {\r\n    id: number;\r\n    applicationId: S1Application;\r\n    applicationS2Id: S2Application;\r\n    attachmentType: string; // MAIN, SUPPORTIVE, PAYMENT\r\n    autoSubmit: boolean;\r\n    brandPenaltyAttachmentReference: string;\r\n    documentFormat: string;\r\n    fileExtension: string;\r\n    fileURL: string;\r\n    filename: string;\r\n    mainAttachmentReference: string;\r\n    supportingAttachmentReference: string;\r\n    paymentAttachmentReference: string;\r\n    revisionLetterAttachmentReference: string;\r\n    finalMaterialAttachmentReference: string;\r\n    originalFilename: string;\r\n    status: string;\r\n    submissionType: string; // ORIGINAL, REVISION, COMPLIANCE, TOA\r\n    voucherAttachmentReference: string;\r\n    applicationFormId: string; // for compliance used only\r\n    applicationForm: string;\r\n    appFormReference: string;\r\n    modifiedApprovedS1AttachmentReference: string;\r\n    fileSize: number\r\n\r\n    createdBy: string;\r\n    createdDate: Date;\r\n    modifiedBy: string;\r\n    modifiedDate: Date;\r\n}\r\n","import { Product } from './product.model';\r\n\r\nexport class Category {\r\n    id: number;\r\n    description: string;\r\n    status: string;\r\n}\r\n","import { TypeOfDocument } from './type-of-document.model';\r\nimport { S1Application } from './s1-application.model';\r\n\r\nexport class SupportingDocument {\r\n    id: number;\r\n    appFormReference: S1Application;\r\n    typeOfDocument: TypeOfDocument;\r\n    basedOn: string;\r\n    variant: string;\r\n    dateOfLaunch: Date;\r\n    expiresOn: Date;\r\n    remarks: string;\r\n    input: string;\r\n\r\n    createdBy: string;\r\n    createdDate: Date;\r\n    modifiedBy: string;\r\n    modifiedDate: Date;\r\n}\r\n","export class UserRole {\r\n    id: number;\r\n    name: string;\r\n    status: string;\r\n}\r\n","export default \".column {\\n  float: left;\\n  width: 50%;\\n  padding: 10px;\\n}\\n\\n.row:after {\\n  content: \\\"\\\";\\n  display: table;\\n  clear: both;\\n}\\n\\n.button-right__approve {\\n  margin: 0;\\n}\\n\\n.button-center {\\n  margin: -5px auto;\\n}\\n\\n.numbers-input {\\n  text-align: end;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9wYWdlcy9hY2NvdW50aW5nL2FkZC1wZW5hbHR5L2FkZC1wZW5hbHR5LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksV0FBQTtFQUNBLFVBQUE7RUFDQSxhQUFBO0FBQ0o7O0FBRUE7RUFDSSxXQUFBO0VBQ0EsY0FBQTtFQUNBLFdBQUE7QUFDSjs7QUFFQTtFQUVJLFNBQUE7QUFBSjs7QUFHQTtFQUNJLGlCQUFBO0FBQUo7O0FBR0E7RUFDRSxlQUFBO0FBQUYiLCJmaWxlIjoic3JjL2FwcC9tb2R1bGVzL3BhZ2VzL2FjY291bnRpbmcvYWRkLXBlbmFsdHkvYWRkLXBlbmFsdHkuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY29sdW1uIHtcclxuICAgIGZsb2F0OiBsZWZ0O1xyXG4gICAgd2lkdGg6IDUwJTtcclxuICAgIHBhZGRpbmc6IDEwcHg7XHJcbn1cclxuXHJcbi5yb3c6YWZ0ZXIge1xyXG4gICAgY29udGVudDogXCJcIjtcclxuICAgIGRpc3BsYXk6IHRhYmxlO1xyXG4gICAgY2xlYXI6IGJvdGg7XHJcbn1cclxuXHJcbi5idXR0b24tcmlnaHRfX2FwcHJvdmUge1xyXG4gICAgLy8gbWFyZ2luOiAtMTBweDtcclxuICAgIG1hcmdpbjogMDtcclxufVxyXG5cclxuLmJ1dHRvbi1jZW50ZXIge1xyXG4gICAgbWFyZ2luOiAtNXB4IGF1dG87XHJcbn1cclxuXHJcbi5udW1iZXJzLWlucHV0e1xyXG4gIHRleHQtYWxpZ246IGVuZDtcclxufVxyXG4iXX0= */\";","export class PaymentType {\r\n    id: number;\r\n    amount: boolean;\r\n    bankBranch: boolean;\r\n    bankName: boolean;\r\n    controlNo: boolean;\r\n    fundTransferDate: boolean;\r\n    paymentDescription: string;\r\n    promisorryDate: boolean;\r\n    referenceNo: boolean;\r\n    status: string;\r\n}\r\n","export class OrPreparationReference {\r\n    id: number;\r\n    reference: string;\r\n    amount: number;\r\n}","export class PerformanceMetrics {\r\n    id: number;\r\n    referenceCode: string;\r\n    appFormReference: string;\r\n    movement: string;\r\n    actionBy: string;\r\n    userRole: string;\r\n    currentDateTime: Date;\r\n    previousDateTime: Date;\r\n    duration: string;\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AddPenaltyComponent } from './add-penalty.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component : AddPenaltyComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AddPenaltyRoutingModule { }\r\n","import { PaymentType } from \"./payment-type.model\";\r\n\r\nexport class PaymentMethod {\r\n    id: number;\r\n    paymentType: PaymentType;\r\n    referenceNo: string;\r\n    controlNo: string;\r\n    paymentDate: Date;\r\n    amount: number;\r\n    bankName: string\r\n    bankBranch: string;\r\n    promisorryDate: Date;\r\n    ccConfirmationCode: string;\r\n    checkNo: string;\r\n}\r\n","export * from './affiliation.model';\r\nexport * from './brand.model';\r\nexport * from './company.model';\r\nexport * from './payment-type.model';\r\nexport * from './profile.model';\r\nexport * from './s1-application.model';\r\nexport * from './s2-application.model';\r\nexport * from './type-of-document.model';\r\nexport * from './type-of-medium.model';\r\nexport * from './type-of-reason.model';\r\nexport * from './user-role.model';\r\nexport * from './user-account.model';\r\nexport * from './attachment-document.model';\r\nexport * from './category.model';\r\nexport * from './product.model';\r\nexport * from './type-of-application.model';\r\nexport * from './asc-rate.model';\r\nexport * from './payment.model';\r\nexport * from './country.model';\r\nexport * from './performance-metrics.model';\r\nexport * from './or-preparation.model';\r\nexport * from './or-preparation-reference.model';\r\nexport * from './supporting-document.model';\r\nexport * from './application-single-media.model';\r\nexport * from './application-request.model';\r\nexport * from './application-multimedia.model';\r\n","export class Affiliation {\r\n    id: number;\r\n    description: string;\r\n    member: boolean;\r\n    status: string;\r\n}\r\n","import { Category, Product } from '@models';\r\n\r\nexport class Brand {\r\n    id: number;\r\n    description: string;\r\n    // product: Product;\r\n    // category: Category;\r\n    status: string;\r\n    penalty: boolean;\r\n  }\r\n","import { Affiliation } from './affiliation.model';\r\nimport { Country } from './country.model';\r\n\r\nexport class Company {\r\n    id: number;\r\n    companyName: string;\r\n    companyTelephoneNo: string;\r\n    companyTin: string;\r\n    country: Country;\r\n    status: string;\r\n    completeAddress: string;\r\n    voucherApproved: boolean\r\n    membersAffiliation: Affiliation;\r\n    delinquent: boolean;\r\n    contactPersonEmail: string;\r\n    contactPersonName: string;\r\n    amountToSettle: number;\r\n    companyMobileNo: string;\r\n    companyTelephoneNo2: string;\r\n}\r\n","import { Brand } from \"./brand.model\";\r\nimport { PaymentMethod } from \"./payment-method.model\";\r\n\r\nexport class BrandPenalty {\r\n    id: number;\r\n    amount: number;\r\n    brand: Brand;\r\n    brandPenaltyAttachmentReference: string;\r\n    paidDate: Date;\r\n    paymentMethod: PaymentMethod;\r\n    paymentStatus: string;\r\n    penaltyDate: Date;\r\n    remarks: string;\r\n    status: string;\r\n}"],"sourceRoot":"webpack:///"}