{"version":3,"sources":["./src/app/core/models/company-penalty.model.ts","./src/app/modules/pages/accounting/add-penalty/add-penalty.module.ts","./src/app/modules/pages/accounting/add-penalty/add-penalty.component.ts","./src/app/modules/pages/accounting/add-penalty/add-penalty.component.html","./src/app/modules/pages/accounting/add-penalty/add-penalty-routing.module.ts","./src/app/core/models/brand-penalty.model.ts"],"names":[],"mappings":"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","file":"add-penalty-add-penalty-module-es2015.js","sourcesContent":["import { Company } from './company.model';\r\nimport { PaymentMethod } from './payment-method.model';\r\n\r\nexport class CompanyPenalty {\r\n    id: number;\r\n    company: Company;\r\n    paymentStatus: string;\r\n    penaltyAmount: number;\r\n    penaltyDate: Date;\r\n    remarks: string;\r\n    paymentAttachmentReference: string;\r\n    paymentMethod: PaymentMethod;\r\n\r\n    // not yet in BE\r\n    // paidDate: Date;\r\n    // status: string;\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AddPenaltyRoutingModule } from './add-penalty-routing.module';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { AngularMaterialModule } from '@shared';\r\nimport { AddPenaltyComponent } from './add-penalty.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [AddPenaltyComponent],\r\n  imports: [\r\n    CommonModule,\r\n    AddPenaltyRoutingModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    AngularMaterialModule,\r\n  ]\r\n})\r\nexport class AddPenaltyModule { }\r\n","import { USER_ROLES } from './../../../../shared/utils/constants';\r\nimport { Component, Input, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { AttachmentDocument, Payment, PaymentType, Company } from '@models';\r\nimport { ApiService, DataStorageService, SweetAlertService } from '@services';\r\nimport { ATTACHMENT_TYPE, ENDPOINTS, SUBMISSION_TYPE } from '@shared';\r\nimport { BrandPenalty } from 'app/core/models/brand-penalty.model';\r\nimport { CompanyPenalty } from 'app/core/models/company-penalty.model';\r\nimport { PaymentMethod } from 'app/core/models/payment-method.model';\r\nimport { FileStorageService } from 'app/core/services/file.storage.service';\r\nimport { ValidateFieldService } from 'app/core/services/validate-field.service';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-add-penalty',\r\n  templateUrl: './add-penalty.component.html',\r\n  styleUrls: ['./add-penalty.component.scss']\r\n})\r\nexport class AddPenaltyComponent implements OnInit, OnDestroy {\r\n\r\n  @ViewChild(MatPaginator, { static: false }) paginator: MatPaginator;\r\n  dataSource: MatTableDataSource<any>\r\n  displayedColumns = ['referenceCode', 'brand', 'typeOfMedium', 'paymentStatus'];\r\n  brandPenalty = new BrandPenalty();\r\n  companyPenalty = new CompanyPenalty();\r\n  payment: any; // = new Payment();\r\n  paymentType = new PaymentType();\r\n  attachmentDocument = new AttachmentDocument();\r\n  paymentMethod = new PaymentMethod();\r\n  company = new Company();\r\n\r\n  objAttachmentReference = {\r\n    brandPenaltyAttachmentReference: '',\r\n    paymentAttachmentReference: ''\r\n  };\r\n\r\n  paymentTypeList = [];\r\n  brandList = [];\r\n  companyList = [];\r\n  companyPenaltyList = [];\r\n  delinquentAppForms = [];\r\n  notInSelection = ['INACTIVE', 'DISAPPROVED'];\r\n  // attachmentDocuments = [];\r\n  id: number;\r\n  penaltyBrand: string;\r\n  penaltyCompany: string;\r\n  paymentMode: string;\r\n  totalBalance: number;\r\n  previewRemarks: string;\r\n  previewDocument = false;\r\n  attachment: any;\r\n  process = 'save';\r\n  paymentTypeFromUrl = '';\r\n  approveDelinquent = false;\r\n  currentUser: any;\r\n\r\n  @Input() safeURLBrand: any;\r\n  isShowUploadButton = false;\r\n  fileSize: number;\r\n  selectedFile: File;\r\n  uploadedPaymentFile: any;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private apiService: ApiService,\r\n    private sweetAlertService: SweetAlertService,\r\n    private sanitizer: DomSanitizer,\r\n    private fileStorageService: FileStorageService,\r\n    private route: ActivatedRoute,\r\n    private spinner: NgxSpinnerService,\r\n    public validateFieldService: ValidateFieldService,\r\n    private dataStorageService: DataStorageService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.currentUser = this.dataStorageService.getUserAccount();\r\n    this.getPenalizedBrandList();\r\n    this.getCompanyList();\r\n    this.getPaymentList();\r\n    this.id = Number(this.route.snapshot.paramMap.get('id'));\r\n    this.paymentTypeFromUrl = this.route.snapshot.paramMap.get('type');\r\n    if (this.id !== 0) {\r\n      this.process = 'update';\r\n      this.viewPayment();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    sessionStorage.removeItem('PAYMENT');\r\n  }\r\n\r\n  getPaymentDetails(elm) {\r\n    if (elm?.paymentStatus) {\r\n      this.router.navigate(['asc/page/accounting/update/', `${elm?.paymentStatus?.toLowerCase()}-${elm.id}`, `delinquent-${elm.id}`]);\r\n    } else {\r\n      this.router.navigate(['asc/page/accounting/update/', `delinquent-${elm.id}`]);\r\n    }\r\n  }\r\n\r\n\r\n  getPenalizedBrandList() {\r\n    this.apiService.findAll(ENDPOINTS.brand).subscribe((res: any) => {\r\n      // this.brandList = res.responseData.data.filter(penalizedBrands => penalizedBrands.penalty);\r\n      this.brandList = res.responseData.data;\r\n    });\r\n  }\r\n\r\n  getCompanyList() {\r\n    this.apiService.findAll(ENDPOINTS.company).subscribe((res: any) => {\r\n      this.companyList = res.responseData.data.filter((company) => !this.notInSelection.includes(company.status));\r\n    });\r\n  }\r\n\r\n  getPaymentList() {\r\n    this.apiService.findAll(ENDPOINTS.paymentType).subscribe((res: any) => {\r\n      this.paymentTypeList = res.responseData.data;\r\n      if (this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT) {\r\n        const creditCardIndex = this.paymentTypeList\r\n          .findIndex((element) => element.paymentDescription === 'Credit Card');\r\n        this.paymentTypeList.splice(creditCardIndex, 1);\r\n      }\r\n    });\r\n  }\r\n\r\n  selectFile(event) {\r\n    this.isShowUploadButton = false;\r\n\r\n    if (event.target.files[0]) {\r\n      this.fileSize = event.target.files[0].size;\r\n\r\n      if (this.fileSize > 15000000) {\r\n        this.sweetAlertService.customErrorMessage(`Attachments' total file size should not exceed 15MB.`);\r\n        event.target.value = '';\r\n        return;\r\n\r\n      } else {\r\n        this.isShowUploadButton = true;\r\n        const fileURL = URL.createObjectURL(event.target.files[0]);\r\n        this.previewDocument = true;\r\n\r\n        this.safeURLBrand = this.sanitizer.bypassSecurityTrustResourceUrl(fileURL);\r\n\r\n        const reader = new FileReader();\r\n        const [file] = event.target.files;\r\n\r\n        reader.readAsDataURL(file);\r\n        reader.onload = () => {\r\n        };\r\n\r\n        this.selectedFile = event.target.files[0];\r\n      }\r\n    }\r\n  }\r\n\r\n  addPenalty(penaltyType = 'Brand') {\r\n    Swal.fire({\r\n      text: `Are you sure you want to submit this ${penaltyType} Penalty?`,\r\n      icon: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Confirm'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        if (penaltyType === 'Brand') {\r\n          this.apiService.save(ENDPOINTS.brandPenalties, this.brandPenalty).subscribe(\r\n            (res: any) => {\r\n              this.sweetAlertService.customSuccessMessage('Brand penalty successfully saved.');\r\n              this.router.navigate(['asc/page/accounting/payments/', 'brand-penalties']);\r\n            }, (err: any) => {\r\n              this.sweetAlertService.error(err);\r\n            }\r\n          );\r\n        } else if (penaltyType === 'Company') {\r\n          this.companyPenalty.penaltyDate = new Date();\r\n          this.apiService.save(ENDPOINTS.companyPenalties, this.companyPenalty).subscribe(\r\n            (res: any) => {\r\n              this.sweetAlertService.customSuccessMessage('Company penalty successfully saved.');\r\n              this.router.navigate(['asc/page/accounting/payments/', 'company-penalties']);\r\n            }, (err: any) => {\r\n              this.sweetAlertService.error(err);\r\n            }\r\n          );\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  uploadProofOfPayment() {\r\n    Swal.fire({\r\n      text: 'Are you sure you want to submit this as proof of payment?',\r\n      icon: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Confirm'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.spinner.show();\r\n        let attachmentType = '';\r\n        if (this.paymentTypeFromUrl === 'brand') {\r\n          attachmentType = ATTACHMENT_TYPE.BRAND_PENALTY_PAYMENT;\r\n        } else if (this.paymentTypeFromUrl === 'company' || this.paymentTypeFromUrl === 'delinquent') {\r\n          attachmentType = ATTACHMENT_TYPE.PAYMENT;\r\n        }\r\n\r\n        let params = '';\r\n        params = '?&attachmentType=' + attachmentType + '&submissionType=' + SUBMISSION_TYPE.ORIGINAL;\r\n        this.fileStorageService.pushFileToStorage(ENDPOINTS.attachmentDocument, this.selectedFile, params)\r\n          .subscribe((res: any) => {\r\n            this.uploadedPaymentFile = res.responseData.data;\r\n            this.addToAttachmentDocuments(this.uploadedPaymentFile);\r\n\r\n            if (this.paymentTypeFromUrl === 'brand') {\r\n              this.brandPenalty.brandPenaltyAttachmentReference = this.uploadedPaymentFile.brandPenaltyAttachmentReference;\r\n              this.objAttachmentReference.brandPenaltyAttachmentReference = this.brandPenalty.brandPenaltyAttachmentReference;\r\n            } else if (this.paymentTypeFromUrl === 'company') {\r\n              this.companyPenalty.paymentAttachmentReference = this.uploadedPaymentFile.paymentAttachmentReference;\r\n              this.objAttachmentReference.paymentAttachmentReference = this.companyPenalty.paymentAttachmentReference;\r\n            } else if (this.paymentTypeFromUrl === 'delinquent') {\r\n              this.payment.paymentAttachmentReference = this.uploadedPaymentFile.paymentAttachmentReference;\r\n              this.objAttachmentReference.paymentAttachmentReference = this.payment.paymentAttachmentReference;\r\n            }\r\n            this.hideSpinner();\r\n            this.sweetAlertService.customSuccessMessage('Attachment successfully uploaded.');\r\n            this.selectedFile = null;\r\n\r\n            if (this.brandPenalty.brandPenaltyAttachmentReference || this.companyPenalty.paymentAttachmentReference\r\n              || this.payment.paymentAttachmentReference === 'delinquent') {\r\n              this.getAttachmentDocument();\r\n            }\r\n\r\n          }, (err: any) => {\r\n            this.hideSpinner();\r\n            this.sweetAlertService.error(err);\r\n          }, () => {\r\n            // actions after subscription\r\n          });\r\n      } else {\r\n        this.selectedFile = null;\r\n      }\r\n    });\r\n  }\r\n\r\n  saveBrandPenalty() {\r\n    this.apiService.save(`${ENDPOINTS.brandPenalties}/payment-type-id/${this.paymentType.id}/payment/submit`, this.brandPenalty)\r\n      .subscribe((res: any) => {\r\n        this.brandPenalty = new BrandPenalty();\r\n        this.paymentType = new PaymentType();\r\n        this.attachment = null;\r\n        this.previewDocument = false;\r\n        this.sweetAlertService.customSuccessMessage('Voucher fund successfully submitted.');\r\n      }, (err) => {\r\n        console.log(err);\r\n        this.sweetAlertService.error(err);\r\n      });\r\n  }\r\n\r\n  approvePenalty() {\r\n    if (this.paymentTypeFromUrl === 'brand') {\r\n      Swal.fire({\r\n        text: 'Are you sure you want to approve this Brand Penalty?',\r\n        icon: 'question',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        confirmButtonText: 'Confirm'\r\n      }).then((result) => {\r\n        if (result.value) {\r\n          this.paymentMethod.paymentDate = new Date();\r\n          this.brandPenalty.paymentMethod = this.paymentMethod;\r\n          this.brandPenalty.brandPenaltyAttachmentReference = this.attachmentDocument.brandPenaltyAttachmentReference;\r\n          console.log(this.paymentMethod);\r\n\r\n          this.apiService.save(ENDPOINTS.approveBrandPenalty, this.brandPenalty).subscribe((res: any) => {\r\n            this.sweetAlertService.customSuccessMessage('Brand penalty approved successfully.');\r\n            this.router.navigate(['asc/page/accounting/payments/', 'brand-penalties']);\r\n          });\r\n        } else {\r\n          this.attachment = null;\r\n        }\r\n      });\r\n    } else if (this.paymentTypeFromUrl === 'company') {\r\n      Swal.fire({\r\n        text: 'Are you sure you want to approve this Company Penalty?',\r\n        icon: 'question',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        confirmButtonText: 'Confirm'\r\n      }).then((result) => {\r\n        if (result.value) {\r\n          // this.paymentMethod.paymentDate = new Date();\r\n          this.companyPenalty.paymentMethod = this.paymentMethod;\r\n          this.companyPenalty.paymentAttachmentReference = this.attachmentDocument.paymentAttachmentReference;\r\n          console.log(this.paymentMethod);\r\n          console.log(this.companyPenalty);\r\n          console.log(this.attachmentDocument.paymentAttachmentReference);\r\n          this.companyPenaltyList[0].paymentMethod = this.paymentMethod;\r\n          this.companyPenaltyList[0].paymentAttachmentReference = this.attachmentDocument.paymentAttachmentReference;\r\n          this.apiService.save(`${ENDPOINTS.companyPenalties}/submit-penalty-payment?amountReceived=${this.paymentMethod.amount}&paymentTypeId=${this.paymentMethod?.paymentType?.id}`,\r\n            this.companyPenaltyList[0]).subscribe((res: any) => {\r\n              this.sweetAlertService.customSuccessMessage('Company penalty approved successfully.');\r\n              this.router.navigate(['asc/page/accounting/payments/', 'company-penalties']);\r\n            }, err => {\r\n              if (!err.error.message) {\r\n                err.error.message = err.error.responseMessage;\r\n              }\r\n              this.sweetAlertService.error(err);\r\n            });\r\n        } else {\r\n          this.attachment = null;\r\n        }\r\n      });\r\n    } else if (this.paymentTypeFromUrl === 'delinquent') {\r\n      if (this.paymentMethod.amount < this.payment.amountDue) {\r\n        this.sweetAlertService.customErrorMessage(`Amount Received/Transferred is lower than Amount Due.`);\r\n      } else {\r\n        Swal.fire({\r\n          text: 'Are you sure you want to approve this Delinquent Company?',\r\n          icon: 'question',\r\n          showCancelButton: true,\r\n          confirmButtonColor: '#3085d6',\r\n          cancelButtonColor: '#d33',\r\n          confirmButtonText: 'Confirm'\r\n        }).then((result) => {\r\n          if (result.value) {\r\n            // this.paymentMethod.paymentDate = new Date();\r\n            this.payment.paymentMethod = this.paymentMethod;\r\n            this.payment.amountReceive = Number(this.paymentMethod.amount);\r\n            console.log(this.paymentMethod);\r\n            console.log(this.payment);\r\n\r\n            this.apiService.save(`${ENDPOINTS.approveDelinquentCompany}`, this.payment).subscribe((res: any) => {\r\n              this.sweetAlertService.customSuccessMessage('Delinquent company approved successfully.');\r\n              this.router.navigate(['asc/page/accounting/payments/', 'delinquent-companies']);\r\n            }, err => {\r\n              if (!err.error.message) {\r\n                err.error.message = err.error.responseMessage;\r\n              }\r\n              this.sweetAlertService.error(err);\r\n            });\r\n          } else {\r\n            this.attachment = null;\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  viewPayment() {\r\n    if (this.paymentTypeFromUrl === 'brand') {\r\n      this.apiService.findById(ENDPOINTS.brandPenalties, this.id).subscribe((res: any) => {\r\n        const obj = res.responseData.data;\r\n        this.penaltyBrand = obj.brand.description;\r\n        if (obj?.paymentMethod) {\r\n          this.paymentType = obj?.paymentMethod?.paymentType;\r\n          this.paymentMethod = obj?.paymentMethod;\r\n        }\r\n        this.brandPenalty = obj;\r\n        if (this.brandPenalty.brandPenaltyAttachmentReference) {\r\n          this.objAttachmentReference.brandPenaltyAttachmentReference = this.brandPenalty.brandPenaltyAttachmentReference;\r\n          this.getAttachmentDocuments();\r\n        }\r\n      });\r\n    } else if (this.paymentTypeFromUrl === 'company') {\r\n      this.apiService.findById(`${ENDPOINTS.companyPenalties}/company`, this.id).subscribe((res: any) => {\r\n        if (res.responseData.data) {\r\n          this.companyPenaltyList = res.responseData.data;\r\n\r\n          if (this.companyPenaltyList[0].paymentAttachmentReference) {\r\n            this.objAttachmentReference.paymentAttachmentReference = this.companyPenalty.paymentAttachmentReference;\r\n            this.getAttachmentDocuments();\r\n          }\r\n\r\n          this.penaltyCompany = this.companyPenaltyList[0].company.companyName;\r\n          this.totalBalance = this.companyPenaltyList.filter(filteredData => filteredData.paymentStatus !== 'PAID')\r\n            .map(mapped => mapped.penaltyAmount).reduce((previousValue, currentValue) =>\r\n              previousValue + currentValue,\r\n              0);\r\n          this.previewRemarks = this.companyPenaltyList.filter(filteredData => filteredData.paymentStatus !== 'PAID')\r\n            .map(mapped => mapped.remarks ? mapped.remarks + '. ' : '')\r\n            .reduce((previousValue, currentValue) =>\r\n              previousValue + currentValue,\r\n              '');\r\n\r\n        }\r\n      });\r\n    } else if (this.paymentTypeFromUrl === 'delinquent') {\r\n      this.payment = this.dataStorageService.getPayment();\r\n\r\n      const companyName = this.payment?.applicationForm?.companyName;\r\n      this.company.companyName = companyName;\r\n      this.getAppFormsByCompanyId(this.payment?.companyId);\r\n    }\r\n  }\r\n\r\n  getAppFormsByCompanyId(companyId) {\r\n    this.apiService.findAll(ENDPOINTS.getAppFormsByCompanyId + companyId).subscribe((res: any) => {\r\n      this.delinquentAppForms = res.responseData.data;\r\n      this.dataSource = new MatTableDataSource<any>(this.delinquentAppForms);\r\n      this.dataSource.paginator = this.paginator;\r\n    });\r\n  }\r\n\r\n  getAttachmentDocuments() {\r\n    let param;\r\n    if (this.brandPenalty.brandPenaltyAttachmentReference) {\r\n      param = `brand-penalty-attachment-reference/${this.brandPenalty.brandPenaltyAttachmentReference}`;\r\n    } else if (this.companyPenalty.paymentAttachmentReference) {\r\n      param = `payment-attachment-reference/${this.companyPenaltyList[0].paymentAttachmentReference}`;\r\n    }\r\n\r\n    this.apiService.findByParam(ENDPOINTS.attachmentDocument, param).subscribe((res: any) => {\r\n      if (res) {\r\n        this.attachmentDocument = res.responseData.data;\r\n      }\r\n      this.previewDocument = true;\r\n      this.safeURLBrand = this.sanitizer.bypassSecurityTrustResourceUrl(this.attachmentDocument.fileURL);\r\n    });\r\n  }\r\n\r\n  addToAttachmentDocuments(obj: any) {\r\n    this.attachmentDocument.brandPenaltyAttachmentReference = obj.brandPenaltyAttachmentReference;\r\n    this.attachmentDocument.id = obj.id;\r\n    this.attachmentDocument.originalFilename = obj.originalFilename;\r\n    this.attachmentDocument.filename = obj.filename;\r\n    this.attachmentDocument.fileExtension = obj.fileExtension;\r\n    this.attachmentDocument.fileURL = obj.fileURL;\r\n    this.attachmentDocument.attachmentType = obj.attachmentType;\r\n    this.attachmentDocument.documentFormat = obj.documentFormat;\r\n  }\r\n\r\n  hideSpinner() {\r\n    setTimeout(() => {\r\n      this.spinner.hide();\r\n    }, 1);\r\n  }\r\n\r\n  getAttachmentDocument() {\r\n    this.spinner.show();\r\n\r\n    if (this.paymentTypeFromUrl === 'brand') {\r\n      this.apiService.findByParam(ENDPOINTS.brandPenaltyAttachmentDocument,\r\n        this.brandPenalty.brandPenaltyAttachmentReference).subscribe(\r\n          (res: any) => {\r\n            if (res) {\r\n              this.attachmentDocument = res;\r\n            }\r\n            this.hideSpinner();\r\n          }, (err: any) => {\r\n            this.hideSpinner();\r\n            console.error(err);\r\n          });\r\n    } else {\r\n      let attachmentReference = '';\r\n      if (this.paymentTypeFromUrl === 'company') {\r\n        attachmentReference = this.companyPenalty.paymentAttachmentReference;\r\n      } else if (this.paymentTypeFromUrl === 'delinquent') {\r\n        attachmentReference = this.payment.paymentAttachmentReference;\r\n      }\r\n      this.apiService.findByParam(ENDPOINTS.paymentAttachmentReference,\r\n        attachmentReference).subscribe(\r\n          (res: any) => {\r\n            if (res) {\r\n              this.attachmentDocument = res?.responseData?.data;\r\n            }\r\n            this.hideSpinner();\r\n          }, (err: any) => {\r\n            this.hideSpinner();\r\n            console.error(err);\r\n          });\r\n    }\r\n  }\r\n\r\n  viewDocument() {\r\n    if (this.uploadedPaymentFile) {\r\n      window.open(this.uploadedPaymentFile.fileURL);\r\n    } else {\r\n      window.open(this.attachmentDocument.fileURL);\r\n    }\r\n  }\r\n\r\n  comparePaymentMethod(value: any, selected: any): boolean {\r\n    if (value && selected) {\r\n      return value.paymentDescription === selected.paymentDescription;\r\n    }\r\n  }\r\n\r\n  compareCompany(value: any, selected: any): boolean {\r\n    if (value && selected) {\r\n      return value.id === selected.id;\r\n    }\r\n  }\r\n\r\n  navigateToList() {\r\n    Swal.fire({\r\n      text: 'Are you sure you want to go back to payment list?',\r\n      icon: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Confirm'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        if (this.paymentTypeFromUrl === 'brand') {\r\n          this.router.navigate(['asc/page/accounting/payments/', 'brand-penalties']);\r\n        } else if (this.paymentTypeFromUrl === 'company') {\r\n          this.router.navigate(['asc/page/accounting/payments/', 'company-penalties']);\r\n        } else if (this.paymentTypeFromUrl === 'delinquent') {\r\n          this.router.navigate(['asc/page/accounting/payments/', 'delinquent-companies']);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  updatePayment() {\r\n    this.apiService.update(ENDPOINTS.companyPenalties, this.companyPenalty).subscribe(\r\n      res => {\r\n        console.log('Update companyPenalties: ', res);\r\n      }, err => {\r\n        console.log(err);\r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n","<form>\r\n    <div class=\"container-fluid\">\r\n        <div class=\"row\">\r\n            <div class=\"column\">\r\n                <div class=\"col-md-12 title\">\r\n                    <mat-label>\r\n                        {{ paymentTypeFromUrl | titlecase }} Penalties\r\n                    </mat-label>\r\n                    <button mat-raised-button class=\"button-right button-red button-center\" (click)=\"navigateToList()\">\r\n                        <i class=\"material-icons color__white\">list</i> BACK TO LIST\r\n                    </button>\r\n                </div>\r\n                <hr>\r\n\r\n                <div class=\"col-md-12\" appearance=\"outline\"\r\n                    *ngIf=\"paymentTypeFromUrl === 'brand' || paymentTypeFromUrl === 'company'\">\r\n                    <mat-label>Filename: </mat-label>\r\n                    <br>\r\n                    <input matInput [value]=\"attachmentDocument.originalFilename || objAttachmentReference?.brandPenaltyAttachmentReference || objAttachmentReference?.paymentAttachmentReference\" disabled\r\n                        *ngIf=\"attachmentDocument.originalFilename || objAttachmentReference?.brandPenaltyAttachmentReference || objAttachmentReference?.paymentAttachmentReference\">\r\n\r\n                    <input class=\"file-upload\" type=\"file\" *ngIf=\"!attachmentDocument.originalFilename\" accept=\".pdf\"\r\n                        (change)=\"selectFile($event)\" [hidden]=\"objAttachmentReference?.brandPenaltyAttachmentReference || objAttachmentReference?.paymentAttachmentReference\">\r\n                    <br><br>\r\n                </div>\r\n                <div class=\"col-md-12\" appearance=\"outline\" *ngIf=\"paymentTypeFromUrl === 'delinquent' \">\r\n                    <ng-container *ngTemplateOutlet=\"approveDelinquent\"></ng-container>\r\n                </div>\r\n                <div class=\"col-md-12\" appearance=\"outline\"\r\n                    *ngIf=\"paymentTypeFromUrl === 'brand' || paymentTypeFromUrl === 'company' || paymentTypeFromUrl === 'delinquent' \">\r\n\r\n                    <button mat-raised-button class=\"button-red button-right\" (click)=\"viewDocument()\"\r\n                        *ngIf=\"objAttachmentReference?.brandPenaltyAttachmentReference || objAttachmentReference?.paymentAttachmentReference\">\r\n                        <i class=\"material-icons add-document\">open_in_new</i> VIEW DOCUMENT\r\n                    </button>\r\n\r\n                    &nbsp; &nbsp;\r\n\r\n                    <button mat-raised-button class=\"button-red button-right\" (click)=\"uploadProofOfPayment()\"\r\n                        [disabled]=\"!safeURLBrand||!isShowUploadButton\" *ngIf=\"isShowUploadButton\"\r\n                        [hidden]=\"objAttachmentReference?.brandPenaltyAttachmentReference || objAttachmentReference?.paymentAttachmentReference\">\r\n                        <i class=\"material-icons add-document\">upload</i> UPLOAD\r\n                    </button>\r\n\r\n                    <br><br>\r\n                    <div class=\"row col-md-12\" appearance=\"outline\"\r\n                        *ngIf=\"previewDocument==true && (\r\n                            objAttachmentReference?.brandPenaltyAttachmentReference ||\r\n                            objAttachmentReference?.paymentAttachmentReference\r\n                        )\">\r\n                        <div class=\"file-upload\">\r\n                            <object [data]=\"safeURLBrand\" type=\"application/pdf\" width=\"100%\" height=\"400\">\r\n                                <iframe [src]=\"safeURLBrand\" width=\"100%\" height=\"400\">\r\n                                    <p>This browser does not support PDF!</p>\r\n                                </iframe>\r\n                            </object>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"column\" *ngIf=\"paymentTypeFromUrl === 'brand' \">\r\n                <ng-container *ngTemplateOutlet=\"addBrandPenalty\"></ng-container>\r\n            </div>\r\n            <div class=\"column\" *ngIf=\"paymentTypeFromUrl === 'company' \">\r\n                <ng-container *ngTemplateOutlet=\"addCompanyPenalty\"></ng-container>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</form>\r\n\r\n<ng-template #approveDelinquent>\r\n    <div class=\"col-md-12\" style=\"padding: 0 2em;\">\r\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n            <mat-label>Company</mat-label>\r\n            <input matInput name=\"penaltyBrand\" [(ngModel)]=\"company.companyName\" [ngModelOptions]=\"{standalone: true}\"\r\n                readonly>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n            <mat-label>Amount to Settle</mat-label>\r\n            <input class=\"numbers-input\" matInput name=\"amountDue\" [value]=\"payment?.amountDue | number : '1.2-2'\"\r\n                type=\"text\" (keydown)=\"validateFieldService.numbersOnly($event)\" readonly>\r\n        </mat-form-field>\r\n\r\n        <div class=\"mat-elevation-z8 fields\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n\r\n            <ng-container matColumnDef=\"referenceCode\">\r\n              <th mat-header-cell *matHeaderCellDef > REFERENCE CODE </th>\r\n              <td mat-cell *matCellDef=\"let element\" (click)=\"getPaymentDetails(element)\"> {{ element?.referenceCode | uppercase }} </td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"brand\">\r\n              <th mat-header-cell *matHeaderCellDef > BRAND </th>\r\n              <td mat-cell *matCellDef=\"let element\" (click)=\"getPaymentDetails(element)\"> {{ element?.brand?.description | uppercase }} </td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"typeOfMedium\">\r\n              <th mat-header-cell *matHeaderCellDef > TYPE OF MEDIUM </th>\r\n              <td mat-cell *matCellDef=\"let element\" (click)=\"getPaymentDetails(element)\"> {{ element?.typeOfMedium | uppercase }} </td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"paymentStatus\">\r\n              <th mat-header-cell *matHeaderCellDef > PAYMENT STATUS </th>\r\n              <td mat-cell *matCellDef=\"let element\" (click)=\"getPaymentDetails(element)\"> {{ element?.paymentStatus?.replaceAll('_',' ') | uppercase }} </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n          </table>\r\n          <div class=\"no-record\" [hidden]=\"dataSource && dataSource?.data?.length > 0\">\r\n            No record found.\r\n          </div>\r\n          <mat-paginator [pageSizeOptions]=\"[10, 20, 50]\" showFirstLastButtons></mat-paginator>\r\n        </div>\r\n\r\n        <br><br>\r\n\r\n        <button mat-raised-button class=\"button-right button-red\" (click)=\"addPenalty('Delinquent')\"\r\n            *ngIf=\"process==='save'\">\r\n            <i class=\"material-icons color__white\">task_alt</i> SUBMIT\r\n        </button>\r\n\r\n    </div>\r\n</ng-template>\r\n\r\n<ng-template #addBrandPenalty>\r\n    <div class=\"col-md-12\" style=\"padding: 0 2em;\">\r\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\" *ngIf=\"penaltyBrand === undefined\">\r\n            <mat-label>Brand</mat-label>\r\n            <mat-select class=\"col-md-4\" [(ngModel)]=\"brandPenalty.brand\" [ngModelOptions]=\"{standalone: true}\">\r\n                <mat-option *ngFor=\"let i of brandList\" [value]=\"i\" name=\"brand\">\r\n                    {{ i?.description | uppercase }}\r\n                </mat-option>\r\n            </mat-select>\r\n        </mat-form-field>\r\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\" *ngIf=\"penaltyBrand !== undefined\">\r\n            <mat-label>Brand</mat-label>\r\n            <input matInput name=\"penaltyBrand\" [(ngModel)]=\"penaltyBrand\" [ngModelOptions]=\"{standalone: true}\"\r\n                readonly>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n            <mat-label>Accumulated Amount Due</mat-label>\r\n            <input matInput name=\"amount\" [(ngModel)]=\"brandPenalty.amount\" [ngModelOptions]=\"{standalone: true}\"\r\n                type=\"text\" (keydown)=\"validateFieldService.numbersOnly($event)\">\r\n        </mat-form-field>\r\n\r\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n            <mat-label>Remarks</mat-label>\r\n            <textarea matInput name=\"remarks\" [(ngModel)]=\"brandPenalty.remarks\"\r\n                [ngModelOptions]=\"{standalone: true}\" [readonly]=\"brandPenalty?.paymentStatus === 'PAID'\"></textarea>\r\n        </mat-form-field>\r\n\r\n        <hr *ngIf=\"process==='update'\">\r\n\r\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\" *ngIf=\"process==='update'\">\r\n            <mat-label>Payment Mode</mat-label>\r\n            <mat-select class=\"col-md-4\" [(ngModel)]=\"paymentMethod.paymentType\" name=\"paymentType\"\r\n                [compareWith]=\"comparePaymentMethod\" [disabled]=\"brandPenalty?.paymentStatus === 'PAID'\">\r\n                <mat-option *ngFor=\"let i of paymentTypeList\" [value]=\"i\" name=\"paymentType\">\r\n                    {{ i?.paymentDescription | uppercase }}\r\n                </mat-option>\r\n            </mat-select>\r\n        </mat-form-field>\r\n        <!-- <mat-form-field class=\"col-md-12\" appearance=\"outline\" *ngIf=\"paymentMode !== undefined\">\r\n            <mat-label>Payment Mode</mat-label>\r\n            <input matInput name=\"amount\" [(ngModel)]=\"paymentMode\" [ngModelOptions]=\"{standalone: true}\"\r\n                readonly>\r\n        </mat-form-field> -->\r\n\r\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\" *ngIf=\"process==='update'\">\r\n            <mat-label>Amount Received</mat-label>\r\n            <input matInput name=\"amount\" [(ngModel)]=\"paymentMethod.amount\" [ngModelOptions]=\"{standalone: true}\"\r\n                type=\"text\" (keydown)=\"validateFieldService.numbersOnly($event)\" [readonly]=\"brandPenalty?.paymentStatus === 'PAID'\">\r\n        </mat-form-field>\r\n\r\n        <br><br>\r\n\r\n        <button mat-raised-button class=\"button-right button-red\" (click)=\"addPenalty('Brand')\"\r\n            *ngIf=\"process==='save' && brandPenalty?.paymentStatus !== 'PAID'\">\r\n            <i class=\"material-icons color__white\">task_alt</i> SUBMIT\r\n        </button>\r\n        <button mat-raised-button class=\"button-right button-red button-right__approve\" (click)=\"approvePenalty()\"\r\n            *ngIf=\"process==='update' && brandPenalty?.paymentStatus !== 'PAID'\">\r\n            <i class=\"material-icons color__white\">task_alt</i> APPROVE\r\n        </button>\r\n\r\n    </div>\r\n</ng-template>\r\n\r\n<ng-template #addCompanyPenalty>\r\n    <div class=\"col-md-12\" style=\"padding: 0 2em;\">\r\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\" *ngIf=\"penaltyCompany === undefined\">\r\n            <mat-label>Company</mat-label>\r\n            <mat-select class=\"col-md-4\" [(ngModel)]=\"companyPenalty.company\" [ngModelOptions]=\"{standalone: true}\"\r\n                [compareWith]=\"compareCompany\">\r\n                <mat-option *ngFor=\"let i of companyList\" [value]=\"i\" name=\"company\">\r\n                    {{ i?.companyName | uppercase }}\r\n                </mat-option>\r\n            </mat-select>\r\n        </mat-form-field>\r\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\" *ngIf=\"penaltyCompany !== undefined\">\r\n            <mat-label>Company</mat-label>\r\n            <input matInput name=\"penaltyCompany\" [(ngModel)]=\"penaltyCompany\" [ngModelOptions]=\"{standalone: true}\"\r\n                readonly>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\" *ngIf=\"totalBalance === undefined || totalBalance === 0\">\r\n            <mat-label>Accumulated Amount Due</mat-label>\r\n            <input matInput name=\"amount\" [(ngModel)]=\"companyPenalty.penaltyAmount\"\r\n                [ngModelOptions]=\"{standalone: true}\" type=\"text\" (keydown)=\"validateFieldService.numbersOnly($event)\">\r\n        </mat-form-field>\r\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\" *ngIf=\"totalBalance !== undefined && totalBalance > 0\">\r\n            <mat-label>Accumulated Amount Due</mat-label>\r\n            <input matInput name=\"totalBalance\" [(ngModel)]=\"totalBalance\" [ngModelOptions]=\"{standalone: true}\"\r\n                readonly>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\" *ngIf=\"previewRemarks === undefined || previewRemarks === ''\">\r\n            <mat-label>Remarks</mat-label>\r\n            <textarea matInput name=\"remarks\" [(ngModel)]=\"companyPenalty.remarks\" [readonly]=\"process==='update'\"\r\n                [ngModelOptions]=\"{standalone: true}\" [readonly]=\"companyPenalty?.paymentStatus === 'PAID'\"></textarea>\r\n        </mat-form-field>\r\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\" *ngIf=\"previewRemarks !== undefined && previewRemarks !== ''\">\r\n            <mat-label>Remarks</mat-label>\r\n            <input matInput name=\"previewRemarks\" [(ngModel)]=\"previewRemarks\" [ngModelOptions]=\"{standalone: true}\"\r\n                readonly>\r\n        </mat-form-field>\r\n\r\n        <hr *ngIf=\"process==='update'\">\r\n\r\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\" *ngIf=\"process==='update'\">\r\n            <mat-label>Payment Mode</mat-label>\r\n            <mat-select class=\"col-md-4\" [(ngModel)]=\"paymentMethod.paymentType\" name=\"paymentType\"\r\n                [compareWith]=\"comparePaymentMethod\" [disabled]=\"companyPenalty?.paymentStatus === 'PAID'\">\r\n                <mat-option *ngFor=\"let i of paymentTypeList\" [value]=\"i\" name=\"paymentType\">\r\n                    {{ i?.paymentDescription | uppercase }}\r\n                </mat-option>\r\n            </mat-select>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\" *ngIf=\"process==='update'\">\r\n            <mat-label>Amount Received</mat-label>\r\n            <input matInput name=\"amount\" [(ngModel)]=\"paymentMethod.amount\" [ngModelOptions]=\"{standalone: true}\"\r\n                type=\"text\" (keydown)=\"validateFieldService.numbersOnly($event)\" [readonly]=\"companyPenalty?.paymentStatus === 'PAID'\">\r\n        </mat-form-field>\r\n\r\n        <br><br>\r\n\r\n        <button mat-raised-button class=\"button-right button-red\" (click)=\"addPenalty('Company')\"\r\n            *ngIf=\"process==='save' && companyPenalty?.paymentStatus !== 'PAID'\">\r\n            <i class=\"material-icons color__white\">task_alt</i> SUBMIT\r\n        </button>\r\n        <button mat-raised-button class=\"button-right button-red button-right__approve\" (click)=\"approvePenalty()\"\r\n            *ngIf=\"process==='update' && companyPenalty?.paymentStatus !== 'PAID'\">\r\n            <i class=\"material-icons color__white\">task_alt</i> APPROVE\r\n        </button>\r\n\r\n    </div>\r\n</ng-template>\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AddPenaltyComponent } from './add-penalty.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component : AddPenaltyComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AddPenaltyRoutingModule { }\r\n","import { Brand } from \"./brand.model\";\r\nimport { PaymentMethod } from \"./payment-method.model\";\r\n\r\nexport class BrandPenalty {\r\n    id: number;\r\n    amount: number;\r\n    brand: Brand;\r\n    brandPenaltyAttachmentReference: string;\r\n    paidDate: Date;\r\n    paymentMethod: PaymentMethod;\r\n    paymentStatus: string;\r\n    penaltyDate: Date;\r\n    remarks: string;\r\n    status: string;\r\n}"],"sourceRoot":"webpack:///"}