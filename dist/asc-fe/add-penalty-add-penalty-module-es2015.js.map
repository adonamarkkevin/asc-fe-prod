{"version":3,"sources":["./src/app/core/models/type-of-document.model.ts","./src/app/core/models/country.model.ts","./src/app/core/models/type-of-reason.model.ts","./src/app/core/models/company-penalty.model.ts","./src/app/core/models/type-of-application.model.ts","./src/app/core/models/s1-application.model.ts","./src/app/core/models/product.model.ts","./src/app/modules/pages/accounting/add-penalty/add-penalty.module.ts","./src/app/core/models/payment.model.ts","./src/app/core/models/type-of-medium.model.ts","./src/app/core/models/application-multimedia.model.ts","./src/app/core/models/s2-application.model.ts","./src/app/core/models/or-preparation.model.ts","./src/app/core/models/user-account.model.ts","./src/app/core/models/asc-rate.model.ts","./src/app/core/models/application-single-media.model.ts","./src/app/modules/pages/accounting/add-penalty/add-penalty.component.ts","./src/app/modules/pages/accounting/add-penalty/add-penalty.component.html","./src/app/core/models/application-request.model.ts","./src/app/core/models/profile.model.ts","./src/app/core/models/attachment-document.model.ts","./src/app/core/models/category.model.ts","./src/app/core/models/supporting-document.model.ts","./src/app/core/models/user-role.model.ts","./src/app/core/models/payment-type.model.ts","./src/app/core/models/or-preparation-reference.model.ts","./src/app/core/models/performance-metrics.model.ts","./src/app/modules/pages/accounting/add-penalty/add-penalty-routing.module.ts","./src/app/core/models/payment-method.model.ts","./src/app/core/models/index.ts","./src/app/core/models/affiliation.model.ts","./src/app/core/models/brand.model.ts","./src/app/core/models/company.model.ts","./src/app/core/models/brand-penalty.model.ts"],"names":[],"mappings":"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","file":"add-penalty-add-penalty-module-es2015.js","sourcesContent":["export class TypeOfDocument {\n    id: number;\n    description: string;\n    remarksEnable: boolean;\n    basedOnEnable: boolean;\n    variantEnable: boolean;\n    dateOfLaunchEnable: boolean;\n    expiresOnEnable: boolean;\n    inputEnable: boolean;\n    status: string;\n}\n","export class Country {\n  id: number;\n  code: string;\n  name: string;\n}","export class TypeOfReason {\n    id: number;\n    reason: string;\n    status: string;\n}\n","import { Company } from './company.model';\nimport { PaymentMethod } from './payment-method.model';\n\nexport class CompanyPenalty {\n    id: number;\n    company: Company;\n    paymentStatus: string;\n    penaltyAmount: number;\n    penaltyDate: Date;\n    remarks: string;\n    paymentAttachmentReference: string;\n    paymentMethod: PaymentMethod;\n\n    // not yet in BE\n    // paidDate: Date;\n    // status: string;\n}","export class TypeOfApplication {\n    id: number;\n    description: string;\n    clearingReleaseTime: String\n    decisionReleaseTime: String\n    sequenceNo: number;\n    status: String\n    submissionEndTime: String;\n    submissionStartTime: String\n}","import { Company } from './company.model';\nimport { Brand } from './brand.model';\nimport { ApplicationType } from './application-type.model';\nimport { UserAccount } from './user-account.model';\nimport { MultipleApplication } from './multiple-application.model';\nimport { Affiliation } from './affiliation.model';\nimport { ApplicationRequest } from './application-request.model';\nimport { Product } from './product.model';\nimport { TypeOfMedium } from './type-of-medium.model';\n\nexport class S1Application {\n    id: number;\n    company: Company;\n    brand: Brand;\n    adTitle: string;\n    referenceCode: string;\n\n    tagLine: string;\n    materialInformation: string;\n    externalStatus: string\n    internalStatus: string\n    revisionNo: number;\n\n    actionBy: UserAccount;\n    actionStatus: string; // ASSIGN_TO_ADSPE, ASSIGN_TO_REVIEWER, ASSIGN_TO_SCREENER\n    formStatus: string; // OPEN, LOCKED\n    submissionType: string // ORIGINAL, REVISION, COMPLIANCE\n    applicationType: ApplicationType;\n\n    formType: string; // INDIVIDUAL, MULTIPLE\n    autoSubmit: boolean;\n    submissionDate: Date;\n    sequenceOrder: number;\n    countSeries: number;\n\n    refTypeOfMedium: string;\n    assignedUser: UserAccount;\n    applicationOwner: UserAccount;\n    multipleApplication: MultipleApplication;\n    appFormReference: string;\n\n    mainAttachmentReference: string;\n    supportingAttachmentReference: string;\n    paymentAttachmentReference: string;\n    membersAffiliation: Affiliation;\n    decisionStatus: string;\n\n    amount: number;\n    applicationRequest: ApplicationRequest;\n    revisionLetterAttachmentReference: string;\n    assignedEncoder: UserAccount;\n    assignedAdSpecialist: UserAccount;\n\n    assignedScreener: UserAccount;\n    assignedReviewer: UserAccount;\n    verifiedDatetimeByEvaluator: Date;\n    sameDayRelease: boolean;\n    paidByApplicant: boolean;\n\n    archived: boolean;\n    appliedS2: boolean;\n    deliquent: boolean;\n    paymentStatus: string;\n    applicationDate: Date;\n\n    validUntil: Date;\n    previousRefCode: string;\n    hasNoSupportingDocs: boolean;\n    referenceCodeRejected: string;\n\n    hasRevision: boolean;\n    product: Product;\n    hasOngoingRevision: boolean;\n    qrCode: string;\n    barCode: string;\n    screenerDecisionComment: boolean;\n    reviewerDecisionComment: boolean;\n    hasOngoingCompliance: boolean;\n    releaseStatus: string;\n\n    complianceForm: boolean; // param need upon request for compliance\n    emailSent: boolean;\n    forwardToScreener: boolean;\n    forwardToReviewer: boolean;\n    formProcess: string;\n    typeOfMedium: string;\n\n    stampMaterialFileURL: string;\n    stampMaterialFilename: string;\n    decisionFormFileURL : string;\n    decisionFormFilename: string;\n\n    hasOngoingAppeal: boolean;\n    typeOfAppeal: string;\n    appealAttachmentReference: string;\n\n    hasOfficialReceipt: boolean;\n\n    // For AppRequest\n    status: string;\n\n    currentAssignee: string;\n}\n","import { Brand } from './brand.model';\nimport { Category } from './category.model';\n\nexport class Product {\n    id: number;\n    description: string;\n    status: string;\n    brand: Brand;\n    category: Category;\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AddPenaltyRoutingModule } from './add-penalty-routing.module';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AngularMaterialModule } from '@shared';\nimport { AddPenaltyComponent } from './add-penalty.component';\n\n\n@NgModule({\n  declarations: [AddPenaltyComponent],\n  imports: [\n    CommonModule,\n    AddPenaltyRoutingModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    FormsModule,\n    AngularMaterialModule,\n  ]\n})\nexport class AddPenaltyModule { }\n","import { S1Application } from './s1-application.model';\nimport { PaymentMethod } from './payment-method.model';\nimport { MultipleApplication } from './multiple-application.model';\nimport { S2Application } from './s2-application.model';\n\nexport class Payment {\n    id: number;\n    amountDue: number;\n    amountReceive: number;\n    appFormReference: string;\n    applicationForm: S1Application;\n    basicRate: number;\n    discount: number;\n    filename: string;\n    officialReceiptNo: string;\n    paymentAttachmentReference: string;\n    paymentDate: Date;\n    paymentMethod: PaymentMethod = new PaymentMethod();\n    paymentStatus: string; // PAID, UNPAID\n    remarks: string;\n    status: string;\n    vat: number;\n    withholdingTax: number;\n    amountToSettle: number;\n    companyName: string;\n    companyId: number;\n\n    multipleApplication: MultipleApplication;\n    filedBirForm: boolean = false;\n    applicationFormS2: S2Application;\n\n    constructor() {\n        this.filedBirForm = false;\n        this.remarks = '';\n    }\n}\n","import { TypeOfClearance } from './type-of-clearance.model';\nimport { TypeOfMainDocument } from './type-of-main-document.model';\n\nexport class TypeOfMedium {\n  description: string;\n  executionEnable: boolean;\n  id: number;\n  languageEnable: boolean;\n  lengthEnable: boolean;\n  multimedia: boolean;\n  multimediaMoving: boolean;\n  multimediaStatic: boolean;\n  othersEnable: boolean;\n  singlemedia: boolean;\n  sizeLengthEnable: boolean;\n  status: string;\n  typeOfMainDocument: TypeOfMainDocument;\n  widthEnable: boolean;\n  typeOfClearance: TypeOfClearance;\n\n  // not in BE; for List value\n  enabledFields: string;\n  sizeLength: string;\n}\n","import { TypeOfMedium } from './type-of-medium.model';\n\nexport class ApplicationMultimedia {\n    id: number;\n    amount: number;\n    appFormReference: string;\n    mediaType?: string; // STATIC, MOVING\n    multimediaSizeLength?: string;\n    typeOfMedium?: TypeOfMedium;\n}\n\nexport class ApplicationMultimediaItemsDTO {\n    hasSelected: boolean;\n    id: number;\n    multimediaMovingMedium?: string;\n    multimediaStaticMedium?: string;\n    sizeLength?: number;\n}\n\nexport class ApplicationMultimediaMovingDTO extends ApplicationMultimedia {\n    applicationMultimediaMovingList: ApplicationMultimediaItemsDTO[];\n    sizeLength: number;\n}\n\nexport class ApplicationMultimediaStaticDTO extends ApplicationMultimedia {\n    applicationMultimediaStaticList: ApplicationMultimediaItemsDTO[];\n}\n","import { ApplicationRequest } from './application-request.model';\nimport { S1Application } from './s1-application.model';\nimport { UserAccount } from './user-account.model';\n\nexport class S2Application {\n\n    id: number;\n    actionBy: string;\n    actionStatus: string;\n    applicationDate: Date;\n    applicationForm: S1Application;\n    assignedAdSpecialist: UserAccount;\n    assignedEncoder: UserAccount;\n    assignedUser: UserAccount;\n    complianceDate: Date;\n    decisionStatus: string;\n    externalStatus: string;\n    finalMaterialAttachmentReference: string;\n    formStatus: string;\n    internalStatus: string;\n    issuedDate: Date;\n    paymentStatus: string;\n    specialClearing: boolean;\n    submissionDate: Date;\n    validUntil: Date;\n    validityDate: Date;\n    referenceCodeRejected: string;\n    releaseDate: Date;\n    hasToa: boolean;\n    submissionType: string;\n    applicationRequest: ApplicationRequest;\n    paymentAttachmentReference: string;\n    amount: string;\n    appFormReference: string;\n    hasOngoingCompliance: boolean;\n    formProcess: string;\n    complianceForm: boolean; // param need upon request for compliance\n    hasOngoingAppeal: boolean;\n    typeOfAppeal: string;\n    appealAttachmentReference: string;\n    clearanceToaFileUrl: string;\n    clearanceToaFilename: string;\n    releaseStatus: string;\n    supportingAttachmentReference: string;\n}\n","import { TotalAmountsModel } from './totals.model';\nimport { TypeOfMedium, OrPreparationReference } from '@models';\n\nexport class OrPreparation {\n    amount: number;\n    amountInWords: string;\n    businessStyle: string;\n    companyAddress: string;\n    companyName: string;\n    companyTin: string;\n    controlNumber: string;\n    fullPaymentOf: string;\n    id: number;\n    officialReceiptDate: Date;\n    officialReceiptNo: string;\n    officialReceiptReferences: OrPreparationReference[];\n    remarks: string;\n    status: string;\n    typeOfMedium: TypeOfMedium;\n    voucherControlNumber: string;\n\n    //totals\n    totalSales: number;\n    totalVat: number;\n    totalWithholdingtax: number;\n    totalAmountDue: number;\n\n    // Not if BE; for FE only\n    officialReceiptReferencesValue: string;\n\n    setTotalAmounts(totals: TotalAmountsModel){\n        this.totalSales = totals.totalSales;\n        this.totalAmountDue = totals.totalAmountDue;\n        this.totalVat = totals.totalVat;\n        this.totalWithholdingtax = totals.totalWithholdingtax;\n    }\n}","import { Affiliation, Company, UserRole } from '@models';\n\nexport class UserAccount {\n    id: number;\n    username: string;\n    password: string;\n    firstName: string;\n    middleName: string;\n    lastName: string;\n    company: Company;\n    membersAffiliationDto: Affiliation;\n    mobileNumber: string;\n    userRole: UserRole;\n    status: string;\n    acceptTerms: boolean;\n    accountType: string;\n    // locked: Boolean;\n    // enabled: Boolean;\n    ascDefault:\tboolean;\n    membersAffiliation:\tAffiliation;\n    scheduledUser:\tboolean;\n    signatureAttachmentReference:\tstring;\n}\n","import { TypeOfExecution } from './type-of-execution.model';\nimport { TypeOfMedium } from './type-of-medium.model';\n\nexport class AscRate {\n    id: number;\n    lengthFrom: number;\n    lengthTo: number;\n    memberOffline: number;\n    memberOnline: number;\n    nonMemberOffline: number;\n    nonMemberOnline: number;\n    status: string;\n    typeOfExecution: TypeOfExecution;\n    typeOfMedium: TypeOfMedium;\n}","import { Dialect } from './dialect.model';\nimport { MediumExecution } from './medium-execution.model';\n\nexport class ApplicationSingleMedia {\n    id: number;\n    amount: number;\n    appFormReference: string;\n    dialect: Dialect;\n    language: string;\n    others: string;\n    sizeLength: string;\n    mediumExecution: MediumExecution;\n    width: string;\n\n}\n","import { USER_ROLES } from './../../../../shared/utils/constants';\nimport { Component, Input, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AttachmentDocument, Payment, PaymentType, Company } from '@models';\nimport { ApiService, DataStorageService, SweetAlertService } from '@services';\nimport { ATTACHMENT_TYPE, ENDPOINTS, SUBMISSION_TYPE } from '@shared';\nimport { BrandPenalty } from 'app/core/models/brand-penalty.model';\nimport { CompanyPenalty } from 'app/core/models/company-penalty.model';\nimport { PaymentMethod } from 'app/core/models/payment-method.model';\nimport { FileStorageService } from 'app/core/services/file.storage.service';\nimport { ValidateFieldService } from 'app/core/services/validate-field.service';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-add-penalty',\n  templateUrl: './add-penalty.component.html',\n  styleUrls: ['./add-penalty.component.scss']\n})\nexport class AddPenaltyComponent implements OnInit, OnDestroy {\n\n  @ViewChild(MatPaginator, { static: false }) paginator: MatPaginator;\n  dataSource: MatTableDataSource<any>\n  displayedColumns = ['referenceCode', 'brand', 'typeOfMedium', 'paymentStatus'];\n  brandPenalty = new BrandPenalty();\n  companyPenalty = new CompanyPenalty();\n  payment: any; // = new Payment();\n  paymentType = new PaymentType();\n  attachmentDocument = new AttachmentDocument();\n  paymentMethod = new PaymentMethod();\n  company = new Company();\n\n  objAttachmentReference = {\n    brandPenaltyAttachmentReference: '',\n    paymentAttachmentReference: ''\n  };\n\n  paymentTypeList = [];\n  brandList = [];\n  companyList = [];\n  companyPenaltyList = [];\n  delinquentAppForms = [];\n  notInSelection = ['INACTIVE', 'DISAPPROVED'];\n  // attachmentDocuments = [];\n  id: number;\n  penaltyBrand: string;\n  penaltyCompany: string;\n  paymentMode: string;\n  totalBalance: number;\n  previewRemarks: string;\n  previewDocument = false;\n  attachment: any;\n  process = 'save';\n  paymentTypeFromUrl = '';\n  approveDelinquent = false;\n  currentUser: any;\n\n  @Input() safeURLBrand: any;\n  isShowUploadButton = false;\n  fileSize: number;\n  selectedFile: File;\n  uploadedPaymentFile: any;\n\n  constructor(\n    private router: Router,\n    private apiService: ApiService,\n    private sweetAlertService: SweetAlertService,\n    private sanitizer: DomSanitizer,\n    private fileStorageService: FileStorageService,\n    private route: ActivatedRoute,\n    private spinner: NgxSpinnerService,\n    public validateFieldService: ValidateFieldService,\n    private dataStorageService: DataStorageService,\n  ) { }\n\n  ngOnInit(): void {\n    this.currentUser = this.dataStorageService.getUserAccount();\n    this.getPenalizedBrandList();\n    this.getCompanyList();\n    this.getPaymentList();\n    this.id = Number(this.route.snapshot.paramMap.get('id'));\n    this.paymentTypeFromUrl = this.route.snapshot.paramMap.get('type');\n    if (this.id !== 0) {\n      this.process = 'update';\n      this.viewPayment();\n    }\n  }\n\n  ngOnDestroy(): void {\n    sessionStorage.removeItem('PAYMENT');\n  }\n\n  getPaymentDetails(elm) {\n    if (elm?.paymentStatus) {\n      this.router.navigate(['asc/page/accounting/update/', `${elm?.paymentStatus?.toLowerCase()}-${elm.id}`, `delinquent-${elm.id}`]);\n    } else {\n      this.router.navigate(['asc/page/accounting/update/', `delinquent-${elm.id}`]);\n    }\n  }\n\n\n  getPenalizedBrandList() {\n    this.apiService.findAll(ENDPOINTS.brand).subscribe((res: any) => {\n      // this.brandList = res.responseData.data.filter(penalizedBrands => penalizedBrands.penalty);\n      this.brandList = res.responseData.data;\n    });\n  }\n\n  getCompanyList() {\n    this.apiService.findAll(ENDPOINTS.company).subscribe((res: any) => {\n      this.companyList = res.responseData.data.filter((company) => !this.notInSelection.includes(company.status));\n    });\n  }\n\n  getPaymentList() {\n    this.apiService.findAll(ENDPOINTS.paymentType).subscribe((res: any) => {\n      this.paymentTypeList = res.responseData.data;\n      if (this.currentUser.userRole.name === USER_ROLES.ROLE_APPLICANT) {\n        const creditCardIndex = this.paymentTypeList\n          .findIndex((element) => element.paymentDescription === 'Credit Card');\n        this.paymentTypeList.splice(creditCardIndex, 1);\n      }\n    });\n  }\n\n  selectFile(event) {\n    this.isShowUploadButton = false;\n\n    if (event.target.files[0]) {\n      this.fileSize = event.target.files[0].size;\n\n      if (this.fileSize > 15000000) {\n        this.sweetAlertService.customErrorMessage(`Attachments' total file size should not exceed 15MB.`);\n        event.target.value = '';\n        return;\n\n      } else {\n        this.isShowUploadButton = true;\n        const fileURL = URL.createObjectURL(event.target.files[0]);\n        this.previewDocument = true;\n\n        this.safeURLBrand = this.sanitizer.bypassSecurityTrustResourceUrl(fileURL);\n\n        const reader = new FileReader();\n        const [file] = event.target.files;\n\n        reader.readAsDataURL(file);\n        reader.onload = () => {\n        };\n\n        this.selectedFile = event.target.files[0];\n      }\n    }\n  }\n\n  addPenalty(penaltyType = 'Brand') {\n    Swal.fire({\n      text: `Are you sure you want to submit this ${penaltyType} Penalty?`,\n      icon: 'question',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Confirm'\n    }).then((result) => {\n      if (result.value) {\n        if (penaltyType === 'Brand') {\n          this.apiService.save(ENDPOINTS.brandPenalties, this.brandPenalty).subscribe(\n            (res: any) => {\n              this.sweetAlertService.customSuccessMessage('Brand penalty successfully saved.');\n              this.router.navigate(['asc/page/accounting/payments/', 'brand-penalties']);\n            }, (err: any) => {\n              this.sweetAlertService.error(err);\n            }\n          );\n        } else if (penaltyType === 'Company') {\n          this.companyPenalty.penaltyDate = new Date();\n          this.apiService.save(ENDPOINTS.companyPenalties, this.companyPenalty).subscribe(\n            (res: any) => {\n              this.sweetAlertService.customSuccessMessage('Company penalty successfully saved.');\n              this.router.navigate(['asc/page/accounting/payments/', 'company-penalties']);\n            }, (err: any) => {\n              this.sweetAlertService.error(err);\n            }\n          );\n        }\n      }\n    });\n  }\n\n  uploadProofOfPayment() {\n    Swal.fire({\n      text: 'Are you sure you want to submit this as proof of payment?',\n      icon: 'question',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Confirm'\n    }).then((result) => {\n      if (result.value) {\n        this.spinner.show();\n        let attachmentType = '';\n        if (this.paymentTypeFromUrl === 'brand') {\n          attachmentType = ATTACHMENT_TYPE.BRAND_PENALTY_PAYMENT;\n        } else if (this.paymentTypeFromUrl === 'company' || this.paymentTypeFromUrl === 'delinquent') {\n          attachmentType = ATTACHMENT_TYPE.PAYMENT;\n        }\n\n        let params = '';\n        params = '?&attachmentType=' + attachmentType + '&submissionType=' + SUBMISSION_TYPE.ORIGINAL;\n        this.fileStorageService.pushFileToStorage(ENDPOINTS.attachmentDocument, this.selectedFile, params)\n          .subscribe((res: any) => {\n            this.uploadedPaymentFile = res.responseData.data;\n            this.addToAttachmentDocuments(this.uploadedPaymentFile);\n\n            if (this.paymentTypeFromUrl === 'brand') {\n              this.brandPenalty.brandPenaltyAttachmentReference = this.uploadedPaymentFile.brandPenaltyAttachmentReference;\n              this.objAttachmentReference.brandPenaltyAttachmentReference = this.brandPenalty.brandPenaltyAttachmentReference;\n            } else if (this.paymentTypeFromUrl === 'company') {\n              this.companyPenalty.paymentAttachmentReference = this.uploadedPaymentFile.paymentAttachmentReference;\n              this.objAttachmentReference.paymentAttachmentReference = this.companyPenalty.paymentAttachmentReference;\n            } else if (this.paymentTypeFromUrl === 'delinquent') {\n              this.payment.paymentAttachmentReference = this.uploadedPaymentFile.paymentAttachmentReference;\n              this.objAttachmentReference.paymentAttachmentReference = this.payment.paymentAttachmentReference;\n            }\n            this.hideSpinner();\n            this.sweetAlertService.customSuccessMessage('Attachment successfully uploaded.');\n            this.selectedFile = null;\n\n            if (this.brandPenalty.brandPenaltyAttachmentReference || this.companyPenalty.paymentAttachmentReference\n              || this.payment.paymentAttachmentReference === 'delinquent') {\n              this.getAttachmentDocument();\n            }\n\n          }, (err: any) => {\n            this.hideSpinner();\n            this.sweetAlertService.error(err);\n          }, () => {\n            // actions after subscription\n          });\n      } else {\n        this.selectedFile = null;\n      }\n    });\n  }\n\n  saveBrandPenalty() {\n    this.apiService.save(`${ENDPOINTS.brandPenalties}/payment-type-id/${this.paymentType.id}/payment/submit`, this.brandPenalty)\n      .subscribe((res: any) => {\n        this.brandPenalty = new BrandPenalty();\n        this.paymentType = new PaymentType();\n        this.attachment = null;\n        this.previewDocument = false;\n        this.sweetAlertService.customSuccessMessage('Voucher fund successfully submitted.');\n      }, (err) => {\n        console.log(err);\n        this.sweetAlertService.error(err);\n      });\n  }\n\n  approvePenalty() {\n    if (this.paymentTypeFromUrl === 'brand') {\n      Swal.fire({\n        text: 'Are you sure you want to approve this Brand Penalty?',\n        icon: 'question',\n        showCancelButton: true,\n        confirmButtonColor: '#3085d6',\n        cancelButtonColor: '#d33',\n        confirmButtonText: 'Confirm'\n      }).then((result) => {\n        if (result.value) {\n          this.paymentMethod.paymentDate = new Date();\n          this.brandPenalty.paymentMethod = this.paymentMethod;\n          this.brandPenalty.brandPenaltyAttachmentReference = this.attachmentDocument.brandPenaltyAttachmentReference;\n          console.log(this.paymentMethod);\n\n          this.apiService.save(ENDPOINTS.approveBrandPenalty, this.brandPenalty).subscribe((res: any) => {\n            this.sweetAlertService.customSuccessMessage('Brand penalty approved successfully.');\n            this.router.navigate(['asc/page/accounting/payments/', 'brand-penalties']);\n          });\n        } else {\n          this.attachment = null;\n        }\n      });\n    } else if (this.paymentTypeFromUrl === 'company') {\n      Swal.fire({\n        text: 'Are you sure you want to approve this Company Penalty?',\n        icon: 'question',\n        showCancelButton: true,\n        confirmButtonColor: '#3085d6',\n        cancelButtonColor: '#d33',\n        confirmButtonText: 'Confirm'\n      }).then((result) => {\n        if (result.value) {\n          // this.paymentMethod.paymentDate = new Date();\n          this.companyPenalty.paymentMethod = this.paymentMethod;\n          this.companyPenalty.paymentAttachmentReference = this.attachmentDocument.paymentAttachmentReference;\n          console.log(this.paymentMethod);\n          console.log(this.companyPenalty);\n          console.log(this.attachmentDocument.paymentAttachmentReference);\n          this.companyPenaltyList[0].paymentMethod = this.paymentMethod;\n          this.companyPenaltyList[0].paymentAttachmentReference = this.attachmentDocument.paymentAttachmentReference;\n          this.apiService.save(`${ENDPOINTS.companyPenalties}/submit-penalty-payment?amountReceived=${this.paymentMethod.amount}&paymentTypeId=${this.paymentMethod?.paymentType?.id}`,\n            this.companyPenaltyList[0]).subscribe((res: any) => {\n              this.sweetAlertService.customSuccessMessage('Company penalty approved successfully.');\n              this.router.navigate(['asc/page/accounting/payments/', 'company-penalties']);\n            }, err => {\n              if (!err.error.message) {\n                err.error.message = err.error.responseMessage;\n              }\n              this.sweetAlertService.error(err);\n            });\n        } else {\n          this.attachment = null;\n        }\n      });\n    } else if (this.paymentTypeFromUrl === 'delinquent') {\n      if (this.paymentMethod.amount < this.payment.amountDue) {\n        this.sweetAlertService.customErrorMessage(`Amount Received/Transferred is lower than Amount Due.`);\n      } else {\n        Swal.fire({\n          text: 'Are you sure you want to approve this Delinquent Company?',\n          icon: 'question',\n          showCancelButton: true,\n          confirmButtonColor: '#3085d6',\n          cancelButtonColor: '#d33',\n          confirmButtonText: 'Confirm'\n        }).then((result) => {\n          if (result.value) {\n            // this.paymentMethod.paymentDate = new Date();\n            this.payment.paymentMethod = this.paymentMethod;\n            this.payment.amountReceive = Number(this.paymentMethod.amount);\n            console.log(this.paymentMethod);\n            console.log(this.payment);\n\n            this.apiService.save(`${ENDPOINTS.approveDelinquentCompany}`, this.payment).subscribe((res: any) => {\n              this.sweetAlertService.customSuccessMessage('Delinquent company approved successfully.');\n              this.router.navigate(['asc/page/accounting/payments/', 'delinquent-companies']);\n            }, err => {\n              if (!err.error.message) {\n                err.error.message = err.error.responseMessage;\n              }\n              this.sweetAlertService.error(err);\n            });\n          } else {\n            this.attachment = null;\n          }\n        });\n      }\n    }\n  }\n\n  viewPayment() {\n    if (this.paymentTypeFromUrl === 'brand') {\n      this.apiService.findById(ENDPOINTS.brandPenalties, this.id).subscribe((res: any) => {\n        const obj = res.responseData.data;\n        this.penaltyBrand = obj.brand.description;\n        if (obj?.paymentMethod) {\n          this.paymentType = obj?.paymentMethod?.paymentType;\n          this.paymentMethod = obj?.paymentMethod;\n        }\n        this.brandPenalty = obj;\n        if (this.brandPenalty.brandPenaltyAttachmentReference) {\n          this.objAttachmentReference.brandPenaltyAttachmentReference = this.brandPenalty.brandPenaltyAttachmentReference;\n          this.getAttachmentDocuments();\n        }\n      });\n    } else if (this.paymentTypeFromUrl === 'company') {\n      this.apiService.findById(`${ENDPOINTS.companyPenalties}/company`, this.id).subscribe((res: any) => {\n        if (res.responseData.data) {\n          this.companyPenaltyList = res.responseData.data;\n\n          if (this.companyPenaltyList[0].paymentAttachmentReference) {\n            this.objAttachmentReference.paymentAttachmentReference = this.companyPenalty.paymentAttachmentReference;\n            this.getAttachmentDocuments();\n          }\n\n          this.penaltyCompany = this.companyPenaltyList[0].company.companyName;\n          this.totalBalance = this.companyPenaltyList.filter(filteredData => filteredData.paymentStatus !== 'PAID')\n            .map(mapped => mapped.penaltyAmount).reduce((previousValue, currentValue) =>\n              previousValue + currentValue,\n              0);\n          this.previewRemarks = this.companyPenaltyList.filter(filteredData => filteredData.paymentStatus !== 'PAID')\n            .map(mapped => mapped.remarks ? mapped.remarks + '. ' : '')\n            .reduce((previousValue, currentValue) =>\n              previousValue + currentValue,\n              '');\n\n        }\n      });\n    } else if (this.paymentTypeFromUrl === 'delinquent') {\n      this.payment = this.dataStorageService.getPayment();\n\n      const companyName = this.payment?.applicationForm?.companyName;\n      this.company.companyName = companyName;\n      this.getAppFormsByCompanyId(this.payment?.companyId);\n    }\n  }\n\n  getAppFormsByCompanyId(companyId) {\n    this.apiService.findAll(ENDPOINTS.getAppFormsByCompanyId + companyId).subscribe((res: any) => {\n      this.delinquentAppForms = res.responseData.data;\n      this.dataSource = new MatTableDataSource<any>(this.delinquentAppForms);\n      this.dataSource.paginator = this.paginator;\n    });\n  }\n\n  getAttachmentDocuments() {\n    let param;\n    if (this.brandPenalty.brandPenaltyAttachmentReference) {\n      param = `brand-penalty-attachment-reference/${this.brandPenalty.brandPenaltyAttachmentReference}`;\n    } else if (this.companyPenalty.paymentAttachmentReference) {\n      param = `payment-attachment-reference/${this.companyPenaltyList[0].paymentAttachmentReference}`;\n    }\n\n    this.apiService.findByParam(ENDPOINTS.attachmentDocument, param).subscribe((res: any) => {\n      if (res) {\n        this.attachmentDocument = res.responseData.data;\n      }\n      this.previewDocument = true;\n      this.safeURLBrand = this.sanitizer.bypassSecurityTrustResourceUrl(this.attachmentDocument.fileURL);\n    });\n  }\n\n  addToAttachmentDocuments(obj: any) {\n    this.attachmentDocument.brandPenaltyAttachmentReference = obj.brandPenaltyAttachmentReference;\n    this.attachmentDocument.id = obj.id;\n    this.attachmentDocument.originalFilename = obj.originalFilename;\n    this.attachmentDocument.filename = obj.filename;\n    this.attachmentDocument.fileExtension = obj.fileExtension;\n    this.attachmentDocument.fileURL = obj.fileURL;\n    this.attachmentDocument.attachmentType = obj.attachmentType;\n    this.attachmentDocument.documentFormat = obj.documentFormat;\n  }\n\n  hideSpinner() {\n    setTimeout(() => {\n      this.spinner.hide();\n    }, 1);\n  }\n\n  getAttachmentDocument() {\n    this.spinner.show();\n\n    if (this.paymentTypeFromUrl === 'brand') {\n      this.apiService.findByParam(ENDPOINTS.brandPenaltyAttachmentDocument,\n        this.brandPenalty.brandPenaltyAttachmentReference).subscribe(\n          (res: any) => {\n            if (res) {\n              this.attachmentDocument = res;\n            }\n            this.hideSpinner();\n          }, (err: any) => {\n            this.hideSpinner();\n            console.error(err);\n          });\n    } else {\n      let attachmentReference = '';\n      if (this.paymentTypeFromUrl === 'company') {\n        attachmentReference = this.companyPenalty.paymentAttachmentReference;\n      } else if (this.paymentTypeFromUrl === 'delinquent') {\n        attachmentReference = this.payment.paymentAttachmentReference;\n      }\n      this.apiService.findByParam(ENDPOINTS.paymentAttachmentReference,\n        attachmentReference).subscribe(\n          (res: any) => {\n            if (res) {\n              this.attachmentDocument = res?.responseData?.data;\n            }\n            this.hideSpinner();\n          }, (err: any) => {\n            this.hideSpinner();\n            console.error(err);\n          });\n    }\n  }\n\n  viewDocument() {\n    if (this.uploadedPaymentFile) {\n      window.open(this.uploadedPaymentFile.fileURL);\n    } else {\n      window.open(this.attachmentDocument.fileURL);\n    }\n  }\n\n  comparePaymentMethod(value: any, selected: any): boolean {\n    if (value && selected) {\n      return value.paymentDescription === selected.paymentDescription;\n    }\n  }\n\n  compareCompany(value: any, selected: any): boolean {\n    if (value && selected) {\n      return value.id === selected.id;\n    }\n  }\n\n  navigateToList() {\n    Swal.fire({\n      text: 'Are you sure you want to go back to payment list?',\n      icon: 'question',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Confirm'\n    }).then((result) => {\n      if (result.value) {\n        if (this.paymentTypeFromUrl === 'brand') {\n          this.router.navigate(['asc/page/accounting/payments/', 'brand-penalties']);\n        } else if (this.paymentTypeFromUrl === 'company') {\n          this.router.navigate(['asc/page/accounting/payments/', 'company-penalties']);\n        } else if (this.paymentTypeFromUrl === 'delinquent') {\n          this.router.navigate(['asc/page/accounting/payments/', 'delinquent-companies']);\n        }\n      }\n    });\n  }\n\n  updatePayment() {\n    this.apiService.update(ENDPOINTS.companyPenalties, this.companyPenalty).subscribe(\n      res => {\n        console.log('Update companyPenalties: ', res);\n      }, err => {\n        console.log(err);\n      }\n    );\n  }\n\n}\n","<form>\n    <div class=\"container-fluid\">\n        <div class=\"row\">\n            <div class=\"column\">\n                <div class=\"col-md-12 title\">\n                    <mat-label>\n                        {{ paymentTypeFromUrl | titlecase }} Penalties\n                    </mat-label>\n                    <button mat-raised-button class=\"button-right button-red button-center\" (click)=\"navigateToList()\">\n                        <i class=\"material-icons color__white\">list</i> BACK TO LIST\n                    </button>\n                </div>\n                <hr>\n\n                <div class=\"col-md-12\" appearance=\"outline\"\n                    *ngIf=\"paymentTypeFromUrl === 'brand' || paymentTypeFromUrl === 'company'\">\n                    <mat-label>Filename: </mat-label>\n                    <br>\n                    <input matInput [value]=\"attachmentDocument.originalFilename || objAttachmentReference?.brandPenaltyAttachmentReference || objAttachmentReference?.paymentAttachmentReference\" disabled\n                        *ngIf=\"attachmentDocument.originalFilename || objAttachmentReference?.brandPenaltyAttachmentReference || objAttachmentReference?.paymentAttachmentReference\">\n\n                    <input class=\"file-upload\" type=\"file\" *ngIf=\"!attachmentDocument.originalFilename\" accept=\".pdf\"\n                        (change)=\"selectFile($event)\" [hidden]=\"objAttachmentReference?.brandPenaltyAttachmentReference || objAttachmentReference?.paymentAttachmentReference\">\n                    <br><br>\n                </div>\n                <div class=\"col-md-12\" appearance=\"outline\" *ngIf=\"paymentTypeFromUrl === 'delinquent' \">\n                    <ng-container *ngTemplateOutlet=\"approveDelinquent\"></ng-container>\n                </div>\n                <div class=\"col-md-12\" appearance=\"outline\"\n                    *ngIf=\"paymentTypeFromUrl === 'brand' || paymentTypeFromUrl === 'company' || paymentTypeFromUrl === 'delinquent' \">\n\n                    <button mat-raised-button class=\"button-red button-right\" (click)=\"viewDocument()\"\n                        *ngIf=\"objAttachmentReference?.brandPenaltyAttachmentReference || objAttachmentReference?.paymentAttachmentReference\">\n                        <i class=\"material-icons add-document\">open_in_new</i> VIEW DOCUMENT\n                    </button>\n\n                    &nbsp; &nbsp;\n\n                    <button mat-raised-button class=\"button-red button-right\" (click)=\"uploadProofOfPayment()\"\n                        [disabled]=\"!safeURLBrand||!isShowUploadButton\" *ngIf=\"isShowUploadButton\"\n                        [hidden]=\"objAttachmentReference?.brandPenaltyAttachmentReference || objAttachmentReference?.paymentAttachmentReference\">\n                        <i class=\"material-icons add-document\">upload</i> UPLOAD\n                    </button>\n\n                    <br><br>\n                    <div class=\"row col-md-12\" appearance=\"outline\"\n                        *ngIf=\"previewDocument==true && (\n                            objAttachmentReference?.brandPenaltyAttachmentReference ||\n                            objAttachmentReference?.paymentAttachmentReference\n                        )\">\n                        <div class=\"file-upload\">\n                            <object [data]=\"safeURLBrand\" type=\"application/pdf\" width=\"100%\" height=\"400\">\n                                <iframe [src]=\"safeURLBrand\" width=\"100%\" height=\"400\">\n                                    <p>This browser does not support PDF!</p>\n                                </iframe>\n                            </object>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"column\" *ngIf=\"paymentTypeFromUrl === 'brand' \">\n                <ng-container *ngTemplateOutlet=\"addBrandPenalty\"></ng-container>\n            </div>\n            <div class=\"column\" *ngIf=\"paymentTypeFromUrl === 'company' \">\n                <ng-container *ngTemplateOutlet=\"addCompanyPenalty\"></ng-container>\n            </div>\n        </div>\n    </div>\n</form>\n\n<ng-template #approveDelinquent>\n    <div class=\"col-md-12\" style=\"padding: 0 2em;\">\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n            <mat-label>Company</mat-label>\n            <input matInput name=\"penaltyBrand\" [(ngModel)]=\"company.companyName\" [ngModelOptions]=\"{standalone: true}\"\n                readonly>\n        </mat-form-field>\n\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n            <mat-label>Amount to Settle</mat-label>\n            <input class=\"numbers-input\" matInput name=\"amountDue\" [value]=\"payment?.amountDue | number : '1.2-2'\"\n                type=\"text\" (keydown)=\"validateFieldService.numbersOnly($event)\" readonly>\n        </mat-form-field>\n\n        <div class=\"mat-elevation-z8 fields\">\n          <table mat-table [dataSource]=\"dataSource\" matSort>\n\n            <ng-container matColumnDef=\"referenceCode\">\n              <th mat-header-cell *matHeaderCellDef > REFERENCE CODE </th>\n              <td mat-cell *matCellDef=\"let element\" (click)=\"getPaymentDetails(element)\"> {{ element?.referenceCode | uppercase }} </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"brand\">\n              <th mat-header-cell *matHeaderCellDef > BRAND </th>\n              <td mat-cell *matCellDef=\"let element\" (click)=\"getPaymentDetails(element)\"> {{ element?.brand?.description | uppercase }} </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"typeOfMedium\">\n              <th mat-header-cell *matHeaderCellDef > TYPE OF MEDIUM </th>\n              <td mat-cell *matCellDef=\"let element\" (click)=\"getPaymentDetails(element)\"> {{ element?.typeOfMedium | uppercase }} </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"paymentStatus\">\n              <th mat-header-cell *matHeaderCellDef > PAYMENT STATUS </th>\n              <td mat-cell *matCellDef=\"let element\" (click)=\"getPaymentDetails(element)\"> {{ element?.paymentStatus?.replaceAll('_',' ') | uppercase }} </td>\n            </ng-container>\n\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n          </table>\n          <div class=\"no-record\" [hidden]=\"dataSource && dataSource?.data?.length > 0\">\n            No record found.\n          </div>\n          <mat-paginator [pageSizeOptions]=\"[10, 20, 50]\" showFirstLastButtons></mat-paginator>\n        </div>\n\n        <br><br>\n\n        <button mat-raised-button class=\"button-right button-red\" (click)=\"addPenalty('Delinquent')\"\n            *ngIf=\"process==='save'\">\n            <i class=\"material-icons color__white\">task_alt</i> SUBMIT\n        </button>\n\n    </div>\n</ng-template>\n\n<ng-template #addBrandPenalty>\n    <div class=\"col-md-12\" style=\"padding: 0 2em;\">\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\" *ngIf=\"penaltyBrand === undefined\">\n            <mat-label>Brand</mat-label>\n            <mat-select class=\"col-md-4\" [(ngModel)]=\"brandPenalty.brand\" [ngModelOptions]=\"{standalone: true}\">\n                <mat-option *ngFor=\"let i of brandList\" [value]=\"i\" name=\"brand\">\n                    {{ i?.description | uppercase }}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\" *ngIf=\"penaltyBrand !== undefined\">\n            <mat-label>Brand</mat-label>\n            <input matInput name=\"penaltyBrand\" [(ngModel)]=\"penaltyBrand\" [ngModelOptions]=\"{standalone: true}\"\n                readonly>\n        </mat-form-field>\n\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n            <mat-label>Accumulated Amount Due</mat-label>\n            <input matInput name=\"amount\" [(ngModel)]=\"brandPenalty.amount\" [ngModelOptions]=\"{standalone: true}\"\n                type=\"text\" (keydown)=\"validateFieldService.numbersOnly($event)\">\n        </mat-form-field>\n\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n            <mat-label>Remarks</mat-label>\n            <textarea matInput name=\"remarks\" [(ngModel)]=\"brandPenalty.remarks\"\n                [ngModelOptions]=\"{standalone: true}\" [readonly]=\"brandPenalty?.paymentStatus === 'PAID'\"></textarea>\n        </mat-form-field>\n\n        <hr *ngIf=\"process==='update'\">\n\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\" *ngIf=\"process==='update'\">\n            <mat-label>Payment Mode</mat-label>\n            <mat-select class=\"col-md-4\" [(ngModel)]=\"paymentMethod.paymentType\" name=\"paymentType\"\n                [compareWith]=\"comparePaymentMethod\" [disabled]=\"brandPenalty?.paymentStatus === 'PAID'\">\n                <mat-option *ngFor=\"let i of paymentTypeList\" [value]=\"i\" name=\"paymentType\">\n                    {{ i?.paymentDescription | uppercase }}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n        <!-- <mat-form-field class=\"col-md-12\" appearance=\"outline\" *ngIf=\"paymentMode !== undefined\">\n            <mat-label>Payment Mode</mat-label>\n            <input matInput name=\"amount\" [(ngModel)]=\"paymentMode\" [ngModelOptions]=\"{standalone: true}\"\n                readonly>\n        </mat-form-field> -->\n\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\" *ngIf=\"process==='update'\">\n            <mat-label>Amount Received</mat-label>\n            <input matInput name=\"amount\" [(ngModel)]=\"paymentMethod.amount\" [ngModelOptions]=\"{standalone: true}\"\n                type=\"text\" (keydown)=\"validateFieldService.numbersOnly($event)\" [readonly]=\"brandPenalty?.paymentStatus === 'PAID'\">\n        </mat-form-field>\n\n        <br><br>\n\n        <button mat-raised-button class=\"button-right button-red\" (click)=\"addPenalty('Brand')\"\n            *ngIf=\"process==='save' && brandPenalty?.paymentStatus !== 'PAID'\">\n            <i class=\"material-icons color__white\">task_alt</i> SUBMIT\n        </button>\n        <button mat-raised-button class=\"button-right button-red button-right__approve\" (click)=\"approvePenalty()\"\n            *ngIf=\"process==='update' && brandPenalty?.paymentStatus !== 'PAID'\">\n            <i class=\"material-icons color__white\">task_alt</i> APPROVE\n        </button>\n\n    </div>\n</ng-template>\n\n<ng-template #addCompanyPenalty>\n    <div class=\"col-md-12\" style=\"padding: 0 2em;\">\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\" *ngIf=\"penaltyCompany === undefined\">\n            <mat-label>Company</mat-label>\n            <mat-select class=\"col-md-4\" [(ngModel)]=\"companyPenalty.company\" [ngModelOptions]=\"{standalone: true}\"\n                [compareWith]=\"compareCompany\">\n                <mat-option *ngFor=\"let i of companyList\" [value]=\"i\" name=\"company\">\n                    {{ i?.companyName | uppercase }}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\" *ngIf=\"penaltyCompany !== undefined\">\n            <mat-label>Company</mat-label>\n            <input matInput name=\"penaltyCompany\" [(ngModel)]=\"penaltyCompany\" [ngModelOptions]=\"{standalone: true}\"\n                readonly>\n        </mat-form-field>\n\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\" *ngIf=\"totalBalance === undefined || totalBalance === 0\">\n            <mat-label>Accumulated Amount Due</mat-label>\n            <input matInput name=\"amount\" [(ngModel)]=\"companyPenalty.penaltyAmount\"\n                [ngModelOptions]=\"{standalone: true}\" type=\"text\" (keydown)=\"validateFieldService.numbersOnly($event)\">\n        </mat-form-field>\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\" *ngIf=\"totalBalance !== undefined && totalBalance > 0\">\n            <mat-label>Accumulated Amount Due</mat-label>\n            <input matInput name=\"totalBalance\" [(ngModel)]=\"totalBalance\" [ngModelOptions]=\"{standalone: true}\"\n                readonly>\n        </mat-form-field>\n\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\" *ngIf=\"previewRemarks === undefined || previewRemarks === ''\">\n            <mat-label>Remarks</mat-label>\n            <textarea matInput name=\"remarks\" [(ngModel)]=\"companyPenalty.remarks\" [readonly]=\"process==='update'\"\n                [ngModelOptions]=\"{standalone: true}\" [readonly]=\"companyPenalty?.paymentStatus === 'PAID'\"></textarea>\n        </mat-form-field>\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\" *ngIf=\"previewRemarks !== undefined && previewRemarks !== ''\">\n            <mat-label>Remarks</mat-label>\n            <input matInput name=\"previewRemarks\" [(ngModel)]=\"previewRemarks\" [ngModelOptions]=\"{standalone: true}\"\n                readonly>\n        </mat-form-field>\n\n        <hr *ngIf=\"process==='update'\">\n\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\" *ngIf=\"process==='update'\">\n            <mat-label>Payment Mode</mat-label>\n            <mat-select class=\"col-md-4\" [(ngModel)]=\"paymentMethod.paymentType\" name=\"paymentType\"\n                [compareWith]=\"comparePaymentMethod\" [disabled]=\"companyPenalty?.paymentStatus === 'PAID'\">\n                <mat-option *ngFor=\"let i of paymentTypeList\" [value]=\"i\" name=\"paymentType\">\n                    {{ i?.paymentDescription | uppercase }}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\" *ngIf=\"process==='update'\">\n            <mat-label>Amount Received</mat-label>\n            <input matInput name=\"amount\" [(ngModel)]=\"paymentMethod.amount\" [ngModelOptions]=\"{standalone: true}\"\n                type=\"text\" (keydown)=\"validateFieldService.numbersOnly($event)\" [readonly]=\"companyPenalty?.paymentStatus === 'PAID'\">\n        </mat-form-field>\n\n        <br><br>\n\n        <button mat-raised-button class=\"button-right button-red\" (click)=\"addPenalty('Company')\"\n            *ngIf=\"process==='save' && companyPenalty?.paymentStatus !== 'PAID'\">\n            <i class=\"material-icons color__white\">task_alt</i> SUBMIT\n        </button>\n        <button mat-raised-button class=\"button-right button-red button-right__approve\" (click)=\"approvePenalty()\"\n            *ngIf=\"process==='update' && companyPenalty?.paymentStatus !== 'PAID'\">\n            <i class=\"material-icons color__white\">task_alt</i> APPROVE\n        </button>\n\n    </div>\n</ng-template>\n","import { Company } from '@models'\nimport { Affiliation } from './affiliation.model';\nimport { ApplicationType } from './application-type.model'\nimport { Brand } from './brand.model'\nimport { Category } from './category.model';\nimport { Product } from './product.model';\nimport { S1Application } from './s1-application.model';\nimport { UserAccount } from './user-account.model'\n\nexport class ApplicationRequest {\n    id: number;\n    adTitle: string;\n    applicationOwner: UserAccount;\n    applicationType: ApplicationType;\n    brand: Brand;\n    company: Company;\n    status: string;\n    submissionDate: Date;\n    tagLine: string\n    submitApplicationForm: boolean;\n    formType: string;\n    hasSpecialClearing: boolean;\n    applicationForm: S1Application;\n    product: Product;\n}\n","export class Profile {\n    id: number;\n    name: string;\n}\n","import { S1Application } from './s1-application.model';\nimport { S2Application } from './s2-application.model';\n\nexport class AttachmentDocument {\n    id: number;\n    applicationId: S1Application;\n    applicationS2Id: S2Application;\n    attachmentType: string; // MAIN, SUPPORTIVE, PAYMENT\n    autoSubmit: boolean;\n    brandPenaltyAttachmentReference: string;\n    documentFormat: string;\n    fileExtension: string;\n    fileURL: string;\n    filename: string;\n    mainAttachmentReference: string;\n    supportingAttachmentReference: string;\n    paymentAttachmentReference: string;\n    revisionLetterAttachmentReference: string;\n    finalMaterialAttachmentReference: string;\n    originalFilename: string;\n    status: string;\n    submissionType: string; // ORIGINAL, REVISION, COMPLIANCE, TOA\n    voucherAttachmentReference: string;\n    applicationFormId: string; // for compliance used only\n    applicationForm: string;\n    appFormReference: string;\n    modifiedApprovedS1AttachmentReference: string;\n    fileSize: number\n\n    createdBy: string;\n    createdDate: Date;\n    modifiedBy: string;\n    modifiedDate: Date;\n}\n","import { Product } from './product.model';\n\nexport class Category {\n    id: number;\n    description: string;\n    status: string;\n}\n","import { TypeOfDocument } from './type-of-document.model';\nimport { S1Application } from './s1-application.model';\n\nexport class SupportingDocument {\n    id: number;\n    appFormReference: S1Application;\n    typeOfDocument: TypeOfDocument;\n    basedOn: string;\n    variant: string;\n    dateOfLaunch: Date;\n    expiresOn: Date;\n    remarks: string;\n    input: string;\n\n    createdBy: string;\n    createdDate: Date;\n    modifiedBy: string;\n    modifiedDate: Date;\n}\n","export class UserRole {\n    id: number;\n    name: string;\n    status: string;\n}\n","export class PaymentType {\n    id: number;\n    amount: boolean;\n    bankBranch: boolean;\n    bankName: boolean;\n    controlNo: boolean;\n    fundTransferDate: boolean;\n    paymentDescription: string;\n    promisorryDate: boolean;\n    referenceNo: boolean;\n    status: string;\n}\n","export class OrPreparationReference {\n    id: number;\n    reference: string;\n    amount: number;\n}","export class PerformanceMetrics {\n    id: number;\n    referenceCode: string;\n    appFormReference: string;\n    movement: string;\n    actionBy: string;\n    userRole: string;\n    currentDateTime: Date;\n    previousDateTime: Date;\n    duration: string;\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AddPenaltyComponent } from './add-penalty.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component : AddPenaltyComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AddPenaltyRoutingModule { }\n","import { PaymentType } from \"./payment-type.model\";\n\nexport class PaymentMethod {\n    id: number;\n    paymentType: PaymentType;\n    referenceNo: string;\n    controlNo: string;\n    paymentDate: Date;\n    amount: number;\n    bankName: string\n    bankBranch: string;\n    promisorryDate: Date;\n    ccConfirmationCode: string;\n    checkNo: string;\n}\n","export * from './affiliation.model';\nexport * from './brand.model';\nexport * from './company.model';\nexport * from './payment-type.model';\nexport * from './profile.model';\nexport * from './s1-application.model';\nexport * from './s2-application.model';\nexport * from './type-of-document.model';\nexport * from './type-of-medium.model';\nexport * from './type-of-reason.model';\nexport * from './user-role.model';\nexport * from './user-account.model';\nexport * from './attachment-document.model';\nexport * from './category.model';\nexport * from './product.model';\nexport * from './type-of-application.model';\nexport * from './asc-rate.model';\nexport * from './payment.model';\nexport * from './country.model';\nexport * from './performance-metrics.model';\nexport * from './or-preparation.model';\nexport * from './or-preparation-reference.model';\nexport * from './supporting-document.model';\nexport * from './application-single-media.model';\nexport * from './application-request.model';\nexport * from './application-multimedia.model';\n","export class Affiliation {\n    id: number;\n    description: string;\n    member: boolean;\n    status: string;\n}\n","import { Category, Product } from '@models';\n\nexport class Brand {\n    id: number;\n    description: string;\n    // product: Product;\n    // category: Category;\n    status: string;\n    penalty: boolean;\n  }\n","import { Affiliation } from './affiliation.model';\nimport { Country } from './country.model';\n\nexport class Company {\n    id: number;\n    companyName: string;\n    companyTelephoneNo: string;\n    companyTin: string;\n    country: Country;\n    status: string;\n    completeAddress: string;\n    voucherApproved: boolean\n    membersAffiliation: Affiliation;\n    delinquent: boolean;\n    contactPersonEmail: string;\n    contactPersonName: string;\n    amountToSettle: number;\n    companyMobileNo: string;\n    companyTelephoneNo2: string;\n}\n","import { Brand } from \"./brand.model\";\nimport { PaymentMethod } from \"./payment-method.model\";\n\nexport class BrandPenalty {\n    id: number;\n    amount: number;\n    brand: Brand;\n    brandPenaltyAttachmentReference: string;\n    paidDate: Date;\n    paymentMethod: PaymentMethod;\n    paymentStatus: string;\n    penaltyDate: Date;\n    remarks: string;\n    status: string;\n}"],"sourceRoot":"webpack:///"}