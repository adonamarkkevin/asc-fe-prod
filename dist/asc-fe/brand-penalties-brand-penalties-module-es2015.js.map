{"version":3,"sources":["./src/app/modules/pages/maintenance/brand-penalties/brand-penalties-routing.module.ts","./src/app/modules/fragments/index.ts","./src/app/modules/pages/maintenance/brand-penalties/brand-penalties.module.ts","./src/app/modules/pages/maintenance/brand-penalties/brand-penalties.component.ts","./src/app/modules/pages/maintenance/brand-penalties/brand-penalties.component.html"],"names":[],"mappings":"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","file":"brand-penalties-brand-penalties-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { BrandPenaltiesComponent } from './brand-penalties.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: BrandPenaltiesComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class BrandPenaltiesRoutingModule { }\n","export * from './form-action-buttons/form-action-buttons.component';\nexport * from './form-list/form-list.component';","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { BrandPenaltiesRoutingModule } from './brand-penalties-routing.module';\nimport { BrandPenaltiesComponent } from './brand-penalties.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { AngularMaterialModule } from '@shared';\nimport { FragmentsModule } from 'app/modules/fragments/fragments.module';\n\n\n@NgModule({\n  declarations: [BrandPenaltiesComponent],\n  imports: [\n    CommonModule,\n    BrandPenaltiesRoutingModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    AngularMaterialModule,\n    FragmentsModule\n  ]\n})\nexport class BrandPenaltiesModule { }\n","import { DatePipe } from '@angular/common';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Router } from '@angular/router';\nimport { FormListComponent } from '@fragments';\nimport { Brand } from '@models';\nimport { ApiService, SweetAlertService } from '@services';\nimport { ENDPOINTS } from '@shared';\nimport { BrandPenalties } from 'app/core/models/brand-penalties.model';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-brand-penalties',\n  templateUrl: './brand-penalties.component.html',\n  styleUrls: ['./brand-penalties.component.scss']\n})\nexport class BrandPenaltiesComponent implements OnInit {\n  @ViewChild(FormListComponent) formListComponent: FormListComponent\n  dataSource: MatTableDataSource<BrandPenalties>;\n  // displayedColumns: string[] = ['brandDescription', 'brandPenaltyAmount', 'deleteIcon'];\n  displayedColumns: string[] = ['brandDescription', 'brandPenaltyAmount'];\n  brandPenalties = new BrandPenalties();\n  brand = new Brand();\n  brandPenaltiesList = [];\n  brandList = [];\n  brandPenaltiesForm: FormGroup;\n\n  constructor(\n    private router: Router,\n    private apiService: ApiService,\n    private formBuilder: FormBuilder,\n    private sweetAlertService: SweetAlertService,\n    public datepipe: DatePipe\n  ) { }\n\n  ngOnInit(): void {\n    this.setFormValidator();\n    this.getBrandList();\n    this.getBrandPenaltiesList();\n  }\n\n  getBrandPenaltiesList(): void {\n    this.apiService.findAll(ENDPOINTS.brandPenalties).subscribe(\n      (res: any) => {\n        if (res) {\n          this.brandPenaltiesList = res.responseData.data;\n          this.dataSource = new MatTableDataSource<BrandPenalties>(res.responseData.data);\n          this.dataSource.paginator = this.formListComponent.paginator;\n          this.dataSource.sort = this.formListComponent.sort;\n          this.brand = new Brand();\n          this.brand = this.brandPenalties.brand;\n          if (this.brand) {\n            this.brand.penalty = false\n            const withPenalty = this.brandPenaltiesList\n              .filter(filteredPenalties => filteredPenalties?.brand?.id === this.brand?.id).length === 0;\n            if (withPenalty) {\n              this.apiService.update(ENDPOINTS.brand, this.brand).subscribe();\n            }\n          }\n        }\n      }, err => {\n        console.log(err);\n      }, () => {\n        this.resetFormValidator();\n      });\n  }\n\n  getBrandPenalties(): void {\n    this.apiService.findById(ENDPOINTS.brandPenalties, this.formListComponent.idForUpdate).subscribe((res: any) => {\n      if (res) {\n        this.brandPenalties = res.responseData.data;\n      }\n    });\n\n  }\n\n  getBrandList(): void {\n    this.apiService.findAll(ENDPOINTS.activeBrands).subscribe(\n      (res: any) => {\n        if (res) {\n          this.brandList = res.responseData.data;\n        }\n      });\n  }\n\n  save(): void {\n    this.formatDate();\n    this.apiService.save(ENDPOINTS.brandPenalties, this.brandPenalties).subscribe(\n      (res: any) => {\n        if (res) {\n          this.sweetAlertService.success(res);\n          this.router.navigate(['asc/page/maintenance/brand-penalties']);\n        } else {\n          this.sweetAlertService.error(res);\n        }\n        this.getBrandPenaltiesList();\n      });\n  }\n\n  update(): void {\n    this.apiService.update(ENDPOINTS.brandPenalties, this.brandPenalties).subscribe(\n      (res: any) => {\n        if (res) {\n          this.sweetAlertService.success(res);\n          this.router.navigate(['asc/page/maintenance/brand-penalties']);\n        } else {\n          this.sweetAlertService.error(res);\n        }\n        this.getBrandPenaltiesList();\n      });\n  }\n\n  setFormValidator(): void {\n    this.brandPenaltiesForm = this.formBuilder.group({\n      brand: ['', Validators.required],\n      amount: ['', Validators.required],\n      // penaltyDate: ['', Validators.required],\n    });\n  }\n\n  resetFormValidator(): void {\n    this.brandPenalties = new BrandPenalties();\n    this.brandPenaltiesForm.markAsUntouched();\n    this.brandPenaltiesForm.markAsPristine();\n  }\n\n  compareBrandPenalties(value: any, selected: any): boolean {\n    if (value && selected) {\n      return value.description === selected.description;\n    }\n  }\n\n  formatDate(): void {\n    // this.brandPenalties.penaltyDate = this.datepipe.transform(new Date(), 'yyyy-MM-dd')\n    this.datepipe.transform(this.brandPenalties.penaltyDate, 'yyyy-MM-dd')\n  }\n\n  test() {\n    alert(this.brandPenalties.penaltyDate)\n  }\n\n  delete() {\n    Swal.fire({\n      text: 'Are you sure you want to delete this brand penalty?',\n      icon: 'question',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Confirm'\n    }).then((result) => {\n      if (result.value) {\n        this.apiService.deleteById(ENDPOINTS.brandPenalties, this.brandPenalties.id).subscribe(\n          () => {\n            this.sweetAlertService.customSuccessMessage('Brand penalty successfully deleted.');\n            this.getBrandList();\n            this.getBrandPenaltiesList();\n          }\n        );\n      }\n    });\n  }\n\n}\n","<form>\n    <div class=\"container-fluid\">\n      <div class=\"row\">\n        <div class=\"col-md-12 title\">\n          <mat-label>\n            <mat-icon>turned_in</mat-icon> Brand Penalties\n          </mat-label>\n        </div>\n      </div>\n      <hr>\n\n      <form [formGroup]=\"brandPenaltiesForm\">\n\n        <div class=\"row\">\n\n          <mat-form-field class=\"col-md-6\" appearance=\"outline\">\n            <mat-label>Brand <span class=\"required-field\">*</span></mat-label>\n            <mat-select [(ngModel)]=\"brandPenalties.brand\" name=\"brand\" formControlName=\"brand\" [compareWith]=\"compareBrandPenalties\">\n              <mat-option *ngFor=\"let i of brandList\" [value]=\"i\">\n                {{i.description}}\n              </mat-option>\n            </mat-select>\n          </mat-form-field>\n\n          <mat-form-field class=\"col-md-6\" appearance=\"outline\">\n            <mat-label>Penalty Amount <span class=\"required-field\">*</span></mat-label>\n            <input matInput [(ngModel)]=\"brandPenalties.amount\" name=\"amount\" formControlName=\"amount\">\n        </mat-form-field>\n        </div>\n\n        <div class=\"row\">\n            <!-- <mat-form-field class=\"col-md-6\" appearance=\"outline\">\n            <mat-label>Choose date penalty</mat-label>\n            <input matInput [matDatepicker]=\"picker\" readonly [(ngModel)]=\"brandPenalties.penaltyDate\" name=\"penaltyDate\"\n              formControlName=\"penaltyDate\" (dateChange)=\"test()\">\n            <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n            <mat-datepicker #picker disabled=\"false\" color=\"warn\"></mat-datepicker>\n          </mat-form-field> -->\n        </div>\n\n      </form>\n\n      <app-form-action-buttons [childObject]=\"brandPenalties\" [childForm]=\"brandPenaltiesForm\" (saveFunction)=\"save()\" (updateFunction)=\"update()\"\n              (cancelFunction)=\"resetFormValidator()\" (deleteFunction)=\"delete()\">\n      </app-form-action-buttons>\n      <br>\n      <app-form-list [dataSource]=\"dataSource\" [displayedColumns]=\"displayedColumns\"\n          (selectInListFunction)=\"getBrandPenalties()\">\n      </app-form-list>\n\n    </div>\n  </form>\n"],"sourceRoot":"webpack:///"}