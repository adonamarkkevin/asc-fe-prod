{"version":3,"sources":["./src/app/modules/pages/account/user-role/user-role.module.ts","./src/app/modules/pages/account/user-role/user-role-routing.module.ts","./src/app/modules/pages/account/user-role/user-role.component.ts","./src/app/modules/pages/account/user-role/user-role.component.html"],"names":[],"mappings":"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","file":"default~modules-pages-landing-page-landing-page-module~user-role-user-role-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { UserRoleRoutingModule } from './user-role-routing.module';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { AngularMaterialModule } from '@shared';\r\nimport { UserRoleComponent } from './user-role.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [UserRoleComponent],\r\n  imports: [\r\n    CommonModule,\r\n    UserRoleRoutingModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule,\r\n    AngularMaterialModule\r\n  ]\r\n})\r\nexport class UserRoleModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { UserRoleComponent } from './user-role.component';\r\n\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: UserRoleComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class UserRoleRoutingModule { }\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTable, MatTableDataSource } from '@angular/material/table';\r\nimport { UserRole } from '@models';\r\nimport { ApiService, SweetAlertService } from '@services';\r\nimport { COMMON_FUNCTION, ENDPOINTS, ROLES, STATUSES } from '@shared';\r\n\r\n@Component({\r\n  selector: 'app-user-role',\r\n  templateUrl: './user-role.component.html',\r\n  styleUrls: ['./user-role.component.scss']\r\n})\r\nexport class UserRoleComponent implements OnInit {\r\n\r\n  @ViewChild(MatPaginator, { static: false }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: false }) sort: MatSort;\r\n  @ViewChild(MatTable, { static: false }) table: MatTable<UserRole>;\r\n  dataSource: MatTableDataSource<UserRole>;\r\n  displayedColumns: string[] = ['name', 'status'];\r\n  statusList = [...STATUSES];\r\n  roleList = [...ROLES];\r\n\r\n  userRole = new UserRole();\r\n  userRoleList = [];\r\n\r\n  userRoleForm: FormGroup;\r\n\r\n  name: any; // in html but not existing in component -- encountered during \"ng serve --aot\"\r\n\r\n  constructor(\r\n    private apiService: ApiService,\r\n    private formBuilder: FormBuilder,\r\n    private sweetAlertService: SweetAlertService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getList();\r\n    this.setFormValidator();\r\n  }\r\n\r\n  getList(): void {\r\n    this.apiService.findAll(ENDPOINTS.roles).subscribe((res: any) => {\r\n      console.log(res.responseData.data);\r\n\r\n      this.userRoleList = res.responseData.data;\r\n      this.dataSource = new MatTableDataSource<UserRole>(this.userRoleList);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    }, (err: any) => {\r\n    });\r\n  }\r\n\r\n  save(): void {\r\n    this.apiService.save(ENDPOINTS.roles, this.userRole).subscribe(\r\n      (res: any) => {\r\n        if (res !== undefined) {\r\n          this.sweetAlertService.success(res);\r\n        }\r\n      }, (err: any) => {\r\n        this.sweetAlertService.error(err);\r\n      }, () => {\r\n        // actions after subscription\r\n        this.resetFormValidator();\r\n        this.getList();\r\n      });\r\n  }\r\n\r\n  getUserRole(name): void {\r\n    this.apiService.findAll(ENDPOINTS.roles+'/role-name/'+ name).subscribe((res: any) => {\r\n      if (res) {\r\n        this.userRole = res;\r\n      }\r\n    }, (err: any) => {\r\n      this.userRole = err.error;\r\n    });\r\n  }\r\n\r\n  update(): void {\r\n    this.apiService.update(ENDPOINTS.roles, this.userRole).subscribe(\r\n      (res: any) => {\r\n        if (res !== undefined) {\r\n          this.sweetAlertService.success(res);\r\n        }\r\n      }, (err: any) => {\r\n        this.sweetAlertService.error(err);\r\n      }, () => {\r\n        // actions after subscription\r\n        this.resetFormValidator();\r\n        this.getList();\r\n      });\r\n  }\r\n\r\n  setFormValidator(): void {\r\n    this.userRole.status = COMMON_FUNCTION.ACTIVE;\r\n    this.userRoleForm = this.formBuilder.group({\r\n      name: ['', Validators.required],\r\n      status: [''],\r\n    });\r\n  }\r\n\r\n  resetFormValidator(): void {\r\n    this.userRole = new UserRole();\r\n    this.userRole.status = COMMON_FUNCTION.ACTIVE;\r\n    this.userRoleForm.markAsUntouched();\r\n    this.userRoleForm.markAsPristine();\r\n  }\r\n\r\n}\r\n","<form>\r\n    <div class=\"container-fluid\">\r\n      <div class=\"row\">\r\n        <div class=\"col-md-12 title\">\r\n          <mat-label>\r\n            <mat-icon>settings_accessibility</mat-icon> User Role\r\n          </mat-label>\r\n        </div>\r\n      </div>\r\n      <hr>\r\n\r\n      <form [formGroup]=\"userRoleForm\">\r\n        <div class=\"row\">\r\n          <mat-form-field class=\"col-md-8\" appearance=\"outline\">\r\n            <!-- <mat-label>User Role: <span class=\"required-field\">*</span></mat-label>\r\n            <input matInput [(ngModel)]=\"userRole.name\" name=\"name\" formControlName=\"name\"> -->\r\n            <mat-label>User Role</mat-label>\r\n            <mat-select [(ngModel)]=\"userRole.name\" name=\"name\" formControlName=\"name\">\r\n              <mat-option *ngFor=\"let i of roleList\" [value]=\"i.role\">\r\n                {{ i?.role?.replaceAll('_', (' '))?.replace('ENCODER', 'EVALUATOR') }}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field class=\"col-md-4\" appearance=\"outline\">\r\n            <mat-label>Status</mat-label>\r\n            <mat-select [(ngModel)]=\"userRole.status\" name=\"status\" formControlName=\"status\">\r\n              <mat-option *ngFor=\"let i of statusList\" [value]=\"i.status\">\r\n                {{i.status}}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n      </form>\r\n\r\n      <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n          <!-- <button mat-raised-button color=\"primary\" (click)=\"save()\" *ngIf=\"!name?.id\" [disabled]=\"!(userRoleForm.valid)\">\r\n            <mat-icon>save</mat-icon> SAVE\r\n          </button> -->\r\n          <button mat-raised-button color=\"primary\" (click)=\"update()\" *ngIf=\"userRole?.id\" [disabled]=\"!(userRoleForm.valid)\">\r\n            <mat-icon>task_alt </mat-icon> UPDATE\r\n          </button>\r\n          <button mat-raised-button color=\"warn\" (click)=\"resetFormValidator()\" *ngIf=\"userRole?.id || userRole?.name\">\r\n            <mat-icon>{{ userRole?.id ? 'cancel' : 'refresh' }}</mat-icon> {{ userRole?.id ? 'CANCEL' : 'RESET' }}\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <br>\r\n\r\n      <div class=\"mat-elevation-z8\">\r\n        <table mat-table [dataSource]=\"dataSource\" matSort>\r\n\r\n          <!--- Note that these columns can be defined in any order.\r\n                  The actual rendered columns are set as a property on the row definition\" -->\r\n\r\n          <!-- Position Column -->\r\n          <ng-container matColumnDef=\"name\">\r\n            <th mat-header-cell *matHeaderCellDef> User Role </th>\r\n            <td mat-cell *matCellDef=\"let element\" (click)=\"getUserRole(element?.name)\"> {{ element?.name?.replaceAll('_', ' ')?.replace('ENCODER', 'EVALUATOR') }} </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"status\">\r\n            <th mat-header-cell *matHeaderCellDef> Status </th>\r\n            <td mat-cell *matCellDef=\"let element\" (click)=\"getUserRole(element?.name)\">\r\n              <span *ngIf=\"element?.status == 'ACTIVE'\" class=\"badge rounded-pill bg-success\">{{ element?.status }}</span>\r\n              <span *ngIf=\"element?.status != 'ACTIVE'\" class=\"badge rounded-pill bg-danger\">{{ element?.status }}</span>\r\n            </td>\r\n          </ng-container>\r\n\r\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n          <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n        </table>\r\n        <div class=\"no-record\" [hidden]=\"dataSource && dataSource?.data?.length > 0\">\r\n          No record found.\r\n        </div>\r\n        <mat-paginator [pageSizeOptions]=\"[10, 20, 30]\" showFirstLastButtons></mat-paginator>\r\n\r\n      </div>\r\n\r\n    </div>\r\n  </form>\r\n"],"sourceRoot":"webpack:///"}