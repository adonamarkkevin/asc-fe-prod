{"version":3,"sources":["webpack:///src/app/modules/pages/maintenance/type-of-document/type-of-document.component.ts","webpack:///src/app/modules/pages/maintenance/type-of-document/type-of-document.component.html"],"names":["TypeOfDocumentComponent","apiService","formBuilder","sweetAlertService","displayedColumns","typeOfDocument","typeOfDocumentList","statusList","isChecked","hasInput","getList","setFormValidator","findAll","subscribe","res","responseData","data","dataSource","paginator","formListComponent","sort","save","undefined","success","err","error","resetFormValidator","findById","idForUpdate","update","status","ACTIVE","typeOfDocumentForm","group","description","required","dateOfLaunchEnable","expiresOnEnable","basedOnEnable","variantEnable","remarksEnable","inputEnable","markAsUntouched","markAsPristine","fire","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","value","deleteById","id","customSuccessMessage","getTypeOfDocument"],"mappings":"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","file":"default~applications-applications-module~type-of-document-type-of-document-module-es5.js","sourcesContent":["import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { TypeOfDocument } from '@models';\nimport { COMMON_FUNCTION, ENDPOINTS, STATUSES } from '@shared';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ApiService, SweetAlertService } from '@services';\nimport { FormListComponent } from '@fragments';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-type-of-document',\n  templateUrl: './type-of-document.component.html',\n  styleUrls: ['./type-of-document.component.scss']\n})\nexport class TypeOfDocumentComponent implements OnInit {\n\n  @ViewChild(FormListComponent) formListComponent: FormListComponent;\n  dataSource: MatTableDataSource<TypeOfDocument>;\n  displayedColumns: string[] = ['typeOfDocumentDesc', 'dateOfLaunchEnable', 'expiresOnEnable', 'basedOnEnable', 'variantEnable', 'remarksEnable', 'inputEnable', 'status'];\n  \n  typeOfDocument = new TypeOfDocument();\n  typeOfDocumentList = [];\n  statusList = [...STATUSES];\n\n  isChecked = false;\n\n  typeOfDocumentForm: FormGroup;\n  hasInput = false;\n\n  constructor(\n    private apiService: ApiService,\n    private formBuilder: FormBuilder,\n    private sweetAlertService: SweetAlertService\n  ) { }\n\n  ngOnInit() {\n    this.getList();\n    this.setFormValidator();\n  }\n\n  getList(): void {\n    this.apiService.findAll(ENDPOINTS.typeOfDocument).subscribe((res: any) => {\n      this.typeOfDocumentList = res.responseData.data;\n      this.dataSource = new MatTableDataSource<TypeOfDocument>(res.responseData.data);\n      this.dataSource.paginator = this.formListComponent.paginator;\n      this.dataSource.sort = this.formListComponent.sort;\n    });\n  }\n\n  save(): void {\n    this.apiService.save(ENDPOINTS.typeOfDocument, this.typeOfDocument).subscribe(\n      (res: any) => {\n        if (res !== undefined) {\n          this.sweetAlertService.success(res);\n        }\n      }, (err: any) => {\n        this.sweetAlertService.error(err);\n      }, () => {\n        // actions after subscription\n        this.resetFormValidator();\n        this.getList();\n      });\n  }\n\n  getTypeOfDocument(): void {\n    this.apiService.findById(ENDPOINTS.typeOfDocument, this.formListComponent.idForUpdate).subscribe((res: any) => {\n      if (res) {\n        this.typeOfDocument = res.responseData.data;\n      }\n    });\n  }\n\n  update(): void {\n    this.apiService.update(ENDPOINTS.typeOfDocument, this.typeOfDocument).subscribe(\n      (res: any) => {\n        if (res !== undefined) {\n          this.sweetAlertService.success(res);\n        }\n      }, (err: any) => {\n        this.sweetAlertService.error(err);\n      }, () => {\n        // actions after subscription\n        this.resetFormValidator();\n        this.getList();\n      });\n  }\n\n  setCheckboxValue() {\n    this.isChecked = !this.isChecked;\n  }\n\n  setFormValidator(): void {\n    this.typeOfDocument.status = COMMON_FUNCTION.ACTIVE;\n    this.typeOfDocumentForm = this.formBuilder.group({\n      description: ['', Validators.required],\n      dateOfLaunchEnable: [''],\n      expiresOnEnable: [''],\n      basedOnEnable: [''],\n      variantEnable: [''],\n      remarksEnable: [''],\n      inputEnable: [''],\n      status: [''],\n    });\n  }\n\n  resetFormValidator(): void {\n    this.typeOfDocument = new TypeOfDocument();\n    this.typeOfDocument.status = COMMON_FUNCTION.ACTIVE;\n    this.typeOfDocumentForm.markAsUntouched();\n    this.typeOfDocumentForm.markAsPristine();\n  }\n\n  delete() {\n    Swal.fire({\n      text: 'Are you sure you want to delete this type of document?',\n      icon: 'question',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Confirm'\n    }).then((result) => {\n      if (result.value) {\n        this.apiService.deleteById(ENDPOINTS.typeOfDocument, this.typeOfDocument.id).subscribe(\n          () => {\n            this.sweetAlertService.customSuccessMessage('Type of document successfully deleted.');\n            this.resetFormValidator();\n            this.getList();\n          }\n        );\n      }\n    });\n  }\n\n}\n","<form>\n  <div class=\"container-fluid\">\n    <div class=\"row\">\n      <div class=\"col-md-12 title\">\n        <mat-label>\n          <mat-icon>file_present</mat-icon> Type of Document\n        </mat-label>\n      </div>\n    </div>\n    <hr>\n\n    <form [formGroup]=\"typeOfDocumentForm\">\n      <div class=\"row\">\n        <mat-form-field class=\"col-md-8\" appearance=\"outline\">\n          <mat-label>Type of Document:<span class=\"required-field\">*</span></mat-label>\n          <input matInput [(ngModel)]=\"typeOfDocument.description\" name=\"description\" formControlName=\"description\">\n        </mat-form-field>\n\n        <mat-form-field class=\"col-md-4\" appearance=\"outline\" *ngIf=\"typeOfDocument.id\">\n          <mat-label>Status</mat-label>\n          <mat-select [(ngModel)]=\"typeOfDocument.status\" name=\"status\" formControlName=\"status\">\n            <mat-option *ngFor=\"let i of statusList\" [value]=\"i.status\">\n              {{i.status}}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n      </div>\n\n      <div class=\"row\">\n        <mat-slide-toggle class=\"col-md-5\" [(ngModel)]=\"typeOfDocument.dateOfLaunchEnable\" [checked]=\"typeOfDocument.dateOfLaunchEnable\" color=\"warn\" formControlName=\"dateOfLaunchEnable\"><b>Has Date of Launch</b>\n        </mat-slide-toggle>\n        <mat-slide-toggle class=\"col-md-5\" [(ngModel)]=\"typeOfDocument.expiresOnEnable\" [checked]=\"typeOfDocument.expiresOnEnable\" color=\"warn\" formControlName=\"expiresOnEnable\"><b>Has Expiration Date</b>\n        </mat-slide-toggle>\n      <br>\n        <mat-slide-toggle class=\"col-md-5\" [(ngModel)]=\"typeOfDocument.basedOnEnable\" [checked]=\"typeOfDocument.basedOnEnable\" color=\"warn\" formControlName=\"basedOnEnable\"><b>Has Basis</b></mat-slide-toggle>\n        <mat-slide-toggle class=\"col-md-5\" [(ngModel)]=\"typeOfDocument.variantEnable\" [checked]=\"typeOfDocument.variantEnable\" color=\"warn\" formControlName=\"variantEnable\"><b>Has Variant</b>\n        </mat-slide-toggle>\n      <br>\n        <mat-slide-toggle class=\"col-md-5\" [(ngModel)]=\"typeOfDocument.remarksEnable\" [checked]=\"typeOfDocument.remarksEnable\" color=\"warn\" formControlName=\"remarksEnable\"><b>Has Remarks</b></mat-slide-toggle>\n        <mat-slide-toggle class=\"col-md-5\" [(ngModel)]=\"typeOfDocument.inputEnable\" [checked]=\"typeOfDocument.inputEnable\" color=\"warn\" formControlName=\"inputEnable\"><b>Has Input</b></mat-slide-toggle>\n      </div>\n    </form>\n\n    <app-form-action-buttons [childObject]=\"typeOfDocument\" [childForm]=\"typeOfDocumentForm\" (saveFunction)=\"save()\"\n      (updateFunction)=\"update()\" (cancelFunction)=\"resetFormValidator()\" (deleteFunction)=\"delete()\"></app-form-action-buttons>\n    <br>\n    <app-form-list [dataSource]=\"dataSource\" [displayedColumns]=\"displayedColumns\"\n      (selectInListFunction)=\"getTypeOfDocument()\"></app-form-list>\n  </div>\n</form>\n"]}