{"version":3,"sources":["webpack:///src/app/modules/pages/maintenance/type-of-document/type-of-document.component.ts","webpack:///src/app/modules/pages/maintenance/type-of-document/type-of-document.component.html"],"names":["TypeOfDocumentComponent","apiService","formBuilder","sweetAlertService","displayedColumns","typeOfDocument","typeOfDocumentList","statusList","isChecked","hasInput","getList","setFormValidator","findAll","subscribe","res","responseData","data","dataSource","paginator","formListComponent","sort","filter","document","description","toLowerCase","length","isExistingDocument","customErrorMessage","save","undefined","success","err","error","resetFormValidator","findById","idForUpdate","update","status","ACTIVE","typeOfDocumentForm","group","required","dateOfLaunchEnable","expiresOnEnable","basedOnEnable","variantEnable","remarksEnable","inputEnable","markAsUntouched","markAsPristine","fire","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","value","deleteById","id","customSuccessMessage","getTypeOfDocument"],"mappings":"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","file":"default~applications-applications-module~type-of-document-type-of-document-module-es5.js","sourcesContent":["import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { TypeOfDocument } from '@models';\r\nimport { COMMON_FUNCTION, ENDPOINTS, STATUSES } from '@shared';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ApiService, SweetAlertService } from '@services';\r\nimport { FormListComponent } from '@fragments';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-type-of-document',\r\n  templateUrl: './type-of-document.component.html',\r\n  styleUrls: ['./type-of-document.component.scss']\r\n})\r\nexport class TypeOfDocumentComponent implements OnInit {\r\n\r\n  @ViewChild(FormListComponent) formListComponent: FormListComponent;\r\n  dataSource: MatTableDataSource<TypeOfDocument>;\r\n  displayedColumns: string[] = ['typeOfDocumentDesc', 'dateOfLaunchEnable', 'expiresOnEnable', 'basedOnEnable', 'variantEnable', 'remarksEnable', 'inputEnable', 'status'];\r\n  \r\n  typeOfDocument = new TypeOfDocument();\r\n  typeOfDocumentList = [];\r\n  statusList = [...STATUSES];\r\n\r\n  isChecked = false;\r\n\r\n  typeOfDocumentForm: FormGroup;\r\n  hasInput = false;\r\n\r\n  constructor(\r\n    private apiService: ApiService,\r\n    private formBuilder: FormBuilder,\r\n    private sweetAlertService: SweetAlertService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.getList();\r\n    this.setFormValidator();\r\n  }\r\n\r\n  getList(): void {\r\n    this.apiService.findAll(ENDPOINTS.typeOfDocument).subscribe((res: any) => {\r\n      this.typeOfDocumentList = res.responseData.data;\r\n      this.dataSource = new MatTableDataSource<TypeOfDocument>(res.responseData.data);\r\n      this.dataSource.paginator = this.formListComponent.paginator;\r\n      this.dataSource.sort = this.formListComponent.sort;\r\n    });\r\n  }\r\n\r\n  isExistingDocument(): boolean {\r\n    const data = this.typeOfDocumentList.filter((document) => {\r\n      return document?.description?.toLowerCase() === this.typeOfDocument?.description?.toLowerCase();\r\n    });\r\n    return data?.length > 0;\r\n  }\r\n\r\n  save(): void {\r\n    if (this.isExistingDocument()) {\r\n      return this.sweetAlertService.customErrorMessage('Document already exists', 2);\r\n    }\r\n\r\n    this.apiService.save(ENDPOINTS.typeOfDocument, this.typeOfDocument).subscribe(\r\n      (res: any) => {\r\n        if (res !== undefined) {\r\n          this.sweetAlertService.success(res);\r\n        }\r\n      }, (err: any) => {\r\n        this.sweetAlertService.error(err);\r\n      }, () => {\r\n        // actions after subscription\r\n        this.resetFormValidator();\r\n        this.getList();\r\n      });\r\n  }\r\n\r\n  getTypeOfDocument(): void {\r\n    this.apiService.findById(ENDPOINTS.typeOfDocument, this.formListComponent.idForUpdate).subscribe((res: any) => {\r\n      if (res) {\r\n        this.typeOfDocument = res.responseData.data;\r\n      }\r\n    });\r\n  }\r\n\r\n  update(): void {\r\n    if (this.isExistingDocument()) {\r\n      return this.sweetAlertService.customErrorMessage('Document already exists', 2);\r\n    }\r\n\r\n    this.apiService.update(ENDPOINTS.typeOfDocument, this.typeOfDocument).subscribe(\r\n      (res: any) => {\r\n        if (res !== undefined) {\r\n          this.sweetAlertService.success(res);\r\n        }\r\n      }, (err: any) => {\r\n        this.sweetAlertService.error(err);\r\n      }, () => {\r\n        // actions after subscription\r\n        this.resetFormValidator();\r\n        this.getList();\r\n      });\r\n  }\r\n\r\n  setCheckboxValue() {\r\n    this.isChecked = !this.isChecked;\r\n  }\r\n\r\n  setFormValidator(): void {\r\n    this.typeOfDocument.status = COMMON_FUNCTION.ACTIVE;\r\n    this.typeOfDocumentForm = this.formBuilder.group({\r\n      description: ['', Validators.required],\r\n      dateOfLaunchEnable: [''],\r\n      expiresOnEnable: [''],\r\n      basedOnEnable: [''],\r\n      variantEnable: [''],\r\n      remarksEnable: [''],\r\n      inputEnable: [''],\r\n      status: [''],\r\n    });\r\n  }\r\n\r\n  resetFormValidator(): void {\r\n    this.typeOfDocument = new TypeOfDocument();\r\n    this.typeOfDocument.status = COMMON_FUNCTION.ACTIVE;\r\n    this.typeOfDocumentForm.markAsUntouched();\r\n    this.typeOfDocumentForm.markAsPristine();\r\n  }\r\n\r\n  delete() {\r\n    Swal.fire({\r\n      text: 'Are you sure you want to delete this type of document?',\r\n      icon: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Confirm'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.apiService.deleteById(ENDPOINTS.typeOfDocument, this.typeOfDocument.id).subscribe(\r\n          () => {\r\n            this.sweetAlertService.customSuccessMessage('Type of document successfully deleted.');\r\n            this.resetFormValidator();\r\n            this.getList();\r\n          }\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<form>\r\n  <div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12 title\">\r\n        <mat-label>\r\n          <mat-icon>file_present</mat-icon> Type of Document\r\n        </mat-label>\r\n      </div>\r\n    </div>\r\n    <hr>\r\n\r\n    <form [formGroup]=\"typeOfDocumentForm\">\r\n      <div class=\"row\">\r\n        <mat-form-field class=\"col-md-8\" appearance=\"outline\">\r\n          <mat-label>Type of Document:<span class=\"required-field\">*</span></mat-label>\r\n          <input matInput [(ngModel)]=\"typeOfDocument.description\" name=\"description\" formControlName=\"description\">\r\n        </mat-form-field>\r\n\r\n        <mat-form-field class=\"col-md-4\" appearance=\"outline\" *ngIf=\"typeOfDocument.id\">\r\n          <mat-label>Status</mat-label>\r\n          <mat-select [(ngModel)]=\"typeOfDocument.status\" name=\"status\" formControlName=\"status\">\r\n            <mat-option *ngFor=\"let i of statusList\" [value]=\"i.status\">\r\n              {{i.status}}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <mat-slide-toggle class=\"col-md-5\" [(ngModel)]=\"typeOfDocument.dateOfLaunchEnable\" [checked]=\"typeOfDocument.dateOfLaunchEnable\" color=\"warn\" formControlName=\"dateOfLaunchEnable\"><b>Has Date of Launch</b>\r\n        </mat-slide-toggle>\r\n        <mat-slide-toggle class=\"col-md-5\" [(ngModel)]=\"typeOfDocument.expiresOnEnable\" [checked]=\"typeOfDocument.expiresOnEnable\" color=\"warn\" formControlName=\"expiresOnEnable\"><b>Has Expiration Date</b>\r\n        </mat-slide-toggle>\r\n      <br>\r\n        <mat-slide-toggle class=\"col-md-5\" [(ngModel)]=\"typeOfDocument.basedOnEnable\" [checked]=\"typeOfDocument.basedOnEnable\" color=\"warn\" formControlName=\"basedOnEnable\"><b>Has Basis</b></mat-slide-toggle>\r\n        <mat-slide-toggle class=\"col-md-5\" [(ngModel)]=\"typeOfDocument.variantEnable\" [checked]=\"typeOfDocument.variantEnable\" color=\"warn\" formControlName=\"variantEnable\"><b>Has Variant</b>\r\n        </mat-slide-toggle>\r\n      <br>\r\n        <mat-slide-toggle class=\"col-md-5\" [(ngModel)]=\"typeOfDocument.remarksEnable\" [checked]=\"typeOfDocument.remarksEnable\" color=\"warn\" formControlName=\"remarksEnable\"><b>Has Remarks</b></mat-slide-toggle>\r\n        <mat-slide-toggle class=\"col-md-5\" [(ngModel)]=\"typeOfDocument.inputEnable\" [checked]=\"typeOfDocument.inputEnable\" color=\"warn\" formControlName=\"inputEnable\"><b>Has Input</b></mat-slide-toggle>\r\n      </div>\r\n    </form>\r\n\r\n    <app-form-action-buttons [childObject]=\"typeOfDocument\" [childForm]=\"typeOfDocumentForm\" (saveFunction)=\"save()\"\r\n      (updateFunction)=\"update()\" (cancelFunction)=\"resetFormValidator()\" (deleteFunction)=\"delete()\"></app-form-action-buttons>\r\n    <br>\r\n    <app-form-list [dataSource]=\"dataSource\" [displayedColumns]=\"displayedColumns\"\r\n      (selectInListFunction)=\"getTypeOfDocument()\"></app-form-list>\r\n  </div>\r\n</form>\r\n"]}