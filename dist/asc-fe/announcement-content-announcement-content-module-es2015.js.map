{"version":3,"sources":["./src/app/modules/fragments/index.ts","./src/app/modules/pages/maintenance/announcement-content/announcement-content.component.scss","./src/app/modules/pages/maintenance/announcement-content/announcement-content-routing.module.ts","./src/app/modules/pages/maintenance/announcement-content/announcement-content.component.ts","./src/app/modules/pages/maintenance/announcement-content/announcement-content.module.ts","./src/app/modules/pages/maintenance/announcement-content/announcement-content.component.html"],"names":[],"mappings":"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","file":"announcement-content-announcement-content-module-es2015.js","sourcesContent":["export * from './form-action-buttons/form-action-buttons.component';\r\nexport * from './form-list/form-list.component';","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcGFnZXMvbWFpbnRlbmFuY2UvYW5ub3VuY2VtZW50LWNvbnRlbnQvYW5ub3VuY2VtZW50LWNvbnRlbnQuY29tcG9uZW50LnNjc3MifQ== */\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AnnouncementContentComponent } from './announcement-content.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AnnouncementContentComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AnnouncementContentRoutingModule { }\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { FormListComponent } from '@fragments';\r\nimport { ApiService, SweetAlertService } from '@services';\r\nimport { COMMON_FUNCTION, ENDPOINTS, STATUSES } from '@shared';\r\nimport { Announcement } from 'app/core/models/announcement.model';\r\nimport { DateService } from 'app/core/services/date.service';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-announcement-content',\r\n  templateUrl: './announcement-content.component.html',\r\n  styleUrls: ['./announcement-content.component.scss']\r\n})\r\nexport class AnnouncementContentComponent implements OnInit {\r\n\r\n  @ViewChild(FormListComponent) formListComponent: FormListComponent;\r\n  dataSource: MatTableDataSource<Announcement>;\r\n  displayedColumns: string[] = ['title', 'details', 'noOfView', 'postingDate', 'status'];\r\n  statusList = [...STATUSES];\r\n\r\n  announcement = new Announcement();\r\n  announcementList = [];\r\n\r\n  announcementForm: FormGroup;\r\n\r\n\r\n  constructor(\r\n    private apiService: ApiService,\r\n    private formBuilder: FormBuilder,\r\n    private sweetAlertService: SweetAlertService,\r\n    private dateService: DateService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.getList();\r\n    this.setFormValidator();\r\n  }\r\n\r\n  getList(): void {\r\n    this.apiService.findAll(ENDPOINTS.announcements).subscribe((res: any) => {\r\n      this.announcementList = res.responseData.data;\r\n      this.dataSource = new MatTableDataSource<Announcement>(res.responseData.data);\r\n      this.dataSource.paginator = this.formListComponent.paginator;\r\n      this.dataSource.sort = this.formListComponent.sort;\r\n    });\r\n  }\r\n\r\n  save(): void {\r\n    this.announcement.postingDate = this.dateService.setDate(this.announcement.postingDate);\r\n    this.apiService.save(ENDPOINTS.announcements, this.announcement).subscribe(\r\n      (res: any) => {\r\n        if (res !== undefined) {\r\n          this.sweetAlertService.success(res);\r\n        }\r\n      }, (err: any) => {\r\n        this.sweetAlertService.error(err);\r\n      }, () => {\r\n        this.resetFormValidator(),\r\n          this.getList();\r\n      }\r\n    )\r\n  }\r\n\r\n  getAnnouncement(): void {\r\n    this.apiService.findById(ENDPOINTS.announcements, this.formListComponent.idForUpdate).subscribe((res: any) => {\r\n      if (res) {\r\n        this.announcement = res.responseData.data;\r\n        console.log(res);\r\n\r\n      }\r\n    });\r\n  }\r\n\r\n  update(): void {\r\n    this.announcement.postingDate = this.dateService.setDate(this.announcement.postingDate);\r\n    this.apiService.update(ENDPOINTS.announcements, this.announcement).subscribe(\r\n      (res: any) => {\r\n        if (res !== undefined) {\r\n          this.sweetAlertService.success(res);\r\n        }\r\n      }, (err: any) => {\r\n        this.sweetAlertService.error(err);\r\n      }, () => {\r\n        this.resetFormValidator()\r\n        this.getList();\r\n      });\r\n  }\r\n\r\n  setFormValidator(): void {\r\n    this.announcement.status = COMMON_FUNCTION.ACTIVE;\r\n    this.announcementForm = this.formBuilder.group({\r\n      title: ['', Validators.required],\r\n      details: ['', Validators.required],\r\n      noOfView: ['', Validators.required],\r\n      postingDate: ['', Validators.required],\r\n      status: [''],\r\n      link: ['']\r\n    });\r\n  }\r\n\r\n  resetFormValidator(): void {\r\n    this.announcement = new Announcement();\r\n    this.announcement.status = COMMON_FUNCTION.ACTIVE;\r\n    this.announcementForm.markAsUntouched();\r\n    this.announcementForm.markAsPristine();\r\n  }\r\n\r\n  disabledWeekEnds = (d: Date | null): boolean => {\r\n    const day = (d || new Date()).getDay();\r\n    return day !== 0 && day !== 6;\r\n  }\r\n\r\n  delete() {\r\n    Swal.fire({\r\n      text: 'Are you sure you want to delete this announcement?',\r\n      icon: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Confirm'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.apiService.deleteById(ENDPOINTS.announcements, this.announcement.id).subscribe(\r\n          () => {\r\n            this.sweetAlertService.customSuccessMessage('Announcement successfully deleted.');\r\n            this.resetFormValidator();\r\n            this.getList();\r\n          }\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { AnnouncementContentRoutingModule } from './announcement-content-routing.module';\r\nimport { AnnouncementContentComponent } from './announcement-content.component';\r\nimport { FragmentsModule } from 'app/modules/fragments/fragments.module';\r\nimport { AngularMaterialModule } from '@shared';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\n\r\n@NgModule({\r\n  declarations: [AnnouncementContentComponent],\r\n  imports: [\r\n    CommonModule,\r\n    AnnouncementContentRoutingModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule,\r\n    AngularMaterialModule,\r\n    FragmentsModule,\r\n  ]\r\n})\r\nexport class AnnouncementContentModule { }\r\n","export default \"<form>\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12 title\\\">\\r\\n                <mat-label>\\r\\n                  <mat-icon>announcement</mat-icon> Announcements\\r\\n                </mat-label>\\r\\n            </div>\\r\\n        </div>\\r\\n        <hr>\\r\\n\\r\\n        <form [formGroup]=\\\"announcementForm\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n                    <mat-label>Title <span class=\\\"required-field\\\">*</span></mat-label>\\r\\n                    <input matInput [(ngModel)]=\\\"announcement.title\\\" name=\\\"title\\\" formControlName=\\\"title\\\">\\r\\n                </mat-form-field>\\r\\n\\r\\n                <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n                    <mat-label>Details <span class=\\\"required-field\\\">*</span></mat-label>\\r\\n                    <textarea matInput [(ngModel)]=\\\"announcement.details\\\" name=\\\"details\\\"\\r\\n                        formControlName=\\\"details\\\"></textarea>\\r\\n                </mat-form-field>\\r\\n\\r\\n                <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n                    <mat-label>Link <span class=\\\"required-field\\\">*</span></mat-label>\\r\\n                    <textarea matInput [(ngModel)]=\\\"announcement.link\\\" name=\\\"link\\\"\\r\\n                        formControlName=\\\"link\\\"></textarea>\\r\\n                </mat-form-field>\\r\\n\\r\\n                <mat-form-field class=\\\"col-md-4\\\" appearance=\\\"outline\\\">\\r\\n                    <mat-label>Number Of View <span class=\\\"required-field\\\">*</span></mat-label>\\r\\n                    <input matInput [(ngModel)]=\\\"announcement.noOfView\\\" name=\\\"noOfView\\\" formControlName=\\\"noOfView\\\">\\r\\n                </mat-form-field>\\r\\n\\r\\n                <mat-form-field class=\\\"col-md-4\\\" appearance=\\\"outline\\\">\\r\\n                    <mat-label>Posting Date</mat-label>\\r\\n                    <input matInput placeholder=\\\"Date\\\" [matDatepicker]=\\\"postingDate\\\"\\r\\n                        [matDatepickerFilter]=\\\"disabledWeekEnds\\\" readonly [(ngModel)]=\\\"announcement.postingDate\\\"\\r\\n                        name=\\\"postingDate\\\" formControlName=\\\"postingDate\\\">\\r\\n                    <mat-datepicker-toggle matSuffix [for]=\\\"postingDate\\\"></mat-datepicker-toggle>\\r\\n                    <mat-datepicker color=\\\"warn\\\" #postingDate disabled=\\\"false\\\"></mat-datepicker>\\r\\n                </mat-form-field>\\r\\n\\r\\n                <mat-form-field class=\\\"col-md-4\\\" appearance=\\\"outline\\\">\\r\\n                    <mat-label>Status</mat-label>\\r\\n                    <mat-select [(ngModel)]=\\\"announcement.status\\\" name=\\\"status\\\" formControlName=\\\"status\\\">\\r\\n                        <mat-option *ngFor=\\\"let i of statusList\\\" [value]=\\\"i.status\\\">\\r\\n                            {{i.status}}\\r\\n                        </mat-option>\\r\\n                    </mat-select>\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n        </form>\\r\\n\\r\\n        <app-form-action-buttons [childObject]=\\\"announcement\\\" [childForm]=\\\"announcementForm\\\" (saveFunction)=\\\"save()\\\"\\r\\n            (updateFunction)=\\\"update()\\\" (cancelFunction)=\\\"resetFormValidator()\\\" (deleteFunction)=\\\"delete()\\\"></app-form-action-buttons>\\r\\n        <br>\\r\\n        <app-form-list [dataSource]=\\\"dataSource\\\" [displayedColumns]=\\\"displayedColumns\\\"\\r\\n            (selectInListFunction)=\\\"getAnnouncement()\\\"></app-form-list>\\r\\n\\r\\n    </div>\\r\\n</form>\\r\\n\";"],"sourceRoot":"webpack:///"}