{"version":3,"sources":["webpack:///src/app/modules/fragments/index.ts","webpack:///src/app/modules/pages/maintenance/screener-reviewer-pair/screener-reviewer-pair.component.ts","webpack:///src/app/modules/pages/maintenance/screener-reviewer-pair/screener-reviewer-pair.component.html","webpack:///src/app/modules/pages/maintenance/screener-reviewer-pair/screener-reviewer-pair.module.ts","webpack:///src/app/modules/pages/maintenance/screener-reviewer-pair/screener-reviewer-pair-routing.module.ts"],"names":["ScreenerReviewerPairComponent","apiService","formBuilder","sweetAlertService","displayedColumns","screenerList","reviewerList","screenerReviewerPair","screenerReviewerPairList","getList","setFormValidator","getScreenerAndReviewerForList","findAll","screenerReviewerPairs","subscribe","res","responseData","data","dataSource","paginator","formListComponent","sort","save","undefined","console","log","success","err","error","resetFormValidator","findById","idForUpdate","filter","res1","username","screener","update","screenerReviewerPairForm","group","screenerName","required","reviewerName","markAsUntouched","markAsPristine","userAccount","account","userRole","name","ROLE_SCREENER","status","ACTIVE","ROLE_REVIEWER","value","selected","fire","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","deleteById","id","customSuccessMessage","getScreenerReviewerPair","ScreenerReviewerPairModule","routes","path","component","ScreenerReviewerPairRoutingModule","forChild"],"mappings":"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","file":"screener-reviewer-pair-screener-reviewer-pair-module-es5.js","sourcesContent":["export * from './form-action-buttons/form-action-buttons.component';\nexport * from './form-list/form-list.component';","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { FormListComponent } from '@fragments';\nimport { ApiService, SweetAlertService } from '@services';\nimport { COMMON_FUNCTION, ENDPOINTS, STATUSES, USER_ROLES } from '@shared';\nimport { ScreenerReviewerPair } from 'app/core/models/screener-reviewer-pair.model';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-screener-reviewer-pair',\n  templateUrl: './screener-reviewer-pair.component.html',\n  styleUrls: ['./screener-reviewer-pair.component.scss']\n})\nexport class ScreenerReviewerPairComponent implements OnInit {\n\n  @ViewChild(FormListComponent) formListComponent: FormListComponent;\n  dataSource: MatTableDataSource<ScreenerReviewerPair>;\n  displayedColumns: string[] = ['screenerName', 'reviewerName'];\n  screenerList = [];\n  reviewerList = [];\n\n  screenerReviewerPair = new ScreenerReviewerPair();\n  screenerReviewerPairList = [];\n\n  screenerReviewerPairForm: FormGroup;\n\n\n  constructor(\n    private apiService: ApiService,\n    private formBuilder: FormBuilder,\n    private sweetAlertService: SweetAlertService,\n  ) { }\n\n  ngOnInit() {\n    this.getList();\n    this.setFormValidator();\n    this.getScreenerAndReviewerForList();\n  }\n\n  getList(): void {\n    this.apiService.findAll(ENDPOINTS.screenerReviewerPairs).subscribe((res: any) => {\n      this.screenerReviewerPairList = res.responseData.data;\n      this.dataSource = new MatTableDataSource<ScreenerReviewerPair>(res.responseData.data);\n      this.dataSource.paginator = this.formListComponent.paginator;\n      this.dataSource.sort = this.formListComponent.sort;\n    });\n\n    this.getScreenerAndReviewerForList();\n  }\n\n  save(): void {\n    this.apiService.save(ENDPOINTS.screenerReviewerPairs, this.screenerReviewerPair).subscribe(\n      (res: any) => {\n        if (res !== undefined) {\n          console.log(res);\n\n          this.sweetAlertService.success(res);\n        }\n      }, (err: any) => {\n        this.sweetAlertService.error(err);\n      }, () => {\n        this.resetFormValidator(),\n          this.getList();\n        this.getScreenerAndReviewerForList();\n      }\n    )\n  }\n\n  getScreenerReviewerPair(): void {\n    this.apiService.findById(ENDPOINTS.screenerReviewerPairs, this.formListComponent.idForUpdate).subscribe((res: any) => {\n      if (res) {\n        this.screenerReviewerPair = res.responseData.data;\n        console.log(this.screenerReviewerPair);\n\n        console.log(this.screenerList.filter((res1) => res1.username === this.screenerReviewerPair.screener.username)[0]);\n        console.log(this.screenerReviewerPair.screener);\n      }\n    });\n  }\n\n  update(): void {\n    this.apiService.update(ENDPOINTS.screenerReviewerPairs, this.screenerReviewerPair).subscribe(\n      (res: any) => {\n        if (res !== undefined) {\n          this.sweetAlertService.success(res);\n        }\n      }, (err: any) => {\n        this.sweetAlertService.error(err);\n      }, () => {\n        this.resetFormValidator()\n        this.getList();\n        this.getScreenerAndReviewerForList();\n      });\n  }\n\n  setFormValidator(): void {\n    this.screenerReviewerPairForm = this.formBuilder.group({\n      screenerName: ['', Validators.required],\n      reviewerName: ['', Validators.required],\n    });\n  }\n\n  resetFormValidator(): void {\n    this.screenerReviewerPair = new ScreenerReviewerPair();\n    this.screenerReviewerPairForm.markAsUntouched();\n    this.screenerReviewerPairForm.markAsPristine();\n  }\n\n  getScreenerAndReviewerForList() {\n    this.apiService.findAll(ENDPOINTS.userAccount).subscribe((res: any) => {\n      this.screenerList = res.responseData.data.filter(\n        (account: any) => account.userRole.name === USER_ROLES.ROLE_SCREENER && account.status === COMMON_FUNCTION.ACTIVE);\n      this.reviewerList = res.responseData.data.filter(\n        (account: any) => account.userRole.name === USER_ROLES.ROLE_REVIEWER && account.status === COMMON_FUNCTION.ACTIVE);\n    });\n  }\n\n  compareUser(value: any, selected: any): boolean {\n    if (value && selected) {\n      return value.username === selected.username;\n    }\n  }\n\n  delete() {\n    Swal.fire({\n      text: 'Are you sure you want to delete this screener reviewer pairing?',\n      icon: 'question',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Confirm'\n    }).then((result) => {\n      if (result.value) {\n        this.apiService.deleteById(ENDPOINTS.screenerReviewerPairs, this.screenerReviewerPair.id).subscribe(\n          () => {\n            this.sweetAlertService.customSuccessMessage('Screener reviewer pairing successfully deleted.');\n            this.resetFormValidator();\n            this.getList();\n          }\n        );\n      }\n    });\n  }\n\n}\n","<form>\n    <div class=\"container-fluid\">\n        <div class=\"row\">\n            <div class=\"col-md-12 title\">\n                <mat-label>\n                    Screener-Reviewer Pair\n                </mat-label>\n            </div>\n        </div>\n        <hr>\n\n        <form [formGroup]=\"screenerReviewerPairForm\">\n            <div class=\"row\">\n                <mat-form-field class=\"col-md-6\" appearance=\"outline\">\n                    <mat-label>Screener Name</mat-label>\n                    <mat-select [(ngModel)]=\"screenerReviewerPair.screener\" name=\"screenerName\" formControlName=\"screenerName\"\n                    [compareWith]=\"compareUser\">\n                        <mat-option *ngFor=\"let i of screenerList\" [value]=\"i\">\n                            {{ i?.firstName }} {{ i?.lastName }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n\n                <mat-form-field class=\"col-md-6\" appearance=\"outline\">\n                    <mat-label>Reviewer Name</mat-label>\n                    <mat-select [(ngModel)]=\"screenerReviewerPair.reviewer\" name=\"reviewerName\" formControlName=\"reviewerName\"\n                    [compareWith]=\"compareUser\">\n                        <mat-option *ngFor=\"let i of reviewerList\" [value]=\"i\">\n                            {{ i?.firstName }} {{ i?.lastName }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n        </form>\n\n        <app-form-action-buttons [childObject]=\"screenerReviewerPair\" [childForm]=\"screenerReviewerPairForm\"\n            (saveFunction)=\"save()\" (updateFunction)=\"update()\" (cancelFunction)=\"resetFormValidator()\"\n            (deleteFunction)=\"delete()\">\n        </app-form-action-buttons>\n        <br>\n        <app-form-list [dataSource]=\"dataSource\" [displayedColumns]=\"displayedColumns\"\n            (selectInListFunction)=\"getScreenerReviewerPair()\"></app-form-list>\n\n    </div>\n</form>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ScreenerReviewerPairRoutingModule } from './screener-reviewer-pair-routing.module';\nimport { ScreenerReviewerPairComponent } from './screener-reviewer-pair.component';\nimport { FragmentsModule } from 'app/modules/fragments/fragments.module';\nimport { AngularMaterialModule } from '@shared';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\n\n@NgModule({\n  declarations: [\n    ScreenerReviewerPairComponent\n  ],\n  imports: [\n    CommonModule,\n    ScreenerReviewerPairRoutingModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    AngularMaterialModule,\n    FragmentsModule,\n  ]\n})\nexport class ScreenerReviewerPairModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ScreenerReviewerPairComponent } from './screener-reviewer-pair.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ScreenerReviewerPairComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ScreenerReviewerPairRoutingModule { }\n"]}