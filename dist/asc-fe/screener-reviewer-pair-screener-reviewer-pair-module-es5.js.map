{"version":3,"sources":["webpack:///src/app/modules/fragments/index.ts","webpack:///src/app/modules/pages/maintenance/screener-reviewer-pair/screener-reviewer-pair.component.ts","webpack:///src/app/modules/pages/maintenance/screener-reviewer-pair/screener-reviewer-pair.module.ts","webpack:///src/app/modules/pages/maintenance/screener-reviewer-pair/screener-reviewer-pair-routing.module.ts","webpack:///src/app/modules/pages/maintenance/screener-reviewer-pair/screener-reviewer-pair.component.html","webpack:///src/app/modules/pages/maintenance/screener-reviewer-pair/screener-reviewer-pair.component.scss"],"names":["ScreenerReviewerPairComponent","apiService","formBuilder","sweetAlertService","displayedColumns","screenerList","reviewerList","screenerReviewerPair","screenerReviewerPairList","getList","setFormValidator","getScreenerAndReviewerForList","findAll","screenerReviewerPairs","subscribe","res","responseData","data","dataSource","paginator","formListComponent","sort","save","undefined","console","log","success","err","error","resetFormValidator","findById","idForUpdate","filter","res1","username","screener","update","screenerReviewerPairForm","group","screenerName","required","reviewerName","markAsUntouched","markAsPristine","userAccount","account","userRole","name","ROLE_SCREENER","status","ACTIVE","ROLE_REVIEWER","value","selected","fire","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","deleteById","id","customSuccessMessage","selector","template","ScreenerReviewerPairModule","declarations","imports","routes","path","component","ScreenerReviewerPairRoutingModule","forChild","exports"],"mappings":"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","file":"screener-reviewer-pair-screener-reviewer-pair-module-es5.js","sourcesContent":["export * from './form-action-buttons/form-action-buttons.component';\r\nexport * from './form-list/form-list.component';","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { FormListComponent } from '@fragments';\r\nimport { ApiService, SweetAlertService } from '@services';\r\nimport { COMMON_FUNCTION, ENDPOINTS, STATUSES, USER_ROLES } from '@shared';\r\nimport { ScreenerReviewerPair } from 'app/core/models/screener-reviewer-pair.model';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-screener-reviewer-pair',\r\n  templateUrl: './screener-reviewer-pair.component.html',\r\n  styleUrls: ['./screener-reviewer-pair.component.scss']\r\n})\r\nexport class ScreenerReviewerPairComponent implements OnInit {\r\n\r\n  @ViewChild(FormListComponent) formListComponent: FormListComponent;\r\n  dataSource: MatTableDataSource<ScreenerReviewerPair>;\r\n  displayedColumns: string[] = ['screenerName', 'reviewerName'];\r\n  screenerList = [];\r\n  reviewerList = [];\r\n\r\n  screenerReviewerPair = new ScreenerReviewerPair();\r\n  screenerReviewerPairList = [];\r\n\r\n  screenerReviewerPairForm: FormGroup;\r\n\r\n\r\n  constructor(\r\n    private apiService: ApiService,\r\n    private formBuilder: FormBuilder,\r\n    private sweetAlertService: SweetAlertService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.getList();\r\n    this.setFormValidator();\r\n    this.getScreenerAndReviewerForList();\r\n  }\r\n\r\n  getList(): void {\r\n    this.apiService.findAll(ENDPOINTS.screenerReviewerPairs).subscribe((res: any) => {\r\n      this.screenerReviewerPairList = res.responseData.data;\r\n      this.dataSource = new MatTableDataSource<ScreenerReviewerPair>(res.responseData.data);\r\n      this.dataSource.paginator = this.formListComponent.paginator;\r\n      this.dataSource.sort = this.formListComponent.sort;\r\n    });\r\n\r\n    this.getScreenerAndReviewerForList();\r\n  }\r\n\r\n  save(): void {\r\n    this.apiService.save(ENDPOINTS.screenerReviewerPairs, this.screenerReviewerPair).subscribe(\r\n      (res: any) => {\r\n        if (res !== undefined) {\r\n          console.log(res);\r\n\r\n          this.sweetAlertService.success(res);\r\n        }\r\n      }, (err: any) => {\r\n        this.sweetAlertService.error(err);\r\n      }, () => {\r\n        this.resetFormValidator(),\r\n          this.getList();\r\n        this.getScreenerAndReviewerForList();\r\n      }\r\n    )\r\n  }\r\n\r\n  getScreenerReviewerPair(): void {\r\n    this.apiService.findById(ENDPOINTS.screenerReviewerPairs, this.formListComponent.idForUpdate).subscribe((res: any) => {\r\n      if (res) {\r\n        this.screenerReviewerPair = res.responseData.data;\r\n        console.log(this.screenerReviewerPair);\r\n\r\n        console.log(this.screenerList.filter((res1) => res1.username === this.screenerReviewerPair.screener.username)[0]);\r\n        console.log(this.screenerReviewerPair.screener);\r\n      }\r\n    });\r\n  }\r\n\r\n  update(): void {\r\n    this.apiService.update(ENDPOINTS.screenerReviewerPairs, this.screenerReviewerPair).subscribe(\r\n      (res: any) => {\r\n        if (res !== undefined) {\r\n          this.sweetAlertService.success(res);\r\n        }\r\n      }, (err: any) => {\r\n        this.sweetAlertService.error(err);\r\n      }, () => {\r\n        this.resetFormValidator()\r\n        this.getList();\r\n        this.getScreenerAndReviewerForList();\r\n      });\r\n  }\r\n\r\n  setFormValidator(): void {\r\n    this.screenerReviewerPairForm = this.formBuilder.group({\r\n      screenerName: ['', Validators.required],\r\n      reviewerName: ['', Validators.required],\r\n    });\r\n  }\r\n\r\n  resetFormValidator(): void {\r\n    this.screenerReviewerPair = new ScreenerReviewerPair();\r\n    this.screenerReviewerPairForm.markAsUntouched();\r\n    this.screenerReviewerPairForm.markAsPristine();\r\n  }\r\n\r\n  getScreenerAndReviewerForList() {\r\n    this.apiService.findAll(ENDPOINTS.userAccount).subscribe((res: any) => {\r\n      this.screenerList = res.responseData.data.filter(\r\n        (account: any) => account.userRole.name === USER_ROLES.ROLE_SCREENER && account.status === COMMON_FUNCTION.ACTIVE);\r\n      this.reviewerList = res.responseData.data.filter(\r\n        (account: any) => account.userRole.name === USER_ROLES.ROLE_REVIEWER && account.status === COMMON_FUNCTION.ACTIVE);\r\n    });\r\n  }\r\n\r\n  compareUser(value: any, selected: any): boolean {\r\n    if (value && selected) {\r\n      return value.username === selected.username;\r\n    }\r\n  }\r\n\r\n  delete() {\r\n    Swal.fire({\r\n      text: 'Are you sure you want to delete this screener reviewer pairing?',\r\n      icon: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Confirm'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.apiService.deleteById(ENDPOINTS.screenerReviewerPairs, this.screenerReviewerPair.id).subscribe(\r\n          () => {\r\n            this.sweetAlertService.customSuccessMessage('Screener reviewer pairing successfully deleted.');\r\n            this.resetFormValidator();\r\n            this.getList();\r\n          }\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { ScreenerReviewerPairRoutingModule } from './screener-reviewer-pair-routing.module';\r\nimport { ScreenerReviewerPairComponent } from './screener-reviewer-pair.component';\r\nimport { FragmentsModule } from 'app/modules/fragments/fragments.module';\r\nimport { AngularMaterialModule } from '@shared';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ScreenerReviewerPairComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ScreenerReviewerPairRoutingModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule,\r\n    AngularMaterialModule,\r\n    FragmentsModule,\r\n  ]\r\n})\r\nexport class ScreenerReviewerPairModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ScreenerReviewerPairComponent } from './screener-reviewer-pair.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ScreenerReviewerPairComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ScreenerReviewerPairRoutingModule { }\r\n","export default \"<form>\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12 title\\\">\\r\\n                <mat-label>\\r\\n                    Screener-Reviewer Pair\\r\\n                </mat-label>\\r\\n            </div>\\r\\n        </div>\\r\\n        <hr>\\r\\n\\r\\n        <form [formGroup]=\\\"screenerReviewerPairForm\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\">\\r\\n                    <mat-label>Screener Name</mat-label>\\r\\n                    <mat-select [(ngModel)]=\\\"screenerReviewerPair.screener\\\" name=\\\"screenerName\\\" formControlName=\\\"screenerName\\\"\\r\\n                    [compareWith]=\\\"compareUser\\\">\\r\\n                        <mat-option *ngFor=\\\"let i of screenerList\\\" [value]=\\\"i\\\">\\r\\n                            {{ i?.firstName }} {{ i?.lastName }}\\r\\n                        </mat-option>\\r\\n                    </mat-select>\\r\\n                </mat-form-field>\\r\\n\\r\\n                <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\">\\r\\n                    <mat-label>Reviewer Name</mat-label>\\r\\n                    <mat-select [(ngModel)]=\\\"screenerReviewerPair.reviewer\\\" name=\\\"reviewerName\\\" formControlName=\\\"reviewerName\\\"\\r\\n                    [compareWith]=\\\"compareUser\\\">\\r\\n                        <mat-option *ngFor=\\\"let i of reviewerList\\\" [value]=\\\"i\\\">\\r\\n                            {{ i?.firstName }} {{ i?.lastName }}\\r\\n                        </mat-option>\\r\\n                    </mat-select>\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n        </form>\\r\\n\\r\\n        <app-form-action-buttons [childObject]=\\\"screenerReviewerPair\\\" [childForm]=\\\"screenerReviewerPairForm\\\"\\r\\n            (saveFunction)=\\\"save()\\\" (updateFunction)=\\\"update()\\\" (cancelFunction)=\\\"resetFormValidator()\\\"\\r\\n            (deleteFunction)=\\\"delete()\\\">\\r\\n        </app-form-action-buttons>\\r\\n        <br>\\r\\n        <app-form-list [dataSource]=\\\"dataSource\\\" [displayedColumns]=\\\"displayedColumns\\\"\\r\\n            (selectInListFunction)=\\\"getScreenerReviewerPair()\\\"></app-form-list>\\r\\n\\r\\n    </div>\\r\\n</form>\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcGFnZXMvbWFpbnRlbmFuY2Uvc2NyZWVuZXItcmV2aWV3ZXItcGFpci9zY3JlZW5lci1yZXZpZXdlci1wYWlyLmNvbXBvbmVudC5zY3NzIn0= */\";"]}