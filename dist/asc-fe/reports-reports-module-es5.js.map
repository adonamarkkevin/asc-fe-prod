{"version":3,"sources":["webpack:///src/app/modules/pages/accounting/reports/reports-routing.module.ts","webpack:///src/app/modules/pages/accounting/reports/reports.component.ts","webpack:///src/app/modules/pages/accounting/reports/reports.component.html","webpack:///src/app/core/models/payment-method.model.ts","webpack:///src/app/modules/pages/accounting/reports/reports.module.ts"],"names":["routes","path","component","ReportsRoutingModule","forChild","ReportsComponent","dataStorage","apiService","formBuilder","sweetAlertService","datepipe","spinner","report","paymentMethod","reportTypes","reportTypeList","name","COLLECTION_REPORT","filename","VAT_SUMMARY","TAX_SUMMARY","REPORT_PER_COMPANY","REPORT_PER_AGENCY","REPORT_PER_SCREENER","REPORT_PER_MEDIUM","REPORT_PER_APPLICANT","applicants","screeners","newReportTypeList","paymentTypeList","activeCompanyList","isPaymentTypeRequired","paymentTypeAll","currentUser","getUserAccount","setFormValidator","getPaymentType","getActiveCompanies","console","log","userRole","getApplicants","getScreeners","getTypeOfMediums","findAll","userAccountType","subscribe","res","push","id","responseData","data","length","filter","e","firstName","middleName","lastName","reportForm","group","reportType","required","paymentType","company","applicant","screener","medium","dateFrom","dateTo","newReportForm","unshift","userPerRole","typeOfMedium","response","typeOfMediums","description","activeCompanies","sort","_a","_b","selectedReportType","get","patchValue","selectedPaymentType","show","format","module","params","transform","value","toString","valdationReportEndpoint","validateReportsCollection","printReport","customErrorMessage","hide","generateReports","newBlob","Blob","type","downloadURL","URL","createObjectURL","anchor","document","createElement","download","href","click","reset","customSuccessMessage","err","PaymentMethod","ReportsModule"],"mappings":"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","file":"reports-reports-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ReportsComponent } from './reports.component';\n\nconst routes: Routes = [\n  {\n    path:'',\n    component: ReportsComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ReportsRoutingModule { }\n","import { GenericResponse } from './../../../../core/models/generic-response-model/generic-response.model';\nimport { DatePipe } from '@angular/common';\nimport { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ApiService, DataStorageService, SweetAlertService } from '@services';\nimport { ENDPOINTS, REPORT_TYPE } from '@shared';\nimport { PaymentMethod } from 'app/core/models/payment-method.model';\nimport { Report } from 'app/core/models/report.model';\nimport { NgxSpinnerService } from 'ngx-spinner';\n\n@Component({\n  selector: 'app-reports',\n  templateUrl: './reports.component.html',\n  styleUrls: ['./reports.component.scss']\n})\nexport class ReportsComponent implements OnInit, OnDestroy {\n\n  report = new Report();\n  reportForm: FormGroup;\n  newReportForm: FormGroup;\n  paymentMethod = new PaymentMethod();\n  reportTypes = REPORT_TYPE;\n  typeOfMediums: Array<any>;\n\n  reportTypeList = [\n    { name: REPORT_TYPE.COLLECTION_REPORT, filename: 'Collection_Report' },\n    { name: REPORT_TYPE.VAT_SUMMARY, filename: 'VAT_TAX_Summary' },\n    { name: REPORT_TYPE.TAX_SUMMARY, filename: 'VAT_TAX_Summary' },\n    { name: REPORT_TYPE.REPORT_PER_COMPANY, filename: 'Per_Company' },\n    { name: REPORT_TYPE.REPORT_PER_AGENCY, filename: 'Per_Agency' },\n    { name: REPORT_TYPE.REPORT_PER_SCREENER, filename: 'Per_Screener' },\n    { name: REPORT_TYPE.REPORT_PER_MEDIUM, filename: 'Per_Type_Of_Medium' },\n    { name: REPORT_TYPE.REPORT_PER_APPLICANT, filename: 'Per_Applicant' }\n\n  ];\n\n  applicants: Array<any> = [];\n\n  screeners: Array<any> = [];\n  newReportTypeList = [\n    { name: 'Application Per Decision', filename: 'Application_Per_Decision' },\n    { name: 'Screeners Productivity', filename: 'Screeners_Productivity' },\n    { name: 'Ad Specialists-Encoders', filename: 'Ad_Specialists-Encoders' },\n    { name: 'Top 20 Agencies', filename: 'Top_20_Agencies' },\n    { name: 'Top 20 Categories(by Decision)', filename: 'Top_20_Categories(by_Decision)' },\n    { name: 'Top 5 Categories Disapproval', filename: 'Top_5_Categories_Disapproval' },\n    { name: 'Top 5 Agencies Disapproval', filename: 'Top_5_Agencies_Disapproval' },\n    { name: 'Decision Per Type of medium', filename: 'Decision_per_type_of_medium' },\n    { name: 'Top 20 Clients(with Medium)', filename: 'Top_20_Clients(with_Medium)' },\n    { name: 'Top 20 Categories(with Medium)', filename: 'Top_20_Categories(with_Medium)' },\n    { name: 'Top 20 Clients', filename: 'Top_20_Clients' },\n    { name: 'Top 20 Agencies(with client)', filename: 'Top_20_Agencies(with_client)' }\n  ]\n  \n\n  paymentTypeList = [];\n\n  activeCompanyList:Array<any> = [\n\n  ];\n\n  selectedReportType: any;\n  selectedPaymentType: number;\n  isPaymentTypeRequired = true;\n  reportType: any;\n  dateTo: any;\n  dateFrome: any;\n  currentUser: any;\n  paymentTypeAll = {\n    \"id\": 0,\n    \"paymentDescription\": \"All\",\n  };\n\n  constructor(\n    private dataStorage: DataStorageService,\n    private apiService: ApiService,\n    private formBuilder: FormBuilder,\n    private sweetAlertService: SweetAlertService,\n    public datepipe: DatePipe,\n    private spinner: NgxSpinnerService,\n  ) { \n  }\n\n  ngOnInit(): void {\n    this.currentUser = this.dataStorage.getUserAccount();\n    this.setFormValidator();\n    this.getPaymentType();\n    this.getActiveCompanies();\n    console.log(this.currentUser.userRole.name);\n    this.getApplicants();\n    this.getScreeners();\n    this.getTypeOfMediums();\n\n  }\n\n  ngOnDestroy(): void {\n\n  }\n\n  getApplicants(){\n    this.apiService.findAll(ENDPOINTS.userAccountType + '/APPLICANT').subscribe( (res: GenericResponse<Array<any>>)=>{\n      // console.log('applicants', res.responseData.data);\n      this.applicants.push({name: 'ALL', id: 0});\n      if(res?.responseData?.data && res?.responseData?.data?.length){\n        res.responseData.data.filter( e=>{\n          this.applicants.push(\n            {name:`${e.firstName} ${e.middleName} ${e.lastName}` , id:e.id}\n          )\n        })\n      }\n    })\n  }\n  \n\n  setFormValidator(): void {\n\n    if (this.currentUser.userRole.name === 'ROLE_ACCOUNTING') {\n      this.reportForm = this.formBuilder.group({\n        reportType: ['', [Validators.required]],\n        paymentType: [0],\n        company: [0],\n        applicant: [0],\n        screener: [0],\n        medium: [0],\n        dateFrom: ['', [Validators.required]],\n        dateTo: ['', [Validators.required]],\n      })\n    } else {\n      this.newReportForm = this.formBuilder.group({\n        reportType: ['', [Validators.required]],\n        dateFrom: ['', [Validators.required]],\n        dateTo: ['', [Validators.required]]\n      })\n    }\n  }\n\n  getPaymentType() {\n    this.apiService.findAll(ENDPOINTS.paymentType).subscribe((res: any) => {\n      this.paymentTypeList = res.responseData.data;\n      this.paymentTypeList.unshift(this.paymentTypeAll);\n    })\n  }\n\n  getScreeners(){\n    this.apiService.findAll(`${ENDPOINTS.userPerRole}${8}`).subscribe(screener=>{\n      this.screeners.push({name: 'ALL', id: 0});\n      if(screener?.responseData?.data && screener?.responseData?.data?.length){\n        screener.responseData.data.filter( e=>{\n          this.screeners.push(\n            {name:`${e.firstName} ${e.middleName} ${e.lastName}` , id:e.id}\n          )\n        })\n      }\n    })\n  }\n\n  getTypeOfMediums(): void {\n    this.apiService.findAll(`${ENDPOINTS.typeOfMedium}`).subscribe(response=>{\n      this.typeOfMediums = response.responseData.data;\n      this.typeOfMediums.unshift({ description: 'ALL', id: 0 });\n    });\n  }\n\n  getActiveCompanies(){\n    this.apiService.findAll(ENDPOINTS.activeCompanies).subscribe( res=>{\n      \n      this.activeCompanyList = res.responseData.data;\n      this.activeCompanyList.push(\n        {\n          \"id\": 0,\n          \"companyName\": \"All\", \n        }\n      )\n      this.activeCompanyList.sort( (_a,_b)=>{\n        return (_a.id - _b.id)\n      });\n    })\n  }\n\n  setReportType(res) {\n    if (this.currentUser.userRole.name === 'ROLE_ACCOUNTING') {\n      this.selectedReportType = res.name;\n      if (this.selectedReportType === 'Collection Report') {\n        this.isPaymentTypeRequired = false;\n      } else {\n        this.reportForm.get('paymentType').patchValue(0);\n        this.isPaymentTypeRequired = true;\n        this.selectedPaymentType = 0;\n      }\n    } else {\n      this.selectedReportType = res;\n    }\n  }\n\n  setPaymentType(id) {\n    this.isPaymentTypeRequired = true;\n    this.selectedPaymentType = id;\n  }\n\n  generateReport() {\n     this.spinner.show();\n    this.report.format = 'xlsx';\n    console.log('selected ', this.selectedReportType)\n    if (this.currentUser.userRole.name === 'ROLE_ACCOUNTING') {\n      this.report.filename = 'VAT_TAX_Summary';\n\n      this.report.module = 'Report';\n      this.report.params = { 'dateFrom': `${this.datepipe.transform(this.reportForm.get('dateFrom').value, 'MM/dd/yyyy').toString()}`, 'dateTo': `${this.datepipe.transform(this.reportForm.get('dateTo').value, 'MM/dd/yyyy')}`, 'reportType': this.reportType.filename}\n      let valdationReportEndpoint = ENDPOINTS.validateReportsCollection + `/date-from/${this.datepipe.transform(this.reportForm.get('dateFrom').value, 'yyyy-MM-dd').toString()}/date-to/${this.datepipe.transform(this.reportForm.get('dateTo').value, 'yyyy-MM-dd').toString()}`;\n\n      if (this.selectedReportType === 'Collection Report') {\n        this.report.filename = 'Collection_Report';\n        valdationReportEndpoint = ENDPOINTS.validateReportsCollection + `/date-from/${this.datepipe.transform(this.reportForm.get('dateFrom').value, 'yyyy-MM-dd').toString()}/date-to/${this.datepipe.transform(this.reportForm.get('dateTo').value, 'yyyy-MM-dd').toString()}/payment-type-id/${this.selectedPaymentType}`;\n        this.report.params = { 'dateFrom': `${this.datepipe.transform(this.reportForm.get('dateFrom').value, 'MM/dd/yyyy').toString()}`, 'dateTo': `${this.datepipe.transform(this.reportForm.get('dateTo').value, 'MM/dd/yyyy')}`, 'paymentTypeId': this.selectedPaymentType }\n      } else if (this.selectedReportType === REPORT_TYPE.REPORT_PER_COMPANY){\n        this.report.filename = 'Per_Company';\n        valdationReportEndpoint = ENDPOINTS.validateReportsCollection + `/date-from/${this.datepipe.transform(this.reportForm.get('dateFrom').value, 'yyyy-MM-dd').toString()}/date-to/${this.datepipe.transform(this.reportForm.get('dateTo').value, 'yyyy-MM-dd').toString()}/payment-type-id/${this.selectedPaymentType}`;\n        this.report.params = { 'companyId': this.reportForm.get('company').value, 'dateFrom': `${this.datepipe.transform(this.reportForm.get('dateFrom').value, 'MM/dd/yyyy').toString()}`, 'dateTo': `${this.datepipe.transform(this.reportForm.get('dateTo').value, 'MM/dd/yyyy')}`, 'paymentTypeId': this.selectedPaymentType }\n      } else if(this.selectedReportType === REPORT_TYPE.REPORT_PER_AGENCY){\n        this.report.filename = 'Per_Agency';\n        valdationReportEndpoint = ENDPOINTS.validateReportsCollection + `/date-from/${this.datepipe.transform(this.reportForm.get('dateFrom').value, 'yyyy-MM-dd').toString()}/date-to/${this.datepipe.transform(this.reportForm.get('dateTo').value, 'yyyy-MM-dd').toString()}/payment-type-id/${this.selectedPaymentType}`;\n        this.report.params = { 'agencyId': this.reportForm.get('company').value, 'dateFrom': `${this.datepipe.transform(this.reportForm.get('dateFrom').value, 'MM/dd/yyyy').toString()}`, 'dateTo': `${this.datepipe.transform(this.reportForm.get('dateTo').value, 'MM/dd/yyyy')}`, 'paymentTypeId': this.selectedPaymentType }\n      } else if(this.selectedReportType === REPORT_TYPE.REPORT_PER_SCREENER){\n        this.report.filename = 'Per_Screener';\n        valdationReportEndpoint = ENDPOINTS.validateReportsCollection + `/date-from/${this.datepipe.transform(this.reportForm.get('dateFrom').value, 'yyyy-MM-dd').toString()}/date-to/${this.datepipe.transform(this.reportForm.get('dateTo').value, 'yyyy-MM-dd').toString()}/payment-type-id/${this.selectedPaymentType}`;\n        this.report.params = { 'screenerId': this.reportForm.get('screener').value, 'dateFrom': `${this.datepipe.transform(this.reportForm.get('dateFrom').value, 'MM/dd/yyyy').toString()}`, 'dateTo': `${this.datepipe.transform(this.reportForm.get('dateTo').value, 'MM/dd/yyyy')}`, 'paymentTypeId': this.selectedPaymentType }\n      } else if(this.selectedReportType === REPORT_TYPE.REPORT_PER_APPLICANT){\n        this.report.filename = 'Per_Applicant';\n        valdationReportEndpoint = ENDPOINTS.validateReportsCollection + `/date-from/${this.datepipe.transform(this.reportForm.get('dateFrom').value, 'yyyy-MM-dd').toString()}/date-to/${this.datepipe.transform(this.reportForm.get('dateTo').value, 'yyyy-MM-dd').toString()}/payment-type-id/${this.selectedPaymentType}`;\n        this.report.params = { 'applicantId': this.reportForm.get('applicant').value, 'dateFrom': `${this.datepipe.transform(this.reportForm.get('dateFrom').value, 'MM/dd/yyyy').toString()}`, 'dateTo': `${this.datepipe.transform(this.reportForm.get('dateTo').value, 'MM/dd/yyyy')}`, 'paymentTypeId': this.selectedPaymentType }\n      } else if(this.selectedReportType === REPORT_TYPE.REPORT_PER_MEDIUM){\n        this.report.filename = 'Per_Type_Of_Medium';\n        valdationReportEndpoint = ENDPOINTS.validateReportsCollection + `/date-from/${this.datepipe.transform(this.reportForm.get('dateFrom').value, 'yyyy-MM-dd').toString()}/date-to/${this.datepipe.transform(this.reportForm.get('dateTo').value, 'yyyy-MM-dd').toString()}/payment-type-id/${this.selectedPaymentType}`;\n        this.report.params = { 'typeOfMediumId': this.reportForm.get('medium').value, 'dateFrom': `${this.datepipe.transform(this.reportForm.get('dateFrom').value, 'MM/dd/yyyy').toString()}`, 'dateTo': `${this.datepipe.transform(this.reportForm.get('dateTo').value, 'MM/dd/yyyy')}`, 'paymentTypeId': this.selectedPaymentType }\n      } else if (this.selectedReportType === 'VAT Summary') {\n        this.report.params = { 'dateFrom': `${this.datepipe.transform(this.reportForm.get('dateFrom').value, 'MM/dd/yyyy').toString()}`, 'dateTo': `${this.datepipe.transform(this.reportForm.get('dateTo').value, 'MM/dd/yyyy')}`, 'reportType': 'vat' }\n      } else if (this.selectedReportType === 'TAX Summary') {\n        this.report.params = { 'dateFrom': `${this.datepipe.transform(this.reportForm.get('dateFrom').value, 'MM/dd/yyyy').toString()}`, 'dateTo': `${this.datepipe.transform(this.reportForm.get('dateTo').value, 'MM/dd/yyyy')}`, 'reportType': 'wtax' }\n      }\n\n      this.apiService.findAll(valdationReportEndpoint).subscribe((data: any) => {\n\n        if (data.length > 0) {\n          this.printReport(this.report);\n        } else {\n          this.sweetAlertService.customErrorMessage('No Record found on date ranged');\n          this.spinner.hide();\n        }\n      });\n\n    } else {\n     \n      this.report.filename = this.selectedReportType;\n      let dateFrom = `${this.datepipe.transform(this.newReportForm.get('dateFrom').value, 'MM/dd/yyyy').toString()}`;\n      let dateTo = `${this.datepipe.transform(this.newReportForm.get('dateTo').value, 'MM/dd/yyyy')}`;\n      this.report.module = 'AppData';\n      this.report.params = { 'dateFrom': dateFrom, 'dateTo': dateTo };\n      this.printReport(this.report);\n    }\n\n  }\n\n  printReport(report) {\n    this.apiService.printReport(ENDPOINTS.generateReports, report).subscribe((data: any) => {\n      const newBlob = new Blob([(data)], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });\n      const downloadURL = URL.createObjectURL(newBlob);\n      var anchor = document.createElement('a');\n      anchor.download = this.selectedReportType + '.xlsx';\n      anchor.href = downloadURL;\n      anchor.click();\n      if (this.currentUser.userRole.name === 'ROLE_ACCOUNTING') {\n        this.reportForm.reset();\n        this.reportForm.patchValue({\n          paymentType: 0,\n          company: 0,\n          applicant: 0,\n          screener: 0,\n          medium: 0,\n        });\n      } else {\n        this.newReportForm.reset();\n      }\n      this.selectedReportType = null;\n      this.sweetAlertService.customSuccessMessage('Successfully Generated!');\n      this.spinner.hide();\n    }, (err: any) => {\n      // console.log(err);\n        this.spinner.hide();\n      this.sweetAlertService.customErrorMessage('No Record found on date ranged');\n    });\n  }\n\n}\n","<form>\n  <div class=\"container-fluid\">\n    <div class=\"row\">\n      <div class=\"col-md-12 title\">\n        <mat-label>\n          Reports\n        </mat-label>\n      </div>\n    </div>\n    <hr>\n    <div *ngIf=\"currentUser.userRole.name === 'ROLE_ACCOUNTING'\">\n    <form [formGroup]=\"reportForm\" >\n      <div class=\"row\">\n        <mat-form-field class=\"col-md-6\" appearance=\"outline\">\n          <mat-label>Date Start:</mat-label>\n          <input matInput placeholder=\"Date\" [matDatepicker]=\"dateFrom\" readonly [(ngModel)]=\"dateFrome\"\n            name=\"dateFrom\" readonly formControlName=\"dateFrom\">\n          <mat-datepicker-toggle matSuffix [for]=\"dateFrom\"></mat-datepicker-toggle>\n          <mat-datepicker color=\"warn\" #dateFrom disabled=\"false\"></mat-datepicker>\n        </mat-form-field>\n        <mat-form-field class=\"col-md-6\" appearance=\"outline\">\n          <mat-label>Date End:</mat-label>\n          <input matInput placeholder=\"Date\" [matDatepicker]=\"Date\" readonly [(ngModel)]=\"dateTo\" name=\"dateTo\"\n            formControlName=\"dateTo\">\n          <mat-datepicker-toggle matSuffix [for]=\"Date\"></mat-datepicker-toggle>\n          <mat-datepicker color=\"warn\" #Date disabled=\"false\"></mat-datepicker>\n        </mat-form-field>\n      </div>\n      <div class=\"row\">\n        <mat-form-field class=\"col-md-6\" appearance=\"outline\">\n          <mat-label>Report Type: </mat-label>\n          <mat-select [(ngModel)]=\"reportType\" name=\"reportType\" formControlName=\"reportType\">\n            <mat-option *ngFor=\"let i of reportTypeList\" [value]=\"i\"  (click)=\"setReportType(i)\">\n              {{i.name}}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n        <mat-form-field class=\"col-md-6\" appearance=\"outline\" *ngIf=\"selectedReportType !== reportTypes.VAT_SUMMARY && selectedReportType !== reportTypes.TAX_SUMMARY\">\n          <mat-label>Payment Type:</mat-label>\n          <mat-select name=\"paymentType\" formControlName=\"paymentType\">\n            <mat-option *ngFor=\"let i of paymentTypeList\" [value]=\"i.id\" (click)=\"setPaymentType(i.id)\">\n              {{i.paymentDescription}}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n        <mat-form-field class=\"col-md-6\" appearance=\"outline\" *ngIf=\"selectedReportType === reportTypes.COLLECTION_REPORT || selectedReportType === reportTypes.REPORT_PER_COMPANY || selectedReportType === reportTypes.REPORT_PER_AGENCY\">\n          <mat-label>Company:</mat-label>\n          <mat-select   name=\"company\" formControlName=\"company\">\n            <mat-option *ngFor=\"let company of activeCompanyList\" [value]=\"company.id\" >\n              {{company.companyName}}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n        <mat-form-field class=\"col-md-6\" appearance=\"outline\" *ngIf=\"selectedReportType === reportTypes.COLLECTION_REPORT || selectedReportType === reportTypes.REPORT_PER_APPLICANT\">\n          <mat-label>Applicant:</mat-label>\n          <mat-select   name=\"applicant\" formControlName=\"applicant\">\n            <mat-option *ngFor=\"let applicant of applicants\" [value]=\"applicant.id\" >\n              {{applicant.name}}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n        <mat-form-field class=\"col-md-6\" appearance=\"outline\" *ngIf=\"selectedReportType === reportTypes.COLLECTION_REPORT || selectedReportType === reportTypes.REPORT_PER_SCREENER\">\n          <mat-label>Screener:</mat-label>\n          <mat-select   name=\"company\" formControlName=\"screener\">\n            <mat-option *ngFor=\"let screener of screeners\" [value]=\"screener.id\" >\n              {{screener.name}}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n        <mat-form-field class=\"col-md-6\" appearance=\"outline\" *ngIf=\"selectedReportType === reportTypes.REPORT_PER_MEDIUM\">\n          <mat-label>Mediums:</mat-label>\n          <mat-select name=\"medium\" formControlName=\"medium\">\n            <mat-option *ngFor=\"let medium of typeOfMediums\" [value]=\"medium.id\" >\n              {{ medium?.description }}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n      </div>\n    </form>\n    <div class=\"row\">\n      <div class=\"col-md-9\"></div>\n      <div class=\"col-md-3\">\n        <button mat-raised-button class=\"button-red\"  (click)=\"generateReport()\"\n          [disabled]=\"reportForm.controls['dateFrom']?.errors?.required || reportForm.controls['dateTo']?.errors?.required || reportForm.controls['reportType']?.errors?.required || !isPaymentTypeRequired\">\n          <i class=\"material-icons color__white\">task_alt</i> GENERATE\n        </button>\n        <br> <br>\n      </div>\n    </div>\n  </div>\n  <div  *ngIf=\"currentUser.userRole.name === 'ROLE_SUPER_ADMIN' || currentUser.userRole.name === 'ROLE_ADMIN'\">\n    <form [formGroup]=\"newReportForm\">\n      <div class=\"row\">\n        <mat-form-field class=\"col-md-6\" appearance=\"outline\">\n          <mat-label>Date Start:</mat-label>\n          <input matInput placeholder=\"Date\" [matDatepicker]=\"dateFrom\" readonly [(ngModel)]=\"dateFrome\"\n            name=\"dateFrom\" readonly formControlName=\"dateFrom\">\n          <mat-datepicker-toggle matSuffix [for]=\"dateFrom\"></mat-datepicker-toggle>\n          <mat-datepicker color=\"warn\" #dateFrom disabled=\"false\"></mat-datepicker>\n        </mat-form-field>\n        <mat-form-field class=\"col-md-6\" appearance=\"outline\">\n          <mat-label>Date End:</mat-label>\n          <input matInput placeholder=\"Date\" [matDatepicker]=\"Date\" readonly [(ngModel)]=\"dateTo\" name=\"dateTo\"\n            formControlName=\"dateTo\">\n          <mat-datepicker-toggle matSuffix [for]=\"Date\"></mat-datepicker-toggle>\n          <mat-datepicker color=\"warn\" #Date disabled=\"false\"></mat-datepicker>\n        </mat-form-field>\n        <mat-form-field class=\"col-md-6\" appearance=\"outline\">\n          <mat-label>Report Type: </mat-label>\n          <mat-select [(ngModel)]=\"reportType\" name=\"reportType\" formControlName=\"reportType\">\n            <mat-option *ngFor=\"let i of newReportTypeList\" [value]=\"i.filename\" (click)=\"setReportType(i.filename)\">\n              {{i.name}}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n      </div>\n    </form>\n    <div class=\"row\">\n      <div class=\"col-md-9\"></div>\n      <div class=\"col-md-3\">\n        <button mat-raised-button class=\"button-red\"  (click)=\"generateReport()\"\n          [disabled]=\"newReportForm.controls['dateFrom']?.errors?.required  || newReportForm.controls['reportType']?.errors?.required \">\n          <i class=\"material-icons color__white\">task_alt</i> GENERATE\n        </button>\n        <br> <br>\n      </div>\n    </div>\n  </div>\n  </div>\n</form>\n","import { PaymentType } from \"./payment-type.model\";\n\nexport class PaymentMethod {\n    id: number;\n    paymentType: PaymentType;\n    referenceNo: string;\n    controlNo: string;\n    paymentDate: Date;\n    amount: number;\n    bankName: string\n    bankBranch: string;\n    promisorryDate: Date;\n    ccConfirmationCode: string;\n    checkNo: string;\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReportsRoutingModule } from './reports-routing.module';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { AngularMaterialModule } from '@shared';\nimport { BrowserModule } from '@angular/platform-browser'\nimport { ReportsComponent } from './reports.component';\n\n\n@NgModule({\n  declarations: [ReportsComponent],\n  imports: [\n    CommonModule,\n    ReportsRoutingModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    AngularMaterialModule,\n  ]\n})\nexport class ReportsModule { }\n"]}