{"version":3,"sources":["webpack:///src/app/modules/pages/accounting/reports/reports.component.html","webpack:///src/app/modules/pages/accounting/reports/reports.component.scss","webpack:///src/app/modules/pages/accounting/reports/reports-routing.module.ts","webpack:///src/app/modules/pages/accounting/reports/reports.component.ts","webpack:///src/app/core/models/payment-method.model.ts","webpack:///src/app/modules/pages/accounting/reports/reports.module.ts"],"names":["routes","path","component","ReportsRoutingModule","imports","forChild","exports","ReportsComponent","dataStorage","apiService","formBuilder","sweetAlertService","datepipe","spinner","report","paymentMethod","reportTypes","reportTypeList","name","COLLECTION_REPORT","filename","VAT_SUMMARY","TAX_SUMMARY","REPORT_PER_COMPANY","REPORT_PER_AGENCY","REPORT_PER_SCREENER","REPORT_PER_MEDIUM","REPORT_PER_APPLICANT","applicants","screeners","newReportTypeList","paymentTypeList","activeCompanyList","isPaymentTypeRequired","paymentTypeAll","currentUser","getUserAccount","setFormValidator","getPaymentType","getActiveCompanies","console","log","userRole","getApplicants","getScreeners","getTypeOfMediums","findAll","userAccountType","subscribe","res","push","id","responseData","data","length","filter","e","firstName","middleName","lastName","reportForm","group","reportType","required","paymentType","company","applicant","screener","medium","dateFrom","dateTo","newReportForm","unshift","userPerRole","typeOfMedium","response","typeOfMediums","description","activeCompanies","sort","_a","_b","selectedReportType","get","patchValue","selectedPaymentType","show","format","module","params","transform","value","toString","valdationReportEndpoint","validateReportsCollection","printReport","customErrorMessage","hide","generateReports","newBlob","Blob","type","downloadURL","URL","createObjectURL","anchor","document","createElement","download","href","click","reset","customSuccessMessage","err","selector","template","PaymentMethod","ReportsModule","declarations"],"mappings":"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","file":"reports-reports-module-es5.js","sourcesContent":["export default \"<form>\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12 title\\\">\\r\\n        <mat-label>\\r\\n          Reports\\r\\n        </mat-label>\\r\\n      </div>\\r\\n    </div>\\r\\n    <hr>\\r\\n    <div *ngIf=\\\"currentUser.userRole.name === 'ROLE_ACCOUNTING'\\\">\\r\\n    <form [formGroup]=\\\"reportForm\\\" >\\r\\n      <div class=\\\"row\\\">\\r\\n        <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\">\\r\\n          <mat-label>Date Start:</mat-label>\\r\\n          <input matInput placeholder=\\\"Date\\\" [matDatepicker]=\\\"dateFrom\\\" readonly [(ngModel)]=\\\"dateFrome\\\"\\r\\n            name=\\\"dateFrom\\\" readonly formControlName=\\\"dateFrom\\\">\\r\\n          <mat-datepicker-toggle matSuffix [for]=\\\"dateFrom\\\"></mat-datepicker-toggle>\\r\\n          <mat-datepicker color=\\\"warn\\\" #dateFrom disabled=\\\"false\\\"></mat-datepicker>\\r\\n        </mat-form-field>\\r\\n        <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\">\\r\\n          <mat-label>Date End:</mat-label>\\r\\n          <input matInput placeholder=\\\"Date\\\" [matDatepicker]=\\\"Date\\\" readonly [(ngModel)]=\\\"dateTo\\\" name=\\\"dateTo\\\"\\r\\n            formControlName=\\\"dateTo\\\">\\r\\n          <mat-datepicker-toggle matSuffix [for]=\\\"Date\\\"></mat-datepicker-toggle>\\r\\n          <mat-datepicker color=\\\"warn\\\" #Date disabled=\\\"false\\\"></mat-datepicker>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\">\\r\\n        <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\">\\r\\n          <mat-label>Report Type: </mat-label>\\r\\n          <mat-select [(ngModel)]=\\\"reportType\\\" name=\\\"reportType\\\" formControlName=\\\"reportType\\\">\\r\\n            <mat-option *ngFor=\\\"let i of reportTypeList\\\" [value]=\\\"i\\\"  (click)=\\\"setReportType(i)\\\">\\r\\n              {{i.name}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n        <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\" *ngIf=\\\"selectedReportType !== reportTypes.VAT_SUMMARY && selectedReportType !== reportTypes.TAX_SUMMARY\\\">\\r\\n          <mat-label>Payment Type:</mat-label>\\r\\n          <mat-select name=\\\"paymentType\\\" formControlName=\\\"paymentType\\\">\\r\\n            <mat-option *ngFor=\\\"let i of paymentTypeList\\\" [value]=\\\"i.id\\\" (click)=\\\"setPaymentType(i.id)\\\">\\r\\n              {{i.paymentDescription}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n        <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\" *ngIf=\\\"selectedReportType === reportTypes.COLLECTION_REPORT || selectedReportType === reportTypes.REPORT_PER_COMPANY || selectedReportType === reportTypes.REPORT_PER_AGENCY\\\">\\r\\n          <mat-label>Company:</mat-label>\\r\\n          <mat-select   name=\\\"company\\\" formControlName=\\\"company\\\">\\r\\n            <mat-option *ngFor=\\\"let company of activeCompanyList\\\" [value]=\\\"company.id\\\" >\\r\\n              {{company.companyName}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n        <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\" *ngIf=\\\"selectedReportType === reportTypes.COLLECTION_REPORT || selectedReportType === reportTypes.REPORT_PER_APPLICANT\\\">\\r\\n          <mat-label>Applicant:</mat-label>\\r\\n          <mat-select   name=\\\"applicant\\\" formControlName=\\\"applicant\\\">\\r\\n            <mat-option *ngFor=\\\"let applicant of applicants\\\" [value]=\\\"applicant.id\\\" >\\r\\n              {{applicant.name}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n        <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\" *ngIf=\\\"selectedReportType === reportTypes.COLLECTION_REPORT || selectedReportType === reportTypes.REPORT_PER_SCREENER\\\">\\r\\n          <mat-label>Screener:</mat-label>\\r\\n          <mat-select   name=\\\"company\\\" formControlName=\\\"screener\\\">\\r\\n            <mat-option *ngFor=\\\"let screener of screeners\\\" [value]=\\\"screener.id\\\" >\\r\\n              {{screener.name}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n        <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\" *ngIf=\\\"selectedReportType === reportTypes.REPORT_PER_MEDIUM\\\">\\r\\n          <mat-label>Mediums:</mat-label>\\r\\n          <mat-select name=\\\"medium\\\" formControlName=\\\"medium\\\">\\r\\n            <mat-option *ngFor=\\\"let medium of typeOfMediums\\\" [value]=\\\"medium.id\\\" >\\r\\n              {{ medium?.description }}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n    </form>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-9\\\"></div>\\r\\n      <div class=\\\"col-md-3\\\">\\r\\n        <button mat-raised-button class=\\\"button-red\\\"  (click)=\\\"generateReport()\\\"\\r\\n          [disabled]=\\\"reportForm.controls['dateFrom']?.errors?.required || reportForm.controls['dateTo']?.errors?.required || reportForm.controls['reportType']?.errors?.required || !isPaymentTypeRequired\\\">\\r\\n          <i class=\\\"material-icons color__white\\\">task_alt</i> GENERATE\\r\\n        </button>\\r\\n        <br> <br>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div  *ngIf=\\\"currentUser.userRole.name === 'ROLE_SUPER_ADMIN' || currentUser.userRole.name === 'ROLE_ADMIN'\\\">\\r\\n    <form [formGroup]=\\\"newReportForm\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\">\\r\\n          <mat-label>Date Start:</mat-label>\\r\\n          <input matInput placeholder=\\\"Date\\\" [matDatepicker]=\\\"dateFrom\\\" readonly [(ngModel)]=\\\"dateFrome\\\"\\r\\n            name=\\\"dateFrom\\\" readonly formControlName=\\\"dateFrom\\\">\\r\\n          <mat-datepicker-toggle matSuffix [for]=\\\"dateFrom\\\"></mat-datepicker-toggle>\\r\\n          <mat-datepicker color=\\\"warn\\\" #dateFrom disabled=\\\"false\\\"></mat-datepicker>\\r\\n        </mat-form-field>\\r\\n        <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\">\\r\\n          <mat-label>Date End:</mat-label>\\r\\n          <input matInput placeholder=\\\"Date\\\" [matDatepicker]=\\\"Date\\\" readonly [(ngModel)]=\\\"dateTo\\\" name=\\\"dateTo\\\"\\r\\n            formControlName=\\\"dateTo\\\">\\r\\n          <mat-datepicker-toggle matSuffix [for]=\\\"Date\\\"></mat-datepicker-toggle>\\r\\n          <mat-datepicker color=\\\"warn\\\" #Date disabled=\\\"false\\\"></mat-datepicker>\\r\\n        </mat-form-field>\\r\\n        <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\">\\r\\n          <mat-label>Report Type: </mat-label>\\r\\n          <mat-select [(ngModel)]=\\\"reportType\\\" name=\\\"reportType\\\" formControlName=\\\"reportType\\\">\\r\\n            <mat-option *ngFor=\\\"let i of newReportTypeList\\\" [value]=\\\"i.filename\\\" (click)=\\\"setReportType(i.filename)\\\">\\r\\n              {{i.name}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n    </form>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-9\\\"></div>\\r\\n      <div class=\\\"col-md-3\\\">\\r\\n        <button mat-raised-button class=\\\"button-red\\\"  (click)=\\\"generateReport()\\\"\\r\\n          [disabled]=\\\"newReportForm.controls['dateFrom']?.errors?.required  || newReportForm.controls['reportType']?.errors?.required \\\">\\r\\n          <i class=\\\"material-icons color__white\\\">task_alt</i> GENERATE\\r\\n        </button>\\r\\n        <br> <br>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  </div>\\r\\n</form>\\r\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcGFnZXMvYWNjb3VudGluZy9yZXBvcnRzL3JlcG9ydHMuY29tcG9uZW50LnNjc3MifQ== */\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ReportsComponent } from './reports.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path:'',\r\n    component: ReportsComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ReportsRoutingModule { }\r\n","import { GenericResponse } from './../../../../core/models/generic-response-model/generic-response.model';\r\nimport { DatePipe } from '@angular/common';\r\nimport { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ApiService, DataStorageService, SweetAlertService } from '@services';\r\nimport { ENDPOINTS, REPORT_TYPE } from '@shared';\r\nimport { PaymentMethod } from 'app/core/models/payment-method.model';\r\nimport { Report } from 'app/core/models/report.model';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\n\r\n@Component({\r\n  selector: 'app-reports',\r\n  templateUrl: './reports.component.html',\r\n  styleUrls: ['./reports.component.scss']\r\n})\r\nexport class ReportsComponent implements OnInit, OnDestroy {\r\n\r\n  report = new Report();\r\n  reportForm: FormGroup;\r\n  newReportForm: FormGroup;\r\n  paymentMethod = new PaymentMethod();\r\n  reportTypes = REPORT_TYPE;\r\n  typeOfMediums: Array<any>;\r\n\r\n  reportTypeList = [\r\n    { name: REPORT_TYPE.COLLECTION_REPORT, filename: 'Collection_Report' },\r\n    { name: REPORT_TYPE.VAT_SUMMARY, filename: 'VAT_TAX_Summary' },\r\n    { name: REPORT_TYPE.TAX_SUMMARY, filename: 'VAT_TAX_Summary' },\r\n    { name: REPORT_TYPE.REPORT_PER_COMPANY, filename: 'Per_Company' },\r\n    { name: REPORT_TYPE.REPORT_PER_AGENCY, filename: 'Per_Agency' },\r\n    { name: REPORT_TYPE.REPORT_PER_SCREENER, filename: 'Per_Screener' },\r\n    { name: REPORT_TYPE.REPORT_PER_MEDIUM, filename: 'Per_Type_Of_Medium' },\r\n    { name: REPORT_TYPE.REPORT_PER_APPLICANT, filename: 'Per_Applicant' }\r\n\r\n  ];\r\n\r\n  applicants: Array<any> = [];\r\n\r\n  screeners: Array<any> = [];\r\n  newReportTypeList = [\r\n    { name: 'Application Per Decision', filename: 'Application_Per_Decision' },\r\n    { name: 'Screeners Productivity', filename: 'Screeners_Productivity' },\r\n    { name: 'Ad Specialists-Encoders', filename: 'Ad_Specialists-Encoders' },\r\n    { name: 'Top 20 Agencies', filename: 'Top_20_Agencies' },\r\n    { name: 'Top 20 Categories(by Decision)', filename: 'Top_20_Categories(by_Decision)' },\r\n    { name: 'Top 5 Categories Disapproval', filename: 'Top_5_Categories_Disapproval' },\r\n    { name: 'Top 5 Agencies Disapproval', filename: 'Top_5_Agencies_Disapproval' },\r\n    { name: 'Decision Per Type of medium', filename: 'Decision_per_type_of_medium' },\r\n    { name: 'Top 20 Clients(with Medium)', filename: 'Top_20_Clients(with_Medium)' },\r\n    { name: 'Top 20 Categories(with Medium)', filename: 'Top_20_Categories(with_Medium)' },\r\n    { name: 'Top 20 Clients', filename: 'Top_20_Clients' },\r\n    { name: 'Top 20 Agencies(with client)', filename: 'Top_20_Agencies(with_client)' }\r\n  ]\r\n  \r\n\r\n  paymentTypeList = [];\r\n\r\n  activeCompanyList:Array<any> = [\r\n\r\n  ];\r\n\r\n  selectedReportType: any;\r\n  selectedPaymentType: number;\r\n  isPaymentTypeRequired = true;\r\n  reportType: any;\r\n  dateTo: any;\r\n  dateFrome: any;\r\n  currentUser: any;\r\n  paymentTypeAll = {\r\n    \"id\": 0,\r\n    \"paymentDescription\": \"All\",\r\n  };\r\n\r\n  constructor(\r\n    private dataStorage: DataStorageService,\r\n    private apiService: ApiService,\r\n    private formBuilder: FormBuilder,\r\n    private sweetAlertService: SweetAlertService,\r\n    public datepipe: DatePipe,\r\n    private spinner: NgxSpinnerService,\r\n  ) { \r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.currentUser = this.dataStorage.getUserAccount();\r\n    this.setFormValidator();\r\n    this.getPaymentType();\r\n    this.getActiveCompanies();\r\n    console.log(this.currentUser.userRole.name);\r\n    this.getApplicants();\r\n    this.getScreeners();\r\n    this.getTypeOfMediums();\r\n\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n\r\n  }\r\n\r\n  getApplicants(){\r\n    this.apiService.findAll(ENDPOINTS.userAccountType + '/APPLICANT').subscribe( (res: GenericResponse<Array<any>>)=>{\r\n      // console.log('applicants', res.responseData.data);\r\n      this.applicants.push({name: 'ALL', id: 0});\r\n      if(res?.responseData?.data && res?.responseData?.data?.length){\r\n        res.responseData.data.filter( e=>{\r\n          this.applicants.push(\r\n            {name:`${e.firstName} ${e.middleName} ${e.lastName}` , id:e.id}\r\n          )\r\n        })\r\n      }\r\n    })\r\n  }\r\n  \r\n\r\n  setFormValidator(): void {\r\n\r\n    if (this.currentUser.userRole.name === 'ROLE_ACCOUNTING') {\r\n      this.reportForm = this.formBuilder.group({\r\n        reportType: ['', [Validators.required]],\r\n        paymentType: [0],\r\n        company: [0],\r\n        applicant: [0],\r\n        screener: [0],\r\n        medium: [0],\r\n        dateFrom: ['', [Validators.required]],\r\n        dateTo: ['', [Validators.required]],\r\n      })\r\n    } else {\r\n      this.newReportForm = this.formBuilder.group({\r\n        reportType: ['', [Validators.required]],\r\n        dateFrom: ['', [Validators.required]],\r\n        dateTo: ['', [Validators.required]]\r\n      })\r\n    }\r\n  }\r\n\r\n  getPaymentType() {\r\n    this.apiService.findAll(ENDPOINTS.paymentType).subscribe((res: any) => {\r\n      this.paymentTypeList = res.responseData.data;\r\n      this.paymentTypeList.unshift(this.paymentTypeAll);\r\n    })\r\n  }\r\n\r\n  getScreeners(){\r\n    this.apiService.findAll(`${ENDPOINTS.userPerRole}${8}`).subscribe(screener=>{\r\n      this.screeners.push({name: 'ALL', id: 0});\r\n      if(screener?.responseData?.data && screener?.responseData?.data?.length){\r\n        screener.responseData.data.filter( e=>{\r\n          this.screeners.push(\r\n            {name:`${e.firstName} ${e.middleName} ${e.lastName}` , id:e.id}\r\n          )\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  getTypeOfMediums(): void {\r\n    this.apiService.findAll(`${ENDPOINTS.typeOfMedium}`).subscribe(response=>{\r\n      this.typeOfMediums = response.responseData.data;\r\n      this.typeOfMediums.unshift({ description: 'ALL', id: 0 });\r\n    });\r\n  }\r\n\r\n  getActiveCompanies(){\r\n    this.apiService.findAll(ENDPOINTS.activeCompanies).subscribe( res=>{\r\n      \r\n      this.activeCompanyList = res.responseData.data;\r\n      this.activeCompanyList.push(\r\n        {\r\n          \"id\": 0,\r\n          \"companyName\": \"All\", \r\n        }\r\n      )\r\n      this.activeCompanyList.sort( (_a,_b)=>{\r\n        return (_a.id - _b.id)\r\n      });\r\n    })\r\n  }\r\n\r\n  setReportType(res) {\r\n    if (this.currentUser.userRole.name === 'ROLE_ACCOUNTING') {\r\n      this.selectedReportType = res.name;\r\n      if (this.selectedReportType === 'Collection Report') {\r\n        this.isPaymentTypeRequired = false;\r\n      } else {\r\n        this.reportForm.get('paymentType').patchValue(0);\r\n        this.isPaymentTypeRequired = true;\r\n        this.selectedPaymentType = 0;\r\n      }\r\n    } else {\r\n      this.selectedReportType = res;\r\n    }\r\n  }\r\n\r\n  setPaymentType(id) {\r\n    this.isPaymentTypeRequired = true;\r\n    this.selectedPaymentType = id;\r\n  }\r\n\r\n  generateReport() {\r\n     this.spinner.show();\r\n    this.report.format = 'xlsx';\r\n    console.log('selected ', this.selectedReportType)\r\n    if (this.currentUser.userRole.name === 'ROLE_ACCOUNTING') {\r\n      this.report.filename = 'VAT_TAX_Summary';\r\n\r\n      this.report.module = 'Report';\r\n      this.report.params = { 'dateFrom': `${this.datepipe.transform(this.reportForm.get('dateFrom').value, 'MM/dd/yyyy').toString()}`, 'dateTo': `${this.datepipe.transform(this.reportForm.get('dateTo').value, 'MM/dd/yyyy')}`, 'reportType': this.reportType.filename}\r\n      let valdationReportEndpoint = ENDPOINTS.validateReportsCollection + `/date-from/${this.datepipe.transform(this.reportForm.get('dateFrom').value, 'yyyy-MM-dd').toString()}/date-to/${this.datepipe.transform(this.reportForm.get('dateTo').value, 'yyyy-MM-dd').toString()}`;\r\n\r\n      if (this.selectedReportType === 'Collection Report') {\r\n        this.report.filename = 'Collection_Report';\r\n        valdationReportEndpoint = ENDPOINTS.validateReportsCollection + `/date-from/${this.datepipe.transform(this.reportForm.get('dateFrom').value, 'yyyy-MM-dd').toString()}/date-to/${this.datepipe.transform(this.reportForm.get('dateTo').value, 'yyyy-MM-dd').toString()}/payment-type-id/${this.selectedPaymentType}`;\r\n        this.report.params = { 'dateFrom': `${this.datepipe.transform(this.reportForm.get('dateFrom').value, 'MM/dd/yyyy').toString()}`, 'dateTo': `${this.datepipe.transform(this.reportForm.get('dateTo').value, 'MM/dd/yyyy')}`, 'paymentTypeId': this.selectedPaymentType }\r\n      } else if (this.selectedReportType === REPORT_TYPE.REPORT_PER_COMPANY){\r\n        this.report.filename = 'Per_Company';\r\n        valdationReportEndpoint = ENDPOINTS.validateReportsCollection + `/date-from/${this.datepipe.transform(this.reportForm.get('dateFrom').value, 'yyyy-MM-dd').toString()}/date-to/${this.datepipe.transform(this.reportForm.get('dateTo').value, 'yyyy-MM-dd').toString()}/payment-type-id/${this.selectedPaymentType}`;\r\n        this.report.params = { 'companyId': this.reportForm.get('company').value, 'dateFrom': `${this.datepipe.transform(this.reportForm.get('dateFrom').value, 'MM/dd/yyyy').toString()}`, 'dateTo': `${this.datepipe.transform(this.reportForm.get('dateTo').value, 'MM/dd/yyyy')}`, 'paymentTypeId': this.selectedPaymentType }\r\n      } else if(this.selectedReportType === REPORT_TYPE.REPORT_PER_AGENCY){\r\n        this.report.filename = 'Per_Agency';\r\n        valdationReportEndpoint = ENDPOINTS.validateReportsCollection + `/date-from/${this.datepipe.transform(this.reportForm.get('dateFrom').value, 'yyyy-MM-dd').toString()}/date-to/${this.datepipe.transform(this.reportForm.get('dateTo').value, 'yyyy-MM-dd').toString()}/payment-type-id/${this.selectedPaymentType}`;\r\n        this.report.params = { 'agencyId': this.reportForm.get('company').value, 'dateFrom': `${this.datepipe.transform(this.reportForm.get('dateFrom').value, 'MM/dd/yyyy').toString()}`, 'dateTo': `${this.datepipe.transform(this.reportForm.get('dateTo').value, 'MM/dd/yyyy')}`, 'paymentTypeId': this.selectedPaymentType }\r\n      } else if(this.selectedReportType === REPORT_TYPE.REPORT_PER_SCREENER){\r\n        this.report.filename = 'Per_Screener';\r\n        valdationReportEndpoint = ENDPOINTS.validateReportsCollection + `/date-from/${this.datepipe.transform(this.reportForm.get('dateFrom').value, 'yyyy-MM-dd').toString()}/date-to/${this.datepipe.transform(this.reportForm.get('dateTo').value, 'yyyy-MM-dd').toString()}/payment-type-id/${this.selectedPaymentType}`;\r\n        this.report.params = { 'screenerId': this.reportForm.get('screener').value, 'dateFrom': `${this.datepipe.transform(this.reportForm.get('dateFrom').value, 'MM/dd/yyyy').toString()}`, 'dateTo': `${this.datepipe.transform(this.reportForm.get('dateTo').value, 'MM/dd/yyyy')}`, 'paymentTypeId': this.selectedPaymentType }\r\n      } else if(this.selectedReportType === REPORT_TYPE.REPORT_PER_APPLICANT){\r\n        this.report.filename = 'Per_Applicant';\r\n        valdationReportEndpoint = ENDPOINTS.validateReportsCollection + `/date-from/${this.datepipe.transform(this.reportForm.get('dateFrom').value, 'yyyy-MM-dd').toString()}/date-to/${this.datepipe.transform(this.reportForm.get('dateTo').value, 'yyyy-MM-dd').toString()}/payment-type-id/${this.selectedPaymentType}`;\r\n        this.report.params = { 'applicantId': this.reportForm.get('applicant').value, 'dateFrom': `${this.datepipe.transform(this.reportForm.get('dateFrom').value, 'MM/dd/yyyy').toString()}`, 'dateTo': `${this.datepipe.transform(this.reportForm.get('dateTo').value, 'MM/dd/yyyy')}`, 'paymentTypeId': this.selectedPaymentType }\r\n      } else if(this.selectedReportType === REPORT_TYPE.REPORT_PER_MEDIUM){\r\n        this.report.filename = 'Per_Type_Of_Medium';\r\n        valdationReportEndpoint = ENDPOINTS.validateReportsCollection + `/date-from/${this.datepipe.transform(this.reportForm.get('dateFrom').value, 'yyyy-MM-dd').toString()}/date-to/${this.datepipe.transform(this.reportForm.get('dateTo').value, 'yyyy-MM-dd').toString()}/payment-type-id/${this.selectedPaymentType}`;\r\n        this.report.params = { 'typeOfMediumId': this.reportForm.get('medium').value, 'dateFrom': `${this.datepipe.transform(this.reportForm.get('dateFrom').value, 'MM/dd/yyyy').toString()}`, 'dateTo': `${this.datepipe.transform(this.reportForm.get('dateTo').value, 'MM/dd/yyyy')}`, 'paymentTypeId': this.selectedPaymentType }\r\n      } else if (this.selectedReportType === 'VAT Summary') {\r\n        this.report.params = { 'dateFrom': `${this.datepipe.transform(this.reportForm.get('dateFrom').value, 'MM/dd/yyyy').toString()}`, 'dateTo': `${this.datepipe.transform(this.reportForm.get('dateTo').value, 'MM/dd/yyyy')}`, 'reportType': 'vat' }\r\n      } else if (this.selectedReportType === 'TAX Summary') {\r\n        this.report.params = { 'dateFrom': `${this.datepipe.transform(this.reportForm.get('dateFrom').value, 'MM/dd/yyyy').toString()}`, 'dateTo': `${this.datepipe.transform(this.reportForm.get('dateTo').value, 'MM/dd/yyyy')}`, 'reportType': 'wtax' }\r\n      }\r\n\r\n      this.apiService.findAll(valdationReportEndpoint).subscribe((data: any) => {\r\n\r\n        if (data.length > 0) {\r\n          this.printReport(this.report);\r\n        } else {\r\n          this.sweetAlertService.customErrorMessage('No Record found on date ranged');\r\n          this.spinner.hide();\r\n        }\r\n      });\r\n\r\n    } else {\r\n     \r\n      this.report.filename = this.selectedReportType;\r\n      let dateFrom = `${this.datepipe.transform(this.newReportForm.get('dateFrom').value, 'MM/dd/yyyy').toString()}`;\r\n      let dateTo = `${this.datepipe.transform(this.newReportForm.get('dateTo').value, 'MM/dd/yyyy')}`;\r\n      this.report.module = 'AppData';\r\n      this.report.params = { 'dateFrom': dateFrom, 'dateTo': dateTo };\r\n      this.printReport(this.report);\r\n    }\r\n\r\n  }\r\n\r\n  printReport(report) {\r\n    this.apiService.printReport(ENDPOINTS.generateReports, report).subscribe((data: any) => {\r\n      const newBlob = new Blob([(data)], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });\r\n      const downloadURL = URL.createObjectURL(newBlob);\r\n      var anchor = document.createElement('a');\r\n      anchor.download = this.selectedReportType + '.xlsx';\r\n      anchor.href = downloadURL;\r\n      anchor.click();\r\n      if (this.currentUser.userRole.name === 'ROLE_ACCOUNTING') {\r\n        this.reportForm.reset();\r\n        this.reportForm.patchValue({\r\n          paymentType: 0,\r\n          company: 0,\r\n          applicant: 0,\r\n          screener: 0,\r\n          medium: 0,\r\n        });\r\n      } else {\r\n        this.newReportForm.reset();\r\n      }\r\n      this.selectedReportType = null;\r\n      this.sweetAlertService.customSuccessMessage('Successfully Generated!');\r\n      this.spinner.hide();\r\n    }, (err: any) => {\r\n      // console.log(err);\r\n        this.spinner.hide();\r\n      this.sweetAlertService.customErrorMessage('No Record found on date ranged');\r\n    });\r\n  }\r\n\r\n}\r\n","import { PaymentType } from \"./payment-type.model\";\r\n\r\nexport class PaymentMethod {\r\n    id: number;\r\n    paymentType: PaymentType;\r\n    referenceNo: string;\r\n    controlNo: string;\r\n    paymentDate: Date;\r\n    amount: number;\r\n    bankName: string\r\n    bankBranch: string;\r\n    promisorryDate: Date;\r\n    ccConfirmationCode: string;\r\n    checkNo: string;\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReportsRoutingModule } from './reports-routing.module';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { AngularMaterialModule } from '@shared';\r\nimport { BrowserModule } from '@angular/platform-browser'\r\nimport { ReportsComponent } from './reports.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [ReportsComponent],\r\n  imports: [\r\n    CommonModule,\r\n    ReportsRoutingModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule,\r\n    AngularMaterialModule,\r\n  ]\r\n})\r\nexport class ReportsModule { }\r\n"]}