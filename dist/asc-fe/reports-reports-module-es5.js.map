<<<<<<< HEAD
{"version":3,"sources":["webpack:///src/app/modules/pages/accounting/reports/reports-routing.module.ts","webpack:///src/app/modules/pages/accounting/reports/reports.component.ts","webpack:///src/app/modules/pages/accounting/reports/reports.component.html","webpack:///src/app/modules/pages/accounting/reports/reports.module.ts"],"names":["routes","path","component","ReportsRoutingModule","forChild","ReportsComponent","dataStorage","apiService","formBuilder","sweetAlertService","datepipe","spinner","report","paymentMethod","reportTypes","reportTypeList","name","COLLECTION_REPORT","filename","VAT_SUMMARY","TAX_SUMMARY","REPORT_PER_COMPANY","REPORT_PER_AGENCY","REPORT_PER_SCREENER","REPORT_PER_MEDIUM","REPORT_PER_APPLICANT","applicants","screeners","newReportTypeList","paymentTypeList","activeCompanyList","isPaymentTypeRequired","paymentTypeAll","currentUser","getUserAccount","setFormValidator","getPaymentType","getActiveCompanies","console","log","userRole","getApplicants","getScreeners","getTypeOfMediums","findAll","userAccountType","subscribe","res","push","id","responseData","data","length","filter","e","firstName","middleName","lastName","reportForm","group","reportType","required","paymentType","company","applicant","screener","medium","dateFrom","dateTo","newReportForm","unshift","userPerRole","typeOfMedium","response","typeOfMediums","description","activeCompanies","sort","_a","_b","selectedReportType","get","patchValue","selectedPaymentType","show","format","module","params","transform","value","toString","valdationReportEndpoint","validateReportsCollection","printReport","customErrorMessage","hide","generateReports","newBlob","Blob","type","downloadURL","URL","createObjectURL","anchor","document","createElement","download","href","click","reset","customSuccessMessage","err","ReportsModule"],"mappings":"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","file":"reports-reports-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ReportsComponent } from './reports.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path:'',\r\n    component: ReportsComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ReportsRoutingModule { }\r\n","import { GenericResponse } from './../../../../core/models/generic-response-model/generic-response.model';\r\nimport { DatePipe } from '@angular/common';\r\nimport { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ApiService, DataStorageService, SweetAlertService } from '@services';\r\nimport { ENDPOINTS, REPORT_TYPE } from '@shared';\r\nimport { PaymentMethod } from 'app/core/models/payment-method.model';\r\nimport { Report } from 'app/core/models/report.model';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\n\r\n@Component({\r\n  selector: 'app-reports',\r\n  templateUrl: './reports.component.html',\r\n  styleUrls: ['./reports.component.scss']\r\n})\r\nexport class ReportsComponent implements OnInit, OnDestroy {\r\n\r\n  report = new Report();\r\n  reportForm: FormGroup;\r\n  newReportForm: FormGroup;\r\n  paymentMethod = new PaymentMethod();\r\n  reportTypes = REPORT_TYPE;\r\n  typeOfMediums: Array<any>;\r\n\r\n  reportTypeList = [\r\n    { name: REPORT_TYPE.COLLECTION_REPORT, filename: 'Collection_Report' },\r\n    { name: REPORT_TYPE.VAT_SUMMARY, filename: 'VAT_TAX_Summary' },\r\n    { name: REPORT_TYPE.TAX_SUMMARY, filename: 'VAT_TAX_Summary' },\r\n    { name: REPORT_TYPE.REPORT_PER_COMPANY, filename: 'Per_Company' },\r\n    { name: REPORT_TYPE.REPORT_PER_AGENCY, filename: 'Per_Agency' },\r\n    { name: REPORT_TYPE.REPORT_PER_SCREENER, filename: 'Per_Screener' },\r\n    { name: REPORT_TYPE.REPORT_PER_MEDIUM, filename: 'Per_Type_Of_Medium' },\r\n    { name: REPORT_TYPE.REPORT_PER_APPLICANT, filename: 'Per_Applicant' }\r\n\r\n  ];\r\n\r\n  applicants: Array<any> = [];\r\n\r\n  screeners: Array<any> = [];\r\n  newReportTypeList = [\r\n    { name: 'Application Per Decision', filename: 'Application_Per_Decision' },\r\n    { name: 'Screeners Productivity', filename: 'Screeners_Productivity' },\r\n    { name: 'Ad Specialists-Encoders', filename: 'Ad_Specialists-Encoders' },\r\n    { name: 'Top 20 Agencies', filename: 'Top_20_Agencies' },\r\n    { name: 'Top 20 Categories(by Decision)', filename: 'Top_20_Categories(by_Decision)' },\r\n    { name: 'Top 5 Categories Disapproval', filename: 'Top_5_Categories_Disapproval' },\r\n    { name: 'Top 5 Agencies Disapproval', filename: 'Top_5_Agencies_Disapproval' },\r\n    { name: 'Decision Per Type of medium', filename: 'Decision_per_type_of_medium' },\r\n    { name: 'Top 20 Clients(with Medium)', filename: 'Top_20_Clients(with_Medium)' },\r\n    { name: 'Top 20 Categories(with Medium)', filename: 'Top_20_Categories(with_Medium)' },\r\n    { name: 'Top 20 Clients', filename: 'Top_20_Clients' },\r\n    { name: 'Top 20 Agencies(with client)', filename: 'Top_20_Agencies(with_client)' }\r\n  ]\r\n  \r\n\r\n  paymentTypeList = [];\r\n\r\n  activeCompanyList:Array<any> = [\r\n\r\n  ];\r\n\r\n  selectedReportType: any;\r\n  selectedPaymentType: number;\r\n  isPaymentTypeRequired = true;\r\n  reportType: any;\r\n  dateTo: any;\r\n  dateFrome: any;\r\n  currentUser: any;\r\n  paymentTypeAll = {\r\n    \"id\": 0,\r\n    \"paymentDescription\": \"All\",\r\n  };\r\n\r\n  constructor(\r\n    private dataStorage: DataStorageService,\r\n    private apiService: ApiService,\r\n    private formBuilder: FormBuilder,\r\n    private sweetAlertService: SweetAlertService,\r\n    public datepipe: DatePipe,\r\n    private spinner: NgxSpinnerService,\r\n  ) { \r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.currentUser = this.dataStorage.getUserAccount();\r\n    this.setFormValidator();\r\n    this.getPaymentType();\r\n    this.getActiveCompanies();\r\n    console.log(this.currentUser.userRole.name);\r\n    this.getApplicants();\r\n    this.getScreeners();\r\n    this.getTypeOfMediums();\r\n\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n\r\n  }\r\n\r\n  getApplicants(){\r\n    this.apiService.findAll(ENDPOINTS.userAccountType + '/APPLICANT').subscribe( (res: GenericResponse<Array<any>>)=>{\r\n      // console.log('applicants', res.responseData.data);\r\n      this.applicants.push({name: 'ALL', id: 0});\r\n      if(res?.responseData?.data && res?.responseData?.data?.length){\r\n        res.responseData.data.filter( e=>{\r\n          this.applicants.push(\r\n            {name:`${e.firstName} ${e.middleName} ${e.lastName}` , id:e.id}\r\n          )\r\n        })\r\n      }\r\n    })\r\n  }\r\n  \r\n\r\n  setFormValidator(): void {\r\n\r\n    if (this.currentUser.userRole.name === 'ROLE_ACCOUNTING') {\r\n      this.reportForm = this.formBuilder.group({\r\n        reportType: ['', [Validators.required]],\r\n        paymentType: [0],\r\n        company: [0],\r\n        applicant: [0],\r\n        screener: [0],\r\n        medium: [0],\r\n        dateFrom: ['', [Validators.required]],\r\n        dateTo: ['', [Validators.required]],\r\n      })\r\n    } else {\r\n      this.newReportForm = this.formBuilder.group({\r\n        reportType: ['', [Validators.required]],\r\n        dateFrom: ['', [Validators.required]],\r\n        dateTo: ['', [Validators.required]]\r\n      })\r\n    }\r\n  }\r\n\r\n  getPaymentType() {\r\n    this.apiService.findAll(ENDPOINTS.paymentType).subscribe((res: any) => {\r\n      this.paymentTypeList = res.responseData.data;\r\n      this.paymentTypeList.unshift(this.paymentTypeAll);\r\n    })\r\n  }\r\n\r\n  getScreeners(){\r\n    this.apiService.findAll(`${ENDPOINTS.userPerRole}${8}`).subscribe(screener=>{\r\n      this.screeners.push({name: 'ALL', id: 0});\r\n      if(screener?.responseData?.data && screener?.responseData?.data?.length){\r\n        screener.responseData.data.filter( e=>{\r\n          this.screeners.push(\r\n            {name:`${e.firstName} ${e.middleName} ${e.lastName}` , id:e.id}\r\n          )\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  getTypeOfMediums(): void {\r\n    this.apiService.findAll(`${ENDPOINTS.typeOfMedium}`).subscribe(response=>{\r\n      this.typeOfMediums = response.responseData.data;\r\n      this.typeOfMediums.unshift({ description: 'ALL', id: 0 });\r\n    });\r\n  }\r\n\r\n  getActiveCompanies(){\r\n    this.apiService.findAll(ENDPOINTS.activeCompanies).subscribe( res=>{\r\n      \r\n      this.activeCompanyList = res.responseData.data;\r\n      this.activeCompanyList.push(\r\n        {\r\n          \"id\": 0,\r\n          \"companyName\": \"All\", \r\n        }\r\n      )\r\n      this.activeCompanyList.sort( (_a,_b)=>{\r\n        return (_a.id - _b.id)\r\n      });\r\n    })\r\n  }\r\n\r\n  setReportType(res) {\r\n    if (this.currentUser.userRole.name === 'ROLE_ACCOUNTING') {\r\n      this.selectedReportType = res.name;\r\n      if (this.selectedReportType === 'Collection Report') {\r\n        this.isPaymentTypeRequired = false;\r\n      } else {\r\n        this.reportForm.get('paymentType').patchValue(0);\r\n        this.isPaymentTypeRequired = true;\r\n        this.selectedPaymentType = 0;\r\n      }\r\n    } else {\r\n      this.selectedReportType = res;\r\n    }\r\n  }\r\n\r\n  setPaymentType(id) {\r\n    this.isPaymentTypeRequired = true;\r\n    this.selectedPaymentType = id;\r\n  }\r\n\r\n  generateReport() {\r\n     this.spinner.show();\r\n    this.report.format = 'xlsx';\r\n    console.log('selected ', this.selectedReportType)\r\n    if (this.currentUser.userRole.name === 'ROLE_ACCOUNTING') {\r\n      this.report.filename = 'VAT_TAX_Summary';\r\n\r\n      this.report.module = 'Report';\r\n      this.report.params = { 'dateFrom': `${this.datepipe.transform(this.reportForm.get('dateFrom').value, 'MM/dd/yyyy').toString()}`, 'dateTo': `${this.datepipe.transform(this.reportForm.get('dateTo').value, 'MM/dd/yyyy')}`, 'reportType': this.reportType.filename}\r\n      let valdationReportEndpoint = ENDPOINTS.validateReportsCollection + `/date-from/${this.datepipe.transform(this.reportForm.get('dateFrom').value, 'yyyy-MM-dd').toString()}/date-to/${this.datepipe.transform(this.reportForm.get('dateTo').value, 'yyyy-MM-dd').toString()}`;\r\n\r\n      if (this.selectedReportType === 'Collection Report') {\r\n        this.report.filename = 'Collection_Report';\r\n        valdationReportEndpoint = ENDPOINTS.validateReportsCollection + `/date-from/${this.datepipe.transform(this.reportForm.get('dateFrom').value, 'yyyy-MM-dd').toString()}/date-to/${this.datepipe.transform(this.reportForm.get('dateTo').value, 'yyyy-MM-dd').toString()}/payment-type-id/${this.selectedPaymentType}`;\r\n        this.report.params = { 'dateFrom': `${this.datepipe.transform(this.reportForm.get('dateFrom').value, 'MM/dd/yyyy').toString()}`, 'dateTo': `${this.datepipe.transform(this.reportForm.get('dateTo').value, 'MM/dd/yyyy')}`, 'paymentTypeId': this.selectedPaymentType }\r\n      } else if (this.selectedReportType === REPORT_TYPE.REPORT_PER_COMPANY){\r\n        this.report.filename = 'Per_Company';\r\n        valdationReportEndpoint = ENDPOINTS.validateReportsCollection + `/date-from/${this.datepipe.transform(this.reportForm.get('dateFrom').value, 'yyyy-MM-dd').toString()}/date-to/${this.datepipe.transform(this.reportForm.get('dateTo').value, 'yyyy-MM-dd').toString()}/payment-type-id/${this.selectedPaymentType}`;\r\n        this.report.params = { 'companyId': this.reportForm.get('company').value, 'dateFrom': `${this.datepipe.transform(this.reportForm.get('dateFrom').value, 'MM/dd/yyyy').toString()}`, 'dateTo': `${this.datepipe.transform(this.reportForm.get('dateTo').value, 'MM/dd/yyyy')}`, 'paymentTypeId': this.selectedPaymentType }\r\n      } else if(this.selectedReportType === REPORT_TYPE.REPORT_PER_AGENCY){\r\n        this.report.filename = 'Per_Agency';\r\n        valdationReportEndpoint = ENDPOINTS.validateReportsCollection + `/date-from/${this.datepipe.transform(this.reportForm.get('dateFrom').value, 'yyyy-MM-dd').toString()}/date-to/${this.datepipe.transform(this.reportForm.get('dateTo').value, 'yyyy-MM-dd').toString()}/payment-type-id/${this.selectedPaymentType}`;\r\n        this.report.params = { 'agencyId': this.reportForm.get('company').value, 'dateFrom': `${this.datepipe.transform(this.reportForm.get('dateFrom').value, 'MM/dd/yyyy').toString()}`, 'dateTo': `${this.datepipe.transform(this.reportForm.get('dateTo').value, 'MM/dd/yyyy')}`, 'paymentTypeId': this.selectedPaymentType }\r\n      } else if(this.selectedReportType === REPORT_TYPE.REPORT_PER_SCREENER){\r\n        this.report.filename = 'Per_Screener';\r\n        valdationReportEndpoint = ENDPOINTS.validateReportsCollection + `/date-from/${this.datepipe.transform(this.reportForm.get('dateFrom').value, 'yyyy-MM-dd').toString()}/date-to/${this.datepipe.transform(this.reportForm.get('dateTo').value, 'yyyy-MM-dd').toString()}/payment-type-id/${this.selectedPaymentType}`;\r\n        this.report.params = { 'screenerId': this.reportForm.get('screener').value, 'dateFrom': `${this.datepipe.transform(this.reportForm.get('dateFrom').value, 'MM/dd/yyyy').toString()}`, 'dateTo': `${this.datepipe.transform(this.reportForm.get('dateTo').value, 'MM/dd/yyyy')}`, 'paymentTypeId': this.selectedPaymentType }\r\n      } else if(this.selectedReportType === REPORT_TYPE.REPORT_PER_APPLICANT){\r\n        this.report.filename = 'Per_Applicant';\r\n        valdationReportEndpoint = ENDPOINTS.validateReportsCollection + `/date-from/${this.datepipe.transform(this.reportForm.get('dateFrom').value, 'yyyy-MM-dd').toString()}/date-to/${this.datepipe.transform(this.reportForm.get('dateTo').value, 'yyyy-MM-dd').toString()}/payment-type-id/${this.selectedPaymentType}`;\r\n        this.report.params = { 'applicantId': this.reportForm.get('applicant').value, 'dateFrom': `${this.datepipe.transform(this.reportForm.get('dateFrom').value, 'MM/dd/yyyy').toString()}`, 'dateTo': `${this.datepipe.transform(this.reportForm.get('dateTo').value, 'MM/dd/yyyy')}`, 'paymentTypeId': this.selectedPaymentType }\r\n      } else if(this.selectedReportType === REPORT_TYPE.REPORT_PER_MEDIUM){\r\n        this.report.filename = 'Per_Type_Of_Medium';\r\n        valdationReportEndpoint = ENDPOINTS.validateReportsCollection + `/date-from/${this.datepipe.transform(this.reportForm.get('dateFrom').value, 'yyyy-MM-dd').toString()}/date-to/${this.datepipe.transform(this.reportForm.get('dateTo').value, 'yyyy-MM-dd').toString()}/payment-type-id/${this.selectedPaymentType}`;\r\n        this.report.params = { 'typeOfMediumId': this.reportForm.get('medium').value, 'dateFrom': `${this.datepipe.transform(this.reportForm.get('dateFrom').value, 'MM/dd/yyyy').toString()}`, 'dateTo': `${this.datepipe.transform(this.reportForm.get('dateTo').value, 'MM/dd/yyyy')}`, 'paymentTypeId': this.selectedPaymentType }\r\n      } else if (this.selectedReportType === 'VAT Summary') {\r\n        this.report.params = { 'dateFrom': `${this.datepipe.transform(this.reportForm.get('dateFrom').value, 'MM/dd/yyyy').toString()}`, 'dateTo': `${this.datepipe.transform(this.reportForm.get('dateTo').value, 'MM/dd/yyyy')}`, 'reportType': 'vat' }\r\n      } else if (this.selectedReportType === 'TAX Summary') {\r\n        this.report.params = { 'dateFrom': `${this.datepipe.transform(this.reportForm.get('dateFrom').value, 'MM/dd/yyyy').toString()}`, 'dateTo': `${this.datepipe.transform(this.reportForm.get('dateTo').value, 'MM/dd/yyyy')}`, 'reportType': 'wtax' }\r\n      }\r\n\r\n      this.apiService.findAll(valdationReportEndpoint).subscribe((data: any) => {\r\n\r\n        if (data.length > 0) {\r\n          this.printReport(this.report);\r\n        } else {\r\n          this.sweetAlertService.customErrorMessage('No Record found on date ranged');\r\n          this.spinner.hide();\r\n        }\r\n      });\r\n\r\n    } else {\r\n     \r\n      this.report.filename = this.selectedReportType;\r\n      let dateFrom = `${this.datepipe.transform(this.newReportForm.get('dateFrom').value, 'MM/dd/yyyy').toString()}`;\r\n      let dateTo = `${this.datepipe.transform(this.newReportForm.get('dateTo').value, 'MM/dd/yyyy')}`;\r\n      this.report.module = 'AppData';\r\n      this.report.params = { 'dateFrom': dateFrom, 'dateTo': dateTo };\r\n      this.printReport(this.report);\r\n    }\r\n\r\n  }\r\n\r\n  printReport(report) {\r\n    this.apiService.printReport(ENDPOINTS.generateReports, report).subscribe((data: any) => {\r\n      const newBlob = new Blob([(data)], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });\r\n      const downloadURL = URL.createObjectURL(newBlob);\r\n      var anchor = document.createElement('a');\r\n      anchor.download = this.selectedReportType + '.xlsx';\r\n      anchor.href = downloadURL;\r\n      anchor.click();\r\n      if (this.currentUser.userRole.name === 'ROLE_ACCOUNTING') {\r\n        this.reportForm.reset();\r\n        this.reportForm.patchValue({\r\n          paymentType: 0,\r\n          company: 0,\r\n          applicant: 0,\r\n          screener: 0,\r\n          medium: 0,\r\n        });\r\n      } else {\r\n        this.newReportForm.reset();\r\n      }\r\n      this.selectedReportType = null;\r\n      this.sweetAlertService.customSuccessMessage('Successfully Generated!');\r\n      this.spinner.hide();\r\n    }, (err: any) => {\r\n      // console.log(err);\r\n        this.spinner.hide();\r\n      this.sweetAlertService.customErrorMessage('No Record found on date ranged');\r\n    });\r\n  }\r\n\r\n}\r\n","<form>\r\n  <div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12 title\">\r\n        <mat-label>\r\n          Reports\r\n        </mat-label>\r\n      </div>\r\n    </div>\r\n    <hr>\r\n    <div *ngIf=\"currentUser.userRole.name === 'ROLE_ACCOUNTING'\">\r\n    <form [formGroup]=\"reportForm\" >\r\n      <div class=\"row\">\r\n        <mat-form-field class=\"col-md-6\" appearance=\"outline\">\r\n          <mat-label>Date Start:</mat-label>\r\n          <input matInput placeholder=\"Date\" [matDatepicker]=\"dateFrom\" readonly [(ngModel)]=\"dateFrome\"\r\n            name=\"dateFrom\" readonly formControlName=\"dateFrom\">\r\n          <mat-datepicker-toggle matSuffix [for]=\"dateFrom\"></mat-datepicker-toggle>\r\n          <mat-datepicker color=\"warn\" #dateFrom disabled=\"false\"></mat-datepicker>\r\n        </mat-form-field>\r\n        <mat-form-field class=\"col-md-6\" appearance=\"outline\">\r\n          <mat-label>Date End:</mat-label>\r\n          <input matInput placeholder=\"Date\" [matDatepicker]=\"Date\" readonly [(ngModel)]=\"dateTo\" name=\"dateTo\"\r\n            formControlName=\"dateTo\">\r\n          <mat-datepicker-toggle matSuffix [for]=\"Date\"></mat-datepicker-toggle>\r\n          <mat-datepicker color=\"warn\" #Date disabled=\"false\"></mat-datepicker>\r\n        </mat-form-field>\r\n      </div>\r\n      <div class=\"row\">\r\n        <mat-form-field class=\"col-md-6\" appearance=\"outline\">\r\n          <mat-label>Report Type: </mat-label>\r\n          <mat-select [(ngModel)]=\"reportType\" name=\"reportType\" formControlName=\"reportType\">\r\n            <mat-option *ngFor=\"let i of reportTypeList\" [value]=\"i\"  (click)=\"setReportType(i)\">\r\n              {{i.name}}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n        <mat-form-field class=\"col-md-6\" appearance=\"outline\" *ngIf=\"selectedReportType !== reportTypes.VAT_SUMMARY && selectedReportType !== reportTypes.TAX_SUMMARY\">\r\n          <mat-label>Payment Type:</mat-label>\r\n          <mat-select name=\"paymentType\" formControlName=\"paymentType\">\r\n            <mat-option *ngFor=\"let i of paymentTypeList\" [value]=\"i.id\" (click)=\"setPaymentType(i.id)\">\r\n              {{i.paymentDescription}}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n        <mat-form-field class=\"col-md-6\" appearance=\"outline\" *ngIf=\"selectedReportType === reportTypes.COLLECTION_REPORT || selectedReportType === reportTypes.REPORT_PER_COMPANY || selectedReportType === reportTypes.REPORT_PER_AGENCY\">\r\n          <mat-label>Company:</mat-label>\r\n          <mat-select   name=\"company\" formControlName=\"company\">\r\n            <mat-option *ngFor=\"let company of activeCompanyList\" [value]=\"company.id\" >\r\n              {{company.companyName}}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n        <mat-form-field class=\"col-md-6\" appearance=\"outline\" *ngIf=\"selectedReportType === reportTypes.COLLECTION_REPORT || selectedReportType === reportTypes.REPORT_PER_APPLICANT\">\r\n          <mat-label>Applicant:</mat-label>\r\n          <mat-select   name=\"applicant\" formControlName=\"applicant\">\r\n            <mat-option *ngFor=\"let applicant of applicants\" [value]=\"applicant.id\" >\r\n              {{applicant.name}}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n        <mat-form-field class=\"col-md-6\" appearance=\"outline\" *ngIf=\"selectedReportType === reportTypes.COLLECTION_REPORT || selectedReportType === reportTypes.REPORT_PER_SCREENER\">\r\n          <mat-label>Screener:</mat-label>\r\n          <mat-select   name=\"company\" formControlName=\"screener\">\r\n            <mat-option *ngFor=\"let screener of screeners\" [value]=\"screener.id\" >\r\n              {{screener.name}}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n        <mat-form-field class=\"col-md-6\" appearance=\"outline\" *ngIf=\"selectedReportType === reportTypes.REPORT_PER_MEDIUM\">\r\n          <mat-label>Mediums:</mat-label>\r\n          <mat-select name=\"medium\" formControlName=\"medium\">\r\n            <mat-option *ngFor=\"let medium of typeOfMediums\" [value]=\"medium.id\" >\r\n              {{ medium?.description }}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n    </form>\r\n    <div class=\"row\">\r\n      <div class=\"col-md-9\"></div>\r\n      <div class=\"col-md-3\">\r\n        <button mat-raised-button class=\"button-red\"  (click)=\"generateReport()\"\r\n          [disabled]=\"reportForm.controls['dateFrom']?.errors?.required || reportForm.controls['dateTo']?.errors?.required || reportForm.controls['reportType']?.errors?.required || !isPaymentTypeRequired\">\r\n          <i class=\"material-icons color__white\">task_alt</i> GENERATE\r\n        </button>\r\n        <br> <br>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div  *ngIf=\"currentUser.userRole.name === 'ROLE_SUPER_ADMIN' || currentUser.userRole.name === 'ROLE_ADMIN'\">\r\n    <form [formGroup]=\"newReportForm\">\r\n      <div class=\"row\">\r\n        <mat-form-field class=\"col-md-6\" appearance=\"outline\">\r\n          <mat-label>Date Start:</mat-label>\r\n          <input matInput placeholder=\"Date\" [matDatepicker]=\"dateFrom\" readonly [(ngModel)]=\"dateFrome\"\r\n            name=\"dateFrom\" readonly formControlName=\"dateFrom\">\r\n          <mat-datepicker-toggle matSuffix [for]=\"dateFrom\"></mat-datepicker-toggle>\r\n          <mat-datepicker color=\"warn\" #dateFrom disabled=\"false\"></mat-datepicker>\r\n        </mat-form-field>\r\n        <mat-form-field class=\"col-md-6\" appearance=\"outline\">\r\n          <mat-label>Date End:</mat-label>\r\n          <input matInput placeholder=\"Date\" [matDatepicker]=\"Date\" readonly [(ngModel)]=\"dateTo\" name=\"dateTo\"\r\n            formControlName=\"dateTo\">\r\n          <mat-datepicker-toggle matSuffix [for]=\"Date\"></mat-datepicker-toggle>\r\n          <mat-datepicker color=\"warn\" #Date disabled=\"false\"></mat-datepicker>\r\n        </mat-form-field>\r\n        <mat-form-field class=\"col-md-6\" appearance=\"outline\">\r\n          <mat-label>Report Type: </mat-label>\r\n          <mat-select [(ngModel)]=\"reportType\" name=\"reportType\" formControlName=\"reportType\">\r\n            <mat-option *ngFor=\"let i of newReportTypeList\" [value]=\"i.filename\" (click)=\"setReportType(i.filename)\">\r\n              {{i.name}}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n    </form>\r\n    <div class=\"row\">\r\n      <div class=\"col-md-9\"></div>\r\n      <div class=\"col-md-3\">\r\n        <button mat-raised-button class=\"button-red\"  (click)=\"generateReport()\"\r\n          [disabled]=\"newReportForm.controls['dateFrom']?.errors?.required  || newReportForm.controls['reportType']?.errors?.required \">\r\n          <i class=\"material-icons color__white\">task_alt</i> GENERATE\r\n        </button>\r\n        <br> <br>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  </div>\r\n</form>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReportsRoutingModule } from './reports-routing.module';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { AngularMaterialModule } from '@shared';\r\nimport { BrowserModule } from '@angular/platform-browser'\r\nimport { ReportsComponent } from './reports.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [ReportsComponent],\r\n  imports: [\r\n    CommonModule,\r\n    ReportsRoutingModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule,\r\n    AngularMaterialModule,\r\n  ]\r\n})\r\nexport class ReportsModule { }\r\n"]}
=======
{"version":3,"sources":["webpack:///src/app/modules/pages/accounting/reports/reports-routing.module.ts","webpack:///src/app/modules/pages/accounting/reports/reports.component.ts","webpack:///src/app/modules/pages/accounting/reports/reports.component.html","webpack:///src/app/modules/pages/accounting/reports/reports.module.ts"],"names":["routes","path","component","ReportsRoutingModule","forChild","ReportsComponent","dataStorage","apiService","formBuilder","sweetAlertService","datepipe","spinner","report","paymentMethod","reportTypes","reportTypeList","name","COLLECTION_REPORT","filename","VAT_SUMMARY","TAX_SUMMARY","REPORT_PER_COMPANY","REPORT_PER_AGENCY","REPORT_PER_SCREENER","REPORT_PER_MEDIUM","REPORT_PER_APPLICANT","applicants","screeners","newReportTypeList","paymentTypeList","activeCompanyList","isPaymentTypeRequired","paymentTypeAll","currentUser","getUserAccount","setFormValidator","getPaymentType","getActiveCompanies","console","log","userRole","getApplicants","getScreeners","getTypeOfMediums","findAll","userAccountType","subscribe","res","push","id","responseData","data","length","filter","e","firstName","middleName","lastName","reportForm","group","reportType","required","paymentType","company","applicant","screener","medium","dateFrom","dateTo","newReportForm","unshift","userPerRole","typeOfMedium","response","typeOfMediums","description","activeCompanies","sort","_a","_b","selectedReportType","get","patchValue","selectedPaymentType","show","format","module","params","transform","value","toString","valdationReportEndpoint","validateReportsCollection","printReport","customErrorMessage","hide","generateReports","newBlob","Blob","type","downloadURL","URL","createObjectURL","anchor","document","createElement","download","href","click","reset","customSuccessMessage","err","ReportsModule"],"mappings":"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","file":"reports-reports-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ReportsComponent } from './reports.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path:'',\r\n    component: ReportsComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ReportsRoutingModule { }\r\n","import { GenericResponse } from './../../../../core/models/generic-response-model/generic-response.model';\r\nimport { DatePipe } from '@angular/common';\r\nimport { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ApiService, DataStorageService, SweetAlertService } from '@services';\r\nimport { ENDPOINTS, REPORT_TYPE } from '@shared';\r\nimport { PaymentMethod } from 'app/core/models/payment-method.model';\r\nimport { Report } from 'app/core/models/report.model';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\n\r\n@Component({\r\n  selector: 'app-reports',\r\n  templateUrl: './reports.component.html',\r\n  styleUrls: ['./reports.component.scss']\r\n})\r\nexport class ReportsComponent implements OnInit, OnDestroy {\r\n\r\n  report = new Report();\r\n  reportForm: FormGroup;\r\n  newReportForm: FormGroup;\r\n  paymentMethod = new PaymentMethod();\r\n  reportTypes = REPORT_TYPE;\r\n  typeOfMediums: Array<any>;\r\n\r\n  reportTypeList = [\r\n    { name: REPORT_TYPE.COLLECTION_REPORT, filename: 'Collection_Report' },\r\n    { name: REPORT_TYPE.VAT_SUMMARY, filename: 'VAT_TAX_Summary' },\r\n    { name: REPORT_TYPE.TAX_SUMMARY, filename: 'VAT_TAX_Summary' },\r\n    { name: REPORT_TYPE.REPORT_PER_COMPANY, filename: 'Per_Company' },\r\n    { name: REPORT_TYPE.REPORT_PER_AGENCY, filename: 'Per_Agency' },\r\n    { name: REPORT_TYPE.REPORT_PER_SCREENER, filename: 'Per_Screener' },\r\n    { name: REPORT_TYPE.REPORT_PER_MEDIUM, filename: 'Per_Type_Of_Medium' },\r\n    { name: REPORT_TYPE.REPORT_PER_APPLICANT, filename: 'Per_Applicant' }\r\n\r\n  ];\r\n\r\n  applicants: Array<any> = [];\r\n\r\n  screeners: Array<any> = [];\r\n  newReportTypeList = [\r\n    { name: 'Application Per Decision', filename: 'Application_Per_Decision' },\r\n    { name: 'Screeners Productivity', filename: 'Screeners_Productivity' },\r\n    { name: 'Ad Specialists-Encoders', filename: 'Ad_Specialists-Encoders' },\r\n    { name: 'Top 20 Agencies', filename: 'Top_20_Agencies' },\r\n    { name: 'Top 20 Categories(by Decision)', filename: 'Top_20_Categories(by_Decision)' },\r\n    { name: 'Top 5 Categories Disapproval', filename: 'Top_5_Categories_Disapproval' },\r\n    { name: 'Top 5 Agencies Disapproval', filename: 'Top_5_Agencies_Disapproval' },\r\n    { name: 'Decision Per Type of medium', filename: 'Decision_per_type_of_medium' },\r\n    { name: 'Top 20 Clients(with Medium)', filename: 'Top_20_Clients(with_Medium)' },\r\n    { name: 'Top 20 Categories(with Medium)', filename: 'Top_20_Categories(with_Medium)' },\r\n    { name: 'Top 20 Clients', filename: 'Top_20_Clients' },\r\n    { name: 'Top 20 Agencies(with client)', filename: 'Top_20_Agencies(with_client)' }\r\n  ]\r\n  \r\n\r\n  paymentTypeList = [];\r\n\r\n  activeCompanyList:Array<any> = [\r\n\r\n  ];\r\n\r\n  selectedReportType: any;\r\n  selectedPaymentType: number;\r\n  isPaymentTypeRequired = true;\r\n  reportType: any;\r\n  dateTo: any;\r\n  dateFrome: any;\r\n  currentUser: any;\r\n  paymentTypeAll = {\r\n    \"id\": 0,\r\n    \"paymentDescription\": \"All\",\r\n  };\r\n\r\n  constructor(\r\n    private dataStorage: DataStorageService,\r\n    private apiService: ApiService,\r\n    private formBuilder: FormBuilder,\r\n    private sweetAlertService: SweetAlertService,\r\n    public datepipe: DatePipe,\r\n    private spinner: NgxSpinnerService,\r\n  ) { \r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.currentUser = this.dataStorage.getUserAccount();\r\n    this.setFormValidator();\r\n    this.getPaymentType();\r\n    this.getActiveCompanies();\r\n    console.log(this.currentUser.userRole.name);\r\n    this.getApplicants();\r\n    this.getScreeners();\r\n    this.getTypeOfMediums();\r\n\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n\r\n  }\r\n\r\n  getApplicants(){\r\n    this.apiService.findAll(ENDPOINTS.userAccountType + '/APPLICANT').subscribe( (res: GenericResponse<Array<any>>)=>{\r\n      // console.log('applicants', res.responseData.data);\r\n      this.applicants.push({name: 'ALL', id: 0});\r\n      if(res?.responseData?.data && res?.responseData?.data?.length){\r\n        res.responseData.data.filter( e=>{\r\n          this.applicants.push(\r\n            {name:`${e.firstName} ${e.middleName} ${e.lastName}` , id:e.id}\r\n          )\r\n        })\r\n      }\r\n    })\r\n  }\r\n  \r\n\r\n  setFormValidator(): void {\r\n\r\n    if (this.currentUser.userRole.name === 'ROLE_ACCOUNTING') {\r\n      this.reportForm = this.formBuilder.group({\r\n        reportType: ['', [Validators.required]],\r\n        paymentType: [0],\r\n        company: [0],\r\n        applicant: [0],\r\n        screener: [0],\r\n        medium: [0],\r\n        dateFrom: ['', [Validators.required]],\r\n        dateTo: ['', [Validators.required]],\r\n      })\r\n    } else {\r\n      this.newReportForm = this.formBuilder.group({\r\n        reportType: ['', [Validators.required]],\r\n        dateFrom: ['', [Validators.required]],\r\n        dateTo: ['', [Validators.required]]\r\n      })\r\n    }\r\n  }\r\n\r\n  getPaymentType() {\r\n    this.apiService.findAll(ENDPOINTS.paymentType).subscribe((res: any) => {\r\n      this.paymentTypeList = res.responseData.data;\r\n      this.paymentTypeList.unshift(this.paymentTypeAll);\r\n    })\r\n  }\r\n\r\n  getScreeners(){\r\n    this.apiService.findAll(`${ENDPOINTS.userPerRole}${8}`).subscribe(screener=>{\r\n      this.screeners.push({name: 'ALL', id: 0});\r\n      if(screener?.responseData?.data && screener?.responseData?.data?.length){\r\n        screener.responseData.data.filter( e=>{\r\n          this.screeners.push(\r\n            {name:`${e.firstName} ${e.middleName} ${e.lastName}` , id:e.id}\r\n          )\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  getTypeOfMediums(): void {\r\n    this.apiService.findAll(`${ENDPOINTS.typeOfMedium}`).subscribe(response=>{\r\n      this.typeOfMediums = response.responseData.data;\r\n      this.typeOfMediums.unshift({ description: 'ALL', id: 0 });\r\n    });\r\n  }\r\n\r\n  getActiveCompanies(){\r\n    this.apiService.findAll(ENDPOINTS.activeCompanies).subscribe( res=>{\r\n      \r\n      this.activeCompanyList = res.responseData.data;\r\n      this.activeCompanyList.push(\r\n        {\r\n          \"id\": 0,\r\n          \"companyName\": \"All\", \r\n        }\r\n      )\r\n      this.activeCompanyList.sort( (_a,_b)=>{\r\n        return (_a.id - _b.id)\r\n      });\r\n    })\r\n  }\r\n\r\n  setReportType(res) {\r\n    if (this.currentUser.userRole.name === 'ROLE_ACCOUNTING') {\r\n      this.selectedReportType = res.name;\r\n      if (this.selectedReportType === 'Collection Report') {\r\n        this.isPaymentTypeRequired = false;\r\n      } else {\r\n        this.reportForm.get('paymentType').patchValue(0);\r\n        this.isPaymentTypeRequired = true;\r\n        this.selectedPaymentType = 0;\r\n      }\r\n    } else {\r\n      this.selectedReportType = res;\r\n    }\r\n  }\r\n\r\n  setPaymentType(id) {\r\n    this.isPaymentTypeRequired = true;\r\n    this.selectedPaymentType = id;\r\n  }\r\n\r\n  generateReport() {\r\n     this.spinner.show();\r\n    this.report.format = 'xlsx';\r\n    console.log('selected ', this.selectedReportType)\r\n    if (this.currentUser.userRole.name === 'ROLE_ACCOUNTING') {\r\n      this.report.filename = 'VAT_TAX_Summary';\r\n\r\n      this.report.module = 'Report';\r\n      this.report.params = { 'dateFrom': `${this.datepipe.transform(this.reportForm.get('dateFrom').value, 'MM/dd/yyyy').toString()}`, 'dateTo': `${this.datepipe.transform(this.reportForm.get('dateTo').value, 'MM/dd/yyyy')}`, 'reportType': this.reportType.filename}\r\n      let valdationReportEndpoint = ENDPOINTS.validateReportsCollection + `/date-from/${this.datepipe.transform(this.reportForm.get('dateFrom').value, 'yyyy-MM-dd').toString()}/date-to/${this.datepipe.transform(this.reportForm.get('dateTo').value, 'yyyy-MM-dd').toString()}`;\r\n\r\n      if (this.selectedReportType === 'Collection Report') {\r\n        this.report.filename = 'Collection_Report';\r\n        valdationReportEndpoint = ENDPOINTS.validateReportsCollection + `/date-from/${this.datepipe.transform(this.reportForm.get('dateFrom').value, 'yyyy-MM-dd').toString()}/date-to/${this.datepipe.transform(this.reportForm.get('dateTo').value, 'yyyy-MM-dd').toString()}/payment-type-id/${this.selectedPaymentType}`;\r\n        this.report.params = { 'dateFrom': `${this.datepipe.transform(this.reportForm.get('dateFrom').value, 'MM/dd/yyyy').toString()}`, 'dateTo': `${this.datepipe.transform(this.reportForm.get('dateTo').value, 'MM/dd/yyyy')}`, 'paymentTypeId': this.selectedPaymentType }\r\n      } else if (this.selectedReportType === REPORT_TYPE.REPORT_PER_COMPANY){\r\n        this.report.filename = 'Per_Company';\r\n        valdationReportEndpoint = ENDPOINTS.validateReportsCollection + `/date-from/${this.datepipe.transform(this.reportForm.get('dateFrom').value, 'yyyy-MM-dd').toString()}/date-to/${this.datepipe.transform(this.reportForm.get('dateTo').value, 'yyyy-MM-dd').toString()}/payment-type-id/${this.selectedPaymentType}`;\r\n        this.report.params = { 'companyId': this.reportForm.get('company').value, 'dateFrom': `${this.datepipe.transform(this.reportForm.get('dateFrom').value, 'MM/dd/yyyy').toString()}`, 'dateTo': `${this.datepipe.transform(this.reportForm.get('dateTo').value, 'MM/dd/yyyy')}`, 'paymentTypeId': this.selectedPaymentType }\r\n      } else if(this.selectedReportType === REPORT_TYPE.REPORT_PER_AGENCY){\r\n        this.report.filename = 'Per_Agency';\r\n        valdationReportEndpoint = ENDPOINTS.validateReportsCollection + `/date-from/${this.datepipe.transform(this.reportForm.get('dateFrom').value, 'yyyy-MM-dd').toString()}/date-to/${this.datepipe.transform(this.reportForm.get('dateTo').value, 'yyyy-MM-dd').toString()}/payment-type-id/${this.selectedPaymentType}`;\r\n        this.report.params = { 'agencyId': this.reportForm.get('company').value, 'dateFrom': `${this.datepipe.transform(this.reportForm.get('dateFrom').value, 'MM/dd/yyyy').toString()}`, 'dateTo': `${this.datepipe.transform(this.reportForm.get('dateTo').value, 'MM/dd/yyyy')}`, 'paymentTypeId': this.selectedPaymentType }\r\n      } else if(this.selectedReportType === REPORT_TYPE.REPORT_PER_SCREENER){\r\n        this.report.filename = 'Per_Screener';\r\n        valdationReportEndpoint = ENDPOINTS.validateReportsCollection + `/date-from/${this.datepipe.transform(this.reportForm.get('dateFrom').value, 'yyyy-MM-dd').toString()}/date-to/${this.datepipe.transform(this.reportForm.get('dateTo').value, 'yyyy-MM-dd').toString()}/payment-type-id/${this.selectedPaymentType}`;\r\n        this.report.params = { 'screenerId': this.reportForm.get('screener').value, 'dateFrom': `${this.datepipe.transform(this.reportForm.get('dateFrom').value, 'MM/dd/yyyy').toString()}`, 'dateTo': `${this.datepipe.transform(this.reportForm.get('dateTo').value, 'MM/dd/yyyy')}`, 'paymentTypeId': this.selectedPaymentType }\r\n      } else if(this.selectedReportType === REPORT_TYPE.REPORT_PER_APPLICANT){\r\n        this.report.filename = 'Per_Applicant';\r\n        valdationReportEndpoint = ENDPOINTS.validateReportsCollection + `/date-from/${this.datepipe.transform(this.reportForm.get('dateFrom').value, 'yyyy-MM-dd').toString()}/date-to/${this.datepipe.transform(this.reportForm.get('dateTo').value, 'yyyy-MM-dd').toString()}/payment-type-id/${this.selectedPaymentType}`;\r\n        this.report.params = { 'applicantId': this.reportForm.get('applicant').value, 'dateFrom': `${this.datepipe.transform(this.reportForm.get('dateFrom').value, 'MM/dd/yyyy').toString()}`, 'dateTo': `${this.datepipe.transform(this.reportForm.get('dateTo').value, 'MM/dd/yyyy')}`, 'paymentTypeId': this.selectedPaymentType }\r\n      } else if(this.selectedReportType === REPORT_TYPE.REPORT_PER_MEDIUM){\r\n        this.report.filename = 'Per_Type_Of_Medium';\r\n        valdationReportEndpoint = ENDPOINTS.validateReportsCollection + `/date-from/${this.datepipe.transform(this.reportForm.get('dateFrom').value, 'yyyy-MM-dd').toString()}/date-to/${this.datepipe.transform(this.reportForm.get('dateTo').value, 'yyyy-MM-dd').toString()}/payment-type-id/${this.selectedPaymentType}`;\r\n        this.report.params = { 'typeOfMediumId': this.reportForm.get('medium').value, 'dateFrom': `${this.datepipe.transform(this.reportForm.get('dateFrom').value, 'MM/dd/yyyy').toString()}`, 'dateTo': `${this.datepipe.transform(this.reportForm.get('dateTo').value, 'MM/dd/yyyy')}`, 'paymentTypeId': this.selectedPaymentType }\r\n      } else if (this.selectedReportType === 'VAT Summary') {\r\n        this.report.params = { 'dateFrom': `${this.datepipe.transform(this.reportForm.get('dateFrom').value, 'MM/dd/yyyy').toString()}`, 'dateTo': `${this.datepipe.transform(this.reportForm.get('dateTo').value, 'MM/dd/yyyy')}`, 'reportType': 'vat' }\r\n      } else if (this.selectedReportType === 'TAX Summary') {\r\n        this.report.params = { 'dateFrom': `${this.datepipe.transform(this.reportForm.get('dateFrom').value, 'MM/dd/yyyy').toString()}`, 'dateTo': `${this.datepipe.transform(this.reportForm.get('dateTo').value, 'MM/dd/yyyy')}`, 'reportType': 'wtax' }\r\n      }\r\n\r\n      this.apiService.findAll(valdationReportEndpoint).subscribe((data: any) => {\r\n\r\n        if (data.length > 0) {\r\n          this.printReport(this.report);\r\n        } else {\r\n          this.sweetAlertService.customErrorMessage('No Record found on date ranged');\r\n          this.spinner.hide();\r\n        }\r\n      });\r\n\r\n    } else {\r\n     \r\n      this.report.filename = this.selectedReportType;\r\n      let dateFrom = `${this.datepipe.transform(this.newReportForm.get('dateFrom').value, 'MM/dd/yyyy').toString()}`;\r\n      let dateTo = `${this.datepipe.transform(this.newReportForm.get('dateTo').value, 'MM/dd/yyyy')}`;\r\n      this.report.module = 'AppData';\r\n      this.report.params = { 'dateFrom': dateFrom, 'dateTo': dateTo };\r\n      this.printReport(this.report);\r\n    }\r\n\r\n  }\r\n\r\n  printReport(report) {\r\n    this.apiService.printReport(ENDPOINTS.generateReports, report).subscribe((data: any) => {\r\n      const newBlob = new Blob([(data)], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });\r\n      const downloadURL = URL.createObjectURL(newBlob);\r\n      var anchor = document.createElement('a');\r\n      anchor.download = this.selectedReportType + '.xlsx';\r\n      anchor.href = downloadURL;\r\n      anchor.click();\r\n      if (this.currentUser.userRole.name === 'ROLE_ACCOUNTING') {\r\n        this.reportForm.reset();\r\n        this.reportForm.patchValue({\r\n          paymentType: 0,\r\n          company: 0,\r\n          applicant: 0,\r\n          screener: 0,\r\n          medium: 0,\r\n        });\r\n      } else {\r\n        this.newReportForm.reset();\r\n      }\r\n      this.selectedReportType = null;\r\n      this.sweetAlertService.customSuccessMessage('Successfully Generated!');\r\n      this.spinner.hide();\r\n    }, (err: any) => {\r\n      // console.log(err);\r\n        this.spinner.hide();\r\n      this.sweetAlertService.customErrorMessage('No Record found on date ranged');\r\n    });\r\n  }\r\n\r\n}\r\n","<form>\r\n  <div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12 title\">\r\n        <mat-label>\r\n          Reports\r\n        </mat-label>\r\n      </div>\r\n    </div>\r\n    <hr>\r\n    <div *ngIf=\"currentUser.userRole.name === 'ROLE_ACCOUNTING'\">\r\n    <form [formGroup]=\"reportForm\" >\r\n      <div class=\"row\">\r\n        <mat-form-field class=\"col-md-6\" appearance=\"outline\">\r\n          <mat-label>Date Start:</mat-label>\r\n          <input matInput placeholder=\"Date\" [matDatepicker]=\"dateFrom\" readonly [(ngModel)]=\"dateFrome\"\r\n            name=\"dateFrom\" readonly formControlName=\"dateFrom\">\r\n          <mat-datepicker-toggle matSuffix [for]=\"dateFrom\"></mat-datepicker-toggle>\r\n          <mat-datepicker color=\"warn\" #dateFrom disabled=\"false\"></mat-datepicker>\r\n        </mat-form-field>\r\n        <mat-form-field class=\"col-md-6\" appearance=\"outline\">\r\n          <mat-label>Date End:</mat-label>\r\n          <input matInput placeholder=\"Date\" [matDatepicker]=\"Date\" readonly [(ngModel)]=\"dateTo\" name=\"dateTo\"\r\n            formControlName=\"dateTo\">\r\n          <mat-datepicker-toggle matSuffix [for]=\"Date\"></mat-datepicker-toggle>\r\n          <mat-datepicker color=\"warn\" #Date disabled=\"false\"></mat-datepicker>\r\n        </mat-form-field>\r\n      </div>\r\n      <div class=\"row\">\r\n        <mat-form-field class=\"col-md-6\" appearance=\"outline\">\r\n          <mat-label>Report Type: </mat-label>\r\n          <mat-select [(ngModel)]=\"reportType\" name=\"reportType\" formControlName=\"reportType\">\r\n            <mat-option *ngFor=\"let i of reportTypeList\" [value]=\"i\"  (click)=\"setReportType(i)\">\r\n              {{i.name}}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n        <mat-form-field class=\"col-md-6\" appearance=\"outline\" *ngIf=\"selectedReportType !== reportTypes.VAT_SUMMARY && selectedReportType !== reportTypes.TAX_SUMMARY\">\r\n          <mat-label>Payment Type:</mat-label>\r\n          <mat-select name=\"paymentType\" formControlName=\"paymentType\">\r\n            <mat-option *ngFor=\"let i of paymentTypeList\" [value]=\"i.id\" (click)=\"setPaymentType(i.id)\">\r\n              {{i.paymentDescription}}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n        <mat-form-field class=\"col-md-6\" appearance=\"outline\" *ngIf=\"selectedReportType === reportTypes.COLLECTION_REPORT || selectedReportType === reportTypes.REPORT_PER_COMPANY || selectedReportType === reportTypes.REPORT_PER_AGENCY\">\r\n          <mat-label>Company:</mat-label>\r\n          <mat-select   name=\"company\" formControlName=\"company\">\r\n            <mat-option *ngFor=\"let company of activeCompanyList\" [value]=\"company.id\" >\r\n              {{company.companyName}}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n        <mat-form-field class=\"col-md-6\" appearance=\"outline\" *ngIf=\"selectedReportType === reportTypes.COLLECTION_REPORT || selectedReportType === reportTypes.REPORT_PER_APPLICANT\">\r\n          <mat-label>Applicant:</mat-label>\r\n          <mat-select   name=\"applicant\" formControlName=\"applicant\">\r\n            <mat-option *ngFor=\"let applicant of applicants\" [value]=\"applicant.id\" >\r\n              {{applicant.name}}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n        <mat-form-field class=\"col-md-6\" appearance=\"outline\" *ngIf=\"selectedReportType === reportTypes.COLLECTION_REPORT || selectedReportType === reportTypes.REPORT_PER_SCREENER\">\r\n          <mat-label>Screener:</mat-label>\r\n          <mat-select   name=\"company\" formControlName=\"screener\">\r\n            <mat-option *ngFor=\"let screener of screeners\" [value]=\"screener.id\" >\r\n              {{screener.name}}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n        <mat-form-field class=\"col-md-6\" appearance=\"outline\" *ngIf=\"selectedReportType === reportTypes.REPORT_PER_MEDIUM\">\r\n          <mat-label>Mediums:</mat-label>\r\n          <mat-select name=\"medium\" formControlName=\"medium\">\r\n            <mat-option *ngFor=\"let medium of typeOfMediums\" [value]=\"medium.id\" >\r\n              {{ medium?.description }}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n    </form>\r\n    <div class=\"row\">\r\n      <div class=\"col-md-9\"></div>\r\n      <div class=\"col-md-3\">\r\n        <button mat-raised-button class=\"button-red\"  (click)=\"generateReport()\"\r\n          [disabled]=\"reportForm.controls['dateFrom']?.errors?.required || reportForm.controls['dateTo']?.errors?.required || reportForm.controls['reportType']?.errors?.required || !isPaymentTypeRequired\">\r\n          <i class=\"material-icons color__white\">task_alt</i> GENERATE\r\n        </button>\r\n        <br> <br>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div  *ngIf=\"currentUser.userRole.name === 'ROLE_SUPER_ADMIN' || currentUser.userRole.name === 'ROLE_ADMIN'\">\r\n    <form [formGroup]=\"newReportForm\">\r\n      <div class=\"row\">\r\n        <mat-form-field class=\"col-md-6\" appearance=\"outline\">\r\n          <mat-label>Date Start:</mat-label>\r\n          <input matInput placeholder=\"Date\" [matDatepicker]=\"dateFrom\" readonly [(ngModel)]=\"dateFrome\"\r\n            name=\"dateFrom\" readonly formControlName=\"dateFrom\">\r\n          <mat-datepicker-toggle matSuffix [for]=\"dateFrom\"></mat-datepicker-toggle>\r\n          <mat-datepicker color=\"warn\" #dateFrom disabled=\"false\"></mat-datepicker>\r\n        </mat-form-field>\r\n        <mat-form-field class=\"col-md-6\" appearance=\"outline\">\r\n          <mat-label>Date End:</mat-label>\r\n          <input matInput placeholder=\"Date\" [matDatepicker]=\"Date\" readonly [(ngModel)]=\"dateTo\" name=\"dateTo\"\r\n            formControlName=\"dateTo\">\r\n          <mat-datepicker-toggle matSuffix [for]=\"Date\"></mat-datepicker-toggle>\r\n          <mat-datepicker color=\"warn\" #Date disabled=\"false\"></mat-datepicker>\r\n        </mat-form-field>\r\n        <mat-form-field class=\"col-md-6\" appearance=\"outline\">\r\n          <mat-label>Report Type: </mat-label>\r\n          <mat-select [(ngModel)]=\"reportType\" name=\"reportType\" formControlName=\"reportType\">\r\n            <mat-option *ngFor=\"let i of newReportTypeList\" [value]=\"i.filename\" (click)=\"setReportType(i.filename)\">\r\n              {{i.name}}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n    </form>\r\n    <div class=\"row\">\r\n      <div class=\"col-md-9\"></div>\r\n      <div class=\"col-md-3\">\r\n        <button mat-raised-button class=\"button-red\"  (click)=\"generateReport()\"\r\n          [disabled]=\"newReportForm.controls['dateFrom']?.errors?.required  || newReportForm.controls['reportType']?.errors?.required \">\r\n          <i class=\"material-icons color__white\">task_alt</i> GENERATE\r\n        </button>\r\n        <br> <br>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  </div>\r\n</form>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReportsRoutingModule } from './reports-routing.module';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { AngularMaterialModule } from '@shared';\r\nimport { BrowserModule } from '@angular/platform-browser'\r\nimport { ReportsComponent } from './reports.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [ReportsComponent],\r\n  imports: [\r\n    CommonModule,\r\n    ReportsRoutingModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule,\r\n    AngularMaterialModule,\r\n  ]\r\n})\r\nexport class ReportsModule { }\r\n"]}
>>>>>>> 53dc5baaa640736d2cc27f9eee7c34fe4a9274c2
