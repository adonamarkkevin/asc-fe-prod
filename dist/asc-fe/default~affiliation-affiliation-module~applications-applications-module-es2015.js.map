{"version":3,"sources":["./src/app/modules/pages/maintenance/affiliation/affiliation.component.ts","./src/app/modules/pages/maintenance/affiliation/affiliation.component.html"],"names":[],"mappings":"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","file":"default~affiliation-affiliation-module~applications-applications-module-es2015.js","sourcesContent":["import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ApiService, SweetAlertService } from '@services';\nimport { COMMON_FUNCTION, ENDPOINTS, STATUSES, YES_NO_OPTION } from '@shared';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Affiliation } from '@models';\nimport { FormListComponent } from '@fragments';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-affiliation',\n  templateUrl: './affiliation.component.html',\n  styleUrls: ['./affiliation.component.scss']\n})\nexport class AffiliationComponent implements OnInit {\n\n  @ViewChild(FormListComponent) formListComponent: FormListComponent;\n  dataSource: MatTableDataSource<Affiliation>;\n  displayedColumns: string[] = ['affiliationDesc', 'member', 'status'];\n  statusList = [...STATUSES];\n  yesNoList = [...YES_NO_OPTION];\n\n  affiliation = new Affiliation();\n  affiliationList = [];\n\n  affiliationForm: FormGroup;\n\n  constructor(\n    private apiService: ApiService,\n    private formBuilder: FormBuilder,\n    private sweetAlertService: SweetAlertService\n  ) { }\n\n  ngOnInit() {\n    this.getList();\n    this.setFormValidator();\n  }\n\n  getList(): void {\n    this.apiService.findAll(ENDPOINTS.affiliation).subscribe((res: any) => {\n      this.affiliationList = res.responseData.data;\n      this.dataSource = new MatTableDataSource<Affiliation>(res.responseData.data);\n      this.dataSource.paginator = this.formListComponent.paginator;\n      this.dataSource.sort = this.formListComponent.sort;\n    });\n  }\n\n  save(): void {\n    if (this.affiliation.member.toString() === 'No') {\n      this.affiliation.member = this.setValue(this.affiliation.member);\n    }\n    this.affiliation.status = COMMON_FUNCTION.ACTIVE;\n    this.apiService.save(ENDPOINTS.affiliation, this.affiliation).subscribe(\n      (res: any) => {\n        if (res !== undefined) {\n          this.sweetAlertService.success(res);\n        }\n      }, (err: any) => {\n        this.sweetAlertService.error(err);\n      }, () => {\n        // actions after subscription\n        this.resetFormValidator();\n        this.getList();\n      });\n  }\n\n  getAffiliation(): void {\n    this.apiService.findById(ENDPOINTS.affiliation, this.formListComponent.idForUpdate).subscribe((res: any) => {\n      if (res) {\n        this.affiliation = res.responseData.data;\n      }\n    });\n  }\n\n  confirmUpdate() {\n    if (this.affiliation.status === 'INACTIVE') {\n      Swal.fire({\n        text: `Admin should manually change the company's membership affiliation value to its equivalent non member value. Continue?`,\n        icon: 'question',\n        showCancelButton: true,\n        confirmButtonColor: '#3085d6',\n        cancelButtonColor: '#d33',\n        confirmButtonText: 'Confirm'\n      }).then((result) => {\n        if (result.value) {\n          this.update();\n        }\n      });\n    } else {\n      this.update();\n    }\n  }\n\n  update(): void {\n    this.affiliation.member = this.setValue(this.affiliation.member);\n    this.apiService.update(ENDPOINTS.affiliation, this.affiliation).subscribe(\n      (res: any) => {\n        if (res !== undefined) {\n          this.sweetAlertService.success(res);\n        }\n      }, (err: any) => {\n        this.sweetAlertService.error(err);\n      }, () => {\n        // actions after subscription\n        this.resetFormValidator();\n        this.getList();\n      });\n  }\n\n  setFormValidator(): void {\n    this.affiliation.status = COMMON_FUNCTION.ACTIVE;\n    this.affiliation.member = true;\n    this.affiliationForm = this.formBuilder.group({\n      description: ['', Validators.required],\n      member: ['', Validators.required],\n      status: [''],\n    });\n  }\n\n  resetFormValidator(): void {\n    this.affiliation = new Affiliation();\n    this.affiliation.status = COMMON_FUNCTION.ACTIVE;\n    this.affiliation.member = true;\n    this.affiliationForm.markAsUntouched();\n    this.affiliationForm.markAsPristine();\n  }\n\n  setValue(param): boolean {\n    return param === 'Yes' || param === true ? true : false;\n  }\n\n  compareMember(value: any, selected: any): boolean {\n    if (value) {\n      return value === (selected ? 'Yes' : 'No');\n    }\n  }\n\n  delete() {\n    Swal.fire({\n      text: 'Are you sure you want to delete this brand?',\n      icon: 'question',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Confirm'\n    }).then((result) => {\n      if (result.value) {\n        this.apiService.deleteById(ENDPOINTS.affiliation, this.affiliation.id).subscribe(\n          () => {\n            this.sweetAlertService.customSuccessMessage('Affiliation successfully deleted.');\n            this.resetFormValidator();\n            this.getList();\n          }\n        );\n      }\n    });\n  }\n\n}\n","<form>\n  <div class=\"container-fluid\">\n    <div class=\"row\">\n      <div class=\"col-md-12 title\">\n        <mat-label>\n          <mat-icon>groups</mat-icon> Member's Affiliation\n        </mat-label>\n      </div>\n    </div>\n    <hr>\n\n    <form [formGroup]=\"affiliationForm\">\n      <div class=\"row\">\n        <mat-form-field class=\"col-md-8\" appearance=\"outline\">\n          <mat-label>Member's Affiliation <span class=\"required-field\">*</span></mat-label>\n          <input matInput [(ngModel)]=\"affiliation.description\" name=\"description\" formControlName=\"description\">\n        </mat-form-field>\n\n        <mat-form-field class=\"col-md-4\" appearance=\"outline\">\n          <mat-label>Member</mat-label>\n          <mat-select [(ngModel)]=\"affiliation.member\" name=\"member\" formControlName=\"member\"\n            [compareWith]=\"compareMember\">\n            <mat-option *ngFor=\"let i of yesNoList\" [value]=\"i\">\n              {{ i }}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n\n        <mat-form-field class=\"col-md-4\" appearance=\"outline\" *ngIf=\"affiliation.id\">\n          <mat-label>Status</mat-label>\n          <mat-select [(ngModel)]=\"affiliation.status\" name=\"status\" formControlName=\"status\">\n            <mat-option *ngFor=\"let i of statusList\" [value]=\"i.status\">\n              {{i.status}}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n      </div>\n    </form>\n\n    <app-form-action-buttons [childObject]=\"affiliation\" [childForm]=\"affiliationForm\" (saveFunction)=\"save()\"\n      (updateFunction)=\"confirmUpdate()\" (cancelFunction)=\"resetFormValidator()\" (deleteFunction)=\"delete()\"></app-form-action-buttons>\n    <br>\n    <app-form-list [dataSource]=\"dataSource\" [displayedColumns]=\"displayedColumns\"\n      (selectInListFunction)=\"getAffiliation()\"></app-form-list>\n\n  </div>\n</form>\n"],"sourceRoot":"webpack:///"}