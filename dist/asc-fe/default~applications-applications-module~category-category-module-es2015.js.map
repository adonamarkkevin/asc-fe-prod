{"version":3,"sources":["./src/app/modules/pages/maintenance/category/category.component.ts","./src/app/modules/pages/maintenance/category/category.component.html"],"names":[],"mappings":"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","file":"default~applications-applications-module~category-category-module-es2015.js","sourcesContent":["import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { FormListComponent } from '@fragments';\nimport { ApiService, SweetAlertService } from '@services';\nimport { COMMON_FUNCTION, ENDPOINTS, STATUSES } from '@shared';\nimport { Category } from '@models';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-category',\n  templateUrl: './category.component.html',\n  styleUrls: ['./category.component.scss']\n})\nexport class CategoryComponent implements OnInit {\n\n  @ViewChild(FormListComponent) formListComponent: FormListComponent;\n  dataSource: MatTableDataSource<Category>;\n  displayedColumns: string[] = ['categoryDescription', 'status'];\n  statusList = [...STATUSES];\n\n  category = new Category();\n  categoryList = [];\n  isExist = false;\n  categoryForm: FormGroup;\n\n\n  constructor(\n    private apiService: ApiService,\n    private formBuilder: FormBuilder,\n    private sweetAlertService: SweetAlertService\n  ) { }\n\n  ngOnInit() {\n    this.getList();\n    this.setFormValidator();\n    // this.getProductList();\n  }\n\n  getList(): void {\n    this.apiService.findAll(ENDPOINTS.category).subscribe((res: any) => {\n      this.categoryList = res.responseData.data;\n      this.dataSource = new MatTableDataSource<Category>(res.responseData.data);\n      this.dataSource.paginator = this.formListComponent.paginator;\n      this.dataSource.sort = this.formListComponent.sort;\n    });\n  }\n\n  save(): void {\n    this.apiService.save(ENDPOINTS.category, this.category).subscribe(\n      (res: any) => {\n        if (res !== undefined) {\n          this.sweetAlertService.success(res);\n        }\n      }, (err: any) => {\n        this.sweetAlertService.error(err);\n      }, () => {\n        this.resetFormValidator(),\n          this.getList();\n      }\n    )\n  }\n\n  // not in used\n  checkCategoryIfExisting(categoryName): void {\n    let category = [];\n    this.apiService.findAll(ENDPOINTS.category).subscribe(\n      (res: any) => {\n        category = res.responseData.data;\n        category = category.filter(cn => cn.description === categoryName);\n        if (category.length > 0) {\n          this.sweetAlertService.customErrorMessage('Category name already exist.');\n        } else {\n          if (this.category.id > 0) {\n            this.update();\n          } else {\n            this.save();\n          }\n        }\n      }\n    )\n  }\n\n  getCategory(): void {\n    this.apiService.findById(ENDPOINTS.category, this.formListComponent.idForUpdate).subscribe((res: any) => {\n      if (res) {\n        this.category = res.responseData.data;\n      }\n    });\n  }\n\n  update(): void {\n    this.apiService.update(ENDPOINTS.category, this.category).subscribe(\n      (res: any) => {\n        if (res !== undefined) {\n          this.sweetAlertService.success(res);\n        }\n      }, (err: any) => {\n        this.sweetAlertService.error(err);\n      }, () => {\n        this.resetFormValidator();\n        this.getList();\n      });\n  }\n\n  setFormValidator(): void {\n    this.category.status = COMMON_FUNCTION.ACTIVE;\n    this.categoryForm = this.formBuilder.group({\n      description: ['', Validators.required],\n      status: [''],\n    });\n  }\n\n  resetFormValidator(): void {\n    this.category = new Category();\n    this.category.status = COMMON_FUNCTION.ACTIVE;\n    this.categoryForm.markAsUntouched();\n    this.categoryForm.markAsPristine();\n  }\n\n  delete() {\n\n    Swal.fire({\n      text: 'Are you sure you want to delete this company?',\n      icon: 'question',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Confirm'\n    }).then((result) => {\n      if (result.value) {\n        this.apiService.deleteById(ENDPOINTS.category, this.category.id).subscribe(\n          () => {\n            this.sweetAlertService.customSuccessMessage('Category successfully deleted.');\n            this.resetFormValidator();\n            this.getList();\n          }, (err: any) => {\n            this.sweetAlertService.error(err);\n          }, () => {\n            this.resetFormValidator();\n            this.getList();\n          });\n      }\n    });\n  }\n\n  // getProductList() {\n  //   this.apiService.findAll(ENDPOINTS.product).subscribe((res: any) => {\n  //     this.productList = res.responseData.data.filter((product) => product.status === COMMON_FUNCTION.ACTIVE);\n  //   });\n  // }\n\n  // compareProduct(value: any, selected: any): boolean {\n  //   if (value && selected) {\n  //     return value.description === selected.description;\n  //   }\n  // }\n\n}\n","<form>\n  <div class=\"container-fluid\">\n    <div class=\"row\">\n      <div class=\"col-md-12 title\">\n        <mat-label>\n          Category\n        </mat-label>\n      </div>\n    </div>\n    <hr>\n\n    <form [formGroup]=\"categoryForm\">\n      <div class=\"row\">\n        <mat-form-field class=\"col-md-8\" appearance=\"outline\">\n          <mat-label>Category: <span class=\"required-field\">*</span></mat-label>\n          <input matInput [(ngModel)]=\"category.description\" name=\"description\" formControlName=\"description\">\n        </mat-form-field>\n\n         <!-- <mat-form-field class=\"col-md-6\" appearance=\"outline\">\n          <mat-label>Product <span class=\"required-field\">*</span></mat-label>\n          <mat-select [(ngModel)]=\"category.product\" name=\"product\" formControlName=\"product\"\n            [compareWith]=\"compareProduct\">\n            <mat-option *ngFor=\"let i of productList\" [value]=\"i\">\n              {{i.description}}\n            </mat-option>\n          </mat-select>\n        </mat-form-field> -->\n\n        <mat-form-field class=\"col-md-4\" appearance=\"outline\" *ngIf=\"category.id\">\n          <mat-label>Status</mat-label>\n          <mat-select [(ngModel)]=\"category.status\" name=\"status\" formControlName=\"status\">\n            <mat-option *ngFor=\"let i of statusList\" [value]=\"i.status\">\n              {{i.status}}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n      </div>\n    </form>\n\n    <app-form-action-buttons [childObject]=\"category\" [childForm]=\"categoryForm\" (saveFunction)=\"save()\"\n      (updateFunction)=\"update()\" (cancelFunction)=\"resetFormValidator()\" (deleteFunction)=\"delete()\"></app-form-action-buttons>\n    <br>\n    <app-form-list [dataSource]=\"dataSource\" [displayedColumns]=\"displayedColumns\"\n      (selectInListFunction)=\"getCategory()\"></app-form-list>\n\n  </div>\n</form>\n"],"sourceRoot":"webpack:///"}