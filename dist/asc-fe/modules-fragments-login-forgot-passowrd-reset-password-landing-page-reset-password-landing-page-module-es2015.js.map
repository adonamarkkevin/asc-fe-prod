{"version":3,"sources":["./src/app/modules/fragments/login/forgot-passowrd/reset-password-landing-page/reset-password-landing-page.module.ts","./src/app/modules/fragments/login/forgot-passowrd/reset-password-landing-page/reset-password-landing-page-routing.module.ts","./src/app/modules/fragments/login/forgot-passowrd/reset-password-landing-page/reset-password-landing-page.component.ts","./src/app/modules/fragments/login/forgot-passowrd/reset-password-landing-page/reset-password-landing-page.component.html"],"names":[],"mappings":"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","file":"modules-fragments-login-forgot-passowrd-reset-password-landing-page-reset-password-landing-page-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { ResetPasswordLandingPageRoutingModule } from './reset-password-landing-page-routing.module';\r\nimport { ResetPasswordLandingPageComponent } from './reset-password-landing-page.component';\r\nimport { AngularMaterialModule } from '@shared';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ResetPasswordLandingPageComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ResetPasswordLandingPageRoutingModule,\r\n    AngularMaterialModule,\r\n\r\n    // HttpClientModule,\r\n    // ReactiveFormsModule,\r\n    // FragmentsModule\r\n  ],\r\n  exports: [\r\n    ResetPasswordLandingPageComponent\r\n  ]\r\n})\r\nexport class ResetPasswordLandingPageModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ResetPasswordLandingPageComponent } from './reset-password-landing-page.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ResetPasswordLandingPageComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ResetPasswordLandingPageRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ApiService, SweetAlertService } from '@services';\r\nimport { ENDPOINTS } from '@shared';\r\nimport { EncrDecrService } from 'app/core/services/encr-decr-service.service';\r\n\r\n@Component({\r\n  selector: 'app-reset-password-landing-page',\r\n  templateUrl: './reset-password-landing-page.component.html',\r\n  styleUrls: ['./reset-password-landing-page.component.scss']\r\n})\r\nexport class ResetPasswordLandingPageComponent implements OnInit {\r\n\r\n  verificationCode = '';\r\n  username = '';\r\n  newPassword = '';\r\n  confirmNewPassword = '';\r\n\r\n  isShowUpdatePassword: boolean;\r\n  hideNewPassword = true;\r\n  hideConfirmNewPassword = true;\r\n\r\n  passwordFormatChecker: FormGroup;\r\n\r\n  constructor(\r\n    private apiService: ApiService,\r\n    private sweetAlertService: SweetAlertService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private formBuilder: FormBuilder,\r\n    private EncrDecr: EncrDecrService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.verificationCode = this.route.snapshot.paramMap.get('code');\r\n    this.username = this.route.snapshot.paramMap.get('username');\r\n    this.username = this.EncrDecr.get(this.username.replace(new RegExp('-', 'g'), '/'));\r\n\r\n    this.setFormValidator();\r\n\r\n    if (this.verificationCode) {\r\n      this.validateVerificationCode();\r\n    }\r\n  }\r\n\r\n  setFormValidator() {\r\n    this.passwordFormatChecker = this.formBuilder.group({\r\n      username: [''],\r\n      newPassword: ['', [Validators.required, Validators.pattern('((?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z]).{8,30})'), Validators.minLength(8)]],\r\n      confirmNewPassword: ['', Validators.required],\r\n    });\r\n  }\r\n\r\n  validateVerificationCode() {\r\n    this.apiService.findByParam(ENDPOINTS.forgotPasswordVerification, this.verificationCode).subscribe(\r\n      res => {\r\n        this.isShowUpdatePassword = true;\r\n\r\n        if (!this.isShowUpdatePassword) {\r\n          this.sweetAlertService.customErrorMessage('Invalid verification code!');\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  submitNewPassword() {\r\n    const account = {\r\n      username: this.username,\r\n      password: this.newPassword\r\n    };\r\n    this.apiService.save(`${ENDPOINTS.newPasswordVerification}/${this.verificationCode}/new-password/`, account).subscribe(\r\n      res => {\r\n        console.log(res);\r\n        this.sweetAlertService.success(res, 5);\r\n        setTimeout(() => {\r\n          this.goToLogin();\r\n        }, 5000);\r\n      }, err => {\r\n        this.sweetAlertService.error(err);\r\n      }\r\n    );\r\n  }\r\n\r\n  goToLogin() {\r\n    this.router.navigate(['/login']);\r\n  }\r\n\r\n}\r\n","<!--Main Navigation-->\r\n<header>\r\n    <!--Navbar-->\r\n    <nav class=\"navbar navbar-expand-lg navbar-dark primary-color fixed-top\">\r\n        <div class=\"container-fluid\">\r\n            <!-- Navbar brand -->\r\n            <a class=\"navbar-brand\">\r\n                <img src=\"../../../../assets/images/asc-logo.jpg\" alt=\"\">\r\n            </a>\r\n        </div>\r\n    </nav>\r\n    <!-- Navbar -->\r\n    <!--Mask-->\r\n    <div id=\"intro\" class=\"view\">\r\n        <div class=\"mask\">\r\n        </div>\r\n    </div>\r\n    <!-- Mask-->\r\n\r\n</header>\r\n<!--Main Navigation-->\r\n<!--Main layout-->\r\n<main>\r\n    <div class=\"spinner\">\r\n        <ngx-spinner bdColor=\"rgba(0, 0, 0, 0.8)\" size=\"large\" color=\"#fff\" type=\"line-spin-fade\" [fullScreen]=\"true\">\r\n            <p> Logging in... </p>\r\n        </ngx-spinner>\r\n    </div>\r\n    <div class=\"photo-slider\">\r\n        <img src=\"../../../../assets/images/cover-photo/cover-photo.jpg\" alt=\"\">\r\n        <hr>\r\n        <p class=\"text-title\">\r\n            Sample Title\r\n        </p>\r\n        <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Dolorem, saepe quia id iure, beatae porro itaque\r\n            iusto\r\n            voluptatem neque obcaecati aliquid adipisci quos quae totam impedit eaque corrupti mollitia suscipit?\r\n            Lorem ipsum dolor sit amet consectetur adipisicing elit. Error, vero ullam. Ex saepe quo molestiae,\r\n            assumenda labore\r\n            possimus, praesentium ipsum non voluptatum quia expedita rerum dicta iusto dolorum quidem laboriosam?\r\n            Lorem ipsum dolor sit amet consectetur adipisicing elit. Error, vero ullam. Ex saepe quo molestiae,\r\n            assumenda labore\r\n            possimus, praesentium ipsum non voluptatum quia expedita rerum dicta iusto dolorum quidem laboriosam?\r\n        </p>\r\n    </div>\r\n    <mat-card class=\"mat-elevation-z8\" id=\"login\">\r\n        <mat-card-header>\r\n            <mat-card-title>\r\n                <div class=\"image-holder\">\r\n                    <img src=\"../../../../assets/images/asc-logo.jpg\" alt=\"\">\r\n                </div>\r\n            </mat-card-title>\r\n        </mat-card-header>\r\n        <mat-card-content>\r\n            <span *ngIf=\"isShowUpdatePassword\">\r\n                <ng-container *ngTemplateOutlet=\"createNewPassword\"></ng-container>\r\n            </span>\r\n\r\n\r\n\r\n\r\n\r\n            <br>\r\n            <div class=\"login-action\">\r\n                <button mat-raised-button (click)=\"submitNewPassword()\" color=\"primary\"\r\n                    [disabled]=\"!newPassword || newPassword !== confirmNewPassword\" *ngIf=\"isShowUpdatePassword\">\r\n                    Continue\r\n                </button>\r\n                <button mat-raised-button (click)=\"goToLogin()\" color=\"primary\" *ngIf=\"!isShowUpdatePassword\">\r\n                    Go to Login Page\r\n                </button>\r\n            </div>\r\n        </mat-card-content>\r\n    </mat-card>\r\n\r\n</main>\r\n<!--Main layout-->\r\n<!--Footer-->\r\n<footer>\r\n    <div class=\"footer-nav\">\r\n        <ul>\r\n            <li>Terms and Conditions</li>\r\n            <li>Privacy Policy</li>\r\n            <li>Inquiry</li>\r\n        </ul>\r\n    </div>\r\n    <div class=\"footer-details\">\r\n        <span>Ad Standards Council - Screening System -v 2.0<br>\r\n            &copy; 2022. Ad Standards Council</span>\r\n    </div>\r\n</footer>\r\n<!--Footer-->\r\n\r\n\r\n<ng-template #createNewPassword>\r\n    <form [formGroup]=\"passwordFormatChecker\">\r\n        <table>\r\n            <tr>\r\n                <td>\r\n                    <h1>\r\n                        <b>\r\n                            Reset Password\r\n                        </b>\r\n                    </h1>\r\n                </td>\r\n            </tr>\r\n            <tr>\r\n                <td>\r\n                    <br>\r\n                    <mat-form-field class=\"form-field\">\r\n                        <input matInput placeholder=\"Username\" id=\"username\" [(ngModel)]=\"username\" name=\"username\"\r\n                            formControlName=\"username\" readonly>\r\n                    </mat-form-field>\r\n                </td>\r\n            </tr>\r\n            <tr>\r\n                <td>\r\n                    <mat-form-field class=\"form-field\">\r\n                        <input matInput [type]=\"hideNewPassword ? 'password' : 'text'\" placeholder=\"New Password\"\r\n                            id=\"newPassword\" [(ngModel)]=\"newPassword\" type=\"password\" name=\"newPassword\"\r\n                            formControlName=\"newPassword\">\r\n                        <button type=\"button\" mat-icon-button matSuffix (click)=\"hideNewPassword = !hideNewPassword\"\r\n                            [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hideNewPassword\">\r\n                            <mat-icon>{{hideNewPassword ? 'visibility_off' : 'visibility'}}</mat-icon>\r\n                        </button>\r\n                    </mat-form-field>\r\n                </td>\r\n            </tr>\r\n            <tr>\r\n                <td>\r\n                    <mat-form-field class=\"form-field\">\r\n                        <input matInput [type]=\"hideConfirmNewPassword ? 'password' : 'text'\"\r\n                            placeholder=\"Confirm New Password\" id=\"password\" [(ngModel)]=\"confirmNewPassword\"\r\n                            type=\"password\" name=\"confirmNewPassword\" formControlName=\"confirmNewPassword\">\r\n                        <button type=\"button\" mat-icon-button matSuffix\r\n                            (click)=\"hideConfirmNewPassword = !hideConfirmNewPassword\"\r\n                            [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hideConfirmNewPassword\">\r\n                            <mat-icon>{{hideConfirmNewPassword ? 'visibility_off' : 'visibility'}}</mat-icon>\r\n                        </button>\r\n                    </mat-form-field>\r\n                </td>\r\n            </tr>\r\n        </table>\r\n    </form>\r\n    <div *ngIf=\"passwordFormatChecker.get('newPassword').dirty && passwordFormatChecker.controls['newPassword'].errors\"\r\n        class=\"warning-message\">\r\n        <mat-icon>warning</mat-icon>\r\n        Password must be at least 8 characters long and must contain a number, lower case and upper case\r\n        characters.\r\n    </div>\r\n</ng-template>"],"sourceRoot":"webpack:///"}