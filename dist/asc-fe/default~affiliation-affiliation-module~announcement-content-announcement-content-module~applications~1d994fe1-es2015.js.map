{"version":3,"sources":["./src/app/modules/fragments/request-for-special-clearing/request-for-special-clearing.component.ts","./src/app/modules/fragments/request-for-special-clearing/request-for-special-clearing.component.html","./src/app/core/models/screener-reviewer-pair.model.ts","./src/app/core/models/numberOfMultipleApplicationAllowed.model.ts","./src/app/core/models/type-of-document.model.ts","./src/app/core/models/application-rejection.model.ts","./src/app/core/models/country.model.ts","./src/app/core/models/type-of-main-document.model.ts","./src/app/modules/fragments/reject-disapproved-reason/reject-disapproved-reason.component.ts","./src/app/modules/fragments/reject-disapproved-reason/reject-disapproved-reason.component.html","./src/app/core/models/rationale-s2.model.ts","./src/app/core/models/type-of-reason.model.ts","./src/app/core/models/rationale.model.ts","./src/app/modules/fragments/fragments.module.ts","./src/app/core/models/type-of-application.model.ts","./src/app/core/models/application-rationale-list.model.ts","./src/app/core/models/s1-application.model.ts","./src/app/modules/fragments/incomplete-disapproved-rationale/incomplete-disapproved-rationale.component.ts","./src/app/modules/fragments/incomplete-disapproved-rationale/incomplete-disapproved-rationale.component.html","./src/app/core/models/product.model.ts","./src/app/modules/fragments/form-list/form-list.component.ts","./src/app/modules/fragments/form-list/form-list.component.html","./src/app/core/models/type-of-rational.model.ts","./src/app/core/models/email-notification.model.ts","./src/app/modules/fragments/fragments-routing.module.ts","./src/app/core/models/asc-rate-special.model.ts","./src/app/core/models/payment.model.ts","./src/app/core/models/type-of-medium.model.ts","./src/app/core/models/application-multimedia.model.ts","./src/app/core/models/s2-application.model.ts","./src/app/core/models/or-preparation.model.ts","./src/app/core/models/medium-execution-controller.model.ts","./src/app/core/models/promissory-note-period.model.ts","./src/app/core/models/dialect.model.ts","./src/app/core/models/user-account.model.ts","./src/app/modules/fragments/form-action-buttons/form-action-buttons.component.ts","./src/app/modules/fragments/form-action-buttons/form-action-buttons.component.html","./src/app/core/models/login-image.model.ts","./src/app/core/models/asc-rate.model.ts","./src/app/core/models/application-single-media.model.ts","./src/app/core/models/type-of-medium-execution.model.ts","./src/app/core/models/application-request.model.ts","./src/app/core/models/profile.model.ts","./src/app/core/models/uploading-document-file-size-model.ts","./src/app/core/models/attachment-document.model.ts","./src/app/core/models/announcement.model.ts","./src/app/core/models/category.model.ts","./src/app/core/models/company-penalties.model.ts","./src/app/core/models/supporting-document.model.ts","./src/app/core/models/user-role.model.ts","./src/app/core/models/payment-type.model.ts","./src/app/core/models/or-preparation-reference.model.ts","./src/app/core/models/holiday.model.ts","./src/app/core/models/brand-penalties.model.ts","./src/app/core/models/performance-metrics.model.ts","./src/app/core/models/payment-method.model.ts","./src/app/core/models/qrAndBarCodeChecker.model.ts","./src/app/core/models/index.ts","./src/app/core/models/affiliation.model.ts","./src/app/core/models/brand.model.ts","./src/app/core/models/company.model.ts","./src/app/core/models/application-rationale-list-s2.model.ts","./src/app/core/models/s1-and-s2-form-expiration-period.model.ts"],"names":[],"mappings":"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","file":"default~affiliation-affiliation-module~announcement-content-announcement-content-module~applications~1d994fe1-es2015.js","sourcesContent":["import { i18nMetaToJSDoc } from '@angular/compiler/src/render3/view/i18n/meta';\nimport { Component, Inject, OnInit, Optional } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { S1Application, S2Application } from '@models';\nimport { ApiService, DataStorageService, SweetAlertService } from '@services';\nimport { ENDPOINTS, ERROR_MESSAGES, SUBMISSION_TYPE } from '@shared';\nimport { ApplicationRequest } from 'app/core/models/application-request.model';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-request-for-special-clearing',\n  templateUrl: './request-for-special-clearing.component.html',\n  styleUrls: ['./request-for-special-clearing.component.scss']\n})\nexport class RequestForSpecialClearingComponent implements OnInit {\n\n  s1Application = new S1Application();\n  s2Application = new S2Application();\n  applicationRequest = new ApplicationRequest();\n\n  currentUser: any;\n\n  constructor(\n    private apiService: ApiService,\n    private dataStorage: DataStorageService,\n    private sweetAlertService: SweetAlertService,\n    private router: Router,\n    @Optional() public dialogRef: MatDialogRef<RequestForSpecialClearingComponent>,\n    @Optional() @Inject(MAT_DIALOG_DATA) public data: any\n  ) { }\n\n  ngOnInit(): void {\n    this.applicationRequest = this.data.applicationRequest;\n    this.s1Application = this.applicationRequest.applicationForm;\n    this.currentUser = this.dataStorage.getUserAccount();\n    this.setApplicationRequest();\n  }\n\n\n  // static id to select special clearing application type.\n  setApplicationRequest(): void {\n    this.applicationRequest.hasSpecialClearing = true;\n    this.applicationRequest.applicationType = this.s1Application.applicationType;\n    this.applicationRequest.adTitle = this.s1Application.adTitle;\n    this.applicationRequest.applicationOwner = this.currentUser;\n    this.applicationRequest.brand = this.s1Application.brand;\n    this.applicationRequest.product = this.s1Application.product;\n    // this.applicationRequest.category = this.s1Application.category;\n    this.applicationRequest.company = this.s1Application.company;\n    this.applicationRequest.formType = this.s1Application.formType;\n    // this.applicationRequest.membersAffiliation = this.s1Application.membersAffiliation;\n    this.applicationRequest.submitApplicationForm = false;\n    this.applicationRequest.tagLine = this.s1Application.tagLine;\n    this.applicationRequest.applicationForm = this.s1Application;\n  }\n\n  onApproveOrDisapprove(status = 'APPROVED'): void {\n    const displayStatus = status === 'APPROVED' ? 'approve' : 'disapprove';\n    Swal.fire({\n      text: `Are you sure you want to ${displayStatus} this application?`,\n      icon: 'question',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Confirm'\n    }).then((result) => {\n      if (result.value) {\n        const endpointExtension = status === 'APPROVED' ? '/approve' : '/disapprove';\n        // this.s1Application.actionDate = new Date();\n        this.s1Application.actionBy = this.currentUser.username;\n\n        this.apiService.save(`${ENDPOINTS.applicationRequests}${endpointExtension}/${this.applicationRequest.id}`, this.applicationRequest)\n          .subscribe(\n            (res: any) => {\n              this.sweetAlertService.customSuccessMessage(`Application successfully ${status.toLowerCase()}.`);\n              this.router.navigate(['asc/page/application/s2/special']);\n            }, (err: any) => {\n              err.error.message = ERROR_MESSAGES.under_maintenance;\n              this.sweetAlertService.error(err);\n            }, () => {\n              this.dialogRef.close(this.s1Application);\n            }\n          );\n      }\n    });\n  }\n\n  submitRequest(): void {\n    Swal.fire({\n      text: 'Are you sure you want to submit request?',\n      icon: 'question',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Confirm'\n    }).then((result) => {\n      if (result.value) {\n        this.apiService.save(ENDPOINTS.applicationRequests, this.applicationRequest).subscribe(\n          (res: any) => {\n            this.sweetAlertService.customSuccessMessage('Request has been submit successfully.');\n            this.router.navigate(['asc/page/application/s2/special']);\n            this.dialogRef.close();\n          }, (err: any) => {\n            err.error.message = ERROR_MESSAGES.under_maintenance;\n            this.sweetAlertService.error(err);\n          });\n        this.dialogRef.close();\n      }\n\n    });\n\n  }\n\n  proceedToS2() {\n    Swal.fire({\n      text: 'Are you sure you want to apply this application to S2?',\n      icon: 'question',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Confirm'\n    }).then((result) => {\n      if (result.value) {\n        this.s2Application.specialClearing = true;\n        this.s2Application.applicationRequest = this.applicationRequest;\n        this.s2Application.applicationForm = this.s1Application;\n        this.s2Application.submissionType = SUBMISSION_TYPE.ORIGINAL; // this.s2Application.applicationForm.submissionType;\n        this.s2Application.internalStatus = 'SAVED';\n        this.s2Application.externalStatus = 'SAVED';\n        console.log('View S2:', this.s2Application);\n        this.apiService.save(ENDPOINTS.s2ApplicationFormPresentorSave, this.s2Application).subscribe(\n          (res: any) => {\n            this.router.navigate(['asc/page/application/s2/update', res.responseData.data.id]);\n            this.dialogRef.close();\n          }, (err: any) => {\n          })\n      }\n    })\n  }\n\n}\n","<form>\n    <div class=\"container-fluid\">\n\n      <div class=\"row title\">\n        <div class=\"col-md-12\">\n          <table>\n            <tr>\n              <td *ngIf=\"applicationRequest?.status!=undefined\">\n                <span>\n                  Status:\n                </span>\n              </td>\n              <td *ngIf=\"applicationRequest?.status!=undefined\">\n                <span *ngIf=\"applicationRequest?.status!=undefined\">\n                  <b>{{applicationRequest?.status?.replaceAll('_',' ') | uppercase}}</b>\n                </span>\n              </td>\n              <td class=\"no-border\" *ngIf=\"applicationRequest?.status==='APPROVED' && currentUser?.userRole?.name == 'ROLE_APPLICANT'\"\n              [hidden]=\"applicationRequest?.submitApplicationForm\">\n              <button class=\"button-right button-red\" mat-raised-button (click)=\"proceedToS2()\">\n                <i class=\"material-icons color__white\">check</i> Proceed to S2\n              </button>\n              </td>\n            </tr>\n            <tr>\n              <td class=\"no-border\"></td>\n            </tr>\n          </table>\n          <hr />\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-md-2\" appearance=\"outline\">\n          <mat-label>Form Type: </mat-label>\n        </div>\n        <div class=\"col-md-4\" appearance=\"outline\">\n          <mat-label><b>{{ s1Application?.formType.replaceAll('_', ' ') }}</b></mat-label>\n        </div>\n\n        <div class=\"col-md-2\" appearance=\"outline\">\n          <mat-label>Application Type:</mat-label>\n        </div>\n        <div class=\"col-md-4\" appearance=\"outline\">\n          <mat-label><b>{{ s1Application?.applicationType?.description.replaceAll('_', ' ') | uppercase }}</b></mat-label>\n        </div>\n        <br>\n        <br>\n      </div>\n\n      <div class=\"row\">\n        <mat-panel-title>\n          <i class=\"material-icons color__white\">label_important</i> &nbsp;Client Information\n        </mat-panel-title><br />\n\n          <div class=\"row\">\n            <mat-form-field class=\"col-md-6\" appearance=\"outline\">\n              <mat-label>Company Name</mat-label>\n              <input matInput [value]=\"s1Application?.company?.companyName\" readonly>\n            </mat-form-field>\n            <mat-form-field class=\"col-md-6\" appearance=\"outline\">\n              <mat-label>Company Membership Affiliation</mat-label>\n              <input matInput [value]=\"s1Application?.company?.membersAffiliation?.description\" readonly>\n            </mat-form-field>\n          </div>\n\n          <div class=\"row\">\n            <mat-form-field class=\"col-md-4\" appearance=\"outline\">\n              <mat-label>Brand</mat-label>\n              <input matInput [value]=\"s1Application?.brand?.description\" readonly>\n            </mat-form-field>\n            <mat-form-field class=\"col-md-4\" appearance=\"outline\">\n              <mat-label>Product</mat-label>\n              <input matInput [value]=\"s1Application?.product?.description\" readonly>\n            </mat-form-field>\n            <mat-form-field class=\"col-md-4\" appearance=\"outline\">\n              <mat-label>Category</mat-label>\n              <input matInput [value]=\"s1Application?.product?.category?.description\" readonly>\n            </mat-form-field>\n          </div>\n\n\n        <mat-panel-title *ngIf=\"currentUser?.userRole?.name === 'ROLE_ADMIN' || currentUser?.userRole?.name === 'ROLE_SUPER_ADMIN'\">\n          <i class=\"material-icons color__white\">label_important</i> &nbsp;Presentor Information\n        </mat-panel-title>\n\n        <div class=\"row\" *ngIf=\"currentUser?.userRole?.name === 'ROLE_ADMIN' || currentUser?.userRole?.name === 'ROLE_SUPER_ADMIN'\">\n          <!-- <mat-form-field class=\"col-md-4\" appearance=\"outline\">\n            <mat-label>Membership Affiliation</mat-label>\n            <input matInput [value]=\"s1Application?.company?.membersAffiliation?.description\" readonly>\n          </mat-form-field> -->\n          <mat-form-field class=\"col-md-7\" appearance=\"outline\">\n            <mat-label>Company Name</mat-label>\n            <input matInput [value]=\"s1Application?.company?.companyName\" readonly>\n          </mat-form-field>\n        </div>\n\n        <div class=\"row\" *ngIf=\"currentUser?.userRole?.name === 'ROLE_ADMIN' || currentUser?.userRole?.name === 'ROLE_SUPER_ADMIN'\">\n          <mat-form-field class=\"col-md-11\" appearance=\"outline\">\n            <mat-label>Address</mat-label>\n            <input matInput [value]=\"s1Application?.company?.completeAddress\" readonly>\n          </mat-form-field>\n        </div>\n\n        <div class=\"row\" *ngIf=\"currentUser?.userRole?.name === 'ROLE_ADMIN' || currentUser?.userRole?.name === 'ROLE_SUPER_ADMIN'\">\n          <mat-form-field class=\"col-md-8\" appearance=\"outline\" *ngIf=\"s1Application.id!= null\">\n            <mat-label>Name of Applicant</mat-label>\n            <input matInput [value]=\"s1Application?.applicationOwner?.firstName+' '+s1Application?.applicationOwner?.lastName\" readonly>\n          </mat-form-field>\n        </div>\n\n        <div class=\"row\" *ngIf=\"currentUser?.userRole?.name === 'ROLE_ADMIN' || currentUser?.userRole?.name === 'ROLE_SUPER_ADMIN'\">\n          <mat-form-field class=\"col-md-4\" appearance=\"outline\" *ngIf=\"s1Application.id!= null\">\n            <mat-label>Mobile Number</mat-label>\n            <input matInput [value]=\"s1Application?.applicationOwner?.mobileNumber\" readonly>\n          </mat-form-field>\n          <mat-form-field class=\"col-md-3\" appearance=\"outline\" *ngIf=\"s1Application.id!= null\">\n            <mat-label>Telephone Number</mat-label>\n            <input matInput [value]=\"s1Application?.company?.companyTelephoneNo\" readonly>\n          </mat-form-field>\n          <mat-form-field class=\"col-md-4\" appearance=\"outline\" *ngIf=\"s1Application.id!= null\">\n            <mat-label>Email Address</mat-label>\n            <input matInput [value]=\"s1Application?.applicationOwner?.username\" readonly>\n          </mat-form-field>\n        </div>\n\n        <mat-panel-title>\n          <i class=\"material-icons color__white\">label_important</i> &nbsp;Material Information\n        </mat-panel-title>\n\n          <div class=\"row\">\n            <mat-form-field class=\"col-md-4\" appearance=\"outline\">\n              <mat-label>Ad Title</mat-label>\n              <input matInput [value]=\"s1Application?.adTitle\" readonly />\n            </mat-form-field>\n\n            <!-- <mat-form-field class=\"col-md-4\" appearance=\"outline\">\n              <mat-label>Reference Code</mat-label>\n              <input matInput [value]=\"s1Application?.referenceCode\" readonly />\n            </mat-form-field> -->\n\n            <mat-form-field class=\"col-md-4\" appearance=\"outline\">\n              <mat-label>Tag Line</mat-label>\n              <input matInput [value]=\"s1Application?.tagLine\" readonly />\n            </mat-form-field>\n          </div>\n\n        <div class=\"row\"><br /></div>\n        <hr />\n        <br />\n        <div class=\"row\" *ngIf=\"applicationRequest?.status===undefined\">\n            <div>\n              <button mat-raised-button class=\"button-red\" (click)=\"submitRequest()\">\n                <i class=\"material-icons color__white\">check</i> Submit\n              </button>\n              <button mat-raised-button class=\"button-red\" (click)=\"dialogRef.close()\">\n                <i class=\"material-icons color__white\">cancel</i> Cancel\n              </button>\n            </div>\n        </div>\n\n        <!-- //////////////////////////////////////// ADMIN //////////////////////////////////////////////////////////// -->\n        <div class=\"row\"\n        *ngIf=\"applicationRequest?.status === 'FOR_APPROVAL' && (currentUser?.userRole?.name == 'ROLE_ADMIN'||currentUser?.userRole?.name == 'ROLE_SUPER_ADMIN')\"\n        >\n        <div mat-dialog-actions>\n          <div class=\"dialog-button-content\" align=\"end\">\n            <button class=\"confirm\" (click)=\"onApproveOrDisapprove()\">\n              <i class=\"material-icons color__white\">thumb_up_alt</i> Approve\n            </button>\n            <button class=\"warn\" (click)=\"onApproveOrDisapprove('DISAPPROVED')\">\n              <i class=\"material-icons color__white\">thumb_down_alt</i> Disapprove\n            </button>\n          </div>\n        </div>\n        </div>\n\n      </div>\n    </div>\n  </form>\n","import { UserAccount } from './user-account.model';\n\nexport class ScreenerReviewerPair {\n    id: number;\n    screener: UserAccount;\n    reviewer: UserAccount;\n  }\n","export class NumberOfMultipleApplicationAllowed{\n    id: number;\n    minimum: String;\n    maximum: String;\n}","export class TypeOfDocument {\n    id: number;\n    description: string;\n    remarksEnable: boolean;\n    basedOnEnable: boolean;\n    variantEnable: boolean;\n    dateOfLaunchEnable: boolean;\n    expiresOnEnable: boolean;\n    inputEnable: boolean;\n    status: string;\n}\n","import { S1Application } from \"./s1-application.model\";\nimport { S2Application } from \"./s2-application.model\";\nimport { TypeOfReason } from \"./type-of-reason.model\";\nimport { UserAccount } from \"./user-account.model\";\n\nexport class ApplicationRejection {\n    id: number;\n    applicationForm: S1Application;\n    applicationS2: S2Application;\n    actionDate: Date;\n    actionBy: UserAccount;\n    typeOfReason: TypeOfReason = new TypeOfReason();\n    remarks: string;\n}","export class Country {\n  id: number;\n  code: string;\n  name: string;\n}","export class TypeOfMainDocument {\n    id: number;\n    status: string;\n    typeOfMainDocument: string;\n}","import { Component, ElementRef, Inject, OnInit, Type, ViewChild } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { S1Application, S2Application, TypeOfReason } from '@models';\nimport { ApiService, DataStorageService, SweetAlertService } from '@services';\nimport { APPLICATION_STATUS, APPLICATION_STATUS_S2, APP_DECISION_STATUS, COMMON_FUNCTION, ENDPOINTS, SUBMISSION_TYPE } from '@shared';\nimport { ApplicationRejection } from 'app/core/models/application-rejection.model';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-reject-disapproved-reason',\n  templateUrl: './reject-disapproved-reason.component.html',\n  styleUrls: ['./reject-disapproved-reason.component.scss']\n})\nexport class RejectDisapprovedReasonComponent implements OnInit {\n\n  @ViewChild('selectReason')\n  mySelectReason: ElementRef;\n  s1Application = new S1Application();\n  s2Application = new S2Application();\n  applicationRejection = new ApplicationRejection();\n  typeOfReason = new TypeOfReason();\n  applicationRejectionList: Array<ApplicationRejection> = [];\n  typeOfReasonList = [];\n  selectedReasonList = [];\n  errMsg: any;\n\n  headerTitle;\n  ascUser;\n  action;\n  status;\n  currentUser: any;\n\n  remarks: string;\n\n\n  constructor(\n    private apiService: ApiService,\n    private sweetAlertService: SweetAlertService,\n    private router: Router,\n    private dataStorage: DataStorageService,\n    private spinner: NgxSpinnerService,\n    public dialogRef: MatDialogRef<RejectDisapprovedReasonComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any\n  ) { }\n\n  ngOnInit(): void {\n    this.getTypeOfReasonsList();\n\n    this.s1Application = this.data.s1Application;\n    this.s2Application = this.data.s2Application;\n    this.ascUser = this.data.ascUser;\n    this.action = this.data.action;\n    this.status = this.data.status;\n    this.headerTitle = this.action;\n    this.currentUser = this.dataStorage.getUserAccount();\n  }\n\n  getTypeOfReasonsList(): void {\n    this.apiService.findAll(ENDPOINTS.typeOfReason).subscribe(\n      (res: any) => {\n        this.typeOfReasonList = res.responseData.data;\n        console.log('reasons => ', this.typeOfReasonList)\n      }\n    )\n  }\n\n  setRejectionData(): void {\n    let endpoint\n    if (this.data.applicationStage === 's1') {\n      this.applicationRejection.applicationForm = this.s1Application;\n      endpoint = ENDPOINTS.s1ReasonOfRejection;\n    } else {\n      this.applicationRejection.applicationS2 = this.s2Application;\n      endpoint = ENDPOINTS.s2ReasonOfRejection;\n    }\n    this.applicationRejection.actionBy = this.currentUser;\n    this.applicationRejection.actionDate = new Date();\n    this.applicationRejection.typeOfReason = this.typeOfReason;\n    this.applicationRejectionList.push(this.applicationRejection);\n    this.applicationRejection = new ApplicationRejection();\n  }\n\n  selectedReason(data) {\n    const isExist = this.selectedReasonList.filter(reason => reason.id === data.id);\n\n    if (isExist.length === 0) {\n      this.selectedReasonList.push(data);\n      this.typeOfReason = data;\n      this.setRejectionData();\n      this.errMsg = '';\n    } else {\n      this.errMsg = 'The selected reason is already added.';\n    }\n    this.mySelectReason.nativeElement = '';\n    \n  }\n\n  checkOthersReason(): boolean{\n    return this.selectedReasonList.filter(e=> e.id ===4).length? true : false;\n  }\n\n  removeReason(id) {\n    const index: number = this.selectedReasonList.findIndex(srl => srl.id === id);\n    this.selectedReasonList.splice(index, 1);\n  }\n\n  cancel(): void {\n    this.dialogRef.close();\n  }\n\n  submitRejectionDisapproved(): void {\n    // console.log('PARAMETER', this.ascUser, this.action, this.status);\n\n    let msg;\n    let endpointReason;\n    let endpointReject;\n    let swalMsg = 'Application has been rejected/disapproved successfully.';\n    let applicationForm: any;\n    let navigateToList;\n\n    if (this.status === APPLICATION_STATUS.S1_APPLICATION_REJECTED || this.status === APPLICATION_STATUS_S2.S2_APPLICATION_REJECTED) {\n      msg = COMMON_FUNCTION.REJECT;\n      swalMsg = 'Application has been rejected successfully.';\n    } else if (this.status === APPLICATION_STATUS.S1_APPLICATION_DISAPPROVED ||\n      this.status === APPLICATION_STATUS_S2.S2_APPLICATION_DISAPPROVED) {\n      msg = COMMON_FUNCTION.DISAPPROVED;\n      swalMsg = 'Application has been disapproved.';\n    }\n\n    Swal.fire({\n      text: 'Are you sure you want to ' + msg + ' this application?',\n      icon: 'question',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Confirm'\n    }).then((result) => {\n      if (result.value) {\n        this.spinner.show();\n        if (this.data.applicationStage === 's1') {\n          applicationForm = this.s1Application;\n          navigateToList = 'asc/page/application/s1/lists';\n          endpointReason = ENDPOINTS.s1ReasonOfRejection;\n          endpointReject = this.s1Application.submissionType === SUBMISSION_TYPE.ORIGINAL\n            ? this.s1Application.decisionStatus === APP_DECISION_STATUS.INCOMPLETE\n              ? ENDPOINTS.s1ApplicationFormEncoderRejectCompliance : ENDPOINTS.s1ApplicationFormEncoderReject\n            : ENDPOINTS.s1ApplicationFormEncoderRejectRevision;\n        } else {\n          applicationForm = this.s2Application;\n          navigateToList = 'asc/page/application/s2/lists';\n          endpointReason = ENDPOINTS.s2ReasonOfRejection;\n          endpointReject = ENDPOINTS.s2ApplicationFormEncoderReject;\n        }\n        console.info('apllicationRejectionList => ', this.applicationRejectionList)\n        // this.spinner.hide();\n        this.applicationRejectionList.filter( e=>{\n          if(e.typeOfReason.id === 4){\n            e.remarks = this.remarks\n          }\n        });\n        this.apiService.save(endpointReason, this.applicationRejectionList).subscribe(\n          (res: any) => {\n            this.apiService.save(endpointReject, applicationForm).subscribe(\n              (res1: any) => {\n                this.s1Application = res1.responseData.data;\n                // Forward Multiple Application\n                if (this.s1Application.submissionType === SUBMISSION_TYPE.ORIGINAL &&\n                  this.data.applicationStage === 's1' && this.s1Application.multipleApplication &&\n                  this.s1Application.multipleApplication.actualNumberOfApplicationForm ===\n                  this.s1Application.multipleApplication.countVerifiedApplicationForm &&\n                  this.s1Application.internalStatus !== APPLICATION_STATUS.S1_APPLICATION_REVIEWED) {\n                  this.forwardMultipleAppsTo();\n                } else {\n                  this.spinner.hide();\n                  this.sweetAlertService.customSuccessMessage(swalMsg);\n                  this.dialogRef.close();\n                  this.router.navigateByUrl(navigateToList);\n                }\n              })\n          })\n      }\n    })\n  }\n\n\n  forwardMultipleAppsTo() {\n    console.log('forwardMultipleAppsTo');\n    console.log(this.s1Application);\n    this.s1Application.multipleApplication.assignedEncoder = this.s1Application.assignedEncoder;\n    this.apiService.save(ENDPOINTS.forwardMultipleAppFormToAdSpe, this.s1Application.multipleApplication).subscribe(\n      (res: any) => {\n        console.log(res);\n        this.spinner.hide();\n        this.sweetAlertService.customSuccessMessage('Multiple application successfully forwarded to the next user.');\n        this.dialogRef.close();\n        this.router.navigateByUrl('asc/page/application/s1/lists');\n      }, (err: any) => {\n        this.spinner.hide();\n        this.sweetAlertService.error(err);\n      }, () => {\n        this.spinner.hide();\n      })\n  }\n\n\n}\n","<div class=\"container-fluid\">\n    <h1><span class=\"material-icons\" >report_problem</span> Reasons for rejection</h1>\n    <hr>\n    <div class=\"row\">\n      <mat-label *ngIf=\"errMsg\" class=\"errMsg\">{{errMsg}}</mat-label>\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n            <mat-label>Select Reason:</mat-label>\n                <mat-select #selectReason (selectionChange)=\"selectedReason($event.value)\">\n                    <mat-option *ngFor=\"let i of typeOfReasonList\" [value]=\"i\">\n                        {{i.reason}}\n                    </mat-option>\n                </mat-select>\n        </mat-form-field>\n    </div>\n\n    <div class=\"row \">\n        <th >Selected Reasons:</th>\n        <div class=\"col list-content\" >\n\n            <table *ngFor=\"let i of selectedReasonList\">\n                <tr>\n                    <td class=\"reason-description\">\n                        <span class=\"material-icons\" >label_important</span> {{i.reason}}\n                    </td>\n                    <td>\n                        <!-- <button  (click)=\"removeReason(i.id)\">x</button> -->\n                        <span class=\"material-icons\" (click)=\"removeReason(i.id)\">delete</span>\n\n                    </td>\n                </tr>\n            </table>\n        </div>\n    </div>\n    <div class=\"row\" *ngIf=\"checkOthersReason()\">\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n            <mat-label>REMARKS</mat-label>\n            <!-- <textarea matInput [value]=\"payment?.remarks\" [readonly]=\"!isForPayment\"></textarea> -->\n            <textarea matInput name=\"remarks\" [(ngModel)]=\"remarks\"\n              ></textarea>\n          </mat-form-field>\n    </div>\n\n    <div class=\"row button-content\">\n        <div class=\"col\">\n\n            <button mat-raised-button class=\"button-red\" (click)=\"submitRejectionDisapproved()\"\n            [disabled]=\"selectedReasonList.length === 0\">\n                <i class=\"material-icons color__white\">verified</i> Submit Rejection\n            </button>\n        </div>\n        <div class=\"col\">\n            <button class=\"col-md-6\" mat-raised-button class=\"button-red\" (click)=\"cancel()\">\n                <i class=\"material-icons color__white\">cancel</i> Cancel\n            </button>\n        </div>\n    </div>\n\n</div>\n","import { ApplicationS2RationaleList } from \"./application-rationale-list-s2.model\";\nimport { ApplicationRationaleList } from \"./application-rationale-list.model\";\nimport { S2Application } from \"./s2-application.model\";\nimport { UserAccount } from \"./user-account.model\";\n\nexport class RationaleS2 {\n    id: number;\n    applicationFormS2: S2Application;\n    applicationRationaleLists: ApplicationRationaleList[];\n    others: string;\n    actionBy: UserAccount;\n    actionDate: Date;\n}\n","export class TypeOfReason {\n    id: number;\n    reason: string;\n    status: string;\n}\n","import { ApplicationRationaleList } from \"./application-rationale-list.model\";\nimport { S1Application } from \"./s1-application.model\";\nimport { S2Application } from \"./s2-application.model\";\nimport { UserAccount } from \"./user-account.model\";\n\nexport class Rationale {\n    id: number;\n    applicationForm: S1Application;\n    applicationFormS2: S2Application;\n    applicationRationaleLists: ApplicationRationaleList[];\n    others: string;\n    actionBy: UserAccount;\n    actionDate: Date;\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FormActionButtonsComponent } from './form-action-buttons/form-action-buttons.component';\nimport { FormListComponent } from './form-list/form-list.component';\nimport { AngularMaterialModule } from '@shared';\nimport { FragmentsRoutingModule } from './fragments-routing.module';\nimport { RejectDisapprovedReasonComponent } from './reject-disapproved-reason/reject-disapproved-reason.component';\nimport { RequestForSpecialClearingComponent } from './request-for-special-clearing/request-for-special-clearing.component';\nimport { IncompleteDisapprovedRationaleComponent } from './incomplete-disapproved-rationale/incomplete-disapproved-rationale.component';\n\n\n@NgModule({\n  declarations: [\n    FormActionButtonsComponent,\n    FormListComponent,\n    RejectDisapprovedReasonComponent,\n    RequestForSpecialClearingComponent,\n    IncompleteDisapprovedRationaleComponent\n  ],\n  imports: [\n    CommonModule,\n    FragmentsRoutingModule,\n    AngularMaterialModule,\n  ],\n  exports: [\n    FormActionButtonsComponent,\n    FormListComponent\n  ]\n})\nexport class FragmentsModule { }\n","export class TypeOfApplication {\n    id: number;\n    description: string;\n    clearingReleaseTime: String\n    decisionReleaseTime: String\n    sequenceNo: number;\n    status: String\n    submissionEndTime: String;\n    submissionStartTime: String\n}","import { TypeOfRational } from \"./type-of-rational.model\";\n\nexport class ApplicationRationaleList {\n\n    id: number;\n    typeOfRationale: TypeOfRational;\n\n}","import { Company } from './company.model';\nimport { Brand } from './brand.model';\nimport { ApplicationType } from './application-type.model';\nimport { UserAccount } from './user-account.model';\nimport { MultipleApplication } from './multiple-application.model';\nimport { Affiliation } from './affiliation.model';\nimport { ApplicationRequest } from './application-request.model';\nimport { Product } from './product.model';\nimport { TypeOfMedium } from './type-of-medium.model';\n\nexport class S1Application {\n    id: number;\n    company: Company;\n    brand: Brand;\n    adTitle: string;\n    referenceCode: string;\n\n    tagLine: string;\n    materialInformation: string;\n    externalStatus: string\n    internalStatus: string\n    revisionNo: number;\n\n    actionBy: UserAccount;\n    actionStatus: string; // ASSIGN_TO_ADSPE, ASSIGN_TO_REVIEWER, ASSIGN_TO_SCREENER\n    formStatus: string; // OPEN, LOCKED\n    submissionType: string // ORIGINAL, REVISION, COMPLIANCE\n    applicationType: ApplicationType;\n\n    formType: string; // INDIVIDUAL, MULTIPLE\n    autoSubmit: boolean;\n    submissionDate: Date;\n    sequenceOrder: number;\n    countSeries: number;\n\n    refTypeOfMedium: string;\n    assignedUser: UserAccount;\n    applicationOwner: UserAccount;\n    multipleApplication: MultipleApplication;\n    appFormReference: string;\n\n    mainAttachmentReference: string;\n    supportingAttachmentReference: string;\n    paymentAttachmentReference: string;\n    membersAffiliation: Affiliation;\n    decisionStatus: string;\n\n    amount: number;\n    applicationRequest: ApplicationRequest;\n    revisionLetterAttachmentReference: string;\n    assignedEncoder: UserAccount;\n    assignedAdSpecialist: UserAccount;\n\n    assignedScreener: UserAccount;\n    assignedReviewer: UserAccount;\n    verifiedDatetimeByEvaluator: Date;\n    sameDayRelease: boolean;\n    paidByApplicant: boolean;\n\n    archived: boolean;\n    appliedS2: boolean;\n    deliquent: boolean;\n    paymentStatus: string;\n    applicationDate: Date;\n\n    validUntil: Date;\n    previousRefCode: string;\n    hasNoSupportingDocs: boolean;\n    referenceCodeRejected: string;\n\n    hasRevision: boolean;\n    product: Product;\n    hasOngoingRevision: boolean;\n    qrCode: string;\n    barCode: string;\n    screenerDecisionComment: boolean;\n    reviewerDecisionComment: boolean;\n    hasOngoingCompliance: boolean;\n    releaseStatus: string;\n\n    complianceForm: boolean; // param need upon request for compliance\n    emailSent: boolean;\n    forwardToScreener: boolean;\n    forwardToReviewer: boolean;\n    formProcess: string;\n    typeOfMedium: string;\n\n    stampMaterialFileURL: string;\n    stampMaterialFilename: string;\n    decisionFormFileURL : string;\n    decisionFormFilename: string;\n\n    hasOngoingAppeal: boolean;\n    typeOfAppeal: string;\n    appealAttachmentReference: string;\n\n    hasOfficialReceipt: boolean;\n\n    // For AppRequest\n    status: string;\n\n    currentAssignee: string;\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { ApiService, DataStorageService, SweetAlertService } from '@services';\nimport { APP_DECISION_STATUS, ENDPOINTS, SUBMISSION_TYPE } from '@shared';\nimport { ApplicationS2RationaleList } from 'app/core/models/application-rationale-list-s2.model';\nimport { ApplicationRationaleList } from 'app/core/models/application-rationale-list.model';\nimport { RationaleS2 } from 'app/core/models/rationale-s2.model';\nimport { Rationale } from 'app/core/models/rationale.model';\nimport { TypeOfRational } from 'app/core/models/type-of-rational.model';\nimport { NgxSpinnerService } from 'ngx-spinner';\n\n@Component({\n  selector: 'app-incomplete-disapproved-rationale',\n  templateUrl: './incomplete-disapproved-rationale.component.html',\n  styleUrls: ['./incomplete-disapproved-rationale.component.scss']\n})\nexport class IncompleteDisapprovedRationaleComponent implements OnInit {\n\n  rationale = new Rationale();\n  rationaleS2 = new RationaleS2();\n  typeOfRational = new TypeOfRational();\n  applicationRationaleList = new ApplicationRationaleList();\n  applicationRationaleListS2 = new ApplicationS2RationaleList();\n  rationaleList = [];\n  selectedRationaleList = [];\n\n  submissionType = '';\n  isOther = false;\n  otherDescription = '';\n  currentUser: any;\n\n  constructor(\n    private apiService: ApiService,\n    private sweetAlertService: SweetAlertService,\n    private router: Router,\n    private dataStorage: DataStorageService,\n    private spinner: NgxSpinnerService,\n    public dialogRef: MatDialogRef<IncompleteDisapprovedRationaleComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any\n  ) {\n\n    if (data.applicationStage === 's1') {\n      this.submissionType = data.s1Application.submissionType;\n    } else {\n      this.submissionType = data.s2Application.submissionType;\n    }\n\n  }\n\n  ngOnInit(): void {\n    this.getRationale();\n    this.currentUser = this.dataStorage.getUserAccount();\n    console.log('ksahkjakj', this.data);\n\n  }\n\n\n\n  getRationale(): void {\n    let endpoint\n    let submissionTypeForm\n\n    if (this.data.applicationStage === 's1') {\n      submissionTypeForm = this.data.s1Application.submissionType;\n      this.rationale.applicationForm = this.data.s1Application;\n    } else {\n      submissionTypeForm = this.data.s2Application.submissionType;\n      this.rationale.applicationFormS2 = this.data.s2Application;\n    }\n\n    if (submissionTypeForm === SUBMISSION_TYPE.ORIGINAL) {\n      endpoint = ENDPOINTS.typeOfRationale;\n    } else if (submissionTypeForm === SUBMISSION_TYPE.REVISION) {\n      endpoint = ENDPOINTS.typeOfRationale + '/category/FOR_COMPLIANCE';\n    } else if (submissionTypeForm === SUBMISSION_TYPE.COMPLIANCE ||\n      this.data.s1Application.decisionStatus === APP_DECISION_STATUS.INCOMPLETE) {\n      endpoint = ENDPOINTS.typeOfRationale + '/category/FOR_INCOMPLETE_DECISION';\n    } else if (this.data.s1Application.hasToa) {\n      endpoint = ENDPOINTS.typeOfRationale + '/category/FOR_TOA_APPLICATION';\n    }\n\n    this.apiService.findAll(endpoint).subscribe(\n      (res: any) => {\n        this.rationaleList = res.responseData.data;\n        console.log(this.rationaleList);\n      }\n    )\n  }\n\n  selectRationale(data): void {\n    let list = [];\n    if (this.data.applicationStage === 's1') {\n      this.applicationRationaleList.typeOfRationale = data;\n      this.selectedRationaleList.push(this.applicationRationaleList);\n      this.applicationRationaleList = new ApplicationRationaleList();\n    } else {\n      this.applicationRationaleList.typeOfRationale = data;\n      this.selectedRationaleList.push(this.applicationRationaleList);\n      this.applicationRationaleList = new ApplicationRationaleList();\n    }\n    console.log(this.selectedRationaleList);\n\n\n\n\n  }\n\n  removeRationale(id) {\n    const index: number = this.selectedRationaleList.findIndex(srl => srl.id === id);\n    this.selectedRationaleList.splice(index, 1);\n  }\n\n  submitRationale(): void {\n    let endpoint;\n    let swalMessage;\n    let activeModel;\n\n    this.spinner.show();\n\n    if (this.data.applicationStage === 's1') {\n      endpoint = ENDPOINTS.applicationRationale;\n      swalMessage = 'S1 application rationale has been saved!'\n    } else {\n      endpoint = ENDPOINTS.applicationRationaleS2;\n      swalMessage = 'S2 application rationale has been saved!';\n      this.rationale.id = 0;\n    }\n\n    this.rationale.applicationRationaleLists = this.selectedRationaleList;\n    this.rationale.actionDate = new Date();\n    this.rationale.actionBy = this.currentUser;\n    this.rationale.others = this.otherDescription;\n\n\n    console.log('save rationale', this.rationale);\n\n    this.apiService.save(endpoint, this.rationale).subscribe(\n      (res: any) => {\n        this.spinner.hide();\n        this.sweetAlertService.customSuccessMessage(swalMessage);\n        this.dialogRef.close(res);\n      }, (err: any) => {\n        console.log(err);\n      }\n    )\n  }\n\n  cancel(): void {\n    this.dialogRef.close();\n  }\n\n}\n","<div class=\"container-fluid\">\n    <h1><span class=\"material-icons\" >info</span> Add Rationale</h1>\n    <hr>\n    <div class=\"row\">\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n            <mat-label>Select Rationale:</mat-label>\n                <mat-select class=\"mat-select-value-text\" (selectionChange)=\"selectRationale($event.value)\">\n                    <mat-option *ngFor=\"let i of rationaleList\" [value]=\"i\" [matTooltip]=\"i.rationale\">\n                        {{i.rationale}}\n                    </mat-option>\n                </mat-select>\n        </mat-form-field>\n\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n            <mat-label>OTHER, PLEASE SPECIFY:</mat-label>\n            <textarea matInput [(ngModel)]=\"otherDescription\"></textarea>\n        </mat-form-field>\n\n    </div>\n\n    <div class=\"row \">\n        <th >Selected Rationale:</th>\n        <div class=\"col list-content\" >\n\n            <table *ngFor=\"let i of selectedRationaleList\">\n                <tr>\n                    <td class=\"reason-description\">\n                        <span class=\"material-icons\" >label_important</span>  {{i?.typeOfRationale?.rationale}}\n                    </td>\n                    <td>\n                        <span class=\"material-icons\" (click)=\"removeRationale(i.id)\">delete</span>\n                    </td>\n                </tr>\n            </table>\n        </div>\n    </div>\n\n    <div class=\"row button-content\">\n        <div class=\"col\">\n            <button mat-raised-button class=\"button-red\" (click)=\"submitRationale()\" [disabled]=\"selectedRationaleList.length === 0 && !otherDescription\">\n                <i class=\"material-icons color__white\">verified</i> Submit Rationale\n            </button>\n        </div>\n        <div class=\"col\">\n            <button class=\"col-md-6\" mat-raised-button class=\"button-red\" (click)=\"cancel()\">\n                <i class=\"material-icons color__white\">cancel</i> Cancel\n            </button>\n        </div>\n    </div>\n\n</div>\n","import { Brand } from './brand.model';\nimport { Category } from './category.model';\n\nexport class Product {\n    id: number;\n    description: string;\n    status: string;\n    brand: Brand;\n    category: Category;\n}\n","import { SweetAlertService } from './../../../core/services/alert-message/sweet-alert.service';\nimport { ENDPOINTS } from '@shared';\nimport { ApiService } from './../../../core/services/api.service';\nimport { AfterViewInit, Component, EventEmitter, Input, OnInit, Output, TemplateRef, ViewChild } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTable, MatTableDataSource } from '@angular/material/table';\nimport { NgxSpinnerService } from 'ngx-spinner';\n\n@Component({\n  selector: 'app-form-list',\n  templateUrl: './form-list.component.html',\n  styleUrls: ['./form-list.component.scss']\n})\nexport class FormListComponent implements OnInit, AfterViewInit {\n  @ViewChild(MatPaginator, { static: false }) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: false }) sort: MatSort;\n  @ViewChild(MatTable, { static: false }) table: MatTable<Object>;\n  @Input() dataSource: MatTableDataSource<Object>;\n  @Input() displayedColumns = '';\n  @Output() selectInListFunction: EventEmitter<any> = new EventEmitter();\n  @Output() deleteInListFunction: EventEmitter<any> = new EventEmitter();\n  @Output() updateListFunction: EventEmitter<any> = new EventEmitter();\n  @Output() idForUpdate: number = 0;\n  @Output() idForDelete: number = 0;\n  @Output() elementObject: any;\n  @Output() getVoucherRef: EventEmitter<any> = new EventEmitter();\n  @ViewChild('myTemplate') customModal: TemplateRef<any>;\n  @ViewChild('signatoryEdit') signatoryEditModal: TemplateRef<any>;\n  signatory: any = {};\n  signatoryRef: any = {};\n\n  constructor(public dialog: MatDialog, private api: ApiService, \n    private spinner: NgxSpinnerService, private alert: SweetAlertService) { }\n\n  ngOnInit(): void {\n  }\n\n  ngAfterViewInit(): void {\n    if(this.dataSource){\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n    }\n  }\n\n  getObject(id) {\n    this.idForUpdate = id;\n    this.selectInListFunction.emit();\n  }\n\n  deleteObject(id, obj: any = '') {\n    this.idForDelete = id;\n    this.elementObject = obj;\n    this.deleteInListFunction.emit(obj);\n  }\n\n  openEditModal(id, obj: any) {\n    this.signatory = JSON.parse(JSON.stringify(obj));\n    this.signatoryRef = obj;\n    this.dialog.open(this.signatoryEditModal, {\n      disableClose: true,\n      width: '350px',\n      data: obj\n    });\n  }\n\n  updateObject(): void {\n    if (this.signatoryRef.id === undefined) {\n      let data = this.dataSource.data;\n      data.splice(this.dataSource.data.findIndex(r => r === this.signatoryRef), 1, this.signatory);\n      this.updateListFunction.emit(data);\n    } else {\n      this.updateListFunction.emit(this.signatory);\n    }\n    this.dialog.closeAll();\n  }\n\n  closeModal() {\n    this.dialog.closeAll();\n  }\n  viewHistory(data){\n    console.log('data', data);\n    // this.spinner.show()\n    \n\n\n    this.api.findByParam(ENDPOINTS.voucherAttachment, data?.voucherAttachmentReference).subscribe(res =>{\n      if(!res?.responseData?.data?.fileURL) {\n        this.alert.customErrorMessage(\"No Available file\")\n      }\n      \n      window.open(res?.responseData?.data?.fileURL);\n    }, error =>{\n      this.alert.customErrorMessage(\"No Available File\");\n    })\n    \n  }\n\n\n}\n","<div class=\"mat-elevation-z8\">\n  <table mat-table [dataSource]=\"dataSource\" matSort>\n\n    <ng-container matColumnDef=\"emailCode\">\n      <th mat-header-cell *matHeaderCellDef> Email Code </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\"> {{ element?.emailCode }} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"subject\">\n      <th mat-header-cell *matHeaderCellDef> Subject </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\"> {{ element?.subject }} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"category\">\n      <th mat-header-cell *matHeaderCellDef> Category </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\"> {{ element?.category?.description }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"typeOfMainDocument\">\n      <th mat-header-cell *matHeaderCellDef> Type Of Main Document </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\"> {{ element?.typeOfMainDocument }} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"typeOfMainDocumentObject\">\n      <th mat-header-cell *matHeaderCellDef> Type Of Main Document </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\"> {{\n        element?.typeOfMainDocument?.typeOfMainDocument }} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"noOfHours\">\n      <th mat-header-cell *matHeaderCellDef> Number Of Hours </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\"> {{ element?.noOfHours }} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"noOfDays\">\n      <th mat-header-cell *matHeaderCellDef> Number Of Days </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\"> {{ element?.noOfDays }} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"noOfWorkingDays\">\n      <th mat-header-cell *matHeaderCellDef> Number Of Working Days </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\"> {{ element?.noOfWorkingDays }} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"typeOfMedium\">\n      <th mat-header-cell *matHeaderCellDef> Type of Medium </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\"> {{ element?.typeOfMedium }} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"typeOfMediumObj\">\n      <th mat-header-cell *matHeaderCellDef> Type of Medium </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\"> {{ element?.typeOfMedium?.description }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"reason\">\n      <th mat-header-cell *matHeaderCellDef> Reason </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\"> {{ element?.reason }} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"description\">\n      <th mat-header-cell *matHeaderCellDef> Description </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\"> {{ element?.description }} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"body\">\n      <th mat-header-cell *matHeaderCellDef> Body </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        <div [innerHTML]=\"element?.body\"></div>\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"dialect\">\n      <th mat-header-cell *matHeaderCellDef> Dialect </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\"> {{ element?.dialect }} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"applicationType\">\n      <th mat-header-cell *matHeaderCellDef> Application Type </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\"> {{ element?.applicationType }} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"lengthFrom\">\n      <th mat-header-cell *matHeaderCellDef> Length From </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\"> {{ element?.lengthFrom }} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"lengthTo\">\n      <th mat-header-cell *matHeaderCellDef> Length To </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\"> {{ element?.lengthTo }} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"memberOffline\">\n      <th mat-header-cell *matHeaderCellDef> Member Offline </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\"> {{ element?.memberOffline }} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"memberOnline\">\n      <th mat-header-cell *matHeaderCellDef> Member Online </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\"> {{ element?.memberOnline }} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"nonMemberOffline\">\n      <th mat-header-cell *matHeaderCellDef> Non Member Offline </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\"> {{ element?.nonMemberOffline }} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"nonMemberOnline\">\n      <th mat-header-cell *matHeaderCellDef> Non Member Online </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\"> {{ element?.nonMemberOnline }} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"screenerName\">\n      <th mat-header-cell *matHeaderCellDef> Screener Name </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        {{ element?.screener?.firstName }} {{ element?.screener?.lastName }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"reviewerName\">\n      <th mat-header-cell *matHeaderCellDef> Reviewer Name </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        {{ element?.reviewer?.firstName }} {{ element?.reviewer?.lastName }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"holidayName\">\n      <th mat-header-cell *matHeaderCellDef> Holiday Name </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\"> {{ element?.holidayName }} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"holidayDate\">\n      <th mat-header-cell *matHeaderCellDef> Holiday Date </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\"> {{ element?.holidayDate |\n        date:'MM/dd/yyyy' }} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"holidayType\">\n      <th mat-header-cell *matHeaderCellDef> Holiday Type </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\"> {{ element?.holidayType?.replaceAll('_','\n        ') }} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"typeOfExecution\">\n      <th mat-header-cell *matHeaderCellDef> Type Of Execution </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\"> {{ element?.typeOfExecution }} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"typeOfExecutionObj\">\n      <th mat-header-cell *matHeaderCellDef> Type Of Execution </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\"> {{\n        element?.typeOfExecution?.typeOfExecution }} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"live\">\n      <th mat-header-cell *matHeaderCellDef> LIVE </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        <i *ngIf=\"element?.supportingAttachmentReference\" class=\"material-icons\">check_circle</i>\n        <i *ngIf=\"!element?.supportingAttachmentReference\" class=\"material-icons cancel\">cancel</i>\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"landingPage\">\n      <th mat-header-cell *matHeaderCellDef> Landing Page </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        <i *ngIf=\"element?.supportingAttachmentReference\" class=\"material-icons\">check_circle</i>\n        <i *ngIf=\"!element?.supportingAttachmentReference\" class=\"material-icons cancel\">cancel</i>\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"applyForS2\">\n      <th mat-header-cell *matHeaderCellDef> Apply for S2 </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        <i *ngIf=\"!element?.live\" class=\"material-icons\">check_circle</i>\n        <i *ngIf=\"element?.live\" class=\"material-icons cancel\">cancel</i>\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"applyForTOA\">\n      <th mat-header-cell *matHeaderCellDef> Apply for TOA </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        <i *ngIf=\"element?.applyForToa\" class=\"material-icons\">check_circle</i>\n        <i *ngIf=\"!element?.applyForToa\" class=\"material-icons cancel\">cancel</i>\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"paymentDescription\">\n      <th mat-header-cell *matHeaderCellDef> Payment Description </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\"> {{ element?.paymentDescription }} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"categoryDescription\">\n      <th mat-header-cell *matHeaderCellDef> Category </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\"> {{ element?.description }} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"product\">\n      <th mat-header-cell *matHeaderCellDef> Product </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\"> {{ element?.product?.description }} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"productDescription\">\n      <th mat-header-cell *matHeaderCellDef> Product </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\"> {{ element?.description }} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"brand\">\n      <th mat-header-cell *matHeaderCellDef> Brand </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\"> {{ element?.brand?.description }} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"title\">\n      <th mat-header-cell *matHeaderCellDef> Title </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\"> {{ element?.title }} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"details\">\n      <th mat-header-cell *matHeaderCellDef> Details </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\"> {{ element?.details }} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"noOfView\">\n      <th mat-header-cell *matHeaderCellDef> Number Of Views </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\"> {{ element?.noOfView }} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"minimum\">\n      <th mat-header-cell *matHeaderCellDef> Minimum </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\"> {{ element?.minimum }} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"maximum\">\n      <th mat-header-cell *matHeaderCellDef> Maximum </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\"> {{ element?.maximum }} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"postingDate\">\n      <th mat-header-cell *matHeaderCellDef> Posting Date </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\"> {{ element?.postingDate |\n        date:'MM/dd/yyyy' }} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"s1ExpNoOfYears\">\n      <th mat-header-cell *matHeaderCellDef> S1 Expiration No Of Years </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\"> {{ element?.s1ExpNoOfYears }} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"s2ExpNoOfYears\">\n      <th mat-header-cell *matHeaderCellDef> S2 Expiration No Of Years </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\"> {{ element?.s2ExpNoOfYears }} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"referenceCode\">\n      <th mat-header-cell *matHeaderCellDef> Reference Code </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        <span *ngIf=\"element?.referenceCode\">\n          {{ element?.referenceCode }}\n        </span>\n        <span *ngIf=\"element?.applicationForm?.referenceCode\">\n          {{ element?.applicationForm?.referenceCode }}\n        </span>\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"adTitle\">\n      <th mat-header-cell *matHeaderCellDef> AD Title </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        <span *ngIf=\"element?.adTitle\">\n          {{ element?.adTitle }}\n        </span>\n        <span *ngIf=\"element?.applicationForm?.adTitle\">\n          {{ element?.applicationForm?.adTitle }}\n        </span>\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"assignedAdSpecialist\">\n      <th mat-header-cell *matHeaderCellDef> AD Specialist </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        <span *ngIf=\"element?.assignedAdSpecialist\">\n          {{ element?.assignedAdSpecialist?.firstName }} {{ element?.assignedAdSpecialist?.lastName }}\n        </span>\n        <!-- <span *ngIf=\"element?.applicationForm?.assignedAdSpecialist\">\n         {{element?.applicationForm?.assignedAdSpecialist?.firstName }}  {{ element?.applicationForm?.assignedAdSpecialist?.lastName }}\n        </span> -->\n        <span *ngIf=\"!element?.assignedAdSpecialist\">\n          N/A\n        </span>\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"assignedEncoder\">\n      <th mat-header-cell *matHeaderCellDef> Evaluator </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        <span *ngIf=\"element?.assignedEncoder\">\n          {{ element?.assignedEncoder?.firstName }} {{ element?.assignedEncoder?.lastName }}\n        </span>\n        <!-- <span *ngIf=\"element?.applicationForm?.assignedEncoder\">\n          {{element?.applicationForm?.assignedEncoder?.firstName }} {{ element?.applicationForm?.assignedEncoder?.lastName }}\n        </span> -->\n        <span *ngIf=\"!element?.assignedEncoder && !element?.applicationForm?.assignedEncoder\">\n          N/A\n        </span>\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"assignedReviewer\">\n      <th mat-header-cell *matHeaderCellDef> Reviewer </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        <span *ngIf=\"element?.assignedReviewer\">\n          {{ element?.assignedReviewer?.firstName }} {{ element?.assignedReviewer?.lastName }}\n        </span>\n        <!-- <span *ngIf=\"element?.applicationForm?.assignedReviewer\">\n          {{element?.applicationForm?.assignedReviewer?.firstName }} {{ element?.applicationForm?.assignedReviewer?.lastName }}\n        </span> -->\n        <span *ngIf=\"!element?.assignedReviewer\">\n          N/A\n        </span>\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"assignedScreener\">\n      <th mat-header-cell *matHeaderCellDef> Screener </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        <span *ngIf=\"element?.assignedScreener\">\n          {{ element?.assignedScreener?.firstName }} {{ element?.assignedScreener?.lastName }}\n        </span>\n        <!-- <span *ngIf=\"element?.applicationForm?.assignedScreener\">\n          {{element?.applicationForm?.assignedScreener?.firstName }} {{ element?.applicationForm?.assignedScreener?.lastName }}\n        </span> -->\n        <span *ngIf=\"!element?.assignedScreener\">\n          N/A\n        </span>\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"assignedUser\">\n      <th mat-header-cell *matHeaderCellDef> Current Assigned User </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        <span *ngIf=\"element?.assignedUser\">\n          {{ element?.assignedUser?.firstName }} {{ element?.assignedUser?.lastName }}\n        </span>\n        <!-- <span *ngIf=\"element?.applicationForm?.assignedUser\">\n          {{ element?.applicationForm?.assignedUser?.firstName }} {{ element?.applicationForm?.assignedUser?.lastName }}\n        </span> -->\n        <span *ngIf=\"!element?.assignedUser\">\n          N/A\n        </span>\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"applicationOwner\">\n      <th mat-header-cell *matHeaderCellDef> Application Owner </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        <span *ngIf=\"element?.applicationOwner\">\n          {{ element?.applicationOwner?.firstName }} {{ element?.applicationOwner?.lastName }}\n        </span>\n        <span *ngIf=\"element?.applicationForm?.applicationOwner\">\n          {{element?.applicationForm?.applicationOwner?.firstName }}\n          {{element?.applicationForm?.applicationOwner?.lastName }}\n        </span>\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"lastModifiedBy\">\n      <th mat-header-cell *matHeaderCellDef> Last Modified By </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        {{ element?.modifiedBy ? element?.modifiedBy : element?.createdBy }} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"lastModifiedDate\">\n      <th mat-header-cell *matHeaderCellDef> Last Modified Date </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        {{ element?.modifiedDate ? (element?.modifiedDate | date:'MM/dd/yyyy hh:mm a') : (element?.createdDate |\n        date:'MM/dd/yyyy hh:mm a') }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"affiliationDesc\">\n      <th mat-header-cell *matHeaderCellDef> Member's Affiliation </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        {{ element?.description }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"member\">\n      <th mat-header-cell *matHeaderCellDef> Member </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        {{ element?.member ? 'Yes' : 'No' }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"brandDesc\">\n      <th mat-header-cell *matHeaderCellDef> Brand </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        {{ element?.description }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"penalty\">\n      <th mat-header-cell *matHeaderCellDef> Penalty </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        {{ element?.penalty ? 'Yes' : 'No' }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"typeOfDocumentDesc\">\n      <th mat-header-cell *matHeaderCellDef> Type of Document </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        {{ element?.description }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"dateOfLaunchEnable\">\n      <th mat-header-cell *matHeaderCellDef> Has Date Of Launch </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        {{ element?.dateOfLaunchEnable ? 'Yes' : 'No' }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"expiresOnEnable\">\n      <th mat-header-cell *matHeaderCellDef> Has Expiration Date </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        {{ element?.expiresOnEnable ? 'Yes' : 'No' }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"basedOnEnable\">\n      <th mat-header-cell *matHeaderCellDef> Has Basis </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        {{ element?.basedOnEnable ? 'Yes' : 'No' }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"variantEnable\">\n      <th mat-header-cell *matHeaderCellDef> Has Variant </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        {{ element?.variantEnable ? 'Yes' : 'No' }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"remarksEnable\">\n      <th mat-header-cell *matHeaderCellDef> Has Remarks </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        {{ element?.remarksEnable ? 'Yes' : 'No' }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"inputEnable\">\n      <th mat-header-cell *matHeaderCellDef> Has Input </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        {{ element?.inputEnable ? 'Yes' : 'No' }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"amount\">\n      <th mat-header-cell *matHeaderCellDef> Has Amount </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        {{ element?.amount ? 'Yes' : 'No' }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"bankBranch\">\n      <th mat-header-cell *matHeaderCellDef> Has Bank Branch </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        {{ element?.bankBranch ? 'Yes' : 'No' }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"bankName\">\n      <th mat-header-cell *matHeaderCellDef> Has Bank Name </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        {{ element?.bankName ? 'Yes' : 'No' }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"controlNo\">\n      <th mat-header-cell *matHeaderCellDef> Has Control No </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        {{ element?.controlNo ? 'Yes' : 'No' }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"fundTransferDate\">\n      <th mat-header-cell *matHeaderCellDef> Has Fund Transfer Date </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        {{ element?.fundTransferDate ? 'Yes' : 'No' }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"promisorryDate\">\n      <th mat-header-cell *matHeaderCellDef> Has Promisorry Date </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        {{ element?.promisorryDate ? 'Yes' : 'No' }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"referenceNo\">\n      <th mat-header-cell *matHeaderCellDef> Has Reference No </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        {{ element?.referenceNo ? 'Yes' : 'No' }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"enabledFields\">\n      <th mat-header-cell *matHeaderCellDef> Enabled Fields </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        {{ element?.enabledFields }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"status\">\n      <th mat-header-cell *matHeaderCellDef> Status </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        {{ element?.status?.replaceAll('_', ' ') }}\n      </td>\n    </ng-container>\n\n    <!-- FOR BRAND PENALTIES -->\n    <ng-container matColumnDef=\"brandDescription\">\n      <th mat-header-cell *matHeaderCellDef> Brand </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        {{ element?.brand?.description }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"brandPenaltyAmount\">\n      <th mat-header-cell *matHeaderCellDef> Amount </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        {{ element?.amount | number : '1.2-2' }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"penaltyDate\">\n      <th mat-header-cell *matHeaderCellDef> Penalty Date </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        {{ element?.penaltyDate | date:'fullDate'}}\n      </td>\n    </ng-container>\n    <!-- FOR BRAND PENALTIES -->\n\n    <!-- FOR COMPANY PENALTIES -->\n    <ng-container matColumnDef=\"companyDescription\">\n      <th mat-header-cell *matHeaderCellDef> Company </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\"\n        [ngStyle]=\"{'background-color': element?.status === 'ACTIVE' ? 'white' : '#ffbebe' }\">\n        {{ element?.company?.companyName }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"companyPenaltyAmount\">\n      <th mat-header-cell *matHeaderCellDef> Penalty Amount </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        {{ element?.penaltyAmount | number : '1.2-2' }}\n      </td>\n    </ng-container>\n\n    <!-- FOR UPLOADING FILE SIZE -->\n    <ng-container matColumnDef=\"id\">\n      <th mat-header-cell *matHeaderCellDef> Document Id </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        {{ element.id }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"size\">\n      <th mat-header-cell *matHeaderCellDef> Document size </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        {{ element.fileSize }}\n      </td>\n    </ng-container>\n\n    <!-- FOR TYPE OF APPLICATION -->\n\n    <ng-container matColumnDef=\"clearingReleaseTime\">\n      <th mat-header-cell *matHeaderCellDef> Clearing Release Time </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        {{ element.clearingReleaseTime }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"decisionReleaseTime\">\n      <th mat-header-cell *matHeaderCellDef> Decision Release Time </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        {{ element.decisionReleaseTime }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"submissionStartTime\">\n      <th mat-header-cell *matHeaderCellDef> Submission Start Time </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        {{ element.submissionStartTime }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"submissionEndTime\">\n      <th mat-header-cell *matHeaderCellDef> Submission End Time </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        {{ element.submissionEndTime }}\n      </td>\n    </ng-container>\n\n    <!-- FOR TYPE OF RATIONAL -->\n\n    <ng-container matColumnDef=\"rationale\">\n      <th mat-header-cell *matHeaderCellDef> Rationale </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\" style=\"width: 78%;\">\n        {{ element.rationale }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"rationaleCategory\">\n      <th mat-header-cell *matHeaderCellDef> Rationale Category </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        {{ element.rationaleCategory.replaceAll('_',' ') | uppercase }}\n      </td>\n    </ng-container>\n\n\n    <ng-container matColumnDef=\"firstName\">\n      <th mat-header-cell *matHeaderCellDef> Firstname </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        {{ element.firstName }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"lastName\">\n      <th mat-header-cell *matHeaderCellDef> Lastname </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        {{ element.lastName }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"mobileNumber\">\n      <th mat-header-cell *matHeaderCellDef> Mobile Number </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        {{ element?.mobileNumber }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"emailAddress\">\n      <th mat-header-cell *matHeaderCellDef> Email Address </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        {{ element?.username }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"userRole\">\n      <th mat-header-cell *matHeaderCellDef> Role </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        {{ element?.userRole?.name?.replaceAll('ROLE_', '')?.replace('_', ' ')?.replace('ENCODER', 'EVALUATOR') }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"typeOfMediumController\">\n      <th mat-header-cell *matHeaderCellDef> Type of Medium </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        {{ element?.typeOfMedium?.description }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"typeOfExecutionController\">\n      <th mat-header-cell *matHeaderCellDef> Type of Execution </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        {{ element?.typeOfExecution?.typeOfExecution }}\n      </td>\n    </ng-container>\n\n    <!-- FOR VOUCHER ENROLLMENT -->\n\n    <ng-container matColumnDef=\"company\">\n      <th mat-header-cell *matHeaderCellDef> Company </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        {{ element?.company?.companyName }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"fundAmount\">\n      <th mat-header-cell *matHeaderCellDef> Fund Amount </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        {{ element?.fundAmount | number : '1.2-2' }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"voucherDate\">\n      <th mat-header-cell *matHeaderCellDef> Voucher Date</th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        {{ element?.voucherDate | date: 'shortDate'}}\n      </td>\n    </ng-container>\n    <!-- <ng-container matColumnDef=\"action\">\n      <th mat-header-cell *matHeaderCellDef> action </th>\n      <td mat-cell *matCellDef=\"let element\">\n        <button mat-raised-button class=\"button-red\" (click)=\"viewHistory(element)\">\n          View History\n        </button>\n      </td>\n    </ng-container> -->\n\n\n    <!-- <ng-container matColumnDef=\"voucherSignatories\">\n        <th mat-header-cell *matHeaderCellDef> Signatories Name </th>\n        <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n          {{ element?.voucherSignatories.name}}\n        </td>\n      </ng-container> -->\n\n    <!-- FOR VOUCHER SIGNATORIES -->\n\n    <ng-container matColumnDef=\"name\">\n      <th mat-header-cell *matHeaderCellDef> Signatories Name </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        {{ element?.name}}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"position\">\n      <th mat-header-cell *matHeaderCellDef> Position</th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        {{ element?.position}}\n      </td>\n    </ng-container>\n\n    <!-- FOR VOUCHER FUND TRANSFER -->\n    <ng-container matColumnDef=\"amountTransfered\">\n      <th mat-header-cell *matHeaderCellDef> Amount Transferred </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        {{ element?.amountTransfered | number : '1.2-2'}}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"transferedDate\">\n      <th mat-header-cell *matHeaderCellDef> Transferred Date</th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        {{ element?.transferedDate | date: 'shortDate' }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"officialReceiptNo\">\n      <th mat-header-cell *matHeaderCellDef> Official Receipt No</th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        {{ element?.officialReceiptNo }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"typeOfMediumDescription\">\n      <th mat-header-cell *matHeaderCellDef> Type Of Medium</th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        {{ element?.typeOfMedium?.description }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"officialReceiptReferences\">\n      <th mat-header-cell *matHeaderCellDef> Official Receipt No References</th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        {{ element?.officialReceiptReferencesValue }}\n      </td>\n    </ng-container>\n\n    <!-- Image login -->\n    <ng-container matColumnDef=\"file\">\n      <th mat-header-cell *matHeaderCellDef> File</th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        {{ element?.file }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"fileName\">\n      <th mat-header-cell *matHeaderCellDef> File name</th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        {{ element?.fileName }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"fileExtension\">\n      <th mat-header-cell *matHeaderCellDef> File Extension</th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        {{ element?.fileExtension }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"documentFormat\">\n      <th mat-header-cell *matHeaderCellDef> Document Format</th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        {{ element?.documentFormat }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"displayed\">\n      <th mat-header-cell *matHeaderCellDef> Display Status</th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        {{ element?.displayed }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"fileURL\">\n      <th mat-header-cell *matHeaderCellDef> File URL</th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        {{ element?.fileURL }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"originalFilename\">\n      <th mat-header-cell *matHeaderCellDef> Original Filename</th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        {{ element?.originalFilename }}\n      </td>\n    </ng-container>\n\n\n\n    <!-- Image login -->\n\n\n    <!-- <ng-container matColumnDef=\"companyPenaltyDate\">\n      <th mat-header-cell *matHeaderCellDef> Penalty Date </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        {{ element?.penaltyDate | date:'fullDate'}}\n      </td>\n    </ng-container> -->\n    <!-- FOR COMPANY PENALTIES -->\n\n    <!-- DELETE ICON -->\n    <ng-container matColumnDef=\"deleteIcon\">\n      <th mat-header-cell *matHeaderCellDef> Action </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"deleteObject(element?.id, element)\" matTooltip=\"Cancel OR\">\n        <span class=\"material-icons\">delete_forever</span>\n      </td>\n    </ng-container>\n    <!-- DELETE ICON -->\n    <ng-container matColumnDef=\"voucherActionItems\">\n      <th mat-header-cell *matHeaderCellDef class=\"action-items\"> Action </th>\n      <td mat-cell *matCellDef=\"let element\" class=\"action-items\">\n        <span class=\"material-icons\" tooltip=\"Edit\" (click)=\"openEditModal(element?.id, element)\">edit</span>\n        <span class=\"material-icons\" tooltip=\"Delete\" (click)=\"deleteObject(element?.id, element)\">delete_forever</span>\n      </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n  </table>\n  <div class=\"no-record\" [hidden]=\"dataSource && dataSource?.data?.length > 0\">\n    No record found.\n  </div>\n  <mat-paginator [pageSizeOptions]=\"[10, 20, 30]\" showFirstLastButtons></mat-paginator>\n</div>\n\n<ng-template #signatoryEdit>\n  <h1 mat-dialog-title>Edit Signatories</h1>\n  <div mat-dialog-content>\n    <mat-form-field appearance=\"fill\" class=\"w-100\">\n      <mat-label>Signatory Name</mat-label>\n      <input matInput [(ngModel)]=\"signatory.name\">\n    </mat-form-field>\n    <mat-form-field appearance=\"fill\" class=\"w-100\">\n      <mat-label>Position</mat-label>\n      <input matInput [(ngModel)]=\"signatory.position\">\n    </mat-form-field>\n  </div>\n  <div mat-dialog-actions class=\"justify-content-center\">\n    <button mat-button (click)=\"closeModal()\">Cancel</button>\n    <button mat-button class=\"mat-raised-button button-red\" [disabled]=\"!signatory.name || !signatory.position\" (click)=\"updateObject()\">Save</button>\n  </div>\n</ng-template>","export class TypeOfRational {\n\nid: number;\nrationale: String;\nrationaleCategory: String;\nstatus:\tString;\n\n}","export class EmailNotification {\n    id: number;\n    body: string;\n    description: string;\n    emailCode: string;\n    status: string;\n    subject: string;\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class FragmentsRoutingModule { }\n","\nexport class AscRateSpecial {\n    id: number;\n    applicationType: string;\n    memberOffline: number;\n    memberOnline: number;\n    nonMemberOffline: number;\n    nonMemberOnline: number;\n    status: string;\n}\n","import { S1Application } from './s1-application.model';\nimport { PaymentMethod } from './payment-method.model';\nimport { MultipleApplication } from './multiple-application.model';\nimport { S2Application } from './s2-application.model';\n\nexport class Payment {\n    id: number;\n    amountDue: number;\n    amountReceive: number;\n    appFormReference: string;\n    applicationForm: S1Application;\n    basicRate: number;\n    discount: number;\n    filename: string;\n    officialReceiptNo: string;\n    paymentAttachmentReference: string;\n    paymentDate: Date;\n    paymentMethod: PaymentMethod = new PaymentMethod();\n    paymentStatus: string; // PAID, UNPAID\n    remarks: string;\n    status: string;\n    vat: number;\n    withholdingTax: number;\n    amountToSettle: number;\n    companyName: string;\n    companyId: number;\n\n    multipleApplication: MultipleApplication;\n    filedBirForm: boolean = false;\n    applicationFormS2: S2Application;\n\n    constructor() {\n        this.filedBirForm = false;\n        this.remarks = '';\n    }\n}\n","import { TypeOfClearance } from './type-of-clearance.model';\nimport { TypeOfMainDocument } from './type-of-main-document.model';\n\nexport class TypeOfMedium {\n  description: string;\n  executionEnable: boolean;\n  id: number;\n  languageEnable: boolean;\n  lengthEnable: boolean;\n  multimedia: boolean;\n  multimediaMoving: boolean;\n  multimediaStatic: boolean;\n  othersEnable: boolean;\n  singlemedia: boolean;\n  sizeLengthEnable: boolean;\n  status: string;\n  typeOfMainDocument: TypeOfMainDocument;\n  widthEnable: boolean;\n  typeOfClearance: TypeOfClearance;\n\n  // not in BE; for List value\n  enabledFields: string;\n  sizeLength: string;\n}\n","import { TypeOfMedium } from './type-of-medium.model';\n\nexport class ApplicationMultimedia {\n    id: number;\n    amount: number;\n    appFormReference: string;\n    mediaType?: string; // STATIC, MOVING\n    multimediaSizeLength?: string;\n    typeOfMedium?: TypeOfMedium;\n}\n\nexport class ApplicationMultimediaItemsDTO {\n    hasSelected: boolean;\n    id: number;\n    multimediaMovingMedium?: string;\n    multimediaStaticMedium?: string;\n    sizeLength?: number;\n}\n\nexport class ApplicationMultimediaMovingDTO extends ApplicationMultimedia {\n    applicationMultimediaMovingList: ApplicationMultimediaItemsDTO[];\n    sizeLength: number;\n}\n\nexport class ApplicationMultimediaStaticDTO extends ApplicationMultimedia {\n    applicationMultimediaStaticList: ApplicationMultimediaItemsDTO[];\n}\n","import { ApplicationRequest } from './application-request.model';\nimport { S1Application } from './s1-application.model';\nimport { UserAccount } from './user-account.model';\n\nexport class S2Application {\n\n    id: number;\n    actionBy: string;\n    actionStatus: string;\n    applicationDate: Date;\n    applicationForm: S1Application;\n    assignedAdSpecialist: UserAccount;\n    assignedEncoder: UserAccount;\n    assignedUser: UserAccount;\n    complianceDate: Date;\n    decisionStatus: string;\n    externalStatus: string;\n    finalMaterialAttachmentReference: string;\n    formStatus: string;\n    internalStatus: string;\n    issuedDate: Date;\n    paymentStatus: string;\n    specialClearing: boolean;\n    submissionDate: Date;\n    validUntil: Date;\n    validityDate: Date;\n    referenceCodeRejected: string;\n    releaseDate: Date;\n    hasToa: boolean;\n    submissionType: string;\n    applicationRequest: ApplicationRequest;\n    paymentAttachmentReference: string;\n    amount: string;\n    appFormReference: string;\n    hasOngoingCompliance: boolean;\n    formProcess: string;\n    complianceForm: boolean; // param need upon request for compliance\n    hasOngoingAppeal: boolean;\n    typeOfAppeal: string;\n    appealAttachmentReference: string;\n    clearanceToaFileUrl: string;\n    clearanceToaFilename: string;\n    releaseStatus: string;\n    supportingAttachmentReference: string;\n}\n","import { TotalAmountsModel } from './totals.model';\nimport { TypeOfMedium, OrPreparationReference } from '@models';\n\nexport class OrPreparation {\n    amount: number;\n    amountInWords: string;\n    businessStyle: string;\n    companyAddress: string;\n    companyName: string;\n    companyTin: string;\n    controlNumber: string;\n    fullPaymentOf: string;\n    id: number;\n    officialReceiptDate: Date;\n    officialReceiptNo: string;\n    officialReceiptReferences: OrPreparationReference[];\n    remarks: string;\n    status: string;\n    typeOfMedium: TypeOfMedium;\n    voucherControlNumber: string;\n\n    //totals\n    totalSales: number;\n    totalVat: number;\n    totalWithholdingtax: number;\n    totalAmountDue: number;\n\n    // Not if BE; for FE only\n    officialReceiptReferencesValue: string;\n\n    setTotalAmounts(totals: TotalAmountsModel){\n        this.totalSales = totals.totalSales;\n        this.totalAmountDue = totals.totalAmountDue;\n        this.totalVat = totals.totalVat;\n        this.totalWithholdingtax = totals.totalWithholdingtax;\n    }\n}","import { TypeOfExecution } from './type-of-execution.model';\nimport { TypeOfMedium } from './type-of-medium.model';\n\nexport class MediumExecutionController {\n    id: number;\n    typeOfExecution: TypeOfExecution;\n    typeOfMedium: TypeOfMedium;\n    widthEnable: boolean;\n}\n","export class PromissoryNotePeriod {\n  id: number;\n  noOfDays: number;\n}","\nexport class Dialect {\n    id: number;\n    dialect: string;\n    status: string;\n}\n","import { Affiliation, Company, UserRole } from '@models';\n\nexport class UserAccount {\n    id: number;\n    username: string;\n    password: string;\n    firstName: string;\n    middleName: string;\n    lastName: string;\n    company: Company;\n    membersAffiliationDto: Affiliation;\n    mobileNumber: string;\n    userRole: UserRole;\n    status: string;\n    acceptTerms: boolean;\n    accountType: string;\n    // locked: Boolean;\n    // enabled: Boolean;\n    ascDefault:\tboolean;\n    membersAffiliation:\tAffiliation;\n    scheduledUser:\tboolean;\n    signatureAttachmentReference:\tstring;\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { Affiliation, AscRate, Brand, Category, PaymentType, Product, TypeOfApplication, TypeOfDocument, TypeOfMedium, TypeOfReason } from '@models';\nimport { Announcement } from 'app/core/models/announcement.model';\nimport { AscRateSpecial } from 'app/core/models/asc-rate-special.model';\nimport { BrandPenalties } from 'app/core/models/brand-penalties.model';\nimport { CompanyPenalties } from 'app/core/models/company-penalties.model';\nimport { Dialect } from 'app/core/models/dialect.model';\nimport { EmailNotification } from 'app/core/models/email-notification.model';\nimport { Holiday } from 'app/core/models/holiday.model';\nimport { LoginImage } from 'app/core/models/login-image.model';\nimport { MediumExecutionController } from 'app/core/models/medium-execution-controller.model';\nimport { NumberOfMultipleApplicationAllowed } from 'app/core/models/numberOfMultipleApplicationAllowed.model';\nimport { PromissoryNotePeriod } from 'app/core/models/promissory-note-period.model';\nimport { QrAndBarCodeChecker } from 'app/core/models/qrAndBarCodeChecker.model';\nimport { S1AndS2FormExpirationPeriod } from 'app/core/models/s1-and-s2-form-expiration-period.model';\nimport { ScreenerReviewerPair } from 'app/core/models/screener-reviewer-pair.model';\nimport { TypeOfMainDocument } from 'app/core/models/type-of-main-document.model';\nimport { TypeOfMediumExecution } from 'app/core/models/type-of-medium-execution.model';\nimport { TypeOfRational } from 'app/core/models/type-of-rational.model';\nimport { UploadingDocumentFileSize } from 'app/core/models/uploading-document-file-size-model';\n\n@Component({\n  selector: 'app-form-action-buttons',\n  templateUrl: './form-action-buttons.component.html',\n  styleUrls: ['./form-action-buttons.component.scss']\n})\nexport class FormActionButtonsComponent implements OnInit {\n\n  @Input() isFromModal = false;\n  @Input() showApproveRejectButton = false;\n\n  @Input() childObject: ChildObject;\n  @Input() childForm: FormGroup;\n  @Output() saveFunction: EventEmitter<any> = new EventEmitter();\n  @Output() validateFunction: EventEmitter<any> = new EventEmitter();\n  @Output() updateFunction: EventEmitter<any> = new EventEmitter();\n  @Output() deleteFunction: EventEmitter<any> = new EventEmitter();\n  @Output() cancelFunction: EventEmitter<any> = new EventEmitter();\n  @Output() closeModalFunction: EventEmitter<any> = new EventEmitter();\n  @Output() approveFunction: EventEmitter<any> = new EventEmitter();\n  @Output() rejectFunction: EventEmitter<any> = new EventEmitter();\n\n  @Input() isHideSaveButton = false;\n  @Input() isShowApproveDisapproveButton = false;\n  isHideDeleteButton = false;\n  isHideUpdateButton = false;\n  isShowValidateButton = false;\n\n  constructor() { }\n\n  ngOnInit(): void {\n    // hides the save button if class of childObject is email notification\n    this.isHideSaveButton = this.childObject instanceof EmailNotification\n      || this.childObject instanceof UploadingDocumentFileSize\n      || this.childObject instanceof QrAndBarCodeChecker\n      || this.childObject instanceof NumberOfMultipleApplicationAllowed\n      || this.childObject instanceof AscRateSpecial;\n    this.isHideUpdateButton = this.childObject instanceof LoginImage;\n    this.isHideDeleteButton = this.childObject instanceof Category\n      || this.childObject instanceof Product\n      || this.childObject instanceof Brand\n      || this.childObject instanceof BrandPenalties\n      || this.childObject instanceof CompanyPenalties\n      || this.childObject instanceof Affiliation\n      || this.childObject instanceof TypeOfMedium\n      || this.childObject instanceof TypeOfMediumExecution\n      || this.childObject instanceof MediumExecutionController\n      || this.childObject instanceof TypeOfReason\n      || this.childObject instanceof TypeOfDocument\n      || this.childObject instanceof PaymentType\n      || this.childObject instanceof Holiday\n      || this.childObject instanceof Dialect\n      || this.childObject instanceof ScreenerReviewerPair\n      || this.childObject instanceof EmailNotification\n      || this.childObject instanceof TypeOfMainDocument\n      || this.childObject instanceof Announcement\n      || this.childObject instanceof S1AndS2FormExpirationPeriod\n      || this.childObject instanceof PromissoryNotePeriod\n      || this.childObject instanceof AscRate\n      || this.childObject instanceof TypeOfApplication\n      || this.childObject instanceof TypeOfRational\n      || this.childObject instanceof LoginImage;\n    this.isShowValidateButton = this.childObject instanceof QrAndBarCodeChecker;\n  }\n\n  save() {\n    this.saveFunction.emit(this.childObject);\n  }\n\n  validate() {\n    this.validateFunction.emit(this.childObject);\n  }\n\n  update() {\n    this.updateFunction.emit(this.childObject);\n  }\n\n  delete() {\n    this.deleteFunction.emit(this.childObject);\n  }\n\n  approve() {\n    this.approveFunction.emit();\n  }\n\n  reject() {\n    this.rejectFunction.emit();\n  }\n\n  closeModal() {\n    this.closeModalFunction.emit();\n  }\n\n  resetFormValidator() {\n    this.cancelFunction.emit();\n  }\n\n}\n\ninterface ChildObject {\n  id: number;\n  reason: string;\n  typeOfMedium: string;\n  paymentDescription: string;\n  description: string;\n  fileSize: number;\n  clearingReleaseTime: string;\n  decisionReleaseTime: string;\n  sequenceNo: number;\n  status: string;\n  submissionEndTime: string;\n  submissionStartTime: string;\n}\n","<div class=\"row\">\n  <div class=\"col-md-12\">\n    <button mat-raised-button color=\"primary\" (click)=\"save()\" *ngIf=\"!childObject?.id && !isHideSaveButton\"\n      [disabled]=\"!(childForm.valid)\">\n      <!-- <mat-icon>save</mat-icon> SAVE -->\n      <i class=\"material-icons color__white\">save</i> SAVE\n    </button>\n    <button mat-raised-button color=\"primary\" (click)=\"validate()\" *ngIf=\"!childObject?.id && isShowValidateButton\"\n      [disabled]=\"!(childForm.valid)\">\n      <!-- <mat-icon>save</mat-icon> SAVE -->\n      <i class=\"material-icons color__white\">search</i> VALIDATE\n    </button>\n    <button mat-raised-button color=\"primary\" (click)=\"update()\" *ngIf=\"childObject?.id && !isHideUpdateButton\"\n      [disabled]=\"!(childForm.valid)\">\n      <!-- <mat-icon> </mat-icon>  -->\n      <i class=\"material-icons color__white\">task_alt</i> UPDATE\n    </button>\n    <button mat-raised-button class=\"button-red\" (click)=\"delete()\" *ngIf=\"childObject?.id\" [hidden]=\"!isHideDeleteButton\"\n      [disabled]=\"!(childForm.valid)\">\n      <!-- <mat-icon> </mat-icon>  -->\n      <i class=\"material-icons color__white\">delete</i> DELETE\n    </button>\n    <button mat-raised-button color=\"warn\" (click)=\"resetFormValidator()\"\n      *ngIf=\"(childObject?.id || childObject?.description || childObject?.paymentDescription || childObject?.typeOfMedium || childObject?.reason) && !isFromModal\">\n      <!-- <mat-icon>{{ childObject?.id ? 'cancel' : 'refresh' }}</mat-icon> {{ childObject?.id ? 'CANCEL' : 'RESET' }} -->\n      <i class=\"material-icons color__white\"> {{ childObject?.id ? 'cancel' : 'refresh' }}</i> {{ childObject?.id ? 'CANCEL' : 'RESET' }}\n    </button>\n    <ng-container *ngIf=\"(isFromModal && showApproveRejectButton) || isShowApproveDisapproveButton\">\n      <!-- <ng-container *ngIf=\"showApproveRejectButton\"> -->\n      <button mat-raised-button class=\"button-red\" (click)=\"approve()\">\n        <i class=\"material-icons color__white\">verified</i> APPROVE\n      </button>\n      <button mat-raised-button class=\"button-red\" (click)=\"reject()\">\n        <i class=\"material-icons color__white\">unpublished</i> REJECT\n      </button>\n      <button mat-raised-button class=\"button-red\" (click)=\"closeModal()\" *ngIf=\"isFromModal && showApproveRejectButton\">\n        <i class=\"material-icons color__white\">close</i> CLOSE\n      </button>\n    </ng-container>\n  </div>\n</div>\n","export class LoginImage {\n    id: number;\n    file: File;\n    filename: String;\n    fileExtension: String;\n    fileURL: String;\n    documentFormat: String;\n    displayed: Boolean;\n    createdDate: Date;\n    createdBy: String;\n    modifiedBy: String;\n    modifiedDate: String;\n    originalFilename: String;\n    secondsTransition: Number;\n}","import { TypeOfExecution } from './type-of-execution.model';\nimport { TypeOfMedium } from './type-of-medium.model';\n\nexport class AscRate {\n    id: number;\n    lengthFrom: number;\n    lengthTo: number;\n    memberOffline: number;\n    memberOnline: number;\n    nonMemberOffline: number;\n    nonMemberOnline: number;\n    status: string;\n    typeOfExecution: TypeOfExecution;\n    typeOfMedium: TypeOfMedium;\n}","import { Dialect } from './dialect.model';\nimport { MediumExecution } from './medium-execution.model';\n\nexport class ApplicationSingleMedia {\n    id: number;\n    amount: number;\n    appFormReference: string;\n    dialect: Dialect;\n    language: string;\n    others: string;\n    sizeLength: string;\n    mediumExecution: MediumExecution;\n    width: string;\n\n}\n","export class TypeOfMediumExecution {\n    id: number;\n    status: string;\n    typeOfExecution: string;\n    applyForS2: boolean;\n}\n","import { Company } from '@models'\nimport { Affiliation } from './affiliation.model';\nimport { ApplicationType } from './application-type.model'\nimport { Brand } from './brand.model'\nimport { Category } from './category.model';\nimport { Product } from './product.model';\nimport { S1Application } from './s1-application.model';\nimport { UserAccount } from './user-account.model'\n\nexport class ApplicationRequest {\n    id: number;\n    adTitle: string;\n    applicationOwner: UserAccount;\n    applicationType: ApplicationType;\n    brand: Brand;\n    company: Company;\n    status: string;\n    submissionDate: Date;\n    tagLine: string\n    submitApplicationForm: boolean;\n    formType: string;\n    hasSpecialClearing: boolean;\n    applicationForm: S1Application;\n    product: Product;\n}\n","export class Profile {\n    id: number;\n    name: string;\n}\n","export class UploadingDocumentFileSize {\n    id: number;\n    fileSize: number;\n}","import { S1Application } from './s1-application.model';\nimport { S2Application } from './s2-application.model';\n\nexport class AttachmentDocument {\n    id: number;\n    applicationId: S1Application;\n    applicationS2Id: S2Application;\n    attachmentType: string; // MAIN, SUPPORTIVE, PAYMENT\n    autoSubmit: boolean;\n    brandPenaltyAttachmentReference: string;\n    documentFormat: string;\n    fileExtension: string;\n    fileURL: string;\n    filename: string;\n    mainAttachmentReference: string;\n    supportingAttachmentReference: string;\n    paymentAttachmentReference: string;\n    revisionLetterAttachmentReference: string;\n    finalMaterialAttachmentReference: string;\n    originalFilename: string;\n    status: string;\n    submissionType: string; // ORIGINAL, REVISION, COMPLIANCE, TOA\n    voucherAttachmentReference: string;\n    applicationFormId: string; // for compliance used only\n    applicationForm: string;\n    appFormReference: string;\n    modifiedApprovedS1AttachmentReference: string;\n    fileSize: number\n\n    createdBy: string;\n    createdDate: Date;\n    modifiedBy: string;\n    modifiedDate: Date;\n}\n","export class Announcement {\n  id: number;\n  details: string;\n  noOfView: number;\n  postingDate: Date;\n  status: string;\n  title: string;\n  link: string;\n  counter: number;\n}\n","import { Product } from './product.model';\n\nexport class Category {\n    id: number;\n    description: string;\n    status: string;\n}\n","import { Company } from \"./company.model\";\n\nexport class CompanyPenalties {\n    id: number;\n    penaltyAmount: number;\n    company: Company;\n    penaltyDate: Date;\n}","import { TypeOfDocument } from './type-of-document.model';\nimport { S1Application } from './s1-application.model';\n\nexport class SupportingDocument {\n    id: number;\n    appFormReference: S1Application;\n    typeOfDocument: TypeOfDocument;\n    basedOn: string;\n    variant: string;\n    dateOfLaunch: Date;\n    expiresOn: Date;\n    remarks: string;\n    input: string;\n\n    createdBy: string;\n    createdDate: Date;\n    modifiedBy: string;\n    modifiedDate: Date;\n}\n","export class UserRole {\n    id: number;\n    name: string;\n    status: string;\n}\n","export class PaymentType {\n    id: number;\n    amount: boolean;\n    bankBranch: boolean;\n    bankName: boolean;\n    controlNo: boolean;\n    fundTransferDate: boolean;\n    paymentDescription: string;\n    promisorryDate: boolean;\n    referenceNo: boolean;\n    status: string;\n}\n","export class OrPreparationReference {\n    id: number;\n    reference: string;\n    amount: number;\n}","export class Holiday {\n    id: number;\n    holidayDate: Date;\n    holidayName: string;\n    holidayType: string;\n    status: string;\n  }\n","import { Brand } from \"./brand.model\";\n\nexport class BrandPenalties {\n    id: number;\n    amount: number;\n    brand: Brand;\n    penaltyDate: Date;\n}","export class PerformanceMetrics {\n    id: number;\n    referenceCode: string;\n    appFormReference: string;\n    movement: string;\n    actionBy: string;\n    userRole: string;\n    currentDateTime: Date;\n    previousDateTime: Date;\n    duration: string;\n}\n","import { PaymentType } from \"./payment-type.model\";\n\nexport class PaymentMethod {\n    id: number;\n    paymentType: PaymentType;\n    referenceNo: string;\n    controlNo: string;\n    paymentDate: Date;\n    amount: number;\n    bankName: string\n    bankBranch: string;\n    promisorryDate: Date;\n    ccConfirmationCode: string;\n    checkNo: string;\n}\n","export class QrAndBarCodeChecker {\n    id: number;\n    qrOrBarCode: string;\n}","export * from './affiliation.model';\nexport * from './brand.model';\nexport * from './company.model';\nexport * from './payment-type.model';\nexport * from './profile.model';\nexport * from './s1-application.model';\nexport * from './s2-application.model';\nexport * from './type-of-document.model';\nexport * from './type-of-medium.model';\nexport * from './type-of-reason.model';\nexport * from './user-role.model';\nexport * from './user-account.model';\nexport * from './attachment-document.model';\nexport * from './category.model';\nexport * from './product.model';\nexport * from './type-of-application.model';\nexport * from './asc-rate.model';\nexport * from './payment.model';\nexport * from './country.model';\nexport * from './performance-metrics.model';\nexport * from './or-preparation.model';\nexport * from './or-preparation-reference.model';\nexport * from './supporting-document.model';\nexport * from './application-single-media.model';\nexport * from './application-request.model';\nexport * from './application-multimedia.model';\n","export class Affiliation {\n    id: number;\n    description: string;\n    member: boolean;\n    status: string;\n}\n","import { Category, Product } from '@models';\n\nexport class Brand {\n    id: number;\n    description: string;\n    // product: Product;\n    // category: Category;\n    status: string;\n    penalty: boolean;\n  }\n","import { Affiliation } from './affiliation.model';\nimport { Country } from './country.model';\n\nexport class Company {\n    id: number;\n    companyName: string;\n    companyTelephoneNo: string;\n    companyTin: string;\n    country: Country;\n    status: string;\n    completeAddress: string;\n    voucherApproved: boolean\n    membersAffiliation: Affiliation;\n    delinquent: boolean;\n    contactPersonEmail: string;\n    contactPersonName: string;\n    amountToSettle: number;\n    companyMobileNo: string;\n    companyTelephoneNo2: string;\n}\n","import { TypeOfRational } from \"./type-of-rational.model\";\n\nexport class ApplicationS2RationaleList {\n\n    id: number;\n    typeOfRationale: TypeOfRational;\n\n}","export class S1AndS2FormExpirationPeriod {\n  id: number;\n  s1ExpNoOfYears: number;\n  s2ExpNoOfYears: number;\n}"],"sourceRoot":"webpack:///"}