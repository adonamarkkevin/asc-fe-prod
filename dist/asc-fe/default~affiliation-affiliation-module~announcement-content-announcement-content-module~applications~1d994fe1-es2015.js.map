{"version":3,"sources":["./src/app/modules/fragments/request-for-special-clearing/request-for-special-clearing.component.ts","./src/app/modules/fragments/incomplete-disapproved-rationale/incomplete-disapproved-rationale.component.html","./src/app/core/models/screener-reviewer-pair.model.ts","./src/app/core/models/numberOfMultipleApplicationAllowed.model.ts","./src/app/core/models/type-of-document.model.ts","./src/app/core/models/application-rejection.model.ts","./src/app/core/models/country.model.ts","./src/app/core/models/type-of-main-document.model.ts","./src/app/modules/fragments/reject-disapproved-reason/reject-disapproved-reason.component.ts","./src/app/core/models/rationale-s2.model.ts","./src/app/core/models/type-of-reason.model.ts","./src/app/core/models/rationale.model.ts","./src/app/modules/fragments/fragments.module.ts","./src/app/core/models/type-of-application.model.ts","./src/app/core/models/application-rationale-list.model.ts","./src/app/core/models/s1-application.model.ts","./src/app/modules/fragments/incomplete-disapproved-rationale/incomplete-disapproved-rationale.component.ts","./src/app/modules/fragments/request-for-special-clearing/request-for-special-clearing.component.html","./src/app/core/models/product.model.ts","./src/app/modules/fragments/form-list/form-list.component.ts","./src/app/core/models/type-of-rational.model.ts","./src/app/core/models/email-notification.model.ts","./src/app/modules/fragments/fragments-routing.module.ts","./src/app/modules/fragments/incomplete-disapproved-rationale/incomplete-disapproved-rationale.component.scss","./src/app/core/models/asc-rate-special.model.ts","./src/app/core/models/payment.model.ts","./src/app/core/models/type-of-medium.model.ts","./src/app/core/models/application-multimedia.model.ts","./src/app/core/models/s2-application.model.ts","./src/app/core/models/or-preparation.model.ts","./src/app/core/models/medium-execution-controller.model.ts","./src/app/core/models/promissory-note-period.model.ts","./src/app/core/models/dialect.model.ts","./src/app/core/models/user-account.model.ts","./src/app/modules/fragments/form-action-buttons/form-action-buttons.component.ts","./src/app/core/models/login-image.model.ts","./src/app/modules/fragments/reject-disapproved-reason/reject-disapproved-reason.component.html","./src/app/modules/fragments/form-list/form-list.component.scss","./src/app/core/models/asc-rate.model.ts","./src/app/core/models/application-single-media.model.ts","./src/app/core/models/type-of-medium-execution.model.ts","./src/app/modules/fragments/form-list/form-list.component.html","./src/app/modules/fragments/request-for-special-clearing/request-for-special-clearing.component.scss","./src/app/core/models/application-request.model.ts","./src/app/core/models/profile.model.ts","./src/app/core/models/uploading-document-file-size-model.ts","./src/app/core/models/attachment-document.model.ts","./src/app/core/models/announcement.model.ts","./src/app/modules/fragments/form-action-buttons/form-action-buttons.component.html","./src/app/core/models/category.model.ts","./src/app/core/models/company-penalties.model.ts","./src/app/core/models/supporting-document.model.ts","./src/app/core/models/user-role.model.ts","./src/app/core/models/payment-type.model.ts","./src/app/core/models/or-preparation-reference.model.ts","./src/app/core/models/holiday.model.ts","./src/app/core/models/brand-penalties.model.ts","./src/app/core/models/performance-metrics.model.ts","./src/app/core/models/payment-method.model.ts","./src/app/modules/fragments/reject-disapproved-reason/reject-disapproved-reason.component.scss","./src/app/core/models/qrAndBarCodeChecker.model.ts","./src/app/core/models/index.ts","./src/app/modules/fragments/form-action-buttons/form-action-buttons.component.scss","./src/app/core/models/affiliation.model.ts","./src/app/core/models/brand.model.ts","./src/app/core/models/company.model.ts","./src/app/core/models/application-rationale-list-s2.model.ts","./src/app/core/models/s1-and-s2-form-expiration-period.model.ts"],"names":[],"mappings":"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","file":"default~affiliation-affiliation-module~announcement-content-announcement-content-module~applications~1d994fe1-es2015.js","sourcesContent":["import { i18nMetaToJSDoc } from '@angular/compiler/src/render3/view/i18n/meta';\r\nimport { Component, Inject, OnInit, Optional } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { S1Application, S2Application } from '@models';\r\nimport { ApiService, DataStorageService, SweetAlertService } from '@services';\r\nimport { ENDPOINTS, ERROR_MESSAGES, SUBMISSION_TYPE } from '@shared';\r\nimport { ApplicationRequest } from 'app/core/models/application-request.model';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-request-for-special-clearing',\r\n  templateUrl: './request-for-special-clearing.component.html',\r\n  styleUrls: ['./request-for-special-clearing.component.scss']\r\n})\r\nexport class RequestForSpecialClearingComponent implements OnInit {\r\n\r\n  s1Application = new S1Application();\r\n  s2Application = new S2Application();\r\n  applicationRequest = new ApplicationRequest();\r\n\r\n  currentUser: any;\r\n\r\n  constructor(\r\n    private apiService: ApiService,\r\n    private dataStorage: DataStorageService,\r\n    private sweetAlertService: SweetAlertService,\r\n    private router: Router,\r\n    @Optional() public dialogRef: MatDialogRef<RequestForSpecialClearingComponent>,\r\n    @Optional() @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.applicationRequest = this.data.applicationRequest;\r\n    this.s1Application = this.applicationRequest.applicationForm;\r\n    this.currentUser = this.dataStorage.getUserAccount();\r\n    this.setApplicationRequest();\r\n  }\r\n\r\n\r\n  // static id to select special clearing application type.\r\n  setApplicationRequest(): void {\r\n    this.applicationRequest.hasSpecialClearing = true;\r\n    this.applicationRequest.applicationType = this.s1Application.applicationType;\r\n    this.applicationRequest.adTitle = this.s1Application.adTitle;\r\n    this.applicationRequest.applicationOwner = this.currentUser;\r\n    this.applicationRequest.brand = this.s1Application.brand;\r\n    this.applicationRequest.product = this.s1Application.product;\r\n    // this.applicationRequest.category = this.s1Application.category;\r\n    this.applicationRequest.company = this.s1Application.company;\r\n    this.applicationRequest.formType = this.s1Application.formType;\r\n    // this.applicationRequest.membersAffiliation = this.s1Application.membersAffiliation;\r\n    this.applicationRequest.submitApplicationForm = false;\r\n    this.applicationRequest.tagLine = this.s1Application.tagLine;\r\n    this.applicationRequest.applicationForm = this.s1Application;\r\n  }\r\n\r\n  onApproveOrDisapprove(status = 'APPROVED'): void {\r\n    const displayStatus = status === 'APPROVED' ? 'approve' : 'disapprove';\r\n    Swal.fire({\r\n      text: `Are you sure you want to ${displayStatus} this application?`,\r\n      icon: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Confirm'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        const endpointExtension = status === 'APPROVED' ? '/approve' : '/disapprove';\r\n        // this.s1Application.actionDate = new Date();\r\n        this.s1Application.actionBy = this.currentUser.username;\r\n\r\n        this.apiService.save(`${ENDPOINTS.applicationRequests}${endpointExtension}/${this.applicationRequest.id}`, this.applicationRequest)\r\n          .subscribe(\r\n            (res: any) => {\r\n              this.sweetAlertService.customSuccessMessage(`Application successfully ${status.toLowerCase()}.`);\r\n              this.router.navigate(['asc/page/application/s2/special']);\r\n            }, (err: any) => {\r\n              err.error.message = ERROR_MESSAGES.under_maintenance;\r\n              this.sweetAlertService.error(err);\r\n            }, () => {\r\n              this.dialogRef.close(this.s1Application);\r\n            }\r\n          );\r\n      }\r\n    });\r\n  }\r\n\r\n  submitRequest(): void {\r\n    Swal.fire({\r\n      text: 'Are you sure you want to submit request?',\r\n      icon: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Confirm'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.apiService.save(ENDPOINTS.applicationRequests, this.applicationRequest).subscribe(\r\n          (res: any) => {\r\n            this.sweetAlertService.customSuccessMessage('Request has been submit successfully.');\r\n            this.router.navigate(['asc/page/application/s2/special']);\r\n            this.dialogRef.close();\r\n          }, (err: any) => {\r\n            err.error.message = ERROR_MESSAGES.under_maintenance;\r\n            this.sweetAlertService.error(err);\r\n          });\r\n        this.dialogRef.close();\r\n      }\r\n\r\n    });\r\n\r\n  }\r\n\r\n  proceedToS2() {\r\n    Swal.fire({\r\n      text: 'Are you sure you want to apply this application to S2?',\r\n      icon: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Confirm'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.s2Application.specialClearing = true;\r\n        this.s2Application.applicationRequest = this.applicationRequest;\r\n        this.s2Application.applicationForm = this.s1Application;\r\n        this.s2Application.submissionType = SUBMISSION_TYPE.ORIGINAL; // this.s2Application.applicationForm.submissionType;\r\n        this.s2Application.internalStatus = 'SAVED';\r\n        this.s2Application.externalStatus = 'SAVED';\r\n        console.log('View S2:', this.s2Application);\r\n        this.apiService.save(ENDPOINTS.s2ApplicationFormPresentorSave, this.s2Application).subscribe(\r\n          (res: any) => {\r\n            this.router.navigate(['asc/page/application/s2/update', res.responseData.data.id]);\r\n            this.dialogRef.close();\r\n          }, (err: any) => {\r\n          })\r\n      }\r\n    })\r\n  }\r\n\r\n}\r\n","export default \"<div class=\\\"container-fluid\\\">\\r\\n    <h1><span class=\\\"material-icons\\\" >info</span> Add Rationale</h1>\\r\\n    <hr>\\r\\n    <div class=\\\"row\\\">\\r\\n        <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n            <mat-label>Select Rationale:</mat-label>\\r\\n                <mat-select class=\\\"mat-select-value-text\\\" (selectionChange)=\\\"selectRationale($event.value)\\\">\\r\\n                    <mat-option *ngFor=\\\"let i of rationaleList\\\" [value]=\\\"i\\\" [matTooltip]=\\\"i.rationale\\\">\\r\\n                        {{i.rationale}}\\r\\n                    </mat-option>\\r\\n                </mat-select>\\r\\n        </mat-form-field>\\r\\n\\r\\n        <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n            <mat-label>OTHER, PLEASE SPECIFY:</mat-label>\\r\\n            <textarea matInput [(ngModel)]=\\\"otherDescription\\\"></textarea>\\r\\n        </mat-form-field>\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row \\\">\\r\\n        <th >Selected Rationale:</th>\\r\\n        <div class=\\\"col list-content\\\" >\\r\\n\\r\\n            <table *ngFor=\\\"let i of selectedRationaleList\\\">\\r\\n                <tr>\\r\\n                    <td class=\\\"reason-description\\\">\\r\\n                        <span class=\\\"material-icons\\\" >label_important</span>  {{i?.typeOfRationale?.rationale}}\\r\\n                    </td>\\r\\n                    <td>\\r\\n                        <span class=\\\"material-icons\\\" (click)=\\\"removeRationale(i.id)\\\">delete</span>\\r\\n                    </td>\\r\\n                </tr>\\r\\n            </table>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row button-content\\\">\\r\\n        <div class=\\\"col\\\">\\r\\n            <button mat-raised-button class=\\\"button-red\\\" (click)=\\\"submitRationale()\\\" [disabled]=\\\"selectedRationaleList.length === 0 && !otherDescription\\\">\\r\\n                <i class=\\\"material-icons color__white\\\">verified</i> Submit Rationale\\r\\n            </button>\\r\\n        </div>\\r\\n        <div class=\\\"col\\\">\\r\\n            <button class=\\\"col-md-6\\\" mat-raised-button class=\\\"button-red\\\" (click)=\\\"cancel()\\\">\\r\\n                <i class=\\\"material-icons color__white\\\">cancel</i> Cancel\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</div>\\r\\n\";","import { UserAccount } from './user-account.model';\r\n\r\nexport class ScreenerReviewerPair {\r\n    id: number;\r\n    screener: UserAccount;\r\n    reviewer: UserAccount;\r\n  }\r\n","export class NumberOfMultipleApplicationAllowed{\r\n    id: number;\r\n    minimum: String;\r\n    maximum: String;\r\n}","export class TypeOfDocument {\r\n    id: number;\r\n    description: string;\r\n    remarksEnable: boolean;\r\n    basedOnEnable: boolean;\r\n    variantEnable: boolean;\r\n    dateOfLaunchEnable: boolean;\r\n    expiresOnEnable: boolean;\r\n    inputEnable: boolean;\r\n    status: string;\r\n}\r\n","import { S1Application } from \"./s1-application.model\";\r\nimport { S2Application } from \"./s2-application.model\";\r\nimport { TypeOfReason } from \"./type-of-reason.model\";\r\nimport { UserAccount } from \"./user-account.model\";\r\n\r\nexport class ApplicationRejection {\r\n    id: number;\r\n    applicationForm: S1Application;\r\n    applicationS2: S2Application;\r\n    actionDate: Date;\r\n    actionBy: UserAccount;\r\n    typeOfReason: TypeOfReason = new TypeOfReason();\r\n    remarks: string;\r\n}","export class Country {\r\n  id: number;\r\n  code: string;\r\n  name: string;\r\n}","export class TypeOfMainDocument {\r\n    id: number;\r\n    status: string;\r\n    typeOfMainDocument: string;\r\n}","import { Component, ElementRef, Inject, OnInit, Type, ViewChild } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { S1Application, S2Application, TypeOfReason } from '@models';\r\nimport { ApiService, DataStorageService, SweetAlertService } from '@services';\r\nimport { APPLICATION_STATUS, APPLICATION_STATUS_S2, APP_DECISION_STATUS, COMMON_FUNCTION, ENDPOINTS, SUBMISSION_TYPE } from '@shared';\r\nimport { ApplicationRejection } from 'app/core/models/application-rejection.model';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-reject-disapproved-reason',\r\n  templateUrl: './reject-disapproved-reason.component.html',\r\n  styleUrls: ['./reject-disapproved-reason.component.scss']\r\n})\r\nexport class RejectDisapprovedReasonComponent implements OnInit {\r\n\r\n  @ViewChild('selectReason')\r\n  mySelectReason: ElementRef;\r\n  s1Application = new S1Application();\r\n  s2Application = new S2Application();\r\n  applicationRejection = new ApplicationRejection();\r\n  typeOfReason = new TypeOfReason();\r\n  applicationRejectionList: Array<ApplicationRejection> = [];\r\n  typeOfReasonList = [];\r\n  selectedReasonList = [];\r\n  errMsg: any;\r\n\r\n  headerTitle;\r\n  ascUser;\r\n  action;\r\n  status;\r\n  currentUser: any;\r\n\r\n  remarks: string;\r\n\r\n\r\n  constructor(\r\n    private apiService: ApiService,\r\n    private sweetAlertService: SweetAlertService,\r\n    private router: Router,\r\n    private dataStorage: DataStorageService,\r\n    private spinner: NgxSpinnerService,\r\n    public dialogRef: MatDialogRef<RejectDisapprovedReasonComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getTypeOfReasonsList();\r\n\r\n    this.s1Application = this.data.s1Application;\r\n    this.s2Application = this.data.s2Application;\r\n    this.ascUser = this.data.ascUser;\r\n    this.action = this.data.action;\r\n    this.status = this.data.status;\r\n    this.headerTitle = this.action;\r\n    this.currentUser = this.dataStorage.getUserAccount();\r\n  }\r\n\r\n  getTypeOfReasonsList(): void {\r\n    this.apiService.findAll(ENDPOINTS.typeOfReason).subscribe(\r\n      (res: any) => {\r\n        this.typeOfReasonList = res.responseData.data;\r\n        console.log('reasons => ', this.typeOfReasonList)\r\n      }\r\n    )\r\n  }\r\n\r\n  setRejectionData(): void {\r\n    let endpoint\r\n    if (this.data.applicationStage === 's1') {\r\n      this.applicationRejection.applicationForm = this.s1Application;\r\n      endpoint = ENDPOINTS.s1ReasonOfRejection;\r\n    } else {\r\n      this.applicationRejection.applicationS2 = this.s2Application;\r\n      endpoint = ENDPOINTS.s2ReasonOfRejection;\r\n    }\r\n    this.applicationRejection.actionBy = this.currentUser;\r\n    this.applicationRejection.actionDate = new Date();\r\n    this.applicationRejection.typeOfReason = this.typeOfReason;\r\n    this.applicationRejectionList.push(this.applicationRejection);\r\n    this.applicationRejection = new ApplicationRejection();\r\n  }\r\n\r\n  selectedReason(data) {\r\n    const isExist = this.selectedReasonList.filter(reason => reason.id === data.id);\r\n\r\n    if (isExist.length === 0) {\r\n      this.selectedReasonList.push(data);\r\n      this.typeOfReason = data;\r\n      this.setRejectionData();\r\n      this.errMsg = '';\r\n    } else {\r\n      this.errMsg = 'The selected reason is already added.';\r\n    }\r\n    this.mySelectReason.nativeElement = '';\r\n    \r\n  }\r\n\r\n  checkOthersReason(): boolean{\r\n    return this.selectedReasonList.filter(e=> e.id ===4).length? true : false;\r\n  }\r\n\r\n  removeReason(id) {\r\n    const index: number = this.selectedReasonList.findIndex(srl => srl.id === id);\r\n    this.selectedReasonList.splice(index, 1);\r\n  }\r\n\r\n  cancel(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  submitRejectionDisapproved(): void {\r\n    // console.log('PARAMETER', this.ascUser, this.action, this.status);\r\n\r\n    let msg;\r\n    let endpointReason;\r\n    let endpointReject;\r\n    let swalMsg = 'Application has been rejected/disapproved successfully.';\r\n    let applicationForm: any;\r\n    let navigateToList;\r\n\r\n    if (this.status === APPLICATION_STATUS.S1_APPLICATION_REJECTED || this.status === APPLICATION_STATUS_S2.S2_APPLICATION_REJECTED) {\r\n      msg = COMMON_FUNCTION.REJECT;\r\n      swalMsg = 'Application has been rejected successfully.';\r\n    } else if (this.status === APPLICATION_STATUS.S1_APPLICATION_DISAPPROVED ||\r\n      this.status === APPLICATION_STATUS_S2.S2_APPLICATION_DISAPPROVED) {\r\n      msg = COMMON_FUNCTION.DISAPPROVED;\r\n      swalMsg = 'Application has been disapproved.';\r\n    }\r\n\r\n    Swal.fire({\r\n      text: 'Are you sure you want to ' + msg + ' this application?',\r\n      icon: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Confirm'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.spinner.show();\r\n        if (this.data.applicationStage === 's1') {\r\n          applicationForm = this.s1Application;\r\n          navigateToList = 'asc/page/application/s1/lists';\r\n          endpointReason = ENDPOINTS.s1ReasonOfRejection;\r\n          endpointReject = this.s1Application.submissionType === SUBMISSION_TYPE.ORIGINAL\r\n            ? this.s1Application.decisionStatus === APP_DECISION_STATUS.INCOMPLETE\r\n              ? ENDPOINTS.s1ApplicationFormEncoderRejectCompliance : ENDPOINTS.s1ApplicationFormEncoderReject\r\n            : ENDPOINTS.s1ApplicationFormEncoderRejectRevision;\r\n        } else {\r\n          applicationForm = this.s2Application;\r\n          navigateToList = 'asc/page/application/s2/lists';\r\n          endpointReason = ENDPOINTS.s2ReasonOfRejection;\r\n          endpointReject = ENDPOINTS.s2ApplicationFormEncoderReject;\r\n        }\r\n        console.info('apllicationRejectionList => ', this.applicationRejectionList)\r\n        // this.spinner.hide();\r\n        this.applicationRejectionList.filter( e=>{\r\n          if(e.typeOfReason.id === 4){\r\n            e.remarks = this.remarks\r\n          }\r\n        });\r\n        this.apiService.save(endpointReason, this.applicationRejectionList).subscribe(\r\n          (res: any) => {\r\n            this.apiService.save(endpointReject, applicationForm).subscribe(\r\n              (res1: any) => {\r\n                this.s1Application = res1.responseData.data;\r\n                // Forward Multiple Application\r\n                if (this.s1Application.submissionType === SUBMISSION_TYPE.ORIGINAL &&\r\n                  this.data.applicationStage === 's1' && this.s1Application.multipleApplication &&\r\n                  this.s1Application.multipleApplication.actualNumberOfApplicationForm ===\r\n                  this.s1Application.multipleApplication.countVerifiedApplicationForm &&\r\n                  this.s1Application.internalStatus !== APPLICATION_STATUS.S1_APPLICATION_REVIEWED) {\r\n                  this.forwardMultipleAppsTo();\r\n                } else {\r\n                  this.spinner.hide();\r\n                  this.sweetAlertService.customSuccessMessage(swalMsg);\r\n                  this.dialogRef.close();\r\n                  this.router.navigateByUrl(navigateToList);\r\n                }\r\n              })\r\n          })\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n  forwardMultipleAppsTo() {\r\n    console.log('forwardMultipleAppsTo');\r\n    console.log(this.s1Application);\r\n    this.s1Application.multipleApplication.assignedEncoder = this.s1Application.assignedEncoder;\r\n    this.apiService.save(ENDPOINTS.forwardMultipleAppFormToAdSpe, this.s1Application.multipleApplication).subscribe(\r\n      (res: any) => {\r\n        console.log(res);\r\n        this.spinner.hide();\r\n        this.sweetAlertService.customSuccessMessage('Multiple application successfully forwarded to the next user.');\r\n        this.dialogRef.close();\r\n        this.router.navigateByUrl('asc/page/application/s1/lists');\r\n      }, (err: any) => {\r\n        this.spinner.hide();\r\n        this.sweetAlertService.error(err);\r\n      }, () => {\r\n        this.spinner.hide();\r\n      })\r\n  }\r\n\r\n\r\n}\r\n","import { ApplicationS2RationaleList } from \"./application-rationale-list-s2.model\";\r\nimport { ApplicationRationaleList } from \"./application-rationale-list.model\";\r\nimport { S2Application } from \"./s2-application.model\";\r\nimport { UserAccount } from \"./user-account.model\";\r\n\r\nexport class RationaleS2 {\r\n    id: number;\r\n    applicationFormS2: S2Application;\r\n    applicationRationaleLists: ApplicationRationaleList[];\r\n    others: string;\r\n    actionBy: UserAccount;\r\n    actionDate: Date;\r\n}\r\n","export class TypeOfReason {\r\n    id: number;\r\n    reason: string;\r\n    status: string;\r\n}\r\n","import { ApplicationRationaleList } from \"./application-rationale-list.model\";\r\nimport { S1Application } from \"./s1-application.model\";\r\nimport { S2Application } from \"./s2-application.model\";\r\nimport { UserAccount } from \"./user-account.model\";\r\n\r\nexport class Rationale {\r\n    id: number;\r\n    applicationForm: S1Application;\r\n    applicationFormS2: S2Application;\r\n    applicationRationaleLists: ApplicationRationaleList[];\r\n    others: string;\r\n    actionBy: UserAccount;\r\n    actionDate: Date;\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { FormActionButtonsComponent } from './form-action-buttons/form-action-buttons.component';\r\nimport { FormListComponent } from './form-list/form-list.component';\r\nimport { AngularMaterialModule } from '@shared';\r\nimport { FragmentsRoutingModule } from './fragments-routing.module';\r\nimport { RejectDisapprovedReasonComponent } from './reject-disapproved-reason/reject-disapproved-reason.component';\r\nimport { RequestForSpecialClearingComponent } from './request-for-special-clearing/request-for-special-clearing.component';\r\nimport { IncompleteDisapprovedRationaleComponent } from './incomplete-disapproved-rationale/incomplete-disapproved-rationale.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    FormActionButtonsComponent,\r\n    FormListComponent,\r\n    RejectDisapprovedReasonComponent,\r\n    RequestForSpecialClearingComponent,\r\n    IncompleteDisapprovedRationaleComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FragmentsRoutingModule,\r\n    AngularMaterialModule,\r\n  ],\r\n  exports: [\r\n    FormActionButtonsComponent,\r\n    FormListComponent\r\n  ]\r\n})\r\nexport class FragmentsModule { }\r\n","export class TypeOfApplication {\r\n    id: number;\r\n    description: string;\r\n    clearingReleaseTime: String\r\n    decisionReleaseTime: String\r\n    sequenceNo: number;\r\n    status: String\r\n    submissionEndTime: String;\r\n    submissionStartTime: String\r\n}","import { TypeOfRational } from \"./type-of-rational.model\";\r\n\r\nexport class ApplicationRationaleList {\r\n\r\n    id: number;\r\n    typeOfRationale: TypeOfRational;\r\n\r\n}","import { Company } from './company.model';\r\nimport { Brand } from './brand.model';\r\nimport { ApplicationType } from './application-type.model';\r\nimport { UserAccount } from './user-account.model';\r\nimport { MultipleApplication } from './multiple-application.model';\r\nimport { Affiliation } from './affiliation.model';\r\nimport { ApplicationRequest } from './application-request.model';\r\nimport { Product } from './product.model';\r\nimport { TypeOfMedium } from './type-of-medium.model';\r\n\r\nexport class S1Application {\r\n    id: number;\r\n    company: Company;\r\n    brand: Brand;\r\n    adTitle: string;\r\n    referenceCode: string;\r\n\r\n    tagLine: string;\r\n    materialInformation: string;\r\n    externalStatus: string\r\n    internalStatus: string\r\n    revisionNo: number;\r\n\r\n    actionBy: UserAccount;\r\n    actionStatus: string; // ASSIGN_TO_ADSPE, ASSIGN_TO_REVIEWER, ASSIGN_TO_SCREENER\r\n    formStatus: string; // OPEN, LOCKED\r\n    submissionType: string // ORIGINAL, REVISION, COMPLIANCE\r\n    applicationType: ApplicationType;\r\n\r\n    formType: string; // INDIVIDUAL, MULTIPLE\r\n    autoSubmit: boolean;\r\n    submissionDate: Date;\r\n    sequenceOrder: number;\r\n    countSeries: number;\r\n\r\n    refTypeOfMedium: string;\r\n    assignedUser: UserAccount;\r\n    applicationOwner: UserAccount;\r\n    multipleApplication: MultipleApplication;\r\n    appFormReference: string;\r\n\r\n    mainAttachmentReference: string;\r\n    supportingAttachmentReference: string;\r\n    paymentAttachmentReference: string;\r\n    membersAffiliation: Affiliation;\r\n    decisionStatus: string;\r\n\r\n    amount: number;\r\n    applicationRequest: ApplicationRequest;\r\n    revisionLetterAttachmentReference: string;\r\n    assignedEncoder: UserAccount;\r\n    assignedAdSpecialist: UserAccount;\r\n\r\n    assignedScreener: UserAccount;\r\n    assignedReviewer: UserAccount;\r\n    verifiedDatetimeByEvaluator: Date;\r\n    sameDayRelease: boolean;\r\n    paidByApplicant: boolean;\r\n\r\n    archived: boolean;\r\n    appliedS2: boolean;\r\n    deliquent: boolean;\r\n    paymentStatus: string;\r\n    applicationDate: Date;\r\n\r\n    validUntil: Date;\r\n    previousRefCode: string;\r\n    hasNoSupportingDocs: boolean;\r\n    referenceCodeRejected: string;\r\n\r\n    hasRevision: boolean;\r\n    product: Product;\r\n    hasOngoingRevision: boolean;\r\n    qrCode: string;\r\n    barCode: string;\r\n    screenerDecisionComment: boolean;\r\n    reviewerDecisionComment: boolean;\r\n    hasOngoingCompliance: boolean;\r\n    releaseStatus: string;\r\n\r\n    complianceForm: boolean; // param need upon request for compliance\r\n    emailSent: boolean;\r\n    forwardToScreener: boolean;\r\n    forwardToReviewer: boolean;\r\n    formProcess: string;\r\n    typeOfMedium: string;\r\n\r\n    stampMaterialFileURL: string;\r\n    stampMaterialFilename: string;\r\n    decisionFormFileURL : string;\r\n    decisionFormFilename: string;\r\n\r\n    hasOngoingAppeal: boolean;\r\n    typeOfAppeal: string;\r\n    appealAttachmentReference: string;\r\n\r\n    hasOfficialReceipt: boolean;\r\n\r\n    // For AppRequest\r\n    status: string;\r\n\r\n    currentAssignee: string;\r\n}\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService, DataStorageService, SweetAlertService } from '@services';\r\nimport { APP_DECISION_STATUS, ENDPOINTS, SUBMISSION_TYPE } from '@shared';\r\nimport { ApplicationS2RationaleList } from 'app/core/models/application-rationale-list-s2.model';\r\nimport { ApplicationRationaleList } from 'app/core/models/application-rationale-list.model';\r\nimport { RationaleS2 } from 'app/core/models/rationale-s2.model';\r\nimport { Rationale } from 'app/core/models/rationale.model';\r\nimport { TypeOfRational } from 'app/core/models/type-of-rational.model';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\n\r\n@Component({\r\n  selector: 'app-incomplete-disapproved-rationale',\r\n  templateUrl: './incomplete-disapproved-rationale.component.html',\r\n  styleUrls: ['./incomplete-disapproved-rationale.component.scss']\r\n})\r\nexport class IncompleteDisapprovedRationaleComponent implements OnInit {\r\n\r\n  rationale = new Rationale();\r\n  rationaleS2 = new RationaleS2();\r\n  typeOfRational = new TypeOfRational();\r\n  applicationRationaleList = new ApplicationRationaleList();\r\n  applicationRationaleListS2 = new ApplicationS2RationaleList();\r\n  rationaleList = [];\r\n  selectedRationaleList = [];\r\n\r\n  submissionType = '';\r\n  isOther = false;\r\n  otherDescription = '';\r\n  currentUser: any;\r\n\r\n  constructor(\r\n    private apiService: ApiService,\r\n    private sweetAlertService: SweetAlertService,\r\n    private router: Router,\r\n    private dataStorage: DataStorageService,\r\n    private spinner: NgxSpinnerService,\r\n    public dialogRef: MatDialogRef<IncompleteDisapprovedRationaleComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {\r\n\r\n    if (data.applicationStage === 's1') {\r\n      this.submissionType = data.s1Application.submissionType;\r\n    } else {\r\n      this.submissionType = data.s2Application.submissionType;\r\n    }\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getRationale();\r\n    this.currentUser = this.dataStorage.getUserAccount();\r\n    console.log('ksahkjakj', this.data);\r\n\r\n  }\r\n\r\n\r\n\r\n  getRationale(): void {\r\n    let endpoint\r\n    let submissionTypeForm\r\n\r\n    if (this.data.applicationStage === 's1') {\r\n      submissionTypeForm = this.data.s1Application.submissionType;\r\n      this.rationale.applicationForm = this.data.s1Application;\r\n    } else {\r\n      submissionTypeForm = this.data.s2Application.submissionType;\r\n      this.rationale.applicationFormS2 = this.data.s2Application;\r\n    }\r\n\r\n    if (submissionTypeForm === SUBMISSION_TYPE.ORIGINAL) {\r\n      endpoint = ENDPOINTS.typeOfRationale;\r\n    } else if (submissionTypeForm === SUBMISSION_TYPE.REVISION) {\r\n      endpoint = ENDPOINTS.typeOfRationale + '/category/FOR_COMPLIANCE';\r\n    } else if (submissionTypeForm === SUBMISSION_TYPE.COMPLIANCE ||\r\n      this.data.s1Application.decisionStatus === APP_DECISION_STATUS.INCOMPLETE) {\r\n      endpoint = ENDPOINTS.typeOfRationale + '/category/FOR_INCOMPLETE_DECISION';\r\n    } else if (this.data.s1Application.hasToa) {\r\n      endpoint = ENDPOINTS.typeOfRationale + '/category/FOR_TOA_APPLICATION';\r\n    }\r\n\r\n    this.apiService.findAll(endpoint).subscribe(\r\n      (res: any) => {\r\n        this.rationaleList = res.responseData.data;\r\n        console.log(this.rationaleList);\r\n      }\r\n    )\r\n  }\r\n\r\n  selectRationale(data): void {\r\n    let list = [];\r\n    if (this.data.applicationStage === 's1') {\r\n      this.applicationRationaleList.typeOfRationale = data;\r\n      this.selectedRationaleList.push(this.applicationRationaleList);\r\n      this.applicationRationaleList = new ApplicationRationaleList();\r\n    } else {\r\n      this.applicationRationaleList.typeOfRationale = data;\r\n      this.selectedRationaleList.push(this.applicationRationaleList);\r\n      this.applicationRationaleList = new ApplicationRationaleList();\r\n    }\r\n    console.log(this.selectedRationaleList);\r\n\r\n\r\n\r\n\r\n  }\r\n\r\n  removeRationale(id) {\r\n    const index: number = this.selectedRationaleList.findIndex(srl => srl.id === id);\r\n    this.selectedRationaleList.splice(index, 1);\r\n  }\r\n\r\n  submitRationale(): void {\r\n    let endpoint;\r\n    let swalMessage;\r\n    let activeModel;\r\n\r\n    this.spinner.show();\r\n\r\n    if (this.data.applicationStage === 's1') {\r\n      endpoint = ENDPOINTS.applicationRationale;\r\n      swalMessage = 'S1 application rationale has been saved!'\r\n    } else {\r\n      endpoint = ENDPOINTS.applicationRationaleS2;\r\n      swalMessage = 'S2 application rationale has been saved!';\r\n      this.rationale.id = 0;\r\n    }\r\n\r\n    this.rationale.applicationRationaleLists = this.selectedRationaleList;\r\n    this.rationale.actionDate = new Date();\r\n    this.rationale.actionBy = this.currentUser;\r\n    this.rationale.others = this.otherDescription;\r\n\r\n\r\n    console.log('save rationale', this.rationale);\r\n\r\n    this.apiService.save(endpoint, this.rationale).subscribe(\r\n      (res: any) => {\r\n        this.spinner.hide();\r\n        this.sweetAlertService.customSuccessMessage(swalMessage);\r\n        this.dialogRef.close(res);\r\n      }, (err: any) => {\r\n        console.log(err);\r\n      }\r\n    )\r\n  }\r\n\r\n  cancel(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","export default \"<form>\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n\\r\\n      <div class=\\\"row title\\\">\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n          <table>\\r\\n            <tr>\\r\\n              <td *ngIf=\\\"applicationRequest?.status!=undefined\\\">\\r\\n                <span>\\r\\n                  Status:\\r\\n                </span>\\r\\n              </td>\\r\\n              <td *ngIf=\\\"applicationRequest?.status!=undefined\\\">\\r\\n                <span *ngIf=\\\"applicationRequest?.status!=undefined\\\">\\r\\n                  <b>{{applicationRequest?.status?.replaceAll('_',' ') | uppercase}}</b>\\r\\n                </span>\\r\\n              </td>\\r\\n              <td class=\\\"no-border\\\" *ngIf=\\\"applicationRequest?.status==='APPROVED' && currentUser?.userRole?.name == 'ROLE_APPLICANT'\\\"\\r\\n              [hidden]=\\\"applicationRequest?.submitApplicationForm\\\">\\r\\n              <button class=\\\"button-right button-red\\\" mat-raised-button (click)=\\\"proceedToS2()\\\">\\r\\n                <i class=\\\"material-icons color__white\\\">check</i> Proceed to S2\\r\\n              </button>\\r\\n              </td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n              <td class=\\\"no-border\\\"></td>\\r\\n            </tr>\\r\\n          </table>\\r\\n          <hr />\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-2\\\" appearance=\\\"outline\\\">\\r\\n          <mat-label>Form Type: </mat-label>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-4\\\" appearance=\\\"outline\\\">\\r\\n          <mat-label><b>{{ s1Application?.formType.replaceAll('_', ' ') }}</b></mat-label>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md-2\\\" appearance=\\\"outline\\\">\\r\\n          <mat-label>Application Type:</mat-label>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-4\\\" appearance=\\\"outline\\\">\\r\\n          <mat-label><b>{{ s1Application?.applicationType?.description.replaceAll('_', ' ') | uppercase }}</b></mat-label>\\r\\n        </div>\\r\\n        <br>\\r\\n        <br>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n        <mat-panel-title>\\r\\n          <i class=\\\"material-icons color__white\\\">label_important</i> &nbsp;Client Information\\r\\n        </mat-panel-title><br />\\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n            <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\">\\r\\n              <mat-label>Company Name</mat-label>\\r\\n              <input matInput [value]=\\\"s1Application?.company?.companyName\\\" readonly>\\r\\n            </mat-form-field>\\r\\n            <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\">\\r\\n              <mat-label>Company Membership Affiliation</mat-label>\\r\\n              <input matInput [value]=\\\"s1Application?.company?.membersAffiliation?.description\\\" readonly>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n            <mat-form-field class=\\\"col-md-4\\\" appearance=\\\"outline\\\">\\r\\n              <mat-label>Brand</mat-label>\\r\\n              <input matInput [value]=\\\"s1Application?.brand?.description\\\" readonly>\\r\\n            </mat-form-field>\\r\\n            <mat-form-field class=\\\"col-md-4\\\" appearance=\\\"outline\\\">\\r\\n              <mat-label>Product</mat-label>\\r\\n              <input matInput [value]=\\\"s1Application?.product?.description\\\" readonly>\\r\\n            </mat-form-field>\\r\\n            <mat-form-field class=\\\"col-md-4\\\" appearance=\\\"outline\\\">\\r\\n              <mat-label>Category</mat-label>\\r\\n              <input matInput [value]=\\\"s1Application?.product?.category?.description\\\" readonly>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n\\r\\n\\r\\n        <mat-panel-title *ngIf=\\\"currentUser?.userRole?.name === 'ROLE_ADMIN' || currentUser?.userRole?.name === 'ROLE_SUPER_ADMIN'\\\">\\r\\n          <i class=\\\"material-icons color__white\\\">label_important</i> &nbsp;Presentor Information\\r\\n        </mat-panel-title>\\r\\n\\r\\n        <div class=\\\"row\\\" *ngIf=\\\"currentUser?.userRole?.name === 'ROLE_ADMIN' || currentUser?.userRole?.name === 'ROLE_SUPER_ADMIN'\\\">\\r\\n          <!-- <mat-form-field class=\\\"col-md-4\\\" appearance=\\\"outline\\\">\\r\\n            <mat-label>Membership Affiliation</mat-label>\\r\\n            <input matInput [value]=\\\"s1Application?.company?.membersAffiliation?.description\\\" readonly>\\r\\n          </mat-form-field> -->\\r\\n          <mat-form-field class=\\\"col-md-7\\\" appearance=\\\"outline\\\">\\r\\n            <mat-label>Company Name</mat-label>\\r\\n            <input matInput [value]=\\\"s1Application?.company?.companyName\\\" readonly>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"row\\\" *ngIf=\\\"currentUser?.userRole?.name === 'ROLE_ADMIN' || currentUser?.userRole?.name === 'ROLE_SUPER_ADMIN'\\\">\\r\\n          <mat-form-field class=\\\"col-md-11\\\" appearance=\\\"outline\\\">\\r\\n            <mat-label>Address</mat-label>\\r\\n            <input matInput [value]=\\\"s1Application?.company?.completeAddress\\\" readonly>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"row\\\" *ngIf=\\\"currentUser?.userRole?.name === 'ROLE_ADMIN' || currentUser?.userRole?.name === 'ROLE_SUPER_ADMIN'\\\">\\r\\n          <mat-form-field class=\\\"col-md-8\\\" appearance=\\\"outline\\\" *ngIf=\\\"s1Application.id!= null\\\">\\r\\n            <mat-label>Name of Applicant</mat-label>\\r\\n            <input matInput [value]=\\\"s1Application?.applicationOwner?.firstName+' '+s1Application?.applicationOwner?.lastName\\\" readonly>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"row\\\" *ngIf=\\\"currentUser?.userRole?.name === 'ROLE_ADMIN' || currentUser?.userRole?.name === 'ROLE_SUPER_ADMIN'\\\">\\r\\n          <mat-form-field class=\\\"col-md-4\\\" appearance=\\\"outline\\\" *ngIf=\\\"s1Application.id!= null\\\">\\r\\n            <mat-label>Mobile Number</mat-label>\\r\\n            <input matInput [value]=\\\"s1Application?.applicationOwner?.mobileNumber\\\" readonly>\\r\\n          </mat-form-field>\\r\\n          <mat-form-field class=\\\"col-md-3\\\" appearance=\\\"outline\\\" *ngIf=\\\"s1Application.id!= null\\\">\\r\\n            <mat-label>Telephone Number</mat-label>\\r\\n            <input matInput [value]=\\\"s1Application?.company?.companyTelephoneNo\\\" readonly>\\r\\n          </mat-form-field>\\r\\n          <mat-form-field class=\\\"col-md-4\\\" appearance=\\\"outline\\\" *ngIf=\\\"s1Application.id!= null\\\">\\r\\n            <mat-label>Email Address</mat-label>\\r\\n            <input matInput [value]=\\\"s1Application?.applicationOwner?.username\\\" readonly>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n\\r\\n        <mat-panel-title>\\r\\n          <i class=\\\"material-icons color__white\\\">label_important</i> &nbsp;Material Information\\r\\n        </mat-panel-title>\\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n            <mat-form-field class=\\\"col-md-4\\\" appearance=\\\"outline\\\">\\r\\n              <mat-label>Ad Title</mat-label>\\r\\n              <input matInput [value]=\\\"s1Application?.adTitle\\\" readonly />\\r\\n            </mat-form-field>\\r\\n\\r\\n            <!-- <mat-form-field class=\\\"col-md-4\\\" appearance=\\\"outline\\\">\\r\\n              <mat-label>Reference Code</mat-label>\\r\\n              <input matInput [value]=\\\"s1Application?.referenceCode\\\" readonly />\\r\\n            </mat-form-field> -->\\r\\n\\r\\n            <mat-form-field class=\\\"col-md-4\\\" appearance=\\\"outline\\\">\\r\\n              <mat-label>Tag Line</mat-label>\\r\\n              <input matInput [value]=\\\"s1Application?.tagLine\\\" readonly />\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n\\r\\n        <div class=\\\"row\\\"><br /></div>\\r\\n        <hr />\\r\\n        <br />\\r\\n        <div class=\\\"row\\\" *ngIf=\\\"applicationRequest?.status===undefined\\\">\\r\\n            <div>\\r\\n              <button mat-raised-button class=\\\"button-red\\\" (click)=\\\"submitRequest()\\\">\\r\\n                <i class=\\\"material-icons color__white\\\">check</i> Submit\\r\\n              </button>\\r\\n              <button mat-raised-button class=\\\"button-red\\\" (click)=\\\"dialogRef.close()\\\">\\r\\n                <i class=\\\"material-icons color__white\\\">cancel</i> Cancel\\r\\n              </button>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <!-- //////////////////////////////////////// ADMIN //////////////////////////////////////////////////////////// -->\\r\\n        <div class=\\\"row\\\"\\r\\n        *ngIf=\\\"applicationRequest?.status === 'FOR_APPROVAL' && (currentUser?.userRole?.name == 'ROLE_ADMIN'||currentUser?.userRole?.name == 'ROLE_SUPER_ADMIN')\\\"\\r\\n        >\\r\\n        <div mat-dialog-actions>\\r\\n          <div class=\\\"dialog-button-content\\\" align=\\\"end\\\">\\r\\n            <button class=\\\"confirm\\\" (click)=\\\"onApproveOrDisapprove()\\\">\\r\\n              <i class=\\\"material-icons color__white\\\">thumb_up_alt</i> Approve\\r\\n            </button>\\r\\n            <button class=\\\"warn\\\" (click)=\\\"onApproveOrDisapprove('DISAPPROVED')\\\">\\r\\n              <i class=\\\"material-icons color__white\\\">thumb_down_alt</i> Disapprove\\r\\n            </button>\\r\\n          </div>\\r\\n        </div>\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n    </div>\\r\\n  </form>\\r\\n\";","import { Brand } from './brand.model';\r\nimport { Category } from './category.model';\r\n\r\nexport class Product {\r\n    id: number;\r\n    description: string;\r\n    status: string;\r\n    brand: Brand;\r\n    category: Category;\r\n}\r\n","import { SweetAlertService } from './../../../core/services/alert-message/sweet-alert.service';\r\nimport { ENDPOINTS } from '@shared';\r\nimport { ApiService } from './../../../core/services/api.service';\r\nimport { AfterViewInit, Component, EventEmitter, Input, OnInit, Output, TemplateRef, ViewChild } from '@angular/core';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTable, MatTableDataSource } from '@angular/material/table';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\n\r\n@Component({\r\n  selector: 'app-form-list',\r\n  templateUrl: './form-list.component.html',\r\n  styleUrls: ['./form-list.component.scss']\r\n})\r\nexport class FormListComponent implements OnInit, AfterViewInit {\r\n  @ViewChild(MatPaginator, { static: false }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: false }) sort: MatSort;\r\n  @ViewChild(MatTable, { static: false }) table: MatTable<Object>;\r\n  @Input() dataSource: MatTableDataSource<Object>;\r\n  @Input() displayedColumns = '';\r\n  @Output() selectInListFunction: EventEmitter<any> = new EventEmitter();\r\n  @Output() deleteInListFunction: EventEmitter<any> = new EventEmitter();\r\n  @Output() updateListFunction: EventEmitter<any> = new EventEmitter();\r\n  @Output() idForUpdate: number = 0;\r\n  @Output() idForDelete: number = 0;\r\n  @Output() elementObject: any;\r\n  @Output() getVoucherRef: EventEmitter<any> = new EventEmitter();\r\n  @ViewChild('myTemplate') customModal: TemplateRef<any>;\r\n  @ViewChild('signatoryEdit') signatoryEditModal: TemplateRef<any>;\r\n  signatory: any = {};\r\n  signatoryRef: any = {};\r\n\r\n  constructor(public dialog: MatDialog, private api: ApiService, \r\n    private spinner: NgxSpinnerService, private alert: SweetAlertService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    if(this.dataSource){\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    }\r\n  }\r\n\r\n  getObject(id) {\r\n    this.idForUpdate = id;\r\n    this.selectInListFunction.emit();\r\n  }\r\n\r\n  deleteObject(id, obj: any = '') {\r\n    this.idForDelete = id;\r\n    this.elementObject = obj;\r\n    this.deleteInListFunction.emit(obj);\r\n  }\r\n\r\n  openEditModal(id, obj: any) {\r\n    this.signatory = JSON.parse(JSON.stringify(obj));\r\n    this.signatoryRef = obj;\r\n    this.dialog.open(this.signatoryEditModal, {\r\n      disableClose: true,\r\n      width: '350px',\r\n      data: obj\r\n    });\r\n  }\r\n\r\n  updateObject(): void {\r\n    if (this.signatoryRef.id === undefined) {\r\n      let data = this.dataSource.data;\r\n      data.splice(this.dataSource.data.findIndex(r => r === this.signatoryRef), 1, this.signatory);\r\n      this.updateListFunction.emit(data);\r\n    } else {\r\n      this.updateListFunction.emit(this.signatory);\r\n    }\r\n    this.dialog.closeAll();\r\n  }\r\n\r\n  closeModal() {\r\n    this.dialog.closeAll();\r\n  }\r\n  viewHistory(data){\r\n    console.log('data', data);\r\n    // this.spinner.show()\r\n    \r\n\r\n\r\n    this.api.findByParam(ENDPOINTS.voucherAttachment, data?.voucherAttachmentReference).subscribe(res =>{\r\n      if(!res?.responseData?.data?.fileURL) {\r\n        this.alert.customErrorMessage(\"No Available file\")\r\n      }\r\n      \r\n      window.open(res?.responseData?.data?.fileURL);\r\n    }, error =>{\r\n      this.alert.customErrorMessage(\"No Available File\");\r\n    })\r\n    \r\n  }\r\n\r\n\r\n}\r\n","export class TypeOfRational {\r\n\r\nid: number;\r\nrationale: String;\r\nrationaleCategory: String;\r\nstatus:\tString;\r\n\r\n}","export class EmailNotification {\r\n    id: number;\r\n    body: string;\r\n    description: string;\r\n    emailCode: string;\r\n    status: string;\r\n    subject: string;\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class FragmentsRoutingModule { }\r\n","export default \"h1 {\\n  font-size: 20px;\\n  font-weight: 600;\\n}\\nh1 .material-icons {\\n  color: #ad0000;\\n}\\n.list-content {\\n  border: solid 1px #b6b6b6;\\n  border-radius: 5px;\\n  margin: 12px;\\n  min-height: 5em;\\n  max-height: 10em;\\n  overflow: auto;\\n  padding: 10px 10px;\\n}\\n.list-content .material-icons {\\n  color: #a00000;\\n  text-align: end;\\n  font-size: 20px;\\n  vertical-align: middle;\\n}\\n.list-content table {\\n  width: 100%;\\n}\\n.list-content table .reason-description {\\n  text-align: left;\\n}\\n.list-content table td {\\n  text-align: end;\\n}\\n.list-content .material-icons:hover {\\n  cursor: pointer;\\n}\\n.button-content button {\\n  width: 100%;\\n}\\n.errMsg {\\n  color: red;\\n  font-style: italic;\\n}\\n::ng-deep .mat-select-value-text {\\n  word-wrap: break-word;\\n  white-space: normal;\\n}\\n::ng-deep mat-option.mat-option {\\n  overflow-wrap: break-word;\\n  white-space: nowrap;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n}\\n.mat-option-text.mat-option-text {\\n  white-space: normal;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9mcmFnbWVudHMvaW5jb21wbGV0ZS1kaXNhcHByb3ZlZC1yYXRpb25hbGUvaW5jb21wbGV0ZS1kaXNhcHByb3ZlZC1yYXRpb25hbGUuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxlQUFBO0VBQ0EsZ0JBQUE7QUFDSjtBQUFJO0VBQ0ksY0FBQTtBQUVSO0FBR0E7RUFDSSx5QkFBQTtFQUNBLGtCQUFBO0VBQ0EsWUFBQTtFQUNBLGVBQUE7RUFDQSxnQkFBQTtFQUNBLGNBQUE7RUFDQSxrQkFBQTtBQUFKO0FBQ0k7RUFDSSxjQUFBO0VBQ0EsZUFBQTtFQUNBLGVBQUE7RUFDQSxzQkFBQTtBQUNSO0FBRUk7RUFDSSxXQUFBO0FBQVI7QUFDUTtFQUNJLGdCQUFBO0FBQ1o7QUFDUTtFQUNJLGVBQUE7QUFDWjtBQUdJO0VBQ0ksZUFBQTtBQURSO0FBTUk7RUFDSSxXQUFBO0FBSFI7QUFPQTtFQUNFLFVBQUE7RUFDQSxrQkFBQTtBQUpGO0FBT0E7RUFDSSxxQkFBQTtFQUNBLG1CQUFBO0FBSko7QUFRQTtFQU9JLHlCQUFBO0VBRUEsbUJBQUE7RUFDQSxnQkFBQTtFQUNBLHVCQUFBO0FBWko7QUFlRTtFQUNFLG1CQUFBO0FBWkoiLCJmaWxlIjoic3JjL2FwcC9tb2R1bGVzL2ZyYWdtZW50cy9pbmNvbXBsZXRlLWRpc2FwcHJvdmVkLXJhdGlvbmFsZS9pbmNvbXBsZXRlLWRpc2FwcHJvdmVkLXJhdGlvbmFsZS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImgxe1xyXG4gICAgZm9udC1zaXplOiAyMHB4O1xyXG4gICAgZm9udC13ZWlnaHQ6IDYwMDtcclxuICAgIC5tYXRlcmlhbC1pY29uc3tcclxuICAgICAgICBjb2xvcjogcmdiKDE3MywgMCwgMCk7XHJcbiAgICB9XHJcbn1cclxuXHJcblxyXG4ubGlzdC1jb250ZW50e1xyXG4gICAgYm9yZGVyOiBzb2xpZCAxcHggcmdiKDE4MiwgMTgyLCAxODIpO1xyXG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gICAgbWFyZ2luOiAxMnB4O1xyXG4gICAgbWluLWhlaWdodDogNWVtO1xyXG4gICAgbWF4LWhlaWdodDogMTBlbTtcclxuICAgIG92ZXJmbG93OiBhdXRvO1xyXG4gICAgcGFkZGluZzogMTBweCAxMHB4O1xyXG4gICAgLm1hdGVyaWFsLWljb25ze1xyXG4gICAgICAgIGNvbG9yOiByZ2IoMTYwLCAwLCAwKTtcclxuICAgICAgICB0ZXh0LWFsaWduOiBlbmQ7XHJcbiAgICAgICAgZm9udC1zaXplOiAyMHB4O1xyXG4gICAgICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XHJcbiAgICB9XHJcblxyXG4gICAgdGFibGV7XHJcbiAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgLnJlYXNvbi1kZXNjcmlwdGlvbntcclxuICAgICAgICAgICAgdGV4dC1hbGlnbjogbGVmdDtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGR7XHJcbiAgICAgICAgICAgIHRleHQtYWxpZ246IGVuZDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLm1hdGVyaWFsLWljb25zOmhvdmVye1xyXG4gICAgICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgIH1cclxufVxyXG5cclxuLmJ1dHRvbi1jb250ZW50e1xyXG4gICAgYnV0dG9ue1xyXG4gICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgfVxyXG59XHJcblxyXG4uZXJyTXNnIHtcclxuICBjb2xvcjogcmVkO1xyXG4gIGZvbnQtc3R5bGU6IGl0YWxpYztcclxufVxyXG5cclxuOjpuZy1kZWVwIC5tYXQtc2VsZWN0LXZhbHVlLXRleHQge1xyXG4gICAgd29yZC13cmFwOiBicmVhay13b3JkO1xyXG4gICAgd2hpdGUtc3BhY2U6IG5vcm1hbDtcclxuICAgIC8vIGhlaWdodDogNzBweDtcclxufVxyXG5cclxuOjpuZy1kZWVwIG1hdC1vcHRpb24ubWF0LW9wdGlvbiB7XHJcbiAgICAvLyBtYXJnaW46IDByZW0gMDtcclxuICAgIC8vIG92ZXJmbG93OiB2aXNpYmxlO1xyXG4gICAgLy8gbGluZS1oZWlnaHQ6IGluaXRpYWw7XHJcbiAgICAvLyB3b3JkLXdyYXA6IGJyZWFrLXdvcmQ7XHJcbiAgICAvLyB3aGl0ZS1zcGFjZTogcHJlLXdyYXA7XHJcbiAgICAvLyAvLyBtYXJnaW4tYm90dG9tOiA1MHB4O1xyXG4gICAgb3ZlcmZsb3ctd3JhcDogYnJlYWstd29yZDtcclxuICAgIC8vIHdpZHRoOiAxMHJlbTtcclxuICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XHJcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XHJcbiAgfVxyXG4gIFxyXG4gIC5tYXQtb3B0aW9uLXRleHQubWF0LW9wdGlvbi10ZXh0IHtcclxuICAgIHdoaXRlLXNwYWNlOiBub3JtYWw7XHJcbiAgfVxyXG4iXX0= */\";","\r\nexport class AscRateSpecial {\r\n    id: number;\r\n    applicationType: string;\r\n    memberOffline: number;\r\n    memberOnline: number;\r\n    nonMemberOffline: number;\r\n    nonMemberOnline: number;\r\n    status: string;\r\n}\r\n","import { S1Application } from './s1-application.model';\r\nimport { PaymentMethod } from './payment-method.model';\r\nimport { MultipleApplication } from './multiple-application.model';\r\nimport { S2Application } from './s2-application.model';\r\n\r\nexport class Payment {\r\n    id: number;\r\n    amountDue: number;\r\n    amountReceive: number;\r\n    appFormReference: string;\r\n    applicationForm: S1Application;\r\n    basicRate: number;\r\n    discount: number;\r\n    filename: string;\r\n    officialReceiptNo: string;\r\n    paymentAttachmentReference: string;\r\n    paymentDate: Date;\r\n    paymentMethod: PaymentMethod = new PaymentMethod();\r\n    paymentStatus: string; // PAID, UNPAID\r\n    remarks: string;\r\n    status: string;\r\n    vat: number;\r\n    withholdingTax: number;\r\n    amountToSettle: number;\r\n    companyName: string;\r\n    companyId: number;\r\n\r\n    multipleApplication: MultipleApplication;\r\n    filedBirForm: boolean = false;\r\n    applicationFormS2: S2Application;\r\n\r\n    constructor() {\r\n        this.filedBirForm = false;\r\n        this.remarks = '';\r\n    }\r\n}\r\n","import { TypeOfClearance } from './type-of-clearance.model';\r\nimport { TypeOfMainDocument } from './type-of-main-document.model';\r\n\r\nexport class TypeOfMedium {\r\n  description: string;\r\n  executionEnable: boolean;\r\n  id: number;\r\n  languageEnable: boolean;\r\n  lengthEnable: boolean;\r\n  multimedia: boolean;\r\n  multimediaMoving: boolean;\r\n  multimediaStatic: boolean;\r\n  othersEnable: boolean;\r\n  singlemedia: boolean;\r\n  sizeLengthEnable: boolean;\r\n  status: string;\r\n  typeOfMainDocument: TypeOfMainDocument;\r\n  widthEnable: boolean;\r\n  typeOfClearance: TypeOfClearance;\r\n\r\n  // not in BE; for List value\r\n  enabledFields: string;\r\n  sizeLength: string;\r\n}\r\n","import { TypeOfMedium } from './type-of-medium.model';\r\n\r\nexport class ApplicationMultimedia {\r\n    id: number;\r\n    amount: number;\r\n    appFormReference: string;\r\n    mediaType?: string; // STATIC, MOVING\r\n    multimediaSizeLength?: string;\r\n    typeOfMedium?: TypeOfMedium;\r\n}\r\n\r\nexport class ApplicationMultimediaItemsDTO {\r\n    hasSelected: boolean;\r\n    id: number;\r\n    multimediaMovingMedium?: string;\r\n    multimediaStaticMedium?: string;\r\n    sizeLength?: number;\r\n}\r\n\r\nexport class ApplicationMultimediaMovingDTO extends ApplicationMultimedia {\r\n    applicationMultimediaMovingList: ApplicationMultimediaItemsDTO[];\r\n    sizeLength: number;\r\n}\r\n\r\nexport class ApplicationMultimediaStaticDTO extends ApplicationMultimedia {\r\n    applicationMultimediaStaticList: ApplicationMultimediaItemsDTO[];\r\n}\r\n","import { ApplicationRequest } from './application-request.model';\r\nimport { S1Application } from './s1-application.model';\r\nimport { UserAccount } from './user-account.model';\r\n\r\nexport class S2Application {\r\n\r\n    id: number;\r\n    actionBy: string;\r\n    actionStatus: string;\r\n    applicationDate: Date;\r\n    applicationForm: S1Application;\r\n    assignedAdSpecialist: UserAccount;\r\n    assignedEncoder: UserAccount;\r\n    assignedUser: UserAccount;\r\n    complianceDate: Date;\r\n    decisionStatus: string;\r\n    externalStatus: string;\r\n    finalMaterialAttachmentReference: string;\r\n    formStatus: string;\r\n    internalStatus: string;\r\n    issuedDate: Date;\r\n    paymentStatus: string;\r\n    specialClearing: boolean;\r\n    submissionDate: Date;\r\n    validUntil: Date;\r\n    validityDate: Date;\r\n    referenceCodeRejected: string;\r\n    releaseDate: Date;\r\n    hasToa: boolean;\r\n    submissionType: string;\r\n    applicationRequest: ApplicationRequest;\r\n    paymentAttachmentReference: string;\r\n    amount: string;\r\n    appFormReference: string;\r\n    hasOngoingCompliance: boolean;\r\n    formProcess: string;\r\n    complianceForm: boolean; // param need upon request for compliance\r\n    hasOngoingAppeal: boolean;\r\n    typeOfAppeal: string;\r\n    appealAttachmentReference: string;\r\n    clearanceToaFileUrl: string;\r\n    clearanceToaFilename: string;\r\n    releaseStatus: string;\r\n    supportingAttachmentReference: string;\r\n}\r\n","import { TotalAmountsModel } from './totals.model';\r\nimport { TypeOfMedium, OrPreparationReference } from '@models';\r\n\r\nexport class OrPreparation {\r\n    amount: number;\r\n    amountInWords: string;\r\n    businessStyle: string;\r\n    companyAddress: string;\r\n    companyName: string;\r\n    companyTin: string;\r\n    controlNumber: string;\r\n    fullPaymentOf: string;\r\n    id: number;\r\n    officialReceiptDate: Date;\r\n    officialReceiptNo: string;\r\n    officialReceiptReferences: OrPreparationReference[];\r\n    remarks: string;\r\n    status: string;\r\n    typeOfMedium: TypeOfMedium;\r\n    voucherControlNumber: string;\r\n\r\n    //totals\r\n    totalSales: number;\r\n    totalVat: number;\r\n    totalWithholdingtax: number;\r\n    totalAmountDue: number;\r\n\r\n    // Not if BE; for FE only\r\n    officialReceiptReferencesValue: string;\r\n\r\n    setTotalAmounts(totals: TotalAmountsModel){\r\n        this.totalSales = totals.totalSales;\r\n        this.totalAmountDue = totals.totalAmountDue;\r\n        this.totalVat = totals.totalVat;\r\n        this.totalWithholdingtax = totals.totalWithholdingtax;\r\n    }\r\n}","import { TypeOfExecution } from './type-of-execution.model';\r\nimport { TypeOfMedium } from './type-of-medium.model';\r\n\r\nexport class MediumExecutionController {\r\n    id: number;\r\n    typeOfExecution: TypeOfExecution;\r\n    typeOfMedium: TypeOfMedium;\r\n    widthEnable: boolean;\r\n}\r\n","export class PromissoryNotePeriod {\r\n  id: number;\r\n  noOfDays: number;\r\n}","\r\nexport class Dialect {\r\n    id: number;\r\n    dialect: string;\r\n    status: string;\r\n}\r\n","import { Affiliation, Company, UserRole } from '@models';\r\n\r\nexport class UserAccount {\r\n    id: number;\r\n    username: string;\r\n    password: string;\r\n    firstName: string;\r\n    middleName: string;\r\n    lastName: string;\r\n    company: Company;\r\n    membersAffiliationDto: Affiliation;\r\n    mobileNumber: string;\r\n    userRole: UserRole;\r\n    status: string;\r\n    acceptTerms: boolean;\r\n    accountType: string;\r\n    // locked: Boolean;\r\n    // enabled: Boolean;\r\n    ascDefault:\tboolean;\r\n    membersAffiliation:\tAffiliation;\r\n    scheduledUser:\tboolean;\r\n    signatureAttachmentReference:\tstring;\r\n}\r\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { Affiliation, AscRate, Brand, Category, PaymentType, Product, TypeOfApplication, TypeOfDocument, TypeOfMedium, TypeOfReason } from '@models';\r\nimport { Announcement } from 'app/core/models/announcement.model';\r\nimport { AscRateSpecial } from 'app/core/models/asc-rate-special.model';\r\nimport { BrandPenalties } from 'app/core/models/brand-penalties.model';\r\nimport { CompanyPenalties } from 'app/core/models/company-penalties.model';\r\nimport { Dialect } from 'app/core/models/dialect.model';\r\nimport { EmailNotification } from 'app/core/models/email-notification.model';\r\nimport { Holiday } from 'app/core/models/holiday.model';\r\nimport { LoginImage } from 'app/core/models/login-image.model';\r\nimport { MediumExecutionController } from 'app/core/models/medium-execution-controller.model';\r\nimport { NumberOfMultipleApplicationAllowed } from 'app/core/models/numberOfMultipleApplicationAllowed.model';\r\nimport { PromissoryNotePeriod } from 'app/core/models/promissory-note-period.model';\r\nimport { QrAndBarCodeChecker } from 'app/core/models/qrAndBarCodeChecker.model';\r\nimport { S1AndS2FormExpirationPeriod } from 'app/core/models/s1-and-s2-form-expiration-period.model';\r\nimport { ScreenerReviewerPair } from 'app/core/models/screener-reviewer-pair.model';\r\nimport { TypeOfMainDocument } from 'app/core/models/type-of-main-document.model';\r\nimport { TypeOfMediumExecution } from 'app/core/models/type-of-medium-execution.model';\r\nimport { TypeOfRational } from 'app/core/models/type-of-rational.model';\r\nimport { UploadingDocumentFileSize } from 'app/core/models/uploading-document-file-size-model';\r\n\r\n@Component({\r\n  selector: 'app-form-action-buttons',\r\n  templateUrl: './form-action-buttons.component.html',\r\n  styleUrls: ['./form-action-buttons.component.scss']\r\n})\r\nexport class FormActionButtonsComponent implements OnInit {\r\n\r\n  @Input() isFromModal = false;\r\n  @Input() showApproveRejectButton = false;\r\n\r\n  @Input() childObject: ChildObject;\r\n  @Input() childForm: FormGroup;\r\n  @Output() saveFunction: EventEmitter<any> = new EventEmitter();\r\n  @Output() validateFunction: EventEmitter<any> = new EventEmitter();\r\n  @Output() updateFunction: EventEmitter<any> = new EventEmitter();\r\n  @Output() deleteFunction: EventEmitter<any> = new EventEmitter();\r\n  @Output() cancelFunction: EventEmitter<any> = new EventEmitter();\r\n  @Output() closeModalFunction: EventEmitter<any> = new EventEmitter();\r\n  @Output() approveFunction: EventEmitter<any> = new EventEmitter();\r\n  @Output() rejectFunction: EventEmitter<any> = new EventEmitter();\r\n\r\n  @Input() isHideSaveButton = false;\r\n  @Input() isShowApproveDisapproveButton = false;\r\n  isHideDeleteButton = false;\r\n  isHideUpdateButton = false;\r\n  isShowValidateButton = false;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n    // hides the save button if class of childObject is email notification\r\n    this.isHideSaveButton = this.childObject instanceof EmailNotification\r\n      || this.childObject instanceof UploadingDocumentFileSize\r\n      || this.childObject instanceof QrAndBarCodeChecker\r\n      || this.childObject instanceof NumberOfMultipleApplicationAllowed\r\n      || this.childObject instanceof AscRateSpecial;\r\n    this.isHideUpdateButton = this.childObject instanceof LoginImage;\r\n    this.isHideDeleteButton = this.childObject instanceof Category\r\n      || this.childObject instanceof Product\r\n      || this.childObject instanceof Brand\r\n      || this.childObject instanceof BrandPenalties\r\n      || this.childObject instanceof CompanyPenalties\r\n      || this.childObject instanceof Affiliation\r\n      || this.childObject instanceof TypeOfMedium\r\n      || this.childObject instanceof TypeOfMediumExecution\r\n      || this.childObject instanceof MediumExecutionController\r\n      || this.childObject instanceof TypeOfReason\r\n      || this.childObject instanceof TypeOfDocument\r\n      || this.childObject instanceof PaymentType\r\n      || this.childObject instanceof Holiday\r\n      || this.childObject instanceof Dialect\r\n      || this.childObject instanceof ScreenerReviewerPair\r\n      || this.childObject instanceof EmailNotification\r\n      || this.childObject instanceof TypeOfMainDocument\r\n      || this.childObject instanceof Announcement\r\n      || this.childObject instanceof S1AndS2FormExpirationPeriod\r\n      || this.childObject instanceof PromissoryNotePeriod\r\n      || this.childObject instanceof AscRate\r\n      || this.childObject instanceof TypeOfApplication\r\n      || this.childObject instanceof TypeOfRational\r\n      || this.childObject instanceof LoginImage;\r\n    this.isShowValidateButton = this.childObject instanceof QrAndBarCodeChecker;\r\n  }\r\n\r\n  save() {\r\n    this.saveFunction.emit(this.childObject);\r\n  }\r\n\r\n  validate() {\r\n    this.validateFunction.emit(this.childObject);\r\n  }\r\n\r\n  update() {\r\n    this.updateFunction.emit(this.childObject);\r\n  }\r\n\r\n  delete() {\r\n    this.deleteFunction.emit(this.childObject);\r\n  }\r\n\r\n  approve() {\r\n    this.approveFunction.emit();\r\n  }\r\n\r\n  reject() {\r\n    this.rejectFunction.emit();\r\n  }\r\n\r\n  closeModal() {\r\n    this.closeModalFunction.emit();\r\n  }\r\n\r\n  resetFormValidator() {\r\n    this.cancelFunction.emit();\r\n  }\r\n\r\n}\r\n\r\ninterface ChildObject {\r\n  id: number;\r\n  reason: string;\r\n  typeOfMedium: string;\r\n  paymentDescription: string;\r\n  description: string;\r\n  fileSize: number;\r\n  clearingReleaseTime: string;\r\n  decisionReleaseTime: string;\r\n  sequenceNo: number;\r\n  status: string;\r\n  submissionEndTime: string;\r\n  submissionStartTime: string;\r\n}\r\n","export class LoginImage {\r\n    id: number;\r\n    file: File;\r\n    filename: String;\r\n    fileExtension: String;\r\n    fileURL: String;\r\n    documentFormat: String;\r\n    displayed: Boolean;\r\n    createdDate: Date;\r\n    createdBy: String;\r\n    modifiedBy: String;\r\n    modifiedDate: String;\r\n    originalFilename: String;\r\n    secondsTransition: Number;\r\n}","export default \"<div class=\\\"container-fluid\\\">\\r\\n    <h1><span class=\\\"material-icons\\\" >report_problem</span> Reasons for rejection</h1>\\r\\n    <hr>\\r\\n    <div class=\\\"row\\\">\\r\\n      <mat-label *ngIf=\\\"errMsg\\\" class=\\\"errMsg\\\">{{errMsg}}</mat-label>\\r\\n        <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n            <mat-label>Select Reason:</mat-label>\\r\\n                <mat-select #selectReason (selectionChange)=\\\"selectedReason($event.value)\\\">\\r\\n                    <mat-option *ngFor=\\\"let i of typeOfReasonList\\\" [value]=\\\"i\\\">\\r\\n                        {{i.reason}}\\r\\n                    </mat-option>\\r\\n                </mat-select>\\r\\n        </mat-form-field>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row \\\">\\r\\n        <th >Selected Reasons:</th>\\r\\n        <div class=\\\"col list-content\\\" >\\r\\n\\r\\n            <table *ngFor=\\\"let i of selectedReasonList\\\">\\r\\n                <tr>\\r\\n                    <td class=\\\"reason-description\\\">\\r\\n                        <span class=\\\"material-icons\\\" >label_important</span> {{i.reason}}\\r\\n                    </td>\\r\\n                    <td>\\r\\n                        <!-- <button  (click)=\\\"removeReason(i.id)\\\">x</button> -->\\r\\n                        <span class=\\\"material-icons\\\" (click)=\\\"removeReason(i.id)\\\">delete</span>\\r\\n\\r\\n                    </td>\\r\\n                </tr>\\r\\n            </table>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"checkOthersReason()\\\">\\r\\n        <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n            <mat-label>REMARKS</mat-label>\\r\\n            <!-- <textarea matInput [value]=\\\"payment?.remarks\\\" [readonly]=\\\"!isForPayment\\\"></textarea> -->\\r\\n            <textarea matInput name=\\\"remarks\\\" [(ngModel)]=\\\"remarks\\\"\\r\\n              ></textarea>\\r\\n          </mat-form-field>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row button-content\\\">\\r\\n        <div class=\\\"col\\\">\\r\\n\\r\\n            <button mat-raised-button class=\\\"button-red\\\" (click)=\\\"submitRejectionDisapproved()\\\"\\r\\n            [disabled]=\\\"selectedReasonList.length === 0\\\">\\r\\n                <i class=\\\"material-icons color__white\\\">verified</i> Submit Rejection\\r\\n            </button>\\r\\n        </div>\\r\\n        <div class=\\\"col\\\">\\r\\n            <button class=\\\"col-md-6\\\" mat-raised-button class=\\\"button-red\\\" (click)=\\\"cancel()\\\">\\r\\n                <i class=\\\"material-icons color__white\\\">cancel</i> Cancel\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</div>\\r\\n\";","export default \".cancel {\\n  color: gray !important;\\n  text-align: center;\\n}\\n\\nspan {\\n  color: #ad0000;\\n}\\n\\n.action-items {\\n  width: 120px;\\n  text-align: center;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9mcmFnbWVudHMvZm9ybS1saXN0L2Zvcm0tbGlzdC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLHNCQUFBO0VBQ0Esa0JBQUE7QUFDRjs7QUFFQTtFQUNFLGNBQUE7QUFDRjs7QUFFQTtFQUNFLFlBQUE7RUFDQSxrQkFBQTtBQUNGIiwiZmlsZSI6InNyYy9hcHAvbW9kdWxlcy9mcmFnbWVudHMvZm9ybS1saXN0L2Zvcm0tbGlzdC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jYW5jZWx7XHJcbiAgY29sb3I6IGdyYXkgIWltcG9ydGFudDtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbn1cclxuXHJcbnNwYW57XHJcbiAgY29sb3I6IHJnYigxNzMsIDAsIDApO1xyXG59XHJcblxyXG4uYWN0aW9uLWl0ZW1zIHtcclxuICB3aWR0aDogMTIwcHg7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG59XHJcbiJdfQ== */\";","import { TypeOfExecution } from './type-of-execution.model';\r\nimport { TypeOfMedium } from './type-of-medium.model';\r\n\r\nexport class AscRate {\r\n    id: number;\r\n    lengthFrom: number;\r\n    lengthTo: number;\r\n    memberOffline: number;\r\n    memberOnline: number;\r\n    nonMemberOffline: number;\r\n    nonMemberOnline: number;\r\n    status: string;\r\n    typeOfExecution: TypeOfExecution;\r\n    typeOfMedium: TypeOfMedium;\r\n}","import { Dialect } from './dialect.model';\r\nimport { MediumExecution } from './medium-execution.model';\r\n\r\nexport class ApplicationSingleMedia {\r\n    id: number;\r\n    amount: number;\r\n    appFormReference: string;\r\n    dialect: Dialect;\r\n    language: string;\r\n    others: string;\r\n    sizeLength: string;\r\n    mediumExecution: MediumExecution;\r\n    width: string;\r\n\r\n}\r\n","export class TypeOfMediumExecution {\r\n    id: number;\r\n    status: string;\r\n    typeOfExecution: string;\r\n    applyForS2: boolean;\r\n}\r\n","export default \"<div class=\\\"mat-elevation-z8\\\">\\r\\n  <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"emailCode\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Email Code </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getObject(element?.id)\\\"> {{ element?.emailCode }} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"subject\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Subject </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getObject(element?.id)\\\"> {{ element?.subject }} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"category\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Category </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getObject(element?.id)\\\"> {{ element?.category?.description }}\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"typeOfMainDocument\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Type Of Main Document </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getObject(element?.id)\\\"> {{ element?.typeOfMainDocument }} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"typeOfMainDocumentObject\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Type Of Main Document </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getObject(element?.id)\\\"> {{\\r\\n        element?.typeOfMainDocument?.typeOfMainDocument }} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"noOfHours\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Number Of Hours </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getObject(element?.id)\\\"> {{ element?.noOfHours }} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"noOfDays\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Number Of Days </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getObject(element?.id)\\\"> {{ element?.noOfDays }} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"noOfWorkingDays\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Number Of Working Days </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getObject(element?.id)\\\"> {{ element?.noOfWorkingDays }} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"typeOfMedium\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Type of Medium </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getObject(element?.id)\\\"> {{ element?.typeOfMedium }} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"typeOfMediumObj\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Type of Medium </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getObject(element?.id)\\\"> {{ element?.typeOfMedium?.description }}\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"reason\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Reason </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getObject(element?.id)\\\"> {{ element?.reason }} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"description\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Description </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getObject(element?.id)\\\"> {{ element?.description }} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"body\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Body </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getObject(element?.id)\\\">\\r\\n        <div [innerHTML]=\\\"element?.body\\\"></div>\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"dialect\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Dialect </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getObject(element?.id)\\\"> {{ element?.dialect }} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"applicationType\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Application Type </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getObject(element?.id)\\\"> {{ element?.applicationType }} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"lengthFrom\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Length From </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getObject(element?.id)\\\"> {{ element?.lengthFrom }} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"lengthTo\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Length To </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getObject(element?.id)\\\"> {{ element?.lengthTo }} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"memberOffline\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Member Offline </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getObject(element?.id)\\\"> {{ element?.memberOffline }} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"memberOnline\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Member Online </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getObject(element?.id)\\\"> {{ element?.memberOnline }} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"nonMemberOffline\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Non Member Offline </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getObject(element?.id)\\\"> {{ element?.nonMemberOffline }} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"nonMemberOnline\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Non Member Online </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getObject(element?.id)\\\"> {{ element?.nonMemberOnline }} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"screenerName\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Screener Name </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getObject(element?.id)\\\">\\r\\n        {{ element?.screener?.firstName }} {{ element?.screener?.lastName }}\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"reviewerName\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Reviewer Name </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getObject(element?.id)\\\">\\r\\n        {{ element?.reviewer?.firstName }} {{ element?.reviewer?.lastName }}\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"holidayName\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Holiday Name </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getObject(element?.id)\\\"> {{ element?.holidayName }} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"holidayDate\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Holiday Date </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getObject(element?.id)\\\"> {{ element?.holidayDate |\\r\\n        date:'MM/dd/yyyy' }} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"holidayType\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Holiday Type </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getObject(element?.id)\\\"> {{ element?.holidayType?.replaceAll('_','\\r\\n        ') }} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"typeOfExecution\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Type Of Execution </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getObject(element?.id)\\\"> {{ element?.typeOfExecution }} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"typeOfExecutionObj\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Type Of Execution </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getObject(element?.id)\\\"> {{\\r\\n        element?.typeOfExecution?.typeOfExecution }} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"live\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> LIVE </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getObject(element?.id)\\\">\\r\\n        <i *ngIf=\\\"element?.supportingAttachmentReference\\\" class=\\\"material-icons\\\">check_circle</i>\\r\\n        <i *ngIf=\\\"!element?.supportingAttachmentReference\\\" class=\\\"material-icons cancel\\\">cancel</i>\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"landingPage\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Landing Page </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getObject(element?.id)\\\">\\r\\n        <i *ngIf=\\\"element?.supportingAttachmentReference\\\" class=\\\"material-icons\\\">check_circle</i>\\r\\n        <i *ngIf=\\\"!element?.supportingAttachmentReference\\\" class=\\\"material-icons cancel\\\">cancel</i>\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"applyForS2\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Apply for S2 </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getObject(element?.id)\\\">\\r\\n        <i *ngIf=\\\"!element?.live\\\" class=\\\"material-icons\\\">check_circle</i>\\r\\n        <i *ngIf=\\\"element?.live\\\" class=\\\"material-icons cancel\\\">cancel</i>\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"applyForTOA\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Apply for TOA </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getObject(element?.id)\\\">\\r\\n        <i *ngIf=\\\"element?.applyForToa\\\" class=\\\"material-icons\\\">check_circle</i>\\r\\n        <i *ngIf=\\\"!element?.applyForToa\\\" class=\\\"material-icons cancel\\\">cancel</i>\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"paymentDescription\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Payment Description </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getObject(element?.id)\\\"> {{ element?.paymentDescription }} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"categoryDescription\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Category </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getObject(element?.id)\\\"> {{ element?.description }} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"product\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Product </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getObject(element?.id)\\\"> {{ element?.product?.description }} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"productDescription\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Product </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getObject(element?.id)\\\"> {{ element?.description }} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"brand\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Brand </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getObject(element?.id)\\\"> {{ element?.brand?.description }} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"title\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Title </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getObject(element?.id)\\\"> {{ element?.title }} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"details\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Details </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getObject(element?.id)\\\"> {{ element?.details }} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"noOfView\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Number Of Views </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getObject(element?.id)\\\"> {{ element?.noOfView }} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"minimum\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Minimum </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getObject(element?.id)\\\"> {{ element?.minimum }} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"maximum\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Maximum </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getObject(element?.id)\\\"> {{ element?.maximum }} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"postingDate\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Posting Date </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getObject(element?.id)\\\"> {{ element?.postingDate |\\r\\n        date:'MM/dd/yyyy' }} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"s1ExpNoOfYears\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> S1 Expiration No Of Years </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getObject(element?.id)\\\"> {{ element?.s1ExpNoOfYears }} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"s2ExpNoOfYears\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> S2 Expiration No Of Years </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getObject(element?.id)\\\"> {{ element?.s2ExpNoOfYears }} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"referenceCode\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Reference Code </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getObject(element?.id)\\\">\\r\\n        <span *ngIf=\\\"element?.referenceCode\\\">\\r\\n          {{ element?.referenceCode }}\\r\\n        </span>\\r\\n        <span *ngIf=\\\"element?.applicationForm?.referenceCode\\\">\\r\\n          {{ element?.applicationForm?.referenceCode }}\\r\\n        </span>\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"adTitle\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> AD Title </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getObject(element?.id)\\\">\\r\\n        <span *ngIf=\\\"element?.adTitle\\\">\\r\\n          {{ element?.adTitle }}\\r\\n        </span>\\r\\n        <span *ngIf=\\\"element?.applicationForm?.adTitle\\\">\\r\\n          {{ element?.applicationForm?.adTitle }}\\r\\n        </span>\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"assignedAdSpecialist\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> AD Specialist </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getObject(element?.id)\\\">\\r\\n        <span *ngIf=\\\"element?.assignedAdSpecialist\\\">\\r\\n          {{ element?.assignedAdSpecialist?.firstName }} {{ element?.assignedAdSpecialist?.lastName }}\\r\\n        </span>\\r\\n        <!-- <span *ngIf=\\\"element?.applicationForm?.assignedAdSpecialist\\\">\\r\\n         {{element?.applicationForm?.assignedAdSpecialist?.firstName }}  {{ element?.applicationForm?.assignedAdSpecialist?.lastName }}\\r\\n        </span> -->\\r\\n        <span *ngIf=\\\"!element?.assignedAdSpecialist\\\">\\r\\n          N/A\\r\\n        </span>\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"assignedEncoder\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Evaluator </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getObject(element?.id)\\\">\\r\\n        <span *ngIf=\\\"element?.assignedEncoder\\\">\\r\\n          {{ element?.assignedEncoder?.firstName }} {{ element?.assignedEncoder?.lastName }}\\r\\n        </span>\\r\\n        <!-- <span *ngIf=\\\"element?.applicationForm?.assignedEncoder\\\">\\r\\n          {{element?.applicationForm?.assignedEncoder?.firstName }} {{ element?.applicationForm?.assignedEncoder?.lastName }}\\r\\n        </span> -->\\r\\n        <span *ngIf=\\\"!element?.assignedEncoder && !element?.applicationForm?.assignedEncoder\\\">\\r\\n          N/A\\r\\n        </span>\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"assignedReviewer\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Reviewer </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getObject(element?.id)\\\">\\r\\n        <span *ngIf=\\\"element?.assignedReviewer\\\">\\r\\n          {{ element?.assignedReviewer?.firstName }} {{ element?.assignedReviewer?.lastName }}\\r\\n        </span>\\r\\n        <!-- <span *ngIf=\\\"element?.applicationForm?.assignedReviewer\\\">\\r\\n          {{element?.applicationForm?.assignedReviewer?.firstName }} {{ element?.applicationForm?.assignedReviewer?.lastName }}\\r\\n        </span> -->\\r\\n        <span *ngIf=\\\"!element?.assignedReviewer\\\">\\r\\n          N/A\\r\\n        </span>\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"assignedScreener\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Screener </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getObject(element?.id)\\\">\\r\\n        <span *ngIf=\\\"element?.assignedScreener\\\">\\r\\n          {{ element?.assignedScreener?.firstName }} {{ element?.assignedScreener?.lastName }}\\r\\n        </span>\\r\\n        <!-- <span *ngIf=\\\"element?.applicationForm?.assignedScreener\\\">\\r\\n          {{element?.applicationForm?.assignedScreener?.firstName }} {{ element?.applicationForm?.assignedScreener?.lastName }}\\r\\n        </span> -->\\r\\n        <span *ngIf=\\\"!element?.assignedScreener\\\">\\r\\n          N/A\\r\\n        </span>\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"assignedUser\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Current Assigned User </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getObject(element?.id)\\\">\\r\\n        <span *ngIf=\\\"element?.assignedUser\\\">\\r\\n          {{ element?.assignedUser?.firstName }} {{ element?.assignedUser?.lastName }}\\r\\n        </span>\\r\\n        <!-- <span *ngIf=\\\"element?.applicationForm?.assignedUser\\\">\\r\\n          {{ element?.applicationForm?.assignedUser?.firstName }} {{ element?.applicationForm?.assignedUser?.lastName }}\\r\\n        </span> -->\\r\\n        <span *ngIf=\\\"!element?.assignedUser\\\">\\r\\n          N/A\\r\\n        </span>\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"applicationOwner\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Application Owner </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getObject(element?.id)\\\">\\r\\n        <span *ngIf=\\\"element?.applicationOwner\\\">\\r\\n          {{ element?.applicationOwner?.firstName }} {{ element?.applicationOwner?.lastName }}\\r\\n        </span>\\r\\n        <span *ngIf=\\\"element?.applicationForm?.applicationOwner\\\">\\r\\n          {{element?.applicationForm?.applicationOwner?.firstName }}\\r\\n          {{element?.applicationForm?.applicationOwner?.lastName }}\\r\\n        </span>\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"lastModifiedBy\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Last Modified By </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getObject(element?.id)\\\">\\r\\n        {{ element?.modifiedBy ? element?.modifiedBy : element?.createdBy }} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"lastModifiedDate\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Last Modified Date </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getObject(element?.id)\\\">\\r\\n        {{ element?.modifiedDate ? (element?.modifiedDate | date:'MM/dd/yyyy hh:mm a') : (element?.createdDate |\\r\\n        date:'MM/dd/yyyy hh:mm a') }}\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"affiliationDesc\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Member's Affiliation </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getObject(element?.id)\\\">\\r\\n        {{ element?.description }}\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"member\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Member </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getObject(element?.id)\\\">\\r\\n        {{ element?.member ? 'Yes' : 'No' }}\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"brandDesc\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Brand </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getObject(element?.id)\\\">\\r\\n        {{ element?.description }}\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"penalty\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Penalty </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getObject(element?.id)\\\">\\r\\n        {{ element?.penalty ? 'Yes' : 'No' }}\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"typeOfDocumentDesc\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Type of Document </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getObject(element?.id)\\\">\\r\\n        {{ element?.description }}\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"dateOfLaunchEnable\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Has Date Of Launch </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getObject(element?.id)\\\">\\r\\n        {{ element?.dateOfLaunchEnable ? 'Yes' : 'No' }}\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"expiresOnEnable\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Has Expiration Date </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getObject(element?.id)\\\">\\r\\n        {{ element?.expiresOnEnable ? 'Yes' : 'No' }}\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"basedOnEnable\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Has Basis </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getObject(element?.id)\\\">\\r\\n        {{ element?.basedOnEnable ? 'Yes' : 'No' }}\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"variantEnable\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Has Variant </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getObject(element?.id)\\\">\\r\\n        {{ element?.variantEnable ? 'Yes' : 'No' }}\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"remarksEnable\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Has Remarks </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getObject(element?.id)\\\">\\r\\n        {{ element?.remarksEnable ? 'Yes' : 'No' }}\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"inputEnable\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Has Input </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getObject(element?.id)\\\">\\r\\n        {{ element?.inputEnable ? 'Yes' : 'No' }}\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"amount\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Has Amount </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getObject(element?.id)\\\">\\r\\n        {{ element?.amount ? 'Yes' : 'No' }}\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"bankBranch\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Has Bank Branch </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getObject(element?.id)\\\">\\r\\n        {{ element?.bankBranch ? 'Yes' : 'No' }}\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"bankName\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Has Bank Name </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getObject(element?.id)\\\">\\r\\n        {{ element?.bankName ? 'Yes' : 'No' }}\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"controlNo\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Has Control No </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getObject(element?.id)\\\">\\r\\n        {{ element?.controlNo ? 'Yes' : 'No' }}\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"fundTransferDate\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Has Fund Transfer Date </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getObject(element?.id)\\\">\\r\\n        {{ element?.fundTransferDate ? 'Yes' : 'No' }}\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"promisorryDate\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Has Promisorry Date </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getObject(element?.id)\\\">\\r\\n        {{ element?.promisorryDate ? 'Yes' : 'No' }}\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"referenceNo\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Has Reference No </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getObject(element?.id)\\\">\\r\\n        {{ element?.referenceNo ? 'Yes' : 'No' }}\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"enabledFields\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Enabled Fields </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getObject(element?.id)\\\">\\r\\n        {{ element?.enabledFields }}\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"status\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Status </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getObject(element?.id)\\\">\\r\\n        {{ element?.status?.replaceAll('_', ' ') }}\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- FOR BRAND PENALTIES -->\\r\\n    <ng-container matColumnDef=\\\"brandDescription\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Brand </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getObject(element?.id)\\\">\\r\\n        {{ element?.brand?.description }}\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"brandPenaltyAmount\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Amount </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getObject(element?.id)\\\">\\r\\n        {{ element?.amount | number : '1.2-2' }}\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"penaltyDate\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Penalty Date </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getObject(element?.id)\\\">\\r\\n        {{ element?.penaltyDate | date:'fullDate'}}\\r\\n      </td>\\r\\n    </ng-container>\\r\\n    <!-- FOR BRAND PENALTIES -->\\r\\n\\r\\n    <!-- FOR COMPANY PENALTIES -->\\r\\n    <ng-container matColumnDef=\\\"companyDescription\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Company </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getObject(element?.id)\\\"\\r\\n        [ngStyle]=\\\"{'background-color': element?.status === 'ACTIVE' ? 'white' : '#ffbebe' }\\\">\\r\\n        {{ element?.company?.companyName }}\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"companyPenaltyAmount\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Penalty Amount </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getObject(element?.id)\\\">\\r\\n        {{ element?.penaltyAmount | number : '1.2-2' }}\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- FOR UPLOADING FILE SIZE -->\\r\\n    <ng-container matColumnDef=\\\"id\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Document Id </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getObject(element?.id)\\\">\\r\\n        {{ element.id }}\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"size\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Document size </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getObject(element?.id)\\\">\\r\\n        {{ element.fileSize }}\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- FOR TYPE OF APPLICATION -->\\r\\n\\r\\n    <ng-container matColumnDef=\\\"clearingReleaseTime\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Clearing Release Time </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getObject(element?.id)\\\">\\r\\n        {{ element.clearingReleaseTime }}\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"decisionReleaseTime\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Decision Release Time </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getObject(element?.id)\\\">\\r\\n        {{ element.decisionReleaseTime }}\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"submissionStartTime\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Submission Start Time </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getObject(element?.id)\\\">\\r\\n        {{ element.submissionStartTime }}\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"submissionEndTime\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Submission End Time </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getObject(element?.id)\\\">\\r\\n        {{ element.submissionEndTime }}\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- FOR TYPE OF RATIONAL -->\\r\\n\\r\\n    <ng-container matColumnDef=\\\"rationale\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Rationale </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getObject(element?.id)\\\" style=\\\"width: 78%;\\\">\\r\\n        {{ element.rationale }}\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"rationaleCategory\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Rationale Category </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getObject(element?.id)\\\">\\r\\n        {{ element.rationaleCategory.replaceAll('_',' ') | uppercase }}\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n\\r\\n    <ng-container matColumnDef=\\\"firstName\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Firstname </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getObject(element?.id)\\\">\\r\\n        {{ element.firstName }}\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"lastName\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Lastname </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getObject(element?.id)\\\">\\r\\n        {{ element.lastName }}\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"mobileNumber\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Mobile Number </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getObject(element?.id)\\\">\\r\\n        {{ element?.mobileNumber }}\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"emailAddress\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Email Address </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getObject(element?.id)\\\">\\r\\n        {{ element?.username }}\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"userRole\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Role </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getObject(element?.id)\\\">\\r\\n        {{ element?.userRole?.name?.replaceAll('ROLE_', '')?.replace('_', ' ')?.replace('ENCODER', 'EVALUATOR') }}\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"typeOfMediumController\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Type of Medium </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getObject(element?.id)\\\">\\r\\n        {{ element?.typeOfMedium?.description }}\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"typeOfExecutionController\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Type of Execution </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getObject(element?.id)\\\">\\r\\n        {{ element?.typeOfExecution?.typeOfExecution }}\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- FOR VOUCHER ENROLLMENT -->\\r\\n\\r\\n    <ng-container matColumnDef=\\\"company\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Company </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getObject(element?.id)\\\">\\r\\n        {{ element?.company?.companyName }}\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"fundAmount\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Fund Amount </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getObject(element?.id)\\\">\\r\\n        {{ element?.fundAmount | number : '1.2-2' }}\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"voucherDate\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Voucher Date</th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getObject(element?.id)\\\">\\r\\n        {{ element?.voucherDate | date: 'shortDate'}}\\r\\n      </td>\\r\\n    </ng-container>\\r\\n    <!-- <ng-container matColumnDef=\\\"action\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> action </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n        <button mat-raised-button class=\\\"button-red\\\" (click)=\\\"viewHistory(element)\\\">\\r\\n          View History\\r\\n        </button>\\r\\n      </td>\\r\\n    </ng-container> -->\\r\\n\\r\\n\\r\\n    <!-- <ng-container matColumnDef=\\\"voucherSignatories\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef> Signatories Name </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getObject(element?.id)\\\">\\r\\n          {{ element?.voucherSignatories.name}}\\r\\n        </td>\\r\\n      </ng-container> -->\\r\\n\\r\\n    <!-- FOR VOUCHER SIGNATORIES -->\\r\\n\\r\\n    <ng-container matColumnDef=\\\"name\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Signatories Name </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getObject(element?.id)\\\">\\r\\n        {{ element?.name}}\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"position\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Position</th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getObject(element?.id)\\\">\\r\\n        {{ element?.position}}\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- FOR VOUCHER FUND TRANSFER -->\\r\\n    <ng-container matColumnDef=\\\"amountTransfered\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Amount Transferred </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getObject(element?.id)\\\">\\r\\n        {{ element?.amountTransfered | number : '1.2-2'}}\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"transferedDate\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Transferred Date</th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getObject(element?.id)\\\">\\r\\n        {{ element?.transferedDate | date: 'shortDate' }}\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"officialReceiptNo\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Official Receipt No</th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getObject(element?.id)\\\">\\r\\n        {{ element?.officialReceiptNo }}\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"typeOfMediumDescription\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Type Of Medium</th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getObject(element?.id)\\\">\\r\\n        {{ element?.typeOfMedium?.description }}\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"officialReceiptReferences\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Official Receipt No References</th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getObject(element?.id)\\\">\\r\\n        {{ element?.officialReceiptReferencesValue }}\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Image login -->\\r\\n    <ng-container matColumnDef=\\\"file\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> File</th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getObject(element?.id)\\\">\\r\\n        {{ element?.file }}\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"fileName\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> File name</th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getObject(element?.id)\\\">\\r\\n        {{ element?.fileName }}\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"fileExtension\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> File Extension</th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getObject(element?.id)\\\">\\r\\n        {{ element?.fileExtension }}\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"documentFormat\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Document Format</th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getObject(element?.id)\\\">\\r\\n        {{ element?.documentFormat }}\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"displayed\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Display Status</th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getObject(element?.id)\\\">\\r\\n        {{ element?.displayed }}\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"fileURL\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> File URL</th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getObject(element?.id)\\\">\\r\\n        {{ element?.fileURL }}\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"originalFilename\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Original Filename</th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getObject(element?.id)\\\">\\r\\n        {{ element?.originalFilename }}\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n\\r\\n\\r\\n    <!-- Image login -->\\r\\n\\r\\n\\r\\n    <!-- <ng-container matColumnDef=\\\"companyPenaltyDate\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Penalty Date </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getObject(element?.id)\\\">\\r\\n        {{ element?.penaltyDate | date:'fullDate'}}\\r\\n      </td>\\r\\n    </ng-container> -->\\r\\n    <!-- FOR COMPANY PENALTIES -->\\r\\n\\r\\n    <!-- DELETE ICON -->\\r\\n    <ng-container matColumnDef=\\\"deleteIcon\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Action </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"deleteObject(element?.id, element)\\\" matTooltip=\\\"Cancel OR\\\">\\r\\n        <span class=\\\"material-icons\\\">delete_forever</span>\\r\\n      </td>\\r\\n    </ng-container>\\r\\n    <!-- DELETE ICON -->\\r\\n    <ng-container matColumnDef=\\\"voucherActionItems\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef class=\\\"action-items\\\"> Action </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"action-items\\\">\\r\\n        <span class=\\\"material-icons\\\" tooltip=\\\"Edit\\\" (click)=\\\"openEditModal(element?.id, element)\\\">edit</span>\\r\\n        <span class=\\\"material-icons\\\" tooltip=\\\"Delete\\\" (click)=\\\"deleteObject(element?.id, element)\\\">delete_forever</span>\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n  </table>\\r\\n  <div class=\\\"no-record\\\" [hidden]=\\\"dataSource && dataSource?.data?.length > 0\\\">\\r\\n    No record found.\\r\\n  </div>\\r\\n  <mat-paginator [pageSizeOptions]=\\\"[10, 20, 30]\\\" showFirstLastButtons></mat-paginator>\\r\\n</div>\\r\\n\\r\\n<ng-template #signatoryEdit>\\r\\n  <h1 mat-dialog-title>Edit Signatories</h1>\\r\\n  <div mat-dialog-content>\\r\\n    <mat-form-field appearance=\\\"fill\\\" class=\\\"w-100\\\">\\r\\n      <mat-label>Signatory Name</mat-label>\\r\\n      <input matInput [(ngModel)]=\\\"signatory.name\\\">\\r\\n    </mat-form-field>\\r\\n    <mat-form-field appearance=\\\"fill\\\" class=\\\"w-100\\\">\\r\\n      <mat-label>Position</mat-label>\\r\\n      <input matInput [(ngModel)]=\\\"signatory.position\\\">\\r\\n    </mat-form-field>\\r\\n  </div>\\r\\n  <div mat-dialog-actions class=\\\"justify-content-center\\\">\\r\\n    <button mat-button (click)=\\\"closeModal()\\\">Cancel</button>\\r\\n    <button mat-button class=\\\"mat-raised-button button-red\\\" [disabled]=\\\"!signatory.name || !signatory.position\\\" (click)=\\\"updateObject()\\\">Save</button>\\r\\n  </div>\\r\\n</ng-template>\";","export default \"mat-panel-title {\\n  background-color: #b90000;\\n  margin: 20px 0px;\\n  color: white;\\n  padding: 10px;\\n  font-weight: 600;\\n}\\n\\n/* table for status display */\\n\\ntable tr td {\\n  padding: 10px 16px;\\n  border-radius: 7px;\\n  font: 500 14px/20px Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  width: 31%;\\n}\\n\\ntable tr td:nth-child(odd) {\\n  background-color: #ff5252;\\n  color: white;\\n  border: 1px solid white;\\n}\\n\\ntable tr td:nth-child(even) {\\n  color: #ff5252;\\n  border: 1px solid #0000001f;\\n}\\n\\n.no-border {\\n  background-color: transparent !important;\\n  border: 0px !important;\\n  padding: 0px !important;\\n  width: 5px;\\n  height: 5px !important;\\n}\\n\\n.dialog-button-content {\\n  vertical-align: bottom;\\n  text-align: center;\\n}\\n\\n.dialog-button-content button {\\n  color: white;\\n  border: none;\\n  padding: 5px 10px 5px 5px;\\n  margin: 0px 5px;\\n  font-weight: 500;\\n  border-radius: 5px;\\n}\\n\\n.dialog-button-content .warn {\\n  background-color: red;\\n}\\n\\n.dialog-button-content .caution {\\n  background-color: #dfd000;\\n  color: black;\\n}\\n\\n.dialog-button-content .confirm {\\n  background-color: #449bff;\\n}\\n\\ntable {\\n  width: 100%;\\n}\\n\\n.button-right {\\n  text-align: right;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9mcmFnbWVudHMvcmVxdWVzdC1mb3Itc3BlY2lhbC1jbGVhcmluZy9yZXF1ZXN0LWZvci1zcGVjaWFsLWNsZWFyaW5nLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0kseUJBQUE7RUFDQSxnQkFBQTtFQUNBLFlBQUE7RUFDQSxhQUFBO0VBQ0EsZ0JBQUE7QUFDSjs7QUFHQSw2QkFBQTs7QUFFRTtFQUNJLGtCQUFBO0VBQ0Esa0JBQUE7RUFDQSx3REFBQTtFQUNBLFVBQUE7QUFETjs7QUFJRTtFQUNJLHlCQUFBO0VBQ0EsWUFBQTtFQUNBLHVCQUFBO0FBRk47O0FBS0U7RUFDSSxjQUFBO0VBQ0EsMkJBQUE7QUFITjs7QUFPQTtFQUNFLHdDQUFBO0VBQ0Esc0JBQUE7RUFDQSx1QkFBQTtFQUNBLFVBQUE7RUFDQSxzQkFBQTtBQUpGOztBQVFBO0VBQ0Usc0JBQUE7RUFDQSxrQkFBQTtBQUxGOztBQU9FO0VBQ0ksWUFBQTtFQUNBLFlBQUE7RUFDQSx5QkFBQTtFQUNBLGVBQUE7RUFDQSxnQkFBQTtFQUNBLGtCQUFBO0FBTE47O0FBUUU7RUFDSSxxQkFBQTtBQU5OOztBQVNFO0VBQ0kseUJBQUE7RUFDQSxZQUFBO0FBUE47O0FBVUU7RUFDSSx5QkFBQTtBQVJOOztBQVlBO0VBQ0UsV0FBQTtBQVRGOztBQVlBO0VBQ0UsaUJBQUE7QUFURiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvZnJhZ21lbnRzL3JlcXVlc3QtZm9yLXNwZWNpYWwtY2xlYXJpbmcvcmVxdWVzdC1mb3Itc3BlY2lhbC1jbGVhcmluZy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIm1hdC1wYW5lbC10aXRsZXtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYigxODUsIDAsIDApO1xyXG4gICAgbWFyZ2luOiAyMHB4IDBweDtcclxuICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgIHBhZGRpbmc6IDEwcHg7XHJcbiAgICBmb250LXdlaWdodDogNjAwO1xyXG59XHJcblxyXG5cclxuLyogdGFibGUgZm9yIHN0YXR1cyBkaXNwbGF5ICovXHJcbnRhYmxlIHRyIHtcclxuICB0ZCB7XHJcbiAgICAgIHBhZGRpbmc6IDEwcHggMTZweDtcclxuICAgICAgYm9yZGVyLXJhZGl1czogN3B4O1xyXG4gICAgICBmb250OiA1MDAgMTRweC8yMHB4IFJvYm90bywgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBzYW5zLXNlcmlmO1xyXG4gICAgICB3aWR0aDogMzElO1xyXG4gIH1cclxuXHJcbiAgdGQ6bnRoLWNoaWxkKG9kZCkge1xyXG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmY1MjUyO1xyXG4gICAgICBjb2xvcjogd2hpdGU7XHJcbiAgICAgIGJvcmRlcjogMXB4IHNvbGlkIHdoaXRlO1xyXG4gIH1cclxuXHJcbiAgdGQ6bnRoLWNoaWxkKGV2ZW4pIHtcclxuICAgICAgY29sb3I6ICNmZjUyNTI7XHJcbiAgICAgIGJvcmRlcjogMXB4IHNvbGlkICMwMDAwMDAxZjtcclxuICB9XHJcbn1cclxuXHJcbi5uby1ib3JkZXIge1xyXG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50ICFpbXBvcnRhbnQ7XHJcbiAgYm9yZGVyOiAwcHggIWltcG9ydGFudDtcclxuICBwYWRkaW5nOiAwcHggIWltcG9ydGFudDtcclxuICB3aWR0aDogNXB4O1xyXG4gIGhlaWdodDogNXB4ICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbi8vIGJ1dHRvblxyXG4uZGlhbG9nLWJ1dHRvbi1jb250ZW50IHtcclxuICB2ZXJ0aWNhbC1hbGlnbjogYm90dG9tO1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuXHJcbiAgYnV0dG9uIHtcclxuICAgICAgY29sb3I6IHdoaXRlO1xyXG4gICAgICBib3JkZXI6IG5vbmU7XHJcbiAgICAgIHBhZGRpbmc6IDVweCAxMHB4IDVweCA1cHg7XHJcbiAgICAgIG1hcmdpbjogMHB4IDVweDtcclxuICAgICAgZm9udC13ZWlnaHQ6IDUwMDtcclxuICAgICAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gIH1cclxuXHJcbiAgLndhcm4ge1xyXG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZWQ7XHJcbiAgfVxyXG5cclxuICAuY2F1dGlvbiB7XHJcbiAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYigyMjMsIDIwOCwgMCk7XHJcbiAgICAgIGNvbG9yOiByZ2IoMCwgMCwgMCk7XHJcbiAgfVxyXG5cclxuICAuY29uZmlybSB7XHJcbiAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYig2OCwgMTU1LCAyNTUpO1xyXG4gIH1cclxufVxyXG5cclxudGFibGUge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG59XHJcblxyXG4uYnV0dG9uLXJpZ2h0e1xyXG4gIHRleHQtYWxpZ246IHJpZ2h0O1xyXG59XHJcbiJdfQ== */\";","import { Company } from '@models'\r\nimport { Affiliation } from './affiliation.model';\r\nimport { ApplicationType } from './application-type.model'\r\nimport { Brand } from './brand.model'\r\nimport { Category } from './category.model';\r\nimport { Product } from './product.model';\r\nimport { S1Application } from './s1-application.model';\r\nimport { UserAccount } from './user-account.model'\r\n\r\nexport class ApplicationRequest {\r\n    id: number;\r\n    adTitle: string;\r\n    applicationOwner: UserAccount;\r\n    applicationType: ApplicationType;\r\n    brand: Brand;\r\n    company: Company;\r\n    status: string;\r\n    submissionDate: Date;\r\n    tagLine: string\r\n    submitApplicationForm: boolean;\r\n    formType: string;\r\n    hasSpecialClearing: boolean;\r\n    applicationForm: S1Application;\r\n    product: Product;\r\n}\r\n","export class Profile {\r\n    id: number;\r\n    name: string;\r\n}\r\n","export class UploadingDocumentFileSize {\r\n    id: number;\r\n    fileSize: number;\r\n}","import { S1Application } from './s1-application.model';\r\nimport { S2Application } from './s2-application.model';\r\n\r\nexport class AttachmentDocument {\r\n    id: number;\r\n    applicationId: S1Application;\r\n    applicationS2Id: S2Application;\r\n    attachmentType: string; // MAIN, SUPPORTIVE, PAYMENT\r\n    autoSubmit: boolean;\r\n    brandPenaltyAttachmentReference: string;\r\n    documentFormat: string;\r\n    fileExtension: string;\r\n    fileURL: string;\r\n    filename: string;\r\n    mainAttachmentReference: string;\r\n    supportingAttachmentReference: string;\r\n    paymentAttachmentReference: string;\r\n    revisionLetterAttachmentReference: string;\r\n    finalMaterialAttachmentReference: string;\r\n    originalFilename: string;\r\n    status: string;\r\n    submissionType: string; // ORIGINAL, REVISION, COMPLIANCE, TOA\r\n    voucherAttachmentReference: string;\r\n    applicationFormId: string; // for compliance used only\r\n    applicationForm: string;\r\n    appFormReference: string;\r\n    modifiedApprovedS1AttachmentReference: string;\r\n    fileSize: number\r\n\r\n    createdBy: string;\r\n    createdDate: Date;\r\n    modifiedBy: string;\r\n    modifiedDate: Date;\r\n}\r\n","export class Announcement {\r\n  id: number;\r\n  details: string;\r\n  noOfView: number;\r\n  postingDate: Date;\r\n  status: string;\r\n  title: string;\r\n  link: string;\r\n  counter: number;\r\n}\r\n","export default \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-md-12\\\">\\r\\n    <button mat-raised-button color=\\\"primary\\\" (click)=\\\"save()\\\" *ngIf=\\\"!childObject?.id && !isHideSaveButton\\\"\\r\\n      [disabled]=\\\"!(childForm.valid)\\\">\\r\\n      <!-- <mat-icon>save</mat-icon> SAVE -->\\r\\n      <i class=\\\"material-icons color__white\\\">save</i> SAVE\\r\\n    </button>\\r\\n    <button mat-raised-button color=\\\"primary\\\" (click)=\\\"validate()\\\" *ngIf=\\\"!childObject?.id && isShowValidateButton\\\"\\r\\n      [disabled]=\\\"!(childForm.valid)\\\">\\r\\n      <!-- <mat-icon>save</mat-icon> SAVE -->\\r\\n      <i class=\\\"material-icons color__white\\\">search</i> VALIDATE\\r\\n    </button>\\r\\n    <button mat-raised-button color=\\\"primary\\\" (click)=\\\"update()\\\" *ngIf=\\\"childObject?.id && !isHideUpdateButton\\\"\\r\\n      [disabled]=\\\"!(childForm.valid)\\\">\\r\\n      <!-- <mat-icon> </mat-icon>  -->\\r\\n      <i class=\\\"material-icons color__white\\\">task_alt</i> UPDATE\\r\\n    </button>\\r\\n    <button mat-raised-button class=\\\"button-red\\\" (click)=\\\"delete()\\\" *ngIf=\\\"childObject?.id\\\" [hidden]=\\\"!isHideDeleteButton\\\"\\r\\n      [disabled]=\\\"!(childForm.valid)\\\">\\r\\n      <!-- <mat-icon> </mat-icon>  -->\\r\\n      <i class=\\\"material-icons color__white\\\">delete</i> DELETE\\r\\n    </button>\\r\\n    <button mat-raised-button color=\\\"warn\\\" (click)=\\\"resetFormValidator()\\\"\\r\\n      *ngIf=\\\"(childObject?.id || childObject?.description || childObject?.paymentDescription || childObject?.typeOfMedium || childObject?.reason) && !isFromModal\\\">\\r\\n      <!-- <mat-icon>{{ childObject?.id ? 'cancel' : 'refresh' }}</mat-icon> {{ childObject?.id ? 'CANCEL' : 'RESET' }} -->\\r\\n      <i class=\\\"material-icons color__white\\\"> {{ childObject?.id ? 'cancel' : 'refresh' }}</i> {{ childObject?.id ? 'CANCEL' : 'RESET' }}\\r\\n    </button>\\r\\n    <ng-container *ngIf=\\\"(isFromModal && showApproveRejectButton) || isShowApproveDisapproveButton\\\">\\r\\n      <!-- <ng-container *ngIf=\\\"showApproveRejectButton\\\"> -->\\r\\n      <button mat-raised-button class=\\\"button-red\\\" (click)=\\\"approve()\\\">\\r\\n        <i class=\\\"material-icons color__white\\\">verified</i> APPROVE\\r\\n      </button>\\r\\n      <button mat-raised-button class=\\\"button-red\\\" (click)=\\\"reject()\\\">\\r\\n        <i class=\\\"material-icons color__white\\\">unpublished</i> REJECT\\r\\n      </button>\\r\\n      <button mat-raised-button class=\\\"button-red\\\" (click)=\\\"closeModal()\\\" *ngIf=\\\"isFromModal && showApproveRejectButton\\\">\\r\\n        <i class=\\\"material-icons color__white\\\">close</i> CLOSE\\r\\n      </button>\\r\\n    </ng-container>\\r\\n  </div>\\r\\n</div>\\r\\n\";","import { Product } from './product.model';\r\n\r\nexport class Category {\r\n    id: number;\r\n    description: string;\r\n    status: string;\r\n}\r\n","import { Company } from \"./company.model\";\r\n\r\nexport class CompanyPenalties {\r\n    id: number;\r\n    penaltyAmount: number;\r\n    company: Company;\r\n    penaltyDate: Date;\r\n}","import { TypeOfDocument } from './type-of-document.model';\r\nimport { S1Application } from './s1-application.model';\r\n\r\nexport class SupportingDocument {\r\n    id: number;\r\n    appFormReference: S1Application;\r\n    typeOfDocument: TypeOfDocument;\r\n    basedOn: string;\r\n    variant: string;\r\n    dateOfLaunch: Date;\r\n    expiresOn: Date;\r\n    remarks: string;\r\n    input: string;\r\n\r\n    createdBy: string;\r\n    createdDate: Date;\r\n    modifiedBy: string;\r\n    modifiedDate: Date;\r\n}\r\n","export class UserRole {\r\n    id: number;\r\n    name: string;\r\n    status: string;\r\n}\r\n","export class PaymentType {\r\n    id: number;\r\n    amount: boolean;\r\n    bankBranch: boolean;\r\n    bankName: boolean;\r\n    controlNo: boolean;\r\n    fundTransferDate: boolean;\r\n    paymentDescription: string;\r\n    promisorryDate: boolean;\r\n    referenceNo: boolean;\r\n    status: string;\r\n}\r\n","export class OrPreparationReference {\r\n    id: number;\r\n    reference: string;\r\n    amount: number;\r\n}","export class Holiday {\r\n    id: number;\r\n    holidayDate: Date;\r\n    holidayName: string;\r\n    holidayType: string;\r\n    status: string;\r\n  }\r\n","import { Brand } from \"./brand.model\";\r\n\r\nexport class BrandPenalties {\r\n    id: number;\r\n    amount: number;\r\n    brand: Brand;\r\n    penaltyDate: Date;\r\n}","export class PerformanceMetrics {\r\n    id: number;\r\n    referenceCode: string;\r\n    appFormReference: string;\r\n    movement: string;\r\n    actionBy: string;\r\n    userRole: string;\r\n    currentDateTime: Date;\r\n    previousDateTime: Date;\r\n    duration: string;\r\n}\r\n","import { PaymentType } from \"./payment-type.model\";\r\n\r\nexport class PaymentMethod {\r\n    id: number;\r\n    paymentType: PaymentType;\r\n    referenceNo: string;\r\n    controlNo: string;\r\n    paymentDate: Date;\r\n    amount: number;\r\n    bankName: string\r\n    bankBranch: string;\r\n    promisorryDate: Date;\r\n    ccConfirmationCode: string;\r\n    checkNo: string;\r\n}\r\n","export default \"h1 {\\n  font-size: 20px;\\n  font-weight: 600;\\n}\\nh1 .material-icons {\\n  color: #ad0000;\\n}\\n.list-content {\\n  border: solid 1px #b6b6b6;\\n  border-radius: 5px;\\n  margin: 12px;\\n  min-height: 5em;\\n  max-height: 10em;\\n  overflow: auto;\\n  padding: 10px 10px;\\n}\\n.list-content .material-icons {\\n  color: #a00000;\\n  text-align: end;\\n  font-size: 20px;\\n  vertical-align: middle;\\n}\\n.list-content table {\\n  width: 100%;\\n}\\n.list-content table .reason-description {\\n  text-align: left;\\n}\\n.list-content table td {\\n  text-align: end;\\n}\\n.list-content .material-icons:hover {\\n  cursor: pointer;\\n}\\n.button-content button {\\n  width: 100%;\\n}\\n.errMsg {\\n  color: red;\\n  font-style: italic;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9mcmFnbWVudHMvcmVqZWN0LWRpc2FwcHJvdmVkLXJlYXNvbi9yZWplY3QtZGlzYXBwcm92ZWQtcmVhc29uLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksZUFBQTtFQUNBLGdCQUFBO0FBQ0o7QUFBSTtFQUNJLGNBQUE7QUFFUjtBQUdBO0VBQ0kseUJBQUE7RUFDQSxrQkFBQTtFQUNBLFlBQUE7RUFDQSxlQUFBO0VBQ0EsZ0JBQUE7RUFDQSxjQUFBO0VBQ0Esa0JBQUE7QUFBSjtBQUNJO0VBQ0ksY0FBQTtFQUNBLGVBQUE7RUFDQSxlQUFBO0VBQ0Esc0JBQUE7QUFDUjtBQUVJO0VBQ0ksV0FBQTtBQUFSO0FBQ1E7RUFDSSxnQkFBQTtBQUNaO0FBQ1E7RUFDSSxlQUFBO0FBQ1o7QUFHSTtFQUNJLGVBQUE7QUFEUjtBQU1JO0VBQ0ksV0FBQTtBQUhSO0FBT0E7RUFDRSxVQUFBO0VBQ0Esa0JBQUE7QUFKRiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvZnJhZ21lbnRzL3JlamVjdC1kaXNhcHByb3ZlZC1yZWFzb24vcmVqZWN0LWRpc2FwcHJvdmVkLXJlYXNvbi5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImgxe1xyXG4gICAgZm9udC1zaXplOiAyMHB4O1xyXG4gICAgZm9udC13ZWlnaHQ6IDYwMDtcclxuICAgIC5tYXRlcmlhbC1pY29uc3tcclxuICAgICAgICBjb2xvcjogcmdiKDE3MywgMCwgMCk7XHJcbiAgICB9XHJcbn1cclxuXHJcblxyXG4ubGlzdC1jb250ZW50e1xyXG4gICAgYm9yZGVyOiBzb2xpZCAxcHggcmdiKDE4MiwgMTgyLCAxODIpO1xyXG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gICAgbWFyZ2luOiAxMnB4O1xyXG4gICAgbWluLWhlaWdodDogNWVtO1xyXG4gICAgbWF4LWhlaWdodDogMTBlbTtcclxuICAgIG92ZXJmbG93OiBhdXRvO1xyXG4gICAgcGFkZGluZzogMTBweCAxMHB4O1xyXG4gICAgLm1hdGVyaWFsLWljb25ze1xyXG4gICAgICAgIGNvbG9yOiByZ2IoMTYwLCAwLCAwKTtcclxuICAgICAgICB0ZXh0LWFsaWduOiBlbmQ7XHJcbiAgICAgICAgZm9udC1zaXplOiAyMHB4O1xyXG4gICAgICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XHJcbiAgICB9XHJcblxyXG4gICAgdGFibGV7XHJcbiAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgLnJlYXNvbi1kZXNjcmlwdGlvbntcclxuICAgICAgICAgICAgdGV4dC1hbGlnbjogbGVmdDtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGR7XHJcbiAgICAgICAgICAgIHRleHQtYWxpZ246IGVuZDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLm1hdGVyaWFsLWljb25zOmhvdmVye1xyXG4gICAgICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgIH1cclxufVxyXG5cclxuLmJ1dHRvbi1jb250ZW50e1xyXG4gICAgYnV0dG9ue1xyXG4gICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgfVxyXG59XHJcblxyXG4uZXJyTXNnIHtcclxuICBjb2xvcjogcmVkO1xyXG4gIGZvbnQtc3R5bGU6IGl0YWxpYztcclxufVxyXG4iXX0= */\";","export class QrAndBarCodeChecker {\r\n    id: number;\r\n    qrOrBarCode: string;\r\n}","export * from './affiliation.model';\r\nexport * from './brand.model';\r\nexport * from './company.model';\r\nexport * from './payment-type.model';\r\nexport * from './profile.model';\r\nexport * from './s1-application.model';\r\nexport * from './s2-application.model';\r\nexport * from './type-of-document.model';\r\nexport * from './type-of-medium.model';\r\nexport * from './type-of-reason.model';\r\nexport * from './user-role.model';\r\nexport * from './user-account.model';\r\nexport * from './attachment-document.model';\r\nexport * from './category.model';\r\nexport * from './product.model';\r\nexport * from './type-of-application.model';\r\nexport * from './asc-rate.model';\r\nexport * from './payment.model';\r\nexport * from './country.model';\r\nexport * from './performance-metrics.model';\r\nexport * from './or-preparation.model';\r\nexport * from './or-preparation-reference.model';\r\nexport * from './supporting-document.model';\r\nexport * from './application-single-media.model';\r\nexport * from './application-request.model';\r\nexport * from './application-multimedia.model';\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvZnJhZ21lbnRzL2Zvcm0tYWN0aW9uLWJ1dHRvbnMvZm9ybS1hY3Rpb24tYnV0dG9ucy5jb21wb25lbnQuc2NzcyJ9 */\";","export class Affiliation {\r\n    id: number;\r\n    description: string;\r\n    member: boolean;\r\n    status: string;\r\n}\r\n","import { Category, Product } from '@models';\r\n\r\nexport class Brand {\r\n    id: number;\r\n    description: string;\r\n    // product: Product;\r\n    // category: Category;\r\n    status: string;\r\n    penalty: boolean;\r\n  }\r\n","import { Affiliation } from './affiliation.model';\r\nimport { Country } from './country.model';\r\n\r\nexport class Company {\r\n    id: number;\r\n    companyName: string;\r\n    companyTelephoneNo: string;\r\n    companyTin: string;\r\n    country: Country;\r\n    status: string;\r\n    completeAddress: string;\r\n    voucherApproved: boolean\r\n    membersAffiliation: Affiliation;\r\n    delinquent: boolean;\r\n    contactPersonEmail: string;\r\n    contactPersonName: string;\r\n    amountToSettle: number;\r\n    companyMobileNo: string;\r\n    companyTelephoneNo2: string;\r\n}\r\n","import { TypeOfRational } from \"./type-of-rational.model\";\r\n\r\nexport class ApplicationS2RationaleList {\r\n\r\n    id: number;\r\n    typeOfRationale: TypeOfRational;\r\n\r\n}","export class S1AndS2FormExpirationPeriod {\r\n  id: number;\r\n  s1ExpNoOfYears: number;\r\n  s2ExpNoOfYears: number;\r\n}"],"sourceRoot":"webpack:///"}