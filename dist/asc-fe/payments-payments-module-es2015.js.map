{"version":3,"sources":["./src/app/core/models/type-of-document.model.ts","./src/app/core/models/country.model.ts","./src/app/core/models/type-of-reason.model.ts","./src/app/modules/pages/accounting/payments/payments.component.scss","./src/app/core/models/type-of-application.model.ts","./src/app/modules/pages/accounting/payments/payments-routing.module.ts","./src/app/core/models/s1-application.model.ts","./src/app/core/models/product.model.ts","./src/app/core/models/payment.model.ts","./src/app/core/models/type-of-medium.model.ts","./src/app/core/models/application-multimedia.model.ts","./src/app/core/models/s2-application.model.ts","./src/app/core/models/or-preparation.model.ts","./src/app/modules/pages/accounting/payments/payments.component.ts","./src/app/core/models/user-account.model.ts","./src/app/core/models/asc-rate.model.ts","./src/app/core/models/application-single-media.model.ts","./src/app/modules/pages/accounting/payments/payments.module.ts","./src/app/core/models/application-request.model.ts","./src/app/core/models/profile.model.ts","./src/app/core/models/attachment-document.model.ts","./src/app/core/models/category.model.ts","./src/app/core/models/supporting-document.model.ts","./src/app/core/models/user-role.model.ts","./src/app/core/models/payment-type.model.ts","./src/app/core/models/or-preparation-reference.model.ts","./src/app/core/models/performance-metrics.model.ts","./src/app/core/models/payment-method.model.ts","./src/app/core/models/index.ts","./src/app/modules/pages/accounting/payments/payments.component.html","./src/app/core/models/affiliation.model.ts","./src/app/core/models/brand.model.ts","./src/app/core/models/company.model.ts"],"names":[],"mappings":"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","file":"payments-payments-module-es2015.js","sourcesContent":["export class TypeOfDocument {\r\n    id: number;\r\n    description: string;\r\n    remarksEnable: boolean;\r\n    basedOnEnable: boolean;\r\n    variantEnable: boolean;\r\n    dateOfLaunchEnable: boolean;\r\n    expiresOnEnable: boolean;\r\n    inputEnable: boolean;\r\n    status: string;\r\n}\r\n","export class Country {\r\n  id: number;\r\n  code: string;\r\n  name: string;\r\n}","export class TypeOfReason {\r\n    id: number;\r\n    reason: string;\r\n    status: string;\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcGFnZXMvYWNjb3VudGluZy9wYXltZW50cy9wYXltZW50cy5jb21wb25lbnQuc2NzcyJ9 */\";","export class TypeOfApplication {\r\n    id: number;\r\n    description: string;\r\n    clearingReleaseTime: String\r\n    decisionReleaseTime: String\r\n    sequenceNo: number;\r\n    status: String\r\n    submissionEndTime: String;\r\n    submissionStartTime: String\r\n}","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { PaymentsComponent } from './payments.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: PaymentsComponent\r\n  },\r\n  {\r\n    path: ':link',\r\n    component: PaymentsComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class PaymentsRoutingModule { }\r\n","import { Company } from './company.model';\r\nimport { Brand } from './brand.model';\r\nimport { ApplicationType } from './application-type.model';\r\nimport { UserAccount } from './user-account.model';\r\nimport { MultipleApplication } from './multiple-application.model';\r\nimport { Affiliation } from './affiliation.model';\r\nimport { ApplicationRequest } from './application-request.model';\r\nimport { Product } from './product.model';\r\nimport { TypeOfMedium } from './type-of-medium.model';\r\n\r\nexport class S1Application {\r\n    id: number;\r\n    company: Company;\r\n    brand: Brand;\r\n    adTitle: string;\r\n    referenceCode: string;\r\n\r\n    tagLine: string;\r\n    materialInformation: string;\r\n    externalStatus: string\r\n    internalStatus: string\r\n    revisionNo: number;\r\n\r\n    actionBy: UserAccount;\r\n    actionStatus: string; // ASSIGN_TO_ADSPE, ASSIGN_TO_REVIEWER, ASSIGN_TO_SCREENER\r\n    formStatus: string; // OPEN, LOCKED\r\n    submissionType: string // ORIGINAL, REVISION, COMPLIANCE\r\n    applicationType: ApplicationType;\r\n\r\n    formType: string; // INDIVIDUAL, MULTIPLE\r\n    autoSubmit: boolean;\r\n    submissionDate: Date;\r\n    sequenceOrder: number;\r\n    countSeries: number;\r\n\r\n    refTypeOfMedium: string;\r\n    assignedUser: UserAccount;\r\n    applicationOwner: UserAccount;\r\n    multipleApplication: MultipleApplication;\r\n    appFormReference: string;\r\n\r\n    mainAttachmentReference: string;\r\n    supportingAttachmentReference: string;\r\n    paymentAttachmentReference: string;\r\n    membersAffiliation: Affiliation;\r\n    decisionStatus: string;\r\n\r\n    amount: number;\r\n    applicationRequest: ApplicationRequest;\r\n    revisionLetterAttachmentReference: string;\r\n    assignedEncoder: UserAccount;\r\n    assignedAdSpecialist: UserAccount;\r\n\r\n    assignedScreener: UserAccount;\r\n    assignedReviewer: UserAccount;\r\n    verifiedDatetimeByEvaluator: Date;\r\n    sameDayRelease: boolean;\r\n    paidByApplicant: boolean;\r\n\r\n    archived: boolean;\r\n    appliedS2: boolean;\r\n    deliquent: boolean;\r\n    paymentStatus: string;\r\n    applicationDate: Date;\r\n\r\n    validUntil: Date;\r\n    previousRefCode: string;\r\n    hasNoSupportingDocs: boolean;\r\n    referenceCodeRejected: string;\r\n\r\n    hasRevision: boolean;\r\n    product: Product;\r\n    hasOngoingRevision: boolean;\r\n    qrCode: string;\r\n    barCode: string;\r\n    screenerDecisionComment: boolean;\r\n    reviewerDecisionComment: boolean;\r\n    hasOngoingCompliance: boolean;\r\n    releaseStatus: string;\r\n\r\n    complianceForm: boolean; // param need upon request for compliance\r\n    emailSent: boolean;\r\n    forwardToScreener: boolean;\r\n    forwardToReviewer: boolean;\r\n    formProcess: string;\r\n    typeOfMedium: string;\r\n\r\n    stampMaterialFileURL: string;\r\n    stampMaterialFilename: string;\r\n    decisionFormFileURL : string;\r\n    decisionFormFilename: string;\r\n\r\n    hasOngoingAppeal: boolean;\r\n    typeOfAppeal: string;\r\n    appealAttachmentReference: string;\r\n\r\n    hasOfficialReceipt: boolean;\r\n\r\n    // For AppRequest\r\n    status: string;\r\n\r\n    currentAssignee: string;\r\n}\r\n","import { Brand } from './brand.model';\r\nimport { Category } from './category.model';\r\n\r\nexport class Product {\r\n    id: number;\r\n    description: string;\r\n    status: string;\r\n    brand: Brand;\r\n    category: Category;\r\n}\r\n","import { S1Application } from './s1-application.model';\r\nimport { PaymentMethod } from './payment-method.model';\r\nimport { MultipleApplication } from './multiple-application.model';\r\nimport { S2Application } from './s2-application.model';\r\n\r\nexport class Payment {\r\n    id: number;\r\n    amountDue: number;\r\n    amountReceive: number;\r\n    appFormReference: string;\r\n    applicationForm: S1Application;\r\n    basicRate: number;\r\n    discount: number;\r\n    filename: string;\r\n    officialReceiptNo: string;\r\n    paymentAttachmentReference: string;\r\n    paymentDate: Date;\r\n    paymentMethod: PaymentMethod = new PaymentMethod();\r\n    paymentStatus: string; // PAID, UNPAID\r\n    remarks: string;\r\n    status: string;\r\n    vat: number;\r\n    withholdingTax: number;\r\n    amountToSettle: number;\r\n    companyName: string;\r\n    companyId: number;\r\n\r\n    multipleApplication: MultipleApplication;\r\n    filedBirForm: boolean = false;\r\n    applicationFormS2: S2Application;\r\n\r\n    constructor() {\r\n        this.filedBirForm = false;\r\n        this.remarks = '';\r\n    }\r\n}\r\n","import { TypeOfClearance } from './type-of-clearance.model';\r\nimport { TypeOfMainDocument } from './type-of-main-document.model';\r\n\r\nexport class TypeOfMedium {\r\n  description: string;\r\n  executionEnable: boolean;\r\n  id: number;\r\n  languageEnable: boolean;\r\n  lengthEnable: boolean;\r\n  multimedia: boolean;\r\n  multimediaMoving: boolean;\r\n  multimediaStatic: boolean;\r\n  othersEnable: boolean;\r\n  singlemedia: boolean;\r\n  sizeLengthEnable: boolean;\r\n  status: string;\r\n  typeOfMainDocument: TypeOfMainDocument;\r\n  widthEnable: boolean;\r\n  typeOfClearance: TypeOfClearance;\r\n\r\n  // not in BE; for List value\r\n  enabledFields: string;\r\n  sizeLength: string;\r\n}\r\n","import { TypeOfMedium } from './type-of-medium.model';\r\n\r\nexport class ApplicationMultimedia {\r\n    id: number;\r\n    amount: number;\r\n    appFormReference: string;\r\n    mediaType?: string; // STATIC, MOVING\r\n    multimediaSizeLength?: string;\r\n    typeOfMedium?: TypeOfMedium;\r\n}\r\n\r\nexport class ApplicationMultimediaItemsDTO {\r\n    hasSelected: boolean;\r\n    id: number;\r\n    multimediaMovingMedium?: string;\r\n    multimediaStaticMedium?: string;\r\n    sizeLength?: number;\r\n}\r\n\r\nexport class ApplicationMultimediaMovingDTO extends ApplicationMultimedia {\r\n    applicationMultimediaMovingList: ApplicationMultimediaItemsDTO[];\r\n    sizeLength: number;\r\n}\r\n\r\nexport class ApplicationMultimediaStaticDTO extends ApplicationMultimedia {\r\n    applicationMultimediaStaticList: ApplicationMultimediaItemsDTO[];\r\n}\r\n","import { ApplicationRequest } from './application-request.model';\r\nimport { S1Application } from './s1-application.model';\r\nimport { UserAccount } from './user-account.model';\r\n\r\nexport class S2Application {\r\n\r\n    id: number;\r\n    actionBy: string;\r\n    actionStatus: string;\r\n    applicationDate: Date;\r\n    applicationForm: S1Application;\r\n    assignedAdSpecialist: UserAccount;\r\n    assignedEncoder: UserAccount;\r\n    assignedUser: UserAccount;\r\n    complianceDate: Date;\r\n    decisionStatus: string;\r\n    externalStatus: string;\r\n    finalMaterialAttachmentReference: string;\r\n    formStatus: string;\r\n    internalStatus: string;\r\n    issuedDate: Date;\r\n    paymentStatus: string;\r\n    specialClearing: boolean;\r\n    submissionDate: Date;\r\n    validUntil: Date;\r\n    validityDate: Date;\r\n    referenceCodeRejected: string;\r\n    releaseDate: Date;\r\n    hasToa: boolean;\r\n    submissionType: string;\r\n    applicationRequest: ApplicationRequest;\r\n    paymentAttachmentReference: string;\r\n    amount: string;\r\n    appFormReference: string;\r\n    hasOngoingCompliance: boolean;\r\n    formProcess: string;\r\n    complianceForm: boolean; // param need upon request for compliance\r\n    hasOngoingAppeal: boolean;\r\n    typeOfAppeal: string;\r\n    appealAttachmentReference: string;\r\n    clearanceToaFileUrl: string;\r\n    clearanceToaFilename: string;\r\n    releaseStatus: string;\r\n    supportingAttachmentReference: string;\r\n}\r\n","import { TotalAmountsModel } from './totals.model';\r\nimport { TypeOfMedium, OrPreparationReference } from '@models';\r\n\r\nexport class OrPreparation {\r\n    amount: number;\r\n    amountInWords: string;\r\n    businessStyle: string;\r\n    companyAddress: string;\r\n    companyName: string;\r\n    companyTin: string;\r\n    controlNumber: string;\r\n    fullPaymentOf: string;\r\n    id: number;\r\n    officialReceiptDate: Date;\r\n    officialReceiptNo: string;\r\n    officialReceiptReferences: OrPreparationReference[];\r\n    remarks: string;\r\n    status: string;\r\n    typeOfMedium: TypeOfMedium;\r\n    voucherControlNumber: string;\r\n\r\n    //totals\r\n    totalSales: number;\r\n    totalVat: number;\r\n    totalWithholdingtax: number;\r\n    totalAmountDue: number;\r\n\r\n    // Not if BE; for FE only\r\n    officialReceiptReferencesValue: string;\r\n\r\n    setTotalAmounts(totals: TotalAmountsModel){\r\n        this.totalSales = totals.totalSales;\r\n        this.totalAmountDue = totals.totalAmountDue;\r\n        this.totalVat = totals.totalVat;\r\n        this.totalWithholdingtax = totals.totalWithholdingtax;\r\n    }\r\n}","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { Payment } from \"@models\";\r\nimport { ApiService, DataStorageService } from \"@services\";\r\nimport {\r\n  ENDPOINTS,\r\n  PAYMENT_STATUS_LIST,\r\n  PAYMENT_TYPE,\r\n  PAYMENT_TYPE_LIST,\r\n} from \"@shared\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\n\r\n@Component({\r\n  selector: \"app-payments\",\r\n  templateUrl: \"./payments.component.html\",\r\n  styleUrls: [\"./payments.component.scss\"],\r\n})\r\nexport class PaymentsComponent implements OnInit {\r\n  @ViewChild(MatPaginator, { static: false }) paginatorFalse: MatPaginator;\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  pageSize = 10;\r\n  pageNo = 0;\r\n  pageSizeOptions: number[] = [10, 20, 50];\r\n  currentPage = 1;\r\n  paymentTotalItems = 0;\r\n  @ViewChild(MatSort, { static: false }) sort: MatSort;\r\n\r\n  dataSource: MatTableDataSource<Payment>;\r\n  displayedColumns: string[];\r\n  paymentTypeList = [...PAYMENT_TYPE_LIST];\r\n  paymentList = [];\r\n  paymentType = PAYMENT_TYPE_LIST[0];\r\n  paymentStatusList = PAYMENT_STATUS_LIST;\r\n  paymentStatus = \"FOR_APPROVAL\";\r\n\r\n  linkExtension = \"\";\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private apiService: ApiService,\r\n    private dataStorageService: DataStorageService,\r\n    private spinner: NgxSpinnerService,\r\n    private route: ActivatedRoute\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.linkExtension = this.route.snapshot.paramMap.get(\"link\");\r\n    if (this.linkExtension === \"schedule-of-fees-individual\") {\r\n      this.paymentType = this.paymentTypeList.filter(\r\n        (filteredList) =>\r\n          filteredList.type === PAYMENT_TYPE.SCHEDULE_OF_FEES_INDIVIDUAL\r\n      )[0];\r\n    } else if (this.linkExtension === \"schedule-of-fees-multiple\") {\r\n      this.paymentType = this.paymentTypeList.filter(\r\n        (filteredList) =>\r\n          filteredList.type === PAYMENT_TYPE.SCHEDULE_OF_FEES_MULTIPLE\r\n      )[0];\r\n    } else if (this.linkExtension === \"schedule-of-fees-special\") {\r\n      this.paymentType = this.paymentTypeList.filter(\r\n        (filteredList) =>\r\n          filteredList.type === PAYMENT_TYPE.SCHEDULE_OF_FEES_SPECIAL\r\n      )[0];\r\n    } else if (this.linkExtension === \"delinquent-companies\") {\r\n      this.paymentType = this.paymentTypeList.filter(\r\n        (filteredList) => filteredList.type === PAYMENT_TYPE.DELINQUENT\r\n      )[0];\r\n    } else if (this.linkExtension === \"brand-penalties\") {\r\n      this.paymentType = this.paymentTypeList.filter(\r\n        (filteredList) => filteredList.type === PAYMENT_TYPE.PENALIZED_BRANDS\r\n      )[0];\r\n    } else if (this.linkExtension === \"company-penalties\") {\r\n      this.paymentType = this.paymentTypeList.filter(\r\n        (filteredList) => filteredList.type === PAYMENT_TYPE.PENALIZED_COMPANY\r\n      )[0];\r\n    } else if (this.linkExtension === \"accounts-receivable\") {\r\n      this.paymentType = this.paymentTypeList.filter(\r\n        (filteredList) => filteredList.type === PAYMENT_TYPE.ACCOUNTS_RECEIVABLE\r\n      )[0];\r\n    }\r\n\r\n    this.getPaymentList(this.paymentStatus);\r\n  }\r\n\r\n  printRefCode(element) {\r\n    if (element.referenceCode) {\r\n      return element.referenceCode;\r\n    } else if (element.referenceCodeRejected) {\r\n      return element.referenceCodeRejected;\r\n    }\r\n  }\r\n\r\n  getByPaymentStatusList(paymentStatus) {\r\n    this.pageNo = 0;\r\n    this.getPaymentList(paymentStatus);\r\n  }\r\n\r\n  getPaymentList(paymentStatus) {\r\n    let param = \"\";\r\n    if (paymentStatus !== \"ALL\") {\r\n      param = \"&paymentStatus=\" + paymentStatus;\r\n    }\r\n\r\n    this.currentPage = this.pageNo;\r\n    this.currentPage++;\r\n    if (this.currentPage === 0) this.currentPage++;\r\n\r\n    this.spinner.show();\r\n    let endpoint = \"\";\r\n    if (this.paymentType.type === PAYMENT_TYPE.SCHEDULE_OF_FEES_INDIVIDUAL) {\r\n      this.router.navigate([\r\n        \"asc/page/accounting/payments/\",\r\n        \"schedule-of-fees-individual\",\r\n      ]);\r\n      this.displayedColumns = [\r\n        \"referenceCode\",\r\n        \"typeOfApplication\",\r\n        \"brand\",\r\n        \"typeOfMedium\",\r\n        \"companyName\",\r\n        \"paymentStatus\",\r\n      ];\r\n      //\r\n      endpoint =\r\n        ENDPOINTS.scheduleOfFeesMonitoring +\r\n        `?page=${this.currentPage}&size=${this.pageSize}` +\r\n        param;\r\n    } else if (\r\n      this.paymentType.type === PAYMENT_TYPE.SCHEDULE_OF_FEES_MULTIPLE\r\n    ) {\r\n      this.router.navigate([\r\n        \"asc/page/accounting/payments/\",\r\n        \"schedule-of-fees-multiple\",\r\n      ]);\r\n      this.displayedColumns = [\r\n        \"adTitle\",\r\n        \"typeOfApplication\",\r\n        \"brand\",\r\n        \"product\",\r\n        \"company\",\r\n        \"paymentStatus\",\r\n      ];\r\n      //\r\n      endpoint =\r\n        ENDPOINTS.scheduleOfFeesMultipleMonitoring +\r\n        `?page=${this.currentPage}&size=${this.pageSize}` +\r\n        param;\r\n    } else if (\r\n      this.paymentType.type === PAYMENT_TYPE.SCHEDULE_OF_FEES_SPECIAL\r\n    ) {\r\n      this.router.navigate([\r\n        \"asc/page/accounting/payments/\",\r\n        \"schedule-of-fees-special\",\r\n      ]);\r\n      this.displayedColumns = [\r\n        \"referenceCode\",\r\n        \"typeOfApplication\",\r\n        \"brand\",\r\n        \"typeOfMedium\",\r\n        \"companyName\",\r\n        \"paymentStatus\",\r\n      ];\r\n      endpoint =\r\n        ENDPOINTS.scheduleOfFeesSpecialMonitoring +\r\n        `?page=${this.currentPage}&size=${this.pageSize}` +\r\n        param;\r\n    } else if (this.paymentType.type === PAYMENT_TYPE.DELINQUENT) {\r\n      this.router.navigate([\r\n        \"asc/page/accounting/payments/\",\r\n        \"delinquent-companies\",\r\n      ]);\r\n      this.displayedColumns = [\r\n        // 'referenceCode',\r\n        \"company\",\r\n        \"membersAffiliation\",\r\n        \"companyTelephoneNo\",\r\n        \"amount\",\r\n      ];\r\n      endpoint =\r\n        ENDPOINTS.delinquentApplications +\r\n        `?hasDelinquentAppForm=true&page=${this.currentPage}&size=${this.pageSize}`;\r\n    } else if (this.paymentType.type === PAYMENT_TYPE.PENALIZED_BRANDS) {\r\n      this.router.navigate([\r\n        \"asc/page/accounting/payments/\",\r\n        \"brand-penalties\",\r\n      ]);\r\n      this.displayedColumns = [\r\n        \"referenceCode\",\r\n        \"brand\",\r\n        \"penaltyDate\",\r\n        \"amount\",\r\n        \"paymentMethod\",\r\n        \"paidDate\",\r\n        \"paymentStatus\",\r\n      ];\r\n      endpoint =\r\n        ENDPOINTS.penalizedBrandMonitoring +\r\n        `?page=${this.currentPage}&size=${this.pageSize}` +\r\n        param?.replace(\"paymentStatus\", \"status\");\r\n    } else if (this.paymentType.type === PAYMENT_TYPE.PENALIZED_COMPANY) {\r\n      this.router.navigate([\r\n        \"asc/page/accounting/payments/\",\r\n        \"company-penalties\",\r\n      ]);\r\n      // endpoint = ENDPOINTS.penalizedCompanyMonitoring;\r\n      this.displayedColumns = [\r\n        \"referenceCode\",\r\n        \"company\",\r\n        \"penaltyDate\",\r\n        \"amount\",\r\n        \"paymentStatus\",\r\n      ];\r\n      endpoint =\r\n        ENDPOINTS.companyPenalties +\r\n        `/custom/search?page=${this.currentPage}&size=${this.pageSize}` +\r\n        param;\r\n    } else if (this.paymentType.type === PAYMENT_TYPE.ACCOUNTS_RECEIVABLE) {\r\n      this.router.navigate([\r\n        \"asc/page/accounting/payments/\",\r\n        \"accounts-receivable\",\r\n      ]);\r\n      this.displayedColumns = [\r\n        \"referenceCode\",\r\n        \"typeOfApplication\",\r\n        \"brand\",\r\n        \"typeOfMedium\",\r\n        \"companyName\",\r\n        \"paymentStatus\",\r\n      ];\r\n      endpoint =\r\n        ENDPOINTS.scheduleOfFeesMonitoring +\r\n        `?hasPromissoryNote=true&page=${this.currentPage}&size=${this.pageSize}` +\r\n        param;\r\n    }\r\n    console.log(endpoint);\r\n\r\n    this.apiService.findAll(endpoint).subscribe(\r\n      (res: any) => {\r\n        if (res.data) {\r\n          this.paymentList = res.data;\r\n        } else if (res.responseData) {\r\n          this.paymentList = res.responseData.data;\r\n        } else if (res) {\r\n          this.paymentList = res;\r\n        } else {\r\n          this.paymentList = [];\r\n        }\r\n\r\n        this.paymentTotalItems = res.totalItems;\r\n        this.dataSource = new MatTableDataSource<Payment>(this.paymentList);\r\n        // this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n        this.paymentTotalItems = res.totalItems;\r\n        this.spinner.hide();\r\n        console.log(\"datasource\", this.dataSource.data);\r\n      },\r\n      (err: any) => {\r\n        this.paymentList = [];\r\n        this.dataSource = new MatTableDataSource<Payment>(this.paymentList);\r\n\r\n        this.spinner.hide();\r\n      }\r\n    );\r\n  }\r\n\r\n  pageEvents(event: any) {\r\n    this.pageSize = event.pageSize;\r\n\r\n    if (event.pageIndex > this.pageNo) {\r\n      this.pageNo++;\r\n    } else {\r\n      this.pageNo--;\r\n    }\r\n\r\n    if (event.pageSize > event.length) {\r\n      this.pageNo = 0;\r\n    }\r\n\r\n    this.getPaymentList(this.paymentStatus);\r\n  }\r\n\r\n  setPageSizeOptions(setPageSizeOptionsInput: string) {\r\n    if (setPageSizeOptionsInput) {\r\n      this.pageSizeOptions = setPageSizeOptionsInput\r\n        .split(\",\")\r\n        .map((str) => +str);\r\n    }\r\n  }\r\n\r\n  comparePaymentType(value: any, selected: any): boolean {\r\n    if (value && selected) {\r\n      return value.type === selected.type;\r\n    }\r\n  }\r\n\r\n  getPaymentDetails(elm) {\r\n    if (this.paymentType.type === PAYMENT_TYPE.SCHEDULE_OF_FEES_INDIVIDUAL) {\r\n      this.router.navigate([\r\n        \"asc/page/accounting/update/\",\r\n        elm.paymentStatus.toLowerCase() + \"-\" + elm.id,\r\n      ]);\r\n    } else if (\r\n      this.paymentType.type === PAYMENT_TYPE.SCHEDULE_OF_FEES_MULTIPLE\r\n    ) {\r\n      if (elm?.paymentStatus) {\r\n        this.router.navigate([\r\n          \"asc/page/accounting/update/\",\r\n          `${elm?.paymentStatus?.toLowerCase()}-${elm.id}`,\r\n          `multiple-${elm.id}`,\r\n        ]);\r\n      } else {\r\n        this.router.navigate([\r\n          \"asc/page/accounting/update/\",\r\n          `multiple-${elm.id}`,\r\n        ]);\r\n      }\r\n    } else if (\r\n      this.paymentType.type === PAYMENT_TYPE.SCHEDULE_OF_FEES_SPECIAL\r\n    ) {\r\n      if (elm?.paymentStatus) {\r\n        this.router.navigate([\r\n          \"asc/page/accounting/update/\",\r\n          `${elm?.paymentStatus?.toLowerCase()}-${elm.id}`,\r\n          `special-${elm.id}`,\r\n        ]);\r\n      } else {\r\n        this.router.navigate([\r\n          \"asc/page/accounting/update/\",\r\n          `special-${elm.id}`,\r\n        ]);\r\n      }\r\n    } else if (this.paymentType.type === PAYMENT_TYPE.ACCOUNTS_RECEIVABLE) {\r\n      this.router.navigate([\r\n        \"asc/page/accounting/update/\",\r\n        elm.paymentStatus.toLowerCase() + \"-\" + elm.id,\r\n      ]);\r\n    } else if (this.paymentType.type === PAYMENT_TYPE.DELINQUENT) {\r\n      const payment = new Payment();\r\n      payment.amountDue = elm.amountToSettle;\r\n      payment.applicationForm = elm;\r\n      payment.appFormReference = elm.appFormReference;\r\n      payment.companyId = elm.id;\r\n\r\n      this.dataStorageService.setPayment(payment);\r\n      this.router.navigate([\r\n        \"asc/page/accounting/add-penalty/update/\",\r\n        \"delinquent\",\r\n        elm.id,\r\n      ]);\r\n    } else if (this.paymentType.type === PAYMENT_TYPE.PENALIZED_BRANDS) {\r\n      this.router.navigate([\r\n        \"asc/page/accounting/add-penalty/update/\",\r\n        \"brand\",\r\n        elm.id,\r\n      ]);\r\n    } else if (this.paymentType.type === PAYMENT_TYPE.PENALIZED_COMPANY) {\r\n      this.router.navigate([\r\n        \"asc/page/accounting/add-penalty/update/\",\r\n        \"company\",\r\n        elm?.company?.id,\r\n      ]);\r\n    } else if (this.paymentType.type === PAYMENT_TYPE.ACCOUNTS_RECEIVABLE) {\r\n      this.router.navigate([\r\n        \"asc/page/accounting/update/\",\r\n        elm.paymentStatus.toLowerCase() + \"-\" + elm.id,\r\n      ]);\r\n    }\r\n  }\r\n\r\n  openComponent() {\r\n    if (this.paymentType.type === PAYMENT_TYPE.PENALIZED_BRANDS) {\r\n      this.router.navigate([\"asc/page/accounting/add-penalty\", \"brand\"]);\r\n    } else if (this.paymentType.type === PAYMENT_TYPE.PENALIZED_COMPANY) {\r\n      this.router.navigate([\"asc/page/accounting/add-penalty\", \"company\"]);\r\n    }\r\n  }\r\n}\r\n","import { Affiliation, Company, UserRole } from '@models';\r\n\r\nexport class UserAccount {\r\n    id: number;\r\n    username: string;\r\n    password: string;\r\n    firstName: string;\r\n    middleName: string;\r\n    lastName: string;\r\n    company: Company;\r\n    membersAffiliationDto: Affiliation;\r\n    mobileNumber: string;\r\n    userRole: UserRole;\r\n    status: string;\r\n    acceptTerms: boolean;\r\n    accountType: string;\r\n    // locked: Boolean;\r\n    // enabled: Boolean;\r\n    ascDefault:\tboolean;\r\n    membersAffiliation:\tAffiliation;\r\n    scheduledUser:\tboolean;\r\n    signatureAttachmentReference:\tstring;\r\n}\r\n","import { TypeOfExecution } from './type-of-execution.model';\r\nimport { TypeOfMedium } from './type-of-medium.model';\r\n\r\nexport class AscRate {\r\n    id: number;\r\n    lengthFrom: number;\r\n    lengthTo: number;\r\n    memberOffline: number;\r\n    memberOnline: number;\r\n    nonMemberOffline: number;\r\n    nonMemberOnline: number;\r\n    status: string;\r\n    typeOfExecution: TypeOfExecution;\r\n    typeOfMedium: TypeOfMedium;\r\n}","import { Dialect } from './dialect.model';\r\nimport { MediumExecution } from './medium-execution.model';\r\n\r\nexport class ApplicationSingleMedia {\r\n    id: number;\r\n    amount: number;\r\n    appFormReference: string;\r\n    dialect: Dialect;\r\n    language: string;\r\n    others: string;\r\n    sizeLength: string;\r\n    mediumExecution: MediumExecution;\r\n    width: string;\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { PaymentsRoutingModule } from './payments-routing.module';\r\nimport { PaymentsComponent } from './payments.component';\r\nimport { AngularMaterialModule } from '@shared';\r\n\r\n\r\n@NgModule({\r\n  declarations: [PaymentsComponent],\r\n  imports: [\r\n    CommonModule,\r\n    PaymentsRoutingModule,\r\n    AngularMaterialModule\r\n  ]\r\n})\r\nexport class PaymentsModule { }\r\n","import { Company } from '@models'\r\nimport { Affiliation } from './affiliation.model';\r\nimport { ApplicationType } from './application-type.model'\r\nimport { Brand } from './brand.model'\r\nimport { Category } from './category.model';\r\nimport { Product } from './product.model';\r\nimport { S1Application } from './s1-application.model';\r\nimport { UserAccount } from './user-account.model'\r\n\r\nexport class ApplicationRequest {\r\n    id: number;\r\n    adTitle: string;\r\n    applicationOwner: UserAccount;\r\n    applicationType: ApplicationType;\r\n    brand: Brand;\r\n    company: Company;\r\n    status: string;\r\n    submissionDate: Date;\r\n    tagLine: string\r\n    submitApplicationForm: boolean;\r\n    formType: string;\r\n    hasSpecialClearing: boolean;\r\n    applicationForm: S1Application;\r\n    product: Product;\r\n}\r\n","export class Profile {\r\n    id: number;\r\n    name: string;\r\n}\r\n","import { S1Application } from './s1-application.model';\r\nimport { S2Application } from './s2-application.model';\r\n\r\nexport class AttachmentDocument {\r\n    id: number;\r\n    applicationId: S1Application;\r\n    applicationS2Id: S2Application;\r\n    attachmentType: string; // MAIN, SUPPORTIVE, PAYMENT\r\n    autoSubmit: boolean;\r\n    brandPenaltyAttachmentReference: string;\r\n    documentFormat: string;\r\n    fileExtension: string;\r\n    fileURL: string;\r\n    filename: string;\r\n    mainAttachmentReference: string;\r\n    supportingAttachmentReference: string;\r\n    paymentAttachmentReference: string;\r\n    revisionLetterAttachmentReference: string;\r\n    finalMaterialAttachmentReference: string;\r\n    originalFilename: string;\r\n    status: string;\r\n    submissionType: string; // ORIGINAL, REVISION, COMPLIANCE, TOA\r\n    voucherAttachmentReference: string;\r\n    applicationFormId: string; // for compliance used only\r\n    applicationForm: string;\r\n    appFormReference: string;\r\n    modifiedApprovedS1AttachmentReference: string;\r\n    fileSize: number\r\n\r\n    createdBy: string;\r\n    createdDate: Date;\r\n    modifiedBy: string;\r\n    modifiedDate: Date;\r\n}\r\n","import { Product } from './product.model';\r\n\r\nexport class Category {\r\n    id: number;\r\n    description: string;\r\n    status: string;\r\n}\r\n","import { TypeOfDocument } from './type-of-document.model';\r\nimport { S1Application } from './s1-application.model';\r\n\r\nexport class SupportingDocument {\r\n    id: number;\r\n    appFormReference: S1Application;\r\n    typeOfDocument: TypeOfDocument;\r\n    basedOn: string;\r\n    variant: string;\r\n    dateOfLaunch: Date;\r\n    expiresOn: Date;\r\n    remarks: string;\r\n    input: string;\r\n\r\n    createdBy: string;\r\n    createdDate: Date;\r\n    modifiedBy: string;\r\n    modifiedDate: Date;\r\n}\r\n","export class UserRole {\r\n    id: number;\r\n    name: string;\r\n    status: string;\r\n}\r\n","export class PaymentType {\r\n    id: number;\r\n    amount: boolean;\r\n    bankBranch: boolean;\r\n    bankName: boolean;\r\n    controlNo: boolean;\r\n    fundTransferDate: boolean;\r\n    paymentDescription: string;\r\n    promisorryDate: boolean;\r\n    referenceNo: boolean;\r\n    status: string;\r\n}\r\n","export class OrPreparationReference {\r\n    id: number;\r\n    reference: string;\r\n    amount: number;\r\n}","export class PerformanceMetrics {\r\n    id: number;\r\n    referenceCode: string;\r\n    appFormReference: string;\r\n    movement: string;\r\n    actionBy: string;\r\n    userRole: string;\r\n    currentDateTime: Date;\r\n    previousDateTime: Date;\r\n    duration: string;\r\n}\r\n","import { PaymentType } from \"./payment-type.model\";\r\n\r\nexport class PaymentMethod {\r\n    id: number;\r\n    paymentType: PaymentType;\r\n    referenceNo: string;\r\n    controlNo: string;\r\n    paymentDate: Date;\r\n    amount: number;\r\n    bankName: string\r\n    bankBranch: string;\r\n    promisorryDate: Date;\r\n    ccConfirmationCode: string;\r\n    checkNo: string;\r\n}\r\n","export * from './affiliation.model';\r\nexport * from './brand.model';\r\nexport * from './company.model';\r\nexport * from './payment-type.model';\r\nexport * from './profile.model';\r\nexport * from './s1-application.model';\r\nexport * from './s2-application.model';\r\nexport * from './type-of-document.model';\r\nexport * from './type-of-medium.model';\r\nexport * from './type-of-reason.model';\r\nexport * from './user-role.model';\r\nexport * from './user-account.model';\r\nexport * from './attachment-document.model';\r\nexport * from './category.model';\r\nexport * from './product.model';\r\nexport * from './type-of-application.model';\r\nexport * from './asc-rate.model';\r\nexport * from './payment.model';\r\nexport * from './country.model';\r\nexport * from './performance-metrics.model';\r\nexport * from './or-preparation.model';\r\nexport * from './or-preparation-reference.model';\r\nexport * from './supporting-document.model';\r\nexport * from './application-single-media.model';\r\nexport * from './application-request.model';\r\nexport * from './application-multimedia.model';\r\n","export default \"<form>\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12 title\\\">\\r\\n        <mat-label>\\r\\n          <mat-icon>payments</mat-icon> PAYMENT LIST\\r\\n        </mat-label>\\r\\n      </div>\\r\\n    </div>\\r\\n    <br>\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-8\\\">\\r\\n        <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n          <mat-select [(ngModel)]=\\\"paymentType\\\" name=\\\"paymentType\\\" placeholder=\\\"Type of Payment\\\"\\r\\n            [compareWith]=\\\"comparePaymentType\\\">\\r\\n            <mat-option *ngFor=\\\"let i of paymentTypeList\\\" [value]=\\\"i\\\" (click)=\\\"getByPaymentStatusList(paymentStatus)\\\">\\r\\n              {{i?.type?.replace('SPECIAL','S2 SPECIAL CLEARING')}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n        <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\" [hidden]=\\\"paymentType?.type === 'DELINQUENT'\\\">\\r\\n          <mat-select [(ngModel)]=\\\"paymentStatus\\\" name=\\\"paymentStatus\\\">\\r\\n            <mat-option *ngFor=\\\"let i of paymentStatusList\\\" [value]=\\\"i.type\\\" (click)=\\\"getByPaymentStatusList(paymentStatus)\\\">\\r\\n              {{i?.type?.replaceAll('_', ' ')}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n        <button mat-raised-button class=\\\"button-right button-red\\\" (click)=\\\"openComponent()\\\"\\r\\n          *ngIf=\\\"paymentType?.type === 'PENALIZED BRANDS' || paymentType?.type === 'PENALIZED COMPANY' \\\">\\r\\n          <i class=\\\"material-icons color__white\\\">task_alt</i> ADD PENALTY\\r\\n        </button>\\r\\n      </div>\\r\\n\\r\\n    <div class=\\\"mat-elevation-z8 fields\\\">\\r\\n      <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"referenceCode\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef > REFERENCE CODE </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getPaymentDetails(element)\\\">\\r\\n            <!-- {{ element?.referenceCode }}\\r\\n            {{ element?.applicationForm?.referenceCode | uppercase }}\\r\\n            {{ element?.brandPenaltyAttachmentReference | uppercase }} -->\\r\\n            {{printRefCode(element)}}\\r\\n          </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"adTitle\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef > AD TITLE </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getPaymentDetails(element)\\\">\\r\\n            {{ element?.adTitle | uppercase }}\\r\\n            {{ element?.multipleApplication?.adTitle | uppercase }}\\r\\n          </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"typeOfApplication\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef > TYPE OF APPLICATION </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getPaymentDetails(element)\\\">\\r\\n            {{ element?.applicationType?.description | uppercase }}\\r\\n            {{ element?.applicationForm?.applicationType?.description | uppercase }}\\r\\n            {{ element?.formType?.replaceAll('_',' ') | uppercase }}\\r\\n            {{ element?.multipleApplication?.applicationType?.description?.replaceAll('_',' ') | uppercase }}\\r\\n          </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"brand\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef > BRAND </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getPaymentDetails(element)\\\">\\r\\n            {{ element?.applicationForm?.brand?.description | uppercase }}\\r\\n            {{ element?.brand?.description | uppercase }}\\r\\n            {{ element?.multipleApplication?.brand?.description | uppercase }}\\r\\n          </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"product\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> PRODUCT</th>\\r\\n          <td mat-cell *matCellDef=\\\"let element; let i = index\\\" (click)=\\\"getPaymentDetails(element)\\\">\\r\\n            {{element?.product?.description | uppercase}}\\r\\n            {{ element?.multipleApplication?.product?.description | uppercase }}</td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"company\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef > PRESENTOR'S COMPANY NAME </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getPaymentDetails(element)\\\">\\r\\n              {{ element?.applicationOwner?.company?.companyName | uppercase }}\\r\\n              {{ element?.companyName | uppercase }}\\r\\n              {{ element?.multipleApplication?.company?.companyName | uppercase }}</td>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"companyTelephoneNo\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef > Telephone No </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getPaymentDetails(element)\\\">\\r\\n            {{ element?.companyTelephoneNo | uppercase }}<br>\\r\\n            {{ element?.companyTelephoneNo2 | uppercase }}\\r\\n          </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"membersAffiliation\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef > MEMBERS AFFILIATION </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getPaymentDetails(element)\\\">\\r\\n            {{ element?.membersAffiliation?.description | uppercase }}\\r\\n          </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"penaltyDate\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef > PENALTY DATE </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getPaymentDetails(element)\\\">\\r\\n            {{ element?.penaltyDate | date: 'MM/dd/yyyy' }}\\r\\n          </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"amount\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef > AMOUNT </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getPaymentDetails(element)\\\">\\r\\n            {{ element?.amount }}\\r\\n            {{ element?.penaltyAmount }}\\r\\n            {{ element?.amountToSettle }}\\r\\n          </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"paymentMethod\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef > PAYMENT METHOD </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getPaymentDetails(element)\\\">\\r\\n            <!-- {{ element?.paymentMethod | uppercase }} -->\\r\\n            {{ element?.paymentMethod?.paymentType?.paymentDescription | uppercase }}\\r\\n          </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"paidDate\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef > PAID DATE </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getPaymentDetails(element)\\\">\\r\\n            {{ element?.applicationForm?.paidDate | date: 'MM/dd/yyyy' }}\\r\\n            {{ element?.paidDate | date: 'MM/dd/yyyy' }}\\r\\n            {{ element?.paymentMethod?.paymentDate | date: 'MM/dd/yyyy' }}\\r\\n          </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"typeOfMedium\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef > TYPE OF MEDIUM </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getPaymentDetails(element)\\\">\\r\\n            {{ element?.typeOfMedium | uppercase }}\\r\\n            {{ element?.applicationForm?.typeOfMedium | uppercase }}\\r\\n          </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"companyName\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef > PRESENTOR'S COMPANY NAME </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getPaymentDetails(element)\\\">\\r\\n            {{ element?.applicationOwner?.company?.companyName | uppercase }}\\r\\n            {{ element?.applicationForm?.company?.companyName | uppercase }}\\r\\n          </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"paymentStatus\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef > PAYMENT STATUS </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getPaymentDetails(element)\\\">\\r\\n            {{ element?.paymentStatus?.replaceAll('_',' ') | uppercase }}\\r\\n          </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n      </table>\\r\\n      <div class=\\\"no-record\\\" [hidden]=\\\"dataSource && dataSource?.data?.length > 0\\\">\\r\\n        No record found.\\r\\n      </div>\\r\\n      <mat-paginator [pageSize]=\\\"pageSize\\\" [pageIndex]=\\\"pageNo\\\" [length]=\\\"paymentTotalItems\\\"\\r\\n      [pageSizeOptions]=\\\"pageSizeOptions\\\" (page)=\\\"pageEvents($event)\\\">\\r\\n  </mat-paginator>\\r\\n    </div>\\r\\n  </div>\\r\\n\";","export class Affiliation {\r\n    id: number;\r\n    description: string;\r\n    member: boolean;\r\n    status: string;\r\n}\r\n","import { Category, Product } from '@models';\r\n\r\nexport class Brand {\r\n    id: number;\r\n    description: string;\r\n    // product: Product;\r\n    // category: Category;\r\n    status: string;\r\n    penalty: boolean;\r\n  }\r\n","import { Affiliation } from './affiliation.model';\r\nimport { Country } from './country.model';\r\n\r\nexport class Company {\r\n    id: number;\r\n    companyName: string;\r\n    companyTelephoneNo: string;\r\n    companyTin: string;\r\n    country: Country;\r\n    status: string;\r\n    completeAddress: string;\r\n    voucherApproved: boolean\r\n    membersAffiliation: Affiliation;\r\n    delinquent: boolean;\r\n    contactPersonEmail: string;\r\n    contactPersonName: string;\r\n    amountToSettle: number;\r\n    companyMobileNo: string;\r\n    companyTelephoneNo2: string;\r\n}\r\n"],"sourceRoot":"webpack:///"}