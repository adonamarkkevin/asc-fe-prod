{"version":3,"sources":["./src/app/core/models/type-of-document.model.ts","./src/app/core/models/country.model.ts","./src/app/core/models/type-of-reason.model.ts","./src/app/core/models/type-of-application.model.ts","./src/app/modules/pages/accounting/payments/payments-routing.module.ts","./src/app/core/models/s1-application.model.ts","./src/app/core/models/product.model.ts","./src/app/core/models/payment.model.ts","./src/app/core/models/type-of-medium.model.ts","./src/app/core/models/application-multimedia.model.ts","./src/app/core/models/s2-application.model.ts","./src/app/core/models/or-preparation.model.ts","./src/app/modules/pages/accounting/payments/payments.component.ts","./src/app/modules/pages/accounting/payments/payments.component.html","./src/app/core/models/user-account.model.ts","./src/app/core/models/asc-rate.model.ts","./src/app/core/models/application-single-media.model.ts","./src/app/modules/pages/accounting/payments/payments.module.ts","./src/app/core/models/application-request.model.ts","./src/app/core/models/profile.model.ts","./src/app/core/models/attachment-document.model.ts","./src/app/core/models/category.model.ts","./src/app/core/models/supporting-document.model.ts","./src/app/core/models/user-role.model.ts","./src/app/core/models/payment-type.model.ts","./src/app/core/models/or-preparation-reference.model.ts","./src/app/core/models/performance-metrics.model.ts","./src/app/core/models/payment-method.model.ts","./src/app/core/models/index.ts","./src/app/core/models/affiliation.model.ts","./src/app/core/models/brand.model.ts","./src/app/core/models/company.model.ts"],"names":[],"mappings":"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","file":"payments-payments-module-es2015.js","sourcesContent":["export class TypeOfDocument {\n    id: number;\n    description: string;\n    remarksEnable: boolean;\n    basedOnEnable: boolean;\n    variantEnable: boolean;\n    dateOfLaunchEnable: boolean;\n    expiresOnEnable: boolean;\n    inputEnable: boolean;\n    status: string;\n}\n","export class Country {\n  id: number;\n  code: string;\n  name: string;\n}","export class TypeOfReason {\n    id: number;\n    reason: string;\n    status: string;\n}\n","export class TypeOfApplication {\n    id: number;\n    description: string;\n    clearingReleaseTime: String\n    decisionReleaseTime: String\n    sequenceNo: number;\n    status: String\n    submissionEndTime: String;\n    submissionStartTime: String\n}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { PaymentsComponent } from './payments.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PaymentsComponent\n  },\n  {\n    path: ':link',\n    component: PaymentsComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class PaymentsRoutingModule { }\n","import { Company } from './company.model';\nimport { Brand } from './brand.model';\nimport { ApplicationType } from './application-type.model';\nimport { UserAccount } from './user-account.model';\nimport { MultipleApplication } from './multiple-application.model';\nimport { Affiliation } from './affiliation.model';\nimport { ApplicationRequest } from './application-request.model';\nimport { Product } from './product.model';\nimport { TypeOfMedium } from './type-of-medium.model';\n\nexport class S1Application {\n    id: number;\n    company: Company;\n    brand: Brand;\n    adTitle: string;\n    referenceCode: string;\n\n    tagLine: string;\n    materialInformation: string;\n    externalStatus: string\n    internalStatus: string\n    revisionNo: number;\n\n    actionBy: UserAccount;\n    actionStatus: string; // ASSIGN_TO_ADSPE, ASSIGN_TO_REVIEWER, ASSIGN_TO_SCREENER\n    formStatus: string; // OPEN, LOCKED\n    submissionType: string // ORIGINAL, REVISION, COMPLIANCE\n    applicationType: ApplicationType;\n\n    formType: string; // INDIVIDUAL, MULTIPLE\n    autoSubmit: boolean;\n    submissionDate: Date;\n    sequenceOrder: number;\n    countSeries: number;\n\n    refTypeOfMedium: string;\n    assignedUser: UserAccount;\n    applicationOwner: UserAccount;\n    multipleApplication: MultipleApplication;\n    appFormReference: string;\n\n    mainAttachmentReference: string;\n    supportingAttachmentReference: string;\n    paymentAttachmentReference: string;\n    membersAffiliation: Affiliation;\n    decisionStatus: string;\n\n    amount: number;\n    applicationRequest: ApplicationRequest;\n    revisionLetterAttachmentReference: string;\n    assignedEncoder: UserAccount;\n    assignedAdSpecialist: UserAccount;\n\n    assignedScreener: UserAccount;\n    assignedReviewer: UserAccount;\n    verifiedDatetimeByEvaluator: Date;\n    sameDayRelease: boolean;\n    paidByApplicant: boolean;\n\n    archived: boolean;\n    appliedS2: boolean;\n    deliquent: boolean;\n    paymentStatus: string;\n    applicationDate: Date;\n\n    validUntil: Date;\n    previousRefCode: string;\n    hasNoSupportingDocs: boolean;\n    referenceCodeRejected: string;\n\n    hasRevision: boolean;\n    product: Product;\n    hasOngoingRevision: boolean;\n    qrCode: string;\n    barCode: string;\n    screenerDecisionComment: boolean;\n    reviewerDecisionComment: boolean;\n    hasOngoingCompliance: boolean;\n    releaseStatus: string;\n\n    complianceForm: boolean; // param need upon request for compliance\n    emailSent: boolean;\n    forwardToScreener: boolean;\n    forwardToReviewer: boolean;\n    formProcess: string;\n    typeOfMedium: string;\n\n    stampMaterialFileURL: string;\n    stampMaterialFilename: string;\n    decisionFormFileURL : string;\n    decisionFormFilename: string;\n\n    hasOngoingAppeal: boolean;\n    typeOfAppeal: string;\n    appealAttachmentReference: string;\n\n    hasOfficialReceipt: boolean;\n\n    // For AppRequest\n    status: string;\n\n    currentAssignee: string;\n}\n","import { Brand } from './brand.model';\nimport { Category } from './category.model';\n\nexport class Product {\n    id: number;\n    description: string;\n    status: string;\n    brand: Brand;\n    category: Category;\n}\n","import { S1Application } from './s1-application.model';\nimport { PaymentMethod } from './payment-method.model';\nimport { MultipleApplication } from './multiple-application.model';\nimport { S2Application } from './s2-application.model';\n\nexport class Payment {\n    id: number;\n    amountDue: number;\n    amountReceive: number;\n    appFormReference: string;\n    applicationForm: S1Application;\n    basicRate: number;\n    discount: number;\n    filename: string;\n    officialReceiptNo: string;\n    paymentAttachmentReference: string;\n    paymentDate: Date;\n    paymentMethod: PaymentMethod = new PaymentMethod();\n    paymentStatus: string; // PAID, UNPAID\n    remarks: string;\n    status: string;\n    vat: number;\n    withholdingTax: number;\n    amountToSettle: number;\n    companyName: string;\n    companyId: number;\n\n    multipleApplication: MultipleApplication;\n    filedBirForm: boolean = false;\n    applicationFormS2: S2Application;\n\n    constructor() {\n        this.filedBirForm = false;\n        this.remarks = '';\n    }\n}\n","import { TypeOfClearance } from './type-of-clearance.model';\nimport { TypeOfMainDocument } from './type-of-main-document.model';\n\nexport class TypeOfMedium {\n  description: string;\n  executionEnable: boolean;\n  id: number;\n  languageEnable: boolean;\n  lengthEnable: boolean;\n  multimedia: boolean;\n  multimediaMoving: boolean;\n  multimediaStatic: boolean;\n  othersEnable: boolean;\n  singlemedia: boolean;\n  sizeLengthEnable: boolean;\n  status: string;\n  typeOfMainDocument: TypeOfMainDocument;\n  widthEnable: boolean;\n  typeOfClearance: TypeOfClearance;\n\n  // not in BE; for List value\n  enabledFields: string;\n  sizeLength: string;\n}\n","import { TypeOfMedium } from './type-of-medium.model';\n\nexport class ApplicationMultimedia {\n    id: number;\n    amount: number;\n    appFormReference: string;\n    mediaType?: string; // STATIC, MOVING\n    multimediaSizeLength?: string;\n    typeOfMedium?: TypeOfMedium;\n}\n\nexport class ApplicationMultimediaItemsDTO {\n    hasSelected: boolean;\n    id: number;\n    multimediaMovingMedium?: string;\n    multimediaStaticMedium?: string;\n    sizeLength?: number;\n}\n\nexport class ApplicationMultimediaMovingDTO extends ApplicationMultimedia {\n    applicationMultimediaMovingList: ApplicationMultimediaItemsDTO[];\n    sizeLength: number;\n}\n\nexport class ApplicationMultimediaStaticDTO extends ApplicationMultimedia {\n    applicationMultimediaStaticList: ApplicationMultimediaItemsDTO[];\n}\n","import { ApplicationRequest } from './application-request.model';\nimport { S1Application } from './s1-application.model';\nimport { UserAccount } from './user-account.model';\n\nexport class S2Application {\n\n    id: number;\n    actionBy: string;\n    actionStatus: string;\n    applicationDate: Date;\n    applicationForm: S1Application;\n    assignedAdSpecialist: UserAccount;\n    assignedEncoder: UserAccount;\n    assignedUser: UserAccount;\n    complianceDate: Date;\n    decisionStatus: string;\n    externalStatus: string;\n    finalMaterialAttachmentReference: string;\n    formStatus: string;\n    internalStatus: string;\n    issuedDate: Date;\n    paymentStatus: string;\n    specialClearing: boolean;\n    submissionDate: Date;\n    validUntil: Date;\n    validityDate: Date;\n    referenceCodeRejected: string;\n    releaseDate: Date;\n    hasToa: boolean;\n    submissionType: string;\n    applicationRequest: ApplicationRequest;\n    paymentAttachmentReference: string;\n    amount: string;\n    appFormReference: string;\n    hasOngoingCompliance: boolean;\n    formProcess: string;\n    complianceForm: boolean; // param need upon request for compliance\n    hasOngoingAppeal: boolean;\n    typeOfAppeal: string;\n    appealAttachmentReference: string;\n    clearanceToaFileUrl: string;\n    clearanceToaFilename: string;\n    releaseStatus: string;\n    supportingAttachmentReference: string;\n}\n","import { TotalAmountsModel } from './totals.model';\nimport { TypeOfMedium, OrPreparationReference } from '@models';\n\nexport class OrPreparation {\n    amount: number;\n    amountInWords: string;\n    businessStyle: string;\n    companyAddress: string;\n    companyName: string;\n    companyTin: string;\n    controlNumber: string;\n    fullPaymentOf: string;\n    id: number;\n    officialReceiptDate: Date;\n    officialReceiptNo: string;\n    officialReceiptReferences: OrPreparationReference[];\n    remarks: string;\n    status: string;\n    typeOfMedium: TypeOfMedium;\n    voucherControlNumber: string;\n\n    //totals\n    totalSales: number;\n    totalVat: number;\n    totalWithholdingtax: number;\n    totalAmountDue: number;\n\n    // Not if BE; for FE only\n    officialReceiptReferencesValue: string;\n\n    setTotalAmounts(totals: TotalAmountsModel){\n        this.totalSales = totals.totalSales;\n        this.totalAmountDue = totals.totalAmountDue;\n        this.totalVat = totals.totalVat;\n        this.totalWithholdingtax = totals.totalWithholdingtax;\n    }\n}","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Payment } from '@models';\nimport { ApiService, DataStorageService } from '@services';\nimport { ENDPOINTS, PAYMENT_STATUS_LIST, PAYMENT_TYPE, PAYMENT_TYPE_LIST } from '@shared';\nimport { NgxSpinnerService } from 'ngx-spinner';\n\n@Component({\n  selector: 'app-payments',\n  templateUrl: './payments.component.html',\n  styleUrls: ['./payments.component.scss']\n})\nexport class PaymentsComponent implements OnInit {\n  @ViewChild(MatPaginator, { static: false }) paginatorFalse: MatPaginator;\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  pageSize = 10;\n  pageNo = 0;\n  pageSizeOptions: number[] = [10, 20, 50];\n  currentPage = 1;\n  paymentTotalItems = 0;\n  @ViewChild(MatSort, { static: false }) sort: MatSort;\n\n  dataSource: MatTableDataSource<Payment>\n  displayedColumns: string[];\n  paymentTypeList = [...PAYMENT_TYPE_LIST];\n  paymentList = [];\n  paymentType = PAYMENT_TYPE_LIST[0];\n  paymentStatusList = PAYMENT_STATUS_LIST;\n  paymentStatus = 'FOR_APPROVAL';\n\n  linkExtension = '';\n\n  constructor(\n    private router: Router,\n    private apiService: ApiService,\n    private dataStorageService: DataStorageService,\n    private spinner: NgxSpinnerService,\n    private route: ActivatedRoute,\n  ) { }\n\n  ngOnInit(): void {\n    this.linkExtension = this.route.snapshot.paramMap.get('link');\n    if (this.linkExtension === 'schedule-of-fees-individual') {\n      this.paymentType = this.paymentTypeList.filter(filteredList =>\n        filteredList.type === PAYMENT_TYPE.SCHEDULE_OF_FEES_INDIVIDUAL)[0];\n    } else if (this.linkExtension === 'schedule-of-fees-multiple') {\n      this.paymentType = this.paymentTypeList.filter(filteredList =>\n        filteredList.type === PAYMENT_TYPE.SCHEDULE_OF_FEES_MULTIPLE)[0];\n    } else if (this.linkExtension === 'schedule-of-fees-special') {\n      this.paymentType = this.paymentTypeList.filter(filteredList =>\n        filteredList.type === PAYMENT_TYPE.SCHEDULE_OF_FEES_SPECIAL)[0];\n    } else if (this.linkExtension === 'delinquent-companies') {\n      this.paymentType = this.paymentTypeList.filter(filteredList =>\n        filteredList.type === PAYMENT_TYPE.DELINQUENT)[0];\n    } else if (this.linkExtension === 'brand-penalties') {\n      this.paymentType = this.paymentTypeList.filter(filteredList =>\n        filteredList.type === PAYMENT_TYPE.PENALIZED_BRANDS)[0];\n    } else if (this.linkExtension === 'company-penalties') {\n      this.paymentType = this.paymentTypeList.filter(filteredList =>\n        filteredList.type === PAYMENT_TYPE.PENALIZED_COMPANY)[0];\n    } else if (this.linkExtension === 'accounts-receivable') {\n      this.paymentType = this.paymentTypeList.filter(filteredList =>\n        filteredList.type === PAYMENT_TYPE.ACCOUNTS_RECEIVABLE)[0];\n    } \n\n    this.getPaymentList(this.paymentStatus);\n  }\n\n  printRefCode(element){\n    if(element.referenceCode){\n      return element.referenceCode;\n    } else if(element.referenceCodeRejected){\n      return element.referenceCodeRejected;\n    }\n    \n  }\n\n  getByPaymentStatusList(paymentStatus) {\n    this.pageNo = 0;\n    this.getPaymentList(paymentStatus);\n  }\n\n  getPaymentList(paymentStatus) {\n    let param = '';\n    if (paymentStatus !== 'ALL') {\n      param = '&paymentStatus=' + paymentStatus;\n    }\n\n\n    this.currentPage = this.pageNo;\n    this.currentPage++;\n    if (this.currentPage === 0) this.currentPage++;\n\n    this.spinner.show();\n    let endpoint = '';\n    if (this.paymentType.type === PAYMENT_TYPE.SCHEDULE_OF_FEES_INDIVIDUAL) {\n      this.router.navigate(['asc/page/accounting/payments/', 'schedule-of-fees-individual']);\n      this.displayedColumns = [\n        'referenceCode',\n        'typeOfApplication',\n        'brand',\n        'typeOfMedium',\n        'companyName',\n        'paymentStatus'\n      ];\n      //\n      endpoint = ENDPOINTS.scheduleOfFeesMonitoring + `?page=${this.currentPage}&size=${this.pageSize}` + param;\n    } else if (this.paymentType.type === PAYMENT_TYPE.SCHEDULE_OF_FEES_MULTIPLE) {\n      this.router.navigate(['asc/page/accounting/payments/', 'schedule-of-fees-multiple']);\n      this.displayedColumns = [\n        'adTitle', 'typeOfApplication', 'brand', 'product', 'company', 'paymentStatus'\n      ];\n      //\n      endpoint = ENDPOINTS.scheduleOfFeesMultipleMonitoring + `?page=${this.currentPage}&size=${this.pageSize}` + param;\n    } else if (this.paymentType.type === PAYMENT_TYPE.SCHEDULE_OF_FEES_SPECIAL) {\n      this.router.navigate(['asc/page/accounting/payments/', 'schedule-of-fees-special']);\n      this.displayedColumns = [\n        'referenceCode',\n        'typeOfApplication',\n        'brand',\n        'typeOfMedium',\n        'companyName',\n        'paymentStatus'\n      ];\n      endpoint = ENDPOINTS.scheduleOfFeesSpecialMonitoring + `?page=${this.currentPage}&size=${this.pageSize}` + param;\n    } else if (this.paymentType.type === PAYMENT_TYPE.DELINQUENT) {\n      this.router.navigate(['asc/page/accounting/payments/', 'delinquent-companies']);\n      this.displayedColumns = [\n        // 'referenceCode',\n        'company',\n        'membersAffiliation',\n        'companyTelephoneNo',\n        'amount',\n      ];\n      endpoint = ENDPOINTS.delinquentApplications + `?hasDelinquentAppForm=true&page=${this.currentPage}&size=${this.pageSize}`;\n    } else if (this.paymentType.type === PAYMENT_TYPE.PENALIZED_BRANDS) {\n      this.router.navigate(['asc/page/accounting/payments/', 'brand-penalties']);\n      this.displayedColumns = [\n        'referenceCode',\n        'brand',\n        'penaltyDate',\n        'amount',\n        'paymentMethod',\n        'paidDate',\n        'paymentStatus'\n      ];\n      endpoint = ENDPOINTS.penalizedBrandMonitoring + `?page=${this.currentPage}&size=${this.pageSize}` + param?.replace('paymentStatus', 'status');\n    } else if (this.paymentType.type === PAYMENT_TYPE.PENALIZED_COMPANY) {\n      this.router.navigate(['asc/page/accounting/payments/', 'company-penalties']);\n      // endpoint = ENDPOINTS.penalizedCompanyMonitoring;\n      this.displayedColumns = [\n        'referenceCode',\n        'company',\n        'penaltyDate',\n        'amount',\n        'paymentStatus'\n      ];\n      endpoint = ENDPOINTS.companyPenalties + `/custom/search?page=${this.currentPage}&size=${this.pageSize}` + param;\n    } else if (this.paymentType.type === PAYMENT_TYPE.ACCOUNTS_RECEIVABLE) {\n      this.router.navigate(['asc/page/accounting/payments/', 'accounts-receivable']);\n      this.displayedColumns = [\n        'referenceCode',\n        'typeOfApplication',\n        'brand',\n        'typeOfMedium',\n        'companyName',\n        'paymentStatus'\n      ];\n      endpoint = ENDPOINTS.scheduleOfFeesMonitoring + `?hasPromissoryNote=true&page=${this.currentPage}&size=${this.pageSize}` + param;\n    }\n    console.log(endpoint);\n\n    this.apiService.findAll(endpoint).subscribe((res: any) => {\n      if (res.data) {\n        this.paymentList = res.data;\n      } else if (res.responseData) {\n        this.paymentList = res.responseData.data;\n      } else if (res) {\n        this.paymentList = res;\n      } else {\n        this.paymentList = [];\n      }\n\n      this.paymentTotalItems = res.totalItems;\n      this.dataSource = new MatTableDataSource<Payment>(this.paymentList);\n      // this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n      this.paymentTotalItems = res.totalItems\n      this.spinner.hide();\n      console.log('datasource', this.dataSource.data);\n    }, (err: any) => {\n      this.paymentList = [];\n      this.dataSource = new MatTableDataSource<Payment>(this.paymentList);\n      \n      this.spinner.hide();\n    });\n  }\n\n\n  pageEvents(event: any) {\n    this.pageSize = event.pageSize;\n\n    if (event.pageIndex > this.pageNo) {\n      this.pageNo++;\n    } else {\n      this.pageNo--;\n    }\n\n    if (event.pageSize > event.length) {\n      this.pageNo = 0;\n    }\n\n    this.getPaymentList(this.paymentStatus);\n  }\n\n  setPageSizeOptions(setPageSizeOptionsInput: string) {\n    if (setPageSizeOptionsInput) {\n      this.pageSizeOptions = setPageSizeOptionsInput.split(',').map(str => +str);\n    }\n  }\n\n\n  comparePaymentType(value: any, selected: any): boolean {\n    if (value && selected) {\n      return value.type === selected.type;\n    }\n  }\n\n  getPaymentDetails(elm) {\n    if (this.paymentType.type === PAYMENT_TYPE.SCHEDULE_OF_FEES_INDIVIDUAL) {\n      this.router.navigate(['asc/page/accounting/update/', elm.paymentStatus.toLowerCase() + '-' + elm.id]);\n    } else if (this.paymentType.type === PAYMENT_TYPE.SCHEDULE_OF_FEES_MULTIPLE) {\n      if (elm?.paymentStatus) {\n        this.router.navigate(['asc/page/accounting/update/', `${elm?.paymentStatus?.toLowerCase()}-${elm.id}`, `multiple-${elm.id}`]);\n      } else {\n        this.router.navigate(['asc/page/accounting/update/', `multiple-${elm.id}`]);\n      }\n    } else if (this.paymentType.type === PAYMENT_TYPE.SCHEDULE_OF_FEES_SPECIAL) {\n      if (elm?.paymentStatus) {\n        this.router.navigate(['asc/page/accounting/update/', `${elm?.paymentStatus?.toLowerCase()}-${elm.id}`, `special-${elm.id}`]);\n      } else {\n        this.router.navigate(['asc/page/accounting/update/', `special-${elm.id}`]);\n      }\n    } else if (this.paymentType.type === PAYMENT_TYPE.DELINQUENT) {\n      const payment = new Payment();\n      payment.amountDue = elm.amountToSettle;\n      payment.applicationForm = elm;\n      payment.appFormReference = elm.appFormReference;\n      payment.companyId = elm.id;\n\n      this.dataStorageService.setPayment(payment);\n      this.router.navigate(['asc/page/accounting/add-penalty/update/', 'delinquent', elm.id]);\n    } else if (this.paymentType.type === PAYMENT_TYPE.PENALIZED_BRANDS) {\n      this.router.navigate(['asc/page/accounting/add-penalty/update/', 'brand', elm.id]);\n    } else if (this.paymentType.type === PAYMENT_TYPE.PENALIZED_COMPANY) {\n      this.router.navigate(['asc/page/accounting/add-penalty/update/', 'company', elm?.company?.id]);\n    }\n  }\n\n  openComponent() {\n    if (this.paymentType.type === PAYMENT_TYPE.PENALIZED_BRANDS) {\n      this.router.navigate(['asc/page/accounting/add-penalty', 'brand']);\n    } else if (this.paymentType.type === PAYMENT_TYPE.PENALIZED_COMPANY) {\n      this.router.navigate(['asc/page/accounting/add-penalty', 'company']);\n    }\n  }\n\n}\n","<form>\n  <div class=\"container-fluid\">\n    <div class=\"row\">\n      <div class=\"col-md-12 title\">\n        <mat-label>\n          <mat-icon>payments</mat-icon> PAYMENT LIST\n        </mat-label>\n      </div>\n    </div>\n    <br>\n\n    <div class=\"row\">\n      <div class=\"col-md-8\">\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n          <mat-select [(ngModel)]=\"paymentType\" name=\"paymentType\" placeholder=\"Type of Payment\"\n            [compareWith]=\"comparePaymentType\">\n            <mat-option *ngFor=\"let i of paymentTypeList\" [value]=\"i\" (click)=\"getByPaymentStatusList(paymentStatus)\">\n              {{i?.type?.replace('SPECIAL','S2 SPECIAL CLEARING')}}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n      </div>\n\n      <div class=\"col-md-4\">\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\" [hidden]=\"paymentType?.type === 'DELINQUENT'\">\n          <mat-select [(ngModel)]=\"paymentStatus\" name=\"paymentStatus\">\n            <mat-option *ngFor=\"let i of paymentStatusList\" [value]=\"i.type\" (click)=\"getByPaymentStatusList(paymentStatus)\">\n              {{i?.type?.replaceAll('_', ' ')}}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n        <button mat-raised-button class=\"button-right button-red\" (click)=\"openComponent()\"\n          *ngIf=\"paymentType?.type === 'PENALIZED BRANDS' || paymentType?.type === 'PENALIZED COMPANY' \">\n          <i class=\"material-icons color__white\">task_alt</i> ADD PENALTY\n        </button>\n      </div>\n\n    <div class=\"mat-elevation-z8 fields\">\n      <table mat-table [dataSource]=\"dataSource\" matSort>\n\n        <ng-container matColumnDef=\"referenceCode\">\n          <th mat-header-cell *matHeaderCellDef > REFERENCE CODE </th>\n          <td mat-cell *matCellDef=\"let element\" (click)=\"getPaymentDetails(element)\">\n            <!-- {{ element?.referenceCode }}\n            {{ element?.applicationForm?.referenceCode | uppercase }}\n            {{ element?.brandPenaltyAttachmentReference | uppercase }} -->\n            {{printRefCode(element)}}\n          </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"adTitle\">\n          <th mat-header-cell *matHeaderCellDef > AD TITLE </th>\n          <td mat-cell *matCellDef=\"let element\" (click)=\"getPaymentDetails(element)\">\n            {{ element?.adTitle | uppercase }}\n            {{ element?.multipleApplication?.adTitle | uppercase }}\n          </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"typeOfApplication\">\n          <th mat-header-cell *matHeaderCellDef > TYPE OF APPLICATION </th>\n          <td mat-cell *matCellDef=\"let element\" (click)=\"getPaymentDetails(element)\">\n            {{ element?.applicationType?.description | uppercase }}\n            {{ element?.applicationForm?.applicationType?.description | uppercase }}\n            {{ element?.formType?.replaceAll('_',' ') | uppercase }}\n            {{ element?.multipleApplication?.applicationType?.description?.replaceAll('_',' ') | uppercase }}\n          </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"brand\">\n          <th mat-header-cell *matHeaderCellDef > BRAND </th>\n          <td mat-cell *matCellDef=\"let element\" (click)=\"getPaymentDetails(element)\">\n            {{ element?.applicationForm?.brand?.description | uppercase }}\n            {{ element?.brand?.description | uppercase }}\n            {{ element?.multipleApplication?.brand?.description | uppercase }}\n          </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"product\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> PRODUCT</th>\n          <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"getPaymentDetails(element)\">\n            {{element?.product?.description | uppercase}}\n            {{ element?.multipleApplication?.product?.description | uppercase }}</td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"company\">\n            <th mat-header-cell *matHeaderCellDef > PRESENTOR'S COMPANY NAME </th>\n            <td mat-cell *matCellDef=\"let element\" (click)=\"getPaymentDetails(element)\">\n              {{ element?.applicationOwner?.company?.companyName | uppercase }}\n              {{ element?.companyName | uppercase }}\n              {{ element?.multipleApplication?.company?.companyName | uppercase }}</td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"companyTelephoneNo\">\n          <th mat-header-cell *matHeaderCellDef > Telephone No </th>\n          <td mat-cell *matCellDef=\"let element\" (click)=\"getPaymentDetails(element)\">\n            {{ element?.companyTelephoneNo | uppercase }}<br>\n            {{ element?.companyTelephoneNo2 | uppercase }}\n          </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"membersAffiliation\">\n          <th mat-header-cell *matHeaderCellDef > MEMBERS AFFILIATION </th>\n          <td mat-cell *matCellDef=\"let element\" (click)=\"getPaymentDetails(element)\">\n            {{ element?.membersAffiliation?.description | uppercase }}\n          </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"penaltyDate\">\n          <th mat-header-cell *matHeaderCellDef > PENALTY DATE </th>\n          <td mat-cell *matCellDef=\"let element\" (click)=\"getPaymentDetails(element)\">\n            {{ element?.penaltyDate | date: 'MM/dd/yyyy' }}\n          </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"amount\">\n          <th mat-header-cell *matHeaderCellDef > AMOUNT </th>\n          <td mat-cell *matCellDef=\"let element\" (click)=\"getPaymentDetails(element)\">\n            {{ element?.amount }}\n            {{ element?.penaltyAmount }}\n            {{ element?.amountToSettle }}\n          </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"paymentMethod\">\n          <th mat-header-cell *matHeaderCellDef > PAYMENT METHOD </th>\n          <td mat-cell *matCellDef=\"let element\" (click)=\"getPaymentDetails(element)\">\n            <!-- {{ element?.paymentMethod | uppercase }} -->\n            {{ element?.paymentMethod?.paymentType?.paymentDescription | uppercase }}\n          </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"paidDate\">\n          <th mat-header-cell *matHeaderCellDef > PAID DATE </th>\n          <td mat-cell *matCellDef=\"let element\" (click)=\"getPaymentDetails(element)\">\n            {{ element?.applicationForm?.paidDate | date: 'MM/dd/yyyy' }}\n            {{ element?.paidDate | date: 'MM/dd/yyyy' }}\n            {{ element?.paymentMethod?.paymentDate | date: 'MM/dd/yyyy' }}\n          </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"typeOfMedium\">\n          <th mat-header-cell *matHeaderCellDef > TYPE OF MEDIUM </th>\n          <td mat-cell *matCellDef=\"let element\" (click)=\"getPaymentDetails(element)\">\n            {{ element?.typeOfMedium | uppercase }}\n            {{ element?.applicationForm?.typeOfMedium | uppercase }}\n          </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"companyName\">\n          <th mat-header-cell *matHeaderCellDef > PRESENTOR'S COMPANY NAME </th>\n          <td mat-cell *matCellDef=\"let element\" (click)=\"getPaymentDetails(element)\">\n            {{ element?.applicationOwner?.company?.companyName | uppercase }}\n            {{ element?.applicationForm?.company?.companyName | uppercase }}\n          </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"paymentStatus\">\n          <th mat-header-cell *matHeaderCellDef > PAYMENT STATUS </th>\n          <td mat-cell *matCellDef=\"let element\" (click)=\"getPaymentDetails(element)\">\n            {{ element?.paymentStatus?.replaceAll('_',' ') | uppercase }}\n          </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n      </table>\n      <div class=\"no-record\" [hidden]=\"dataSource && dataSource?.data?.length > 0\">\n        No record found.\n      </div>\n      <mat-paginator [pageSize]=\"pageSize\" [pageIndex]=\"pageNo\" [length]=\"paymentTotalItems\"\n      [pageSizeOptions]=\"pageSizeOptions\" (page)=\"pageEvents($event)\">\n  </mat-paginator>\n    </div>\n  </div>\n","import { Affiliation, Company, UserRole } from '@models';\n\nexport class UserAccount {\n    id: number;\n    username: string;\n    password: string;\n    firstName: string;\n    middleName: string;\n    lastName: string;\n    company: Company;\n    membersAffiliationDto: Affiliation;\n    mobileNumber: string;\n    userRole: UserRole;\n    status: string;\n    acceptTerms: boolean;\n    accountType: string;\n    // locked: Boolean;\n    // enabled: Boolean;\n    ascDefault:\tboolean;\n    membersAffiliation:\tAffiliation;\n    scheduledUser:\tboolean;\n    signatureAttachmentReference:\tstring;\n}\n","import { TypeOfExecution } from './type-of-execution.model';\nimport { TypeOfMedium } from './type-of-medium.model';\n\nexport class AscRate {\n    id: number;\n    lengthFrom: number;\n    lengthTo: number;\n    memberOffline: number;\n    memberOnline: number;\n    nonMemberOffline: number;\n    nonMemberOnline: number;\n    status: string;\n    typeOfExecution: TypeOfExecution;\n    typeOfMedium: TypeOfMedium;\n}","import { Dialect } from './dialect.model';\nimport { MediumExecution } from './medium-execution.model';\n\nexport class ApplicationSingleMedia {\n    id: number;\n    amount: number;\n    appFormReference: string;\n    dialect: Dialect;\n    language: string;\n    others: string;\n    sizeLength: string;\n    mediumExecution: MediumExecution;\n    width: string;\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { PaymentsRoutingModule } from './payments-routing.module';\nimport { PaymentsComponent } from './payments.component';\nimport { AngularMaterialModule } from '@shared';\n\n\n@NgModule({\n  declarations: [PaymentsComponent],\n  imports: [\n    CommonModule,\n    PaymentsRoutingModule,\n    AngularMaterialModule\n  ]\n})\nexport class PaymentsModule { }\n","import { Company } from '@models'\nimport { Affiliation } from './affiliation.model';\nimport { ApplicationType } from './application-type.model'\nimport { Brand } from './brand.model'\nimport { Category } from './category.model';\nimport { Product } from './product.model';\nimport { S1Application } from './s1-application.model';\nimport { UserAccount } from './user-account.model'\n\nexport class ApplicationRequest {\n    id: number;\n    adTitle: string;\n    applicationOwner: UserAccount;\n    applicationType: ApplicationType;\n    brand: Brand;\n    company: Company;\n    status: string;\n    submissionDate: Date;\n    tagLine: string\n    submitApplicationForm: boolean;\n    formType: string;\n    hasSpecialClearing: boolean;\n    applicationForm: S1Application;\n    product: Product;\n}\n","export class Profile {\n    id: number;\n    name: string;\n}\n","import { S1Application } from './s1-application.model';\nimport { S2Application } from './s2-application.model';\n\nexport class AttachmentDocument {\n    id: number;\n    applicationId: S1Application;\n    applicationS2Id: S2Application;\n    attachmentType: string; // MAIN, SUPPORTIVE, PAYMENT\n    autoSubmit: boolean;\n    brandPenaltyAttachmentReference: string;\n    documentFormat: string;\n    fileExtension: string;\n    fileURL: string;\n    filename: string;\n    mainAttachmentReference: string;\n    supportingAttachmentReference: string;\n    paymentAttachmentReference: string;\n    revisionLetterAttachmentReference: string;\n    finalMaterialAttachmentReference: string;\n    originalFilename: string;\n    status: string;\n    submissionType: string; // ORIGINAL, REVISION, COMPLIANCE, TOA\n    voucherAttachmentReference: string;\n    applicationFormId: string; // for compliance used only\n    applicationForm: string;\n    appFormReference: string;\n    modifiedApprovedS1AttachmentReference: string;\n    fileSize: number\n\n    createdBy: string;\n    createdDate: Date;\n    modifiedBy: string;\n    modifiedDate: Date;\n}\n","import { Product } from './product.model';\n\nexport class Category {\n    id: number;\n    description: string;\n    status: string;\n}\n","import { TypeOfDocument } from './type-of-document.model';\nimport { S1Application } from './s1-application.model';\n\nexport class SupportingDocument {\n    id: number;\n    appFormReference: S1Application;\n    typeOfDocument: TypeOfDocument;\n    basedOn: string;\n    variant: string;\n    dateOfLaunch: Date;\n    expiresOn: Date;\n    remarks: string;\n    input: string;\n\n    createdBy: string;\n    createdDate: Date;\n    modifiedBy: string;\n    modifiedDate: Date;\n}\n","export class UserRole {\n    id: number;\n    name: string;\n    status: string;\n}\n","export class PaymentType {\n    id: number;\n    amount: boolean;\n    bankBranch: boolean;\n    bankName: boolean;\n    controlNo: boolean;\n    fundTransferDate: boolean;\n    paymentDescription: string;\n    promisorryDate: boolean;\n    referenceNo: boolean;\n    status: string;\n}\n","export class OrPreparationReference {\n    id: number;\n    reference: string;\n    amount: number;\n}","export class PerformanceMetrics {\n    id: number;\n    referenceCode: string;\n    appFormReference: string;\n    movement: string;\n    actionBy: string;\n    userRole: string;\n    currentDateTime: Date;\n    previousDateTime: Date;\n    duration: string;\n}\n","import { PaymentType } from \"./payment-type.model\";\n\nexport class PaymentMethod {\n    id: number;\n    paymentType: PaymentType;\n    referenceNo: string;\n    controlNo: string;\n    paymentDate: Date;\n    amount: number;\n    bankName: string\n    bankBranch: string;\n    promisorryDate: Date;\n    ccConfirmationCode: string;\n    checkNo: string;\n}\n","export * from './affiliation.model';\nexport * from './brand.model';\nexport * from './company.model';\nexport * from './payment-type.model';\nexport * from './profile.model';\nexport * from './s1-application.model';\nexport * from './s2-application.model';\nexport * from './type-of-document.model';\nexport * from './type-of-medium.model';\nexport * from './type-of-reason.model';\nexport * from './user-role.model';\nexport * from './user-account.model';\nexport * from './attachment-document.model';\nexport * from './category.model';\nexport * from './product.model';\nexport * from './type-of-application.model';\nexport * from './asc-rate.model';\nexport * from './payment.model';\nexport * from './country.model';\nexport * from './performance-metrics.model';\nexport * from './or-preparation.model';\nexport * from './or-preparation-reference.model';\nexport * from './supporting-document.model';\nexport * from './application-single-media.model';\nexport * from './application-request.model';\nexport * from './application-multimedia.model';\n","export class Affiliation {\n    id: number;\n    description: string;\n    member: boolean;\n    status: string;\n}\n","import { Category, Product } from '@models';\n\nexport class Brand {\n    id: number;\n    description: string;\n    // product: Product;\n    // category: Category;\n    status: string;\n    penalty: boolean;\n  }\n","import { Affiliation } from './affiliation.model';\nimport { Country } from './country.model';\n\nexport class Company {\n    id: number;\n    companyName: string;\n    companyTelephoneNo: string;\n    companyTin: string;\n    country: Country;\n    status: string;\n    completeAddress: string;\n    voucherApproved: boolean\n    membersAffiliation: Affiliation;\n    delinquent: boolean;\n    contactPersonEmail: string;\n    contactPersonName: string;\n    amountToSettle: number;\n    companyMobileNo: string;\n    companyTelephoneNo2: string;\n}\n"],"sourceRoot":"webpack:///"}