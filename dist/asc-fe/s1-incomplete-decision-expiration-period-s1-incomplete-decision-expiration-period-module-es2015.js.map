{"version":3,"sources":["./src/app/modules/fragments/index.ts","./src/app/modules/pages/maintenance/s1-incomplete-decision-expiration-period/s1-incomplete-decision-expiration-period.module.ts","./src/app/modules/pages/maintenance/s1-incomplete-decision-expiration-period/s1-incomplete-decision-expiration-period.component.ts","./src/app/modules/pages/maintenance/s1-incomplete-decision-expiration-period/s1-incomplete-decision-expiration-period.component.html","./src/app/modules/pages/maintenance/s1-incomplete-decision-expiration-period/s1-incomplete-decision-expiration-period-routing.module.ts"],"names":[],"mappings":"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","file":"s1-incomplete-decision-expiration-period-s1-incomplete-decision-expiration-period-module-es2015.js","sourcesContent":["export * from './form-action-buttons/form-action-buttons.component';\r\nexport * from './form-list/form-list.component';","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { S1IncompleteDecisionExpirationPeriodRoutingModule } from './s1-incomplete-decision-expiration-period-routing.module';\r\nimport { FragmentsModule } from 'app/modules/fragments/fragments.module';\r\nimport { AngularMaterialModule } from '@shared';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { S1IncompleteDecisionExpirationPeriodComponent } from './s1-incomplete-decision-expiration-period.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    S1IncompleteDecisionExpirationPeriodComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    S1IncompleteDecisionExpirationPeriodRoutingModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule,\r\n    AngularMaterialModule,\r\n    FragmentsModule,\r\n  ]\r\n})\r\nexport class S1IncompleteDecisionExpirationPeriodModule { }\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { FormListComponent } from '@fragments';\r\nimport { ApiService, SweetAlertService } from '@services';\r\nimport { ENDPOINTS } from '@shared';\r\nimport { S1SettlementOrExpirationPeriod } from 'app/core/models/s1-settlement-or-expiration-period.model';\r\nimport { ValidateFieldService } from 'app/core/services/validate-field.service';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-s1-incomplete-decision-expiration-period',\r\n  templateUrl: './s1-incomplete-decision-expiration-period.component.html',\r\n  styleUrls: ['./s1-incomplete-decision-expiration-period.component.scss']\r\n})\r\nexport class S1IncompleteDecisionExpirationPeriodComponent implements OnInit {\r\n\r\n  @ViewChild(FormListComponent) formListComponent: FormListComponent;\r\n  dataSource: MatTableDataSource<S1SettlementOrExpirationPeriod>;\r\n  displayedColumns: string[] = ['noOfWorkingDays'];\r\n\r\n  s1IncompleteDecisionExpirationPeriod = new S1SettlementOrExpirationPeriod();\r\n  s1IncompleteDecisionExpirationPeriodList = [];\r\n\r\n  s1IncompleteDecisionExpirationPeriodForm: FormGroup;\r\n\r\n\r\n  constructor(\r\n    private apiService: ApiService,\r\n    private formBuilder: FormBuilder,\r\n    private sweetAlertService: SweetAlertService,\r\n    public validateFieldService: ValidateFieldService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.getList();\r\n    this.setFormValidator();\r\n  }\r\n\r\n  getList(): void {\r\n    this.apiService.findAll(ENDPOINTS.s1IncompleteDecisionExpirationPeriod).subscribe((res: any) => {\r\n      this.s1IncompleteDecisionExpirationPeriodList = res.responseData.data;\r\n      this.dataSource = new MatTableDataSource<S1SettlementOrExpirationPeriod>(res.responseData.data);\r\n      this.dataSource.paginator = this.formListComponent.paginator;\r\n      this.dataSource.sort = this.formListComponent.sort;\r\n    });\r\n  }\r\n\r\n  save(): void {\r\n    this.apiService.save(ENDPOINTS.s1IncompleteDecisionExpirationPeriod, this.s1IncompleteDecisionExpirationPeriod).subscribe(\r\n      (res: any) => {\r\n        if (res !== undefined) {\r\n          this.sweetAlertService.success(res);\r\n        }\r\n      }, (err: any) => {\r\n        if (!Number(this.s1IncompleteDecisionExpirationPeriod.noOfWorkingDays)) {\r\n          err.error.message = 'Please enter numeric values only';\r\n        } else {\r\n          err.error.message = 'Default Number of working days have already been set. Select the entry to update the record';\r\n        }\r\n        this.sweetAlertService.error(err);\r\n      }, () => {\r\n        this.resetFormValidator(),\r\n          this.getList();\r\n      }\r\n    )\r\n  }\r\n\r\n  getS1IncompleteDecisionExpirationPeriod(): void {\r\n    this.apiService.findById(ENDPOINTS.s1IncompleteDecisionExpirationPeriod, this.formListComponent.idForUpdate).subscribe((res: any) => {\r\n      if (res) {\r\n        this.s1IncompleteDecisionExpirationPeriod = res.responseData.data;\r\n        console.log(res);\r\n\r\n      }\r\n    });\r\n  }\r\n\r\n  update(): void {\r\n    this.apiService.update(ENDPOINTS.s1IncompleteDecisionExpirationPeriod, this.s1IncompleteDecisionExpirationPeriod).subscribe(\r\n      (res: any) => {\r\n        if (res !== undefined) {\r\n          this.sweetAlertService.success(res);\r\n        }\r\n      }, (err: any) => {\r\n        this.sweetAlertService.error(err);\r\n      }, () => {\r\n        this.resetFormValidator()\r\n        this.getList();\r\n      });\r\n  }\r\n\r\n  setFormValidator(): void {\r\n    this.s1IncompleteDecisionExpirationPeriodForm = this.formBuilder.group({\r\n      noOfWorkingDays: ['', Validators.required],\r\n    });\r\n  }\r\n\r\n  resetFormValidator(): void {\r\n    this.s1IncompleteDecisionExpirationPeriod = new S1SettlementOrExpirationPeriod();\r\n    this.s1IncompleteDecisionExpirationPeriodForm.markAsUntouched();\r\n    this.s1IncompleteDecisionExpirationPeriodForm.markAsPristine();\r\n  }\r\n\r\n  delete() {\r\n    Swal.fire({\r\n      text: 'Are you sure you want to delete this announcement?',\r\n      icon: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Confirm'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.apiService.deleteById(ENDPOINTS.s1IncompleteDecisionExpirationPeriod, this.s1IncompleteDecisionExpirationPeriod.id).subscribe(\r\n          () => {\r\n            this.sweetAlertService.customSuccessMessage('S1 incomplete decision expiration period successfully deleted.');\r\n            this.resetFormValidator();\r\n            this.getList();\r\n          }\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<form>\r\n    <div class=\"container-fluid\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-12 title\">\r\n                <mat-label>\r\n                    S1 Incomplete Decision Expiration Period\r\n                </mat-label>\r\n            </div>\r\n        </div>\r\n        <hr>\r\n\r\n        <form [formGroup]=\"s1IncompleteDecisionExpirationPeriodForm\">\r\n            <div class=\"row\">\r\n                <mat-form-field class=\"col-md-8\" appearance=\"outline\">\r\n                    <mat-label>Number of Working Days <span class=\"required-field\">*</span></mat-label>\r\n                    <input matInput [(ngModel)]=\"s1IncompleteDecisionExpirationPeriod.noOfWorkingDays\"\r\n                        name=\"noOfWorkingDays\" (keydown)=\"validateFieldService.numbersOnly($event)\"\r\n                        formControlName=\"noOfWorkingDays\">\r\n                </mat-form-field>\r\n            </div>\r\n        </form>\r\n\r\n        <app-form-action-buttons [childObject]=\"s1IncompleteDecisionExpirationPeriod\"\r\n            [childForm]=\"s1IncompleteDecisionExpirationPeriodForm\" (saveFunction)=\"save()\" (updateFunction)=\"update()\"\r\n            (cancelFunction)=\"resetFormValidator()\" (deleteFunction)=\"delete()\">\r\n        </app-form-action-buttons>\r\n        <br>\r\n        <app-form-list [dataSource]=\"dataSource\" [displayedColumns]=\"displayedColumns\"\r\n            (selectInListFunction)=\"getS1IncompleteDecisionExpirationPeriod()\"></app-form-list>\r\n\r\n    </div>\r\n</form>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { S1IncompleteDecisionExpirationPeriodComponent } from './s1-incomplete-decision-expiration-period.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: S1IncompleteDecisionExpirationPeriodComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class S1IncompleteDecisionExpirationPeriodRoutingModule { }\r\n"],"sourceRoot":"webpack:///"}