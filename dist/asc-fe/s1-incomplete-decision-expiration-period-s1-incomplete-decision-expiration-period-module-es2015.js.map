{"version":3,"sources":["./src/app/modules/fragments/index.ts","./src/app/modules/pages/maintenance/s1-incomplete-decision-expiration-period/s1-incomplete-decision-expiration-period.module.ts","./src/app/modules/pages/maintenance/s1-incomplete-decision-expiration-period/s1-incomplete-decision-expiration-period.component.scss","./src/app/modules/pages/maintenance/s1-incomplete-decision-expiration-period/s1-incomplete-decision-expiration-period.component.ts","./src/app/modules/pages/maintenance/s1-incomplete-decision-expiration-period/s1-incomplete-decision-expiration-period.component.html","./src/app/modules/pages/maintenance/s1-incomplete-decision-expiration-period/s1-incomplete-decision-expiration-period-routing.module.ts"],"names":[],"mappings":"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","file":"s1-incomplete-decision-expiration-period-s1-incomplete-decision-expiration-period-module-es2015.js","sourcesContent":["export * from './form-action-buttons/form-action-buttons.component';\r\nexport * from './form-list/form-list.component';","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { S1IncompleteDecisionExpirationPeriodRoutingModule } from './s1-incomplete-decision-expiration-period-routing.module';\r\nimport { FragmentsModule } from 'app/modules/fragments/fragments.module';\r\nimport { AngularMaterialModule } from '@shared';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { S1IncompleteDecisionExpirationPeriodComponent } from './s1-incomplete-decision-expiration-period.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    S1IncompleteDecisionExpirationPeriodComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    S1IncompleteDecisionExpirationPeriodRoutingModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule,\r\n    AngularMaterialModule,\r\n    FragmentsModule,\r\n  ]\r\n})\r\nexport class S1IncompleteDecisionExpirationPeriodModule { }\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcGFnZXMvbWFpbnRlbmFuY2UvczEtaW5jb21wbGV0ZS1kZWNpc2lvbi1leHBpcmF0aW9uLXBlcmlvZC9zMS1pbmNvbXBsZXRlLWRlY2lzaW9uLWV4cGlyYXRpb24tcGVyaW9kLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { FormListComponent } from '@fragments';\r\nimport { ApiService, SweetAlertService } from '@services';\r\nimport { ENDPOINTS } from '@shared';\r\nimport { S1SettlementOrExpirationPeriod } from 'app/core/models/s1-settlement-or-expiration-period.model';\r\nimport { ValidateFieldService } from 'app/core/services/validate-field.service';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-s1-incomplete-decision-expiration-period',\r\n  templateUrl: './s1-incomplete-decision-expiration-period.component.html',\r\n  styleUrls: ['./s1-incomplete-decision-expiration-period.component.scss']\r\n})\r\nexport class S1IncompleteDecisionExpirationPeriodComponent implements OnInit {\r\n\r\n  @ViewChild(FormListComponent) formListComponent: FormListComponent;\r\n  dataSource: MatTableDataSource<S1SettlementOrExpirationPeriod>;\r\n  displayedColumns: string[] = ['noOfWorkingDays'];\r\n\r\n  s1IncompleteDecisionExpirationPeriod = new S1SettlementOrExpirationPeriod();\r\n  s1IncompleteDecisionExpirationPeriodList = [];\r\n\r\n  s1IncompleteDecisionExpirationPeriodForm: FormGroup;\r\n\r\n\r\n  constructor(\r\n    private apiService: ApiService,\r\n    private formBuilder: FormBuilder,\r\n    private sweetAlertService: SweetAlertService,\r\n    public validateFieldService: ValidateFieldService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.getList();\r\n    this.setFormValidator();\r\n  }\r\n\r\n  getList(): void {\r\n    this.apiService.findAll(ENDPOINTS.s1IncompleteDecisionExpirationPeriod).subscribe((res: any) => {\r\n      this.s1IncompleteDecisionExpirationPeriodList = res.responseData.data;\r\n      this.dataSource = new MatTableDataSource<S1SettlementOrExpirationPeriod>(res.responseData.data);\r\n      this.dataSource.paginator = this.formListComponent.paginator;\r\n      this.dataSource.sort = this.formListComponent.sort;\r\n    });\r\n  }\r\n\r\n  save(): void {\r\n    this.apiService.save(ENDPOINTS.s1IncompleteDecisionExpirationPeriod, this.s1IncompleteDecisionExpirationPeriod).subscribe(\r\n      (res: any) => {\r\n        if (res !== undefined) {\r\n          this.sweetAlertService.success(res);\r\n        }\r\n      }, (err: any) => {\r\n        if (!Number(this.s1IncompleteDecisionExpirationPeriod.noOfWorkingDays)) {\r\n          err.error.message = 'Please enter numeric values only';\r\n        } else {\r\n          err.error.message = 'Default Number of working days have already been set. Select the entry to update the record';\r\n        }\r\n        this.sweetAlertService.error(err);\r\n      }, () => {\r\n        this.resetFormValidator(),\r\n          this.getList();\r\n      }\r\n    )\r\n  }\r\n\r\n  getS1IncompleteDecisionExpirationPeriod(): void {\r\n    this.apiService.findById(ENDPOINTS.s1IncompleteDecisionExpirationPeriod, this.formListComponent.idForUpdate).subscribe((res: any) => {\r\n      if (res) {\r\n        this.s1IncompleteDecisionExpirationPeriod = res.responseData.data;\r\n        console.log(res);\r\n\r\n      }\r\n    });\r\n  }\r\n\r\n  update(): void {\r\n    this.apiService.update(ENDPOINTS.s1IncompleteDecisionExpirationPeriod, this.s1IncompleteDecisionExpirationPeriod).subscribe(\r\n      (res: any) => {\r\n        if (res !== undefined) {\r\n          this.sweetAlertService.success(res);\r\n        }\r\n      }, (err: any) => {\r\n        this.sweetAlertService.error(err);\r\n      }, () => {\r\n        this.resetFormValidator()\r\n        this.getList();\r\n      });\r\n  }\r\n\r\n  setFormValidator(): void {\r\n    this.s1IncompleteDecisionExpirationPeriodForm = this.formBuilder.group({\r\n      noOfWorkingDays: ['', Validators.required],\r\n    });\r\n  }\r\n\r\n  resetFormValidator(): void {\r\n    this.s1IncompleteDecisionExpirationPeriod = new S1SettlementOrExpirationPeriod();\r\n    this.s1IncompleteDecisionExpirationPeriodForm.markAsUntouched();\r\n    this.s1IncompleteDecisionExpirationPeriodForm.markAsPristine();\r\n  }\r\n\r\n  delete() {\r\n    Swal.fire({\r\n      text: 'Are you sure you want to delete this announcement?',\r\n      icon: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Confirm'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.apiService.deleteById(ENDPOINTS.s1IncompleteDecisionExpirationPeriod, this.s1IncompleteDecisionExpirationPeriod.id).subscribe(\r\n          () => {\r\n            this.sweetAlertService.customSuccessMessage('S1 incomplete decision expiration period successfully deleted.');\r\n            this.resetFormValidator();\r\n            this.getList();\r\n          }\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","export default \"<form>\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12 title\\\">\\r\\n                <mat-label>\\r\\n                    S1 Incomplete Decision Expiration Period\\r\\n                </mat-label>\\r\\n            </div>\\r\\n        </div>\\r\\n        <hr>\\r\\n\\r\\n        <form [formGroup]=\\\"s1IncompleteDecisionExpirationPeriodForm\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <mat-form-field class=\\\"col-md-8\\\" appearance=\\\"outline\\\">\\r\\n                    <mat-label>Number of Working Days <span class=\\\"required-field\\\">*</span></mat-label>\\r\\n                    <input matInput [(ngModel)]=\\\"s1IncompleteDecisionExpirationPeriod.noOfWorkingDays\\\"\\r\\n                        name=\\\"noOfWorkingDays\\\" (keydown)=\\\"validateFieldService.numbersOnly($event)\\\"\\r\\n                        formControlName=\\\"noOfWorkingDays\\\">\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n        </form>\\r\\n\\r\\n        <app-form-action-buttons [childObject]=\\\"s1IncompleteDecisionExpirationPeriod\\\"\\r\\n            [childForm]=\\\"s1IncompleteDecisionExpirationPeriodForm\\\" (saveFunction)=\\\"save()\\\" (updateFunction)=\\\"update()\\\"\\r\\n            (cancelFunction)=\\\"resetFormValidator()\\\" (deleteFunction)=\\\"delete()\\\">\\r\\n        </app-form-action-buttons>\\r\\n        <br>\\r\\n        <app-form-list [dataSource]=\\\"dataSource\\\" [displayedColumns]=\\\"displayedColumns\\\"\\r\\n            (selectInListFunction)=\\\"getS1IncompleteDecisionExpirationPeriod()\\\"></app-form-list>\\r\\n\\r\\n    </div>\\r\\n</form>\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { S1IncompleteDecisionExpirationPeriodComponent } from './s1-incomplete-decision-expiration-period.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: S1IncompleteDecisionExpirationPeriodComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class S1IncompleteDecisionExpirationPeriodRoutingModule { }\r\n"],"sourceRoot":"webpack:///"}