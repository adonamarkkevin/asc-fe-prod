{"version":3,"sources":["webpack:///src/app/modules/pages/maintenance/email-notification/email-notification.module.ts","webpack:///src/app/modules/fragments/index.ts","webpack:///src/app/modules/pages/maintenance/email-notification/email-notification-routing.module.ts","webpack:///src/app/modules/pages/maintenance/email-notification/email-notification.component.ts","webpack:///src/app/modules/pages/maintenance/email-notification/email-notification.component.html"],"names":["EmailNotificationModule","routes","path","component","EmailNotificationRoutingModule","forChild","EmailNotificationComponent","apiService","formBuilder","sweetAlertService","spinner","displayedColumns","statusList","emailNotification","emailNotificationList","editorConfig","editable","spellcheck","height","minHeight","maxHeight","width","minWidth","translate","enableToolbar","showToolbar","placeholder","defaultParagraphSeparator","defaultFontName","defaultFontSize","fonts","name","customClasses","tag","uploadUrl","uploadWithCredentials","sanitize","toolbarPosition","toolbarHiddenButtons","getList","setFormValidator","findAll","subscribe","res","responseData","data","dataSource","paginator","formListComponent","sort","show","console","log","save","undefined","hide","success","err","error","resetFormValidator","findById","idForUpdate","update","status","ACTIVE","emailNotificationForm","group","emailCode","required","subject","description","body","markAsUntouched","markAsPristine","fire","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","value","deleteById","id","customSuccessMessage","getEmailNotification"],"mappings":"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","file":"email-notification-email-notification-module-es5.js","sourcesContent":["import { CustomAngularEditorModule } from './../../applications/editor/lib/angular-editor.module';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { EmailNotificationRoutingModule } from './email-notification-routing.module';\nimport { EmailNotificationComponent } from './email-notification.component';\nimport { FragmentsModule } from 'app/modules/fragments/fragments.module';\nimport { AngularMaterialModule } from '@shared';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\n\n\n@NgModule({\n  declarations: [EmailNotificationComponent],\n  imports: [\n    CommonModule,\n    EmailNotificationRoutingModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    AngularMaterialModule,\n    FragmentsModule,\n    CustomAngularEditorModule\n  ]\n})\nexport class EmailNotificationModule { }\n","export * from './form-action-buttons/form-action-buttons.component';\nexport * from './form-list/form-list.component';","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { EmailNotificationComponent } from './email-notification.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: EmailNotificationComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class EmailNotificationRoutingModule { }\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { FormListComponent } from '@fragments';\nimport { ApiService, SweetAlertService } from '@services';\nimport { COMMON_FUNCTION, ENDPOINTS, STATUSES } from '@shared';\nimport { EmailNotification } from 'app/core/models/email-notification.model';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport Swal from 'sweetalert2';\nimport { AngularEditorConfig } from '../../applications/editor/public-api';\n\n@Component({\n  selector: 'app-email-notification',\n  templateUrl: './email-notification.component.html',\n  styleUrls: ['./email-notification.component.scss']\n})\nexport class EmailNotificationComponent implements OnInit {\n\n  @ViewChild(FormListComponent) formListComponent: FormListComponent;\n  dataSource: MatTableDataSource<EmailNotification>;\n  displayedColumns: string[] = ['emailCode', 'subject', 'description', 'status'];\n  statusList = [...STATUSES];\n\n  emailNotification = new EmailNotification();\n  emailNotificationList = [];\n\n  emailNotificationForm: FormGroup;\n\n  editorConfig: AngularEditorConfig = {\n    editable: true,\n      spellcheck: true,\n      height: '15em',\n      minHeight: '0',\n      maxHeight: 'auto',\n      width: 'auto',\n      minWidth: '0',\n      translate: 'no',\n      enableToolbar: true,\n      showToolbar: true,\n      placeholder: 'Enter email body message here...',\n      defaultParagraphSeparator: 'p',\n      defaultFontName: 'Arial',\n      defaultFontSize: '',\n      fonts: [\n        {class: 'arial', name: 'Arial'},\n        {class: 'times-new-roman', name: 'Times New Roman'},\n        {class: 'calibri', name: 'Calibri'},\n        {class: 'comic-sans-ms', name: 'Comic Sans MS'}\n      ],\n      customClasses: [\n      {\n        name: 'quote',\n        class: 'quote',\n      },\n      {\n        name: 'redText',\n        class: 'redText'\n      },\n      {\n        name: 'titleText',\n        class: 'titleText',\n        tag: 'h1',\n      },\n    ],\n    uploadUrl: 'v1/image',\n    // upload: (file: File) => { ... }\n    uploadWithCredentials: false,\n    sanitize: true,\n    toolbarPosition: 'top',\n    toolbarHiddenButtons: [\n      ['link',\n      'unlink',\n      'insertImage',\n      'insertVideo',],\n\n    ]\n};\n\n\n  constructor(\n    private apiService: ApiService,\n    private formBuilder: FormBuilder,\n    private sweetAlertService: SweetAlertService,\n    private spinner: NgxSpinnerService,\n  ) { }\n\n  ngOnInit() {\n    this.getList();\n    this.setFormValidator();\n  }\n\n  getList(): void {\n    this.apiService.findAll(ENDPOINTS.emailNotification).subscribe((res: any) => {\n      this.emailNotificationList = res.responseData.data;\n      this.dataSource = new MatTableDataSource<EmailNotification>(res.responseData.data);\n      this.dataSource.paginator = this.formListComponent.paginator;\n      this.dataSource.sort = this.formListComponent.sort;\n    });\n  }\n\n  save(): void{\n    this.spinner.show();\n    console.log(this.emailNotification);\n\n    this.apiService.save(ENDPOINTS.emailNotification, this.emailNotification).subscribe(\n        (res: any) => {\n          if (res !== undefined){\n            this.spinner.hide();\n            this.sweetAlertService.success(res);\n          }\n        }, (err: any) => {\n          this.spinner.hide();\n          this.sweetAlertService.error(err);\n        }, () => {\n          this.spinner.hide();\n          this.resetFormValidator(),\n          this.getList();\n        }\n    )\n  }\n\n  getEmailNotification(): void {\n    this.spinner.show();\n    this.apiService.findById(ENDPOINTS.emailNotification, this.formListComponent.idForUpdate).subscribe((res: any) => {\n      if (res) {\n        this.emailNotification = res.responseData.data;\n        console.log(res);\n        this.spinner.hide();\n      }\n    });\n  }\n\n  update(): void {\n    this.spinner.show();\n    this.apiService.update(ENDPOINTS.emailNotification, this.emailNotification).subscribe(\n      (res: any) => {\n        if (res !== undefined){\n          this.spinner.hide();\n          this.sweetAlertService.success(res);\n        }\n      }, (err: any) => {\n        this.spinner.hide();\n        this.sweetAlertService.error(err);\n      }, () => {\n        this.spinner.hide();\n        this.resetFormValidator()\n        this.getList();\n      });\n  }\n\n  setFormValidator(): void {\n    this.emailNotification.status = COMMON_FUNCTION.ACTIVE;\n    this.emailNotificationForm = this.formBuilder.group({\n      emailCode: ['', Validators.required],\n      subject: ['', Validators.required],\n      description: ['', Validators.required],\n      body: ['', Validators.required],\n      status: [''],\n    });\n  }\n\n  resetFormValidator(): void {\n    this.emailNotification = new EmailNotification();\n    this.emailNotification.status = COMMON_FUNCTION.ACTIVE;\n    this.emailNotificationForm.markAsUntouched();\n    this.emailNotificationForm.markAsPristine();\n  }\n\n  delete() {\n    Swal.fire({\n      text: 'Are you sure you want to delete this email notification?',\n      icon: 'question',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Confirm'\n    }).then((result) => {\n      if (result.value) {\n        this.spinner.show();\n        this.apiService.deleteById(ENDPOINTS.emailNotification, this.emailNotification.id).subscribe(\n          () => {\n            this.spinner.hide();\n            this.sweetAlertService.customSuccessMessage('Email notification successfully deleted.');\n            this.resetFormValidator();\n            this.getList();\n          }\n        );\n      }\n    });\n  }\n\n}\n","<form>\n    <div class=\"container-fluid\">\n        <div class=\"row\">\n            <div class=\"col-md-12 title\">\n                <mat-label>\n                    Email Notification\n                </mat-label>\n            </div>\n        </div>\n        <hr>\n\n        <form [formGroup]=\"emailNotificationForm\">\n            <div class=\"row\">\n                <mat-form-field class=\"col-md-4\" appearance=\"outline\">\n                    <mat-label>Email Code <span class=\"required-field\">*</span></mat-label>\n                    <input matInput [(ngModel)]=\"emailNotification.emailCode\" name=\"emailCode\"\n                        formControlName=\"emailCode\">\n                </mat-form-field>\n\n                <mat-form-field class=\"col-md-4\" appearance=\"outline\">\n                    <mat-label>Subject</mat-label>\n                    <input matInput [(ngModel)]=\"emailNotification.subject\" name=\"subject\" formControlName=\"subject\">\n                </mat-form-field>\n\n                <mat-form-field class=\"col-md-4\" appearance=\"outline\">\n                    <mat-label>Status</mat-label>\n                    <mat-select [(ngModel)]=\"emailNotification.status\" name=\"status\" formControlName=\"status\">\n                        <mat-option *ngFor=\"let i of statusList\" [value]=\"i.status\">\n                            {{i.status}}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n\n                <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n                    <mat-label>Description</mat-label>\n                    <textarea matInput [(ngModel)]=\"emailNotification.description\" name=\"description\" formControlName=\"description\"></textarea>\n                </mat-form-field>\n\n                <div class=\"col-md-12\" appearance=\"outline\">\n                    <mat-label>Body</mat-label>\n                    <angular-editor \n                        [(ngModel)]=\"emailNotification.body\" \n                        [config]=\"editorConfig\" \n                        name=\"body\"\n                        formControlName=\"body\">\n                    </angular-editor><br>\n                </div>\n            </div>\n        </form>\n\n        <app-form-action-buttons [childObject]=\"emailNotification\" [childForm]=\"emailNotificationForm\"\n            (saveFunction)=\"save()\" (updateFunction)=\"update()\" (cancelFunction)=\"resetFormValidator()\"\n            (deleteFunction)=\"delete()\">\n        </app-form-action-buttons>\n        <br>\n        <app-form-list [dataSource]=\"dataSource\" [displayedColumns]=\"displayedColumns\"\n            (selectInListFunction)=\"getEmailNotification()\"></app-form-list>\n\n    </div>\n</form>\n"]}