{"version":3,"sources":["webpack:///src/app/modules/fragments/index.ts","webpack:///src/app/modules/pages/accounting/company-voucher/company-voucher-fund/company-voucher-fund-routing.module.ts","webpack:///src/app/core/models/voucher-replenishment.model.ts","webpack:///src/app/modules/pages/accounting/company-voucher/company-voucher-fund/company-voucher-fund.component.ts","webpack:///src/app/modules/pages/accounting/company-voucher/company-voucher-fund/company-voucher-fund.component.html","webpack:///src/app/modules/pages/accounting/company-voucher/company-voucher-fund/company-voucher-fund.module.ts"],"names":["routes","path","component","CompanyVoucherFundRoutingModule","forChild","VoucherReplenishment","CompanyVoucherFundComponent","formBuilder","router","apiService","sweetAlertService","sanitizer","fileStorageService","dataStorage","displayedColumns","displayedReplenishmentColumns","voucherReplenishment","voucher","company","voucherReplenishmentList","companyList","statusList","currentDate","Date","previewDocument","process","remainingVoucherBalance","currentUser","getUserAccount","setFormValidator","getCompanyList","getVoucherTrasnferList","status","ACTIVE","voucherReplenishmentForm","group","amountTransfered","required","transferedDate","markAsUntouched","markAsPristine","findAll","subscribe","res","responseData","data","findById","formListComponent","idForUpdate","voucherAttachmentReference","fundAmount","voucherDate","viewAttachmentFile","getCompanyReplenishmentList","findByParam","attachmentDocument","res1","safeURL","bypassSecurityTrustResourceUrl","fileURL","err","dataSource","paginator","sort","voucherReplenishmentsByCompany","id","dataSourceReplenishments","event","attachmentSize","target","files","size","type","customErrorMessage","value","pdfURL","URL","createObjectURL","reader","FileReader","file","readAsDataURL","onload","selectedFiles","fire","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","saveVoucherReplenishment","setDisplayProgressbar","params","VOUCHER_FUND","ORIGINAL","pushFileToStorage","item","obj","console","log","undefined","error","save","accountingVoucherFundTransfer","success","resetFormValidator","attachment","navigateByUrl","selected","getVoucherTrasnferDetails","CompanyVoucherFundModule"],"mappings":"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","file":"company-voucher-company-voucher-fund-company-voucher-fund-module-es5.js","sourcesContent":["export * from './form-action-buttons/form-action-buttons.component';\r\nexport * from './form-list/form-list.component';","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { CompanyVoucherFundComponent } from './company-voucher-fund.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: CompanyVoucherFundComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class CompanyVoucherFundRoutingModule { }\r\n","import { Company } from \"./company.model\";\r\n\r\nexport class VoucherReplenishment {\r\n\r\n    id: number;\r\n    amountTransfered: number;\r\n    company: Company;\r\n    status: string;\r\n    transferedDate: Date;\r\n    voucherAttachmentReference: string;\r\n   \r\n}","import { DataStorageService } from './../../../../../core/services/data.storage.service';\r\nimport { Component, Input, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTable, MatTableDataSource } from '@angular/material/table';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { Router } from '@angular/router';\r\nimport { FormListComponent } from '@fragments';\r\nimport { Company, PaymentType } from '@models';\r\nimport { ApiService, SweetAlertService } from '@services';\r\nimport { ATTACHMENT_TYPE, COMMON_FUNCTION, ENDPOINTS, STATUSES, SUBMISSION_TYPE } from '@shared';\r\nimport { VoucherReplenishment } from 'app/core/models/voucher-replenishment.model';\r\nimport { Voucher } from 'app/core/models/voucher.model';\r\nimport { FileStorageService } from 'app/core/services/file.storage.service';\r\nimport Swal from 'sweetalert2';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\n\r\n\r\n@Component({\r\n  selector: 'app-company-voucher-fund',\r\n  templateUrl: './company-voucher-fund.component.html',\r\n  styleUrls: ['./company-voucher-fund.component.scss']\r\n})\r\nexport class CompanyVoucherFundComponent implements OnInit, OnDestroy {\r\n\r\n  @ViewChild(FormListComponent) formListComponent: FormListComponent;\r\n  dataSource: MatTableDataSource<Voucher>;\r\n  dataSourceReplenishments: MatTableDataSource<VoucherReplenishment>;\r\n  displayedColumns: string[] = ['company', 'fundAmount', 'voucherDate'];\r\n  displayedReplenishmentColumns: string[] = ['transferedDate', 'amountTransfered', 'status'];\r\n  @Input() safeURL: any;\r\n\r\n  voucherReplenishment = new VoucherReplenishment();\r\n  voucher = new Voucher();\r\n  company = new Company();\r\n\r\n  voucherReplenishmentList = [];\r\n  companyList = [];\r\n  attachmentDocument: any;\r\n  statusList = [...STATUSES];\r\n\r\n  voucherReplenishmentForm: FormGroup;\r\n  currentUser: any;\r\n  currentDate = new Date();\r\n  selectedFiles: any;\r\n  attachment: any;\r\n  // safeURLVoucherReplenishment: any;\r\n  previewDocument = false;\r\n  process = 'save';\r\n  remainingVoucherBalance = 0;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private apiService: ApiService,\r\n    private sweetAlertService: SweetAlertService,\r\n    private sanitizer: DomSanitizer,\r\n    private fileStorageService: FileStorageService,\r\n    private dataStorage: DataStorageService\r\n  ) {\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.currentUser = this.dataStorage.getUserAccount();\r\n    this.setFormValidator();\r\n    this.getCompanyList();\r\n    this.getVoucherTrasnferList();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n\r\n  }\r\n\r\n  setFormValidator(): void {\r\n    this.voucherReplenishment.status = COMMON_FUNCTION.ACTIVE;\r\n    this.voucherReplenishmentForm = this.formBuilder.group({\r\n      amountTransfered: ['', [Validators.required]],\r\n      company: ['', [Validators.required]],\r\n      transferedDate: ['', [Validators.required]],\r\n      // status: ['', [Validators.required]],\r\n    })\r\n  }\r\n\r\n  resetFormValidator(): void {\r\n    this.voucherReplenishment = new VoucherReplenishment();\r\n    this.voucherReplenishment.status = COMMON_FUNCTION.ACTIVE;\r\n    this.voucherReplenishmentForm.markAsUntouched();\r\n    this.voucherReplenishmentForm.markAsPristine();\r\n  }\r\n\r\n  getCompanyList() {\r\n    this.apiService.findAll(ENDPOINTS.company).subscribe((res: any) => {\r\n      this.companyList = res.responseData.data;\r\n    });\r\n  }\r\n\r\n  getCompanyDetails(res) {\r\n    this.company = res;\r\n  }\r\n\r\n\r\n  getVoucherTrasnferDetails() {\r\n    this.process = 'update';\r\n    this.apiService.findById(ENDPOINTS.voucher, this.formListComponent.idForUpdate).subscribe((res: any) => {\r\n      if (res) {\r\n        // this.voucherReplenishment.company = res.responseData.data.company.companyName;\r\n        this.company = res.responseData.data.company;\r\n        this.voucher.voucherAttachmentReference = res.responseData.data.voucherAttachmentReference;\r\n        this.voucherReplenishment.company = this.company;\r\n        this.remainingVoucherBalance = res.responseData.data.fundAmount;\r\n        // this.voucherReplenishment.amountTransfered = 0;\r\n        this.voucherReplenishment.transferedDate = res.responseData.data.voucherDate;\r\n        this.voucherReplenishment.status = res.responseData.data.status;\r\n        this.getVoucherTrasnferList();\r\n        this.viewAttachmentFile();\r\n        this.getCompanyReplenishmentList();\r\n        this.previewDocument = true;\r\n      }\r\n    });\r\n  }\r\n\r\n  viewAttachmentFile() {\r\n    this.apiService.findByParam(ENDPOINTS.attachmentDocument, `voucher-attachment-reference/` + this.voucher.voucherAttachmentReference)\r\n      .subscribe((res1: any) => {\r\n        if (res1) {\r\n          this.attachmentDocument = res1.responseData.data;\r\n          this.safeURL = this.sanitizer.bypassSecurityTrustResourceUrl(this.attachmentDocument.fileURL);\r\n        }\r\n      }, (err: any) => {\r\n        this.attachmentDocument = [];\r\n      });\r\n  }\r\n\r\n  getVoucherTrasnferList() {\r\n    this.apiService.findAll(ENDPOINTS.voucher).subscribe((res: any) => {\r\n      this.dataSource = new MatTableDataSource<Voucher>(res.responseData.data);\r\n      this.dataSource.paginator = this.formListComponent.paginator;\r\n      this.dataSource.sort = this.formListComponent.sort;\r\n    })\r\n  }\r\n\r\n  getCompanyReplenishmentList() {\r\n    this.apiService.findAll(ENDPOINTS.voucherReplenishmentsByCompany+this.company?.id).subscribe((res: any) => {\r\n      this.dataSourceReplenishments = new MatTableDataSource<VoucherReplenishment>(res.responseData.data);\r\n      this.dataSourceReplenishments.paginator = this.formListComponent.paginator;\r\n      this.dataSourceReplenishments.sort = this.formListComponent.sort;\r\n    })\r\n  }\r\n\r\n  selectFile(event) {\r\n    const attachmentSize = event.target.files[0].size;\r\n    if (event.target.files[0].type === 'application/pdf') {\r\n      if (attachmentSize > 15000000) { // 1MB = 1M\r\n        this.sweetAlertService.customErrorMessage(`Attachments' total file size should not exceed 15MB.`);\r\n        event.target.value = '';\r\n        return;\r\n      } else {\r\n        const pdfURL = URL.createObjectURL(event.target.files[0]);\r\n        this.safeURL = this.sanitizer.bypassSecurityTrustResourceUrl(pdfURL);\r\n        this.previewDocument = true;\r\n        const reader = new FileReader();\r\n        const [file] = event.target.files;\r\n        reader.readAsDataURL(file);\r\n        reader.onload = () => {\r\n        };\r\n      }\r\n      this.selectedFiles = event.target.files;\r\n    } else {\r\n      this.sweetAlertService.customErrorMessage('Attachment should be in PDF format only.');\r\n      event.target.value = '';\r\n      return;\r\n    }\r\n  }\r\n\r\n  uploadVoucher() {\r\n    Swal.fire({\r\n      text: 'Are you sure you want to submit this VOUCHER?',\r\n      icon: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Confirm'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        if (this.process === 'update') {\r\n          this.saveVoucherReplenishment();\r\n        } else {\r\n          this.dataStorage.setDisplayProgressbar(true);\r\n          let params = '';\r\n          params = '?&attachmentType=' + ATTACHMENT_TYPE.VOUCHER_FUND + '&submissionType=' + SUBMISSION_TYPE.ORIGINAL;\r\n          this.fileStorageService.pushFileToStorage(ENDPOINTS.attachmentDocument, this.selectedFiles.item(0), params)\r\n            .subscribe(res => {\r\n              const obj = res.responseData.data;\r\n              this.voucherReplenishment.voucherAttachmentReference = obj.voucherAttachmentReference;\r\n              this.voucherReplenishment.company = this.company;\r\n              // this.voucher.voucherSignatories = this.signatoriesList;\r\n              console.log('VOUCHER REPLENISHMENT', this.voucherReplenishment);\r\n              this.saveVoucherReplenishment();\r\n              this.selectedFiles = undefined;\r\n            }, (err: any) => {\r\n              this.sweetAlertService.error(err);\r\n            }, () => {\r\n              this.dataStorage.setDisplayProgressbar(false);\r\n            });\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  saveVoucherReplenishment() {\r\n    this.apiService.save(ENDPOINTS.accountingVoucherFundTransfer, this.voucherReplenishment).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.sweetAlertService.success(res);\r\n      this.setFormValidator();\r\n      this.getVoucherTrasnferList();\r\n      this.resetFormValidator();\r\n      this.process = 'save';\r\n      this.previewDocument = false;\r\n      this.attachment = null;\r\n      this.router.navigateByUrl('asc/page/accounting/voucher-replenishment');\r\n    }, (err) => {\r\n      console.log(err);\r\n      this.sweetAlertService.error(err);\r\n    });\r\n  }\r\n\r\n\r\n  compareStatus(value: any, selected: any): boolean {\r\n    if (value && selected) {\r\n      return value === selected;\r\n    }\r\n  }\r\n\r\n\r\n}\r\n","<form>\r\n  <div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12 title\">\r\n        <mat-label>\r\n          <mat-icon>view_list</mat-icon> Voucher Replenishment\r\n        </mat-label>\r\n      </div>\r\n    </div>\r\n    <hr>\r\n\r\n    <div class=\"col-md-12\">\r\n      <b><b class=\"material-icons\">error_outline</b> Note: Select enrolled voucher to add fund or view amount replenishments made.</b>\r\n    </div>\r\n    <br>\r\n\r\n    <app-form-list [dataSource]=\"dataSource\" [displayedColumns]=\"displayedColumns\"\r\n    (selectInListFunction)=\"getVoucherTrasnferDetails()\"></app-form-list>\r\n    <br>\r\n\r\n    <div class=\"container-fluid\"\r\n      *ngIf=\"currentUser?.userRole.name === 'ROLE_APPLICANT' || currentUser?.userRole.name === 'ROLE_ACCOUNTING' && previewDocument===true\">\r\n      <div class=\"row\">\r\n        <div class=\"col-md-12 information-title\">\r\n          <mat-label>\r\n            Company Information\r\n          </mat-label>\r\n        </div>\r\n      </div>\r\n      <hr>\r\n      <br>\r\n\r\n      <div class=\"row col-md-12\">\r\n\r\n        <div class=\"row col-md-5\">\r\n          <div>\r\n            <mat-label>Voucher: &nbsp;&nbsp;&nbsp;<span>PDF file only!</span></mat-label><br>\r\n            <input class=\"file-upload\" type=\"file\" [(ngModel)]=\"attachment\" [ngModelOptions]=\"{standalone: true}\"\r\n              accept=\".pdf\" (change)=\"selectFile($event)\">\r\n          </div>\r\n\r\n          <div *ngIf=\"attachment\">\r\n            <div class=\"file-upload\">\r\n              <object [data]=\"safeURL\" type=\"application/pdf\" width=\"100%\" height=\"500\">\r\n                <iframe [src]=\"safeURL\" width=\"100%\" height=\"500\">\r\n                  <p>This browser does not support PDF!</p>\r\n                </iframe>\r\n              </object>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"row col-md-7\">\r\n          <form [formGroup]=\"voucherReplenishmentForm\">\r\n            <div class=\"row\">\r\n\r\n              <mat-form-field class=\"col-md-12\" appearance=\"outline\" *ngIf=\"process==='save'\">\r\n                <mat-label> Company Name\r\n                </mat-label>\r\n                <mat-select [(ngModel)]=\"voucherReplenishment.company\" name=\"company\" formControlName=\"company\">\r\n                  <mat-option *ngFor=\"let i of companyList\" [value]=\"i\" (click)=\"getCompanyDetails(i)\">\r\n                    {{i.companyName}}\r\n                  </mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n\r\n              <mat-form-field class=\"col-md-12\" appearance=\"outline\" *ngIf=\"process==='update'\">\r\n                <mat-label>Company Name</mat-label>\r\n                <input matInput [value]=\"company.companyName\" readonly>\r\n              </mat-form-field>\r\n\r\n              <mat-form-field class=\"col-md-6\" appearance=\"outline\" *ngIf=\"process==='update'\">\r\n                <mat-label>Remaining Voucher Balance </mat-label>\r\n                <input matInput [value]=\"remainingVoucherBalance\" name=\"remainingVoucherBalance\"\r\n                  formControlName=\"remainingVoucherBalance\" type=\"number\" readonly>\r\n              </mat-form-field>\r\n\r\n              <mat-form-field class=\"col-md-6\" appearance=\"outline\">\r\n                <mat-label>Amount Transferred <span class=\"required-field\">*</span></mat-label>\r\n                <input matInput [(ngModel)]=\"voucherReplenishment.amountTransfered\" name=\"amountTransfered\"\r\n                  formControlName=\"amountTransfered\" type=\"number\">\r\n              </mat-form-field>\r\n\r\n              <!-- <mat-form-field class=\"col-md-6\" appearance=\"outline\">\r\n                <mat-label>Transferred Date</mat-label>\r\n                <input matInput placeholder=\"Date\" [matDatepicker]=\"transferedDate\" readonly\r\n                  [(ngModel)]=\"voucherReplenishment.transferedDate\" name=\"transferedDate\" formControlName=\"transferedDate\">\r\n                <mat-datepicker-toggle matSuffix [for]=\"transferedDate\"></mat-datepicker-toggle>\r\n                <mat-datepicker color=\"warn\" #transferedDate disabled=\"false\"></mat-datepicker>\r\n              </mat-form-field> -->\r\n\r\n              <!-- <mat-form-field class=\"col-md-6\" appearance=\"outline\">\r\n                <mat-label>Status</mat-label>\r\n                <mat-select [(ngModel)]=\"voucherReplenishment.status\" name=\"status\" formControlName=\"status\" [compareWith]=\"compareStatus\">\r\n                  <mat-option *ngFor=\"let i of statusList\" [value]=\"i.status\">\r\n                    {{i.status}}\r\n                  </mat-option>\r\n                </mat-select>\r\n              </mat-form-field> -->\r\n\r\n              <!-- <mat-form-field class=\"col-md-6\" appearance=\"outline\" *ngIf=\"voucherReplenishment.company\">\r\n                <mat-label>Company TelephoneNo</mat-label>\r\n                <input matInput [value]=\"company.companyTelephoneNo\" readonly>\r\n              </mat-form-field>\r\n\r\n              <mat-form-field class=\"col-md-6\" appearance=\"outline\" *ngIf=\"voucherReplenishment.company\">\r\n                <mat-label>Company Tin </mat-label>\r\n                <input matInput [value]=\"company.companyTin\" readonly>\r\n              </mat-form-field>\r\n\r\n              <mat-form-field class=\"col-md-12\" appearance=\"outline\" *ngIf=\"voucherReplenishment.company\">\r\n                <mat-label>Company Address</mat-label>\r\n                <input matInput [value]=\"company.completeAddress\" readonly>\r\n              </mat-form-field> -->\r\n\r\n            </div>\r\n          </form>\r\n\r\n          <div class=\"row\">\r\n            <div class=\"col-md-10\"></div>\r\n            <div class=\"col-md-2\">\r\n              <button mat-raised-button class=\"button-red\" (click)=\"uploadVoucher()\" [disabled]=\"!attachment || !voucherReplenishment?.amountTransfered\">\r\n                <i class=\"material-icons color__white\">task_alt</i> SUBMIT\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <br>\r\n          <br>\r\n          <hr>\r\n          <br>\r\n          <app-form-list [dataSource]=\"dataSourceReplenishments\" [displayedColumns]=\"displayedReplenishmentColumns\"></app-form-list>\r\n          <br>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- <div class=\"row\">\r\n        <div class=\"col-md-10\"></div>\r\n        <div class=\"col-md-2\">\r\n          <button mat-raised-button class=\"button-red\" (click)=\"uploadAttachment()\" *ngIf=\"process==='save'\">\r\n            <i class=\"material-icons color__white\">task_alt</i> SUBMIT\r\n          </button>\r\n          <button mat-raised-button class=\"button-red\" (click)=\"approveVoucher()\" *ngIf=\"process==='update'\">\r\n            <i class=\"material-icons color__white\">task_alt</i> APPROVE\r\n          </button>\r\n        </div>\r\n      </div> -->\r\n    </div>\r\n  </div>\r\n</form>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { CompanyVoucherFundRoutingModule } from './company-voucher-fund-routing.module';\r\nimport { CompanyVoucherFundComponent } from './company-voucher-fund.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { AngularMaterialModule } from '@shared';\r\nimport { FragmentsModule } from 'app/modules/fragments/fragments.module';\r\n\r\n\r\n@NgModule({\r\n  declarations: [CompanyVoucherFundComponent],\r\n  imports: [\r\n    CommonModule,\r\n    CompanyVoucherFundRoutingModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    AngularMaterialModule,\r\n    FragmentsModule\r\n  ]\r\n})\r\nexport class CompanyVoucherFundModule { }\r\n"]}