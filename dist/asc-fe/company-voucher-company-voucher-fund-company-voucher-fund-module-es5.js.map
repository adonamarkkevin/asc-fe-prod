{"version":3,"sources":["webpack:///src/app/modules/fragments/index.ts","webpack:///src/app/modules/pages/accounting/company-voucher/company-voucher-fund/company-voucher-fund-routing.module.ts","webpack:///src/app/core/models/voucher-replenishment.model.ts","webpack:///src/app/modules/pages/accounting/company-voucher/company-voucher-fund/company-voucher-fund.component.ts","webpack:///src/app/modules/pages/accounting/company-voucher/company-voucher-fund/company-voucher-fund.component.html","webpack:///src/app/modules/pages/accounting/company-voucher/company-voucher-fund/company-voucher-fund.module.ts"],"names":["routes","path","component","CompanyVoucherFundRoutingModule","forChild","VoucherReplenishment","CompanyVoucherFundComponent","formBuilder","router","apiService","sweetAlertService","sanitizer","fileStorageService","dataStorage","displayedColumns","displayedReplenishmentColumns","voucherReplenishment","voucher","company","voucherReplenishmentList","companyList","statusList","currentDate","Date","previewDocument","process","remainingVoucherBalance","currentUser","getUserAccount","setFormValidator","getCompanyList","getVoucherTrasnferList","status","ACTIVE","voucherReplenishmentForm","group","amountTransfered","required","transferedDate","markAsUntouched","markAsPristine","findAll","subscribe","res","responseData","data","findById","formListComponent","idForUpdate","voucherAttachmentReference","fundAmount","voucherDate","viewAttachmentFile","getCompanyReplenishmentList","findByParam","attachmentDocument","res1","safeURL","bypassSecurityTrustResourceUrl","fileURL","err","dataSource","paginator","sort","voucherReplenishmentsByCompany","id","dataSourceReplenishments","event","attachmentSize","target","files","size","type","customErrorMessage","value","pdfURL","URL","createObjectURL","reader","FileReader","file","readAsDataURL","onload","selectedFiles","fire","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","saveVoucherReplenishment","setDisplayProgressbar","params","VOUCHER_FUND","ORIGINAL","pushFileToStorage","item","obj","console","log","undefined","error","save","accountingVoucherFundTransfer","success","resetFormValidator","attachment","navigateByUrl","selected","getVoucherTrasnferDetails","CompanyVoucherFundModule"],"mappings":"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","file":"company-voucher-company-voucher-fund-company-voucher-fund-module-es5.js","sourcesContent":["export * from './form-action-buttons/form-action-buttons.component';\nexport * from './form-list/form-list.component';","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CompanyVoucherFundComponent } from './company-voucher-fund.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CompanyVoucherFundComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class CompanyVoucherFundRoutingModule { }\n","import { Company } from \"./company.model\";\n\nexport class VoucherReplenishment {\n\n    id: number;\n    amountTransfered: number;\n    company: Company;\n    status: string;\n    transferedDate: Date;\n    voucherAttachmentReference: string;\n   \n}","import { DataStorageService } from './../../../../../core/services/data.storage.service';\nimport { Component, Input, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTable, MatTableDataSource } from '@angular/material/table';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { Router } from '@angular/router';\nimport { FormListComponent } from '@fragments';\nimport { Company, PaymentType } from '@models';\nimport { ApiService, SweetAlertService } from '@services';\nimport { ATTACHMENT_TYPE, COMMON_FUNCTION, ENDPOINTS, STATUSES, SUBMISSION_TYPE } from '@shared';\nimport { VoucherReplenishment } from 'app/core/models/voucher-replenishment.model';\nimport { Voucher } from 'app/core/models/voucher.model';\nimport { FileStorageService } from 'app/core/services/file.storage.service';\nimport Swal from 'sweetalert2';\nimport { NgxSpinnerService } from 'ngx-spinner';\n\n\n@Component({\n  selector: 'app-company-voucher-fund',\n  templateUrl: './company-voucher-fund.component.html',\n  styleUrls: ['./company-voucher-fund.component.scss']\n})\nexport class CompanyVoucherFundComponent implements OnInit, OnDestroy {\n\n  @ViewChild(FormListComponent) formListComponent: FormListComponent;\n  dataSource: MatTableDataSource<Voucher>;\n  dataSourceReplenishments: MatTableDataSource<VoucherReplenishment>;\n  displayedColumns: string[] = ['company', 'fundAmount', 'voucherDate'];\n  displayedReplenishmentColumns: string[] = ['transferedDate', 'amountTransfered', 'status'];\n  @Input() safeURL: any;\n\n  voucherReplenishment = new VoucherReplenishment();\n  voucher = new Voucher();\n  company = new Company();\n\n  voucherReplenishmentList = [];\n  companyList = [];\n  attachmentDocument: any;\n  statusList = [...STATUSES];\n\n  voucherReplenishmentForm: FormGroup;\n  currentUser: any;\n  currentDate = new Date();\n  selectedFiles: any;\n  attachment: any;\n  // safeURLVoucherReplenishment: any;\n  previewDocument = false;\n  process = 'save';\n  remainingVoucherBalance = 0;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private apiService: ApiService,\n    private sweetAlertService: SweetAlertService,\n    private sanitizer: DomSanitizer,\n    private fileStorageService: FileStorageService,\n    private dataStorage: DataStorageService\n  ) {\n\n  }\n\n  ngOnInit(): void {\n    this.currentUser = this.dataStorage.getUserAccount();\n    this.setFormValidator();\n    this.getCompanyList();\n    this.getVoucherTrasnferList();\n  }\n\n  ngOnDestroy(): void {\n\n  }\n\n  setFormValidator(): void {\n    this.voucherReplenishment.status = COMMON_FUNCTION.ACTIVE;\n    this.voucherReplenishmentForm = this.formBuilder.group({\n      amountTransfered: ['', [Validators.required]],\n      company: ['', [Validators.required]],\n      transferedDate: ['', [Validators.required]],\n      // status: ['', [Validators.required]],\n    })\n  }\n\n  resetFormValidator(): void {\n    this.voucherReplenishment = new VoucherReplenishment();\n    this.voucherReplenishment.status = COMMON_FUNCTION.ACTIVE;\n    this.voucherReplenishmentForm.markAsUntouched();\n    this.voucherReplenishmentForm.markAsPristine();\n  }\n\n  getCompanyList() {\n    this.apiService.findAll(ENDPOINTS.company).subscribe((res: any) => {\n      this.companyList = res.responseData.data;\n    });\n  }\n\n  getCompanyDetails(res) {\n    this.company = res;\n  }\n\n\n  getVoucherTrasnferDetails() {\n    this.process = 'update';\n    this.apiService.findById(ENDPOINTS.voucher, this.formListComponent.idForUpdate).subscribe((res: any) => {\n      if (res) {\n        // this.voucherReplenishment.company = res.responseData.data.company.companyName;\n        this.company = res.responseData.data.company;\n        this.voucher.voucherAttachmentReference = res.responseData.data.voucherAttachmentReference;\n        this.voucherReplenishment.company = this.company;\n        this.remainingVoucherBalance = res.responseData.data.fundAmount;\n        // this.voucherReplenishment.amountTransfered = 0;\n        this.voucherReplenishment.transferedDate = res.responseData.data.voucherDate;\n        this.voucherReplenishment.status = res.responseData.data.status;\n        this.getVoucherTrasnferList();\n        this.viewAttachmentFile();\n        this.getCompanyReplenishmentList();\n        this.previewDocument = true;\n      }\n    });\n  }\n\n  viewAttachmentFile() {\n    this.apiService.findByParam(ENDPOINTS.attachmentDocument, `voucher-attachment-reference/` + this.voucher.voucherAttachmentReference)\n      .subscribe((res1: any) => {\n        if (res1) {\n          this.attachmentDocument = res1.responseData.data;\n          this.safeURL = this.sanitizer.bypassSecurityTrustResourceUrl(this.attachmentDocument.fileURL);\n        }\n      }, (err: any) => {\n        this.attachmentDocument = [];\n      });\n  }\n\n  getVoucherTrasnferList() {\n    this.apiService.findAll(ENDPOINTS.voucher).subscribe((res: any) => {\n      this.dataSource = new MatTableDataSource<Voucher>(res.responseData.data);\n      this.dataSource.paginator = this.formListComponent.paginator;\n      this.dataSource.sort = this.formListComponent.sort;\n    })\n  }\n\n  getCompanyReplenishmentList() {\n    this.apiService.findAll(ENDPOINTS.voucherReplenishmentsByCompany+this.company?.id).subscribe((res: any) => {\n      this.dataSourceReplenishments = new MatTableDataSource<VoucherReplenishment>(res.responseData.data);\n      this.dataSourceReplenishments.paginator = this.formListComponent.paginator;\n      this.dataSourceReplenishments.sort = this.formListComponent.sort;\n    })\n  }\n\n  selectFile(event) {\n    const attachmentSize = event.target.files[0].size;\n    if (event.target.files[0].type === 'application/pdf') {\n      if (attachmentSize > 15000000) { // 1MB = 1M\n        this.sweetAlertService.customErrorMessage(`Attachments' total file size should not exceed 15MB.`);\n        event.target.value = '';\n        return;\n      } else {\n        const pdfURL = URL.createObjectURL(event.target.files[0]);\n        this.safeURL = this.sanitizer.bypassSecurityTrustResourceUrl(pdfURL);\n        this.previewDocument = true;\n        const reader = new FileReader();\n        const [file] = event.target.files;\n        reader.readAsDataURL(file);\n        reader.onload = () => {\n        };\n      }\n      this.selectedFiles = event.target.files;\n    } else {\n      this.sweetAlertService.customErrorMessage('Attachment should be in PDF format only.');\n      event.target.value = '';\n      return;\n    }\n  }\n\n  uploadVoucher() {\n    Swal.fire({\n      text: 'Are you sure you want to submit this VOUCHER?',\n      icon: 'question',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Confirm'\n    }).then((result) => {\n      if (result.value) {\n        if (this.process === 'update') {\n          this.saveVoucherReplenishment();\n        } else {\n          this.dataStorage.setDisplayProgressbar(true);\n          let params = '';\n          params = '?&attachmentType=' + ATTACHMENT_TYPE.VOUCHER_FUND + '&submissionType=' + SUBMISSION_TYPE.ORIGINAL;\n          this.fileStorageService.pushFileToStorage(ENDPOINTS.attachmentDocument, this.selectedFiles.item(0), params)\n            .subscribe(res => {\n              const obj = res.responseData.data;\n              this.voucherReplenishment.voucherAttachmentReference = obj.voucherAttachmentReference;\n              this.voucherReplenishment.company = this.company;\n              // this.voucher.voucherSignatories = this.signatoriesList;\n              console.log('VOUCHER REPLENISHMENT', this.voucherReplenishment);\n              this.saveVoucherReplenishment();\n              this.selectedFiles = undefined;\n            }, (err: any) => {\n              this.sweetAlertService.error(err);\n            }, () => {\n              this.dataStorage.setDisplayProgressbar(false);\n            });\n        }\n      }\n    });\n  }\n\n  saveVoucherReplenishment() {\n    this.apiService.save(ENDPOINTS.accountingVoucherFundTransfer, this.voucherReplenishment).subscribe((res: any) => {\n      console.log(res);\n      this.sweetAlertService.success(res);\n      this.setFormValidator();\n      this.getVoucherTrasnferList();\n      this.resetFormValidator();\n      this.process = 'save';\n      this.previewDocument = false;\n      this.attachment = null;\n      this.router.navigateByUrl('asc/page/accounting/voucher-replenishment');\n    }, (err) => {\n      console.log(err);\n      this.sweetAlertService.error(err);\n    });\n  }\n\n\n  compareStatus(value: any, selected: any): boolean {\n    if (value && selected) {\n      return value === selected;\n    }\n  }\n\n\n}\n","<form>\n  <div class=\"container-fluid\">\n    <div class=\"row\">\n      <div class=\"col-md-12 title\">\n        <mat-label>\n          <mat-icon>view_list</mat-icon> Voucher Replenishment\n        </mat-label>\n      </div>\n    </div>\n    <hr>\n\n    <div class=\"col-md-12\">\n      <b><b class=\"material-icons\">error_outline</b> Note: Select enrolled voucher to add fund or view amount replenishments made.</b>\n    </div>\n    <br>\n\n    <app-form-list [dataSource]=\"dataSource\" [displayedColumns]=\"displayedColumns\"\n    (selectInListFunction)=\"getVoucherTrasnferDetails()\"></app-form-list>\n    <br>\n\n    <div class=\"container-fluid\"\n      *ngIf=\"currentUser?.userRole.name === 'ROLE_APPLICANT' || currentUser?.userRole.name === 'ROLE_ACCOUNTING' && previewDocument===true\">\n      <div class=\"row\">\n        <div class=\"col-md-12 information-title\">\n          <mat-label>\n            Company Information\n          </mat-label>\n        </div>\n      </div>\n      <hr>\n      <br>\n\n      <div class=\"row col-md-12\">\n\n        <div class=\"row col-md-5\">\n          <div>\n            <mat-label>Voucher: &nbsp;&nbsp;&nbsp;<span>PDF file only!</span></mat-label><br>\n            <input class=\"file-upload\" type=\"file\" [(ngModel)]=\"attachment\" [ngModelOptions]=\"{standalone: true}\"\n              accept=\".pdf\" (change)=\"selectFile($event)\">\n          </div>\n\n          <div *ngIf=\"attachment\">\n            <div class=\"file-upload\">\n              <object [data]=\"safeURL\" type=\"application/pdf\" width=\"100%\" height=\"500\">\n                <iframe [src]=\"safeURL\" width=\"100%\" height=\"500\">\n                  <p>This browser does not support PDF!</p>\n                </iframe>\n              </object>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"row col-md-7\">\n          <form [formGroup]=\"voucherReplenishmentForm\">\n            <div class=\"row\">\n\n              <mat-form-field class=\"col-md-12\" appearance=\"outline\" *ngIf=\"process==='save'\">\n                <mat-label> Company Name\n                </mat-label>\n                <mat-select [(ngModel)]=\"voucherReplenishment.company\" name=\"company\" formControlName=\"company\">\n                  <mat-option *ngFor=\"let i of companyList\" [value]=\"i\" (click)=\"getCompanyDetails(i)\">\n                    {{i.companyName}}\n                  </mat-option>\n                </mat-select>\n              </mat-form-field>\n\n              <mat-form-field class=\"col-md-12\" appearance=\"outline\" *ngIf=\"process==='update'\">\n                <mat-label>Company Name</mat-label>\n                <input matInput [value]=\"company.companyName\" readonly>\n              </mat-form-field>\n\n              <mat-form-field class=\"col-md-6\" appearance=\"outline\" *ngIf=\"process==='update'\">\n                <mat-label>Remaining Voucher Balance </mat-label>\n                <input matInput [value]=\"remainingVoucherBalance\" name=\"remainingVoucherBalance\"\n                  formControlName=\"remainingVoucherBalance\" type=\"number\" readonly>\n              </mat-form-field>\n\n              <mat-form-field class=\"col-md-6\" appearance=\"outline\">\n                <mat-label>Amount Transferred <span class=\"required-field\">*</span></mat-label>\n                <input matInput [(ngModel)]=\"voucherReplenishment.amountTransfered\" name=\"amountTransfered\"\n                  formControlName=\"amountTransfered\" type=\"number\">\n              </mat-form-field>\n\n              <!-- <mat-form-field class=\"col-md-6\" appearance=\"outline\">\n                <mat-label>Transferred Date</mat-label>\n                <input matInput placeholder=\"Date\" [matDatepicker]=\"transferedDate\" readonly\n                  [(ngModel)]=\"voucherReplenishment.transferedDate\" name=\"transferedDate\" formControlName=\"transferedDate\">\n                <mat-datepicker-toggle matSuffix [for]=\"transferedDate\"></mat-datepicker-toggle>\n                <mat-datepicker color=\"warn\" #transferedDate disabled=\"false\"></mat-datepicker>\n              </mat-form-field> -->\n\n              <!-- <mat-form-field class=\"col-md-6\" appearance=\"outline\">\n                <mat-label>Status</mat-label>\n                <mat-select [(ngModel)]=\"voucherReplenishment.status\" name=\"status\" formControlName=\"status\" [compareWith]=\"compareStatus\">\n                  <mat-option *ngFor=\"let i of statusList\" [value]=\"i.status\">\n                    {{i.status}}\n                  </mat-option>\n                </mat-select>\n              </mat-form-field> -->\n\n              <!-- <mat-form-field class=\"col-md-6\" appearance=\"outline\" *ngIf=\"voucherReplenishment.company\">\n                <mat-label>Company TelephoneNo</mat-label>\n                <input matInput [value]=\"company.companyTelephoneNo\" readonly>\n              </mat-form-field>\n\n              <mat-form-field class=\"col-md-6\" appearance=\"outline\" *ngIf=\"voucherReplenishment.company\">\n                <mat-label>Company Tin </mat-label>\n                <input matInput [value]=\"company.companyTin\" readonly>\n              </mat-form-field>\n\n              <mat-form-field class=\"col-md-12\" appearance=\"outline\" *ngIf=\"voucherReplenishment.company\">\n                <mat-label>Company Address</mat-label>\n                <input matInput [value]=\"company.completeAddress\" readonly>\n              </mat-form-field> -->\n\n            </div>\n          </form>\n\n          <div class=\"row\">\n            <div class=\"col-md-10\"></div>\n            <div class=\"col-md-2\">\n              <button mat-raised-button class=\"button-red\" (click)=\"uploadVoucher()\" [disabled]=\"!attachment || !voucherReplenishment?.amountTransfered\">\n                <i class=\"material-icons color__white\">task_alt</i> SUBMIT\n              </button>\n            </div>\n          </div>\n          <br>\n          <br>\n          <hr>\n          <br>\n          <app-form-list [dataSource]=\"dataSourceReplenishments\" [displayedColumns]=\"displayedReplenishmentColumns\"></app-form-list>\n          <br>\n        </div>\n      </div>\n\n      <!-- <div class=\"row\">\n        <div class=\"col-md-10\"></div>\n        <div class=\"col-md-2\">\n          <button mat-raised-button class=\"button-red\" (click)=\"uploadAttachment()\" *ngIf=\"process==='save'\">\n            <i class=\"material-icons color__white\">task_alt</i> SUBMIT\n          </button>\n          <button mat-raised-button class=\"button-red\" (click)=\"approveVoucher()\" *ngIf=\"process==='update'\">\n            <i class=\"material-icons color__white\">task_alt</i> APPROVE\n          </button>\n        </div>\n      </div> -->\n    </div>\n  </div>\n</form>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CompanyVoucherFundRoutingModule } from './company-voucher-fund-routing.module';\nimport { CompanyVoucherFundComponent } from './company-voucher-fund.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AngularMaterialModule } from '@shared';\nimport { FragmentsModule } from 'app/modules/fragments/fragments.module';\n\n\n@NgModule({\n  declarations: [CompanyVoucherFundComponent],\n  imports: [\n    CommonModule,\n    CompanyVoucherFundRoutingModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    FormsModule,\n    AngularMaterialModule,\n    FragmentsModule\n  ]\n})\nexport class CompanyVoucherFundModule { }\n"]}