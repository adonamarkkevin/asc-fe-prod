{"version":3,"sources":["./src/app/modules/pages/accounting/or-preparation/or-preparation.module.ts","./src/app/modules/fragments/index.ts","./src/app/modules/pages/accounting/or-preparation/or-preparation.component.ts","./src/app/modules/pages/accounting/or-preparation/or-preparation.component.html","./src/app/core/models/totals.model.ts","./src/app/modules/pages/accounting/or-preparation/or-preparation-routing.module.ts","./src/app/modules/pages/accounting/or-preparation/or-preparation.component.scss"],"names":[],"mappings":"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","file":"or-preparation-or-preparation-module-es2015.js","sourcesContent":["import { NgModule } from \"@angular/core\";\r\nimport { CommonModule, DecimalPipe } from \"@angular/common\";\r\n\r\nimport { OrPreparationRoutingModule } from \"./or-preparation-routing.module\";\r\nimport { OrPreparationComponent } from \"./or-preparation.component\";\r\nimport { HttpClientModule } from \"@angular/common/http\";\r\nimport { ReactiveFormsModule } from \"@angular/forms\";\r\nimport { AngularMaterialModule } from \"@shared\";\r\nimport { FragmentsModule } from \"app/modules/fragments/fragments.module\";\r\n\r\n@NgModule({\r\n  declarations: [OrPreparationComponent],\r\n  imports: [\r\n    CommonModule,\r\n    OrPreparationRoutingModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule,\r\n    AngularMaterialModule,\r\n    FragmentsModule,\r\n  ],\r\n  providers: [DecimalPipe],\r\n})\r\nexport class OrPreparationModule {}\r\n","export * from './form-action-buttons/form-action-buttons.component';\r\nexport * from './form-list/form-list.component';","import { GenericResponse } from \"./../../../../core/models/generic-response-model/generic-response.model\";\r\nimport { TotalAmountsModel } from \"./../../../../core/models/totals.model\";\r\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { FormListComponent } from \"@fragments\";\r\nimport { OrPreparation, OrPreparationReference, Payment } from \"@models\";\r\nimport { ApiService, SweetAlertService } from \"@services\";\r\nimport { COMMON_FUNCTION, ENDPOINTS, STATUSES } from \"@shared\";\r\nimport { Report } from \"app/core/models/report.model\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport Swal from \"sweetalert2\";\r\nimport { DecimalPipe } from \"@angular/common\";\r\n\r\n@Component({\r\n  selector: \"app-or-preparation\",\r\n  templateUrl: \"./or-preparation.component.html\",\r\n  styleUrls: [\"./or-preparation.component.scss\"],\r\n})\r\nexport class OrPreparationComponent implements OnInit {\r\n  @ViewChild(FormListComponent) formListComponent: FormListComponent;\r\n  dataSource: MatTableDataSource<OrPreparation>;\r\n  displayedColumns: string[] = [\r\n    \"officialReceiptNo\",\r\n    \"typeOfMediumDescription\",\r\n    \"officialReceiptReferences\",\r\n    \"status\",\r\n    \"deleteIcon\",\r\n  ];\r\n  statusList = [...STATUSES];\r\n\r\n  orPreparation = new OrPreparation();\r\n  selectedCompanyId: number;\r\n  selectedCompany: any;\r\n  orPreparationReference = new OrPreparationReference();\r\n  orPreparationList = [];\r\n  typeOfMediumList = [];\r\n  officialReceiptReferenceList = [];\r\n  availableReferenceCodeList = [];\r\n  companyList = [];\r\n  report = new Report();\r\n  orPreparationForm: FormGroup;\r\n  totalAmts: Array<Payment> = new Array<Payment>();\r\n  totalAmounts: TotalAmountsModel = new TotalAmountsModel();\r\n  isGettingCompanies: boolean;\r\n\r\n  constructor(\r\n    private apiService: ApiService,\r\n    private formBuilder: FormBuilder,\r\n    private sweetAlertService: SweetAlertService,\r\n    private spinner: NgxSpinnerService,\r\n    private numberPipe: DecimalPipe\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.getList();\r\n    this.setFormValidator();\r\n    this.getTypeOfMedium();\r\n    this.getCompanyList();\r\n    this.getAvailableReferenceCode();\r\n  }\r\n\r\n  getList(): void {\r\n    this.getAvailableReferenceCode();\r\n    this.apiService.findAll(ENDPOINTS.officialReceipt).subscribe((res: any) => {\r\n      this.orPreparationList = res.responseData.data;\r\n\r\n      this.orPreparationList = this.orPreparationList.map((mappedList) => ({\r\n        ...mappedList,\r\n        officialReceiptReferencesValue: mappedList.officialReceiptReferences.reduce(\r\n          (previousValue, currentValue) => {\r\n            if (previousValue) {\r\n              return previousValue + \", \" + currentValue?.reference;\r\n            } else {\r\n              return currentValue?.reference;\r\n            }\r\n          },\r\n          \"\"\r\n        ),\r\n      }));\r\n\r\n      this.dataSource = new MatTableDataSource<OrPreparation>(\r\n        this.orPreparationList\r\n      );\r\n      this.dataSource.paginator = this.formListComponent.paginator;\r\n      this.dataSource.sort = this.formListComponent.sort;\r\n    });\r\n  }\r\n\r\n  amountChanged() {\r\n    // this.orPreparationForm\r\n    //   .get(\"totalAmount\")\r\n    //   .setValue(\r\n    //     this.numberPipe.transform(\r\n    //       (+this.orPreparationForm.get(\"amount\").value || 0) +\r\n    //         this.totalAmounts.totalSales,\r\n    //       \".2-2\"\r\n    //     )\r\n    //   );\r\n  }\r\n\r\n  addReceiptReference() {\r\n    console.log(\"prep => \", this.orPreparationReference);\r\n    if (\r\n      (this.orPreparation.voucherControlNumber &&\r\n        this.officialReceiptReferenceList.length >= 6) ||\r\n      this.officialReceiptReferenceList.length >= 9\r\n    ) {\r\n      this.sweetAlertService.customErrorMessage(\"Max input limit reached\");\r\n    } else {\r\n      const isExisting = this.officialReceiptReferenceList.filter(\r\n        (filteredOR) =>\r\n          filteredOR.reference === this.orPreparationReference.reference.trim()\r\n      );\r\n      if (isExisting.length) {\r\n        this.sweetAlertService.customErrorMessage(\r\n          \"Reference code already in the list\"\r\n        );\r\n      } else {\r\n        this.apiService\r\n          .findByParam(\r\n            ENDPOINTS.orPreparationRefCodeCheck,\r\n            this.orPreparationReference.reference\r\n          )\r\n          .subscribe(\r\n            (res) => {\r\n              if (res?.responseData?.data) {\r\n                let appForm = res?.responseData?.data[0];\r\n                this.apiService\r\n                  .findByParam(ENDPOINTS.paymentDetailsByAppformId, appForm.id)\r\n                  .subscribe((form: GenericResponse<Payment>) => {\r\n                    console.log(\"form : \", form);\r\n                    let paymentDtls;\r\n                    if (form) {\r\n                      //  this.totalAmounts.totalAmountDue = Number(this.totalAmounts.totalAmountDue) + Number(form?.responseData?.data?.amountDue);\r\n                      // this.totalAmounts.setTotalValues(form.responseData.data)\r\n\r\n                      this.totalAmts.push(form.responseData.data);\r\n                      this.totalAmounts.setTotalValues(this.totalAmts);\r\n\r\n                      this.orPreparationForm\r\n                        .get(\"totalAmount\")\r\n                        .setValue(\r\n                          this.numberPipe.transform(\r\n                            this.totalAmounts.totalSales,\r\n                            \".2-2\"\r\n                          )\r\n                        );\r\n                    }\r\n                    console.log(\"totals : \", this.totalAmounts);\r\n                  });\r\n\r\n                this.officialReceiptReferenceList.push(\r\n                  this.orPreparationReference\r\n                );\r\n                this.orPreparationReference.amount = appForm.amount;\r\n                // this.getAvailableReferenceCode(this.orPreparationReference?.reference);\r\n                this.orPreparationReference = new OrPreparationReference();\r\n                // console.log(\"data => \", this.officialReceiptReferenceList)\r\n                this.officialReceiptReferenceList.filter((ref) => {\r\n                  // let total = Number(this.orPreparationForm.controls.totalAmount.value) + Number(ref.amount);\r\n                  // this.orPreparationForm.controls.totalAmount.setValue(total);\r\n                });\r\n              } else {\r\n                this.sweetAlertService.customErrorMessage(res?.responseMessage);\r\n              }\r\n            },\r\n            (err) => {\r\n              this.sweetAlertService.error(err);\r\n            }\r\n          );\r\n      }\r\n    }\r\n  }\r\n\r\n  removeReferenceCode(obj) {\r\n    this.officialReceiptReferenceList = this.officialReceiptReferenceList.filter(\r\n      (filteredOR) => filteredOR.reference !== obj.reference.trim()\r\n    );\r\n    console.log(\"remove ref : \", obj);\r\n    console.log(\"totalAmts\", this.totalAmts);\r\n    this.totalAmts = this.totalAmts.filter(\r\n      (amts) => amts.applicationForm.referenceCode !== obj.reference.trim()\r\n    );\r\n    console.log(\"totalamts\", this.totalAmts);\r\n    this.totalAmounts.setTotalValues(this.totalAmts);\r\n    console.log(\"total amounts : \", this.totalAmounts);\r\n  }\r\n\r\n  getAvailableReferenceCode(refCode = \"\") {\r\n    if (refCode) {\r\n      this.apiService\r\n        .findByParam(ENDPOINTS.availableReferenceCode, refCode)\r\n        .subscribe((res) => {\r\n          console.log(res);\r\n        });\r\n    } else {\r\n      this.apiService\r\n        .findAll(ENDPOINTS.availableReferenceCode)\r\n        .subscribe((res) => {\r\n          console.log(res);\r\n          this.availableReferenceCodeList = res;\r\n        });\r\n    }\r\n  }\r\n\r\n  saveOrUpdate(): void {\r\n    this.orPreparation.id = this.orPreparation?.id ? this.orPreparation.id : 0;\r\n    this.orPreparation.officialReceiptReferences = this.officialReceiptReferenceList;\r\n    // this.orPreparation.setTotalAmounts(this.totalAmounts);\r\n    // console.log(this.totalAmounts.)\r\n    console.log(\"orPrep\", this.orPreparation);\r\n    this.apiService\r\n      .findByParam(\r\n        ENDPOINTS.orPreparationORNumberCheck,\r\n        this.orPreparation.officialReceiptNo\r\n      )\r\n      .subscribe(\r\n        (isExisting) => {\r\n          if (isExisting.responseData.data && !this.orPreparation?.id) {\r\n            this.sweetAlertService.customErrorMessage(\r\n              isExisting.responseMessage\r\n            );\r\n          } else {\r\n            // this.orPreparation.setTotalAmounts(this.totalAmounts);\r\n            // console.log('orPreparation')\r\n            this.apiService\r\n              .save(`${ENDPOINTS.orPreparation}/submit`, {\r\n                ...this.orPreparation,\r\n                ...this.totalAmounts,\r\n              })\r\n              .subscribe(\r\n                (res: any) => {\r\n                  if (res !== undefined) {\r\n                    this.sweetAlertService.success(res);\r\n                  }\r\n                },\r\n                (err: any) => {\r\n                  this.sweetAlertService.error(err);\r\n                },\r\n                () => {\r\n                  this.resetFormValidator();\r\n                  this.getList();\r\n                }\r\n              );\r\n          }\r\n        },\r\n        (err) => this.sweetAlertService.error(err)\r\n      );\r\n  }\r\n\r\n  cancel(): void {\r\n    Swal.fire({\r\n      text: `Are you sure you want to cancel this Official Receipt Preparation?`,\r\n      icon: \"question\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Confirm\",\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.orPreparation = this.formListComponent.elementObject;\r\n        this.orPreparation.officialReceiptReferences = null;\r\n        this.apiService\r\n          .save(`${ENDPOINTS.orPreparation}/cancel`, this.orPreparation)\r\n          .subscribe(\r\n            (res: any) => {\r\n              if (res !== undefined) {\r\n                this.sweetAlertService.success(res);\r\n              }\r\n            },\r\n            (err: any) => {\r\n              this.sweetAlertService.error(err);\r\n            },\r\n            () => {\r\n              this.resetFormValidator();\r\n              this.getList();\r\n            }\r\n          );\r\n      }\r\n    });\r\n  }\r\n\r\n  getOrPreparation(): void {\r\n    console.log(\"get:: =>\");\r\n    this.apiService\r\n      .findById(ENDPOINTS.officialReceipt, this.formListComponent.idForUpdate)\r\n      .subscribe((res: any) => {\r\n        if (res) {\r\n          this.orPreparation = res.responseData.data;\r\n          console.log(\"OR PREP => \", res);\r\n          this.totalAmounts.totalSales = this.orPreparation.totalSales;\r\n          this.totalAmounts.totalAmountDue = this.orPreparation.totalAmountDue;\r\n          this.totalAmounts.totalVat = this.orPreparation.totalVat;\r\n          this.totalAmounts.totalWithholdingtax = this.orPreparation.totalWithholdingtax;\r\n\r\n          const company = this.companyList.find(\r\n            (company) => company.companyName === this.orPreparation.companyName\r\n          );\r\n\r\n          this.selectedCompanyId = company.id;\r\n          this.selectedCompany = company;\r\n          this.getAvailableReferenceCodeList();\r\n          this.orPreparationForm\r\n            .get(\"totalAmount\")\r\n            .setValue(this.totalAmounts.totalSales);\r\n          this.officialReceiptReferenceList = this.orPreparation.officialReceiptReferences;\r\n          this.officialReceiptReferenceList.filter((or) => {\r\n            this.apiService\r\n              .findByParam(ENDPOINTS.orPreparationRefCodeCheck, or.reference)\r\n              .subscribe((paymentDtls) => {\r\n                let appForm = paymentDtls?.responseData?.data[0];\r\n                this.apiService\r\n                  .findByParam(ENDPOINTS.paymentDetailsByAppformId, appForm.id)\r\n                  .subscribe((payment) => {\r\n                    this.totalAmts.push(payment?.responseData?.data);\r\n                  });\r\n              });\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  getCompanyList() {\r\n    this.isGettingCompanies = true;\r\n    this.apiService.findAll(ENDPOINTS.activeCompanies).subscribe(\r\n      (res: any) => {\r\n        this.companyList = res.responseData.data; // .filter((company) => !this.notInSelection.includes(company.status));\r\n        this.isGettingCompanies = false;\r\n      },\r\n      (err: any) => {\r\n        this.isGettingCompanies = false;\r\n      }\r\n    );\r\n  }\r\n\r\n  setCompanyDetails(i) {\r\n    this.selectedCompanyId = i.id;\r\n    this.orPreparation.companyName = i.companyName;\r\n    this.orPreparation.companyTin = i.companyTin;\r\n    this.orPreparation.companyAddress =\r\n      \"[\" + i.country.code + \" - \" + i.country.name + \"] \" + i.completeAddress;\r\n    this.getAvailableReferenceCodeList();\r\n  }\r\n\r\n  setFormValidator(): void {\r\n    this.orPreparationForm = this.formBuilder.group({\r\n      officialReceiptNo: [\"\", Validators.required],\r\n      typeOfMedium: [\"\", Validators.required],\r\n      amount: [\"\"],\r\n      officialReceiptReference: [\"\"],\r\n      voucherControlNumber: [\"\"],\r\n      businessStyle: [\"\"],\r\n      fullPaymentOf: [\"\"],\r\n      controlNumber: [\"\"],\r\n      companyName: [\"\"],\r\n      companyTin: [\"\"],\r\n      companyAddress: [\"\"],\r\n      totalAmount: [\"\"],\r\n    });\r\n  }\r\n\r\n  resetFormValidator(): void {\r\n    this.selectedCompanyId = null;\r\n    this.totalAmounts = new TotalAmountsModel();\r\n    this.orPreparationForm.reset();\r\n    this.orPreparation = new OrPreparation();\r\n    this.officialReceiptReferenceList = [];\r\n    this.orPreparationForm.markAsUntouched();\r\n    this.orPreparationForm.markAsPristine();\r\n  }\r\n\r\n  getTypeOfMedium() {\r\n    this.typeOfMediumList = [];\r\n\r\n    this.apiService.findAll(ENDPOINTS.typeOfMediumSingleMedia).subscribe(\r\n      (singleMediaList: any) => {\r\n        this.apiService\r\n          .findAll(ENDPOINTS.typeOfMediumMultiMediaMoving)\r\n          .subscribe((multimediaMovingList: any) => {\r\n            this.apiService\r\n              .findAll(ENDPOINTS.typeOfMediumMultiMediaMoving)\r\n              .subscribe((multimediaStaticList: any) => {\r\n                this.typeOfMediumList = [\r\n                  ...singleMediaList.responseData.data,\r\n                  ...multimediaMovingList.responseData.data,\r\n                  ...multimediaStaticList.responseData.data,\r\n                ];\r\n                const key = \"id\";\r\n                this.typeOfMediumList = [\r\n                  ...new Map(\r\n                    this.typeOfMediumList.map((item) => [item[key], item])\r\n                  ).values(),\r\n                ];\r\n              });\r\n          });\r\n      },\r\n      (err: any) => {\r\n        console.log(err);\r\n      }\r\n    );\r\n  }\r\n\r\n  compareList(value: any, selected: any): boolean {\r\n    if (value && selected) {\r\n      return value.id === selected.id;\r\n    }\r\n  }\r\n\r\n  printOr(orData): void {\r\n    if (orData.id) {\r\n      this.report.filename = \"ASC_Receipt\";\r\n      this.report.format = \"pdf\";\r\n      (this.report.module = \"Receipt\"),\r\n        (this.report.params = { officialReceiptId: orData.id });\r\n      this.apiService\r\n        .printReport(ENDPOINTS.generateReports, this.report)\r\n        .subscribe((data: any) => {\r\n          const newBlob = new Blob([data], { type: \"application/pdf\" });\r\n          const downloadURL = URL.createObjectURL(newBlob);\r\n          window.open(downloadURL);\r\n        });\r\n    } else {\r\n      this.sweetAlertService.customErrorMessage(\"Please select data first...\");\r\n    }\r\n  }\r\n\r\n  getAvailableReferenceCodeList() {\r\n    console.log(\"here\");\r\n    if (this.selectedCompanyId && this.orPreparation.typeOfMedium) {\r\n      this.apiService\r\n        .findAll(\r\n          ENDPOINTS.availableReferenceCodeByCompany +\r\n            \"/\" +\r\n            this.selectedCompanyId +\r\n            \"/type-of-medium/\" +\r\n            this.orPreparation.typeOfMedium.description\r\n        )\r\n        .subscribe((res) => {\r\n          this.availableReferenceCodeList = res;\r\n        });\r\n    }\r\n  }\r\n}\r\n","export default \"<form>\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12 title\\\">\\r\\n        <mat-label> Official Receipt Preparation </mat-label>\\r\\n      </div>\\r\\n    </div>\\r\\n    <hr />\\r\\n\\r\\n    <form [formGroup]=\\\"orPreparationForm\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\">\\r\\n          <mat-label\\r\\n            >Official Receipt Number\\r\\n            <span class=\\\"required-field\\\">*</span></mat-label\\r\\n          >\\r\\n          <input\\r\\n            matInput\\r\\n            [(ngModel)]=\\\"orPreparation.officialReceiptNo\\\"\\r\\n            name=\\\"officialReceiptNo\\\"\\r\\n            formControlName=\\\"officialReceiptNo\\\"\\r\\n          />\\r\\n        </mat-form-field>\\r\\n\\r\\n        <!-- <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\">\\r\\n          <mat-label>Voucher Control Number</mat-label>\\r\\n          <input matInput [(ngModel)]=\\\"orPreparation.voucherControlNumber\\\" name=\\\"voucherControlNumber\\\"\\r\\n            formControlName=\\\"voucherControlNumber\\\">\\r\\n        </mat-form-field> -->\\r\\n\\r\\n        <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n          <mat-label>\\r\\n            <ng-container *ngIf=\\\"isGettingCompanies; else loadedLabelTemp\\\">\\r\\n              <i>Loading companies...</i>\\r\\n            </ng-container>\\r\\n            <ng-template #loadedLabelTemp>\\r\\n              Search Company:\\r\\n            </ng-template>\\r\\n          </mat-label>\\r\\n          <mat-select [value]=\\\"selectedCompany\\\">\\r\\n            <mat-option\\r\\n              *ngFor=\\\"let i of companyList\\\"\\r\\n              [value]=\\\"i\\\"\\r\\n              (click)=\\\"setCompanyDetails(i)\\\"\\r\\n            >\\r\\n              {{ i.companyName }}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n\\r\\n        <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\">\\r\\n          <mat-label>Company Name:</mat-label>\\r\\n          <input\\r\\n            matInput\\r\\n            [(ngModel)]=\\\"orPreparation.companyName\\\"\\r\\n            name=\\\"companyName\\\"\\r\\n            formControlName=\\\"companyName\\\"\\r\\n          />\\r\\n        </mat-form-field>\\r\\n\\r\\n        <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\">\\r\\n          <mat-label>Company TIN:</mat-label>\\r\\n          <input\\r\\n            matInput\\r\\n            [(ngModel)]=\\\"orPreparation.companyTin\\\"\\r\\n            name=\\\"companyTin\\\"\\r\\n            formControlName=\\\"companyTin\\\"\\r\\n          />\\r\\n        </mat-form-field>\\r\\n\\r\\n        <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n          <mat-label>Company Address:</mat-label>\\r\\n          <textarea\\r\\n            matInput\\r\\n            [(ngModel)]=\\\"orPreparation.companyAddress\\\"\\r\\n            name=\\\"companyAddress\\\"\\r\\n            formControlName=\\\"companyAddress\\\"\\r\\n          >\\r\\n          </textarea>\\r\\n        </mat-form-field>\\r\\n\\r\\n        <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\">\\r\\n          <mat-label>Business Style:</mat-label>\\r\\n          <input\\r\\n            matInput\\r\\n            [(ngModel)]=\\\"orPreparation.businessStyle\\\"\\r\\n            name=\\\"businessStyle\\\"\\r\\n            formControlName=\\\"businessStyle\\\"\\r\\n          />\\r\\n        </mat-form-field>\\r\\n\\r\\n        <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\">\\r\\n          <mat-label>Control Number:</mat-label>\\r\\n          <input\\r\\n            matInput\\r\\n            [(ngModel)]=\\\"orPreparation.controlNumber\\\"\\r\\n            name=\\\"controlNumber\\\"\\r\\n            formControlName=\\\"controlNumber\\\"\\r\\n          />\\r\\n        </mat-form-field>\\r\\n\\r\\n        <!-- <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\">\\r\\n          <mat-label>Amount:</mat-label>\\r\\n          <input\\r\\n            matInput\\r\\n            [(ngModel)]=\\\"orPreparation.amount\\\"\\r\\n            name=\\\"amount\\\"\\r\\n            (change)=\\\"amountChanged()\\\"\\r\\n            formControlName=\\\"amount\\\"\\r\\n          />\\r\\n        </mat-form-field> -->\\r\\n\\r\\n        <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\">\\r\\n          <mat-label>Total Amount:</mat-label>\\r\\n          <input\\r\\n            matInput\\r\\n            name=\\\"totalAmount\\\"\\r\\n            formControlName=\\\"totalAmount\\\"\\r\\n            readonly\\r\\n          />\\r\\n        </mat-form-field>\\r\\n\\r\\n        <!-- <mat-form-field class=\\\"col-md-8\\\" appearance=\\\"outline\\\">\\r\\n          <mat-label>Amount In Words:</mat-label>\\r\\n          <input matInput [(ngModel)]=\\\"orPreparation.fullPaymentOf\\\" name=\\\"fullPaymentOf\\\"\\r\\n            formControlName=\\\"fullPaymentOf\\\">\\r\\n        </mat-form-field> -->\\r\\n\\r\\n        <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n          <mat-label>Type of Medium</mat-label>\\r\\n          <mat-select\\r\\n            [(ngModel)]=\\\"orPreparation.typeOfMedium\\\"\\r\\n            formControlName=\\\"typeOfMedium\\\"\\r\\n            name=\\\"typeOfMedium\\\"\\r\\n            [compareWith]=\\\"compareList\\\"\\r\\n            (selectionChange)=\\\"getAvailableReferenceCodeList()\\\"\\r\\n          >\\r\\n            <mat-option *ngFor=\\\"let i of typeOfMediumList\\\" [value]=\\\"i\\\">\\r\\n              {{ i.description }}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n\\r\\n        <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\">\\r\\n          <mat-label>List of Paid Reference Codes:</mat-label>\\r\\n          <mat-select\\r\\n            [(ngModel)]=\\\"orPreparationReference.reference\\\"\\r\\n            [disabled]=\\\"!selectedCompanyId || !orPreparation.typeOfMedium\\\"\\r\\n            formControlName=\\\"officialReceiptReference\\\"\\r\\n            name=\\\"officialReceiptReference\\\"\\r\\n            [compareWith]=\\\"compareList\\\"\\r\\n          >\\r\\n            <mat-option\\r\\n              *ngFor=\\\"let i of availableReferenceCodeList\\\"\\r\\n              [value]=\\\"i.referenceCode\\\"\\r\\n            >\\r\\n              {{ i.referenceCode }}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n          <span *ngIf=\\\"orPreparationReference.reference\\\"> <br /><br /> </span>\\r\\n          <button\\r\\n            mat-raised-button\\r\\n            color=\\\"primary\\\"\\r\\n            (click)=\\\"addReceiptReference()\\\"\\r\\n            *ngIf=\\\"orPreparationReference.reference\\\"\\r\\n          >\\r\\n            <i class=\\\"material-icons color__white\\\">save</i> Add Receipt\\r\\n            Reference\\r\\n          </button>\\r\\n        </mat-form-field>\\r\\n\\r\\n        <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\">\\r\\n          <mat-label>Reference List:</mat-label>\\r\\n          <input matInput readonly />\\r\\n\\r\\n          <ul *ngFor=\\\"let i of officialReceiptReferenceList\\\">\\r\\n            <li>\\r\\n              {{ i.reference }}\\r\\n              <span\\r\\n                class=\\\"material-icons\\\"\\r\\n                matTooltip=\\\"Remove Reference Code\\\"\\r\\n                (click)=\\\"removeReferenceCode(i)\\\"\\r\\n                >close</span\\r\\n              >\\r\\n            </li>\\r\\n          </ul>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n    </form>\\r\\n\\r\\n    <div class=\\\"button-content\\\">\\r\\n      <app-form-action-buttons\\r\\n        [childObject]=\\\"orPreparation\\\"\\r\\n        [childForm]=\\\"orPreparationForm\\\"\\r\\n        (saveFunction)=\\\"saveOrUpdate()\\\"\\r\\n        (updateFunction)=\\\"saveOrUpdate()\\\"\\r\\n        (cancelFunction)=\\\"resetFormValidator()\\\"\\r\\n      >\\r\\n      </app-form-action-buttons>\\r\\n      <button\\r\\n        [disabled]=\\\"!orPreparation.id\\\"\\r\\n        mat-raised-button\\r\\n        color=\\\"primary\\\"\\r\\n        (click)=\\\"printOr(orPreparation)\\\"\\r\\n      >\\r\\n        <i class=\\\"material-icons color__white\\\">print</i> Print OR\\r\\n      </button>\\r\\n    </div>\\r\\n    <br />\\r\\n\\r\\n    <br />\\r\\n    <app-form-list\\r\\n      [dataSource]=\\\"dataSource\\\"\\r\\n      [displayedColumns]=\\\"displayedColumns\\\"\\r\\n      (selectInListFunction)=\\\"getOrPreparation()\\\"\\r\\n      (deleteInListFunction)=\\\"cancel()\\\"\\r\\n    ></app-form-list>\\r\\n  </div>\\r\\n</form>\\r\\n\";","import { Payment } from \"./payment.model\";\r\n\r\ninterface Amounts {}\r\n\r\nexport class TotalAmountsModel {\r\n  totalSales: number = 0;\r\n  totalVat: number = 0;\r\n  totalWithholdingtax: number = 0;\r\n  totalAmountDue: number = 0;\r\n\r\n  setTotalValues(data: Array<Payment>) {\r\n    console.log(\"totalValues:  \", data);\r\n    let totalAmountDue: number = 0;\r\n    let totalVat: number = 0;\r\n    let totalSales: number = 0;\r\n    let totalwWithholdingtax: number = 0;\r\n    data.filter((payment: Payment) => {\r\n      totalAmountDue = totalAmountDue + payment.amountDue;\r\n      totalVat = totalVat + payment.vat;\r\n      totalSales = totalSales + payment.basicRate + payment.vat;\r\n      totalwWithholdingtax = totalwWithholdingtax + payment.withholdingTax;\r\n    });\r\n    this.totalAmountDue = totalAmountDue;\r\n    this.totalSales = totalSales;\r\n    this.totalVat = totalVat;\r\n    this.totalWithholdingtax = this.totalWithholdingtax;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { OrPreparationComponent } from './or-preparation.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: OrPreparationComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class OrPreparationRoutingModule { }\r\n","export default \"span.material-icons {\\n  color: #ad0000;\\n  cursor: pointer;\\n}\\n\\n.button-content {\\n  display: inline-flex;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9wYWdlcy9hY2NvdW50aW5nL29yLXByZXBhcmF0aW9uL29yLXByZXBhcmF0aW9uLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksY0FBQTtFQUNBLGVBQUE7QUFDSjs7QUFFQTtFQUNJLG9CQUFBO0FBQ0oiLCJmaWxlIjoic3JjL2FwcC9tb2R1bGVzL3BhZ2VzL2FjY291bnRpbmcvb3ItcHJlcGFyYXRpb24vb3ItcHJlcGFyYXRpb24uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJzcGFuLm1hdGVyaWFsLWljb25zIHtcclxuICAgIGNvbG9yOiByZ2IoMTczLCAwLCAwKTtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxufVxyXG5cclxuLmJ1dHRvbi1jb250ZW50e1xyXG4gICAgZGlzcGxheTogaW5saW5lLWZsZXg7XHJcbn0iXX0= */\";"],"sourceRoot":"webpack:///"}