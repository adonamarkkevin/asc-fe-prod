{"version":3,"sources":["./src/app/modules/pages/maintenance/product/product.component.ts","./src/app/modules/pages/maintenance/product/product.component.html"],"names":[],"mappings":"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","file":"default~applications-applications-module~product-product-module-es2015.js","sourcesContent":["import { Component, Inject, OnInit, Optional, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { FormListComponent } from '@fragments';\r\nimport { ApiService, DataStorageService, SweetAlertService } from '@services';\r\nimport { COMMON_FUNCTION, ENDPOINTS, OTHER_STATUS, STATUSES } from '@shared';\r\nimport { Product } from '@models';\r\nimport Swal from 'sweetalert2';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-product',\r\n  templateUrl: './product.component.html',\r\n  styleUrls: ['./product.component.scss']\r\n})\r\nexport class ProductComponent implements OnInit {\r\n\r\n  @ViewChild(FormListComponent) formListComponent: FormListComponent\r\n  dataSource: MatTableDataSource<Product>;\r\n  displayedColumns: string[] = ['brand', 'productDescription', 'category', 'status'];\r\n  statusList = [...STATUSES];\r\n\r\n  product = new Product();\r\n  productList = [];\r\n  brandList = [];\r\n  categoryList = [];\r\n\r\n  isFromModal = false;\r\n  showApproveRejectButton = false;\r\n  isShowApproveDisapproveButtonByAdmin = false;\r\n\r\n  userRole = '';\r\n\r\n  productForm: FormGroup;\r\n  constructor(\r\n    private apiService: ApiService,\r\n    private formBuilder: FormBuilder,\r\n    private sweetAlertService: SweetAlertService,\r\n    private dataStorage: DataStorageService,\r\n    @Optional() public dialogRef: MatDialogRef<ProductComponent>,\r\n    @Optional() @Inject(MAT_DIALOG_DATA) public data: any,\r\n  ) {\r\n    this.userRole = this.dataStorage.getUserRole();\r\n    if (data) {\r\n      if (data.dataForModal) {\r\n        const dataFromModal = data.dataForModal;\r\n\r\n        console.log(dataFromModal);\r\n\r\n        this.isFromModal = dataFromModal.isFromModal;\r\n        this.showApproveRejectButton = dataFromModal.isUpdate;\r\n\r\n        if (dataFromModal.isUpdate) {\r\n          this.product = dataFromModal.product;\r\n        } else {\r\n          this.product.brand = dataFromModal.brand;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (!this.isFromModal) {\r\n      this.getList();\r\n    }\r\n    this.setFormValidator();\r\n    this.getDropdownList();\r\n  }\r\n\r\n  getList(): void {\r\n    this.apiService.findAll(ENDPOINTS.product).subscribe((res: any) => {\r\n      this.productList = res.responseData.data;\r\n      this.dataSource = new MatTableDataSource<Product>(res.responseData.data);\r\n      this.dataSource.paginator = this.formListComponent.paginator;\r\n      this.dataSource.sort = this.formListComponent.sort;\r\n    });\r\n  }\r\n\r\n  getDropdownList() {\r\n    this.apiService.findAll(ENDPOINTS.activeBrands).subscribe((res: any) => {\r\n      this.brandList = res.responseData.data;\r\n    });\r\n\r\n    this.apiService.findAll(ENDPOINTS.category).subscribe((res: any) => {\r\n      this.categoryList = res.responseData.data;\r\n      this.categoryList = res.responseData.data.filter(\r\n        (category: any) => category.status === COMMON_FUNCTION.ACTIVE);\r\n    });\r\n  }\r\n\r\n  save(): void {\r\n    if (this.isFromModal) {\r\n      this.product.status = OTHER_STATUS.FOR_APPROVAL;\r\n    }\r\n    this.apiService.save(ENDPOINTS.product, this.product).subscribe(\r\n      (res: any) => {\r\n        if (res !== undefined) {\r\n          this.sweetAlertService.success(res);\r\n          this.dataStorage.setS1NewProduct(res.responseData.data);\r\n        }\r\n      }, (err: any) => {\r\n        this.sweetAlertService.error(err);\r\n      }, () => {\r\n        // actions after subscription\r\n        if (this.isFromModal) {\r\n          this.dialogRef.close(this.dataStorage.getS1NewProduct());\r\n        } else {\r\n          this.resetFormValidator();\r\n          this.getList();\r\n        }\r\n      });\r\n  }\r\n\r\n  getProduct(): void {\r\n    this.apiService.findById(ENDPOINTS.product, this.formListComponent.idForUpdate).subscribe((res: any) => {\r\n      if (res) {\r\n        this.product = res.responseData.data;\r\n\r\n        this.isShowApproveDisapproveButtonByAdmin = this.product.status === 'FOR_APPROVAL' ?\r\n          true : false;\r\n      }\r\n    });\r\n  }\r\n\r\n  update(): void {\r\n    if (this.data?.dataForModal?.currentStatus === OTHER_STATUS.FOR_APPROVAL && this.product.status !== COMMON_FUNCTION.APPROVED) {\r\n      this.product.status = OTHER_STATUS.FOR_APPROVAL;\r\n    } else if (this.product.status === COMMON_FUNCTION.APPROVED) {\r\n      this.product.status = COMMON_FUNCTION.ACTIVE;\r\n    }\r\n\r\n    this.apiService.update(ENDPOINTS.product, this.product).subscribe(\r\n      (res: any) => {\r\n        if (res !== undefined) {\r\n          this.sweetAlertService.success(res);\r\n          if (this.product.status !== COMMON_FUNCTION.DISAPPROVED.toUpperCase() &&\r\n            this.product.status !== COMMON_FUNCTION.INACTIVE.toUpperCase()) {\r\n            this.dataStorage.setS1NewProduct(res.responseData.data);\r\n          } else {\r\n            this.dataStorage.setS1NewProduct(new Product());\r\n          }\r\n        }\r\n      }, (err: any) => {\r\n        this.sweetAlertService.error(err);\r\n      }, () => {\r\n        if (this.isFromModal) {\r\n          this.dialogRef.close(this.dataStorage.getS1NewProduct());\r\n        } else {\r\n          this.resetFormValidator();\r\n          this.getList();\r\n        }\r\n      });\r\n  }\r\n\r\n  setFormValidator(): void {\r\n    this.product.status = COMMON_FUNCTION.ACTIVE;\r\n    this.productForm = this.formBuilder.group({\r\n      description: ['', Validators.required],\r\n      status: [''],\r\n      brand: ['', Validators.required],\r\n      category: ['', Validators.required]\r\n    });\r\n  }\r\n\r\n  resetFormValidator(): void {\r\n    this.product = new Product();\r\n    this.isShowApproveDisapproveButtonByAdmin = false;\r\n    this.product.status = COMMON_FUNCTION.ACTIVE;\r\n    this.productForm.markAsUntouched();\r\n    this.productForm.markAsPristine();\r\n  }\r\n\r\n  compareCategory(value: any, selected: any): boolean {\r\n    if (value && selected) {\r\n      return value.description === selected.description;\r\n    }\r\n  }\r\n\r\n  compareBrand(value: any, selected: any): boolean {\r\n    if (value && selected) {\r\n      return value.description === selected.description;\r\n    }\r\n  }\r\n\r\n  delete() {\r\n\r\n    Swal.fire({\r\n      text: 'Are you sure you want to delete this product?',\r\n      icon: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Confirm'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.apiService.deleteById(ENDPOINTS.product, this.product.id).subscribe(\r\n          () => {\r\n            this.sweetAlertService.customSuccessMessage('Product successfully deleted.');\r\n            this.resetFormValidator();\r\n            this.getList();\r\n          }\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  approve() {\r\n    this.product.status = 'APPROVED';\r\n    this.update();\r\n  }\r\n\r\n  reject() {\r\n    this.product.status = 'DISAPPROVED';\r\n    this.update();\r\n  }\r\n\r\n}\r\n","<form>\r\n  <div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12 title\">\r\n        <mat-label>\r\n          Product\r\n        </mat-label>\r\n      </div>\r\n    </div>\r\n    <hr>\r\n\r\n    <form [formGroup]=\"productForm\">\r\n      <div class=\"row\">\r\n        <mat-form-field class=\"col-md-6\" appearance=\"outline\">\r\n          <mat-label> Brand </mat-label>\r\n          <mat-select [(ngModel)]=\"product.brand\" name=\"brand\" formControlName=\"brand\" [compareWith]=\"compareBrand\"\r\n            [disabled]=\"isFromModal\">\r\n            <mat-option *ngFor=\"let i of brandList\" [value]=\"i\">\r\n              {{i.description}}\r\n            </mat-option>\r\n            <mat-option *ngIf=\"isFromModal\">\r\n              {{ product?.brand?.description }}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field class=\"col-md-10\" appearance=\"outline\">\r\n          <mat-label>Product <span class=\"required-field\">*</span></mat-label>\r\n          <input matInput [(ngModel)]=\"product.description\" name=\"description\" formControlName=\"description\">\r\n        </mat-form-field>\r\n\r\n        <mat-form-field class=\"col-md-6\" appearance=\"outline\">\r\n          <mat-label>Category <span class=\"required-field\">*</span></mat-label>\r\n          <mat-select [(ngModel)]=\"product.category\" name=\"category\" formControlName=\"category\"\r\n            [compareWith]=\"compareCategory\">\r\n            <mat-option *ngFor=\"let i of categoryList\" [value]=\"i\">\r\n              {{i.description}}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field class=\"col-md-2\" appearance=\"outline\" [hidden]=\"isFromModal\"\r\n          *ngIf=\"(userRole === 'ROLE_ADMIN' || userRole === 'ROLE_SUPER_ADMIN' || userRole === 'ROLE_ENCODER') && product.id\">\r\n          <mat-label>Status</mat-label>\r\n          <mat-select [(ngModel)]=\"product.status\" name=\"status\" formControlName=\"status\">\r\n            <mat-option *ngFor=\"let i of statusList\" [value]=\"i.status\">\r\n              {{i.status}}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n    </form>\r\n\r\n    <app-form-action-buttons [showApproveRejectButton]=\"showApproveRejectButton\" [isFromModal]=\"isFromModal\"\r\n      [childObject]=\"product\" [childForm]=\"productForm\" (saveFunction)=\"save()\" (updateFunction)=\"update()\"\r\n      (approveFunction)=\"approve()\" (rejectFunction)=\"reject()\" (cancelFunction)=\"resetFormValidator()\"\r\n      (closeModalFunction)=\"resetFormValidator()\" (deleteFunction)=\"delete()\" [isShowApproveDisapproveButton]=\"isShowApproveDisapproveButtonByAdmin\">\r\n    </app-form-action-buttons>\r\n    <br>\r\n    <ng-container\r\n      *ngIf=\"(!showApproveRejectButton && !isFromModal) || userRole === 'ROLE_ADMIN' || userRole === 'ROLE_SUPER_ADMIN' \">\r\n      <app-form-list [dataSource]=\"dataSource\" [displayedColumns]=\"displayedColumns\"\r\n        (selectInListFunction)=\"getProduct()\" [hidden]=\"isFromModal\"></app-form-list>\r\n    </ng-container>\r\n\r\n  </div>\r\n</form>\r\n\r\n\r\n<!-- <form>\r\n    <div class=\"container\">\r\n      <div class=\"row\">\r\n        <div class=\"col-md-12 title\">\r\n          <mat-label>\r\n            Product\r\n          </mat-label>\r\n        </div>\r\n      </div>\r\n      <hr>\r\n\r\n      <form [formGroup]=\"productForm\">\r\n        <div class=\"row\">\r\n            <mat-form-field class=\"col-md-4\" appearance=\"outline\">\r\n                <mat-label>Category</mat-label>\r\n                <mat-select [(ngModel)]=\"product.category\" name=\"category\" formControlName=\"category\">\r\n                  <mat-option *ngFor=\"let i of categoryList\" [value]=\"i\">\r\n                    {{i.description}}\r\n                  </mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n          <mat-form-field class=\"col-md-8\" appearance=\"outline\">\r\n            <mat-label>Description: <span class=\"required-field\">*</span></mat-label>\r\n            <input matInput [(ngModel)]=\"product.description\" name=\"description\" formControlName=\"description\">\r\n          </mat-form-field>\r\n\r\n          <mat-form-field class=\"col-md-4\" appearance=\"outline\">\r\n            <mat-label>Status</mat-label>\r\n            <mat-select [(ngModel)]=\"product.status\" name=\"status\" formControlName=\"status\">\r\n              <mat-option *ngFor=\"let i of statusList\" [value]=\"i.status\">\r\n                {{i.status}}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n      </form>\r\n\r\n      <app-form-action-buttons [childObject]=\"product\" [childForm]=\"productForm\" (saveFunction)=\"save()\"\r\n        (updateFunction)=\"update()\" (cancelFunction)=\"resetFormValidator()\"></app-form-action-buttons>\r\n      <br> -->\r\n<!-- <app-form-list [dataSource]=\"dataSource\" [displayedColumns]=\"displayedColumns\"\r\n        (selectInListFunction)=\"getProduct)\"></app-form-list> -->\r\n\r\n<!-- </div>\r\n  </form> -->"],"sourceRoot":"webpack:///"}