{"version":3,"sources":["./src/app/modules/pages/maintenance/product/product.component.html","./src/app/modules/pages/maintenance/product/product.component.scss","./src/app/modules/pages/maintenance/product/product.component.ts"],"names":[],"mappings":"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","file":"default~applications-applications-module~product-product-module-es2015.js","sourcesContent":["export default \"<form>\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12 title\\\">\\r\\n        <mat-label>\\r\\n          Product\\r\\n        </mat-label>\\r\\n      </div>\\r\\n    </div>\\r\\n    <hr>\\r\\n\\r\\n    <form [formGroup]=\\\"productForm\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\">\\r\\n          <mat-label> Brand </mat-label>\\r\\n          <mat-select [(ngModel)]=\\\"product.brand\\\" name=\\\"brand\\\" formControlName=\\\"brand\\\" [compareWith]=\\\"compareBrand\\\"\\r\\n            [disabled]=\\\"isFromModal\\\">\\r\\n            <mat-option *ngFor=\\\"let i of brandList\\\" [value]=\\\"i\\\">\\r\\n              {{i.description}}\\r\\n            </mat-option>\\r\\n            <mat-option *ngIf=\\\"isFromModal\\\">\\r\\n              {{ product?.brand?.description }}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n\\r\\n        <mat-form-field class=\\\"col-md-10\\\" appearance=\\\"outline\\\">\\r\\n          <mat-label>Product <span class=\\\"required-field\\\">*</span></mat-label>\\r\\n          <input matInput [(ngModel)]=\\\"product.description\\\" name=\\\"description\\\" formControlName=\\\"description\\\">\\r\\n        </mat-form-field>\\r\\n\\r\\n        <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\">\\r\\n          <mat-label>Category <span class=\\\"required-field\\\">*</span></mat-label>\\r\\n          <mat-select [(ngModel)]=\\\"product.category\\\" name=\\\"category\\\" formControlName=\\\"category\\\"\\r\\n            [compareWith]=\\\"compareCategory\\\">\\r\\n            <mat-option *ngFor=\\\"let i of categoryList\\\" [value]=\\\"i\\\">\\r\\n              {{i.description}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n\\r\\n        <mat-form-field class=\\\"col-md-2\\\" appearance=\\\"outline\\\" [hidden]=\\\"isFromModal\\\"\\r\\n          *ngIf=\\\"(userRole === 'ROLE_ADMIN' || userRole === 'ROLE_SUPER_ADMIN' || userRole === 'ROLE_ENCODER') && product.id\\\">\\r\\n          <mat-label>Status</mat-label>\\r\\n          <mat-select [(ngModel)]=\\\"product.status\\\" name=\\\"status\\\" formControlName=\\\"status\\\">\\r\\n            <mat-option *ngFor=\\\"let i of statusList\\\" [value]=\\\"i.status\\\">\\r\\n              {{i.status}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n    </form>\\r\\n\\r\\n    <app-form-action-buttons [showApproveRejectButton]=\\\"showApproveRejectButton\\\" [isFromModal]=\\\"isFromModal\\\"\\r\\n      [childObject]=\\\"product\\\" [childForm]=\\\"productForm\\\" (saveFunction)=\\\"save()\\\" (updateFunction)=\\\"update()\\\"\\r\\n      (approveFunction)=\\\"approve()\\\" (rejectFunction)=\\\"reject()\\\" (cancelFunction)=\\\"resetFormValidator()\\\"\\r\\n      (closeModalFunction)=\\\"resetFormValidator()\\\" (deleteFunction)=\\\"delete()\\\" [isShowApproveDisapproveButton]=\\\"isShowApproveDisapproveButtonByAdmin\\\">\\r\\n    </app-form-action-buttons>\\r\\n    <br>\\r\\n    <ng-container\\r\\n      *ngIf=\\\"(!showApproveRejectButton && !isFromModal) || userRole === 'ROLE_ADMIN' || userRole === 'ROLE_SUPER_ADMIN' \\\">\\r\\n      <app-form-list [dataSource]=\\\"dataSource\\\" [displayedColumns]=\\\"displayedColumns\\\"\\r\\n        (selectInListFunction)=\\\"getProduct()\\\" [hidden]=\\\"isFromModal\\\"></app-form-list>\\r\\n    </ng-container>\\r\\n\\r\\n  </div>\\r\\n</form>\\r\\n\\r\\n\\r\\n<!-- <form>\\r\\n    <div class=\\\"container\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-12 title\\\">\\r\\n          <mat-label>\\r\\n            Product\\r\\n          </mat-label>\\r\\n        </div>\\r\\n      </div>\\r\\n      <hr>\\r\\n\\r\\n      <form [formGroup]=\\\"productForm\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <mat-form-field class=\\\"col-md-4\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label>Category</mat-label>\\r\\n                <mat-select [(ngModel)]=\\\"product.category\\\" name=\\\"category\\\" formControlName=\\\"category\\\">\\r\\n                  <mat-option *ngFor=\\\"let i of categoryList\\\" [value]=\\\"i\\\">\\r\\n                    {{i.description}}\\r\\n                  </mat-option>\\r\\n                </mat-select>\\r\\n              </mat-form-field>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n          <mat-form-field class=\\\"col-md-8\\\" appearance=\\\"outline\\\">\\r\\n            <mat-label>Description: <span class=\\\"required-field\\\">*</span></mat-label>\\r\\n            <input matInput [(ngModel)]=\\\"product.description\\\" name=\\\"description\\\" formControlName=\\\"description\\\">\\r\\n          </mat-form-field>\\r\\n\\r\\n          <mat-form-field class=\\\"col-md-4\\\" appearance=\\\"outline\\\">\\r\\n            <mat-label>Status</mat-label>\\r\\n            <mat-select [(ngModel)]=\\\"product.status\\\" name=\\\"status\\\" formControlName=\\\"status\\\">\\r\\n              <mat-option *ngFor=\\\"let i of statusList\\\" [value]=\\\"i.status\\\">\\r\\n                {{i.status}}\\r\\n              </mat-option>\\r\\n            </mat-select>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n      </form>\\r\\n\\r\\n      <app-form-action-buttons [childObject]=\\\"product\\\" [childForm]=\\\"productForm\\\" (saveFunction)=\\\"save()\\\"\\r\\n        (updateFunction)=\\\"update()\\\" (cancelFunction)=\\\"resetFormValidator()\\\"></app-form-action-buttons>\\r\\n      <br> -->\\r\\n<!-- <app-form-list [dataSource]=\\\"dataSource\\\" [displayedColumns]=\\\"displayedColumns\\\"\\r\\n        (selectInListFunction)=\\\"getProduct)\\\"></app-form-list> -->\\r\\n\\r\\n<!-- </div>\\r\\n  </form> -->\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcGFnZXMvbWFpbnRlbmFuY2UvcHJvZHVjdC9wcm9kdWN0LmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, Inject, OnInit, Optional, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { FormListComponent } from '@fragments';\r\nimport { ApiService, DataStorageService, SweetAlertService } from '@services';\r\nimport { COMMON_FUNCTION, ENDPOINTS, OTHER_STATUS, STATUSES } from '@shared';\r\nimport { Product } from '@models';\r\nimport Swal from 'sweetalert2';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-product',\r\n  templateUrl: './product.component.html',\r\n  styleUrls: ['./product.component.scss']\r\n})\r\nexport class ProductComponent implements OnInit {\r\n\r\n  @ViewChild(FormListComponent) formListComponent: FormListComponent\r\n  dataSource: MatTableDataSource<Product>;\r\n  displayedColumns: string[] = ['brand', 'productDescription', 'category', 'status'];\r\n  statusList = [...STATUSES];\r\n\r\n  product = new Product();\r\n  productList = [];\r\n  brandList = [];\r\n  categoryList = [];\r\n\r\n  isFromModal = false;\r\n  showApproveRejectButton = false;\r\n  isShowApproveDisapproveButtonByAdmin = false;\r\n\r\n  userRole = '';\r\n\r\n  productForm: FormGroup;\r\n  constructor(\r\n    private apiService: ApiService,\r\n    private formBuilder: FormBuilder,\r\n    private sweetAlertService: SweetAlertService,\r\n    private dataStorage: DataStorageService,\r\n    @Optional() public dialogRef: MatDialogRef<ProductComponent>,\r\n    @Optional() @Inject(MAT_DIALOG_DATA) public data: any,\r\n  ) {\r\n    this.userRole = this.dataStorage.getUserRole();\r\n    if (data) {\r\n      if (data.dataForModal) {\r\n        const dataFromModal = data.dataForModal;\r\n\r\n        console.log(dataFromModal);\r\n\r\n        this.isFromModal = dataFromModal.isFromModal;\r\n        this.showApproveRejectButton = dataFromModal.isUpdate;\r\n\r\n        if (dataFromModal.isUpdate) {\r\n          this.product = dataFromModal.product;\r\n        } else {\r\n          this.product.brand = dataFromModal.brand;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (!this.isFromModal) {\r\n      this.getList();\r\n    }\r\n    this.setFormValidator();\r\n    this.getDropdownList();\r\n  }\r\n\r\n  getList(): void {\r\n    this.apiService.findAll(ENDPOINTS.product).subscribe((res: any) => {\r\n      this.productList = res.responseData.data;\r\n      this.dataSource = new MatTableDataSource<Product>(res.responseData.data);\r\n      this.dataSource.paginator = this.formListComponent.paginator;\r\n      this.dataSource.sort = this.formListComponent.sort;\r\n    });\r\n  }\r\n\r\n  getDropdownList() {\r\n    this.apiService.findAll(ENDPOINTS.activeBrands).subscribe((res: any) => {\r\n      this.brandList = res.responseData.data;\r\n    });\r\n\r\n    this.apiService.findAll(ENDPOINTS.category).subscribe((res: any) => {\r\n      this.categoryList = res.responseData.data;\r\n      this.categoryList = res.responseData.data.filter(\r\n        (category: any) => category.status === COMMON_FUNCTION.ACTIVE);\r\n    });\r\n  }\r\n\r\n  save(): void {\r\n    if (this.isFromModal) {\r\n      this.product.status = OTHER_STATUS.FOR_APPROVAL;\r\n    }\r\n    this.apiService.save(ENDPOINTS.product, this.product).subscribe(\r\n      (res: any) => {\r\n        if (res !== undefined) {\r\n          this.sweetAlertService.success(res);\r\n          this.dataStorage.setS1NewProduct(res.responseData.data);\r\n        }\r\n      }, (err: any) => {\r\n        this.sweetAlertService.error(err);\r\n      }, () => {\r\n        // actions after subscription\r\n        if (this.isFromModal) {\r\n          this.dialogRef.close(this.dataStorage.getS1NewProduct());\r\n        } else {\r\n          this.resetFormValidator();\r\n          this.getList();\r\n        }\r\n      });\r\n  }\r\n\r\n  getProduct(): void {\r\n    this.apiService.findById(ENDPOINTS.product, this.formListComponent.idForUpdate).subscribe((res: any) => {\r\n      if (res) {\r\n        this.product = res.responseData.data;\r\n\r\n        this.isShowApproveDisapproveButtonByAdmin = this.product.status === 'FOR_APPROVAL' ?\r\n          true : false;\r\n      }\r\n    });\r\n  }\r\n\r\n  update(): void {\r\n    if (this.data?.dataForModal?.currentStatus === OTHER_STATUS.FOR_APPROVAL && this.product.status !== COMMON_FUNCTION.APPROVED) {\r\n      this.product.status = OTHER_STATUS.FOR_APPROVAL;\r\n    } else if (this.product.status === COMMON_FUNCTION.APPROVED) {\r\n      this.product.status = COMMON_FUNCTION.ACTIVE;\r\n    }\r\n\r\n    this.apiService.update(ENDPOINTS.product, this.product).subscribe(\r\n      (res: any) => {\r\n        if (res !== undefined) {\r\n          this.sweetAlertService.success(res);\r\n          if (this.product.status !== COMMON_FUNCTION.DISAPPROVED.toUpperCase() &&\r\n            this.product.status !== COMMON_FUNCTION.INACTIVE.toUpperCase()) {\r\n            this.dataStorage.setS1NewProduct(res.responseData.data);\r\n          } else {\r\n            this.dataStorage.setS1NewProduct(new Product());\r\n          }\r\n        }\r\n      }, (err: any) => {\r\n        this.sweetAlertService.error(err);\r\n      }, () => {\r\n        if (this.isFromModal) {\r\n          this.dialogRef.close(this.dataStorage.getS1NewProduct());\r\n        } else {\r\n          this.resetFormValidator();\r\n          this.getList();\r\n        }\r\n      });\r\n  }\r\n\r\n  setFormValidator(): void {\r\n    this.product.status = COMMON_FUNCTION.ACTIVE;\r\n    this.productForm = this.formBuilder.group({\r\n      description: ['', Validators.required],\r\n      status: [''],\r\n      brand: ['', Validators.required],\r\n      category: ['', Validators.required]\r\n    });\r\n  }\r\n\r\n  resetFormValidator(): void {\r\n    this.product = new Product();\r\n    this.isShowApproveDisapproveButtonByAdmin = false;\r\n    this.product.status = COMMON_FUNCTION.ACTIVE;\r\n    this.productForm.markAsUntouched();\r\n    this.productForm.markAsPristine();\r\n  }\r\n\r\n  compareCategory(value: any, selected: any): boolean {\r\n    if (value && selected) {\r\n      return value.description === selected.description;\r\n    }\r\n  }\r\n\r\n  compareBrand(value: any, selected: any): boolean {\r\n    if (value && selected) {\r\n      return value.description === selected.description;\r\n    }\r\n  }\r\n\r\n  delete() {\r\n\r\n    Swal.fire({\r\n      text: 'Are you sure you want to delete this product?',\r\n      icon: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Confirm'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.apiService.deleteById(ENDPOINTS.product, this.product.id).subscribe(\r\n          () => {\r\n            this.sweetAlertService.customSuccessMessage('Product successfully deleted.');\r\n            this.resetFormValidator();\r\n            this.getList();\r\n          }\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  approve() {\r\n    this.product.status = 'APPROVED';\r\n    this.update();\r\n  }\r\n\r\n  reject() {\r\n    this.product.status = 'DISAPPROVED';\r\n    this.update();\r\n  }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}