{"version":3,"sources":["webpack:///src/app/modules/fragments/request-for-special-clearing/request-for-special-clearing.component.ts","webpack:///src/app/modules/fragments/request-for-special-clearing/request-for-special-clearing.component.html","webpack:///src/app/core/models/screener-reviewer-pair.model.ts","webpack:///src/app/core/models/numberOfMultipleApplicationAllowed.model.ts","webpack:///src/app/core/models/application-rejection.model.ts","webpack:///src/app/core/models/type-of-main-document.model.ts","webpack:///src/app/modules/fragments/reject-disapproved-reason/reject-disapproved-reason.component.ts","webpack:///src/app/modules/fragments/reject-disapproved-reason/reject-disapproved-reason.component.html","webpack:///src/app/core/models/rationale-s2.model.ts","webpack:///src/app/core/models/rationale.model.ts","webpack:///src/app/modules/fragments/fragments.module.ts","webpack:///src/app/core/models/application-rationale-list.model.ts","webpack:///src/app/modules/fragments/incomplete-disapproved-rationale/incomplete-disapproved-rationale.component.ts","webpack:///src/app/modules/fragments/incomplete-disapproved-rationale/incomplete-disapproved-rationale.component.html","webpack:///src/app/modules/fragments/form-list/form-list.component.ts","webpack:///src/app/modules/fragments/form-list/form-list.component.html","webpack:///src/app/core/models/type-of-rational.model.ts","webpack:///src/app/core/models/email-notification.model.ts","webpack:///src/app/modules/fragments/fragments-routing.module.ts","webpack:///src/app/core/models/asc-rate-special.model.ts","webpack:///src/app/core/models/medium-execution-controller.model.ts","webpack:///src/app/core/models/promissory-note-period.model.ts","webpack:///src/app/core/models/dialect.model.ts","webpack:///src/app/modules/fragments/form-action-buttons/form-action-buttons.component.ts","webpack:///src/app/modules/fragments/form-action-buttons/form-action-buttons.component.html","webpack:///src/app/core/models/login-image.model.ts","webpack:///src/app/core/models/type-of-medium-execution.model.ts","webpack:///src/app/core/models/uploading-document-file-size-model.ts","webpack:///src/app/core/models/announcement.model.ts","webpack:///src/app/core/models/company-penalties.model.ts","webpack:///src/app/core/models/holiday.model.ts","webpack:///src/app/core/models/brand-penalties.model.ts","webpack:///src/app/core/models/qrAndBarCodeChecker.model.ts","webpack:///src/app/core/models/application-rationale-list-s2.model.ts","webpack:///src/app/core/models/s1-and-s2-form-expiration-period.model.ts"],"names":["dialogRef","RequestForSpecialClearingComponent","apiService","dataStorage","sweetAlertService","router","data","s1Application","s2Application","applicationRequest","applicationForm","currentUser","getUserAccount","setApplicationRequest","hasSpecialClearing","applicationType","adTitle","applicationOwner","brand","product","company","formType","submitApplicationForm","tagLine","status","displayStatus","fire","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","value","endpointExtension","actionBy","username","save","applicationRequests","id","subscribe","res","customSuccessMessage","toLowerCase","navigate","err","error","message","under_maintenance","close","specialClearing","submissionType","ORIGINAL","internalStatus","externalStatus","console","log","s2ApplicationFormPresentorSave","responseData","ScreenerReviewerPair","NumberOfMultipleApplicationAllowed","ApplicationRejection","typeOfReason","TypeOfMainDocument","RejectDisapprovedReasonComponent","spinner","applicationRejection","applicationRejectionList","typeOfReasonList","selectedReasonList","getTypeOfReasonsList","ascUser","action","headerTitle","findAll","endpoint","applicationStage","s1ReasonOfRejection","applicationS2","s2ReasonOfRejection","actionDate","Date","push","isExist","filter","reason","length","setRejectionData","errMsg","mySelectReason","nativeElement","e","index","findIndex","srl","splice","msg","endpointReason","endpointReject","swalMsg","navigateToList","S1_APPLICATION_REJECTED","S2_APPLICATION_REJECTED","REJECT","S1_APPLICATION_DISAPPROVED","S2_APPLICATION_DISAPPROVED","DISAPPROVED","show","decisionStatus","INCOMPLETE","s1ApplicationFormEncoderRejectCompliance","s1ApplicationFormEncoderReject","s1ApplicationFormEncoderRejectRevision","s2ApplicationFormEncoderReject","info","remarks","res1","multipleApplication","actualNumberOfApplicationForm","countVerifiedApplicationForm","S1_APPLICATION_REVIEWED","forwardMultipleAppsTo","hide","navigateByUrl","assignedEncoder","forwardMultipleAppFormToAdSpe","selectedReason","submitRejectionDisapproved","cancel","RationaleS2","Rationale","FragmentsModule","ApplicationRationaleList","IncompleteDisapprovedRationaleComponent","rationale","rationaleS2","typeOfRational","applicationRationaleList","applicationRationaleListS2","rationaleList","selectedRationaleList","isOther","otherDescription","getRationale","submissionTypeForm","applicationFormS2","typeOfRationale","REVISION","COMPLIANCE","hasToa","list","swalMessage","activeModel","applicationRationale","applicationRationaleS2","applicationRationaleLists","others","selectRationale","submitRationale","FormListComponent","dialog","api","alert","displayedColumns","selectInListFunction","deleteInListFunction","updateListFunction","idForUpdate","idForDelete","getVoucherRef","signatory","signatoryRef","dataSource","paginator","sort","emit","obj","elementObject","JSON","parse","stringify","open","signatoryEditModal","disableClose","width","undefined","r","closeAll","findByParam","voucherAttachment","voucherAttachmentReference","fileURL","customErrorMessage","window","TypeOfRational","EmailNotification","routes","FragmentsRoutingModule","forChild","AscRateSpecial","MediumExecutionController","PromissoryNotePeriod","Dialect","FormActionButtonsComponent","isFromModal","showApproveRejectButton","saveFunction","validateFunction","updateFunction","deleteFunction","cancelFunction","closeModalFunction","approveFunction","rejectFunction","isHideSaveButton","isShowApproveDisapproveButton","isHideDeleteButton","isHideUpdateButton","isShowValidateButton","childObject","LoginImage","TypeOfMediumExecution","UploadingDocumentFileSize","Announcement","CompanyPenalties","Holiday","BrandPenalties","QrAndBarCodeChecker","ApplicationS2RationaleList","S1AndS2FormExpirationPeriod"],"mappings":"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B,EAAiB,mI,EAAA,sI,EAAA,8H,EAAA,mK;QAAA,C;;;gBAAjBA,iB;UAAiB,8B;UAAA;YAAA;wEACjB,wE,EAAc,I;;wEACd,8D,EAAS,I;;wEACT,gE,EAAU,I;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;cClBvB;;cACE;;cAEE;;cACE;;cACA;;cACF;;cAEA;;cACE;;cACA;;cACF;;cAEA;;cACE;;cACA;;cAEF;;cAEA;;cACE;;cACA;;cACF;;cAEA;;cACE;;cACA;;cAEF;;cAEA;;cACE;;cACA;;cACF;;cAEA;;cACE;;cACA;;cACF;;cAEA;;cACE;;cACA;;cACF;;cAEA;;cACE;;cACA;;cACF;;cAEA;;cACE;;cACA;;cAEF;;cAEA;;cACE;;cACA;;cACF;;cAEA;;cACE;;cACA;;cACF;;cAEA;;cACE;;cACA;;cAGF;;cAEA;;cACE;;cACA;;cACF;;cAEA;;cACE;;cACA;;cACF;;cAEA;;cACE;;cACA;;cACF;;cAEA;;cACE;;cACA;;cACF;;cAEA;;cACE;;cACA;;cACF;;cAEA;;cACE;;cACA;;cACF;;cAEA;;cACE;;cACA;;cACF;;cAEA;;cACE;;cACA;;cACF;;cAEA;;cACE;;cACA;;cAGF;;cAEA;;cACE;;cACA;;cAGF;;cAEA;;cACE;;cACA;;cACF;;cAEA;;cACE;;cACA;;cAEF;;cAEA;;cACE;;cACA;;cAEF;;cAEA;;cACE;;cACA;;cACF;;cAEA;;cACE;;cACA;;cAEF;;cAEA;;cACE;;cACA;;cAIF;;cAEA;;cACE;;cACA;;cAIF;;cAEA;;cACE;;cACA;;cAIF;;cAEA;;cACE;;cACA;;cAIF;;cAEA;;cACE;;cACA;;cACF;;cAEA;;cACE;;cACA;;cACF;;cAEA;;cACE;;cACA;;cACF;;cAEA;;cACE;;cACA;;cACF;;cAEA;;cACE;;cACA;;cACF;;cAEA;;cACE;;cACA;;cACF;;cAEA;;cACE;;cACA;;cACF;;cAEA;;cACE;;cACA;;cACF;;cAEA;;cACE;;cACA;;cACF;;cAEA;;cACE;;cACA;;cACF;;cAEA;;cACE;;cACA;;c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","file":"default~affiliation-affiliation-module~announcement-content-announcement-content-module~applications~1d994fe1-es5.js","sourcesContent":["import { i18nMetaToJSDoc } from \"@angular/compiler/src/render3/view/i18n/meta\";\r\nimport { Component, Inject, OnInit, Optional } from \"@angular/core\";\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\r\nimport { Router } from \"@angular/router\";\r\nimport { S1Application, S2Application } from \"@models\";\r\nimport { ApiService, DataStorageService, SweetAlertService } from \"@services\";\r\nimport { ENDPOINTS, ERROR_MESSAGES, SUBMISSION_TYPE } from \"@shared\";\r\nimport { ApplicationRequest } from \"app/core/models/application-request.model\";\r\nimport Swal from \"sweetalert2\";\r\n\r\n@Component({\r\n  selector: \"app-request-for-special-clearing\",\r\n  templateUrl: \"./request-for-special-clearing.component.html\",\r\n  styleUrls: [\"./request-for-special-clearing.component.scss\"],\r\n})\r\nexport class RequestForSpecialClearingComponent implements OnInit {\r\n  s1Application = new S1Application();\r\n  s2Application = new S2Application();\r\n  applicationRequest = new ApplicationRequest();\r\n\r\n  currentUser: any;\r\n\r\n  constructor(\r\n    private apiService: ApiService,\r\n    private dataStorage: DataStorageService,\r\n    private sweetAlertService: SweetAlertService,\r\n    private router: Router,\r\n    @Optional()\r\n    public dialogRef: MatDialogRef<RequestForSpecialClearingComponent>,\r\n    @Optional() @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.applicationRequest = this.data.applicationRequest;\r\n    this.s1Application = this.applicationRequest.applicationForm;\r\n    this.currentUser = this.dataStorage.getUserAccount();\r\n    this.setApplicationRequest();\r\n  }\r\n\r\n  // static id to select special clearing application type.\r\n  setApplicationRequest(): void {\r\n    this.applicationRequest.hasSpecialClearing = true;\r\n    this.applicationRequest.applicationType = this.s1Application.applicationType;\r\n    this.applicationRequest.adTitle = this.s1Application.adTitle;\r\n    this.applicationRequest.applicationOwner = this.currentUser;\r\n    this.applicationRequest.brand = this.s1Application.brand;\r\n    this.applicationRequest.product = this.s1Application.product;\r\n    // this.applicationRequest.category = this.s1Application.category;\r\n    this.applicationRequest.company = this.s1Application.company;\r\n    this.applicationRequest.formType = this.s1Application.formType;\r\n    // this.applicationRequest.membersAffiliation = this.s1Application.membersAffiliation;\r\n    this.applicationRequest.submitApplicationForm = false;\r\n    this.applicationRequest.tagLine = this.s1Application.tagLine;\r\n    this.applicationRequest.applicationForm = this.s1Application;\r\n  }\r\n\r\n  onApproveOrDisapprove(status = \"APPROVED\"): void {\r\n    const displayStatus = status === \"APPROVED\" ? \"approve\" : \"disapprove\";\r\n    Swal.fire({\r\n      text: `Are you sure you want to ${displayStatus} this application?`,\r\n      icon: \"question\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Confirm\",\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        const endpointExtension =\r\n          status === \"APPROVED\" ? \"/approve\" : \"/disapprove\";\r\n        // this.s1Application.actionDate = new Date();\r\n        this.s1Application.actionBy = this.currentUser.username;\r\n\r\n        this.apiService\r\n          .save(\r\n            `${ENDPOINTS.applicationRequests}${endpointExtension}/${this.applicationRequest.id}`,\r\n            this.applicationRequest\r\n          )\r\n          .subscribe(\r\n            (res: any) => {\r\n              this.sweetAlertService.customSuccessMessage(\r\n                `Application successfully ${status.toLowerCase()}.`\r\n              );\r\n              this.router.navigate([\"asc/page/application/s2/special\"]);\r\n            },\r\n            (err: any) => {\r\n              err.error.message = ERROR_MESSAGES.under_maintenance;\r\n              this.sweetAlertService.error(err);\r\n            },\r\n            () => {\r\n              this.dialogRef.close(this.s1Application);\r\n            }\r\n          );\r\n      }\r\n    });\r\n  }\r\n\r\n  submitRequest(): void {\r\n    Swal.fire({\r\n      text: \"Are you sure you want to submit request?\",\r\n      icon: \"question\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Confirm\",\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.apiService\r\n          .save(ENDPOINTS.applicationRequests, this.applicationRequest)\r\n          .subscribe(\r\n            (res: any) => {\r\n              this.sweetAlertService.customSuccessMessage(\r\n                \"Request has been submit successfully.\"\r\n              );\r\n              this.router.navigate([\"asc/page/application/s2/special\"]);\r\n              this.dialogRef.close();\r\n            },\r\n            (err: any) => {\r\n              err.error.message = ERROR_MESSAGES.under_maintenance;\r\n              this.sweetAlertService.error(err);\r\n            }\r\n          );\r\n        this.dialogRef.close();\r\n      }\r\n    });\r\n  }\r\n\r\n  proceedToS2() {\r\n    Swal.fire({\r\n      text: \"Are you sure you want to apply this application to S2?\",\r\n      icon: \"question\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Confirm\",\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.s2Application.specialClearing = true;\r\n        this.s2Application.applicationRequest = this.applicationRequest;\r\n        this.s2Application.applicationForm = this.s1Application;\r\n        this.s2Application.submissionType = SUBMISSION_TYPE.ORIGINAL; // this.s2Application.applicationForm.submissionType;\r\n        this.s2Application.internalStatus = \"SAVED\";\r\n        this.s2Application.externalStatus = \"SAVED\";\r\n        console.log(\"View S2:\", this.s2Application);\r\n        this.apiService\r\n          .save(ENDPOINTS.s2ApplicationFormPresentorSave, this.s2Application)\r\n          .subscribe(\r\n            (res: any) => {\r\n              this.router.navigate([\r\n                \"asc/page/application/s2/update\",\r\n                res.responseData.data.id,\r\n              ]);\r\n              this.dialogRef.close();\r\n            },\r\n            (err: any) => {}\r\n          );\r\n      }\r\n    });\r\n  }\r\n}\r\n","<form>\r\n    <div class=\"container-fluid\">\r\n\r\n      <div class=\"row title\">\r\n        <div class=\"col-md-12\">\r\n          <table>\r\n            <tr>\r\n              <td *ngIf=\"applicationRequest?.status!=undefined\">\r\n                <span>\r\n                  Status:\r\n                </span>\r\n              </td>\r\n              <td *ngIf=\"applicationRequest?.status!=undefined\">\r\n                <span *ngIf=\"applicationRequest?.status!=undefined\">\r\n                  <b>{{applicationRequest?.status?.replaceAll('_',' ') | uppercase}}</b>\r\n                </span>\r\n              </td>\r\n              <td class=\"no-border\" *ngIf=\"applicationRequest?.status==='APPROVED' && currentUser?.userRole?.name == 'ROLE_APPLICANT'\"\r\n              [hidden]=\"applicationRequest?.submitApplicationForm\">\r\n              <button class=\"button-right button-red\" mat-raised-button (click)=\"proceedToS2()\">\r\n                <i class=\"material-icons color__white\">check</i> Proceed to S2\r\n              </button>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td class=\"no-border\"></td>\r\n            </tr>\r\n          </table>\r\n          <hr />\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-md-2\" appearance=\"outline\">\r\n          <mat-label>Form Type: </mat-label>\r\n        </div>\r\n        <div class=\"col-md-4\" appearance=\"outline\">\r\n          <mat-label><b>{{ s1Application?.formType.replaceAll('_', ' ') }}</b></mat-label>\r\n        </div>\r\n\r\n        <div class=\"col-md-2\" appearance=\"outline\">\r\n          <mat-label>Application Type:</mat-label>\r\n        </div>\r\n        <div class=\"col-md-4\" appearance=\"outline\">\r\n          <mat-label><b>{{ s1Application?.applicationType?.description.replaceAll('_', ' ') | uppercase }}</b></mat-label>\r\n        </div>\r\n        <br>\r\n        <br>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <mat-panel-title>\r\n          <i class=\"material-icons color__white\">label_important</i> &nbsp;Client Information\r\n        </mat-panel-title><br />\r\n\r\n          <div class=\"row\">\r\n            <mat-form-field class=\"col-md-6\" appearance=\"outline\">\r\n              <mat-label>Company Name</mat-label>\r\n              <input matInput [value]=\"s1Application?.company?.companyName\" readonly>\r\n            </mat-form-field>\r\n            <mat-form-field class=\"col-md-6\" appearance=\"outline\">\r\n              <mat-label>Company Membership Affiliation</mat-label>\r\n              <input matInput [value]=\"s1Application?.company?.membersAffiliation?.description\" readonly>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div class=\"row\">\r\n            <mat-form-field class=\"col-md-4\" appearance=\"outline\">\r\n              <mat-label>Brand</mat-label>\r\n              <input matInput [value]=\"s1Application?.brand?.description\" readonly>\r\n            </mat-form-field>\r\n            <mat-form-field class=\"col-md-4\" appearance=\"outline\">\r\n              <mat-label>Product</mat-label>\r\n              <input matInput [value]=\"s1Application?.product?.description\" readonly>\r\n            </mat-form-field>\r\n            <mat-form-field class=\"col-md-4\" appearance=\"outline\">\r\n              <mat-label>Category</mat-label>\r\n              <input matInput [value]=\"s1Application?.product?.category?.description\" readonly>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n\r\n        <mat-panel-title *ngIf=\"currentUser?.userRole?.name === 'ROLE_ADMIN' || currentUser?.userRole?.name === 'ROLE_SUPER_ADMIN'\">\r\n          <i class=\"material-icons color__white\">label_important</i> &nbsp;Presentor Information\r\n        </mat-panel-title>\r\n\r\n        <div class=\"row\" *ngIf=\"currentUser?.userRole?.name === 'ROLE_ADMIN' || currentUser?.userRole?.name === 'ROLE_SUPER_ADMIN'\">\r\n          <!-- <mat-form-field class=\"col-md-4\" appearance=\"outline\">\r\n            <mat-label>Membership Affiliation</mat-label>\r\n            <input matInput [value]=\"s1Application?.company?.membersAffiliation?.description\" readonly>\r\n          </mat-form-field> -->\r\n          <mat-form-field class=\"col-md-7\" appearance=\"outline\">\r\n            <mat-label>Company Name</mat-label>\r\n            <input matInput [value]=\"s1Application?.company?.companyName\" readonly>\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div class=\"row\" *ngIf=\"currentUser?.userRole?.name === 'ROLE_ADMIN' || currentUser?.userRole?.name === 'ROLE_SUPER_ADMIN'\">\r\n          <mat-form-field class=\"col-md-11\" appearance=\"outline\">\r\n            <mat-label>Address</mat-label>\r\n            <input matInput [value]=\"s1Application?.company?.completeAddress\" readonly>\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div class=\"row\" *ngIf=\"currentUser?.userRole?.name === 'ROLE_ADMIN' || currentUser?.userRole?.name === 'ROLE_SUPER_ADMIN'\">\r\n          <mat-form-field class=\"col-md-8\" appearance=\"outline\" *ngIf=\"s1Application.id!= null\">\r\n            <mat-label>Name of Applicant</mat-label>\r\n            <input matInput [value]=\"s1Application?.applicationOwner?.firstName+' '+s1Application?.applicationOwner?.lastName\" readonly>\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div class=\"row\" *ngIf=\"currentUser?.userRole?.name === 'ROLE_ADMIN' || currentUser?.userRole?.name === 'ROLE_SUPER_ADMIN'\">\r\n          <mat-form-field class=\"col-md-4\" appearance=\"outline\" *ngIf=\"s1Application.id!= null\">\r\n            <mat-label>Mobile Number</mat-label>\r\n            <input matInput [value]=\"s1Application?.applicationOwner?.mobileNumber\" readonly>\r\n          </mat-form-field>\r\n          <mat-form-field class=\"col-md-3\" appearance=\"outline\" *ngIf=\"s1Application.id!= null\">\r\n            <mat-label>Telephone Number</mat-label>\r\n            <input matInput [value]=\"s1Application?.company?.companyTelephoneNo\" readonly>\r\n          </mat-form-field>\r\n          <mat-form-field class=\"col-md-4\" appearance=\"outline\" *ngIf=\"s1Application.id!= null\">\r\n            <mat-label>Email Address</mat-label>\r\n            <input matInput [value]=\"s1Application?.applicationOwner?.username\" readonly>\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <mat-panel-title>\r\n          <i class=\"material-icons color__white\">label_important</i> &nbsp;Material Information\r\n        </mat-panel-title>\r\n\r\n          <div class=\"row\">\r\n            <mat-form-field class=\"col-md-4\" appearance=\"outline\">\r\n              <mat-label>Ad Title</mat-label>\r\n              <input matInput [value]=\"s1Application?.adTitle\" readonly />\r\n            </mat-form-field>\r\n\r\n            <!-- <mat-form-field class=\"col-md-4\" appearance=\"outline\">\r\n              <mat-label>Reference Code</mat-label>\r\n              <input matInput [value]=\"s1Application?.referenceCode\" readonly />\r\n            </mat-form-field> -->\r\n\r\n            <mat-form-field class=\"col-md-4\" appearance=\"outline\">\r\n              <mat-label>Tag Line</mat-label>\r\n              <input matInput [value]=\"s1Application?.tagLine\" readonly />\r\n            </mat-form-field>\r\n          </div>\r\n\r\n        <div class=\"row\"><br /></div>\r\n        <hr />\r\n        <br />\r\n        <div class=\"row\" *ngIf=\"applicationRequest?.status===undefined\">\r\n            <div>\r\n              <button mat-raised-button class=\"button-red\" (click)=\"submitRequest()\">\r\n                <i class=\"material-icons color__white\">check</i> Submit\r\n              </button>\r\n              <button mat-raised-button class=\"button-red\" (click)=\"dialogRef.close()\">\r\n                <i class=\"material-icons color__white\">cancel</i> Cancel\r\n              </button>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- //////////////////////////////////////// ADMIN //////////////////////////////////////////////////////////// -->\r\n        <div class=\"row\"\r\n        *ngIf=\"applicationRequest?.status === 'FOR_APPROVAL' && (currentUser?.userRole?.name == 'ROLE_ADMIN'||currentUser?.userRole?.name == 'ROLE_SUPER_ADMIN')\"\r\n        >\r\n        <div mat-dialog-actions>\r\n          <div class=\"dialog-button-content\" align=\"end\">\r\n            <button class=\"confirm\" (click)=\"onApproveOrDisapprove()\">\r\n              <i class=\"material-icons color__white\">thumb_up_alt</i> Approve\r\n            </button>\r\n            <button class=\"warn\" (click)=\"onApproveOrDisapprove('DISAPPROVED')\">\r\n              <i class=\"material-icons color__white\">thumb_down_alt</i> Disapprove\r\n            </button>\r\n          </div>\r\n        </div>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  </form>\r\n","import { UserAccount } from './user-account.model';\r\n\r\nexport class ScreenerReviewerPair {\r\n    id: number;\r\n    screener: UserAccount;\r\n    reviewer: UserAccount;\r\n  }\r\n","export class NumberOfMultipleApplicationAllowed{\r\n    id: number;\r\n    minimum: String;\r\n    maximum: String;\r\n}","import { S1Application } from \"./s1-application.model\";\r\nimport { S2Application } from \"./s2-application.model\";\r\nimport { TypeOfReason } from \"./type-of-reason.model\";\r\nimport { UserAccount } from \"./user-account.model\";\r\n\r\nexport class ApplicationRejection {\r\n    id: number;\r\n    applicationForm: S1Application;\r\n    applicationS2: S2Application;\r\n    actionDate: Date;\r\n    actionBy: UserAccount;\r\n    typeOfReason: TypeOfReason = new TypeOfReason();\r\n    remarks: string;\r\n}","export class TypeOfMainDocument {\r\n    id: number;\r\n    status: string;\r\n    typeOfMainDocument: string;\r\n}","import { Component, ElementRef, Inject, OnInit, Type, ViewChild } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { S1Application, S2Application, TypeOfReason } from '@models';\r\nimport { ApiService, DataStorageService, SweetAlertService } from '@services';\r\nimport { APPLICATION_STATUS, APPLICATION_STATUS_S2, APP_DECISION_STATUS, COMMON_FUNCTION, ENDPOINTS, SUBMISSION_TYPE } from '@shared';\r\nimport { ApplicationRejection } from 'app/core/models/application-rejection.model';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-reject-disapproved-reason',\r\n  templateUrl: './reject-disapproved-reason.component.html',\r\n  styleUrls: ['./reject-disapproved-reason.component.scss']\r\n})\r\nexport class RejectDisapprovedReasonComponent implements OnInit {\r\n\r\n  @ViewChild('selectReason')\r\n  mySelectReason: ElementRef;\r\n  s1Application = new S1Application();\r\n  s2Application = new S2Application();\r\n  applicationRejection = new ApplicationRejection();\r\n  typeOfReason = new TypeOfReason();\r\n  applicationRejectionList: Array<ApplicationRejection> = [];\r\n  typeOfReasonList = [];\r\n  selectedReasonList = [];\r\n  errMsg: any;\r\n\r\n  headerTitle;\r\n  ascUser;\r\n  action;\r\n  status;\r\n  currentUser: any;\r\n\r\n  remarks: string;\r\n\r\n\r\n  constructor(\r\n    private apiService: ApiService,\r\n    private sweetAlertService: SweetAlertService,\r\n    private router: Router,\r\n    private dataStorage: DataStorageService,\r\n    private spinner: NgxSpinnerService,\r\n    public dialogRef: MatDialogRef<RejectDisapprovedReasonComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getTypeOfReasonsList();\r\n\r\n    this.s1Application = this.data.s1Application;\r\n    this.s2Application = this.data.s2Application;\r\n    this.ascUser = this.data.ascUser;\r\n    this.action = this.data.action;\r\n    this.status = this.data.status;\r\n    this.headerTitle = this.action;\r\n    this.currentUser = this.dataStorage.getUserAccount();\r\n  }\r\n\r\n  getTypeOfReasonsList(): void {\r\n    this.apiService.findAll(ENDPOINTS.typeOfReason).subscribe(\r\n      (res: any) => {\r\n        this.typeOfReasonList = res.responseData.data;\r\n        console.log('reasons => ', this.typeOfReasonList)\r\n      }\r\n    )\r\n  }\r\n\r\n  setRejectionData(): void {\r\n    let endpoint\r\n    if (this.data.applicationStage === 's1') {\r\n      this.applicationRejection.applicationForm = this.s1Application;\r\n      endpoint = ENDPOINTS.s1ReasonOfRejection;\r\n    } else {\r\n      this.applicationRejection.applicationS2 = this.s2Application;\r\n      endpoint = ENDPOINTS.s2ReasonOfRejection;\r\n    }\r\n    this.applicationRejection.actionBy = this.currentUser;\r\n    this.applicationRejection.actionDate = new Date();\r\n    this.applicationRejection.typeOfReason = this.typeOfReason;\r\n    this.applicationRejectionList.push(this.applicationRejection);\r\n    this.applicationRejection = new ApplicationRejection();\r\n  }\r\n\r\n  selectedReason(data) {\r\n    const isExist = this.selectedReasonList.filter(reason => reason.id === data.id);\r\n\r\n    if (isExist.length === 0) {\r\n      this.selectedReasonList.push(data);\r\n      this.typeOfReason = data;\r\n      this.setRejectionData();\r\n      this.errMsg = '';\r\n    } else {\r\n      this.errMsg = 'The selected reason is already added.';\r\n    }\r\n    this.mySelectReason.nativeElement = '';\r\n    \r\n  }\r\n\r\n  checkOthersReason(): boolean{\r\n    return this.selectedReasonList.filter(e=> e.id ===4).length? true : false;\r\n  }\r\n\r\n  removeReason(id) {\r\n    const index: number = this.selectedReasonList.findIndex(srl => srl.id === id);\r\n    this.selectedReasonList.splice(index, 1);\r\n  }\r\n\r\n  cancel(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  submitRejectionDisapproved(): void {\r\n    // console.log('PARAMETER', this.ascUser, this.action, this.status);\r\n\r\n    let msg;\r\n    let endpointReason;\r\n    let endpointReject;\r\n    let swalMsg = 'Application has been rejected/disapproved successfully.';\r\n    let applicationForm: any;\r\n    let navigateToList;\r\n\r\n    if (this.status === APPLICATION_STATUS.S1_APPLICATION_REJECTED || this.status === APPLICATION_STATUS_S2.S2_APPLICATION_REJECTED) {\r\n      msg = COMMON_FUNCTION.REJECT;\r\n      swalMsg = 'Application has been rejected successfully.';\r\n    } else if (this.status === APPLICATION_STATUS.S1_APPLICATION_DISAPPROVED ||\r\n      this.status === APPLICATION_STATUS_S2.S2_APPLICATION_DISAPPROVED) {\r\n      msg = COMMON_FUNCTION.DISAPPROVED;\r\n      swalMsg = 'Application has been disapproved.';\r\n    }\r\n\r\n    Swal.fire({\r\n      text: 'Are you sure you want to ' + msg + ' this application?',\r\n      icon: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Confirm'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.spinner.show();\r\n        if (this.data.applicationStage === 's1') {\r\n          applicationForm = this.s1Application;\r\n          navigateToList = 'asc/page/application/s1/lists';\r\n          endpointReason = ENDPOINTS.s1ReasonOfRejection;\r\n          endpointReject = this.s1Application.submissionType === SUBMISSION_TYPE.ORIGINAL\r\n            ? this.s1Application.decisionStatus === APP_DECISION_STATUS.INCOMPLETE\r\n              ? ENDPOINTS.s1ApplicationFormEncoderRejectCompliance : ENDPOINTS.s1ApplicationFormEncoderReject\r\n            : ENDPOINTS.s1ApplicationFormEncoderRejectRevision;\r\n        } else {\r\n          applicationForm = this.s2Application;\r\n          navigateToList = 'asc/page/application/s2/lists';\r\n          endpointReason = ENDPOINTS.s2ReasonOfRejection;\r\n          endpointReject = ENDPOINTS.s2ApplicationFormEncoderReject;\r\n        }\r\n        console.info('apllicationRejectionList => ', this.applicationRejectionList)\r\n        // this.spinner.hide();\r\n        this.applicationRejectionList.filter( e=>{\r\n          if(e.typeOfReason.id === 4){\r\n            e.remarks = this.remarks\r\n          }\r\n        });\r\n        this.apiService.save(endpointReason, this.applicationRejectionList).subscribe(\r\n          (res: any) => {\r\n            this.apiService.save(endpointReject, applicationForm).subscribe(\r\n              (res1: any) => {\r\n                this.s1Application = res1.responseData.data;\r\n                // Forward Multiple Application\r\n                if (this.s1Application.submissionType === SUBMISSION_TYPE.ORIGINAL &&\r\n                  this.data.applicationStage === 's1' && this.s1Application.multipleApplication &&\r\n                  this.s1Application.multipleApplication.actualNumberOfApplicationForm ===\r\n                  this.s1Application.multipleApplication.countVerifiedApplicationForm &&\r\n                  this.s1Application.internalStatus !== APPLICATION_STATUS.S1_APPLICATION_REVIEWED) {\r\n                  this.forwardMultipleAppsTo();\r\n                } else {\r\n                  this.spinner.hide();\r\n                  this.sweetAlertService.customSuccessMessage(swalMsg);\r\n                  this.dialogRef.close();\r\n                  this.router.navigateByUrl(navigateToList);\r\n                }\r\n              })\r\n          })\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n  forwardMultipleAppsTo() {\r\n    console.log('forwardMultipleAppsTo');\r\n    console.log(this.s1Application);\r\n    this.s1Application.multipleApplication.assignedEncoder = this.s1Application.assignedEncoder;\r\n    this.apiService.save(ENDPOINTS.forwardMultipleAppFormToAdSpe, this.s1Application.multipleApplication).subscribe(\r\n      (res: any) => {\r\n        console.log(res);\r\n        this.spinner.hide();\r\n        this.sweetAlertService.customSuccessMessage('Multiple application successfully forwarded to the next user.');\r\n        this.dialogRef.close();\r\n        this.router.navigateByUrl('asc/page/application/s1/lists');\r\n      }, (err: any) => {\r\n        this.spinner.hide();\r\n        this.sweetAlertService.error(err);\r\n      }, () => {\r\n        this.spinner.hide();\r\n      })\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"container-fluid\">\r\n    <h1><span class=\"material-icons\" >report_problem</span> Reasons for rejection</h1>\r\n    <hr>\r\n    <div class=\"row\">\r\n      <mat-label *ngIf=\"errMsg\" class=\"errMsg\">{{errMsg}}</mat-label>\r\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n            <mat-label>Select Reason:</mat-label>\r\n                <mat-select #selectReason (selectionChange)=\"selectedReason($event.value)\">\r\n                    <mat-option *ngFor=\"let i of typeOfReasonList\" [value]=\"i\">\r\n                        {{i.reason}}\r\n                    </mat-option>\r\n                </mat-select>\r\n        </mat-form-field>\r\n    </div>\r\n\r\n    <div class=\"row \">\r\n        <th >Selected Reasons:</th>\r\n        <div class=\"col list-content\" >\r\n\r\n            <table *ngFor=\"let i of selectedReasonList\">\r\n                <tr>\r\n                    <td class=\"reason-description\">\r\n                        <span class=\"material-icons\" >label_important</span> {{i.reason}}\r\n                    </td>\r\n                    <td>\r\n                        <!-- <button  (click)=\"removeReason(i.id)\">x</button> -->\r\n                        <span class=\"material-icons\" (click)=\"removeReason(i.id)\">delete</span>\r\n\r\n                    </td>\r\n                </tr>\r\n            </table>\r\n        </div>\r\n    </div>\r\n    <div class=\"row\" *ngIf=\"checkOthersReason()\">\r\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n            <mat-label>REMARKS</mat-label>\r\n            <!-- <textarea matInput [value]=\"payment?.remarks\" [readonly]=\"!isForPayment\"></textarea> -->\r\n            <textarea matInput name=\"remarks\" [(ngModel)]=\"remarks\"\r\n              ></textarea>\r\n          </mat-form-field>\r\n    </div>\r\n\r\n    <div class=\"row button-content\">\r\n        <div class=\"col\">\r\n\r\n            <button mat-raised-button class=\"button-red\" (click)=\"submitRejectionDisapproved()\"\r\n            [disabled]=\"selectedReasonList.length === 0\">\r\n                <i class=\"material-icons color__white\">verified</i> Submit Rejection\r\n            </button>\r\n        </div>\r\n        <div class=\"col\">\r\n            <button class=\"col-md-6\" mat-raised-button class=\"button-red\" (click)=\"cancel()\">\r\n                <i class=\"material-icons color__white\">cancel</i> Cancel\r\n            </button>\r\n        </div>\r\n    </div>\r\n\r\n</div>\r\n","import { ApplicationS2RationaleList } from \"./application-rationale-list-s2.model\";\r\nimport { ApplicationRationaleList } from \"./application-rationale-list.model\";\r\nimport { S2Application } from \"./s2-application.model\";\r\nimport { UserAccount } from \"./user-account.model\";\r\n\r\nexport class RationaleS2 {\r\n    id: number;\r\n    applicationFormS2: S2Application;\r\n    applicationRationaleLists: ApplicationRationaleList[];\r\n    others: string;\r\n    actionBy: UserAccount;\r\n    actionDate: Date;\r\n}\r\n","import { ApplicationRationaleList } from \"./application-rationale-list.model\";\r\nimport { S1Application } from \"./s1-application.model\";\r\nimport { S2Application } from \"./s2-application.model\";\r\nimport { UserAccount } from \"./user-account.model\";\r\n\r\nexport class Rationale {\r\n    id: number;\r\n    applicationForm: S1Application;\r\n    applicationFormS2: S2Application;\r\n    applicationRationaleLists: ApplicationRationaleList[];\r\n    others: string;\r\n    actionBy: UserAccount;\r\n    actionDate: Date;\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { FormActionButtonsComponent } from './form-action-buttons/form-action-buttons.component';\r\nimport { FormListComponent } from './form-list/form-list.component';\r\nimport { AngularMaterialModule } from '@shared';\r\nimport { FragmentsRoutingModule } from './fragments-routing.module';\r\nimport { RejectDisapprovedReasonComponent } from './reject-disapproved-reason/reject-disapproved-reason.component';\r\nimport { RequestForSpecialClearingComponent } from './request-for-special-clearing/request-for-special-clearing.component';\r\nimport { IncompleteDisapprovedRationaleComponent } from './incomplete-disapproved-rationale/incomplete-disapproved-rationale.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    FormActionButtonsComponent,\r\n    FormListComponent,\r\n    RejectDisapprovedReasonComponent,\r\n    RequestForSpecialClearingComponent,\r\n    IncompleteDisapprovedRationaleComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FragmentsRoutingModule,\r\n    AngularMaterialModule,\r\n  ],\r\n  exports: [\r\n    FormActionButtonsComponent,\r\n    FormListComponent\r\n  ]\r\n})\r\nexport class FragmentsModule { }\r\n","import { TypeOfRational } from \"./type-of-rational.model\";\r\n\r\nexport class ApplicationRationaleList {\r\n\r\n    id: number;\r\n    typeOfRationale: TypeOfRational;\r\n\r\n}","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService, DataStorageService, SweetAlertService } from '@services';\r\nimport { APP_DECISION_STATUS, ENDPOINTS, SUBMISSION_TYPE } from '@shared';\r\nimport { ApplicationS2RationaleList } from 'app/core/models/application-rationale-list-s2.model';\r\nimport { ApplicationRationaleList } from 'app/core/models/application-rationale-list.model';\r\nimport { RationaleS2 } from 'app/core/models/rationale-s2.model';\r\nimport { Rationale } from 'app/core/models/rationale.model';\r\nimport { TypeOfRational } from 'app/core/models/type-of-rational.model';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\n\r\n@Component({\r\n  selector: 'app-incomplete-disapproved-rationale',\r\n  templateUrl: './incomplete-disapproved-rationale.component.html',\r\n  styleUrls: ['./incomplete-disapproved-rationale.component.scss']\r\n})\r\nexport class IncompleteDisapprovedRationaleComponent implements OnInit {\r\n\r\n  rationale = new Rationale();\r\n  rationaleS2 = new RationaleS2();\r\n  typeOfRational = new TypeOfRational();\r\n  applicationRationaleList = new ApplicationRationaleList();\r\n  applicationRationaleListS2 = new ApplicationS2RationaleList();\r\n  rationaleList = [];\r\n  selectedRationaleList = [];\r\n\r\n  submissionType = '';\r\n  isOther = false;\r\n  otherDescription = '';\r\n  currentUser: any;\r\n\r\n  constructor(\r\n    private apiService: ApiService,\r\n    private sweetAlertService: SweetAlertService,\r\n    private router: Router,\r\n    private dataStorage: DataStorageService,\r\n    private spinner: NgxSpinnerService,\r\n    public dialogRef: MatDialogRef<IncompleteDisapprovedRationaleComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {\r\n\r\n    if (data.applicationStage === 's1') {\r\n      this.submissionType = data.s1Application.submissionType;\r\n    } else {\r\n      this.submissionType = data.s2Application.submissionType;\r\n    }\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getRationale();\r\n    this.currentUser = this.dataStorage.getUserAccount();\r\n    console.log('ksahkjakj', this.data);\r\n\r\n  }\r\n\r\n\r\n\r\n  getRationale(): void {\r\n    let endpoint\r\n    let submissionTypeForm\r\n\r\n    if (this.data.applicationStage === 's1') {\r\n      submissionTypeForm = this.data.s1Application.submissionType;\r\n      this.rationale.applicationForm = this.data.s1Application;\r\n    } else {\r\n      submissionTypeForm = this.data.s2Application.submissionType;\r\n      this.rationale.applicationFormS2 = this.data.s2Application;\r\n    }\r\n\r\n    if (submissionTypeForm === SUBMISSION_TYPE.ORIGINAL) {\r\n      endpoint = ENDPOINTS.typeOfRationale;\r\n    } else if (submissionTypeForm === SUBMISSION_TYPE.REVISION) {\r\n      endpoint = ENDPOINTS.typeOfRationale + '/category/FOR_COMPLIANCE';\r\n    } else if (submissionTypeForm === SUBMISSION_TYPE.COMPLIANCE ||\r\n      this.data.s1Application.decisionStatus === APP_DECISION_STATUS.INCOMPLETE) {\r\n      endpoint = ENDPOINTS.typeOfRationale + '/category/FOR_INCOMPLETE_DECISION';\r\n    } else if (this.data.s1Application.hasToa) {\r\n      endpoint = ENDPOINTS.typeOfRationale + '/category/FOR_TOA_APPLICATION';\r\n    }\r\n\r\n    this.apiService.findAll(endpoint).subscribe(\r\n      (res: any) => {\r\n        this.rationaleList = res.responseData.data;\r\n        console.log(this.rationaleList);\r\n      }\r\n    )\r\n  }\r\n\r\n  selectRationale(data): void {\r\n    let list = [];\r\n    if (this.data.applicationStage === 's1') {\r\n      this.applicationRationaleList.typeOfRationale = data;\r\n      this.selectedRationaleList.push(this.applicationRationaleList);\r\n      this.applicationRationaleList = new ApplicationRationaleList();\r\n    } else {\r\n      this.applicationRationaleList.typeOfRationale = data;\r\n      this.selectedRationaleList.push(this.applicationRationaleList);\r\n      this.applicationRationaleList = new ApplicationRationaleList();\r\n    }\r\n    console.log(this.selectedRationaleList);\r\n\r\n\r\n\r\n\r\n  }\r\n\r\n  removeRationale(id) {\r\n    const index: number = this.selectedRationaleList.findIndex(srl => srl.id === id);\r\n    this.selectedRationaleList.splice(index, 1);\r\n  }\r\n\r\n  submitRationale(): void {\r\n    let endpoint;\r\n    let swalMessage;\r\n    let activeModel;\r\n\r\n    this.spinner.show();\r\n\r\n    if (this.data.applicationStage === 's1') {\r\n      endpoint = ENDPOINTS.applicationRationale;\r\n      swalMessage = 'S1 application rationale has been saved!'\r\n    } else {\r\n      endpoint = ENDPOINTS.applicationRationaleS2;\r\n      swalMessage = 'S2 application rationale has been saved!';\r\n      this.rationale.id = 0;\r\n    }\r\n\r\n    this.rationale.applicationRationaleLists = this.selectedRationaleList;\r\n    this.rationale.actionDate = new Date();\r\n    this.rationale.actionBy = this.currentUser;\r\n    this.rationale.others = this.otherDescription;\r\n\r\n\r\n    console.log('save rationale', this.rationale);\r\n\r\n    this.apiService.save(endpoint, this.rationale).subscribe(\r\n      (res: any) => {\r\n        this.spinner.hide();\r\n        this.sweetAlertService.customSuccessMessage(swalMessage);\r\n        this.dialogRef.close(res);\r\n      }, (err: any) => {\r\n        console.log(err);\r\n      }\r\n    )\r\n  }\r\n\r\n  cancel(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","<div class=\"container-fluid\">\r\n    <h1><span class=\"material-icons\" >info</span> Add Rationale</h1>\r\n    <hr>\r\n    <div class=\"row\">\r\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n            <mat-label>Select Rationale:</mat-label>\r\n                <mat-select class=\"mat-select-value-text\" (selectionChange)=\"selectRationale($event.value)\">\r\n                    <mat-option *ngFor=\"let i of rationaleList\" [value]=\"i\" [matTooltip]=\"i.rationale\">\r\n                        {{i.rationale}}\r\n                    </mat-option>\r\n                </mat-select>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n            <mat-label>OTHER, PLEASE SPECIFY:</mat-label>\r\n            <textarea matInput [(ngModel)]=\"otherDescription\"></textarea>\r\n        </mat-form-field>\r\n\r\n    </div>\r\n\r\n    <div class=\"row \">\r\n        <th >Selected Rationale:</th>\r\n        <div class=\"col list-content\" >\r\n\r\n            <table *ngFor=\"let i of selectedRationaleList\">\r\n                <tr>\r\n                    <td class=\"reason-description\">\r\n                        <span class=\"material-icons\" >label_important</span>  {{i?.typeOfRationale?.rationale}}\r\n                    </td>\r\n                    <td>\r\n                        <span class=\"material-icons\" (click)=\"removeRationale(i.id)\">delete</span>\r\n                    </td>\r\n                </tr>\r\n            </table>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"row button-content\">\r\n        <div class=\"col\">\r\n            <button mat-raised-button class=\"button-red\" (click)=\"submitRationale()\" [disabled]=\"selectedRationaleList.length === 0 && !otherDescription\">\r\n                <i class=\"material-icons color__white\">verified</i> Submit Rationale\r\n            </button>\r\n        </div>\r\n        <div class=\"col\">\r\n            <button class=\"col-md-6\" mat-raised-button class=\"button-red\" (click)=\"cancel()\">\r\n                <i class=\"material-icons color__white\">cancel</i> Cancel\r\n            </button>\r\n        </div>\r\n    </div>\r\n\r\n</div>\r\n","import { SweetAlertService } from './../../../core/services/alert-message/sweet-alert.service';\r\nimport { ENDPOINTS } from '@shared';\r\nimport { ApiService } from './../../../core/services/api.service';\r\nimport { AfterViewInit, Component, EventEmitter, Input, OnInit, Output, TemplateRef, ViewChild } from '@angular/core';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTable, MatTableDataSource } from '@angular/material/table';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\n\r\n@Component({\r\n  selector: 'app-form-list',\r\n  templateUrl: './form-list.component.html',\r\n  styleUrls: ['./form-list.component.scss']\r\n})\r\nexport class FormListComponent implements OnInit, AfterViewInit {\r\n  @ViewChild(MatPaginator, { static: false }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: false }) sort: MatSort;\r\n  @ViewChild(MatTable, { static: false }) table: MatTable<Object>;\r\n  @Input() dataSource: MatTableDataSource<Object>;\r\n  @Input() displayedColumns = '';\r\n  @Output() selectInListFunction: EventEmitter<any> = new EventEmitter();\r\n  @Output() deleteInListFunction: EventEmitter<any> = new EventEmitter();\r\n  @Output() updateListFunction: EventEmitter<any> = new EventEmitter();\r\n  @Output() idForUpdate: number = 0;\r\n  @Output() idForDelete: number = 0;\r\n  @Output() elementObject: any;\r\n  @Output() getVoucherRef: EventEmitter<any> = new EventEmitter();\r\n  @ViewChild('myTemplate') customModal: TemplateRef<any>;\r\n  @ViewChild('signatoryEdit') signatoryEditModal: TemplateRef<any>;\r\n  signatory: any = {};\r\n  signatoryRef: any = {};\r\n\r\n  constructor(public dialog: MatDialog, private api: ApiService, \r\n    private spinner: NgxSpinnerService, private alert: SweetAlertService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    if(this.dataSource){\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    }\r\n  }\r\n\r\n  getObject(id) {\r\n    this.idForUpdate = id;\r\n    this.selectInListFunction.emit();\r\n  }\r\n\r\n  deleteObject(id, obj: any = '') {\r\n    this.idForDelete = id;\r\n    this.elementObject = obj;\r\n    this.deleteInListFunction.emit(obj);\r\n  }\r\n\r\n  openEditModal(id, obj: any) {\r\n    this.signatory = JSON.parse(JSON.stringify(obj));\r\n    this.signatoryRef = obj;\r\n    this.dialog.open(this.signatoryEditModal, {\r\n      disableClose: true,\r\n      width: '350px',\r\n      data: obj\r\n    });\r\n  }\r\n\r\n  updateObject(): void {\r\n    if (this.signatoryRef.id === undefined) {\r\n      let data = this.dataSource.data;\r\n      data.splice(this.dataSource.data.findIndex(r => r === this.signatoryRef), 1, this.signatory);\r\n      this.updateListFunction.emit(data);\r\n    } else {\r\n      this.updateListFunction.emit(this.signatory);\r\n    }\r\n    this.dialog.closeAll();\r\n  }\r\n\r\n  closeModal() {\r\n    this.dialog.closeAll();\r\n  }\r\n  viewHistory(data){\r\n    console.log('data', data);\r\n    // this.spinner.show()\r\n    \r\n\r\n\r\n    this.api.findByParam(ENDPOINTS.voucherAttachment, data?.voucherAttachmentReference).subscribe(res =>{\r\n      if(!res?.responseData?.data?.fileURL) {\r\n        this.alert.customErrorMessage(\"No Available file\")\r\n      }\r\n      \r\n      window.open(res?.responseData?.data?.fileURL);\r\n    }, error =>{\r\n      this.alert.customErrorMessage(\"No Available File\");\r\n    })\r\n    \r\n  }\r\n\r\n\r\n}\r\n","<div class=\"mat-elevation-z8\">\r\n  <table mat-table [dataSource]=\"dataSource\" matSort>\r\n\r\n    <ng-container matColumnDef=\"emailCode\">\r\n      <th mat-header-cell *matHeaderCellDef> Email Code </th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\"> {{ element?.emailCode }} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"subject\">\r\n      <th mat-header-cell *matHeaderCellDef> Subject </th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\"> {{ element?.subject }} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"category\">\r\n      <th mat-header-cell *matHeaderCellDef> Category </th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\"> {{ element?.category?.description }}\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"typeOfMainDocument\">\r\n      <th mat-header-cell *matHeaderCellDef> Type Of Main Document </th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\"> {{ element?.typeOfMainDocument }} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"typeOfMainDocumentObject\">\r\n      <th mat-header-cell *matHeaderCellDef> Type Of Main Document </th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\"> {{\r\n        element?.typeOfMainDocument?.typeOfMainDocument }} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"noOfHours\">\r\n      <th mat-header-cell *matHeaderCellDef> Number Of Hours </th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\"> {{ element?.noOfHours }} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"noOfDays\">\r\n      <th mat-header-cell *matHeaderCellDef> Number Of Days </th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\"> {{ element?.noOfDays }} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"noOfWorkingDays\">\r\n      <th mat-header-cell *matHeaderCellDef> Number Of Working Days </th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\"> {{ element?.noOfWorkingDays }} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"typeOfMedium\">\r\n      <th mat-header-cell *matHeaderCellDef> Type of Medium </th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\"> {{ element?.typeOfMedium }} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"typeOfMediumObj\">\r\n      <th mat-header-cell *matHeaderCellDef> Type of Medium </th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\"> {{ element?.typeOfMedium?.description }}\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"reason\">\r\n      <th mat-header-cell *matHeaderCellDef> Reason </th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\"> {{ element?.reason }} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"description\">\r\n      <th mat-header-cell *matHeaderCellDef> Description </th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\"> {{ element?.description }} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"body\">\r\n      <th mat-header-cell *matHeaderCellDef> Body </th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\r\n        <div [innerHTML]=\"element?.body\"></div>\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"dialect\">\r\n      <th mat-header-cell *matHeaderCellDef> Dialect </th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\"> {{ element?.dialect }} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"applicationType\">\r\n      <th mat-header-cell *matHeaderCellDef> Application Type </th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\"> {{ element?.applicationType }} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"lengthFrom\">\r\n      <th mat-header-cell *matHeaderCellDef> Length From </th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\"> {{ element?.lengthFrom }} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"lengthTo\">\r\n      <th mat-header-cell *matHeaderCellDef> Length To </th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\"> {{ element?.lengthTo }} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"memberOffline\">\r\n      <th mat-header-cell *matHeaderCellDef> Member Offline </th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\"> {{ element?.memberOffline }} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"memberOnline\">\r\n      <th mat-header-cell *matHeaderCellDef> Member Online </th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\"> {{ element?.memberOnline }} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"nonMemberOffline\">\r\n      <th mat-header-cell *matHeaderCellDef> Non Member Offline </th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\"> {{ element?.nonMemberOffline }} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"nonMemberOnline\">\r\n      <th mat-header-cell *matHeaderCellDef> Non Member Online </th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\"> {{ element?.nonMemberOnline }} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"screenerName\">\r\n      <th mat-header-cell *matHeaderCellDef> Screener Name </th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\r\n        {{ element?.screener?.firstName }} {{ element?.screener?.lastName }}\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"reviewerName\">\r\n      <th mat-header-cell *matHeaderCellDef> Reviewer Name </th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\r\n        {{ element?.reviewer?.firstName }} {{ element?.reviewer?.lastName }}\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"holidayName\">\r\n      <th mat-header-cell *matHeaderCellDef> Holiday Name </th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\"> {{ element?.holidayName }} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"holidayDate\">\r\n      <th mat-header-cell *matHeaderCellDef> Holiday Date </th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\"> {{ element?.holidayDate |\r\n        date:'MM/dd/yyyy' }} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"holidayType\">\r\n      <th mat-header-cell *matHeaderCellDef> Holiday Type </th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\"> {{ element?.holidayType?.replaceAll('_','\r\n        ') }} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"typeOfExecution\">\r\n      <th mat-header-cell *matHeaderCellDef> Type Of Execution </th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\"> {{ element?.typeOfExecution }} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"typeOfExecutionObj\">\r\n      <th mat-header-cell *matHeaderCellDef> Type Of Execution </th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\"> {{\r\n        element?.typeOfExecution?.typeOfExecution }} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"live\">\r\n      <th mat-header-cell *matHeaderCellDef> LIVE </th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\r\n        <i *ngIf=\"element?.supportingAttachmentReference\" class=\"material-icons\">check_circle</i>\r\n        <i *ngIf=\"!element?.supportingAttachmentReference\" class=\"material-icons cancel\">cancel</i>\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"landingPage\">\r\n      <th mat-header-cell *matHeaderCellDef> Landing Page </th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\r\n        <i *ngIf=\"element?.supportingAttachmentReference\" class=\"material-icons\">check_circle</i>\r\n        <i *ngIf=\"!element?.supportingAttachmentReference\" class=\"material-icons cancel\">cancel</i>\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"applyForS2\">\r\n      <th mat-header-cell *matHeaderCellDef> Apply for S2 </th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\r\n        <i *ngIf=\"!element?.live\" class=\"material-icons\">check_circle</i>\r\n        <i *ngIf=\"element?.live\" class=\"material-icons cancel\">cancel</i>\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"applyForTOA\">\r\n      <th mat-header-cell *matHeaderCellDef> Apply for TOA </th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\r\n        <i *ngIf=\"element?.applyForToa\" class=\"material-icons\">check_circle</i>\r\n        <i *ngIf=\"!element?.applyForToa\" class=\"material-icons cancel\">cancel</i>\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"paymentDescription\">\r\n      <th mat-header-cell *matHeaderCellDef> Payment Description </th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\"> {{ element?.paymentDescription }} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"categoryDescription\">\r\n      <th mat-header-cell *matHeaderCellDef> Category </th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\"> {{ element?.description }} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"product\">\r\n      <th mat-header-cell *matHeaderCellDef> Product </th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\"> {{ element?.product?.description }} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"productDescription\">\r\n      <th mat-header-cell *matHeaderCellDef> Product </th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\"> {{ element?.description }} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"brand\">\r\n      <th mat-header-cell *matHeaderCellDef> Brand </th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\"> {{ element?.brand?.description }} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"title\">\r\n      <th mat-header-cell *matHeaderCellDef> Title </th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\"> {{ element?.title }} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"details\">\r\n      <th mat-header-cell *matHeaderCellDef> Details </th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\"> {{ element?.details }} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"noOfView\">\r\n      <th mat-header-cell *matHeaderCellDef> Number Of Views </th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\"> {{ element?.noOfView }} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"minimum\">\r\n      <th mat-header-cell *matHeaderCellDef> Minimum </th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\"> {{ element?.minimum }} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"maximum\">\r\n      <th mat-header-cell *matHeaderCellDef> Maximum </th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\"> {{ element?.maximum }} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"postingDate\">\r\n      <th mat-header-cell *matHeaderCellDef> Posting Date </th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\"> {{ element?.postingDate |\r\n        date:'MM/dd/yyyy' }} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"s1ExpNoOfYears\">\r\n      <th mat-header-cell *matHeaderCellDef> S1 Expiration No Of Years </th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\"> {{ element?.s1ExpNoOfYears }} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"s2ExpNoOfYears\">\r\n      <th mat-header-cell *matHeaderCellDef> S2 Expiration No Of Years </th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\"> {{ element?.s2ExpNoOfYears }} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"referenceCode\">\r\n      <th mat-header-cell *matHeaderCellDef> Reference Code </th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\r\n        <span *ngIf=\"element?.referenceCode\">\r\n          {{ element?.referenceCode }}\r\n        </span>\r\n        <span *ngIf=\"element?.applicationForm?.referenceCode\">\r\n          {{ element?.applicationForm?.referenceCode }}\r\n        </span>\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"adTitle\">\r\n      <th mat-header-cell *matHeaderCellDef> AD Title </th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\r\n        <span *ngIf=\"element?.adTitle\">\r\n          {{ element?.adTitle }}\r\n        </span>\r\n        <span *ngIf=\"element?.applicationForm?.adTitle\">\r\n          {{ element?.applicationForm?.adTitle }}\r\n        </span>\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"assignedAdSpecialist\">\r\n      <th mat-header-cell *matHeaderCellDef> AD Specialist </th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\r\n        <span *ngIf=\"element?.assignedAdSpecialist\">\r\n          {{ element?.assignedAdSpecialist?.firstName }} {{ element?.assignedAdSpecialist?.lastName }}\r\n        </span>\r\n        <!-- <span *ngIf=\"element?.applicationForm?.assignedAdSpecialist\">\r\n         {{element?.applicationForm?.assignedAdSpecialist?.firstName }}  {{ element?.applicationForm?.assignedAdSpecialist?.lastName }}\r\n        </span> -->\r\n        <span *ngIf=\"!element?.assignedAdSpecialist\">\r\n          N/A\r\n        </span>\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"assignedEncoder\">\r\n      <th mat-header-cell *matHeaderCellDef> Evaluator </th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\r\n        <span *ngIf=\"element?.assignedEncoder\">\r\n          {{ element?.assignedEncoder?.firstName }} {{ element?.assignedEncoder?.lastName }}\r\n        </span>\r\n        <!-- <span *ngIf=\"element?.applicationForm?.assignedEncoder\">\r\n          {{element?.applicationForm?.assignedEncoder?.firstName }} {{ element?.applicationForm?.assignedEncoder?.lastName }}\r\n        </span> -->\r\n        <span *ngIf=\"!element?.assignedEncoder && !element?.applicationForm?.assignedEncoder\">\r\n          N/A\r\n        </span>\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"assignedReviewer\">\r\n      <th mat-header-cell *matHeaderCellDef> Reviewer </th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\r\n        <span *ngIf=\"element?.assignedReviewer\">\r\n          {{ element?.assignedReviewer?.firstName }} {{ element?.assignedReviewer?.lastName }}\r\n        </span>\r\n        <!-- <span *ngIf=\"element?.applicationForm?.assignedReviewer\">\r\n          {{element?.applicationForm?.assignedReviewer?.firstName }} {{ element?.applicationForm?.assignedReviewer?.lastName }}\r\n        </span> -->\r\n        <span *ngIf=\"!element?.assignedReviewer\">\r\n          N/A\r\n        </span>\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"assignedScreener\">\r\n      <th mat-header-cell *matHeaderCellDef> Screener </th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\r\n        <span *ngIf=\"element?.assignedScreener\">\r\n          {{ element?.assignedScreener?.firstName }} {{ element?.assignedScreener?.lastName }}\r\n        </span>\r\n        <!-- <span *ngIf=\"element?.applicationForm?.assignedScreener\">\r\n          {{element?.applicationForm?.assignedScreener?.firstName }} {{ element?.applicationForm?.assignedScreener?.lastName }}\r\n        </span> -->\r\n        <span *ngIf=\"!element?.assignedScreener\">\r\n          N/A\r\n        </span>\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"assignedUser\">\r\n      <th mat-header-cell *matHeaderCellDef> Current Assigned User </th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\r\n        <span *ngIf=\"element?.assignedUser\">\r\n          {{ element?.assignedUser?.firstName }} {{ element?.assignedUser?.lastName }}\r\n        </span>\r\n        <!-- <span *ngIf=\"element?.applicationForm?.assignedUser\">\r\n          {{ element?.applicationForm?.assignedUser?.firstName }} {{ element?.applicationForm?.assignedUser?.lastName }}\r\n        </span> -->\r\n        <span *ngIf=\"!element?.assignedUser\">\r\n          N/A\r\n        </span>\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"applicationOwner\">\r\n      <th mat-header-cell *matHeaderCellDef> Application Owner </th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\r\n        <span *ngIf=\"element?.applicationOwner\">\r\n          {{ element?.applicationOwner?.firstName }} {{ element?.applicationOwner?.lastName }}\r\n        </span>\r\n        <span *ngIf=\"element?.applicationForm?.applicationOwner\">\r\n          {{element?.applicationForm?.applicationOwner?.firstName }}\r\n          {{element?.applicationForm?.applicationOwner?.lastName }}\r\n        </span>\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"lastModifiedBy\">\r\n      <th mat-header-cell *matHeaderCellDef> Last Modified By </th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\r\n        {{ element?.modifiedBy ? element?.modifiedBy : element?.createdBy }} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"lastModifiedDate\">\r\n      <th mat-header-cell *matHeaderCellDef> Last Modified Date </th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\r\n        {{ element?.modifiedDate ? (element?.modifiedDate | date:'MM/dd/yyyy hh:mm a') : (element?.createdDate |\r\n        date:'MM/dd/yyyy hh:mm a') }}\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"affiliationDesc\">\r\n      <th mat-header-cell *matHeaderCellDef> Member's Affiliation </th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\r\n        {{ element?.description }}\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"member\">\r\n      <th mat-header-cell *matHeaderCellDef> Member </th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\r\n        {{ element?.member ? 'Yes' : 'No' }}\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"brandDesc\">\r\n      <th mat-header-cell *matHeaderCellDef> Brand </th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\r\n        {{ element?.description }}\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"penalty\">\r\n      <th mat-header-cell *matHeaderCellDef> Penalty </th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\r\n        {{ element?.penalty ? 'Yes' : 'No' }}\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"typeOfDocumentDesc\">\r\n      <th mat-header-cell *matHeaderCellDef> Type of Document </th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\r\n        {{ element?.description }}\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"dateOfLaunchEnable\">\r\n      <th mat-header-cell *matHeaderCellDef> Has Date Of Launch </th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\r\n        {{ element?.dateOfLaunchEnable ? 'Yes' : 'No' }}\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"expiresOnEnable\">\r\n      <th mat-header-cell *matHeaderCellDef> Has Expiration Date </th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\r\n        {{ element?.expiresOnEnable ? 'Yes' : 'No' }}\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"basedOnEnable\">\r\n      <th mat-header-cell *matHeaderCellDef> Has Basis </th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\r\n        {{ element?.basedOnEnable ? 'Yes' : 'No' }}\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"variantEnable\">\r\n      <th mat-header-cell *matHeaderCellDef> Has Variant </th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\r\n        {{ element?.variantEnable ? 'Yes' : 'No' }}\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"remarksEnable\">\r\n      <th mat-header-cell *matHeaderCellDef> Has Remarks </th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\r\n        {{ element?.remarksEnable ? 'Yes' : 'No' }}\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"inputEnable\">\r\n      <th mat-header-cell *matHeaderCellDef> Has Input </th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\r\n        {{ element?.inputEnable ? 'Yes' : 'No' }}\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"amount\">\r\n      <th mat-header-cell *matHeaderCellDef> Has Amount </th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\r\n        {{ element?.amount ? 'Yes' : 'No' }}\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"bankBranch\">\r\n      <th mat-header-cell *matHeaderCellDef> Has Bank Branch </th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\r\n        {{ element?.bankBranch ? 'Yes' : 'No' }}\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"bankName\">\r\n      <th mat-header-cell *matHeaderCellDef> Has Bank Name </th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\r\n        {{ element?.bankName ? 'Yes' : 'No' }}\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"controlNo\">\r\n      <th mat-header-cell *matHeaderCellDef> Has Control No </th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\r\n        {{ element?.controlNo ? 'Yes' : 'No' }}\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"fundTransferDate\">\r\n      <th mat-header-cell *matHeaderCellDef> Has Fund Transfer Date </th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\r\n        {{ element?.fundTransferDate ? 'Yes' : 'No' }}\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"promisorryDate\">\r\n      <th mat-header-cell *matHeaderCellDef> Has Promisorry Date </th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\r\n        {{ element?.promisorryDate ? 'Yes' : 'No' }}\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"referenceNo\">\r\n      <th mat-header-cell *matHeaderCellDef> Has Reference No </th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\r\n        {{ element?.referenceNo ? 'Yes' : 'No' }}\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"enabledFields\">\r\n      <th mat-header-cell *matHeaderCellDef> Enabled Fields </th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\r\n        {{ element?.enabledFields }}\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"status\">\r\n      <th mat-header-cell *matHeaderCellDef> Status </th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\r\n        {{ element?.status?.replaceAll('_', ' ') }}\r\n      </td>\r\n    </ng-container>\r\n\r\n    <!-- FOR BRAND PENALTIES -->\r\n    <ng-container matColumnDef=\"brandDescription\">\r\n      <th mat-header-cell *matHeaderCellDef> Brand </th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\r\n        {{ element?.brand?.description }}\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"brandPenaltyAmount\">\r\n      <th mat-header-cell *matHeaderCellDef> Amount </th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\r\n        {{ element?.amount | number : '1.2-2' }}\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"penaltyDate\">\r\n      <th mat-header-cell *matHeaderCellDef> Penalty Date </th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\r\n        {{ element?.penaltyDate | date:'fullDate'}}\r\n      </td>\r\n    </ng-container>\r\n    <!-- FOR BRAND PENALTIES -->\r\n\r\n    <!-- FOR COMPANY PENALTIES -->\r\n    <ng-container matColumnDef=\"companyDescription\">\r\n      <th mat-header-cell *matHeaderCellDef> Company </th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\"\r\n        [ngStyle]=\"{'background-color': element?.status === 'ACTIVE' ? 'white' : '#ffbebe' }\">\r\n        {{ element?.company?.companyName }}\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"companyPenaltyAmount\">\r\n      <th mat-header-cell *matHeaderCellDef> Penalty Amount </th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\r\n        {{ element?.penaltyAmount | number : '1.2-2' }}\r\n      </td>\r\n    </ng-container>\r\n\r\n    <!-- FOR UPLOADING FILE SIZE -->\r\n    <ng-container matColumnDef=\"id\">\r\n      <th mat-header-cell *matHeaderCellDef> Document Id </th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\r\n        {{ element.id }}\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"size\">\r\n      <th mat-header-cell *matHeaderCellDef> Document size </th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\r\n        {{ element.fileSize }}\r\n      </td>\r\n    </ng-container>\r\n\r\n    <!-- FOR TYPE OF APPLICATION -->\r\n\r\n    <ng-container matColumnDef=\"clearingReleaseTime\">\r\n      <th mat-header-cell *matHeaderCellDef> Clearing Release Time </th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\r\n        {{ element.clearingReleaseTime }}\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"decisionReleaseTime\">\r\n      <th mat-header-cell *matHeaderCellDef> Decision Release Time </th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\r\n        {{ element.decisionReleaseTime }}\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"submissionStartTime\">\r\n      <th mat-header-cell *matHeaderCellDef> Submission Start Time </th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\r\n        {{ element.submissionStartTime }}\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"submissionEndTime\">\r\n      <th mat-header-cell *matHeaderCellDef> Submission End Time </th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\r\n        {{ element.submissionEndTime }}\r\n      </td>\r\n    </ng-container>\r\n\r\n    <!-- FOR TYPE OF RATIONAL -->\r\n\r\n    <ng-container matColumnDef=\"rationale\">\r\n      <th mat-header-cell *matHeaderCellDef> Rationale </th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\" style=\"width: 78%;\">\r\n        {{ element.rationale }}\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"rationaleCategory\">\r\n      <th mat-header-cell *matHeaderCellDef> Rationale Category </th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\r\n        {{ element.rationaleCategory.replaceAll('_',' ') | uppercase }}\r\n      </td>\r\n    </ng-container>\r\n\r\n\r\n    <ng-container matColumnDef=\"firstName\">\r\n      <th mat-header-cell *matHeaderCellDef> Firstname </th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\r\n        {{ element.firstName }}\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"lastName\">\r\n      <th mat-header-cell *matHeaderCellDef> Lastname </th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\r\n        {{ element.lastName }}\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"mobileNumber\">\r\n      <th mat-header-cell *matHeaderCellDef> Mobile Number </th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\r\n        {{ element?.mobileNumber }}\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"emailAddress\">\r\n      <th mat-header-cell *matHeaderCellDef> Email Address </th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\r\n        {{ element?.username }}\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"userRole\">\r\n      <th mat-header-cell *matHeaderCellDef> Role </th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\r\n        {{ element?.userRole?.name?.replaceAll('ROLE_', '')?.replace('_', ' ')?.replace('ENCODER', 'EVALUATOR') }}\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"typeOfMediumController\">\r\n      <th mat-header-cell *matHeaderCellDef> Type of Medium </th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\r\n        {{ element?.typeOfMedium?.description }}\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"typeOfExecutionController\">\r\n      <th mat-header-cell *matHeaderCellDef> Type of Execution </th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\r\n        {{ element?.typeOfExecution?.typeOfExecution }}\r\n      </td>\r\n    </ng-container>\r\n\r\n    <!-- FOR VOUCHER ENROLLMENT -->\r\n\r\n    <ng-container matColumnDef=\"company\">\r\n      <th mat-header-cell *matHeaderCellDef> Company </th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\r\n        {{ element?.company?.companyName }}\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"fundAmount\">\r\n      <th mat-header-cell *matHeaderCellDef> Fund Amount </th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\r\n        {{ element?.fundAmount | number : '1.2-2' }}\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"voucherDate\">\r\n      <th mat-header-cell *matHeaderCellDef> Voucher Date</th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\r\n        {{ element?.voucherDate | date: 'shortDate'}}\r\n      </td>\r\n    </ng-container>\r\n    <!-- <ng-container matColumnDef=\"action\">\r\n      <th mat-header-cell *matHeaderCellDef> action </th>\r\n      <td mat-cell *matCellDef=\"let element\">\r\n        <button mat-raised-button class=\"button-red\" (click)=\"viewHistory(element)\">\r\n          View History\r\n        </button>\r\n      </td>\r\n    </ng-container> -->\r\n\r\n\r\n    <!-- <ng-container matColumnDef=\"voucherSignatories\">\r\n        <th mat-header-cell *matHeaderCellDef> Signatories Name </th>\r\n        <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\r\n          {{ element?.voucherSignatories.name}}\r\n        </td>\r\n      </ng-container> -->\r\n\r\n    <!-- FOR VOUCHER SIGNATORIES -->\r\n\r\n    <ng-container matColumnDef=\"name\">\r\n      <th mat-header-cell *matHeaderCellDef> Signatories Name </th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\r\n        {{ element?.name}}\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"position\">\r\n      <th mat-header-cell *matHeaderCellDef> Position</th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\r\n        {{ element?.position}}\r\n      </td>\r\n    </ng-container>\r\n\r\n    <!-- FOR VOUCHER FUND TRANSFER -->\r\n    <ng-container matColumnDef=\"amountTransfered\">\r\n      <th mat-header-cell *matHeaderCellDef> Amount Transferred </th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\r\n        {{ element?.amountTransfered | number : '1.2-2'}}\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"transferedDate\">\r\n      <th mat-header-cell *matHeaderCellDef> Transferred Date</th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\r\n        {{ element?.transferedDate | date: 'shortDate' }}\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"officialReceiptNo\">\r\n      <th mat-header-cell *matHeaderCellDef> Official Receipt No</th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\r\n        {{ element?.officialReceiptNo }}\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"typeOfMediumDescription\">\r\n      <th mat-header-cell *matHeaderCellDef> Type Of Medium</th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\r\n        {{ element?.typeOfMedium?.description }}\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"officialReceiptReferences\">\r\n      <th mat-header-cell *matHeaderCellDef> Official Receipt No References</th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\r\n        {{ element?.officialReceiptReferencesValue }}\r\n      </td>\r\n    </ng-container>\r\n\r\n    <!-- Image login -->\r\n    <ng-container matColumnDef=\"file\">\r\n      <th mat-header-cell *matHeaderCellDef> File</th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\r\n        {{ element?.file }}\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"fileName\">\r\n      <th mat-header-cell *matHeaderCellDef> File name</th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\r\n        {{ element?.fileName }}\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"fileExtension\">\r\n      <th mat-header-cell *matHeaderCellDef> File Extension</th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\r\n        {{ element?.fileExtension }}\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"documentFormat\">\r\n      <th mat-header-cell *matHeaderCellDef> Document Format</th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\r\n        {{ element?.documentFormat }}\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"displayed\">\r\n      <th mat-header-cell *matHeaderCellDef> Display Status</th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\r\n        {{ element?.displayed }}\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"fileURL\">\r\n      <th mat-header-cell *matHeaderCellDef> File URL</th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\r\n        {{ element?.fileURL }}\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"originalFilename\">\r\n      <th mat-header-cell *matHeaderCellDef> Original Filename</th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\r\n        {{ element?.originalFilename }}\r\n      </td>\r\n    </ng-container>\r\n\r\n\r\n\r\n    <!-- Image login -->\r\n\r\n\r\n    <!-- <ng-container matColumnDef=\"companyPenaltyDate\">\r\n      <th mat-header-cell *matHeaderCellDef> Penalty Date </th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\r\n        {{ element?.penaltyDate | date:'fullDate'}}\r\n      </td>\r\n    </ng-container> -->\r\n    <!-- FOR COMPANY PENALTIES -->\r\n\r\n    <!-- DELETE ICON -->\r\n    <ng-container matColumnDef=\"deleteIcon\">\r\n      <th mat-header-cell *matHeaderCellDef> Action </th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"deleteObject(element?.id, element)\" matTooltip=\"Cancel OR\">\r\n        <span class=\"material-icons\">delete_forever</span>\r\n      </td>\r\n    </ng-container>\r\n    <!-- DELETE ICON -->\r\n    <ng-container matColumnDef=\"voucherActionItems\">\r\n      <th mat-header-cell *matHeaderCellDef class=\"action-items\"> Action </th>\r\n      <td mat-cell *matCellDef=\"let element\" class=\"action-items\">\r\n        <span class=\"material-icons\" tooltip=\"Edit\" (click)=\"openEditModal(element?.id, element)\">edit</span>\r\n        <span class=\"material-icons\" tooltip=\"Delete\" (click)=\"deleteObject(element?.id, element)\">delete_forever</span>\r\n      </td>\r\n    </ng-container>\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n  </table>\r\n  <div class=\"no-record\" [hidden]=\"dataSource && dataSource?.data?.length > 0\">\r\n    No record found.\r\n  </div>\r\n  <mat-paginator [pageSizeOptions]=\"[10, 20, 30]\" showFirstLastButtons></mat-paginator>\r\n</div>\r\n\r\n<ng-template #signatoryEdit>\r\n  <h1 mat-dialog-title>Edit Signatories</h1>\r\n  <div mat-dialog-content>\r\n    <mat-form-field appearance=\"fill\" class=\"w-100\">\r\n      <mat-label>Signatory Name</mat-label>\r\n      <input matInput [(ngModel)]=\"signatory.name\">\r\n    </mat-form-field>\r\n    <mat-form-field appearance=\"fill\" class=\"w-100\">\r\n      <mat-label>Position</mat-label>\r\n      <input matInput [(ngModel)]=\"signatory.position\">\r\n    </mat-form-field>\r\n  </div>\r\n  <div mat-dialog-actions class=\"justify-content-center\">\r\n    <button mat-button (click)=\"closeModal()\">Cancel</button>\r\n    <button mat-button class=\"mat-raised-button button-red\" [disabled]=\"!signatory.name || !signatory.position\" (click)=\"updateObject()\">Save</button>\r\n  </div>\r\n</ng-template>","export class TypeOfRational {\r\n\r\nid: number;\r\nrationale: String;\r\nrationaleCategory: String;\r\nstatus:\tString;\r\n\r\n}","export class EmailNotification {\r\n    id: number;\r\n    body: string;\r\n    description: string;\r\n    emailCode: string;\r\n    status: string;\r\n    subject: string;\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class FragmentsRoutingModule { }\r\n","\r\nexport class AscRateSpecial {\r\n    id: number;\r\n    applicationType: string;\r\n    memberOffline: number;\r\n    memberOnline: number;\r\n    nonMemberOffline: number;\r\n    nonMemberOnline: number;\r\n    status: string;\r\n}\r\n","import { TypeOfExecution } from './type-of-execution.model';\r\nimport { TypeOfMedium } from './type-of-medium.model';\r\n\r\nexport class MediumExecutionController {\r\n    id: number;\r\n    typeOfExecution: TypeOfExecution;\r\n    typeOfMedium: TypeOfMedium;\r\n    widthEnable: boolean;\r\n}\r\n","export class PromissoryNotePeriod {\r\n  id: number;\r\n  noOfDays: number;\r\n}","\r\nexport class Dialect {\r\n    id: number;\r\n    dialect: string;\r\n    status: string;\r\n}\r\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { Affiliation, AscRate, Brand, Category, PaymentType, Product, TypeOfApplication, TypeOfDocument, TypeOfMedium, TypeOfReason } from '@models';\r\nimport { Announcement } from 'app/core/models/announcement.model';\r\nimport { AscRateSpecial } from 'app/core/models/asc-rate-special.model';\r\nimport { BrandPenalties } from 'app/core/models/brand-penalties.model';\r\nimport { CompanyPenalties } from 'app/core/models/company-penalties.model';\r\nimport { Dialect } from 'app/core/models/dialect.model';\r\nimport { EmailNotification } from 'app/core/models/email-notification.model';\r\nimport { Holiday } from 'app/core/models/holiday.model';\r\nimport { LoginImage } from 'app/core/models/login-image.model';\r\nimport { MediumExecutionController } from 'app/core/models/medium-execution-controller.model';\r\nimport { NumberOfMultipleApplicationAllowed } from 'app/core/models/numberOfMultipleApplicationAllowed.model';\r\nimport { PromissoryNotePeriod } from 'app/core/models/promissory-note-period.model';\r\nimport { QrAndBarCodeChecker } from 'app/core/models/qrAndBarCodeChecker.model';\r\nimport { S1AndS2FormExpirationPeriod } from 'app/core/models/s1-and-s2-form-expiration-period.model';\r\nimport { ScreenerReviewerPair } from 'app/core/models/screener-reviewer-pair.model';\r\nimport { TypeOfMainDocument } from 'app/core/models/type-of-main-document.model';\r\nimport { TypeOfMediumExecution } from 'app/core/models/type-of-medium-execution.model';\r\nimport { TypeOfRational } from 'app/core/models/type-of-rational.model';\r\nimport { UploadingDocumentFileSize } from 'app/core/models/uploading-document-file-size-model';\r\n\r\n@Component({\r\n  selector: 'app-form-action-buttons',\r\n  templateUrl: './form-action-buttons.component.html',\r\n  styleUrls: ['./form-action-buttons.component.scss']\r\n})\r\nexport class FormActionButtonsComponent implements OnInit {\r\n\r\n  @Input() isFromModal = false;\r\n  @Input() showApproveRejectButton = false;\r\n\r\n  @Input() childObject: ChildObject;\r\n  @Input() childForm: FormGroup;\r\n  @Output() saveFunction: EventEmitter<any> = new EventEmitter();\r\n  @Output() validateFunction: EventEmitter<any> = new EventEmitter();\r\n  @Output() updateFunction: EventEmitter<any> = new EventEmitter();\r\n  @Output() deleteFunction: EventEmitter<any> = new EventEmitter();\r\n  @Output() cancelFunction: EventEmitter<any> = new EventEmitter();\r\n  @Output() closeModalFunction: EventEmitter<any> = new EventEmitter();\r\n  @Output() approveFunction: EventEmitter<any> = new EventEmitter();\r\n  @Output() rejectFunction: EventEmitter<any> = new EventEmitter();\r\n\r\n  @Input() isHideSaveButton = false;\r\n  @Input() isShowApproveDisapproveButton = false;\r\n  isHideDeleteButton = false;\r\n  isHideUpdateButton = false;\r\n  isShowValidateButton = false;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n    // hides the save button if class of childObject is email notification\r\n    this.isHideSaveButton = this.childObject instanceof EmailNotification\r\n      || this.childObject instanceof UploadingDocumentFileSize\r\n      || this.childObject instanceof QrAndBarCodeChecker\r\n      || this.childObject instanceof NumberOfMultipleApplicationAllowed\r\n      || this.childObject instanceof AscRateSpecial;\r\n    this.isHideUpdateButton = this.childObject instanceof LoginImage;\r\n    this.isHideDeleteButton = this.childObject instanceof Category\r\n      || this.childObject instanceof Product\r\n      || this.childObject instanceof Brand\r\n      || this.childObject instanceof BrandPenalties\r\n      || this.childObject instanceof CompanyPenalties\r\n      || this.childObject instanceof Affiliation\r\n      || this.childObject instanceof TypeOfMedium\r\n      || this.childObject instanceof TypeOfMediumExecution\r\n      || this.childObject instanceof MediumExecutionController\r\n      || this.childObject instanceof TypeOfReason\r\n      || this.childObject instanceof TypeOfDocument\r\n      || this.childObject instanceof PaymentType\r\n      || this.childObject instanceof Holiday\r\n      || this.childObject instanceof Dialect\r\n      || this.childObject instanceof ScreenerReviewerPair\r\n      || this.childObject instanceof EmailNotification\r\n      || this.childObject instanceof TypeOfMainDocument\r\n      || this.childObject instanceof Announcement\r\n      || this.childObject instanceof S1AndS2FormExpirationPeriod\r\n      || this.childObject instanceof PromissoryNotePeriod\r\n      || this.childObject instanceof AscRate\r\n      || this.childObject instanceof TypeOfApplication\r\n      || this.childObject instanceof TypeOfRational\r\n      || this.childObject instanceof LoginImage;\r\n    this.isShowValidateButton = this.childObject instanceof QrAndBarCodeChecker;\r\n  }\r\n\r\n  save() {\r\n    this.saveFunction.emit(this.childObject);\r\n  }\r\n\r\n  validate() {\r\n    this.validateFunction.emit(this.childObject);\r\n  }\r\n\r\n  update() {\r\n    this.updateFunction.emit(this.childObject);\r\n  }\r\n\r\n  delete() {\r\n    this.deleteFunction.emit(this.childObject);\r\n  }\r\n\r\n  approve() {\r\n    this.approveFunction.emit();\r\n  }\r\n\r\n  reject() {\r\n    this.rejectFunction.emit();\r\n  }\r\n\r\n  closeModal() {\r\n    this.closeModalFunction.emit();\r\n  }\r\n\r\n  resetFormValidator() {\r\n    this.cancelFunction.emit();\r\n  }\r\n\r\n}\r\n\r\ninterface ChildObject {\r\n  id: number;\r\n  reason: string;\r\n  typeOfMedium: string;\r\n  paymentDescription: string;\r\n  description: string;\r\n  fileSize: number;\r\n  clearingReleaseTime: string;\r\n  decisionReleaseTime: string;\r\n  sequenceNo: number;\r\n  status: string;\r\n  submissionEndTime: string;\r\n  submissionStartTime: string;\r\n}\r\n","<div class=\"row\">\r\n  <div class=\"col-md-12\">\r\n    <button mat-raised-button color=\"primary\" (click)=\"save()\" *ngIf=\"!childObject?.id && !isHideSaveButton\"\r\n      [disabled]=\"!(childForm.valid)\">\r\n      <!-- <mat-icon>save</mat-icon> SAVE -->\r\n      <i class=\"material-icons color__white\">save</i> SAVE\r\n    </button>\r\n    <button mat-raised-button color=\"primary\" (click)=\"validate()\" *ngIf=\"!childObject?.id && isShowValidateButton\"\r\n      [disabled]=\"!(childForm.valid)\">\r\n      <!-- <mat-icon>save</mat-icon> SAVE -->\r\n      <i class=\"material-icons color__white\">search</i> VALIDATE\r\n    </button>\r\n    <button mat-raised-button color=\"primary\" (click)=\"update()\" *ngIf=\"childObject?.id && !isHideUpdateButton\"\r\n      [disabled]=\"!(childForm.valid)\">\r\n      <!-- <mat-icon> </mat-icon>  -->\r\n      <i class=\"material-icons color__white\">task_alt</i> UPDATE\r\n    </button>\r\n    <button mat-raised-button class=\"button-red\" (click)=\"delete()\" *ngIf=\"childObject?.id\" [hidden]=\"!isHideDeleteButton\"\r\n      [disabled]=\"!(childForm.valid)\">\r\n      <!-- <mat-icon> </mat-icon>  -->\r\n      <i class=\"material-icons color__white\">delete</i> DELETE\r\n    </button>\r\n    <button mat-raised-button color=\"warn\" (click)=\"resetFormValidator()\"\r\n      *ngIf=\"(childObject?.id || childObject?.description || childObject?.paymentDescription || childObject?.typeOfMedium || childObject?.reason) && !isFromModal\">\r\n      <!-- <mat-icon>{{ childObject?.id ? 'cancel' : 'refresh' }}</mat-icon> {{ childObject?.id ? 'CANCEL' : 'RESET' }} -->\r\n      <i class=\"material-icons color__white\"> {{ childObject?.id ? 'cancel' : 'refresh' }}</i> {{ childObject?.id ? 'CANCEL' : 'RESET' }}\r\n    </button>\r\n    <ng-container *ngIf=\"(isFromModal && showApproveRejectButton) || isShowApproveDisapproveButton\">\r\n      <!-- <ng-container *ngIf=\"showApproveRejectButton\"> -->\r\n      <button mat-raised-button class=\"button-red\" (click)=\"approve()\">\r\n        <i class=\"material-icons color__white\">verified</i> APPROVE\r\n      </button>\r\n      <button mat-raised-button class=\"button-red\" (click)=\"reject()\">\r\n        <i class=\"material-icons color__white\">unpublished</i> REJECT\r\n      </button>\r\n      <button mat-raised-button class=\"button-red\" (click)=\"closeModal()\" *ngIf=\"isFromModal && showApproveRejectButton\">\r\n        <i class=\"material-icons color__white\">close</i> CLOSE\r\n      </button>\r\n    </ng-container>\r\n  </div>\r\n</div>\r\n","export class LoginImage {\r\n    id: number;\r\n    file: File;\r\n    filename: String;\r\n    fileExtension: String;\r\n    fileURL: String;\r\n    documentFormat: String;\r\n    displayed: Boolean;\r\n    createdDate: Date;\r\n    createdBy: String;\r\n    modifiedBy: String;\r\n    modifiedDate: String;\r\n    originalFilename: String;\r\n    secondsTransition: Number;\r\n}","export class TypeOfMediumExecution {\r\n    id: number;\r\n    status: string;\r\n    typeOfExecution: string;\r\n    applyForS2: boolean;\r\n}\r\n","export class UploadingDocumentFileSize {\r\n    id: number;\r\n    fileSize: number;\r\n}","export class Announcement {\r\n  id: number;\r\n  details: string;\r\n  noOfView: number;\r\n  postingDate: Date;\r\n  status: string;\r\n  title: string;\r\n  link: string;\r\n  counter: number;\r\n}\r\n","import { Company } from \"./company.model\";\r\n\r\nexport class CompanyPenalties {\r\n    id: number;\r\n    penaltyAmount: number;\r\n    company: Company;\r\n    penaltyDate: Date;\r\n}","export class Holiday {\r\n    id: number;\r\n    holidayDate: Date;\r\n    holidayName: string;\r\n    holidayType: string;\r\n    status: string;\r\n  }\r\n","import { Brand } from \"./brand.model\";\r\n\r\nexport class BrandPenalties {\r\n    id: number;\r\n    amount: number;\r\n    brand: Brand;\r\n    penaltyDate: Date;\r\n}","export class QrAndBarCodeChecker {\r\n    id: number;\r\n    qrOrBarCode: string;\r\n}","import { TypeOfRational } from \"./type-of-rational.model\";\r\n\r\nexport class ApplicationS2RationaleList {\r\n\r\n    id: number;\r\n    typeOfRationale: TypeOfRational;\r\n\r\n}","export class S1AndS2FormExpirationPeriod {\r\n  id: number;\r\n  s1ExpNoOfYears: number;\r\n  s2ExpNoOfYears: number;\r\n}"]}