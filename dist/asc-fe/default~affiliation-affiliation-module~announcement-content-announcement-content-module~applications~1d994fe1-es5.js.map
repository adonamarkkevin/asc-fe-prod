{"version":3,"sources":["webpack:///src/app/modules/fragments/request-for-special-clearing/request-for-special-clearing.component.ts","webpack:///src/app/modules/fragments/request-for-special-clearing/request-for-special-clearing.component.html","webpack:///src/app/core/models/screener-reviewer-pair.model.ts","webpack:///src/app/core/models/numberOfMultipleApplicationAllowed.model.ts","webpack:///src/app/core/models/type-of-document.model.ts","webpack:///src/app/core/models/application-rejection.model.ts","webpack:///src/app/core/models/country.model.ts","webpack:///src/app/core/models/type-of-main-document.model.ts","webpack:///src/app/modules/fragments/reject-disapproved-reason/reject-disapproved-reason.component.ts","webpack:///src/app/modules/fragments/reject-disapproved-reason/reject-disapproved-reason.component.html","webpack:///src/app/core/models/rationale-s2.model.ts","webpack:///src/app/core/models/type-of-reason.model.ts","webpack:///src/app/core/models/rationale.model.ts","webpack:///src/app/modules/fragments/fragments.module.ts","webpack:///src/app/core/models/type-of-application.model.ts","webpack:///src/app/core/models/application-rationale-list.model.ts","webpack:///src/app/core/models/s1-application.model.ts","webpack:///src/app/modules/fragments/incomplete-disapproved-rationale/incomplete-disapproved-rationale.component.ts","webpack:///src/app/modules/fragments/incomplete-disapproved-rationale/incomplete-disapproved-rationale.component.html","webpack:///src/app/core/models/product.model.ts","webpack:///src/app/modules/fragments/form-list/form-list.component.ts","webpack:///src/app/modules/fragments/form-list/form-list.component.html","webpack:///src/app/core/models/type-of-rational.model.ts","webpack:///src/app/core/models/email-notification.model.ts","webpack:///src/app/modules/fragments/fragments-routing.module.ts","webpack:///src/app/core/models/asc-rate-special.model.ts","webpack:///src/app/core/models/payment.model.ts","webpack:///src/app/core/models/type-of-medium.model.ts","webpack:///src/app/core/models/application-multimedia.model.ts","webpack:///src/app/core/models/s2-application.model.ts","webpack:///src/app/core/models/or-preparation.model.ts","webpack:///src/app/core/models/medium-execution-controller.model.ts","webpack:///src/app/core/models/promissory-note-period.model.ts","webpack:///src/app/core/models/dialect.model.ts","webpack:///src/app/core/models/user-account.model.ts","webpack:///src/app/modules/fragments/form-action-buttons/form-action-buttons.component.ts","webpack:///src/app/modules/fragments/form-action-buttons/form-action-buttons.component.html","webpack:///src/app/core/models/login-image.model.ts","webpack:///src/app/core/models/asc-rate.model.ts","webpack:///src/app/core/models/application-single-media.model.ts","webpack:///src/app/core/models/type-of-medium-execution.model.ts","webpack:///src/app/core/models/application-request.model.ts","webpack:///src/app/core/models/profile.model.ts","webpack:///src/app/core/models/uploading-document-file-size-model.ts","webpack:///src/app/core/models/attachment-document.model.ts","webpack:///src/app/core/models/announcement.model.ts","webpack:///src/app/core/models/category.model.ts","webpack:///src/app/core/models/company-penalties.model.ts","webpack:///src/app/core/models/supporting-document.model.ts","webpack:///src/app/core/models/user-role.model.ts","webpack:///src/app/core/models/payment-type.model.ts","webpack:///src/app/core/models/or-preparation-reference.model.ts","webpack:///src/app/core/models/holiday.model.ts","webpack:///src/app/core/models/brand-penalties.model.ts","webpack:///src/app/core/models/performance-metrics.model.ts","webpack:///src/app/core/models/payment-method.model.ts","webpack:///src/app/core/models/qrAndBarCodeChecker.model.ts","webpack:///src/app/core/models/index.ts","webpack:///src/app/core/models/affiliation.model.ts","webpack:///src/app/core/models/brand.model.ts","webpack:///src/app/core/models/company.model.ts","webpack:///src/app/core/models/application-rationale-list-s2.model.ts","webpack:///src/app/core/models/s1-and-s2-form-expiration-period.model.ts"],"names":["dialogRef","RequestForSpecialClearingComponent","apiService","dataStorage","sweetAlertService","router","data","s1Application","s2Application","applicationRequest","applicationForm","currentUser","getUserAccount","setApplicationRequest","hasSpecialClearing","applicationType","adTitle","applicationOwner","brand","product","company","formType","submitApplicationForm","tagLine","status","displayStatus","fire","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","value","endpointExtension","actionBy","username","save","applicationRequests","id","subscribe","res","customSuccessMessage","toLowerCase","navigate","err","error","message","under_maintenance","close","specialClearing","submissionType","ORIGINAL","internalStatus","externalStatus","console","log","s2ApplicationFormPresentorSave","responseData","ScreenerReviewerPair","NumberOfMultipleApplicationAllowed","TypeOfDocument","ApplicationRejection","typeOfReason","Country","TypeOfMainDocument","RejectDisapprovedReasonComponent","spinner","applicationRejection","applicationRejectionList","typeOfReasonList","selectedReasonList","getTypeOfReasonsList","ascUser","action","headerTitle","findAll","endpoint","applicationStage","s1ReasonOfRejection","applicationS2","s2ReasonOfRejection","actionDate","Date","push","isExist","filter","reason","length","setRejectionData","errMsg","mySelectReason","nativeElement","e","index","findIndex","srl","splice","msg","endpointReason","endpointReject","swalMsg","navigateToList","S1_APPLICATION_REJECTED","S2_APPLICATION_REJECTED","REJECT","S1_APPLICATION_DISAPPROVED","S2_APPLICATION_DISAPPROVED","DISAPPROVED","show","decisionStatus","INCOMPLETE","s1ApplicationFormEncoderRejectCompliance","s1ApplicationFormEncoderReject","s1ApplicationFormEncoderRejectRevision","s2ApplicationFormEncoderReject","info","remarks","res1","multipleApplication","actualNumberOfApplicationForm","countVerifiedApplicationForm","S1_APPLICATION_REVIEWED","forwardMultipleAppsTo","hide","navigateByUrl","assignedEncoder","forwardMultipleAppFormToAdSpe","selectedReason","submitRejectionDisapproved","cancel","RationaleS2","TypeOfReason","Rationale","FragmentsModule","TypeOfApplication","ApplicationRationaleList","S1Application","IncompleteDisapprovedRationaleComponent","rationale","rationaleS2","typeOfRational","applicationRationaleList","applicationRationaleListS2","rationaleList","selectedRationaleList","isOther","otherDescription","getRationale","submissionTypeForm","applicationFormS2","typeOfRationale","REVISION","COMPLIANCE","hasToa","list","swalMessage","activeModel","applicationRationale","applicationRationaleS2","applicationRationaleLists","others","selectRationale","submitRationale","Product","FormListComponent","dialog","api","alert","displayedColumns","selectInListFunction","deleteInListFunction","updateListFunction","idForUpdate","idForDelete","getVoucherRef","signatory","signatoryRef","dataSource","paginator","sort","emit","obj","elementObject","JSON","parse","stringify","open","signatoryEditModal","disableClose","width","undefined","r","closeAll","findByParam","voucherAttachment","voucherAttachmentReference","fileURL","customErrorMessage","window","TypeOfRational","EmailNotification","routes","FragmentsRoutingModule","forChild","AscRateSpecial","Payment","paymentMethod","filedBirForm","TypeOfMedium","ApplicationMultimedia","ApplicationMultimediaItemsDTO","ApplicationMultimediaMovingDTO","ApplicationMultimediaStaticDTO","S2Application","OrPreparation","totals","totalSales","totalAmountDue","totalVat","totalWithholdingtax","MediumExecutionController","PromissoryNotePeriod","Dialect","UserAccount","FormActionButtonsComponent","isFromModal","showApproveRejectButton","saveFunction","validateFunction","updateFunction","deleteFunction","cancelFunction","closeModalFunction","approveFunction","rejectFunction","isHideSaveButton","isShowApproveDisapproveButton","isHideDeleteButton","isHideUpdateButton","isShowValidateButton","childObject","LoginImage","AscRate","ApplicationSingleMedia","TypeOfMediumExecution","ApplicationRequest","Profile","UploadingDocumentFileSize","AttachmentDocument","Announcement","Category","CompanyPenalties","SupportingDocument","UserRole","PaymentType","OrPreparationReference","Holiday","BrandPenalties","PerformanceMetrics","PaymentMethod","QrAndBarCodeChecker","Affiliation","Brand","Company","ApplicationS2RationaleList","S1AndS2FormExpirationPeriod"],"mappings":"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CA;;AAGF;;AAEA;;AACE;;AACA;;AAGF;;AAEA;;AACE;;AACA;;AACF;;AAEA;;AACE;;AACA;;AAEF;;AAEA;;AACE;;AACA;;AAEF;;AAEA;;AACE;;AACA;;AACF;;AAEA;;AACE;;AACA;;AAEF;;AAEA;;AACE;;AACA;;AAIF;;AAEA;;AACE;;AACA;;AAIF;;AAEA;;AACE;;AACA;;AAIF;;AAEA;;AACE;;AACA;;AAIF;;AAEA;;AACE;;AACA;;AACF;;AAEA;;AACE;;AACA;;AACF;;AAEA;;AACE;;AACA;;AACF;;AAEA;;AACE;;AACA;;AACF;;AAEA;;AACE;;AACA;;AACF;;AAEA;;AACE;;AACA;;AACF;;AAEA;;AACE;;AACA;;AACF;;AAEA;;AACE;;AACA;;AACF;;AAEA;;AACE;;AACA;;AACF;;AAEA;;AACE;;AACA;;AACF;;AAEA;;AACE;;AACA;;AAEF;;AAEA;;AACE;;AACA;;AACF;;AAEA;;AACE;;AACA;;AACF;;AAEA;;AACE;;AACA;;AAQF;;AAEA;;AACE;;AACA;;AAQF;;AAEA;;AACE;;AACA;;AAWF;;AAEA;;AACE;;AACA;;AAWF;;AAEA;;AACE;;AACA;;AAWF;;AAEA;;AACE;;AACA;;AAWF;;AAEA;;AACE;;AACA;;AAWF;;AAEA;;AACE;;AACA;;AASF;;AAEA;;AACE;;AACA;;AAEF;;AAEA;;AACE;;AACA;;AAIF;;AAEA;;AACE;;AACA;;AAGF;;AAEA;;AACE;;AACA;;AAGF;;AAEA;;AACE;;AACA;;AAGF;;AAEA;;AACE;;AACA;;AAGF;;AAEA;;AACE;;AACA;;AAGF;;AAEA;;AACE;;AACA;;AAGF;;AAEA;;AACE;;AACA;;AAGF;;AAEA;;AACE;;AACA;;AAGF;;AAEA;;AACE;;AACA;;AAGF;;AAEA;;AACE;;AACA;;AAGF;;AAEA;;AACE;;AACA;;AAGF;;AAEA;;AACE;;AACA;;AAGF;;AAEA;;AACE;;AACA;;AAGF;;AAEA;;AACE;;AACA;;AAGF;;AAEA;;AACE;;AACA;;AAGF;;AAEA;;AACE;;AACA;;AAGF;;AAEA;;AACE;;AA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;;;;;;;;;;;;;;ACAb;AAAA;;;AAAA;AAAA;AAAA;;UAAaC,sB;;;;;;;;;;;;;;;;;;;ACHb;AAAA;;;AAAA;AAAA;AAAA;;UAAaC,qB;;;;;;;;;;;;;;;;;;;ACSb;AAAA;;;AAAA;AAAA;AAAA;;UAAaC,kB;;;;;;;;;;;;;;;;;;;ACTb;AAAA;;;AAAA;AAAA;AAAA;;UAAaC,O;;;;;;;;;;;;;;;;;;;ACAb;AAAA;;;AAAA;AAAA;AAAA;;UAAaC,yB;;;;;;;;;;;;;;;;;;;ACGb;AAAA;;;AAAA;AAAA;AAAA;;UAAaC,kB;;;;;;;;;;;;;;;;;;;ACHb;AAAA;;;AAAA;AAAA;AAAA;;UAAaC,Y;;;;;;;;;;;;;;;;;;;ACEb;AAAA;;;AAAA;AAAA;AAAA;;UAAaC,Q;;;;;;;;;;;;;;;;;;;ACAb;AAAA;;;AAAA;AAAA;AAAA;;UAAaC,gB;;;;;;;;;;;;;;;;;;;ACCb;AAAA;;;AAAA;AAAA;AAAA;;UAAaC,kB;;;;;;;;;;;;;;;;;;;ACHb;AAAA;;;AAAA;AAAA;AAAA;;UAAaC,Q;;;;;;;;;;;;;;;;;;;ACAb;AAAA;;;AAAA;AAAA;AAAA;;UAAaC,W;;;;;;;;;;;;;;;;;;;ACAb;AAAA;;;AAAA;AAAA;AAAA;;UAAaC,sB;;;;;;;;;;;;;;;;;;;ACAb;AAAA;;;AAAA;AAAA;AAAA;;UAAaC,O;;;;;;;;;;;;;;;;;;;ACEb;AAAA;;;AAAA;AAAA;AAAA;;UAAaC,c;;;;;;;;;;;;;;;;;;;ACFb;AAAA;;;AAAA;AAAA;AAAA;;UAAaC,kB;;;;;;;;;;;;;;;;;;;ACEb;AAAA;;;AAAA;AAAA;AAAA;;UAAaC,a;;;;;;;;;;;;;;;;;;;ACFb;AAAA;;;AAAA;AAAA;AAAA;;UAAaC,mB;;;;;;;;;;;;;;;;;;;ACAbaC,W;;;;;;;;;;;;;;;;;;;ACEb;AAAA;;;AAAA;AAAA;AAAA;;UAAaC,K;;;;;;;;;;;;;;;;;;;ACCb;AAAA;;;AAAA;AAAA;AAAA;;UAAaC,O;;;;;;;;;;;;;;;;;;;ACDb;AAAA;;;AAAA;AAAA;AAAA;;UAAaC,0B;;;;;;;;;;;;;;;;;;;ACFb;AAAA;;;AAAA;AAAA;AAAA;;UAAaC,2B","file":"default~affiliation-affiliation-module~announcement-content-announcement-content-module~applications~1d994fe1-es5.js","sourcesContent":["import { i18nMetaToJSDoc } from '@angular/compiler/src/render3/view/i18n/meta';\nimport { Component, Inject, OnInit, Optional } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { S1Application, S2Application } from '@models';\nimport { ApiService, DataStorageService, SweetAlertService } from '@services';\nimport { ENDPOINTS, ERROR_MESSAGES, SUBMISSION_TYPE } from '@shared';\nimport { ApplicationRequest } from 'app/core/models/application-request.model';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-request-for-special-clearing',\n  templateUrl: './request-for-special-clearing.component.html',\n  styleUrls: ['./request-for-special-clearing.component.scss']\n})\nexport class RequestForSpecialClearingComponent implements OnInit {\n\n  s1Application = new S1Application();\n  s2Application = new S2Application();\n  applicationRequest = new ApplicationRequest();\n\n  currentUser: any;\n\n  constructor(\n    private apiService: ApiService,\n    private dataStorage: DataStorageService,\n    private sweetAlertService: SweetAlertService,\n    private router: Router,\n    @Optional() public dialogRef: MatDialogRef<RequestForSpecialClearingComponent>,\n    @Optional() @Inject(MAT_DIALOG_DATA) public data: any\n  ) { }\n\n  ngOnInit(): void {\n    this.applicationRequest = this.data.applicationRequest;\n    this.s1Application = this.applicationRequest.applicationForm;\n    this.currentUser = this.dataStorage.getUserAccount();\n    this.setApplicationRequest();\n  }\n\n\n  // static id to select special clearing application type.\n  setApplicationRequest(): void {\n    this.applicationRequest.hasSpecialClearing = true;\n    this.applicationRequest.applicationType = this.s1Application.applicationType;\n    this.applicationRequest.adTitle = this.s1Application.adTitle;\n    this.applicationRequest.applicationOwner = this.currentUser;\n    this.applicationRequest.brand = this.s1Application.brand;\n    this.applicationRequest.product = this.s1Application.product;\n    // this.applicationRequest.category = this.s1Application.category;\n    this.applicationRequest.company = this.s1Application.company;\n    this.applicationRequest.formType = this.s1Application.formType;\n    // this.applicationRequest.membersAffiliation = this.s1Application.membersAffiliation;\n    this.applicationRequest.submitApplicationForm = false;\n    this.applicationRequest.tagLine = this.s1Application.tagLine;\n    this.applicationRequest.applicationForm = this.s1Application;\n  }\n\n  onApproveOrDisapprove(status = 'APPROVED'): void {\n    const displayStatus = status === 'APPROVED' ? 'approve' : 'disapprove';\n    Swal.fire({\n      text: `Are you sure you want to ${displayStatus} this application?`,\n      icon: 'question',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Confirm'\n    }).then((result) => {\n      if (result.value) {\n        const endpointExtension = status === 'APPROVED' ? '/approve' : '/disapprove';\n        // this.s1Application.actionDate = new Date();\n        this.s1Application.actionBy = this.currentUser.username;\n\n        this.apiService.save(`${ENDPOINTS.applicationRequests}${endpointExtension}/${this.applicationRequest.id}`, this.applicationRequest)\n          .subscribe(\n            (res: any) => {\n              this.sweetAlertService.customSuccessMessage(`Application successfully ${status.toLowerCase()}.`);\n              this.router.navigate(['asc/page/application/s2/special']);\n            }, (err: any) => {\n              err.error.message = ERROR_MESSAGES.under_maintenance;\n              this.sweetAlertService.error(err);\n            }, () => {\n              this.dialogRef.close(this.s1Application);\n            }\n          );\n      }\n    });\n  }\n\n  submitRequest(): void {\n    Swal.fire({\n      text: 'Are you sure you want to submit request?',\n      icon: 'question',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Confirm'\n    }).then((result) => {\n      if (result.value) {\n        this.apiService.save(ENDPOINTS.applicationRequests, this.applicationRequest).subscribe(\n          (res: any) => {\n            this.sweetAlertService.customSuccessMessage('Request has been submit successfully.');\n            this.router.navigate(['asc/page/application/s2/special']);\n            this.dialogRef.close();\n          }, (err: any) => {\n            err.error.message = ERROR_MESSAGES.under_maintenance;\n            this.sweetAlertService.error(err);\n          });\n        this.dialogRef.close();\n      }\n\n    });\n\n  }\n\n  proceedToS2() {\n    Swal.fire({\n      text: 'Are you sure you want to apply this application to S2?',\n      icon: 'question',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Confirm'\n    }).then((result) => {\n      if (result.value) {\n        this.s2Application.specialClearing = true;\n        this.s2Application.applicationRequest = this.applicationRequest;\n        this.s2Application.applicationForm = this.s1Application;\n        this.s2Application.submissionType = SUBMISSION_TYPE.ORIGINAL; // this.s2Application.applicationForm.submissionType;\n        this.s2Application.internalStatus = 'SAVED';\n        this.s2Application.externalStatus = 'SAVED';\n        console.log('View S2:', this.s2Application);\n        this.apiService.save(ENDPOINTS.s2ApplicationFormPresentorSave, this.s2Application).subscribe(\n          (res: any) => {\n            this.router.navigate(['asc/page/application/s2/update', res.responseData.data.id]);\n            this.dialogRef.close();\n          }, (err: any) => {\n          })\n      }\n    })\n  }\n\n}\n","<form>\n    <div class=\"container-fluid\">\n\n      <div class=\"row title\">\n        <div class=\"col-md-12\">\n          <table>\n            <tr>\n              <td *ngIf=\"applicationRequest?.status!=undefined\">\n                <span>\n                  Status:\n                </span>\n              </td>\n              <td *ngIf=\"applicationRequest?.status!=undefined\">\n                <span *ngIf=\"applicationRequest?.status!=undefined\">\n                  <b>{{applicationRequest?.status?.replaceAll('_',' ') | uppercase}}</b>\n                </span>\n              </td>\n              <td class=\"no-border\" *ngIf=\"applicationRequest?.status==='APPROVED' && currentUser?.userRole?.name == 'ROLE_APPLICANT'\"\n              [hidden]=\"applicationRequest?.submitApplicationForm\">\n              <button class=\"button-right button-red\" mat-raised-button (click)=\"proceedToS2()\">\n                <i class=\"material-icons color__white\">check</i> Proceed to S2\n              </button>\n              </td>\n            </tr>\n            <tr>\n              <td class=\"no-border\"></td>\n            </tr>\n          </table>\n          <hr />\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-md-2\" appearance=\"outline\">\n          <mat-label>Form Type: </mat-label>\n        </div>\n        <div class=\"col-md-4\" appearance=\"outline\">\n          <mat-label><b>{{ s1Application?.formType.replaceAll('_', ' ') }}</b></mat-label>\n        </div>\n\n        <div class=\"col-md-2\" appearance=\"outline\">\n          <mat-label>Application Type:</mat-label>\n        </div>\n        <div class=\"col-md-4\" appearance=\"outline\">\n          <mat-label><b>{{ s1Application?.applicationType?.description.replaceAll('_', ' ') | uppercase }}</b></mat-label>\n        </div>\n        <br>\n        <br>\n      </div>\n\n      <div class=\"row\">\n        <mat-panel-title>\n          <i class=\"material-icons color__white\">label_important</i> &nbsp;Client Information\n        </mat-panel-title><br />\n\n          <div class=\"row\">\n            <mat-form-field class=\"col-md-6\" appearance=\"outline\">\n              <mat-label>Company Name</mat-label>\n              <input matInput [value]=\"s1Application?.company?.companyName\" readonly>\n            </mat-form-field>\n            <mat-form-field class=\"col-md-6\" appearance=\"outline\">\n              <mat-label>Company Membership Affiliation</mat-label>\n              <input matInput [value]=\"s1Application?.company?.membersAffiliation?.description\" readonly>\n            </mat-form-field>\n          </div>\n\n          <div class=\"row\">\n            <mat-form-field class=\"col-md-4\" appearance=\"outline\">\n              <mat-label>Brand</mat-label>\n              <input matInput [value]=\"s1Application?.brand?.description\" readonly>\n            </mat-form-field>\n            <mat-form-field class=\"col-md-4\" appearance=\"outline\">\n              <mat-label>Product</mat-label>\n              <input matInput [value]=\"s1Application?.product?.description\" readonly>\n            </mat-form-field>\n            <mat-form-field class=\"col-md-4\" appearance=\"outline\">\n              <mat-label>Category</mat-label>\n              <input matInput [value]=\"s1Application?.product?.category?.description\" readonly>\n            </mat-form-field>\n          </div>\n\n\n        <mat-panel-title *ngIf=\"currentUser?.userRole?.name === 'ROLE_ADMIN' || currentUser?.userRole?.name === 'ROLE_SUPER_ADMIN'\">\n          <i class=\"material-icons color__white\">label_important</i> &nbsp;Presentor Information\n        </mat-panel-title>\n\n        <div class=\"row\" *ngIf=\"currentUser?.userRole?.name === 'ROLE_ADMIN' || currentUser?.userRole?.name === 'ROLE_SUPER_ADMIN'\">\n          <!-- <mat-form-field class=\"col-md-4\" appearance=\"outline\">\n            <mat-label>Membership Affiliation</mat-label>\n            <input matInput [value]=\"s1Application?.company?.membersAffiliation?.description\" readonly>\n          </mat-form-field> -->\n          <mat-form-field class=\"col-md-7\" appearance=\"outline\">\n            <mat-label>Company Name</mat-label>\n            <input matInput [value]=\"s1Application?.company?.companyName\" readonly>\n          </mat-form-field>\n        </div>\n\n        <div class=\"row\" *ngIf=\"currentUser?.userRole?.name === 'ROLE_ADMIN' || currentUser?.userRole?.name === 'ROLE_SUPER_ADMIN'\">\n          <mat-form-field class=\"col-md-11\" appearance=\"outline\">\n            <mat-label>Address</mat-label>\n            <input matInput [value]=\"s1Application?.company?.completeAddress\" readonly>\n          </mat-form-field>\n        </div>\n\n        <div class=\"row\" *ngIf=\"currentUser?.userRole?.name === 'ROLE_ADMIN' || currentUser?.userRole?.name === 'ROLE_SUPER_ADMIN'\">\n          <mat-form-field class=\"col-md-8\" appearance=\"outline\" *ngIf=\"s1Application.id!= null\">\n            <mat-label>Name of Applicant</mat-label>\n            <input matInput [value]=\"s1Application?.applicationOwner?.firstName+' '+s1Application?.applicationOwner?.lastName\" readonly>\n          </mat-form-field>\n        </div>\n\n        <div class=\"row\" *ngIf=\"currentUser?.userRole?.name === 'ROLE_ADMIN' || currentUser?.userRole?.name === 'ROLE_SUPER_ADMIN'\">\n          <mat-form-field class=\"col-md-4\" appearance=\"outline\" *ngIf=\"s1Application.id!= null\">\n            <mat-label>Mobile Number</mat-label>\n            <input matInput [value]=\"s1Application?.applicationOwner?.mobileNumber\" readonly>\n          </mat-form-field>\n          <mat-form-field class=\"col-md-3\" appearance=\"outline\" *ngIf=\"s1Application.id!= null\">\n            <mat-label>Telephone Number</mat-label>\n            <input matInput [value]=\"s1Application?.company?.companyTelephoneNo\" readonly>\n          </mat-form-field>\n          <mat-form-field class=\"col-md-4\" appearance=\"outline\" *ngIf=\"s1Application.id!= null\">\n            <mat-label>Email Address</mat-label>\n            <input matInput [value]=\"s1Application?.applicationOwner?.username\" readonly>\n          </mat-form-field>\n        </div>\n\n        <mat-panel-title>\n          <i class=\"material-icons color__white\">label_important</i> &nbsp;Material Information\n        </mat-panel-title>\n\n          <div class=\"row\">\n            <mat-form-field class=\"col-md-4\" appearance=\"outline\">\n              <mat-label>Ad Title</mat-label>\n              <input matInput [value]=\"s1Application?.adTitle\" readonly />\n            </mat-form-field>\n\n            <!-- <mat-form-field class=\"col-md-4\" appearance=\"outline\">\n              <mat-label>Reference Code</mat-label>\n              <input matInput [value]=\"s1Application?.referenceCode\" readonly />\n            </mat-form-field> -->\n\n            <mat-form-field class=\"col-md-4\" appearance=\"outline\">\n              <mat-label>Tag Line</mat-label>\n              <input matInput [value]=\"s1Application?.tagLine\" readonly />\n            </mat-form-field>\n          </div>\n\n        <div class=\"row\"><br /></div>\n        <hr />\n        <br />\n        <div class=\"row\" *ngIf=\"applicationRequest?.status===undefined\">\n            <div>\n              <button mat-raised-button class=\"button-red\" (click)=\"submitRequest()\">\n                <i class=\"material-icons color__white\">check</i> Submit\n              </button>\n              <button mat-raised-button class=\"button-red\" (click)=\"dialogRef.close()\">\n                <i class=\"material-icons color__white\">cancel</i> Cancel\n              </button>\n            </div>\n        </div>\n\n        <!-- //////////////////////////////////////// ADMIN //////////////////////////////////////////////////////////// -->\n        <div class=\"row\"\n        *ngIf=\"applicationRequest?.status === 'FOR_APPROVAL' && (currentUser?.userRole?.name == 'ROLE_ADMIN'||currentUser?.userRole?.name == 'ROLE_SUPER_ADMIN')\"\n        >\n        <div mat-dialog-actions>\n          <div class=\"dialog-button-content\" align=\"end\">\n            <button class=\"confirm\" (click)=\"onApproveOrDisapprove()\">\n              <i class=\"material-icons color__white\">thumb_up_alt</i> Approve\n            </button>\n            <button class=\"warn\" (click)=\"onApproveOrDisapprove('DISAPPROVED')\">\n              <i class=\"material-icons color__white\">thumb_down_alt</i> Disapprove\n            </button>\n          </div>\n        </div>\n        </div>\n\n      </div>\n    </div>\n  </form>\n","import { UserAccount } from './user-account.model';\n\nexport class ScreenerReviewerPair {\n    id: number;\n    screener: UserAccount;\n    reviewer: UserAccount;\n  }\n","export class NumberOfMultipleApplicationAllowed{\n    id: number;\n    minimum: String;\n    maximum: String;\n}","export class TypeOfDocument {\n    id: number;\n    description: string;\n    remarksEnable: boolean;\n    basedOnEnable: boolean;\n    variantEnable: boolean;\n    dateOfLaunchEnable: boolean;\n    expiresOnEnable: boolean;\n    inputEnable: boolean;\n    status: string;\n}\n","import { S1Application } from \"./s1-application.model\";\nimport { S2Application } from \"./s2-application.model\";\nimport { TypeOfReason } from \"./type-of-reason.model\";\nimport { UserAccount } from \"./user-account.model\";\n\nexport class ApplicationRejection {\n    id: number;\n    applicationForm: S1Application;\n    applicationS2: S2Application;\n    actionDate: Date;\n    actionBy: UserAccount;\n    typeOfReason: TypeOfReason = new TypeOfReason();\n    remarks: string;\n}","export class Country {\n  id: number;\n  code: string;\n  name: string;\n}","export class TypeOfMainDocument {\n    id: number;\n    status: string;\n    typeOfMainDocument: string;\n}","import { Component, ElementRef, Inject, OnInit, Type, ViewChild } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { S1Application, S2Application, TypeOfReason } from '@models';\nimport { ApiService, DataStorageService, SweetAlertService } from '@services';\nimport { APPLICATION_STATUS, APPLICATION_STATUS_S2, APP_DECISION_STATUS, COMMON_FUNCTION, ENDPOINTS, SUBMISSION_TYPE } from '@shared';\nimport { ApplicationRejection } from 'app/core/models/application-rejection.model';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-reject-disapproved-reason',\n  templateUrl: './reject-disapproved-reason.component.html',\n  styleUrls: ['./reject-disapproved-reason.component.scss']\n})\nexport class RejectDisapprovedReasonComponent implements OnInit {\n\n  @ViewChild('selectReason')\n  mySelectReason: ElementRef;\n  s1Application = new S1Application();\n  s2Application = new S2Application();\n  applicationRejection = new ApplicationRejection();\n  typeOfReason = new TypeOfReason();\n  applicationRejectionList: Array<ApplicationRejection> = [];\n  typeOfReasonList = [];\n  selectedReasonList = [];\n  errMsg: any;\n\n  headerTitle;\n  ascUser;\n  action;\n  status;\n  currentUser: any;\n\n  remarks: string;\n\n\n  constructor(\n    private apiService: ApiService,\n    private sweetAlertService: SweetAlertService,\n    private router: Router,\n    private dataStorage: DataStorageService,\n    private spinner: NgxSpinnerService,\n    public dialogRef: MatDialogRef<RejectDisapprovedReasonComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any\n  ) { }\n\n  ngOnInit(): void {\n    this.getTypeOfReasonsList();\n\n    this.s1Application = this.data.s1Application;\n    this.s2Application = this.data.s2Application;\n    this.ascUser = this.data.ascUser;\n    this.action = this.data.action;\n    this.status = this.data.status;\n    this.headerTitle = this.action;\n    this.currentUser = this.dataStorage.getUserAccount();\n  }\n\n  getTypeOfReasonsList(): void {\n    this.apiService.findAll(ENDPOINTS.typeOfReason).subscribe(\n      (res: any) => {\n        this.typeOfReasonList = res.responseData.data;\n        console.log('reasons => ', this.typeOfReasonList)\n      }\n    )\n  }\n\n  setRejectionData(): void {\n    let endpoint\n    if (this.data.applicationStage === 's1') {\n      this.applicationRejection.applicationForm = this.s1Application;\n      endpoint = ENDPOINTS.s1ReasonOfRejection;\n    } else {\n      this.applicationRejection.applicationS2 = this.s2Application;\n      endpoint = ENDPOINTS.s2ReasonOfRejection;\n    }\n    this.applicationRejection.actionBy = this.currentUser;\n    this.applicationRejection.actionDate = new Date();\n    this.applicationRejection.typeOfReason = this.typeOfReason;\n    this.applicationRejectionList.push(this.applicationRejection);\n    this.applicationRejection = new ApplicationRejection();\n  }\n\n  selectedReason(data) {\n    const isExist = this.selectedReasonList.filter(reason => reason.id === data.id);\n\n    if (isExist.length === 0) {\n      this.selectedReasonList.push(data);\n      this.typeOfReason = data;\n      this.setRejectionData();\n      this.errMsg = '';\n    } else {\n      this.errMsg = 'The selected reason is already added.';\n    }\n    this.mySelectReason.nativeElement = '';\n    \n  }\n\n  checkOthersReason(): boolean{\n    return this.selectedReasonList.filter(e=> e.id ===4).length? true : false;\n  }\n\n  removeReason(id) {\n    const index: number = this.selectedReasonList.findIndex(srl => srl.id === id);\n    this.selectedReasonList.splice(index, 1);\n  }\n\n  cancel(): void {\n    this.dialogRef.close();\n  }\n\n  submitRejectionDisapproved(): void {\n    // console.log('PARAMETER', this.ascUser, this.action, this.status);\n\n    let msg;\n    let endpointReason;\n    let endpointReject;\n    let swalMsg = 'Application has been rejected/disapproved successfully.';\n    let applicationForm: any;\n    let navigateToList;\n\n    if (this.status === APPLICATION_STATUS.S1_APPLICATION_REJECTED || this.status === APPLICATION_STATUS_S2.S2_APPLICATION_REJECTED) {\n      msg = COMMON_FUNCTION.REJECT;\n      swalMsg = 'Application has been rejected successfully.';\n    } else if (this.status === APPLICATION_STATUS.S1_APPLICATION_DISAPPROVED ||\n      this.status === APPLICATION_STATUS_S2.S2_APPLICATION_DISAPPROVED) {\n      msg = COMMON_FUNCTION.DISAPPROVED;\n      swalMsg = 'Application has been disapproved.';\n    }\n\n    Swal.fire({\n      text: 'Are you sure you want to ' + msg + ' this application?',\n      icon: 'question',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Confirm'\n    }).then((result) => {\n      if (result.value) {\n        this.spinner.show();\n        if (this.data.applicationStage === 's1') {\n          applicationForm = this.s1Application;\n          navigateToList = 'asc/page/application/s1/lists';\n          endpointReason = ENDPOINTS.s1ReasonOfRejection;\n          endpointReject = this.s1Application.submissionType === SUBMISSION_TYPE.ORIGINAL\n            ? this.s1Application.decisionStatus === APP_DECISION_STATUS.INCOMPLETE\n              ? ENDPOINTS.s1ApplicationFormEncoderRejectCompliance : ENDPOINTS.s1ApplicationFormEncoderReject\n            : ENDPOINTS.s1ApplicationFormEncoderRejectRevision;\n        } else {\n          applicationForm = this.s2Application;\n          navigateToList = 'asc/page/application/s2/lists';\n          endpointReason = ENDPOINTS.s2ReasonOfRejection;\n          endpointReject = ENDPOINTS.s2ApplicationFormEncoderReject;\n        }\n        console.info('apllicationRejectionList => ', this.applicationRejectionList)\n        // this.spinner.hide();\n        this.applicationRejectionList.filter( e=>{\n          if(e.typeOfReason.id === 4){\n            e.remarks = this.remarks\n          }\n        });\n        this.apiService.save(endpointReason, this.applicationRejectionList).subscribe(\n          (res: any) => {\n            this.apiService.save(endpointReject, applicationForm).subscribe(\n              (res1: any) => {\n                this.s1Application = res1.responseData.data;\n                // Forward Multiple Application\n                if (this.s1Application.submissionType === SUBMISSION_TYPE.ORIGINAL &&\n                  this.data.applicationStage === 's1' && this.s1Application.multipleApplication &&\n                  this.s1Application.multipleApplication.actualNumberOfApplicationForm ===\n                  this.s1Application.multipleApplication.countVerifiedApplicationForm &&\n                  this.s1Application.internalStatus !== APPLICATION_STATUS.S1_APPLICATION_REVIEWED) {\n                  this.forwardMultipleAppsTo();\n                } else {\n                  this.spinner.hide();\n                  this.sweetAlertService.customSuccessMessage(swalMsg);\n                  this.dialogRef.close();\n                  this.router.navigateByUrl(navigateToList);\n                }\n              })\n          })\n      }\n    })\n  }\n\n\n  forwardMultipleAppsTo() {\n    console.log('forwardMultipleAppsTo');\n    console.log(this.s1Application);\n    this.s1Application.multipleApplication.assignedEncoder = this.s1Application.assignedEncoder;\n    this.apiService.save(ENDPOINTS.forwardMultipleAppFormToAdSpe, this.s1Application.multipleApplication).subscribe(\n      (res: any) => {\n        console.log(res);\n        this.spinner.hide();\n        this.sweetAlertService.customSuccessMessage('Multiple application successfully forwarded to the next user.');\n        this.dialogRef.close();\n        this.router.navigateByUrl('asc/page/application/s1/lists');\n      }, (err: any) => {\n        this.spinner.hide();\n        this.sweetAlertService.error(err);\n      }, () => {\n        this.spinner.hide();\n      })\n  }\n\n\n}\n","<div class=\"container-fluid\">\n    <h1><span class=\"material-icons\" >report_problem</span> Reasons for rejection</h1>\n    <hr>\n    <div class=\"row\">\n      <mat-label *ngIf=\"errMsg\" class=\"errMsg\">{{errMsg}}</mat-label>\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n            <mat-label>Select Reason:</mat-label>\n                <mat-select #selectReason (selectionChange)=\"selectedReason($event.value)\">\n                    <mat-option *ngFor=\"let i of typeOfReasonList\" [value]=\"i\">\n                        {{i.reason}}\n                    </mat-option>\n                </mat-select>\n        </mat-form-field>\n    </div>\n\n    <div class=\"row \">\n        <th >Selected Reasons:</th>\n        <div class=\"col list-content\" >\n\n            <table *ngFor=\"let i of selectedReasonList\">\n                <tr>\n                    <td class=\"reason-description\">\n                        <span class=\"material-icons\" >label_important</span> {{i.reason}}\n                    </td>\n                    <td>\n                        <!-- <button  (click)=\"removeReason(i.id)\">x</button> -->\n                        <span class=\"material-icons\" (click)=\"removeReason(i.id)\">delete</span>\n\n                    </td>\n                </tr>\n            </table>\n        </div>\n    </div>\n    <div class=\"row\" *ngIf=\"checkOthersReason()\">\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n            <mat-label>REMARKS</mat-label>\n            <!-- <textarea matInput [value]=\"payment?.remarks\" [readonly]=\"!isForPayment\"></textarea> -->\n            <textarea matInput name=\"remarks\" [(ngModel)]=\"remarks\"\n              ></textarea>\n          </mat-form-field>\n    </div>\n\n    <div class=\"row button-content\">\n        <div class=\"col\">\n\n            <button mat-raised-button class=\"button-red\" (click)=\"submitRejectionDisapproved()\"\n            [disabled]=\"selectedReasonList.length === 0\">\n                <i class=\"material-icons color__white\">verified</i> Submit Rejection\n            </button>\n        </div>\n        <div class=\"col\">\n            <button class=\"col-md-6\" mat-raised-button class=\"button-red\" (click)=\"cancel()\">\n                <i class=\"material-icons color__white\">cancel</i> Cancel\n            </button>\n        </div>\n    </div>\n\n</div>\n","import { ApplicationS2RationaleList } from \"./application-rationale-list-s2.model\";\nimport { ApplicationRationaleList } from \"./application-rationale-list.model\";\nimport { S2Application } from \"./s2-application.model\";\nimport { UserAccount } from \"./user-account.model\";\n\nexport class RationaleS2 {\n    id: number;\n    applicationFormS2: S2Application;\n    applicationRationaleLists: ApplicationRationaleList[];\n    others: string;\n    actionBy: UserAccount;\n    actionDate: Date;\n}\n","export class TypeOfReason {\n    id: number;\n    reason: string;\n    status: string;\n}\n","import { ApplicationRationaleList } from \"./application-rationale-list.model\";\nimport { S1Application } from \"./s1-application.model\";\nimport { S2Application } from \"./s2-application.model\";\nimport { UserAccount } from \"./user-account.model\";\n\nexport class Rationale {\n    id: number;\n    applicationForm: S1Application;\n    applicationFormS2: S2Application;\n    applicationRationaleLists: ApplicationRationaleList[];\n    others: string;\n    actionBy: UserAccount;\n    actionDate: Date;\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FormActionButtonsComponent } from './form-action-buttons/form-action-buttons.component';\nimport { FormListComponent } from './form-list/form-list.component';\nimport { AngularMaterialModule } from '@shared';\nimport { FragmentsRoutingModule } from './fragments-routing.module';\nimport { RejectDisapprovedReasonComponent } from './reject-disapproved-reason/reject-disapproved-reason.component';\nimport { RequestForSpecialClearingComponent } from './request-for-special-clearing/request-for-special-clearing.component';\nimport { IncompleteDisapprovedRationaleComponent } from './incomplete-disapproved-rationale/incomplete-disapproved-rationale.component';\n\n\n@NgModule({\n  declarations: [\n    FormActionButtonsComponent,\n    FormListComponent,\n    RejectDisapprovedReasonComponent,\n    RequestForSpecialClearingComponent,\n    IncompleteDisapprovedRationaleComponent\n  ],\n  imports: [\n    CommonModule,\n    FragmentsRoutingModule,\n    AngularMaterialModule,\n  ],\n  exports: [\n    FormActionButtonsComponent,\n    FormListComponent\n  ]\n})\nexport class FragmentsModule { }\n","export class TypeOfApplication {\n    id: number;\n    description: string;\n    clearingReleaseTime: String\n    decisionReleaseTime: String\n    sequenceNo: number;\n    status: String\n    submissionEndTime: String;\n    submissionStartTime: String\n}","import { TypeOfRational } from \"./type-of-rational.model\";\n\nexport class ApplicationRationaleList {\n\n    id: number;\n    typeOfRationale: TypeOfRational;\n\n}","import { Company } from './company.model';\nimport { Brand } from './brand.model';\nimport { ApplicationType } from './application-type.model';\nimport { UserAccount } from './user-account.model';\nimport { MultipleApplication } from './multiple-application.model';\nimport { Affiliation } from './affiliation.model';\nimport { ApplicationRequest } from './application-request.model';\nimport { Product } from './product.model';\nimport { TypeOfMedium } from './type-of-medium.model';\n\nexport class S1Application {\n    id: number;\n    company: Company;\n    brand: Brand;\n    adTitle: string;\n    referenceCode: string;\n\n    tagLine: string;\n    materialInformation: string;\n    externalStatus: string\n    internalStatus: string\n    revisionNo: number;\n\n    actionBy: UserAccount;\n    actionStatus: string; // ASSIGN_TO_ADSPE, ASSIGN_TO_REVIEWER, ASSIGN_TO_SCREENER\n    formStatus: string; // OPEN, LOCKED\n    submissionType: string // ORIGINAL, REVISION, COMPLIANCE\n    applicationType: ApplicationType;\n\n    formType: string; // INDIVIDUAL, MULTIPLE\n    autoSubmit: boolean;\n    submissionDate: Date;\n    sequenceOrder: number;\n    countSeries: number;\n\n    refTypeOfMedium: string;\n    assignedUser: UserAccount;\n    applicationOwner: UserAccount;\n    multipleApplication: MultipleApplication;\n    appFormReference: string;\n\n    mainAttachmentReference: string;\n    supportingAttachmentReference: string;\n    paymentAttachmentReference: string;\n    membersAffiliation: Affiliation;\n    decisionStatus: string;\n\n    amount: number;\n    applicationRequest: ApplicationRequest;\n    revisionLetterAttachmentReference: string;\n    assignedEncoder: UserAccount;\n    assignedAdSpecialist: UserAccount;\n\n    assignedScreener: UserAccount;\n    assignedReviewer: UserAccount;\n    verifiedDatetimeByEvaluator: Date;\n    sameDayRelease: boolean;\n    paidByApplicant: boolean;\n\n    archived: boolean;\n    appliedS2: boolean;\n    deliquent: boolean;\n    paymentStatus: string;\n    applicationDate: Date;\n\n    validUntil: Date;\n    previousRefCode: string;\n    hasNoSupportingDocs: boolean;\n    referenceCodeRejected: string;\n\n    hasRevision: boolean;\n    product: Product;\n    hasOngoingRevision: boolean;\n    qrCode: string;\n    barCode: string;\n    screenerDecisionComment: boolean;\n    reviewerDecisionComment: boolean;\n    hasOngoingCompliance: boolean;\n    releaseStatus: string;\n\n    complianceForm: boolean; // param need upon request for compliance\n    emailSent: boolean;\n    forwardToScreener: boolean;\n    forwardToReviewer: boolean;\n    formProcess: string;\n    typeOfMedium: string;\n\n    stampMaterialFileURL: string;\n    stampMaterialFilename: string;\n    decisionFormFileURL : string;\n    decisionFormFilename: string;\n\n    hasOngoingAppeal: boolean;\n    typeOfAppeal: string;\n    appealAttachmentReference: string;\n\n    hasOfficialReceipt: boolean;\n\n    // For AppRequest\n    status: string;\n\n    currentAssignee: string;\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { ApiService, DataStorageService, SweetAlertService } from '@services';\nimport { APP_DECISION_STATUS, ENDPOINTS, SUBMISSION_TYPE } from '@shared';\nimport { ApplicationS2RationaleList } from 'app/core/models/application-rationale-list-s2.model';\nimport { ApplicationRationaleList } from 'app/core/models/application-rationale-list.model';\nimport { RationaleS2 } from 'app/core/models/rationale-s2.model';\nimport { Rationale } from 'app/core/models/rationale.model';\nimport { TypeOfRational } from 'app/core/models/type-of-rational.model';\nimport { NgxSpinnerService } from 'ngx-spinner';\n\n@Component({\n  selector: 'app-incomplete-disapproved-rationale',\n  templateUrl: './incomplete-disapproved-rationale.component.html',\n  styleUrls: ['./incomplete-disapproved-rationale.component.scss']\n})\nexport class IncompleteDisapprovedRationaleComponent implements OnInit {\n\n  rationale = new Rationale();\n  rationaleS2 = new RationaleS2();\n  typeOfRational = new TypeOfRational();\n  applicationRationaleList = new ApplicationRationaleList();\n  applicationRationaleListS2 = new ApplicationS2RationaleList();\n  rationaleList = [];\n  selectedRationaleList = [];\n\n  submissionType = '';\n  isOther = false;\n  otherDescription = '';\n  currentUser: any;\n\n  constructor(\n    private apiService: ApiService,\n    private sweetAlertService: SweetAlertService,\n    private router: Router,\n    private dataStorage: DataStorageService,\n    private spinner: NgxSpinnerService,\n    public dialogRef: MatDialogRef<IncompleteDisapprovedRationaleComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any\n  ) {\n\n    if (data.applicationStage === 's1') {\n      this.submissionType = data.s1Application.submissionType;\n    } else {\n      this.submissionType = data.s2Application.submissionType;\n    }\n\n  }\n\n  ngOnInit(): void {\n    this.getRationale();\n    this.currentUser = this.dataStorage.getUserAccount();\n    console.log('ksahkjakj', this.data);\n\n  }\n\n\n\n  getRationale(): void {\n    let endpoint\n    let submissionTypeForm\n\n    if (this.data.applicationStage === 's1') {\n      submissionTypeForm = this.data.s1Application.submissionType;\n      this.rationale.applicationForm = this.data.s1Application;\n    } else {\n      submissionTypeForm = this.data.s2Application.submissionType;\n      this.rationale.applicationFormS2 = this.data.s2Application;\n    }\n\n    if (submissionTypeForm === SUBMISSION_TYPE.ORIGINAL) {\n      endpoint = ENDPOINTS.typeOfRationale;\n    } else if (submissionTypeForm === SUBMISSION_TYPE.REVISION) {\n      endpoint = ENDPOINTS.typeOfRationale + '/category/FOR_COMPLIANCE';\n    } else if (submissionTypeForm === SUBMISSION_TYPE.COMPLIANCE ||\n      this.data.s1Application.decisionStatus === APP_DECISION_STATUS.INCOMPLETE) {\n      endpoint = ENDPOINTS.typeOfRationale + '/category/FOR_INCOMPLETE_DECISION';\n    } else if (this.data.s1Application.hasToa) {\n      endpoint = ENDPOINTS.typeOfRationale + '/category/FOR_TOA_APPLICATION';\n    }\n\n    this.apiService.findAll(endpoint).subscribe(\n      (res: any) => {\n        this.rationaleList = res.responseData.data;\n        console.log(this.rationaleList);\n      }\n    )\n  }\n\n  selectRationale(data): void {\n    let list = [];\n    if (this.data.applicationStage === 's1') {\n      this.applicationRationaleList.typeOfRationale = data;\n      this.selectedRationaleList.push(this.applicationRationaleList);\n      this.applicationRationaleList = new ApplicationRationaleList();\n    } else {\n      this.applicationRationaleList.typeOfRationale = data;\n      this.selectedRationaleList.push(this.applicationRationaleList);\n      this.applicationRationaleList = new ApplicationRationaleList();\n    }\n    console.log(this.selectedRationaleList);\n\n\n\n\n  }\n\n  removeRationale(id) {\n    const index: number = this.selectedRationaleList.findIndex(srl => srl.id === id);\n    this.selectedRationaleList.splice(index, 1);\n  }\n\n  submitRationale(): void {\n    let endpoint;\n    let swalMessage;\n    let activeModel;\n\n    this.spinner.show();\n\n    if (this.data.applicationStage === 's1') {\n      endpoint = ENDPOINTS.applicationRationale;\n      swalMessage = 'S1 application rationale has been saved!'\n    } else {\n      endpoint = ENDPOINTS.applicationRationaleS2;\n      swalMessage = 'S2 application rationale has been saved!';\n      this.rationale.id = 0;\n    }\n\n    this.rationale.applicationRationaleLists = this.selectedRationaleList;\n    this.rationale.actionDate = new Date();\n    this.rationale.actionBy = this.currentUser;\n    this.rationale.others = this.otherDescription;\n\n\n    console.log('save rationale', this.rationale);\n\n    this.apiService.save(endpoint, this.rationale).subscribe(\n      (res: any) => {\n        this.spinner.hide();\n        this.sweetAlertService.customSuccessMessage(swalMessage);\n        this.dialogRef.close(res);\n      }, (err: any) => {\n        console.log(err);\n      }\n    )\n  }\n\n  cancel(): void {\n    this.dialogRef.close();\n  }\n\n}\n","<div class=\"container-fluid\">\n    <h1><span class=\"material-icons\" >info</span> Add Rationale</h1>\n    <hr>\n    <div class=\"row\">\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n            <mat-label>Select Rationale:</mat-label>\n                <mat-select class=\"mat-select-value-text\" (selectionChange)=\"selectRationale($event.value)\">\n                    <mat-option *ngFor=\"let i of rationaleList\" [value]=\"i\" [matTooltip]=\"i.rationale\">\n                        {{i.rationale}}\n                    </mat-option>\n                </mat-select>\n        </mat-form-field>\n\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n            <mat-label>OTHER, PLEASE SPECIFY:</mat-label>\n            <textarea matInput [(ngModel)]=\"otherDescription\"></textarea>\n        </mat-form-field>\n\n    </div>\n\n    <div class=\"row \">\n        <th >Selected Rationale:</th>\n        <div class=\"col list-content\" >\n\n            <table *ngFor=\"let i of selectedRationaleList\">\n                <tr>\n                    <td class=\"reason-description\">\n                        <span class=\"material-icons\" >label_important</span>  {{i?.typeOfRationale?.rationale}}\n                    </td>\n                    <td>\n                        <span class=\"material-icons\" (click)=\"removeRationale(i.id)\">delete</span>\n                    </td>\n                </tr>\n            </table>\n        </div>\n    </div>\n\n    <div class=\"row button-content\">\n        <div class=\"col\">\n            <button mat-raised-button class=\"button-red\" (click)=\"submitRationale()\" [disabled]=\"selectedRationaleList.length === 0 && !otherDescription\">\n                <i class=\"material-icons color__white\">verified</i> Submit Rationale\n            </button>\n        </div>\n        <div class=\"col\">\n            <button class=\"col-md-6\" mat-raised-button class=\"button-red\" (click)=\"cancel()\">\n                <i class=\"material-icons color__white\">cancel</i> Cancel\n            </button>\n        </div>\n    </div>\n\n</div>\n","import { Brand } from './brand.model';\nimport { Category } from './category.model';\n\nexport class Product {\n    id: number;\n    description: string;\n    status: string;\n    brand: Brand;\n    category: Category;\n}\n","import { SweetAlertService } from './../../../core/services/alert-message/sweet-alert.service';\nimport { ENDPOINTS } from '@shared';\nimport { ApiService } from './../../../core/services/api.service';\nimport { AfterViewInit, Component, EventEmitter, Input, OnInit, Output, TemplateRef, ViewChild } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTable, MatTableDataSource } from '@angular/material/table';\nimport { NgxSpinnerService } from 'ngx-spinner';\n\n@Component({\n  selector: 'app-form-list',\n  templateUrl: './form-list.component.html',\n  styleUrls: ['./form-list.component.scss']\n})\nexport class FormListComponent implements OnInit, AfterViewInit {\n  @ViewChild(MatPaginator, { static: false }) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: false }) sort: MatSort;\n  @ViewChild(MatTable, { static: false }) table: MatTable<Object>;\n  @Input() dataSource: MatTableDataSource<Object>;\n  @Input() displayedColumns = '';\n  @Output() selectInListFunction: EventEmitter<any> = new EventEmitter();\n  @Output() deleteInListFunction: EventEmitter<any> = new EventEmitter();\n  @Output() updateListFunction: EventEmitter<any> = new EventEmitter();\n  @Output() idForUpdate: number = 0;\n  @Output() idForDelete: number = 0;\n  @Output() elementObject: any;\n  @Output() getVoucherRef: EventEmitter<any> = new EventEmitter();\n  @ViewChild('myTemplate') customModal: TemplateRef<any>;\n  @ViewChild('signatoryEdit') signatoryEditModal: TemplateRef<any>;\n  signatory: any = {};\n  signatoryRef: any = {};\n\n  constructor(public dialog: MatDialog, private api: ApiService, \n    private spinner: NgxSpinnerService, private alert: SweetAlertService) { }\n\n  ngOnInit(): void {\n  }\n\n  ngAfterViewInit(): void {\n    if(this.dataSource){\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n    }\n  }\n\n  getObject(id) {\n    this.idForUpdate = id;\n    this.selectInListFunction.emit();\n  }\n\n  deleteObject(id, obj: any = '') {\n    this.idForDelete = id;\n    this.elementObject = obj;\n    this.deleteInListFunction.emit(obj);\n  }\n\n  openEditModal(id, obj: any) {\n    this.signatory = JSON.parse(JSON.stringify(obj));\n    this.signatoryRef = obj;\n    this.dialog.open(this.signatoryEditModal, {\n      disableClose: true,\n      width: '350px',\n      data: obj\n    });\n  }\n\n  updateObject(): void {\n    if (this.signatoryRef.id === undefined) {\n      let data = this.dataSource.data;\n      data.splice(this.dataSource.data.findIndex(r => r === this.signatoryRef), 1, this.signatory);\n      this.updateListFunction.emit(data);\n    } else {\n      this.updateListFunction.emit(this.signatory);\n    }\n    this.dialog.closeAll();\n  }\n\n  closeModal() {\n    this.dialog.closeAll();\n  }\n  viewHistory(data){\n    console.log('data', data);\n    // this.spinner.show()\n    \n\n\n    this.api.findByParam(ENDPOINTS.voucherAttachment, data?.voucherAttachmentReference).subscribe(res =>{\n      if(!res?.responseData?.data?.fileURL) {\n        this.alert.customErrorMessage(\"No Available file\")\n      }\n      \n      window.open(res?.responseData?.data?.fileURL);\n    }, error =>{\n      this.alert.customErrorMessage(\"No Available File\");\n    })\n    \n  }\n\n\n}\n","<div class=\"mat-elevation-z8\">\n  <table mat-table [dataSource]=\"dataSource\" matSort>\n\n    <ng-container matColumnDef=\"emailCode\">\n      <th mat-header-cell *matHeaderCellDef> Email Code </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\"> {{ element?.emailCode }} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"subject\">\n      <th mat-header-cell *matHeaderCellDef> Subject </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\"> {{ element?.subject }} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"category\">\n      <th mat-header-cell *matHeaderCellDef> Category </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\"> {{ element?.category?.description }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"typeOfMainDocument\">\n      <th mat-header-cell *matHeaderCellDef> Type Of Main Document </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\"> {{ element?.typeOfMainDocument }} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"typeOfMainDocumentObject\">\n      <th mat-header-cell *matHeaderCellDef> Type Of Main Document </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\"> {{\n        element?.typeOfMainDocument?.typeOfMainDocument }} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"noOfHours\">\n      <th mat-header-cell *matHeaderCellDef> Number Of Hours </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\"> {{ element?.noOfHours }} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"noOfDays\">\n      <th mat-header-cell *matHeaderCellDef> Number Of Days </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\"> {{ element?.noOfDays }} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"noOfWorkingDays\">\n      <th mat-header-cell *matHeaderCellDef> Number Of Working Days </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\"> {{ element?.noOfWorkingDays }} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"typeOfMedium\">\n      <th mat-header-cell *matHeaderCellDef> Type of Medium </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\"> {{ element?.typeOfMedium }} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"typeOfMediumObj\">\n      <th mat-header-cell *matHeaderCellDef> Type of Medium </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\"> {{ element?.typeOfMedium?.description }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"reason\">\n      <th mat-header-cell *matHeaderCellDef> Reason </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\"> {{ element?.reason }} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"description\">\n      <th mat-header-cell *matHeaderCellDef> Description </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\"> {{ element?.description }} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"body\">\n      <th mat-header-cell *matHeaderCellDef> Body </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        <div [innerHTML]=\"element?.body\"></div>\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"dialect\">\n      <th mat-header-cell *matHeaderCellDef> Dialect </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\"> {{ element?.dialect }} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"applicationType\">\n      <th mat-header-cell *matHeaderCellDef> Application Type </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\"> {{ element?.applicationType }} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"lengthFrom\">\n      <th mat-header-cell *matHeaderCellDef> Length From </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\"> {{ element?.lengthFrom }} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"lengthTo\">\n      <th mat-header-cell *matHeaderCellDef> Length To </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\"> {{ element?.lengthTo }} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"memberOffline\">\n      <th mat-header-cell *matHeaderCellDef> Member Offline </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\"> {{ element?.memberOffline }} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"memberOnline\">\n      <th mat-header-cell *matHeaderCellDef> Member Online </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\"> {{ element?.memberOnline }} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"nonMemberOffline\">\n      <th mat-header-cell *matHeaderCellDef> Non Member Offline </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\"> {{ element?.nonMemberOffline }} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"nonMemberOnline\">\n      <th mat-header-cell *matHeaderCellDef> Non Member Online </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\"> {{ element?.nonMemberOnline }} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"screenerName\">\n      <th mat-header-cell *matHeaderCellDef> Screener Name </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        {{ element?.screener?.firstName }} {{ element?.screener?.lastName }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"reviewerName\">\n      <th mat-header-cell *matHeaderCellDef> Reviewer Name </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        {{ element?.reviewer?.firstName }} {{ element?.reviewer?.lastName }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"holidayName\">\n      <th mat-header-cell *matHeaderCellDef> Holiday Name </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\"> {{ element?.holidayName }} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"holidayDate\">\n      <th mat-header-cell *matHeaderCellDef> Holiday Date </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\"> {{ element?.holidayDate |\n        date:'MM/dd/yyyy' }} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"holidayType\">\n      <th mat-header-cell *matHeaderCellDef> Holiday Type </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\"> {{ element?.holidayType?.replaceAll('_','\n        ') }} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"typeOfExecution\">\n      <th mat-header-cell *matHeaderCellDef> Type Of Execution </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\"> {{ element?.typeOfExecution }} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"typeOfExecutionObj\">\n      <th mat-header-cell *matHeaderCellDef> Type Of Execution </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\"> {{\n        element?.typeOfExecution?.typeOfExecution }} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"live\">\n      <th mat-header-cell *matHeaderCellDef> LIVE </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        <i *ngIf=\"element?.supportingAttachmentReference\" class=\"material-icons\">check_circle</i>\n        <i *ngIf=\"!element?.supportingAttachmentReference\" class=\"material-icons cancel\">cancel</i>\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"landingPage\">\n      <th mat-header-cell *matHeaderCellDef> Landing Page </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        <i *ngIf=\"element?.supportingAttachmentReference\" class=\"material-icons\">check_circle</i>\n        <i *ngIf=\"!element?.supportingAttachmentReference\" class=\"material-icons cancel\">cancel</i>\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"applyForS2\">\n      <th mat-header-cell *matHeaderCellDef> Apply for S2 </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        <i *ngIf=\"!element?.live\" class=\"material-icons\">check_circle</i>\n        <i *ngIf=\"element?.live\" class=\"material-icons cancel\">cancel</i>\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"applyForTOA\">\n      <th mat-header-cell *matHeaderCellDef> Apply for TOA </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        <i *ngIf=\"element?.applyForToa\" class=\"material-icons\">check_circle</i>\n        <i *ngIf=\"!element?.applyForToa\" class=\"material-icons cancel\">cancel</i>\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"paymentDescription\">\n      <th mat-header-cell *matHeaderCellDef> Payment Description </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\"> {{ element?.paymentDescription }} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"categoryDescription\">\n      <th mat-header-cell *matHeaderCellDef> Category </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\"> {{ element?.description }} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"product\">\n      <th mat-header-cell *matHeaderCellDef> Product </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\"> {{ element?.product?.description }} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"productDescription\">\n      <th mat-header-cell *matHeaderCellDef> Product </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\"> {{ element?.description }} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"brand\">\n      <th mat-header-cell *matHeaderCellDef> Brand </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\"> {{ element?.brand?.description }} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"title\">\n      <th mat-header-cell *matHeaderCellDef> Title </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\"> {{ element?.title }} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"details\">\n      <th mat-header-cell *matHeaderCellDef> Details </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\"> {{ element?.details }} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"noOfView\">\n      <th mat-header-cell *matHeaderCellDef> Number Of Views </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\"> {{ element?.noOfView }} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"minimum\">\n      <th mat-header-cell *matHeaderCellDef> Minimum </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\"> {{ element?.minimum }} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"maximum\">\n      <th mat-header-cell *matHeaderCellDef> Maximum </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\"> {{ element?.maximum }} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"postingDate\">\n      <th mat-header-cell *matHeaderCellDef> Posting Date </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\"> {{ element?.postingDate |\n        date:'MM/dd/yyyy' }} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"s1ExpNoOfYears\">\n      <th mat-header-cell *matHeaderCellDef> S1 Expiration No Of Years </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\"> {{ element?.s1ExpNoOfYears }} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"s2ExpNoOfYears\">\n      <th mat-header-cell *matHeaderCellDef> S2 Expiration No Of Years </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\"> {{ element?.s2ExpNoOfYears }} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"referenceCode\">\n      <th mat-header-cell *matHeaderCellDef> Reference Code </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        <span *ngIf=\"element?.referenceCode\">\n          {{ element?.referenceCode }}\n        </span>\n        <span *ngIf=\"element?.applicationForm?.referenceCode\">\n          {{ element?.applicationForm?.referenceCode }}\n        </span>\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"adTitle\">\n      <th mat-header-cell *matHeaderCellDef> AD Title </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        <span *ngIf=\"element?.adTitle\">\n          {{ element?.adTitle }}\n        </span>\n        <span *ngIf=\"element?.applicationForm?.adTitle\">\n          {{ element?.applicationForm?.adTitle }}\n        </span>\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"assignedAdSpecialist\">\n      <th mat-header-cell *matHeaderCellDef> AD Specialist </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        <span *ngIf=\"element?.assignedAdSpecialist\">\n          {{ element?.assignedAdSpecialist?.firstName }} {{ element?.assignedAdSpecialist?.lastName }}\n        </span>\n        <!-- <span *ngIf=\"element?.applicationForm?.assignedAdSpecialist\">\n         {{element?.applicationForm?.assignedAdSpecialist?.firstName }}  {{ element?.applicationForm?.assignedAdSpecialist?.lastName }}\n        </span> -->\n        <span *ngIf=\"!element?.assignedAdSpecialist\">\n          N/A\n        </span>\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"assignedEncoder\">\n      <th mat-header-cell *matHeaderCellDef> Evaluator </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        <span *ngIf=\"element?.assignedEncoder\">\n          {{ element?.assignedEncoder?.firstName }} {{ element?.assignedEncoder?.lastName }}\n        </span>\n        <!-- <span *ngIf=\"element?.applicationForm?.assignedEncoder\">\n          {{element?.applicationForm?.assignedEncoder?.firstName }} {{ element?.applicationForm?.assignedEncoder?.lastName }}\n        </span> -->\n        <span *ngIf=\"!element?.assignedEncoder && !element?.applicationForm?.assignedEncoder\">\n          N/A\n        </span>\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"assignedReviewer\">\n      <th mat-header-cell *matHeaderCellDef> Reviewer </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        <span *ngIf=\"element?.assignedReviewer\">\n          {{ element?.assignedReviewer?.firstName }} {{ element?.assignedReviewer?.lastName }}\n        </span>\n        <!-- <span *ngIf=\"element?.applicationForm?.assignedReviewer\">\n          {{element?.applicationForm?.assignedReviewer?.firstName }} {{ element?.applicationForm?.assignedReviewer?.lastName }}\n        </span> -->\n        <span *ngIf=\"!element?.assignedReviewer\">\n          N/A\n        </span>\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"assignedScreener\">\n      <th mat-header-cell *matHeaderCellDef> Screener </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        <span *ngIf=\"element?.assignedScreener\">\n          {{ element?.assignedScreener?.firstName }} {{ element?.assignedScreener?.lastName }}\n        </span>\n        <!-- <span *ngIf=\"element?.applicationForm?.assignedScreener\">\n          {{element?.applicationForm?.assignedScreener?.firstName }} {{ element?.applicationForm?.assignedScreener?.lastName }}\n        </span> -->\n        <span *ngIf=\"!element?.assignedScreener\">\n          N/A\n        </span>\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"assignedUser\">\n      <th mat-header-cell *matHeaderCellDef> Current Assigned User </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        <span *ngIf=\"element?.assignedUser\">\n          {{ element?.assignedUser?.firstName }} {{ element?.assignedUser?.lastName }}\n        </span>\n        <!-- <span *ngIf=\"element?.applicationForm?.assignedUser\">\n          {{ element?.applicationForm?.assignedUser?.firstName }} {{ element?.applicationForm?.assignedUser?.lastName }}\n        </span> -->\n        <span *ngIf=\"!element?.assignedUser\">\n          N/A\n        </span>\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"applicationOwner\">\n      <th mat-header-cell *matHeaderCellDef> Application Owner </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        <span *ngIf=\"element?.applicationOwner\">\n          {{ element?.applicationOwner?.firstName }} {{ element?.applicationOwner?.lastName }}\n        </span>\n        <span *ngIf=\"element?.applicationForm?.applicationOwner\">\n          {{element?.applicationForm?.applicationOwner?.firstName }}\n          {{element?.applicationForm?.applicationOwner?.lastName }}\n        </span>\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"lastModifiedBy\">\n      <th mat-header-cell *matHeaderCellDef> Last Modified By </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        {{ element?.modifiedBy ? element?.modifiedBy : element?.createdBy }} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"lastModifiedDate\">\n      <th mat-header-cell *matHeaderCellDef> Last Modified Date </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        {{ element?.modifiedDate ? (element?.modifiedDate | date:'MM/dd/yyyy hh:mm a') : (element?.createdDate |\n        date:'MM/dd/yyyy hh:mm a') }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"affiliationDesc\">\n      <th mat-header-cell *matHeaderCellDef> Member's Affiliation </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        {{ element?.description }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"member\">\n      <th mat-header-cell *matHeaderCellDef> Member </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        {{ element?.member ? 'Yes' : 'No' }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"brandDesc\">\n      <th mat-header-cell *matHeaderCellDef> Brand </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        {{ element?.description }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"penalty\">\n      <th mat-header-cell *matHeaderCellDef> Penalty </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        {{ element?.penalty ? 'Yes' : 'No' }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"typeOfDocumentDesc\">\n      <th mat-header-cell *matHeaderCellDef> Type of Document </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        {{ element?.description }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"dateOfLaunchEnable\">\n      <th mat-header-cell *matHeaderCellDef> Has Date Of Launch </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        {{ element?.dateOfLaunchEnable ? 'Yes' : 'No' }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"expiresOnEnable\">\n      <th mat-header-cell *matHeaderCellDef> Has Expiration Date </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        {{ element?.expiresOnEnable ? 'Yes' : 'No' }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"basedOnEnable\">\n      <th mat-header-cell *matHeaderCellDef> Has Basis </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        {{ element?.basedOnEnable ? 'Yes' : 'No' }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"variantEnable\">\n      <th mat-header-cell *matHeaderCellDef> Has Variant </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        {{ element?.variantEnable ? 'Yes' : 'No' }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"remarksEnable\">\n      <th mat-header-cell *matHeaderCellDef> Has Remarks </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        {{ element?.remarksEnable ? 'Yes' : 'No' }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"inputEnable\">\n      <th mat-header-cell *matHeaderCellDef> Has Input </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        {{ element?.inputEnable ? 'Yes' : 'No' }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"amount\">\n      <th mat-header-cell *matHeaderCellDef> Has Amount </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        {{ element?.amount ? 'Yes' : 'No' }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"bankBranch\">\n      <th mat-header-cell *matHeaderCellDef> Has Bank Branch </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        {{ element?.bankBranch ? 'Yes' : 'No' }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"bankName\">\n      <th mat-header-cell *matHeaderCellDef> Has Bank Name </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        {{ element?.bankName ? 'Yes' : 'No' }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"controlNo\">\n      <th mat-header-cell *matHeaderCellDef> Has Control No </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        {{ element?.controlNo ? 'Yes' : 'No' }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"fundTransferDate\">\n      <th mat-header-cell *matHeaderCellDef> Has Fund Transfer Date </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        {{ element?.fundTransferDate ? 'Yes' : 'No' }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"promisorryDate\">\n      <th mat-header-cell *matHeaderCellDef> Has Promisorry Date </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        {{ element?.promisorryDate ? 'Yes' : 'No' }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"referenceNo\">\n      <th mat-header-cell *matHeaderCellDef> Has Reference No </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        {{ element?.referenceNo ? 'Yes' : 'No' }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"enabledFields\">\n      <th mat-header-cell *matHeaderCellDef> Enabled Fields </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        {{ element?.enabledFields }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"status\">\n      <th mat-header-cell *matHeaderCellDef> Status </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        {{ element?.status?.replaceAll('_', ' ') }}\n      </td>\n    </ng-container>\n\n    <!-- FOR BRAND PENALTIES -->\n    <ng-container matColumnDef=\"brandDescription\">\n      <th mat-header-cell *matHeaderCellDef> Brand </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        {{ element?.brand?.description }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"brandPenaltyAmount\">\n      <th mat-header-cell *matHeaderCellDef> Amount </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        {{ element?.amount | number : '1.2-2' }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"penaltyDate\">\n      <th mat-header-cell *matHeaderCellDef> Penalty Date </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        {{ element?.penaltyDate | date:'fullDate'}}\n      </td>\n    </ng-container>\n    <!-- FOR BRAND PENALTIES -->\n\n    <!-- FOR COMPANY PENALTIES -->\n    <ng-container matColumnDef=\"companyDescription\">\n      <th mat-header-cell *matHeaderCellDef> Company </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\"\n        [ngStyle]=\"{'background-color': element?.status === 'ACTIVE' ? 'white' : '#ffbebe' }\">\n        {{ element?.company?.companyName }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"companyPenaltyAmount\">\n      <th mat-header-cell *matHeaderCellDef> Penalty Amount </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        {{ element?.penaltyAmount | number : '1.2-2' }}\n      </td>\n    </ng-container>\n\n    <!-- FOR UPLOADING FILE SIZE -->\n    <ng-container matColumnDef=\"id\">\n      <th mat-header-cell *matHeaderCellDef> Document Id </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        {{ element.id }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"size\">\n      <th mat-header-cell *matHeaderCellDef> Document size </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        {{ element.fileSize }}\n      </td>\n    </ng-container>\n\n    <!-- FOR TYPE OF APPLICATION -->\n\n    <ng-container matColumnDef=\"clearingReleaseTime\">\n      <th mat-header-cell *matHeaderCellDef> Clearing Release Time </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        {{ element.clearingReleaseTime }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"decisionReleaseTime\">\n      <th mat-header-cell *matHeaderCellDef> Decision Release Time </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        {{ element.decisionReleaseTime }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"submissionStartTime\">\n      <th mat-header-cell *matHeaderCellDef> Submission Start Time </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        {{ element.submissionStartTime }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"submissionEndTime\">\n      <th mat-header-cell *matHeaderCellDef> Submission End Time </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        {{ element.submissionEndTime }}\n      </td>\n    </ng-container>\n\n    <!-- FOR TYPE OF RATIONAL -->\n\n    <ng-container matColumnDef=\"rationale\">\n      <th mat-header-cell *matHeaderCellDef> Rationale </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\" style=\"width: 78%;\">\n        {{ element.rationale }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"rationaleCategory\">\n      <th mat-header-cell *matHeaderCellDef> Rationale Category </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        {{ element.rationaleCategory.replaceAll('_',' ') | uppercase }}\n      </td>\n    </ng-container>\n\n\n    <ng-container matColumnDef=\"firstName\">\n      <th mat-header-cell *matHeaderCellDef> Firstname </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        {{ element.firstName }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"lastName\">\n      <th mat-header-cell *matHeaderCellDef> Lastname </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        {{ element.lastName }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"mobileNumber\">\n      <th mat-header-cell *matHeaderCellDef> Mobile Number </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        {{ element?.mobileNumber }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"emailAddress\">\n      <th mat-header-cell *matHeaderCellDef> Email Address </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        {{ element?.username }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"userRole\">\n      <th mat-header-cell *matHeaderCellDef> Role </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        {{ element?.userRole?.name?.replaceAll('ROLE_', '')?.replace('_', ' ')?.replace('ENCODER', 'EVALUATOR') }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"typeOfMediumController\">\n      <th mat-header-cell *matHeaderCellDef> Type of Medium </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        {{ element?.typeOfMedium?.description }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"typeOfExecutionController\">\n      <th mat-header-cell *matHeaderCellDef> Type of Execution </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        {{ element?.typeOfExecution?.typeOfExecution }}\n      </td>\n    </ng-container>\n\n    <!-- FOR VOUCHER ENROLLMENT -->\n\n    <ng-container matColumnDef=\"company\">\n      <th mat-header-cell *matHeaderCellDef> Company </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        {{ element?.company?.companyName }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"fundAmount\">\n      <th mat-header-cell *matHeaderCellDef> Fund Amount </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        {{ element?.fundAmount | number : '1.2-2' }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"voucherDate\">\n      <th mat-header-cell *matHeaderCellDef> Voucher Date</th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        {{ element?.voucherDate | date: 'shortDate'}}\n      </td>\n    </ng-container>\n    <!-- <ng-container matColumnDef=\"action\">\n      <th mat-header-cell *matHeaderCellDef> action </th>\n      <td mat-cell *matCellDef=\"let element\">\n        <button mat-raised-button class=\"button-red\" (click)=\"viewHistory(element)\">\n          View History\n        </button>\n      </td>\n    </ng-container> -->\n\n\n    <!-- <ng-container matColumnDef=\"voucherSignatories\">\n        <th mat-header-cell *matHeaderCellDef> Signatories Name </th>\n        <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n          {{ element?.voucherSignatories.name}}\n        </td>\n      </ng-container> -->\n\n    <!-- FOR VOUCHER SIGNATORIES -->\n\n    <ng-container matColumnDef=\"name\">\n      <th mat-header-cell *matHeaderCellDef> Signatories Name </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        {{ element?.name}}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"position\">\n      <th mat-header-cell *matHeaderCellDef> Position</th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        {{ element?.position}}\n      </td>\n    </ng-container>\n\n    <!-- FOR VOUCHER FUND TRANSFER -->\n    <ng-container matColumnDef=\"amountTransfered\">\n      <th mat-header-cell *matHeaderCellDef> Amount Transferred </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        {{ element?.amountTransfered | number : '1.2-2'}}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"transferedDate\">\n      <th mat-header-cell *matHeaderCellDef> Transferred Date</th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        {{ element?.transferedDate | date: 'shortDate' }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"officialReceiptNo\">\n      <th mat-header-cell *matHeaderCellDef> Official Receipt No</th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        {{ element?.officialReceiptNo }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"typeOfMediumDescription\">\n      <th mat-header-cell *matHeaderCellDef> Type Of Medium</th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        {{ element?.typeOfMedium?.description }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"officialReceiptReferences\">\n      <th mat-header-cell *matHeaderCellDef> Official Receipt No References</th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        {{ element?.officialReceiptReferencesValue }}\n      </td>\n    </ng-container>\n\n    <!-- Image login -->\n    <ng-container matColumnDef=\"file\">\n      <th mat-header-cell *matHeaderCellDef> File</th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        {{ element?.file }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"fileName\">\n      <th mat-header-cell *matHeaderCellDef> File name</th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        {{ element?.fileName }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"fileExtension\">\n      <th mat-header-cell *matHeaderCellDef> File Extension</th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        {{ element?.fileExtension }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"documentFormat\">\n      <th mat-header-cell *matHeaderCellDef> Document Format</th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        {{ element?.documentFormat }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"displayed\">\n      <th mat-header-cell *matHeaderCellDef> Display Status</th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        {{ element?.displayed }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"fileURL\">\n      <th mat-header-cell *matHeaderCellDef> File URL</th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        {{ element?.fileURL }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"originalFilename\">\n      <th mat-header-cell *matHeaderCellDef> Original Filename</th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        {{ element?.originalFilename }}\n      </td>\n    </ng-container>\n\n\n\n    <!-- Image login -->\n\n\n    <!-- <ng-container matColumnDef=\"companyPenaltyDate\">\n      <th mat-header-cell *matHeaderCellDef> Penalty Date </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"getObject(element?.id)\">\n        {{ element?.penaltyDate | date:'fullDate'}}\n      </td>\n    </ng-container> -->\n    <!-- FOR COMPANY PENALTIES -->\n\n    <!-- DELETE ICON -->\n    <ng-container matColumnDef=\"deleteIcon\">\n      <th mat-header-cell *matHeaderCellDef> Action </th>\n      <td mat-cell *matCellDef=\"let element\" (click)=\"deleteObject(element?.id, element)\" matTooltip=\"Cancel OR\">\n        <span class=\"material-icons\">delete_forever</span>\n      </td>\n    </ng-container>\n    <!-- DELETE ICON -->\n    <ng-container matColumnDef=\"voucherActionItems\">\n      <th mat-header-cell *matHeaderCellDef class=\"action-items\"> Action </th>\n      <td mat-cell *matCellDef=\"let element\" class=\"action-items\">\n        <span class=\"material-icons\" tooltip=\"Edit\" (click)=\"openEditModal(element?.id, element)\">edit</span>\n        <span class=\"material-icons\" tooltip=\"Delete\" (click)=\"deleteObject(element?.id, element)\">delete_forever</span>\n      </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n  </table>\n  <div class=\"no-record\" [hidden]=\"dataSource && dataSource?.data?.length > 0\">\n    No record found.\n  </div>\n  <mat-paginator [pageSizeOptions]=\"[10, 20, 30]\" showFirstLastButtons></mat-paginator>\n</div>\n\n<ng-template #signatoryEdit>\n  <h1 mat-dialog-title>Edit Signatories</h1>\n  <div mat-dialog-content>\n    <mat-form-field appearance=\"fill\" class=\"w-100\">\n      <mat-label>Signatory Name</mat-label>\n      <input matInput [(ngModel)]=\"signatory.name\">\n    </mat-form-field>\n    <mat-form-field appearance=\"fill\" class=\"w-100\">\n      <mat-label>Position</mat-label>\n      <input matInput [(ngModel)]=\"signatory.position\">\n    </mat-form-field>\n  </div>\n  <div mat-dialog-actions class=\"justify-content-center\">\n    <button mat-button (click)=\"closeModal()\">Cancel</button>\n    <button mat-button class=\"mat-raised-button button-red\" [disabled]=\"!signatory.name || !signatory.position\" (click)=\"updateObject()\">Save</button>\n  </div>\n</ng-template>","export class TypeOfRational {\n\nid: number;\nrationale: String;\nrationaleCategory: String;\nstatus:\tString;\n\n}","export class EmailNotification {\n    id: number;\n    body: string;\n    description: string;\n    emailCode: string;\n    status: string;\n    subject: string;\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class FragmentsRoutingModule { }\n","\nexport class AscRateSpecial {\n    id: number;\n    applicationType: string;\n    memberOffline: number;\n    memberOnline: number;\n    nonMemberOffline: number;\n    nonMemberOnline: number;\n    status: string;\n}\n","import { S1Application } from './s1-application.model';\nimport { PaymentMethod } from './payment-method.model';\nimport { MultipleApplication } from './multiple-application.model';\nimport { S2Application } from './s2-application.model';\n\nexport class Payment {\n    id: number;\n    amountDue: number;\n    amountReceive: number;\n    appFormReference: string;\n    applicationForm: S1Application;\n    basicRate: number;\n    discount: number;\n    filename: string;\n    officialReceiptNo: string;\n    paymentAttachmentReference: string;\n    paymentDate: Date;\n    paymentMethod: PaymentMethod = new PaymentMethod();\n    paymentStatus: string; // PAID, UNPAID\n    remarks: string;\n    status: string;\n    vat: number;\n    withholdingTax: number;\n    amountToSettle: number;\n    companyName: string;\n    companyId: number;\n\n    multipleApplication: MultipleApplication;\n    filedBirForm: boolean = false;\n    applicationFormS2: S2Application;\n\n    constructor() {\n        this.filedBirForm = false;\n        this.remarks = '';\n    }\n}\n","import { TypeOfClearance } from './type-of-clearance.model';\nimport { TypeOfMainDocument } from './type-of-main-document.model';\n\nexport class TypeOfMedium {\n  description: string;\n  executionEnable: boolean;\n  id: number;\n  languageEnable: boolean;\n  lengthEnable: boolean;\n  multimedia: boolean;\n  multimediaMoving: boolean;\n  multimediaStatic: boolean;\n  othersEnable: boolean;\n  singlemedia: boolean;\n  sizeLengthEnable: boolean;\n  status: string;\n  typeOfMainDocument: TypeOfMainDocument;\n  widthEnable: boolean;\n  typeOfClearance: TypeOfClearance;\n\n  // not in BE; for List value\n  enabledFields: string;\n  sizeLength: string;\n}\n","import { TypeOfMedium } from './type-of-medium.model';\n\nexport class ApplicationMultimedia {\n    id: number;\n    amount: number;\n    appFormReference: string;\n    mediaType?: string; // STATIC, MOVING\n    multimediaSizeLength?: string;\n    typeOfMedium?: TypeOfMedium;\n}\n\nexport class ApplicationMultimediaItemsDTO {\n    hasSelected: boolean;\n    id: number;\n    multimediaMovingMedium?: string;\n    multimediaStaticMedium?: string;\n    sizeLength?: number;\n}\n\nexport class ApplicationMultimediaMovingDTO extends ApplicationMultimedia {\n    applicationMultimediaMovingList: ApplicationMultimediaItemsDTO[];\n    sizeLength: number;\n}\n\nexport class ApplicationMultimediaStaticDTO extends ApplicationMultimedia {\n    applicationMultimediaStaticList: ApplicationMultimediaItemsDTO[];\n}\n","import { ApplicationRequest } from './application-request.model';\nimport { S1Application } from './s1-application.model';\nimport { UserAccount } from './user-account.model';\n\nexport class S2Application {\n\n    id: number;\n    actionBy: string;\n    actionStatus: string;\n    applicationDate: Date;\n    applicationForm: S1Application;\n    assignedAdSpecialist: UserAccount;\n    assignedEncoder: UserAccount;\n    assignedUser: UserAccount;\n    complianceDate: Date;\n    decisionStatus: string;\n    externalStatus: string;\n    finalMaterialAttachmentReference: string;\n    formStatus: string;\n    internalStatus: string;\n    issuedDate: Date;\n    paymentStatus: string;\n    specialClearing: boolean;\n    submissionDate: Date;\n    validUntil: Date;\n    validityDate: Date;\n    referenceCodeRejected: string;\n    releaseDate: Date;\n    hasToa: boolean;\n    submissionType: string;\n    applicationRequest: ApplicationRequest;\n    paymentAttachmentReference: string;\n    amount: string;\n    appFormReference: string;\n    hasOngoingCompliance: boolean;\n    formProcess: string;\n    complianceForm: boolean; // param need upon request for compliance\n    hasOngoingAppeal: boolean;\n    typeOfAppeal: string;\n    appealAttachmentReference: string;\n    clearanceToaFileUrl: string;\n    clearanceToaFilename: string;\n    releaseStatus: string;\n    supportingAttachmentReference: string;\n}\n","import { TotalAmountsModel } from './totals.model';\nimport { TypeOfMedium, OrPreparationReference } from '@models';\n\nexport class OrPreparation {\n    amount: number;\n    amountInWords: string;\n    businessStyle: string;\n    companyAddress: string;\n    companyName: string;\n    companyTin: string;\n    controlNumber: string;\n    fullPaymentOf: string;\n    id: number;\n    officialReceiptDate: Date;\n    officialReceiptNo: string;\n    officialReceiptReferences: OrPreparationReference[];\n    remarks: string;\n    status: string;\n    typeOfMedium: TypeOfMedium;\n    voucherControlNumber: string;\n\n    //totals\n    totalSales: number;\n    totalVat: number;\n    totalWithholdingtax: number;\n    totalAmountDue: number;\n\n    // Not if BE; for FE only\n    officialReceiptReferencesValue: string;\n\n    setTotalAmounts(totals: TotalAmountsModel){\n        this.totalSales = totals.totalSales;\n        this.totalAmountDue = totals.totalAmountDue;\n        this.totalVat = totals.totalVat;\n        this.totalWithholdingtax = totals.totalWithholdingtax;\n    }\n}","import { TypeOfExecution } from './type-of-execution.model';\nimport { TypeOfMedium } from './type-of-medium.model';\n\nexport class MediumExecutionController {\n    id: number;\n    typeOfExecution: TypeOfExecution;\n    typeOfMedium: TypeOfMedium;\n    widthEnable: boolean;\n}\n","export class PromissoryNotePeriod {\n  id: number;\n  noOfDays: number;\n}","\nexport class Dialect {\n    id: number;\n    dialect: string;\n    status: string;\n}\n","import { Affiliation, Company, UserRole } from '@models';\n\nexport class UserAccount {\n    id: number;\n    username: string;\n    password: string;\n    firstName: string;\n    middleName: string;\n    lastName: string;\n    company: Company;\n    membersAffiliationDto: Affiliation;\n    mobileNumber: string;\n    userRole: UserRole;\n    status: string;\n    acceptTerms: boolean;\n    accountType: string;\n    // locked: Boolean;\n    // enabled: Boolean;\n    ascDefault:\tboolean;\n    membersAffiliation:\tAffiliation;\n    scheduledUser:\tboolean;\n    signatureAttachmentReference:\tstring;\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { Affiliation, AscRate, Brand, Category, PaymentType, Product, TypeOfApplication, TypeOfDocument, TypeOfMedium, TypeOfReason } from '@models';\nimport { Announcement } from 'app/core/models/announcement.model';\nimport { AscRateSpecial } from 'app/core/models/asc-rate-special.model';\nimport { BrandPenalties } from 'app/core/models/brand-penalties.model';\nimport { CompanyPenalties } from 'app/core/models/company-penalties.model';\nimport { Dialect } from 'app/core/models/dialect.model';\nimport { EmailNotification } from 'app/core/models/email-notification.model';\nimport { Holiday } from 'app/core/models/holiday.model';\nimport { LoginImage } from 'app/core/models/login-image.model';\nimport { MediumExecutionController } from 'app/core/models/medium-execution-controller.model';\nimport { NumberOfMultipleApplicationAllowed } from 'app/core/models/numberOfMultipleApplicationAllowed.model';\nimport { PromissoryNotePeriod } from 'app/core/models/promissory-note-period.model';\nimport { QrAndBarCodeChecker } from 'app/core/models/qrAndBarCodeChecker.model';\nimport { S1AndS2FormExpirationPeriod } from 'app/core/models/s1-and-s2-form-expiration-period.model';\nimport { ScreenerReviewerPair } from 'app/core/models/screener-reviewer-pair.model';\nimport { TypeOfMainDocument } from 'app/core/models/type-of-main-document.model';\nimport { TypeOfMediumExecution } from 'app/core/models/type-of-medium-execution.model';\nimport { TypeOfRational } from 'app/core/models/type-of-rational.model';\nimport { UploadingDocumentFileSize } from 'app/core/models/uploading-document-file-size-model';\n\n@Component({\n  selector: 'app-form-action-buttons',\n  templateUrl: './form-action-buttons.component.html',\n  styleUrls: ['./form-action-buttons.component.scss']\n})\nexport class FormActionButtonsComponent implements OnInit {\n\n  @Input() isFromModal = false;\n  @Input() showApproveRejectButton = false;\n\n  @Input() childObject: ChildObject;\n  @Input() childForm: FormGroup;\n  @Output() saveFunction: EventEmitter<any> = new EventEmitter();\n  @Output() validateFunction: EventEmitter<any> = new EventEmitter();\n  @Output() updateFunction: EventEmitter<any> = new EventEmitter();\n  @Output() deleteFunction: EventEmitter<any> = new EventEmitter();\n  @Output() cancelFunction: EventEmitter<any> = new EventEmitter();\n  @Output() closeModalFunction: EventEmitter<any> = new EventEmitter();\n  @Output() approveFunction: EventEmitter<any> = new EventEmitter();\n  @Output() rejectFunction: EventEmitter<any> = new EventEmitter();\n\n  @Input() isHideSaveButton = false;\n  @Input() isShowApproveDisapproveButton = false;\n  isHideDeleteButton = false;\n  isHideUpdateButton = false;\n  isShowValidateButton = false;\n\n  constructor() { }\n\n  ngOnInit(): void {\n    // hides the save button if class of childObject is email notification\n    this.isHideSaveButton = this.childObject instanceof EmailNotification\n      || this.childObject instanceof UploadingDocumentFileSize\n      || this.childObject instanceof QrAndBarCodeChecker\n      || this.childObject instanceof NumberOfMultipleApplicationAllowed\n      || this.childObject instanceof AscRateSpecial;\n    this.isHideUpdateButton = this.childObject instanceof LoginImage;\n    this.isHideDeleteButton = this.childObject instanceof Category\n      || this.childObject instanceof Product\n      || this.childObject instanceof Brand\n      || this.childObject instanceof BrandPenalties\n      || this.childObject instanceof CompanyPenalties\n      || this.childObject instanceof Affiliation\n      || this.childObject instanceof TypeOfMedium\n      || this.childObject instanceof TypeOfMediumExecution\n      || this.childObject instanceof MediumExecutionController\n      || this.childObject instanceof TypeOfReason\n      || this.childObject instanceof TypeOfDocument\n      || this.childObject instanceof PaymentType\n      || this.childObject instanceof Holiday\n      || this.childObject instanceof Dialect\n      || this.childObject instanceof ScreenerReviewerPair\n      || this.childObject instanceof EmailNotification\n      || this.childObject instanceof TypeOfMainDocument\n      || this.childObject instanceof Announcement\n      || this.childObject instanceof S1AndS2FormExpirationPeriod\n      || this.childObject instanceof PromissoryNotePeriod\n      || this.childObject instanceof AscRate\n      || this.childObject instanceof TypeOfApplication\n      || this.childObject instanceof TypeOfRational\n      || this.childObject instanceof LoginImage;\n    this.isShowValidateButton = this.childObject instanceof QrAndBarCodeChecker;\n  }\n\n  save() {\n    this.saveFunction.emit(this.childObject);\n  }\n\n  validate() {\n    this.validateFunction.emit(this.childObject);\n  }\n\n  update() {\n    this.updateFunction.emit(this.childObject);\n  }\n\n  delete() {\n    this.deleteFunction.emit(this.childObject);\n  }\n\n  approve() {\n    this.approveFunction.emit();\n  }\n\n  reject() {\n    this.rejectFunction.emit();\n  }\n\n  closeModal() {\n    this.closeModalFunction.emit();\n  }\n\n  resetFormValidator() {\n    this.cancelFunction.emit();\n  }\n\n}\n\ninterface ChildObject {\n  id: number;\n  reason: string;\n  typeOfMedium: string;\n  paymentDescription: string;\n  description: string;\n  fileSize: number;\n  clearingReleaseTime: string;\n  decisionReleaseTime: string;\n  sequenceNo: number;\n  status: string;\n  submissionEndTime: string;\n  submissionStartTime: string;\n}\n","<div class=\"row\">\n  <div class=\"col-md-12\">\n    <button mat-raised-button color=\"primary\" (click)=\"save()\" *ngIf=\"!childObject?.id && !isHideSaveButton\"\n      [disabled]=\"!(childForm.valid)\">\n      <!-- <mat-icon>save</mat-icon> SAVE -->\n      <i class=\"material-icons color__white\">save</i> SAVE\n    </button>\n    <button mat-raised-button color=\"primary\" (click)=\"validate()\" *ngIf=\"!childObject?.id && isShowValidateButton\"\n      [disabled]=\"!(childForm.valid)\">\n      <!-- <mat-icon>save</mat-icon> SAVE -->\n      <i class=\"material-icons color__white\">search</i> VALIDATE\n    </button>\n    <button mat-raised-button color=\"primary\" (click)=\"update()\" *ngIf=\"childObject?.id && !isHideUpdateButton\"\n      [disabled]=\"!(childForm.valid)\">\n      <!-- <mat-icon> </mat-icon>  -->\n      <i class=\"material-icons color__white\">task_alt</i> UPDATE\n    </button>\n    <button mat-raised-button class=\"button-red\" (click)=\"delete()\" *ngIf=\"childObject?.id\" [hidden]=\"!isHideDeleteButton\"\n      [disabled]=\"!(childForm.valid)\">\n      <!-- <mat-icon> </mat-icon>  -->\n      <i class=\"material-icons color__white\">delete</i> DELETE\n    </button>\n    <button mat-raised-button color=\"warn\" (click)=\"resetFormValidator()\"\n      *ngIf=\"(childObject?.id || childObject?.description || childObject?.paymentDescription || childObject?.typeOfMedium || childObject?.reason) && !isFromModal\">\n      <!-- <mat-icon>{{ childObject?.id ? 'cancel' : 'refresh' }}</mat-icon> {{ childObject?.id ? 'CANCEL' : 'RESET' }} -->\n      <i class=\"material-icons color__white\"> {{ childObject?.id ? 'cancel' : 'refresh' }}</i> {{ childObject?.id ? 'CANCEL' : 'RESET' }}\n    </button>\n    <ng-container *ngIf=\"(isFromModal && showApproveRejectButton) || isShowApproveDisapproveButton\">\n      <!-- <ng-container *ngIf=\"showApproveRejectButton\"> -->\n      <button mat-raised-button class=\"button-red\" (click)=\"approve()\">\n        <i class=\"material-icons color__white\">verified</i> APPROVE\n      </button>\n      <button mat-raised-button class=\"button-red\" (click)=\"reject()\">\n        <i class=\"material-icons color__white\">unpublished</i> REJECT\n      </button>\n      <button mat-raised-button class=\"button-red\" (click)=\"closeModal()\" *ngIf=\"isFromModal && showApproveRejectButton\">\n        <i class=\"material-icons color__white\">close</i> CLOSE\n      </button>\n    </ng-container>\n  </div>\n</div>\n","export class LoginImage {\n    id: number;\n    file: File;\n    filename: String;\n    fileExtension: String;\n    fileURL: String;\n    documentFormat: String;\n    displayed: Boolean;\n    createdDate: Date;\n    createdBy: String;\n    modifiedBy: String;\n    modifiedDate: String;\n    originalFilename: String;\n    secondsTransition: Number;\n}","import { TypeOfExecution } from './type-of-execution.model';\nimport { TypeOfMedium } from './type-of-medium.model';\n\nexport class AscRate {\n    id: number;\n    lengthFrom: number;\n    lengthTo: number;\n    memberOffline: number;\n    memberOnline: number;\n    nonMemberOffline: number;\n    nonMemberOnline: number;\n    status: string;\n    typeOfExecution: TypeOfExecution;\n    typeOfMedium: TypeOfMedium;\n}","import { Dialect } from './dialect.model';\nimport { MediumExecution } from './medium-execution.model';\n\nexport class ApplicationSingleMedia {\n    id: number;\n    amount: number;\n    appFormReference: string;\n    dialect: Dialect;\n    language: string;\n    others: string;\n    sizeLength: string;\n    mediumExecution: MediumExecution;\n    width: string;\n\n}\n","export class TypeOfMediumExecution {\n    id: number;\n    status: string;\n    typeOfExecution: string;\n    applyForS2: boolean;\n}\n","import { Company } from '@models'\nimport { Affiliation } from './affiliation.model';\nimport { ApplicationType } from './application-type.model'\nimport { Brand } from './brand.model'\nimport { Category } from './category.model';\nimport { Product } from './product.model';\nimport { S1Application } from './s1-application.model';\nimport { UserAccount } from './user-account.model'\n\nexport class ApplicationRequest {\n    id: number;\n    adTitle: string;\n    applicationOwner: UserAccount;\n    applicationType: ApplicationType;\n    brand: Brand;\n    company: Company;\n    status: string;\n    submissionDate: Date;\n    tagLine: string\n    submitApplicationForm: boolean;\n    formType: string;\n    hasSpecialClearing: boolean;\n    applicationForm: S1Application;\n    product: Product;\n}\n","export class Profile {\n    id: number;\n    name: string;\n}\n","export class UploadingDocumentFileSize {\n    id: number;\n    fileSize: number;\n}","import { S1Application } from './s1-application.model';\nimport { S2Application } from './s2-application.model';\n\nexport class AttachmentDocument {\n    id: number;\n    applicationId: S1Application;\n    applicationS2Id: S2Application;\n    attachmentType: string; // MAIN, SUPPORTIVE, PAYMENT\n    autoSubmit: boolean;\n    brandPenaltyAttachmentReference: string;\n    documentFormat: string;\n    fileExtension: string;\n    fileURL: string;\n    filename: string;\n    mainAttachmentReference: string;\n    supportingAttachmentReference: string;\n    paymentAttachmentReference: string;\n    revisionLetterAttachmentReference: string;\n    finalMaterialAttachmentReference: string;\n    originalFilename: string;\n    status: string;\n    submissionType: string; // ORIGINAL, REVISION, COMPLIANCE, TOA\n    voucherAttachmentReference: string;\n    applicationFormId: string; // for compliance used only\n    applicationForm: string;\n    appFormReference: string;\n    modifiedApprovedS1AttachmentReference: string;\n    fileSize: number\n\n    createdBy: string;\n    createdDate: Date;\n    modifiedBy: string;\n    modifiedDate: Date;\n}\n","export class Announcement {\n  id: number;\n  details: string;\n  noOfView: number;\n  postingDate: Date;\n  status: string;\n  title: string;\n  link: string;\n  counter: number;\n}\n","import { Product } from './product.model';\n\nexport class Category {\n    id: number;\n    description: string;\n    status: string;\n}\n","import { Company } from \"./company.model\";\n\nexport class CompanyPenalties {\n    id: number;\n    penaltyAmount: number;\n    company: Company;\n    penaltyDate: Date;\n}","import { TypeOfDocument } from './type-of-document.model';\nimport { S1Application } from './s1-application.model';\n\nexport class SupportingDocument {\n    id: number;\n    appFormReference: S1Application;\n    typeOfDocument: TypeOfDocument;\n    basedOn: string;\n    variant: string;\n    dateOfLaunch: Date;\n    expiresOn: Date;\n    remarks: string;\n    input: string;\n\n    createdBy: string;\n    createdDate: Date;\n    modifiedBy: string;\n    modifiedDate: Date;\n}\n","export class UserRole {\n    id: number;\n    name: string;\n    status: string;\n}\n","export class PaymentType {\n    id: number;\n    amount: boolean;\n    bankBranch: boolean;\n    bankName: boolean;\n    controlNo: boolean;\n    fundTransferDate: boolean;\n    paymentDescription: string;\n    promisorryDate: boolean;\n    referenceNo: boolean;\n    status: string;\n}\n","export class OrPreparationReference {\n    id: number;\n    reference: string;\n    amount: number;\n}","export class Holiday {\n    id: number;\n    holidayDate: Date;\n    holidayName: string;\n    holidayType: string;\n    status: string;\n  }\n","import { Brand } from \"./brand.model\";\n\nexport class BrandPenalties {\n    id: number;\n    amount: number;\n    brand: Brand;\n    penaltyDate: Date;\n}","export class PerformanceMetrics {\n    id: number;\n    referenceCode: string;\n    appFormReference: string;\n    movement: string;\n    actionBy: string;\n    userRole: string;\n    currentDateTime: Date;\n    previousDateTime: Date;\n    duration: string;\n}\n","import { PaymentType } from \"./payment-type.model\";\n\nexport class PaymentMethod {\n    id: number;\n    paymentType: PaymentType;\n    referenceNo: string;\n    controlNo: string;\n    paymentDate: Date;\n    amount: number;\n    bankName: string\n    bankBranch: string;\n    promisorryDate: Date;\n    ccConfirmationCode: string;\n    checkNo: string;\n}\n","export class QrAndBarCodeChecker {\n    id: number;\n    qrOrBarCode: string;\n}","export * from './affiliation.model';\nexport * from './brand.model';\nexport * from './company.model';\nexport * from './payment-type.model';\nexport * from './profile.model';\nexport * from './s1-application.model';\nexport * from './s2-application.model';\nexport * from './type-of-document.model';\nexport * from './type-of-medium.model';\nexport * from './type-of-reason.model';\nexport * from './user-role.model';\nexport * from './user-account.model';\nexport * from './attachment-document.model';\nexport * from './category.model';\nexport * from './product.model';\nexport * from './type-of-application.model';\nexport * from './asc-rate.model';\nexport * from './payment.model';\nexport * from './country.model';\nexport * from './performance-metrics.model';\nexport * from './or-preparation.model';\nexport * from './or-preparation-reference.model';\nexport * from './supporting-document.model';\nexport * from './application-single-media.model';\nexport * from './application-request.model';\nexport * from './application-multimedia.model';\n","export class Affiliation {\n    id: number;\n    description: string;\n    member: boolean;\n    status: string;\n}\n","import { Category, Product } from '@models';\n\nexport class Brand {\n    id: number;\n    description: string;\n    // product: Product;\n    // category: Category;\n    status: string;\n    penalty: boolean;\n  }\n","import { Affiliation } from './affiliation.model';\nimport { Country } from './country.model';\n\nexport class Company {\n    id: number;\n    companyName: string;\n    companyTelephoneNo: string;\n    companyTin: string;\n    country: Country;\n    status: string;\n    completeAddress: string;\n    voucherApproved: boolean\n    membersAffiliation: Affiliation;\n    delinquent: boolean;\n    contactPersonEmail: string;\n    contactPersonName: string;\n    amountToSettle: number;\n    companyMobileNo: string;\n    companyTelephoneNo2: string;\n}\n","import { TypeOfRational } from \"./type-of-rational.model\";\n\nexport class ApplicationS2RationaleList {\n\n    id: number;\n    typeOfRationale: TypeOfRational;\n\n}","export class S1AndS2FormExpirationPeriod {\n  id: number;\n  s1ExpNoOfYears: number;\n  s2ExpNoOfYears: number;\n}"]}