{"version":3,"sources":["webpack:///src/app/modules/fragments/index.ts","webpack:///src/app/modules/pages/maintenance/announcement-content/announcement-content-routing.module.ts","webpack:///src/app/modules/pages/maintenance/announcement-content/announcement-content.component.ts","webpack:///src/app/modules/pages/maintenance/announcement-content/announcement-content.component.html","webpack:///src/app/modules/pages/maintenance/announcement-content/announcement-content.module.ts"],"names":["routes","path","component","AnnouncementContentRoutingModule","forChild","AnnouncementContentComponent","apiService","formBuilder","sweetAlertService","dateService","displayedColumns","statusList","announcement","announcementList","disabledWeekEnds","d","day","Date","getDay","getList","setFormValidator","findAll","announcements","subscribe","res","responseData","data","dataSource","paginator","formListComponent","sort","postingDate","setDate","save","undefined","success","err","error","resetFormValidator","findById","idForUpdate","console","log","update","status","ACTIVE","announcementForm","group","title","required","details","noOfView","link","markAsUntouched","markAsPristine","fire","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","value","deleteById","id","customSuccessMessage","getAnnouncement","AnnouncementContentModule"],"mappings":"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","file":"announcement-content-announcement-content-module-es5.js","sourcesContent":["export * from './form-action-buttons/form-action-buttons.component';\nexport * from './form-list/form-list.component';","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AnnouncementContentComponent } from './announcement-content.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AnnouncementContentComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AnnouncementContentRoutingModule { }\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { FormListComponent } from '@fragments';\nimport { ApiService, SweetAlertService } from '@services';\nimport { COMMON_FUNCTION, ENDPOINTS, STATUSES } from '@shared';\nimport { Announcement } from 'app/core/models/announcement.model';\nimport { DateService } from 'app/core/services/date.service';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-announcement-content',\n  templateUrl: './announcement-content.component.html',\n  styleUrls: ['./announcement-content.component.scss']\n})\nexport class AnnouncementContentComponent implements OnInit {\n\n  @ViewChild(FormListComponent) formListComponent: FormListComponent;\n  dataSource: MatTableDataSource<Announcement>;\n  displayedColumns: string[] = ['title', 'details', 'noOfView', 'postingDate', 'status'];\n  statusList = [...STATUSES];\n\n  announcement = new Announcement();\n  announcementList = [];\n\n  announcementForm: FormGroup;\n\n\n  constructor(\n    private apiService: ApiService,\n    private formBuilder: FormBuilder,\n    private sweetAlertService: SweetAlertService,\n    private dateService: DateService,\n  ) { }\n\n  ngOnInit() {\n    this.getList();\n    this.setFormValidator();\n  }\n\n  getList(): void {\n    this.apiService.findAll(ENDPOINTS.announcements).subscribe((res: any) => {\n      this.announcementList = res.responseData.data;\n      this.dataSource = new MatTableDataSource<Announcement>(res.responseData.data);\n      this.dataSource.paginator = this.formListComponent.paginator;\n      this.dataSource.sort = this.formListComponent.sort;\n    });\n  }\n\n  save(): void {\n    this.announcement.postingDate = this.dateService.setDate(this.announcement.postingDate);\n    this.apiService.save(ENDPOINTS.announcements, this.announcement).subscribe(\n      (res: any) => {\n        if (res !== undefined) {\n          this.sweetAlertService.success(res);\n        }\n      }, (err: any) => {\n        this.sweetAlertService.error(err);\n      }, () => {\n        this.resetFormValidator(),\n          this.getList();\n      }\n    )\n  }\n\n  getAnnouncement(): void {\n    this.apiService.findById(ENDPOINTS.announcements, this.formListComponent.idForUpdate).subscribe((res: any) => {\n      if (res) {\n        this.announcement = res.responseData.data;\n        console.log(res);\n\n      }\n    });\n  }\n\n  update(): void {\n    this.announcement.postingDate = this.dateService.setDate(this.announcement.postingDate);\n    this.apiService.update(ENDPOINTS.announcements, this.announcement).subscribe(\n      (res: any) => {\n        if (res !== undefined) {\n          this.sweetAlertService.success(res);\n        }\n      }, (err: any) => {\n        this.sweetAlertService.error(err);\n      }, () => {\n        this.resetFormValidator()\n        this.getList();\n      });\n  }\n\n  setFormValidator(): void {\n    this.announcement.status = COMMON_FUNCTION.ACTIVE;\n    this.announcementForm = this.formBuilder.group({\n      title: ['', Validators.required],\n      details: ['', Validators.required],\n      noOfView: ['', Validators.required],\n      postingDate: ['', Validators.required],\n      status: [''],\n      link: ['']\n    });\n  }\n\n  resetFormValidator(): void {\n    this.announcement = new Announcement();\n    this.announcement.status = COMMON_FUNCTION.ACTIVE;\n    this.announcementForm.markAsUntouched();\n    this.announcementForm.markAsPristine();\n  }\n\n  disabledWeekEnds = (d: Date | null): boolean => {\n    const day = (d || new Date()).getDay();\n    return day !== 0 && day !== 6;\n  }\n\n  delete() {\n    Swal.fire({\n      text: 'Are you sure you want to delete this announcement?',\n      icon: 'question',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Confirm'\n    }).then((result) => {\n      if (result.value) {\n        this.apiService.deleteById(ENDPOINTS.announcements, this.announcement.id).subscribe(\n          () => {\n            this.sweetAlertService.customSuccessMessage('Announcement successfully deleted.');\n            this.resetFormValidator();\n            this.getList();\n          }\n        );\n      }\n    });\n  }\n\n}\n","<form>\n    <div class=\"container-fluid\">\n        <div class=\"row\">\n            <div class=\"col-md-12 title\">\n                <mat-label>\n                  <mat-icon>announcement</mat-icon> Announcements\n                </mat-label>\n            </div>\n        </div>\n        <hr>\n\n        <form [formGroup]=\"announcementForm\">\n            <div class=\"row\">\n                <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n                    <mat-label>Title <span class=\"required-field\">*</span></mat-label>\n                    <input matInput [(ngModel)]=\"announcement.title\" name=\"title\" formControlName=\"title\">\n                </mat-form-field>\n\n                <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n                    <mat-label>Details <span class=\"required-field\">*</span></mat-label>\n                    <textarea matInput [(ngModel)]=\"announcement.details\" name=\"details\"\n                        formControlName=\"details\"></textarea>\n                </mat-form-field>\n\n                <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n                    <mat-label>Link <span class=\"required-field\">*</span></mat-label>\n                    <textarea matInput [(ngModel)]=\"announcement.link\" name=\"link\"\n                        formControlName=\"link\"></textarea>\n                </mat-form-field>\n\n                <mat-form-field class=\"col-md-4\" appearance=\"outline\">\n                    <mat-label>Number Of View <span class=\"required-field\">*</span></mat-label>\n                    <input matInput [(ngModel)]=\"announcement.noOfView\" name=\"noOfView\" formControlName=\"noOfView\">\n                </mat-form-field>\n\n                <mat-form-field class=\"col-md-4\" appearance=\"outline\">\n                    <mat-label>Posting Date</mat-label>\n                    <input matInput placeholder=\"Date\" [matDatepicker]=\"postingDate\"\n                        [matDatepickerFilter]=\"disabledWeekEnds\" readonly [(ngModel)]=\"announcement.postingDate\"\n                        name=\"postingDate\" formControlName=\"postingDate\">\n                    <mat-datepicker-toggle matSuffix [for]=\"postingDate\"></mat-datepicker-toggle>\n                    <mat-datepicker color=\"warn\" #postingDate disabled=\"false\"></mat-datepicker>\n                </mat-form-field>\n\n                <mat-form-field class=\"col-md-4\" appearance=\"outline\">\n                    <mat-label>Status</mat-label>\n                    <mat-select [(ngModel)]=\"announcement.status\" name=\"status\" formControlName=\"status\">\n                        <mat-option *ngFor=\"let i of statusList\" [value]=\"i.status\">\n                            {{i.status}}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n        </form>\n\n        <app-form-action-buttons [childObject]=\"announcement\" [childForm]=\"announcementForm\" (saveFunction)=\"save()\"\n            (updateFunction)=\"update()\" (cancelFunction)=\"resetFormValidator()\" (deleteFunction)=\"delete()\"></app-form-action-buttons>\n        <br>\n        <app-form-list [dataSource]=\"dataSource\" [displayedColumns]=\"displayedColumns\"\n            (selectInListFunction)=\"getAnnouncement()\"></app-form-list>\n\n    </div>\n</form>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AnnouncementContentRoutingModule } from './announcement-content-routing.module';\nimport { AnnouncementContentComponent } from './announcement-content.component';\nimport { FragmentsModule } from 'app/modules/fragments/fragments.module';\nimport { AngularMaterialModule } from '@shared';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\n\n@NgModule({\n  declarations: [AnnouncementContentComponent],\n  imports: [\n    CommonModule,\n    AnnouncementContentRoutingModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    AngularMaterialModule,\n    FragmentsModule,\n  ]\n})\nexport class AnnouncementContentModule { }\n"]}