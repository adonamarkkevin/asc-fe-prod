{"version":3,"sources":["./src/app/modules/pages/applications/schedule-of-fees/accounts-payable/accounts-payable.module.ts","./src/app/modules/pages/applications/schedule-of-fees/accounts-payable/accounts-payable.component.ts","./src/app/modules/pages/applications/schedule-of-fees/accounts-payable/accounts-payable.component.html","./src/app/modules/pages/applications/schedule-of-fees/accounts-payable/accounts-payable-routing.module.ts"],"names":[],"mappings":"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","file":"schedule-of-fees-accounts-payable-accounts-payable-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SingleApplicationRoutingModule } from './accounts-payable-routing.module';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AngularMaterialModule } from '@shared';\nimport { MatTableModule } from '@angular/material/table';\nimport { AccountsPayableComponent } from './accounts-payable.component';\n\n\n@NgModule({\n  declarations: [\n    AccountsPayableComponent\n  ],\n  imports: [\n    CommonModule,\n    SingleApplicationRoutingModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    FormsModule,\n    AngularMaterialModule,\n    MatTableModule\n  ]\n})\nexport class AccountsPayableModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { ApiService } from '@services';\nimport { ENDPOINTS } from '@shared';\n\n@Component({\n  selector: 'app-accounts-payable',\n  templateUrl: './accounts-payable.component.html',\n  styleUrls: ['./accounts-payable.component.scss']\n})\nexport class AccountsPayableComponent implements OnInit {\n\n  dataSource: MatTableDataSource<any>\n  displayedColumns: string[] = ['referenceCode', 'typeOfApplication', 'brand', 'medium', 'applicantCompanyName', 'paymentStatus'];\n  pageNo: number = 0;\n  pageSize: number = 10;\n  paymentTotalItems: number = 0;\n\n  constructor(\n    private apiService: ApiService,\n    private spinner: NgxSpinnerService,\n  ) { }\n\n  ngOnInit(): void {\n    this.getForPaymentList();\n  }\n \n  pageEvent(event: any): void {\n    this.pageSize = event.pageSize;\n    event.pageIndex >= this.pageNo\n      ? this.pageNo++\n      : this.pageNo--;\n\n    if (event.pageSize > event.length) {\n      this.pageNo = 0;\n    }\n\n    this.getForPaymentList();\n  }\n\n  private getForPaymentList() {\n    this.spinner.show();\n    this.apiService.findAll(this.getEndpoint())\n      .subscribe((res: any) => {\n        this.dataSource = new MatTableDataSource<any>(res.data);\n        this.paymentTotalItems = res.totalItems;\n        this.spinner.hide();\n      });\n  }\n\n  private getEndpoint(): string {\n    let endpoint = ENDPOINTS.scheduleOfFeesMonitoring;\n    return `${endpoint}?hasPromissoryNote=true&page=${this.pageNo + 1}&size=${this.pageSize}`;\n  }\n}\n","<form>\n  <div class=\"container-fluid\">\n    <div class=\"row\">\n      <div class=\"col-md-12 title\">\n        <mat-label>\n          <mat-icon>view_list</mat-icon> Accounts Payable\n        </mat-label>\n      </div>\n    </div>\n    <hr>\n    <br>\n\n    <div class=\"mat-elevation-z8 fields\">\n      <table mat-table [dataSource]=\"dataSource\" matSort>\n        <ng-container matColumnDef=\"referenceCode\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> REFERENCE CODE </th>\n          <td mat-cell *matCellDef=\"let element; let i = index\"> {{element?.referenceCode | uppercase}}</td>\n        </ng-container>\n        <ng-container matColumnDef=\"typeOfApplication\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> TYPE OF APPLICATION</th>\n          <td mat-cell *matCellDef=\"let element; let i = index\">{{element?.applicationType.description | uppercase}} - {{element?.formType?.replaceAll('_',' ') | uppercase}}</td>\n        </ng-container>\n        <ng-container matColumnDef=\"brand\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> BRAND</th>\n          <td mat-cell *matCellDef=\"let element; let i = index\">{{element?.brand.description | uppercase}}</td>\n        </ng-container>\n        <ng-container matColumnDef=\"medium\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> MEDIUM</th>\n          <td mat-cell *matCellDef=\"let element; let i = index\">{{element?.typeOfMedium | uppercase}}</td>\n        </ng-container>\n        <ng-container matColumnDef=\"applicantCompanyName\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> APPLICANT COMPANY NAME</th>\n          <td mat-cell *matCellDef=\"let element; let i = index\">{{element?.company.companyName | uppercase}}</td>\n        </ng-container>\n        <ng-container matColumnDef=\"paymentStatus\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> PAYMENT STATUS</th>\n          <td mat-cell *matCellDef=\"let element; let i = index\">{{element?.paymentStatus?.replaceAll('_',' ') | uppercase}}</td>\n        </ng-container>\n\n\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n      </table>\n      <div class=\"no-record\" [hidden]=\"dataSource && dataSource?.data?.length > 0\">\n        No record found.\n      </div>\n      <mat-paginator\n        [pageSize]=\"pageSize\"\n        [pageIndex]=\"pageNo\"\n        [length]=\"paymentTotalItems\"\n        (page)=\"pageEvent($event)\"\n      ></mat-paginator>\n    </div>\n    <br>\n  </div>\n</form>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AccountsPayableComponent } from './accounts-payable.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AccountsPayableComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SingleApplicationRoutingModule { }\n"],"sourceRoot":"webpack:///"}