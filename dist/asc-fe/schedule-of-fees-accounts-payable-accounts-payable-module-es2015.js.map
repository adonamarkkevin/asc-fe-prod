{"version":3,"sources":["./src/app/modules/pages/applications/schedule-of-fees/accounts-payable/accounts-payable.module.ts","./src/app/modules/pages/applications/schedule-of-fees/accounts-payable/accounts-payable.component.html","./src/app/modules/pages/applications/schedule-of-fees/accounts-payable/accounts-payable.component.ts","./src/app/modules/pages/applications/schedule-of-fees/accounts-payable/accounts-payable.component.scss","./src/app/modules/pages/applications/schedule-of-fees/accounts-payable/accounts-payable-routing.module.ts"],"names":[],"mappings":"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","file":"schedule-of-fees-accounts-payable-accounts-payable-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SingleApplicationRoutingModule } from './accounts-payable-routing.module';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { AngularMaterialModule } from '@shared';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { AccountsPayableComponent } from './accounts-payable.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AccountsPayableComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    SingleApplicationRoutingModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    AngularMaterialModule,\r\n    MatTableModule\r\n  ]\r\n})\r\nexport class AccountsPayableModule { }\r\n","export default \"<form>\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12 title\\\">\\r\\n        <mat-label>\\r\\n          <mat-icon>view_list</mat-icon> Accounts Payable\\r\\n        </mat-label>\\r\\n      </div>\\r\\n    </div>\\r\\n    <hr>\\r\\n    <br>\\r\\n\\r\\n    <div class=\\\"mat-elevation-z8 fields\\\">\\r\\n      <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\r\\n        <ng-container matColumnDef=\\\"referenceCode\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> REFERENCE CODE </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element; let i = index\\\"> {{element?.referenceCode | uppercase}}</td>\\r\\n        </ng-container>\\r\\n        <ng-container matColumnDef=\\\"typeOfApplication\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> TYPE OF APPLICATION</th>\\r\\n          <td mat-cell *matCellDef=\\\"let element; let i = index\\\">{{element?.applicationType.description | uppercase}} - {{element?.formType?.replaceAll('_',' ') | uppercase}}</td>\\r\\n        </ng-container>\\r\\n        <ng-container matColumnDef=\\\"brand\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> BRAND</th>\\r\\n          <td mat-cell *matCellDef=\\\"let element; let i = index\\\">{{element?.brand.description | uppercase}}</td>\\r\\n        </ng-container>\\r\\n        <ng-container matColumnDef=\\\"medium\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> MEDIUM</th>\\r\\n          <td mat-cell *matCellDef=\\\"let element; let i = index\\\">{{element?.typeOfMedium | uppercase}}</td>\\r\\n        </ng-container>\\r\\n        <ng-container matColumnDef=\\\"applicantCompanyName\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> APPLICANT COMPANY NAME</th>\\r\\n          <td mat-cell *matCellDef=\\\"let element; let i = index\\\">{{element?.company.companyName | uppercase}}</td>\\r\\n        </ng-container>\\r\\n        <ng-container matColumnDef=\\\"paymentStatus\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> PAYMENT STATUS</th>\\r\\n          <td mat-cell *matCellDef=\\\"let element; let i = index\\\">{{element?.paymentStatus?.replaceAll('_',' ') | uppercase}}</td>\\r\\n        </ng-container>\\r\\n\\r\\n\\r\\n\\r\\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n      </table>\\r\\n      <div class=\\\"no-record\\\" [hidden]=\\\"dataSource && dataSource?.data?.length > 0\\\">\\r\\n        No record found.\\r\\n      </div>\\r\\n      <mat-paginator\\r\\n        [pageSize]=\\\"pageSize\\\"\\r\\n        [pageIndex]=\\\"pageNo\\\"\\r\\n        [length]=\\\"paymentTotalItems\\\"\\r\\n        (page)=\\\"pageEvent($event)\\\"\\r\\n      ></mat-paginator>\\r\\n    </div>\\r\\n    <br>\\r\\n  </div>\\r\\n</form>\\r\\n\";","import { Component, OnInit } from '@angular/core';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { ApiService } from '@services';\r\nimport { ENDPOINTS } from '@shared';\r\n\r\n@Component({\r\n  selector: 'app-accounts-payable',\r\n  templateUrl: './accounts-payable.component.html',\r\n  styleUrls: ['./accounts-payable.component.scss']\r\n})\r\nexport class AccountsPayableComponent implements OnInit {\r\n\r\n  dataSource: MatTableDataSource<any>\r\n  displayedColumns: string[] = ['referenceCode', 'typeOfApplication', 'brand', 'medium', 'applicantCompanyName', 'paymentStatus'];\r\n  pageNo: number = 0;\r\n  pageSize: number = 10;\r\n  paymentTotalItems: number = 0;\r\n\r\n  constructor(\r\n    private apiService: ApiService,\r\n    private spinner: NgxSpinnerService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getForPaymentList();\r\n  }\r\n \r\n  pageEvent(event: any): void {\r\n    this.pageSize = event.pageSize;\r\n    event.pageIndex >= this.pageNo\r\n      ? this.pageNo++\r\n      : this.pageNo--;\r\n\r\n    if (event.pageSize > event.length) {\r\n      this.pageNo = 0;\r\n    }\r\n\r\n    this.getForPaymentList();\r\n  }\r\n\r\n  private getForPaymentList() {\r\n    this.spinner.show();\r\n    this.apiService.findAll(this.getEndpoint())\r\n      .subscribe((res: any) => {\r\n        this.dataSource = new MatTableDataSource<any>(res.data);\r\n        this.paymentTotalItems = res.totalItems;\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  private getEndpoint(): string {\r\n    let endpoint = ENDPOINTS.scheduleOfFeesMonitoring;\r\n    return `${endpoint}?hasPromissoryNote=true&page=${this.pageNo + 1}&size=${this.pageSize}`;\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcGFnZXMvYXBwbGljYXRpb25zL3NjaGVkdWxlLW9mLWZlZXMvYWNjb3VudHMtcGF5YWJsZS9hY2NvdW50cy1wYXlhYmxlLmNvbXBvbmVudC5zY3NzIn0= */\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AccountsPayableComponent } from './accounts-payable.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AccountsPayableComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class SingleApplicationRoutingModule { }\r\n"],"sourceRoot":"webpack:///"}