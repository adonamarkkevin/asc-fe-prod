{"version":3,"sources":["./src/app/modules/pages/applications/schedule-of-fees/accounts-payable/accounts-payable.module.ts","./src/app/modules/pages/applications/schedule-of-fees/accounts-payable/accounts-payable.component.ts","./src/app/modules/pages/applications/schedule-of-fees/accounts-payable/accounts-payable.component.html","./src/app/modules/pages/applications/schedule-of-fees/accounts-payable/accounts-payable-routing.module.ts"],"names":[],"mappings":"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","file":"schedule-of-fees-accounts-payable-accounts-payable-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SingleApplicationRoutingModule } from './accounts-payable-routing.module';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { AngularMaterialModule } from '@shared';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { AccountsPayableComponent } from './accounts-payable.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AccountsPayableComponent,\r\n    \r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    SingleApplicationRoutingModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    AngularMaterialModule,\r\n    MatTableModule\r\n  ]\r\n})\r\nexport class AccountsPayableModule { }\r\n","import { MatDialog } from '@angular/material/dialog';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { ApiService } from '@services';\r\nimport { ENDPOINTS } from '@shared';\r\nimport { ModalSingleApplicationComponent } from '../single-application/modal-single-application/modal-single-application.component';\r\n\r\n@Component({\r\n  selector: 'app-accounts-payable',\r\n  templateUrl: './accounts-payable.component.html',\r\n  styleUrls: ['./accounts-payable.component.scss']\r\n})\r\nexport class AccountsPayableComponent implements OnInit {\r\n\r\n  dataSource: MatTableDataSource<any>\r\n  displayedColumns: string[] = ['referenceCode', 'typeOfApplication', 'brand', 'medium', 'applicantCompanyName', 'paymentStatus'];\r\n  pageNo: number = 0;\r\n  pageSize: number = 10;\r\n  paymentTotalItems: number = 0;\r\n\r\n  constructor(\r\n    private apiService: ApiService,\r\n    private spinner: NgxSpinnerService,\r\n    private dialog: MatDialog\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getForPaymentList();\r\n  }\r\n \r\n  pageEvent(event: any): void {\r\n    this.pageSize = event.pageSize;\r\n    event.pageIndex >= this.pageNo\r\n      ? this.pageNo++\r\n      : this.pageNo--;\r\n\r\n    if (event.pageSize > event.length) {\r\n      this.pageNo = 0;\r\n    }\r\n\r\n    this.getForPaymentList();\r\n  }\r\n\r\n  openModal(res) {\r\n    const dialogRef = this.dialog.open(ModalSingleApplicationComponent, {\r\n      width: '80%',\r\n      height: 'fit-content',\r\n      maxHeight: '85vh',\r\n      data: { ...res, fromPayable: true }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.ngOnInit();\r\n    });\r\n\r\n  }\r\n\r\n  private getForPaymentList() {\r\n    this.spinner.show();\r\n    this.apiService.findAll(this.getEndpoint())\r\n      .subscribe((res: any) => {\r\n        this.dataSource = new MatTableDataSource<any>(res.data);\r\n        this.paymentTotalItems = res.totalItems;\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  private getEndpoint(): string {\r\n    let endpoint = ENDPOINTS.scheduleOfFeesMonitoring;\r\n    return `${endpoint}?hasPromissoryNote=true&page=${this.pageNo + 1}&size=${this.pageSize}`;\r\n  }\r\n}\r\n","<form>\r\n  <div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12 title\">\r\n        <mat-label>\r\n          <mat-icon>view_list</mat-icon> Accounts Payable\r\n        </mat-label>\r\n      </div>\r\n    </div>\r\n    <hr>\r\n    <br>\r\n\r\n    <div class=\"mat-elevation-z8 fields\">\r\n      <table mat-table [dataSource]=\"dataSource\" matSort>\r\n        <ng-container matColumnDef=\"referenceCode\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> REFERENCE CODE </th>\r\n          <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"openModal(element)\"> {{element?.referenceCode | uppercase}}</td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"typeOfApplication\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> TYPE OF APPLICATION</th>\r\n          <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"openModal(element)\">{{element?.applicationType.description | uppercase}} - {{element?.formType?.replaceAll('_',' ') | uppercase}}</td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"brand\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> BRAND</th>\r\n          <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"openModal(element)\">{{element?.brand.description | uppercase}}</td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"medium\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> MEDIUM</th>\r\n          <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"openModal(element)\">{{element?.typeOfMedium | uppercase}}</td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"applicantCompanyName\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> APPLICANT COMPANY NAME</th>\r\n          <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"openModal(element)\">{{element?.company.companyName | uppercase}}</td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"paymentStatus\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> PAYMENT STATUS</th>\r\n          <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"openModal(element)\">{{element?.paymentStatus?.replaceAll('_',' ') | uppercase}}</td>\r\n        </ng-container>\r\n\r\n\r\n\r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n      </table>\r\n      <div class=\"no-record\" [hidden]=\"dataSource && dataSource?.data?.length > 0\">\r\n        No record found.\r\n      </div>\r\n      <mat-paginator\r\n        [pageSize]=\"pageSize\"\r\n        [pageIndex]=\"pageNo\"\r\n        [length]=\"paymentTotalItems\"\r\n        (page)=\"pageEvent($event)\"\r\n      ></mat-paginator>\r\n    </div>\r\n    <br>\r\n  </div>\r\n</form>\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AccountsPayableComponent } from './accounts-payable.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AccountsPayableComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class SingleApplicationRoutingModule { }\r\n"],"sourceRoot":"webpack:///"}