{"version":3,"sources":["./src/app/modules/fragments/index.ts","./src/app/modules/pages/accounting/company-voucher/company-voucher-fund/company-voucher-fund-routing.module.ts","./src/app/core/models/voucher-replenishment.model.ts","./src/app/modules/pages/accounting/company-voucher/company-voucher-fund/company-voucher-fund.component.ts","./src/app/modules/pages/accounting/company-voucher/company-voucher-fund/company-voucher-fund.module.ts","./src/app/modules/pages/accounting/company-voucher/company-voucher-fund/company-voucher-fund.component.html","./src/app/modules/pages/accounting/company-voucher/company-voucher-fund/company-voucher-fund.component.scss"],"names":[],"mappings":"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","file":"company-voucher-company-voucher-fund-company-voucher-fund-module-es2015.js","sourcesContent":["export * from './form-action-buttons/form-action-buttons.component';\r\nexport * from './form-list/form-list.component';","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { CompanyVoucherFundComponent } from './company-voucher-fund.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: CompanyVoucherFundComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class CompanyVoucherFundRoutingModule { }\r\n","import { Company } from \"./company.model\";\r\n\r\nexport class VoucherReplenishment {\r\n\r\n    id: number;\r\n    amountTransfered: number;\r\n    company: Company;\r\n    status: string;\r\n    transferedDate: Date;\r\n    voucherAttachmentReference: string;\r\n   \r\n}","import { DataStorageService } from './../../../../../core/services/data.storage.service';\r\nimport { Component, Input, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTable, MatTableDataSource } from '@angular/material/table';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { Router } from '@angular/router';\r\nimport { FormListComponent } from '@fragments';\r\nimport { Company, PaymentType } from '@models';\r\nimport { ApiService, SweetAlertService } from '@services';\r\nimport { ATTACHMENT_TYPE, COMMON_FUNCTION, ENDPOINTS, STATUSES, SUBMISSION_TYPE } from '@shared';\r\nimport { VoucherReplenishment } from 'app/core/models/voucher-replenishment.model';\r\nimport { Voucher } from 'app/core/models/voucher.model';\r\nimport { FileStorageService } from 'app/core/services/file.storage.service';\r\nimport Swal from 'sweetalert2';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\n\r\n\r\n@Component({\r\n  selector: 'app-company-voucher-fund',\r\n  templateUrl: './company-voucher-fund.component.html',\r\n  styleUrls: ['./company-voucher-fund.component.scss']\r\n})\r\nexport class CompanyVoucherFundComponent implements OnInit, OnDestroy {\r\n\r\n  @ViewChild(FormListComponent) formListComponent: FormListComponent;\r\n  dataSource: MatTableDataSource<Voucher>;\r\n  dataSourceReplenishments: MatTableDataSource<VoucherReplenishment>;\r\n  displayedColumns: string[] = ['company', 'fundAmount', 'voucherDate'];\r\n  displayedReplenishmentColumns: string[] = ['transferedDate', 'amountTransfered', 'status'];\r\n  @Input() safeURL: any;\r\n\r\n  voucherReplenishment = new VoucherReplenishment();\r\n  voucher = new Voucher();\r\n  company = new Company();\r\n\r\n  voucherReplenishmentList = [];\r\n  companyList = [];\r\n  attachmentDocument: any;\r\n  statusList = [...STATUSES];\r\n\r\n  voucherReplenishmentForm: FormGroup;\r\n  currentUser: any;\r\n  currentDate = new Date();\r\n  selectedFiles: any;\r\n  attachment: any;\r\n  // safeURLVoucherReplenishment: any;\r\n  previewDocument = false;\r\n  process = 'save';\r\n  remainingVoucherBalance = 0;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private apiService: ApiService,\r\n    private sweetAlertService: SweetAlertService,\r\n    private sanitizer: DomSanitizer,\r\n    private fileStorageService: FileStorageService,\r\n    private dataStorage: DataStorageService\r\n  ) {\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.currentUser = this.dataStorage.getUserAccount();\r\n    this.setFormValidator();\r\n    this.getCompanyList();\r\n    this.getVoucherTrasnferList();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n\r\n  }\r\n\r\n  setFormValidator(): void {\r\n    this.voucherReplenishment.status = COMMON_FUNCTION.ACTIVE;\r\n    this.voucherReplenishmentForm = this.formBuilder.group({\r\n      amountTransfered: ['', [Validators.required]],\r\n      company: ['', [Validators.required]],\r\n      transferedDate: ['', [Validators.required]],\r\n      // status: ['', [Validators.required]],\r\n    })\r\n  }\r\n\r\n  resetFormValidator(): void {\r\n    this.voucherReplenishment = new VoucherReplenishment();\r\n    this.voucherReplenishment.status = COMMON_FUNCTION.ACTIVE;\r\n    this.voucherReplenishmentForm.markAsUntouched();\r\n    this.voucherReplenishmentForm.markAsPristine();\r\n  }\r\n\r\n  getCompanyList() {\r\n    this.apiService.findAll(ENDPOINTS.company).subscribe((res: any) => {\r\n      this.companyList = res.responseData.data;\r\n    });\r\n  }\r\n\r\n  getCompanyDetails(res) {\r\n    this.company = res;\r\n  }\r\n\r\n\r\n  getVoucherTrasnferDetails() {\r\n    this.process = 'update';\r\n    this.apiService.findById(ENDPOINTS.voucher, this.formListComponent.idForUpdate).subscribe((res: any) => {\r\n      if (res) {\r\n        // this.voucherReplenishment.company = res.responseData.data.company.companyName;\r\n        this.company = res.responseData.data.company;\r\n        this.voucher.voucherAttachmentReference = res.responseData.data.voucherAttachmentReference;\r\n        this.voucherReplenishment.company = this.company;\r\n        this.remainingVoucherBalance = res.responseData.data.fundAmount;\r\n        // this.voucherReplenishment.amountTransfered = 0;\r\n        this.voucherReplenishment.transferedDate = res.responseData.data.voucherDate;\r\n        this.voucherReplenishment.status = res.responseData.data.status;\r\n        this.getVoucherTrasnferList();\r\n        this.viewAttachmentFile();\r\n        this.getCompanyReplenishmentList();\r\n        this.previewDocument = true;\r\n      }\r\n    });\r\n  }\r\n\r\n  viewAttachmentFile() {\r\n    this.apiService.findByParam(ENDPOINTS.attachmentDocument, `voucher-attachment-reference/` + this.voucher.voucherAttachmentReference)\r\n      .subscribe((res1: any) => {\r\n        if (res1) {\r\n          this.attachmentDocument = res1.responseData.data;\r\n          this.safeURL = this.sanitizer.bypassSecurityTrustResourceUrl(this.attachmentDocument.fileURL);\r\n        }\r\n      }, (err: any) => {\r\n        this.attachmentDocument = [];\r\n      });\r\n  }\r\n\r\n  getVoucherTrasnferList() {\r\n    this.apiService.findAll(ENDPOINTS.voucher).subscribe((res: any) => {\r\n      this.dataSource = new MatTableDataSource<Voucher>(res.responseData.data);\r\n      this.dataSource.paginator = this.formListComponent.paginator;\r\n      this.dataSource.sort = this.formListComponent.sort;\r\n    })\r\n  }\r\n\r\n  getCompanyReplenishmentList() {\r\n    this.apiService.findAll(ENDPOINTS.voucherReplenishmentsByCompany+this.company?.id).subscribe((res: any) => {\r\n      this.dataSourceReplenishments = new MatTableDataSource<VoucherReplenishment>(res.responseData.data);\r\n      this.dataSourceReplenishments.paginator = this.formListComponent.paginator;\r\n      this.dataSourceReplenishments.sort = this.formListComponent.sort;\r\n    })\r\n  }\r\n\r\n  selectFile(event) {\r\n    const attachmentSize = event.target.files[0].size;\r\n    if (event.target.files[0].type === 'application/pdf') {\r\n      if (attachmentSize > 15000000) { // 1MB = 1M\r\n        this.sweetAlertService.customErrorMessage(`Attachments' total file size should not exceed 15MB.`);\r\n        event.target.value = '';\r\n        return;\r\n      } else {\r\n        const pdfURL = URL.createObjectURL(event.target.files[0]);\r\n        this.safeURL = this.sanitizer.bypassSecurityTrustResourceUrl(pdfURL);\r\n        this.previewDocument = true;\r\n        const reader = new FileReader();\r\n        const [file] = event.target.files;\r\n        reader.readAsDataURL(file);\r\n        reader.onload = () => {\r\n        };\r\n      }\r\n      this.selectedFiles = event.target.files;\r\n    } else {\r\n      this.sweetAlertService.customErrorMessage('Attachment should be in PDF format only.');\r\n      event.target.value = '';\r\n      return;\r\n    }\r\n  }\r\n\r\n  uploadVoucher() {\r\n    Swal.fire({\r\n      text: 'Are you sure you want to submit this VOUCHER?',\r\n      icon: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Confirm'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        if (this.process === 'update') {\r\n          this.saveVoucherReplenishment();\r\n        } else {\r\n          this.dataStorage.setDisplayProgressbar(true);\r\n          let params = '';\r\n          params = '?&attachmentType=' + ATTACHMENT_TYPE.VOUCHER_FUND + '&submissionType=' + SUBMISSION_TYPE.ORIGINAL;\r\n          this.fileStorageService.pushFileToStorage(ENDPOINTS.attachmentDocument, this.selectedFiles.item(0), params)\r\n            .subscribe(res => {\r\n              const obj = res.responseData.data;\r\n              this.voucherReplenishment.voucherAttachmentReference = obj.voucherAttachmentReference;\r\n              this.voucherReplenishment.company = this.company;\r\n              // this.voucher.voucherSignatories = this.signatoriesList;\r\n              console.log('VOUCHER REPLENISHMENT', this.voucherReplenishment);\r\n              this.saveVoucherReplenishment();\r\n              this.selectedFiles = undefined;\r\n            }, (err: any) => {\r\n              this.sweetAlertService.error(err);\r\n            }, () => {\r\n              this.dataStorage.setDisplayProgressbar(false);\r\n            });\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  saveVoucherReplenishment() {\r\n    this.apiService.save(ENDPOINTS.accountingVoucherFundTransfer, this.voucherReplenishment).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.sweetAlertService.success(res);\r\n      this.setFormValidator();\r\n      this.getVoucherTrasnferList();\r\n      this.resetFormValidator();\r\n      this.process = 'save';\r\n      this.previewDocument = false;\r\n      this.attachment = null;\r\n      this.router.navigateByUrl('asc/page/accounting/voucher-replenishment');\r\n    }, (err) => {\r\n      console.log(err);\r\n      this.sweetAlertService.error(err);\r\n    });\r\n  }\r\n\r\n\r\n  compareStatus(value: any, selected: any): boolean {\r\n    if (value && selected) {\r\n      return value === selected;\r\n    }\r\n  }\r\n\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { CompanyVoucherFundRoutingModule } from './company-voucher-fund-routing.module';\r\nimport { CompanyVoucherFundComponent } from './company-voucher-fund.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { AngularMaterialModule } from '@shared';\r\nimport { FragmentsModule } from 'app/modules/fragments/fragments.module';\r\n\r\n\r\n@NgModule({\r\n  declarations: [CompanyVoucherFundComponent],\r\n  imports: [\r\n    CommonModule,\r\n    CompanyVoucherFundRoutingModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    AngularMaterialModule,\r\n    FragmentsModule\r\n  ]\r\n})\r\nexport class CompanyVoucherFundModule { }\r\n","export default \"<form>\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12 title\\\">\\r\\n        <mat-label>\\r\\n          <mat-icon>view_list</mat-icon> Voucher Replenishment\\r\\n        </mat-label>\\r\\n      </div>\\r\\n    </div>\\r\\n    <hr>\\r\\n\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <b><b class=\\\"material-icons\\\">error_outline</b> Note: Select enrolled voucher to add fund or view amount replenishments made.</b>\\r\\n    </div>\\r\\n    <br>\\r\\n\\r\\n    <app-form-list [dataSource]=\\\"dataSource\\\" [displayedColumns]=\\\"displayedColumns\\\"\\r\\n    (selectInListFunction)=\\\"getVoucherTrasnferDetails()\\\"></app-form-list>\\r\\n    <br>\\r\\n\\r\\n    <div class=\\\"container-fluid\\\"\\r\\n      *ngIf=\\\"currentUser?.userRole.name === 'ROLE_APPLICANT' || currentUser?.userRole.name === 'ROLE_ACCOUNTING' && previewDocument===true\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-12 information-title\\\">\\r\\n          <mat-label>\\r\\n            Company Information\\r\\n          </mat-label>\\r\\n        </div>\\r\\n      </div>\\r\\n      <hr>\\r\\n      <br>\\r\\n\\r\\n      <div class=\\\"row col-md-12\\\">\\r\\n\\r\\n        <div class=\\\"row col-md-5\\\">\\r\\n          <div>\\r\\n            <mat-label>Voucher: &nbsp;&nbsp;&nbsp;<span>PDF file only!</span></mat-label><br>\\r\\n            <input class=\\\"file-upload\\\" type=\\\"file\\\" [(ngModel)]=\\\"attachment\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n              accept=\\\".pdf\\\" (change)=\\\"selectFile($event)\\\">\\r\\n          </div>\\r\\n\\r\\n          <div *ngIf=\\\"attachment\\\">\\r\\n            <div class=\\\"file-upload\\\">\\r\\n              <object [data]=\\\"safeURL\\\" type=\\\"application/pdf\\\" width=\\\"100%\\\" height=\\\"500\\\">\\r\\n                <iframe [src]=\\\"safeURL\\\" width=\\\"100%\\\" height=\\\"500\\\">\\r\\n                  <p>This browser does not support PDF!</p>\\r\\n                </iframe>\\r\\n              </object>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"row col-md-7\\\">\\r\\n          <form [formGroup]=\\\"voucherReplenishmentForm\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n\\r\\n              <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\" *ngIf=\\\"process==='save'\\\">\\r\\n                <mat-label> Company Name\\r\\n                </mat-label>\\r\\n                <mat-select [(ngModel)]=\\\"voucherReplenishment.company\\\" name=\\\"company\\\" formControlName=\\\"company\\\">\\r\\n                  <mat-option *ngFor=\\\"let i of companyList\\\" [value]=\\\"i\\\" (click)=\\\"getCompanyDetails(i)\\\">\\r\\n                    {{i.companyName}}\\r\\n                  </mat-option>\\r\\n                </mat-select>\\r\\n              </mat-form-field>\\r\\n\\r\\n              <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\" *ngIf=\\\"process==='update'\\\">\\r\\n                <mat-label>Company Name</mat-label>\\r\\n                <input matInput [value]=\\\"company.companyName\\\" readonly>\\r\\n              </mat-form-field>\\r\\n\\r\\n              <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\" *ngIf=\\\"process==='update'\\\">\\r\\n                <mat-label>Remaining Voucher Balance </mat-label>\\r\\n                <input matInput [value]=\\\"remainingVoucherBalance\\\" name=\\\"remainingVoucherBalance\\\"\\r\\n                  formControlName=\\\"remainingVoucherBalance\\\" type=\\\"number\\\" readonly>\\r\\n              </mat-form-field>\\r\\n\\r\\n              <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label>Amount Transferred <span class=\\\"required-field\\\">*</span></mat-label>\\r\\n                <input matInput [(ngModel)]=\\\"voucherReplenishment.amountTransfered\\\" name=\\\"amountTransfered\\\"\\r\\n                  formControlName=\\\"amountTransfered\\\" type=\\\"number\\\">\\r\\n              </mat-form-field>\\r\\n\\r\\n              <!-- <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label>Transferred Date</mat-label>\\r\\n                <input matInput placeholder=\\\"Date\\\" [matDatepicker]=\\\"transferedDate\\\" readonly\\r\\n                  [(ngModel)]=\\\"voucherReplenishment.transferedDate\\\" name=\\\"transferedDate\\\" formControlName=\\\"transferedDate\\\">\\r\\n                <mat-datepicker-toggle matSuffix [for]=\\\"transferedDate\\\"></mat-datepicker-toggle>\\r\\n                <mat-datepicker color=\\\"warn\\\" #transferedDate disabled=\\\"false\\\"></mat-datepicker>\\r\\n              </mat-form-field> -->\\r\\n\\r\\n              <!-- <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label>Status</mat-label>\\r\\n                <mat-select [(ngModel)]=\\\"voucherReplenishment.status\\\" name=\\\"status\\\" formControlName=\\\"status\\\" [compareWith]=\\\"compareStatus\\\">\\r\\n                  <mat-option *ngFor=\\\"let i of statusList\\\" [value]=\\\"i.status\\\">\\r\\n                    {{i.status}}\\r\\n                  </mat-option>\\r\\n                </mat-select>\\r\\n              </mat-form-field> -->\\r\\n\\r\\n              <!-- <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\" *ngIf=\\\"voucherReplenishment.company\\\">\\r\\n                <mat-label>Company TelephoneNo</mat-label>\\r\\n                <input matInput [value]=\\\"company.companyTelephoneNo\\\" readonly>\\r\\n              </mat-form-field>\\r\\n\\r\\n              <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\" *ngIf=\\\"voucherReplenishment.company\\\">\\r\\n                <mat-label>Company Tin </mat-label>\\r\\n                <input matInput [value]=\\\"company.companyTin\\\" readonly>\\r\\n              </mat-form-field>\\r\\n\\r\\n              <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\" *ngIf=\\\"voucherReplenishment.company\\\">\\r\\n                <mat-label>Company Address</mat-label>\\r\\n                <input matInput [value]=\\\"company.completeAddress\\\" readonly>\\r\\n              </mat-form-field> -->\\r\\n\\r\\n            </div>\\r\\n          </form>\\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-10\\\"></div>\\r\\n            <div class=\\\"col-md-2\\\">\\r\\n              <button mat-raised-button class=\\\"button-red\\\" (click)=\\\"uploadVoucher()\\\" [disabled]=\\\"!attachment || !voucherReplenishment?.amountTransfered\\\">\\r\\n                <i class=\\\"material-icons color__white\\\">task_alt</i> SUBMIT\\r\\n              </button>\\r\\n            </div>\\r\\n          </div>\\r\\n          <br>\\r\\n          <br>\\r\\n          <hr>\\r\\n          <br>\\r\\n          <app-form-list [dataSource]=\\\"dataSourceReplenishments\\\" [displayedColumns]=\\\"displayedReplenishmentColumns\\\"></app-form-list>\\r\\n          <br>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <!-- <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-10\\\"></div>\\r\\n        <div class=\\\"col-md-2\\\">\\r\\n          <button mat-raised-button class=\\\"button-red\\\" (click)=\\\"uploadAttachment()\\\" *ngIf=\\\"process==='save'\\\">\\r\\n            <i class=\\\"material-icons color__white\\\">task_alt</i> SUBMIT\\r\\n          </button>\\r\\n          <button mat-raised-button class=\\\"button-red\\\" (click)=\\\"approveVoucher()\\\" *ngIf=\\\"process==='update'\\\">\\r\\n            <i class=\\\"material-icons color__white\\\">task_alt</i> APPROVE\\r\\n          </button>\\r\\n        </div>\\r\\n      </div> -->\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\\r\\n\";","export default \".button-green {\\n  background-color: green;\\n  color: white;\\n}\\n\\n.information-title {\\n  text-align: center;\\n  font-weight: bold;\\n  font-size: 24px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9wYWdlcy9hY2NvdW50aW5nL2NvbXBhbnktdm91Y2hlci9jb21wYW55LXZvdWNoZXItZnVuZC9jb21wYW55LXZvdWNoZXItZnVuZC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLHVCQUFBO0VBQ0EsWUFBQTtBQUNKOztBQUVBO0VBQ0ksa0JBQUE7RUFDQSxpQkFBQTtFQUNBLGVBQUE7QUFDSiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcGFnZXMvYWNjb3VudGluZy9jb21wYW55LXZvdWNoZXIvY29tcGFueS12b3VjaGVyLWZ1bmQvY29tcGFueS12b3VjaGVyLWZ1bmQuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYnV0dG9uLWdyZWVue1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogZ3JlZW47XHJcbiAgICBjb2xvcjogd2hpdGU7XHJcbn1cclxuXHJcbi5pbmZvcm1hdGlvbi10aXRsZXtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gICAgZm9udC1zaXplOiAyNHB4O1xyXG59Il19 */\";"],"sourceRoot":"webpack:///"}