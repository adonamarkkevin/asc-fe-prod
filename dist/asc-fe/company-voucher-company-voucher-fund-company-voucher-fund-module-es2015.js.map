{"version":3,"sources":["./src/app/modules/fragments/index.ts","./src/app/modules/pages/accounting/company-voucher/company-voucher-fund/company-voucher-fund-routing.module.ts","./src/app/core/models/voucher-replenishment.model.ts","./src/app/modules/pages/accounting/company-voucher/company-voucher-fund/company-voucher-fund.component.ts","./src/app/modules/pages/accounting/company-voucher/company-voucher-fund/company-voucher-fund.component.html","./src/app/modules/pages/accounting/company-voucher/company-voucher-fund/company-voucher-fund.module.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoE;AACpB;;;;;;;;;;;;;;ACDhD;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AACwB;;;AAE/E,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,2FAA2B;KACvC;CACF,CAAC;AAMK;UAAM,+BAA+B;;kHAA/B,+BAA+B;4LAA/B,+BAA+B,kBAHjC,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAC9B,4DAAY,CAAC,EAAD;;;mIAEX,+BAA+B,uFAFhC,4DAAY,CAAC,EAAD;;;;;;;;;;;;;;ACXxB;AAAA;AAAO,MAAM,oBAAoB;CAShC;;;;;;;;;;;;;;ACVD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+E;AACE;AAGV;AAGxB;AACA;AAEkD;AACd;AAC3B;AAEzB;;;;;;;;;;;;;;;;;;QC0BrB,sEACE;QAAA,0EACE;QAAA,6EACE;QAAA,6EACE;QAAA,oEAAG;QAAA,6FAAkC;QAAA,4DAAI;QAC3C,4DAAS;QACX,4DAAS;QACX,4DAAM;QACR,4DAAM;;;;QANM,0DAAgB;QAAhB,qJAAgB;QACd,0DAAe;QAAf,oJAAe;;;;;;QAgBrB,iFACE;QADoD,4YAA8B;QAClF,uDACF;QAAA,4DAAa;;;;QAF6B,uEAAW;QACnD,0DACF;QADE,4FACF;;;;;;QANJ,qFACE;QAAA,4EAAY;QAAA,yEACZ;QAAA,4DAAY;QACZ,iFACE;QADU,wYAA0C;QACpD,+JACE;QAEJ,4DAAa;QACf,4DAAiB;;;;QALH,0DAA0C;QAA1C,wGAA0C;QACxC,0DAA6B;QAA7B,uFAA6B;;;;;QAM7C,qFACE;QAAA,4EAAW;QAAA,uEAAY;QAAA,4DAAY;QACnC,uEACF;QAAA,4DAAiB;;;;QADC,0DAA6B;QAA7B,6FAA6B;;;;;QAG/C,qFACE;QAAA,4EAAW;QAAA,qFAA0B;QAAA,4DAAY;QACjD,uEAEF;QAAA,4DAAiB;;;;QAFC,0DAAiC;QAAjC,iGAAiC;;;;;;;QArD7D,yEAEE;QAAA,yEACE;QAAA,yEACE;QAAA,4EACE;QAAA,gFACF;QAAA,4DAAY;QACd,4DAAM;QACR,4DAAM;QACN,gEACA;QAAA,gEAEA;QAAA,yEAEE;QAAA,yEACE;QAAA,sEACE;QAAA,6EAAW;QAAA,uFAA2B;QAAA,wEAAM;QAAA,0EAAc;QAAA,4DAAO;QAAA,4DAAY;QAAA,iEAC7E;QAAA,6EAEF;QAFyC,iWAAwB;QAA/D,4DAEF;QAAA,4DAAM;QAEN,iIACE;QAQJ,4DAAM;QAEN,2EACE;QAAA,4EACE;QAAA,0EAEE;QAAA,uJACE;QASF,uJACE;QAIF,uJACE;QAKF,sFACE;QAAA,6EAAW;QAAA,+EAAmB;QAAA,4EAA6B;QAAA,6DAAC;QAAA,4DAAO;QAAA,4DAAY;QAC/E,6EAEF;QAFkB,4XAAmD;QAAnE,4DAEF;QAAA,4DAAiB;QAkCnB,4DAAM;QACR,4DAAO;QAEP,0EACE;QAAA,sEAA6B;QAC7B,2EACE;QAAA,8EACE;QAD2C,wUAAyB;QACpE,yEAAuC;QAAA,oEAAQ;QAAA,4DAAI;QAAC,oEACtD;QAAA,4DAAS;QACX,4DAAM;QACR,4DAAM;QACN,iEACA;QAAA,iEACA;QAAA,iEACA;QAAA,iEACA;QAAA,gFAA0H;QAC1H,iEACF;QAAA,4DAAM;QACR,4DAAM;QAaR,4DAAM;;;;QA7GyC,2DAAwB;QAAxB,sFAAwB;QAI5D,0DAAkB;QAAlB,mFAAkB;QAYjB,0DAAsC;QAAtC,sGAAsC;QAGe,0DAAwB;QAAxB,2FAAwB;QAUxB,0DAA0B;QAA1B,6FAA0B;QAK3B,0DAA0B;QAA1B,6FAA0B;QAQ9D,0DAAmD;QAAnD,iHAAmD;QA0CE,0DAAmE;QAAnE,wLAAmE;QAS/H,0DAAuC;QAAvC,uGAAuC;;;AD1GzD;UAAM,2BAA2B;QA4BtC,YACU,WAAwB,EACxB,MAAc,EACd,UAAsB,EACtB,iBAAoC,EACpC,SAAuB,EACvB,kBAAsC,EACtC,WAA+B;YAN/B,gBAAW,GAAX,WAAW,CAAa;YACxB,WAAM,GAAN,MAAM,CAAQ;YACd,eAAU,GAAV,UAAU,CAAY;YACtB,sBAAiB,GAAjB,iBAAiB,CAAmB;YACpC,cAAS,GAAT,SAAS,CAAc;YACvB,uBAAkB,GAAlB,kBAAkB,CAAoB;YACtC,gBAAW,GAAX,WAAW,CAAoB;YA9BzC,qBAAgB,GAAa,CAAC,SAAS,EAAE,YAAY,EAAE,aAAa,CAAC,CAAC;YACtE,kCAA6B,GAAa,CAAC,gBAAgB,EAAE,kBAAkB,EAAE,QAAQ,CAAC,CAAC;YAG3F,yBAAoB,GAAG,IAAI,gGAAoB,EAAE,CAAC;YAClD,YAAO,GAAG,IAAI,qEAAO,EAAE,CAAC;YACxB,YAAO,GAAG,IAAI,+CAAO,EAAE,CAAC;YAExB,6BAAwB,GAAG,EAAE,CAAC;YAC9B,gBAAW,GAAG,EAAE,CAAC;YAEjB,eAAU,GAAG,CAAC,GAAG,gDAAQ,CAAC,CAAC;YAI3B,gBAAW,GAAG,IAAI,IAAI,EAAE,CAAC;YAGzB,oCAAoC;YACpC,oBAAe,GAAG,KAAK,CAAC;YACxB,YAAO,GAAG,MAAM,CAAC;YACjB,4BAAuB,GAAG,CAAC,CAAC;QAY5B,CAAC;QAED,QAAQ;YACN,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE,CAAC;YACrD,IAAI,CAAC,gBAAgB,EAAE,CAAC;YACxB,IAAI,CAAC,cAAc,EAAE,CAAC;YACtB,IAAI,CAAC,sBAAsB,EAAE,CAAC;QAChC,CAAC;QAED,WAAW;QAEX,CAAC;QAED,gBAAgB;YACd,IAAI,CAAC,oBAAoB,CAAC,MAAM,GAAG,uDAAe,CAAC,MAAM,CAAC;YAC1D,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;gBACrD,gBAAgB,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;gBAC7C,OAAO,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;gBACpC,cAAc,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;aAE5C,CAAC;QACJ,CAAC;QAED,kBAAkB;YAChB,IAAI,CAAC,oBAAoB,GAAG,IAAI,gGAAoB,EAAE,CAAC;YACvD,IAAI,CAAC,oBAAoB,CAAC,MAAM,GAAG,uDAAe,CAAC,MAAM,CAAC;YAC1D,IAAI,CAAC,wBAAwB,CAAC,eAAe,EAAE,CAAC;YAChD,IAAI,CAAC,wBAAwB,CAAC,cAAc,EAAE,CAAC;QACjD,CAAC;QAED,cAAc;YACZ,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,iDAAS,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,CAAC,GAAQ,EAAE,EAAE;gBAChE,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC,YAAY,CAAC,IAAI,CAAC;YAC3C,CAAC,CAAC,CAAC;QACL,CAAC;QAED,iBAAiB,CAAC,GAAG;YACnB,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC;QACrB,CAAC;QAGD,yBAAyB;YACvB,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC;YACxB,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,iDAAS,CAAC,OAAO,EAAE,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,CAAC,GAAQ,EAAE,EAAE;gBACrG,IAAI,GAAG,EAAE;oBACP,iFAAiF;oBACjF,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC;oBAC7C,IAAI,CAAC,OAAO,CAAC,0BAA0B,GAAG,GAAG,CAAC,YAAY,CAAC,IAAI,CAAC,0BAA0B,CAAC;oBAC3F,IAAI,CAAC,oBAAoB,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;oBACjD,IAAI,CAAC,uBAAuB,GAAG,GAAG,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC;oBAChE,kDAAkD;oBAClD,IAAI,CAAC,oBAAoB,CAAC,cAAc,GAAG,GAAG,CAAC,YAAY,CAAC,IAAI,CAAC,WAAW,CAAC;oBAC7E,IAAI,CAAC,oBAAoB,CAAC,MAAM,GAAG,GAAG,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC;oBAChE,IAAI,CAAC,sBAAsB,EAAE,CAAC;oBAC9B,IAAI,CAAC,kBAAkB,EAAE,CAAC;oBAC1B,IAAI,CAAC,2BAA2B,EAAE,CAAC;oBACnC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;iBAC7B;YACH,CAAC,CAAC,CAAC;QACL,CAAC;QAED,kBAAkB;YAChB,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,iDAAS,CAAC,kBAAkB,EAAE,+BAA+B,GAAG,IAAI,CAAC,OAAO,CAAC,0BAA0B,CAAC;iBACjI,SAAS,CAAC,CAAC,IAAS,EAAE,EAAE;gBACvB,IAAI,IAAI,EAAE;oBACR,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC;oBACjD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,8BAA8B,CAAC,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC;iBAC/F;YACH,CAAC,EAAE,CAAC,GAAQ,EAAE,EAAE;gBACd,IAAI,CAAC,kBAAkB,GAAG,EAAE,CAAC;YAC/B,CAAC,CAAC,CAAC;QACP,CAAC;QAED,sBAAsB;YACpB,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,iDAAS,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,CAAC,GAAQ,EAAE,EAAE;gBAChE,IAAI,CAAC,UAAU,GAAG,IAAI,0EAAkB,CAAU,GAAG,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;gBACzE,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC;gBAC7D,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC;YACrD,CAAC,CAAC;QACJ,CAAC;QAED,2BAA2B;;YACzB,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,iDAAS,CAAC,8BAA8B,UAAC,IAAI,CAAC,OAAO,0CAAE,EAAE,EAAC,CAAC,SAAS,CAAC,CAAC,GAAQ,EAAE,EAAE;gBACxG,IAAI,CAAC,wBAAwB,GAAG,IAAI,0EAAkB,CAAuB,GAAG,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;gBACpG,IAAI,CAAC,wBAAwB,CAAC,SAAS,GAAG,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC;gBAC3E,IAAI,CAAC,wBAAwB,CAAC,IAAI,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC;YACnE,CAAC,CAAC;QACJ,CAAC;QAED,UAAU,CAAC,KAAK;YACd,MAAM,cAAc,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;YAClD,IAAI,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,iBAAiB,EAAE;gBACpD,IAAI,cAAc,GAAG,QAAQ,EAAE,EAAE,WAAW;oBAC1C,IAAI,CAAC,iBAAiB,CAAC,kBAAkB,CAAC,sDAAsD,CAAC,CAAC;oBAClG,KAAK,CAAC,MAAM,CAAC,KAAK,GAAG,EAAE,CAAC;oBACxB,OAAO;iBACR;qBAAM;oBACL,MAAM,MAAM,GAAG,GAAG,CAAC,eAAe,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC1D,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,8BAA8B,CAAC,MAAM,CAAC,CAAC;oBACrE,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;oBAC5B,MAAM,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;oBAChC,MAAM,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;oBAClC,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;oBAC3B,MAAM,CAAC,MAAM,GAAG,GAAG,EAAE;oBACrB,CAAC,CAAC;iBACH;gBACD,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;aACzC;iBAAM;gBACL,IAAI,CAAC,iBAAiB,CAAC,kBAAkB,CAAC,0CAA0C,CAAC,CAAC;gBACtF,KAAK,CAAC,MAAM,CAAC,KAAK,GAAG,EAAE,CAAC;gBACxB,OAAO;aACR;QACH,CAAC;QAED,aAAa;YACX,kDAAI,CAAC,IAAI,CAAC;gBACR,IAAI,EAAE,+CAA+C;gBACrD,IAAI,EAAE,UAAU;gBAChB,gBAAgB,EAAE,IAAI;gBACtB,kBAAkB,EAAE,SAAS;gBAC7B,iBAAiB,EAAE,MAAM;gBACzB,iBAAiB,EAAE,SAAS;aAC7B,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;gBACjB,IAAI,MAAM,CAAC,KAAK,EAAE;oBAChB,IAAI,IAAI,CAAC,OAAO,KAAK,QAAQ,EAAE;wBAC7B,IAAI,CAAC,wBAAwB,EAAE,CAAC;qBACjC;yBAAM;wBACL,IAAI,CAAC,WAAW,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC;wBAC7C,IAAI,MAAM,GAAG,EAAE,CAAC;wBAChB,MAAM,GAAG,mBAAmB,GAAG,uDAAe,CAAC,YAAY,GAAG,kBAAkB,GAAG,uDAAe,CAAC,QAAQ,CAAC;wBAC5G,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,iDAAS,CAAC,kBAAkB,EAAE,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC;6BACxG,SAAS,CAAC,GAAG,CAAC,EAAE;4BACf,MAAM,GAAG,GAAG,GAAG,CAAC,YAAY,CAAC,IAAI,CAAC;4BAClC,IAAI,CAAC,oBAAoB,CAAC,0BAA0B,GAAG,GAAG,CAAC,0BAA0B,CAAC;4BACtF,IAAI,CAAC,oBAAoB,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;4BACjD,0DAA0D;4BAC1D,OAAO,CAAC,GAAG,CAAC,uBAAuB,EAAE,IAAI,CAAC,oBAAoB,CAAC,CAAC;4BAChE,IAAI,CAAC,wBAAwB,EAAE,CAAC;4BAChC,IAAI,CAAC,aAAa,GAAG,SAAS,CAAC;wBACjC,CAAC,EAAE,CAAC,GAAQ,EAAE,EAAE;4BACd,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;wBACpC,CAAC,EAAE,GAAG,EAAE;4BACN,IAAI,CAAC,WAAW,CAAC,qBAAqB,CAAC,KAAK,CAAC,CAAC;wBAChD,CAAC,CAAC,CAAC;qBACN;iBACF;YACH,CAAC,CAAC,CAAC;QACL,CAAC;QAED,wBAAwB;YACtB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,iDAAS,CAAC,6BAA6B,EAAE,IAAI,CAAC,oBAAoB,CAAC,CAAC,SAAS,CAAC,CAAC,GAAQ,EAAE,EAAE;gBAC9G,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBACjB,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;gBACpC,IAAI,CAAC,gBAAgB,EAAE,CAAC;gBACxB,IAAI,CAAC,sBAAsB,EAAE,CAAC;gBAC9B,IAAI,CAAC,kBAAkB,EAAE,CAAC;gBAC1B,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;gBACtB,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;gBAC7B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;gBACvB,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,2CAA2C,CAAC,CAAC;YACzE,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE;gBACT,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBACjB,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YACpC,CAAC,CAAC,CAAC;QACL,CAAC;QAGD,aAAa,CAAC,KAAU,EAAE,QAAa;YACrC,IAAI,KAAK,IAAI,QAAQ,EAAE;gBACrB,OAAO,KAAK,KAAK,QAAQ,CAAC;aAC3B;QACH,CAAC;;0GAjNU,2BAA2B;+GAA3B,2BAA2B;YAAA;0EAE3B,4DAAiB;;;;;;;;gBC1B9B,uEACE;gBAAA,yEACE;gBAAA,yEACE;gBAAA,yEACE;gBAAA,4EACE;gBAAA,2EAAU;gBAAA,oEAAS;gBAAA,4DAAW;gBAAC,kFACjC;gBAAA,4DAAY;gBACd,4DAAM;gBACR,4DAAM;gBACN,gEAEA;gBAAA,yEACE;gBAAA,qEAAG;gBAAA,wEAA0B;gBAAA,yEAAa;gBAAA,4DAAI;gBAAC,0IAA6E;gBAAA,4DAAI;gBAClI,4DAAM;gBACN,iEAEA;gBAAA,oFACqE;gBAArE,yLAAwB,+BAA2B,IAAC;gBAAC,4DAAgB;gBACrE,iEAEA;gBAAA,2HAEE;gBA6HJ,4DAAM;gBACR,4DAAO;;;gBApIY,2DAAyB;gBAAzB,sFAAyB;gBAKtC,0DAAqI;gBAArI,iRAAqI;;;;;;;;;;;;;;;;;;ACrB3I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACM;AACyC;AACT;AACvB;AACU;AAClB;AACyB;;AAelE;UAAM,wBAAwB;;2GAAxB,wBAAwB;8KAAxB,wBAAwB,kBAV1B;gBACP,4DAAY;gBACZ,oGAA+B;gBAC/B,qEAAgB;gBAChB,kEAAmB;gBACnB,0DAAW;gBACX,6DAAqB;gBACrB,sFAAe;aAChB;;;;wHAEU,wBAAwB,mBAXpB,2FAA2B,CAAC,EAAD,UAExC,4DAAY;YACZ,oGAA+B;YAC/B,qEAAgB;YAChB,kEAAmB;YACnB,0DAAW;YACX,6DAAqB;YACrB,sFAAe;AAAA","file":"company-voucher-company-voucher-fund-company-voucher-fund-module-es2015.js","sourcesContent":["export * from './form-action-buttons/form-action-buttons.component';\r\nexport * from './form-list/form-list.component';","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { CompanyVoucherFundComponent } from './company-voucher-fund.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: CompanyVoucherFundComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class CompanyVoucherFundRoutingModule { }\r\n","import { Company } from \"./company.model\";\r\n\r\nexport class VoucherReplenishment {\r\n\r\n    id: number;\r\n    amountTransfered: number;\r\n    company: Company;\r\n    status: string;\r\n    transferedDate: Date;\r\n    voucherAttachmentReference: string;\r\n   \r\n}","import { DataStorageService } from './../../../../../core/services/data.storage.service';\r\nimport { Component, Input, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTable, MatTableDataSource } from '@angular/material/table';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { Router } from '@angular/router';\r\nimport { FormListComponent } from '@fragments';\r\nimport { Company, PaymentType } from '@models';\r\nimport { ApiService, SweetAlertService } from '@services';\r\nimport { ATTACHMENT_TYPE, COMMON_FUNCTION, ENDPOINTS, STATUSES, SUBMISSION_TYPE } from '@shared';\r\nimport { VoucherReplenishment } from 'app/core/models/voucher-replenishment.model';\r\nimport { Voucher } from 'app/core/models/voucher.model';\r\nimport { FileStorageService } from 'app/core/services/file.storage.service';\r\nimport Swal from 'sweetalert2';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\n\r\n\r\n@Component({\r\n  selector: 'app-company-voucher-fund',\r\n  templateUrl: './company-voucher-fund.component.html',\r\n  styleUrls: ['./company-voucher-fund.component.scss']\r\n})\r\nexport class CompanyVoucherFundComponent implements OnInit, OnDestroy {\r\n\r\n  @ViewChild(FormListComponent) formListComponent: FormListComponent;\r\n  dataSource: MatTableDataSource<Voucher>;\r\n  dataSourceReplenishments: MatTableDataSource<VoucherReplenishment>;\r\n  displayedColumns: string[] = ['company', 'fundAmount', 'voucherDate'];\r\n  displayedReplenishmentColumns: string[] = ['transferedDate', 'amountTransfered', 'status'];\r\n  @Input() safeURL: any;\r\n\r\n  voucherReplenishment = new VoucherReplenishment();\r\n  voucher = new Voucher();\r\n  company = new Company();\r\n\r\n  voucherReplenishmentList = [];\r\n  companyList = [];\r\n  attachmentDocument: any;\r\n  statusList = [...STATUSES];\r\n\r\n  voucherReplenishmentForm: FormGroup;\r\n  currentUser: any;\r\n  currentDate = new Date();\r\n  selectedFiles: any;\r\n  attachment: any;\r\n  // safeURLVoucherReplenishment: any;\r\n  previewDocument = false;\r\n  process = 'save';\r\n  remainingVoucherBalance = 0;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private apiService: ApiService,\r\n    private sweetAlertService: SweetAlertService,\r\n    private sanitizer: DomSanitizer,\r\n    private fileStorageService: FileStorageService,\r\n    private dataStorage: DataStorageService\r\n  ) {\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.currentUser = this.dataStorage.getUserAccount();\r\n    this.setFormValidator();\r\n    this.getCompanyList();\r\n    this.getVoucherTrasnferList();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n\r\n  }\r\n\r\n  setFormValidator(): void {\r\n    this.voucherReplenishment.status = COMMON_FUNCTION.ACTIVE;\r\n    this.voucherReplenishmentForm = this.formBuilder.group({\r\n      amountTransfered: ['', [Validators.required]],\r\n      company: ['', [Validators.required]],\r\n      transferedDate: ['', [Validators.required]],\r\n      // status: ['', [Validators.required]],\r\n    })\r\n  }\r\n\r\n  resetFormValidator(): void {\r\n    this.voucherReplenishment = new VoucherReplenishment();\r\n    this.voucherReplenishment.status = COMMON_FUNCTION.ACTIVE;\r\n    this.voucherReplenishmentForm.markAsUntouched();\r\n    this.voucherReplenishmentForm.markAsPristine();\r\n  }\r\n\r\n  getCompanyList() {\r\n    this.apiService.findAll(ENDPOINTS.company).subscribe((res: any) => {\r\n      this.companyList = res.responseData.data;\r\n    });\r\n  }\r\n\r\n  getCompanyDetails(res) {\r\n    this.company = res;\r\n  }\r\n\r\n\r\n  getVoucherTrasnferDetails() {\r\n    this.process = 'update';\r\n    this.apiService.findById(ENDPOINTS.voucher, this.formListComponent.idForUpdate).subscribe((res: any) => {\r\n      if (res) {\r\n        // this.voucherReplenishment.company = res.responseData.data.company.companyName;\r\n        this.company = res.responseData.data.company;\r\n        this.voucher.voucherAttachmentReference = res.responseData.data.voucherAttachmentReference;\r\n        this.voucherReplenishment.company = this.company;\r\n        this.remainingVoucherBalance = res.responseData.data.fundAmount;\r\n        // this.voucherReplenishment.amountTransfered = 0;\r\n        this.voucherReplenishment.transferedDate = res.responseData.data.voucherDate;\r\n        this.voucherReplenishment.status = res.responseData.data.status;\r\n        this.getVoucherTrasnferList();\r\n        this.viewAttachmentFile();\r\n        this.getCompanyReplenishmentList();\r\n        this.previewDocument = true;\r\n      }\r\n    });\r\n  }\r\n\r\n  viewAttachmentFile() {\r\n    this.apiService.findByParam(ENDPOINTS.attachmentDocument, `voucher-attachment-reference/` + this.voucher.voucherAttachmentReference)\r\n      .subscribe((res1: any) => {\r\n        if (res1) {\r\n          this.attachmentDocument = res1.responseData.data;\r\n          this.safeURL = this.sanitizer.bypassSecurityTrustResourceUrl(this.attachmentDocument.fileURL);\r\n        }\r\n      }, (err: any) => {\r\n        this.attachmentDocument = [];\r\n      });\r\n  }\r\n\r\n  getVoucherTrasnferList() {\r\n    this.apiService.findAll(ENDPOINTS.voucher).subscribe((res: any) => {\r\n      this.dataSource = new MatTableDataSource<Voucher>(res.responseData.data);\r\n      this.dataSource.paginator = this.formListComponent.paginator;\r\n      this.dataSource.sort = this.formListComponent.sort;\r\n    })\r\n  }\r\n\r\n  getCompanyReplenishmentList() {\r\n    this.apiService.findAll(ENDPOINTS.voucherReplenishmentsByCompany+this.company?.id).subscribe((res: any) => {\r\n      this.dataSourceReplenishments = new MatTableDataSource<VoucherReplenishment>(res.responseData.data);\r\n      this.dataSourceReplenishments.paginator = this.formListComponent.paginator;\r\n      this.dataSourceReplenishments.sort = this.formListComponent.sort;\r\n    })\r\n  }\r\n\r\n  selectFile(event) {\r\n    const attachmentSize = event.target.files[0].size;\r\n    if (event.target.files[0].type === 'application/pdf') {\r\n      if (attachmentSize > 15000000) { // 1MB = 1M\r\n        this.sweetAlertService.customErrorMessage(`Attachments' total file size should not exceed 15MB.`);\r\n        event.target.value = '';\r\n        return;\r\n      } else {\r\n        const pdfURL = URL.createObjectURL(event.target.files[0]);\r\n        this.safeURL = this.sanitizer.bypassSecurityTrustResourceUrl(pdfURL);\r\n        this.previewDocument = true;\r\n        const reader = new FileReader();\r\n        const [file] = event.target.files;\r\n        reader.readAsDataURL(file);\r\n        reader.onload = () => {\r\n        };\r\n      }\r\n      this.selectedFiles = event.target.files;\r\n    } else {\r\n      this.sweetAlertService.customErrorMessage('Attachment should be in PDF format only.');\r\n      event.target.value = '';\r\n      return;\r\n    }\r\n  }\r\n\r\n  uploadVoucher() {\r\n    Swal.fire({\r\n      text: 'Are you sure you want to submit this VOUCHER?',\r\n      icon: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Confirm'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        if (this.process === 'update') {\r\n          this.saveVoucherReplenishment();\r\n        } else {\r\n          this.dataStorage.setDisplayProgressbar(true);\r\n          let params = '';\r\n          params = '?&attachmentType=' + ATTACHMENT_TYPE.VOUCHER_FUND + '&submissionType=' + SUBMISSION_TYPE.ORIGINAL;\r\n          this.fileStorageService.pushFileToStorage(ENDPOINTS.attachmentDocument, this.selectedFiles.item(0), params)\r\n            .subscribe(res => {\r\n              const obj = res.responseData.data;\r\n              this.voucherReplenishment.voucherAttachmentReference = obj.voucherAttachmentReference;\r\n              this.voucherReplenishment.company = this.company;\r\n              // this.voucher.voucherSignatories = this.signatoriesList;\r\n              console.log('VOUCHER REPLENISHMENT', this.voucherReplenishment);\r\n              this.saveVoucherReplenishment();\r\n              this.selectedFiles = undefined;\r\n            }, (err: any) => {\r\n              this.sweetAlertService.error(err);\r\n            }, () => {\r\n              this.dataStorage.setDisplayProgressbar(false);\r\n            });\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  saveVoucherReplenishment() {\r\n    this.apiService.save(ENDPOINTS.accountingVoucherFundTransfer, this.voucherReplenishment).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.sweetAlertService.success(res);\r\n      this.setFormValidator();\r\n      this.getVoucherTrasnferList();\r\n      this.resetFormValidator();\r\n      this.process = 'save';\r\n      this.previewDocument = false;\r\n      this.attachment = null;\r\n      this.router.navigateByUrl('asc/page/accounting/voucher-replenishment');\r\n    }, (err) => {\r\n      console.log(err);\r\n      this.sweetAlertService.error(err);\r\n    });\r\n  }\r\n\r\n\r\n  compareStatus(value: any, selected: any): boolean {\r\n    if (value && selected) {\r\n      return value === selected;\r\n    }\r\n  }\r\n\r\n\r\n}\r\n","<form>\r\n  <div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12 title\">\r\n        <mat-label>\r\n          <mat-icon>view_list</mat-icon> Voucher Replenishment\r\n        </mat-label>\r\n      </div>\r\n    </div>\r\n    <hr>\r\n\r\n    <div class=\"col-md-12\">\r\n      <b><b class=\"material-icons\">error_outline</b> Note: Select enrolled voucher to add fund or view amount replenishments made.</b>\r\n    </div>\r\n    <br>\r\n\r\n    <app-form-list [dataSource]=\"dataSource\" [displayedColumns]=\"displayedColumns\"\r\n    (selectInListFunction)=\"getVoucherTrasnferDetails()\"></app-form-list>\r\n    <br>\r\n\r\n    <div class=\"container-fluid\"\r\n      *ngIf=\"currentUser?.userRole.name === 'ROLE_APPLICANT' || currentUser?.userRole.name === 'ROLE_ACCOUNTING' && previewDocument===true\">\r\n      <div class=\"row\">\r\n        <div class=\"col-md-12 information-title\">\r\n          <mat-label>\r\n            Company Information\r\n          </mat-label>\r\n        </div>\r\n      </div>\r\n      <hr>\r\n      <br>\r\n\r\n      <div class=\"row col-md-12\">\r\n\r\n        <div class=\"row col-md-5\">\r\n          <div>\r\n            <mat-label>Voucher: &nbsp;&nbsp;&nbsp;<span>PDF file only!</span></mat-label><br>\r\n            <input class=\"file-upload\" type=\"file\" [(ngModel)]=\"attachment\" [ngModelOptions]=\"{standalone: true}\"\r\n              accept=\".pdf\" (change)=\"selectFile($event)\">\r\n          </div>\r\n\r\n          <div *ngIf=\"attachment\">\r\n            <div class=\"file-upload\">\r\n              <object [data]=\"safeURL\" type=\"application/pdf\" width=\"100%\" height=\"500\">\r\n                <iframe [src]=\"safeURL\" width=\"100%\" height=\"500\">\r\n                  <p>This browser does not support PDF!</p>\r\n                </iframe>\r\n              </object>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"row col-md-7\">\r\n          <form [formGroup]=\"voucherReplenishmentForm\">\r\n            <div class=\"row\">\r\n\r\n              <mat-form-field class=\"col-md-12\" appearance=\"outline\" *ngIf=\"process==='save'\">\r\n                <mat-label> Company Name\r\n                </mat-label>\r\n                <mat-select [(ngModel)]=\"voucherReplenishment.company\" name=\"company\" formControlName=\"company\">\r\n                  <mat-option *ngFor=\"let i of companyList\" [value]=\"i\" (click)=\"getCompanyDetails(i)\">\r\n                    {{i.companyName}}\r\n                  </mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n\r\n              <mat-form-field class=\"col-md-12\" appearance=\"outline\" *ngIf=\"process==='update'\">\r\n                <mat-label>Company Name</mat-label>\r\n                <input matInput [value]=\"company.companyName\" readonly>\r\n              </mat-form-field>\r\n\r\n              <mat-form-field class=\"col-md-6\" appearance=\"outline\" *ngIf=\"process==='update'\">\r\n                <mat-label>Remaining Voucher Balance </mat-label>\r\n                <input matInput [value]=\"remainingVoucherBalance\" name=\"remainingVoucherBalance\"\r\n                  formControlName=\"remainingVoucherBalance\" type=\"number\" readonly>\r\n              </mat-form-field>\r\n\r\n              <mat-form-field class=\"col-md-6\" appearance=\"outline\">\r\n                <mat-label>Amount Transferred <span class=\"required-field\">*</span></mat-label>\r\n                <input matInput [(ngModel)]=\"voucherReplenishment.amountTransfered\" name=\"amountTransfered\"\r\n                  formControlName=\"amountTransfered\" type=\"number\">\r\n              </mat-form-field>\r\n\r\n              <!-- <mat-form-field class=\"col-md-6\" appearance=\"outline\">\r\n                <mat-label>Transferred Date</mat-label>\r\n                <input matInput placeholder=\"Date\" [matDatepicker]=\"transferedDate\" readonly\r\n                  [(ngModel)]=\"voucherReplenishment.transferedDate\" name=\"transferedDate\" formControlName=\"transferedDate\">\r\n                <mat-datepicker-toggle matSuffix [for]=\"transferedDate\"></mat-datepicker-toggle>\r\n                <mat-datepicker color=\"warn\" #transferedDate disabled=\"false\"></mat-datepicker>\r\n              </mat-form-field> -->\r\n\r\n              <!-- <mat-form-field class=\"col-md-6\" appearance=\"outline\">\r\n                <mat-label>Status</mat-label>\r\n                <mat-select [(ngModel)]=\"voucherReplenishment.status\" name=\"status\" formControlName=\"status\" [compareWith]=\"compareStatus\">\r\n                  <mat-option *ngFor=\"let i of statusList\" [value]=\"i.status\">\r\n                    {{i.status}}\r\n                  </mat-option>\r\n                </mat-select>\r\n              </mat-form-field> -->\r\n\r\n              <!-- <mat-form-field class=\"col-md-6\" appearance=\"outline\" *ngIf=\"voucherReplenishment.company\">\r\n                <mat-label>Company TelephoneNo</mat-label>\r\n                <input matInput [value]=\"company.companyTelephoneNo\" readonly>\r\n              </mat-form-field>\r\n\r\n              <mat-form-field class=\"col-md-6\" appearance=\"outline\" *ngIf=\"voucherReplenishment.company\">\r\n                <mat-label>Company Tin </mat-label>\r\n                <input matInput [value]=\"company.companyTin\" readonly>\r\n              </mat-form-field>\r\n\r\n              <mat-form-field class=\"col-md-12\" appearance=\"outline\" *ngIf=\"voucherReplenishment.company\">\r\n                <mat-label>Company Address</mat-label>\r\n                <input matInput [value]=\"company.completeAddress\" readonly>\r\n              </mat-form-field> -->\r\n\r\n            </div>\r\n          </form>\r\n\r\n          <div class=\"row\">\r\n            <div class=\"col-md-10\"></div>\r\n            <div class=\"col-md-2\">\r\n              <button mat-raised-button class=\"button-red\" (click)=\"uploadVoucher()\" [disabled]=\"!attachment || !voucherReplenishment?.amountTransfered\">\r\n                <i class=\"material-icons color__white\">task_alt</i> SUBMIT\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <br>\r\n          <br>\r\n          <hr>\r\n          <br>\r\n          <app-form-list [dataSource]=\"dataSourceReplenishments\" [displayedColumns]=\"displayedReplenishmentColumns\"></app-form-list>\r\n          <br>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- <div class=\"row\">\r\n        <div class=\"col-md-10\"></div>\r\n        <div class=\"col-md-2\">\r\n          <button mat-raised-button class=\"button-red\" (click)=\"uploadAttachment()\" *ngIf=\"process==='save'\">\r\n            <i class=\"material-icons color__white\">task_alt</i> SUBMIT\r\n          </button>\r\n          <button mat-raised-button class=\"button-red\" (click)=\"approveVoucher()\" *ngIf=\"process==='update'\">\r\n            <i class=\"material-icons color__white\">task_alt</i> APPROVE\r\n          </button>\r\n        </div>\r\n      </div> -->\r\n    </div>\r\n  </div>\r\n</form>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { CompanyVoucherFundRoutingModule } from './company-voucher-fund-routing.module';\r\nimport { CompanyVoucherFundComponent } from './company-voucher-fund.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { AngularMaterialModule } from '@shared';\r\nimport { FragmentsModule } from 'app/modules/fragments/fragments.module';\r\n\r\n\r\n@NgModule({\r\n  declarations: [CompanyVoucherFundComponent],\r\n  imports: [\r\n    CommonModule,\r\n    CompanyVoucherFundRoutingModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    AngularMaterialModule,\r\n    FragmentsModule\r\n  ]\r\n})\r\nexport class CompanyVoucherFundModule { }\r\n"],"sourceRoot":"webpack:///"}