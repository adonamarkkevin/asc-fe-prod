{"version":3,"sources":["webpack:///src/app/modules/fragments/index.ts","webpack:///src/app/modules/pages/maintenance/login-images/login-images.module.ts","webpack:///src/app/modules/pages/maintenance/login-images/login-images.component.html","webpack:///src/app/modules/pages/maintenance/login-images/login-images.component.ts","webpack:///src/app/modules/pages/maintenance/login-images/login-images-routing.module.ts","webpack:///src/app/modules/pages/maintenance/login-images/login-images.component.scss"],"names":["LoginImagesModule","declarations","imports","LoginImagesComponent","apiService","formBuilder","sweetAlertService","dateService","sanitizer","spinner","fileStorageService","displayedColumns","loginImage","loginImageList","isShowUploadButton","setFormValidator","getLoginImageList","findAll","subscribe","res","responseData","data","dataSource","fire","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","value","show","uploadImage","selectedFile","uploadedLoginImage","hideSpinner","originalFilename","customSuccessMessage","myDocInput","nativeElement","myDocFile","err","error","findById","formListComponent","idForUpdate","obj","window","open","fileURL","deleteById","event","target","files","fileSize","size","URL","createObjectURL","safeURL","bypassSecurityTrustResourceUrl","reader","FileReader","file","readAsDataURL","onload","selected","id","loginImageForm","group","originalFileName","displayed","setTimeout","hide","selector","template","routes","path","component","LoginImagesRoutingModule","forChild","exports"],"mappings":"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","file":"login-images-login-images-module-es5.js","sourcesContent":["export * from './form-action-buttons/form-action-buttons.component';\r\nexport * from './form-list/form-list.component';","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { LoginImagesRoutingModule } from './login-images-routing.module';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { AngularMaterialModule } from '@shared';\r\nimport { FragmentsModule } from 'app/modules/fragments/fragments.module';\r\nimport { LoginImagesComponent } from './login-images.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [LoginImagesComponent],\r\n  imports: [\r\n    CommonModule,\r\n    LoginImagesRoutingModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule,\r\n    AngularMaterialModule,\r\n    FragmentsModule,\r\n  ]\r\n})\r\nexport class LoginImagesModule { }\r\n","export default \"<form>\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12 title\\\">\\r\\n        <mat-label>\\r\\n          Login Image\\r\\n        </mat-label>\\r\\n      </div>\\r\\n    </div>\\r\\n    <hr>\\r\\n    <form [formGroup]=\\\"loginImageForm\\\">\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-md-8\\\" appearance=\\\"outline\\\">\\r\\n            <mat-label>Filename:  </mat-label>\\r\\n            <br>\\r\\n            <input #docInput matInput [value]=\\\"loginImage?.originalFilename\\\" *ngIf=\\\"loginImage?.originalFilename\\\" disabled>\\r\\n\\r\\n            <input #docFile class=\\\"file-upload\\\" type=\\\"file\\\" accept=\\\"image/jpg, image/jpeg\\\" (change)=\\\"selectFile($event)\\\" [hidden]=\\\"loginImage?.originalFilename\\\"/>\\r\\n          </div>\\r\\n          <div class=\\\"col-md-12\\\"><br></div>\\r\\n          <div class=\\\"col-md-7\\\" appearance=\\\"outline\\\">\\r\\n            <button mat-raised-button\\r\\n              *ngIf=\\\"loginImage?.originalFilename\\\"\\r\\n              class=\\\"button-red button-right\\\" (click)=\\\"viewDocument(loginImage)\\\">\\r\\n              <i class=\\\"material-icons color__white\\\">open_in_new</i> VIEW IMAGE\\r\\n            </button>\\r\\n          </div>\\r\\n        </div><br>\\r\\n    </form>\\r\\n\\r\\n    <app-form-action-buttons [childObject]=\\\"loginImage\\\" [childForm]=\\\"loginImageForm\\\" (saveFunction)=\\\"save()\\\"\\r\\n      (cancelFunction)=\\\"resetFormValidator()\\\" (deleteFunction)=\\\"delete()\\\">\\r\\n    </app-form-action-buttons>\\r\\n\\r\\n    <div class=\\\"col-md-12\\\"><hr></div>\\r\\n    <div class=\\\"col-md-12\\\"><br></div>\\r\\n\\r\\n    <app-form-list [dataSource]=\\\"dataSource\\\" [displayedColumns]=\\\"displayedColumns\\\"\\r\\n      (selectInListFunction)=\\\"viewLoginImageList()\\\"></app-form-list>\\r\\n  </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n</form>\\r\\n\";","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { FormListComponent } from '@fragments';\r\nimport { ApiService, SweetAlertService } from '@services';\r\nimport { ENDPOINTS } from '@shared';\r\nimport { LoginImage } from 'app/core/models/login-image.model';\r\nimport { DateService } from 'app/core/services/date.service';\r\nimport { FileStorageService } from 'app/core/services/file.storage.service';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-login-images',\r\n  templateUrl: './login-images.component.html',\r\n  styleUrls: ['./login-images.component.scss']\r\n})\r\nexport class LoginImagesComponent implements OnInit {\r\n  @ViewChild(FormListComponent) formListComponent: FormListComponent;\r\n  dataSource: MatTableDataSource<LoginImage>;\r\n  displayedColumns: string[] = [\r\n    'originalFilename',\r\n    'fileURL',\r\n    'fileExtension',\r\n    // 'displayed'\r\n  ];\r\n\r\n  @ViewChild('docInput') myDocInput: ElementRef;\r\n  @ViewChild('docFile') myDocFile: ElementRef;\r\n\r\n  loginImage = new LoginImage();\r\n  loginImageForm: FormGroup;\r\n  loginImageList = [];\r\n  safeURL: any;\r\n  uploadedLoginImage: any;\r\n  fileSize: number;\r\n  selectedFile: File;\r\n  isShowUploadButton = false;\r\n\r\n  constructor(\r\n    private apiService: ApiService,\r\n    private formBuilder: FormBuilder,\r\n    private sweetAlertService: SweetAlertService,\r\n    private dateService: DateService,\r\n    private sanitizer: DomSanitizer,\r\n    private spinner: NgxSpinnerService,\r\n    private fileStorageService: FileStorageService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.setFormValidator();\r\n    this.getLoginImageList();\r\n  }\r\n\r\n  getLoginImageList(): void {\r\n    this.apiService.findAll(ENDPOINTS.loginImage).subscribe(\r\n      (res: any) => {\r\n        this.loginImageList = res.responseData.data;\r\n        this.dataSource = new MatTableDataSource<LoginImage>(res.responseData.data);\r\n      });\r\n\r\n  }\r\n\r\n  save(): void {\r\n    Swal.fire({\r\n      text: 'Are you sure you want to upload this image?',\r\n      icon: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Confirm'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.spinner.show();\r\n        this.fileStorageService.uploadImage(ENDPOINTS.loginImage + `?displayed=true`, this.selectedFile)\r\n          .subscribe((res: any) => {\r\n            this.uploadedLoginImage = res.responseData.data\r\n            this.hideSpinner();\r\n            this.selectedFile = null;\r\n            this.isShowUploadButton = false;\r\n            this.loginImage.originalFilename = null;\r\n            this.sweetAlertService.customSuccessMessage('Image successfully uploaded.');\r\n            this.getLoginImageList();\r\n            this.myDocInput.nativeElement.value = '';\r\n            this.myDocFile.nativeElement.value = '';\r\n            this.loginImage = new LoginImage();\r\n          }, (err: any) => {\r\n            this.hideSpinner();\r\n            this.sweetAlertService.error(err);\r\n          }, () => {\r\n            this.hideSpinner();\r\n          });\r\n      } else {\r\n        this.selectedFile = null;\r\n      }\r\n    });\r\n  }\r\n\r\n  viewLoginImageList(): void {\r\n    this.apiService.findById(ENDPOINTS.loginImage, this.formListComponent.idForUpdate).subscribe(\r\n      (res: any) => {\r\n        this.loginImage = res?.responseData?.data;\r\n      }\r\n    )\r\n  }\r\n\r\n  viewDocument(obj) {\r\n    window.open(obj.fileURL);\r\n  }\r\n\r\n  delete(): void {\r\n    Swal.fire({\r\n      text: 'Are you sure you want to delete this login image?',\r\n      icon: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Confirm'\r\n    }).then((result) => {\r\n\r\n      this.apiService.deleteById(ENDPOINTS.loginImage, this.formListComponent.idForUpdate).subscribe(\r\n        (res: any) => {\r\n          this.myDocInput.nativeElement.value = '';\r\n          this.myDocFile.nativeElement.value = '';\r\n          this.sweetAlertService.customSuccessMessage('Login image successfully deleted.');\r\n          this.getLoginImageList();\r\n          this.loginImage = new LoginImage();\r\n        }\r\n      )\r\n    });\r\n  }\r\n\r\n  selectFile(event) {\r\n    if (event.target.files[0]) {\r\n      this.fileSize = event.target.files[0].size;\r\n      const fileURL = URL.createObjectURL(event.target.files[0]);\r\n      this.safeURL = this.sanitizer.bypassSecurityTrustResourceUrl(fileURL);\r\n      const reader = new FileReader();\r\n      const [file] = event.target.files;\r\n      reader.readAsDataURL(file);\r\n      reader.onload = () => {\r\n      };\r\n      this.selectedFile = event.target.files[0];\r\n    }\r\n  }\r\n\r\n  compareImageLogin(value: any, selected: any): boolean {\r\n    if (value && selected) {\r\n      return value.id === selected.id;\r\n    }\r\n  }\r\n\r\n\r\n  setFormValidator(): void {\r\n    this.loginImageForm = this.formBuilder.group({\r\n      originalFileName: [''],\r\n      displayed: [''],\r\n    });\r\n  }\r\n\r\n  resetFormValidator(): void {\r\n    this.loginImage = new LoginImage();\r\n  }\r\n\r\n  hideSpinner() {\r\n    setTimeout(() => {\r\n      this.spinner.hide();\r\n    }, 1);\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LoginImagesComponent } from './login-images.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LoginImagesComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class LoginImagesRoutingModule { }\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcGFnZXMvbWFpbnRlbmFuY2UvbG9naW4taW1hZ2VzL2xvZ2luLWltYWdlcy5jb21wb25lbnQuc2NzcyJ9 */\";"]}