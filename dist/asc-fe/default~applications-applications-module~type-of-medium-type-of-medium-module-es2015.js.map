{"version":3,"sources":["./src/app/modules/pages/maintenance/type-of-medium/type-of-medium.component.html","./src/app/modules/pages/maintenance/type-of-medium/type-of-medium.component.ts","./src/app/modules/pages/maintenance/type-of-medium/type-of-medium.component.scss"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,g3BAAizB,sBAAsB,m1BAAm1B,iBAAiB,ibAAib,UAAU,wQAAwQ,YAAY,g9GAAg9G,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA5xL;AACH;AACnB;AAC6B;AACP;AACE;AAChB;AACwD;AACxE;IAOlB,qBAAqB,SAArB,qBAAqB;IAgBhC,YACU,UAAsB,EACtB,WAAwB,EACxB,iBAAoC;QAFpC,eAAU,GAAV,UAAU,CAAY;QACtB,gBAAW,GAAX,WAAW,CAAa;QACxB,sBAAiB,GAAjB,iBAAiB,CAAmB;QAd9C,qBAAgB,GAAa,CAAC,0BAA0B,EAAE,aAAa,EAAE,eAAe,EAAE,QAAQ,CAAC,CAAC;QACpG,eAAU,GAAG,CAAC,GAAG,gDAAQ,CAAC,CAAC;QAE3B,iBAAY,GAAG,IAAI,oDAAY,EAAE,CAAC;QAClC,qBAAgB,GAAG,EAAE,CAAC;QACtB,2BAAsB,GAAG,EAAE,CAAC;QAC5B,wBAAmB,GAAG,EAAE,CAAC;QACzB,eAAU,GAAG,EAAE,CAAC;IAQZ,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,OAAO,EAAE,CAAC;QACf,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;IAED,SAAS;QACP,IAAI,CAAC,YAAY,CAAC,eAAe,GAAG,KAAK,CAAC;QAC1C,IAAI,CAAC,YAAY,CAAC,cAAc,GAAG,KAAK,CAAC;QACzC,IAAI,CAAC,YAAY,CAAC,YAAY,GAAG,KAAK,CAAC;QACvC,IAAI,CAAC,YAAY,CAAC,UAAU,GAAG,KAAK,CAAC;QACrC,IAAI,CAAC,YAAY,CAAC,gBAAgB,GAAG,KAAK,CAAC;QAC3C,IAAI,CAAC,YAAY,CAAC,gBAAgB,GAAG,KAAK,CAAC;QAC3C,IAAI,CAAC,YAAY,CAAC,YAAY,GAAG,KAAK,CAAC;QACvC,IAAI,CAAC,YAAY,CAAC,WAAW,GAAG,KAAK,CAAC;QACtC,IAAI,CAAC,YAAY,CAAC,gBAAgB,GAAG,KAAK,CAAC;QAC3C,IAAI,CAAC,YAAY,CAAC,WAAW,GAAG,KAAK,CAAC;IACxC,CAAC;IAED,OAAO;QACL,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,iDAAS,CAAC,YAAY,CAAC,CAAC,SAAS,CAAC,CAAC,GAAQ,EAAE,EAAE;YACrE,IAAI,CAAC,gBAAgB,GAAG,GAAG,CAAC,YAAY,CAAC,IAAI,CAAC;YAC9C,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;gBAC9B,GAAG,CAAC,aAAa,GAAG,EAAE,CAAC;gBACvB,GAAG,CAAC,aAAa,GAAG,GAAG,CAAC,eAAe,CAAC,CAAC,CAAC,GAAG,CAAC,aAAa,GAAG,aAAa,CAAC,CAAC,CAAC,GAAG,CAAC,aAAa,CAAC;gBAChG,GAAG,CAAC,aAAa,GAAG,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,GAAG,CAAC,aAAa,GAAG,YAAY,CAAC,CAAC,CAAC,GAAG,CAAC,aAAa,CAAC;gBAC9F,GAAG,CAAC,aAAa,GAAG,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC,GAAG,CAAC,aAAa,GAAG,UAAU,CAAC,CAAC,CAAC,GAAG,CAAC,aAAa,CAAC;gBAC1F,GAAG,CAAC,aAAa,GAAG,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,CAAC,aAAa,GAAG,cAAc,CAAC,CAAC,CAAC,GAAG,CAAC,aAAa,CAAC;gBAC5F,GAAG,CAAC,aAAa,GAAG,GAAG,CAAC,gBAAgB,CAAC,CAAC,CAAC,GAAG,CAAC,aAAa,GAAG,qBAAqB,CAAC,CAAC,CAAC,GAAG,CAAC,aAAa,CAAC;gBACzG,GAAG,CAAC,aAAa,GAAG,GAAG,CAAC,gBAAgB,CAAC,CAAC,CAAC,GAAG,CAAC,aAAa,GAAG,qBAAqB,CAAC,CAAC,CAAC,GAAG,CAAC,aAAa,CAAC;gBACzG,GAAG,CAAC,aAAa,GAAG,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC,aAAa,GAAG,gBAAgB,CAAC,CAAC,CAAC,GAAG,CAAC,aAAa,CAAC;gBAC/F,GAAG,CAAC,aAAa,GAAG,GAAG,CAAC,gBAAgB,CAAC,CAAC,CAAC,GAAG,CAAC,aAAa,GAAG,eAAe,CAAC,CAAC,CAAC,GAAG,CAAC,aAAa,CAAC;gBACnG,GAAG,CAAC,aAAa,GAAG,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC,aAAa,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,aAAa,CAAC;gBACxF,GAAG,CAAC,aAAa,GAAG,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC,GAAG,CAAC,aAAa,GAAG,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,aAAa,CAAC;gBAExF,qCAAqC;gBACrC,GAAG,CAAC,aAAa,GAAG,GAAG,CAAC,aAAa,CAAC,QAAQ,CAAC,GAAG,CAAC;oBACjD,CAAC,CAAC,GAAG,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC,EAAE,GAAG,CAAC,aAAa,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,aAAa,CAAC;YACvF,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,UAAU,GAAG,IAAI,0EAAkB,CAAe,GAAG,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;YAC9E,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC;YAC7D,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC;YACnD,IAAI,CAAC,yBAAyB,EAAE,CAAC;YACjC,IAAI,CAAC,sBAAsB,EAAE,CAAC;QAChC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,yBAAyB;QACvB,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,iDAAS,CAAC,mBAAmB,CAAC,CAAC,SAAS,CAAC,CAAC,GAAQ,EAAE,EAAE;YAC5E,IAAI,CAAC,sBAAsB,GAAG,GAAG,CAAC,YAAY,CAAC,IAAI,CAAC;QACtD,CAAC,CAAC,CAAC;IACL,CAAC;IAED,sBAAsB;QACpB,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,iDAAS,CAAC,eAAe,CAAC,CAAC,SAAS,CAAC,CAAC,GAAQ,EAAE,EAAE;YACxE,IAAI,CAAC,mBAAmB,GAAG,GAAG,CAAC,YAAY,CAAC,IAAI,CAAC;YACjD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;QAExC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,aAAa;QACX,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,WAAW,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE;YACnE,IAAI,CAAC,UAAU,GAAG,8CAA8C,CAAC;SAClE;aAAM,IAAI,IAAI,CAAC,YAAY,CAAC,UAAU,IAAI,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,gBAAgB,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,EAAE;YACvH,IAAI,CAAC,UAAU,GAAG,oCAAoC,CAAC;SACxD;aAAM,IAAI,IAAI,CAAC,YAAY,CAAC,WAAW,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,UAAU;YACtE,CAAC,IAAI,CAAC,YAAY,CAAC,gBAAgB,IAAI,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,EAAE;YAC7E,IAAI,CAAC,UAAU,GAAG,yCAAyC,CAAC;SAC7D;IACH,CAAC;IAED,IAAI;QACF,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;YACpB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,iDAAS,CAAC,YAAY,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC,SAAS,CACvE,CAAC,GAAQ,EAAE,EAAE;gBACX,IAAI,GAAG,KAAK,SAAS,EAAE;oBACrB,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;iBACrC;YACH,CAAC,EAAE,CAAC,GAAQ,EAAE,EAAE;gBACd,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBACjB,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YACpC,CAAC,EAAE,GAAG,EAAE;gBACN,6BAA6B;gBAC7B,IAAI,CAAC,kBAAkB,EAAE,CAAC;gBAC1B,IAAI,CAAC,OAAO,EAAE,CAAC;YACjB,CAAC,CAAC,CAAC;SACN;IACH,CAAC;IAED,eAAe;QACb,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,iDAAS,CAAC,YAAY,EAAE,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,CAAC,GAAQ,EAAE,EAAE;YAC1G,IAAI,GAAG,EAAE;gBACP,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,YAAY,CAAC,IAAI,CAAC;aAC3C;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;YACpB,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,iDAAS,CAAC,YAAY,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC,SAAS,CACzE,CAAC,GAAQ,EAAE,EAAE;gBACX,IAAI,GAAG,KAAK,SAAS,EAAE;oBACrB,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;iBACrC;YACH,CAAC,EAAE,CAAC,GAAQ,EAAE,EAAE;gBACd,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YACpC,CAAC,EAAE,GAAG,EAAE;gBACN,6BAA6B;gBAC7B,IAAI,CAAC,kBAAkB,EAAE,CAAC;gBAC1B,IAAI,CAAC,OAAO,EAAE,CAAC;YACjB,CAAC,CAAC,CAAC;SACN;IACH,CAAC;IAED,gBAAgB;QACd,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,uDAAe,CAAC,MAAM,CAAC;QAClD,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAC7C,kBAAkB,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC7C,MAAM,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACjC,MAAM,EAAE,CAAC,EAAE,CAAC;YACZ,eAAe,EAAE,CAAC,EAAE,CAAC;YACrB,cAAc,EAAE,CAAC,EAAE,CAAC;YACpB,YAAY,EAAE,CAAC,EAAE,CAAC;YAClB,UAAU,EAAE,CAAC,EAAE,CAAC;YAChB,gBAAgB,EAAE,CAAC,EAAE,CAAC;YACtB,gBAAgB,EAAE,CAAC,EAAE,CAAC;YACtB,YAAY,EAAE,CAAC,EAAE,CAAC;YAClB,WAAW,EAAE,CAAC,EAAE,CAAC;YACjB,gBAAgB,EAAE,CAAC,EAAE,CAAC;YACtB,WAAW,EAAE,CAAC,EAAE,CAAC;YACjB,eAAe,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SAC3C,CAAC,CAAC;IACL,CAAC;IAED,kBAAkB;QAChB,IAAI,CAAC,YAAY,GAAG,IAAI,oDAAY,EAAE,CAAC;QACvC,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,uDAAe,CAAC,MAAM,CAAC;QAClD,IAAI,CAAC,gBAAgB,CAAC,eAAe,EAAE,CAAC;QACxC,IAAI,CAAC,gBAAgB,CAAC,cAAc,EAAE,CAAC;IACzC,CAAC;IAED,yBAAyB,CAAC,KAAU,EAAE,QAAa;QACjD,IAAI,KAAK,IAAI,QAAQ,EAAE;YACrB,OAAO,KAAK,CAAC,kBAAkB,KAAK,QAAQ,CAAC,kBAAkB,CAAC;SACjE;IACH,CAAC;IAED,sBAAsB,CAAC,KAAU,EAAE,QAAa;QAC9C,IAAI,KAAK,IAAI,QAAQ,EAAE;YACrB,OAAO,KAAK,CAAC,aAAa,KAAK,QAAQ,CAAC,aAAa,CAAC;SACvD;IACH,CAAC;IAED,MAAM;QACJ,mDAAI,CAAC,IAAI,CAAC;YACR,IAAI,EAAE,sDAAsD;YAC5D,IAAI,EAAE,UAAU;YAChB,gBAAgB,EAAE,IAAI;YACtB,kBAAkB,EAAE,SAAS;YAC7B,iBAAiB,EAAE,MAAM;YACzB,iBAAiB,EAAE,SAAS;SAC7B,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;YACjB,IAAI,MAAM,CAAC,KAAK,EAAE;gBAChB,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,iDAAS,CAAC,YAAY,EAAE,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC,SAAS,CAChF,GAAG,EAAE;oBACH,IAAI,CAAC,iBAAiB,CAAC,oBAAoB,CAAC,sCAAsC,CAAC,CAAC;oBACpF,IAAI,CAAC,kBAAkB,EAAE,CAAC;oBAC1B,IAAI,CAAC,OAAO,EAAE,CAAC;gBACjB,CAAC,CACF,CAAC;aACH;QACH,CAAC,CAAC,CAAC;IACL,CAAC;CAEF;;YAtNQ,oDAAU;YAEC,0DAAW;YAFV,2DAAiB;;;gCAgBnC,uDAAS,SAAC,4DAAiB;iCAC3B,uDAAS,SAAC,mHAA2B;;AAH3B,qBAAqB;IALjC,+DAAS,CAAC;QACT,QAAQ,EAAE,oBAAoB;QAC9B,2FAA8C;;KAE/C,CAAC;GACW,qBAAqB,CAwMjC;AAxMiC;;;;;;;;;;;;;ACflC;AAAe,6EAAc,eAAe,uBAAuB,GAAG,6CAA6C,2cAA2c,E","file":"default~applications-applications-module~type-of-medium-type-of-medium-module-es2015.js","sourcesContent":["export default \"<form>\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12 title\\\">\\r\\n        <mat-label>\\r\\n          <mat-icon>devices_other</mat-icon> Type of Medium\\r\\n        </mat-label>\\r\\n      </div>\\r\\n    </div>\\r\\n    <hr>\\r\\n\\r\\n    <form [formGroup]=\\\"typeOfMediumForm\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\">\\r\\n          <mat-label>Type Of Main Document <span class=\\\"required-field\\\">*</span></mat-label>\\r\\n          <mat-select [(ngModel)]=\\\"typeOfMedium.typeOfMainDocument\\\" name=\\\"typeOfMainDocument\\\"\\r\\n            formControlName=\\\"typeOfMainDocument\\\" [compareWith]=\\\"compareTypeOfMainDocument\\\">\\r\\n            <mat-option *ngFor=\\\"let i of typeOfMainDocumentList\\\" [value]=\\\"i\\\">\\r\\n              {{i.typeOfMainDocument}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n\\r\\n        <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\">\\r\\n          <mat-label>Type of Medium <span class=\\\"required-field\\\">*</span></mat-label>\\r\\n          <input matInput [(ngModel)]=\\\"typeOfMedium.description\\\" name=\\\"medium\\\" formControlName=\\\"medium\\\">\\r\\n        </mat-form-field>\\r\\n\\r\\n        <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\">\\r\\n          <mat-label>Type Of Clearance <span class=\\\"required-field\\\">*</span></mat-label>\\r\\n          <mat-select [(ngModel)]=\\\"typeOfMedium.typeOfClearance\\\" name=\\\"typeOfClearance\\\"\\r\\n            formControlName=\\\"typeOfClearance\\\" [compareWith]=\\\"compareTypeOfClearance\\\">\\r\\n            <mat-option *ngFor=\\\"let i of typeOfClearanceList\\\" [value]=\\\"i\\\">\\r\\n              {{i.clearanceType}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n\\r\\n        <mat-form-field class=\\\"col-md-4\\\" appearance=\\\"outline\\\" *ngIf=\\\"typeOfMedium.id\\\">\\r\\n          <mat-label>Status</mat-label>\\r\\n          <mat-select [(ngModel)]=\\\"typeOfMedium.status\\\" name=\\\"status\\\" formControlName=\\\"status\\\">\\r\\n            <mat-option *ngFor=\\\"let i of statusList\\\" [value]=\\\"i.status\\\">\\r\\n              {{i.status}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n\\r\\n      <b class=\\\"row warningMsg\\\" *ngIf=\\\"warningMsg\\\">\\r\\n        <span class=\\\"warning-msg\\\">\\r\\n        <b class=\\\"material-icons\\\">error_outline</b> {{warningMsg}}</span>\\r\\n      </b>\\r\\n\\r\\n      <hr>\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-3\\\"></div>\\r\\n        <mat-slide-toggle class=\\\"col-md-4\\\" [(ngModel)]=\\\"typeOfMedium.singlemedia\\\" [checked]=\\\"typeOfMedium.singlemedia\\\"\\r\\n          color=\\\"warn\\\" formControlName=\\\"singlemedia\\\"><b>Single Media</b>\\r\\n        </mat-slide-toggle>\\r\\n        <mat-slide-toggle class=\\\"col-md-4\\\" [(ngModel)]=\\\"typeOfMedium.multimedia\\\" [checked]=\\\"typeOfMedium.multimedia\\\"\\r\\n          color=\\\"warn\\\" formControlName=\\\"multimedia\\\"><b>Multimedia</b>\\r\\n        </mat-slide-toggle>\\r\\n      </div>\\r\\n\\r\\n      <hr>\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-3\\\"></div>\\r\\n        <mat-slide-toggle class=\\\"col-md-4\\\" [(ngModel)]=\\\"typeOfMedium.multimediaMoving\\\"\\r\\n        [checked]=\\\"typeOfMedium.multimediaMoving\\\" color=\\\"warn\\\" formControlName=\\\"multimediaMoving\\\"><b>Multimedia\\r\\n          Moving</b>\\r\\n        </mat-slide-toggle>\\r\\n        <mat-slide-toggle class=\\\"col-md-4\\\" [(ngModel)]=\\\"typeOfMedium.multimediaStatic\\\"\\r\\n        [checked]=\\\"typeOfMedium.multimediaStatic\\\" color=\\\"warn\\\" formControlName=\\\"multimediaStatic\\\"><b>Multimedia\\r\\n          Static</b>\\r\\n        </mat-slide-toggle>\\r\\n      </div>\\r\\n\\r\\n      <hr>\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-3\\\"></div>\\r\\n        <mat-slide-toggle class=\\\"col-md-4\\\" [(ngModel)]=\\\"typeOfMedium.executionEnable\\\"\\r\\n          [checked]=\\\"typeOfMedium.executionEnable\\\" color=\\\"warn\\\" formControlName=\\\"executionEnable\\\"><b>Execution\\r\\n            Enable</b>\\r\\n        </mat-slide-toggle>\\r\\n        <mat-slide-toggle class=\\\"col-md-4\\\" [(ngModel)]=\\\"typeOfMedium.languageEnable\\\"\\r\\n          [checked]=\\\"typeOfMedium.languageEnable\\\" color=\\\"warn\\\" formControlName=\\\"languageEnable\\\"><b>Language Enable</b>\\r\\n        </mat-slide-toggle>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-3\\\"></div>\\r\\n        <mat-slide-toggle class=\\\"col-md-4\\\" [(ngModel)]=\\\"typeOfMedium.lengthEnable\\\" [checked]=\\\"typeOfMedium.lengthEnable\\\"\\r\\n          color=\\\"warn\\\" formControlName=\\\"lengthEnable\\\"><b>Length Enable</b>\\r\\n        </mat-slide-toggle>\\r\\n        <mat-slide-toggle class=\\\"col-md-4\\\" [(ngModel)]=\\\"typeOfMedium.othersEnable\\\" [checked]=\\\"typeOfMedium.othersEnable\\\"\\r\\n          color=\\\"warn\\\" formControlName=\\\"othersEnable\\\"><b>Others Enable</b>\\r\\n        </mat-slide-toggle>\\r\\n      </div>\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-md-3\\\"></div>\\r\\n        <mat-slide-toggle class=\\\"col-md-4\\\" [(ngModel)]=\\\"typeOfMedium.sizeLengthEnable\\\"\\r\\n        [checked]=\\\"typeOfMedium.sizeLengthEnable\\\" color=\\\"warn\\\" formControlName=\\\"sizeLengthEnable\\\"><b>Size Length\\r\\n          Enable</b>\\r\\n        </mat-slide-toggle>\\r\\n        <mat-slide-toggle class=\\\"col-md-4\\\" [(ngModel)]=\\\"typeOfMedium.widthEnable\\\" [checked]=\\\"typeOfMedium.widthEnable\\\"\\r\\n          color=\\\"warn\\\" formControlName=\\\"widthEnable\\\"><b>Width Enable</b>\\r\\n        </mat-slide-toggle>\\r\\n      </div>\\r\\n    </form>\\r\\n\\r\\n    <app-form-action-buttons [childObject]=\\\"typeOfMedium\\\" [childForm]=\\\"typeOfMediumForm\\\" (saveFunction)=\\\"save()\\\"\\r\\n      (updateFunction)=\\\"update()\\\" (cancelFunction)=\\\"resetFormValidator()\\\" (deleteFunction)=\\\"delete()\\\"></app-form-action-buttons>\\r\\n    <br>\\r\\n    <app-form-list [dataSource]=\\\"dataSource\\\" [displayedColumns]=\\\"displayedColumns\\\"\\r\\n      (selectInListFunction)=\\\"getTypeOfMedium()\\\"></app-form-list>\\r\\n  </div>\\r\\n</form>\\r\\n\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ApiService, SweetAlertService } from '@services';\r\nimport { TypeOfMedium } from '@models';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { COMMON_FUNCTION, ENDPOINTS, STATUSES } from '@shared';\r\nimport { FormListComponent } from '@fragments';\r\nimport { TypeOfMainDocumentComponent } from '../type-of-main-document/type-of-main-document.component';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-type-of-medium',\r\n  templateUrl: './type-of-medium.component.html',\r\n  styleUrls: ['./type-of-medium.component.scss']\r\n})\r\nexport class TypeOfMediumComponent implements OnInit {\r\n\r\n  @ViewChild(FormListComponent) formListComponent: FormListComponent;\r\n  @ViewChild(TypeOfMainDocumentComponent) typeOfMainDocument: TypeOfMainDocumentComponent;\r\n  dataSource: MatTableDataSource<TypeOfMedium>;\r\n  displayedColumns: string[] = ['typeOfMainDocumentObject', 'description', 'enabledFields', 'status'];\r\n  statusList = [...STATUSES];\r\n\r\n  typeOfMedium = new TypeOfMedium();\r\n  typeOfMediumList = [];\r\n  typeOfMainDocumentList = [];\r\n  typeOfClearanceList = [];\r\n  warningMsg = '';\r\n\r\n  typeOfMediumForm: FormGroup;\r\n\r\n  constructor(\r\n    private apiService: ApiService,\r\n    private formBuilder: FormBuilder,\r\n    private sweetAlertService: SweetAlertService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getList();\r\n    this.setFormValidator();\r\n    this.initValue();\r\n  }\r\n\r\n  initValue() {\r\n    this.typeOfMedium.executionEnable = false;\r\n    this.typeOfMedium.languageEnable = false;\r\n    this.typeOfMedium.lengthEnable = false;\r\n    this.typeOfMedium.multimedia = false;\r\n    this.typeOfMedium.multimediaMoving = false;\r\n    this.typeOfMedium.multimediaStatic = false;\r\n    this.typeOfMedium.othersEnable = false;\r\n    this.typeOfMedium.singlemedia = false;\r\n    this.typeOfMedium.sizeLengthEnable = false;\r\n    this.typeOfMedium.widthEnable = false;\r\n  }\r\n\r\n  getList(): void {\r\n    this.apiService.findAll(ENDPOINTS.typeOfMedium).subscribe((res: any) => {\r\n      this.typeOfMediumList = res.responseData.data;\r\n      this.typeOfMediumList.map(val => {\r\n        val.enabledFields = '';\r\n        val.enabledFields = val.executionEnable ? val.enabledFields + 'Execution, ' : val.enabledFields;\r\n        val.enabledFields = val.languageEnable ? val.enabledFields + 'Language, ' : val.enabledFields;\r\n        val.enabledFields = val.lengthEnable ? val.enabledFields + 'Length, ' : val.enabledFields;\r\n        val.enabledFields = val.multimedia ? val.enabledFields + 'Multimedia, ' : val.enabledFields;\r\n        val.enabledFields = val.multimediaMoving ? val.enabledFields + 'Multimedia Moving, ' : val.enabledFields;\r\n        val.enabledFields = val.multimediaStatic ? val.enabledFields + 'Multimedia Static, ' : val.enabledFields;\r\n        val.enabledFields = val.singlemedia ? val.enabledFields + 'Single Media, ' : val.enabledFields;\r\n        val.enabledFields = val.sizeLengthEnable ? val.enabledFields + 'Size Length, ' : val.enabledFields;\r\n        val.enabledFields = val.widthEnable ? val.enabledFields + 'Width, ' : val.enabledFields;\r\n        val.enabledFields = val.othersEnable ? val.enabledFields + 'Others' : val.enabledFields;\r\n\r\n        // will remove excess comma and space\r\n        val.enabledFields = val.enabledFields.endsWith(' ')\r\n          ? val.enabledFields.substring(0, val.enabledFields.length - 2) : val.enabledFields;\r\n      });\r\n      this.dataSource = new MatTableDataSource<TypeOfMedium>(res.responseData.data);\r\n      this.dataSource.paginator = this.formListComponent.paginator;\r\n      this.dataSource.sort = this.formListComponent.sort;\r\n      this.getTypeOfMainDocumentList();\r\n      this.getTypeOfClearanceList();\r\n    });\r\n  }\r\n\r\n  getTypeOfMainDocumentList(): void {\r\n    this.apiService.findAll(ENDPOINTS.typeOfMainDocuments).subscribe((res: any) => {\r\n      this.typeOfMainDocumentList = res.responseData.data;\r\n    });\r\n  }\r\n\r\n  getTypeOfClearanceList(): void {\r\n    this.apiService.findAll(ENDPOINTS.typeOfClearance).subscribe((res: any) => {\r\n      this.typeOfClearanceList = res.responseData.data;\r\n      console.log(this.typeOfClearanceList);\r\n\r\n    });\r\n  }\r\n\r\n  validateInput() {\r\n    this.warningMsg = '';\r\n    if (!this.typeOfMedium.singlemedia && !this.typeOfMedium.multimedia) {\r\n      this.warningMsg = 'Please toggle Single Media and/or Multimedia';\r\n    } else if (this.typeOfMedium.multimedia && (!this.typeOfMedium.multimediaMoving && !this.typeOfMedium.multimediaStatic)) {\r\n      this.warningMsg = 'Please toggle Moving and/or Static';\r\n    } else if (this.typeOfMedium.singlemedia && !this.typeOfMedium.multimedia &&\r\n       (this.typeOfMedium.multimediaMoving || this.typeOfMedium.multimediaStatic)) {\r\n      this.warningMsg = 'Moving or Static is for Multimedia only';\r\n    }\r\n  }\r\n\r\n  save(): void {\r\n    this.validateInput();\r\n    if (!this.warningMsg) {\r\n      this.apiService.save(ENDPOINTS.typeOfMedium, this.typeOfMedium).subscribe(\r\n        (res: any) => {\r\n          if (res !== undefined) {\r\n            this.sweetAlertService.success(res);\r\n          }\r\n        }, (err: any) => {\r\n          console.log(err);\r\n          this.sweetAlertService.error(err);\r\n        }, () => {\r\n          // actions after subscription\r\n          this.resetFormValidator();\r\n          this.getList();\r\n        });\r\n    }\r\n  }\r\n\r\n  getTypeOfMedium(): void {\r\n    this.apiService.findById(ENDPOINTS.typeOfMedium, this.formListComponent.idForUpdate).subscribe((res: any) => {\r\n      if (res) {\r\n        this.typeOfMedium = res.responseData.data;\r\n      }\r\n    });\r\n  }\r\n\r\n  update(): void {\r\n    this.validateInput();\r\n    if (!this.warningMsg) {\r\n      this.apiService.update(ENDPOINTS.typeOfMedium, this.typeOfMedium).subscribe(\r\n        (res: any) => {\r\n          if (res !== undefined) {\r\n            this.sweetAlertService.success(res);\r\n          }\r\n        }, (err: any) => {\r\n          this.sweetAlertService.error(err);\r\n        }, () => {\r\n          // actions after subscription\r\n          this.resetFormValidator();\r\n          this.getList();\r\n        });\r\n    }\r\n  }\r\n\r\n  setFormValidator(): void {\r\n    this.typeOfMedium.status = COMMON_FUNCTION.ACTIVE;\r\n    this.typeOfMediumForm = this.formBuilder.group({\r\n      typeOfMainDocument: ['', Validators.required],\r\n      medium: ['', Validators.required],\r\n      status: [''],\r\n      executionEnable: [''],\r\n      languageEnable: [''],\r\n      lengthEnable: [''],\r\n      multimedia: [''],\r\n      multimediaMoving: [''],\r\n      multimediaStatic: [''],\r\n      othersEnable: [''],\r\n      singlemedia: [''],\r\n      sizeLengthEnable: [''],\r\n      widthEnable: [''],\r\n      typeOfClearance: ['', Validators.required],\r\n    });\r\n  }\r\n\r\n  resetFormValidator(): void {\r\n    this.typeOfMedium = new TypeOfMedium();\r\n    this.typeOfMedium.status = COMMON_FUNCTION.ACTIVE;\r\n    this.typeOfMediumForm.markAsUntouched();\r\n    this.typeOfMediumForm.markAsPristine();\r\n  }\r\n\r\n  compareTypeOfMainDocument(value: any, selected: any): boolean {\r\n    if (value && selected) {\r\n      return value.typeOfMainDocument === selected.typeOfMainDocument;\r\n    }\r\n  }\r\n\r\n  compareTypeOfClearance(value: any, selected: any): boolean {\r\n    if (value && selected) {\r\n      return value.clearanceType === selected.clearanceType;\r\n    }\r\n  }\r\n\r\n  delete() {\r\n    Swal.fire({\r\n      text: 'Are you sure you want to delete this type of medium?',\r\n      icon: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Confirm'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.apiService.deleteById(ENDPOINTS.typeOfMedium, this.typeOfMedium.id).subscribe(\r\n          () => {\r\n            this.sweetAlertService.customSuccessMessage('Type of medium successfully deleted.');\r\n            this.resetFormValidator();\r\n            this.getList();\r\n          }\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","export default \".warningMsg {\\n  color: red;\\n  text-align: center;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9wYWdlcy9tYWludGVuYW5jZS90eXBlLW9mLW1lZGl1bS90eXBlLW9mLW1lZGl1bS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFVBQUE7RUFDQSxrQkFBQTtBQUNGIiwiZmlsZSI6InNyYy9hcHAvbW9kdWxlcy9wYWdlcy9tYWludGVuYW5jZS90eXBlLW9mLW1lZGl1bS90eXBlLW9mLW1lZGl1bS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi53YXJuaW5nTXNne1xyXG4gIGNvbG9yOiByZWQ7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG59XHJcbiJdfQ== */\";"],"sourceRoot":"webpack:///"}