{"version":3,"sources":["./src/app/modules/pages/maintenance/type-of-medium/type-of-medium.component.ts","./src/app/modules/pages/maintenance/type-of-medium/type-of-medium.component.html"],"names":[],"mappings":"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","file":"default~applications-applications-module~type-of-medium-type-of-medium-module-es2015.js","sourcesContent":["import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ApiService, SweetAlertService } from '@services';\nimport { TypeOfMedium } from '@models';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { COMMON_FUNCTION, ENDPOINTS, STATUSES } from '@shared';\nimport { FormListComponent } from '@fragments';\nimport { TypeOfMainDocumentComponent } from '../type-of-main-document/type-of-main-document.component';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-type-of-medium',\n  templateUrl: './type-of-medium.component.html',\n  styleUrls: ['./type-of-medium.component.scss']\n})\nexport class TypeOfMediumComponent implements OnInit {\n\n  @ViewChild(FormListComponent) formListComponent: FormListComponent;\n  @ViewChild(TypeOfMainDocumentComponent) typeOfMainDocument: TypeOfMainDocumentComponent;\n  dataSource: MatTableDataSource<TypeOfMedium>;\n  displayedColumns: string[] = ['typeOfMainDocumentObject', 'description', 'enabledFields', 'status'];\n  statusList = [...STATUSES];\n\n  typeOfMedium = new TypeOfMedium();\n  typeOfMediumList = [];\n  typeOfMainDocumentList = [];\n  typeOfClearanceList = [];\n  warningMsg = '';\n\n  typeOfMediumForm: FormGroup;\n\n  constructor(\n    private apiService: ApiService,\n    private formBuilder: FormBuilder,\n    private sweetAlertService: SweetAlertService\n  ) { }\n\n  ngOnInit(): void {\n    this.getList();\n    this.setFormValidator();\n    this.initValue();\n  }\n\n  initValue() {\n    this.typeOfMedium.executionEnable = false;\n    this.typeOfMedium.languageEnable = false;\n    this.typeOfMedium.lengthEnable = false;\n    this.typeOfMedium.multimedia = false;\n    this.typeOfMedium.multimediaMoving = false;\n    this.typeOfMedium.multimediaStatic = false;\n    this.typeOfMedium.othersEnable = false;\n    this.typeOfMedium.singlemedia = false;\n    this.typeOfMedium.sizeLengthEnable = false;\n    this.typeOfMedium.widthEnable = false;\n  }\n\n  getList(): void {\n    this.apiService.findAll(ENDPOINTS.typeOfMedium).subscribe((res: any) => {\n      this.typeOfMediumList = res.responseData.data;\n      this.typeOfMediumList.map(val => {\n        val.enabledFields = '';\n        val.enabledFields = val.executionEnable ? val.enabledFields + 'Execution, ' : val.enabledFields;\n        val.enabledFields = val.languageEnable ? val.enabledFields + 'Language, ' : val.enabledFields;\n        val.enabledFields = val.lengthEnable ? val.enabledFields + 'Length, ' : val.enabledFields;\n        val.enabledFields = val.multimedia ? val.enabledFields + 'Multimedia, ' : val.enabledFields;\n        val.enabledFields = val.multimediaMoving ? val.enabledFields + 'Multimedia Moving, ' : val.enabledFields;\n        val.enabledFields = val.multimediaStatic ? val.enabledFields + 'Multimedia Static, ' : val.enabledFields;\n        val.enabledFields = val.singlemedia ? val.enabledFields + 'Single Media, ' : val.enabledFields;\n        val.enabledFields = val.sizeLengthEnable ? val.enabledFields + 'Size Length, ' : val.enabledFields;\n        val.enabledFields = val.widthEnable ? val.enabledFields + 'Width, ' : val.enabledFields;\n        val.enabledFields = val.othersEnable ? val.enabledFields + 'Others' : val.enabledFields;\n\n        // will remove excess comma and space\n        val.enabledFields = val.enabledFields.endsWith(' ')\n          ? val.enabledFields.substring(0, val.enabledFields.length - 2) : val.enabledFields;\n      });\n      this.dataSource = new MatTableDataSource<TypeOfMedium>(res.responseData.data);\n      this.dataSource.paginator = this.formListComponent.paginator;\n      this.dataSource.sort = this.formListComponent.sort;\n      this.getTypeOfMainDocumentList();\n      this.getTypeOfClearanceList();\n    });\n  }\n\n  getTypeOfMainDocumentList(): void {\n    this.apiService.findAll(ENDPOINTS.typeOfMainDocuments).subscribe((res: any) => {\n      this.typeOfMainDocumentList = res.responseData.data;\n    });\n  }\n\n  getTypeOfClearanceList(): void {\n    this.apiService.findAll(ENDPOINTS.typeOfClearance).subscribe((res: any) => {\n      this.typeOfClearanceList = res.responseData.data;\n      console.log(this.typeOfClearanceList);\n\n    });\n  }\n\n  validateInput() {\n    this.warningMsg = '';\n    if (!this.typeOfMedium.singlemedia && !this.typeOfMedium.multimedia) {\n      this.warningMsg = 'Please toggle Single Media and/or Multimedia';\n    } else if (this.typeOfMedium.multimedia && (!this.typeOfMedium.multimediaMoving && !this.typeOfMedium.multimediaStatic)) {\n      this.warningMsg = 'Please toggle Moving and/or Static';\n    } else if (this.typeOfMedium.singlemedia && !this.typeOfMedium.multimedia &&\n       (this.typeOfMedium.multimediaMoving || this.typeOfMedium.multimediaStatic)) {\n      this.warningMsg = 'Moving or Static is for Multimedia only';\n    }\n  }\n\n  save(): void {\n    this.validateInput();\n    if (!this.warningMsg) {\n      this.apiService.save(ENDPOINTS.typeOfMedium, this.typeOfMedium).subscribe(\n        (res: any) => {\n          if (res !== undefined) {\n            this.sweetAlertService.success(res);\n          }\n        }, (err: any) => {\n          console.log(err);\n          this.sweetAlertService.error(err);\n        }, () => {\n          // actions after subscription\n          this.resetFormValidator();\n          this.getList();\n        });\n    }\n  }\n\n  getTypeOfMedium(): void {\n    this.apiService.findById(ENDPOINTS.typeOfMedium, this.formListComponent.idForUpdate).subscribe((res: any) => {\n      if (res) {\n        this.typeOfMedium = res.responseData.data;\n      }\n    });\n  }\n\n  update(): void {\n    this.validateInput();\n    if (!this.warningMsg) {\n      this.apiService.update(ENDPOINTS.typeOfMedium, this.typeOfMedium).subscribe(\n        (res: any) => {\n          if (res !== undefined) {\n            this.sweetAlertService.success(res);\n          }\n        }, (err: any) => {\n          this.sweetAlertService.error(err);\n        }, () => {\n          // actions after subscription\n          this.resetFormValidator();\n          this.getList();\n        });\n    }\n  }\n\n  setFormValidator(): void {\n    this.typeOfMedium.status = COMMON_FUNCTION.ACTIVE;\n    this.typeOfMediumForm = this.formBuilder.group({\n      typeOfMainDocument: ['', Validators.required],\n      medium: ['', Validators.required],\n      status: [''],\n      executionEnable: [''],\n      languageEnable: [''],\n      lengthEnable: [''],\n      multimedia: [''],\n      multimediaMoving: [''],\n      multimediaStatic: [''],\n      othersEnable: [''],\n      singlemedia: [''],\n      sizeLengthEnable: [''],\n      widthEnable: [''],\n      typeOfClearance: ['', Validators.required],\n    });\n  }\n\n  resetFormValidator(): void {\n    this.typeOfMedium = new TypeOfMedium();\n    this.typeOfMedium.status = COMMON_FUNCTION.ACTIVE;\n    this.typeOfMediumForm.markAsUntouched();\n    this.typeOfMediumForm.markAsPristine();\n  }\n\n  compareTypeOfMainDocument(value: any, selected: any): boolean {\n    if (value && selected) {\n      return value.typeOfMainDocument === selected.typeOfMainDocument;\n    }\n  }\n\n  compareTypeOfClearance(value: any, selected: any): boolean {\n    if (value && selected) {\n      return value.clearanceType === selected.clearanceType;\n    }\n  }\n\n  delete() {\n    Swal.fire({\n      text: 'Are you sure you want to delete this type of medium?',\n      icon: 'question',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Confirm'\n    }).then((result) => {\n      if (result.value) {\n        this.apiService.deleteById(ENDPOINTS.typeOfMedium, this.typeOfMedium.id).subscribe(\n          () => {\n            this.sweetAlertService.customSuccessMessage('Type of medium successfully deleted.');\n            this.resetFormValidator();\n            this.getList();\n          }\n        );\n      }\n    });\n  }\n\n}\n","<form>\n  <div class=\"container-fluid\">\n    <div class=\"row\">\n      <div class=\"col-md-12 title\">\n        <mat-label>\n          <mat-icon>devices_other</mat-icon> Type of Medium\n        </mat-label>\n      </div>\n    </div>\n    <hr>\n\n    <form [formGroup]=\"typeOfMediumForm\">\n      <div class=\"row\">\n        <mat-form-field class=\"col-md-6\" appearance=\"outline\">\n          <mat-label>Type Of Main Document <span class=\"required-field\">*</span></mat-label>\n          <mat-select [(ngModel)]=\"typeOfMedium.typeOfMainDocument\" name=\"typeOfMainDocument\"\n            formControlName=\"typeOfMainDocument\" [compareWith]=\"compareTypeOfMainDocument\">\n            <mat-option *ngFor=\"let i of typeOfMainDocumentList\" [value]=\"i\">\n              {{i.typeOfMainDocument}}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n\n        <mat-form-field class=\"col-md-6\" appearance=\"outline\">\n          <mat-label>Type of Medium <span class=\"required-field\">*</span></mat-label>\n          <input matInput [(ngModel)]=\"typeOfMedium.description\" name=\"medium\" formControlName=\"medium\">\n        </mat-form-field>\n\n        <mat-form-field class=\"col-md-6\" appearance=\"outline\">\n          <mat-label>Type Of Clearance <span class=\"required-field\">*</span></mat-label>\n          <mat-select [(ngModel)]=\"typeOfMedium.typeOfClearance\" name=\"typeOfClearance\"\n            formControlName=\"typeOfClearance\" [compareWith]=\"compareTypeOfClearance\">\n            <mat-option *ngFor=\"let i of typeOfClearanceList\" [value]=\"i\">\n              {{i.clearanceType}}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n\n        <mat-form-field class=\"col-md-4\" appearance=\"outline\" *ngIf=\"typeOfMedium.id\">\n          <mat-label>Status</mat-label>\n          <mat-select [(ngModel)]=\"typeOfMedium.status\" name=\"status\" formControlName=\"status\">\n            <mat-option *ngFor=\"let i of statusList\" [value]=\"i.status\">\n              {{i.status}}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n      </div>\n\n      <b class=\"row warningMsg\" *ngIf=\"warningMsg\">\n        <span class=\"warning-msg\">\n        <b class=\"material-icons\">error_outline</b> {{warningMsg}}</span>\n      </b>\n\n      <hr>\n\n      <div class=\"row\">\n        <div class=\"col-md-3\"></div>\n        <mat-slide-toggle class=\"col-md-4\" [(ngModel)]=\"typeOfMedium.singlemedia\" [checked]=\"typeOfMedium.singlemedia\"\n          color=\"warn\" formControlName=\"singlemedia\"><b>Single Media</b>\n        </mat-slide-toggle>\n        <mat-slide-toggle class=\"col-md-4\" [(ngModel)]=\"typeOfMedium.multimedia\" [checked]=\"typeOfMedium.multimedia\"\n          color=\"warn\" formControlName=\"multimedia\"><b>Multimedia</b>\n        </mat-slide-toggle>\n      </div>\n\n      <hr>\n\n      <div class=\"row\">\n        <div class=\"col-md-3\"></div>\n        <mat-slide-toggle class=\"col-md-4\" [(ngModel)]=\"typeOfMedium.multimediaMoving\"\n        [checked]=\"typeOfMedium.multimediaMoving\" color=\"warn\" formControlName=\"multimediaMoving\"><b>Multimedia\n          Moving</b>\n        </mat-slide-toggle>\n        <mat-slide-toggle class=\"col-md-4\" [(ngModel)]=\"typeOfMedium.multimediaStatic\"\n        [checked]=\"typeOfMedium.multimediaStatic\" color=\"warn\" formControlName=\"multimediaStatic\"><b>Multimedia\n          Static</b>\n        </mat-slide-toggle>\n      </div>\n\n      <hr>\n\n      <div class=\"row\">\n        <div class=\"col-md-3\"></div>\n        <mat-slide-toggle class=\"col-md-4\" [(ngModel)]=\"typeOfMedium.executionEnable\"\n          [checked]=\"typeOfMedium.executionEnable\" color=\"warn\" formControlName=\"executionEnable\"><b>Execution\n            Enable</b>\n        </mat-slide-toggle>\n        <mat-slide-toggle class=\"col-md-4\" [(ngModel)]=\"typeOfMedium.languageEnable\"\n          [checked]=\"typeOfMedium.languageEnable\" color=\"warn\" formControlName=\"languageEnable\"><b>Language Enable</b>\n        </mat-slide-toggle>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-md-3\"></div>\n        <mat-slide-toggle class=\"col-md-4\" [(ngModel)]=\"typeOfMedium.lengthEnable\" [checked]=\"typeOfMedium.lengthEnable\"\n          color=\"warn\" formControlName=\"lengthEnable\"><b>Length Enable</b>\n        </mat-slide-toggle>\n        <mat-slide-toggle class=\"col-md-4\" [(ngModel)]=\"typeOfMedium.othersEnable\" [checked]=\"typeOfMedium.othersEnable\"\n          color=\"warn\" formControlName=\"othersEnable\"><b>Others Enable</b>\n        </mat-slide-toggle>\n      </div>\n        <div class=\"row\">\n          <div class=\"col-md-3\"></div>\n        <mat-slide-toggle class=\"col-md-4\" [(ngModel)]=\"typeOfMedium.sizeLengthEnable\"\n        [checked]=\"typeOfMedium.sizeLengthEnable\" color=\"warn\" formControlName=\"sizeLengthEnable\"><b>Size Length\n          Enable</b>\n        </mat-slide-toggle>\n        <mat-slide-toggle class=\"col-md-4\" [(ngModel)]=\"typeOfMedium.widthEnable\" [checked]=\"typeOfMedium.widthEnable\"\n          color=\"warn\" formControlName=\"widthEnable\"><b>Width Enable</b>\n        </mat-slide-toggle>\n      </div>\n    </form>\n\n    <app-form-action-buttons [childObject]=\"typeOfMedium\" [childForm]=\"typeOfMediumForm\" (saveFunction)=\"save()\"\n      (updateFunction)=\"update()\" (cancelFunction)=\"resetFormValidator()\" (deleteFunction)=\"delete()\"></app-form-action-buttons>\n    <br>\n    <app-form-list [dataSource]=\"dataSource\" [displayedColumns]=\"displayedColumns\"\n      (selectInListFunction)=\"getTypeOfMedium()\"></app-form-list>\n  </div>\n</form>\n"],"sourceRoot":"webpack:///"}