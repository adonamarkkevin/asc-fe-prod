{"version":3,"sources":["./src/app/modules/fragments/index.ts","./src/app/modules/pages/maintenance/s1-and-s2-form-expiration-period/s1-and-s2-form-expiration-period.module.ts","./src/app/modules/pages/maintenance/s1-and-s2-form-expiration-period/s1-and-s2-form-expiration-period.component.ts","./src/app/modules/pages/maintenance/s1-and-s2-form-expiration-period/s1-and-s2-form-expiration-period.component.html","./src/app/modules/pages/maintenance/s1-and-s2-form-expiration-period/s1-and-s2-form-expiration-period-routing.module.ts"],"names":[],"mappings":"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","file":"s1-and-s2-form-expiration-period-s1-and-s2-form-expiration-period-module-es2015.js","sourcesContent":["export * from './form-action-buttons/form-action-buttons.component';\nexport * from './form-list/form-list.component';","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { S1AndS2FormExpirationPeriodRoutingModule } from './s1-and-s2-form-expiration-period-routing.module';\nimport { S1AndS2FormExpirationPeriodComponent } from './s1-and-s2-form-expiration-period.component';\nimport { FragmentsModule } from 'app/modules/fragments/fragments.module';\nimport { AngularMaterialModule } from '@shared';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\n\n@NgModule({\n  declarations: [\n    S1AndS2FormExpirationPeriodComponent\n  ],\n  imports: [\n    CommonModule,\n    S1AndS2FormExpirationPeriodRoutingModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    AngularMaterialModule,\n    FragmentsModule,\n  ]\n})\nexport class S1AndS2FormExpirationPeriodModule { }\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { FormListComponent } from '@fragments';\nimport { ApiService, SweetAlertService } from '@services';\nimport { ENDPOINTS, STATUSES } from '@shared';\nimport { S1AndS2FormExpirationPeriod } from 'app/core/models/s1-and-s2-form-expiration-period.model';\nimport { ValidateFieldService } from 'app/core/services/validate-field.service';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-s1-and-s2-form-expiration-period',\n  templateUrl: './s1-and-s2-form-expiration-period.component.html',\n  styleUrls: ['./s1-and-s2-form-expiration-period.component.scss']\n})\nexport class S1AndS2FormExpirationPeriodComponent implements OnInit {\n\n  @ViewChild(FormListComponent) formListComponent: FormListComponent;\n  dataSource: MatTableDataSource<S1AndS2FormExpirationPeriod>;\n  displayedColumns: string[] = ['s1ExpNoOfYears', 's2ExpNoOfYears'];\n  statusList = [...STATUSES];\n\n  s1AndS2FormExpirationPeriod = new S1AndS2FormExpirationPeriod();\n  s1AndS2FormExpirationPeriodList = [];\n\n  s1AndS2FormExpirationPeriodForm: FormGroup;\n\n\n  constructor(\n    private apiService: ApiService,\n    private formBuilder: FormBuilder,\n    private sweetAlertService: SweetAlertService,\n    public validateFieldService: ValidateFieldService,\n  ) { }\n\n  ngOnInit() {\n    this.getList();\n    this.setFormValidator();\n  }\n\n  getList(): void {\n    this.apiService.findAll(ENDPOINTS.s1AndS2FormExpirationPeriods).subscribe((res: any) => {\n      this.s1AndS2FormExpirationPeriodList = res.responseData.data;\n      this.dataSource = new MatTableDataSource<S1AndS2FormExpirationPeriod>(res.responseData.data);\n      this.dataSource.paginator = this.formListComponent.paginator;\n      this.dataSource.sort = this.formListComponent.sort;\n    });\n  }\n\n  save(): void {\n    this.apiService.save(ENDPOINTS.s1AndS2FormExpirationPeriods, this.s1AndS2FormExpirationPeriod).subscribe(\n      (res: any) => {\n        if (res !== undefined) {\n          this.sweetAlertService.success(res);\n        }\n      }, (err: any) => {\n        if (!Number(this.s1AndS2FormExpirationPeriod.s1ExpNoOfYears)\n          || !Number(this.s1AndS2FormExpirationPeriod.s2ExpNoOfYears)) {\n          err.error.message = 'Please enter numeric values only';\n        } else {\n          err.error.message = 'Default expiration values have already been set. Select the entry to update the record';\n        }\n        this.sweetAlertService.error(err);\n      }, () => {\n        this.resetFormValidator(),\n          this.getList();\n      }\n    )\n  }\n\n  getS1AndS2FormExpirationPeriod(): void {\n    this.apiService.findById(ENDPOINTS.s1AndS2FormExpirationPeriods, this.formListComponent.idForUpdate).subscribe((res: any) => {\n      if (res) {\n        this.s1AndS2FormExpirationPeriod = res.responseData.data;\n        console.log(res);\n\n      }\n    });\n  }\n\n  update(): void {\n    this.apiService.update(ENDPOINTS.s1AndS2FormExpirationPeriods, this.s1AndS2FormExpirationPeriod).subscribe(\n      (res: any) => {\n        if (res !== undefined) {\n          this.sweetAlertService.success(res);\n        }\n      }, (err: any) => {\n        this.sweetAlertService.error(err);\n      }, () => {\n        this.resetFormValidator()\n        this.getList();\n      });\n  }\n\n  setFormValidator(): void {\n    this.s1AndS2FormExpirationPeriodForm = this.formBuilder.group({\n      s1ExpNoOfYears: ['', Validators.required],\n      s2ExpNoOfYears: ['', Validators.required],\n    });\n  }\n\n  resetFormValidator(): void {\n    this.s1AndS2FormExpirationPeriod = new S1AndS2FormExpirationPeriod();\n    this.s1AndS2FormExpirationPeriodForm.markAsUntouched();\n    this.s1AndS2FormExpirationPeriodForm.markAsPristine();\n  }\n\n  delete() {\n    Swal.fire({\n      text: 'Are you sure you want to delete this S1 and S2 form expiration period?',\n      icon: 'question',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Confirm'\n    }).then((result) => {\n      if (result.value) {\n        this.apiService.deleteById(ENDPOINTS.s1AndS2FormExpirationPeriods, this.s1AndS2FormExpirationPeriod.id).subscribe(\n          () => {\n            this.sweetAlertService.customSuccessMessage('S1 and S2 form expiration period successfully deleted.');\n            this.resetFormValidator();\n            this.getList();\n          }\n        );\n      }\n    });\n  }\n\n}\n","<form>\n    <div class=\"container-fluid\">\n        <div class=\"row\">\n            <div class=\"col-md-12 title\">\n                <mat-label>\n                    S1 and S2 Form Expiration Period\n                </mat-label>\n            </div>\n        </div>\n        <hr>\n\n        <form [formGroup]=\"s1AndS2FormExpirationPeriodForm\">\n            <div class=\"row\">\n                <mat-form-field class=\"col-md-6\" appearance=\"outline\">\n                    <mat-label>S1 Expiration No Of Years <span class=\"required-field\">*</span></mat-label>\n                    <input matInput [(ngModel)]=\"s1AndS2FormExpirationPeriod.s1ExpNoOfYears\" name=\"s1ExpNoOfYears\"\n                        (keydown)=\"validateFieldService.numbersOnly($event)\" formControlName=\"s1ExpNoOfYears\">\n                </mat-form-field>\n\n                <mat-form-field class=\"col-md-6\" appearance=\"outline\">\n                    <mat-label>S2 Expiration No Of Years <span class=\"required-field\">*</span></mat-label>\n                    <input matInput [(ngModel)]=\"s1AndS2FormExpirationPeriod.s2ExpNoOfYears\" name=\"s2ExpNoOfYears\"\n                        (keydown)=\"validateFieldService.numbersOnly($event)\" formControlName=\"s2ExpNoOfYears\">\n                </mat-form-field>\n            </div>\n        </form>\n\n        <app-form-action-buttons [childObject]=\"s1AndS2FormExpirationPeriod\"\n            [childForm]=\"s1AndS2FormExpirationPeriodForm\" (saveFunction)=\"save()\" (updateFunction)=\"update()\"\n            (cancelFunction)=\"resetFormValidator()\" (deleteFunction)=\"delete()\"></app-form-action-buttons>\n        <br>\n        <app-form-list [dataSource]=\"dataSource\" [displayedColumns]=\"displayedColumns\"\n            (selectInListFunction)=\"getS1AndS2FormExpirationPeriod()\"></app-form-list>\n\n    </div>\n</form>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { S1AndS2FormExpirationPeriodComponent } from './s1-and-s2-form-expiration-period.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: S1AndS2FormExpirationPeriodComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class S1AndS2FormExpirationPeriodRoutingModule { }\n"],"sourceRoot":"webpack:///"}