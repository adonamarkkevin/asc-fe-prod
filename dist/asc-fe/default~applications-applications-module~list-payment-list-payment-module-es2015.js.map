{"version":3,"sources":["./src/app/modules/pages/accounting/list-payment/list-payment.component.ts","./src/app/modules/pages/accounting/list-payment/list-payment.component.html","./src/app/modules/pages/accounting/list-payment/list-payment.module.ts","./src/app/modules/pages/accounting/list-payment/list-payment-routing.module.ts"],"names":[],"mappings":"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","file":"default~applications-applications-module~list-payment-list-payment-module-es2015.js","sourcesContent":["import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTable, MatTableDataSource } from '@angular/material/table';\nimport { Payment } from '@models';\nimport { ENDPOINTS } from '@shared';\nimport { ApiService } from '@services';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-list-payment',\n  templateUrl: './list-payment.component.html',\n  styleUrls: ['./list-payment.component.scss']\n})\nexport class ListPaymentComponent implements OnInit {\n\n  @ViewChild(MatPaginator, { static: false }) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: false }) sort: MatSort;\n  @ViewChild(MatTable, { static: false }) table: MatTable<Object>;\n  dataSource: MatTableDataSource<Payment>\n  displayedColumns: string[] = ['referenceCode', 'typeOfApplication', 'brand', 'typeOfMedium', 'companyName', 'paymentStatus'];\n  paymentList = [];\n  pageSize = 10;\n  pageNo = 0;\n  currentPage = 1;\n  totalItems = 0;\n  pageSizeOptions: number[] = [10, 20, 50];\n\n  constructor(\n    private router: Router,\n    private apiService: ApiService\n  ) { }\n\n  ngOnInit(): void {\n    this.getS1PaymentList();\n  }\n\n  getS1PaymentList() {\n    let endpoint = `?page=${this.currentPage}&size=${this.pageSize}`;\n    this.apiService.findAll(ENDPOINTS.accountingPaymentForApprovals + endpoint).subscribe((res: any) => {\n      this.paymentList = res.responseData.data;\n      console.log('payment list:: ', this.paymentList);\n\n      this.dataSource = new MatTableDataSource<Payment>(this.paymentList);\n      // this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n    });\n    console.log('Whuy', this.paymentList)\n  }\n\n  pageEvents(event: any) {\n    this.pageSize = event.pageSize;\n\n    if (event.pageIndex > this.pageNo) {\n      this.pageNo++;\n    } else {\n      this.pageNo--;\n    }\n\n    if (event.pageSize > event.length) {\n      this.pageNo = 0;\n    }\n\n    this.getS1PaymentList();\n  }\n\n  getPaymentDetails(id) {\n    this.router.navigate(['asc/page/accounting/update/', id]);\n  }\n\n  public doFilter = (value: string) => {\n    this.dataSource.filter = value.trim().toLocaleLowerCase();\n   }\n\n\n\n}\n","<form>\n  <div class=\"container-fluid\">\n    <div class=\"row\">\n      <div class=\"col-md-12 title\">\n        <mat-label>\n          <mat-icon>view_list</mat-icon>  PROOF OF PAYMENTS\n        </mat-label>\n\n        <!-- <button class=\"button-right button-red\" mat-raised-button [routerLink]=\"['/asc/page/accounting/add']\">\n          <mat-icon>add</mat-icon> NEW PAYMENT\n        </button> -->\n      </div>\n    </div>\n    <br>\n\n    <div class=\"col-md-12\" fxLayout fxLayoutAlign=\"center center\">\n      <mat-form-field>\n        <input matInput type=\"text\" (keyup)=\"doFilter($event.target.value)\" placeholder=\"Search\">\n      </mat-form-field>\n    </div>\n\n    <div class=\"mat-elevation-z8 fields\">\n      <table mat-table [dataSource]=\"dataSource\" matSort>\n\n        <ng-container matColumnDef=\"referenceCode\">\n          <th mat-header-cell *matHeaderCellDef > REFERENCE CODE </th>\n          <td mat-cell *matCellDef=\"let element\" (click)=\"getPaymentDetails(element.id)\">\n            {{ element?.applicationForm?.referenceCode }} </td>\n        </ng-container>\n        <ng-container matColumnDef=\"typeOfApplication\">\n          <th mat-header-cell *matHeaderCellDef > TYPE OF APPLICATION </th>\n          <td mat-cell *matCellDef=\"let element\" (click)=\"getPaymentDetails(element.id)\">\n            {{ element?.applicationForm?.applicationType?.description }} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"brand\">\n          <th mat-header-cell *matHeaderCellDef > BRAND </th>\n          <td mat-cell *matCellDef=\"let element\" (click)=\"getPaymentDetails(element.id)\">\n            {{ element?.applicationForm?.brand?.description }} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"typeOfMedium\">\n          <th mat-header-cell *matHeaderCellDef > TYPE OF MEDIUM </th>\n          <td mat-cell *matCellDef=\"let element\" (click)=\"getPaymentDetails(element.id)\">\n            {{ element?.applicationForm?.refTypeOfMedium }} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"companyName\">\n          <th mat-header-cell *matHeaderCellDef > PRESENTOR'S COMPANY NAME </th>\n          <td mat-cell *matCellDef=\"let element\" (click)=\"getPaymentDetails(element.id)\">\n            {{ element?.applicationForm?.applicationOwner?.company?.companyName }} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"paymentStatus\">\n          <th mat-header-cell *matHeaderCellDef > PAYMENT STATUS </th>\n          <td mat-cell *matCellDef=\"let element\" (click)=\"getPaymentDetails(element.id)\">\n            {{ element?.paymentStatus }} </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n      </table>\n      <div class=\"no-record\" [hidden]=\"dataSource && dataSource?.data?.length > 0\">\n        No record found.\n      </div>\n      <mat-paginator [pageSize]=\"pageSize\" [pageIndex]=\"pageNo\" [length]=\"totalItems\"\n      [pageSizeOptions]=\"pageSizeOptions\" (page)=\"pageEvents($event)\">\n      </mat-paginator>\n\n    </div>\n  </div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ListPaymentRoutingModule } from './list-payment-routing.module';\nimport { ListPaymentComponent } from './list-payment.component';\nimport { AngularMaterialModule } from '@shared';\n\n\n@NgModule({\n  declarations: [ListPaymentComponent],\n  imports: [\n    CommonModule,\n    ListPaymentRoutingModule,\n    AngularMaterialModule\n  ]\n})\nexport class ListPaymentModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ListPaymentComponent } from './list-payment.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ListPaymentComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ListPaymentRoutingModule { }\n"],"sourceRoot":"webpack:///"}