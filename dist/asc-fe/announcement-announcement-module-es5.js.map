<<<<<<< HEAD
{"version":3,"sources":["webpack:///src/app/modules/pages/announcement/announcement.module.ts","webpack:///src/app/modules/pages/announcement/announcement.component.ts","webpack:///src/app/modules/pages/announcement/announcement.component.html","webpack:///src/app/modules/pages/announcement/announcement-routing.module.ts","webpack:///src/app/core/models/announcement.model.ts"],"names":["AnnouncementModule","AnnouncementComponent","apiService","spinner","announcement","announcementList","announcementListFilter","viewCounter","getAnnouncementList","show","findAll","activeAnnouncements","subscribe","res","data","slice","setTimeout","hide","counter","update","announcements","$event","pageIndex","pageSize","onPageChange","routes","path","component","AnnouncementRoutingModule","forChild","Announcement"],"mappings":"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","file":"announcement-announcement-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { AnnouncementRoutingModule } from './announcement-routing.module';\r\nimport { AngularMaterialModule } from '@shared';\r\nimport { AnnouncementComponent } from './announcement.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [AnnouncementComponent],\r\n  imports: [\r\n    CommonModule,\r\n    AnnouncementRoutingModule,\r\n    AngularMaterialModule\r\n  ]\r\n})\r\nexport class AnnouncementModule { }\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { ApiService } from '@services';\r\nimport { ENDPOINTS } from '@shared';\r\nimport { Announcement } from 'app/core/models/announcement.model';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\n\r\n@Component({\r\n  selector: 'app-announcement',\r\n  templateUrl: './announcement.component.html',\r\n  styleUrls: ['./announcement.component.scss']\r\n})\r\nexport class AnnouncementComponent implements OnInit {\r\n  @ViewChild(MatPaginator, { static: false }) paginator: MatPaginator;\r\n  dataSource: MatTableDataSource<Announcement>;\r\n  announcement = new Announcement();\r\n  announcementList = [];\r\n  announcementListFilter = [];\r\n  viewCounter: number = 0;\r\n  constructor(\r\n    private apiService: ApiService,\r\n    private spinner: NgxSpinnerService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getAnnouncementList();\r\n  }\r\n\r\n  getAnnouncementList(): void {\r\n    this.spinner.show();\r\n    this.apiService.findAll(ENDPOINTS.activeAnnouncements).subscribe(\r\n      (res: any) => {\r\n        if (res.data) {\r\n          this.announcement = res.data;\r\n          this.announcementList = res.data;\r\n          this.announcementListFilter =  this.announcementList.slice(0*5, 0*5 + 5);\r\n          setTimeout(() => {\r\n            this.spinner.hide();\r\n          }, 1);\r\n        }\r\n      }\r\n    )\r\n  }\r\n\r\n  countView(data): void{\r\n    this.announcement = data;\r\n    data.counter++;\r\n    this.apiService.update(ENDPOINTS.announcements, this.announcement).subscribe(\r\n      (res:any) => {});\r\n  }\r\n\r\n  onPageChange($event) {\r\n    this.announcementListFilter =  this.announcementList.slice($event.pageIndex*$event.pageSize, $event.pageIndex*$event.pageSize + $event.pageSize);\r\n  }\r\n\r\n}\r\n","<form>\r\n  <div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12 title\">\r\n        <mat-label>\r\n          <mat-icon>announcement</mat-icon> Announcements\r\n        </mat-label>\r\n      </div>\r\n    </div>\r\n    <hr>\r\n    <div class=\"announcement-content\" *ngFor=\"let announcement of announcementListFilter\">\r\n\r\n      <div class=\"announcement-title\">\r\n        <h3>\r\n          <span class=\"material-icons\">campaign</span><a [href]=\"announcement?.link\" (click)=\"countView(announcement);\" target=\"_blank\">{{announcement?.title}}</a>\r\n          <p><span class=\"material-icons\">event_available</span>{{announcement.postingDate| date:'fullDate'}}</p>\r\n          <p><span class=\"material-icons\">visibility</span> {{announcement.counter}}&nbsp;&nbsp;&nbsp; <label style=\"color: black; font-weight: 800;\">|</label> &nbsp;&nbsp;&nbsp;</p> \r\n        </h3>\r\n      </div>\r\n      <div class=\"announcement-details\">\r\n        <p>{{announcement?.details}}</p>\r\n      </div>\r\n\r\n      <div class=\"link-content\">\r\n      </div>\r\n\r\n    </div>\r\n    <div class=\"no-announcements\" *ngIf=\"announcementList.length==0\">No announcements.</div>\r\n\r\n\r\n    <hr>\r\n    <mat-paginator \r\n              (page)=\"onPageChange($event)\"\r\n              [length]=\"announcementListFilter.length\"\r\n              [pageSize]=\"5\"\r\n              [pageSizeOptions]=\"[5, 10, 25]\">\r\n</mat-paginator>\r\n  </div>\r\n \r\n\r\n<!-- <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons></mat-paginator> -->\r\n</form>\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AnnouncementComponent } from './announcement.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AnnouncementComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AnnouncementRoutingModule { }\r\n","export class Announcement {\r\n  id: number;\r\n  details: string;\r\n  noOfView: number;\r\n  postingDate: Date;\r\n  status: string;\r\n  title: string;\r\n  link: string;\r\n  counter: number;\r\n}\r\n"]}
=======
{"version":3,"sources":["webpack:///src/app/modules/pages/announcement/announcement.module.ts","webpack:///src/app/modules/pages/announcement/announcement.component.ts","webpack:///src/app/modules/pages/announcement/announcement.component.html","webpack:///src/app/modules/pages/announcement/announcement-routing.module.ts","webpack:///src/app/core/models/announcement.model.ts"],"names":["AnnouncementModule","AnnouncementComponent","apiService","spinner","announcement","announcementList","announcementListFilter","viewCounter","getAnnouncementList","show","findAll","activeAnnouncements","subscribe","res","data","slice","setTimeout","hide","counter","update","announcements","$event","pageIndex","pageSize","onPageChange","routes","path","component","AnnouncementRoutingModule","forChild","Announcement"],"mappings":";;;;;;;;;;;;;;;;;;;;MAAA;MAAA;;;MAAA;QAAA;MAAA;MAAA;;;MAAA;MAAA;MAAA;MAAA;;;MAAA;MAAA;MAAA;MAAA;;;MAAA;MAAA;MAAA;MAAA;;;MAAA;MAAA;MAAA;MAAA;;;MAAA;MAAA;MAAA;;MAgBO;QAAA,IAAMA,kBAAN;UAAA;QAAA;;;gBAAMA;;;;6BAAAA,kB;UAAkB,C;UAAA,UANpB,CACP,4DADO,EAEP,sFAFO,EAGP,6DAHO,CAMoB;;;OAAxB;;;4HAAMA,kB,EAAkB;UAAA,eAPd,6EAOc;UAPO,UAElC,4DAFkC,EAGlC,sFAHkC,EAIlC,6DAJkC;QAOP,C;MAHN,C;;;;;;;;;;;;;;;;;MCbzB;MAAA;;;MAAA;QAAA;MAAA;MAAA;;;MAAA;MAAA;MAAA;MAAA;;;MAAA;MAAA;MAAA;MAAA;;;MAAA;MAAA;MAAA;MAAA;;;MAAA;MAAA;MAAA;MAAA;;;MAAA;MAAA;MAAA;MAAA;;;MAAA;MAAA;MAAA;MAAA;;;MAAA;MAAA;MAAA;MAAA;;;MAAA;MAAA;MAAA;MAAA;;;MAAA;MAAA;MAAA;MAAA;;;MAAA;MAAA;MAAA;;;;;;UCUI;;UAEE;;UACE;;UACE;;UAA6B;;UAAQ;;UAAO;;UAA+B;YAAA;;YAAA;;YAAA;;YAAA;UAAA;;UAAmD;;UAAuB;;UACrJ;;UAAG;;UAA6B;;UAAe;;UAAO;;;;UAA6C;;UACnG;;UAAG;;UAA6B;;UAAU;;UAAQ;;UAA2C;;UAA+C;;UAAC;;UAAS;;UAAkB;;UAC1K;;UACF;;UACA;;UACE;;UAAG;;UAAyB;;UAC9B;;UAEA;;UAGF;;;;;;UAZqD;;UAAA;;UAA+E;;UAAA;;UACxE;;UAAA;;UACJ;;UAAA;;UAIjD;;UAAA;;;;;;UAOP;;UAAiE;;UAAiB;;;;;;;;MDd/E;QAAA,IAAMC,qBAAN;UAOL,+BACUC,UADV,EAEUC,OAFV,EAEoC;YAAA;;YAD1B,KAAAD,UAAA,GAAAA,UAAA;YACA,KAAAC,OAAA,GAAAA,OAAA;YANV,KAAAC,YAAA,GAAe,IAAI,+EAAJ,EAAf;YACA,KAAAC,gBAAA,GAAmB,EAAnB;YACA,KAAAC,sBAAA,GAAyB,EAAzB;YACA,KAAAC,WAAA,GAAsB,CAAtB;UAIK;;UAVA;YAAA;YAAA,OAYL,oBAAQ;cACN,KAAKC,mBAAL;YACD;UAdI;YAAA;YAAA,OAgBL,+BAAmB;cAAA;;cACjB,KAAKL,OAAL,CAAaM,IAAb;cACA,KAAKP,UAAL,CAAgBQ,OAAhB,CAAwB,kDAAUC,mBAAlC,EAAuDC,SAAvD,CACE,UAACC,GAAD,EAAc;gBACZ,IAAIA,GAAG,CAACC,IAAR,EAAc;kBACZ,KAAI,CAACV,YAAL,GAAoBS,GAAG,CAACC,IAAxB;kBACA,KAAI,CAACT,gBAAL,GAAwBQ,GAAG,CAACC,IAA5B;kBACA,KAAI,CAACR,sBAAL,GAA+B,KAAI,CAACD,gBAAL,CAAsBU,KAAtB,CAA4B,IAAE,CAA9B,EAAiC,IAAE,CAAF,GAAM,CAAvC,CAA/B;kBACAC,UAAU,CAAC,YAAM;oBACf,KAAI,CAACb,OAAL,CAAac,IAAb;kBACD,CAFS,EAEP,CAFO,CAAV;gBAGD;cACF,CAVH;YAYD;UA9BI;YAAA;YAAA,OAgCL,mBAAUH,IAAV,EAAc;cACZ,KAAKV,YAAL,GAAoBU,IAApB;cACAA,IAAI,CAACI,OAAL;cACA,KAAKhB,UAAL,CAAgBiB,MAAhB,CAAuB,kDAAUC,aAAjC,EAAgD,KAAKhB,YAArD,EAAmEQ,SAAnE,CACE,UAACC,GAAD,EAAa,CAAE,CADjB;YAED;UArCI;YAAA;YAAA,OAuCL,sBAAaQ,MAAb,EAAqB;cACnB,KAAKf,sBAAL,GAA+B,KAAKD,gBAAL,CAAsBU,KAAtB,CAA4BM,MAAM,CAACC,SAAP,GAAiBD,MAAM,CAACE,QAApD,EAA8DF,MAAM,CAACC,SAAP,GAAiBD,MAAM,CAACE,QAAxB,GAAmCF,MAAM,CAACE,QAAxG,CAA/B;YACD;UAzCI;;UAAA;QAAA;;;2BAAMtB,qB,EAAqB,qH,EAAA,8H;QAAA,C;;;gBAArBA,qB;UAAqB,iC;UAAA;YAAA;wEACrB,wE,EAAc,I;;;;;;;;;;;;;;cCd3B;;cACE;;cACE;;cACE;;cACE;;cACE;;cAAU;;cAAY;;cAAY;;cACpC;;cACF;;cACF;;cACA;;cACA;;cAiBA;;cAGA;;cACA;;cACU;gBAAA,OAAQ,IAAAuB,YAAA,QAAR;cAA4B,CAA5B;;cAId;;cACE;;cAIF;;;;cA/BsC;;cAAA;;cAiBJ;;cAAA;;cAMpB;;cAAA,sGAAwC,UAAxC,EAAwC,CAAxC,EAAwC,iBAAxC,EAAwC,qEAAxC;;;;;;;;ODpBP;;;;;;;;;;;;;;;;;MEbP;MAAA;;;MAAA;QAAA;MAAA;MAAA;;;MAAA;MAAA;MAAA;MAAA;;;MAAA;MAAA;MAAA;MAAA;;;MAAA;MAAA;MAAA;;MAIA,IAAMC,MAAM,GAAW,CACrB;QACEC,IAAI,EAAE,EADR;QAEEC,SAAS,EAAE;MAFb,CADqB,CAAvB;;MAWO;QAAA,IAAMC,yBAAN;UAAA;QAAA;;;gBAAMA;;;;6BAAAA,yB;UAAyB,C;UAAA,UAH3B,CAAC,6DAAaC,QAAb,CAAsBJ,MAAtB,CAAD,CAG2B,EAF1B,4DAE0B;;;OAA/B;;;4HAAMG,yB,EAAyB;UAAA;UAAA,UAF1B,4DAE0B;QAAA,C;MAFd,C;;;;;;;;;;;;;;;;;MCbxB;MAAA;;;MAAA;QAAA;MAAA;;UAAaE,Y","file":"announcement-announcement-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { AnnouncementRoutingModule } from './announcement-routing.module';\r\nimport { AngularMaterialModule } from '@shared';\r\nimport { AnnouncementComponent } from './announcement.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [AnnouncementComponent],\r\n  imports: [\r\n    CommonModule,\r\n    AnnouncementRoutingModule,\r\n    AngularMaterialModule\r\n  ]\r\n})\r\nexport class AnnouncementModule { }\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { ApiService } from '@services';\r\nimport { ENDPOINTS } from '@shared';\r\nimport { Announcement } from 'app/core/models/announcement.model';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\n\r\n@Component({\r\n  selector: 'app-announcement',\r\n  templateUrl: './announcement.component.html',\r\n  styleUrls: ['./announcement.component.scss']\r\n})\r\nexport class AnnouncementComponent implements OnInit {\r\n  @ViewChild(MatPaginator, { static: false }) paginator: MatPaginator;\r\n  dataSource: MatTableDataSource<Announcement>;\r\n  announcement = new Announcement();\r\n  announcementList = [];\r\n  announcementListFilter = [];\r\n  viewCounter: number = 0;\r\n  constructor(\r\n    private apiService: ApiService,\r\n    private spinner: NgxSpinnerService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getAnnouncementList();\r\n  }\r\n\r\n  getAnnouncementList(): void {\r\n    this.spinner.show();\r\n    this.apiService.findAll(ENDPOINTS.activeAnnouncements).subscribe(\r\n      (res: any) => {\r\n        if (res.data) {\r\n          this.announcement = res.data;\r\n          this.announcementList = res.data;\r\n          this.announcementListFilter =  this.announcementList.slice(0*5, 0*5 + 5);\r\n          setTimeout(() => {\r\n            this.spinner.hide();\r\n          }, 1);\r\n        }\r\n      }\r\n    )\r\n  }\r\n\r\n  countView(data): void{\r\n    this.announcement = data;\r\n    data.counter++;\r\n    this.apiService.update(ENDPOINTS.announcements, this.announcement).subscribe(\r\n      (res:any) => {});\r\n  }\r\n\r\n  onPageChange($event) {\r\n    this.announcementListFilter =  this.announcementList.slice($event.pageIndex*$event.pageSize, $event.pageIndex*$event.pageSize + $event.pageSize);\r\n  }\r\n\r\n}\r\n","<form>\r\n  <div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12 title\">\r\n        <mat-label>\r\n          <mat-icon>announcement</mat-icon> Announcements\r\n        </mat-label>\r\n      </div>\r\n    </div>\r\n    <hr>\r\n    <div class=\"announcement-content\" *ngFor=\"let announcement of announcementListFilter\">\r\n\r\n      <div class=\"announcement-title\">\r\n        <h3>\r\n          <span class=\"material-icons\">campaign</span><a [href]=\"announcement?.link\" (click)=\"countView(announcement);\" target=\"_blank\">{{announcement?.title}}</a>\r\n          <p><span class=\"material-icons\">event_available</span>{{announcement.postingDate| date:'fullDate'}}</p>\r\n          <p><span class=\"material-icons\">visibility</span> {{announcement.counter}}&nbsp;&nbsp;&nbsp; <label style=\"color: black; font-weight: 800;\">|</label> &nbsp;&nbsp;&nbsp;</p> \r\n        </h3>\r\n      </div>\r\n      <div class=\"announcement-details\">\r\n        <p>{{announcement?.details}}</p>\r\n      </div>\r\n\r\n      <div class=\"link-content\">\r\n      </div>\r\n\r\n    </div>\r\n    <div class=\"no-announcements\" *ngIf=\"announcementList.length==0\">No announcements.</div>\r\n\r\n\r\n    <hr>\r\n    <mat-paginator \r\n              (page)=\"onPageChange($event)\"\r\n              [length]=\"announcementListFilter.length\"\r\n              [pageSize]=\"5\"\r\n              [pageSizeOptions]=\"[5, 10, 25]\">\r\n</mat-paginator>\r\n  </div>\r\n \r\n\r\n<!-- <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons></mat-paginator> -->\r\n</form>\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AnnouncementComponent } from './announcement.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AnnouncementComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AnnouncementRoutingModule { }\r\n","export class Announcement {\r\n  id: number;\r\n  details: string;\r\n  noOfView: number;\r\n  postingDate: Date;\r\n  status: string;\r\n  title: string;\r\n  link: string;\r\n  counter: number;\r\n}\r\n"]}
>>>>>>> 53dc5baaa640736d2cc27f9eee7c34fe4a9274c2
