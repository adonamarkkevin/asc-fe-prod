{"version":3,"sources":["webpack:///src/app/modules/pages/announcement/announcement.module.ts","webpack:///src/app/modules/pages/announcement/announcement.component.ts","webpack:///src/app/modules/pages/announcement/announcement.component.html","webpack:///src/app/modules/pages/announcement/announcement-routing.module.ts","webpack:///src/app/core/models/announcement.model.ts"],"names":["AnnouncementModule","AnnouncementComponent","apiService","spinner","announcement","announcementList","announcementListFilter","viewCounter","getAnnouncementList","show","findAll","activeAnnouncements","subscribe","res","data","slice","setTimeout","hide","counter","update","announcements","$event","pageIndex","pageSize","onPageChange","routes","path","component","AnnouncementRoutingModule","forChild","Announcement"],"mappings":"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","file":"announcement-announcement-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AnnouncementRoutingModule } from './announcement-routing.module';\nimport { AngularMaterialModule } from '@shared';\nimport { AnnouncementComponent } from './announcement.component';\n\n\n@NgModule({\n  declarations: [AnnouncementComponent],\n  imports: [\n    CommonModule,\n    AnnouncementRoutingModule,\n    AngularMaterialModule\n  ]\n})\nexport class AnnouncementModule { }\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { ApiService } from '@services';\nimport { ENDPOINTS } from '@shared';\nimport { Announcement } from 'app/core/models/announcement.model';\nimport { NgxSpinnerService } from 'ngx-spinner';\n\n@Component({\n  selector: 'app-announcement',\n  templateUrl: './announcement.component.html',\n  styleUrls: ['./announcement.component.scss']\n})\nexport class AnnouncementComponent implements OnInit {\n  @ViewChild(MatPaginator, { static: false }) paginator: MatPaginator;\n  dataSource: MatTableDataSource<Announcement>;\n  announcement = new Announcement();\n  announcementList = [];\n  announcementListFilter = [];\n  viewCounter: number = 0;\n  constructor(\n    private apiService: ApiService,\n    private spinner: NgxSpinnerService\n  ) { }\n\n  ngOnInit(): void {\n    this.getAnnouncementList();\n  }\n\n  getAnnouncementList(): void {\n    this.spinner.show();\n    this.apiService.findAll(ENDPOINTS.activeAnnouncements).subscribe(\n      (res: any) => {\n        if (res.data) {\n          this.announcement = res.data;\n          this.announcementList = res.data;\n          this.announcementListFilter =  this.announcementList.slice(0*5, 0*5 + 5);\n          setTimeout(() => {\n            this.spinner.hide();\n          }, 1);\n        }\n      }\n    )\n  }\n\n  countView(data): void{\n    this.announcement = data;\n    data.counter++;\n    this.apiService.update(ENDPOINTS.announcements, this.announcement).subscribe(\n      (res:any) => {});\n  }\n\n  onPageChange($event) {\n    this.announcementListFilter =  this.announcementList.slice($event.pageIndex*$event.pageSize, $event.pageIndex*$event.pageSize + $event.pageSize);\n  }\n\n}\n","<form>\n  <div class=\"container-fluid\">\n    <div class=\"row\">\n      <div class=\"col-md-12 title\">\n        <mat-label>\n          <mat-icon>announcement</mat-icon> Announcements\n        </mat-label>\n      </div>\n    </div>\n    <hr>\n    <div class=\"announcement-content\" *ngFor=\"let announcement of announcementListFilter\">\n\n      <div class=\"announcement-title\">\n        <h3>\n          <span class=\"material-icons\">campaign</span><a [href]=\"announcement?.link\" (click)=\"countView(announcement);\" target=\"_blank\">{{announcement?.title}}</a>\n          <p><span class=\"material-icons\">event_available</span>{{announcement.postingDate| date:'fullDate'}}</p>\n          <p><span class=\"material-icons\">visibility</span> {{announcement.counter}}&nbsp;&nbsp;&nbsp; <label style=\"color: black; font-weight: 800;\">|</label> &nbsp;&nbsp;&nbsp;</p> \n        </h3>\n      </div>\n      <div class=\"announcement-details\">\n        <p>{{announcement?.details}}</p>\n      </div>\n\n      <div class=\"link-content\">\n      </div>\n\n    </div>\n    <div class=\"no-announcements\" *ngIf=\"announcementList.length==0\">No announcements.</div>\n\n\n    <hr>\n    <mat-paginator \n              (page)=\"onPageChange($event)\"\n              [length]=\"announcementListFilter.length\"\n              [pageSize]=\"5\"\n              [pageSizeOptions]=\"[5, 10, 25]\">\n</mat-paginator>\n  </div>\n \n\n<!-- <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons></mat-paginator> -->\n</form>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AnnouncementComponent } from './announcement.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AnnouncementComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AnnouncementRoutingModule { }\n","export class Announcement {\n  id: number;\n  details: string;\n  noOfView: number;\n  postingDate: Date;\n  status: string;\n  title: string;\n  link: string;\n  counter: number;\n}\n"]}