{"version":3,"sources":["./src/app/modules/pages/maintenance/payment-type/payment-type.component.ts","./src/app/modules/pages/maintenance/payment-type/payment-type.component.html"],"names":[],"mappings":"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","file":"default~applications-applications-module~payment-type-payment-type-module-es2015.js","sourcesContent":["import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { PaymentType } from '@models';\nimport { STATUSES, ENDPOINTS, COMMON_FUNCTION } from '@shared';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ApiService, SweetAlertService } from '@services';\nimport { FormListComponent } from '@fragments';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-payment-type',\n  templateUrl: './payment-type.component.html',\n  styleUrls: ['./payment-type.component.scss']\n})\nexport class PaymentTypeComponent implements OnInit {\n\n  @ViewChild(FormListComponent) formListComponent: FormListComponent;\n  dataSource: MatTableDataSource<PaymentType>;\n  displayedColumns: string[] = [\n    'paymentDescription',\n    'amount',\n    'bankBranch',\n    'bankName',\n    'controlNo',\n    'fundTransferDate',\n    'promisorryDate',\n    'referenceNo',\n    'status'\n  ];\n  statusList = [...STATUSES];\n\n  paymentType = new PaymentType();\n  paymentTypeList = [];\n\n  paymentTypeForm: FormGroup;\n\n  constructor(\n    private apiService: ApiService,\n    private formBuilder: FormBuilder,\n    private sweetAlertService: SweetAlertService\n  ) { }\n\n  ngOnInit() {\n    this.getList();\n    this.setFormValidator();\n  }\n\n  getList(): void {\n    this.apiService.findAll(ENDPOINTS.paymentType).subscribe((res: any) => {\n      this.paymentTypeList = res.responseData.data;\n      this.dataSource = new MatTableDataSource<PaymentType>(res.responseData.data);\n      this.dataSource.paginator = this.formListComponent.paginator;\n      this.dataSource.sort = this.formListComponent.sort;\n    });\n  }\n\n  save(): void {\n    this.apiService.save(ENDPOINTS.paymentType, this.paymentType).subscribe(\n      (res: any) => {\n        if (res !== undefined) {\n          this.sweetAlertService.success(res);\n        }\n      }, (err: any) => {\n        this.sweetAlertService.error(err);\n      }, () => {\n        // actions after subscription\n        this.resetFormValidator();\n        this.getList();\n      });\n  }\n\n  getPaymentType(): void {\n    this.apiService.findById(ENDPOINTS.paymentType, this.formListComponent.idForUpdate).subscribe((res: any) => {\n      if (res) {\n        this.paymentType = res.responseData.data;\n      }\n    });\n  }\n\n  update(): void {\n    this.apiService.update(ENDPOINTS.paymentType, this.paymentType).subscribe(\n      (res: any) => {\n        if (res !== undefined) {\n          this.sweetAlertService.success(res);\n        }\n      }, (err: any) => {\n        this.sweetAlertService.error(err);\n      }, () => {\n        // actions after subscription\n        this.resetFormValidator();\n        this.getList();\n      });\n  }\n\n  setFormValidator(): void {\n    this.paymentType.status = COMMON_FUNCTION.ACTIVE;\n    this.paymentTypeForm = this.formBuilder.group({\n      paymentDescription: ['', Validators.required],\n      amount: [''],\n      bankBranch: [''],\n      bankName: [''],\n      controlNo: [''],\n      fundTransferDate: [''],\n      promisorryDate: [''],\n      referenceNo: [''],\n      status: [''],\n    });\n  }\n\n  resetFormValidator(): void {\n    this.paymentType = new PaymentType();\n    this.paymentType.status = COMMON_FUNCTION.ACTIVE;\n    this.paymentTypeForm.markAsUntouched();\n    this.paymentTypeForm.markAsPristine();\n  }\n\n  delete() {\n    Swal.fire({\n      text: 'Are you sure you want to delete this payment type?',\n      icon: 'question',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Confirm'\n    }).then((result) => {\n      if (result.value) {\n        this.apiService.deleteById(ENDPOINTS.paymentType, this.paymentType.id).subscribe(\n          () => {\n            this.sweetAlertService.customSuccessMessage('Payment type successfully deleted.');\n            this.resetFormValidator();\n            this.getList();\n          }\n        );\n      }\n    });\n  }\n\n}\n","<form>\n  <div class=\"container-fluid\">\n    <div class=\"row\">\n      <div class=\"col-md-12 title\">\n        <mat-label>\n          <mat-icon>payment</mat-icon> Payment Type\n        </mat-label>\n      </div>\n    </div>\n    <hr>\n\n    <form [formGroup]=\"paymentTypeForm\">\n      <div class=\"row\">\n        <mat-form-field class=\"col-md-8\" appearance=\"outline\">\n          <mat-label>Payment Description: <span class=\"required-field\">*</span></mat-label>\n          <input matInput [(ngModel)]=\"paymentType.paymentDescription\" name=\"paymentDescription\"\n            formControlName=\"paymentDescription\">\n        </mat-form-field>\n\n        <mat-form-field class=\"col-md-4\" appearance=\"outline\" *ngIf=\"paymentType.id\">\n          <mat-label>Status</mat-label>\n          <mat-select [(ngModel)]=\"paymentType.status\" name=\"status\" formControlName=\"status\">\n            <mat-option *ngFor=\"let i of statusList\" [value]=\"i.status\">\n              {{i.status}}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n      </div>\n\n      <div class=\"row\">\n        <mat-slide-toggle class=\"col-md-5\" [(ngModel)]=\"paymentType.amount\" [checked]=\"paymentType.amount\" color=\"warn\"\n          formControlName=\"amount\"><b>Has Amount</b>\n        </mat-slide-toggle>\n        <mat-slide-toggle class=\"col-md-5\" [(ngModel)]=\"paymentType.bankBranch\" [checked]=\"paymentType.bankBranch\"\n          color=\"warn\" formControlName=\"bankBranch\"><b>Has Bank Branch</b>\n        </mat-slide-toggle>\n        <br>\n        <mat-slide-toggle class=\"col-md-5\" [(ngModel)]=\"paymentType.bankName\" [checked]=\"paymentType.bankName\"\n          color=\"warn\" formControlName=\"bankName\"><b>Has Bank Name</b></mat-slide-toggle>\n        <mat-slide-toggle class=\"col-md-5\" [(ngModel)]=\"paymentType.controlNo\" [checked]=\"paymentType.controlNo\"\n          color=\"warn\" formControlName=\"controlNo\"><b>Has Control Number</b>\n        </mat-slide-toggle>\n        <br>\n        <mat-slide-toggle class=\"col-md-5\" [(ngModel)]=\"paymentType.fundTransferDate\"\n          [checked]=\"paymentType.fundTransferDate\" color=\"warn\" formControlName=\"fundTransferDate\"><b>Has Fund Transfer\n            Date</b></mat-slide-toggle>\n        <mat-slide-toggle class=\"col-md-5\" [(ngModel)]=\"paymentType.promisorryDate\"\n          [checked]=\"paymentType.promisorryDate\" color=\"warn\" formControlName=\"promisorryDate\"><b>Has Promisorry\n            Date</b></mat-slide-toggle>\n        <br>\n        <mat-slide-toggle class=\"col-md-5\" [(ngModel)]=\"paymentType.referenceNo\" [checked]=\"paymentType.referenceNo\"\n          color=\"warn\" formControlName=\"referenceNo\"><b>Has Reference No\n          </b></mat-slide-toggle>\n      </div>\n    </form>\n\n    <app-form-action-buttons [childObject]=\"paymentType\" [childForm]=\"paymentTypeForm\" (saveFunction)=\"save()\"\n      (updateFunction)=\"update()\" (cancelFunction)=\"resetFormValidator()\" (deleteFunction)=\"delete()\"></app-form-action-buttons>\n    <br>\n    <app-form-list [dataSource]=\"dataSource\" [displayedColumns]=\"displayedColumns\"\n      (selectInListFunction)=\"getPaymentType()\"></app-form-list>\n  </div>\n</form>\n"],"sourceRoot":"webpack:///"}