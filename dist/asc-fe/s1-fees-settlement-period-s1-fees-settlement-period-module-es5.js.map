{"version":3,"sources":["webpack:///src/app/modules/fragments/index.ts","webpack:///src/app/modules/pages/maintenance/s1-fees-settlement-period/s1-fees-settlement-period.component.html","webpack:///src/app/modules/pages/maintenance/s1-fees-settlement-period/s1-fees-settlement-period.component.ts","webpack:///src/app/modules/pages/maintenance/s1-fees-settlement-period/s1-fees-settlement-period-routing.module.ts","webpack:///src/app/modules/pages/maintenance/s1-fees-settlement-period/s1-fees-settlement-period.component.scss","webpack:///src/app/modules/pages/maintenance/s1-fees-settlement-period/s1-fees-settlement-period.module.ts"],"names":["S1FeesSettlementPeriodComponent","apiService","formBuilder","sweetAlertService","validateFieldService","displayedColumns","statusList","s1FeeSettlementPeriod","s1FeeSettlementPeriodList","getList","setFormValidator","findAll","s1FeesSettlementPeriod","subscribe","res","responseData","data","dataSource","paginator","formListComponent","sort","save","undefined","success","err","Number","noOfDays","noOfHours","error","message","resetFormValidator","findById","idForUpdate","console","log","update","s1FeeSettlementPeriodForm","group","required","markAsUntouched","markAsPristine","fire","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","value","deleteById","id","customSuccessMessage","selector","template","routes","path","component","S1FeesSettlementPeriodRoutingModule","imports","forChild","exports","S1FeesSettlementPeriodModule","declarations"],"mappings":"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","file":"s1-fees-settlement-period-s1-fees-settlement-period-module-es5.js","sourcesContent":["export * from './form-action-buttons/form-action-buttons.component';\r\nexport * from './form-list/form-list.component';","export default \"<form>\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12 title\\\">\\r\\n                <mat-label>\\r\\n                    S1 Fees Settlement Period\\r\\n                </mat-label>\\r\\n            </div>\\r\\n        </div>\\r\\n        <hr>\\r\\n\\r\\n        <form [formGroup]=\\\"s1FeeSettlementPeriodForm\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\">\\r\\n                    <mat-label>Number of Hours <span class=\\\"required-field\\\">*</span></mat-label>\\r\\n                    <input matInput [(ngModel)]=\\\"s1FeeSettlementPeriod.noOfHours\\\" name=\\\"noOfHours\\\"\\r\\n                        (keydown)=\\\"validateFieldService.numbersOnly($event)\\\" formControlName=\\\"noOfHours\\\">\\r\\n                </mat-form-field>\\r\\n\\r\\n                <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\">\\r\\n                    <mat-label>Number of Days <span class=\\\"required-field\\\">*</span></mat-label>\\r\\n                    <input matInput [(ngModel)]=\\\"s1FeeSettlementPeriod.noOfDays\\\" name=\\\"noOfDays\\\"\\r\\n                        (keydown)=\\\"validateFieldService.numbersOnly($event)\\\" formControlName=\\\"noOfDays\\\">\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n        </form>\\r\\n\\r\\n        <app-form-action-buttons [childObject]=\\\"s1FeeSettlementPeriod\\\" [childForm]=\\\"s1FeeSettlementPeriodForm\\\"\\r\\n            (saveFunction)=\\\"save()\\\" (updateFunction)=\\\"update()\\\" (cancelFunction)=\\\"resetFormValidator()\\\"\\r\\n            (deleteFunction)=\\\"delete()\\\">\\r\\n        </app-form-action-buttons>\\r\\n        <br>\\r\\n        <app-form-list [dataSource]=\\\"dataSource\\\" [displayedColumns]=\\\"displayedColumns\\\"\\r\\n            (selectInListFunction)=\\\"getS1FeeSettlementPeriod()\\\"></app-form-list>\\r\\n\\r\\n    </div>\\r\\n</form>\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { FormListComponent } from '@fragments';\r\nimport { ApiService, SweetAlertService } from '@services';\r\nimport { ENDPOINTS, STATUSES } from '@shared';\r\nimport { S1SettlementOrExpirationPeriod } from 'app/core/models/s1-settlement-or-expiration-period.model';\r\nimport { ValidateFieldService } from 'app/core/services/validate-field.service';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-s1-fees-settlement-period',\r\n  templateUrl: './s1-fees-settlement-period.component.html',\r\n  styleUrls: ['./s1-fees-settlement-period.component.scss']\r\n})\r\nexport class S1FeesSettlementPeriodComponent implements OnInit {\r\n\r\n  @ViewChild(FormListComponent) formListComponent: FormListComponent;\r\n  dataSource: MatTableDataSource<S1SettlementOrExpirationPeriod>;\r\n  displayedColumns: string[] = ['noOfHours', 'noOfDays'];\r\n  statusList = [...STATUSES];\r\n\r\n  s1FeeSettlementPeriod = new S1SettlementOrExpirationPeriod();\r\n  s1FeeSettlementPeriodList = [];\r\n\r\n  s1FeeSettlementPeriodForm: FormGroup;\r\n\r\n\r\n  constructor(\r\n    private apiService: ApiService,\r\n    private formBuilder: FormBuilder,\r\n    private sweetAlertService: SweetAlertService,\r\n    public validateFieldService: ValidateFieldService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.getList();\r\n    this.setFormValidator();\r\n  }\r\n\r\n  getList(): void {\r\n    this.apiService.findAll(ENDPOINTS.s1FeesSettlementPeriod).subscribe((res: any) => {\r\n      this.s1FeeSettlementPeriodList = res.responseData.data;\r\n      this.dataSource = new MatTableDataSource<S1SettlementOrExpirationPeriod>(res.responseData.data);\r\n      this.dataSource.paginator = this.formListComponent.paginator;\r\n      this.dataSource.sort = this.formListComponent.sort;\r\n    });\r\n  }\r\n\r\n  save(): void {\r\n    this.apiService.save(ENDPOINTS.s1FeesSettlementPeriod, this.s1FeeSettlementPeriod).subscribe(\r\n      (res: any) => {\r\n        if (res !== undefined) {\r\n          this.sweetAlertService.success(res);\r\n        }\r\n      }, (err: any) => {\r\n        if (!Number(this.s1FeeSettlementPeriod.noOfDays)\r\n          || !Number(this.s1FeeSettlementPeriod.noOfHours)) {\r\n          err.error.message = 'Please enter numeric values only';\r\n        } else {\r\n          err.error.message = 'Default Number of hours and days have already been set. Select the entry to update the record';\r\n        }\r\n        this.sweetAlertService.error(err);\r\n      }, () => {\r\n        this.resetFormValidator(),\r\n          this.getList();\r\n      }\r\n    )\r\n  }\r\n\r\n  getS1FeeSettlementPeriod(): void {\r\n    this.apiService.findById(ENDPOINTS.s1FeesSettlementPeriod, this.formListComponent.idForUpdate).subscribe((res: any) => {\r\n      if (res) {\r\n        this.s1FeeSettlementPeriod = res.responseData.data;\r\n        console.log(res);\r\n\r\n      }\r\n    });\r\n  }\r\n\r\n  update(): void {\r\n    this.apiService.update(ENDPOINTS.s1FeesSettlementPeriod, this.s1FeeSettlementPeriod).subscribe(\r\n      (res: any) => {\r\n        if (res !== undefined) {\r\n          this.sweetAlertService.success(res);\r\n        }\r\n      }, (err: any) => {\r\n        this.sweetAlertService.error(err);\r\n      }, () => {\r\n        this.resetFormValidator()\r\n        this.getList();\r\n      });\r\n  }\r\n\r\n  setFormValidator(): void {\r\n    this.s1FeeSettlementPeriodForm = this.formBuilder.group({\r\n      noOfHours: ['', Validators.required],\r\n      noOfDays: ['', Validators.required],\r\n    });\r\n  }\r\n\r\n  resetFormValidator(): void {\r\n    this.s1FeeSettlementPeriod = new S1SettlementOrExpirationPeriod();\r\n    this.s1FeeSettlementPeriodForm.markAsUntouched();\r\n    this.s1FeeSettlementPeriodForm.markAsPristine();\r\n  }\r\n\r\n  delete() {\r\n    Swal.fire({\r\n      text: 'Are you sure you want to delete this S1 fees settlement period?',\r\n      icon: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Confirm'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.apiService.deleteById(ENDPOINTS.s1FeesSettlementPeriod, this.s1FeeSettlementPeriod.id).subscribe(\r\n          () => {\r\n            this.sweetAlertService.customSuccessMessage('S1 fees settlement period successfully deleted.');\r\n            this.resetFormValidator();\r\n            this.getList();\r\n          }\r\n        );\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { S1FeesSettlementPeriodComponent } from './s1-fees-settlement-period.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: S1FeesSettlementPeriodComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class S1FeesSettlementPeriodRoutingModule { }\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcGFnZXMvbWFpbnRlbmFuY2UvczEtZmVlcy1zZXR0bGVtZW50LXBlcmlvZC9zMS1mZWVzLXNldHRsZW1lbnQtcGVyaW9kLmNvbXBvbmVudC5zY3NzIn0= */\";","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { S1FeesSettlementPeriodRoutingModule } from './s1-fees-settlement-period-routing.module';\r\nimport { S1FeesSettlementPeriodComponent } from './s1-fees-settlement-period.component';\r\nimport { FragmentsModule } from 'app/modules/fragments/fragments.module';\r\nimport { AngularMaterialModule } from '@shared';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    S1FeesSettlementPeriodComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    S1FeesSettlementPeriodRoutingModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule,\r\n    AngularMaterialModule,\r\n    FragmentsModule,\r\n  ]\r\n})\r\nexport class S1FeesSettlementPeriodModule { }\r\n"]}