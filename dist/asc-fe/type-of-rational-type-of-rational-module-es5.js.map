{"version":3,"sources":["webpack:///src/app/modules/fragments/index.ts","webpack:///src/app/modules/pages/maintenance/type-of-rational/type-of-rational.module.ts","webpack:///src/app/modules/pages/maintenance/type-of-rational/type-of-rational.component.ts","webpack:///src/app/modules/pages/maintenance/type-of-rational/type-of-rational.component.html","webpack:///src/app/modules/pages/maintenance/type-of-rational/type-of-rational-routing.module.ts","webpack:///src/app/modules/pages/maintenance/type-of-rational/type-of-rational.component.scss"],"names":["TypeOfRationalModule","declarations","imports","TypeOfRationalComponent","apiService","formBuilder","sweetAlertService","displayedColumns","statusList1","statusList","typeOfRational","typeOfRationalList","getAllTypeOfRational","setFormValidator","typeOfRationalForm","group","rationale","required","rationaleCategory","status","ACTIVE","markAsUntouched","markAsPristine","findAll","typeOfRationale","subscribe","res","console","log","responseData","data","dataSource","paginator","formListComponent","sort","findById","idForUpdate","save","undefined","success","err","error","resetFormValidator","update","fire","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","value","deleteById","id","customSuccessMessage","selector","template","routes","path","component","TypeOfRationalRoutingModule","forChild","exports"],"mappings":"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","file":"type-of-rational-type-of-rational-module-es5.js","sourcesContent":["export * from './form-action-buttons/form-action-buttons.component';\r\nexport * from './form-list/form-list.component';","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { TypeOfRationalRoutingModule } from './type-of-rational-routing.module';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { AngularMaterialModule } from '@shared';\r\nimport { FragmentsModule } from 'app/modules/fragments/fragments.module';\r\nimport { TypeOfRationalComponent } from './type-of-rational.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [TypeOfRationalComponent],\r\n  imports: [\r\n    CommonModule,\r\n    TypeOfRationalRoutingModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule,\r\n    AngularMaterialModule,\r\n    FragmentsModule,\r\n  ]\r\n})\r\nexport class TypeOfRationalModule { }\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { FormListComponent } from '@fragments';\r\nimport { ApiService, SweetAlertService } from '@services';\r\nimport { COMMON_FUNCTION, ENDPOINTS, STATUSES } from '@shared';\r\nimport { TypeOfRational } from 'app/core/models/type-of-rational.model';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-type-of-rational',\r\n  templateUrl: './type-of-rational.component.html',\r\n  styleUrls: ['./type-of-rational.component.scss']\r\n})\r\nexport class TypeOfRationalComponent implements OnInit {\r\n\r\n  @ViewChild(FormListComponent) formListComponent: FormListComponent;\r\n  dataSource: MatTableDataSource<TypeOfRational>;\r\n  displayedColumns: string[] = ['rationale', 'rationaleCategory', 'status'];;\r\n  statusList1 = ['FOR_COMPLIANCE', 'FOR_INCOMPLETE_DECISION', 'FOR_TOA_APPLICATION'];\r\n  statusList = [...STATUSES];\r\n\r\n  typeOfRational = new TypeOfRational();\r\n  typeOfRationalList = [];\r\n\r\n  typeOfRationalForm: FormGroup;\r\n\r\n  constructor(\r\n    private apiService: ApiService,\r\n    private formBuilder: FormBuilder,\r\n    private sweetAlertService: SweetAlertService\r\n  ) {\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getAllTypeOfRational();\r\n    this.setFormValidator();\r\n  }\r\n\r\n\r\n  setFormValidator(): void {\r\n    this.typeOfRationalForm = this.formBuilder.group({\r\n      rationale: ['', [Validators.required]],\r\n      rationaleCategory: ['', [Validators.required]],\r\n      // status: ['', [Validators.required]],\r\n    })\r\n  }\r\n\r\n  resetFormValidator(): void {\r\n    this.typeOfRational = new TypeOfRational();\r\n    this.typeOfRational.status = COMMON_FUNCTION.ACTIVE;\r\n    this.typeOfRationalForm.markAsUntouched();\r\n    this.typeOfRationalForm.markAsPristine();\r\n  }\r\n\r\n  getAllTypeOfRational(): void {\r\n    this.apiService.findAll(ENDPOINTS.typeOfRationale).subscribe((res: any) => {\r\n      console.log(res.responseData.data);\r\n      this.typeOfRationalList = res.responseData.data;\r\n      this.dataSource = new MatTableDataSource<TypeOfRational>(res.responseData.data);\r\n      this.dataSource.paginator = this.formListComponent.paginator;\r\n      this.dataSource.sort = this.formListComponent.sort;\r\n    });\r\n  }\r\n\r\n  getTypeOfRational(): void {\r\n    this.apiService.findById(ENDPOINTS.typeOfRationale, this.formListComponent.idForUpdate).subscribe((res: any) => {\r\n      if (res) {\r\n        this.typeOfRational = res.responseData.data;\r\n      }\r\n    });\r\n  }\r\n\r\n  saveTypeOfRational(): void {\r\n    this.apiService.save(ENDPOINTS.typeOfRationale, this.typeOfRational).subscribe(\r\n      (res: any) => {\r\n        if (res !== undefined) {\r\n          this.sweetAlertService.success(res);\r\n        }\r\n      }, (err: any) => {\r\n        this.sweetAlertService.error(err);\r\n      }, () => {\r\n\r\n        this.resetFormValidator();\r\n        this.getAllTypeOfRational();\r\n      }\r\n    )\r\n  }\r\n\r\n  updateTypeOfRational(): void {\r\n    this.apiService.update(ENDPOINTS.typeOfRationale, this.typeOfRational).subscribe(\r\n      (res: any) => {\r\n        if (res !== undefined) {\r\n          this.sweetAlertService.success(res);\r\n        }\r\n      }, (err: any) => {\r\n        this.sweetAlertService.error(err);\r\n      }, () => {\r\n\r\n        this.resetFormValidator();\r\n        this.getAllTypeOfRational();\r\n      });\r\n  }\r\n\r\n  deleteTypeOfRational(): void {\r\n\r\n    Swal.fire({\r\n      text: 'Are you sure you want to delete this TYPE OF RATIONALE?',\r\n      icon: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Confirm'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.apiService.deleteById(ENDPOINTS.typeOfRationale, this.typeOfRational.id).subscribe((res: any) => {\r\n          console.log(res.responseData.data);\r\n          this.sweetAlertService.customSuccessMessage('Type of rationale successfully deleted.');\r\n          this.resetFormValidator(),\r\n            this.getAllTypeOfRational();\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","export default \"<form>\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-12 title\\\">\\r\\n          <mat-label>\\r\\n             Type of Rationale\\r\\n          </mat-label>\\r\\n        </div>\\r\\n      </div>\\r\\n      <hr>\\r\\n\\r\\n      <form [formGroup]=\\\"typeOfRationalForm\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n\\r\\n          <mat-form-field class=\\\"col-md-4\\\" appearance=\\\"outline\\\">\\r\\n            <mat-label>Rationale <span class=\\\"required-field\\\">*</span></mat-label>\\r\\n            <input matInput [(ngModel)]=\\\"typeOfRational.rationale\\\" name=\\\"rationale\\\" formControlName=\\\"rationale\\\">\\r\\n          </mat-form-field>\\r\\n\\r\\n          <mat-form-field class=\\\"col-md-4\\\" appearance=\\\"outline\\\">\\r\\n            <mat-label>Rationale Category</mat-label>\\r\\n            <mat-select [(ngModel)]=\\\"typeOfRational.rationaleCategory\\\" name=\\\"rationaleCategory\\\" formControlName=\\\"rationaleCategory\\\">\\r\\n              <mat-option *ngFor=\\\"let i of statusList1\\\" [value]=\\\"i\\\">\\r\\n                {{i.replaceAll('_',' ') | uppercase }}\\r\\n              </mat-option>\\r\\n            </mat-select>\\r\\n          </mat-form-field>\\r\\n\\r\\n          <mat-form-field class=\\\"col-md-4\\\" appearance=\\\"outline\\\" *ngIf=\\\"typeOfRational.id\\\">\\r\\n            <mat-label>Status</mat-label>\\r\\n            <mat-select [(ngModel)]=\\\"typeOfRational.status\\\" name=\\\"status\\\" formControlName=\\\"status\\\">\\r\\n              <mat-option *ngFor=\\\"let i of statusList\\\" [value]=\\\"i.status\\\">\\r\\n                {{i.status}}\\r\\n              </mat-option>\\r\\n            </mat-select>\\r\\n          </mat-form-field>\\r\\n\\r\\n        </div>\\r\\n      </form>\\r\\n\\r\\n      <app-form-action-buttons [childObject]=\\\"typeOfRational\\\" [childForm]=\\\"typeOfRationalForm\\\" (saveFunction)=\\\"saveTypeOfRational()\\\"\\r\\n      (updateFunction)=\\\"updateTypeOfRational()\\\" (deleteFunction)=\\\"deleteTypeOfRational()\\\" (cancelFunction)=\\\"resetFormValidator()\\\"></app-form-action-buttons>\\r\\n      <br>\\r\\n\\r\\n      <app-form-list [dataSource]=\\\"dataSource\\\" [displayedColumns]=\\\"displayedColumns\\\"\\r\\n      (selectInListFunction)=\\\"getTypeOfRational()\\\"></app-form-list>\\r\\n\\r\\n     </div>\\r\\n  </form>\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { TypeOfRationalComponent } from './type-of-rational.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path : '',\r\n    component : TypeOfRationalComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class TypeOfRationalRoutingModule { }\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcGFnZXMvbWFpbnRlbmFuY2UvdHlwZS1vZi1yYXRpb25hbC90eXBlLW9mLXJhdGlvbmFsLmNvbXBvbmVudC5zY3NzIn0= */\";"]}