{"version":3,"sources":["webpack:///src/app/modules/pages/maintenance/weekly-user-schedule/weekly-user-schedule.module.ts","webpack:///src/app/modules/pages/maintenance/weekly-user-schedule/weekly-user-schedule.component.ts","webpack:///src/app/modules/pages/maintenance/weekly-user-schedule/weekly-user-schedule.component.html","webpack:///src/app/modules/pages/maintenance/weekly-user-schedule/weekly-user-schedule-routing.module.ts"],"names":["WeeklyUserScheduleModule","WeeklyUserScheduleComponent","apiService","selectedDates","originalUserDates","userExistingRecord","displayedColumns","initializeUsers","todayDate","Date","e","calendar","date","find","d","push","index","findIndex","splice","updateTodaysDate","updateDataSource","user","selectedUser","initializeUserDates","componentInstance","Boolean","payload","account","weeklyUserScheduleDates","convertSelectedDates","id","update","weeklyUserSchedule","subscribe","insert","responseData","data","indexOriginal","scheduleDate","deleteById","weeklyScheduledUsers","deletionUpdate","indexSelected","dataSource","sort","a","b","valueOf","map","originalDate","c","findAll","userAccountType","res","users","clearData","weeklyUserScheduleCustomSearch","length","saveSelectedDates","routes","path","component","WeeklyUserScheduleRoutingModule","forChild"],"mappings":"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","file":"weekly-user-schedule-weekly-user-schedule-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { AngularMaterialModule } from '@shared';\r\nimport { FragmentsModule } from 'app/modules/fragments/fragments.module';\r\nimport { WeeklyUserScheduleComponent } from './weekly-user-schedule.component';\r\nimport { WeeklyUserScheduleRoutingModule } from './weekly-user-schedule-routing.module';\r\n\r\n@NgModule({\r\n  declarations: [WeeklyUserScheduleComponent],\r\n  imports: [\r\n    CommonModule,\r\n    WeeklyUserScheduleRoutingModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule,\r\n    AngularMaterialModule,\r\n    FragmentsModule\r\n  ]\r\n})\r\nexport class WeeklyUserScheduleModule { }\r\n","import { ENDPOINTS } from '@shared';\r\nimport { ApiService } from '@services';\r\nimport { Component, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\r\nimport { format } from 'date-fns';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\n\r\n@Component({\r\n  selector: 'app-weekly-user-schedule',\r\n  templateUrl: './weekly-user-schedule.component.html',\r\n  styleUrls: ['./weekly-user-schedule.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class WeeklyUserScheduleComponent implements OnInit {\r\n\r\n  users: any[];\r\n  todayDate: Date;\r\n  selectedDates: any[] = [];\r\n  originalUserDates: any[] = [];\r\n  selectedUser: any;\r\n  userExistingRecord: any = null;\r\n  dataSource: MatTableDataSource<any[]>;\r\n  displayedColumns: string[] = ['date'];\r\n  @ViewChild('calendar') calendar: any;\r\n\r\n  constructor(\r\n    private apiService: ApiService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.initializeUsers();\r\n    this.todayDate = new Date();\r\n  }\r\n\r\n  onCalendarUpdate(e, calendar): void {\r\n    const date = format(e, 'yyyy-MM-dd');\r\n    if (this.originalUserDates.find(d => d === date)) {\r\n      return;\r\n    }\r\n\r\n    if (!this.selectedDates.find(e => e === date)) {\r\n      this.selectedDates.push(date);\r\n    } else {\r\n      const index = this.selectedDates.findIndex(e => e === date);\r\n      this.selectedDates.splice(index, 1);\r\n    }\r\n    this.calendar.updateTodaysDate();\r\n\r\n    this.updateDataSource();\r\n  }\r\n\r\n  onSelectUser(user): void {\r\n    this.selectedUser = user;\r\n    this.initializeUserDates(this.selectedUser);\r\n  }\r\n\r\n  isSelected(componentInstance): any {\r\n    return (date) => {\r\n      return Boolean(componentInstance.selectedDates?.find((e) => format(date, 'yyyy-MM-dd') === e)) \r\n      ? 'selected' \r\n      : null;\r\n    }\r\n  }\r\n\r\n  saveSelectedDates(): void {\r\n    const payload = {\r\n      account: this.selectedUser,\r\n      weeklyUserScheduleDates: this.convertSelectedDates(),\r\n      id: this.userExistingRecord ? this.userExistingRecord.id : null\r\n    }\r\n\r\n    if (this.userExistingRecord) {\r\n      this.apiService.update(ENDPOINTS.weeklyUserSchedule, payload).subscribe(() => {\r\n        this.initializeUserDates(this.selectedUser);\r\n      });\r\n    } else {\r\n      this.apiService.insert(ENDPOINTS.weeklyUserSchedule, { ...payload, weeklyUserScheduleDates: []}, true).subscribe((e) => {\r\n        this.apiService.update(ENDPOINTS.weeklyUserSchedule, { ...payload, id: e.responseData.data.id}).subscribe(() => {\r\n          this.initializeUserDates(this.selectedUser);\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  convertDate(date): string {\r\n    return format(new Date(date), 'MMM/dd/yyyy');\r\n  }\r\n\r\n  deleteDate(date): void {\r\n    const indexOriginal = this.originalUserDates.findIndex((e) => e === date);\r\n    if (indexOriginal !== -1) {\r\n      const id = this.userExistingRecord.weeklyUserScheduleDates\r\n        .find(e => format(new Date(e.scheduleDate), 'yyyy-MM-dd') === format(new Date(date), 'yyyy-MM-dd')).id;\r\n      this.apiService.deleteById(ENDPOINTS.weeklyScheduledUsers, id).subscribe(() => {\r\n        const index = this.userExistingRecord.weeklyUserScheduleDates.findIndex((e) => e.id === id);\r\n        this.userExistingRecord.weeklyUserScheduleDates.splice(index, 1);\r\n        this.deletionUpdate(date);\r\n        this.originalUserDates.splice(indexOriginal, 1);\r\n      });\r\n    } else {\r\n      this.deletionUpdate(date);\r\n    }\r\n  }\r\n\r\n  deletionUpdate(date): void {\r\n    const indexSelected = this.selectedDates.findIndex((e) => e === date);\r\n    this.selectedDates.splice(indexSelected, 1);\r\n    this.updateDataSource();\r\n    this.calendar.updateTodaysDate();\r\n  }\r\n\r\n  private updateDataSource(): void {\r\n    this.dataSource = new MatTableDataSource<any>(\r\n      this.selectedDates.sort((a,b) => (new Date(b).valueOf()) - (new Date(a).valueOf()) ).map((date) => ({ date }))\r\n    );\r\n  }\r\n\r\n  private convertSelectedDates(): any[] {\r\n    return this.selectedDates.map((e) => {\r\n        let originalDate = null;\r\n        if (this.userExistingRecord) {\r\n          originalDate = this.userExistingRecord.weeklyUserScheduleDates\r\n          .find((c) => format(new Date(c.scheduleDate), 'yyyy-MM-dd') === format(new Date(e), 'yyyy-MM-dd') );\r\n        }\r\n        return originalDate ?? { scheduleDate: e };\r\n    });\r\n  }\r\n\r\n  private initializeUsers(): void {\r\n    this.apiService.findAll(`${ENDPOINTS.userAccountType}/ASC_USER`).subscribe(\r\n      (res: any) => {\r\n       this.users = res.responseData.data;\r\n    });\r\n  }\r\n\r\n  private clearData(): void {\r\n    this.selectedDates = [];\r\n    this.originalUserDates = [];\r\n    this.calendar.updateTodaysDate();\r\n    this.updateDataSource();\r\n  }\r\n\r\n  private initializeUserDates(user): void {\r\n    this.clearData();\r\n    this.apiService.findAll(`${ ENDPOINTS.weeklyUserScheduleCustomSearch }?&accountId=${ user.id }`).subscribe((res) => {\r\n      if (res.data.length) {\r\n        res = res.data[0];\r\n        this.originalUserDates = res.weeklyUserScheduleDates.map((e) => format(new Date(e.scheduleDate), 'yyyy-MM-dd'));\r\n        this.selectedDates = [...this.originalUserDates];\r\n        this.userExistingRecord = res;\r\n        this.updateDataSource();\r\n        this.calendar.updateTodaysDate();\r\n      } else {\r\n        this.userExistingRecord = null;\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<form>\r\n    <div class=\"container-fluid\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-12 title\">\r\n                <mat-label>\r\n                  Weekly User Schedule\r\n                </mat-label>\r\n            </div>\r\n        </div>\r\n        <hr>\r\n\r\n        <form>\r\n            <div class=\"row\" *ngIf=\"users\">\r\n                <mat-form-field class=\"col-md-5\" appearance=\"outline\">\r\n                    <mat-label>ASC Internal User</mat-label>\r\n                    <mat-select name=\"status\">\r\n                      <mat-option *ngFor=\"let user of users\" [value]=\"user\" (click)=\"onSelectUser(user)\">\r\n                         {{user.firstName + ' ' + user.lastName}}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n\r\n                  <div class=\"col-md-5\" appearance=\"outline\" *ngIf=\"users\">\r\n                    <mat-calendar\r\n                        #calendar \r\n                        [minDate]=\"todayDate\" \r\n                        [hidden]=\"!selectedUser\"\r\n                        (selectedChange)=\"onCalendarUpdate($event, calendar)\"\r\n                        [dateClass]=\"isSelected(this)\"\r\n                    >\r\n                    </mat-calendar>\r\n                </div>\r\n            </div>\r\n        </form>\r\n\r\n        <div class=\"mat-elevation-z8 fields\">\r\n            <table mat-table [dataSource]=\"dataSource\" mat-sort>\r\n                <ng-container matColumnDef=\"date\">\r\n                    <th mat-header-cell *matHeaderCellDef > Date </th>\r\n                    <td mat-cell *matCellDef=\"let element\">\r\n                       <button class=\"button-red col-md-1 delete-btn\" mat-raised-button (click)=\"deleteDate(element?.date)\">Delete</button>\r\n                       <span class=\"date-text\">{{ convertDate(element?.date) }}</span>\r\n                    </td>\r\n                </ng-container>\r\n\r\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n            </table>\r\n            <div class=\"no-record\" [hidden]=\"selectedDates && selectedDates.length > 0\">\r\n                No record found.\r\n            </div>\r\n            <div class=\"col-md-12\">\r\n                <button class=\"button-red col-md-3 margin\" [hidden]=\"selectedDates.length === 0\" mat-raised-button (click)=\"saveSelectedDates()\">Save</button>\r\n            </div>\r\n        </div>\r\n        ","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { WeeklyUserScheduleComponent } from './weekly-user-schedule.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: WeeklyUserScheduleComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class WeeklyUserScheduleRoutingModule { }\r\n"]}