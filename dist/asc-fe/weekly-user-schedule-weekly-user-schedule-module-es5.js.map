{"version":3,"sources":["webpack:///src/app/modules/pages/maintenance/weekly-user-schedule/weekly-user-schedule.module.ts","webpack:///src/app/modules/pages/maintenance/weekly-user-schedule/weekly-user-schedule.component.ts","webpack:///src/app/modules/pages/maintenance/weekly-user-schedule/weekly-user-schedule.component.html","webpack:///src/app/modules/pages/maintenance/weekly-user-schedule/weekly-user-schedule-routing.module.ts"],"names":["WeeklyUserScheduleModule","WeeklyUserScheduleComponent","apiService","selectedDates","originalUserDates","userExistingRecord","displayedColumns","initializeUsers","todayDate","Date","e","calendar","date","find","d","push","index","findIndex","splice","updateTodaysDate","updateDataSource","user","selectedUser","initializeUserDates","componentInstance","Boolean","payload","account","weeklyUserScheduleDates","convertSelectedDates","id","update","weeklyUserSchedule","subscribe","insert","responseData","data","indexOriginal","scheduleDate","deleteById","weeklyScheduledUsers","deletionUpdate","indexSelected","dataSource","sort","a","b","valueOf","map","originalDate","c","findAll","userAccountType","res","users","clearData","weeklyUserScheduleCustomSearch","length","saveSelectedDates","routes","path","component","WeeklyUserScheduleRoutingModule","forChild"],"mappings":"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","file":"weekly-user-schedule-weekly-user-schedule-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { AngularMaterialModule } from '@shared';\r\nimport { FragmentsModule } from 'app/modules/fragments/fragments.module';\r\nimport { WeeklyUserScheduleComponent } from './weekly-user-schedule.component';\r\nimport { WeeklyUserScheduleRoutingModule } from './weekly-user-schedule-routing.module';\r\n\r\n@NgModule({\r\n  declarations: [WeeklyUserScheduleComponent],\r\n  imports: [\r\n    CommonModule,\r\n    WeeklyUserScheduleRoutingModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule,\r\n    AngularMaterialModule,\r\n    FragmentsModule\r\n  ]\r\n})\r\nexport class WeeklyUserScheduleModule { }\r\n","import { ENDPOINTS } from '@shared';\r\nimport { ApiService } from '@services';\r\nimport { Component, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\r\nimport { format } from 'date-fns';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\n\r\n@Component({\r\n  selector: 'app-weekly-user-schedule',\r\n  templateUrl: './weekly-user-schedule.component.html',\r\n  styleUrls: ['./weekly-user-schedule.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class WeeklyUserScheduleComponent implements OnInit {\r\n\r\n  users: any[];\r\n  todayDate: Date;\r\n  selectedDates: any[] = [];\r\n  originalUserDates: any[] = [];\r\n  selectedUser: any;\r\n  userExistingRecord: any = null;\r\n  dataSource: MatTableDataSource<any[]>;\r\n  displayedColumns: string[] = ['date'];\r\n  @ViewChild('calendar') calendar: any;\r\n\r\n  constructor(\r\n    private apiService: ApiService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.initializeUsers();\r\n    this.todayDate = new Date();\r\n  }\r\n\r\n  onCalendarUpdate(e, calendar): void {\r\n    const date = format(e, 'yyyy-MM-dd');\r\n    if (this.originalUserDates.find(d => d === date)) {\r\n      return;\r\n    }\r\n\r\n    if (!this.selectedDates.find(e => e === date)) {\r\n      this.selectedDates.push(date);\r\n    } else {\r\n      const index = this.selectedDates.findIndex(e => e === date);\r\n      this.selectedDates.splice(index, 1);\r\n    }\r\n    this.calendar.updateTodaysDate();\r\n\r\n    this.updateDataSource();\r\n  }\r\n\r\n  onSelectUser(user): void {\r\n    this.selectedUser = user;\r\n    this.initializeUserDates(this.selectedUser);\r\n  }\r\n\r\n  isSelected(componentInstance): any {\r\n    return (date) => {\r\n      return Boolean(componentInstance.selectedDates?.find((e) => format(date, 'yyyy-MM-dd') === e)) \r\n      ? 'selected' \r\n      : null;\r\n    }\r\n  }\r\n\r\n  saveSelectedDates(): void {\r\n    const payload = {\r\n      account: this.selectedUser,\r\n      weeklyUserScheduleDates: this.convertSelectedDates(),\r\n      id: this.userExistingRecord ? this.userExistingRecord.id : null\r\n    }\r\n\r\n    if (this.userExistingRecord) {\r\n      this.apiService.update(ENDPOINTS.weeklyUserSchedule, payload).subscribe(() => {\r\n        this.initializeUserDates(this.selectedUser);\r\n      });\r\n    } else {\r\n      this.apiService.insert(ENDPOINTS.weeklyUserSchedule, { ...payload, weeklyUserScheduleDates: []}, true).subscribe((e) => {\r\n        this.apiService.update(ENDPOINTS.weeklyUserSchedule, { ...payload, id: e.responseData.data.id}).subscribe(() => {\r\n          this.initializeUserDates(this.selectedUser);\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  convertDate(date): string {\r\n    return format(new Date(date), 'MMM/dd/yyyy');\r\n  }\r\n\r\n  deleteDate(date): void {\r\n    const indexOriginal = this.originalUserDates.findIndex((e) => e === date);\r\n    if (indexOriginal !== -1) {\r\n      const id = this.userExistingRecord.weeklyUserScheduleDates\r\n        .find(e => format(new Date(e.scheduleDate), 'yyyy-MM-dd') === format(new Date(date), 'yyyy-MM-dd')).id;\r\n      this.apiService.deleteById(ENDPOINTS.weeklyScheduledUsers, id).subscribe(() => {\r\n        const index = this.userExistingRecord.weeklyUserScheduleDates.findIndex((e) => e.id === id);\r\n        this.userExistingRecord.weeklyUserScheduleDates.splice(index, 1);\r\n        this.deletionUpdate(date);\r\n        this.originalUserDates.splice(indexOriginal, 1);\r\n      });\r\n    } else {\r\n      this.deletionUpdate(date);\r\n    }\r\n  }\r\n\r\n  deletionUpdate(date): void {\r\n    const indexSelected = this.selectedDates.findIndex((e) => e === date);\r\n    this.selectedDates.splice(indexSelected, 1);\r\n    this.updateDataSource();\r\n    this.calendar.updateTodaysDate();\r\n  }\r\n\r\n  private updateDataSource(): void {\r\n    this.dataSource = new MatTableDataSource<any>(\r\n      this.selectedDates.sort((a,b) => (new Date(b).valueOf()) - (new Date(a).valueOf()) ).map((date) => ({ date }))\r\n    );\r\n  }\r\n\r\n  private convertSelectedDates(): any[] {\r\n    return this.selectedDates.map((e) => {\r\n        let originalDate = null;\r\n        if (this.userExistingRecord) {\r\n          originalDate = this.userExistingRecord.weeklyUserScheduleDates\r\n          .find((c) => format(new Date(c.scheduleDate), 'yyyy-MM-dd') === format(new Date(e), 'yyyy-MM-dd') );\r\n        }\r\n        return originalDate ?? { scheduleDate: e };\r\n    });\r\n  }\r\n\r\n  private initializeUsers(): void {\r\n    this.apiService.findAll(`${ENDPOINTS.userAccountType}/ASC_USER`).subscribe(\r\n      (res: any) => {\r\n       this.users = res.responseData.data;\r\n    });\r\n  }\r\n\r\n  private clearData(): void {\r\n    this.selectedDates = [];\r\n    this.originalUserDates = [];\r\n    this.calendar.updateTodaysDate();\r\n    this.updateDataSource();\r\n  }\r\n\r\n  private initializeUserDates(user): void {\r\n    this.clearData();\r\n    this.apiService.findAll(`${ ENDPOINTS.weeklyUserScheduleCustomSearch }?&accountId=${ user.id }`).subscribe((res) => {\r\n      if (res.data.length) {\r\n        res = res.data[0];\r\n        this.originalUserDates = res.weeklyUserScheduleDates.map((e) => format(new Date(e.scheduleDate), 'yyyy-MM-dd'));\r\n        this.selectedDates = [...this.originalUserDates];\r\n        this.userExistingRecord = res;\r\n        this.updateDataSource();\r\n        this.calendar.updateTodaysDate();\r\n      } else {\r\n        this.userExistingRecord = null;\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<form>\r\n    <div class=\"container-fluid\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-12 title\">\r\n                <mat-label>\r\n                  Weekly User Schedule\r\n                </mat-label>\r\n            </div>\r\n        </div>\r\n        <hr>\r\n\r\n        <form>\r\n            <div class=\"row\" *ngIf=\"users\">\r\n                <mat-form-field class=\"col-md-5\" appearance=\"outline\">\r\n                    <mat-label>ASC Internal User</mat-label>\r\n                    <mat-select name=\"status\">\r\n                      <mat-option *ngFor=\"let user of users\" [value]=\"user\" (click)=\"onSelectUser(user)\">\r\n                         {{user.firstName + ' ' + user.lastName}}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n\r\n                  <div class=\"col-md-5\" appearance=\"outline\" *ngIf=\"users\">\r\n                    <mat-calendar\r\n                        #calendar \r\n                        [minDate]=\"todayDate\" \r\n                        [hidden]=\"!selectedUser\"\r\n                        (selectedChange)=\"onCalendarUpdate($event, calendar)\"\r\n                        [dateClass]=\"isSelected(this)\"\r\n                    >\r\n                    </mat-calendar>\r\n                </div>\r\n            </div>\r\n        </form>\r\n\r\n        <div class=\"mat-elevation-z8 fields\">\r\n            <table mat-table [dataSource]=\"dataSource\" mat-sort>\r\n                <ng-container matColumnDef=\"date\">\r\n                    <th mat-header-cell *matHeaderCellDef > Date </th>\r\n                    <td mat-cell *matCellDef=\"let element\">\r\n                       <button class=\"button-red col-md-1 delete-btn\" mat-raised-button (click)=\"deleteDate(element?.date)\">Delete</button>\r\n                       <span class=\"date-text\">{{ convertDate(element?.date) }}</span>\r\n                    </td>\r\n                </ng-container>\r\n\r\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n            </table>\r\n            <div class=\"no-record\" [hidden]=\"selectedDates && selectedDates.length > 0\">\r\n                No record found.\r\n            </div>\r\n            <div class=\"col-md-12\">\r\n                <button class=\"button-red col-md-3 margin\" [hidden]=\"selectedDates.length === 0\" mat-raised-button (click)=\"saveSelectedDates()\">Save</button>\r\n            </div>\r\n        </div>\r\n        ","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { WeeklyUserScheduleComponent } from './weekly-user-schedule.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: WeeklyUserScheduleComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class WeeklyUserScheduleRoutingModule { }\r\n"]}