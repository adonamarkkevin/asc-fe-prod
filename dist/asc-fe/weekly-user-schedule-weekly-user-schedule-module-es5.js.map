{"version":3,"sources":["webpack:///src/app/modules/pages/maintenance/weekly-user-schedule/weekly-user-schedule.module.ts","webpack:///src/app/modules/pages/maintenance/weekly-user-schedule/weekly-user-schedule.component.scss","webpack:///src/app/modules/pages/maintenance/weekly-user-schedule/weekly-user-schedule.component.html","webpack:///src/app/modules/pages/maintenance/weekly-user-schedule/weekly-user-schedule.component.ts","webpack:///src/app/modules/pages/maintenance/weekly-user-schedule/weekly-user-schedule-routing.module.ts"],"names":["WeeklyUserScheduleModule","declarations","imports","WeeklyUserScheduleComponent","apiService","selectedDates","originalUserDates","userExistingRecord","displayedColumns","initializeUsers","todayDate","Date","e","calendar","date","find","d","push","index","findIndex","splice","updateTodaysDate","updateDataSource","user","selectedUser","initializeUserDates","componentInstance","Boolean","payload","account","weeklyUserScheduleDates","convertSelectedDates","id","update","weeklyUserSchedule","subscribe","insert","responseData","data","indexOriginal","scheduleDate","deleteById","weeklyScheduledUsers","deletionUpdate","indexSelected","dataSource","sort","a","b","valueOf","map","originalDate","c","findAll","userAccountType","res","users","clearData","weeklyUserScheduleCustomSearch","length","selector","template","encapsulation","None","routes","path","component","WeeklyUserScheduleRoutingModule","forChild","exports"],"mappings":"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","file":"weekly-user-schedule-weekly-user-schedule-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { AngularMaterialModule } from '@shared';\r\nimport { FragmentsModule } from 'app/modules/fragments/fragments.module';\r\nimport { WeeklyUserScheduleComponent } from './weekly-user-schedule.component';\r\nimport { WeeklyUserScheduleRoutingModule } from './weekly-user-schedule-routing.module';\r\n\r\n@NgModule({\r\n  declarations: [WeeklyUserScheduleComponent],\r\n  imports: [\r\n    CommonModule,\r\n    WeeklyUserScheduleRoutingModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule,\r\n    AngularMaterialModule,\r\n    FragmentsModule\r\n  ]\r\n})\r\nexport class WeeklyUserScheduleModule { }\r\n","export default \".mat-calendar-body-cell.selected {\\n  background-color: #c5140c !important;\\n  border-radius: 50%;\\n}\\n\\n.drop-calendar {\\n  width: 30rem;\\n}\\n\\n.margin {\\n  margin: 10px !important;\\n  right: 0 !important;\\n  bottom: 0 !important;\\n}\\n\\n.delete-btn {\\n  float: right !important;\\n}\\n\\n.date-text {\\n  font-size: larger;\\n  margin: auto;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9wYWdlcy9tYWludGVuYW5jZS93ZWVrbHktdXNlci1zY2hlZHVsZS93ZWVrbHktdXNlci1zY2hlZHVsZS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUVFLG9DQUFBO0VBQ0Esa0JBQUE7QUFBRjs7QUFFQTtFQUVFLFlBQUE7QUFBRjs7QUFHQTtFQUVFLHVCQUFBO0VBQ0EsbUJBQUE7RUFDQSxvQkFBQTtBQURGOztBQUlBO0VBQ0UsdUJBQUE7QUFERjs7QUFJQTtFQUNFLGlCQUFBO0VBQ0EsWUFBQTtBQURGIiwiZmlsZSI6InNyYy9hcHAvbW9kdWxlcy9wYWdlcy9tYWludGVuYW5jZS93ZWVrbHktdXNlci1zY2hlZHVsZS93ZWVrbHktdXNlci1zY2hlZHVsZS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tYXQtY2FsZW5kYXItYm9keS1jZWxsLnNlbGVjdGVkXHJcbntcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiNjNTE0MGMhaW1wb3J0YW50O1xyXG4gIGJvcmRlci1yYWRpdXM6IDUwJVxyXG59XHJcbi5kcm9wLWNhbGVuZGFyXHJcbntcclxuICB3aWR0aDozMHJlbVxyXG59XHJcblxyXG4ubWFyZ2luIFxyXG57XHJcbiAgbWFyZ2luOiAxMHB4ICFpbXBvcnRhbnQ7XHJcbiAgcmlnaHQ6IDAgIWltcG9ydGFudDtcclxuICBib3R0b206IDAgIWltcG9ydGFudDtcclxufVxyXG5cclxuLmRlbGV0ZS1idG4ge1xyXG4gIGZsb2F0OiByaWdodCAhaW1wb3J0YW50O1xyXG59XHJcblxyXG4uZGF0ZS10ZXh0IHtcclxuICBmb250LXNpemU6IGxhcmdlcjtcclxuICBtYXJnaW46IGF1dG87XHJcbn0iXX0= */\";","export default \"<form>\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12 title\\\">\\r\\n                <mat-label>\\r\\n                  Weekly User Schedule\\r\\n                </mat-label>\\r\\n            </div>\\r\\n        </div>\\r\\n        <hr>\\r\\n\\r\\n        <form>\\r\\n            <div class=\\\"row\\\" *ngIf=\\\"users\\\">\\r\\n                <mat-form-field class=\\\"col-md-5\\\" appearance=\\\"outline\\\">\\r\\n                    <mat-label>ASC Internal User</mat-label>\\r\\n                    <mat-select name=\\\"status\\\">\\r\\n                      <mat-option *ngFor=\\\"let user of users\\\" [value]=\\\"user\\\" (click)=\\\"onSelectUser(user)\\\">\\r\\n                         {{user.firstName + ' ' + user.lastName}}\\r\\n                      </mat-option>\\r\\n                    </mat-select>\\r\\n                  </mat-form-field>\\r\\n\\r\\n                  <div class=\\\"col-md-5\\\" appearance=\\\"outline\\\" *ngIf=\\\"users\\\">\\r\\n                    <mat-calendar\\r\\n                        #calendar \\r\\n                        [minDate]=\\\"todayDate\\\" \\r\\n                        [hidden]=\\\"!selectedUser\\\"\\r\\n                        (selectedChange)=\\\"onCalendarUpdate($event, calendar)\\\"\\r\\n                        [dateClass]=\\\"isSelected(this)\\\"\\r\\n                    >\\r\\n                    </mat-calendar>\\r\\n                </div>\\r\\n            </div>\\r\\n        </form>\\r\\n\\r\\n        <div class=\\\"mat-elevation-z8 fields\\\">\\r\\n            <table mat-table [dataSource]=\\\"dataSource\\\" mat-sort>\\r\\n                <ng-container matColumnDef=\\\"date\\\">\\r\\n                    <th mat-header-cell *matHeaderCellDef > Date </th>\\r\\n                    <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n                       <button class=\\\"button-red col-md-1 delete-btn\\\" mat-raised-button (click)=\\\"deleteDate(element?.date)\\\">Delete</button>\\r\\n                       <span class=\\\"date-text\\\">{{ convertDate(element?.date) }}</span>\\r\\n                    </td>\\r\\n                </ng-container>\\r\\n\\r\\n                <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n                <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n\\r\\n            </table>\\r\\n            <div class=\\\"no-record\\\" [hidden]=\\\"selectedDates && selectedDates.length > 0\\\">\\r\\n                No record found.\\r\\n            </div>\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <button class=\\\"button-red col-md-3 margin\\\" [hidden]=\\\"selectedDates.length === 0\\\" mat-raised-button (click)=\\\"saveSelectedDates()\\\">Save</button>\\r\\n            </div>\\r\\n        </div>\\r\\n        \";","import { ENDPOINTS } from '@shared';\r\nimport { ApiService } from '@services';\r\nimport { Component, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\r\nimport { format } from 'date-fns';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\n\r\n@Component({\r\n  selector: 'app-weekly-user-schedule',\r\n  templateUrl: './weekly-user-schedule.component.html',\r\n  styleUrls: ['./weekly-user-schedule.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class WeeklyUserScheduleComponent implements OnInit {\r\n\r\n  users: any[];\r\n  todayDate: Date;\r\n  selectedDates: any[] = [];\r\n  originalUserDates: any[] = [];\r\n  selectedUser: any;\r\n  userExistingRecord: any = null;\r\n  dataSource: MatTableDataSource<any[]>;\r\n  displayedColumns: string[] = ['date'];\r\n  @ViewChild('calendar') calendar: any;\r\n\r\n  constructor(\r\n    private apiService: ApiService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.initializeUsers();\r\n    this.todayDate = new Date();\r\n  }\r\n\r\n  onCalendarUpdate(e, calendar): void {\r\n    const date = format(e, 'yyyy-MM-dd');\r\n    if (this.originalUserDates.find(d => d === date)) {\r\n      return;\r\n    }\r\n\r\n    if (!this.selectedDates.find(e => e === date)) {\r\n      this.selectedDates.push(date);\r\n    } else {\r\n      const index = this.selectedDates.findIndex(e => e === date);\r\n      this.selectedDates.splice(index, 1);\r\n    }\r\n    this.calendar.updateTodaysDate();\r\n\r\n    this.updateDataSource();\r\n  }\r\n\r\n  onSelectUser(user): void {\r\n    this.selectedUser = user;\r\n    this.initializeUserDates(this.selectedUser);\r\n  }\r\n\r\n  isSelected(componentInstance): any {\r\n    return (date) => {\r\n      return Boolean(componentInstance.selectedDates?.find((e) => format(date, 'yyyy-MM-dd') === e)) \r\n      ? 'selected' \r\n      : null;\r\n    }\r\n  }\r\n\r\n  saveSelectedDates(): void {\r\n    const payload = {\r\n      account: this.selectedUser,\r\n      weeklyUserScheduleDates: this.convertSelectedDates(),\r\n      id: this.userExistingRecord ? this.userExistingRecord.id : null\r\n    }\r\n\r\n    if (this.userExistingRecord) {\r\n      this.apiService.update(ENDPOINTS.weeklyUserSchedule, payload).subscribe(() => {\r\n        this.initializeUserDates(this.selectedUser);\r\n      });\r\n    } else {\r\n      this.apiService.insert(ENDPOINTS.weeklyUserSchedule, { ...payload, weeklyUserScheduleDates: []}, true).subscribe((e) => {\r\n        this.apiService.update(ENDPOINTS.weeklyUserSchedule, { ...payload, id: e.responseData.data.id}).subscribe(() => {\r\n          this.initializeUserDates(this.selectedUser);\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  convertDate(date): string {\r\n    return format(new Date(date), 'MMM/dd/yyyy');\r\n  }\r\n\r\n  deleteDate(date): void {\r\n    const indexOriginal = this.originalUserDates.findIndex((e) => e === date);\r\n    if (indexOriginal !== -1) {\r\n      const id = this.userExistingRecord.weeklyUserScheduleDates\r\n        .find(e => format(new Date(e.scheduleDate), 'yyyy-MM-dd') === format(new Date(date), 'yyyy-MM-dd')).id;\r\n      this.apiService.deleteById(ENDPOINTS.weeklyScheduledUsers, id).subscribe(() => {\r\n        const index = this.userExistingRecord.weeklyUserScheduleDates.findIndex((e) => e.id === id);\r\n        this.userExistingRecord.weeklyUserScheduleDates.splice(index, 1);\r\n        this.deletionUpdate(date);\r\n        this.originalUserDates.splice(indexOriginal, 1);\r\n      });\r\n    } else {\r\n      this.deletionUpdate(date);\r\n    }\r\n  }\r\n\r\n  deletionUpdate(date): void {\r\n    const indexSelected = this.selectedDates.findIndex((e) => e === date);\r\n    this.selectedDates.splice(indexSelected, 1);\r\n    this.updateDataSource();\r\n    this.calendar.updateTodaysDate();\r\n  }\r\n\r\n  private updateDataSource(): void {\r\n    this.dataSource = new MatTableDataSource<any>(\r\n      this.selectedDates.sort((a,b) => (new Date(b).valueOf()) - (new Date(a).valueOf()) ).map((date) => ({ date }))\r\n    );\r\n  }\r\n\r\n  private convertSelectedDates(): any[] {\r\n    return this.selectedDates.map((e) => {\r\n        let originalDate = null;\r\n        if (this.userExistingRecord) {\r\n          originalDate = this.userExistingRecord.weeklyUserScheduleDates\r\n          .find((c) => format(new Date(c.scheduleDate), 'yyyy-MM-dd') === format(new Date(e), 'yyyy-MM-dd') );\r\n        }\r\n        return originalDate ?? { scheduleDate: e };\r\n    });\r\n  }\r\n\r\n  private initializeUsers(): void {\r\n    this.apiService.findAll(`${ENDPOINTS.userAccountType}/ASC_USER`).subscribe(\r\n      (res: any) => {\r\n       this.users = res.responseData.data;\r\n    });\r\n  }\r\n\r\n  private clearData(): void {\r\n    this.selectedDates = [];\r\n    this.originalUserDates = [];\r\n    this.calendar.updateTodaysDate();\r\n    this.updateDataSource();\r\n  }\r\n\r\n  private initializeUserDates(user): void {\r\n    this.clearData();\r\n    this.apiService.findAll(`${ ENDPOINTS.weeklyUserScheduleCustomSearch }?&accountId=${ user.id }`).subscribe((res) => {\r\n      if (res.data.length) {\r\n        res = res.data[0];\r\n        this.originalUserDates = res.weeklyUserScheduleDates.map((e) => format(new Date(e.scheduleDate), 'yyyy-MM-dd'));\r\n        this.selectedDates = [...this.originalUserDates];\r\n        this.userExistingRecord = res;\r\n        this.updateDataSource();\r\n        this.calendar.updateTodaysDate();\r\n      } else {\r\n        this.userExistingRecord = null;\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { WeeklyUserScheduleComponent } from './weekly-user-schedule.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: WeeklyUserScheduleComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class WeeklyUserScheduleRoutingModule { }\r\n"]}