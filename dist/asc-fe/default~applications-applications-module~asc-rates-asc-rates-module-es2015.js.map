{"version":3,"sources":["./src/app/modules/pages/maintenance/asc-rates/asc-rates.component.scss","./src/app/modules/pages/maintenance/asc-rates/asc-rates.component.html","./src/app/modules/pages/maintenance/asc-rates/asc-rates.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,6GAA8C,uLAAuL,E;;;;;;;;;;;;ACApP;AAAe,08BAA24B,eAAe,klBAAklB,mCAAmC,q6FAAq6F,UAAU,4nBAA4nB,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA5gK;AACO;AACP;AACd;AACb;AACwB;AACK;AACiB;AACjD;IAOlB,iBAAiB,SAAjB,iBAAiB;IAwB5B,YACU,UAAsB,EACtB,WAAwB,EACzB,oBAA0C,EACzC,iBAAoC;QAHpC,eAAU,GAAV,UAAU,CAAY;QACtB,gBAAW,GAAX,WAAW,CAAa;QACzB,yBAAoB,GAApB,oBAAoB,CAAsB;QACzC,sBAAiB,GAAjB,iBAAiB,CAAmB;QAxB9C,qBAAgB,GAAa;YAC3B,YAAY;YACZ,UAAU;YACV,eAAe;YACf,cAAc;YACd,kBAAkB;YAClB,iBAAiB;YACjB,oBAAoB;YACpB,iBAAiB;YACjB,QAAQ;SACT,CAAC;QACF,eAAU,GAAG,CAAC,GAAG,gDAAQ,CAAC,CAAC;QAE3B,YAAO,GAAG,IAAI,+CAAO,EAAE,CAAC;QACxB,gBAAW,GAAG,EAAE,CAAC;QACjB,8BAAyB,GAAG,EAAE,CAAC;QAC/B,qBAAgB,GAAG,EAAE,CAAC;IASlB,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,OAAO,EAAE,CAAC;QACf,IAAI,CAAC,gBAAgB,EAAE,CAAC;IAC1B,CAAC;IAED,OAAO;QACL,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,iDAAS,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,GAAQ,EAAE,EAAE;YACjE,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC,YAAY,CAAC,IAAI,CAAC;YACzC,IAAI,CAAC,UAAU,GAAG,IAAI,0EAAkB,CAAU,GAAG,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;YACzE,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC;YAC7D,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC;QACrD,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,mBAAmB,EAAE,CAAC;IAC7B,CAAC;IAED,mBAAmB;QACjB,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,iDAAS,CAAC,YAAY,CAAC,CAAC,SAAS,CAAC,CAAC,GAAQ,EAAE,EAAE;YACrE,IAAI,CAAC,gBAAgB,GAAG,GAAG,CAAC,YAAY,CAAC,IAAI,CAAC;QAChD,CAAC,CAAC,CAAC;IACL,CAAC;IAED,YAAY;QACV,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;QACvC,IAAI,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE;YAC7B,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,iDAAS,CAAC,wBAAwB,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,GAAQ,EAAE,EAAE;gBAChH,IAAI,CAAC,yBAAyB,GAAG,GAAG,CAAC,YAAY,CAAC,IAAI,CAAC;YACzD,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;IAED,IAAI;QACF,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAE1B,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,iDAAS,CAAC,QAAQ,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,CAC9D,CAAC,GAAQ,EAAE,EAAE;YACX,IAAI,GAAG,KAAK,SAAS,EAAE;gBACrB,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;aACrC;QACH,CAAC,EAAE,CAAC,GAAQ,EAAE,EAAE;YACd,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YAEjB,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACpC,CAAC,EAAE,GAAG,EAAE;YACN,6BAA6B;YAC7B,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAC1B,IAAI,CAAC,OAAO,EAAE,CAAC;QACjB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,UAAU;QACR,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,iDAAS,CAAC,QAAQ,EAAE,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,CAAC,GAAQ,EAAE,EAAE;YACtG,IAAI,GAAG,EAAE;gBACP,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC,YAAY,CAAC,IAAI,CAAC;gBACrC,IAAI,CAAC,YAAY,EAAE,CAAC;aACrB;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,4BAA4B;QAC1B,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,iDAAS,CAAC,gBAAgB,CAAC,CAAC,SAAS,CAAC,CAAC,GAAQ,EAAE,EAAE;YACzE,IAAI,CAAC,yBAAyB,GAAG,GAAG,CAAC,YAAY,CAAC,IAAI,CAAC;QACzD,CAAC,CAAC,CAAC;IACL,CAAC;IAED,MAAM;QAEJ,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,iDAAS,CAAC,QAAQ,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,CAChE,CAAC,GAAQ,EAAE,EAAE;YACX,IAAI,GAAG,KAAK,SAAS,EAAE;gBACrB,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;aACrC;QACH,CAAC,EAAE,CAAC,GAAQ,EAAE,EAAE;YACd,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACpC,CAAC,EAAE,GAAG,EAAE;YACN,6BAA6B;YAC7B,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAC1B,IAAI,CAAC,OAAO,EAAE,CAAC;QACjB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,gBAAgB;QACd,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,uDAAe,CAAC,MAAM,CAAC;QAC7C,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACxC,UAAU,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACvC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACrC,aAAa,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACxC,YAAY,EAAE,CAAC,EAAE,CAAC;YAClB,gBAAgB,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC3C,eAAe,EAAE,CAAC,EAAE,CAAC;YACrB,eAAe,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC1C,YAAY,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACvC,MAAM,EAAE,CAAC,EAAE,CAAC;SACb,CAAC,CAAC;IACL,CAAC;IAED,kBAAkB;QAChB,IAAI,CAAC,OAAO,GAAG,IAAI,+CAAO,EAAE,CAAC;QAC7B,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,uDAAe,CAAC,MAAM,CAAC;QAC7C,IAAI,CAAC,WAAW,CAAC,eAAe,EAAE,CAAC;QACnC,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE,CAAC;IACpC,CAAC;IAED,UAAU,CAAC,YAAY;QACrB,OAAO,YAAY,KAAK,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;IAC/C,CAAC;IAED,sBAAsB,CAAC,KAAU,EAAE,QAAa;QAC9C,IAAI,KAAK,IAAI,QAAQ,EAAE;YACrB,OAAO,KAAK,CAAC,eAAe,KAAK,QAAQ,CAAC,eAAe,CAAC;SAC3D;IACH,CAAC;IAED,mBAAmB,CAAC,KAAU,EAAE,QAAa;QAC3C,IAAI,KAAK,IAAI,QAAQ,EAAE;YACrB,OAAO,KAAK,CAAC,WAAW,KAAK,QAAQ,CAAC,WAAW,CAAC;SACnD;IACH,CAAC;IAED,MAAM;QACJ,mDAAI,CAAC,IAAI,CAAC;YACR,IAAI,EAAE,gDAAgD;YACtD,IAAI,EAAE,UAAU;YAChB,gBAAgB,EAAE,IAAI;YACtB,kBAAkB,EAAE,SAAS;YAC7B,iBAAiB,EAAE,MAAM;YACzB,iBAAiB,EAAE,SAAS;SAC7B,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;YACjB,IAAI,MAAM,CAAC,KAAK,EAAE;gBAChB,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,iDAAS,CAAC,QAAQ,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,SAAS,CACvE,GAAG,EAAE;oBACH,IAAI,CAAC,iBAAiB,CAAC,oBAAoB,CAAC,gCAAgC,CAAC,CAAC;oBAC9E,IAAI,CAAC,kBAAkB,EAAE,CAAC;oBAC1B,IAAI,CAAC,OAAO,EAAE,CAAC;gBACjB,CAAC,CACF,CAAC;aACH;QACH,CAAC,CAAC,CAAC;IACL,CAAC;CAEF;;YApLQ,oDAAU;YAJV,0DAAW;YAMX,8FAAoB;YAFR,2DAAiB;;;gCAYnC,uDAAS,SAAC,4DAAiB;;AAFjB,iBAAiB;IAL7B,+DAAS,CAAC;QACT,QAAQ,EAAE,eAAe;QACzB,sFAAyC;;KAE1C,CAAC;GACW,iBAAiB,CA0K7B;AA1K6B","file":"default~applications-applications-module~asc-rates-asc-rates-module-es2015.js","sourcesContent":["export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcGFnZXMvbWFpbnRlbmFuY2UvYXNjLXJhdGVzL2FzYy1yYXRlcy5jb21wb25lbnQuc2NzcyJ9 */\";","export default \"<form>\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12 title\\\">\\r\\n                <mat-label>\\r\\n                    <i class=\\\"material-icons\\\">credit_score</i>\\r\\n                    ASC Rates\\r\\n                </mat-label>\\r\\n            </div>\\r\\n        </div>\\r\\n        <hr>\\r\\n\\r\\n        <form [formGroup]=\\\"ascRateForm\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\">\\r\\n                  <mat-label>Type Of Medium</mat-label>\\r\\n                  <mat-select [(ngModel)]=\\\"ascRate.typeOfMedium\\\" name=\\\"typeOfMedium\\\" formControlName=\\\"typeOfMedium\\\"\\r\\n                  [compareWith]=\\\"compareTypeOfMedium\\\" (selectionChange)=\\\"setExecution()\\\">\\r\\n                      <mat-option *ngFor=\\\"let i of typeOfMediumList\\\" [value]=\\\"i\\\">\\r\\n                          {{i.description}}\\r\\n                      </mat-option>\\r\\n                  </mat-select>\\r\\n              </mat-form-field>\\r\\n\\r\\n              <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\">\\r\\n                  <mat-label>Type Of Execution</mat-label>\\r\\n                  <mat-select [(ngModel)]=\\\"ascRate.typeOfExecution\\\" name=\\\"typeOfExecution\\\" formControlName=\\\"typeOfExecution\\\"\\r\\n                  [compareWith]=\\\"compareMediumExecution\\\">\\r\\n                      <mat-option *ngFor=\\\"let i of typeOfMediumExecutionList\\\" [value]=\\\"i.typeOfExecution\\\">\\r\\n                          {{i.typeOfExecution.typeOfExecution}}\\r\\n                      </mat-option>\\r\\n                  </mat-select>\\r\\n              </mat-form-field>\\r\\n\\r\\n                <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\">\\r\\n                    <mat-label>Length From</mat-label>\\r\\n                    <input matInput [(ngModel)]=\\\"ascRate.lengthFrom\\\" name=\\\"lengthFrom\\\" formControlName=\\\"lengthFrom\\\"\\r\\n                        (keydown)=\\\"validateFieldService.numbersOnly($event)\\\" maxlength=\\\"5\\\">\\r\\n                </mat-form-field>\\r\\n\\r\\n                <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\">\\r\\n                    <mat-label>Length To</mat-label>\\r\\n                    <input matInput [(ngModel)]=\\\"ascRate.lengthTo\\\" name=\\\"lengthTo\\\" formControlName=\\\"lengthTo\\\"\\r\\n                        (keydown)=\\\"validateFieldService.numbersOnly($event)\\\" maxlength=\\\"5\\\">\\r\\n                </mat-form-field>\\r\\n\\r\\n                <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\">\\r\\n                    <mat-label>Member Offline <span class=\\\"required-field\\\">*</span></mat-label>\\r\\n                    <input matInput [(ngModel)]=\\\"ascRate.memberOffline\\\" name=\\\"memberOffline\\\"\\r\\n                        formControlName=\\\"memberOffline\\\" (keydown)=\\\"validateFieldService.numbersOnly($event)\\\">\\r\\n                </mat-form-field>\\r\\n\\r\\n                <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\">\\r\\n                    <mat-label>Non Member Offline <span class=\\\"required-field\\\">*</span></mat-label>\\r\\n                    <input matInput [(ngModel)]=\\\"ascRate.nonMemberOffline\\\" name=\\\"nonMemberOffline\\\"\\r\\n                        formControlName=\\\"nonMemberOffline\\\" (keydown)=\\\"validateFieldService.numbersOnly($event)\\\">\\r\\n                </mat-form-field>\\r\\n\\r\\n                <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\">\\r\\n                    <mat-label>Member Online</mat-label>\\r\\n                    <input matInput [(ngModel)]=\\\"ascRate.memberOnline\\\" name=\\\"memberOnline\\\"\\r\\n                        formControlName=\\\"memberOnline\\\" (keydown)=\\\"validateFieldService.numbersOnly($event)\\\">\\r\\n                </mat-form-field>\\r\\n\\r\\n                <mat-form-field class=\\\"col-md-6\\\" appearance=\\\"outline\\\">\\r\\n                    <mat-label>Non Member Online</mat-label>\\r\\n                    <input matInput [(ngModel)]=\\\"ascRate.nonMemberOnline\\\" name=\\\"nonMemberOnline\\\"\\r\\n                        formControlName=\\\"nonMemberOnline\\\" (keydown)=\\\"validateFieldService.numbersOnly($event)\\\">\\r\\n                </mat-form-field>\\r\\n\\r\\n                <mat-form-field class=\\\"col-md-4\\\" appearance=\\\"outline\\\" *ngIf=\\\"ascRate.id\\\">\\r\\n                    <mat-label>Status</mat-label>\\r\\n                    <mat-select [(ngModel)]=\\\"ascRate.status\\\" name=\\\"status\\\" formControlName=\\\"status\\\">\\r\\n                        <mat-option *ngFor=\\\"let i of statusList\\\" [value]=\\\"i.status\\\">\\r\\n                            {{i.status}}\\r\\n                        </mat-option>\\r\\n                    </mat-select>\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n        </form>\\r\\n\\r\\n        <app-form-action-buttons [childObject]=\\\"ascRate\\\" [childForm]=\\\"ascRateForm\\\" (saveFunction)=\\\"save()\\\"\\r\\n            (updateFunction)=\\\"update()\\\" (cancelFunction)=\\\"resetFormValidator()\\\" (deleteFunction)=\\\"delete()\\\"></app-form-action-buttons>\\r\\n        <br>\\r\\n        <app-form-list [dataSource]=\\\"dataSource\\\" [displayedColumns]=\\\"displayedColumns\\\"\\r\\n            (selectInListFunction)=\\\"getAscRate()\\\"></app-form-list>\\r\\n\\r\\n    </div>\\r\\n</form>\\r\\n\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { FormListComponent } from '@fragments';\r\nimport { AscRate } from '@models';\r\nimport { ApiService, SweetAlertService } from '@services';\r\nimport { COMMON_FUNCTION, ENDPOINTS, STATUSES } from '@shared';\r\nimport { ValidateFieldService } from 'app/core/services/validate-field.service';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-asc-rates',\r\n  templateUrl: './asc-rates.component.html',\r\n  styleUrls: ['./asc-rates.component.scss']\r\n})\r\nexport class AscRatesComponent implements OnInit {\r\n\r\n  @ViewChild(FormListComponent) formListComponent: FormListComponent;\r\n  dataSource: MatTableDataSource<AscRate>;\r\n  displayedColumns: string[] = [\r\n    'lengthFrom',\r\n    'lengthTo',\r\n    'memberOffline',\r\n    'memberOnline',\r\n    'nonMemberOffline',\r\n    'nonMemberOnline',\r\n    'typeOfExecutionObj',\r\n    'typeOfMediumObj',\r\n    'status'\r\n  ];\r\n  statusList = [...STATUSES];\r\n\r\n  ascRate = new AscRate();\r\n  ascRateList = [];\r\n  typeOfMediumExecutionList = [];\r\n  typeOfMediumList = [];\r\n\r\n  ascRateForm: FormGroup;\r\n\r\n  constructor(\r\n    private apiService: ApiService,\r\n    private formBuilder: FormBuilder,\r\n    public validateFieldService: ValidateFieldService,\r\n    private sweetAlertService: SweetAlertService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.getList();\r\n    this.setFormValidator();\r\n  }\r\n\r\n  getList(): void {\r\n    this.apiService.findAll(ENDPOINTS.ascRates).subscribe((res: any) => {\r\n      this.ascRateList = res.responseData.data;\r\n      this.dataSource = new MatTableDataSource<AscRate>(res.responseData.data);\r\n      this.dataSource.paginator = this.formListComponent.paginator;\r\n      this.dataSource.sort = this.formListComponent.sort;\r\n    });\r\n    this.getTypeOfMediumList();\r\n  }\r\n\r\n  getTypeOfMediumList(): void {\r\n    this.apiService.findAll(ENDPOINTS.typeOfMedium).subscribe((res: any) => {\r\n      this.typeOfMediumList = res.responseData.data;\r\n    });\r\n  }\r\n\r\n  setExecution() {\r\n    console.log(this.ascRate.typeOfMedium);\r\n    if (this.ascRate.typeOfMedium) {\r\n      this.apiService.findAll(ENDPOINTS.typeOfExecutionsByMedium + this.ascRate.typeOfMedium.id).subscribe((res: any) => {\r\n        this.typeOfMediumExecutionList = res.responseData.data;\r\n      });\r\n    }\r\n  }\r\n\r\n  save(): void {\r\n    console.log(this.ascRate);\r\n\r\n    this.apiService.save(ENDPOINTS.ascRates, this.ascRate).subscribe(\r\n      (res: any) => {\r\n        if (res !== undefined) {\r\n          this.sweetAlertService.success(res);\r\n        }\r\n      }, (err: any) => {\r\n        console.log(err);\r\n\r\n        this.sweetAlertService.error(err);\r\n      }, () => {\r\n        // actions after subscription\r\n        this.resetFormValidator();\r\n        this.getList();\r\n      });\r\n  }\r\n\r\n  getAscRate(): void {\r\n    this.apiService.findById(ENDPOINTS.ascRates, this.formListComponent.idForUpdate).subscribe((res: any) => {\r\n      if (res) {\r\n        this.ascRate = res.responseData.data;\r\n        this.setExecution();\r\n      }\r\n    });\r\n  }\r\n\r\n  getTypeOfMediumExecutionList(): void {\r\n    this.apiService.findAll(ENDPOINTS.typeOfExecutions).subscribe((res: any) => {\r\n      this.typeOfMediumExecutionList = res.responseData.data;\r\n    });\r\n  }\r\n\r\n  update(): void {\r\n\r\n    this.apiService.update(ENDPOINTS.ascRates, this.ascRate).subscribe(\r\n      (res: any) => {\r\n        if (res !== undefined) {\r\n          this.sweetAlertService.success(res);\r\n        }\r\n      }, (err: any) => {\r\n        this.sweetAlertService.error(err);\r\n      }, () => {\r\n        // actions after subscription\r\n        this.resetFormValidator();\r\n        this.getList();\r\n      });\r\n  }\r\n\r\n  setFormValidator(): void {\r\n    this.ascRate.status = COMMON_FUNCTION.ACTIVE;\r\n    this.ascRateForm = this.formBuilder.group({\r\n      lengthFrom: ['', [Validators.required]],\r\n      lengthTo: ['', [Validators.required]],\r\n      memberOffline: ['', Validators.required],\r\n      memberOnline: [''],\r\n      nonMemberOffline: ['', Validators.required],\r\n      nonMemberOnline: [''],\r\n      typeOfExecution: ['', Validators.required],\r\n      typeOfMedium: ['', Validators.required],\r\n      status: [''],\r\n    });\r\n  }\r\n\r\n  resetFormValidator(): void {\r\n    this.ascRate = new AscRate();\r\n    this.ascRate.status = COMMON_FUNCTION.ACTIVE;\r\n    this.ascRateForm.markAsUntouched();\r\n    this.ascRateForm.markAsPristine();\r\n  }\r\n\r\n  setPenalty(penaltyParam): boolean {\r\n    return penaltyParam === 'Yes' ? true : false;\r\n  }\r\n\r\n  compareMediumExecution(value: any, selected: any): boolean {\r\n    if (value && selected) {\r\n      return value.typeOfExecution === selected.typeOfExecution;\r\n    }\r\n  }\r\n\r\n  compareTypeOfMedium(value: any, selected: any): boolean {\r\n    if (value && selected) {\r\n      return value.description === selected.description;\r\n    }\r\n  }\r\n\r\n  delete() {\r\n    Swal.fire({\r\n      text: 'Are you sure you want to delete this ASC rate?',\r\n      icon: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Confirm'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.apiService.deleteById(ENDPOINTS.ascRates, this.ascRate.id).subscribe(\r\n          () => {\r\n            this.sweetAlertService.customSuccessMessage('ASC rate successfully deleted.');\r\n            this.resetFormValidator();\r\n            this.getList();\r\n          }\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}