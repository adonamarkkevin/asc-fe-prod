{"version":3,"sources":["webpack:///src/app/core/models/type-of-document.model.ts","webpack:///src/app/core/models/country.model.ts","webpack:///src/app/core/models/type-of-reason.model.ts","webpack:///src/app/modules/pages/accounting/payments/payments.component.scss","webpack:///src/app/core/models/type-of-application.model.ts","webpack:///src/app/modules/pages/accounting/payments/payments-routing.module.ts","webpack:///src/app/core/models/s1-application.model.ts","webpack:///src/app/core/models/product.model.ts","webpack:///src/app/core/models/payment.model.ts","webpack:///src/app/core/models/type-of-medium.model.ts","webpack:///src/app/core/models/application-multimedia.model.ts","webpack:///src/app/core/models/s2-application.model.ts","webpack:///src/app/core/models/or-preparation.model.ts","webpack:///src/app/modules/pages/accounting/payments/payments.component.ts","webpack:///src/app/core/models/user-account.model.ts","webpack:///src/app/core/models/asc-rate.model.ts","webpack:///src/app/core/models/application-single-media.model.ts","webpack:///src/app/modules/pages/accounting/payments/payments.module.ts","webpack:///src/app/core/models/application-request.model.ts","webpack:///src/app/core/models/profile.model.ts","webpack:///src/app/core/models/attachment-document.model.ts","webpack:///src/app/core/models/category.model.ts","webpack:///src/app/core/models/supporting-document.model.ts","webpack:///src/app/core/models/user-role.model.ts","webpack:///src/app/core/models/payment-type.model.ts","webpack:///src/app/core/models/or-preparation-reference.model.ts","webpack:///src/app/core/models/performance-metrics.model.ts","webpack:///src/app/core/models/payment-method.model.ts","webpack:///src/app/core/models/index.ts","webpack:///src/app/modules/pages/accounting/payments/payments.component.html","webpack:///src/app/core/models/affiliation.model.ts","webpack:///src/app/core/models/brand.model.ts","webpack:///src/app/core/models/company.model.ts"],"names":["TypeOfDocument","Country","TypeOfReason","TypeOfApplication","routes","path","component","PaymentsRoutingModule","imports","forChild","exports","S1Application","Product","Payment","paymentMethod","filedBirForm","remarks","TypeOfMedium","ApplicationMultimedia","ApplicationMultimediaItemsDTO","ApplicationMultimediaMovingDTO","ApplicationMultimediaStaticDTO","S2Application","OrPreparation","totals","totalSales","totalAmountDue","totalVat","totalWithholdingtax","PaymentsComponent","router","apiService","dataStorageService","spinner","route","pageSize","pageNo","pageSizeOptions","currentPage","paymentTotalItems","paymentTypeList","paymentList","paymentType","paymentStatusList","paymentStatus","linkExtension","snapshot","paramMap","get","filter","filteredList","type","SCHEDULE_OF_FEES_INDIVIDUAL","SCHEDULE_OF_FEES_MULTIPLE","SCHEDULE_OF_FEES_SPECIAL","DELINQUENT","PENALIZED_BRANDS","PENALIZED_COMPANY","ACCOUNTS_RECEIVABLE","getPaymentList","element","referenceCode","referenceCodeRejected","param","show","endpoint","navigate","displayedColumns","scheduleOfFeesMonitoring","scheduleOfFeesMultipleMonitoring","scheduleOfFeesSpecialMonitoring","delinquentApplications","penalizedBrandMonitoring","replace","companyPenalties","console","log","findAll","subscribe","res","data","responseData","totalItems","dataSource","sort","hide","err","event","pageIndex","length","setPageSizeOptionsInput","split","map","str","value","selected","elm","toLowerCase","id","payment","amountDue","amountToSettle","applicationForm","appFormReference","companyId","setPayment","company","selector","template","UserAccount","AscRate","ApplicationSingleMedia","PaymentsModule","declarations","ApplicationRequest","Profile","AttachmentDocument","Category","SupportingDocument","UserRole","PaymentType","OrPreparationReference","PerformanceMetrics","PaymentMethod","Affiliation","Brand","Company"],"mappings":"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","file":"payments-payments-module-es5.js","sourcesContent":["export class TypeOfDocument {\r\n    id: number;\r\n    description: string;\r\n    remarksEnable: boolean;\r\n    basedOnEnable: boolean;\r\n    variantEnable: boolean;\r\n    dateOfLaunchEnable: boolean;\r\n    expiresOnEnable: boolean;\r\n    inputEnable: boolean;\r\n    status: string;\r\n}\r\n","export class Country {\r\n  id: number;\r\n  code: string;\r\n  name: string;\r\n}","export class TypeOfReason {\r\n    id: number;\r\n    reason: string;\r\n    status: string;\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcGFnZXMvYWNjb3VudGluZy9wYXltZW50cy9wYXltZW50cy5jb21wb25lbnQuc2NzcyJ9 */\";","export class TypeOfApplication {\r\n    id: number;\r\n    description: string;\r\n    clearingReleaseTime: String\r\n    decisionReleaseTime: String\r\n    sequenceNo: number;\r\n    status: String\r\n    submissionEndTime: String;\r\n    submissionStartTime: String\r\n}","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { PaymentsComponent } from './payments.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: PaymentsComponent\r\n  },\r\n  {\r\n    path: ':link',\r\n    component: PaymentsComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class PaymentsRoutingModule { }\r\n","import { Company } from './company.model';\r\nimport { Brand } from './brand.model';\r\nimport { ApplicationType } from './application-type.model';\r\nimport { UserAccount } from './user-account.model';\r\nimport { MultipleApplication } from './multiple-application.model';\r\nimport { Affiliation } from './affiliation.model';\r\nimport { ApplicationRequest } from './application-request.model';\r\nimport { Product } from './product.model';\r\nimport { TypeOfMedium } from './type-of-medium.model';\r\n\r\nexport class S1Application {\r\n    id: number;\r\n    company: Company;\r\n    brand: Brand;\r\n    adTitle: string;\r\n    referenceCode: string;\r\n\r\n    tagLine: string;\r\n    materialInformation: string;\r\n    externalStatus: string\r\n    internalStatus: string\r\n    revisionNo: number;\r\n\r\n    actionBy: UserAccount;\r\n    actionStatus: string; // ASSIGN_TO_ADSPE, ASSIGN_TO_REVIEWER, ASSIGN_TO_SCREENER\r\n    formStatus: string; // OPEN, LOCKED\r\n    submissionType: string // ORIGINAL, REVISION, COMPLIANCE\r\n    applicationType: ApplicationType;\r\n\r\n    formType: string; // INDIVIDUAL, MULTIPLE\r\n    autoSubmit: boolean;\r\n    submissionDate: Date;\r\n    sequenceOrder: number;\r\n    countSeries: number;\r\n\r\n    refTypeOfMedium: string;\r\n    assignedUser: UserAccount;\r\n    applicationOwner: UserAccount;\r\n    multipleApplication: MultipleApplication;\r\n    appFormReference: string;\r\n\r\n    mainAttachmentReference: string;\r\n    supportingAttachmentReference: string;\r\n    paymentAttachmentReference: string;\r\n    membersAffiliation: Affiliation;\r\n    decisionStatus: string;\r\n\r\n    amount: number;\r\n    applicationRequest: ApplicationRequest;\r\n    revisionLetterAttachmentReference: string;\r\n    assignedEncoder: UserAccount;\r\n    assignedAdSpecialist: UserAccount;\r\n\r\n    assignedScreener: UserAccount;\r\n    assignedReviewer: UserAccount;\r\n    verifiedDatetimeByEvaluator: Date;\r\n    sameDayRelease: boolean;\r\n    paidByApplicant: boolean;\r\n\r\n    archived: boolean;\r\n    appliedS2: boolean;\r\n    deliquent: boolean;\r\n    paymentStatus: string;\r\n    applicationDate: Date;\r\n\r\n    validUntil: Date;\r\n    previousRefCode: string;\r\n    hasNoSupportingDocs: boolean;\r\n    referenceCodeRejected: string;\r\n\r\n    hasRevision: boolean;\r\n    product: Product;\r\n    hasOngoingRevision: boolean;\r\n    qrCode: string;\r\n    barCode: string;\r\n    screenerDecisionComment: boolean;\r\n    reviewerDecisionComment: boolean;\r\n    hasOngoingCompliance: boolean;\r\n    releaseStatus: string;\r\n\r\n    complianceForm: boolean; // param need upon request for compliance\r\n    emailSent: boolean;\r\n    forwardToScreener: boolean;\r\n    forwardToReviewer: boolean;\r\n    formProcess: string;\r\n    typeOfMedium: string;\r\n\r\n    stampMaterialFileURL: string;\r\n    stampMaterialFilename: string;\r\n    decisionFormFileURL : string;\r\n    decisionFormFilename: string;\r\n\r\n    hasOngoingAppeal: boolean;\r\n    typeOfAppeal: string;\r\n    appealAttachmentReference: string;\r\n\r\n    hasOfficialReceipt: boolean;\r\n\r\n    // For AppRequest\r\n    status: string;\r\n\r\n    currentAssignee: string;\r\n}\r\n","import { Brand } from './brand.model';\r\nimport { Category } from './category.model';\r\n\r\nexport class Product {\r\n    id: number;\r\n    description: string;\r\n    status: string;\r\n    brand: Brand;\r\n    category: Category;\r\n}\r\n","import { S1Application } from './s1-application.model';\r\nimport { PaymentMethod } from './payment-method.model';\r\nimport { MultipleApplication } from './multiple-application.model';\r\nimport { S2Application } from './s2-application.model';\r\n\r\nexport class Payment {\r\n    id: number;\r\n    amountDue: number;\r\n    amountReceive: number;\r\n    appFormReference: string;\r\n    applicationForm: S1Application;\r\n    basicRate: number;\r\n    discount: number;\r\n    filename: string;\r\n    officialReceiptNo: string;\r\n    paymentAttachmentReference: string;\r\n    paymentDate: Date;\r\n    paymentMethod: PaymentMethod = new PaymentMethod();\r\n    paymentStatus: string; // PAID, UNPAID\r\n    remarks: string;\r\n    status: string;\r\n    vat: number;\r\n    withholdingTax: number;\r\n    amountToSettle: number;\r\n    companyName: string;\r\n    companyId: number;\r\n\r\n    multipleApplication: MultipleApplication;\r\n    filedBirForm: boolean = false;\r\n    applicationFormS2: S2Application;\r\n\r\n    constructor() {\r\n        this.filedBirForm = false;\r\n        this.remarks = '';\r\n    }\r\n}\r\n","import { TypeOfClearance } from './type-of-clearance.model';\r\nimport { TypeOfMainDocument } from './type-of-main-document.model';\r\n\r\nexport class TypeOfMedium {\r\n  description: string;\r\n  executionEnable: boolean;\r\n  id: number;\r\n  languageEnable: boolean;\r\n  lengthEnable: boolean;\r\n  multimedia: boolean;\r\n  multimediaMoving: boolean;\r\n  multimediaStatic: boolean;\r\n  othersEnable: boolean;\r\n  singlemedia: boolean;\r\n  sizeLengthEnable: boolean;\r\n  status: string;\r\n  typeOfMainDocument: TypeOfMainDocument;\r\n  widthEnable: boolean;\r\n  typeOfClearance: TypeOfClearance;\r\n\r\n  // not in BE; for List value\r\n  enabledFields: string;\r\n  sizeLength: string;\r\n}\r\n","import { TypeOfMedium } from './type-of-medium.model';\r\n\r\nexport class ApplicationMultimedia {\r\n    id: number;\r\n    amount: number;\r\n    appFormReference: string;\r\n    mediaType?: string; // STATIC, MOVING\r\n    multimediaSizeLength?: string;\r\n    typeOfMedium?: TypeOfMedium;\r\n}\r\n\r\nexport class ApplicationMultimediaItemsDTO {\r\n    hasSelected: boolean;\r\n    id: number;\r\n    multimediaMovingMedium?: string;\r\n    multimediaStaticMedium?: string;\r\n    sizeLength?: number;\r\n}\r\n\r\nexport class ApplicationMultimediaMovingDTO extends ApplicationMultimedia {\r\n    applicationMultimediaMovingList: ApplicationMultimediaItemsDTO[];\r\n    sizeLength: number;\r\n}\r\n\r\nexport class ApplicationMultimediaStaticDTO extends ApplicationMultimedia {\r\n    applicationMultimediaStaticList: ApplicationMultimediaItemsDTO[];\r\n}\r\n","import { ApplicationRequest } from './application-request.model';\r\nimport { S1Application } from './s1-application.model';\r\nimport { UserAccount } from './user-account.model';\r\n\r\nexport class S2Application {\r\n\r\n    id: number;\r\n    actionBy: string;\r\n    actionStatus: string;\r\n    applicationDate: Date;\r\n    applicationForm: S1Application;\r\n    assignedAdSpecialist: UserAccount;\r\n    assignedEncoder: UserAccount;\r\n    assignedUser: UserAccount;\r\n    complianceDate: Date;\r\n    decisionStatus: string;\r\n    externalStatus: string;\r\n    finalMaterialAttachmentReference: string;\r\n    formStatus: string;\r\n    internalStatus: string;\r\n    issuedDate: Date;\r\n    paymentStatus: string;\r\n    specialClearing: boolean;\r\n    submissionDate: Date;\r\n    validUntil: Date;\r\n    validityDate: Date;\r\n    referenceCodeRejected: string;\r\n    releaseDate: Date;\r\n    hasToa: boolean;\r\n    submissionType: string;\r\n    applicationRequest: ApplicationRequest;\r\n    paymentAttachmentReference: string;\r\n    amount: string;\r\n    appFormReference: string;\r\n    hasOngoingCompliance: boolean;\r\n    formProcess: string;\r\n    complianceForm: boolean; // param need upon request for compliance\r\n    hasOngoingAppeal: boolean;\r\n    typeOfAppeal: string;\r\n    appealAttachmentReference: string;\r\n    clearanceToaFileUrl: string;\r\n    clearanceToaFilename: string;\r\n    releaseStatus: string;\r\n    supportingAttachmentReference: string;\r\n}\r\n","import { TotalAmountsModel } from './totals.model';\r\nimport { TypeOfMedium, OrPreparationReference } from '@models';\r\n\r\nexport class OrPreparation {\r\n    amount: number;\r\n    amountInWords: string;\r\n    businessStyle: string;\r\n    companyAddress: string;\r\n    companyName: string;\r\n    companyTin: string;\r\n    controlNumber: string;\r\n    fullPaymentOf: string;\r\n    id: number;\r\n    officialReceiptDate: Date;\r\n    officialReceiptNo: string;\r\n    officialReceiptReferences: OrPreparationReference[];\r\n    remarks: string;\r\n    status: string;\r\n    typeOfMedium: TypeOfMedium;\r\n    voucherControlNumber: string;\r\n\r\n    //totals\r\n    totalSales: number;\r\n    totalVat: number;\r\n    totalWithholdingtax: number;\r\n    totalAmountDue: number;\r\n\r\n    // Not if BE; for FE only\r\n    officialReceiptReferencesValue: string;\r\n\r\n    setTotalAmounts(totals: TotalAmountsModel){\r\n        this.totalSales = totals.totalSales;\r\n        this.totalAmountDue = totals.totalAmountDue;\r\n        this.totalVat = totals.totalVat;\r\n        this.totalWithholdingtax = totals.totalWithholdingtax;\r\n    }\r\n}","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { Payment } from \"@models\";\r\nimport { ApiService, DataStorageService } from \"@services\";\r\nimport {\r\n  ENDPOINTS,\r\n  PAYMENT_STATUS_LIST,\r\n  PAYMENT_TYPE,\r\n  PAYMENT_TYPE_LIST,\r\n} from \"@shared\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\n\r\n@Component({\r\n  selector: \"app-payments\",\r\n  templateUrl: \"./payments.component.html\",\r\n  styleUrls: [\"./payments.component.scss\"],\r\n})\r\nexport class PaymentsComponent implements OnInit {\r\n  @ViewChild(MatPaginator, { static: false }) paginatorFalse: MatPaginator;\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  pageSize = 10;\r\n  pageNo = 0;\r\n  pageSizeOptions: number[] = [10, 20, 50];\r\n  currentPage = 1;\r\n  paymentTotalItems = 0;\r\n  @ViewChild(MatSort, { static: false }) sort: MatSort;\r\n\r\n  dataSource: MatTableDataSource<Payment>;\r\n  displayedColumns: string[];\r\n  paymentTypeList = [...PAYMENT_TYPE_LIST];\r\n  paymentList = [];\r\n  paymentType = PAYMENT_TYPE_LIST[0];\r\n  paymentStatusList = PAYMENT_STATUS_LIST;\r\n  paymentStatus = \"FOR_APPROVAL\";\r\n\r\n  linkExtension = \"\";\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private apiService: ApiService,\r\n    private dataStorageService: DataStorageService,\r\n    private spinner: NgxSpinnerService,\r\n    private route: ActivatedRoute\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.linkExtension = this.route.snapshot.paramMap.get(\"link\");\r\n    if (this.linkExtension === \"schedule-of-fees-individual\") {\r\n      this.paymentType = this.paymentTypeList.filter(\r\n        (filteredList) =>\r\n          filteredList.type === PAYMENT_TYPE.SCHEDULE_OF_FEES_INDIVIDUAL\r\n      )[0];\r\n    } else if (this.linkExtension === \"schedule-of-fees-multiple\") {\r\n      this.paymentType = this.paymentTypeList.filter(\r\n        (filteredList) =>\r\n          filteredList.type === PAYMENT_TYPE.SCHEDULE_OF_FEES_MULTIPLE\r\n      )[0];\r\n    } else if (this.linkExtension === \"schedule-of-fees-special\") {\r\n      this.paymentType = this.paymentTypeList.filter(\r\n        (filteredList) =>\r\n          filteredList.type === PAYMENT_TYPE.SCHEDULE_OF_FEES_SPECIAL\r\n      )[0];\r\n    } else if (this.linkExtension === \"delinquent-companies\") {\r\n      this.paymentType = this.paymentTypeList.filter(\r\n        (filteredList) => filteredList.type === PAYMENT_TYPE.DELINQUENT\r\n      )[0];\r\n    } else if (this.linkExtension === \"brand-penalties\") {\r\n      this.paymentType = this.paymentTypeList.filter(\r\n        (filteredList) => filteredList.type === PAYMENT_TYPE.PENALIZED_BRANDS\r\n      )[0];\r\n    } else if (this.linkExtension === \"company-penalties\") {\r\n      this.paymentType = this.paymentTypeList.filter(\r\n        (filteredList) => filteredList.type === PAYMENT_TYPE.PENALIZED_COMPANY\r\n      )[0];\r\n    } else if (this.linkExtension === \"accounts-receivable\") {\r\n      this.paymentType = this.paymentTypeList.filter(\r\n        (filteredList) => filteredList.type === PAYMENT_TYPE.ACCOUNTS_RECEIVABLE\r\n      )[0];\r\n    }\r\n\r\n    this.getPaymentList(this.paymentStatus);\r\n  }\r\n\r\n  printRefCode(element) {\r\n    if (element.referenceCode) {\r\n      return element.referenceCode;\r\n    } else if (element.referenceCodeRejected) {\r\n      return element.referenceCodeRejected;\r\n    }\r\n  }\r\n\r\n  getByPaymentStatusList(paymentStatus) {\r\n    this.pageNo = 0;\r\n    this.getPaymentList(paymentStatus);\r\n  }\r\n\r\n  getPaymentList(paymentStatus) {\r\n    let param = \"\";\r\n    if (paymentStatus !== \"ALL\") {\r\n      param = \"&paymentStatus=\" + paymentStatus;\r\n    }\r\n\r\n    this.currentPage = this.pageNo;\r\n    this.currentPage++;\r\n    if (this.currentPage === 0) this.currentPage++;\r\n\r\n    this.spinner.show();\r\n    let endpoint = \"\";\r\n    if (this.paymentType.type === PAYMENT_TYPE.SCHEDULE_OF_FEES_INDIVIDUAL) {\r\n      this.router.navigate([\r\n        \"asc/page/accounting/payments/\",\r\n        \"schedule-of-fees-individual\",\r\n      ]);\r\n      this.displayedColumns = [\r\n        \"referenceCode\",\r\n        \"typeOfApplication\",\r\n        \"brand\",\r\n        \"typeOfMedium\",\r\n        \"companyName\",\r\n        \"paymentStatus\",\r\n      ];\r\n      //\r\n      endpoint =\r\n        ENDPOINTS.scheduleOfFeesMonitoring +\r\n        `?page=${this.currentPage}&size=${this.pageSize}` +\r\n        param;\r\n    } else if (\r\n      this.paymentType.type === PAYMENT_TYPE.SCHEDULE_OF_FEES_MULTIPLE\r\n    ) {\r\n      this.router.navigate([\r\n        \"asc/page/accounting/payments/\",\r\n        \"schedule-of-fees-multiple\",\r\n      ]);\r\n      this.displayedColumns = [\r\n        \"adTitle\",\r\n        \"typeOfApplication\",\r\n        \"brand\",\r\n        \"product\",\r\n        \"company\",\r\n        \"paymentStatus\",\r\n      ];\r\n      //\r\n      endpoint =\r\n        ENDPOINTS.scheduleOfFeesMultipleMonitoring +\r\n        `?page=${this.currentPage}&size=${this.pageSize}` +\r\n        param;\r\n    } else if (\r\n      this.paymentType.type === PAYMENT_TYPE.SCHEDULE_OF_FEES_SPECIAL\r\n    ) {\r\n      this.router.navigate([\r\n        \"asc/page/accounting/payments/\",\r\n        \"schedule-of-fees-special\",\r\n      ]);\r\n      this.displayedColumns = [\r\n        \"referenceCode\",\r\n        \"typeOfApplication\",\r\n        \"brand\",\r\n        \"typeOfMedium\",\r\n        \"companyName\",\r\n        \"paymentStatus\",\r\n      ];\r\n      endpoint =\r\n        ENDPOINTS.scheduleOfFeesSpecialMonitoring +\r\n        `?page=${this.currentPage}&size=${this.pageSize}` +\r\n        param;\r\n    } else if (this.paymentType.type === PAYMENT_TYPE.DELINQUENT) {\r\n      this.router.navigate([\r\n        \"asc/page/accounting/payments/\",\r\n        \"delinquent-companies\",\r\n      ]);\r\n      this.displayedColumns = [\r\n        // 'referenceCode',\r\n        \"company\",\r\n        \"membersAffiliation\",\r\n        \"companyTelephoneNo\",\r\n        \"amount\",\r\n      ];\r\n      endpoint =\r\n        ENDPOINTS.delinquentApplications +\r\n        `?hasDelinquentAppForm=true&page=${this.currentPage}&size=${this.pageSize}`;\r\n    } else if (this.paymentType.type === PAYMENT_TYPE.PENALIZED_BRANDS) {\r\n      this.router.navigate([\r\n        \"asc/page/accounting/payments/\",\r\n        \"brand-penalties\",\r\n      ]);\r\n      this.displayedColumns = [\r\n        \"referenceCode\",\r\n        \"brand\",\r\n        \"penaltyDate\",\r\n        \"amount\",\r\n        \"paymentMethod\",\r\n        \"paidDate\",\r\n        \"paymentStatus\",\r\n      ];\r\n      endpoint =\r\n        ENDPOINTS.penalizedBrandMonitoring +\r\n        `?page=${this.currentPage}&size=${this.pageSize}` +\r\n        param?.replace(\"paymentStatus\", \"status\");\r\n    } else if (this.paymentType.type === PAYMENT_TYPE.PENALIZED_COMPANY) {\r\n      this.router.navigate([\r\n        \"asc/page/accounting/payments/\",\r\n        \"company-penalties\",\r\n      ]);\r\n      // endpoint = ENDPOINTS.penalizedCompanyMonitoring;\r\n      this.displayedColumns = [\r\n        \"referenceCode\",\r\n        \"company\",\r\n        \"penaltyDate\",\r\n        \"amount\",\r\n        \"paymentStatus\",\r\n      ];\r\n      endpoint =\r\n        ENDPOINTS.companyPenalties +\r\n        `/custom/search?page=${this.currentPage}&size=${this.pageSize}` +\r\n        param;\r\n    } else if (this.paymentType.type === PAYMENT_TYPE.ACCOUNTS_RECEIVABLE) {\r\n      this.router.navigate([\r\n        \"asc/page/accounting/payments/\",\r\n        \"accounts-receivable\",\r\n      ]);\r\n      this.displayedColumns = [\r\n        \"referenceCode\",\r\n        \"typeOfApplication\",\r\n        \"brand\",\r\n        \"typeOfMedium\",\r\n        \"companyName\",\r\n        \"paymentStatus\",\r\n      ];\r\n      endpoint =\r\n        ENDPOINTS.scheduleOfFeesMonitoring +\r\n        `?hasPromissoryNote=true&page=${this.currentPage}&size=${this.pageSize}` +\r\n        param;\r\n    }\r\n    console.log(endpoint);\r\n\r\n    this.apiService.findAll(endpoint).subscribe(\r\n      (res: any) => {\r\n        if (res.data) {\r\n          this.paymentList = res.data;\r\n        } else if (res.responseData) {\r\n          this.paymentList = res.responseData.data;\r\n        } else if (res) {\r\n          this.paymentList = res;\r\n        } else {\r\n          this.paymentList = [];\r\n        }\r\n\r\n        this.paymentTotalItems = res.totalItems;\r\n        this.dataSource = new MatTableDataSource<Payment>(this.paymentList);\r\n        // this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n        this.paymentTotalItems = res.totalItems;\r\n        this.spinner.hide();\r\n        console.log(\"datasource\", this.dataSource.data);\r\n      },\r\n      (err: any) => {\r\n        this.paymentList = [];\r\n        this.dataSource = new MatTableDataSource<Payment>(this.paymentList);\r\n\r\n        this.spinner.hide();\r\n      }\r\n    );\r\n  }\r\n\r\n  pageEvents(event: any) {\r\n    this.pageSize = event.pageSize;\r\n\r\n    if (event.pageIndex > this.pageNo) {\r\n      this.pageNo++;\r\n    } else {\r\n      this.pageNo--;\r\n    }\r\n\r\n    if (event.pageSize > event.length) {\r\n      this.pageNo = 0;\r\n    }\r\n\r\n    this.getPaymentList(this.paymentStatus);\r\n  }\r\n\r\n  setPageSizeOptions(setPageSizeOptionsInput: string) {\r\n    if (setPageSizeOptionsInput) {\r\n      this.pageSizeOptions = setPageSizeOptionsInput\r\n        .split(\",\")\r\n        .map((str) => +str);\r\n    }\r\n  }\r\n\r\n  comparePaymentType(value: any, selected: any): boolean {\r\n    if (value && selected) {\r\n      return value.type === selected.type;\r\n    }\r\n  }\r\n\r\n  getPaymentDetails(elm) {\r\n    if (this.paymentType.type === PAYMENT_TYPE.SCHEDULE_OF_FEES_INDIVIDUAL) {\r\n      this.router.navigate([\r\n        \"asc/page/accounting/update/\",\r\n        elm.paymentStatus.toLowerCase() + \"-\" + elm.id,\r\n      ]);\r\n    } else if (\r\n      this.paymentType.type === PAYMENT_TYPE.SCHEDULE_OF_FEES_MULTIPLE\r\n    ) {\r\n      if (elm?.paymentStatus) {\r\n        this.router.navigate([\r\n          \"asc/page/accounting/update/\",\r\n          `${elm?.paymentStatus?.toLowerCase()}-${elm.id}`,\r\n          `multiple-${elm.id}`,\r\n        ]);\r\n      } else {\r\n        this.router.navigate([\r\n          \"asc/page/accounting/update/\",\r\n          `multiple-${elm.id}`,\r\n        ]);\r\n      }\r\n    } else if (\r\n      this.paymentType.type === PAYMENT_TYPE.SCHEDULE_OF_FEES_SPECIAL\r\n    ) {\r\n      if (elm?.paymentStatus) {\r\n        this.router.navigate([\r\n          \"asc/page/accounting/update/\",\r\n          `${elm?.paymentStatus?.toLowerCase()}-${elm.id}`,\r\n          `special-${elm.id}`,\r\n        ]);\r\n      } else {\r\n        this.router.navigate([\r\n          \"asc/page/accounting/update/\",\r\n          `special-${elm.id}`,\r\n        ]);\r\n      }\r\n    } else if (this.paymentType.type === PAYMENT_TYPE.ACCOUNTS_RECEIVABLE) {\r\n      this.router.navigate([\r\n        \"asc/page/accounting/update/\",\r\n        elm.paymentStatus.toLowerCase() + \"-\" + elm.id,\r\n      ]);\r\n    } else if (this.paymentType.type === PAYMENT_TYPE.DELINQUENT) {\r\n      const payment = new Payment();\r\n      payment.amountDue = elm.amountToSettle;\r\n      payment.applicationForm = elm;\r\n      payment.appFormReference = elm.appFormReference;\r\n      payment.companyId = elm.id;\r\n\r\n      this.dataStorageService.setPayment(payment);\r\n      this.router.navigate([\r\n        \"asc/page/accounting/add-penalty/update/\",\r\n        \"delinquent\",\r\n        elm.id,\r\n      ]);\r\n    } else if (this.paymentType.type === PAYMENT_TYPE.PENALIZED_BRANDS) {\r\n      this.router.navigate([\r\n        \"asc/page/accounting/add-penalty/update/\",\r\n        \"brand\",\r\n        elm.id,\r\n      ]);\r\n    } else if (this.paymentType.type === PAYMENT_TYPE.PENALIZED_COMPANY) {\r\n      this.router.navigate([\r\n        \"asc/page/accounting/add-penalty/update/\",\r\n        \"company\",\r\n        elm?.company?.id,\r\n      ]);\r\n    } else if (this.paymentType.type === PAYMENT_TYPE.ACCOUNTS_RECEIVABLE) {\r\n      this.router.navigate([\r\n        \"asc/page/accounting/update/\",\r\n        elm.paymentStatus.toLowerCase() + \"-\" + elm.id,\r\n      ]);\r\n    }\r\n  }\r\n\r\n  openComponent() {\r\n    if (this.paymentType.type === PAYMENT_TYPE.PENALIZED_BRANDS) {\r\n      this.router.navigate([\"asc/page/accounting/add-penalty\", \"brand\"]);\r\n    } else if (this.paymentType.type === PAYMENT_TYPE.PENALIZED_COMPANY) {\r\n      this.router.navigate([\"asc/page/accounting/add-penalty\", \"company\"]);\r\n    }\r\n  }\r\n}\r\n","import { Affiliation, Company, UserRole } from '@models';\r\n\r\nexport class UserAccount {\r\n    id: number;\r\n    username: string;\r\n    password: string;\r\n    firstName: string;\r\n    middleName: string;\r\n    lastName: string;\r\n    company: Company;\r\n    membersAffiliationDto: Affiliation;\r\n    mobileNumber: string;\r\n    userRole: UserRole;\r\n    status: string;\r\n    acceptTerms: boolean;\r\n    accountType: string;\r\n    // locked: Boolean;\r\n    // enabled: Boolean;\r\n    ascDefault:\tboolean;\r\n    membersAffiliation:\tAffiliation;\r\n    scheduledUser:\tboolean;\r\n    signatureAttachmentReference:\tstring;\r\n}\r\n","import { TypeOfExecution } from './type-of-execution.model';\r\nimport { TypeOfMedium } from './type-of-medium.model';\r\n\r\nexport class AscRate {\r\n    id: number;\r\n    lengthFrom: number;\r\n    lengthTo: number;\r\n    memberOffline: number;\r\n    memberOnline: number;\r\n    nonMemberOffline: number;\r\n    nonMemberOnline: number;\r\n    status: string;\r\n    typeOfExecution: TypeOfExecution;\r\n    typeOfMedium: TypeOfMedium;\r\n}","import { Dialect } from './dialect.model';\r\nimport { MediumExecution } from './medium-execution.model';\r\n\r\nexport class ApplicationSingleMedia {\r\n    id: number;\r\n    amount: number;\r\n    appFormReference: string;\r\n    dialect: Dialect;\r\n    language: string;\r\n    others: string;\r\n    sizeLength: string;\r\n    mediumExecution: MediumExecution;\r\n    width: string;\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { PaymentsRoutingModule } from './payments-routing.module';\r\nimport { PaymentsComponent } from './payments.component';\r\nimport { AngularMaterialModule } from '@shared';\r\n\r\n\r\n@NgModule({\r\n  declarations: [PaymentsComponent],\r\n  imports: [\r\n    CommonModule,\r\n    PaymentsRoutingModule,\r\n    AngularMaterialModule\r\n  ]\r\n})\r\nexport class PaymentsModule { }\r\n","import { Company } from '@models'\r\nimport { Affiliation } from './affiliation.model';\r\nimport { ApplicationType } from './application-type.model'\r\nimport { Brand } from './brand.model'\r\nimport { Category } from './category.model';\r\nimport { Product } from './product.model';\r\nimport { S1Application } from './s1-application.model';\r\nimport { UserAccount } from './user-account.model'\r\n\r\nexport class ApplicationRequest {\r\n    id: number;\r\n    adTitle: string;\r\n    applicationOwner: UserAccount;\r\n    applicationType: ApplicationType;\r\n    brand: Brand;\r\n    company: Company;\r\n    status: string;\r\n    submissionDate: Date;\r\n    tagLine: string\r\n    submitApplicationForm: boolean;\r\n    formType: string;\r\n    hasSpecialClearing: boolean;\r\n    applicationForm: S1Application;\r\n    product: Product;\r\n}\r\n","export class Profile {\r\n    id: number;\r\n    name: string;\r\n}\r\n","import { S1Application } from './s1-application.model';\r\nimport { S2Application } from './s2-application.model';\r\n\r\nexport class AttachmentDocument {\r\n    id: number;\r\n    applicationId: S1Application;\r\n    applicationS2Id: S2Application;\r\n    attachmentType: string; // MAIN, SUPPORTIVE, PAYMENT\r\n    autoSubmit: boolean;\r\n    brandPenaltyAttachmentReference: string;\r\n    documentFormat: string;\r\n    fileExtension: string;\r\n    fileURL: string;\r\n    filename: string;\r\n    mainAttachmentReference: string;\r\n    supportingAttachmentReference: string;\r\n    paymentAttachmentReference: string;\r\n    revisionLetterAttachmentReference: string;\r\n    finalMaterialAttachmentReference: string;\r\n    originalFilename: string;\r\n    status: string;\r\n    submissionType: string; // ORIGINAL, REVISION, COMPLIANCE, TOA\r\n    voucherAttachmentReference: string;\r\n    applicationFormId: string; // for compliance used only\r\n    applicationForm: string;\r\n    appFormReference: string;\r\n    modifiedApprovedS1AttachmentReference: string;\r\n    fileSize: number\r\n\r\n    createdBy: string;\r\n    createdDate: Date;\r\n    modifiedBy: string;\r\n    modifiedDate: Date;\r\n}\r\n","import { Product } from './product.model';\r\n\r\nexport class Category {\r\n    id: number;\r\n    description: string;\r\n    status: string;\r\n}\r\n","import { TypeOfDocument } from './type-of-document.model';\r\nimport { S1Application } from './s1-application.model';\r\n\r\nexport class SupportingDocument {\r\n    id: number;\r\n    appFormReference: S1Application;\r\n    typeOfDocument: TypeOfDocument;\r\n    basedOn: string;\r\n    variant: string;\r\n    dateOfLaunch: Date;\r\n    expiresOn: Date;\r\n    remarks: string;\r\n    input: string;\r\n\r\n    createdBy: string;\r\n    createdDate: Date;\r\n    modifiedBy: string;\r\n    modifiedDate: Date;\r\n}\r\n","export class UserRole {\r\n    id: number;\r\n    name: string;\r\n    status: string;\r\n}\r\n","export class PaymentType {\r\n    id: number;\r\n    amount: boolean;\r\n    bankBranch: boolean;\r\n    bankName: boolean;\r\n    controlNo: boolean;\r\n    fundTransferDate: boolean;\r\n    paymentDescription: string;\r\n    promisorryDate: boolean;\r\n    referenceNo: boolean;\r\n    status: string;\r\n}\r\n","export class OrPreparationReference {\r\n    id: number;\r\n    reference: string;\r\n    amount: number;\r\n}","export class PerformanceMetrics {\r\n    id: number;\r\n    referenceCode: string;\r\n    appFormReference: string;\r\n    movement: string;\r\n    actionBy: string;\r\n    userRole: string;\r\n    currentDateTime: Date;\r\n    previousDateTime: Date;\r\n    duration: string;\r\n}\r\n","import { PaymentType } from \"./payment-type.model\";\r\n\r\nexport class PaymentMethod {\r\n    id: number;\r\n    paymentType: PaymentType;\r\n    referenceNo: string;\r\n    controlNo: string;\r\n    paymentDate: Date;\r\n    amount: number;\r\n    bankName: string\r\n    bankBranch: string;\r\n    promisorryDate: Date;\r\n    ccConfirmationCode: string;\r\n    checkNo: string;\r\n}\r\n","export * from './affiliation.model';\r\nexport * from './brand.model';\r\nexport * from './company.model';\r\nexport * from './payment-type.model';\r\nexport * from './profile.model';\r\nexport * from './s1-application.model';\r\nexport * from './s2-application.model';\r\nexport * from './type-of-document.model';\r\nexport * from './type-of-medium.model';\r\nexport * from './type-of-reason.model';\r\nexport * from './user-role.model';\r\nexport * from './user-account.model';\r\nexport * from './attachment-document.model';\r\nexport * from './category.model';\r\nexport * from './product.model';\r\nexport * from './type-of-application.model';\r\nexport * from './asc-rate.model';\r\nexport * from './payment.model';\r\nexport * from './country.model';\r\nexport * from './performance-metrics.model';\r\nexport * from './or-preparation.model';\r\nexport * from './or-preparation-reference.model';\r\nexport * from './supporting-document.model';\r\nexport * from './application-single-media.model';\r\nexport * from './application-request.model';\r\nexport * from './application-multimedia.model';\r\n","export default \"<form>\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12 title\\\">\\r\\n        <mat-label>\\r\\n          <mat-icon>payments</mat-icon> PAYMENT LIST\\r\\n        </mat-label>\\r\\n      </div>\\r\\n    </div>\\r\\n    <br>\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-8\\\">\\r\\n        <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\">\\r\\n          <mat-select [(ngModel)]=\\\"paymentType\\\" name=\\\"paymentType\\\" placeholder=\\\"Type of Payment\\\"\\r\\n            [compareWith]=\\\"comparePaymentType\\\">\\r\\n            <mat-option *ngFor=\\\"let i of paymentTypeList\\\" [value]=\\\"i\\\" (click)=\\\"getByPaymentStatusList(paymentStatus)\\\">\\r\\n              {{i?.type?.replace('SPECIAL','S2 SPECIAL CLEARING')}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n        <mat-form-field class=\\\"col-md-12\\\" appearance=\\\"outline\\\" [hidden]=\\\"paymentType?.type === 'DELINQUENT'\\\">\\r\\n          <mat-select [(ngModel)]=\\\"paymentStatus\\\" name=\\\"paymentStatus\\\">\\r\\n            <mat-option *ngFor=\\\"let i of paymentStatusList\\\" [value]=\\\"i.type\\\" (click)=\\\"getByPaymentStatusList(paymentStatus)\\\">\\r\\n              {{i?.type?.replaceAll('_', ' ')}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n        <button mat-raised-button class=\\\"button-right button-red\\\" (click)=\\\"openComponent()\\\"\\r\\n          *ngIf=\\\"paymentType?.type === 'PENALIZED BRANDS' || paymentType?.type === 'PENALIZED COMPANY' \\\">\\r\\n          <i class=\\\"material-icons color__white\\\">task_alt</i> ADD PENALTY\\r\\n        </button>\\r\\n      </div>\\r\\n\\r\\n    <div class=\\\"mat-elevation-z8 fields\\\">\\r\\n      <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"referenceCode\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef > REFERENCE CODE </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getPaymentDetails(element)\\\">\\r\\n            <!-- {{ element?.referenceCode }}\\r\\n            {{ element?.applicationForm?.referenceCode | uppercase }}\\r\\n            {{ element?.brandPenaltyAttachmentReference | uppercase }} -->\\r\\n            {{printRefCode(element)}}\\r\\n          </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"adTitle\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef > AD TITLE </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getPaymentDetails(element)\\\">\\r\\n            {{ element?.adTitle | uppercase }}\\r\\n            {{ element?.multipleApplication?.adTitle | uppercase }}\\r\\n          </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"typeOfApplication\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef > TYPE OF APPLICATION </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getPaymentDetails(element)\\\">\\r\\n            {{ element?.applicationType?.description | uppercase }}\\r\\n            {{ element?.applicationForm?.applicationType?.description | uppercase }}\\r\\n            {{ element?.formType?.replaceAll('_',' ') | uppercase }}\\r\\n            {{ element?.multipleApplication?.applicationType?.description?.replaceAll('_',' ') | uppercase }}\\r\\n          </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"brand\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef > BRAND </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getPaymentDetails(element)\\\">\\r\\n            {{ element?.applicationForm?.brand?.description | uppercase }}\\r\\n            {{ element?.brand?.description | uppercase }}\\r\\n            {{ element?.multipleApplication?.brand?.description | uppercase }}\\r\\n          </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"product\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> PRODUCT</th>\\r\\n          <td mat-cell *matCellDef=\\\"let element; let i = index\\\" (click)=\\\"getPaymentDetails(element)\\\">\\r\\n            {{element?.product?.description | uppercase}}\\r\\n            {{ element?.multipleApplication?.product?.description | uppercase }}</td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"company\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef > PRESENTOR'S COMPANY NAME </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getPaymentDetails(element)\\\">\\r\\n              {{ element?.applicationOwner?.company?.companyName | uppercase }}\\r\\n              {{ element?.companyName | uppercase }}\\r\\n              {{ element?.multipleApplication?.company?.companyName | uppercase }}</td>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"companyTelephoneNo\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef > Telephone No </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getPaymentDetails(element)\\\">\\r\\n            {{ element?.companyTelephoneNo | uppercase }}<br>\\r\\n            {{ element?.companyTelephoneNo2 | uppercase }}\\r\\n          </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"membersAffiliation\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef > MEMBERS AFFILIATION </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getPaymentDetails(element)\\\">\\r\\n            {{ element?.membersAffiliation?.description | uppercase }}\\r\\n          </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"penaltyDate\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef > PENALTY DATE </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getPaymentDetails(element)\\\">\\r\\n            {{ element?.penaltyDate | date: 'MM/dd/yyyy' }}\\r\\n          </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"amount\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef > AMOUNT </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getPaymentDetails(element)\\\">\\r\\n            {{ element?.amount }}\\r\\n            {{ element?.penaltyAmount }}\\r\\n            {{ element?.amountToSettle }}\\r\\n          </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"paymentMethod\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef > PAYMENT METHOD </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getPaymentDetails(element)\\\">\\r\\n            <!-- {{ element?.paymentMethod | uppercase }} -->\\r\\n            {{ element?.paymentMethod?.paymentType?.paymentDescription | uppercase }}\\r\\n          </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"paidDate\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef > PAID DATE </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getPaymentDetails(element)\\\">\\r\\n            {{ element?.applicationForm?.paidDate | date: 'MM/dd/yyyy' }}\\r\\n            {{ element?.paidDate | date: 'MM/dd/yyyy' }}\\r\\n            {{ element?.paymentMethod?.paymentDate | date: 'MM/dd/yyyy' }}\\r\\n          </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"typeOfMedium\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef > TYPE OF MEDIUM </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getPaymentDetails(element)\\\">\\r\\n            {{ element?.typeOfMedium | uppercase }}\\r\\n            {{ element?.applicationForm?.typeOfMedium | uppercase }}\\r\\n          </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"companyName\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef > PRESENTOR'S COMPANY NAME </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getPaymentDetails(element)\\\">\\r\\n            {{ element?.applicationOwner?.company?.companyName | uppercase }}\\r\\n            {{ element?.applicationForm?.company?.companyName | uppercase }}\\r\\n          </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"paymentStatus\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef > PAYMENT STATUS </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"getPaymentDetails(element)\\\">\\r\\n            {{ element?.paymentStatus?.replaceAll('_',' ') | uppercase }}\\r\\n          </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n      </table>\\r\\n      <div class=\\\"no-record\\\" [hidden]=\\\"dataSource && dataSource?.data?.length > 0\\\">\\r\\n        No record found.\\r\\n      </div>\\r\\n      <mat-paginator [pageSize]=\\\"pageSize\\\" [pageIndex]=\\\"pageNo\\\" [length]=\\\"paymentTotalItems\\\"\\r\\n      [pageSizeOptions]=\\\"pageSizeOptions\\\" (page)=\\\"pageEvents($event)\\\">\\r\\n  </mat-paginator>\\r\\n    </div>\\r\\n  </div>\\r\\n\";","export class Affiliation {\r\n    id: number;\r\n    description: string;\r\n    member: boolean;\r\n    status: string;\r\n}\r\n","import { Category, Product } from '@models';\r\n\r\nexport class Brand {\r\n    id: number;\r\n    description: string;\r\n    // product: Product;\r\n    // category: Category;\r\n    status: string;\r\n    penalty: boolean;\r\n  }\r\n","import { Affiliation } from './affiliation.model';\r\nimport { Country } from './country.model';\r\n\r\nexport class Company {\r\n    id: number;\r\n    companyName: string;\r\n    companyTelephoneNo: string;\r\n    companyTin: string;\r\n    country: Country;\r\n    status: string;\r\n    completeAddress: string;\r\n    voucherApproved: boolean\r\n    membersAffiliation: Affiliation;\r\n    delinquent: boolean;\r\n    contactPersonEmail: string;\r\n    contactPersonName: string;\r\n    amountToSettle: number;\r\n    companyMobileNo: string;\r\n    companyTelephoneNo2: string;\r\n}\r\n"]}