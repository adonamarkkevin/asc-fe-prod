{"version":3,"sources":["webpack:///src/app/modules/pages/accounting/payments/payments-routing.module.ts","webpack:///src/app/modules/pages/accounting/payments/payments.component.ts","webpack:///src/app/modules/pages/accounting/payments/payments.component.html","webpack:///src/app/modules/pages/accounting/payments/payments.module.ts"],"names":["routes","path","component","PaymentsRoutingModule","forChild","PaymentsComponent","router","apiService","dataStorageService","spinner","route","pageSize","pageNo","pageSizeOptions","currentPage","paymentTotalItems","paymentTypeList","paymentList","paymentType","paymentStatusList","paymentStatus","linkExtension","snapshot","paramMap","get","filter","filteredList","type","SCHEDULE_OF_FEES_INDIVIDUAL","SCHEDULE_OF_FEES_MULTIPLE","SCHEDULE_OF_FEES_SPECIAL","DELINQUENT","PENALIZED_BRANDS","PENALIZED_COMPANY","ACCOUNTS_RECEIVABLE","getPaymentList","element","referenceCode","referenceCodeRejected","param","show","endpoint","navigate","displayedColumns","scheduleOfFeesMonitoring","scheduleOfFeesMultipleMonitoring","scheduleOfFeesSpecialMonitoring","delinquentApplications","penalizedBrandMonitoring","replace","companyPenalties","console","log","findAll","subscribe","res","data","responseData","totalItems","dataSource","sort","hide","err","event","pageIndex","length","setPageSizeOptionsInput","split","map","str","value","selected","elm","toLowerCase","id","payment","amountDue","amountToSettle","applicationForm","appFormReference","companyId","setPayment","company","pageEvents","PaymentsModule"],"mappings":"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","file":"payments-payments-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { PaymentsComponent } from './payments.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: PaymentsComponent\r\n  },\r\n  {\r\n    path: ':link',\r\n    component: PaymentsComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class PaymentsRoutingModule { }\r\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { Payment } from \"@models\";\r\nimport { ApiService, DataStorageService } from \"@services\";\r\nimport {\r\n  ENDPOINTS,\r\n  PAYMENT_STATUS_LIST,\r\n  PAYMENT_TYPE,\r\n  PAYMENT_TYPE_LIST,\r\n} from \"@shared\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\n\r\n@Component({\r\n  selector: \"app-payments\",\r\n  templateUrl: \"./payments.component.html\",\r\n  styleUrls: [\"./payments.component.scss\"],\r\n})\r\nexport class PaymentsComponent implements OnInit {\r\n  @ViewChild(MatPaginator, { static: false }) paginatorFalse: MatPaginator;\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  pageSize = 10;\r\n  pageNo = 0;\r\n  pageSizeOptions: number[] = [10, 20, 50];\r\n  currentPage = 1;\r\n  paymentTotalItems = 0;\r\n  @ViewChild(MatSort, { static: false }) sort: MatSort;\r\n\r\n  dataSource: MatTableDataSource<Payment>;\r\n  displayedColumns: string[];\r\n  paymentTypeList = [...PAYMENT_TYPE_LIST];\r\n  paymentList = [];\r\n  paymentType = PAYMENT_TYPE_LIST[0];\r\n  paymentStatusList = PAYMENT_STATUS_LIST;\r\n  paymentStatus = \"FOR_APPROVAL\";\r\n\r\n  linkExtension = \"\";\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private apiService: ApiService,\r\n    private dataStorageService: DataStorageService,\r\n    private spinner: NgxSpinnerService,\r\n    private route: ActivatedRoute\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.linkExtension = this.route.snapshot.paramMap.get(\"link\");\r\n    if (this.linkExtension === \"schedule-of-fees-individual\") {\r\n      this.paymentType = this.paymentTypeList.filter(\r\n        (filteredList) =>\r\n          filteredList.type === PAYMENT_TYPE.SCHEDULE_OF_FEES_INDIVIDUAL\r\n      )[0];\r\n    } else if (this.linkExtension === \"schedule-of-fees-multiple\") {\r\n      this.paymentType = this.paymentTypeList.filter(\r\n        (filteredList) =>\r\n          filteredList.type === PAYMENT_TYPE.SCHEDULE_OF_FEES_MULTIPLE\r\n      )[0];\r\n    } else if (this.linkExtension === \"schedule-of-fees-special\") {\r\n      this.paymentType = this.paymentTypeList.filter(\r\n        (filteredList) =>\r\n          filteredList.type === PAYMENT_TYPE.SCHEDULE_OF_FEES_SPECIAL\r\n      )[0];\r\n    } else if (this.linkExtension === \"delinquent-companies\") {\r\n      this.paymentType = this.paymentTypeList.filter(\r\n        (filteredList) => filteredList.type === PAYMENT_TYPE.DELINQUENT\r\n      )[0];\r\n    } else if (this.linkExtension === \"brand-penalties\") {\r\n      this.paymentType = this.paymentTypeList.filter(\r\n        (filteredList) => filteredList.type === PAYMENT_TYPE.PENALIZED_BRANDS\r\n      )[0];\r\n    } else if (this.linkExtension === \"company-penalties\") {\r\n      this.paymentType = this.paymentTypeList.filter(\r\n        (filteredList) => filteredList.type === PAYMENT_TYPE.PENALIZED_COMPANY\r\n      )[0];\r\n    } else if (this.linkExtension === \"accounts-receivable\") {\r\n      this.paymentType = this.paymentTypeList.filter(\r\n        (filteredList) => filteredList.type === PAYMENT_TYPE.ACCOUNTS_RECEIVABLE\r\n      )[0];\r\n    }\r\n\r\n    this.getPaymentList(this.paymentStatus);\r\n  }\r\n\r\n  printRefCode(element) {\r\n    if (element.referenceCode) {\r\n      return element.referenceCode;\r\n    } else if (element.referenceCodeRejected) {\r\n      return element.referenceCodeRejected;\r\n    }\r\n  }\r\n\r\n  getByPaymentStatusList(paymentStatus) {\r\n    this.pageNo = 0;\r\n    this.getPaymentList(paymentStatus);\r\n  }\r\n\r\n  getPaymentList(paymentStatus) {\r\n    let param = \"\";\r\n    if (paymentStatus !== \"ALL\" && paymentStatus !== 'PROMISSORY') {\r\n      param = \"&paymentStatus=\" + paymentStatus;\r\n    } else if (paymentStatus === 'PROMISSORY') {\r\n      param = '&hasPromissoryNote=true';\r\n    }\r\n\r\n    this.currentPage = this.pageNo;\r\n    this.currentPage++;\r\n    if (this.currentPage === 0) this.currentPage++;\r\n\r\n    this.spinner.show();\r\n    let endpoint = \"\";\r\n    if (this.paymentType.type === PAYMENT_TYPE.SCHEDULE_OF_FEES_INDIVIDUAL) {\r\n      this.router.navigate([\r\n        \"asc/page/accounting/payments/\",\r\n        \"schedule-of-fees-individual\",\r\n      ]);\r\n      this.displayedColumns = [\r\n        \"referenceCode\",\r\n        \"typeOfApplication\",\r\n        \"brand\",\r\n        \"typeOfMedium\",\r\n        \"companyName\",\r\n        \"paymentStatus\",\r\n      ];\r\n      //\r\n      endpoint =\r\n        ENDPOINTS.scheduleOfFeesMonitoring +\r\n        `?page=${this.currentPage}&size=${this.pageSize}` +\r\n        param;\r\n    } else if (\r\n      this.paymentType.type === PAYMENT_TYPE.SCHEDULE_OF_FEES_MULTIPLE\r\n    ) {\r\n      this.router.navigate([\r\n        \"asc/page/accounting/payments/\",\r\n        \"schedule-of-fees-multiple\",\r\n      ]);\r\n      this.displayedColumns = [\r\n        \"adTitle\",\r\n        \"typeOfApplication\",\r\n        \"brand\",\r\n        \"product\",\r\n        \"company\",\r\n        \"paymentStatus\",\r\n      ];\r\n      //\r\n      endpoint =\r\n        ENDPOINTS.scheduleOfFeesMultipleMonitoring +\r\n        `?page=${this.currentPage}&size=${this.pageSize}` +\r\n        param;\r\n    } else if (\r\n      this.paymentType.type === PAYMENT_TYPE.SCHEDULE_OF_FEES_SPECIAL\r\n    ) {\r\n      this.router.navigate([\r\n        \"asc/page/accounting/payments/\",\r\n        \"schedule-of-fees-special\",\r\n      ]);\r\n      this.displayedColumns = [\r\n        \"referenceCode\",\r\n        \"typeOfApplication\",\r\n        \"brand\",\r\n        \"typeOfMedium\",\r\n        \"companyName\",\r\n        \"paymentStatus\",\r\n      ];\r\n      endpoint =\r\n        ENDPOINTS.scheduleOfFeesSpecialMonitoring +\r\n        `?page=${this.currentPage}&size=${this.pageSize}` +\r\n        param;\r\n    } else if (this.paymentType.type === PAYMENT_TYPE.DELINQUENT) {\r\n      this.router.navigate([\r\n        \"asc/page/accounting/payments/\",\r\n        \"delinquent-companies\",\r\n      ]);\r\n      this.displayedColumns = [\r\n        // 'referenceCode',\r\n        \"company\",\r\n        \"membersAffiliation\",\r\n        \"companyTelephoneNo\",\r\n        \"amount\",\r\n      ];\r\n      endpoint =\r\n        ENDPOINTS.delinquentApplications +\r\n        `?hasDelinquentAppForm=true&page=${this.currentPage}&size=${this.pageSize}`;\r\n    } else if (this.paymentType.type === PAYMENT_TYPE.PENALIZED_BRANDS) {\r\n      this.router.navigate([\r\n        \"asc/page/accounting/payments/\",\r\n        \"brand-penalties\",\r\n      ]);\r\n      this.displayedColumns = [\r\n        \"referenceCode\",\r\n        \"brand\",\r\n        \"penaltyDate\",\r\n        \"amount\",\r\n        \"paymentMethod\",\r\n        \"paidDate\",\r\n        \"paymentStatus\",\r\n      ];\r\n      endpoint =\r\n        ENDPOINTS.penalizedBrandMonitoring +\r\n        `?page=${this.currentPage}&size=${this.pageSize}` +\r\n        param?.replace(\"paymentStatus\", \"status\");\r\n    } else if (this.paymentType.type === PAYMENT_TYPE.PENALIZED_COMPANY) {\r\n      this.router.navigate([\r\n        \"asc/page/accounting/payments/\",\r\n        \"company-penalties\",\r\n      ]);\r\n      // endpoint = ENDPOINTS.penalizedCompanyMonitoring;\r\n      this.displayedColumns = [\r\n        \"referenceCode\",\r\n        \"company\",\r\n        \"penaltyDate\",\r\n        \"amount\",\r\n        \"paymentStatus\",\r\n      ];\r\n      endpoint =\r\n        ENDPOINTS.companyPenalties +\r\n        `/custom/search?page=${this.currentPage}&size=${this.pageSize}` +\r\n        param;\r\n    } else if (this.paymentType.type === PAYMENT_TYPE.ACCOUNTS_RECEIVABLE) {\r\n      this.router.navigate([\r\n        \"asc/page/accounting/payments/\",\r\n        \"accounts-receivable\",\r\n      ]);\r\n      this.displayedColumns = [\r\n        \"referenceCode\",\r\n        \"typeOfApplication\",\r\n        \"brand\",\r\n        \"typeOfMedium\",\r\n        \"companyName\",\r\n        \"paymentStatus\",\r\n      ];\r\n      endpoint =\r\n        ENDPOINTS.scheduleOfFeesMonitoring +\r\n        `?hasPromissoryNote=true&page=${this.currentPage}&size=${this.pageSize}` +\r\n        param;\r\n    }\r\n    console.log(endpoint);\r\n\r\n    this.apiService.findAll(endpoint).subscribe(\r\n      (res: any) => {\r\n        if (res.data) {\r\n          this.paymentList = res.data;\r\n        } else if (res.responseData) {\r\n          this.paymentList = res.responseData.data;\r\n        } else if (res) {\r\n          this.paymentList = res;\r\n        } else {\r\n          this.paymentList = [];\r\n        }\r\n\r\n        this.paymentTotalItems = res.totalItems;\r\n        this.dataSource = new MatTableDataSource<Payment>(this.paymentList);\r\n        // this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n        this.paymentTotalItems = res.totalItems;\r\n        this.spinner.hide();\r\n        console.log(\"datasource\", this.dataSource.data);\r\n      },\r\n      (err: any) => {\r\n        this.paymentList = [];\r\n        this.dataSource = new MatTableDataSource<Payment>(this.paymentList);\r\n\r\n        this.spinner.hide();\r\n      }\r\n    );\r\n  }\r\n\r\n  pageEvents(event: any) {\r\n    this.pageSize = event.pageSize;\r\n\r\n    if (event.pageIndex > this.pageNo) {\r\n      this.pageNo++;\r\n    } else {\r\n      this.pageNo--;\r\n    }\r\n\r\n    if (event.pageSize > event.length) {\r\n      this.pageNo = 0;\r\n    }\r\n\r\n    this.getPaymentList(this.paymentStatus);\r\n  }\r\n\r\n  setPageSizeOptions(setPageSizeOptionsInput: string) {\r\n    if (setPageSizeOptionsInput) {\r\n      this.pageSizeOptions = setPageSizeOptionsInput\r\n        .split(\",\")\r\n        .map((str) => +str);\r\n    }\r\n  }\r\n\r\n  comparePaymentType(value: any, selected: any): boolean {\r\n    if (value && selected) {\r\n      return value.type === selected.type;\r\n    }\r\n  }\r\n\r\n  getPaymentDetails(elm) {\r\n    if (this.paymentType.type === PAYMENT_TYPE.SCHEDULE_OF_FEES_INDIVIDUAL) {\r\n      this.router.navigate([\r\n        \"asc/page/accounting/update/\",\r\n        elm.paymentStatus.toLowerCase() + \"-\" + elm.id,\r\n      ]);\r\n    } else if (\r\n      this.paymentType.type === PAYMENT_TYPE.SCHEDULE_OF_FEES_MULTIPLE\r\n    ) {\r\n      if (elm?.paymentStatus) {\r\n        this.router.navigate([\r\n          \"asc/page/accounting/update/\",\r\n          `${elm?.paymentStatus?.toLowerCase()}-${elm.id}`,\r\n          `multiple-${elm.id}`,\r\n        ]);\r\n      } else {\r\n        this.router.navigate([\r\n          \"asc/page/accounting/update/\",\r\n          `multiple-${elm.id}`,\r\n        ]);\r\n      }\r\n    } else if (\r\n      this.paymentType.type === PAYMENT_TYPE.SCHEDULE_OF_FEES_SPECIAL\r\n    ) {\r\n      if (elm?.paymentStatus) {\r\n        this.router.navigate([\r\n          \"asc/page/accounting/update/\",\r\n          `${elm?.paymentStatus?.toLowerCase()}-${elm.id}`,\r\n          `special-${elm.id}`,\r\n        ]);\r\n      } else {\r\n        this.router.navigate([\r\n          \"asc/page/accounting/update/\",\r\n          `special-${elm.id}`,\r\n        ]);\r\n      }\r\n    } else if (this.paymentType.type === PAYMENT_TYPE.ACCOUNTS_RECEIVABLE) {\r\n      this.router.navigate([\r\n        \"asc/page/accounting/update/\",\r\n        elm.paymentStatus.toLowerCase() + \"-\" + elm.id,\r\n      ]);\r\n    } else if (this.paymentType.type === PAYMENT_TYPE.DELINQUENT) {\r\n      const payment = new Payment();\r\n      payment.amountDue = elm.amountToSettle;\r\n      payment.applicationForm = elm;\r\n      payment.appFormReference = elm.appFormReference;\r\n      payment.companyId = elm.id;\r\n\r\n      this.dataStorageService.setPayment(payment);\r\n      this.router.navigate([\r\n        \"asc/page/accounting/add-penalty/update/\",\r\n        \"delinquent\",\r\n        elm.id,\r\n      ]);\r\n    } else if (this.paymentType.type === PAYMENT_TYPE.PENALIZED_BRANDS) {\r\n      this.router.navigate([\r\n        \"asc/page/accounting/add-penalty/update/\",\r\n        \"brand\",\r\n        elm.id,\r\n      ]);\r\n    } else if (this.paymentType.type === PAYMENT_TYPE.PENALIZED_COMPANY) {\r\n      this.router.navigate([\r\n        \"asc/page/accounting/add-penalty/update/\",\r\n        \"company\",\r\n        elm?.company?.id,\r\n      ]);\r\n    } else if (this.paymentType.type === PAYMENT_TYPE.ACCOUNTS_RECEIVABLE) {\r\n      this.router.navigate([\r\n        \"asc/page/accounting/update/\",\r\n        elm.paymentStatus.toLowerCase() + \"-\" + elm.id,\r\n      ]);\r\n    }\r\n  }\r\n\r\n  openComponent() {\r\n    if (this.paymentType.type === PAYMENT_TYPE.PENALIZED_BRANDS) {\r\n      this.router.navigate([\"asc/page/accounting/add-penalty\", \"brand\"]);\r\n    } else if (this.paymentType.type === PAYMENT_TYPE.PENALIZED_COMPANY) {\r\n      this.router.navigate([\"asc/page/accounting/add-penalty\", \"company\"]);\r\n    }\r\n  }\r\n}\r\n","<form>\r\n  <div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12 title\">\r\n        <mat-label>\r\n          <mat-icon>payments</mat-icon> PAYMENT LIST\r\n        </mat-label>\r\n      </div>\r\n    </div>\r\n    <br>\r\n\r\n    <div class=\"row\">\r\n      <div class=\"col-md-8\">\r\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n          <mat-select [(ngModel)]=\"paymentType\" name=\"paymentType\" placeholder=\"Type of Payment\"\r\n            [compareWith]=\"comparePaymentType\">\r\n            <mat-option *ngFor=\"let i of paymentTypeList\" [value]=\"i\" (click)=\"getByPaymentStatusList(paymentStatus)\">\r\n              {{i?.type?.replace('SPECIAL','S2 SPECIAL CLEARING')}}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div class=\"col-md-4\">\r\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\" [hidden]=\"paymentType?.type === 'DELINQUENT'\">\r\n          <mat-select [(ngModel)]=\"paymentStatus\" name=\"paymentStatus\">\r\n            <mat-option *ngFor=\"let i of paymentStatusList\" [value]=\"i.type\" (click)=\"getByPaymentStatusList(paymentStatus)\">\r\n              {{i?.type?.replaceAll('_', ' ')}}\r\n            </mat-option>\r\n            <mat-option \r\n            *ngIf=\"paymentType.type === 'SCHEDULE OF FEES - INDIVIDUAL' || paymentType.type === 'SCHEDULE OF FEES - MULTIPLE' \" \r\n            [value]=\"'PROMISSORY'\" \r\n            (click)=\"getByPaymentStatusList('PROMISSORY')\">\r\n              ACCOUNTS RECEIVABLE\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n        <button mat-raised-button class=\"button-right button-red\" (click)=\"openComponent()\"\r\n          *ngIf=\"paymentType?.type === 'PENALIZED BRANDS' || paymentType?.type === 'PENALIZED COMPANY' \">\r\n          <i class=\"material-icons color__white\">task_alt</i> ADD PENALTY\r\n        </button>\r\n      </div>\r\n\r\n    <div class=\"mat-elevation-z8 fields\">\r\n      <table mat-table [dataSource]=\"dataSource\" matSort>\r\n\r\n        <ng-container matColumnDef=\"referenceCode\">\r\n          <th mat-header-cell *matHeaderCellDef > REFERENCE CODE </th>\r\n          <td mat-cell *matCellDef=\"let element\" (click)=\"getPaymentDetails(element)\">\r\n            <!-- {{ element?.referenceCode }}\r\n            {{ element?.applicationForm?.referenceCode | uppercase }}\r\n            {{ element?.brandPenaltyAttachmentReference | uppercase }} -->\r\n            {{printRefCode(element)}}\r\n          </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"adTitle\">\r\n          <th mat-header-cell *matHeaderCellDef > AD TITLE </th>\r\n          <td mat-cell *matCellDef=\"let element\" (click)=\"getPaymentDetails(element)\">\r\n            {{ element?.adTitle | uppercase }}\r\n            {{ element?.multipleApplication?.adTitle | uppercase }}\r\n          </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"typeOfApplication\">\r\n          <th mat-header-cell *matHeaderCellDef > TYPE OF APPLICATION </th>\r\n          <td mat-cell *matCellDef=\"let element\" (click)=\"getPaymentDetails(element)\">\r\n            {{ element?.applicationType?.description | uppercase }}\r\n            {{ element?.applicationForm?.applicationType?.description | uppercase }}\r\n            {{ element?.formType?.replaceAll('_',' ') | uppercase }}\r\n            {{ element?.multipleApplication?.applicationType?.description?.replaceAll('_',' ') | uppercase }}\r\n          </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"brand\">\r\n          <th mat-header-cell *matHeaderCellDef > BRAND </th>\r\n          <td mat-cell *matCellDef=\"let element\" (click)=\"getPaymentDetails(element)\">\r\n            {{ element?.applicationForm?.brand?.description | uppercase }}\r\n            {{ element?.brand?.description | uppercase }}\r\n            {{ element?.multipleApplication?.brand?.description | uppercase }}\r\n          </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"product\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> PRODUCT</th>\r\n          <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"getPaymentDetails(element)\">\r\n            {{element?.product?.description | uppercase}}\r\n            {{ element?.multipleApplication?.product?.description | uppercase }}</td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"company\">\r\n            <th mat-header-cell *matHeaderCellDef > PRESENTOR'S COMPANY NAME </th>\r\n            <td mat-cell *matCellDef=\"let element\" (click)=\"getPaymentDetails(element)\">\r\n              {{ element?.applicationOwner?.company?.companyName | uppercase }}\r\n              {{ element?.companyName | uppercase }}\r\n              {{ element?.multipleApplication?.company?.companyName | uppercase }}</td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"companyTelephoneNo\">\r\n          <th mat-header-cell *matHeaderCellDef > Telephone No </th>\r\n          <td mat-cell *matCellDef=\"let element\" (click)=\"getPaymentDetails(element)\">\r\n            {{ element?.companyTelephoneNo | uppercase }}<br>\r\n            {{ element?.companyTelephoneNo2 | uppercase }}\r\n          </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"membersAffiliation\">\r\n          <th mat-header-cell *matHeaderCellDef > MEMBERS AFFILIATION </th>\r\n          <td mat-cell *matCellDef=\"let element\" (click)=\"getPaymentDetails(element)\">\r\n            {{ element?.membersAffiliation?.description | uppercase }}\r\n          </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"penaltyDate\">\r\n          <th mat-header-cell *matHeaderCellDef > PENALTY DATE </th>\r\n          <td mat-cell *matCellDef=\"let element\" (click)=\"getPaymentDetails(element)\">\r\n            {{ element?.penaltyDate | date: 'MM/dd/yyyy' }}\r\n          </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"amount\">\r\n          <th mat-header-cell *matHeaderCellDef > AMOUNT </th>\r\n          <td mat-cell *matCellDef=\"let element\" (click)=\"getPaymentDetails(element)\">\r\n            {{ element?.amount }}\r\n            {{ element?.penaltyAmount }}\r\n            {{ element?.amountToSettle }}\r\n          </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"paymentMethod\">\r\n          <th mat-header-cell *matHeaderCellDef > PAYMENT METHOD </th>\r\n          <td mat-cell *matCellDef=\"let element\" (click)=\"getPaymentDetails(element)\">\r\n            <!-- {{ element?.paymentMethod | uppercase }} -->\r\n            {{ element?.paymentMethod?.paymentType?.paymentDescription | uppercase }}\r\n          </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"paidDate\">\r\n          <th mat-header-cell *matHeaderCellDef > PAID DATE </th>\r\n          <td mat-cell *matCellDef=\"let element\" (click)=\"getPaymentDetails(element)\">\r\n            {{ element?.applicationForm?.paidDate | date: 'MM/dd/yyyy' }}\r\n            {{ element?.paidDate | date: 'MM/dd/yyyy' }}\r\n            {{ element?.paymentMethod?.paymentDate | date: 'MM/dd/yyyy' }}\r\n          </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"typeOfMedium\">\r\n          <th mat-header-cell *matHeaderCellDef > TYPE OF MEDIUM </th>\r\n          <td mat-cell *matCellDef=\"let element\" (click)=\"getPaymentDetails(element)\">\r\n            {{ element?.typeOfMedium | uppercase }}\r\n            {{ element?.applicationForm?.typeOfMedium | uppercase }}\r\n          </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"companyName\">\r\n          <th mat-header-cell *matHeaderCellDef > PRESENTOR'S COMPANY NAME </th>\r\n          <td mat-cell *matCellDef=\"let element\" (click)=\"getPaymentDetails(element)\">\r\n            {{ element?.applicationOwner?.company?.companyName | uppercase }}\r\n            {{ element?.applicationForm?.company?.companyName | uppercase }}\r\n          </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"paymentStatus\">\r\n          <th mat-header-cell *matHeaderCellDef > PAYMENT STATUS </th>\r\n          <td mat-cell *matCellDef=\"let element\" (click)=\"getPaymentDetails(element)\">\r\n            {{ element?.paymentStatus?.replaceAll('_',' ') | uppercase }}\r\n          </td>\r\n        </ng-container>\r\n\r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n      </table>\r\n      <div class=\"no-record\" [hidden]=\"dataSource && dataSource?.data?.length > 0\">\r\n        No record found.\r\n      </div>\r\n      <mat-paginator [pageSize]=\"pageSize\" [pageIndex]=\"pageNo\" [length]=\"paymentTotalItems\"\r\n      [pageSizeOptions]=\"pageSizeOptions\" (page)=\"pageEvents($event)\">\r\n  </mat-paginator>\r\n    </div>\r\n  </div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { PaymentsRoutingModule } from './payments-routing.module';\r\nimport { PaymentsComponent } from './payments.component';\r\nimport { AngularMaterialModule } from '@shared';\r\n\r\n\r\n@NgModule({\r\n  declarations: [PaymentsComponent],\r\n  imports: [\r\n    CommonModule,\r\n    PaymentsRoutingModule,\r\n    AngularMaterialModule\r\n  ]\r\n})\r\nexport class PaymentsModule { }\r\n"]}