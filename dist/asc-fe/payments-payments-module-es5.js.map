{"version":3,"sources":["webpack:///src/app/core/models/type-of-document.model.ts","webpack:///src/app/core/models/country.model.ts","webpack:///src/app/core/models/type-of-reason.model.ts","webpack:///src/app/core/models/type-of-application.model.ts","webpack:///src/app/modules/pages/accounting/payments/payments-routing.module.ts","webpack:///src/app/core/models/s1-application.model.ts","webpack:///src/app/core/models/product.model.ts","webpack:///src/app/core/models/payment.model.ts","webpack:///src/app/core/models/type-of-medium.model.ts","webpack:///src/app/core/models/application-multimedia.model.ts","webpack:///src/app/core/models/s2-application.model.ts","webpack:///src/app/core/models/or-preparation.model.ts","webpack:///src/app/modules/pages/accounting/payments/payments.component.ts","webpack:///src/app/modules/pages/accounting/payments/payments.component.html","webpack:///src/app/core/models/user-account.model.ts","webpack:///src/app/core/models/asc-rate.model.ts","webpack:///src/app/core/models/application-single-media.model.ts","webpack:///src/app/modules/pages/accounting/payments/payments.module.ts","webpack:///src/app/core/models/application-request.model.ts","webpack:///src/app/core/models/profile.model.ts","webpack:///src/app/core/models/attachment-document.model.ts","webpack:///src/app/core/models/category.model.ts","webpack:///src/app/core/models/supporting-document.model.ts","webpack:///src/app/core/models/user-role.model.ts","webpack:///src/app/core/models/payment-type.model.ts","webpack:///src/app/core/models/or-preparation-reference.model.ts","webpack:///src/app/core/models/performance-metrics.model.ts","webpack:///src/app/core/models/payment-method.model.ts","webpack:///src/app/core/models/index.ts","webpack:///src/app/core/models/affiliation.model.ts","webpack:///src/app/core/models/brand.model.ts","webpack:///src/app/core/models/company.model.ts"],"names":["TypeOfDocument","Country","TypeOfReason","TypeOfApplication","routes","path","component","PaymentsRoutingModule","forChild","S1Application","Product","Payment","paymentMethod","filedBirForm","remarks","TypeOfMedium","ApplicationMultimedia","ApplicationMultimediaItemsDTO","ApplicationMultimediaMovingDTO","ApplicationMultimediaStaticDTO","S2Application","OrPreparation","totals","totalSales","totalAmountDue","totalVat","totalWithholdingtax","PaymentsComponent","router","apiService","dataStorageService","spinner","route","pageSize","pageNo","pageSizeOptions","currentPage","paymentTotalItems","paymentTypeList","paymentList","paymentType","paymentStatusList","paymentStatus","linkExtension","snapshot","paramMap","get","filter","filteredList","type","SCHEDULE_OF_FEES_INDIVIDUAL","SCHEDULE_OF_FEES_MULTIPLE","SCHEDULE_OF_FEES_SPECIAL","DELINQUENT","PENALIZED_BRANDS","PENALIZED_COMPANY","ACCOUNTS_RECEIVABLE","getPaymentList","element","referenceCode","referenceCodeRejected","param","show","endpoint","navigate","displayedColumns","scheduleOfFeesMonitoring","scheduleOfFeesMultipleMonitoring","scheduleOfFeesSpecialMonitoring","delinquentApplications","penalizedBrandMonitoring","replace","companyPenalties","console","log","findAll","subscribe","res","data","responseData","totalItems","dataSource","sort","hide","err","event","pageIndex","length","setPageSizeOptionsInput","split","map","str","value","selected","elm","toLowerCase","id","payment","amountDue","amountToSettle","applicationForm","appFormReference","companyId","setPayment","company","pageEvents","UserAccount","AscRate","ApplicationSingleMedia","PaymentsModule","ApplicationRequest","Profile","AttachmentDocument","Category","SupportingDocument","UserRole","PaymentType","OrPreparationReference","PerformanceMetrics","PaymentMethod","Affiliation","Brand","Company"],"mappings":"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","file":"payments-payments-module-es5.js","sourcesContent":["export class TypeOfDocument {\n    id: number;\n    description: string;\n    remarksEnable: boolean;\n    basedOnEnable: boolean;\n    variantEnable: boolean;\n    dateOfLaunchEnable: boolean;\n    expiresOnEnable: boolean;\n    inputEnable: boolean;\n    status: string;\n}\n","export class Country {\n  id: number;\n  code: string;\n  name: string;\n}","export class TypeOfReason {\n    id: number;\n    reason: string;\n    status: string;\n}\n","export class TypeOfApplication {\n    id: number;\n    description: string;\n    clearingReleaseTime: String\n    decisionReleaseTime: String\n    sequenceNo: number;\n    status: String\n    submissionEndTime: String;\n    submissionStartTime: String\n}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { PaymentsComponent } from './payments.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PaymentsComponent\n  },\n  {\n    path: ':link',\n    component: PaymentsComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class PaymentsRoutingModule { }\n","import { Company } from './company.model';\nimport { Brand } from './brand.model';\nimport { ApplicationType } from './application-type.model';\nimport { UserAccount } from './user-account.model';\nimport { MultipleApplication } from './multiple-application.model';\nimport { Affiliation } from './affiliation.model';\nimport { ApplicationRequest } from './application-request.model';\nimport { Product } from './product.model';\nimport { TypeOfMedium } from './type-of-medium.model';\n\nexport class S1Application {\n    id: number;\n    company: Company;\n    brand: Brand;\n    adTitle: string;\n    referenceCode: string;\n\n    tagLine: string;\n    materialInformation: string;\n    externalStatus: string\n    internalStatus: string\n    revisionNo: number;\n\n    actionBy: UserAccount;\n    actionStatus: string; // ASSIGN_TO_ADSPE, ASSIGN_TO_REVIEWER, ASSIGN_TO_SCREENER\n    formStatus: string; // OPEN, LOCKED\n    submissionType: string // ORIGINAL, REVISION, COMPLIANCE\n    applicationType: ApplicationType;\n\n    formType: string; // INDIVIDUAL, MULTIPLE\n    autoSubmit: boolean;\n    submissionDate: Date;\n    sequenceOrder: number;\n    countSeries: number;\n\n    refTypeOfMedium: string;\n    assignedUser: UserAccount;\n    applicationOwner: UserAccount;\n    multipleApplication: MultipleApplication;\n    appFormReference: string;\n\n    mainAttachmentReference: string;\n    supportingAttachmentReference: string;\n    paymentAttachmentReference: string;\n    membersAffiliation: Affiliation;\n    decisionStatus: string;\n\n    amount: number;\n    applicationRequest: ApplicationRequest;\n    revisionLetterAttachmentReference: string;\n    assignedEncoder: UserAccount;\n    assignedAdSpecialist: UserAccount;\n\n    assignedScreener: UserAccount;\n    assignedReviewer: UserAccount;\n    verifiedDatetimeByEvaluator: Date;\n    sameDayRelease: boolean;\n    paidByApplicant: boolean;\n\n    archived: boolean;\n    appliedS2: boolean;\n    deliquent: boolean;\n    paymentStatus: string;\n    applicationDate: Date;\n\n    validUntil: Date;\n    previousRefCode: string;\n    hasNoSupportingDocs: boolean;\n    referenceCodeRejected: string;\n\n    hasRevision: boolean;\n    product: Product;\n    hasOngoingRevision: boolean;\n    qrCode: string;\n    barCode: string;\n    screenerDecisionComment: boolean;\n    reviewerDecisionComment: boolean;\n    hasOngoingCompliance: boolean;\n    releaseStatus: string;\n\n    complianceForm: boolean; // param need upon request for compliance\n    emailSent: boolean;\n    forwardToScreener: boolean;\n    forwardToReviewer: boolean;\n    formProcess: string;\n    typeOfMedium: string;\n\n    stampMaterialFileURL: string;\n    stampMaterialFilename: string;\n    decisionFormFileURL : string;\n    decisionFormFilename: string;\n\n    hasOngoingAppeal: boolean;\n    typeOfAppeal: string;\n    appealAttachmentReference: string;\n\n    hasOfficialReceipt: boolean;\n\n    // For AppRequest\n    status: string;\n\n    currentAssignee: string;\n}\n","import { Brand } from './brand.model';\nimport { Category } from './category.model';\n\nexport class Product {\n    id: number;\n    description: string;\n    status: string;\n    brand: Brand;\n    category: Category;\n}\n","import { S1Application } from './s1-application.model';\nimport { PaymentMethod } from './payment-method.model';\nimport { MultipleApplication } from './multiple-application.model';\nimport { S2Application } from './s2-application.model';\n\nexport class Payment {\n    id: number;\n    amountDue: number;\n    amountReceive: number;\n    appFormReference: string;\n    applicationForm: S1Application;\n    basicRate: number;\n    discount: number;\n    filename: string;\n    officialReceiptNo: string;\n    paymentAttachmentReference: string;\n    paymentDate: Date;\n    paymentMethod: PaymentMethod = new PaymentMethod();\n    paymentStatus: string; // PAID, UNPAID\n    remarks: string;\n    status: string;\n    vat: number;\n    withholdingTax: number;\n    amountToSettle: number;\n    companyName: string;\n    companyId: number;\n\n    multipleApplication: MultipleApplication;\n    filedBirForm: boolean = false;\n    applicationFormS2: S2Application;\n\n    constructor() {\n        this.filedBirForm = false;\n        this.remarks = '';\n    }\n}\n","import { TypeOfClearance } from './type-of-clearance.model';\nimport { TypeOfMainDocument } from './type-of-main-document.model';\n\nexport class TypeOfMedium {\n  description: string;\n  executionEnable: boolean;\n  id: number;\n  languageEnable: boolean;\n  lengthEnable: boolean;\n  multimedia: boolean;\n  multimediaMoving: boolean;\n  multimediaStatic: boolean;\n  othersEnable: boolean;\n  singlemedia: boolean;\n  sizeLengthEnable: boolean;\n  status: string;\n  typeOfMainDocument: TypeOfMainDocument;\n  widthEnable: boolean;\n  typeOfClearance: TypeOfClearance;\n\n  // not in BE; for List value\n  enabledFields: string;\n  sizeLength: string;\n}\n","import { TypeOfMedium } from './type-of-medium.model';\n\nexport class ApplicationMultimedia {\n    id: number;\n    amount: number;\n    appFormReference: string;\n    mediaType?: string; // STATIC, MOVING\n    multimediaSizeLength?: string;\n    typeOfMedium?: TypeOfMedium;\n}\n\nexport class ApplicationMultimediaItemsDTO {\n    hasSelected: boolean;\n    id: number;\n    multimediaMovingMedium?: string;\n    multimediaStaticMedium?: string;\n    sizeLength?: number;\n}\n\nexport class ApplicationMultimediaMovingDTO extends ApplicationMultimedia {\n    applicationMultimediaMovingList: ApplicationMultimediaItemsDTO[];\n    sizeLength: number;\n}\n\nexport class ApplicationMultimediaStaticDTO extends ApplicationMultimedia {\n    applicationMultimediaStaticList: ApplicationMultimediaItemsDTO[];\n}\n","import { ApplicationRequest } from './application-request.model';\nimport { S1Application } from './s1-application.model';\nimport { UserAccount } from './user-account.model';\n\nexport class S2Application {\n\n    id: number;\n    actionBy: string;\n    actionStatus: string;\n    applicationDate: Date;\n    applicationForm: S1Application;\n    assignedAdSpecialist: UserAccount;\n    assignedEncoder: UserAccount;\n    assignedUser: UserAccount;\n    complianceDate: Date;\n    decisionStatus: string;\n    externalStatus: string;\n    finalMaterialAttachmentReference: string;\n    formStatus: string;\n    internalStatus: string;\n    issuedDate: Date;\n    paymentStatus: string;\n    specialClearing: boolean;\n    submissionDate: Date;\n    validUntil: Date;\n    validityDate: Date;\n    referenceCodeRejected: string;\n    releaseDate: Date;\n    hasToa: boolean;\n    submissionType: string;\n    applicationRequest: ApplicationRequest;\n    paymentAttachmentReference: string;\n    amount: string;\n    appFormReference: string;\n    hasOngoingCompliance: boolean;\n    formProcess: string;\n    complianceForm: boolean; // param need upon request for compliance\n    hasOngoingAppeal: boolean;\n    typeOfAppeal: string;\n    appealAttachmentReference: string;\n    clearanceToaFileUrl: string;\n    clearanceToaFilename: string;\n    releaseStatus: string;\n    supportingAttachmentReference: string;\n}\n","import { TotalAmountsModel } from './totals.model';\nimport { TypeOfMedium, OrPreparationReference } from '@models';\n\nexport class OrPreparation {\n    amount: number;\n    amountInWords: string;\n    businessStyle: string;\n    companyAddress: string;\n    companyName: string;\n    companyTin: string;\n    controlNumber: string;\n    fullPaymentOf: string;\n    id: number;\n    officialReceiptDate: Date;\n    officialReceiptNo: string;\n    officialReceiptReferences: OrPreparationReference[];\n    remarks: string;\n    status: string;\n    typeOfMedium: TypeOfMedium;\n    voucherControlNumber: string;\n\n    //totals\n    totalSales: number;\n    totalVat: number;\n    totalWithholdingtax: number;\n    totalAmountDue: number;\n\n    // Not if BE; for FE only\n    officialReceiptReferencesValue: string;\n\n    setTotalAmounts(totals: TotalAmountsModel){\n        this.totalSales = totals.totalSales;\n        this.totalAmountDue = totals.totalAmountDue;\n        this.totalVat = totals.totalVat;\n        this.totalWithholdingtax = totals.totalWithholdingtax;\n    }\n}","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Payment } from '@models';\nimport { ApiService, DataStorageService } from '@services';\nimport { ENDPOINTS, PAYMENT_STATUS_LIST, PAYMENT_TYPE, PAYMENT_TYPE_LIST } from '@shared';\nimport { NgxSpinnerService } from 'ngx-spinner';\n\n@Component({\n  selector: 'app-payments',\n  templateUrl: './payments.component.html',\n  styleUrls: ['./payments.component.scss']\n})\nexport class PaymentsComponent implements OnInit {\n  @ViewChild(MatPaginator, { static: false }) paginatorFalse: MatPaginator;\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  pageSize = 10;\n  pageNo = 0;\n  pageSizeOptions: number[] = [10, 20, 50];\n  currentPage = 1;\n  paymentTotalItems = 0;\n  @ViewChild(MatSort, { static: false }) sort: MatSort;\n\n  dataSource: MatTableDataSource<Payment>\n  displayedColumns: string[];\n  paymentTypeList = [...PAYMENT_TYPE_LIST];\n  paymentList = [];\n  paymentType = PAYMENT_TYPE_LIST[0];\n  paymentStatusList = PAYMENT_STATUS_LIST;\n  paymentStatus = 'FOR_APPROVAL';\n\n  linkExtension = '';\n\n  constructor(\n    private router: Router,\n    private apiService: ApiService,\n    private dataStorageService: DataStorageService,\n    private spinner: NgxSpinnerService,\n    private route: ActivatedRoute,\n  ) { }\n\n  ngOnInit(): void {\n    this.linkExtension = this.route.snapshot.paramMap.get('link');\n    if (this.linkExtension === 'schedule-of-fees-individual') {\n      this.paymentType = this.paymentTypeList.filter(filteredList =>\n        filteredList.type === PAYMENT_TYPE.SCHEDULE_OF_FEES_INDIVIDUAL)[0];\n    } else if (this.linkExtension === 'schedule-of-fees-multiple') {\n      this.paymentType = this.paymentTypeList.filter(filteredList =>\n        filteredList.type === PAYMENT_TYPE.SCHEDULE_OF_FEES_MULTIPLE)[0];\n    } else if (this.linkExtension === 'schedule-of-fees-special') {\n      this.paymentType = this.paymentTypeList.filter(filteredList =>\n        filteredList.type === PAYMENT_TYPE.SCHEDULE_OF_FEES_SPECIAL)[0];\n    } else if (this.linkExtension === 'delinquent-companies') {\n      this.paymentType = this.paymentTypeList.filter(filteredList =>\n        filteredList.type === PAYMENT_TYPE.DELINQUENT)[0];\n    } else if (this.linkExtension === 'brand-penalties') {\n      this.paymentType = this.paymentTypeList.filter(filteredList =>\n        filteredList.type === PAYMENT_TYPE.PENALIZED_BRANDS)[0];\n    } else if (this.linkExtension === 'company-penalties') {\n      this.paymentType = this.paymentTypeList.filter(filteredList =>\n        filteredList.type === PAYMENT_TYPE.PENALIZED_COMPANY)[0];\n    } else if (this.linkExtension === 'accounts-receivable') {\n      this.paymentType = this.paymentTypeList.filter(filteredList =>\n        filteredList.type === PAYMENT_TYPE.ACCOUNTS_RECEIVABLE)[0];\n    } \n\n    this.getPaymentList(this.paymentStatus);\n  }\n\n  printRefCode(element){\n    if(element.referenceCode){\n      return element.referenceCode;\n    } else if(element.referenceCodeRejected){\n      return element.referenceCodeRejected;\n    }\n    \n  }\n\n  getByPaymentStatusList(paymentStatus) {\n    this.pageNo = 0;\n    this.getPaymentList(paymentStatus);\n  }\n\n  getPaymentList(paymentStatus) {\n    let param = '';\n    if (paymentStatus !== 'ALL') {\n      param = '&paymentStatus=' + paymentStatus;\n    }\n\n\n    this.currentPage = this.pageNo;\n    this.currentPage++;\n    if (this.currentPage === 0) this.currentPage++;\n\n    this.spinner.show();\n    let endpoint = '';\n    if (this.paymentType.type === PAYMENT_TYPE.SCHEDULE_OF_FEES_INDIVIDUAL) {\n      this.router.navigate(['asc/page/accounting/payments/', 'schedule-of-fees-individual']);\n      this.displayedColumns = [\n        'referenceCode',\n        'typeOfApplication',\n        'brand',\n        'typeOfMedium',\n        'companyName',\n        'paymentStatus'\n      ];\n      //\n      endpoint = ENDPOINTS.scheduleOfFeesMonitoring + `?page=${this.currentPage}&size=${this.pageSize}` + param;\n    } else if (this.paymentType.type === PAYMENT_TYPE.SCHEDULE_OF_FEES_MULTIPLE) {\n      this.router.navigate(['asc/page/accounting/payments/', 'schedule-of-fees-multiple']);\n      this.displayedColumns = [\n        'adTitle', 'typeOfApplication', 'brand', 'product', 'company', 'paymentStatus'\n      ];\n      //\n      endpoint = ENDPOINTS.scheduleOfFeesMultipleMonitoring + `?page=${this.currentPage}&size=${this.pageSize}` + param;\n    } else if (this.paymentType.type === PAYMENT_TYPE.SCHEDULE_OF_FEES_SPECIAL) {\n      this.router.navigate(['asc/page/accounting/payments/', 'schedule-of-fees-special']);\n      this.displayedColumns = [\n        'referenceCode',\n        'typeOfApplication',\n        'brand',\n        'typeOfMedium',\n        'companyName',\n        'paymentStatus'\n      ];\n      endpoint = ENDPOINTS.scheduleOfFeesSpecialMonitoring + `?page=${this.currentPage}&size=${this.pageSize}` + param;\n    } else if (this.paymentType.type === PAYMENT_TYPE.DELINQUENT) {\n      this.router.navigate(['asc/page/accounting/payments/', 'delinquent-companies']);\n      this.displayedColumns = [\n        // 'referenceCode',\n        'company',\n        'membersAffiliation',\n        'companyTelephoneNo',\n        'amount',\n      ];\n      endpoint = ENDPOINTS.delinquentApplications + `?hasDelinquentAppForm=true&page=${this.currentPage}&size=${this.pageSize}`;\n    } else if (this.paymentType.type === PAYMENT_TYPE.PENALIZED_BRANDS) {\n      this.router.navigate(['asc/page/accounting/payments/', 'brand-penalties']);\n      this.displayedColumns = [\n        'referenceCode',\n        'brand',\n        'penaltyDate',\n        'amount',\n        'paymentMethod',\n        'paidDate',\n        'paymentStatus'\n      ];\n      endpoint = ENDPOINTS.penalizedBrandMonitoring + `?page=${this.currentPage}&size=${this.pageSize}` + param?.replace('paymentStatus', 'status');\n    } else if (this.paymentType.type === PAYMENT_TYPE.PENALIZED_COMPANY) {\n      this.router.navigate(['asc/page/accounting/payments/', 'company-penalties']);\n      // endpoint = ENDPOINTS.penalizedCompanyMonitoring;\n      this.displayedColumns = [\n        'referenceCode',\n        'company',\n        'penaltyDate',\n        'amount',\n        'paymentStatus'\n      ];\n      endpoint = ENDPOINTS.companyPenalties + `/custom/search?page=${this.currentPage}&size=${this.pageSize}` + param;\n    } else if (this.paymentType.type === PAYMENT_TYPE.ACCOUNTS_RECEIVABLE) {\n      this.router.navigate(['asc/page/accounting/payments/', 'accounts-receivable']);\n      this.displayedColumns = [\n        'referenceCode',\n        'typeOfApplication',\n        'brand',\n        'typeOfMedium',\n        'companyName',\n        'paymentStatus'\n      ];\n      endpoint = ENDPOINTS.scheduleOfFeesMonitoring + `?hasPromissoryNote=true&page=${this.currentPage}&size=${this.pageSize}` + param;\n    }\n    console.log(endpoint);\n\n    this.apiService.findAll(endpoint).subscribe((res: any) => {\n      if (res.data) {\n        this.paymentList = res.data;\n      } else if (res.responseData) {\n        this.paymentList = res.responseData.data;\n      } else if (res) {\n        this.paymentList = res;\n      } else {\n        this.paymentList = [];\n      }\n\n      this.paymentTotalItems = res.totalItems;\n      this.dataSource = new MatTableDataSource<Payment>(this.paymentList);\n      // this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n      this.paymentTotalItems = res.totalItems\n      this.spinner.hide();\n      console.log('datasource', this.dataSource.data);\n    }, (err: any) => {\n      this.paymentList = [];\n      this.dataSource = new MatTableDataSource<Payment>(this.paymentList);\n      \n      this.spinner.hide();\n    });\n  }\n\n\n  pageEvents(event: any) {\n    this.pageSize = event.pageSize;\n\n    if (event.pageIndex > this.pageNo) {\n      this.pageNo++;\n    } else {\n      this.pageNo--;\n    }\n\n    if (event.pageSize > event.length) {\n      this.pageNo = 0;\n    }\n\n    this.getPaymentList(this.paymentStatus);\n  }\n\n  setPageSizeOptions(setPageSizeOptionsInput: string) {\n    if (setPageSizeOptionsInput) {\n      this.pageSizeOptions = setPageSizeOptionsInput.split(',').map(str => +str);\n    }\n  }\n\n\n  comparePaymentType(value: any, selected: any): boolean {\n    if (value && selected) {\n      return value.type === selected.type;\n    }\n  }\n\n  getPaymentDetails(elm) {\n    if (this.paymentType.type === PAYMENT_TYPE.SCHEDULE_OF_FEES_INDIVIDUAL) {\n      this.router.navigate(['asc/page/accounting/update/', elm.paymentStatus.toLowerCase() + '-' + elm.id]);\n    } else if (this.paymentType.type === PAYMENT_TYPE.SCHEDULE_OF_FEES_MULTIPLE) {\n      if (elm?.paymentStatus) {\n        this.router.navigate(['asc/page/accounting/update/', `${elm?.paymentStatus?.toLowerCase()}-${elm.id}`, `multiple-${elm.id}`]);\n      } else {\n        this.router.navigate(['asc/page/accounting/update/', `multiple-${elm.id}`]);\n      }\n    } else if (this.paymentType.type === PAYMENT_TYPE.SCHEDULE_OF_FEES_SPECIAL) {\n      if (elm?.paymentStatus) {\n        this.router.navigate(['asc/page/accounting/update/', `${elm?.paymentStatus?.toLowerCase()}-${elm.id}`, `special-${elm.id}`]);\n      } else {\n        this.router.navigate(['asc/page/accounting/update/', `special-${elm.id}`]);\n      }\n    } else if (this.paymentType.type === PAYMENT_TYPE.DELINQUENT) {\n      const payment = new Payment();\n      payment.amountDue = elm.amountToSettle;\n      payment.applicationForm = elm;\n      payment.appFormReference = elm.appFormReference;\n      payment.companyId = elm.id;\n\n      this.dataStorageService.setPayment(payment);\n      this.router.navigate(['asc/page/accounting/add-penalty/update/', 'delinquent', elm.id]);\n    } else if (this.paymentType.type === PAYMENT_TYPE.PENALIZED_BRANDS) {\n      this.router.navigate(['asc/page/accounting/add-penalty/update/', 'brand', elm.id]);\n    } else if (this.paymentType.type === PAYMENT_TYPE.PENALIZED_COMPANY) {\n      this.router.navigate(['asc/page/accounting/add-penalty/update/', 'company', elm?.company?.id]);\n    }\n  }\n\n  openComponent() {\n    if (this.paymentType.type === PAYMENT_TYPE.PENALIZED_BRANDS) {\n      this.router.navigate(['asc/page/accounting/add-penalty', 'brand']);\n    } else if (this.paymentType.type === PAYMENT_TYPE.PENALIZED_COMPANY) {\n      this.router.navigate(['asc/page/accounting/add-penalty', 'company']);\n    }\n  }\n\n}\n","<form>\n  <div class=\"container-fluid\">\n    <div class=\"row\">\n      <div class=\"col-md-12 title\">\n        <mat-label>\n          <mat-icon>payments</mat-icon> PAYMENT LIST\n        </mat-label>\n      </div>\n    </div>\n    <br>\n\n    <div class=\"row\">\n      <div class=\"col-md-8\">\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n          <mat-select [(ngModel)]=\"paymentType\" name=\"paymentType\" placeholder=\"Type of Payment\"\n            [compareWith]=\"comparePaymentType\">\n            <mat-option *ngFor=\"let i of paymentTypeList\" [value]=\"i\" (click)=\"getByPaymentStatusList(paymentStatus)\">\n              {{i?.type?.replace('SPECIAL','S2 SPECIAL CLEARING')}}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n      </div>\n\n      <div class=\"col-md-4\">\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\" [hidden]=\"paymentType?.type === 'DELINQUENT'\">\n          <mat-select [(ngModel)]=\"paymentStatus\" name=\"paymentStatus\">\n            <mat-option *ngFor=\"let i of paymentStatusList\" [value]=\"i.type\" (click)=\"getByPaymentStatusList(paymentStatus)\">\n              {{i?.type?.replaceAll('_', ' ')}}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n        <button mat-raised-button class=\"button-right button-red\" (click)=\"openComponent()\"\n          *ngIf=\"paymentType?.type === 'PENALIZED BRANDS' || paymentType?.type === 'PENALIZED COMPANY' \">\n          <i class=\"material-icons color__white\">task_alt</i> ADD PENALTY\n        </button>\n      </div>\n\n    <div class=\"mat-elevation-z8 fields\">\n      <table mat-table [dataSource]=\"dataSource\" matSort>\n\n        <ng-container matColumnDef=\"referenceCode\">\n          <th mat-header-cell *matHeaderCellDef > REFERENCE CODE </th>\n          <td mat-cell *matCellDef=\"let element\" (click)=\"getPaymentDetails(element)\">\n            <!-- {{ element?.referenceCode }}\n            {{ element?.applicationForm?.referenceCode | uppercase }}\n            {{ element?.brandPenaltyAttachmentReference | uppercase }} -->\n            {{printRefCode(element)}}\n          </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"adTitle\">\n          <th mat-header-cell *matHeaderCellDef > AD TITLE </th>\n          <td mat-cell *matCellDef=\"let element\" (click)=\"getPaymentDetails(element)\">\n            {{ element?.adTitle | uppercase }}\n            {{ element?.multipleApplication?.adTitle | uppercase }}\n          </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"typeOfApplication\">\n          <th mat-header-cell *matHeaderCellDef > TYPE OF APPLICATION </th>\n          <td mat-cell *matCellDef=\"let element\" (click)=\"getPaymentDetails(element)\">\n            {{ element?.applicationType?.description | uppercase }}\n            {{ element?.applicationForm?.applicationType?.description | uppercase }}\n            {{ element?.formType?.replaceAll('_',' ') | uppercase }}\n            {{ element?.multipleApplication?.applicationType?.description?.replaceAll('_',' ') | uppercase }}\n          </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"brand\">\n          <th mat-header-cell *matHeaderCellDef > BRAND </th>\n          <td mat-cell *matCellDef=\"let element\" (click)=\"getPaymentDetails(element)\">\n            {{ element?.applicationForm?.brand?.description | uppercase }}\n            {{ element?.brand?.description | uppercase }}\n            {{ element?.multipleApplication?.brand?.description | uppercase }}\n          </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"product\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> PRODUCT</th>\n          <td mat-cell *matCellDef=\"let element; let i = index\" (click)=\"getPaymentDetails(element)\">\n            {{element?.product?.description | uppercase}}\n            {{ element?.multipleApplication?.product?.description | uppercase }}</td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"company\">\n            <th mat-header-cell *matHeaderCellDef > PRESENTOR'S COMPANY NAME </th>\n            <td mat-cell *matCellDef=\"let element\" (click)=\"getPaymentDetails(element)\">\n              {{ element?.applicationOwner?.company?.companyName | uppercase }}\n              {{ element?.companyName | uppercase }}\n              {{ element?.multipleApplication?.company?.companyName | uppercase }}</td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"companyTelephoneNo\">\n          <th mat-header-cell *matHeaderCellDef > Telephone No </th>\n          <td mat-cell *matCellDef=\"let element\" (click)=\"getPaymentDetails(element)\">\n            {{ element?.companyTelephoneNo | uppercase }}<br>\n            {{ element?.companyTelephoneNo2 | uppercase }}\n          </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"membersAffiliation\">\n          <th mat-header-cell *matHeaderCellDef > MEMBERS AFFILIATION </th>\n          <td mat-cell *matCellDef=\"let element\" (click)=\"getPaymentDetails(element)\">\n            {{ element?.membersAffiliation?.description | uppercase }}\n          </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"penaltyDate\">\n          <th mat-header-cell *matHeaderCellDef > PENALTY DATE </th>\n          <td mat-cell *matCellDef=\"let element\" (click)=\"getPaymentDetails(element)\">\n            {{ element?.penaltyDate | date: 'MM/dd/yyyy' }}\n          </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"amount\">\n          <th mat-header-cell *matHeaderCellDef > AMOUNT </th>\n          <td mat-cell *matCellDef=\"let element\" (click)=\"getPaymentDetails(element)\">\n            {{ element?.amount }}\n            {{ element?.penaltyAmount }}\n            {{ element?.amountToSettle }}\n          </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"paymentMethod\">\n          <th mat-header-cell *matHeaderCellDef > PAYMENT METHOD </th>\n          <td mat-cell *matCellDef=\"let element\" (click)=\"getPaymentDetails(element)\">\n            <!-- {{ element?.paymentMethod | uppercase }} -->\n            {{ element?.paymentMethod?.paymentType?.paymentDescription | uppercase }}\n          </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"paidDate\">\n          <th mat-header-cell *matHeaderCellDef > PAID DATE </th>\n          <td mat-cell *matCellDef=\"let element\" (click)=\"getPaymentDetails(element)\">\n            {{ element?.applicationForm?.paidDate | date: 'MM/dd/yyyy' }}\n            {{ element?.paidDate | date: 'MM/dd/yyyy' }}\n            {{ element?.paymentMethod?.paymentDate | date: 'MM/dd/yyyy' }}\n          </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"typeOfMedium\">\n          <th mat-header-cell *matHeaderCellDef > TYPE OF MEDIUM </th>\n          <td mat-cell *matCellDef=\"let element\" (click)=\"getPaymentDetails(element)\">\n            {{ element?.typeOfMedium | uppercase }}\n            {{ element?.applicationForm?.typeOfMedium | uppercase }}\n          </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"companyName\">\n          <th mat-header-cell *matHeaderCellDef > PRESENTOR'S COMPANY NAME </th>\n          <td mat-cell *matCellDef=\"let element\" (click)=\"getPaymentDetails(element)\">\n            {{ element?.applicationOwner?.company?.companyName | uppercase }}\n            {{ element?.applicationForm?.company?.companyName | uppercase }}\n          </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"paymentStatus\">\n          <th mat-header-cell *matHeaderCellDef > PAYMENT STATUS </th>\n          <td mat-cell *matCellDef=\"let element\" (click)=\"getPaymentDetails(element)\">\n            {{ element?.paymentStatus?.replaceAll('_',' ') | uppercase }}\n          </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n      </table>\n      <div class=\"no-record\" [hidden]=\"dataSource && dataSource?.data?.length > 0\">\n        No record found.\n      </div>\n      <mat-paginator [pageSize]=\"pageSize\" [pageIndex]=\"pageNo\" [length]=\"paymentTotalItems\"\n      [pageSizeOptions]=\"pageSizeOptions\" (page)=\"pageEvents($event)\">\n  </mat-paginator>\n    </div>\n  </div>\n","import { Affiliation, Company, UserRole } from '@models';\n\nexport class UserAccount {\n    id: number;\n    username: string;\n    password: string;\n    firstName: string;\n    middleName: string;\n    lastName: string;\n    company: Company;\n    membersAffiliationDto: Affiliation;\n    mobileNumber: string;\n    userRole: UserRole;\n    status: string;\n    acceptTerms: boolean;\n    accountType: string;\n    // locked: Boolean;\n    // enabled: Boolean;\n    ascDefault:\tboolean;\n    membersAffiliation:\tAffiliation;\n    scheduledUser:\tboolean;\n    signatureAttachmentReference:\tstring;\n}\n","import { TypeOfExecution } from './type-of-execution.model';\nimport { TypeOfMedium } from './type-of-medium.model';\n\nexport class AscRate {\n    id: number;\n    lengthFrom: number;\n    lengthTo: number;\n    memberOffline: number;\n    memberOnline: number;\n    nonMemberOffline: number;\n    nonMemberOnline: number;\n    status: string;\n    typeOfExecution: TypeOfExecution;\n    typeOfMedium: TypeOfMedium;\n}","import { Dialect } from './dialect.model';\nimport { MediumExecution } from './medium-execution.model';\n\nexport class ApplicationSingleMedia {\n    id: number;\n    amount: number;\n    appFormReference: string;\n    dialect: Dialect;\n    language: string;\n    others: string;\n    sizeLength: string;\n    mediumExecution: MediumExecution;\n    width: string;\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { PaymentsRoutingModule } from './payments-routing.module';\nimport { PaymentsComponent } from './payments.component';\nimport { AngularMaterialModule } from '@shared';\n\n\n@NgModule({\n  declarations: [PaymentsComponent],\n  imports: [\n    CommonModule,\n    PaymentsRoutingModule,\n    AngularMaterialModule\n  ]\n})\nexport class PaymentsModule { }\n","import { Company } from '@models'\nimport { Affiliation } from './affiliation.model';\nimport { ApplicationType } from './application-type.model'\nimport { Brand } from './brand.model'\nimport { Category } from './category.model';\nimport { Product } from './product.model';\nimport { S1Application } from './s1-application.model';\nimport { UserAccount } from './user-account.model'\n\nexport class ApplicationRequest {\n    id: number;\n    adTitle: string;\n    applicationOwner: UserAccount;\n    applicationType: ApplicationType;\n    brand: Brand;\n    company: Company;\n    status: string;\n    submissionDate: Date;\n    tagLine: string\n    submitApplicationForm: boolean;\n    formType: string;\n    hasSpecialClearing: boolean;\n    applicationForm: S1Application;\n    product: Product;\n}\n","export class Profile {\n    id: number;\n    name: string;\n}\n","import { S1Application } from './s1-application.model';\nimport { S2Application } from './s2-application.model';\n\nexport class AttachmentDocument {\n    id: number;\n    applicationId: S1Application;\n    applicationS2Id: S2Application;\n    attachmentType: string; // MAIN, SUPPORTIVE, PAYMENT\n    autoSubmit: boolean;\n    brandPenaltyAttachmentReference: string;\n    documentFormat: string;\n    fileExtension: string;\n    fileURL: string;\n    filename: string;\n    mainAttachmentReference: string;\n    supportingAttachmentReference: string;\n    paymentAttachmentReference: string;\n    revisionLetterAttachmentReference: string;\n    finalMaterialAttachmentReference: string;\n    originalFilename: string;\n    status: string;\n    submissionType: string; // ORIGINAL, REVISION, COMPLIANCE, TOA\n    voucherAttachmentReference: string;\n    applicationFormId: string; // for compliance used only\n    applicationForm: string;\n    appFormReference: string;\n    modifiedApprovedS1AttachmentReference: string;\n    fileSize: number\n\n    createdBy: string;\n    createdDate: Date;\n    modifiedBy: string;\n    modifiedDate: Date;\n}\n","import { Product } from './product.model';\n\nexport class Category {\n    id: number;\n    description: string;\n    status: string;\n}\n","import { TypeOfDocument } from './type-of-document.model';\nimport { S1Application } from './s1-application.model';\n\nexport class SupportingDocument {\n    id: number;\n    appFormReference: S1Application;\n    typeOfDocument: TypeOfDocument;\n    basedOn: string;\n    variant: string;\n    dateOfLaunch: Date;\n    expiresOn: Date;\n    remarks: string;\n    input: string;\n\n    createdBy: string;\n    createdDate: Date;\n    modifiedBy: string;\n    modifiedDate: Date;\n}\n","export class UserRole {\n    id: number;\n    name: string;\n    status: string;\n}\n","export class PaymentType {\n    id: number;\n    amount: boolean;\n    bankBranch: boolean;\n    bankName: boolean;\n    controlNo: boolean;\n    fundTransferDate: boolean;\n    paymentDescription: string;\n    promisorryDate: boolean;\n    referenceNo: boolean;\n    status: string;\n}\n","export class OrPreparationReference {\n    id: number;\n    reference: string;\n    amount: number;\n}","export class PerformanceMetrics {\n    id: number;\n    referenceCode: string;\n    appFormReference: string;\n    movement: string;\n    actionBy: string;\n    userRole: string;\n    currentDateTime: Date;\n    previousDateTime: Date;\n    duration: string;\n}\n","import { PaymentType } from \"./payment-type.model\";\n\nexport class PaymentMethod {\n    id: number;\n    paymentType: PaymentType;\n    referenceNo: string;\n    controlNo: string;\n    paymentDate: Date;\n    amount: number;\n    bankName: string\n    bankBranch: string;\n    promisorryDate: Date;\n    ccConfirmationCode: string;\n    checkNo: string;\n}\n","export * from './affiliation.model';\nexport * from './brand.model';\nexport * from './company.model';\nexport * from './payment-type.model';\nexport * from './profile.model';\nexport * from './s1-application.model';\nexport * from './s2-application.model';\nexport * from './type-of-document.model';\nexport * from './type-of-medium.model';\nexport * from './type-of-reason.model';\nexport * from './user-role.model';\nexport * from './user-account.model';\nexport * from './attachment-document.model';\nexport * from './category.model';\nexport * from './product.model';\nexport * from './type-of-application.model';\nexport * from './asc-rate.model';\nexport * from './payment.model';\nexport * from './country.model';\nexport * from './performance-metrics.model';\nexport * from './or-preparation.model';\nexport * from './or-preparation-reference.model';\nexport * from './supporting-document.model';\nexport * from './application-single-media.model';\nexport * from './application-request.model';\nexport * from './application-multimedia.model';\n","export class Affiliation {\n    id: number;\n    description: string;\n    member: boolean;\n    status: string;\n}\n","import { Category, Product } from '@models';\n\nexport class Brand {\n    id: number;\n    description: string;\n    // product: Product;\n    // category: Category;\n    status: string;\n    penalty: boolean;\n  }\n","import { Affiliation } from './affiliation.model';\nimport { Country } from './country.model';\n\nexport class Company {\n    id: number;\n    companyName: string;\n    companyTelephoneNo: string;\n    companyTin: string;\n    country: Country;\n    status: string;\n    completeAddress: string;\n    voucherApproved: boolean\n    membersAffiliation: Affiliation;\n    delinquent: boolean;\n    contactPersonEmail: string;\n    contactPersonName: string;\n    amountToSettle: number;\n    companyMobileNo: string;\n    companyTelephoneNo2: string;\n}\n"]}